================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class StoneColor:
    WHITE = 0
    BLACK = 1

    _symbols = {
        WHITE: '○',
        BLACK: '●'
    }

    @classmethod
    def symbol(cls, c):
        return cls._symbols[c]

    @classmethod
    def opposite(cls, c):
        return cls.BLACK if c == cls.WHITE else cls.WHITE


class StoneGroup:
    def __init__(self, color: int, count: int):
        self.color = color
        self.count = count

    def __repr__(self):
        return f"{StoneColor.symbol(self.color)}*{self.count}"


class Table:
    def __init__(self):
        self.groups = []
        self.white_count = 0

    def place_stone(self, color: int, index: int):
        # index 1-based, but unused for internal logic except parity rule
        if index % 2 == 1:
            # odd i: just place stone at i-th position, no groups replacement
            # Implemented by appending this stone alone (conceptually)
            # But we must maintain the stack of groups for efficiency.
            self._add_stone(color)
        else:
            # even i:
            if not self.groups:
                # no stone placed yet, just add
                self._add_stone(color)
                return

            right_color = self.groups[-1].color
            if right_color == color:
                # same color as right end, just place stone
                self._add_stone(color)
            else:
                # different color: remove all continuous stones of right end color from right,
                # replace by stones with new color with the same count, then place new stone of the same color.
                removed_count = self._pop_right_color_sequence()
                # add replaced stones with new color (count = removed_count)
                self._add_group(color, removed_count)
                # add final stone
                self._add_stone(color)

    def _add_stone(self, color: int):
        # Append one stone to the right end
        if self.groups and self.groups[-1].color == color:
            self.groups[-1].count += 1
        else:
            self.groups.append(StoneGroup(color, 1))
        if color == StoneColor.WHITE:
            self.white_count += 1

    def _pop_right_color_sequence(self) -> int:
        # Remove all continuous stones on right end having same color
        if not self.groups:
            return 0
        right_color = self.groups[-1].color
        count = 0
        while self.groups and self.groups[-1].color == right_color:
            group = self.groups.pop()
            count += group.count
            if right_color == StoneColor.WHITE:
                self.white_count -= group.count
        return count

    def _add_group(self, color: int, count: int):
        # Add a group of stones of same color at right end
        if count == 0:
            return
        if self.groups and self.groups[-1].color == color:
            self.groups[-1].count += count
        else:
            self.groups.append(StoneGroup(color, count))
        if color == StoneColor.WHITE:
            self.white_count += count

    def get_white_count(self) -> int:
        return self.white_count


class InputProcessor:
    def __init__(self):
        self.datasets = []

    def read_datasets(self):
        while True:
            n = self._read_integer()
            if n == 0:
                break
            colors = [self._read_integer() for _ in range(n)]
            self.datasets.append((n, colors))

    @staticmethod
    def _read_integer() -> int:
        import sys
        while True:
            line = sys.stdin.readline()
            if line == '':
                return 0
            line = line.strip()
            if line == '':
                continue
            return int(line)


class OutputProcessor:
    @staticmethod
    def output_white_count(count: int):
        print(count)


class GosekiGame:
    def __init__(self, n: int, colors: list[int]):
        self.n = n
        self.colors = colors
        self.table = Table()

    def play(self):
        for i, color in enumerate(self.colors, start=1):
            self.table.place_stone(color, i)

    def get_result(self):
        return self.table.get_white_count()


def main():
    input_processor = InputProcessor()
    input_processor.read_datasets()
    for n, colors in input_processor.datasets:
        game = GosekiGame(n, colors)
        game.play()
        result = game.get_result()
        OutputProcessor.output_white_count(result)


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Stone' (ID: 22850)
  → Token d'amorce (pas de prédiction)

Token 2: 'Color' (ID: 2324)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8146650791168213
    2. ':' → logprob: -0.9396650791168213
    3. '{' → logprob: -1.8146650791168213
    4. '.' → logprob: -5.939664840698242
    5. '(:' → logprob: -7.814664840698242
    6. ' {' → logprob: -8.064664840698242
    7. '```' → logprob: -9.939664840698242
    8. ' :' → logprob: -10.564664840698242
    9. '({' → logprob: -10.689664840698242
    10. '[' → logprob: -10.689664840698242

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03989727795124054
    2. '(' → logprob: -3.5398972034454346
    3. '   ' → logprob: -5.914897441864014
    4. ':
' → logprob: -6.539897441864014
    5. '(Enum' → logprob: -6.539897441864014
    6. '```' → logprob: -6.539897441864014
    7. '():' → logprob: -6.789897441864014
    8. '.' → logprob: -7.289897441864014
    9. '(enum' → logprob: -7.289897441864014
    10. ' :' → logprob: -9.539896965026855

Token 5: ' WHITE' (ID: 94026)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6027917861938477
    2. '```' → logprob: -1.7277917861938477
    3. ':' → logprob: -1.9777917861938477
    4. '.' → logprob: -2.7277917861938477
    5. ' ' → logprob: -4.352791786193848
    6. '(' → logprob: -4.477791786193848
    7. '`' → logprob: -4.477791786193848
    8. ''' → logprob: -4.602791786193848
    9. '_' → logprob: -5.102791786193848
    10. '    ' → logprob: -5.477791786193848

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48829808831214905
    2. ' =' → logprob: -1.4882980585098267
    3. '.' → logprob: -2.113298177719116
    4. ':' → logprob: -3.363298177719116
    5. '   ' → logprob: -5.488297939300537
    6. '    ' → logprob: -8.613298416137695
    7. ',' → logprob: -8.613298416137695
    8. ' ' → logprob: -9.238298416137695
    9. '()' → logprob: -9.238298416137695
    10. '(' → logprob: -9.363298416137695

Token 7: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8843982815742493
    2. ' ' → logprob: -1.0093982219696045
    3. ' '' → logprob: -2.2593982219696045
    4. '"' → logprob: -2.8843982219696045
    5. '1' → logprob: -3.5093982219696045
    6. ' "' → logprob: -4.009398460388184
    7. '0' → logprob: -4.259398460388184
    8. '  ' → logprob: -10.884398460388184
    9. ' ' → logprob: -10.884398460388184
    10. '(' → logprob: -11.134398460388184

Token 8: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3136499524116516
    2. '1' → logprob: -1.5636498928070068
    3. '0' → logprob: -3.313649892807007
    4. '"' → logprob: -3.938649892807007
    5. ' ' → logprob: -5.938650131225586
    6. ' '' → logprob: -7.063650131225586
    7. ''b' → logprob: -9.063650131225586
    8. '(' → logprob: -10.188650131225586
    9. ''o' → logprob: -10.188650131225586
    10. ''int' → logprob: -10.313650131225586

Token 9: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6146534085273743
    2. '<|end|>' → logprob: -2.1146533489227295
    3. '\n' → logprob: -2.3646533489227295
    4. '.' → logprob: -2.6146533489227295
    5. 'newline' → logprob: -3.2396533489227295
    6. '```' → logprob: -3.4896533489227295
    7. '    
' → logprob: -4.114653587341309
    8. '' → logprob: -4.239653587341309
    9. ' 
' → logprob: -4.364653587341309
    10. '  
' → logprob: -4.614653587341309

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21153733134269714
    2. '
' → logprob: -1.8365373611450195
    3. '    
' → logprob: -4.0865373611450195
    4. '<|end|>' → logprob: -5.2115373611450195
    5. '```' → logprob: -6.4615373611450195
    6. 'newline' → logprob: -6.5865373611450195
    7. '    ' → logprob: -6.5865373611450195
    8. '\n' → logprob: -6.8365373611450195
    9. ' ' → logprob: -7.4615373611450195
    10. '  ' → logprob: -7.7115373611450195

Token 11: ' BLACK' (ID: 71730)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006323943380266428
    2. '    
' → logprob: -5.88132381439209
    3. 'BLACK' (adapté à ' BLACK') → logprob: -6.38132381439209
    4. ' ' → logprob: -7.00632381439209
    5. 'WHITE' → logprob: -8.38132381439209
    6. '```' → logprob: -8.75632381439209
    7. 'BLUE' → logprob: -9.13132381439209
    8. '\n' → logprob: -9.75632381439209
    9. '
' → logprob: -10.00632381439209
    10. '    ' → logprob: -10.25632381439209

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005241106729954481
    2. '=' → logprob: -5.2552409172058105
    3. ' ' → logprob: -12.255241394042969
    4. '   ' → logprob: -13.130241394042969
    5. '    ' → logprob: -15.005241394042969
    6. '  ' → logprob: -15.755241394042969
    7. '<|end|>' → logprob: -17.25524139404297
    8. ' ' → logprob: -17.75524139404297
    9. ' =
' → logprob: -17.88024139404297
    10. '```' → logprob: -18.00524139404297

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003178071230649948
    2. '1' → logprob: -5.753178119659424
    3. ' ' → logprob: -14.878177642822266
    4. '0' → logprob: -17.628177642822266
    5. '```' → logprob: -18.753177642822266
    6. '2' → logprob: -19.753177642822266
    7. '  ' → logprob: -19.878177642822266
    8. '   ' → logprob: -20.378177642822266
    9. ''' → logprob: -20.565677642822266
    10. '`' → logprob: -20.690677642822266

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003178071230649948
    2. ' ' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.753177642822266
    4. '0' → logprob: -15.753177642822266
    5. '  ' → logprob: -17.503177642822266
    6. '```' → logprob: -17.753177642822266
    7. ' ' → logprob: -18.503177642822266
    8. '１' → logprob: -18.753177642822266
    9. '۱' → logprob: -19.565677642822266
    10. '2' → logprob: -19.878177642822266

Token 15: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36856284737586975
    2. '```' → logprob: -1.8685628175735474
    3. '\n' → logprob: -2.743562936782837
    4. '.' → logprob: -3.368562936782837
    5. 'class' → logprob: -3.368562936782837
    6. '<|end|>' → logprob: -5.243562698364258
    7. '' → logprob: -6.118562698364258
    8. '

' → logprob: -6.493562698364258
    9. '[' → logprob: -6.493562698364258
    10. '\' → logprob: -6.493562698364258

Token 17: ' _' (ID: 1175)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4673878252506256
    2. '```' → logprob: -1.3423877954483032
    3. '_' (adapté à ' _') → logprob: -3.0923879146575928
    4. '\' → logprob: -4.842387676239014
    5. '\n' → logprob: -4.967387676239014
    6. 'def' → logprob: -5.092387676239014
    7. 'd' → logprob: -5.467387676239014
    8. 'class' → logprob: -5.467387676239014
    9. '[' → logprob: -5.592387676239014
    10. 'c' → logprob: -5.717387676239014

Token 18: 'symbols' (ID: 134245)
  Prédit: 'WHITE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'WHITE' → logprob: -0.48095065355300903
    2. '_' → logprob: -2.2309505939483643
    3. 'STONE' → logprob: -2.6059505939483643
    4. 'COLOR' → logprob: -3.1059505939483643
    5. '_color' → logprob: -3.7309505939483643
    6. 'colors' → logprob: -4.230950832366943
    7. 'COL' → logprob: -4.355950832366943
    8. 'value' → logprob: -4.480950832366943
    9. 'values' → logprob: -4.980950832366943
    10. '_colors' → logprob: -4.980950832366943

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31330761313438416
    2. ' =' → logprob: -1.3133076429367065
    3. '[' → logprob: -10.938307762145996
    4. '[]' → logprob: -12.563307762145996
    5. '  ' → logprob: -12.688307762145996
    6. '.' → logprob: -12.813307762145996
    7. ')' → logprob: -12.813307762145996
    8. ' ' → logprob: -12.938307762145996
    9. '={}' → logprob: -13.188307762145996
    10. '_' → logprob: -13.313307762145996

Token 20: ' {
' (ID: 405)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.8267835974693298
    2. '{' → logprob: -1.2017836570739746
    3. '"' → logprob: -2.3267836570739746
    4. ''' → logprob: -2.8267836570739746
    5. ' ['' → logprob: -3.4517836570739746
    6. '["' → logprob: -3.5767836570739746
    7. ' {' → logprob: -4.326783657073975
    8. '{'' → logprob: -4.951783657073975
    9. ' "' → logprob: -5.201783657073975
    10. ' '' → logprob: -5.326783657073975

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19623635709285736
    2. '   ' → logprob: -2.3212363719940186
    3. ''' → logprob: -3.1962363719940186
    4. 'Stone' → logprob: -3.9462363719940186
    5. '"' → logprob: -4.5712361335754395
    6. '0' → logprob: -5.3212361335754395
    7. 'White' → logprob: -6.0712361335754395
    8. ' Stone' → logprob: -7.0712361335754395
    9. '(' → logprob: -7.8212361335754395
    10. 'True' → logprob: -8.696236610412598

Token 22: ' WHITE' (ID: 94026)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006212339270859957
    2. '"' → logprob: -5.75621223449707
    3. '       ' → logprob: -6.00621223449707
    4. '   ' → logprob: -8.00621223449707
    5. 'White' → logprob: -9.88121223449707
    6. 'Stone' → logprob: -10.13121223449707
    7. '0' → logprob: -10.25621223449707
    8. ''"' → logprob: -10.50621223449707
    9. ' '' → logprob: -11.00621223449707
    10. ''#' → logprob: -11.50621223449707

Token 23: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014175611548125744
    2. ' :' → logprob: -4.2641754150390625
    3. ',' → logprob: -12.264175415039062
    4. '   ' → logprob: -13.014175415039062
    5. ':white' → logprob: -13.264175415039062
    6. ':return' → logprob: -14.139175415039062
    7. ')' → logprob: -14.389175415039062
    8. ']' → logprob: -15.389175415039062
    9. ' ' → logprob: -15.514175415039062
    10. ':black' → logprob: -15.889175415039062

Token 24: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5516696572303772
    2. ' '' → logprob: -0.9266696572303772
    3. ''o' → logprob: -4.551669597625732
    4. ''O' → logprob: -4.801669597625732
    5. '"' → logprob: -5.426669597625732
    6. ''.' → logprob: -5.926669597625732
    7. ' "' → logprob: -7.551669597625732
    8. ''A' → logprob: -8.17667007446289
    9. ' '.'' → logprob: -8.30167007446289
    10. '   ' → logprob: -8.67667007446289

Token 25: '○' (ID: 50608)
  Prédit: '○'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '○' → logprob: -0.8703368902206421
    2. '\xe2\x9a' → logprob: -1.120336890220642
    3. ''' → logprob: -2.1203370094299316
    4. '●' → logprob: -2.4953370094299316
    5. '〇' → logprob: -3.8703370094299316
    6. '\xe2\x97' → logprob: -4.245337009429932
    7. 'O' → logprob: -5.620337009429932
    8. 'o' → logprob: -5.870337009429932
    9. '⭕' → logprob: -6.245337009429932
    10. ''O' → logprob: -6.745337009429932

Token 26: '',
' (ID: 1214)
  Prédit: '',
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',
' → logprob: -0.20793259143829346
    2. '',' → logprob: -1.7079325914382935
    3. ''' → logprob: -5.082932472229004
    4. '',
' → logprob: -8.707932472229004
    5. '',

' → logprob: -9.707932472229004
    6. ' ',
' → logprob: -9.957932472229004
    7. ''
' → logprob: -11.957932472229004
    8. ',' → logprob: -12.582932472229004
    9. ' ',' → logprob: -12.707932472229004
    10. '️' → logprob: -13.082932472229004

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24716539680957794
    2. 'BLACK' → logprob: -1.8721654415130615
    3. ' BLACK' → logprob: -3.3721654415130615
    4. '   ' → logprob: -3.9971654415130615
    5. ''' → logprob: -5.622165203094482
    6. ' black' → logprob: -5.997165203094482
    7. '        ' → logprob: -6.747165203094482
    8. '    ' → logprob: -7.122165203094482
    9. ' ' → logprob: -7.122165203094482
    10. ' ' → logprob: -7.247165203094482

Token 28: ' BLACK' (ID: 71730)
  Prédit: 'BLACK'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BLACK' (adapté à ' BLACK') → logprob: -0.04326498880982399
    2. ' BLACK' → logprob: -3.1682651042938232
    3. '   ' → logprob: -9.043265342712402
    4. ''' → logprob: -9.418265342712402
    5. '       ' → logprob: -10.668265342712402
    6. '.BLACK' → logprob: -11.543265342712402
    7. ' ' → logprob: -11.668265342712402
    8. 'Black' → logprob: -11.793265342712402
    9. '_BLACK' → logprob: -11.918265342712402
    10. ' black' → logprob: -12.793265342712402

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026383911608718336
    2. ' :' → logprob: -8.250264167785645
    3. '   ' → logprob: -13.250264167785645
    4. '：' → logprob: -15.625264167785645
    5. ':'' → logprob: -15.750264167785645
    6. '       ' → logprob: -15.750264167785645
    7. ' ' → logprob: -16.250263214111328
    8. '    ' → logprob: -17.125263214111328
    9. ':
' → logprob: -17.125263214111328
    10. '':' → logprob: -17.437763214111328

Token 30: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18015030026435852
    2. ' '' → logprob: -1.8051502704620361
    3. ' ' → logprob: -8.055150032043457
    4. '●' → logprob: -9.930150032043457
    5. '   ' → logprob: -11.055150032043457
    6. '"' → logprob: -11.680150032043457
    7. ' ●' → logprob: -11.805150032043457
    8. '  ' → logprob: -13.055150032043457
    9. '	' → logprob: -13.305150032043457
    10. '`' → logprob: -14.180150032043457

Token 31: '●' (ID: 21341)
  Prédit: '●'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '●' → logprob: -0.38710418343544006
    2. ''' → logprob: -1.1371041536331177
    3. '×' → logprob: -9.012104034423828
    4. ' ●' → logprob: -9.887104034423828
    5. '"' → logprob: -10.762104034423828
    6. ' '' → logprob: -11.137104034423828
    7. ''x' → logprob: -11.137104034423828
    8. '•' → logprob: -12.762104034423828
    9. '\xe2\x9a' → logprob: -13.762104034423828
    10. '’' → logprob: -14.012104034423828

Token 32: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3571234941482544
    2. '}' → logprob: -2.107123374938965
    3. ''}' → logprob: -2.107123374938965
    4. '}'' → logprob: -3.357123374938965
    5. '',' → logprob: -3.857123374938965
    6. '',
' → logprob: -7.607123374938965
    7. '   ' → logprob: -7.857123374938965
    8. '}',' → logprob: -8.607123374938965
    9. ''},' → logprob: -10.232123374938965
    10. ''
' → logprob: -10.732123374938965

Token 33: '   ' (ID: 271)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.07897637784481049
    2. '   ' → logprob: -2.5789763927459717
    3. ' }' → logprob: -9.82897663116455
    4. ',' → logprob: -10.45397663116455
    5. ',
' → logprob: -13.82897663116455
    6. '       ' → logprob: -14.57897663116455
    7. '}
' → logprob: -14.57897663116455
    8. '	' → logprob: -14.82897663116455
    9. '   ' → logprob: -14.82897663116455
    10. '```' → logprob: -14.82897663116455

Token 34: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -6.511406809295295e-06
    2. '   ' → logprob: -12.500006675720215
    3. '}
' → logprob: -13.250006675720215
    4. ' }' → logprob: -14.750006675720215
    5. ',' → logprob: -15.125006675720215
    6. '```' → logprob: -16.1250057220459
    7. ',
' → logprob: -16.6250057220459
    8. '}

' (adapté à ' }

') → logprob: -17.1250057220459
    9. '}`' → logprob: -18.0000057220459
    10. '},' → logprob: -18.2500057220459

Token 35: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6841562986373901
    2. '   ' → logprob: -0.8091562986373901
    3. '
' → logprob: -3.5591564178466797
    4. '    
' → logprob: -4.43415641784668
    5. ' def' → logprob: -4.93415641784668
    6. ' ' → logprob: -7.18415641784668
    7. '```' → logprob: -7.18415641784668
    8. '@' → logprob: -7.55915641784668
    9. '@property' → logprob: -9.18415641784668
    10. '	def' → logprob: -9.18415641784668

Token 36: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.3869359493255615
    2. 'def' → logprob: -1.1369359493255615
    3. ' def' → logprob: -10.13693618774414
    4. '   ' → logprob: -11.26193618774414
    5. ' @' → logprob: -11.88693618774414
    6. '@property' → logprob: -13.01193618774414
    7. '```' → logprob: -13.13693618774414
    8. ' ' → logprob: -14.38693618774414
    9. '@
' → logprob: -14.63693618774414
    10. '`' → logprob: -15.38693618774414

Token 37: 'classmethod' (ID: 64680)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.22784268856048584
    2. 'classmethod' → logprob: -1.9778426885604858
    3. 'staticmethod' → logprob: -2.7278428077697754
    4. 'pro' → logprob: -11.477842330932617
    5. 'proper' → logprob: -12.727842330932617
    6. 'p' → logprob: -12.852842330932617
    7. 'class' → logprob: -13.102842330932617
    8. 'static' → logprob: -13.602842330932617
    9. 'pr' → logprob: -13.977842330932617
    10. '@property' → logprob: -14.352842330932617

Token 38: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08755900710821152
    2. ' def' → logprob: -3.0875589847564697
    3. '
' → logprob: -3.3375589847564697
    4. '\' → logprob: -7.087559223175049
    5. '(' → logprob: -7.462559223175049
    6. '    
' → logprob: -8.21255874633789
    7. '   ' → logprob: -8.33755874633789
    8. ' 
' → logprob: -8.83755874633789
    9. '<|end|>' → logprob: -9.21255874633789
    10. '```' → logprob: -9.33755874633789

Token 39: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019783570896834135
    2. ' def' → logprob: -6.751978397369385
    3. '
' → logprob: -7.126978397369385
    4. '   ' → logprob: -13.626977920532227
    5. '```' → logprob: -14.001977920532227
    6. ' ' → logprob: -14.376977920532227
    7. '    
' → logprob: -14.501977920532227
    8. '<|end|>' → logprob: -15.251977920532227
    9. '`' → logprob: -15.626977920532227
    10. '\' → logprob: -15.751977920532227

Token 40: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.7848862373502925e-05
    2. ' def' → logprob: -10.875027656555176
    3. 'symbol' → logprob: -12.250027656555176
    4. 'get' → logprob: -13.000027656555176
    5. '
' → logprob: -14.250027656555176
    6. 'property' → logprob: -14.625027656555176
    7. 'symbols' → logprob: -15.375027656555176
    8. 'define' → logprob: -16.000028610229492
    9. '```' → logprob: -16.375028610229492
    10. 's' → logprob: -16.875028610229492

Token 41: ' symbol' (ID: 10038)
  Prédit: ' symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' symbol' → logprob: -0.46060556173324585
    2. ' get' → logprob: -1.8356056213378906
    3. ' symbols' → logprob: -2.4606056213378906
    4. 'symbol' → logprob: -2.7106056213378906
    5. ' to' → logprob: -3.2106056213378906
    6. 'symbols' → logprob: -4.960605621337891
    7. ' def' → logprob: -5.210605621337891
    8. 'to' → logprob: -6.210605621337891
    9. ' tostring' → logprob: -7.210605621337891
    10. 'get' → logprob: -7.335605621337891

Token 42: '(cls' (ID: 46446)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12824077904224396
    2. '(cls' → logprob: -2.1282408237457275
    3. '(self' → logprob: -7.003240585327148
    4. '_for' → logprob: -8.503240585327148
    5. ' (' → logprob: -10.128240585327148
    6. '(for' → logprob: -10.378240585327148
    7. 's' → logprob: -10.753240585327148
    8. '(s' → logprob: -10.878240585327148
    9. '_(' → logprob: -11.628240585327148
    10. '(
' → logprob: -11.878240585327148

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001418326748535037
    2. ')' → logprob: -6.626418113708496
    3. ' ,' → logprob: -9.626418113708496
    4. '   ' → logprob: -11.876418113708496
    5. 'self' → logprob: -12.001418113708496
    6. '(cls' → logprob: -12.126418113708496
    7. ',)' → logprob: -13.626418113708496
    8. ' )' → logprob: -14.001418113708496
    9. '(' → logprob: -14.001418113708496
    10. 'cls' → logprob: -14.126418113708496

Token 44: ' c' (ID: 274)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.030187437310814857
    2. ' color' → logprob: -3.5301873683929443
    3. 'cls' → logprob: -8.280187606811523
    4. 'stone' → logprob: -8.905187606811523
    5. ' stone' → logprob: -11.030187606811523
    6. ' cls' → logprob: -11.155187606811523
    7. '   ' → logprob: -12.030187606811523
    8. ')' → logprob: -12.655187606811523
    9. 'clr' → logprob: -12.780187606811523
    10. '	color' → logprob: -13.905187606811523

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05733383819460869
    2. 'olor' → logprob: -2.9323339462280273
    3. ')' → logprob: -6.182333946228027
    4. 'ol' → logprob: -8.182333946228027
    5. 'har' → logprob: -10.307333946228027
    6. 'color' → logprob: -10.932333946228027
    7. 'lass' → logprob: -11.432333946228027
    8. ' ):' → logprob: -11.557333946228027
    9. ':' → logprob: -11.932333946228027
    10. '):
' → logprob: -12.307333946228027

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004389528650790453
    2. ':' → logprob: -6.004389762878418
    3. ' return' → logprob: -7.379389762878418
    4. ':return' → logprob: -7.504389762878418
    5. 'return' → logprob: -7.754389762878418
    6. '   ' → logprob: -8.754389762878418
    7. '<|end|>' → logprob: -9.754389762878418
    8. ' :' → logprob: -10.754389762878418
    9. '    ' → logprob: -11.004389762878418
    10. ' ' → logprob: -11.629389762878418

Token 47: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03830162435770035
    2. ' return' → logprob: -3.288301706314087
    3. '       ' → logprob: -8.288301467895508
    4. ':return' → logprob: -12.288301467895508
    5. '	return' → logprob: -13.663301467895508
    6. '   ' → logprob: -13.663301467895508
    7. '_return' → logprob: -14.038301467895508
    8. 'eturn' → logprob: -15.163301467895508
    9. '{return' → logprob: -15.413301467895508
    10. ')return' → logprob: -15.663301467895508

Token 48: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.01815134845674038
    2. ' cls' → logprob: -4.01815128326416
    3. '(cls' → logprob: -13.51815128326416
    4. 'cl' → logprob: -17.143152236938477
    5. '.cls' → logprob: -17.768152236938477
    6. 'classmethod' → logprob: -18.268152236938477
    7. '   ' → logprob: -18.768152236938477
    8. '_cls' → logprob: -18.768152236938477
    9. 'chr' → logprob: -19.143152236938477
    10. ' ' → logprob: -19.768152236938477

Token 49: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.012651853263378143
    2. '_symbols' → logprob: -4.3876519203186035
    3. '.' → logprob: -9.387651443481445
    4. '_symbol' → logprob: -10.262651443481445
    5. ' .' → logprob: -11.887651443481445
    6. '_sym' → logprob: -12.387651443481445
    7. '.symbol' → logprob: -12.762651443481445
    8. ')._' → logprob: -13.012651443481445
    9. '.Symbol' → logprob: -13.637651443481445
    10. '_' → logprob: -13.887651443481445

Token 50: 'symbols' (ID: 134245)
  Prédit: 'symbols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbols' → logprob: -0.00011760921915993094
    2. '_symbols' → logprob: -9.125117301940918
    3. 'symbol' → logprob: -11.750117301940918
    4. ' symbols' → logprob: -15.625117301940918
    5. '_symbol' → logprob: -15.625117301940918
    6. 'sym' → logprob: -16.000118255615234
    7. 'tokens' → logprob: -16.250118255615234
    8. 's' → logprob: -16.750118255615234
    9. 'ymbol' → logprob: -17.875118255615234
    10. '_SYMBOL' → logprob: -17.875118255615234

Token 51: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.005280007608234882
    2. '.get' → logprob: -5.255280017852783
    3. '[get' → logprob: -10.630279541015625
    4. '[' → logprob: -10.755279541015625
    5. 'get' → logprob: -15.255279541015625
    6. '[g' → logprob: -15.630279541015625
    7. '[class' → logprob: -16.005279541015625
    8. '[col' → logprob: -17.005279541015625
    9. '[ch' → logprob: -17.380279541015625
    10. '   ' → logprob: -17.880279541015625

Token 52: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001537169300718233
    2. ')' → logprob: -8.875153541564941
    3. '])' → logprob: -12.500153541564941
    4. ')]' → logprob: -12.500153541564941
    5. '}' → logprob: -12.875153541564941
    6. ' ]' → logprob: -13.250153541564941
    7. ']
' → logprob: -13.875153541564941
    8. ']}' → logprob: -14.625153541564941
    9. '']' → logprob: -15.500153541564941
    10. '   ' → logprob: -16.250154495239258

Token 53: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.45267021656036377
    2. '<|end|>' → logprob: -1.7026702165603638
    3. '
' → logprob: -2.452670097351074
    4. 'def' → logprob: -2.952670097351074
    5. '   ' → logprob: -4.327670097351074
    6. '```' → logprob: -4.952670097351074
    7. '    
' → logprob: -5.077670097351074
    8. '<|end|>' → logprob: -5.202670097351074
    9. '#' → logprob: -5.827670097351074
    10. '\n' → logprob: -6.452670097351074

Token 55: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.10596399009227753
    2. 'staticmethod' → logprob: -2.730963945388794
    3. 'property' → logprob: -3.355963945388794
    4. 'class' → logprob: -7.980964183807373
    5. 'dat' → logprob: -8.730963706970215
    6. 'clas' → logprob: -13.355963706970215
    7. 'l' → logprob: -13.730963706970215
    8. 'static' → logprob: -14.230963706970215
    9. 'st' → logprob: -15.230963706970215
    10. '@' → logprob: -15.480963706970215

Token 56: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4651978313922882
    2. 'def' → logprob: -1.0901978015899658
    3. '   ' → logprob: -3.465197801589966
    4. '(' → logprob: -6.840198040008545
    5. ' ' → logprob: -6.840198040008545
    6. '
' → logprob: -7.340198040008545
    7. '<|end|>' → logprob: -7.590198040008545
    8. '(space' → logprob: -8.465197563171387
    9. 'space' → logprob: -9.152697563171387
    10. ' ' → logprob: -9.215197563171387

Token 57: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0066618467681109905
    2. ' def' → logprob: -5.381661891937256
    3. '   ' → logprob: -6.381661891937256
    4. '
' → logprob: -8.256661415100098
    5. ' ' → logprob: -9.756661415100098
    6. '  ' → logprob: -12.006661415100098
    7. '    
' → logprob: -12.631661415100098
    8. '```' → logprob: -12.881661415100098
    9. '	def' → logprob: -13.006661415100098
    10. '<|end|>' → logprob: -13.381661415100098

Token 58: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.021798662841320038
    2. 'op' → logprob: -3.896798610687256
    3. 'invert' → logprob: -8.271799087524414
    4. 'reverse' → logprob: -8.396799087524414
    5. 'other' → logprob: -8.771799087524414
    6. 'all' → logprob: -9.021799087524414
    7. 'from' → logprob: -9.146799087524414
    8. 'flip' → logprob: -9.271799087524414
    9. 'inverse' → logprob: -9.271799087524414
    10. ' def' → logprob: -9.396799087524414

Token 59: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.06744863092899323
    2. 'other' → logprob: -3.192448616027832
    3. ' opposite' → logprob: -4.317448616027832
    4. ' opponent' → logprob: -5.942448616027832
    5. 'reverse' → logprob: -6.067448616027832
    6. 'invert' → logprob: -6.567448616027832
    7. 'flip' → logprob: -6.692448616027832
    8. 'inverse' → logprob: -7.067448616027832
    9. ' other' → logprob: -7.192448616027832
    10. ' ' → logprob: -7.817448616027832

Token 60: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.004627360496670008
    2. '(' → logprob: -5.379627227783203
    3. '(clazz' → logprob: -12.754627227783203
    4. '(class' → logprob: -13.879627227783203
    5. '(c' → logprob: -13.879627227783203
    6. '(cl' → logprob: -14.129627227783203
    7. '(
' → logprob: -14.879627227783203
    8. '(col' → logprob: -15.004627227783203
    9. ' (' → logprob: -15.504627227783203
    10. 'cls' → logprob: -15.754627227783203

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008974085212685168
    2. ' ,' → logprob: -7.125897407531738
    3. ')' → logprob: -10.625897407531738
    4. '   ' → logprob: -10.750897407531738
    5. '(' → logprob: -10.875897407531738
    6. ',c' → logprob: -11.125897407531738
    7. '(cls' → logprob: -12.000897407531738
    8. ' (' → logprob: -13.375897407531738
    9. ',
' → logprob: -14.125897407531738
    10. ',(' → logprob: -14.625897407531738

Token 62: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.012843240052461624
    2. ' c' → logprob: -4.512843132019043
    3. 'color' → logprob: -6.387843132019043
    4. ' color' → logprob: -9.887843132019043
    5. 'cls' → logprob: -10.262843132019043
    6. '   ' → logprob: -11.012843132019043
    7. ')c' → logprob: -12.387843132019043
    8. ' cls' → logprob: -13.762843132019043
    9. ' ' → logprob: -14.012843132019043
    10. '```' → logprob: -14.012843132019043

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028269849717617035
    2. '):
' → logprob: -5.877827167510986
    3. ')' → logprob: -11.127826690673828
    4. ' ):' → logprob: -12.502826690673828
    5. '   ' → logprob: -13.377826690673828
    6. ':' → logprob: -13.877826690673828
    7. '):
' → logprob: -14.502826690673828
    8. '):

' → logprob: -15.627826690673828
    9. ''):' → logprob: -16.252826690673828
    10. ')：' → logprob: -16.377826690673828

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3609325587749481
    2. 'return' → logprob: -1.3609325885772705
    3. ' return' → logprob: -3.1109325885772705
    4. ' if' → logprob: -6.610932350158691
    5. 'if' → logprob: -7.985932350158691
    6. '0' → logprob: -8.985932350158691
    7. '   ' → logprob: -10.610932350158691
    8. ':return' → logprob: -10.610932350158691
    9. '1' → logprob: -10.735932350158691
    10. '        ' → logprob: -10.735932350158691

Token 65: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009698724374175072
    2. '1' → logprob: -5.384698867797852
    3. ' return' → logprob: -5.884698867797852
    4. '0' → logprob: -6.759698867797852
    5. '       ' → logprob: -7.009698867797852
    6. 'if' → logprob: -8.509698867797852
    7. '           ' → logprob: -12.009698867797852
    8. ' if' → logprob: -12.259698867797852
    9. '```' → logprob: -12.509698867797852
    10. '   ' → logprob: -12.884698867797852

Token 66: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.06680478155612946
    2. ' cls' → logprob: -2.816804885864258
    3. 'Stone' → logprob: -6.066804885864258
    4. '1' → logprob: -6.941804885864258
    5. ' Stone' → logprob: -6.941804885864258
    6. '(cls' → logprob: -8.316804885864258
    7. '0' → logprob: -8.691804885864258
    8. ' ' → logprob: -9.941804885864258
    9. '   ' → logprob: -9.941804885864258
    10. 'Black' → logprob: -10.066804885864258

Token 67: '.BLACK' (ID: 87627)
  Prédit: '.BLACK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.BLACK' → logprob: -0.0706862360239029
    2. '.WHITE' → logprob: -2.8206863403320312
    3. '.' → logprob: -5.195686340332031
    4. '._' → logprob: -5.820686340332031
    5. '.B' → logprob: -9.695686340332031
    6. 'BLACK' → logprob: -10.320686340332031
    7. '.__' → logprob: -10.445686340332031
    8. '.Black' → logprob: -11.070686340332031
    9. '.White' → logprob: -12.695686340332031
    10. 'WHITE' → logprob: -12.820686340332031

Token 68: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20141518115997314
    2. 'if' → logprob: -1.7014151811599731
    3. 'i' → logprob: -14.201415061950684
    4. 'If' → logprob: -14.701415061950684
    5. '	if' → logprob: -15.826415061950684
    6. ' ' → logprob: -15.826415061950684
    7. '   ' → logprob: -15.951415061950684
    8. '```' → logprob: -16.326416015625
    9. ' ' → logprob: -16.701416015625
    10. '       ' → logprob: -17.326416015625

Token 69: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25194093585014343
    2. ' c' → logprob: -1.5019409656524658
    3. '   ' → logprob: -12.626940727233887
    4. ' ' → logprob: -12.751940727233887
    5. '(c' → logprob: -13.751940727233887
    6. '  ' → logprob: -13.876940727233887
    7. '    ' → logprob: -14.001940727233887
    8. '	c' → logprob: -14.376940727233887
    9. ')c' → logprob: -14.626940727233887
    10. ' (' → logprob: -15.126940727233887

Token 70: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3484879434108734
    2. '==' → logprob: -1.2234879732131958
    3. '=' → logprob: -11.223487854003906
    4. ' is' → logprob: -11.473487854003906
    5. ' ' → logprob: -11.973487854003906
    6. 'else' → logprob: -12.723487854003906
    7. '==
' → logprob: -13.098487854003906
    8. 'is' → logprob: -13.223487854003906
    9. ' ' → logprob: -13.348487854003906
    10. ' else' → logprob: -13.348487854003906

Token 71: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.002150380751118064
    2. ' cls' → logprob: -6.502150535583496
    3. 'Stone' → logprob: -7.377150535583496
    4. ' Stone' → logprob: -11.377150535583496
    5. '(cls' → logprob: -12.502150535583496
    6. '   ' → logprob: -12.877150535583496
    7. 'class' → logprob: -13.002150535583496
    8. '.cls' → logprob: -13.252150535583496
    9. 'self' → logprob: -15.752150535583496
    10. 'classmethod' → logprob: -15.877150535583496

Token 72: '.WHITE' (ID: 75459)
  Prédit: '.WHITE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.WHITE' → logprob: -0.0017320599872618914
    2. '.' → logprob: -6.751731872558594
    3. 'WHITE' → logprob: -7.501731872558594
    4. ' .' → logprob: -12.501731872558594
    5. '.White' → logprob: -13.001731872558594
    6. '.BLACK' → logprob: -14.251731872558594
    7. '   ' → logprob: -14.376731872558594
    8. '.W' → logprob: -14.626731872558594
    9. '​.' → logprob: -14.751731872558594
    10. '```' → logprob: -15.251731872558594

Token 73: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3868723213672638
    2. ' else' → logprob: -1.1368722915649414
    3. '	else' → logprob: -13.886872291564941
    4. '_else' → logprob: -15.511872291564941
    5. '       ' → logprob: -16.636873245239258
    6. '   ' → logprob: -17.386873245239258
    7. 'elses' → logprob: -17.761873245239258
    8. '```' → logprob: -18.011873245239258
    9. '        ' → logprob: -18.136873245239258
    10. 'Else' → logprob: -18.261873245239258

Token 74: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.002476016292348504
    2. ' cls' → logprob: -6.002476215362549
    3. '(cls' → logprob: -15.00247573852539
    4. '.cls' → logprob: -16.87747573852539
    5. '   ' → logprob: -18.62747573852539
    6. 'cl' → logprob: -18.87747573852539
    7. 'class' → logprob: -19.25247573852539
    8. '_cls' → logprob: -19.37747573852539
    9. 'classmethod' → logprob: -19.87747573852539
    10. 'Cls' → logprob: -19.87747573852539

Token 75: '.WHITE' (ID: 75459)
  Prédit: '.WHITE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.WHITE' → logprob: -0.6941227912902832
    2. '.BLACK' → logprob: -0.6941227912902832
    3. '.' → logprob: -7.069122791290283
    4. '.B' → logprob: -10.444122314453125
    5. '.White' → logprob: -11.194122314453125
    6. '.COLOR' → logprob: -11.194122314453125
    7. '.BL' → logprob: -11.194122314453125
    8. '.BLUE' → logprob: -11.944122314453125
    9. '​.' → logprob: -12.069122314453125
    10. '.Black' → logprob: -12.194122314453125

Token 76: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.007753198966383934
    2. '
' → logprob: -5.882753372192383
    3. 'def' → logprob: -6.132753372192383
    4. '```' → logprob: -6.882753372192383
    5. 'c' → logprob: -8.132753372192383
    6. ' class' → logprob: -8.382753372192383
    7. '<|end|>' → logprob: -8.382753372192383
    8. 'stone' → logprob: -8.632753372192383
    9. '

' → logprob: -8.757753372192383
    10. 'Stone' → logprob: -8.757753372192383

Token 78: ' Stone' (ID: 22850)
  Prédit: ' Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.5567434430122375
    2. ' Stone' → logprob: -1.1817433834075928
    3. ' Go' → logprob: -2.8067433834075928
    4. ' ' → logprob: -3.5567433834075928
    5. ' Game' → logprob: -4.431743621826172
    6. ' Player' → logprob: -4.556743621826172
    7. ' Gob' → logprob: -5.806743621826172
    8. ' Chess' → logprob: -6.806743621826172
    9. ' Gom' → logprob: -7.306743621826172
    10. ' Point' → logprob: -7.431743621826172

Token 79: 'Group' (ID: 2748)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03181074932217598
    2. 'Color' → logprob: -3.656810760498047
    3. ':
' → logprob: -5.406810760498047
    4. '(Color' → logprob: -8.156810760498047
    5. '():' → logprob: -8.281810760498047
    6. '<Color' → logprob: -8.656810760498047
    7. '(color' → logprob: -10.281810760498047
    8. '(' → logprob: -10.406810760498047
    9. ' :' → logprob: -10.406810760498047
    10. '):' → logprob: -10.531810760498047

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014537633978761733
    2. ' :' → logprob: -9.375144958496094
    3. ':
' → logprob: -10.250144958496094
    4. '<|end|>' → logprob: -12.250144958496094
    5. '(' → logprob: -12.375144958496094
    6. '):' → logprob: -12.500144958496094
    7. '(object' → logprob: -12.500144958496094
    8. '():' → logprob: -12.750144958496094
    9. ':def' → logprob: -13.375144958496094
    10. ':**' → logprob: -13.500144958496094

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035233369562774897
    2. ' def' → logprob: -6.128523349761963
    3. 'def' → logprob: -6.753523349761963
    4. '    
' → logprob: -9.128522872924805
    5. ':' → logprob: -10.503522872924805
    6. '	def' → logprob: -11.628522872924805
    7. '```' → logprob: -11.878522872924805
    8. '(' → logprob: -12.003522872924805
    9. ':def' → logprob: -12.753522872924805
    10. '(def' → logprob: -13.628522872924805

Token 82: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.25473296642303467
    2. 'def' (adapté à ' def') → logprob: -1.5047329664230347
    3. '   ' → logprob: -5.879733085632324
    4. '	def' → logprob: -13.379733085632324
    5. ' __' → logprob: -14.129733085632324
    6. 'class' → logprob: -14.629733085632324
    7. ':def' → logprob: -14.629733085632324
    8. '    ' → logprob: -14.879733085632324
    9. ' ' → logprob: -15.254733085632324
    10. '```' → logprob: -15.504733085632324

Token 83: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.18378384411334991
    2. ' __' → logprob: -2.433783769607544
    3. 'init' → logprob: -3.183783769607544
    4. '_init' → logprob: -4.183784008026123
    5. 'def' → logprob: -4.308784008026123
    6. ' def' → logprob: -5.558784008026123
    7. 'it' → logprob: -6.558784008026123
    8. 't' → logprob: -6.683784008026123
    9. '_' → logprob: -7.058784008026123
    10. 'nit' → logprob: -7.433784008026123

Token 84: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.25
    3. 'inite' → logprob: -17.0
    4. ' init' → logprob: -18.125
    5. 'in' → logprob: -18.25
    6. '	init' → logprob: -19.125
    7. 'innit' → logprob: -19.25
    8. '_init' → logprob: -19.625
    9. 'int' → logprob: -20.5
    10. '   ' → logprob: -20.75

Token 85: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.007724810391664505
    2. '__' → logprob: -4.882724761962891
    3. '__(
' → logprob: -10.00772476196289
    4. '(self' → logprob: -10.38272476196289
    5. '(' → logprob: -10.63272476196289
    6. '__((' → logprob: -11.38272476196289
    7. '__(*' → logprob: -13.25772476196289
    8. '__('' → logprob: -13.38272476196289
    9. '_(' → logprob: -13.75772476196289
    10. ' (' → logprob: -13.88272476196289

Token 86: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.384836888173595e-05
    2. ' self' → logprob: -9.7500638961792
    3. '
' → logprob: -13.2500638961792
    4. ')' → logprob: -13.3750638961792
    5. '   ' → logprob: -14.2500638961792
    6. '       ' → logprob: -14.3750638961792
    7. '):
' → logprob: -14.8750638961792
    8. '0' → logprob: -15.7500638961792
    9. ',' → logprob: -16.125062942504883
    10. '(self' → logprob: -16.750062942504883

Token 87: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.576720118522644
    2. ',' → logprob: -0.826720118522644
    3. 'self' → logprob: -7.826720237731934
    4. ' ' → logprob: -8.701720237731934
    5. ',self' → logprob: -9.451720237731934
    6. ' self' → logprob: -9.951720237731934
    7. ' )' → logprob: -10.076720237731934
    8. ',color' → logprob: -11.201720237731934
    9. ')' → logprob: -11.451720237731934
    10. ',s' → logprob: -12.951720237731934

Token 88: ' color' (ID: 3089)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3149935007095337
    2. ' color' → logprob: -1.3149935007095337
    3. ' self' → logprob: -1.6899935007095337
    4. ' stones' → logprob: -1.6899935007095337
    5. 'color' → logprob: -2.689993381500244
    6. 'stones' → logprob: -4.189993381500244
    7. ' ' → logprob: -5.689993381500244
    8. ' board' → logprob: -5.939993381500244
    9. '   ' → logprob: -6.189993381500244
    10. 'board' → logprob: -6.939993381500244

Token 89: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007542393868789077
    2. '):' → logprob: -7.625754356384277
    3. ' ,' → logprob: -8.250754356384277
    4. '‌,' → logprob: -13.500754356384277
    5. ' ):' → logprob: -14.375754356384277
    6. ',color' → logprob: -14.500754356384277
    7. ':' → logprob: -14.625754356384277
    8. ',
' → logprob: -15.125754356384277
    9. ')' → logprob: -15.250754356384277
    10. '):
' → logprob: -15.250754356384277

Token 90: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03989086300134659
    2. ' int' → logprob: -3.289890766143799
    3. 'Stone' → logprob: -6.414890766143799
    4. ' Stone' → logprob: -8.664891242980957
    5. ':int' → logprob: -11.039891242980957
    6. 'stone' → logprob: -12.164891242980957
    7. ' stone' → logprob: -12.414891242980957
    8. '[int' → logprob: -12.664891242980957
    9. '   ' → logprob: -13.039891242980957
    10. '(int' → logprob: -13.289891242980957

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006859943270683289
    2. '):' → logprob: -5.00685977935791
    3. ' ,' → logprob: -9.00685977935791
    4. ')' → logprob: -11.25685977935791
    5. ' ):' → logprob: -12.75685977935791
    6. '):
' → logprob: -13.25685977935791
    7. '‌,' → logprob: -13.75685977935791
    8. '   ' → logprob: -14.25685977935791
    9. ',int' → logprob: -14.75685977935791
    10. ',
' → logprob: -14.88185977935791

Token 92: ' count' (ID: 3605)
  Prédit: ' stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stones' → logprob: -0.08845283091068268
    2. 'stones' → logprob: -2.5884528160095215
    3. ' positions' → logprob: -5.7134528160095215
    4. '   ' → logprob: -6.0884528160095215
    5. 'positions' → logprob: -6.5884528160095215
    6. ' ' → logprob: -6.7134528160095215
    7. ' points' → logprob: -7.5884528160095215
    8. 'points' → logprob: -7.9634528160095215
    9. '  ' → logprob: -8.33845329284668
    10. ' liberties' → logprob: -10.33845329284668

Token 93: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12050105631351471
    2. '):' → logprob: -2.2455010414123535
    3. '=' → logprob: -4.9955010414123535
    4. ')' → logprob: -7.4955010414123535
    5. ':int' → logprob: -8.495501518249512
    6. ',' → logprob: -9.370501518249512
    7. '):
' → logprob: -10.870501518249512
    8. ' ):' → logprob: -11.870501518249512
    9. ' :' → logprob: -12.495501518249512
    10. '=int' → logprob: -13.620501518249512

Token 94: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31447938084602356
    2. ' int' → logprob: -1.3144793510437012
    3. ')' → logprob: -7.814479351043701
    4. ' ' → logprob: -8.06447982788086
    5. '0' → logprob: -8.43947982788086
    6. ':int' → logprob: -9.06447982788086
    7. '1' → logprob: -9.68947982788086
    8. '):
' → logprob: -9.81447982788086
    9. '[int' → logprob: -11.43947982788086
    10. '):' → logprob: -11.81447982788086

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04892479628324509
    2. ',' → logprob: -3.048924684524536
    3. ')' → logprob: -8.423924446105957
    4. '):
' → logprob: -9.548924446105957
    5. ' ):' → logprob: -11.048924446105957
    6. '   ' → logprob: -11.173924446105957
    7. ':' → logprob: -11.798924446105957
    8. ' ,' → logprob: -12.673924446105957
    9. '=' → logprob: -13.048924446105957
    10. '       ' → logprob: -13.423924446105957

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006637069745920599
    2. ' self' → logprob: -8.500663757324219
    3. ',' → logprob: -8.625663757324219
    4. '   ' → logprob: -9.125663757324219
    5. 'self' → logprob: -9.250663757324219
    6. ':' → logprob: -10.125663757324219
    7. ')' → logprob: -11.625663757324219
    8. '):' → logprob: -11.750663757324219
    9. '):
' → logprob: -12.625663757324219
    10. '      ' → logprob: -12.750663757324219

Token 97: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6099199652671814
    2. '       ' → logprob: -1.3599200248718262
    3. ' self' → logprob: -1.6099200248718262
    4. '   ' → logprob: -11.609919548034668
    5. '	self' → logprob: -11.734919548034668
    6. ' ' → logprob: -13.359919548034668
    7. 'super' → logprob: -14.859919548034668
    8. '	' → logprob: -15.234919548034668
    9. '      ' → logprob: -15.359919548034668
    10. 'color' → logprob: -15.359919548034668

Token 98: '.color' (ID: 15974)
  Prédit: '.color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.color' → logprob: -0.2256447672843933
    2. '.' → logprob: -1.600644826889038
    3. ' .' → logprob: -9.350645065307617
    4. 'color' → logprob: -9.600645065307617
    5. ' color' → logprob: -10.850645065307617
    6. '_color' → logprob: -11.100645065307617
    7. '=color' → logprob: -11.100645065307617
    8. '.count' → logprob: -12.475645065307617
    9. ',' → logprob: -12.475645065307617
    10. ' ' → logprob: -12.600645065307617

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34846970438957214
    2. ' =' → logprob: -1.2234697341918945
    3. '<|end|>' → logprob: -11.473469734191895
    4. ',' → logprob: -11.723469734191895
    5. '=color' → logprob: -13.598469734191895
    6. ')' → logprob: -13.598469734191895
    7. '=}' → logprob: -13.973469734191895
    8. ' ' → logprob: -13.973469734191895
    9. '<|end|>' → logprob: -14.348469734191895
    10. ' =)' → logprob: -14.848469734191895

Token 100: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.3868737816810608
    2. 'color' → logprob: -1.136873722076416
    3. 'count' → logprob: -13.136874198913574
    4. '	color' → logprob: -15.011874198913574
    5. ' count' → logprob: -16.011873245239258
    6. '=color' → logprob: -16.011873245239258
    7. '_color' → logprob: -16.886873245239258
    8. 'c' → logprob: -17.261873245239258
    9. '(color' → logprob: -17.511873245239258
    10. 'colo' → logprob: -17.761873245239258

Token 101: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017159747949335724
    2. 'self' → logprob: -8.750171661376953
    3. ' self' → logprob: -11.875171661376953
    4. '   ' → logprob: -12.875171661376953
    5. ',' → logprob: -13.000171661376953
    6. '<|end|>' → logprob: -14.875171661376953
    7. ' ' → logprob: -15.250171661376953
    8. '      ' → logprob: -15.375171661376953
    9. '	' → logprob: -15.875171661376953
    10. '
' → logprob: -16.375171661376953

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011507301591336727
    2. 'self' → logprob: -4.511507511138916
    3. ' self' → logprob: -7.761507511138916
    4. '   ' → logprob: -10.386507034301758
    5. ',' → logprob: -13.636507034301758
    6. ' ' → logprob: -14.886507034301758
    7. '	self' → logprob: -15.011507034301758
    8. '      ' → logprob: -15.261507034301758
    9. ',self' → logprob: -16.136507034301758
    10. '           ' → logprob: -16.386507034301758

Token 103: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002986971288919449
    2. ' self' → logprob: -5.877986907958984
    3. '       ' → logprob: -8.627986907958984
    4. '
' → logprob: -13.877986907958984
    5. '   ' → logprob: -14.252986907958984
    6. 'count' → logprob: -14.377986907958984
    7. ' ' → logprob: -15.002986907958984
    8. '```' → logprob: -15.752986907958984
    9. '	self' → logprob: -16.127986907958984
    10. '      ' → logprob: -16.252986907958984

Token 104: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.016988582909107208
    2. '.' → logprob: -4.266988754272461
    3. 'count' → logprob: -7.016988754272461
    4. '_count' → logprob: -7.141988754272461
    5. '.color' → logprob: -8.141988754272461
    6. '=' → logprob: -8.391988754272461
    7. ' =' → logprob: -8.391988754272461
    8. '=count' → logprob: -8.891988754272461
    9. ' .' → logprob: -9.516988754272461
    10. '       ' → logprob: -10.016988754272461

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759406089782715
    2. '=' → logprob: -0.8259406089782715
    3. '=count' → logprob: -13.95094108581543
    4. ' ' → logprob: -15.20094108581543
    5. ' +=' → logprob: -17.20094108581543
    6. ')' → logprob: -17.20094108581543
    7. '   ' → logprob: -17.70094108581543
    8. '<|end|>' → logprob: -18.32594108581543
    9. '＝' → logprob: -18.70094108581543
    10. '=}' → logprob: -18.82594108581543

Token 106: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.12692926824092865
    2. 'count' → logprob: -2.12692928314209
    3. '	count' → logprob: -14.62692928314209
    4. '(count' → logprob: -15.12692928314209
    5. ' ' → logprob: -15.62692928314209
    6. '1' → logprob: -16.626928329467773
    7. '=count' → logprob: -17.001928329467773
    8. '    ' → logprob: -17.126928329467773
    9. '$count' → logprob: -17.501928329467773
    10. '_count' → logprob: -17.626928329467773

Token 107: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06289756298065186
    2. '<|end|>' → logprob: -2.9378976821899414
    3. '<|end|>' → logprob: -5.812897682189941
    4. 'def' → logprob: -5.812897682189941
    5. '
' → logprob: -6.562897682189941
    6. '    
' → logprob: -7.812897682189941
    7. 'class' → logprob: -9.562897682189941
    8. ')' → logprob: -10.312897682189941
    9. ' def' → logprob: -10.937897682189941
    10. ',' → logprob: -11.187897682189941

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021434562280774117
    2. 'def' → logprob: -3.8964345455169678
    3. '<|end|>' → logprob: -8.146434783935547
    4. 'class' → logprob: -8.396434783935547
    5. '    
' → logprob: -8.896434783935547
    6. '
' → logprob: -9.646434783935547
    7. '<|end|>' → logprob: -9.771434783935547
    8. ' def' → logprob: -9.771434783935547
    9. ')' → logprob: -11.396434783935547
    10. '	def' → logprob: -11.521434783935547

Token 109: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00015181333583313972
    2. ' def' → logprob: -8.875151634216309
    3. '@property' → logprob: -12.000151634216309
    4. '   ' → logprob: -12.250151634216309
    5. 'class' → logprob: -14.625151634216309
    6. '@' → logprob: -15.250151634216309
    7. '```' → logprob: -16.875152587890625
    8. '	def' → logprob: -17.500152587890625
    9. '#' → logprob: -17.750152587890625
    10. ')' → logprob: -18.250152587890625

Token 110: ' __' (ID: 2516)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.6848220229148865
    2. ' merge' → logprob: -0.8098220229148865
    3. ' get' → logprob: -5.059822082519531
    4. ' def' → logprob: -5.684822082519531
    5. ' total' → logprob: -5.809822082519531
    6. ' stone' → logprob: -5.809822082519531
    7. ' combine' → logprob: -5.809822082519531
    8. ' size' → logprob: -5.809822082519531
    9. ' calculate' → logprob: -5.934822082519531
    10. ' ' → logprob: -6.059822082519531

Token 111: 'repr' (ID: 67002)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.9004843831062317
    2. 'repr' → logprob: -1.275484323501587
    3. 'eq' → logprob: -1.400484323501587
    4. 'len' → logprob: -3.025484323501587
    5. 'init' → logprob: -4.650484561920166
    6. 'add' → logprob: -5.025484561920166
    7. 'lt' → logprob: -5.900484561920166
    8. 'int' → logprob: -8.525484085083008
    9. 'i' → logprob: -9.775484085083008
    10. 'iter' → logprob: -10.025484085083008

Token 112: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0025648376904428005
    2. '__' → logprob: -6.002564907073975
    3. '__('' → logprob: -9.502564430236816
    4. '__(
' → logprob: -11.502564430236816
    5. '__("' → logprob: -13.127564430236816
    6. '__((' → logprob: -13.252564430236816
    7. '___' → logprob: -14.877564430236816
    8. '__(*' → logprob: -16.127565383911133
    9. '__.__' → logprob: -16.377565383911133
    10. '____' → logprob: -16.377565383911133

Token 113: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.339278580620885e-06
    2. ' self' → logprob: -13.625001907348633
    3. ')' → logprob: -13.750001907348633
    4. '
' → logprob: -17.625001907348633
    5. '_self' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '(self' → logprob: -18.625001907348633
    8. ' ' → logprob: -18.875001907348633
    9. 'Self' → logprob: -19.125001907348633
    10. '):
' → logprob: -20.125001907348633

Token 114: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06431251019239426
    2. '__)' → logprob: -3.06431245803833
    3. '):' → logprob: -5.68931245803833
    4. '__:' → logprob: -5.93931245803833
    5. ')__' → logprob: -6.06431245803833
    6. '__(' → logprob: -6.06431245803833
    7. '__('' → logprob: -6.56431245803833
    8. ')' → logprob: -7.06431245803833
    9. '__).' → logprob: -7.43931245803833
    10. 'self' → logprob: -7.68931245803833

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20618078112602234
    2. ' f' → logprob: -1.9561808109283447
    3. 'f' → logprob: -3.3311808109283447
    4. ' return' → logprob: -5.081180572509766
    5. 'return' → logprob: -5.831180572509766
    6. '   ' → logprob: -11.956180572509766
    7. '           ' → logprob: -12.956180572509766
    8. '      ' → logprob: -13.331180572509766
    9. '"' → logprob: -13.581180572509766
    10. '     ' → logprob: -13.581180572509766

Token 116: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.13799035549163818
    2. 'return' (adapté à ' return') → logprob: -2.7629904747009277
    3. '       ' → logprob: -2.8879904747009277
    4. ' f' → logprob: -4.762990474700928
    5. ' return' → logprob: -6.512990474700928
    6. '   ' → logprob: -9.63798999786377
    7. '           ' → logprob: -13.01298999786377
    8. '     ' → logprob: -13.13798999786377
    9. ' ' → logprob: -13.51298999786377
    10. '"' → logprob: -13.63798999786377

Token 117: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001503313542343676
    2. ' f' → logprob: -6.5015034675598145
    3. ''f' → logprob: -15.126502990722656
    4. '   ' → logprob: -15.626502990722656
    5. '"' → logprob: -15.626502990722656
    6. ' ' → logprob: -15.876502990722656
    7. 'F' → logprob: -16.376502990722656
    8. '(f' → logprob: -16.501502990722656
    9. 'Stone' → logprob: -17.126502990722656
    10. ''' → logprob: -17.251502990722656

Token 118: '"{' (ID: 27510)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00792115181684494
    2. '"' → logprob: -5.63292121887207
    3. '(f' → logprob: -6.00792121887207
    4. ''S' → logprob: -7.38292121887207
    5. ''f' → logprob: -7.63292121887207
    6. ''' → logprob: -8.25792121887207
    7. '"(' → logprob: -8.75792121887207
    8. ''(' → logprob: -9.25792121887207
    9. ''s' → logprob: -9.63292121887207
    10. '`' → logprob: -9.75792121887207

Token 119: 'Stone' (ID: 56062)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3474245071411133
    2. 'Stone' → logprob: -1.3474245071411133
    3. ''' → logprob: -3.5974245071411133
    4. ''S' → logprob: -5.347424507141113
    5. 'type' → logprob: -6.972424507141113
    6. ''s' → logprob: -9.472424507141113
    7. ' Stone' → logprob: -9.597424507141113
    8. 'Self' → logprob: -9.597424507141113
    9. ' self' → logprob: -9.722424507141113
    10. 'stone' → logprob: -10.597424507141113

Token 120: 'Color' (ID: 2324)
  Prédit: 'Color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.0028155746404081583
    2. 'Group' → logprob: -5.8778157234191895
    3. 'color' → logprob: -12.127815246582031
    4. 'group' → logprob: -13.752815246582031
    5. 'COLOR' → logprob: -14.252815246582031
    6. 'Stone' → logprob: -14.377815246582031
    7. '<Color' → logprob: -14.752815246582031
    8. 'Col' → logprob: -15.002815246582031
    9. 'C' → logprob: -15.127815246582031
    10. '(Color' → logprob: -15.502815246582031

Token 121: '.symbol' (ID: 70386)
  Prédit: '.symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -0.00033534664544276893
    2. '.' → logprob: -8.250335693359375
    3. '.sym' → logprob: -10.125335693359375
    4. ' .' → logprob: -11.250335693359375
    5. '.Symbol' → logprob: -11.875335693359375
    6. '.op' → logprob: -13.125335693359375
    7. '.s' → logprob: -13.500335693359375
    8. 'symbol' → logprob: -13.500335693359375
    9. '```' → logprob: -13.875335693359375
    10. '._' → logprob: -13.875335693359375

Token 122: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02991177700459957
    2. '(' → logprob: -3.529911756515503
    3. ' (' → logprob: -8.904911994934082
    4. '(
' → logprob: -11.529911994934082
    5. '((' → logprob: -12.404911994934082
    6. '(this' → logprob: -12.654911994934082
    7. '(

' → logprob: -12.779911994934082
    8. '("("' → logprob: -13.654911994934082
    9. '```' → logprob: -14.154911994934082
    10. '('' → logprob: -14.404911994934082

Token 123: '.color' (ID: 15974)
  Prédit: '.color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.color' → logprob: -0.016367241740226746
    2. '(self' → logprob: -4.516367435455322
    3. '.' → logprob: -5.641367435455322
    4. ')' → logprob: -7.141367435455322
    5. 'self' → logprob: -7.516367435455322
    6. ',' → logprob: -9.391366958618164
    7. '(' → logprob: -9.391366958618164
    8. '.self' → logprob: -9.891366958618164
    9. 'color' → logprob: -10.141366958618164
    10. '.Color' → logprob: -10.641366958618164

Token 124: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.1951603889465332
    2. '(self' → logprob: -1.9451603889465332
    3. ')' → logprob: -4.070160388946533
    4. '(' → logprob: -4.820160388946533
    5. ')(' → logprob: -4.945160388946533
    6. ' )' → logprob: -7.570160388946533
    7. '('' → logprob: -8.570159912109375
    8. '(
' → logprob: -8.570159912109375
    9. '   ' → logprob: -8.820159912109375
    10. ' ' → logprob: -8.820159912109375

Token 125: '*' (ID: 9)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.19041508436203003
    2. '}{' → logprob: -2.315415143966675
    3. '(self' → logprob: -4.190414905548096
    4. '[' → logprob: -4.440414905548096
    5. '}[' → logprob: -4.565414905548096
    6. 'x' → logprob: -4.815414905548096
    7. '({' → logprob: -5.065414905548096
    8. '(' → logprob: -5.315414905548096
    9. '('' → logprob: -5.565414905548096
    10. ''' → logprob: -5.940414905548096

Token 126: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.014172682538628578
    2. 'self' → logprob: -4.264172554016113
    3. '{
' → logprob: -12.889172554016113
    4. ' self' → logprob: -13.139172554016113
    5. '
' → logprob: -13.514172554016113
    6. '"{' → logprob: -14.514172554016113
    7. '(self' → logprob: -14.514172554016113
    8. ' {' → logprob: -14.639172554016113
    9. '<|end|>' → logprob: -14.639172554016113
    10. '{return' → logprob: -15.014172554016113

Token 127: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0025317834224551916
    2. '{' → logprob: -6.002532005310059
    3. ' self' → logprob: -10.002532005310059
    4. '(self' → logprob: -12.627532005310059
    5. '
' → logprob: -13.252532005310059
    6. '{
' → logprob: -13.377532005310059
    7. '}{' → logprob: -14.252532005310059
    8. '       ' → logprob: -14.627532005310059
    9. '   ' → logprob: -14.627532005310059
    10. '}' → logprob: -14.752532005310059

Token 128: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -6.869017852295656e-06
    2. 'count' → logprob: -12.125006675720215
    3. '.' → logprob: -13.625006675720215
    4. ' .' → logprob: -16.00000762939453
    5. ' count' → logprob: -18.87500762939453
    6. '<count' → logprob: -19.00000762939453
    7. '	count' → logprob: -19.12500762939453
    8. ' ' → logprob: -19.37500762939453
    9. '   ' → logprob: -19.62500762939453
    10. '.Count' → logprob: -20.37500762939453

Token 129: '}"' (ID: 21503)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6892176270484924
    2. '}"' → logprob: -0.9392176270484924
    3. '"}' → logprob: -2.8142175674438477
    4. '}' → logprob: -3.0642175674438477
    5. ')"' → logprob: -8.439217567443848
    6. '<|end|>' → logprob: -9.564217567443848
    7. '```' → logprob: -9.939217567443848
    8. ')' → logprob: -10.564217567443848
    9. '")' → logprob: -11.064217567443848
    10. '"""' → logprob: -11.189217567443848

Token 130: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1535399854183197
    2. '<|end|>' → logprob: -2.0285398960113525
    3. 'def' → logprob: -6.153540134429932
    4. '   ' → logprob: -6.653540134429932
    5. '+
' → logprob: -6.778540134429932
    6. '<|end|>' → logprob: -6.778540134429932
    7. '

' → logprob: -6.903540134429932
    8. ',' → logprob: -7.403540134429932
    9. ' 
' → logprob: -7.528540134429932
    10. ')' → logprob: -7.653540134429932

Token 131: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0012115450808778405
    2. 'def' → logprob: -7.001211643218994
    3. '
' → logprob: -8.376211166381836
    4. ' class' → logprob: -10.001211166381836
    5. 'from' → logprob: -11.751211166381836
    6. '<|end|>' → logprob: -13.126211166381836
    7. '

' → logprob: -13.376211166381836
    8. 'import' → logprob: -13.501211166381836
    9. '```' → logprob: -13.626211166381836
    10. '   ' → logprob: -13.751211166381836

Token 132: ' Table' (ID: 10211)
  Prédit: ' Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.0959261804819107
    2. ' Go' → logprob: -3.220926284790039
    3. 'Board' → logprob: -3.470926284790039
    4. ' Game' → logprob: -5.345926284790039
    5. ' Move' → logprob: -5.345926284790039
    6. 'Go' → logprob: -6.095926284790039
    7. ' board' → logprob: -6.345926284790039
    8. ' Stone' → logprob: -6.470926284790039
    9. ' Gob' → logprob: -6.845926284790039
    10. '_board' → logprob: -6.970926284790039

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004377022560220212
    2. ':
' → logprob: -8.00043773651123
    3. '():' → logprob: -9.25043773651123
    4. '(object' → logprob: -13.87543773651123
    5. '):' → logprob: -14.37543773651123
    6. '<|end|>' → logprob: -14.37543773651123
    7. ':

' → logprob: -14.50043773651123
    8. '(' → logprob: -15.00043773651123
    9. '>:' → logprob: -15.00043773651123
    10. '(size' → logprob: -15.12543773651123

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12717944383621216
    2. ':
' → logprob: -2.7521793842315674
    3. ':' → logprob: -3.1271793842315674
    4. 'def' → logprob: -5.0021796226501465
    5. ' def' → logprob: -5.5021796226501465
    6. '):
' → logprob: -7.6271796226501465
    7. ':def' → logprob: -8.752179145812988
    8. '<|end|>' → logprob: -9.502179145812988
    9. ' ' → logprob: -9.877179145812988
    10. '  ' → logprob: -10.127179145812988

Token 135: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.048682406544685364
    2. ' def' → logprob: -3.048682451248169
    3. '   ' → logprob: -9.29868221282959
    4. 'class' → logprob: -13.67368221282959
    5. 'de' → logprob: -14.42368221282959
    6. ' ' → logprob: -14.67368221282959
    7. ':def' → logprob: -14.67368221282959
    8. '	def' → logprob: -15.54868221282959
    9. ':' → logprob: -15.79868221282959
    10. ')' → logprob: -15.79868221282959

Token 136: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0030692180152982473
    2. '__' → logprob: -6.2530694007873535
    3. ' ' → logprob: -7.5030694007873535
    4. ' _' → logprob: -8.378068923950195
    5. '_init' → logprob: -9.003068923950195
    6. ' ___' → logprob: -9.503068923950195
    7. '_' → logprob: -9.628068923950195
    8. ' ' → logprob: -10.378068923950195
    9. ' def' → logprob: -11.128068923950195
    10. '().__' → logprob: -12.003068923950195

Token 137: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.036524842376821e-05
    2. '_init' → logprob: -10.875040054321289
    3. 'def' → logprob: -11.750040054321289
    4. '__' → logprob: -11.875040054321289
    5. '```' → logprob: -13.250040054321289
    6. '   ' → logprob: -14.250040054321289
    7. ' init' → logprob: -14.250040054321289
    8. '(init' → logprob: -14.375040054321289
    9. 'iter' → logprob: -14.500040054321289
    10. 'it' → logprob: -14.875040054321289

Token 138: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006236517336219549
    2. '(self' → logprob: -5.131236553192139
    3. '_(' → logprob: -9.13123607635498
    4. '__(
' → logprob: -9.38123607635498
    5. '__' → logprob: -10.13123607635498
    6. ' (' → logprob: -10.13123607635498
    7. '(' → logprob: -10.75623607635498
    8. 'self' → logprob: -12.00623607635498
    9. '__((' → logprob: -13.13123607635498
    10. '<|end|>' → logprob: -13.25623607635498

Token 139: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003266447747591883
    2. ' self' → logprob: -8.125327110290527
    3. ')' → logprob: -11.125327110290527
    4. 'size' → logprob: -11.625327110290527
    5. '
' → logprob: -13.000327110290527
    6. '   ' → logprob: -13.375327110290527
    7. ' ' → logprob: -13.750327110290527
    8. '):
' → logprob: -13.875327110290527
    9. ',' → logprob: -15.250327110290527
    10. '  ' → logprob: -15.875327110290527

Token 140: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008937406353652477
    2. '):
' → logprob: -5.133937358856201
    3. '):' → logprob: -6.383937358856201
    4. 'self' → logprob: -7.008937358856201
    5. ' ,' → logprob: -8.00893783569336
    6. ' self' → logprob: -10.88393783569336
    7. '   ' → logprob: -11.13393783569336
    8. ')' → logprob: -12.13393783569336
    9. '
' → logprob: -12.50893783569336
    10. ' ' → logprob: -12.50893783569336

Token 141: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10649792104959488
    2. ' self' → logprob: -2.3564980030059814
    3. ')' → logprob: -6.106497764587402
    4. ' ' → logprob: -7.356497764587402
    5. '20' → logprob: -7.481497764587402
    6. 'size' → logprob: -7.731497764587402
    7. '18' → logprob: -8.106497764587402
    8. '8' → logprob: -8.231497764587402
    9. '6' → logprob: -8.356497764587402
    10. '7' → logprob: -8.731497764587402

Token 142: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007318858522921801
    2. ' self' → logprob: -5.13231897354126
    3. '       ' → logprob: -7.13231897354126
    4. '#' → logprob: -7.63231897354126
    5. 'pass' → logprob: -10.507318496704102
    6. 'super' → logprob: -11.132318496704102
    7. '   ' → logprob: -11.257318496704102
    8. '
' → logprob: -11.257318496704102
    9. 'import' → logprob: -11.757318496704102
    10. 'from' → logprob: -11.757318496704102

Token 143: '.groups' (ID: 89749)
  Prédit: '.rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rows' → logprob: -1.431941270828247
    2. '._' → logprob: -1.556941270828247
    3. '.' → logprob: -1.806941270828247
    4. '.st' → logprob: -2.556941270828247
    5. '.board' → logprob: -2.556941270828247
    6. '.columns' → logprob: -3.306941270828247
    7. '.cells' → logprob: -3.306941270828247
    8. '.size' → logprob: -3.431941270828247
    9. '.groups' → logprob: -3.556941270828247
    10. '.positions' → logprob: -3.681941270828247

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016133492812514305
    2. '=' → logprob: -4.1411333084106445
    3. '=[]' → logprob: -9.391133308410645
    4. '<|end|>' → logprob: -11.641133308410645
    5. ':' → logprob: -12.641133308410645
    6. '<|end|>' → logprob: -14.016133308410645
    7. ' ' → logprob: -14.141133308410645
    8. ')' → logprob: -14.391133308410645
    9. '  ' → logprob: -14.516133308410645
    10. '[]' → logprob: -15.266133308410645

Token 145: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.07893858850002289
    2. '[]' → logprob: -2.5789384841918945
    3. ' [' → logprob: -10.078938484191895
    4. ' [
' → logprob: -12.703938484191895
    5. '[' → logprob: -13.578938484191895
    6. '[]}' → logprob: -13.703938484191895
    7. ' []
' → logprob: -14.203938484191895
    8. '[]
' → logprob: -14.828938484191895
    9. '[
' → logprob: -15.203938484191895
    10. ' {}' → logprob: -16.45393943786621

Token 146: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: '.white' (ID: 28729)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21254637837409973
    2. '.current' → logprob: -2.5875463485717773
    3. '.size' → logprob: -2.8375463485717773
    4. '.count' → logprob: -4.212546348571777
    5. '.width' → logprob: -4.462546348571777
    6. '.color' → logprob: -5.837546348571777
    7. '.score' → logprob: -5.962546348571777
    8. '._' → logprob: -6.087546348571777
    9. '.positions' → logprob: -6.212546348571777
    10. '.total' → logprob: -6.337546348571777

Token 149: '_count' (ID: 7536)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.6082927584648132
    2. '_count' → logprob: -1.233292818069458
    3. '_res' → logprob: -3.108292818069458
    4. '_c' → logprob: -3.108292818069458
    5. '_capture' → logprob: -4.233292579650879
    6. '_pr' → logprob: -4.483292579650879
    7. '_pass' → logprob: -4.733292579650879
    8. '_cap' → logprob: -4.858292579650879
    9. '_area' → logprob: -5.233292579650879
    10. '_st' → logprob: -5.483292579650879

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759713053703308
    2. '=' → logprob: -0.8259713053703308
    3. '<|end|>' → logprob: -10.950971603393555
    4. ' ' → logprob: -12.200971603393555
    5. '   ' → logprob: -12.325971603393555
    6. ',' → logprob: -13.825971603393555
    7. '<|end|>' → logprob: -13.825971603393555
    8. 's' → logprob: -14.075971603393555
    9. '  ' → logprob: -14.950971603393555
    10. ')' → logprob: -14.950971603393555

Token 151: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0487402006983757
    2. ' ' → logprob: -3.0487401485443115
    3. '20' → logprob: -9.92374038696289
    4. '19' → logprob: -10.54874038696289
    5. '10' → logprob: -11.42374038696289
    6. '  ' → logprob: -11.98624038696289
    7. '18' → logprob: -11.98624038696289
    8. '<|end|>' → logprob: -11.98624038696289
    9. '14' → logprob: -12.17374038696289
    10. '9' → logprob: -12.23624038696289

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016611411410849541
    2. ' ' → logprob: -9.500165939331055
    3. '15' → logprob: -9.875165939331055
    4. '7' → logprob: -11.750165939331055
    5. '20' → logprob: -12.375165939331055
    6. '25' → logprob: -12.562665939331055
    7. '14' → logprob: -12.812665939331055
    8. '10' → logprob: -12.812665939331055
    9. '12' → logprob: -12.812665939331055
    10. '18' → logprob: -13.250165939331055

Token 153: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01640230603516102
    2. '<|end|>' → logprob: -4.766402244567871
    3. '
' → logprob: -5.266402244567871
    4. 'self' → logprob: -6.766402244567871
    5. ' self' → logprob: -7.141402244567871
    6. '   ' → logprob: -7.891402244567871
    7. '<|end|>' → logprob: -9.891402244567871
    8. '	self' → logprob: -9.891402244567871
    9. '           ' → logprob: -10.391402244567871
    10. '(self' → logprob: -10.766402244567871

Token 154: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3860912322998047
    2. '
' → logprob: -1.6360912322998047
    3. '<|end|>' → logprob: -2.1360912322998047
    4. '   ' → logprob: -6.386091232299805
    5. '<|end|>' → logprob: -6.386091232299805
    6. ',' → logprob: -6.761091232299805
    7. 'self' → logprob: -6.886091232299805
    8. '    
' → logprob: -8.011091232299805
    9. '        
' → logprob: -8.011091232299805
    10. ' self' → logprob: -8.011091232299805

Token 155: ' def' (ID: 1056)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8416391611099243
    2. 'def' (adapté à ' def') → logprob: -1.4666391611099243
    3. '       ' → logprob: -1.8416391611099243
    4. '   ' → logprob: -2.0916390419006348
    5. ' self' → logprob: -2.9666390419006348
    6. ' def' → logprob: -6.466639041900635
    7. '	self' → logprob: -6.591639041900635
    8. ' ' → logprob: -7.091639041900635
    9. '
' → logprob: -8.091639518737793
    10. '  ' → logprob: -8.341639518737793

Token 156: ' place' (ID: 2475)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.009131867438554764
    2. 'add' → logprob: -5.009131908416748
    3. '_add' → logprob: -6.759131908416748
    4. ' def' → logprob: -8.00913143157959
    5. ' reset' → logprob: -8.13413143157959
    6. ' append' → logprob: -8.50913143157959
    7. ' clear' → logprob: -9.13413143157959
    8. 'def' → logprob: -9.88413143157959
    9. ' get' → logprob: -10.13413143157959
    10. '_' → logprob: -10.13413143157959

Token 157: '_st' (ID: 2518)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009875315241515636
    2. '(' → logprob: -5.259875297546387
    3. '_st' → logprob: -5.634875297546387
    4. 'stone' → logprob: -7.009875297546387
    5. '_group' → logprob: -9.884875297546387
    6. '(st' → logprob: -11.009875297546387
    7. ' stone' → logprob: -11.259875297546387
    8. 'self' → logprob: -11.384875297546387
    9. '_' → logprob: -11.384875297546387
    10. 'Stone' → logprob: -11.634875297546387

Token 158: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -7.76759916334413e-05
    2. 'ones' → logprob: -11.000077247619629
    3. '_one' → logprob: -11.500077247619629
    4. '```' → logprob: -11.625077247619629
    5. 'on' → logprob: -11.875077247619629
    6. '   ' → logprob: -12.125077247619629
    7. 'One' → logprob: -12.500077247619629
    8. 'o' → logprob: -12.625077247619629
    9. 'tone' → logprob: -12.625077247619629
    10. 'stone' → logprob: -13.125077247619629

Token 159: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.983476436696947e-05
    2. '(' → logprob: -9.625089645385742
    3. 'self' → logprob: -11.125089645385742
    4. '(s' → logprob: -12.000089645385742
    5. 's' → logprob: -13.125089645385742
    6. '(
' → logprob: -14.875089645385742
    7. ' self' → logprob: -16.250089645385742
    8. ' (' → logprob: -16.375089645385742
    9. '(cls' → logprob: -16.375089645385742
    10. '(sel' → logprob: -16.750089645385742

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0233379527926445
    2. 'self' → logprob: -3.7733378410339355
    3. ' self' → logprob: -10.773338317871094
    4. ' ,' → logprob: -10.773338317871094
    5. 'color' → logprob: -11.273338317871094
    6. '(self' → logprob: -11.273338317871094
    7. 's' → logprob: -11.773338317871094
    8. ',
' → logprob: -12.273338317871094
    9. ')' → logprob: -12.648338317871094
    10. ',self' → logprob: -12.648338317871094

Token 161: ' color' (ID: 3089)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.43006598949432373
    2. 'color' → logprob: -1.0550659894943237
    3. ' color' → logprob: -7.555066108703613
    4. ' self' → logprob: -7.680066108703613
    5. 'stone' → logprob: -8.430066108703613
    6. '   ' → logprob: -9.805066108703613
    7. ')' → logprob: -10.180066108703613
    8. '```' → logprob: -11.055066108703613
    9. 'c' → logprob: -11.180066108703613
    10. '
' → logprob: -11.555066108703613

Token 162: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030044477432966232
    2. ':' → logprob: -3.5300445556640625
    3. ' ,' → logprob: -8.905044555664062
    4. '):' → logprob: -9.280044555664062
    5. ':int' → logprob: -9.780044555664062
    6. ' :' → logprob: -12.780044555664062
    7. ':,' → logprob: -13.655044555664062
    8. ',int' → logprob: -13.780044555664062
    9. '   ' → logprob: -14.655044555664062
    10. ')' → logprob: -14.655044555664062

Token 163: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023306624963879585
    2. ' int' → logprob: -3.7733066082000732
    3. ':int' → logprob: -10.773306846618652
    4. ')' → logprob: -11.273306846618652
    5. ',int' → logprob: -12.398306846618652
    6. ' stone' → logprob: -12.398306846618652
    7. 'Stone' → logprob: -12.648306846618652
    8. '(int' → logprob: -12.898306846618652
    9. '[int' → logprob: -12.898306846618652
    10. '   ' → logprob: -12.898306846618652

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03597250580787659
    2. '):' → logprob: -3.4109725952148438
    3. '):
' → logprob: -6.785972595214844
    4. ' ,' → logprob: -7.410972595214844
    5. ')' → logprob: -7.535972595214844
    6. ' ):' → logprob: -10.410972595214844
    7. '   ' → logprob: -11.535972595214844
    8. ' ' → logprob: -13.035972595214844
    9. ',
' → logprob: -13.160972595214844
    10. '       ' → logprob: -13.285972595214844

Token 165: ' index' (ID: 3472)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6220105290412903
    2. ' count' → logprob: -0.8720105290412903
    3. ' position' → logprob: -3.6220104694366455
    4. 'position' → logprob: -4.622010707855225
    5. ' ' → logprob: -6.372010707855225
    6. 'pos' → logprob: -6.622010707855225
    7. ')' → logprob: -6.747010707855225
    8. ' group' → logprob: -7.497010707855225
    9. ' index' → logprob: -7.622010707855225
    10. 'group' → logprob: -7.747010707855225

Token 166: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09549567848443985
    2. '):' → logprob: -2.4704957008361816
    3. ':' → logprob: -5.220495700836182
    4. ')' → logprob: -7.220495700836182
    5. ' ,' → logprob: -8.345495223999023
    6. ' ):' → logprob: -9.470495223999023
    7. '):
' → logprob: -9.845495223999023
    8. ':int' → logprob: -11.595495223999023
    9. ' )' → logprob: -12.720495223999023
    10. ' ' → logprob: -13.407995223999023

Token 167: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09414230287075043
    2. ' int' → logprob: -2.469142198562622
    3. '):' → logprob: -5.594142436981201
    4. ')' → logprob: -7.844142436981201
    5. ':int' → logprob: -7.844142436981201
    6. '):
' → logprob: -8.344141960144043
    7. ' ' → logprob: -8.719141960144043
    8. 'None' → logprob: -9.844141960144043
    9. '0' → logprob: -10.219141960144043
    10. ':' → logprob: -10.219141960144043

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015665948390960693
    2. ',' → logprob: -4.2656660079956055
    3. '):
' → logprob: -6.6406660079956055
    4. ')' → logprob: -8.890666007995605
    5. ':' → logprob: -10.140666007995605
    6. '   ' → logprob: -12.265666007995605
    7. '       ' → logprob: -12.640666007995605
    8. ' ):' → logprob: -12.890666007995605
    9. '):
' → logprob: -13.015666007995605
    10. ' ,' → logprob: -13.640666007995605

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2348698228597641
    2. ' if' → logprob: -1.9848698377609253
    3. 'if' → logprob: -2.9848697185516357
    4. '#' → logprob: -4.234869956970215
    5. ' #' → logprob: -6.234869956970215
    6. '        ' → logprob: -6.484869956970215
    7. ' pass' → logprob: -6.859869956970215
    8. '   ' → logprob: -7.234869956970215
    9. ' for' → logprob: -8.109869956970215
    10. '    ' → logprob: -8.359869956970215

Token 170: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16558825969696045
    2. 'count' → logprob: -2.79058837890625
    3. '#' (adapté à ' #') → logprob: -3.29058837890625
    4. '       ' → logprob: -3.79058837890625
    5. ' if' → logprob: -4.29058837890625
    6. 'current' → logprob: -4.66558837890625
    7. 'new' → logprob: -6.04058837890625
    8. 'prev' → logprob: -6.41558837890625
    9. '   ' → logprob: -6.66558837890625
    10. 'pass' → logprob: -7.41558837890625

Token 171: ' index' (ID: 3472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19169412553310394
    2. '#' → logprob: -2.8166940212249756
    3. ' if' → logprob: -2.9416940212249756
    4. 'pass' → logprob: -4.191694259643555
    5. 'count' → logprob: -4.316694259643555
    6. '       ' → logprob: -4.441694259643555
    7. 'current' → logprob: -4.816694259643555
    8. ' pass' → logprob: -5.941694259643555
    9. 'prev' → logprob: -5.941694259643555
    10. ' #' → logprob: -6.566694259643555

Token 172: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30080726742744446
    2. '<|end|>' → logprob: -2.175807237625122
    3. ' =' → logprob: -2.800807237625122
    4. ' is' → logprob: -3.300807237625122
    5. ')' → logprob: -4.550807476043701
    6. '<|end|>' → logprob: -4.800807476043701
    7. 'is' → logprob: -5.675807476043701
    8. '#' → logprob: -5.800807476043701
    9. ' #' → logprob: -5.925807476043701
    10. '>=' → logprob: -5.925807476043701

Token 173: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8375820517539978
    2. '==' → logprob: -1.2125821113586426
    3. '>=' → logprob: -2.8375821113586426
    4. 'must' → logprob: -2.9625821113586426
    5. 'is' → logprob: -3.4625821113586426
    6. '<|end|>' → logprob: -3.4625821113586426
    7. '#' → logprob: -3.4625821113586426
    8. '<' → logprob: -4.212582111358643
    9. 'out' → logprob: -4.837582111358643
    10. 'should' → logprob: -4.962582111358643

Token 174: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.034132570028305054
    2. 'based' → logprob: -3.659132480621338
    3. '-' → logprob: -5.659132480621338
    4. ' -' → logprob: -6.409132480621338
    5. '-index' → logprob: -6.659132480621338
    6. '-base' → logprob: -7.534132480621338
    7. ' based' → logprob: -7.909132480621338
    8. ' <=' → logprob: -9.159132957458496
    9. 'Based' → logprob: -9.409132957458496
    10. '_based' → logprob: -10.034132957458496

Token 175: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9326663613319397
    2. ' so' → logprob: -2.057666301727295
    3. 'count' → logprob: -2.807666301727295
    4. 'assert' → logprob: -2.932666301727295
    5. 'if' → logprob: -3.307666301727295
    6. 'insert' → logprob: -3.307666301727295
    7. 'pos' → logprob: -3.432666301727295
    8. ' i' → logprob: -3.807666301727295
    9. '       ' → logprob: -3.807666301727295
    10. 'so' → logprob: -3.932666301727295

Token 177: ' unused' (ID: 38192)
  Prédit: ' internally'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' internally' → logprob: -0.4722211956977844
    2. ' internal' → logprob: -2.7222211360931396
    3. 'intern' → logprob: -2.8472211360931396
    4. '0' → logprob: -2.9722211360931396
    5. ' list' → logprob: -2.9722211360931396
    6. ' zero' → logprob: -3.5972211360931396
    7. ' the' → logprob: -3.8472211360931396
    8. ' ' → logprob: -4.347221374511719
    9. ' groups' → logprob: -4.597221374511719
    10. ' lists' → logprob: -4.847221374511719

Token 178: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: ' internal' (ID: 8812)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.6613629460334778
    2. 'now' → logprob: -0.7863629460334778
    3. 'this' → logprob: -4.036363124847412
    4. ' this' → logprob: -5.286363124847412
    5. 'the' → logprob: -6.911363124847412
    6. ' the' → logprob: -7.411363124847412
    7. 'placement' → logprob: -7.661363124847412
    8. 'group' → logprob: -7.661363124847412
    9. ' simplicity' → logprob: -8.036362648010254
    10. 'simp' → logprob: -8.161362648010254

Token 180: ' logic' (ID: 18485)
  Prédit: 'storage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'storage' → logprob: -0.6796196699142456
    2. 'implementation' → logprob: -2.304619789123535
    3. 'state' → logprob: -2.679619789123535
    4. ' logic' → logprob: -3.054619789123535
    5. 'index' → logprob: -3.179619789123535
    6. 'representation' → logprob: -3.304619789123535
    7. ' representation' → logprob: -3.554619789123535
    8. 'position' → logprob: -3.804619789123535
    9. 'logic' → logprob: -3.804619789123535
    10. ' implementation' → logprob: -3.804619789123535

Token 181: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3070976734161377
    2. '<|end|>' → logprob: -2.0570976734161377
    3. ' if' → logprob: -2.9320976734161377
    4. 'if' → logprob: -3.5570976734161377
    5. '
' → logprob: -3.5570976734161377
    6. '        
' → logprob: -4.932097434997559
    7. '        ' → logprob: -5.307097434997559
    8. '<|end|>' → logprob: -5.557097434997559
    9. ' stone' → logprob: -5.807097434997559
    10. 'pass' → logprob: -6.932097434997559

Token 182: ' parity' (ID: 113181)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07247523963451385
    2. ' for' → logprob: -3.0724751949310303
    3. 'to' → logprob: -4.197475433349609
    4. 'as' → logprob: -5.822475433349609
    5. 'in' → logprob: -6.322475433349609
    6. ' to' → logprob: -7.197475433349609
    7. ' as' → logprob: -7.322475433349609
    8. 'when' → logprob: -8.19747543334961
    9. 'possibly' → logprob: -8.19747543334961
    10. 'checking' → logprob: -8.32247543334961

Token 183: ' rule' (ID: 10652)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5946895480155945
    2. ' if' → logprob: -1.5946896076202393
    3. 'if' → logprob: -2.0946896076202393
    4. '<|end|>' → logprob: -3.4696896076202393
    5. '
' → logprob: -3.7196896076202393
    6. '        ' → logprob: -3.9696896076202393
    7. 'count' → logprob: -4.09468936920166
    8. 'color' → logprob: -5.21968936920166
    9. 'pass' → logprob: -5.34468936920166
    10. '<|end|>' → logprob: -5.84468936920166

Token 184: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7746342420578003
    2. '<|end|>' → logprob: -0.8996342420578003
    3. ' ' → logprob: -3.02463436126709
    4. '
' → logprob: -3.14963436126709
    5. '<|end|>' → logprob: -4.52463436126709
    6. '        ' → logprob: -4.77463436126709
    7. '        
' → logprob: -5.02463436126709
    8. ')' → logprob: -5.77463436126709
    9. ',' → logprob: -6.14963436126709
    10. ' if' → logprob: -6.27463436126709

Token 186: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.41001665592193604
    2. 'par' → logprob: -2.9100165367126465
    3. '       ' → logprob: -3.0350165367126465
    4. ' parity' → logprob: -3.4100165367126465
    5. ' if' → logprob: -3.6600165367126465
    6. 'new' → logprob: -3.6600165367126465
    7. 'color' → logprob: -3.6600165367126465
    8. '#' → logprob: -3.6600165367126465
    9. 'count' → logprob: -3.6600165367126465
    10. 'last' → logprob: -4.7850165367126465

Token 187: ' index' (ID: 3472)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.2778109312057495
    2. ' index' → logprob: -2.652811050415039
    3. 'color' → logprob: -3.027811050415039
    4. ' not' → logprob: -3.152811050415039
    5. ' len' → logprob: -3.402811050415039
    6. ' self' → logprob: -4.152811050415039
    7. ' (' → logprob: -4.652811050415039
    8. 'index' → logprob: -4.652811050415039
    9. 'len' → logprob: -5.777811050415039
    10. 'self' → logprob: -5.777811050415039

Token 188: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.05031147599220276
    2. ' ' → logprob: -3.17531156539917
    3. '%' → logprob: -5.30031156539917
    4. ' ==' → logprob: -6.42531156539917
    5. ' <=' → logprob: -8.300311088562012
    6. ' >' → logprob: -9.175311088562012
    7. ' <' → logprob: -9.300311088562012
    8. '<|end|>' → logprob: -9.425311088562012
    9. ' not' → logprob: -9.800311088562012
    10. '==' → logprob: -10.925311088562012

Token 189: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03811929374933243
    2. ' ' → logprob: -3.288119316101074
    3. '3' → logprob: -10.663119316101074
    4. '  ' → logprob: -11.288119316101074
    5. '   ' → logprob: -11.413119316101074
    6. '6' → logprob: -11.850619316101074
    7. '
' → logprob: -11.975619316101074
    8. '

' → logprob: -12.850619316101074
    9. '10' → logprob: -13.663119316101074
    10. '12' → logprob: -13.663119316101074

Token 190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.027225754223764e-05
    2. ' ' → logprob: -10.500060081481934
    3. '3' → logprob: -11.250060081481934
    4. '
' → logprob: -12.562560081481934
    5. '

' → logprob: -13.250060081481934
    6. '4' → logprob: -13.312560081481934
    7. '   ' → logprob: -13.562560081481934
    8. '15' → logprob: -13.562560081481934
    9. '6' → logprob: -13.625060081481934
    10. '  ' → logprob: -13.750060081481934

Token 191: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10030025988817215
    2. '==' → logprob: -2.3503003120422363
    3. ' !=' → logprob: -10.100299835205078
    4. ':' → logprob: -11.225299835205078
    5. ')==' → logprob: -11.600299835205078
    6. ' ' → logprob: -11.725299835205078
    7. '=' → logprob: -12.225299835205078
    8. '0' → logprob: -12.475299835205078
    9. '==
' → logprob: -12.475299835205078
    10. '()==' → logprob: -12.975299835205078

Token 192: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14540308713912964
    2. '0' → logprob: -2.0204031467437744
    3. '1' → logprob: -6.020402908325195
    4. '=' → logprob: -8.270402908325195
    5. '   ' → logprob: -11.832902908325195
    6. '  ' → logprob: -12.582902908325195
    7. 'self' → logprob: -12.582902908325195
    8. '==' → logprob: -12.582902908325195
    9. '```' → logprob: -12.832902908325195
    10. '
' → logprob: -13.020402908325195

Token 193: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0793621838092804
    2. '1' → logprob: -2.579362154006958
    3. ' ' → logprob: -7.954362392425537
    4. '2' → logprob: -9.204361915588379
    5. '   ' → logprob: -11.579361915588379
    6. '```' → logprob: -13.266861915588379
    7. '       ' → logprob: -13.329361915588379
    8. '  ' → logprob: -13.704361915588379
    9. '
' → logprob: -14.204361915588379
    10. '           ' → logprob: -14.641861915588379

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06316272169351578
    2. ':
' → logprob: -3.1881628036499023
    3. ' and' → logprob: -3.9381628036499023
    4. 'and' → logprob: -7.938162803649902
    5. ' :' → logprob: -10.313162803649902
    6. '       ' → logprob: -10.688162803649902
    7. ':

' → logprob: -10.813162803649902
    8. '           ' → logprob: -11.563162803649902
    9. ' or' → logprob: -11.688162803649902
    10. ':return' → logprob: -12.063162803649902

Token 195: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06145719438791275
    2. '
' → logprob: -4.43645715713501
    3. ' if' → logprob: -4.56145715713501
    4. ' and' → logprob: -4.81145715713501
    5. 'return' → logprob: -5.06145715713501
    6. ' return' → logprob: -5.43645715713501
    7. '       ' → logprob: -5.43645715713501
    8. 'if' → logprob: -5.68645715713501
    9. '#' → logprob: -5.81145715713501
    10. '   ' → logprob: -6.31145715713501

Token 196: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5397502183914185
    2. 'if' → logprob: -1.6647502183914185
    3. 'color' → logprob: -3.289750099182129
    4. 'count' → logprob: -3.414750099182129
    5. '       ' → logprob: -3.539750099182129
    6. 'current' → logprob: -3.789750099182129
    7. 'return' → logprob: -3.789750099182129
    8. '#' (adapté à ' #') → logprob: -3.789750099182129
    9. 'target' → logprob: -4.289750099182129
    10. '           ' → logprob: -4.789750099182129

Token 197: ' odd' (ID: 14210)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5140113234519958
    2. 'self' → logprob: -1.7640113830566406
    3. '#' → logprob: -2.0140113830566406
    4. 'color' → logprob: -3.7640113830566406
    5. 'raise' → logprob: -3.8890113830566406
    6. 'return' → logprob: -4.389011383056641
    7. 'pass' → logprob: -5.264011383056641
    8. '       ' → logprob: -5.264011383056641
    9. ' if' → logprob: -5.264011383056641
    10. 'target' → logprob: -5.764011383056641

Token 198: ' i' (ID: 575)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.5868744850158691
    2. 'if' → logprob: -1.8368744850158691
    3. ' if' → logprob: -2.086874485015869
    4. ' color' → logprob: -2.211874485015869
    5. '           ' → logprob: -2.336874485015869
    6. 'self' → logprob: -2.961874485015869
    7. ' stone' → logprob: -3.086874485015869
    8. 'stone' → logprob: -3.211874485015869
    9. 'count' → logprob: -3.336874485015869
    10. '#' → logprob: -3.711874485015869

Token 199: ':' (ID: 25)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.6363250613212585
    2. 'f' → logprob: -0.7613250613212585
    3. 'n' → logprob: -6.636324882507324
    4. 'ndice' → logprob: -7.136324882507324
    5. 'm' → logprob: -8.136324882507324
    6. 's' → logprob: -8.261324882507324
    7. 'index' → logprob: -8.761324882507324
    8. '#' → logprob: -9.261324882507324
    9. 'color' → logprob: -9.636324882507324
    10. 'nde' → logprob: -9.761324882507324

Token 200: ' just' (ID: 1327)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.422206997871399
    2. 'if' → logprob: -1.547206997871399
    3. ' if' → logprob: -1.672206997871399
    4. '#' → logprob: -2.5472068786621094
    5. ' self' → logprob: -2.6722068786621094
    6. '       ' → logprob: -3.6722068786621094
    7. ' place' → logprob: -3.9222068786621094
    8. '           ' → logprob: -4.172206878662109
    9. 'target' → logprob: -4.297206878662109
    10. ' new' → logprob: -4.422206878662109

Token 201: ' place' (ID: 2475)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.9930870532989502
    2. ' append' → logprob: -1.2430870532989502
    3. 'self' → logprob: -1.4930870532989502
    4. ' self' → logprob: -2.99308705329895
    5. ' add' → logprob: -3.36808705329895
    6. 'add' → logprob: -4.743086814880371
    7. '       ' → logprob: -5.368086814880371
    8. '#' → logprob: -5.743086814880371
    9. 'increment' → logprob: -5.743086814880371
    10. '           ' → logprob: -6.118086814880371

Token 202: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.3371604382991791
    2. 'stone' → logprob: -2.337160348892212
    3. 'self' → logprob: -2.712160348892212
    4. ' group' → logprob: -3.462160348892212
    5. ' self' → logprob: -3.962160348892212
    6. 'group' → logprob: -4.087160587310791
    7. ' a' → logprob: -4.087160587310791
    8. ' new' → logprob: -4.462160587310791
    9. 'new' → logprob: -5.087160587310791
    10. ' at' → logprob: -5.462160587310791

Token 203: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8916317820549011
    2. ' if' → logprob: -1.391631841659546
    3. ',' → logprob: -1.891631841659546
    4. 'self' → logprob: -2.766631841659546
    5. 'if' → logprob: -2.766631841659546
    6. ' in' → logprob: -3.766631841659546
    7. ' self' → logprob: -4.641631603240967
    8. ' at' → logprob: -5.016631603240967
    9. ' on' → logprob: -5.516631603240967
    10. ' and' → logprob: -5.641631603240967

Token 204: ' i' (ID: 575)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.22099429368972778
    2. 'end' → logprob: -1.970994234085083
    3. ' the' → logprob: -2.970994234085083
    4. ' end' → logprob: -5.720994472503662
    5. 'self' → logprob: -6.470994472503662
    6. 'start' → logprob: -6.470994472503662
    7. 'white' → logprob: -8.095993995666504
    8. 'a' → logprob: -8.345993995666504
    9. 'front' → logprob: -8.595993995666504
    10. 'begin' → logprob: -8.720993995666504

Token 205: '-th' (ID: 14928)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6952951550483704
    2. '       ' → logprob: -1.6952950954437256
    3. ' self' → logprob: -2.3202950954437256
    4. '
' → logprob: -2.5702950954437256
    5. '           ' → logprob: -3.1952950954437256
    6. ' if' → logprob: -3.3202950954437256
    7. ',' → logprob: -3.3202950954437256
    8. 'if' → logprob: -4.320295333862305
    9. ' group' → logprob: -5.195295333862305
    10. ' and' → logprob: -6.195295333862305

Token 206: ' position' (ID: 4010)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.7588186264038086
    2. ' position' → logprob: -1.5088186264038086
    3. 'group' → logprob: -2.1338186264038086
    4. 'position' → logprob: -2.3838186264038086
    5. ' place' → logprob: -3.8838186264038086
    6. ' stone' → logprob: -4.008818626403809
    7. 'stone' → logprob: -4.133818626403809
    8. '<|end|>' → logprob: -5.258818626403809
    9. ' white' → logprob: -5.383818626403809
    10. 'place' → logprob: -5.383818626403809

Token 207: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5174103379249573
    2. '           ' → logprob: -1.3924102783203125
    3. 'self' → logprob: -2.2674102783203125
    4. ',' → logprob: -3.8924102783203125
    5. ' if' → logprob: -4.2674102783203125
    6. ' self' → logprob: -5.2674102783203125
    7. '
' → logprob: -5.5174102783203125
    8. 'if' → logprob: -5.7674102783203125
    9. '<|end|>' → logprob: -6.5174102783203125
    10. ' and' → logprob: -7.3924102783203125

Token 208: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10280729085206985
    2. 'if' → logprob: -3.1028072834014893
    3. '#' → logprob: -3.7278072834014893
    4. '       ' → logprob: -4.602807521820068
    5. ' self' → logprob: -5.477807521820068
    6. 'group' → logprob: -5.602807521820068
    7. '           ' → logprob: -5.852807521820068
    8. 'return' → logprob: -6.477807521820068
    9. 'pass' → logprob: -6.477807521820068
    10. 'new' → logprob: -6.602807521820068

Token 209: ' groups' (ID: 8896)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.120707392692566
    2. 'merge' → logprob: -1.120707392692566
    3. 'mer' → logprob: -1.745707392692566
    4. 'changes' → logprob: -2.6207075119018555
    5. 'adj' → logprob: -3.9957075119018555
    6. ' merging' → logprob: -4.1207075119018555
    7. ' change' → logprob: -4.3707075119018555
    8. 'self' → logprob: -4.7457075119018555
    9. ' merge' → logprob: -4.8707075119018555
    10. 'group' → logprob: -5.1207075119018555

Token 210: ' replacement' (ID: 19207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33188551664352417
    2. ' =' → logprob: -2.331885576248169
    3. ',' → logprob: -3.331885576248169
    4. '.append' → logprob: -3.331885576248169
    5. '           ' → logprob: -3.831885576248169
    6. '.' → logprob: -3.956885576248169
    7. '<|end|>' → logprob: -3.956885576248169
    8. '
' → logprob: -4.33188533782959
    9. '=' → logprob: -4.70688533782959
    10. '<|end|>' → logprob: -4.95688533782959

Token 211: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5000532269477844
    2. '           ' → logprob: -1.7500531673431396
    3. ',' → logprob: -2.0000531673431396
    4. '<|end|>' → logprob: -3.7500531673431396
    5. '.' → logprob: -4.000053405761719
    6. ' or' → logprob: -4.500053405761719
    7. '<|end|>' → logprob: -4.625053405761719
    8. 'return' → logprob: -4.750053405761719
    9. '
' → logprob: -5.125053405761719
    10. ';' → logprob: -6.250053405761719

Token 212: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6217009425163269
    2. '           ' → logprob: -0.8717009425163269
    3. 'self' → logprob: -3.4967010021209717
    4. ' self' → logprob: -4.371700763702393
    5. ',' → logprob: -7.371700763702393
    6. ' if' → logprob: -8.24670124053955
    7. '        
' → logprob: -8.74670124053955
    8. '               ' → logprob: -8.99670124053955
    9. '            
' → logprob: -9.74670124053955
    10. '        ' → logprob: -9.99670124053955

Token 213: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018532203510403633
    2. 'new' → logprob: -4.6435322761535645
    3. 'group' → logprob: -5.3935322761535645
    4. '       ' → logprob: -5.8935322761535645
    5. 'if' → logprob: -6.7685322761535645
    6. ' self' → logprob: -8.393531799316406
    7. '           ' → logprob: -11.018531799316406
    8. '#' (adapté à ' #') → logprob: -11.893531799316406
    9. ' new' → logprob: -12.143531799316406
    10. 'pass' → logprob: -12.268531799316406

Token 214: ' Implement' (ID: 32889)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01927793398499489
    2. 'group' → logprob: -4.894278049468994
    3. 'if' → logprob: -5.144278049468994
    4. 'new' → logprob: -5.644278049468994
    5. '       ' → logprob: -6.894278049468994
    6. ' self' → logprob: -7.144278049468994
    7. '#' → logprob: -8.894277572631836
    8. 'return' → logprob: -9.144277572631836
    9. '           ' → logprob: -10.144277572631836
    10. 'grp' → logprob: -10.519277572631836

Token 215: 'ed' (ID: 295)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.37580183148384094
    2. '       ' → logprob: -1.5008018016815186
    3. ' self' → logprob: -2.8758018016815186
    4. '           ' → logprob: -4.000802040100098
    5. 'if' → logprob: -4.750802040100098
    6. ' if' → logprob: -5.375802040100098
    7. 'group' → logprob: -6.875802040100098
    8. '#' → logprob: -8.000802040100098
    9. ' group' → logprob: -8.000802040100098
    10. 'new' → logprob: -8.250802040100098

Token 216: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9009023308753967
    2. 'self' → logprob: -1.275902271270752
    3. ' by' → logprob: -2.150902271270752
    4. '       ' → logprob: -2.525902271270752
    5. ' as' → logprob: -2.775902271270752
    6. ' self' → logprob: -4.400902271270752
    7. '
' → logprob: -4.775902271270752
    8. ',' → logprob: -5.150902271270752
    9. '            
' → logprob: -5.650902271270752
    10. ':' → logprob: -5.775902271270752

Token 217: ' app' (ID: 1053)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013038103468716145
    2. ' self' → logprob: -4.763038158416748
    3. 'app' → logprob: -5.763038158416748
    4. 'adding' → logprob: -7.513038158416748
    5. 'in' → logprob: -8.51303768157959
    6. 'append' → logprob: -8.88803768157959
    7. '   ' → logprob: -9.13803768157959
    8. ' app' → logprob: -9.26303768157959
    9. 'increment' → logprob: -9.63803768157959
    10. ' adding' → logprob: -10.26303768157959

Token 218: 'ending' (ID: 3258)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.048722147941589355
    2. 'ending' → logprob: -3.048722267150879
    3. '   ' → logprob: -9.298722267150879
    4. '
' → logprob: -10.923722267150879
    5. '       ' → logprob: -12.423722267150879
    6. ' end' → logprob: -12.923722267150879
    7. '

' → logprob: -12.923722267150879
    8. '#' → logprob: -13.298722267150879
    9. '    ' → logprob: -13.298722267150879
    10. '```' → logprob: -13.423722267150879

Token 219: ' this' (ID: 495)
  Prédit: ' Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Stone' → logprob: -0.14563672244548798
    2. 'Stone' → logprob: -2.020636796951294
    3. '           ' → logprob: -6.270636558532715
    4. ' a' → logprob: -7.520636558532715
    5. '       ' → logprob: -9.145636558532715
    6. '(' → logprob: -9.145636558532715
    7. ' new' → logprob: -9.895636558532715
    8. 'new' → logprob: -10.020636558532715
    9. ' stone' → logprob: -10.395636558532715
    10. 'St' → logprob: -10.395636558532715

Token 220: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.3901311159133911
    2. 'Stone' → logprob: -1.3901311159133911
    3. 'stone' → logprob: -3.2651309967041016
    4. ' Stone' → logprob: -4.140130996704102
    5. '       ' → logprob: -5.390130996704102
    6. ' to' → logprob: -5.515130996704102
    7. ' new' → logprob: -6.515130996704102
    8. ' as' → logprob: -6.515130996704102
    9. '_st' → logprob: -6.890130996704102
    10. 'to' → logprob: -6.890130996704102

Token 221: ' alone' (ID: 11238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0474909543991089
    2. '           ' → logprob: -1.0474909543991089
    3. ' to' → logprob: -1.6724909543991089
    4. 'Stone' → logprob: -2.7974910736083984
    5. ' Stone' → logprob: -4.297491073608398
    6. ',' → logprob: -4.547491073608398
    7. 'self' → logprob: -5.047491073608398
    8. 'to' → logprob: -5.172491073608398
    9. ')' → logprob: -6.422491073608398
    10. '               ' → logprob: -6.672491073608398

Token 222: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3866024613380432
    2. '       ' → logprob: -1.7616024017333984
    3. '           ' → logprob: -2.7616024017333984
    4. 'to' → logprob: -3.2616024017333984
    5. ',' → logprob: -4.386602401733398
    6. 'Stone' → logprob: -4.511602401733398
    7. ' Stone' → logprob: -5.011602401733398
    8. 'self' → logprob: -5.511602401733398
    9. '.append' → logprob: -6.261602401733398
    10. '.' → logprob: -6.261602401733398

Token 223: 'concept' (ID: 109223)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.19394166767597198
    2. 'self' → logprob: -2.068941593170166
    3. ' Stone' → logprob: -3.693941593170166
    4. ')' → logprob: -4.693941593170166
    5. '       ' → logprob: -4.943941593170166
    6. '           ' → logprob: -5.443941593170166
    7. ' self' → logprob: -5.943941593170166
    8. ')
' → logprob: -7.693941593170166
    9. 'if' → logprob: -8.068942070007324
    10. '   ' → logprob: -8.693942070007324

Token 224: 'ually' (ID: 2346)
  Prédit: 'ually'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ually' → logprob: -0.02661261335015297
    2. '       ' → logprob: -4.151612758636475
    3. '           ' → logprob: -5.151612758636475
    4. ')' → logprob: -6.526612758636475
    5. 'ual' → logprob: -6.651612758636475
    6. '   ' → logprob: -7.026612758636475
    7. ':' → logprob: -8.151612281799316
    8. '```' → logprob: -9.026612281799316
    9. '=' → logprob: -9.151612281799316
    10. '        ' → logprob: -9.276612281799316

Token 225: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02130398340523243
    2. ' )' → logprob: -5.271304130554199
    3. ' to' → logprob: -5.396304130554199
    4. '       ' → logprob: -6.021304130554199
    5. ').' → logprob: -6.021304130554199
    6. ' as' → logprob: -6.521304130554199
    7. 'to' → logprob: -7.021304130554199
    8. ' at' → logprob: -7.146304130554199
    9. ')
' → logprob: -7.396304130554199
    10. '           ' → logprob: -7.521304130554199

Token 226: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03528653830289841
    2. '           ' → logprob: -3.5352864265441895
    3. 'self' → logprob: -6.2852864265441895
    4. ')' → logprob: -7.1602864265441895
    5. '.' → logprob: -7.4102864265441895
    6. ' self' → logprob: -7.4102864265441895
    7. ',' → logprob: -7.7852864265441895
    8. ' to' → logprob: -8.285286903381348
    9. '        
' → logprob: -8.535286903381348
    10. ' if' → logprob: -8.910286903381348

Token 227: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06683521717786789
    2. ' self' → logprob: -3.0668351650238037
    3. '       ' → logprob: -4.066835403442383
    4. 'if' → logprob: -7.566835403442383
    5. '           ' → logprob: -8.191835403442383
    6. ' if' → logprob: -9.316835403442383
    7. 'new' → logprob: -10.316835403442383
    8. 'group' → logprob: -11.941835403442383
    9. '   ' → logprob: -12.316835403442383
    10. '	self' → logprob: -12.566835403442383

Token 228: ' But' (ID: 3072)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39664557576179504
    2. '           ' → logprob: -1.2716455459594727
    3. ' self' → logprob: -3.7716455459594727
    4. '       ' → logprob: -3.7716455459594727
    5. 'if' → logprob: -7.646645545959473
    6. 'new' → logprob: -8.521645545959473
    7. 'group' → logprob: -9.021645545959473
    8. ' if' → logprob: -9.146645545959473
    9. 'color' → logprob: -10.396645545959473
    10. 'stone' → logprob: -10.521645545959473

Token 229: ' we' (ID: 581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.520573616027832
    2. ' if' → logprob: -1.020573616027832
    3. 'self' → logprob: -3.520573616027832
    4. '           ' → logprob: -5.395573616027832
    5. ' self' → logprob: -5.645573616027832
    6. '#' → logprob: -5.770573616027832
    7. 'return' → logprob: -6.395573616027832
    8. '       ' → logprob: -6.770573616027832
    9. 'continue' → logprob: -8.145573616027832
    10. ' return' → logprob: -8.395573616027832

Token 230: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.448220819234848
    2. ' should' → logprob: -2.823220729827881
    3. 'need' → logprob: -2.823220729827881
    4. 'continue' → logprob: -3.573220729827881
    5. 'self' → logprob: -3.698220729827881
    6. ' can' → logprob: -3.823220729827881
    7. 'append' → logprob: -3.948220729827881
    8. ' continue' → logprob: -3.948220729827881
    9. 'should' → logprob: -4.198220729827881
    10. ' don't' → logprob: -4.323220729827881

Token 231: ' maintain' (ID: 12930)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.9566648006439209
    2. '       ' → logprob: -1.206664800643921
    3. ' check' → logprob: -2.581664800643921
    4. 'check' → logprob: -3.206664800643921
    5. 'self' → logprob: -3.581664800643921
    6. ' self' → logprob: -3.956664800643921
    7. ' also' → logprob: -4.0816650390625
    8. ' add' → logprob: -4.2066650390625
    9. ' append' → logprob: -4.2066650390625
    10. ' first' → logprob: -4.2066650390625

Token 232: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4647844731807709
    2. 'the' → logprob: -1.5897845029830933
    3. ' the' → logprob: -2.4647843837738037
    4. ' self' → logprob: -3.8397843837738037
    5. 'groups' → logprob: -4.339784622192383
    6. 'a' → logprob: -4.339784622192383
    7. 'group' → logprob: -4.464784622192383
    8. ' a' → logprob: -5.464784622192383
    9. ' groups' → logprob: -6.089784622192383
    10. 'correct' → logprob: -6.214784622192383

Token 233: ' stack' (ID: 10825)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1399675607681274
    2. 'groups' → logprob: -1.1399675607681274
    3. ' groups' → logprob: -2.639967441558838
    4. 'par' → logprob: -2.639967441558838
    5. 'group' → logprob: -3.639967441558838
    6. 'color' → logprob: -3.764967441558838
    7. 'white' → logprob: -4.264967441558838
    8. 'correct' → logprob: -4.514967441558838
    9. ' invariant' → logprob: -4.514967441558838
    10. 'list' → logprob: -4.639967441558838

Token 234: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4757058322429657
    2. ' of' → logprob: -2.725705862045288
    3. ' =' → logprob: -2.975705862045288
    4. '.append' → logprob: -3.350705862045288
    5. '        
' → logprob: -3.600705862045288
    6. ',' → logprob: -3.725705862045288
    7. '<|end|>' → logprob: -3.725705862045288
    8. '=[]' → logprob: -4.225705623626709
    9. '<|end|>' → logprob: -4.225705623626709
    10. ' self' → logprob: -4.600705623626709

Token 235: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.18600837886333466
    2. ' groups' → logprob: -2.4360084533691406
    3. 'Stone' → logprob: -3.1860084533691406
    4. 'self' → logprob: -3.5610084533691406
    5. ' Stone' → logprob: -4.686008453369141
    6. ' self' → logprob: -6.186008453369141
    7. 'stones' → logprob: -8.18600845336914
    8. ' stones' → logprob: -8.31100845336914
    9. 'stone' → logprob: -8.43600845336914
    10. ' stone' → logprob: -8.56100845336914

Token 236: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20327948033809662
    2. ' if' → logprob: -2.453279495239258
    3. '<|end|>' → logprob: -3.203279495239258
    4. ',' → logprob: -4.703279495239258
    5. '<|end|>' → logprob: -4.703279495239258
    6. '
' → logprob: -5.203279495239258
    7. '.' → logprob: -5.703279495239258
    8. ' and' → logprob: -5.703279495239258
    9. 'if' → logprob: -5.953279495239258
    10. ':' → logprob: -6.078279495239258

Token 237: ' efficiency' (ID: 17456)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.6731653809547424
    2. 'cons' → logprob: -2.1731653213500977
    3. 'the' → logprob: -2.9231653213500977
    4. 'f' → logprob: -3.1731653213500977
    5. 'efficient' → logprob: -3.1731653213500977
    6. 'possible' → logprob: -3.2981653213500977
    7. 'future' → logprob: -3.9231653213500977
    8. 'color' → logprob: -4.048165321350098
    9. 'proper' → logprob: -4.298165321350098
    10. 'mer' → logprob: -4.423165321350098

Token 238: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20801596343517303
    2. '           ' → logprob: -2.3330159187316895
    3. ' if' → logprob: -3.4580159187316895
    4. '<|end|>' → logprob: -3.9580159187316895
    5. '<|end|>' → logprob: -4.7080159187316895
    6. '        
' → logprob: -4.7080159187316895
    7. ',' → logprob: -4.8330159187316895
    8. 'if' → logprob: -5.8330159187316895
    9. ' and' → logprob: -5.9580159187316895
    10. '
' → logprob: -6.3330159187316895

Token 239: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5181655287742615
    2. '           ' → logprob: -1.0181655883789062
    3. ' if' → logprob: -4.393165588378906
    4. '<|end|>' → logprob: -4.393165588378906
    5. '        
' → logprob: -4.643165588378906
    6. '            
' → logprob: -6.893165588378906
    7. '<|end|>' → logprob: -6.893165588378906
    8. 'self' → logprob: -7.268165588378906
    9. ' self' → logprob: -7.268165588378906
    10. ')' → logprob: -7.268165588378906

Token 240: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.761934757232666
    2. 'self' (adapté à ' self') → logprob: -1.136934757232666
    3. ' self' → logprob: -2.011934757232666
    4. ' if' → logprob: -3.261934757232666
    5. 'if' → logprob: -3.886934757232666
    6. '           ' → logprob: -4.136934757232666
    7. 'new' → logprob: -6.261934757232666
    8. ' new' → logprob: -6.886934757232666
    9. 'group' → logprob: -7.761934757232666
    10. ' group' → logprob: -9.136934280395508

Token 241: '._' (ID: 2697)
  Prédit: '.groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.groups' → logprob: -3.500108141452074e-05
    2. '       ' → logprob: -11.500035285949707
    3. 'groups' → logprob: -11.875035285949707
    4. ' .' → logprob: -12.250035285949707
    5. '.' → logprob: -12.500035285949707
    6. '.place' → logprob: -13.000035285949707
    7. '   ' → logprob: -13.000035285949707
    8. '.white' → logprob: -13.625035285949707
    9. ').' → logprob: -14.500035285949707
    10. '.group' → logprob: -14.500035285949707

Token 242: 'add' (ID: 964)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.4799278974533081
    2. 'add' → logprob: -1.604927897453308
    3. 'groups' → logprob: -1.979927897453308
    4. 'place' → logprob: -4.479928016662598
    5. 'merge' → logprob: -4.479928016662598
    6. 'insert' → logprob: -4.729928016662598
    7. 'push' → logprob: -6.354928016662598
    8. 'replace' → logprob: -6.729928016662598
    9. 'handle' → logprob: -6.854928016662598
    10. 'split' → logprob: -6.979928016662598

Token 243: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.5294650197029114
    2. '_group' → logprob: -0.9044650197029114
    3. 'Stone' → logprob: -5.529465198516846
    4. '(' → logprob: -6.904465198516846
    5. ' Stone' → logprob: -7.279465198516846
    6. 'Group' → logprob: -8.779464721679688
    7. 'group' → logprob: -9.154464721679688
    8. '_' → logprob: -9.529464721679688
    9. '_single' → logprob: -9.529464721679688
    10. '(Group' → logprob: -9.654464721679688

Token 244: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -7.898723561083898e-05
    2. '_one' → logprob: -10.000079154968262
    3. 'One' → logprob: -10.875079154968262
    4. ' one' → logprob: -12.375079154968262
    5. 'rone' → logprob: -12.625079154968262
    6. 'ones' → logprob: -13.125079154968262
    7. '   ' → logprob: -14.250079154968262
    8. '(one' → logprob: -14.750079154968262
    9. 'ONE' → logprob: -14.875079154968262
    10. '```' → logprob: -14.875079154968262

Token 245: '(color' (ID: 27329)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7161099314689636
    2. '(color' → logprob: -0.7161099314689636
    3. '_group' → logprob: -4.341109752655029
    4. '(Group' → logprob: -5.466109752655029
    5. '(St' → logprob: -6.591109752655029
    6. '(group' → logprob: -6.591109752655029
    7. '(Color' → logprob: -6.966109752655029
    8. 'group' → logprob: -7.716109752655029
    9. '_to' → logprob: -8.341110229492188
    10. '_st' → logprob: -8.841110229492188

Token 246: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.429623544216156
    2. ')' → logprob: -1.0546236038208008
    3. ' ,' → logprob: -7.804623603820801
    4. ' )' → logprob: -7.804623603820801
    5. ')
' → logprob: -10.3046236038208
    6. '))' → logprob: -11.3046236038208
    7. ',)' → logprob: -11.8046236038208
    8. ')`' → logprob: -12.0546236038208
    9. ')}' → logprob: -12.4296236038208
    10. '   ' → logprob: -12.5546236038208

Token 247: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7221850156784058
    2. 'else' (adapté à ' else') → logprob: -0.9721850156784058
    3. ' else' → logprob: -2.0971851348876953
    4. '   ' → logprob: -4.847185134887695
    5. '<|end|>' → logprob: -5.597185134887695
    6. 'elif' → logprob: -7.222185134887695
    7. '	else' → logprob: -7.972185134887695
    8. ' elif' → logprob: -8.472185134887695
    9. '<|end|>' → logprob: -9.347185134887695
    10. '           ' → logprob: -9.597185134887695

Token 249: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43027302622795105
    2. ':' → logprob: -1.0552730560302734
    3. '           ' → logprob: -6.680273056030273
    4. '       ' → logprob: -8.180273056030273
    5. ',' → logprob: -10.805273056030273
    6. '   ' → logprob: -12.680273056030273
    7. ':

' → logprob: -12.805273056030273
    8. ':
' → logprob: -13.305273056030273
    9. ' :
' → logprob: -13.430273056030273
    10. '          ' → logprob: -13.930273056030273

Token 250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03692125156521797
    2. '       ' → logprob: -3.536921262741089
    3. '#' → logprob: -5.66192102432251
    4. 'self' → logprob: -5.78692102432251
    5. ' self' → logprob: -7.78692102432251
    6. ' #' → logprob: -9.911921501159668
    7. '```' → logprob: -10.786921501159668
    8. 'if' → logprob: -11.161921501159668
    9. 'pass' → logprob: -11.161921501159668
    10. '	       ' → logprob: -11.536921501159668

Token 251: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6841086149215698
    2. '#' (adapté à ' #') → logprob: -1.4341086149215698
    3. 'self' → logprob: -1.6841086149215698
    4. ' self' → logprob: -2.9341087341308594
    5. ' #' → logprob: -5.184108734130859
    6. 'if' → logprob: -5.559108734130859
    7. ' if' → logprob: -5.809108734130859
    8. 'prev' → logprob: -6.184108734130859
    9. '           ' → logprob: -7.434108734130859
    10. 'existing' → logprob: -7.684108734130859

Token 252: ' even' (ID: 1952)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5443445444107056
    2. 'self' → logprob: -1.0443445444107056
    3. ' self' → logprob: -3.169344425201416
    4. '       ' → logprob: -4.794344425201416
    5. ' #' → logprob: -5.294344425201416
    6. '           ' → logprob: -5.669344425201416
    7. 'if' → logprob: -5.794344425201416
    8. 'prev' → logprob: -6.794344425201416
    9. ' if' → logprob: -6.919344425201416
    10. 'color' → logprob: -7.169344425201416

Token 253: ' i' (ID: 575)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.3889395594596863
    2. '           ' → logprob: -2.388939619064331
    3. '       ' → logprob: -2.888939619064331
    4. ')' → logprob: -3.388939619064331
    5. ':' → logprob: -3.513939619064331
    6. 'color' → logprob: -3.763939619064331
    7. ' index' → logprob: -4.013939380645752
    8. '<|end|>' → logprob: -4.513939380645752
    9. '<|end|>' → logprob: -4.763939380645752
    10. ' color' → logprob: -5.138939380645752

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2039954960346222
    2. ':
' → logprob: -2.3289954662323
    3. '           ' → logprob: -2.4539954662323
    4. 'self' → logprob: -8.203995704650879
    5. ',' → logprob: -8.453995704650879
    6. '       ' → logprob: -8.953995704650879
    7. ':

' → logprob: -9.328995704650879
    8. ':self' → logprob: -9.328995704650879
    9. ' and' → logprob: -10.078995704650879
    10. '#' → logprob: -10.078995704650879

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6303260326385498
    2. ' self' → logprob: -1.5053260326385498
    3. '       ' → logprob: -2.13032603263855
    4. 'self' → logprob: -2.63032603263855
    5. ' if' → logprob: -3.13032603263855
    6. 'if' → logprob: -5.255326271057129
    7. '#' → logprob: -5.505326271057129
    8. ' #' → logprob: -7.130326271057129
    9. '
' → logprob: -8.255326271057129
    10. '               ' → logprob: -8.880326271057129

Token 256: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.665142297744751
    2. 'self' → logprob: -1.290142297744751
    3. '       ' → logprob: -2.290142297744751
    4. ' self' → logprob: -3.290142297744751
    5. 'if' (adapté à ' if') → logprob: -3.665142297744751
    6. '           ' → logprob: -3.790142297744751
    7. ' #' → logprob: -4.665142059326172
    8. ' if' → logprob: -4.665142059326172
    9. 'prev' → logprob: -6.915142059326172
    10. 'existing' → logprob: -7.165142059326172

Token 257: ' not' (ID: 625)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.36127758026123047
    2. ' self' → logprob: -1.7362775802612305
    3. 'len' → logprob: -3.1112775802612305
    4. ' len' → logprob: -3.3612775802612305
    5. 'color' → logprob: -3.3612775802612305
    6. ' color' → logprob: -4.7362775802612305
    7. 'index' → logprob: -6.6112775802612305
    8. ' not' → logprob: -6.8612775802612305
    9. 'not' → logprob: -7.1112775802612305
    10. ' index' → logprob: -7.7362775802612305

Token 258: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020566178485751152
    2. ' self' → logprob: -3.89556622505188
    3. '(self' → logprob: -11.5205659866333
    4. ' ' → logprob: -13.2705659866333
    5. '	self' → logprob: -13.2705659866333
    6. 'color' → logprob: -13.2705659866333
    7. '   ' → logprob: -13.3955659866333
    8. 'not' → logprob: -14.0205659866333
    9. '       ' → logprob: -14.0830659866333
    10. 'any' → logprob: -14.1455659866333

Token 259: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -7.100059156073257e-05
    2. '._' → logprob: -10.500070571899414
    3. 'groups' → logprob: -11.000070571899414
    4. '.' → logprob: -11.375070571899414
    5. '.place' → logprob: -11.875070571899414
    6. '.white' → logprob: -12.875070571899414
    7. ' .' → logprob: -13.625070571899414
    8. '.group' → logprob: -14.375070571899414
    9. '_.' → logprob: -15.000070571899414
    10. '.tables' → logprob: -15.125070571899414

Token 260: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0631929263472557
    2. ':' → logprob: -3.438192844390869
    3. 'or' → logprob: -3.563192844390869
    4. ':
' → logprob: -7.938192844390869
    5. '           ' → logprob: -8.188193321228027
    6. '               ' → logprob: -10.063193321228027
    7. '   ' → logprob: -10.563193321228027
    8. ':return' → logprob: -11.063193321228027
    9. '       ' → logprob: -11.313193321228027
    10. '          ' → logprob: -11.438193321228027

Token 261: '               ' (ID: 506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7220702767372131
    2. '               ' → logprob: -0.7220702767372131
    3. ':' → logprob: -3.9720702171325684
    4. ':
' → logprob: -4.847070217132568
    5. ' and' → logprob: -6.972070217132568
    6. '           ' → logprob: -8.347070693969727
    7. ':return' → logprob: -8.347070693969727
    8. ',' → logprob: -9.722070693969727
    9. '():
' → logprob: -9.847070693969727
    10. 'or' → logprob: -9.847070693969727

Token 262: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3864504098892212
    2. ' self' → logprob: -1.6364504098892212
    3. '           ' → logprob: -2.5114502906799316
    4. 'return' → logprob: -3.8864502906799316
    5. ' return' → logprob: -4.511450290679932
    6. '                   ' → logprob: -4.886450290679932
    7. '               ' → logprob: -5.261450290679932
    8. '   ' → logprob: -8.63645076751709
    9. 'raise' → logprob: -9.26145076751709
    10. '#' (adapté à ' #') → logprob: -9.76145076751709

Token 263: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7180168628692627
    2. ' self' → logprob: -0.9680168628692627
    3. ' return' → logprob: -2.5930168628692627
    4. 'return' → logprob: -3.0930168628692627
    5. '               ' → logprob: -4.718016624450684
    6. '           ' → logprob: -6.218016624450684
    7. '#' → logprob: -7.218016624450684
    8. '                   ' → logprob: -8.843016624450684
    9. '   ' → logprob: -8.968016624450684
    10. ' #' → logprob: -9.343016624450684

Token 264: ' stone' (ID: 14352)
  Prédit: ' groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groups' → logprob: -0.2657689154148102
    2. 'groups' → logprob: -2.0157690048217773
    3. ' stone' → logprob: -2.7657690048217773
    4. ' stones' → logprob: -4.265769004821777
    5. 'self' → logprob: -5.515769004821777
    6. ' Stone' → logprob: -5.765769004821777
    7. 'stone' → logprob: -5.765769004821777
    8. 'stones' → logprob: -5.765769004821777
    9. ' group' → logprob: -6.015769004821777
    10. 'Stone' → logprob: -6.265769004821777

Token 265: ' placed' (ID: 12989)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.115817666053772
    2. 'self' → logprob: -1.615817666053772
    3. 's' → logprob: -2.7408175468444824
    4. 'group' → logprob: -2.8658175468444824
    5. 'placed' → logprob: -2.9908175468444824
    6. ',' → logprob: -3.4908175468444824
    7. ' placed' → logprob: -3.4908175468444824
    8. ' to' → logprob: -3.6158175468444824
    9. 'groups' → logprob: -3.7408175468444824
    10. '       ' → logprob: -3.9908175468444824

Token 266: ' yet' (ID: 5073)
  Prédit: ' yet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yet' → logprob: -0.06552475690841675
    2. '           ' → logprob: -3.8155248165130615
    3. ',' → logprob: -3.9405248165130615
    4. '               ' → logprob: -4.940524578094482
    5. 'yet' → logprob: -5.440524578094482
    6. 'self' → logprob: -6.190524578094482
    7. ':
' → logprob: -6.690524578094482
    8. ' at' → logprob: -6.815524578094482
    9. ':' → logprob: -6.815524578094482
    10. ' so' → logprob: -7.440524578094482

Token 267: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3777995705604553
    2. ':
' → logprob: -1.8777995109558105
    3. ',' → logprob: -2.5027995109558105
    4. ':' → logprob: -3.1277995109558105
    5. '                   ' → logprob: -3.8777995109558105
    6. '           ' → logprob: -4.5027995109558105
    7. 'self' → logprob: -6.8777995109558105
    8. ' or' → logprob: -7.1277995109558105
    9. ' self' → logprob: -7.6277995109558105
    10. ' and' → logprob: -7.7527995109558105

Token 268: ' just' (ID: 1327)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4754994511604309
    2. ' self' → logprob: -1.4754993915557861
    3. 'return' → logprob: -2.725499391555786
    4. ' return' → logprob: -3.100499391555786
    5. '               ' → logprob: -3.600499391555786
    6. '#' → logprob: -5.225499629974365
    7. '                   ' → logprob: -5.475499629974365
    8. '           ' → logprob: -6.475499629974365
    9. ' raise' → logprob: -8.475499153137207
    10. ' #' → logprob: -8.600499153137207

Token 269: ' add' (ID: 1147)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04921672120690346
    2. ' self' → logprob: -3.0492167472839355
    3. 'return' → logprob: -7.7992167472839355
    4. 'append' → logprob: -9.424216270446777
    5. '           ' → logprob: -9.924216270446777
    6. ' return' → logprob: -10.549216270446777
    7. 'add' → logprob: -10.924216270446777
    8. 'pass' → logprob: -11.424216270446777
    9. ' add' → logprob: -11.549216270446777
    10. ' append' → logprob: -11.674216270446777

Token 270: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5631136894226074
    2. 'Stone' → logprob: -1.0631136894226074
    3. ' self' → logprob: -3.0631136894226074
    4. ' Stone' → logprob: -4.063113689422607
    5. '           ' → logprob: -4.813113689422607
    6. ' stone' → logprob: -5.313113689422607
    7. '               ' → logprob: -5.688113689422607
    8. 'stone' → logprob: -6.063113689422607
    9. '       ' → logprob: -7.313113689422607
    10. 'a' → logprob: -7.688113689422607

Token 271: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022138379514217377
    2. 'self' → logprob: -4.397138595581055
    3. '           ' → logprob: -4.772138595581055
    4. ' self' → logprob: -7.022138595581055
    5. '                   ' → logprob: -9.397138595581055
    6. ',' → logprob: -10.022138595581055
    7. '(self' → logprob: -10.147138595581055
    8. ':' → logprob: -11.772138595581055
    9. '       ' → logprob: -12.147138595581055
    10. ')' → logprob: -12.522138595581055

Token 272: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01770874671638012
    2. '               ' → logprob: -4.767708778381348
    3. ' self' → logprob: -4.767708778381348
    4. '           ' → logprob: -7.517708778381348
    5. '   ' → logprob: -13.142708778381348
    6. '                   ' → logprob: -13.142708778381348
    7. '       ' → logprob: -13.267708778381348
    8. '	self' → logprob: -13.392708778381348
    9. 'return' → logprob: -14.517708778381348
    10. '              ' → logprob: -14.642708778381348

Token 273: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.001544737839139998
    2. '.groups' → logprob: -6.501544952392578
    3. '_groups' → logprob: -10.376544952392578
    4. '.' → logprob: -12.501544952392578
    5. '   ' → logprob: -13.126544952392578
    6. ' .' → logprob: -13.626544952392578
    7. '_add' → logprob: -13.626544952392578
    8. '       ' → logprob: -13.751544952392578
    9. '.add' → logprob: -14.501544952392578
    10. 'groups' → logprob: -14.501544952392578

Token 274: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.961759259458631e-06
    2. '_add' → logprob: -12.375004768371582
    3. ' add' → logprob: -14.625004768371582
    4. 'append' → logprob: -16.5000057220459
    5. '.add' → logprob: -17.6250057220459
    6. 'groups' → logprob: -17.7500057220459
    7. '	add' → logprob: -18.3750057220459
    8. 'Add' → logprob: -18.6250057220459
    9. 'adds' → logprob: -19.7500057220459
    10. '
' → logprob: -20.2500057220459

Token 275: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -9.088346359931165e-07
    2. 'Stone' → logprob: -15.000000953674316
    3. 'stone' → logprob: -15.250000953674316
    4. '(st' → logprob: -16.5
    5. '_' → logprob: -16.5
    6. ' stone' → logprob: -17.0
    7. '_s' → logprob: -17.875
    8. '```' → logprob: -18.0
    9. 'st' → logprob: -18.25
    10. 'St' → logprob: -18.375

Token 276: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.00021891399228479713
    2. 'stone' → logprob: -9.125219345092773
    3. '_one' → logprob: -9.625219345092773
    4. '_st' → logprob: -10.625219345092773
    5. 'on' → logprob: -12.000219345092773
    6. 'ore' → logprob: -13.125219345092773
    7. 'ones' → logprob: -13.250219345092773
    8. ' stone' → logprob: -13.625219345092773
    9. 'o' → logprob: -13.750219345092773
    10. 'Stone' → logprob: -13.750219345092773

Token 277: '(color' (ID: 27329)
  Prédit: '(color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -12.125007629394531
    3. '=color' → logprob: -14.375007629394531
    4. 'color' → logprob: -14.500007629394531
    5. ' (' → logprob: -14.625007629394531
    6. ')' → logprob: -14.625007629394531
    7. '(
' → logprob: -15.250007629394531
    8. '[color' → logprob: -16.62500762939453
    9. '(code' → logprob: -17.12500762939453
    10. ' color' → logprob: -17.25000762939453

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932047009468079
    2. ')
' → logprob: -0.6932047009468079
    3. '           ' → logprob: -10.693204879760742
    4. ')return' → logprob: -11.443204879760742
    5. ')

' → logprob: -11.693204879760742
    6. ')
' → logprob: -12.068204879760742
    7. '               ' → logprob: -12.193204879760742
    8. '       ' → logprob: -12.943204879760742
    9. ' )
' → logprob: -14.068204879760742
    10. ' )' → logprob: -14.818204879760742

Token 279: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011456023901700974
    2. '               ' → logprob: -4.63645601272583
    3. '       ' → logprob: -6.88645601272583
    4. 'else' → logprob: -7.38645601272583
    5. ' else' → logprob: -10.011456489562988
    6. 'elif' → logprob: -12.261456489562988
    7. '```' → logprob: -13.136456489562988
    8. 'return' → logprob: -13.136456489562988
    9. '		' → logprob: -13.761456489562988
    10. '                   ' → logprob: -14.136456489562988

Token 280: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6510301232337952
    2. 'return' (adapté à ' return') → logprob: -0.9010301232337952
    3. '           ' → logprob: -2.6510300636291504
    4. ' return' → logprob: -6.77603006362915
    5. '       ' → logprob: -8.026030540466309
    6. 'else' → logprob: -8.526030540466309
    7. '
' → logprob: -10.151030540466309
    8. '	return' → logprob: -10.526030540466309
    9. ')return' → logprob: -12.276030540466309
    10. ':return' → logprob: -12.526030540466309

Token 281: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3515983819961548
    2. '
' → logprob: -1.6015983819961548
    3. '       ' → logprob: -2.8515982627868652
    4. '            
' → logprob: -4.101598262786865
    5. 'self' → logprob: -4.476598262786865
    6. '        
' → logprob: -4.851598262786865
    7. 'if' → logprob: -8.101598739624023
    8. ' self' → logprob: -8.976598739624023
    9. '    
' → logprob: -8.976598739624023
    10. 'else' → logprob: -9.101598739624023

Token 282: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42965635657310486
    2. '
' → logprob: -1.4296563863754272
    3. '        
' → logprob: -2.8046562671661377
    4. '           ' → logprob: -3.1796562671661377
    5. '            
' → logprob: -5.929656505584717
    6. 'if' → logprob: -6.429656505584717
    7. ' if' → logprob: -6.554656505584717
    8. '<|end|>' → logprob: -7.804656505584717
    9. '```' → logprob: -8.179656028747559
    10. 'else' → logprob: -8.179656028747559

Token 283: ' right' (ID: 1849)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.5291199684143066
    2. ' last' → logprob: -2.2791199684143066
    3. '       ' → logprob: -2.4041199684143066
    4. 'current' → logprob: -3.0291199684143066
    5. 'if' → logprob: -3.1541199684143066
    6. 'top' → logprob: -3.2791199684143066
    7. 'prev' → logprob: -3.2791199684143066
    8. 'group' → logprob: -4.029119968414307
    9. 'existing' → logprob: -4.904119968414307
    10. ' if' → logprob: -5.029119968414307

Token 284: '_color' (ID: 15576)
  Prédit: '_group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.5317094326019287
    2. '_color' → logprob: -0.9067094326019287
    3. 'most' → logprob: -5.531709671020508
    4. 'color' → logprob: -6.031709671020508
    5. 'group' → logprob: -6.406709671020508
    6. '=' → logprob: -8.656709671020508
    7. ' =' → logprob: -8.906709671020508
    8. '_m' → logprob: -9.906709671020508
    9. '_groups' → logprob: -11.031709671020508
    10. '_grp' → logprob: -11.156709671020508

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.387302428483963
    2. ' =' → logprob: -1.1373023986816406
    3. ',' → logprob: -7.762302398681641
    4. ' ' → logprob: -13.26230239868164
    5. '   ' → logprob: -13.51230239868164
    6. '=color' → logprob: -13.88730239868164
    7. ' ,' → logprob: -15.26230239868164
    8. '  ' → logprob: -15.38730239868164
    9. '==' → logprob: -15.38730239868164
    10. '=self' → logprob: -15.51230239868164

Token 286: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04301517829298973
    2. ' self' → logprob: -3.168015241622925
    3. 'color' → logprob: -11.543015480041504
    4. '           ' → logprob: -12.793015480041504
    5. ' color' → logprob: -14.043015480041504
    6. '               ' → logprob: -14.293015480041504
    7. '   ' → logprob: -14.293015480041504
    8. '(self' → logprob: -14.668015480041504
    9. ' ' → logprob: -15.043015480041504
    10. '	self' → logprob: -15.293015480041504

Token 287: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -0.0010095883626490831
    2. '.color' → logprob: -7.376009464263916
    3. 'groups' → logprob: -8.501009941101074
    4. 'color' → logprob: -9.626009941101074
    5. ' .' → logprob: -10.251009941101074
    6. 'Color' → logprob: -11.126009941101074
    7. '.' → logprob: -11.626009941101074
    8. '   ' → logprob: -12.001009941101074
    9. '.colors' → logprob: -12.001009941101074
    10. '._' → logprob: -12.376009941101074

Token 288: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0019301822176203132
    2. '[' → logprob: -6.251930236816406
    3. '   ' → logprob: -14.751930236816406
    4. '```' → logprob: -14.876930236816406
    5. '][-' → logprob: -15.251930236816406
    6. '0' → logprob: -15.751930236816406
    7. '-' → logprob: -15.876930236816406
    8. '
' → logprob: -16.376930236816406
    9. ' [-' → logprob: -16.751930236816406
    10. '[
' → logprob: -17.001930236816406

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -11.250020027160645
    3. 'color' → logprob: -12.125020027160645
    4. '   ' → logprob: -14.875020027160645
    5. 'class' → logprob: -16.312519073486328
    6. '```' → logprob: -16.437519073486328
    7. '-' → logprob: -16.562519073486328
    8. ' color' → logprob: -17.250019073486328
    9. '１' → logprob: -17.375019073486328
    10. '
' → logprob: -17.562519073486328

Token 290: '].' (ID: 1651)
  Prédit: '.color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.color' → logprob: -0.2522149980068207
    2. '].' → logprob: -1.502215027809143
    3. ').' → logprob: -9.252215385437012
    4. '}.' → logprob: -9.502215385437012
    5. 'color' → logprob: -10.002215385437012
    6. ' ].' → logprob: -10.377215385437012
    7. '.' → logprob: -11.127215385437012
    8. ' .' → logprob: -11.752215385437012
    9. ']' → logprob: -11.752215385437012
    10. '[' → logprob: -12.502215385437012

Token 291: 'color' (ID: 4991)
  Prédit: 'color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -9.729906196298543e-06
    2. ' color' → logprob: -12.125009536743164
    3. 'count' → logprob: -12.750009536743164
    4. '.color' → logprob: -15.125009536743164
    5. ' ' → logprob: -15.250009536743164
    6. '   ' → logprob: -15.625009536743164
    7. '	color' → logprob: -16.000009536743164
    8. '  ' → logprob: -16.250009536743164
    9. '```' → logprob: -16.500009536743164
    10. '
' → logprob: -16.625009536743164

Token 292: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22441190481185913
    2. '
' → logprob: -2.474411964416504
    3. '<|end|>' → logprob: -2.974411964416504
    4. ' if' → logprob: -3.224411964416504
    5. '<|end|>' → logprob: -4.599411964416504
    6. 'if' → logprob: -4.849411964416504
    7. '            
' → logprob: -5.724411964416504
    8. ',' → logprob: -6.724411964416504
    9. '            ' → logprob: -7.099411964416504
    10. '       ' → logprob: -7.099411964416504

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001971577061340213
    2. ' if' → logprob: -6.62697172164917
    3. 'if' → logprob: -7.62697172164917
    4. '<|end|>' → logprob: -9.626971244812012
    5. '
' → logprob: -10.501971244812012
    6. '            
' → logprob: -11.001971244812012
    7. '       ' → logprob: -11.251971244812012
    8. '<|end|>' → logprob: -11.751971244812012
    9. '```' → logprob: -12.251971244812012
    10. '	       ' → logprob: -12.501971244812012

Token 294: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04487060755491257
    2. ' if' → logprob: -3.544870615005493
    3. '           ' → logprob: -4.669870376586914
    4. 'right' → logprob: -5.419870376586914
    5. '       ' → logprob: -7.794870376586914
    6. 'count' → logprob: -8.044870376586914
    7. '#' → logprob: -8.544870376586914
    8. ' right' → logprob: -9.044870376586914
    9. '
' → logprob: -10.544870376586914
    10. 'left' → logprob: -10.669870376586914

Token 295: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.182917520403862
    2. 'color' → logprob: -2.307917594909668
    3. ' right' → logprob: -2.807917594909668
    4. ' color' → logprob: -4.932917594909668
    5. '   ' → logprob: -9.057917594909668
    6. ' ' → logprob: -12.057917594909668
    7. '       ' → logprob: -12.182917594909668
    8. '    ' → logprob: -12.182917594909668
    9. '	right' → logprob: -12.432917594909668
    10. '     ' → logprob: -12.557917594909668

Token 296: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.05655333772301674
    2. ' ==' → logprob: -3.056553363800049
    3. '==' → logprob: -5.181553363800049
    4. ' !=' → logprob: -6.306553363800049
    5. 'color' → logprob: -8.05655288696289
    6. '!=' → logprob: -9.55655288696289
    7. 'Color' → logprob: -10.80655288696289
    8. ' color' → logprob: -11.18155288696289
    9. '_COLOR' → logprob: -11.43155288696289
    10. '   ' → logprob: -11.93155288696289

Token 297: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5883587002754211
    2. '==' → logprob: -0.8383587002754211
    3. ' !=' → logprob: -4.7133588790893555
    4. '!=' → logprob: -5.7133588790893555
    5. ' ' → logprob: -10.963358879089355
    6. '==
' → logprob: -11.588358879089355
    7. ' is' → logprob: -11.838358879089355
    8. '   ' → logprob: -11.963358879089355
    9. '=' → logprob: -12.338358879089355
    10. '```' → logprob: -12.588358879089355

Token 298: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.006297757849097252
    2. ' color' → logprob: -5.131297588348389
    3. 'Stone' → logprob: -8.131298065185547
    4. 'self' → logprob: -10.631298065185547
    5. '   ' → logprob: -11.256298065185547
    6. ' Stone' → logprob: -11.756298065185547
    7. ' ' → logprob: -12.256298065185547
    8. 'c' → logprob: -13.193798065185547
    9. 'colo' → logprob: -13.193798065185547
    10. 'col' → logprob: -13.256298065185547

Token 299: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41135019063949585
    2. ':' → logprob: -1.1613502502441406
    3. '               ' → logprob: -4.036350250244141
    4. ' and' → logprob: -5.286350250244141
    5. ' or' → logprob: -7.661350250244141
    6. '):
' → logprob: -8.03635025024414
    7. 'and' → logprob: -8.03635025024414
    8. '           ' → logprob: -9.41135025024414
    9. ':
' → logprob: -9.91135025024414
    10. ':

' → logprob: -9.91135025024414

Token 300: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.713543713092804
    2. '               ' → logprob: -0.963543713092804
    3. ':' → logprob: -2.088543653488159
    4. ' and' → logprob: -5.713543891906738
    5. '):
' → logprob: -7.838543891906738
    6. 'self' → logprob: -8.463543891906738
    7. 'and' → logprob: -8.588543891906738
    8. '           ' → logprob: -8.838543891906738
    9. ' or' → logprob: -8.963543891906738
    10. ',' → logprob: -9.338543891906738

Token 301: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21637800335884094
    2. 'self' → logprob: -1.8413779735565186
    3. ' self' → logprob: -3.3413779735565186
    4. '                   ' → logprob: -8.591378211975098
    5. '
' → logprob: -8.966378211975098
    6. ':
' → logprob: -9.216378211975098
    7. '           ' → logprob: -9.966378211975098
    8. '                
' → logprob: -10.466378211975098
    9. '	self' → logprob: -11.091378211975098
    10. '(self' → logprob: -11.716378211975098

Token 302: ' same' (ID: 2684)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003238555509597063
    2. ' self' → logprob: -5.753238677978516
    3. '               ' → logprob: -10.128238677978516
    4. '                   ' → logprob: -10.878238677978516
    5. '#' → logprob: -14.128238677978516
    6. 'last' → logprob: -14.878238677978516
    7. '           ' → logprob: -15.378238677978516
    8. '
' → logprob: -15.378238677978516
    9. '	self' → logprob: -16.003238677978516
    10. '   ' → logprob: -16.628238677978516

Token 303: ' color' (ID: 3089)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4829505681991577
    2. '               ' → logprob: -1.6079505681991577
    3. '           ' → logprob: -2.8579506874084473
    4. '
' → logprob: -3.2329506874084473
    5. 'self' → logprob: -3.6079506874084473
    6. ':
' → logprob: -4.857950687408447
    7. '.groups' → logprob: -5.232950687408447
    8. 'groups' → logprob: -5.607950687408447
    9. '```' → logprob: -5.607950687408447
    10. ' self' → logprob: -6.107950687408447

Token 304: ' as' (ID: 472)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23131978511810303
    2. ':' → logprob: -1.981319785118103
    3. '                   ' → logprob: -3.3563199043273926
    4. '               ' → logprob: -4.231319904327393
    5. ' and' → logprob: -4.481319904327393
    6. ',' → logprob: -5.731319904327393
    7. 'self' → logprob: -7.106319904327393
    8. '           ' → logprob: -7.231319904327393
    9. '
' → logprob: -7.356319904327393
    10. 'and' → logprob: -7.356319904327393

Token 305: ' right' (ID: 1849)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25420302152633667
    2. 'last' → logprob: -2.2542030811309814
    3. ' last' → logprob: -2.5042030811309814
    4. ' self' → logprob: -4.254202842712402
    5. 'the' → logprob: -4.254202842712402
    6. ' the' → logprob: -5.004202842712402
    7. 'right' → logprob: -6.629202842712402
    8. '               ' → logprob: -7.504202842712402
    9. ' right' → logprob: -8.379202842712402
    10. 'previous' → logprob: -9.254202842712402

Token 306: ' end' (ID: 1268)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0690906047821045
    2. ':
' → logprob: -1.0690906047821045
    3. '                   ' → logprob: -1.8190906047821045
    4. '               ' → logprob: -2.9440906047821045
    5. 'self' → logprob: -3.6940906047821045
    6. 'group' → logprob: -3.9440906047821045
    7. ',' → logprob: -4.069090843200684
    8. '_color' → logprob: -5.069090843200684
    9. '           ' → logprob: -5.194090843200684
    10. ' stone' → logprob: -5.694090843200684

Token 307: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6804395318031311
    2. '                   ' → logprob: -1.1804394721984863
    3. ':
' → logprob: -2.4304394721984863
    4. ':' → logprob: -3.5554394721984863
    5. ',' → logprob: -3.6804394721984863
    6. 'self' → logprob: -3.8054394721984863
    7. ' self' → logprob: -4.930439472198486
    8. ' and' → logprob: -5.180439472198486
    9. '
' → logprob: -5.930439472198486
    10. '           ' → logprob: -6.180439472198486

Token 308: ' just' (ID: 1327)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07494295388460159
    2. ' self' → logprob: -2.9499430656433105
    3. '               ' → logprob: -3.9499430656433105
    4. '                   ' → logprob: -7.5749430656433105
    5. ' ' → logprob: -10.949942588806152
    6. 'last' → logprob: -11.824942588806152
    7. 'increment' → logprob: -11.949942588806152
    8. '	self' → logprob: -12.074942588806152
    9. ' last' → logprob: -12.324942588806152
    10. '                ' → logprob: -12.324942588806152

Token 309: ' place' (ID: 2475)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011566214263439178
    2. 'increment' → logprob: -5.011566162109375
    3. 'increase' → logprob: -6.011566162109375
    4. ' self' → logprob: -6.511566162109375
    5. '               ' → logprob: -7.886566162109375
    6. 'add' → logprob: -8.636566162109375
    7. ' increment' → logprob: -9.011566162109375
    8. 'append' → logprob: -9.886566162109375
    9. 'extend' → logprob: -9.886566162109375
    10. ' increase' → logprob: -10.136566162109375

Token 310: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.8212790489196777
    2. ' stone' → logprob: -0.9462790489196777
    3. 'self' → logprob: -2.0712790489196777
    4. '_st' → logprob: -4.071279048919678
    5. ' self' → logprob: -4.196279048919678
    6. '               ' → logprob: -5.821279048919678
    7. 'Stone' → logprob: -5.821279048919678
    8. ' a' → logprob: -5.946279048919678
    9. 'a' → logprob: -6.071279048919678
    10. '                   ' → logprob: -6.946279048919678

Token 311: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.49328547716140747
    2. '               ' → logprob: -1.4932854175567627
    3. 'self' → logprob: -3.1182854175567627
    4. ' at' → logprob: -3.2432854175567627
    5. ' and' → logprob: -3.4932854175567627
    6. ',' → logprob: -4.118285655975342
    7. ' self' → logprob: -5.118285655975342
    8. '(self' → logprob: -5.618285655975342
    9. ' =' → logprob: -5.993285655975342
    10. ':' → logprob: -5.993285655975342

Token 312: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019236369989812374
    2. 'self' → logprob: -6.751923561096191
    3. ' self' → logprob: -8.126923561096191
    4. '                   ' → logprob: -8.501923561096191
    5. ',' → logprob: -9.501923561096191
    6. ' and' → logprob: -9.501923561096191
    7. '           ' → logprob: -10.626923561096191
    8. ' with' → logprob: -11.376923561096191
    9. '```' → logprob: -11.501923561096191
    10. ' =' → logprob: -11.751923561096191

Token 313: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6991788148880005
    2. '               ' → logprob: -1.0741788148880005
    3. ' self' → logprob: -1.8241788148880005
    4. '           ' → logprob: -10.449178695678711
    5. '                   ' → logprob: -10.949178695678711
    6. '	self' → logprob: -11.949178695678711
    7. '                
' → logprob: -12.449178695678711
    8. ' ' → logprob: -12.574178695678711
    9. '   ' → logprob: -12.824178695678711
    10. '              ' → logprob: -12.824178695678711

Token 314: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.060365608893335e-05
    2. '.groups' → logprob: -10.250041007995605
    3. '_groups' → logprob: -13.250041007995605
    4. '.' → logprob: -13.625041007995605
    5. '.add' → logprob: -13.875041007995605
    6. '_add' → logprob: -14.875041007995605
    7. '       ' → logprob: -15.000041007995605
    8. '   ' → logprob: -15.500041007995605
    9. ' .' → logprob: -16.75004005432129
    10. ']._' → logprob: -16.87504005432129

Token 315: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -5.676981345459353e-06
    2. '_add' → logprob: -12.625005722045898
    3. ' add' → logprob: -13.250005722045898
    4. '.add' → logprob: -16.1250057220459
    5. 'append' → logprob: -16.1250057220459
    6. '	add' → logprob: -16.3750057220459
    7. '
' → logprob: -17.1250057220459
    8. 'groups' → logprob: -17.3750057220459
    9. 'replace' → logprob: -17.5000057220459
    10. 'expand' → logprob: -18.4375057220459

Token 316: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.750001907348633
    3. '_token' → logprob: -14.500001907348633
    4. '_s' → logprob: -16.250001907348633
    5. '```' → logprob: -16.500001907348633
    6. '(st' → logprob: -16.625001907348633
    7. 'Stone' → logprob: -17.000001907348633
    8. 'stone' → logprob: -17.625001907348633
    9. ' _' → logprob: -18.250001907348633
    10. 'St' → logprob: -18.375001907348633

Token 317: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.0005221736500971019
    2. '_one' → logprob: -8.62552261352539
    3. 'stone' → logprob: -8.75052261352539
    4. 'tone' → logprob: -9.62552261352539
    5. '_st' → logprob: -9.87552261352539
    6. 'ones' → logprob: -11.00052261352539
    7. 'ne' → logprob: -11.50052261352539
    8. 'on' → logprob: -12.00052261352539
    9. '```' → logprob: -12.12552261352539
    10. '_' → logprob: -12.37552261352539

Token 318: '(color' (ID: 27329)
  Prédit: '(color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.00014036978245712817
    2. 'color' → logprob: -9.125140190124512
    3. '<|end|>' → logprob: -11.375140190124512
    4. '(' → logprob: -11.875140190124512
    5. '[color' → logprob: -12.375140190124512
    6. ')' → logprob: -12.500140190124512
    7. '=color' → logprob: -13.000140190124512
    8. '(
' → logprob: -14.750140190124512
    9. ' color' → logprob: -14.875140190124512
    10. 'right' → logprob: -14.875140190124512

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06207456439733505
    2. ')
' → logprob: -2.812074661254883
    3. '           ' → logprob: -10.187074661254883
    4. '               ' → logprob: -10.937074661254883
    5. ')return' → logprob: -11.062074661254883
    6. ')
' → logprob: -11.312074661254883
    7. ')

' → logprob: -12.062074661254883
    8. '       ' → logprob: -12.187074661254883
    9. '<|end|>' → logprob: -12.562074661254883
    10. ')}' → logprob: -13.062074661254883

Token 320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002684564096853137
    2. 'else' → logprob: -6.502684593200684
    3. '               ' → logprob: -6.877684593200684
    4. ' else' → logprob: -9.377684593200684
    5. '       ' → logprob: -10.502684593200684
    6. '<|end|>' → logprob: -10.627684593200684
    7. 'elif' → logprob: -11.877684593200684
    8. ')' → logprob: -13.252684593200684
    9. '<|end|>' → logprob: -13.502684593200684
    10. 'return' → logprob: -13.752684593200684

Token 321: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2798808515071869
    2. '           ' → logprob: -1.5298808813095093
    3. ' else' → logprob: -4.279881000518799
    4. '       ' → logprob: -4.404881000518799
    5. 'elif' → logprob: -6.529881000518799
    6. ' elif' → logprob: -10.77988052368164
    7. '               ' → logprob: -10.90488052368164
    8. '```' → logprob: -13.90488052368164
    9. '   ' → logprob: -14.02988052368164
    10. '        ' → logprob: -14.90488052368164

Token 322: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.555054247379303
    2. '               ' → logprob: -1.5550541877746582
    3. ':
' → logprob: -1.5550541877746582
    4. '           ' → logprob: -5.930054187774658
    5. '       ' → logprob: -8.430054664611816
    6. ':

' → logprob: -8.680054664611816
    7. ',' → logprob: -8.805054664611816
    8. '<|end|>' → logprob: -9.680054664611816
    9. ' and' → logprob: -10.055054664611816
    10. '):
' → logprob: -10.305054664611816

Token 323: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002481127390637994
    2. '#' → logprob: -6.877480983734131
    3. 'self' → logprob: -7.377480983734131
    4. ' self' → logprob: -7.502480983734131
    5. ' #' → logprob: -9.252481460571289
    6. ' if' → logprob: -9.752481460571289
    7. '           ' → logprob: -9.752481460571289
    8. 'if' → logprob: -11.002481460571289
    9. '       ' → logprob: -12.252481460571289
    10. '```' → logprob: -12.252481460571289

Token 324: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4701056480407715
    2. '               ' → logprob: -1.8451056480407715
    3. 'self' → logprob: -1.9701056480407715
    4. 'last' → logprob: -3.4701056480407715
    5. ' last' → logprob: -4.3451056480407715
    6. 'group' → logprob: -5.2201056480407715
    7. ' self' → logprob: -5.2201056480407715
    8. ' #' → logprob: -5.5951056480407715
    9. '       ' → logprob: -5.8451056480407715
    10. 'right' → logprob: -5.8451056480407715

Token 325: ' different' (ID: 2647)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2512282133102417
    2. 'self' → logprob: -2.5012283325195312
    3. ' last' → logprob: -3.1262283325195312
    4. 'last' → logprob: -3.3762283325195312
    5. ' self' → logprob: -4.751228332519531
    6. 'new' → logprob: -4.876228332519531
    7. ' #' → logprob: -5.001228332519531
    8. 'if' → logprob: -5.126228332519531
    9. 'group' → logprob: -5.126228332519531
    10. 'merged' → logprob: -5.251228332519531

Token 326: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.3596869111061096
    2. ' color' → logprob: -1.3596868515014648
    3. '_color' → logprob: -3.109686851501465
    4. '<|end|>' → logprob: -8.234686851501465
    5. '=color' → logprob: -9.359686851501465
    6. '.color' → logprob: -9.609686851501465
    7. ',' → logprob: -9.984686851501465
    8. '	color' → logprob: -10.234686851501465
    9. '
' → logprob: -10.234686851501465
    10. 'token' → logprob: -10.484686851501465

Token 327: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47744372487068176
    2. ':
' → logprob: -1.6024436950683594
    3. '               ' → logprob: -1.9774436950683594
    4. ',' → logprob: -3.9774436950683594
    5. '                   ' → logprob: -4.602443695068359
    6. ' and' → logprob: -6.102443695068359
    7. 'self' → logprob: -6.352443695068359
    8. '#' → logprob: -6.727443695068359
    9. '           ' → logprob: -6.977443695068359
    10. ' =' → logprob: -7.227443695068359

Token 328: ' remove' (ID: 6234)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.9502429366111755
    2. ' self' → logprob: -1.7002429962158203
    3. 'self' → logprob: -1.7002429962158203
    4. '#' → logprob: -2.3252429962158203
    5. ' removed' → logprob: -3.4502429962158203
    6. ' #' → logprob: -3.7002429962158203
    7. 'last' → logprob: -3.7002429962158203
    8. ' if' → logprob: -3.8252429962158203
    9. '               ' → logprob: -4.20024299621582
    10. 'removed' → logprob: -4.82524299621582

Token 329: ' all' (ID: 722)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.6724754571914673
    2. 'last' → logprob: -1.9224754571914673
    3. 'self' → logprob: -2.0474753379821777
    4. 'right' → logprob: -3.1724753379821777
    5. ' the' → logprob: -3.2974753379821777
    6. ' stones' → logprob: -3.2974753379821777
    7. ' self' → logprob: -3.4224753379821777
    8. 'the' → logprob: -3.9224753379821777
    9. ' right' → logprob: -4.547475337982178
    10. 'stones' → logprob: -5.172475337982178

Token 330: ' continuous' (ID: 27979)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -1.2167962789535522
    2. '               ' → logprob: -1.4667962789535522
    3. 'self' → logprob: -2.091796398162842
    4. 'last' → logprob: -2.466796398162842
    5. 'while' → logprob: -2.966796398162842
    6. 'right' → logprob: -2.966796398162842
    7. ' of' → logprob: -3.966796398162842
    8. 'stones' → logprob: -4.091796398162842
    9. ' stones' → logprob: -4.341796398162842
    10. ' self' → logprob: -4.466796398162842

Token 331: ' stones' (ID: 38940)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.7426636219024658
    2. ' stones' → logprob: -1.4926636219024658
    3. 'stones' → logprob: -1.7426636219024658
    4. ' groups' → logprob: -2.492663621902466
    5. ' group' → logprob: -4.867663383483887
    6. 'right' → logprob: -4.992663383483887
    7. '               ' → logprob: -5.242663383483887
    8. 'group' → logprob: -5.367663383483887
    9. ' stone' → logprob: -5.992663383483887
    10. 'stone' → logprob: -6.492663383483887

Token 332: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9993605017662048
    2. 'from' → logprob: -1.2493605613708496
    3. ' from' → logprob: -1.6243605613708496
    4. '               ' → logprob: -2.4993605613708496
    5. 'of' → logprob: -4.24936056137085
    6. ' in' → logprob: -4.74936056137085
    7. 'while' → logprob: -4.74936056137085
    8. ' at' → logprob: -4.87436056137085
    9. ' that' → logprob: -5.37436056137085
    10. ' while' → logprob: -5.62436056137085

Token 333: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.23238365352153778
    2. 'that' → logprob: -2.3573837280273438
    3. 'the' → logprob: -2.4823837280273438
    4. ' that' → logprob: -4.482383728027344
    5. ' the' → logprob: -5.107383728027344
    6. ' right' → logprob: -5.232383728027344
    7. 'op' → logprob: -5.732383728027344
    8. ' opposite' → logprob: -6.982383728027344
    9. 'different' → logprob: -7.357383728027344
    10. 'color' → logprob: -7.482383728027344

Token 334: ' end' (ID: 1268)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.2922286093235016
    2. 'right' → logprob: -1.5422285795211792
    3. 'end' → logprob: -4.417228698730469
    4. 'color' → logprob: -4.667228698730469
    5. 'most' → logprob: -4.792228698730469
    6. 'side' → logprob: -6.292228698730469
    7. '```' → logprob: -6.667228698730469
    8. ' right' → logprob: -6.792228698730469
    9. '   ' → logprob: -6.792228698730469
    10. '_right' → logprob: -7.792228698730469

Token 335: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.784135103225708
    2. 'from' → logprob: -2.034135103225708
    3. ' color' → logprob: -2.034135103225708
    4. 'group' → logprob: -2.284135103225708
    5. ' at' → logprob: -3.284135103225708
    6. '.color' → logprob: -3.409135103225708
    7. ' from' → logprob: -3.659135103225708
    8. ' group' → logprob: -3.784135103225708
    9. '```' → logprob: -4.284134864807129
    10. '               ' → logprob: -4.909134864807129

Token 336: ' from' (ID: 591)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18875150382518768
    2. ' while' → logprob: -2.688751459121704
    3. ' from' → logprob: -3.438751459121704
    4. 'while' → logprob: -4.063751697540283
    5. ' at' → logprob: -4.313751697540283
    6. ' and' → logprob: -4.563751697540283
    7. 'from' → logprob: -4.563751697540283
    8. ' =' → logprob: -5.063751697540283
    9. ' in' → logprob: -5.313751697540283
    10. ',' → logprob: -5.313751697540283

Token 337: ' right' (ID: 1849)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5498277544975281
    2. ' the' → logprob: -1.2998278141021729
    3. 'self' → logprob: -2.549827814102173
    4. 'right' → logprob: -2.799827814102173
    5. ' right' → logprob: -5.049827575683594
    6. ' self' → logprob: -6.174827575683594
    7. 'end' → logprob: -6.799827575683594
    8. '               ' → logprob: -7.924827575683594
    9. 'stack' → logprob: -8.299827575683594
    10. 'groups' → logprob: -8.424827575683594

Token 338: ',
' (ID: 412)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3070831894874573
    2. ' end' → logprob: -2.3070831298828125
    3. '           ' → logprob: -2.8070831298828125
    4. '               ' → logprob: -3.9320831298828125
    5. '       ' → logprob: -4.1820831298828125
    6. 'while' → logprob: -4.3070831298828125
    7. ' side' → logprob: -4.4320831298828125
    8. 'side' → logprob: -4.6820831298828125
    9. ':' → logprob: -5.0570831298828125
    10. '```' → logprob: -5.0570831298828125

Token 339: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011914950795471668
    2. ' and' → logprob: -5.5119147300720215
    3. ' while' → logprob: -5.7619147300720215
    4. 'while' → logprob: -6.6369147300720215
    5. 'self' → logprob: -7.3869147300720215
    6. ' then' → logprob: -7.7619147300720215
    7. 'and' → logprob: -7.7619147300720215
    8. ' self' → logprob: -8.13691520690918
    9. ' but' → logprob: -8.76191520690918
    10. 'remove' → logprob: -8.76191520690918

Token 340: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37227633595466614
    2. 'self' → logprob: -2.7472763061523438
    3. ' and' → logprob: -2.9972763061523438
    4. 'while' → logprob: -3.2472763061523438
    5. ' then' → logprob: -3.3722763061523438
    6. ' while' → logprob: -3.3722763061523438
    7. ' self' → logprob: -3.3722763061523438
    8. 'and' → logprob: -4.122276306152344
    9. 'count' → logprob: -5.372276306152344
    10. ' remove' → logprob: -5.622276306152344

Token 341: ' replace' (ID: 13284)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1802564114332199
    2. 'self' → logprob: -3.1802563667297363
    3. '#' → logprob: -3.8052563667297363
    4. 'remove' → logprob: -4.305256366729736
    5. 'while' → logprob: -4.305256366729736
    6. ' self' → logprob: -4.430256366729736
    7. ' and' → logprob: -4.430256366729736
    8. ' while' → logprob: -4.805256366729736
    9. 'and' → logprob: -4.805256366729736
    10. ' then' → logprob: -5.055256366729736

Token 342: ' by' (ID: 656)
  Prédit: 'them'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'them' → logprob: -0.3243598937988281
    2. ' them' → logprob: -1.4493598937988281
    3. 'with' → logprob: -4.199359893798828
    4. ' with' → logprob: -4.574359893798828
    5. '               ' → logprob: -4.949359893798828
    6. 'right' → logprob: -5.824359893798828
    7. 'all' → logprob: -6.074359893798828
    8. 'that' → logprob: -7.324359893798828
    9. ' by' → logprob: -7.574359893798828
    10. ' all' → logprob: -7.824359893798828

Token 343: ' stones' (ID: 38940)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.04560089483857155
    2. 'a' → logprob: -3.1706008911132812
    3. ' Stone' → logprob: -6.295600891113281
    4. 'one' → logprob: -7.795600891113281
    5. 'stone' → logprob: -8.670600891113281
    6. ' a' → logprob: -9.295600891113281
    7. 'new' → logprob: -10.545600891113281
    8. ' stone' → logprob: -11.170600891113281
    9. '   ' → logprob: -11.795600891113281
    10. '       ' → logprob: -12.045600891113281

Token 344: ' with' (ID: 483)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.09100905060768127
    2. 'of' → logprob: -3.4660091400146484
    3. '               ' → logprob: -3.9660091400146484
    4. '[color' → logprob: -4.466009140014648
    5. '(color' → logprob: -4.841009140014648
    6. ' =' → logprob: -5.216009140014648
    7. '=' → logprob: -5.341009140014648
    8. '                   ' → logprob: -6.591009140014648
    9. 'color' → logprob: -6.841009140014648
    10. '```' → logprob: -7.591009140014648

Token 345: ' new' (ID: 620)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.31535467505455017
    2. 'op' → logprob: -1.9403547048568726
    3. 'the' → logprob: -2.690354585647583
    4. 'count' → logprob: -3.940354585647583
    5. ' color' → logprob: -4.315354824066162
    6. ' opposite' → logprob: -4.815354824066162
    7. ' the' → logprob: -5.065354824066162
    8. 'current' → logprob: -5.815354824066162
    9. 'different' → logprob: -6.440354824066162
    10. 'new' → logprob: -6.690354824066162

Token 346: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.004862753674387932
    2. ' color' → logprob: -5.3798627853393555
    3. '_color' → logprob: -8.754862785339355
    4. 'count' → logprob: -10.129862785339355
    5. '```' → logprob: -11.629862785339355
    6. '=color' → logprob: -12.254862785339355
    7. '.color' → logprob: -12.629862785339355
    8. '
' → logprob: -12.879862785339355
    9. 'code' → logprob: -13.004862785339355
    10. '	color' → logprob: -13.004862785339355

Token 347: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04671821743249893
    2. ' =' → logprob: -3.671718120574951
    3. ',' → logprob: -5.546718120574951
    4. '
' → logprob: -6.671718120574951
    5. ' and' → logprob: -6.921718120574951
    6. '(color' → logprob: -6.921718120574951
    7. ' of' → logprob: -7.046718120574951
    8. '=' → logprob: -7.171718120574951
    9. 'self' → logprob: -7.171718120574951
    10. '                   ' → logprob: -7.296718120574951

Token 348: ' the' (ID: 290)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.010324708186089993
    2. ' count' → logprob: -5.010324478149414
    3. 'self' → logprob: -6.135324478149414
    4. 'the' → logprob: -7.010324478149414
    5. 'length' → logprob: -9.010324478149414
    6. 'total' → logprob: -9.135324478149414
    7. 'same' → logprob: -9.260324478149414
    8. ' the' → logprob: -10.010324478149414
    9. ' self' → logprob: -10.260324478149414
    10. 'a' → logprob: -10.510324478149414

Token 349: ' same' (ID: 2684)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.18677730858325958
    2. 'same' → logprob: -1.8117773532867432
    3. ' same' → logprob: -5.311777114868164
    4. ' count' → logprob: -6.936777114868164
    5. 'length' → logprob: -7.561777114868164
    6. 'total' → logprob: -8.561777114868164
    7. 'sum' → logprob: -9.686777114868164
    8. 'number' → logprob: -9.686777114868164
    9. 'self' → logprob: -10.311777114868164
    10. 'size' → logprob: -10.561777114868164

Token 350: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0005886562867090106
    2. ' count' → logprob: -7.875588893890381
    3. 'total' → logprob: -8.625588417053223
    4. 'length' → logprob: -10.750588417053223
    5. 'number' → logprob: -12.625588417053223
    6. ' total' → logprob: -13.750588417053223
    7. '.count' → logprob: -14.250588417053223
    8. '   ' → logprob: -14.375588417053223
    9. '_count' → logprob: -14.625588417053223
    10. '=count' → logprob: -15.500588417053223

Token 351: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038172954227775335
    2. ',' → logprob: -6.503817081451416
    3. '
' → logprob: -7.378817081451416
    4. '                   ' → logprob: -7.753817081451416
    5. ' =' → logprob: -7.878817081451416
    6. ' and' → logprob: -8.753817558288574
    7. '           ' → logprob: -8.878817558288574
    8. '       ' → logprob: -9.503817558288574
    9. ',
' → logprob: -9.628817558288574
    10. '```' → logprob: -10.003817558288574

Token 352: ' then' (ID: 1815)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5203115940093994
    2. 'and' → logprob: -1.6453115940093994
    3. ' and' → logprob: -2.0203115940093994
    4. 'but' → logprob: -2.1453115940093994
    5. '               ' → logprob: -2.3953115940093994
    6. ' but' → logprob: -2.5203115940093994
    7. '                   ' → logprob: -3.0203115940093994
    8. ' effectively' → logprob: -3.8953115940093994
    9. 'which' → logprob: -3.8953115940093994
    10. '                       ' → logprob: -4.02031135559082

Token 353: ' place' (ID: 2475)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26916980743408203
    2. 'return' → logprob: -1.519169807434082
    3. '               ' → logprob: -5.394169807434082
    4. 'break' → logprob: -6.144169807434082
    5. 'clear' → logprob: -6.394169807434082
    6. ' self' → logprob: -7.144169807434082
    7. '           ' → logprob: -7.269169807434082
    8. ' return' → logprob: -7.269169807434082
    9. 'count' → logprob: -7.269169807434082
    10. '#' → logprob: -7.269169807434082

Token 354: ' new' (ID: 620)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.08933866024017334
    2. 'stone' → logprob: -2.589338779449463
    3. 'color' → logprob: -5.089338779449463
    4. ' stone' → logprob: -5.714338779449463
    5. ' color' → logprob: -7.714338779449463
    6. 'new' → logprob: -8.339338302612305
    7. ' new' → logprob: -9.589338302612305
    8. 'Stone' → logprob: -10.589338302612305
    9. ' a' → logprob: -10.714338302612305
    10. '   ' → logprob: -10.839338302612305

Token 355: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.7227305769920349
    2. ' stone' → logprob: -1.0977306365966797
    3. '_st' → logprob: -1.7227306365966797
    4. 'color' → logprob: -7.47273063659668
    5. ' stones' → logprob: -7.72273063659668
    6. 'stones' → logprob: -7.72273063659668
    7. '```' → logprob: -7.84773063659668
    8. 'Stone' → logprob: -8.97273063659668
    9. ' color' → logprob: -9.47273063659668
    10. 'token' → logprob: -9.59773063659668

Token 356: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006810464430600405
    2. ',' → logprob: -6.256810665130615
    3. '                   ' → logprob: -6.756810665130615
    4. '<|end|>' → logprob: -7.131810665130615
    5. '<|end|>' → logprob: -7.256810665130615
    6. '       ' → logprob: -8.506810188293457
    7. ' (' → logprob: -8.631810188293457
    8. '
' → logprob: -8.756810188293457
    9. '(color' → logprob: -8.756810188293457
    10. '           ' → logprob: -8.881810188293457

Token 357: ' the' (ID: 290)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.06959468126296997
    2. 'that' → logprob: -3.819594621658325
    3. 'the' → logprob: -4.069594860076904
    4. ' color' → logprob: -4.319594860076904
    5. 'new' → logprob: -4.444594860076904
    6. ' that' → logprob: -6.569594860076904
    7. 'this' → logprob: -7.194594860076904
    8. ' the' → logprob: -7.944594860076904
    9. ' new' → logprob: -8.694594383239746
    10. 'same' → logprob: -8.944594383239746

Token 358: ' same' (ID: 2684)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.06829962879419327
    2. 'new' → logprob: -2.9432995319366455
    3. 'same' → logprob: -4.568299770355225
    4. ' color' → logprob: -6.193299770355225
    5. ' new' → logprob: -8.443299293518066
    6. 'other' → logprob: -8.568299293518066
    7. ' same' → logprob: -8.818299293518066
    8. 'op' → logprob: -8.943299293518066
    9. '```' → logprob: -9.693299293518066
    10. ' opposite' → logprob: -9.818299293518066

Token 359: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0500979945063591
    2. ' color' → logprob: -3.050097942352295
    3. 'count' → logprob: -6.675097942352295
    4. 'new' → logprob: -8.925098419189453
    5. 'type' → logprob: -10.425098419189453
    6. ' count' → logprob: -10.550098419189453
    7. ' new' → logprob: -10.550098419189453
    8. '```' → logprob: -11.175098419189453
    9. ' type' → logprob: -12.800098419189453
    10. 'length' → logprob: -12.925098419189453

Token 360: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004111762158572674
    2. '<|end|>' → logprob: -6.1291117668151855
    3. ',' → logprob: -7.7541117668151855
    4. '<|end|>' → logprob: -8.004111289978027
    5. '                   ' → logprob: -8.129111289978027
    6. '           ' → logprob: -8.504111289978027
    7. '       ' → logprob: -9.129111289978027
    8. '                
' → logprob: -9.379111289978027
    9. '.' → logprob: -9.504111289978027
    10. '                ' → logprob: -9.754111289978027

Token 361: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00072851701406762
    2. '```' → logprob: -8.125728607177734
    3. '       ' → logprob: -9.000728607177734
    4. '                
' → logprob: -10.125728607177734
    5. 'count' → logprob: -10.500728607177734
    6. '           ' → logprob: -10.875728607177734
    7. 'removed' → logprob: -11.000728607177734
    8. ',' → logprob: -11.000728607177734
    9. '                   ' → logprob: -11.125728607177734
    10. 'remove' → logprob: -11.125728607177734

Token 362: ' removed' (ID: 11906)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2504532039165497
    2. '               ' → logprob: -2.000453233718872
    3. 'removed' (adapté à ' removed') → logprob: -3.500453233718872
    4. 'remove' → logprob: -4.250452995300293
    5. 'right' → logprob: -4.375452995300293
    6. 'last' → logprob: -4.750452995300293
    7. ' count' → logprob: -5.125452995300293
    8. 'group' → logprob: -6.000452995300293
    9. 'old' → logprob: -6.000452995300293
    10. ' removed' → logprob: -6.625452995300293

Token 363: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.004087659064680338
    2. ' =' → logprob: -6.129087448120117
    3. '_group' → logprob: -7.129087448120117
    4. '_groups' → logprob: -7.504087448120117
    5. 'count' → logprob: -8.254087448120117
    6. '=' → logprob: -8.754087448120117
    7. '_color' → logprob: -10.129087448120117
    8. 's' → logprob: -10.879087448120117
    9. '_cnt' → logprob: -11.004087448120117
    10. '_len' → logprob: -11.754087448120117

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858941584825516
    2. '=' → logprob: -3.0485894680023193
    3. '=self' → logprob: -13.798589706420898
    4. ',' → logprob: -15.673589706420898
    5. ' ' → logprob: -15.798589706420898
    6. '   ' → logprob: -15.798589706420898
    7. '	' → logprob: -16.2985897064209
    8. '=len' → logprob: -16.5485897064209
    9. ' ' → logprob: -16.9235897064209
    10. '    ' → logprob: -16.9235897064209

Token 365: ' self' (ID: 1051)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1075643002986908
    2. 'self' → logprob: -2.3575642108917236
    3. ' self' → logprob: -5.357564449310303
    4. ' ' → logprob: -5.982564449310303
    5. '               ' → logprob: -9.732563972473145
    6. '                   ' → logprob: -11.107563972473145
    7. '           ' → logprob: -11.732563972473145
    8. '   ' → logprob: -12.232563972473145
    9. '(self' → logprob: -13.232563972473145
    10. 'sum' → logprob: -14.420063972473145

Token 366: '._' (ID: 2697)
  Prédit: '.groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -0.033764760941267014
    2. 'groups' → logprob: -4.533764839172363
    3. '._' → logprob: -5.283764839172363
    4. '   ' → logprob: -5.533764839172363
    5. '.pop' → logprob: -5.783764839172363
    6. '.remove' → logprob: -5.783764839172363
    7. '       ' → logprob: -6.533764839172363
    8. '0' → logprob: -6.658764839172363
    9. ' ' → logprob: -7.158764839172363
    10. '.' → logprob: -7.658764839172363

Token 367: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.21349011361598969
    2. 'remove' → logprob: -1.8384901285171509
    3. 'groups' → logprob: -3.7134900093078613
    4. 'count' → logprob: -5.338490009307861
    5. 'get' → logprob: -7.213490009307861
    6. 'group' → logprob: -7.213490009307861
    7. '_remove' → logprob: -7.588490009307861
    8. 'take' → logprob: -7.588490009307861
    9. '_pop' → logprob: -7.588490009307861
    10. 'while' → logprob: -9.08849048614502

Token 368: '_right' (ID: 24402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07647568732500076
    2. '_st' → logprob: -3.4514756202697754
    3. '(len' → logprob: -3.5764756202697754
    4. '()
' → logprob: -4.951475620269775
    5. 'right' → logprob: -6.701475620269775
    6. '_cont' → logprob: -7.201475620269775
    7. 'len' → logprob: -7.326475620269775
    8. '_right' → logprob: -7.326475620269775
    9. '(-' → logprob: -7.451475620269775
    10. 'stones' → logprob: -7.451475620269775

Token 369: '_color' (ID: 15576)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012374484911561012
    2. '()
' → logprob: -4.637374401092529
    3. '().' → logprob: -6.012374401092529
    4. '(' → logprob: -10.387374877929688
    5. '(len' → logprob: -10.762374877929688
    6. '()

' → logprob: -10.887374877929688
    7. ' ()' → logprob: -11.012374877929688
    8. '()]' → logprob: -11.137374877929688
    9. '()
' → logprob: -11.387374877929688
    10. '()[' → logprob: -11.512374877929688

Token 370: '_sequence' (ID: 55606)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026371359825134277
    2. '()
' → logprob: -3.651371479034424
    3. '()
' → logprob: -10.776371002197266
    4. '(len' → logprob: -11.401371002197266
    5. '()

' → logprob: -11.651371002197266
    6. '()]' → logprob: -11.651371002197266
    7. '(' → logprob: -11.776371002197266
    8. ' ()' → logprob: -13.401371002197266
    9. '()`' → logprob: -13.526371002197266
    10. '               ' → logprob: -13.651371002197266

Token 371: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25200968980789185
    2. '()
' → logprob: -1.502009630203247
    3. '()

' → logprob: -10.627009391784668
    4. '(len' → logprob: -10.752009391784668
    5. '()
' → logprob: -10.752009391784668
    6. '(' → logprob: -12.502009391784668
    7. ' =' → logprob: -13.627009391784668
    8. '()`' → logprob: -13.752009391784668
    9. '()\' → logprob: -13.877009391784668
    10. '()"' → logprob: -14.002009391784668

Token 372: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006711228284984827
    2. 'self' → logprob: -5.506711006164551
    3. 'new' → logprob: -6.131711006164551
    4. ' self' → logprob: -9.13171100616455
    5. ' new' → logprob: -9.50671100616455
    6. 'color' → logprob: -9.63171100616455
    7. 'replace' → logprob: -10.38171100616455
    8. '                
' → logprob: -10.63171100616455
    9. 'replacement' → logprob: -10.75671100616455
    10. 'count' → logprob: -10.88171100616455

Token 373: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6850193738937378
    2. 'self' → logprob: -0.8100193738937378
    3. 'new' → logprob: -3.4350194931030273
    4. ' self' → logprob: -4.185019493103027
    5. ' new' → logprob: -6.560019493103027
    6. 'replace' → logprob: -7.185019493103027
    7. 'replacement' → logprob: -7.435019493103027
    8. '       ' → logprob: -7.935019493103027
    9. 'count' → logprob: -9.310019493103027
    10. 'total' → logprob: -9.310019493103027

Token 374: ' add' (ID: 1147)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2623779773712158
    2. 'new' → logprob: -1.8873779773712158
    3. '               ' → logprob: -2.762377977371216
    4. 'replace' → logprob: -5.137377738952637
    5. 'replacement' → logprob: -5.262377738952637
    6. '       ' → logprob: -6.262377738952637
    7. ' self' → logprob: -6.387377738952637
    8. ' new' → logprob: -7.637377738952637
    9. 're' → logprob: -8.012377738952637
    10. 'total' → logprob: -8.262377738952637

Token 375: ' replaced' (ID: 21009)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.19989362359046936
    2. 'color' → logprob: -1.824893593788147
    3. 'stone' → logprob: -5.324893474578857
    4. ' Stone' → logprob: -5.699893474578857
    5. '_st' → logprob: -5.824893474578857
    6. 'St' → logprob: -5.824893474578857
    7. '(color' → logprob: -6.074893474578857
    8. '[color' → logprob: -7.199893474578857
    9. ' color' → logprob: -7.324893474578857
    10. '   ' → logprob: -7.449893474578857

Token 376: ' stones' (ID: 38940)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.08178211003541946
    2. 'color' → logprob: -3.581782102584839
    3. 'stone' → logprob: -3.706782102584839
    4. 'stones' → logprob: -4.331782341003418
    5. '(color' → logprob: -5.206782341003418
    6. 'Stone' → logprob: -6.581782341003418
    7. '[color' → logprob: -6.956782341003418
    8. ' stone' → logprob: -6.956782341003418
    9. 'st' → logprob: -7.206782341003418
    10. ' stones' → logprob: -7.331782341003418

Token 377: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08506657928228378
    2. ' =' → logprob: -2.960066556930542
    3. '(color' → logprob: -4.085066795349121
    4. 'color' → logprob: -6.210066795349121
    5. '=' → logprob: -6.335066795349121
    6. 'count' → logprob: -6.710066795349121
    7. 'with' → logprob: -6.710066795349121
    8. ' with' → logprob: -6.960066795349121
    9. '(count' → logprob: -7.085066795349121
    10. '=color' → logprob: -7.210066795349121

Token 378: ' new' (ID: 620)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.002271820092573762
    2. ' color' → logprob: -6.12727165222168
    3. 'count' → logprob: -10.00227165222168
    4. 'new' → logprob: -10.75227165222168
    5. 'the' → logprob: -12.00227165222168
    6. '   ' → logprob: -12.50227165222168
    7. 'stone' → logprob: -13.37727165222168
    8. '[color' → logprob: -13.62727165222168
    9. ' the' → logprob: -13.75227165222168
    10. '=color' → logprob: -13.87727165222168

Token 379: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.031624358147382736
    2. ' color' → logprob: -3.5316243171691895
    3. '_color' → logprob: -6.6566243171691895
    4. 'count' → logprob: -7.5316243171691895
    5. '_count' → logprob: -11.531624794006348
    6. 'stone' → logprob: -11.656624794006348
    7. ' count' → logprob: -11.906624794006348
    8. '   ' → logprob: -12.531624794006348
    9. '	color' → logprob: -12.656624794006348
    10. '```' → logprob: -13.281624794006348

Token 380: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002408350817859173
    2. 'self' → logprob: -6.877408504486084
    3. ',' → logprob: -7.377408504486084
    4. 'for' → logprob: -8.252408027648926
    5. '(self' → logprob: -8.377408027648926
    6. ' for' → logprob: -9.502408027648926
    7. ' self' → logprob: -10.502408027648926
    8. '```' → logprob: -10.752408027648926
    9. '       ' → logprob: -10.877408027648926
    10. ' and' → logprob: -11.252408027648926

Token 381: 'count' (ID: 5420)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.060239944607019424
    2. 'color' → logprob: -3.0602400302886963
    3. ' removed' → logprob: -4.935239791870117
    4. ')' → logprob: -5.935239791870117
    5. ' color' → logprob: -7.685239791870117
    6. ',' → logprob: -8.310239791870117
    7. 'for' → logprob: -8.935239791870117
    8. '               ' → logprob: -9.060239791870117
    9. 'self' → logprob: -9.185239791870117
    10. 'stone' → logprob: -9.435239791870117

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021538641303777695
    2. ' =' → logprob: -3.896538734436035
    3. 'removed' → logprob: -7.146538734436035
    4. ' removed' → logprob: -9.646538734436035
    5. '+' → logprob: -10.271538734436035
    6. '               ' → logprob: -10.271538734436035
    7. ')' → logprob: -10.521538734436035
    8. ' +' → logprob: -10.646538734436035
    9. '=len' → logprob: -12.146538734436035
    10. '_removed' → logprob: -12.146538734436035

Token 383: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -4.5491004129871726e-05
    2. ' removed' → logprob: -10.000045776367188
    3. 'rem' → logprob: -18.750045776367188
    4. '```' → logprob: -18.875045776367188
    5. '               ' → logprob: -19.375045776367188
    6. '   ' → logprob: -19.500045776367188
    7. '           ' → logprob: -20.250045776367188
    8. 'remove' → logprob: -20.750045776367188
    9. 'remaining' → logprob: -20.875045776367188
    10. '_removed' → logprob: -21.500045776367188

Token 384: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3856492842023727e-06
    2. 'count' → logprob: -13.625000953674316
    3. 'removed' → logprob: -17.000001907348633
    4. '_removed' → logprob: -17.375001907348633
    5. ')' → logprob: -18.000001907348633
    6. 'ed' → logprob: -18.250001907348633
    7. '_' → logprob: -18.500001907348633
    8. 'Count' → logprob: -18.500001907348633
    9. '=' → logprob: -18.750001907348633
    10. '_c' → logprob: -19.625001907348633

Token 385: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8382592797279358
    2. ')
' → logprob: -0.8382592797279358
    3. '               ' → logprob: -2.713259220123291
    4. ' +' → logprob: -2.963259220123291
    5. '+' → logprob: -4.338259220123291
    6. ' )
' → logprob: -6.338259220123291
    7. ' )' → logprob: -6.838259220123291
    8. ')
' → logprob: -8.46325969696045
    9. ' -' → logprob: -8.58825969696045
    10. '           ' → logprob: -8.71325969696045

Token 386: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007559045334346592
    2. 'self' → logprob: -7.250755786895752
    3. ' self' → logprob: -10.87575626373291
    4. ',' → logprob: -11.37575626373291
    5. '
' → logprob: -11.87575626373291
    6. '                
' → logprob: -13.25075626373291
    7. '           ' → logprob: -13.50075626373291
    8. '```' → logprob: -13.50075626373291
    9. '(self' → logprob: -13.87575626373291
    10. '       ' → logprob: -14.75075626373291

Token 387: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3915904760360718
    2. '               ' → logprob: -1.1415904760360718
    3. ' self' → logprob: -5.391590595245361
    4. '       ' → logprob: -9.391590118408203
    5. '           ' → logprob: -9.766590118408203
    6. 'for' → logprob: -12.141590118408203
    7. '   ' → logprob: -12.141590118408203
    8. '	self' → logprob: -14.016590118408203
    9. '              ' → logprob: -15.016590118408203
    10. '(self' → logprob: -15.141590118408203

Token 388: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.696889623621246e-06
    2. '.' → logprob: -13.00000286102295
    3. '.groups' → logprob: -16.500001907348633
    4. '.add' → logprob: -16.625001907348633
    5. '_groups' → logprob: -17.000001907348633
    6. ']._' → logprob: -17.250001907348633
    7. ' .' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.500001907348633
    9. ')._' → logprob: -18.000001907348633
    10. '_add' → logprob: -18.250001907348633

Token 389: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.00021450345229823142
    2. 'replace' → logprob: -9.125214576721191
    3. '_add' → logprob: -9.875214576721191
    4. 'pop' → logprob: -10.625214576721191
    5. 'groups' → logprob: -10.750214576721191
    6. 'append' → logprob: -13.250214576721191
    7. ' add' → logprob: -13.500214576721191
    8. '.add' → logprob: -14.125214576721191
    9. 'group' → logprob: -14.500214576721191
    10. 'push' → logprob: -14.750214576721191

Token 390: '_group' (ID: 15990)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.723973582556937e-05
    2. '_' → logprob: -11.250017166137695
    3. 'Stone' → logprob: -13.125017166137695
    4. '_s' → logprob: -14.375017166137695
    5. 'St' → logprob: -14.625017166137695
    6. 'stone' → logprob: -14.875017166137695
    7. '```' → logprob: -15.875017166137695
    8. '_color' → logprob: -16.500017166137695
    9. ' _' → logprob: -16.625017166137695
    10. 'new' → logprob: -16.875017166137695

Token 391: '(color' (ID: 27329)
  Prédit: '(color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.7758987545967102
    2. '(' → logprob: -0.9008987545967102
    3. 'Stone' → logprob: -2.1508986949920654
    4. 'color' → logprob: -4.4008989334106445
    5. '(St' → logprob: -6.6508989334106445
    6. ' Stone' → logprob: -7.2758989334106445
    7. 'St' → logprob: -7.2758989334106445
    8. '=color' → logprob: -7.6508989334106445
    9. '[color' → logprob: -8.025898933410645
    10. '(Color' → logprob: -8.025898933410645

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8351892473874614e-05
    2. ' ,' → logprob: -10.500048637390137
    3. 'removed' → logprob: -11.000048637390137
    4. ' removed' → logprob: -13.750048637390137
    5. ',
' → logprob: -13.875048637390137
    6. '               ' → logprob: -14.500048637390137
    7. '           ' → logprob: -15.000048637390137
    8. ')' → logprob: -15.250048637390137
    9. '```' → logprob: -15.500048637390137
    10. 'Removed' → logprob: -15.750048637390137

Token 393: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.0024819616228342056
    2. ' removed' → logprob: -6.002481937408447
    3. '   ' → logprob: -12.752482414245605
    4. '           ' → logprob: -13.752482414245605
    5. 'count' → logprob: -13.877482414245605
    6. 'rem' → logprob: -14.002482414245605
    7. '               ' → logprob: -15.252482414245605
    8. 'remove' → logprob: -15.877482414245605
    9. '       ' → logprob: -16.50248146057129
    10. '_removed' → logprob: -17.12748146057129

Token 394: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.392202976712724e-06
    2. 'count' → logprob: -12.000006675720215
    3. ')' → logprob: -17.5000057220459
    4. 'Count' → logprob: -17.7500057220459
    5. '_color' → logprob: -17.8750057220459
    6. 'ount' → logprob: -18.5000057220459
    7. ' count' → logprob: -18.7500057220459
    8. '_' → logprob: -18.8750057220459
    9. 'ed' → logprob: -19.0000057220459
    10. '_c' → logprob: -19.1250057220459

Token 395: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31375831365585327
    2. ')' → logprob: -1.313758373260498
    3. '       ' → logprob: -8.81375789642334
    4. '           ' → logprob: -8.81375789642334
    5. '               ' → logprob: -9.43875789642334
    6. ')
' → logprob: -9.81375789642334
    7. ' )
' → logprob: -10.18875789642334
    8. ' )' → logprob: -11.56375789642334
    9. ')

' → logprob: -11.68875789642334
    10. '+' → logprob: -13.06375789642334

Token 396: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25542375445365906
    2. '           ' → logprob: -1.5054237842559814
    3. 'self' → logprob: -5.755423545837402
    4. '               ' → logprob: -8.255423545837402
    5. ' self' → logprob: -10.505423545837402
    6. '#' → logprob: -11.005423545837402
    7. '   ' → logprob: -11.630423545837402
    8. ',' → logprob: -13.130423545837402
    9. '```' → logprob: -13.130423545837402
    10. '(self' → logprob: -13.505423545837402

Token 397: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15352372825145721
    2. '       ' → logprob: -2.1535236835479736
    3. '           ' → logprob: -4.153523921966553
    4. ' self' → logprob: -5.028523921966553
    5. '               ' → logprob: -5.528523921966553
    6. '   ' → logprob: -11.653523445129395
    7. '	self' → logprob: -13.153523445129395
    8. '(self' → logprob: -13.278523445129395
    9. '
' → logprob: -13.903523445129395
    10. '#' (adapté à ' #') → logprob: -14.778523445129395

Token 398: ' add' (ID: 1147)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007805473171174526
    2. '#' → logprob: -5.132805347442627
    3. ' self' → logprob: -6.507805347442627
    4. '       ' → logprob: -8.507805824279785
    5. '           ' → logprob: -8.882805824279785
    6. '               ' → logprob: -10.757805824279785
    7. ' #' → logprob: -11.382805824279785
    8. 'add' → logprob: -12.257805824279785
    9. '_add' → logprob: -13.132805824279785
    10. '   ' → logprob: -13.757805824279785

Token 399: ' final' (ID: 1721)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.33473914861679077
    2. ' stone' → logprob: -2.0847392082214355
    3. 'stone' → logprob: -2.2097392082214355
    4. 'Stone' → logprob: -4.0847392082214355
    5. ' a' → logprob: -4.8347392082214355
    6. '_group' → logprob: -4.9597392082214355
    7. ' new' → logprob: -5.2097392082214355
    8. 'new' → logprob: -5.7097392082214355
    9. ' Stone' → logprob: -5.9597392082214355
    10. ' one' → logprob: -6.3347392082214355

Token 400: ' stone' (ID: 14352)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.1946284919977188
    2. 'stone' → logprob: -2.8196284770965576
    3. '_group' → logprob: -2.9446284770965576
    4. ' stone' → logprob: -2.9446284770965576
    5. ' group' → logprob: -5.319628715515137
    6. 'group' → logprob: -5.444628715515137
    7. ' _' → logprob: -6.444628715515137
    8. '```' → logprob: -8.569628715515137
    9. ' ' → logprob: -8.819628715515137
    10. 'Stone' → logprob: -8.944628715515137

Token 401: '
' (ID: 198)
  Prédit: '(color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.0001923352392623201
    2. '(' → logprob: -9.125192642211914
    3. ' (' → logprob: -10.875192642211914
    4. ',' → logprob: -10.875192642211914
    5. ',color' → logprob: -11.500192642211914
    6. 'color' → logprob: -11.500192642211914
    7. ' color' → logprob: -11.625192642211914
    8. '=color' → logprob: -12.125192642211914
    9. ')' → logprob: -13.000192642211914
    10. '[color' → logprob: -13.250192642211914

Token 402: '               ' (ID: 506)
  Prédit: '(color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.003494231030344963
    2. 'color' → logprob: -5.8784942626953125
    3. '(' → logprob: -7.7534942626953125
    4. ' color' → logprob: -8.628494262695312
    5. '[color' → logprob: -10.628494262695312
    6. '()' → logprob: -11.503494262695312
    7. '=color' → logprob: -11.503494262695312
    8. '               ' → logprob: -11.503494262695312
    9. ',color' → logprob: -11.628494262695312
    10. '       ' → logprob: -12.253494262695312

Token 403: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005252491682767868
    2. ' self' → logprob: -5.255252361297607
    3. '               ' → logprob: -11.380252838134766
    4. '           ' → logprob: -12.630252838134766
    5. '       ' → logprob: -13.130252838134766
    6. '(self' → logprob: -14.255252838134766
    7. '	self' → logprob: -14.755252838134766
    8. '_self' → logprob: -14.880252838134766
    9. '[self' → logprob: -15.130252838134766
    10. '
' → logprob: -15.755252838134766

Token 404: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -13.250001907348633
    3. ' .' → logprob: -15.250001907348633
    4. '.add' → logprob: -16.250001907348633
    5. ')._' → logprob: -16.250001907348633
    6. ']._' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '.place' → logprob: -18.125001907348633
    9. ' ' → logprob: -19.000001907348633
    10. '```' → logprob: -19.250001907348633

Token 405: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -3.4121114822482923e-06
    2. '_add' → logprob: -13.000003814697266
    3. ' add' → logprob: -13.750003814697266
    4. '.add' → logprob: -17.750003814697266
    5. 'Add' → logprob: -18.750003814697266
    6. '	add' → logprob: -20.500003814697266
    7. '-add' → logprob: -21.500003814697266
    8. 'append' → logprob: -22.125003814697266
    9. 'pop' → logprob: -22.125003814697266
    10. ':add' → logprob: -22.500003814697266

Token 406: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0007101670489646494
    2. '_group' → logprob: -7.2507100105285645
    3. '```' → logprob: -16.625709533691406
    4. '_token' → logprob: -17.750709533691406
    5. '_s' → logprob: -17.875709533691406
    6. 'group' → logprob: -18.000709533691406
    7. ' _' → logprob: -18.375709533691406
    8. '_color' → logprob: -18.750709533691406
    9. '_ST' → logprob: -18.875709533691406
    10. 'Stone' → logprob: -19.125709533691406

Token 407: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -3.619311974034645e-05
    2. '_one' → logprob: -10.250036239624023
    3. 'on' → logprob: -15.250036239624023
    4. ' one' → logprob: -15.625036239624023
    5. 'One' → logprob: -15.875036239624023
    6. 'ones' → logprob: -16.625036239624023
    7. 'ore' → logprob: -17.000036239624023
    8. 'o' → logprob: -17.750036239624023
    9. '```' → logprob: -18.500036239624023
    10. '   ' → logprob: -19.000036239624023

Token 408: '(color' (ID: 27329)
  Prédit: '(color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.12700149416923523
    2. '(' → logprob: -2.1270015239715576
    3. '(
' → logprob: -10.252001762390137
    4. ' (' → logprob: -11.127001762390137
    5. 'color' → logprob: -11.502001762390137
    6. '=color' → logprob: -12.877001762390137
    7. '('' → logprob: -13.002001762390137
    8. '```' → logprob: -13.377001762390137
    9. '("("' → logprob: -14.127001762390137
    10. '(

' → logprob: -14.127001762390137

Token 409: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ')
' → logprob: -12.125008583068848
    3. ' )' → logprob: -13.375008583068848
    4. '       ' → logprob: -14.625008583068848
    5. '())' → logprob: -15.500008583068848
    6. '   ' → logprob: -15.625008583068848
    7. '()' → logprob: -16.00000762939453
    8. ')return' → logprob: -16.37500762939453
    9. '<|end|>' → logprob: -16.75000762939453
    10. ')}' → logprob: -17.12500762939453

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04738103225827217
    2. '
' → logprob: -3.7973809242248535
    3. '<|end|>' → logprob: -4.5473809242248535
    4. '    
' → logprob: -5.5473809242248535
    5. 'def' → logprob: -5.7973809242248535
    6. '       ' → logprob: -6.0473809242248535
    7. '<|end|>' → logprob: -6.6723809242248535
    8. '	def' → logprob: -7.5473809242248535
    9. '        
' → logprob: -7.6723809242248535
    10. '```' → logprob: -7.9223809242248535

Token 411: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05987870320677757
    2. '
' → logprob: -3.0598785877227783
    3. 'def' (adapté à ' def') → logprob: -5.184878826141357
    4. '    
' → logprob: -6.059878826141357
    5. '<|end|>' → logprob: -6.309878826141357
    6. ' def' → logprob: -7.434878826141357
    7. '<|end|>' → logprob: -8.5598783493042
    8. '```' → logprob: -9.0598783493042
    9. '	def' → logprob: -9.5598783493042
    10. '        
' → logprob: -9.8098783493042

Token 412: ' _' (ID: 1175)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.006632478442043066
    2. '_pop' → logprob: -5.131632328033447
    3. '_place' → logprob: -7.506632328033447
    4. '_groups' → logprob: -9.381632804870605
    5. ' _' → logprob: -10.631632804870605
    6. '_push' → logprob: -11.631632804870605
    7. '_append' → logprob: -11.756632804870605
    8. '_remove' → logprob: -11.881632804870605
    9. '_get' → logprob: -12.006632804870605
    10. '_clear' → logprob: -12.131632804870605

Token 413: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0013785678893327713
    2. 'pop' → logprob: -6.626378536224365
    3. '_add' → logprob: -9.876379013061523
    4. '_pop' → logprob: -14.376379013061523
    5. ' add' → logprob: -15.001379013061523
    6. 'groups' → logprob: -16.251379013061523
    7. 'get' → logprob: -16.501379013061523
    8. 'has' → logprob: -17.376379013061523
    9. 'append' → logprob: -17.376379013061523
    10. '_' → logprob: -17.376379013061523

Token 414: '_st' (ID: 2518)
  Prédit: '_group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.07889143377542496
    2. '_st' → logprob: -2.5788915157318115
    3. '_' → logprob: -13.45389175415039
    4. 'group' → logprob: -16.20389175415039
    5. '_groups' → logprob: -16.70389175415039
    6. 'Group' → logprob: -17.82889175415039
    7. '_gr' → logprob: -17.82889175415039
    8. '```' → logprob: -18.20389175415039
    9. '_g' → logprob: -18.32889175415039
    10. '_s' → logprob: -18.45389175415039

Token 415: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -9.472211968386546e-05
    2. '_one' → logprob: -9.375094413757324
    3. '_group' → logprob: -12.625094413757324
    4. 'ones' → logprob: -12.875094413757324
    5. 'group' → logprob: -13.000094413757324
    6. '_' → logprob: -14.250094413757324
    7. 'tone' → logprob: -15.375094413757324
    8. 'on' → logprob: -15.750094413757324
    9. 'o' → logprob: -15.750094413757324
    10. 'stone' → logprob: -16.25009536743164

Token 416: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.9728669738397e-05
    2. '(' → logprob: -9.250100135803223
    3. '(color' → logprob: -13.625100135803223
    4. '(
' → logprob: -13.750100135803223
    5. 'self' → logprob: -14.125100135803223
    6. '   ' → logprob: -14.750100135803223
    7. '       ' → logprob: -16.625099182128906
    8. ' (' → logprob: -16.875099182128906
    9. '(cls' → logprob: -17.250099182128906
    10. '=self' → logprob: -18.375099182128906

Token 417: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004387750814203173
    2. 'self' → logprob: -8.250438690185547
    3. ',' → logprob: -9.250438690185547
    4. '(color' → logprob: -9.875438690185547
    5. '(' → logprob: -11.375438690185547
    6. ')' → logprob: -11.875438690185547
    7. ')(' → logprob: -12.125438690185547
    8. 'color' → logprob: -13.250438690185547
    9. ' (' → logprob: -13.875438690185547
    10. ',self' → logprob: -14.125438690185547

Token 418: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.02222885750234127
    2. ' color' → logprob: -4.022228717803955
    3. 'self' → logprob: -5.522228717803955
    4. ' self' → logprob: -9.647229194641113
    5. '   ' → logprob: -12.147229194641113
    6. ')' → logprob: -14.022229194641113
    7. '	color' → logprob: -14.397229194641113
    8. 'c' → logprob: -14.772229194641113
    9. '.color' → logprob: -14.772229194641113
    10. '       ' → logprob: -15.147229194641113

Token 419: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010937846964225173
    2. 'self' → logprob: -6.876093864440918
    3. '):' → logprob: -11.126093864440918
    4. '(self' → logprob: -11.126093864440918
    5. '   ' → logprob: -11.626093864440918
    6. '       ' → logprob: -11.626093864440918
    7. ' ,' → logprob: -12.001093864440918
    8. ')' → logprob: -13.001093864440918
    9. '):
' → logprob: -13.126093864440918
    10. ',self' → logprob: -13.626093864440918

Token 420: ' int' (ID: 677)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.19787634909152985
    2. ' color' → logprob: -1.9478763341903687
    3. 'int' → logprob: -3.447876453399658
    4. 'self' → logprob: -5.572876453399658
    5. ' int' → logprob: -6.822876453399658
    6. ' self' → logprob: -8.8228759765625
    7. '   ' → logprob: -10.1978759765625
    8. ')' → logprob: -10.1978759765625
    9. '1' → logprob: -11.5728759765625
    10. '       ' → logprob: -11.8228759765625

Token 421: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10040690749883652
    2. '):
' → logprob: -2.3504068851470947
    3. '):
' → logprob: -9.100406646728516
    4. ')' → logprob: -10.100406646728516
    5. '   ' → logprob: -10.350406646728516
    6. '       ' → logprob: -11.475406646728516
    7. ',' → logprob: -12.975406646728516
    8. ':' → logprob: -13.725406646728516
    9. ' ):' → logprob: -14.225406646728516
    10. '):

' → logprob: -14.600406646728516

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5133568048477173
    2. ' if' → logprob: -1.1383568048477173
    3. 'if' → logprob: -2.5133566856384277
    4. '   ' → logprob: -8.888357162475586
    5. '```' → logprob: -10.763357162475586
    6. '	if' → logprob: -11.888357162475586
    7. '#' → logprob: -13.013357162475586
    8. 'group' → logprob: -13.388357162475586
    9. 'self' → logprob: -13.638357162475586
    10. ':' → logprob: -14.013357162475586

Token 423: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0026711381506174803
    2. '       ' → logprob: -6.502671241760254
    3. ' if' → logprob: -6.752671241760254
    4. '   ' → logprob: -15.502671241760254
    5. '```' → logprob: -16.377670288085938
    6. '	if' → logprob: -17.252670288085938
    7. 'If' → logprob: -20.127670288085938
    8. '#' (adapté à ' #') → logprob: -21.002670288085938
    9. '           ' → logprob: -21.377670288085938
    10. ' ' → logprob: -21.502670288085938

Token 424: ' Append' (ID: 58624)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00038574778591282666
    2. '       ' → logprob: -8.250385284423828
    3. ' if' → logprob: -9.000385284423828
    4. '   ' → logprob: -14.000385284423828
    5. '```' → logprob: -15.625385284423828
    6. 'def' → logprob: -16.000385284423828
    7. 'If' → logprob: -18.875385284423828
    8. '	if' → logprob: -19.500385284423828
    9. 'self' → logprob: -19.500385284423828
    10. '           ' → logprob: -20.125385284423828

Token 425: ' one' (ID: 1001)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6377722024917603
    2. 'if' → logprob: -0.7627722024917603
    3. 'self' → logprob: -6.262772083282471
    4. '       ' → logprob: -6.387772083282471
    5. 'def' → logprob: -7.512772083282471
    6. ' self' → logprob: -8.387772560119629
    7. ' stone' → logprob: -9.012772560119629
    8. '   ' → logprob: -9.512772560119629
    9. 'stone' → logprob: -9.512772560119629
    10. '
' → logprob: -9.887772560119629

Token 426: ' stone' (ID: 14352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5974521636962891
    2. 'if' → logprob: -0.9724521636962891
    3. 'stone' → logprob: -3.347452163696289
    4. '       ' → logprob: -3.597452163696289
    5. ' stone' → logprob: -5.222452163696289
    6. '.' → logprob: -7.597452163696289
    7. 'def' → logprob: -7.597452163696289
    8. 'token' → logprob: -7.972452163696289
    9. '   ' → logprob: -8.097452163696289
    10. ',' → logprob: -8.222452163696289

Token 427: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17607806622982025
    2. ' if' → logprob: -1.9260780811309814
    3. ',' → logprob: -5.176077842712402
    4. 'if' → logprob: -5.301077842712402
    5. ':' → logprob: -7.051077842712402
    6. ' or' → logprob: -7.176077842712402
    7. '
' → logprob: -7.801077842712402
    8. '(' → logprob: -7.926077842712402
    9. ' at' → logprob: -8.176077842712402
    10. '   ' → logprob: -8.301077842712402

Token 428: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03739792853593826
    2. 'the' → logprob: -3.412397861480713
    3. ' the' → logprob: -6.287397861480713
    4. ' self' → logprob: -6.287397861480713
    5. 'if' → logprob: -11.537398338317871
    6. '(self' → logprob: -12.287398338317871
    7. 'a' → logprob: -12.787398338317871
    8. 'last' → logprob: -12.787398338317871
    9. '   ' → logprob: -14.037398338317871
    10. 'existing' → logprob: -14.037398338317871

Token 429: ' right' (ID: 1849)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.5596193671226501
    2. 'if' → logprob: -1.059619426727295
    3. ' last' → logprob: -3.184619426727295
    4. 'groups' → logprob: -4.184619426727295
    5. 'right' → logprob: -4.434619426727295
    6. ' if' → logprob: -4.684619426727295
    7. ' groups' → logprob: -6.184619426727295
    8. 'stack' → logprob: -7.434619426727295
    9. 'existing' → logprob: -7.684619426727295
    10. 'group' → logprob: -8.309618949890137

Token 430: ' end' (ID: 1268)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011242816224694252
    2. ' if' → logprob: -5.011242866516113
    3. ',' → logprob: -6.136242866516113
    4. ':' → logprob: -6.636242866516113
    5. 'if' → logprob: -8.511242866516113
    6. '<|end|>' → logprob: -8.636242866516113
    7. '   ' → logprob: -8.761242866516113
    8. '
' → logprob: -9.136242866516113
    9. '<|end|>' → logprob: -10.011242866516113
    10. '.' → logprob: -10.011242866516113

Token 431: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0065962402150034904
    2. ' if' → logprob: -5.756596088409424
    3. ':' → logprob: -6.756596088409424
    4. '<|end|>' → logprob: -7.006596088409424
    5. ',' → logprob: -7.256596088409424
    6. '<|end|>' → logprob: -8.506596565246582
    7. '   ' → logprob: -9.381596565246582
    8. 'if' → logprob: -9.881596565246582
    9. ' or' → logprob: -10.006596565246582
    10. '        
' → logprob: -10.006596565246582

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030301176011562347
    2. ' if' → logprob: -5.878030300140381
    3. '   ' → logprob: -8.753029823303223
    4. 'if' → logprob: -10.503029823303223
    5. ',' → logprob: -10.753029823303223
    6. ':' → logprob: -11.878029823303223
    7. '           ' → logprob: -13.503029823303223
    8. ' with' → logprob: -13.628029823303223
    9. '        
' → logprob: -13.628029823303223
    10. ' or' → logprob: -14.128029823303223

Token 433: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.036272838711738586
    2. ' if' → logprob: -3.5362727642059326
    3. '       ' → logprob: -5.036273002624512
    4. '   ' → logprob: -13.161273002624512
    5. '```' → logprob: -13.661273002624512
    6. '	if' → logprob: -16.536272048950195
    7. 'If' → logprob: -17.286272048950195
    8. ' ' → logprob: -18.161272048950195
    9. 'def' → logprob: -19.036272048950195
    10. 'last' → logprob: -19.286272048950195

Token 434: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3320925235748291
    2. 'not' → logprob: -1.332092523574829
    3. ' not' → logprob: -4.33209228515625
    4. ' self' → logprob: -5.20709228515625
    5. '   ' → logprob: -10.58209228515625
    6. '(not' → logprob: -12.58209228515625
    7. '(self' → logprob: -12.70709228515625
    8. 'len' → logprob: -13.45709228515625
    9. '	self' → logprob: -13.70709228515625
    10. '       ' → logprob: -13.83209228515625

Token 435: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -1.0280383548888494e-06
    2. 'groups' → logprob: -13.875000953674316
    3. 'roups' → logprob: -18.125001907348633
    4. '.' → logprob: -18.375001907348633
    5. '.group' → logprob: -19.000001907348633
    6. ' groups' → logprob: -19.250001907348633
    7. '```' → logprob: -19.375001907348633
    8. '(groups' → logprob: -19.750001907348633
    9. ' .' → logprob: -19.875001907348633
    10. ').' → logprob: -19.875001907348633

Token 436: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759594440460205
    2. 'and' → logprob: -0.8259594440460205
    3. '	and' → logprob: -11.825959205627441
    4. '       ' → logprob: -12.200959205627441
    5. '   ' → logprob: -13.200959205627441
    6. ':' → logprob: -13.450959205627441
    7. '           ' → logprob: -13.575959205627441
    8. '==' → logprob: -13.700959205627441
    9. ' ' → logprob: -14.575959205627441
    10. ' и' → logprob: -14.700959205627441

Token 437: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.848420551046729e-05
    2. ' self' → logprob: -9.7500581741333
    3. '       ' → logprob: -16.750059127807617
    4. '           ' → logprob: -18.750059127807617
    5. '(self' → logprob: -19.000059127807617
    6. '   ' → logprob: -19.125059127807617
    7. '	self' → logprob: -20.125059127807617
    8. '[self' → logprob: -21.500059127807617
    9. '=self' → logprob: -22.375059127807617
    10. 'Self' → logprob: -22.375059127807617

Token 438: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -0.0001801801408873871
    2. 'groups' → logprob: -8.6251802444458
    3. 'roups' → logprob: -15.2501802444458
    4. '(groups' → logprob: -16.750179290771484
    5. ' .' → logprob: -16.875179290771484
    6. ' groups' → logprob: -17.000179290771484
    7. '_groups' → logprob: -17.125179290771484
    8. '.' → logprob: -17.500179290771484
    9. '[' → logprob: -17.750179290771484
    10. '   ' → logprob: -18.000179290771484

Token 439: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.531315314830863e-06
    2. ' and' → logprob: -14.000003814697266
    3. 'and' → logprob: -14.000003814697266
    4. '```' → logprob: -14.000003814697266
    5. '   ' → logprob: -14.875003814697266
    6. '       ' → logprob: -15.500003814697266
    7. '[' → logprob: -15.875003814697266
    8. '][-' → logprob: -16.125003814697266
    9. '[
' → logprob: -16.625003814697266
    10. ' [-' → logprob: -17.250003814697266

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021807955636177212
    2. 'color' → logprob: -8.875218391418457
    3. '().' → logprob: -10.750218391418457
    4. '.' → logprob: -10.750218391418457
    5. '].' → logprob: -11.125218391418457
    6. '.color' → logprob: -11.875218391418457
    7. '-' → logprob: -12.125218391418457
    8. ' ' → logprob: -13.000218391418457
    9. '```' → logprob: -13.375218391418457
    10. '0' → logprob: -14.000218391418457

Token 441: '].' (ID: 1651)
  Prédit: '.color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.color' → logprob: -0.01782105304300785
    2. '].' → logprob: -4.267820835113525
    3. '.' → logprob: -6.392820835113525
    4. ' .' → logprob: -7.017820835113525
    5. ').' → logprob: -7.142820835113525
    6. '}.' → logprob: -8.767821311950684
    7. '.code' → logprob: -10.892821311950684
    8. '.status' → logprob: -11.517821311950684
    9. '.type' → logprob: -11.642821311950684
    10. '.value' → logprob: -11.767821311950684

Token 442: 'color' (ID: 4991)
  Prédit: 'color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -6.704273118884885e-07
    2. '.color' → logprob: -14.625000953674316
    3. ' color' → logprob: -15.875000953674316
    4. 'count' → logprob: -19.75
    5. '```' → logprob: -19.75
    6. '	color' → logprob: -19.875
    7. '   ' → logprob: -20.25
    8. '
' → logprob: -20.25
    9. '=color' → logprob: -20.5
    10. '`' → logprob: -20.75

Token 443: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04859089106321335
    2. ' ==' → logprob: -3.048590898513794
    3. ')==' → logprob: -13.673590660095215
    4. ']==' → logprob: -13.798590660095215
    5. '()==' → logprob: -14.923590660095215
    6. '=' → logprob: -15.048590660095215
    7. '===' → logprob: -15.173590660095215
    8. '==
' → logprob: -15.673590660095215
    9. ')' → logprob: -16.04859161376953
    10. '```' → logprob: -16.42359161376953

Token 444: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0015023599844425917
    2. ' color' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.751502990722656
    4. '=color' → logprob: -18.626502990722656
    5. ' ' → logprob: -19.126502990722656
    6. '	color' → logprob: -19.626502990722656
    7. '[color' → logprob: -20.126502990722656
    8. 'Color' → logprob: -20.376502990722656
    9. '.color' → logprob: -20.876502990722656
    10. '(color' → logprob: -21.001502990722656

Token 445: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17870767414569855
    2. ':
' → logprob: -1.9287077188491821
    3. '           ' → logprob: -4.178707599639893
    4. ' and' → logprob: -6.303707599639893
    5. '       ' → logprob: -7.178707599639893
    6. 'and' → logprob: -8.92870807647705
    7. '   ' → logprob: -9.55370807647705
    8. ',' → logprob: -9.92870807647705
    9. '):
' → logprob: -10.55370807647705
    10. ':
' → logprob: -10.92870807647705

Token 446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.069229245185852
    2. ':' → logprob: -1.194229245185852
    3. ':
' → logprob: -1.569229245185852
    4. '       ' → logprob: -1.944229245185852
    5. ' and' → logprob: -7.8192291259765625
    6. ',' → logprob: -7.8192291259765625
    7. '<|end|>' → logprob: -7.9442291259765625
    8. '):
' → logprob: -8.444229125976562
    9. '```' → logprob: -8.444229125976562
    10. '<|end|>' → logprob: -8.569229125976562

Token 447: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006858159322291613
    2. ' self' → logprob: -5.2568583488464355
    3. '           ' → logprob: -6.6318583488464355
    4. '               ' → logprob: -8.131857872009277
    5. '
' → logprob: -11.506857872009277
    6. '	self' → logprob: -14.881857872009277
    7. ' ' → logprob: -15.381857872009277
    8. '   ' → logprob: -16.006858825683594
    9. '```' → logprob: -16.131858825683594
    10. '[self' → logprob: -16.256858825683594

Token 448: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -6.630610641877865e-06
    2. 'groups' → logprob: -12.625006675720215
    3. '.group' → logprob: -14.250006675720215
    4. '.' → logprob: -14.625006675720215
    5. 'roups' → logprob: -14.625006675720215
    6. ').' → logprob: -14.750006675720215
    7. ' .' → logprob: -14.875006675720215
    8. '
' → logprob: -15.000006675720215
    9. '.classes' → logprob: -16.1250057220459
    10. '.Groups' → logprob: -16.1250057220459

Token 449: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '][-' → logprob: -18.75
    3. '   ' → logprob: -20.375
    4. '[' → logprob: -20.375
    5. '.append' → logprob: -20.5
    6. '```' → logprob: -21.5
    7. '-' → logprob: -21.625
    8. '       ' → logprob: -21.75
    9. '[
' → logprob: -22.5
    10. '           ' → logprob: -22.5

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005570820067077875
    2. '-' → logprob: -7.500556945800781
    3. ' -' → logprob: -13.250556945800781
    4. '[-' → logprob: -13.750556945800781
    5. ' ' → logprob: -14.500556945800781
    6. '(-' → logprob: -15.688056945800781
    7. 'len' → logprob: -16.18805694580078
    8. '][-' → logprob: -16.25055694580078
    9. '```' → logprob: -16.56305694580078
    10. '   ' → logprob: -16.81305694580078

Token 451: '].' (ID: 1651)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.002947393571957946
    2. '].' → logprob: -6.2529473304748535
    3. '.' → logprob: -7.0029473304748535
    4. ').' → logprob: -10.752947807312012
    5. '.value' → logprob: -10.877947807312012
    6. '.increment' → logprob: -10.877947807312012
    7. '}.' → logprob: -11.002947807312012
    8. ' .' → logprob: -12.002947807312012
    9. '.code' → logprob: -12.002947807312012
    10. '.size' → logprob: -13.252947807312012

Token 452: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: 0.0
    2. '__' → logprob: -17.75
    3. ' count' → logprob: -18.625
    4. '
' → logprob: -19.625
    5. '_count' → logprob: -19.75
    6. '.count' → logprob: -20.25
    7. '	count' → logprob: -20.375
    8. 'increment' → logprob: -20.625
    9. 'add' → logprob: -21.0
    10. '$count' → logprob: -21.0

Token 453: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10020796209573746
    2. ' +=' → logprob: -2.350208044052124
    3. ']+=' → logprob: -13.600208282470703
    4. '   ' → logprob: -16.475208282470703
    5. '    ' → logprob: -18.475208282470703
    6. '=' → logprob: -18.850208282470703
    7. '+' → logprob: -19.225208282470703
    8. '+='' → logprob: -19.475208282470703
    9. '```' → logprob: -19.475208282470703
    10. '+=(' → logprob: -19.600208282470703

Token 454: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -20.875
    5. '`' → logprob: -23.75
    6. '       ' → logprob: -24.25
    7. '
' → logprob: -24.25
    8. '[' → logprob: -24.375
    9. '۱' → logprob: -24.375
    10. '１' → logprob: -24.375

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -20.75
    4. '```' → logprob: -21.0
    5. '
' → logprob: -23.375
    6. '１' → logprob: -23.375
    7. '۱' → logprob: -23.5
    8. '`' → logprob: -23.75
    9. '  ' → logprob: -24.75
    10. '१' → logprob: -25.0

Token 456: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001977999461814761
    2. 'else' → logprob: -6.376977920532227
    3. ' else' → logprob: -8.251977920532227
    4. '           ' → logprob: -11.251977920532227
    5. '   ' → logprob: -14.501977920532227
    6. '<|end|>' → logprob: -14.876977920532227
    7. '```' → logprob: -15.001977920532227
    8. '	else' → logprob: -15.376977920532227
    9. '               ' → logprob: -16.126977920532227
    10. 'return' → logprob: -16.126977920532227

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008953598327934742
    2. 'else' → logprob: -4.75895357131958
    3. ' else' → logprob: -8.008954048156738
    4. '           ' → logprob: -12.008954048156738
    5. 'elif' → logprob: -15.758954048156738
    6. '   ' → logprob: -16.383953094482422
    7. '	else' → logprob: -16.633953094482422
    8. '```' → logprob: -16.883953094482422
    9. '               ' → logprob: -17.133953094482422
    10. 'import' → logprob: -17.258953094482422

Token 458: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14743417501449585
    2. 'else' (adapté à ' else') → logprob: -2.1474342346191406
    3. ' else' → logprob: -3.8974342346191406
    4. '   ' → logprob: -13.14743423461914
    5. '           ' → logprob: -14.27243423461914
    6. '```' → logprob: -14.64743423461914
    7. '	else' → logprob: -15.27243423461914
    8. 'elif' → logprob: -15.77243423461914
    9. 'import' → logprob: -17.27243423461914
    10. '               ' → logprob: -17.77243423461914

Token 459: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43063467741012573
    2. ':
' → logprob: -1.0556347370147705
    3. '           ' → logprob: -6.805634498596191
    4. '       ' → logprob: -7.180634498596191
    5. 'self' → logprob: -11.055634498596191
    6. ',' → logprob: -11.555634498596191
    7. '   ' → logprob: -11.680634498596191
    8. ':
' → logprob: -12.180634498596191
    9. '```' → logprob: -12.305634498596191
    10. ':self' → logprob: -12.305634498596191

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007509502582252026
    2. '       ' → logprob: -5.507509708404541
    3. 'self' → logprob: -5.757509708404541
    4. ' self' → logprob: -8.257509231567383
    5. '   ' → logprob: -12.132509231567383
    6. '               ' → logprob: -14.257509231567383
    7. '```' → logprob: -15.132509231567383
    8. '	       ' → logprob: -15.632509231567383
    9. '		' → logprob: -16.257509231567383
    10. '	self' → logprob: -16.382509231567383

Token 461: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0026646002661436796
    2. ' self' → logprob: -6.252664566040039
    3. '       ' → logprob: -7.252664566040039
    4. '           ' → logprob: -10.627664566040039
    5. 'Stone' → logprob: -13.252664566040039
    6. '   ' → logprob: -14.252664566040039
    7. '               ' → logprob: -14.752664566040039
    8. '	self' → logprob: -15.502664566040039
    9. ' Stone' → logprob: -15.502664566040039
    10. ' ' → logprob: -17.25266456604004

Token 462: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -5.6696149840718135e-05
    2. '._' → logprob: -10.000056266784668
    3. 'groups' → logprob: -11.625056266784668
    4. ' .' → logprob: -14.250056266784668
    5. '_groups' → logprob: -14.500056266784668
    6. '.add' → logprob: -14.875056266784668
    7. '.' → logprob: -15.500056266784668
    8. '   ' → logprob: -15.750056266784668
    9. '.group' → logprob: -16.750057220458984
    10. '(groups' → logprob: -16.875057220458984

Token 463: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.347765181795694e-05
    2. '.' → logprob: -9.875053405761719
    3. '.Append' → logprob: -13.750053405761719
    4. '.extend' → logprob: -14.750053405761719
    5. ').' → logprob: -15.875053405761719
    6. '.app' → logprob: -16.00005340576172
    7. 'append' → logprob: -16.25005340576172
    8. '.=' → logprob: -17.00005340576172
    9. '.insert' → logprob: -17.50005340576172
    10. '.add' → logprob: -17.87505340576172

Token 464: '(' (ID: 7)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.2520541548728943
    2. '(' → logprob: -1.502054214477539
    3. ' Stone' → logprob: -9.002054214477539
    4. '(St' → logprob: -13.377054214477539
    5. 'St' → logprob: -15.627054214477539
    6. '   ' → logprob: -17.00205421447754
    7. 'stone' → logprob: -17.12705421447754
    8. ' stone' → logprob: -17.25205421447754
    9. '石' → logprob: -17.87705421447754
    10. '       ' → logprob: -17.87705421447754

Token 465: 'Stone' (ID: 56062)
  Prédit: 'Stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -3.7697225252486533e-06
    2. ' Stone' → logprob: -12.500003814697266
    3. 'St' → logprob: -18.000003814697266
    4. '   ' → logprob: -18.750003814697266
    5. '       ' → logprob: -18.875003814697266
    6. '           ' → logprob: -21.375003814697266
    7. '石' → logprob: -23.625003814697266
    8. 'Sto' → logprob: -23.875003814697266
    9. 'stone' → logprob: -24.250003814697266
    10. 'Steel' → logprob: -24.375003814697266

Token 466: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -6.704273118884885e-07
    2. 'Color' → logprob: -15.000000953674316
    3. 'group' → logprob: -16.125
    4. 'Stone' → logprob: -16.25
    5. '_group' → logprob: -18.625
    6. 'roup' → logprob: -19.0
    7. '	Group' → logprob: -20.625
    8. ' group' → logprob: -20.75
    9. '(' → logprob: -21.0
    10. '(Group' → logprob: -21.125

Token 467: '(color' (ID: 27329)
  Prédit: '(color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.001503313542343676
    2. 'color' → logprob: -6.5015034675598145
    3. '=color' → logprob: -14.501502990722656
    4. ' color' → logprob: -15.626502990722656
    5. '[color' → logprob: -16.126502990722656
    6. '(' → logprob: -16.501502990722656
    7. ',color' → logprob: -16.876502990722656
    8. ')' → logprob: -17.001502990722656
    9. '(
' → logprob: -18.001502990722656
    10. '	color' → logprob: -18.501502990722656

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.333223139634356e-05
    2. ',color' → logprob: -10.375033378601074
    3. ' ,' → logprob: -13.500033378601074
    4. 'color' → logprob: -14.750033378601074
    5. '=color' → logprob: -16.500032424926758
    6. '1' → logprob: -16.500032424926758
    7. '   ' → logprob: -16.875032424926758
    8. ',
' → logprob: -17.000032424926758
    9. ')' → logprob: -17.125032424926758
    10. '=' → logprob: -17.375032424926758

Token 469: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.375001907348633
    4. '       ' → logprob: -18.250001907348633
    5. '
' → logprob: -18.625001907348633
    6. '           ' → logprob: -19.750001907348633
    7. '  ' → logprob: -20.375001907348633
    8. '```' → logprob: -20.500001907348633
    9. '     ' → logprob: -20.750001907348633
    10. '    ' → logprob: -21.625001907348633

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -17.125
    4. '
' → logprob: -18.0
    5. '       ' → logprob: -20.0
    6. '```' → logprob: -20.25
    7. '           ' → logprob: -21.375
    8. ')' → logprob: -21.875
    9. '１' → logprob: -22.0
    10. '  ' → logprob: -22.125

Token 471: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04859509319067001
    2. '))' → logprob: -3.0485951900482178
    3. ')
' → logprob: -11.923595428466797
    4. ')}' → logprob: -14.798595428466797
    5. '))
' → logprob: -15.298595428466797
    6. ')))' → logprob: -15.798595428466797
    7. ' )' → logprob: -16.423595428466797
    8. '())' → logprob: -16.673595428466797
    9. '       ' → logprob: -17.048595428466797
    10. '})' → logprob: -17.923595428466797

Token 472: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 473: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09279372543096542
    2. '       ' → logprob: -3.3427937030792236
    3. 'else' → logprob: -3.3427937030792236
    4. '   ' → logprob: -4.842793941497803
    5. 'def' → logprob: -4.967793941497803
    6. ' self' → logprob: -6.592793941497803
    7. 'if' (adapté à ' if') → logprob: -6.842793941497803
    8. '```' → logprob: -8.092793464660645
    9. ' else' → logprob: -8.717793464660645
    10. '<|end|>' → logprob: -9.592793464660645

Token 474: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.14268682897090912
    2. ' color' → logprob: -2.0176868438720703
    3. '   ' → logprob: -12.01768684387207
    4. '    ' → logprob: -13.39268684387207
    5. ' ' → logprob: -13.51768684387207
    6. '  ' → logprob: -14.01768684387207
    7. '	color' → logprob: -14.26768684387207
    8. 'self' → logprob: -15.01768684387207
    9. 'Color' → logprob: -15.76768684387207
    10. '     ' → logprob: -15.76768684387207

Token 475: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04859282076358795
    2. ' ==' → logprob: -3.0485928058624268
    3. '=' → logprob: -13.173592567443848
    4. '==
' → logprob: -13.298592567443848
    5. '===' → logprob: -14.173592567443848
    6. '   ' → logprob: -14.798592567443848
    7. ')==' → logprob: -15.423592567443848
    8. '()==' → logprob: -15.798592567443848
    9. ']==' → logprob: -15.923592567443848
    10. '[' → logprob: -15.923592567443848

Token 476: ' Stone' (ID: 22850)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.0004317420825827867
    2. ' Stone' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.125432014465332
    4. 'White' → logprob: -15.500432014465332
    5. '0' → logprob: -17.625431060791016
    6. ' stone' → logprob: -18.000431060791016
    7. '    ' → logprob: -18.500431060791016
    8. 'stone' → logprob: -18.625431060791016
    9. 'STONE' → logprob: -18.875431060791016
    10. ' ' → logprob: -19.000431060791016

Token 477: 'Color' (ID: 2324)
  Prédit: 'Color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -1.652451464906335e-05
    2. 'color' → logprob: -11.125016212463379
    3. 'Stone' → logprob: -14.250016212463379
    4. 'COLOR' → logprob: -14.375016212463379
    5. 'White' → logprob: -15.375016212463379
    6. '_color' → logprob: -16.125017166137695
    7. '_COLOR' → logprob: -16.875017166137695
    8. '.Color' → logprob: -17.500017166137695
    9. 'C' → logprob: -18.250017166137695
    10. '   ' → logprob: -18.375017166137695

Token 478: '.WHITE' (ID: 75459)
  Prédit: '.WHITE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.WHITE' → logprob: -0.0002444125711917877
    2. '.BLACK' → logprob: -8.875244140625
    3. '.' → logprob: -9.625244140625
    4. 'WHITE' → logprob: -10.250244140625
    5. '   ' → logprob: -13.000244140625
    6. ' .' → logprob: -15.125244140625
    7. '.White' → logprob: -15.375244140625
    8. '.white' → logprob: -15.875244140625
    9. '​.' → logprob: -16.000244140625
    10. '```' → logprob: -16.875244140625

Token 479: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25202229619026184
    2. ':' → logprob: -1.5020222663879395
    3. ':
' → logprob: -10.502022743225098
    4. '       ' → logprob: -10.752022743225098
    5. '):
' → logprob: -11.127022743225098
    6. '   ' → logprob: -11.127022743225098
    7. '           ' → logprob: -12.127022743225098
    8. '=' → logprob: -13.252022743225098
    9. ' :
' → logprob: -13.377022743225098
    10. '():
' → logprob: -13.752022743225098

Token 480: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003255788702517748
    2. ' self' → logprob: -6.253255844116211
    3. 'self' → logprob: -6.628255844116211
    4. '	       ' → logprob: -13.378255844116211
    5. '   ' → logprob: -14.503255844116211
    6. ' ' → logprob: -15.003255844116211
    7. '               ' → logprob: -15.003255844116211
    8. '       ' → logprob: -15.128255844116211
    9. '	self' → logprob: -15.253255844116211
    10. '		' → logprob: -15.253255844116211

Token 481: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.021291611716151237
    2. ' self' → logprob: -4.021291732788086
    3. '           ' → logprob: -5.771291732788086
    4. '               ' → logprob: -10.896291732788086
    5. '   ' → logprob: -13.771291732788086
    6. '	self' → logprob: -13.896291732788086
    7. '       ' → logprob: -15.271291732788086
    8. ' ' → logprob: -15.646291732788086
    9. ' ' → logprob: -16.271291732788086
    10. '  ' → logprob: -17.771291732788086

Token 482: '.white' (ID: 28729)
  Prédit: '.white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.white' → logprob: -4.7994282795116305e-05
    2. 'white' → logprob: -10.62504768371582
    3. '.' → logprob: -10.75004768371582
    4. ' .' → logprob: -13.75004768371582
    5. '白' → logprob: -14.12504768371582
    6. ' white' → logprob: -15.75004768371582
    7. ':white' → logprob: -15.87504768371582
    8. '.White' → logprob: -17.25004768371582
    9. '   ' → logprob: -17.50004768371582
    10. '       ' → logprob: -17.62504768371582

Token 483: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00029625516617670655
    2. 'count' → logprob: -8.125296592712402
    3. 'white' → logprob: -16.125295639038086
    4. 'self' → logprob: -16.750295639038086
    5. '\' → logprob: -18.375295639038086
    6. 's' → logprob: -18.625295639038086
    7. ' count' → logprob: -18.750295639038086
    8. '+=' → logprob: -19.250295639038086
    9. 'Count' → logprob: -19.375295639038086
    10. '   ' → logprob: -19.500295639038086

Token 484: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005234594456851482
    2. ' +=' → logprob: -5.255234718322754
    3. ']+=' → logprob: -14.380234718322754
    4. '+' → logprob: -16.630233764648438
    5. '   ' → logprob: -17.505233764648438
    6. '       ' → logprob: -18.130233764648438
    7. '=' → logprob: -18.255233764648438
    8. '           ' → logprob: -18.505233764648438
    9. '+='' → logprob: -19.255233764648438
    10. '    ' → logprob: -19.505233764648438

Token 485: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.75
    4. '       ' → logprob: -21.875
    5. '```' → logprob: -21.875
    6. '           ' → logprob: -22.375
    7. '+' → logprob: -22.625
    8. '-' → logprob: -22.625
    9. '１' → logprob: -23.25
    10. '۱' → logprob: -23.75

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.5
    4. '```' → logprob: -21.125
    5. '+' → logprob: -21.25
    6. '-' → logprob: -22.25
    7. '۱' → logprob: -22.25
    8. '１' → logprob: -22.375
    9. '       ' → logprob: -22.375
    10. '0' → logprob: -22.5

Token 487: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2735559642314911
    2. '<|end|>' → logprob: -1.6485559940338135
    3. 'else' → logprob: -3.6485559940338135
    4. 'def' → logprob: -4.273555755615234
    5. '
' → logprob: -5.523555755615234
    6. ' else' → logprob: -6.773555755615234
    7. '```' → logprob: -7.023555755615234
    8. '<|end|>' → logprob: -7.898555755615234
    9. '       ' → logprob: -8.648555755615234
    10. '	else' → logprob: -9.273555755615234

Token 489: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05559384450316429
    2. '   ' → logprob: -3.055593729019165
    3. 'else' → logprob: -5.055593967437744
    4. ' def' → logprob: -7.930593967437744
    5. 'elif' → logprob: -8.430593490600586
    6. ' else' → logprob: -11.680593490600586
    7. '```' → logprob: -12.055593490600586
    8. '<|end|>' → logprob: -12.055593490600586
    9. '	def' → logprob: -12.555593490600586
    10. '       ' → logprob: -12.680593490600586

Token 490: ' _' (ID: 1175)
  Prédit: '_pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pop' → logprob: -0.001656494103372097
    2. '_place' → logprob: -7.251656532287598
    3. ' _' → logprob: -7.876656532287598
    4. '_remove' → logprob: -8.251656532287598
    5. '_add' → logprob: -8.251656532287598
    6. '_white' → logprob: -10.501656532287598
    7. 'pop' → logprob: -12.376656532287598
    8. '_get' → logprob: -12.626656532287598
    9. '_reset' → logprob: -13.376656532287598
    10. '_clear' → logprob: -13.376656532287598

Token 491: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.0004224515287205577
    2. 'remove' → logprob: -7.875422477722168
    3. 'add' → logprob: -10.250422477722168
    4. '_pop' → logprob: -12.375422477722168
    5. 'subtract' → logprob: -14.000422477722168
    6. 'sub' → logprob: -14.250422477722168
    7. 'count' → logprob: -15.250422477722168
    8. ' pop' → logprob: -16.12542152404785
    9. 'get' → logprob: -16.12542152404785
    10. 'reduce' → logprob: -16.25042152404785

Token 492: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -4.274932143744081e-05
    2. 'right' → logprob: -10.125042915344238
    3. 'Right' → logprob: -13.875042915344238
    4. '   ' → logprob: -14.750042915344238
    5. '_color' → logprob: -14.750042915344238
    6. '```' → logprob: -15.625042915344238
    7. 'self' → logprob: -16.000041961669922
    8. 'def' → logprob: -16.000041961669922
    9. '右' → logprob: -16.250041961669922
    10. '       ' → logprob: -16.625041961669922

Token 493: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -4.723352049040841e-06
    2. '_right' → logprob: -13.125004768371582
    3. 'color' → logprob: -14.000004768371582
    4. '```' → logprob: -14.250004768371582
    5. '_group' → logprob: -15.000004768371582
    6. '_code' → logprob: -15.500004768371582
    7. '   ' → logprob: -16.250003814697266
    8. '_count' → logprob: -16.625003814697266
    9. '_sequence' → logprob: -16.625003814697266
    10. 'Color' → logprob: -16.625003814697266

Token 494: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.004394036717712879
    2. 'sequence' → logprob: -6.129394054412842
    3. 'self' → logprob: -6.379394054412842
    4. '(self' → logprob: -7.754394054412842
    5. 'def' → logprob: -10.254393577575684
    6. '```' → logprob: -11.379393577575684
    7. '   ' → logprob: -11.379393577575684
    8. 's' → logprob: -11.504393577575684
    9. '_seq' → logprob: -13.004393577575684
    10. '_group' → logprob: -13.254393577575684

Token 495: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002407282590866089
    2. '(' → logprob: -8.375240325927734
    3. 'self' → logprob: -11.875240325927734
    4. '   ' → logprob: -13.500240325927734
    5. 'def' → logprob: -13.875240325927734
    6. ' (' → logprob: -14.625240325927734
    7. '       ' → logprob: -15.375240325927734
    8. '```' → logprob: -16.000240325927734
    9. '(Self' → logprob: -17.500240325927734
    10. '(
' → logprob: -17.750240325927734

Token 496: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09373284876346588
    2. 'self' → logprob: -2.4687328338623047
    3. ')' → logprob: -6.218732833862305
    4. '       ' → logprob: -7.093732833862305
    5. '   ' → logprob: -7.093732833862305
    6. '):
' → logprob: -7.468732833862305
    7. '):' → logprob: -8.343732833862305
    8. ')(' → logprob: -9.093732833862305
    9. 'def' → logprob: -9.593732833862305
    10. ' self' → logprob: -10.218732833862305

Token 497: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008307131356559694
    2. 'self' → logprob: -7.62583065032959
    3. '       ' → logprob: -8.50083065032959
    4. '(' → logprob: -9.50083065032959
    5. '   ' → logprob: -9.87583065032959
    6. 'def' → logprob: -11.37583065032959
    7. '```' → logprob: -14.62583065032959
    8. ' self' → logprob: -14.75083065032959
    9. '[self' → logprob: -15.87583065032959
    10. ' (' → logprob: -15.87583065032959

Token 498: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.127333340875339e-06
    2. ' int' → logprob: -13.375003814697266
    3. 'None' → logprob: -13.750003814697266
    4. '[int' → logprob: -14.125003814697266
    5. '   ' → logprob: -14.750003814697266
    6. '(int' → logprob: -15.000003814697266
    7. ' ' → logprob: -17.750003814697266
    8. 'Optional' → logprob: -17.875003814697266
    9. '	int' → logprob: -18.375003814697266
    10. '
' → logprob: -18.750003814697266

Token 499: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4444732069969177
    2. ':
' → logprob: -1.6944732666015625
    3. ':' → logprob: -1.9444732666015625
    4. '(self' → logprob: -3.8194732666015625
    5. '):
' → logprob: -4.9444732666015625
    6. 'self' → logprob: -6.5694732666015625
    7. '():
' → logprob: -7.1944732666015625
    8. '   ' → logprob: -8.319473266601562
    9. '```' → logprob: -8.944473266601562
    10. '(' → logprob: -9.319473266601562

Token 500: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3910442888736725
    2. '       ' → logprob: -1.14104425907135
    3. 'removed' → logprob: -5.6410441398620605
    4. 'if' → logprob: -8.266044616699219
    5. ' count' → logprob: -8.891044616699219
    6. '   ' → logprob: -9.391044616699219
    7. 'right' → logprob: -10.391044616699219
    8. ' removed' → logprob: -10.641044616699219
    9. '```' → logprob: -10.766044616699219
    10. 'total' → logprob: -10.891044616699219

Token 501: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.31847083568573
    2. 'removed' → logprob: -1.56847083568573
    3. 'if' → logprob: -3.1934709548950195
    4. '       ' → logprob: -4.4434709548950195
    5. 'color' → logprob: -5.4434709548950195
    6. 'total' → logprob: -5.6934709548950195
    7. 'right' → logprob: -6.1934709548950195
    8. 'cnt' → logprob: -6.5684709548950195
    9. 'last' → logprob: -8.31847095489502
    10. 'c' → logprob: -9.69347095489502

Token 502: ' Remove' (ID: 18141)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9496931433677673
    2. 'removed' → logprob: -1.074693202972412
    3. 'count' → logprob: -1.449693202972412
    4. 'color' → logprob: -3.949693202972412
    5. 'right' → logprob: -4.699693202972412
    6. '       ' → logprob: -5.074693202972412
    7. 'total' → logprob: -7.324693202972412
    8. 'cnt' → logprob: -7.449693202972412
    9. ' if' → logprob: -8.324692726135254
    10. 'c' → logprob: -8.449692726135254

Token 503: ' all' (ID: 722)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1505245864391327
    2. 'removed' → logprob: -2.025524616241455
    3. 'if' → logprob: -5.525524616241455
    4. 'right' → logprob: -6.650524616241455
    5. 'total' → logprob: -6.900524616241455
    6. '       ' → logprob: -7.525524616241455
    7. 'cnt' → logprob: -7.900524616241455
    8. 'last' → logprob: -8.525524139404297
    9. ' removed' → logprob: -8.900524139404297
    10. 'color' → logprob: -9.025524139404297

Token 504: ' continuous' (ID: 27979)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1528179794549942
    2. 'self' → logprob: -2.902817964553833
    3. 'right' → logprob: -3.152817964553833
    4. 'if' → logprob: -3.652817964553833
    5. '       ' → logprob: -4.902818202972412
    6. 'removed' → logprob: -6.027818202972412
    7. ' if' → logprob: -6.402818202972412
    8. 'while' → logprob: -6.902818202972412
    9. ' self' → logprob: -7.027818202972412
    10. ' count' → logprob: -7.277818202972412

Token 505: ' stones' (ID: 38940)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.21196754276752472
    2. ' stones' → logprob: -2.5869674682617188
    3. 'right' → logprob: -2.9619674682617188
    4. 'count' → logprob: -3.3369674682617188
    5. '_st' → logprob: -4.336967468261719
    6. '_count' → logprob: -4.711967468261719
    7. 'color' → logprob: -6.336967468261719
    8. 'if' → logprob: -6.836967468261719
    9. '```' → logprob: -6.961967468261719
    10. '_color' → logprob: -7.336967468261719

Token 506: ' on' (ID: 402)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5893985033035278
    2. '       ' → logprob: -1.9643985033035278
    3. 'of' → logprob: -1.9643985033035278
    4. 'from' → logprob: -2.0893983840942383
    5. ' from' → logprob: -3.9643983840942383
    6. ' at' → logprob: -4.339398384094238
    7. 'at' → logprob: -5.964398384094238
    8. ' =' → logprob: -6.339398384094238
    9. '   ' → logprob: -6.464398384094238
    10. '=' → logprob: -6.964398384094238

Token 507: ' right' (ID: 1849)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.20768119394779205
    2. 'right' → logprob: -1.7076811790466309
    3. ' the' → logprob: -5.207681179046631
    4. ' right' → logprob: -7.457681179046631
    5. 'self' → logprob: -8.582681655883789
    6. '       ' → logprob: -12.832681655883789
    7. '   ' → logprob: -12.957681655883789
    8. '	right' → logprob: -14.207681655883789
    9. '
' → logprob: -14.582681655883789
    10. '_right' → logprob: -14.957681655883789

Token 508: ' end' (ID: 1268)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9025520086288452
    2. 'while' → logprob: -1.5275520086288452
    3. ' of' → logprob: -2.5275521278381348
    4. ' if' → logprob: -2.9025521278381348
    5. ' while' → logprob: -3.1525521278381348
    6. '   ' → logprob: -3.1525521278381348
    7. 'color' → logprob: -3.1525521278381348
    8. 'of' → logprob: -3.6525521278381348
    9. 'end' → logprob: -3.6525521278381348
    10. 'if' → logprob: -4.527552127838135

Token 509: ' having' (ID: 4566)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39502862095832825
    2. 'while' → logprob: -1.8950285911560059
    3. ' of' → logprob: -2.395028591156006
    4. ' while' → logprob: -3.645028591156006
    5. ' =' → logprob: -4.020028591156006
    6. 'of' → logprob: -4.895028591156006
    7. '=' → logprob: -5.145028591156006
    8. ':' → logprob: -5.520028591156006
    9. 'count' → logprob: -5.520028591156006
    10. 'from' → logprob: -6.145028591156006

Token 510: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.47689229249954224
    2. 'self' → logprob: -1.2268922328948975
    3. ' the' → logprob: -2.7268922328948975
    4. 'color' → logprob: -4.226892471313477
    5. 'same' → logprob: -5.351892471313477
    6. ' self' → logprob: -6.976892471313477
    7. ' color' → logprob: -8.851892471313477
    8. ' same' → logprob: -9.226892471313477
    9. '       ' → logprob: -9.601892471313477
    10. 'right' → logprob: -9.851892471313477

Token 511: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0037023313343524933
    2. ' color' → logprob: -5.628702163696289
    3. '_color' → logprob: -9.753702163696289
    4. '.color' → logprob: -10.378702163696289
    5. '```' → logprob: -11.753702163696289
    6. '   ' → logprob: -13.128702163696289
    7. '(color' → logprob: -13.628702163696289
    8. '	color' → logprob: -14.378702163696289
    9. '
' → logprob: -15.003702163696289
    10. '=color' → logprob: -15.253702163696289

Token 512: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05331522598862648
    2. ' =' → logprob: -3.6783151626586914
    3. '=' → logprob: -4.553315162658691
    4. 'count' → logprob: -4.928315162658691
    5. 'color' → logprob: -5.178315162658691
    6. 'self' → logprob: -7.553315162658691
    7. 'right' → logprob: -7.803315162658691
    8. ':' → logprob: -8.053315162658691
    9. 'while' → logprob: -8.428315162658691
    10. '(self' → logprob: -8.553315162658691

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09606523811817169
    2. ' =' → logprob: -3.2210652828216553
    3. 'count' → logprob: -3.7210652828216553
    4. 'color' → logprob: -4.346065044403076
    5. '=' → logprob: -4.721065044403076
    6. 'right' → logprob: -6.471065044403076
    7. 'self' → logprob: -7.221065044403076
    8. ':' → logprob: -7.221065044403076
    9. ' color' → logprob: -7.846065044403076
    10. '_count' → logprob: -8.096065521240234

Token 514: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8103870153427124
    2. '       ' → logprob: -1.4353870153427124
    3. 'if' (adapté à ' if') → logprob: -2.060387134552002
    4. 'removed' → logprob: -2.310387134552002
    5. 'color' → logprob: -2.560387134552002
    6. 'right' → logprob: -4.560387134552002
    7. 'last' → logprob: -6.810387134552002
    8. 'total' → logprob: -7.685387134552002
    9. 'current' → logprob: -7.810387134552002
    10. ' if' → logprob: -8.560386657714844

Token 515: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0015072436071932316
    2. ' not' → logprob: -6.50150728225708
    3. 'self' → logprob: -12.501506805419922
    4. '   ' → logprob: -14.251506805419922
    5. '       ' → logprob: -14.626506805419922
    6. '	not' → logprob: -17.001506805419922
    7. '(not' → logprob: -17.001506805419922
    8. '!' → logprob: -17.251506805419922
    9. 'len' → logprob: -18.126506805419922
    10. '
' → logprob: -18.126506805419922

Token 516: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00038086410495452583
    2. ' self' → logprob: -7.875380992889404
    3. '   ' → logprob: -15.000380516052246
    4. '(self' → logprob: -15.625380516052246
    5. '
' → logprob: -16.500381469726562
    6. ' ' → logprob: -16.750381469726562
    7. '       ' → logprob: -17.125381469726562
    8. '[self' → logprob: -17.250381469726562
    9. '	self' → logprob: -17.500381469726562
    10. ')' → logprob: -18.000381469726562

Token 517: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -4.584861744660884e-05
    2. 'groups' → logprob: -10.000045776367188
    3. '.' → logprob: -16.250045776367188
    4. ' .' → logprob: -17.000045776367188
    5. '(groups' → logprob: -17.250045776367188
    6. ' groups' → logprob: -17.625045776367188
    7. 'roups' → logprob: -17.875045776367188
    8. 'self' → logprob: -18.375045776367188
    9. '_groups' → logprob: -19.000045776367188
    10. '   ' → logprob: -19.125045776367188

Token 518: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45268574357032776
    2. ':
' → logprob: -1.2026857137680054
    3. ' or' → logprob: -2.827685832977295
    4. ':return' → logprob: -6.077685832977295
    5. '       ' → logprob: -6.452685832977295
    6. 'or' → logprob: -7.827685832977295
    7. '           ' → logprob: -9.327685356140137
    8. '   ' → logprob: -9.702685356140137
    9. '[' → logprob: -10.077685356140137
    10. '):
' → logprob: -10.577685356140137

Token 519: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04978715255856514
    2. '           ' → logprob: -3.2997870445251465
    3. 'return' → logprob: -5.9247870445251465
    4. ' last' → logprob: -6.2997870445251465
    5. '   ' → logprob: -6.5497870445251465
    6. ' return' → logprob: -6.6747870445251465
    7. 'right' → logprob: -6.6747870445251465
    8. ' right' → logprob: -7.2997870445251465
    9. 'color' → logprob: -7.5497870445251465
    10. 'count' → logprob: -7.6747870445251465

Token 520: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009658100083470345
    2. '0' → logprob: -4.759658336639404
    3. '           ' → logprob: -7.259658336639404
    4. ' return' → logprob: -8.009657859802246
    5. '       ' → logprob: -12.009657859802246
    6. '   ' → logprob: -15.009657859802246
    7. '	return' → logprob: -15.009657859802246
    8. ' ' → logprob: -15.134657859802246
    9. '               ' → logprob: -15.634657859802246
    10. 'raise' → logprob: -15.634657859802246

Token 521: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '       ' → logprob: -23.125
    4. '   ' → logprob: -23.375
    5. '۰' → logprob: -23.75
    6. '           ' → logprob: -25.0
    7. '000' → logprob: -25.25
    8. '```' → logprob: -25.5
    9. '０' → logprob: -25.75
    10. '00' → logprob: -26.0

Token 522: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '       ' → logprob: -21.625
    4. '   ' → logprob: -22.125
    5. '۰' → logprob: -22.25
    6. '           ' → logprob: -23.25
    7. '０' → logprob: -23.625
    8. '000' → logprob: -25.25
    9. '```' → logprob: -25.25
    10. '00' → logprob: -25.75

Token 523: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.43942177295684814
    2. 'removed' → logprob: -1.5644217729568481
    3. '       ' → logprob: -2.1894216537475586
    4. 'right' → logprob: -4.564421653747559
    5. ' removed' → logprob: -4.814421653747559
    6. 'color' → logprob: -4.814421653747559
    7. 'last' → logprob: -6.564421653747559
    8. 'current' → logprob: -6.814421653747559
    9. '```' → logprob: -6.939421653747559
    10. '        
' → logprob: -7.189421653747559

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.507405161857605
    2. 'count' → logprob: -1.257405161857605
    3. 'removed' → logprob: -2.6324052810668945
    4. 'color' → logprob: -4.1324052810668945
    5. 'right' → logprob: -4.3824052810668945
    6. '
' → logprob: -5.0074052810668945
    7. ' removed' → logprob: -5.7574052810668945
    8. '        
' → logprob: -6.7574052810668945
    9. '```' → logprob: -7.5074052810668945
    10. 'last' → logprob: -8.257405281066895

Token 525: ' right' (ID: 1849)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.31895768642425537
    2. 'right' (adapté à ' right') → logprob: -1.8189576864242554
    3. 'count' → logprob: -2.818957805633545
    4. 'removed' → logprob: -3.068957805633545
    5. 'last' → logprob: -5.693957805633545
    6. '       ' → logprob: -7.318957805633545
    7. 'current' → logprob: -8.318957328796387
    8. 'rem' → logprob: -9.193957328796387
    9. 'curr' → logprob: -9.568957328796387
    10. 'cnt' → logprob: -9.568957328796387

Token 526: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0010650822659954429
    2. 'color' → logprob: -7.001065254211426
    3. '_group' → logprob: -9.501065254211426
    4. ' =' → logprob: -10.001065254211426
    5. '_groups' → logprob: -11.751065254211426
    6. 'Color' → logprob: -12.001065254211426
    7. '```' → logprob: -12.126065254211426
    8. '=' → logprob: -12.501065254211426
    9. 'group' → logprob: -12.751065254211426
    10. 'groups' → logprob: -13.376065254211426

Token 527: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868715465068817
    2. '=' → logprob: -1.136871576309204
    3. '=color' → logprob: -15.511871337890625
    4. '   ' → logprob: -15.636871337890625
    5. '       ' → logprob: -16.761871337890625
    6. 'color' → logprob: -16.886871337890625
    7. '_color' → logprob: -18.011871337890625
    8. '    ' → logprob: -18.136871337890625
    9. ' ' → logprob: -19.011871337890625
    10. ',' → logprob: -19.011871337890625

Token 528: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011055718176066875
    2. ' self' → logprob: -4.511055946350098
    3. '       ' → logprob: -11.761055946350098
    4. '	self' → logprob: -16.76105499267578
    5. '   ' → logprob: -17.88605499267578
    6. '[self' → logprob: -18.26105499267578
    7. '           ' → logprob: -19.13605499267578
    8. '(self' → logprob: -19.13605499267578
    9. '=self' → logprob: -19.51105499267578
    10. ' ' → logprob: -21.13605499267578

Token 529: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -0.023245826363563538
    2. 'groups' → logprob: -3.7732458114624023
    3. ' groups' → logprob: -15.023245811462402
    4. '(groups' → logprob: -16.39824676513672
    5. 'roups' → logprob: -17.02324676513672
    6. '_groups' → logprob: -18.27324676513672
    7. '```' → logprob: -18.39824676513672
    8. '   ' → logprob: -18.77324676513672
    9. '.' → logprob: -19.89824676513672
    10. '/groups' → logprob: -20.14824676513672

Token 530: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '][-' → logprob: -18.625
    3. '```' → logprob: -18.75
    4. '[' → logprob: -18.75
    5. '   ' → logprob: -19.625
    6. '-' → logprob: -21.375
    7. '       ' → logprob: -21.5
    8. ' [-' → logprob: -22.125
    9. '[
' → logprob: -22.25
    10. '``' → logprob: -22.375

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.62500286102295
    3. '].' → logprob: -15.00000286102295
    4. '-' → logprob: -15.37500286102295
    5. '   ' → logprob: -15.37500286102295
    6. 'color' → logprob: -15.75000286102295
    7. '```' → logprob: -16.000001907348633
    8. ']' → logprob: -17.312501907348633
    9. '  ' → logprob: -17.625001907348633
    10. ').' → logprob: -17.875001907348633

Token 532: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.019068248569965363
    2. '.color' → logprob: -4.269068241119385
    3. '.' → logprob: -5.394068241119385
    4. ').' → logprob: -8.644068717956543
    5. '}.' → logprob: -9.394068717956543
    6. ' .' → logprob: -11.019068717956543
    7. '.code' → logprob: -11.144068717956543
    8. ' ].' → logprob: -11.769068717956543
    9. '.token' → logprob: -12.019068717956543
    10. ']' → logprob: -12.019068717956543

Token 533: 'color' (ID: 4991)
  Prédit: 'color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -5.512236498361744e-07
    2. ' color' → logprob: -14.750000953674316
    3. '.color' → logprob: -17.375
    4. '	color' → logprob: -18.75
    5. 'Color' → logprob: -19.75
    6. '```' → logprob: -20.125
    7. 'col' → logprob: -20.375
    8. '_color' → logprob: -20.5
    9. '   ' → logprob: -20.5
    10. ' ' → logprob: -20.625

Token 534: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7532982230186462
    2. 'count' → logprob: -0.7532982230186462
    3. 'removed' → logprob: -3.003298282623291
    4. ' removed' → logprob: -5.753298282623291
    5. 'total' → logprob: -5.753298282623291
    6. 'current' → logprob: -7.878298282623291
    7. '
' → logprob: -8.003297805786133
    8. ',' → logprob: -8.003297805786133
    9. ' count' → logprob: -8.253297805786133
    10. '```' → logprob: -8.378297805786133

Token 535: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3459635078907013
    2. 'removed' → logprob: -1.845963478088379
    3. '       ' → logprob: -2.095963478088379
    4. 'total' → logprob: -4.845963478088379
    5. ' removed' → logprob: -5.970963478088379
    6. 'rem' → logprob: -7.595963478088379
    7. ' count' → logprob: -8.345963478088379
    8. 'remove' → logprob: -8.720963478088379
    9. '```' → logprob: -9.220963478088379
    10. ' total' → logprob: -10.720963478088379

Token 536: ' count' (ID: 3605)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.4795513153076172
    2. 'count' (adapté à ' count') → logprob: -0.9795513153076172
    3. 'total' → logprob: -5.229551315307617
    4. '       ' → logprob: -9.979551315307617
    5. 'cnt' → logprob: -10.479551315307617
    6. 'rem' → logprob: -11.229551315307617
    7. ' removed' → logprob: -11.354551315307617
    8. 'remove' → logprob: -13.979551315307617
    9. '        
' → logprob: -14.229551315307617
    10. ' count' → logprob: -14.354551315307617

Token 537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804493322968483
    2. ' =' → logprob: -3.2880449295043945
    3. '       ' → logprob: -12.788044929504395
    4. '=
' → logprob: -15.413044929504395
    5. '   ' → logprob: -15.913044929504395
    6. ' ' → logprob: -16.66304588317871
    7. '_removed' → logprob: -17.16304588317871
    8. '        ' → logprob: -17.41304588317871
    9. '_to' → logprob: -17.66304588317871
    10. '           ' → logprob: -17.66304588317871

Token 538: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2566112279891968
    2. '0' → logprob: -1.5066112279891968
    3. ' self' → logprob: -5.381611347198486
    4. 'sum' → logprob: -10.256610870361328
    5. '       ' → logprob: -10.881610870361328
    6. ' ' → logprob: -11.381610870361328
    7. '=self' → logprob: -13.506610870361328
    8. '	self' → logprob: -13.631610870361328
    9. ' sum' → logprob: -14.131610870361328
    10. '[self' → logprob: -14.256610870361328

Token 539: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5762583017349243
    2. '0' → logprob: -0.8262583017349243
    3. 'sum' → logprob: -8.201258659362793
    4. ' self' → logprob: -10.201258659362793
    5. ' ' → logprob: -12.451258659362793
    6. '   ' → logprob: -13.451258659362793
    7. '	self' → logprob: -14.576258659362793
    8. '       ' → logprob: -14.826258659362793
    9. '(self' → logprob: -14.826258659362793
    10. '[self' → logprob: -15.451258659362793

Token 540: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020303966477513313
    2. 'while' → logprob: -4.145304203033447
    3. ' while' → logprob: -5.520304203033447
    4. '	while' → logprob: -9.020303726196289
    5. 'While' → logprob: -10.645303726196289
    6. '<|end|>' → logprob: -10.645303726196289
    7. ',' → logprob: -10.895303726196289
    8. '
' → logprob: -11.145303726196289
    9. '        
' → logprob: -11.270303726196289
    10. '   ' → logprob: -11.270303726196289

Token 541: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.417476624250412
    2. '       ' → logprob: -1.1674766540527344
    3. ' while' → logprob: -3.5424766540527344
    4. '```' → logprob: -7.417476654052734
    5. '	while' → logprob: -7.917476654052734
    6. '
' → logprob: -9.042476654052734
    7. '<|end|>' → logprob: -9.667476654052734
    8. 'While' → logprob: -10.792476654052734
    9. '   ' → logprob: -11.417476654052734
    10. '<|end|>' → logprob: -12.167476654052734

Token 542: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00021486106561496854
    2. '       ' → logprob: -8.625214576721191
    3. ' while' → logprob: -10.375214576721191
    4. '	while' → logprob: -12.750214576721191
    5. 'While' → logprob: -13.750214576721191
    6. 'for' → logprob: -16.875215530395508
    7. '```' → logprob: -17.375215530395508
    8. '
' → logprob: -17.625215530395508
    9. '        
' → logprob: -17.750215530395508
    10. '   ' → logprob: -19.625215530395508

Token 543: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0036437876988202333
    2. ' self' → logprob: -5.628643989562988
    3. '       ' → logprob: -10.128643989562988
    4. '(self' → logprob: -13.503643989562988
    5. '           ' → logprob: -13.628643989562988
    6. 'len' → logprob: -14.503643989562988
    7. '	self' → logprob: -15.003643989562988
    8. 'True' → logprob: -15.878643989562988
    9. '   ' → logprob: -16.003643035888672
    10. '
' → logprob: -16.628643035888672

Token 544: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -0.1272297203540802
    2. 'groups' → logprob: -2.127229690551758
    3. 'and' → logprob: -8.752229690551758
    4. ' groups' → logprob: -9.502229690551758
    5. 'roups' → logprob: -10.252229690551758
    6. ' and' → logprob: -11.377229690551758
    7. '(groups' → logprob: -11.627229690551758
    8. '```' → logprob: -12.002229690551758
    9. '_groups' → logprob: -12.752229690551758
    10. '/groups' → logprob: -13.252229690551758

Token 545: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16062387824058533
    2. ' and' → logprob: -1.9106239080429077
    3. '[-' → logprob: -7.910624027252197
    4. '           ' → logprob: -10.660623550415039
    5. '       ' → logprob: -12.660623550415039
    6. '	and' → logprob: -12.785623550415039
    7. '```' → logprob: -13.785623550415039
    8. '          ' → logprob: -14.035623550415039
    9. '   ' → logprob: -14.660623550415039
    10. '        ' → logprob: -15.285623550415039

Token 546: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009775519138202071
    2. ' self' → logprob: -7.000977516174316
    3. '           ' → logprob: -10.125977516174316
    4. '       ' → logprob: -10.625977516174316
    5. '(self' → logprob: -14.125977516174316
    6. '   ' → logprob: -14.375977516174316
    7. '[self' → logprob: -15.500977516174316
    8. '	self' → logprob: -16.250978469848633
    9. '=self' → logprob: -16.750978469848633
    10. '               ' → logprob: -16.875978469848633

Token 547: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -1.018770694732666
    2. 'groups' → logprob: -1.143770694732666
    3. '[-' → logprob: -1.143770694732666
    4. ' groups' → logprob: -7.268770694732666
    5. 'and' → logprob: -8.393770217895508
    6. '_groups' → logprob: -8.393770217895508
    7. ' and' → logprob: -8.643770217895508
    8. '[' → logprob: -9.143770217895508
    9. 'roups' → logprob: -9.518770217895508
    10. '(groups' → logprob: -9.518770217895508

Token 548: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.981667537620524e-06
    2. ' and' → logprob: -13.625001907348633
    3. '```' → logprob: -14.875001907348633
    4. 'and' → logprob: -15.500001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '
' → logprob: -17.375001907348633
    7. '``' → logprob: -17.500001907348633
    8. '[' → logprob: -17.500001907348633
    9. '][-' → logprob: -17.750001907348633
    10. '[
' → logprob: -17.875001907348633

Token 549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. 'color' → logprob: -12.375008583068848
    3. '-' → logprob: -13.000008583068848
    4. '```' → logprob: -14.375008583068848
    5. 'count' → logprob: -15.000008583068848
    6. '[-' → logprob: -15.625008583068848
    7. '   ' → logprob: -16.12500762939453
    8. ' ' → logprob: -16.37500762939453
    9. '!' → logprob: -16.62500762939453
    10. 'end' → logprob: -16.62500762939453

Token 550: '].' (ID: 1651)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.27142491936683655
    2. '.color' → logprob: -1.5214248895645142
    3. '].' → logprob: -4.146424770355225
    4. ').' → logprob: -5.896424770355225
    5. '}.' → logprob: -7.771424770355225
    6. '.' → logprob: -8.771425247192383
    7. '().' → logprob: -9.896425247192383
    8. ' .' → logprob: -11.146425247192383
    9. '>.' → logprob: -11.646425247192383
    10. '.size' → logprob: -11.646425247192383

Token 551: 'color' (ID: 4991)
  Prédit: 'color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -2.9040898880339228e-05
    2. 'count' → logprob: -10.500028610229492
    3. '.color' → logprob: -13.875028610229492
    4. '   ' → logprob: -16.250028610229492
    5. ' color' → logprob: -16.250028610229492
    6. '_color' → logprob: -16.875028610229492
    7. '```' → logprob: -16.875028610229492
    8. '
' → logprob: -17.750028610229492
    9. '`' → logprob: -18.125028610229492
    10. 'right' → logprob: -18.250028610229492

Token 552: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.575942873954773
    2. '==' → logprob: -0.825942873954773
    3. ')==' → logprob: -14.325942993164062
    4. '```' → logprob: -14.325942993164062
    5. '==
' → logprob: -14.325942993164062
    6. '===' → logprob: -14.450942993164062
    7. '=' → logprob: -14.950942993164062
    8. ')' → logprob: -15.200942993164062
    9. '   ' → logprob: -15.200942993164062
    10. ']==' → logprob: -15.700942993164062

Token 553: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -3.547789674485102e-05
    2. ' right' → logprob: -10.250035285949707
    3. '[right' → logprob: -23.125036239624023
    4. '   ' → logprob: -23.500036239624023
    5. '	right' → logprob: -24.000036239624023
    6. '       ' → logprob: -24.750036239624023
    7. '_right' → logprob: -24.875036239624023
    8. 'Right' → logprob: -24.875036239624023
    9. '.right' → logprob: -25.125036239624023
    10. '
' → logprob: -25.375036239624023

Token 554: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0008777545881457627
    2. 'color' → logprob: -7.125877857208252
    3. 'right' → logprob: -9.625877380371094
    4. '   ' → logprob: -12.375877380371094
    5. '[right' → logprob: -13.875877380371094
    6. '[' → logprob: -15.000877380371094
    7. '[color' → logprob: -15.250877380371094
    8. '_right' → logprob: -15.375877380371094
    9. 'Color' → logprob: -15.375877380371094
    10. 'olor' → logprob: -15.625877380371094

Token 555: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.007422753144055605
    2. ':' → logprob: -5.132422924041748
    3. ' and' → logprob: -6.632422924041748
    4. '):
' → logprob: -9.13242244720459
    5. 'and' → logprob: -10.63242244720459
    6. '       ' → logprob: -10.75742244720459
    7. '           ' → logprob: -11.13242244720459
    8. ':

' → logprob: -13.00742244720459
    9. ' :
' → logprob: -13.25742244720459
    10. ':
' → logprob: -13.63242244720459

Token 556: '           ' (ID: 352)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12867355346679688
    2. '           ' → logprob: -2.128673553466797
    3. ' count' → logprob: -7.003673553466797
    4. '       ' → logprob: -7.753673553466797
    5. '	count' → logprob: -9.128673553466797
    6. ':
' → logprob: -9.253673553466797
    7. '   ' → logprob: -10.378673553466797
    8. ',count' → logprob: -10.378673553466797
    9. '.count' → logprob: -10.878673553466797
    10. '[count' → logprob: -11.003673553466797

Token 557: ' group' (ID: 3566)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.004185482859611511
    2. 'group' (adapté à ' group') → logprob: -5.504185676574707
    3. 'grp' → logprob: -9.754185676574707
    4. 'g' → logprob: -11.004185676574707
    5. 'last' → logprob: -11.379185676574707
    6. '           ' → logprob: -11.504185676574707
    7. 'removed' → logprob: -12.754185676574707
    8. 'cnt' → logprob: -13.004185676574707
    9. 'top' → logprob: -13.129185676574707
    10. ' count' → logprob: -13.629185676574707

Token 558: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31333595514297485
    2. ' =' → logprob: -1.31333589553833
    3. '=count' → logprob: -9.688336372375488
    4. 'count' → logprob: -11.938336372375488
    5. '=
' → logprob: -12.938336372375488
    6. '           ' → logprob: -14.563336372375488
    7. '   ' → logprob: -15.438336372375488
    8. 'group' → logprob: -15.563336372375488
    9. '_group' → logprob: -15.688336372375488
    10. '.=' → logprob: -15.688336372375488

Token 559: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.505351095460355e-05
    2. ' self' → logprob: -9.500075340270996
    3. '           ' → logprob: -16.00007438659668
    4. '               ' → logprob: -19.12507438659668
    5. '       ' → logprob: -20.62507438659668
    6. '(self' → logprob: -20.75007438659668
    7. '	self' → logprob: -21.00007438659668
    8. '   ' → logprob: -21.00007438659668
    9. '[self' → logprob: -22.25007438659668
    10. '`' → logprob: -22.75007438659668

Token 560: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -0.029753848910331726
    2. 'groups' → logprob: -3.5297539234161377
    3. 'roups' → logprob: -12.779753684997559
    4. '(groups' → logprob: -15.029753684997559
    5. ' groups' → logprob: -15.779753684997559
    6. '_groups' → logprob: -16.404754638671875
    7. 'self' → logprob: -17.779754638671875
    8. '.pop' → logprob: -18.529754638671875
    9. '/groups' → logprob: -18.654754638671875
    10. 'pop' → logprob: -19.904754638671875

Token 561: '.pop' (ID: 15746)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10255234688520432
    2. ' =' → logprob: -2.3525524139404297
    3. '.pop' → logprob: -6.47755241394043
    4. '           ' → logprob: -7.85255241394043
    5. '=self' → logprob: -8.60255241394043
    6. 'pop' → logprob: -8.72755241394043
    7. 'self' → logprob: -9.97755241394043
    8. '       ' → logprob: -12.10255241394043
    9. '   ' → logprob: -12.35255241394043
    10. ' self' → logprob: -12.72755241394043

Token 562: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5759682059288025
    2. '()
' → logprob: -0.8259682059288025
    3. '()
' → logprob: -11.450967788696289
    4. '()

' → logprob: -11.825967788696289
    5. '()\' → logprob: -12.700967788696289
    6. '(-' → logprob: -13.200967788696289
    7. '())
' → logprob: -13.325967788696289
    8. '())' → logprob: -13.575967788696289
    9. '()-' → logprob: -14.450967788696289
    10. '()]' → logprob: -14.450967788696289

Token 563: '           ' (ID: 352)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.21323615312576294
    2. '           ' → logprob: -1.7132360935211182
    3. ' count' → logprob: -4.463236331939697
    4. '       ' → logprob: -8.713235855102539
    5. '
' → logprob: -10.463235855102539
    6. '   ' → logprob: -11.338235855102539
    7. '.count' → logprob: -11.588235855102539
    8. '```' → logprob: -12.338235855102539
    9. '	count' → logprob: -13.588235855102539
    10. '[count' → logprob: -13.588235855102539

Token 564: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0026358263567090034
    2. ' count' → logprob: -6.002635955810547
    3. '           ' → logprob: -8.752635955810547
    4. '       ' → logprob: -13.127635955810547
    5. '   ' → logprob: -17.252635955810547
    6. '	count' → logprob: -17.752635955810547
    7. '.count' → logprob: -18.127635955810547
    8. '
' → logprob: -18.752635955810547
    9. '               ' → logprob: -19.127635955810547
    10. '```' → logprob: -19.252635955810547

Token 565: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25192928314208984
    2. ' +=' → logprob: -1.5019292831420898
    3. ']+=' → logprob: -16.126930236816406
    4. '           ' → logprob: -17.751930236816406
    5. '+' → logprob: -17.876930236816406
    6. '=' → logprob: -19.001930236816406
    7. '        ' → logprob: -19.376930236816406
    8. '            ' → logprob: -19.501930236816406
    9. '+=(' → logprob: -19.501930236816406
    10. '```' → logprob: -19.876930236816406

Token 566: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -7.493430894101039e-05
    2. ' group' → logprob: -9.500075340270996
    3. '	group' → logprob: -22.37507438659668
    4. '"group' → logprob: -22.75007438659668
    5. '(group' → logprob: -23.75007438659668
    6. '.group' → logprob: -23.75007438659668
    7. '[group' → logprob: -24.37507438659668
    8. 'groups' → logprob: -24.37507438659668
    9. '   ' → logprob: -25.25007438659668
    10. '
' → logprob: -25.87507438659668

Token 567: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.014164687134325504
    2. 'count' → logprob: -4.264164924621582
    3. ' count' → logprob: -13.764164924621582
    4. '_count' → logprob: -16.764163970947266
    5. '.' → logprob: -17.264163970947266
    6. '```' → logprob: -18.514163970947266
    7. ' .' → logprob: -18.639163970947266
    8. '	count' → logprob: -18.639163970947266
    9. 'Count' → logprob: -19.264163970947266
    10. '<count' → logprob: -19.639163970947266

Token 568: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003700677305459976
    2. 'return' → logprob: -6.1287007331848145
    3. ' return' → logprob: -6.7537007331848145
    4. '
' → logprob: -8.003700256347656
    5. '   ' → logprob: -12.503700256347656
    6. '```' → logprob: -12.753700256347656
    7. '<|end|>' → logprob: -13.128700256347656
    8. '           ' → logprob: -13.503700256347656
    9. '        
' → logprob: -14.128700256347656
    10. '	return' → logprob: -14.253700256347656

Token 569: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008157548494637012
    2. 'return' → logprob: -5.508157730102539
    3. ' return' → logprob: -5.508157730102539
    4. '```' → logprob: -11.633157730102539
    5. '   ' → logprob: -13.008157730102539
    6. '           ' → logprob: -13.258157730102539
    7. ' if' → logprob: -13.383157730102539
    8. '
' → logprob: -13.383157730102539
    9. '<|end|>' → logprob: -15.133157730102539
    10. '	return' → logprob: -15.258157730102539

Token 570: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011644343845546246
    2. '           ' → logprob: -5.26164436340332
    3. '       ' → logprob: -5.26164436340332
    4. ' if' → logprob: -6.76164436340332
    5. 'return' → logprob: -11.01164436340332
    6. '
' → logprob: -11.13664436340332
    7. 'self' → logprob: -11.51164436340332
    8. '   ' → logprob: -13.13664436340332
    9. '```' → logprob: -13.51164436340332
    10. 'If' → logprob: -15.01164436340332

Token 571: ' right' (ID: 1849)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -9.496052371105179e-05
    2. 'color' → logprob: -10.00009536743164
    3. 'right' → logprob: -10.12509536743164
    4. ' group' → logprob: -11.62509536743164
    5. '	group' → logprob: -15.00009536743164
    6. '(group' → logprob: -16.75009536743164
    7. '   ' → logprob: -17.00009536743164
    8. 'count' → logprob: -17.25009536743164
    9. 'self' → logprob: -17.75009536743164
    10. 'groups' → logprob: -18.37509536743164

Token 572: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -6.158350151963532e-05
    2. 'color' → logprob: -9.875061988830566
    3. 'Color' → logprob: -12.000061988830566
    4. 'group' → logprob: -13.875061988830566
    5. 'groups' → logprob: -14.625061988830566
    6. '_groups' → logprob: -14.625061988830566
    7. '```' → logprob: -15.000061988830566
    8. '_' → logprob: -15.375061988830566
    9. '_COLOR' → logprob: -15.500061988830566
    10. '_count' → logprob: -15.625061988830566

Token 573: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3132667541503906
    2. ' ==' → logprob: -1.3132667541503906
    3. '==
' → logprob: -12.43826675415039
    4. '=' → logprob: -14.56326675415039
    5. ']==' → logprob: -15.81326675415039
    6. '           ' → logprob: -16.56326675415039
    7. '   ' → logprob: -16.81326675415039
    8. '===' → logprob: -16.81326675415039
    9. '```' → logprob: -16.81326675415039
    10. '[' → logprob: -17.18826675415039

Token 574: ' Stone' (ID: 22850)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -5.836499985889532e-05
    2. ' Stone' → logprob: -9.7500581741333
    3. 'White' → logprob: -17.250059127807617
    4. '   ' → logprob: -19.000059127807617
    5. 'STONE' → logprob: -19.000059127807617
    6. 'stone' → logprob: -21.125059127807617
    7. '石' → logprob: -21.375059127807617
    8. ' stone' → logprob: -21.375059127807617
    9. 'Color' → logprob: -22.375059127807617
    10. 'Rock' → logprob: -22.625059127807617

Token 575: 'Color' (ID: 2324)
  Prédit: 'Color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -3.128163257315464e-07
    2. 'color' → logprob: -16.5
    3. '_Color' → logprob: -17.25
    4. '_COLOR' → logprob: -17.625
    5. 'COLOR' → logprob: -18.0
    6. '	Color' → logprob: -18.5
    7. '.Color' → logprob: -18.625
    8. '_color' → logprob: -18.625
    9. '<Color' → logprob: -19.0
    10. ' Color' → logprob: -19.5

Token 576: '.WHITE' (ID: 75459)
  Prédit: 'WHITE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WHITE' → logprob: -0.2519353926181793
    2. '.WHITE' → logprob: -1.501935362815857
    3. '.BLACK' → logprob: -12.376935005187988
    4. ' WHITE' → logprob: -13.876935005187988
    5. 'BLACK' → logprob: -14.376935005187988
    6. 'white' → logprob: -15.501935005187988
    7. '_WHITE' → logprob: -15.876935005187988
    8. '   ' → logprob: -16.501935958862305
    9. '.White' → logprob: -16.751935958862305
    10. '.white' → logprob: -16.876935958862305

Token 577: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.016986357048153877
    2. ':' → logprob: -4.26698637008667
    3. '           ' → logprob: -6.64198637008667
    4. '               ' → logprob: -7.14198637008667
    5. '):
' → logprob: -7.26698637008667
    6. '       ' → logprob: -11.891985893249512
    7. ' :
' → logprob: -12.141985893249512
    8. ':

' → logprob: -12.891985893249512
    9. ',' → logprob: -13.016985893249512
    10. '():
' → logprob: -13.266985893249512

Token 578: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026830181013792753
    2. 'self' → logprob: -6.127683162689209
    3. ' self' → logprob: -7.627683162689209
    4. '           ' → logprob: -12.25268268585205
    5. '   ' → logprob: -12.62768268585205
    6. '                   ' → logprob: -13.50268268585205
    7. '	           ' → logprob: -14.50268268585205
    8. '       ' → logprob: -15.12768268585205
    9. '              ' → logprob: -15.12768268585205
    10. '	self' → logprob: -15.75268268585205

Token 579: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.066782146692276
    2. ' self' → logprob: -3.316782236099243
    3. '               ' → logprob: -3.566782236099243
    4. '           ' → logprob: -9.441781997680664
    5. '                   ' → logprob: -12.816781997680664
    6. '   ' → logprob: -13.191781997680664
    7. '	self' → logprob: -14.191781997680664
    8. '       ' → logprob: -16.441781997680664
    9. '              ' → logprob: -16.941781997680664
    10. ' ' → logprob: -16.941781997680664

Token 580: '.white' (ID: 28729)
  Prédit: '.white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.white' → logprob: -0.20142921805381775
    2. 'white' → logprob: -1.7014292478561401
    3. '白' → logprob: -11.95142936706543
    4. ' white' → logprob: -12.20142936706543
    5. '.' → logprob: -12.82642936706543
    6. ':white' → logprob: -14.32642936706543
    7. '_white' → logprob: -14.70142936706543
    8. '               ' → logprob: -15.20142936706543
    9. '       ' → logprob: -15.45142936706543
    10. '           ' → logprob: -15.57642936706543

Token 581: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.988221684878226e-06
    2. 'count' → logprob: -11.875006675720215
    3. ' count' → logprob: -18.75000762939453
    4. 'Count' → logprob: -20.37500762939453
    5. '_counts' → logprob: -20.50000762939453
    6. 'white' → logprob: -20.75000762939453
    7. '	count' → logprob: -20.87500762939453
    8. '_' → logprob: -20.87500762939453
    9. '```' → logprob: -21.12500762939453
    10. '   ' → logprob: -21.12500762939453

Token 582: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0032420014031231403
    2. ' -=' → logprob: -5.753242015838623
    3. '-' → logprob: -9.878241539001465
    4. '           ' → logprob: -12.003241539001465
    5. '               ' → logprob: -12.003241539001465
    6. '+=' → logprob: -14.878241539001465
    7. '            ' → logprob: -16.00324249267578
    8. '=' → logprob: -16.12824249267578
    9. '```' → logprob: -17.37824249267578
    10. '                   ' → logprob: -17.37824249267578

Token 583: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.0001584850688232109
    2. ' group' → logprob: -8.750158309936523
    3. 'count' → logprob: -18.625158309936523
    4. '           ' → logprob: -20.125158309936523
    5. '
' → logprob: -21.125158309936523
    6. '   ' → logprob: -21.375158309936523
    7. '	group' → logprob: -21.375158309936523
    8. '```' → logprob: -22.000158309936523
    9. '       ' → logprob: -22.500158309936523
    10. '               ' → logprob: -22.875158309936523

Token 584: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.00012403888104017824
    2. 'count' → logprob: -9.000123977661133
    3. '.' → logprob: -14.625123977661133
    4. '.color' → logprob: -17.875123977661133
    5. '_count' → logprob: -18.000123977661133
    6. ' count' → logprob: -18.500123977661133
    7. '[count' → logprob: -18.625123977661133
    8. 'Count' → logprob: -18.750123977661133
    9. '```' → logprob: -18.875123977661133
    10. ' .' → logprob: -19.375123977661133

Token 585: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006762159755453467
    2. 'return' → logprob: -7.375676155090332
    3. '
' → logprob: -10.875676155090332
    4. ' return' → logprob: -11.125676155090332
    5. '   ' → logprob: -11.750676155090332
    6. '<|end|>' → logprob: -12.750676155090332
    7. '           ' → logprob: -13.000676155090332
    8. '```' → logprob: -13.625676155090332
    9. '0' → logprob: -14.875676155090332
    10. '        
' → logprob: -15.375676155090332

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041029640124179423
    2. 'return' → logprob: -8.500410079956055
    3. ' return' → logprob: -9.125410079956055
    4. '<|end|>' → logprob: -9.500410079956055
    5. '```' → logprob: -12.000410079956055
    6. '           ' → logprob: -12.500410079956055
    7. '               ' → logprob: -12.500410079956055
    8. '	return' → logprob: -13.125410079956055
    9. '
' → logprob: -13.250410079956055
    10. '        
' → logprob: -13.750410079956055

Token 587: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13059002161026
    2. 'return' (adapté à ' return') → logprob: -2.1305899620056152
    3. ' return' → logprob: -5.630589962005615
    4. '   ' → logprob: -9.755590438842773
    5. '	return' → logprob: -12.630590438842773
    6. '```' → logprob: -12.880590438842773
    7. '           ' → logprob: -13.130590438842773
    8. '<|end|>' → logprob: -13.755590438842773
    9. '{return' → logprob: -14.380590438842773
    10. ':return' → logprob: -15.130590438842773

Token 588: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -7.493430894101039e-05
    2. ' count' → logprob: -9.500075340270996
    3. '	count' → logprob: -21.50007438659668
    4. 'c' → logprob: -21.62507438659668
    5. '   ' → logprob: -22.62507438659668
    6. '(count' → logprob: -23.00007438659668
    7. '0' → logprob: -23.12507438659668
    8. 'counts' → logprob: -23.12507438659668
    9. '$count' → logprob: -23.37507438659668
    10. '[count' → logprob: -23.50007438659668

Token 589: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007819918682798743
    2. '<|end|>' → logprob: -7.500782012939453
    3. 'def' → logprob: -8.750782012939453
    4. '```' → logprob: -10.375782012939453
    5. '
' → logprob: -10.625782012939453
    6. '<|end|>' → logprob: -12.000782012939453
    7. '}' → logprob: -12.500782012939453
    8. ')' → logprob: -13.375782012939453
    9. ' def' → logprob: -13.875782012939453
    10. '    
' → logprob: -14.250782012939453

Token 590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8167751431465149
    2. '<|end|>' → logprob: -1.0667750835418701
    3. 'def' → logprob: -1.6917750835418701
    4. '```' → logprob: -4.191775321960449
    5. '<|end|>' → logprob: -5.316775321960449
    6. '       ' → logprob: -5.441775321960449
    7. ')' → logprob: -7.066775321960449
    8. '#' → logprob: -7.191775321960449
    9. '...' → logprob: -7.316775321960449
    10. 'color' → logprob: -7.566775321960449

Token 591: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0028381571173667908
    2. '   ' → logprob: -5.877838134765625
    3. ' def' → logprob: -10.752838134765625
    4. '	def' → logprob: -12.377838134765625
    5. '#' → logprob: -12.752838134765625
    6. '<|end|>' → logprob: -13.002838134765625
    7. 'class' → logprob: -13.627838134765625
    8. '<|end|>' → logprob: -15.127838134765625
    9. '```' → logprob: -15.377838134765625
    10. '       ' → logprob: -15.502838134765625

Token 592: ' _' (ID: 1175)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0358449220657349
    2. '__' → logprob: -1.5358449220657349
    3. 'get' → logprob: -1.7858449220657349
    4. 'white' → logprob: -1.7858449220657349
    5. 'total' → logprob: -3.5358448028564453
    6. 'clear' → logprob: -4.160844802856445
    7. 'print' → logprob: -4.660844802856445
    8. 'place' → logprob: -4.910844802856445
    9. '_white' → logprob: -5.285844802856445
    10. 'reset' → logprob: -5.535844802856445

Token 593: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0035782146733254194
    2. 'pop' → logprob: -5.878578186035156
    3. 'remove' → logprob: -8.628578186035156
    4. 'replace' → logprob: -8.628578186035156
    5. 'count' → logprob: -8.753578186035156
    6. 'get' → logprob: -10.128578186035156
    7. 'copy' → logprob: -10.253578186035156
    8. 'white' → logprob: -10.628578186035156
    9. 'clear' → logprob: -10.878578186035156
    10. 'has' → logprob: -11.128578186035156

Token 594: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -5.200166469876422e-06
    2. 'group' → logprob: -12.250004768371582
    3. 'Group' → logprob: -15.375004768371582
    4. '_st' → logprob: -17.1250057220459
    5. '_groups' → logprob: -17.2500057220459
    6. ' group' → logprob: -18.6250057220459
    7. 'roup' → logprob: -19.3750057220459
    8. '"group' → logprob: -19.7500057220459
    9. '_GROUP' → logprob: -20.1250057220459
    10. '   ' → logprob: -20.3750057220459

Token 595: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012713817704934627
    2. '(' → logprob: -9.125126838684082
    3. 'self' → logprob: -11.000126838684082
    4. '   ' → logprob: -14.000126838684082
    5. '(
' → logprob: -15.000126838684082
    6. ' (' → logprob: -15.875126838684082
    7. '       ' → logprob: -16.2501277923584
    8. 'def' → logprob: -17.2501277923584
    9. ' ' → logprob: -18.1251277923584
    10. '```' → logprob: -18.3751277923584

Token 596: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22983498871326447
    2. ',' → logprob: -1.979835033416748
    3. 'self' → logprob: -2.729835033416748
    4. '       ' → logprob: -6.604835033416748
    5. '   ' → logprob: -7.604835033416748
    6. ')' → logprob: -9.60483455657959
    7. ' self' → logprob: -10.47983455657959
    8. '(' → logprob: -10.97983455657959
    9. ',self' → logprob: -10.97983455657959
    10. ' (' → logprob: -11.97983455657959

Token 597: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.031233450397849083
    2. ' color' → logprob: -3.531233549118042
    3. 'self' → logprob: -6.531233310699463
    4. ' self' → logprob: -10.656233787536621
    5. '   ' → logprob: -14.531233787536621
    6. '	color' → logprob: -15.031233787536621
    7. '       ' → logprob: -16.656232833862305
    8. '.color' → logprob: -16.906232833862305
    9. '(color' → logprob: -17.031232833862305
    10. ' ' → logprob: -17.406232833862305

Token 598: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009450533543713391
    2. 'self' → logprob: -7.000945091247559
    3. '       ' → logprob: -11.750945091247559
    4. '   ' → logprob: -11.875945091247559
    5. ' ,' → logprob: -12.125945091247559
    6. ',self' → logprob: -12.125945091247559
    7. '(self' → logprob: -12.250945091247559
    8. ' self' → logprob: -12.875945091247559
    9. ',
' → logprob: -15.250945091247559
    10. ')' → logprob: -16.000944137573242

Token 599: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003374886582605541
    2. ' int' → logprob: -8.000337600708008
    3. 'self' → logprob: -13.250337600708008
    4. '       ' → logprob: -15.625337600708008
    5. '   ' → logprob: -16.000337600708008
    6. ':int' → logprob: -17.625337600708008
    7. '(int' → logprob: -17.625337600708008
    8. ',int' → logprob: -18.250337600708008
    9. '[int' → logprob: -18.625337600708008
    10. '<int' → logprob: -18.875337600708008

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ' ,' → logprob: -13.12500286102295
    3. 'self' → logprob: -14.62500286102295
    4. '       ' → logprob: -15.25000286102295
    5. ',self' → logprob: -16.125003814697266
    6. ',color' → logprob: -16.500003814697266
    7. ',count' → logprob: -16.625003814697266
    8. '   ' → logprob: -16.750003814697266
    9. ',
' → logprob: -17.250003814697266
    10. '‌,' → logprob: -18.000003814697266

Token 601: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0024779161904007196
    2. ' count' → logprob: -6.002478122711182
    3. '   ' → logprob: -13.127477645874023
    4. '       ' → logprob: -16.752477645874023
    5. 'size' → logprob: -17.377477645874023
    6. '	count' → logprob: -17.502477645874023
    7. ' ' → logprob: -18.002477645874023
    8. 'cnt' → logprob: -18.752477645874023
    9. '    ' → logprob: -19.377477645874023
    10. '  ' → logprob: -19.752477645874023

Token 602: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23372699320316315
    2. ':' → logprob: -1.608726978302002
    3. '):
' → logprob: -4.983726978302002
    4. '   ' → logprob: -6.733726978302002
    5. '       ' → logprob: -9.48372745513916
    6. ')' → logprob: -9.98372745513916
    7. ' ):' → logprob: -10.10872745513916
    8. ',' → logprob: -10.85872745513916
    9. '):
' → logprob: -11.10872745513916
    10. 'self' → logprob: -11.23372745513916

Token 603: ' int' (ID: 677)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0002615742268972099
    2. ' count' → logprob: -8.250261306762695
    3. 'int' → logprob: -16.000261306762695
    4. '(count' → logprob: -16.625261306762695
    5. ')' → logprob: -17.375261306762695
    6. '[count' → logprob: -18.125261306762695
    7. '	count' → logprob: -18.500261306762695
    8. '.count' → logprob: -18.500261306762695
    9. ' ' → logprob: -18.875261306762695
    10. '   ' → logprob: -19.000261306762695

Token 604: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029797818511724472
    2. '):
' → logprob: -3.5297977924346924
    3. '   ' → logprob: -11.029797554016113
    4. '       ' → logprob: -11.154797554016113
    5. '):
' → logprob: -11.529797554016113
    6. ')' → logprob: -12.529797554016113
    7. ':' → logprob: -12.779797554016113
    8. ' ):' → logprob: -15.404797554016113
    9. '):

' → logprob: -15.654797554016113
    10. ' ' → logprob: -17.40479850769043

Token 605: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006489173509180546
    2. 'if' → logprob: -5.131489276885986
    3. '   ' → logprob: -7.881489276885986
    4. ' if' → logprob: -8.631488800048828
    5. '```' → logprob: -13.131488800048828
    6. '	if' → logprob: -14.631488800048828
    7. 'group' → logprob: -14.631488800048828
    8. 'new' → logprob: -15.256488800048828
    9. '           ' → logprob: -15.381488800048828
    10. 'self' → logprob: -15.506488800048828

Token 606: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10310960561037064
    2. '       ' → logprob: -2.35310959815979
    3. ' if' → logprob: -5.853109836578369
    4. '   ' → logprob: -10.728109359741211
    5. '```' → logprob: -12.978109359741211
    6. 'group' → logprob: -13.353109359741211
    7. '	if' → logprob: -14.103109359741211
    8. '#' (adapté à ' #') → logprob: -14.103109359741211
    9. 'If' → logprob: -15.978109359741211
    10. 'new' → logprob: -15.978109359741211

Token 607: ' Add' (ID: 4063)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006392761133611202
    2. '       ' → logprob: -5.131392955780029
    3. 'If' → logprob: -8.256392478942871
    4. '#' → logprob: -9.131392478942871
    5. ' if' → logprob: -9.756392478942871
    6. '   ' → logprob: -10.756392478942871
    7. 'Add' → logprob: -11.256392478942871
    8. 'Append' → logprob: -13.631392478942871
    9. '"""' → logprob: -13.881392478942871
    10. '```' → logprob: -15.381392478942871

Token 608: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11924675852060318
    2. '       ' → logprob: -2.6192467212677
    3. ' if' → logprob: -3.8692467212677
    4. 'Stone' → logprob: -4.119246959686279
    5. 'group' → logprob: -6.369246959686279
    6. 'new' → logprob: -8.369246482849121
    7. 'stone' → logprob: -9.119246482849121
    8. ' group' → logprob: -9.119246482849121
    9. ' Stone' → logprob: -9.119246482849121
    10. ' new' → logprob: -10.494246482849121

Token 609: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.9223239421844482
    2. 'Stone' → logprob: -0.9223239421844482
    3. 'if' → logprob: -1.6723239421844482
    4. 'new' → logprob: -4.422324180603027
    5. 'stone' → logprob: -6.297324180603027
    6. '       ' → logprob: -6.422324180603027
    7. ' group' → logprob: -7.797324180603027
    8. '   ' → logprob: -8.172324180603027
    9. 'Group' → logprob: -8.422324180603027
    10. ' if' → logprob: -8.672324180603027

Token 610: ' of' (ID: 328)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6863985061645508
    2. '       ' → logprob: -0.8113985061645508
    3. '(' → logprob: -3.186398506164551
    4. '(
' → logprob: -5.561398506164551
    5. 'def' → logprob: -6.311398506164551
    6. 'self' → logprob: -6.811398506164551
    7. '   ' → logprob: -6.811398506164551
    8. ' if' → logprob: -6.936398506164551
    9. ' (' → logprob: -7.311398506164551
    10. '(color' → logprob: -7.436398506164551

Token 611: ' stones' (ID: 38940)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.010450123809278011
    2. 'color' → logprob: -4.6354498863220215
    3. '       ' → logprob: -7.8854498863220215
    4. 'stone' → logprob: -8.76045036315918
    5. ' Stone' → logprob: -9.63545036315918
    6. 'stones' → logprob: -10.26045036315918
    7. 'St' → logprob: -10.51045036315918
    8. '   ' → logprob: -11.26045036315918
    9. '           ' → logprob: -11.76045036315918
    10. ' color' → logprob: -12.13545036315918

Token 612: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007837766781449318
    2. '(self' → logprob: -5.132837772369385
    3. ' if' → logprob: -6.632837772369385
    4. 'self' → logprob: -9.007837295532227
    5. '(' → logprob: -9.007837295532227
    6. ',' → logprob: -9.257837295532227
    7. '(color' → logprob: -9.257837295532227
    8. 'if' → logprob: -9.882837295532227
    9. '   ' → logprob: -10.132837295532227
    10. 'def' → logprob: -10.632837295532227

Token 613: ' same' (ID: 2684)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.002303577959537506
    2. 'the' → logprob: -7.002303600311279
    3. ' color' → logprob: -7.002303600311279
    4. 'that' → logprob: -8.002303123474121
    5. 'given' → logprob: -9.752303123474121
    6. ' given' → logprob: -10.002303123474121
    7. ' that' → logprob: -10.877303123474121
    8. ' the' → logprob: -12.002303123474121
    9. 'a' → logprob: -12.127303123474121
    10. '```' → logprob: -12.502303123474121

Token 614: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.00021617230959236622
    2. ' color' → logprob: -8.500216484069824
    3. '       ' → logprob: -11.375216484069824
    4. '=color' → logprob: -15.000216484069824
    5. '(color' → logprob: -15.500216484069824
    6. '```' → logprob: -15.625216484069824
    7. ')' → logprob: -16.125215530395508
    8. '.color' → logprob: -16.375215530395508
    9. ',' → logprob: -16.875215530395508
    10. ',color' → logprob: -16.875215530395508

Token 615: ' at' (ID: 540)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5512926578521729
    2. '       ' → logprob: -1.3012926578521729
    3. '(' → logprob: -2.801292657852173
    4. '(color' → logprob: -3.176292657852173
    5. 'self' → logprob: -3.301292657852173
    6. ' (' → logprob: -5.676292419433594
    7. ',' → logprob: -5.926292419433594
    8. ' if' → logprob: -6.051292419433594
    9. 'if' → logprob: -7.176292419433594
    10. '   ' → logprob: -7.676292419433594

Token 616: ' right' (ID: 1849)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.37803009152412415
    2. 'color' → logprob: -1.3780300617218018
    3. 'right' → logprob: -2.8780300617218018
    4. ' the' → logprob: -5.503030300140381
    5. ' color' → logprob: -6.253030300140381
    6. 'end' → logprob: -9.003029823303223
    7. ' right' → logprob: -9.003029823303223
    8. 'self' → logprob: -9.128029823303223
    9. ')' → logprob: -10.253029823303223
    10. '   ' → logprob: -10.878029823303223

Token 617: ' end' (ID: 1268)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48422467708587646
    2. 'end' → logprob: -0.9842246770858765
    3. ' end' → logprob: -5.109224796295166
    4. 'if' → logprob: -7.109224796295166
    5. '```' → logprob: -7.109224796295166
    6. ' if' → logprob: -7.359224796295166
    7. '   ' → logprob: -7.609224796295166
    8. 'def' → logprob: -7.984224796295166
    9. '_end' → logprob: -8.359224319458008
    10. 'self' → logprob: -8.484224319458008

Token 618: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015204569790512323
    2. '<|end|>' → logprob: -6.87652063369751
    3. '   ' → logprob: -8.251520156860352
    4. ',' → logprob: -10.001520156860352
    5. ' if' → logprob: -10.001520156860352
    6. ':' → logprob: -10.501520156860352
    7. '<|end|>' → logprob: -10.876520156860352
    8. ':
' → logprob: -11.001520156860352
    9. '):
' → logprob: -11.126520156860352
    10. '{' → logprob: -11.501520156860352

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008640571613796055
    2. ' if' → logprob: -7.750864028930664
    3. 'if' → logprob: -8.125864028930664
    4. '<|end|>' → logprob: -9.625864028930664
    5. '   ' → logprob: -10.125864028930664
    6. ',' → logprob: -11.750864028930664
    7. '```' → logprob: -12.500864028930664
    8. '{' → logprob: -12.500864028930664
    9. '<|end|>' → logprob: -12.500864028930664
    10. '{
' → logprob: -13.125864028930664

Token 620: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2551286816596985
    2. '       ' → logprob: -1.5051286220550537
    3. ' if' → logprob: -5.755128860473633
    4. '   ' → logprob: -10.880128860473633
    5. '```' → logprob: -12.130128860473633
    6. 'group' → logprob: -13.380128860473633
    7. '	if' → logprob: -13.755128860473633
    8. 'self' → logprob: -14.755128860473633
    9. 'while' → logprob: -15.755128860473633
    10. 'new' → logprob: -15.755128860473633

Token 621: ' count' (ID: 3605)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026300468016415834
    2. ' self' → logprob: -8.250263214111328
    3. '   ' → logprob: -14.125263214111328
    4. 'color' → logprob: -14.625263214111328
    5. '	self' → logprob: -14.875263214111328
    6. '(self' → logprob: -16.375263214111328
    7. 'not' → logprob: -17.500263214111328
    8. ' ' → logprob: -17.625263214111328
    9. '       ' → logprob: -18.000263214111328
    10. '=self' → logprob: -19.000263214111328

Token 622: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.45203694701194763
    2. ' <=' → logprob: -1.95203697681427
    3. '==' → logprob: -2.3270368576049805
    4. ' >' → logprob: -2.4520368576049805
    5. '>' → logprob: -3.7020368576049805
    6. '<=' → logprob: -4.3270368576049805
    7. '   ' → logprob: -10.82703685760498
    8. ' ' → logprob: -10.95203685760498
    9. ' and' → logprob: -11.07703685760498
    10. 'and' → logprob: -11.07703685760498

Token 623: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.37520408630371
    4. '۰' → logprob: -19.00020408630371
    5. '  ' → logprob: -19.12520408630371
    6. '    ' → logprob: -20.00020408630371
    7. '```' → logprob: -20.50020408630371
    8. '	' → logprob: -20.87520408630371
    9. '０' → logprob: -21.12520408630371
    10. ' ' → logprob: -21.50020408630371

Token 624: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.625015258789062
    4. '۰' → logprob: -18.750015258789062
    5. '  ' → logprob: -18.875015258789062
    6. '```' → logprob: -19.000015258789062
    7. '    ' → logprob: -19.250015258789062
    8. '０' → logprob: -20.125015258789062
    9. '       ' → logprob: -20.750015258789062
    10. '>' → logprob: -21.187515258789062

Token 625: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5726794600486755
    2. '           ' → logprob: -1.0726795196533203
    3. '       ' → logprob: -3.3226795196533203
    4. ':return' → logprob: -3.3226795196533203
    5. ':' → logprob: -4.19767951965332
    6. ' or' → logprob: -5.57267951965332
    7. 'return' → logprob: -6.94767951965332
    8. '   ' → logprob: -6.94767951965332
    9. ' return' → logprob: -7.19767951965332
    10. '{return' → logprob: -9.57267951965332

Token 626: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11628331989049911
    2. ' return' → logprob: -2.616283416748047
    3. 'return' → logprob: -3.366283416748047
    4. '       ' → logprob: -6.241283416748047
    5. '
' → logprob: -9.116283416748047
    6. '   ' → logprob: -9.866283416748047
    7. ':return' → logprob: -9.866283416748047
    8. ':
' → logprob: -11.866283416748047
    9. '               ' → logprob: -12.241283416748047
    10. '	return' → logprob: -12.741283416748047

Token 627: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.026380889117717743
    2. ' return' → logprob: -3.776380777359009
    3. '           ' → logprob: -5.776381015777588
    4. '
' → logprob: -10.77638053894043
    5. '       ' → logprob: -11.65138053894043
    6. '               ' → logprob: -14.90138053894043
    7. 'self' → logprob: -15.27638053894043
    8. '   ' → logprob: -15.77638053894043
    9. '{return' → logprob: -15.90138053894043
    10. '	return' → logprob: -17.02638053894043

Token 628: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3359081447124481
    2. '       ' → logprob: -1.5859081745147705
    3. ' if' → logprob: -3.0859081745147705
    4. 'if' → logprob: -3.4609081745147705
    5. '        
' → logprob: -6.210907936096191
    6. ' 
' → logprob: -7.835907936096191
    7. 'self' → logprob: -8.335907936096191
    8. '	if' → logprob: -8.335907936096191
    9. '		
' → logprob: -9.210907936096191
    10. '
' → logprob: -9.335907936096191

Token 629: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.579982340335846
    2. 'if' → logprob: -0.829982340335846
    3. ' if' → logprob: -5.704982280731201
    4. 'self' → logprob: -7.954982280731201
    5. '   ' → logprob: -8.20498275756836
    6. '```' → logprob: -10.70498275756836
    7. 'group' → logprob: -11.07998275756836
    8. '
' → logprob: -11.20498275756836
    9. '	if' → logprob: -12.07998275756836
    10. 'new' → logprob: -12.20498275756836

Token 630: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010668589733541012
    2. '       ' → logprob: -4.635668754577637
    3. ' if' → logprob: -7.010668754577637
    4. 'self' → logprob: -13.010668754577637
    5. '   ' → logprob: -13.135668754577637
    6. 'group' → logprob: -13.135668754577637
    7. '```' → logprob: -13.135668754577637
    8. 'If' → logprob: -14.760668754577637
    9. '	if' → logprob: -14.885668754577637
    10. 'last' → logprob: -15.260668754577637

Token 631: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023430652916431427
    2. ' self' → logprob: -3.773430585861206
    3. '       ' → logprob: -8.648430824279785
    4. '   ' → logprob: -12.523430824279785
    5. '           ' → logprob: -12.523430824279785
    6. '(self' → logprob: -14.148430824279785
    7. '	self' → logprob: -14.148430824279785
    8. '         ' → logprob: -15.523430824279785
    9. '        ' → logprob: -15.898430824279785
    10. ' ' → logprob: -16.14842987060547

Token 632: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -0.0031794982496649027
    2. 'groups' → logprob: -5.753179550170898
    3. ' groups' → logprob: -14.253179550170898
    4. '   ' → logprob: -14.628179550170898
    5. '(groups' → logprob: -15.003179550170898
    6. 'roups' → logprob: -15.628179550170898
    7. 'and' → logprob: -16.8781795501709
    8. '.' → logprob: -17.1281795501709
    9. '```' → logprob: -17.2531795501709
    10. '       ' → logprob: -17.3781795501709

Token 633: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.062013279646635056
    2. ' and' → logprob: -2.8120133876800537
    3. '       ' → logprob: -10.812013626098633
    4. '        ' → logprob: -12.187013626098633
    5. '           ' → logprob: -12.187013626098633
    6. '   ' → logprob: -12.312013626098633
    7. '          ' → logprob: -12.937013626098633
    8. '         ' → logprob: -13.312013626098633
    9. '      ' → logprob: -13.687013626098633
    10. '	and' → logprob: -13.687013626098633

Token 634: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024794621858745813
    2. ' self' → logprob: -6.002479553222656
    3. '       ' → logprob: -13.127479553222656
    4. '           ' → logprob: -13.377479553222656
    5. '   ' → logprob: -16.002479553222656
    6. '(self' → logprob: -16.752479553222656
    7. '[self' → logprob: -17.752479553222656
    8. '	self' → logprob: -18.002479553222656
    9. ' ' → logprob: -18.377479553222656
    10. '         ' → logprob: -18.502479553222656

Token 635: '.groups' (ID: 89749)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20753222703933716
    2. '[-' → logprob: -1.7075321674346924
    3. '[self' → logprob: -5.7075324058532715
    4. 'groups' → logprob: -6.0825324058532715
    5. ' self' → logprob: -7.9575324058532715
    6. '.groups' → logprob: -9.457531929016113
    7. '   ' → logprob: -11.332531929016113
    8. '       ' → logprob: -11.332531929016113
    9. '```' → logprob: -11.332531929016113
    10. '
' → logprob: -11.582531929016113

Token 636: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.320199877838604e-07
    2. 'and' → logprob: -15.5
    3. '```' → logprob: -16.375
    4. '[' → logprob: -17.125
    5. '[
' → logprob: -17.75
    6. '
' → logprob: -17.875
    7. '`' → logprob: -17.875
    8. ' and' → logprob: -18.0
    9. '``' → logprob: -18.0
    10. '   ' → logprob: -18.5

Token 637: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028093906585127115
    2. '-' → logprob: -5.877809524536133
    3. '[-' → logprob: -13.627809524536133
    4. ' -' → logprob: -14.002809524536133
    5. ' ' → logprob: -14.377809524536133
    6. '```' → logprob: -14.377809524536133
    7. '   ' → logprob: -15.002809524536133
    8. '!' → logprob: -15.877809524536133
    9. '(-' → logprob: -16.065309524536133
    10. '
' → logprob: -16.440309524536133

Token 638: '].' (ID: 1651)
  Prédit: '.color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.color' → logprob: -0.003737018210813403
    2. '].' → logprob: -6.253736972808838
    3. ').' → logprob: -7.253736972808838
    4. '.' → logprob: -7.753736972808838
    5. ' .' → logprob: -7.878736972808838
    6. '.code' → logprob: -9.503737449645996
    7. '.status' → logprob: -10.753737449645996
    8. '}.' → logprob: -10.753737449645996
    9. '.group' → logprob: -11.003737449645996
    10. '.type' → logprob: -11.253737449645996

Token 639: 'color' (ID: 4991)
  Prédit: 'color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.5213274309644476e-05
    2. '.color' → logprob: -11.625015258789062
    3. ' color' → logprob: -12.125015258789062
    4. '   ' → logprob: -15.250015258789062
    5. 'group' → logprob: -15.625015258789062
    6. '```' → logprob: -16.750015258789062
    7. '	color' → logprob: -17.125015258789062
    8. 'code' → logprob: -17.375015258789062
    9. 'Stone' → logprob: -17.375015258789062
    10. '_color' → logprob: -17.375015258789062

Token 640: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2014147937297821
    2. '==' → logprob: -1.7014148235321045
    3. '=' → logprob: -14.826415061950684
    4. ')==' → logprob: -14.826415061950684
    5. '===' → logprob: -15.201415061950684
    6. ']==' → logprob: -15.576415061950684
    7. ')' → logprob: -16.326414108276367
    8. '```' → logprob: -16.576414108276367
    9. '=color' → logprob: -16.701414108276367
    10. '()==' → logprob: -17.201414108276367

Token 641: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.00218583014793694
    2. ' color' → logprob: -6.127185821533203
    3. '   ' → logprob: -14.627185821533203
    4. ' ' → logprob: -16.252185821533203
    5. '=color' → logprob: -17.377185821533203
    6. '	color' → logprob: -17.502185821533203
    7. 'Color' → logprob: -17.752185821533203
    8. '       ' → logprob: -18.002185821533203
    9. '[color' → logprob: -18.002185821533203
    10. '.color' → logprob: -18.252185821533203

Token 642: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43576276302337646
    2. ':' → logprob: -1.0607627630233765
    3. '           ' → logprob: -5.185762882232666
    4. '       ' → logprob: -6.685762882232666
    5. '):
' → logprob: -9.935762405395508
    6. ' and' → logprob: -10.060762405395508
    7. ',' → logprob: -10.310762405395508
    8. 'self' → logprob: -11.685762405395508
    9. ':
' → logprob: -11.810762405395508
    10. '<|end|>' → logprob: -11.810762405395508

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0063412305898964405
    2. ':
' → logprob: -5.881341457366943
    3. '       ' → logprob: -6.381341457366943
    4. ':' → logprob: -6.881341457366943
    5. '```' → logprob: -8.006340980529785
    6. '<|end|>' → logprob: -9.256340980529785
    7. 'self' → logprob: -9.506340980529785
    8. '               ' → logprob: -9.631340980529785
    9. '
' → logprob: -9.881340980529785
    10. '	       ' → logprob: -10.506340980529785

Token 644: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014957930892705917
    2. '           ' → logprob: -4.889957904815674
    3. ' self' → logprob: -5.014957904815674
    4. '               ' → logprob: -7.514957904815674
    5. '
' → logprob: -9.014958381652832
    6. '	self' → logprob: -12.139958381652832
    7. '```' → logprob: -12.389958381652832
    8. '       ' → logprob: -12.764958381652832
    9. '   ' → logprob: -13.139958381652832
    10. '            
' → logprob: -13.389958381652832

Token 645: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -0.47439152002334595
    2. 'groups' → logprob: -0.974391520023346
    3. '_groups' → logprob: -8.97439193725586
    4. '
' → logprob: -9.34939193725586
    5. ' groups' → logprob: -9.47439193725586
    6. 'roups' → logprob: -11.34939193725586
    7. '/groups' → logprob: -12.84939193725586
    8. '       ' → logprob: -13.09939193725586
    9. '```' → logprob: -13.09939193725586
    10. 'self' → logprob: -13.34939193725586

Token 646: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '   ' → logprob: -19.625
    3. '[' → logprob: -20.25
    4. '       ' → logprob: -20.5
    5. '```' → logprob: -20.625
    6. '][-' → logprob: -20.75
    7. '-' → logprob: -21.875
    8. '           ' → logprob: -22.125
    9. '`' → logprob: -22.25
    10. '     ' → logprob: -23.375

Token 647: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.75
    3. '[-' → logprob: -17.25
    4. '
' → logprob: -17.375
    5. '-' → logprob: -17.5
    6. '   ' → logprob: -17.5625
    7. '```' → logprob: -19.0625
    8. '0' → logprob: -19.4375
    9. ' -' → logprob: -20.125
    10. '１' → logprob: -20.3125

Token 648: '].' (ID: 1651)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0008497710223309696
    2. ').' → logprob: -8.750849723815918
    3. '].' → logprob: -8.750849723815918
    4. '.' → logprob: -9.000849723815918
    5. '.code' → logprob: -9.250849723815918
    6. '.value' → logprob: -9.250849723815918
    7. '}.' → logprob: -10.125849723815918
    8. '<|end|>' → logprob: -10.875849723815918
    9. '<|end|>' → logprob: -11.000849723815918
    10. '.increment' → logprob: -11.125849723815918

Token 649: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.128163257315464e-07
    2. ' count' → logprob: -15.25
    3. '_count' → logprob: -22.0
    4. '	count' → logprob: -22.125
    5. '.count' → logprob: -22.625
    6. '$count' → logprob: -24.25
    7. 'counts' → logprob: -24.625
    8. '   ' → logprob: -24.625
    9. '```' → logprob: -24.875
    10. ' ' → logprob: -25.25

Token 650: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06196846812963486
    2. ' +=' → logprob: -2.8119685649871826
    3. ']+=' → logprob: -14.186968803405762
    4. '    ' → logprob: -16.436967849731445
    5. '   ' → logprob: -17.186967849731445
    6. '+' → logprob: -17.686967849731445
    7. '       ' → logprob: -18.561967849731445
    8. '        ' → logprob: -18.561967849731445
    9. ' ' → logprob: -18.811967849731445
    10. '+=(' → logprob: -19.186967849731445

Token 651: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.004078401252627373
    2. ' count' → logprob: -5.504078388214111
    3. '	count' → logprob: -21.004077911376953
    4. '   ' → logprob: -22.004077911376953
    5. ' ' → logprob: -22.129077911376953
    6. '(count' → logprob: -22.129077911376953
    7. '[count' → logprob: -23.379077911376953
    8. '$count' → logprob: -24.004077911376953
    9. '_count' → logprob: -24.379077911376953
    10. 'counts' → logprob: -24.629077911376953

Token 652: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013095269969198853
    2. 'else' → logprob: -9.125130653381348
    3. ' else' → logprob: -10.875130653381348
    4. '           ' → logprob: -13.125130653381348
    5. '
' → logprob: -15.250130653381348
    6. '<|end|>' → logprob: -15.250130653381348
    7. '```' → logprob: -15.250130653381348
    8. '   ' → logprob: -15.750130653381348
    9. ',' → logprob: -16.750131607055664
    10. 'return' → logprob: -17.000131607055664

Token 653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032834713347256184
    2. 'else' → logprob: -5.753283500671387
    3. ' else' → logprob: -9.253283500671387
    4. '           ' → logprob: -12.253283500671387
    5. '```' → logprob: -12.753283500671387
    6. '   ' → logprob: -13.503283500671387
    7. '<|end|>' → logprob: -15.753283500671387
    8. '[' → logprob: -15.878283500671387
    9. 'elif' → logprob: -16.12828254699707
    10. '	' → logprob: -16.37828254699707

Token 654: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.633517861366272
    2. 'else' (adapté à ' else') → logprob: -0.883517861366272
    3. ' else' → logprob: -2.8835177421569824
    4. '   ' → logprob: -11.63351821899414
    5. '	else' → logprob: -13.25851821899414
    6. '```' → logprob: -13.38351821899414
    7. '           ' → logprob: -13.50851821899414
    8. 'elif' → logprob: -14.75851821899414
    9. ' ' → logprob: -16.63351821899414
    10. '_else' → logprob: -16.63351821899414

Token 655: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29909470677375793
    2. ':' → logprob: -1.7990946769714355
    3. ':
' → logprob: -2.4240946769714355
    4. '       ' → logprob: -5.4240946769714355
    5. '```' → logprob: -10.674095153808594
    6. 'self' → logprob: -11.174095153808594
    7. '{' → logprob: -11.549095153808594
    8. '               ' → logprob: -11.799095153808594
    9. '{
' → logprob: -11.799095153808594
    10. ',' → logprob: -12.049095153808594

Token 656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002762326330412179
    2. '       ' → logprob: -8.250276565551758
    3. 'self' → logprob: -11.250276565551758
    4. ' self' → logprob: -13.875276565551758
    5. '   ' → logprob: -14.625276565551758
    6. '               ' → logprob: -15.000276565551758
    7. '		' → logprob: -16.250276565551758
    8. '	       ' → logprob: -16.750276565551758
    9. '          ' → logprob: -16.875276565551758
    10. '```' → logprob: -17.375276565551758

Token 657: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009513601544313133
    2. ' self' → logprob: -7.500951290130615
    3. '           ' → logprob: -7.875951290130615
    4. '               ' → logprob: -11.250951766967773
    5. '       ' → logprob: -12.625951766967773
    6. '   ' → logprob: -13.375951766967773
    7. '	self' → logprob: -15.125951766967773
    8. 'Stone' → logprob: -15.125951766967773
    9. ' ' → logprob: -16.125951766967773
    10. '(self' → logprob: -18.000951766967773

Token 658: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -1.9981420336989686e-05
    2. 'groups' → logprob: -10.875020027160645
    3. '.' → logprob: -14.125020027160645
    4. '.Groups' → logprob: -15.875020027160645
    5. ' .' → logprob: -16.375019073486328
    6. ' groups' → logprob: -17.625019073486328
    7. 'roups' → logprob: -17.750019073486328
    8. '.group' → logprob: -17.875019073486328
    9. '.append' → logprob: -18.000019073486328
    10. '_groups' → logprob: -18.125019073486328

Token 659: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.53050296427682e-05
    2. '.' → logprob: -9.37508487701416
    3. '.app' → logprob: -15.62508487701416
    4. 'append' → logprob: -15.75008487701416
    5. '.extend' → logprob: -16.250085830688477
    6. '.Append' → logprob: -17.250085830688477
    7. ' .' → logprob: -19.125085830688477
    8. '           ' → logprob: -19.500085830688477
    9. '       ' → logprob: -19.625085830688477
    10. '.setdefault' → logprob: -20.125085830688477

Token 660: '(' (ID: 7)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.38724833726882935
    2. '(' → logprob: -1.1372482776641846
    3. ' Stone' → logprob: -7.887248516082764
    4. '(St' → logprob: -13.762248039245605
    5. '(
' → logprob: -14.762248039245605
    6. 'St' → logprob: -15.762248039245605
    7. 'stone' → logprob: -17.387248992919922
    8. ' stone' → logprob: -18.012248992919922
    9. 'STONE' → logprob: -18.137248992919922
    10. '石' → logprob: -18.137248992919922

Token 661: 'Stone' (ID: 56062)
  Prédit: 'Stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -6.704273118884885e-07
    2. ' Stone' → logprob: -14.250000953674316
    3. '石' → logprob: -24.5
    4. 'stone' → logprob: -26.0
    5. ' stone' → logprob: -26.25
    6. 'St' → logprob: -26.25
    7. '   ' → logprob: -26.5
    8. 'STONE' → logprob: -26.5
    9. '       ' → logprob: -29.0
    10. 'Rock' → logprob: -29.5

Token 662: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -6.704273118884885e-07
    2. 'group' → logprob: -14.375000953674316
    3. '_group' → logprob: -18.0
    4. 'GROUP' → logprob: -20.25
    5. '(' → logprob: -20.625
    6. '	Group' → logprob: -20.75
    7. 'roup' → logprob: -20.875
    8. '(Group' → logprob: -20.875
    9. 'Color' → logprob: -21.0
    10. '[color' → logprob: -21.125

Token 663: '(color' (ID: 27329)
  Prédit: '(color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.0031944699585437775
    2. 'color' → logprob: -5.753194332122803
    3. ' color' → logprob: -11.378194808959961
    4. '=color' → logprob: -12.378194808959961
    5. '[color' → logprob: -14.878194808959961
    6. ',color' → logprob: -14.878194808959961
    7. ')' → logprob: -15.503194808959961
    8. '	color' → logprob: -17.37819480895996
    9. ';color' → logprob: -17.75319480895996
    10. '```' → logprob: -18.25319480895996

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016742534353397787
    2. ',color' → logprob: -8.750167846679688
    3. ' ,' → logprob: -12.125167846679688
    4. 'color' → logprob: -12.750167846679688
    5. ' color' → logprob: -15.000167846679688
    6. '(color' → logprob: -16.000167846679688
    7. ',count' → logprob: -16.250167846679688
    8. ',
' → logprob: -17.625167846679688
    9. '‌,' → logprob: -17.625167846679688
    10. '=color' → logprob: -18.125167846679688

Token 665: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.15310683415737e-05
    2. ' count' → logprob: -10.750021934509277
    3. '           ' → logprob: -18.62502098083496
    4. '       ' → logprob: -20.00002098083496
    5. '   ' → logprob: -20.50002098083496
    6. 'color' → logprob: -20.87502098083496
    7. '               ' → logprob: -21.25002098083496
    8. '(count' → logprob: -21.87502098083496
    9. '[count' → logprob: -22.25002098083496
    10. '          ' → logprob: -22.62502098083496

Token 666: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017958412354346365
    2. '))' → logprob: -8.875179290771484
    3. ')
' → logprob: -10.375179290771484
    4. '       ' → logprob: -11.750179290771484
    5. ')}' → logprob: -15.125179290771484
    6. ')

' → logprob: -16.875179290771484
    7. '())' → logprob: -17.250179290771484
    8. ' )' → logprob: -17.250179290771484
    9. ')))' → logprob: -17.500179290771484
    10. ')`' → logprob: -17.500179290771484

Token 667: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014895245840307325
    2. '   ' → logprob: -9.62514877319336
    3. '<|end|>' → logprob: -10.25014877319336
    4. '```' → logprob: -10.62514877319336
    5. '           ' → logprob: -11.25014877319336
    6. '
' → logprob: -12.25014877319336
    7. '        
' → logprob: -14.12514877319336
    8. ' ' → logprob: -14.12514877319336
    9. '<|end|>' → logprob: -14.25014877319336
    10. ')' → logprob: -14.37514877319336

Token 668: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001278449548408389
    2. '       ' → logprob: -7.126278400421143
    3. ' if' → logprob: -7.751278400421143
    4. '   ' → logprob: -10.5012788772583
    5. 'def' → logprob: -11.7512788772583
    6. '
' → logprob: -11.8762788772583
    7. '	if' → logprob: -14.2512788772583
    8. 'If' → logprob: -14.7512788772583
    9. '```' → logprob: -16.126277923583984
    10. '@if' → logprob: -16.501277923583984

Token 669: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.006717386189848185
    2. ' color' → logprob: -5.006717205047607
    3. '   ' → logprob: -14.006717681884766
    4. 'count' → logprob: -15.006717681884766
    5. 'Color' → logprob: -15.381717681884766
    6. '(color' → logprob: -15.381717681884766
    7. ' ' → logprob: -15.881717681884766
    8. '	color' → logprob: -16.506717681884766
    9. 'c' → logprob: -16.631717681884766
    10. '[color' → logprob: -17.006717681884766

Token 670: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07889077812433243
    2. '==' → logprob: -2.578890800476074
    3. '```' → logprob: -15.328890800476074
    4. ' ' → logprob: -15.578890800476074
    5. '[' → logprob: -15.828890800476074
    6. '   ' → logprob: -16.078889846801758
    7. '=' → logprob: -16.453889846801758
    8. '===' → logprob: -16.578889846801758
    9. '==
' → logprob: -16.953889846801758
    10. ' ' → logprob: -17.078889846801758

Token 671: ' Stone' (ID: 22850)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.00861456897109747
    2. ' Stone' → logprob: -4.758614540100098
    3. ' stone' → logprob: -19.383615493774414
    4. 'stone' → logprob: -20.258615493774414
    5. 'STONE' → logprob: -20.508615493774414
    6. '   ' → logprob: -21.133615493774414
    7. '石' → logprob: -22.133615493774414
    8. 'St' → logprob: -23.008615493774414
    9. ' ' → logprob: -23.258615493774414
    10. ' Stones' → logprob: -23.633615493774414

Token 672: 'Color' (ID: 2324)
  Prédit: 'Color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -1.0325924449716695e-05
    2. 'Stone' → logprob: -11.50001049041748
    3. ' Color' → logprob: -16.250009536743164
    4. '_Color' → logprob: -18.375009536743164
    5. 'COLOR' → logprob: -18.500009536743164
    6. '   ' → logprob: -18.625009536743164
    7. 'Col' → logprob: -18.750009536743164
    8. '_color' → logprob: -18.750009536743164
    9. 'color' → logprob: -18.875009536743164
    10. ' ' → logprob: -19.250009536743164

Token 673: '.WHITE' (ID: 75459)
  Prédit: '.WHITE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.WHITE' → logprob: -7.135819760151207e-05
    2. '.BLACK' → logprob: -10.12507152557373
    3. 'WHITE' → logprob: -10.50007152557373
    4. '.' → logprob: -12.87507152557373
    5. '_WHITE' → logprob: -14.37507152557373
    6. '.White' → logprob: -14.87507152557373
    7. '.white' → logprob: -16.625070571899414
    8. ' .' → logprob: -16.875070571899414
    9. '   ' → logprob: -17.000070571899414
    10. ' WHITE' → logprob: -18.000070571899414

Token 674: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20722869038581848
    2. ':' → logprob: -1.707228660583496
    3. '           ' → logprob: -5.207228660583496
    4. '       ' → logprob: -8.207228660583496
    5. '   ' → logprob: -10.957228660583496
    6. '):
' → logprob: -11.332228660583496
    7. ':

' → logprob: -12.707228660583496
    8. ':
' → logprob: -12.832228660583496
    9. '          ' → logprob: -13.082228660583496
    10. '               ' → logprob: -13.332228660583496

Token 675: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08168796449899673
    2. ' self' → logprob: -2.8316879272460938
    3. 'self' → logprob: -3.9566879272460938
    4. '       ' → logprob: -8.831687927246094
    5. '               ' → logprob: -9.081687927246094
    6. '	       ' → logprob: -9.831687927246094
    7. '   ' → logprob: -10.831687927246094
    8. ' +=' → logprob: -11.081687927246094
    9. '          ' → logprob: -11.831687927246094
    10. '+' → logprob: -11.831687927246094

Token 676: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00021140782337170094
    2. ' self' → logprob: -8.500211715698242
    3. '           ' → logprob: -11.750211715698242
    4. '               ' → logprob: -18.625211715698242
    5. '	self' → logprob: -19.250211715698242
    6. '       ' → logprob: -19.375211715698242
    7. '﻿' → logprob: -20.500211715698242
    8. '
' → logprob: -20.625211715698242
    9. '   ' → logprob: -20.750211715698242
    10. '(self' → logprob: -20.750211715698242

Token 677: '.white' (ID: 28729)
  Prédit: '.white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.white' → logprob: -0.011106302961707115
    2. 'white' → logprob: -4.511106491088867
    3. '白' → logprob: -10.511106491088867
    4. '_white' → logprob: -11.636106491088867
    5. '.' → logprob: -11.886106491088867
    6. ':white' → logprob: -12.011106491088867
    7. ' white' → logprob: -12.511106491088867
    8. '       ' → logprob: -13.011106491088867
    9. '   ' → logprob: -13.761106491088867
    10. '           ' → logprob: -14.261106491088867

Token 678: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.128163257315464e-07
    2. 'count' → logprob: -15.25
    3. '+=' → logprob: -18.875
    4. '   ' → logprob: -19.0
    5. 'Count' → logprob: -19.75
    6. '\' → logprob: -20.125
    7. '_COUNT' → logprob: -20.25
    8. '+' → logprob: -20.375
    9. ' +=' → logprob: -20.75
    10. '_counts' → logprob: -20.875

Token 679: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04859009385108948
    2. ' +=' → logprob: -3.0485901832580566
    3. '    ' → logprob: -13.923589706420898
    4. ']+=' → logprob: -14.298589706420898
    5. '   ' → logprob: -14.798589706420898
    6. '           ' → logprob: -14.923589706420898
    7. '+' → logprob: -15.298589706420898
    8. '       ' → logprob: -16.4235897064209
    9. '+=(' → logprob: -16.7985897064209
    10. '            ' → logprob: -16.9235897064209

Token 680: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0485873706638813
    2. ' count' → logprob: -3.0485873222351074
    3. '	count' → logprob: -17.423587799072266
    4. '(count' → logprob: -18.048587799072266
    5. '           ' → logprob: -18.923587799072266
    6. '[count' → logprob: -19.548587799072266
    7. '       ' → logprob: -20.048587799072266
    8. '   ' → logprob: -20.173587799072266
    9. '_count' → logprob: -20.173587799072266
    10. ' ' → logprob: -20.298587799072266

Token 681: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 682: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004320996522437781
    2. 'def' → logprob: -8.375432014465332
    3. '<|end|>' → logprob: -8.625432014465332
    4. '```' → logprob: -11.500432014465332
    5. '#' → logprob: -12.500432014465332
    6. 'class' → logprob: -12.750432014465332
    7. '<|end|>' → logprob: -13.375432014465332
    8. ')' → logprob: -13.750432014465332
    9. '       ' → logprob: -14.000432014465332
    10. '
' → logprob: -14.875432014465332

Token 683: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07950510829687119
    2. '   ' → logprob: -2.579505205154419
    3. '<|end|>' → logprob: -8.57950496673584
    4. 'class' → logprob: -8.82950496673584
    5. '#' → logprob: -8.95450496673584
    6. ' def' → logprob: -9.32950496673584
    7. '	def' → logprob: -10.57950496673584
    8. '<|end|>' → logprob: -11.07950496673584
    9. '```' → logprob: -12.07950496673584
    10. '       ' → logprob: -12.95450496673584

Token 684: ' get' (ID: 717)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6230289340019226
    2. 'count' → logprob: -1.3730289936065674
    3. 'get' → logprob: -2.1230289936065674
    4. ' __' → logprob: -3.2480289936065674
    5. 'white' → logprob: -4.498028755187988
    6. 'clear' → logprob: -4.623028755187988
    7. ' count' → logprob: -4.748028755187988
    8. ' get' → logprob: -4.998028755187988
    9. 'total' → logprob: -5.248028755187988
    10. 'stone' → logprob: -6.123028755187988

Token 685: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -0.005538951605558395
    2. '_total' → logprob: -5.6305389404296875
    3. '_groups' → logprob: -7.8805389404296875
    4. '_st' → logprob: -7.8805389404296875
    5. '_color' → logprob: -8.380538940429688
    6. '_stack' → logprob: -8.880538940429688
    7. '_wh' → logprob: -8.880538940429688
    8. '_count' → logprob: -9.005538940429688
    9. '_' → logprob: -9.380538940429688
    10. '   ' → logprob: -10.005538940429688

Token 686: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.4034345187828876e-05
    2. '_' → logprob: -12.12502384185791
    3. '_ratio' → logprob: -12.25002384185791
    4. '_counts' → logprob: -12.25002384185791
    5. 'count' → logprob: -12.87502384185791
    6. '_percentage' → logprob: -13.50002384185791
    7. '_total' → logprob: -13.75002384185791
    8. '_pro' → logprob: -13.87502384185791
    9. '_score' → logprob: -14.62502384185791
    10. '_color' → logprob: -14.87502384185791

Token 687: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.195421494543552e-05
    2. '(' → logprob: -9.75007152557373
    3. 'self' → logprob: -11.50007152557373
    4. '   ' → logprob: -12.87507152557373
    5. ' (' → logprob: -15.12507152557373
    6. '       ' → logprob: -15.25007152557373
    7. '(
' → logprob: -16.000072479248047
    8. 'def' → logprob: -16.125072479248047
    9. ' self' → logprob: -17.125072479248047
    10. ' ' → logprob: -17.500072479248047

Token 688: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0255203247070312
    2. ')' → logprob: -1.1505203247070312
    3. '(self' → logprob: -1.9005203247070312
    4. 'self' → logprob: -2.1505203247070312
    5. '):
' → logprob: -2.9005203247070312
    6. '   ' → logprob: -6.025520324707031
    7. '       ' → logprob: -6.775520324707031
    8. ')->' → logprob: -8.900520324707031
    9. '	self' → logprob: -9.400520324707031
    10. ' self' → logprob: -9.650520324707031

Token 689: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010679395636543632
    2. '(' → logprob: -7.501068115234375
    3. '       ' → logprob: -8.626068115234375
    4. '   ' → logprob: -8.626068115234375
    5. 'self' → logprob: -8.876068115234375
    6. 'def' → logprob: -12.501068115234375
    7. '(
' → logprob: -12.626068115234375
    8. ' (' → logprob: -13.501068115234375
    9. '->' → logprob: -13.751068115234375
    10. ':' → logprob: -13.876068115234375

Token 690: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003647472243756056
    2. ' int' → logprob: -5.628647327423096
    3. '(int' → logprob: -11.003647804260254
    4. '   ' → logprob: -11.003647804260254
    5. ')' → logprob: -12.503647804260254
    6. 'self' → logprob: -13.378647804260254
    7. '
' → logprob: -13.378647804260254
    8. '()' → logprob: -13.628647804260254
    9. '():
' → logprob: -13.753647804260254
    10. '):
' → logprob: -14.003647804260254

Token 691: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014950995100662112
    2. 'self' → logprob: -7.001494884490967
    3. '(' → logprob: -7.751494884490967
    4. '       ' → logprob: -9.501495361328125
    5. '   ' → logprob: -10.126495361328125
    6. '(
' → logprob: -10.376495361328125
    7. ' self' → logprob: -12.876495361328125
    8. '->' → logprob: -14.001495361328125
    9. ':' → logprob: -14.126495361328125
    10. '():
' → logprob: -14.251495361328125

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012570773833431304
    2. 'return' → logprob: -9.250125885009766
    3. ' return' → logprob: -10.500125885009766
    4. '   ' → logprob: -13.250125885009766
    5. '	return' → logprob: -16.375125885009766
    6. '           ' → logprob: -16.875125885009766
    7. '	' → logprob: -17.500125885009766
    8. '```' → logprob: -18.000125885009766
    9. '{return' → logprob: -18.250125885009766
    10. '      ' → logprob: -18.750125885009766

Token 693: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.048837944865226746
    2. '       ' → logprob: -3.048837900161743
    3. ' return' → logprob: -8.298837661743164
    4. '   ' → logprob: -13.673837661743164
    5. '	return' → logprob: -14.673837661743164
    6. '```' → logprob: -16.923837661743164
    7. '{return' → logprob: -17.548837661743164
    8. '	' → logprob: -19.298837661743164
    9. ':return' → logprob: -19.548837661743164
    10. ' ' → logprob: -20.173837661743164

Token 694: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020401719666551799
    2. ' self' → logprob: -8.500204086303711
    3. '       ' → logprob: -14.500204086303711
    4. '   ' → logprob: -18.12520408630371
    5. '	self' → logprob: -20.37520408630371
    6. '(self' → logprob: -21.62520408630371
    7. '
' → logprob: -21.87520408630371
    8. '           ' → logprob: -22.50020408630371
    9. '```' → logprob: -22.62520408630371
    10. '​' → logprob: -23.37520408630371

Token 695: '.white' (ID: 28729)
  Prédit: '.white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.white' → logprob: -6.802049756515771e-05
    2. '.' → logprob: -9.750067710876465
    3. ' .' → logprob: -11.625067710876465
    4. '.wh' → logprob: -15.000067710876465
    5. '.White' → logprob: -15.625067710876465
    6. 'white' → logprob: -16.00006866455078
    7. '.WHITE' → logprob: -17.00006866455078
    8. '.black' → logprob: -17.00006866455078
    9. '白' → logprob: -17.12506866455078
    10. '.green' → logprob: -17.75006866455078

Token 696: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. 'count' → logprob: -15.875
    3. ' _' → logprob: -18.25
    4. '._' → logprob: -18.625
    5. '\' → logprob: -19.0
    6. 'white' → logprob: -19.125
    7. '_counts' → logprob: -20.0
    8. '   ' → logprob: -20.25
    9. '_code' → logprob: -20.25
    10. '_color' → logprob: -20.875

Token 697: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 698: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 699: ' Input' (ID: 10090)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -1.038334608078003
    2. ' Game' → logprob: -1.538334608078003
    3. 'Player' → logprob: -2.038334608078003
    4. 'Board' → logprob: -3.163334608078003
    5. ' Player' → logprob: -3.163334608078003
    6. 'Table' → logprob: -3.413334608078003
    7. ' Board' → logprob: -3.663334608078003
    8. 'Evaluator' → logprob: -3.663334608078003
    9. 'Go' → logprob: -3.913334608078003
    10. ' Table' → logprob: -4.038334846496582

Token 700: 'Processor' (ID: 22334)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -1.1905994415283203
    2. 'Handler' → logprob: -1.4405994415283203
    3. 'Parser' → logprob: -1.5655994415283203
    4. ':' → logprob: -2.3155994415283203
    5. ':
' → logprob: -3.3155994415283203
    6. 'Stream' → logprob: -3.6905994415283203
    7. 'Tokenizer' → logprob: -3.6905994415283203
    8. 'Error' → logprob: -4.06559944152832
    9. 'Processor' → logprob: -4.31559944152832
    10. 'Data' → logprob: -4.56559944152832

Token 701: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02635987289249897
    2. ':
' → logprob: -3.651359796524048
    3. '<|end|>' → logprob: -10.651359558105469
    4. ':def' → logprob: -11.151359558105469
    5. ':

' → logprob: -12.401359558105469
    6. '```' → logprob: -12.776359558105469
    7. '(object' → logprob: -13.151359558105469
    8. 'def' → logprob: -13.276359558105469
    9. '):' → logprob: -13.401359558105469
    10. '<|end|>' → logprob: -13.651359558105469

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26697680354118347
    2. ' def' → logprob: -1.6419768333435059
    3. 'def' → logprob: -3.266976833343506
    4. 'class' → logprob: -6.016976833343506
    5. ' class' → logprob: -9.391976356506348
    6. '```' → logprob: -9.891976356506348
    7. 'import' → logprob: -11.266976356506348
    8. '	def' → logprob: -12.266976356506348
    9. '    ' → logprob: -14.266976356506348
    10. '   ' → logprob: -15.391976356506348

Token 703: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003189832204952836
    2. ' def' → logprob: -5.753190040588379
    3. 'class' → logprob: -11.378190040588379
    4. '   ' → logprob: -15.253190040588379
    5. 'import' → logprob: -15.253190040588379
    6. '```' → logprob: -15.378190040588379
    7. 'de' → logprob: -18.253189086914062
    8. 'from' → logprob: -18.253189086914062
    9. 'python' → logprob: -19.253189086914062
    10. '	def' → logprob: -19.503189086914062

Token 704: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0247105360031128
    2. ' __' → logprob: -1.1497105360031128
    3. ' def' → logprob: -1.7747105360031128
    4. 'def' → logprob: -2.0247106552124023
    5. 'init' → logprob: -4.024710655212402
    6. 'process' → logprob: -6.649710655212402
    7. ' init' → logprob: -6.774710655212402
    8. ' process' → logprob: -7.274710655212402
    9. '_init' → logprob: -7.274710655212402
    10. '___' → logprob: -7.649710655212402

Token 705: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'def' → logprob: -18.125
    3. ' init' → logprob: -18.625
    4. 'int' → logprob: -20.25
    5. '_init' → logprob: -21.125
    6. 'ini' → logprob: -21.25
    7. 'next' → logprob: -21.875
    8. '(init' → logprob: -22.125
    9. 'initi' → logprob: -22.25
    10. 'call' → logprob: -22.625

Token 706: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04350344091653824
    2. '(self' → logprob: -3.168503522872925
    3. '(' → logprob: -8.668503761291504
    4. '_(' → logprob: -9.168503761291504
    5. '__' → logprob: -9.418503761291504
    6. '__(
' → logprob: -9.418503761291504
    7. 'self' → logprob: -9.918503761291504
    8. '<>(' → logprob: -12.668503761291504
    9. '__((' → logprob: -12.668503761291504
    10. ' (' → logprob: -13.168503761291504

Token 707: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009299254161305726
    2. ')' → logprob: -7.250929832458496
    3. '):
' → logprob: -8.500929832458496
    4. ' self' → logprob: -11.500929832458496
    5. '(self' → logprob: -12.875929832458496
    6. '   ' → logprob: -13.875929832458496
    7. '
' → logprob: -14.375929832458496
    8. '):' → logprob: -14.625929832458496
    9. '):

' → logprob: -14.750929832458496
    10. '       ' → logprob: -14.750929832458496

Token 708: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.15822049975395203
    2. ',' → logprob: -2.5332205295562744
    3. '):' → logprob: -3.0332205295562744
    4. 'self' → logprob: -4.033220291137695
    5. '(self' → logprob: -7.908220291137695
    6. '   ' → logprob: -7.908220291137695
    7. '       ' → logprob: -8.783220291137695
    8. '():
' → logprob: -9.908220291137695
    9. ' self' → logprob: -10.783220291137695
    10. ')' → logprob: -11.283220291137695

Token 709: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024700670037418604
    2. '       ' → logprob: -6.627470016479492
    3. 'def' → logprob: -7.002470016479492
    4. ' self' → logprob: -8.752470016479492
    5. '   ' → logprob: -9.877470016479492
    6. '(self' → logprob: -11.002470016479492
    7. '	self' → logprob: -13.002470016479492
    8. '
' → logprob: -13.127470016479492
    9. '):
' → logprob: -13.377470016479492
    10. '```' → logprob: -13.877470016479492

Token 710: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00022237090161070228
    2. ' self' → logprob: -9.000222206115723
    3. '       ' → logprob: -9.250222206115723
    4. 'pass' → logprob: -13.875222206115723
    5. '   ' → logprob: -14.000222206115723
    6. 'def' → logprob: -14.625222206115723
    7. '[]' → logprob: -14.875222206115723
    8. 'super' → logprob: -16.37522315979004
    9. '	self' → logprob: -16.50022315979004
    10. '(self' → logprob: -17.50022315979004

Token 711: '.datasets' (ID: 136555)
  Prédit: '.table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.table' → logprob: -0.0029482210520654917
    2. 'table' → logprob: -6.12794828414917
    3. '.tables' → logprob: -7.87794828414917
    4. '._' → logprob: -8.502947807312012
    5. '.' → logprob: -9.502947807312012
    6. '.Table' → logprob: -11.002947807312012
    7. '_table' → logprob: -11.127947807312012
    8. ' table' → logprob: -11.252947807312012
    9. '	table' → logprob: -11.252947807312012
    10. '.game' → logprob: -11.627947807312012

Token 712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760433077812195
    2. ' =' → logprob: -0.8260433077812195
    3. '=[]' → logprob: -9.201043128967285
    4. '<|end|>' → logprob: -13.576043128967285
    5. ':' → logprob: -14.701043128967285
    6. '   ' → logprob: -14.826043128967285
    7. '[]' → logprob: -14.951043128967285
    8. '	' → logprob: -16.3260440826416
    9. '<|end|>' → logprob: -16.3260440826416
    10. '=[]
' → logprob: -16.3260440826416

Token 713: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.4849443838757e-06
    2. '[]
' → logprob: -12.500004768371582
    3. '[]

' → logprob: -15.125004768371582
    4. ' []' → logprob: -15.250004768371582
    5. '[]}' → logprob: -16.375003814697266
    6. '{}' → logprob: -17.750003814697266
    7. '[' → logprob: -17.750003814697266
    8. '[],' → logprob: -18.250003814697266
    9. '[]"' → logprob: -18.500003814697266
    10. '[])' → logprob: -18.750003814697266

Token 714: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018805658910423517
    2. 'def' → logprob: -6.751880645751953
    3. '
' → logprob: -7.876880645751953
    4. ' def' → logprob: -8.501880645751953
    5. '<|end|>' → logprob: -9.626880645751953
    6. '```' → logprob: -10.251880645751953
    7. '    
' → logprob: -11.251880645751953
    8. '	def' → logprob: -11.751880645751953
    9. '<|end|>' → logprob: -12.751880645751953
    10. '       ' → logprob: -14.751880645751953

Token 715: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.668304245569743e-05
    2. ' def' → logprob: -10.000046730041504
    3. '   ' → logprob: -13.625046730041504
    4. '	def' → logprob: -16.750045776367188
    5. 'class' → logprob: -20.375045776367188
    6. '```' → logprob: -20.875045776367188
    7. '
' → logprob: -21.000045776367188
    8. ' ' → logprob: -22.750045776367188
    9. 'Def' → logprob: -23.750045776367188
    10. '       ' → logprob: -23.750045776367188

Token 716: ' read' (ID: 1729)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.11132603138685226
    2. 'add' → logprob: -2.361325979232788
    3. 'read' → logprob: -5.111326217651367
    4. 'load' → logprob: -5.736326217651367
    5. 'parse' → logprob: -6.361326217651367
    6. 'append' → logprob: -10.236326217651367
    7. ' process' → logprob: -11.111326217651367
    8. 'run' → logprob: -11.236326217651367
    9. ' add' → logprob: -12.736326217651367
    10. 'def' → logprob: -13.611326217651367

Token 717: '_d' (ID: 1565)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003851501503959298
    2. '_line' → logprob: -6.128851413726807
    3. 'self' → logprob: -6.753851413726807
    4. '_input' → logprob: -8.003851890563965
    5. 'line' → logprob: -9.503851890563965
    6. '_data' → logprob: -10.003851890563965
    7. '(' → logprob: -11.378851890563965
    8. '_lines' → logprob: -12.003851890563965
    9. '_self' → logprob: -12.503851890563965
    10. 'lines' → logprob: -12.753851890563965

Token 718: 'atasets' (ID: 105003)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.021684346720576286
    2. 'atasets' → logprob: -4.146684169769287
    3. 'ataset' → logprob: -5.396684169769287
    4. 'ef' → logprob: -7.521684169769287
    5. 'atas' → logprob: -8.146684646606445
    6. 'at' → logprob: -8.646684646606445
    7. ' ata' → logprob: -10.896684646606445
    8. 'atal' → logprob: -11.021684646606445
    9. 'atap' → logprob: -11.896684646606445
    10. 't' → logprob: -12.271684646606445

Token 719: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011054071597754955
    2. '(' → logprob: -4.511054039001465
    3. ' (' → logprob: -12.636054039001465
    4. 'self' → logprob: -13.011054039001465
    5. '   ' → logprob: -14.886054039001465
    6. '(
' → logprob: -15.261054039001465
    7. '       ' → logprob: -16.26105499267578
    8. '()' → logprob: -17.38605499267578
    9. 'from' → logprob: -17.51105499267578
    10. 'def' → logprob: -17.63605499267578

Token 720: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19637656211853027
    2. '(self' → logprob: -2.3213765621185303
    3. 'self' → logprob: -2.6963765621185303
    4. '):
' → logprob: -5.196376800537109
    5. '):' → logprob: -5.321376800537109
    6. ',self' → logprob: -6.946376800537109
    7. '   ' → logprob: -8.07137680053711
    8. '       ' → logprob: -8.07137680053711
    9. ')(' → logprob: -8.07137680053711
    10. ' self' → logprob: -8.69637680053711

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031985383247956634
    2. 'import' → logprob: -9.250319480895996
    3. '   ' → logprob: -9.375319480895996
    4. '```' → logprob: -9.750319480895996
    5. ' for' → logprob: -10.875319480895996
    6. 'def' → logprob: -11.375319480895996
    7. 'for' → logprob: -11.625319480895996
    8. 'self' → logprob: -12.125319480895996
    9. '()' → logprob: -12.125319480895996
    10. 'while' → logprob: -12.250319480895996

Token 722: ' while' (ID: 2049)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.13428916037082672
    2. 'while' (adapté à ' while') → logprob: -2.884289264678955
    3. ' while' → logprob: -3.384289264678955
    4. ' import' → logprob: -3.634289264678955
    5. '       ' → logprob: -5.259289264678955
    6. '```' → logprob: -6.009289264678955
    7. 'try' → logprob: -6.884289264678955
    8. ' n' → logprob: -8.259288787841797
    9. 'n' → logprob: -8.259288787841797
    10. ' try' → logprob: -9.384288787841797

Token 723: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.06213707849383354
    2. ' True' → logprob: -2.8121371269226074
    3. '(True' → logprob: -8.68713665008545
    4. 'true' → logprob: -14.56213665008545
    5. 'self' → logprob: -16.062137603759766
    6. '   ' → logprob: -16.687137603759766
    7. '(' → logprob: -17.187137603759766
    8. '1' → logprob: -17.437137603759766
    9. '=True' → logprob: -17.437137603759766
    10. 'line' → logprob: -17.812137603759766

Token 724: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5926280617713928
    2. ':' → logprob: -0.8426280617713928
    3. ':
' → logprob: -4.467628002166748
    4. '       ' → logprob: -6.467628002166748
    5. '():' → logprob: -7.467628002166748
    6. '():
' → logprob: -7.467628002166748
    7. ',' → logprob: -7.467628002166748
    8. '(line' → logprob: -8.217628479003906
    9. '<|end|>' → logprob: -8.217628479003906
    10. '```' → logprob: -8.467628479003906

Token 725: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014389381743967533
    2. 'line' → logprob: -5.139389514923096
    3. ' line' → logprob: -5.264389514923096
    4. 'try' → logprob: -6.014389514923096
    5. ' try' → logprob: -8.764389038085938
    6. '```' → logprob: -8.764389038085938
    7. 'input' → logprob: -8.889389038085938
    8. '   ' → logprob: -9.014389038085938
    9. '       ' → logprob: -9.139389038085938
    10. '#line' → logprob: -10.639389038085938

Token 726: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03172621503472328
    2. 'n' (adapté à ' n') → logprob: -4.281726360321045
    3. 'try' → logprob: -4.531726360321045
    4. ' line' → logprob: -5.281726360321045
    5. '           ' → logprob: -7.031726360321045
    6. 's' → logprob: -8.031725883483887
    7. 'N' → logprob: -8.531725883483887
    8. ' try' → logprob: -9.781725883483887
    9. ' n' → logprob: -9.906725883483887
    10. '   ' → logprob: -11.031725883483887

Token 727: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870081603527069
    2. '=' → logprob: -1.1370081901550293
    3. '_line' → logprob: -9.262007713317871
    4. '=line' → logprob: -10.887007713317871
    5. '=int' → logprob: -11.512007713317871
    6. '=input' → logprob: -12.762007713317871
    7. 'line' → logprob: -13.012007713317871
    8. 'ine' → logprob: -13.387007713317871
    9. '_str' → logprob: -13.637007713317871
    10. '   ' → logprob: -13.887007713317871

Token 728: ' self' (ID: 1051)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00688196113333106
    2. ' int' → logprob: -5.006882190704346
    3. 'input' → logprob: -8.756881713867188
    4. ' input' → logprob: -12.006881713867188
    5. 'self' → logprob: -12.881881713867188
    6. ' self' → logprob: -15.881881713867188
    7. 'len' → logprob: -16.006881713867188
    8. '   ' → logprob: -16.131881713867188
    9. '(int' → logprob: -16.131881713867188
    10. '	int' → logprob: -17.131881713867188

Token 729: '._' (ID: 2697)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6506969928741455
    2. '.input' → logprob: -1.9006969928741455
    3. '.readline' → logprob: -2.1506969928741455
    4. '=input' → logprob: -3.1506969928741455
    5. '=int' → logprob: -3.2756969928741455
    6. '._' → logprob: -3.5256969928741455
    7. 'int' → logprob: -3.7756969928741455
    8. '=' → logprob: -4.150696754455566
    9. ' =' → logprob: -4.400696754455566
    10. '.__' → logprob: -4.650696754455566

Token 730: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.09296568483114243
    2. 'input' → logprob: -3.092965602874756
    3. 'get' → logprob: -3.467965602874756
    4. 'parse' → logprob: -5.342965602874756
    5. 'int' → logprob: -5.717965602874756
    6. 'safe' → logprob: -6.092965602874756
    7. 'try' → logprob: -7.217965602874756
    8. '_read' → logprob: -7.967965602874756
    9. 'next' → logprob: -9.092966079711914
    10. 'scanf' → logprob: -9.467966079711914

Token 731: '_integer' (ID: 82911)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14959289133548737
    2. 'int' → logprob: -2.149592876434326
    3. '()
' → logprob: -4.024592876434326
    4. 'line' → logprob: -5.524592876434326
    5. '_line' → logprob: -8.649593353271484
    6. '=int' → logprob: -8.899593353271484
    7. 'input' → logprob: -10.024593353271484
    8. ' =' → logprob: -10.274593353271484
    9. '())' → logprob: -10.524593353271484
    10. '(int' → logprob: -10.899593353271484

Token 732: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002477796748280525
    2. '()
' → logprob: -6.002477645874023
    3. '()

' → logprob: -13.877477645874023
    4. '()
' → logprob: -14.502477645874023
    5. ' ()' → logprob: -16.002477645874023
    6. '())' → logprob: -16.252477645874023
    7. '()\' → logprob: -16.252477645874023
    8. '(' → logprob: -16.377477645874023
    9. '()`' → logprob: -16.502477645874023
    10. '();' → logprob: -16.752477645874023

Token 733: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010592726175673306
    2. 'if' → logprob: -10.000105857849121
    3. '		' → logprob: -10.250105857849121
    4. '	       ' → logprob: -11.500105857849121
    5. ' if' → logprob: -12.000105857849121
    6. '       ' → logprob: -13.000105857849121
    7. '<|end|>' → logprob: -13.250105857849121
    8. '               ' → logprob: -14.000105857849121
    9. '		   ' → logprob: -14.250105857849121
    10. ',' → logprob: -14.250105857849121

Token 734: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.058646269142627716
    2. '           ' → logprob: -3.5586462020874023
    3. ' if' → logprob: -3.5586462020874023
    4. '	if' → logprob: -12.683646202087402
    5. '       ' → logprob: -14.183646202087402
    6. '		' → logprob: -14.683646202087402
    7. '   ' → logprob: -15.433646202087402
    8. '	       ' → logprob: -15.558646202087402
    9. 'If' → logprob: -15.683646202087402
    10. ';if' → logprob: -16.18364715576172

Token 735: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02324605919420719
    2. ' n' → logprob: -3.7732460498809814
    3. ' not' → logprob: -15.273245811462402
    4. 'not' → logprob: -15.273245811462402
    5. '	n' → logprob: -16.27324676513672
    6. ' ' → logprob: -17.64824676513672
    7. 'n't' → logprob: -18.14824676513672
    8. '0' → logprob: -18.52324676513672
    9. '(n' → logprob: -18.64824676513672
    10. '_n' → logprob: -18.89824676513672

Token 736: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3181571066379547
    2. ' ==' → logprob: -1.3181570768356323
    3. '<=' → logprob: -5.568157196044922
    4. '=' → logprob: -7.568157196044922
    5. ' <=' → logprob: -8.068157196044922
    6. '()==' → logprob: -9.693157196044922
    7. ' is' → logprob: -10.068157196044922
    8. '===' → logprob: -10.318157196044922
    9. '<|end|>' → logprob: -10.443157196044922
    10. ' =' → logprob: -10.693157196044922

Token 737: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024001303245313466
    2. ' ' → logprob: -8.375240325927734
    3. '-' → logprob: -11.625240325927734
    4. ' -' → logprob: -14.750240325927734
    5. 'None' → logprob: -16.375240325927734
    6. '０' → logprob: -18.375240325927734
    7. '```' → logprob: -18.625240325927734
    8. '  ' → logprob: -18.625240325927734
    9. '   ' → logprob: -18.875240325927734
    10. '۰' → logprob: -19.125240325927734

Token 738: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.9650025428272784e-05
    2. '-' → logprob: -10.250040054321289
    3. ' ' → logprob: -12.375040054321289
    4. ' -' → logprob: -17.00004005432129
    5. 'None' → logprob: -18.12504005432129
    6. '
' → logprob: -19.12504005432129
    7. '=' → logprob: -19.25004005432129
    8. '```' → logprob: -19.37504005432129
    9. '０' → logprob: -19.50004005432129
    10. '   ' → logprob: -19.50004005432129

Token 739: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.035995740443468094
    2. ':' → logprob: -3.4109957218170166
    3. '           ' → logprob: -6.410995960235596
    4. '               ' → logprob: -7.410995960235596
    5. ':return' → logprob: -9.410995483398438
    6. '   ' → logprob: -12.535995483398438
    7. '):
' → logprob: -12.535995483398438
    8. '():
' → logprob: -13.035995483398438
    9. ':
' → logprob: -13.035995483398438
    10. '       ' → logprob: -13.035995483398438

Token 740: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020000117365270853
    2. '           ' → logprob: -6.251999855041504
    3. '   ' → logprob: -10.376999855041504
    4. '	           ' → logprob: -11.001999855041504
    5. '			' → logprob: -12.376999855041504
    6. 'return' → logprob: -12.501999855041504
    7. 'break' → logprob: -13.251999855041504
    8. '                   ' → logprob: -13.251999855041504
    9. '              ' → logprob: -13.251999855041504
    10. '<|end|>' → logprob: -13.251999855041504

Token 741: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.30918368697166443
    2. '           ' → logprob: -1.5591837167739868
    3. ' break' → logprob: -3.5591835975646973
    4. 'return' → logprob: -3.8091835975646973
    5. '               ' → logprob: -5.434183597564697
    6. '	break' → logprob: -7.684183597564697
    7. '
' → logprob: -9.059184074401855
    8. ' return' → logprob: -9.934184074401855
    9. '   ' → logprob: -11.934184074401855
    10. '		' → logprob: -12.184184074401855

Token 742: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007278861477971077
    2. 'n' → logprob: -5.632278919219971
    3. '<|end|>' → logprob: -6.132278919219971
    4. '            
' → logprob: -7.257278919219971
    5. '
' → logprob: -7.757278919219971
    6. ',' → logprob: -9.007278442382812
    7. '<|end|>' → logprob: -9.632278442382812
    8. 'def' → logprob: -9.882278442382812
    9. 'self' → logprob: -10.382278442382812
    10. '       ' → logprob: -11.382278442382812

Token 743: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.790129555156454e-05
    2. '       ' → logprob: -10.625067710876465
    3. '
' → logprob: -11.625067710876465
    4. '		' → logprob: -11.625067710876465
    5. '            
' → logprob: -11.625067710876465
    6. 'self' → logprob: -12.000067710876465
    7. 'n' → logprob: -12.750067710876465
    8. 'for' → logprob: -13.375067710876465
    9. '   ' → logprob: -13.750067710876465
    10. '               ' → logprob: -14.250067710876465

Token 744: ' colors' (ID: 10803)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.9668760299682617
    2. 'moves' → logprob: -0.9668760299682617
    3. 'indices' → logprob: -2.2168760299682617
    4. '           ' → logprob: -2.8418760299682617
    5. 'positions' → logprob: -4.216876029968262
    6. 'indexes' → logprob: -4.341876029968262
    7. 'colors' (adapté à ' colors') → logprob: -4.466876029968262
    8. 'dataset' → logprob: -5.091876029968262
    9. 'steps' → logprob: -5.466876029968262
    10. 'data' → logprob: -5.716876029968262

Token 745: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023865975439548492
    2. '=' → logprob: -3.7738659381866455
    3. ',' → logprob: -7.398866176605225
    4. '=[]' → logprob: -12.648865699768066
    5. '_colors' → logprob: -13.898865699768066
    6. '_and' → logprob: -14.148865699768066
    7. '   ' → logprob: -14.273865699768066
    8. '=[]
' → logprob: -14.273865699768066
    9. ' ' → logprob: -14.398865699768066
    10. ' ,' → logprob: -14.898865699768066

Token 746: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.17081257700920105
    2. 'self' → logprob: -2.1708126068115234
    3. '[]
' → logprob: -3.5458126068115234
    4. '[]' → logprob: -4.545812606811523
    5. '[' → logprob: -6.170812606811523
    6. ' self' → logprob: -7.170812606811523
    7. 'list' → logprob: -8.795812606811523
    8. ' [' → logprob: -8.795812606811523
    9. '[list' → logprob: -9.170812606811523
    10. '[s' → logprob: -9.920812606811523

Token 747: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00912229623645544
    2. 'Stone' → logprob: -4.884122371673584
    3. 'int' → logprob: -6.509122371673584
    4. ' self' → logprob: -11.259121894836426
    5. '(self' → logprob: -12.509121894836426
    6. 'stone' → logprob: -13.384121894836426
    7. '0' → logprob: -13.634121894836426
    8. ' Stone' → logprob: -13.759121894836426
    9. 'STONE' → logprob: -14.259121894836426
    10. 'St' → logprob: -14.259121894836426

Token 748: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.3663626305060461e-05
    2. '_symbol' → logprob: -11.62501335144043
    3. '_read' → logprob: -12.50001335144043
    4. '_symbols' → logprob: -15.12501335144043
    5. '_input' → logprob: -15.37501335144043
    6. ':_' → logprob: -16.12501335144043
    7. '.read' → logprob: -16.12501335144043
    8. '.' → logprob: -16.25001335144043
    9. '_sym' → logprob: -16.87501335144043
    10. '_next' → logprob: -16.87501335144043

Token 749: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0001645644661039114
    2. '_read' → logprob: -9.625164985656738
    3. 'symbol' → logprob: -9.750164985656738
    4. 'parse' → logprob: -11.250164985656738
    5. ' read' → logprob: -12.500164985656738
    6. 'get' → logprob: -12.500164985656738
    7. '
' → logprob: -12.750164985656738
    8. 'next' → logprob: -13.000164985656738
    9. '.read' → logprob: -13.375164985656738
    10. '_symbol' → logprob: -13.500164985656738

Token 750: '_integer' (ID: 82911)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.45318838953971863
    2. '_integer' → logprob: -1.203188419342041
    3. 'int' → logprob: -2.828188419342041
    4. 'string' → logprob: -6.578188419342041
    5. '_int' → logprob: -6.703188419342041
    6. '_string' → logprob: -7.453188419342041
    7. '()]' → logprob: -7.828188419342041
    8. 'token' → logprob: -8.328187942504883
    9. '_token' → logprob: -8.328187942504883
    10. 'stone' → logprob: -8.703187942504883

Token 751: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.531315314830863e-06
    2. 'for' → logprob: -13.500003814697266
    3. ' ()' → logprob: -13.750003814697266
    4. ' for' → logprob: -14.500003814697266
    5. '()]' → logprob: -14.625003814697266
    6. '()
' → logprob: -15.750003814697266
    7. '()]
' → logprob: -18.625003814697266
    8. '(' → logprob: -19.500003814697266
    9. ']' → logprob: -20.375003814697266
    10. ')' → logprob: -20.375003814697266

Token 752: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28177136182785034
    2. ' for' → logprob: -1.5317714214324951
    3. 'for' → logprob: -3.531771421432495
    4. ' ()' → logprob: -9.406771659851074
    5. '           ' → logprob: -9.781771659851074
    6. '               ' → logprob: -12.906771659851074
    7. '	for' → logprob: -13.031771659851074
    8. '()]' → logprob: -13.906771659851074
    9. ')' → logprob: -14.156771659851074
    10. '()
' → logprob: -14.531771659851074

Token 753: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00013488641707226634
    2. '_range' → logprob: -9.500134468078613
    3. ' _' → logprob: -10.250134468078613
    4. ' range' → logprob: -11.375134468078613
    5. ' in' → logprob: -12.125134468078613
    6. '_in' → logprob: -12.250134468078613
    7. 'range' → logprob: -13.250134468078613
    8. '_i' → logprob: -13.875134468078613
    9. '_
' → logprob: -16.75013542175293
    10. '
' → logprob: -17.12513542175293

Token 754: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07951698452234268
    2. ' range' → logprob: -2.579516887664795
    3. 'in' → logprob: -7.954516887664795
    4. ' in' → logprob: -8.454517364501953
    5. '_range' → logprob: -9.829517364501953
    6. '_' → logprob: -12.204517364501953
    7. '	range' → logprob: -12.579517364501953
    8. '(range' → logprob: -14.954517364501953
    9. '
' → logprob: -16.329517364501953
    10. ' ' → logprob: -16.454517364501953

Token 755: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009115827269852161
    2. ' range' → logprob: -7.000911712646484
    3. '_range' → logprob: -16.625911712646484
    4. '	range' → logprob: -17.375911712646484
    5. '_' → logprob: -18.250911712646484
    6. '(range' → logprob: -19.750911712646484
    7. '
' → logprob: -19.875911712646484
    8. 'rang' → logprob: -20.625911712646484
    9. '   ' → logprob: -21.375911712646484
    10. '.range' → logprob: -22.875911712646484

Token 756: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0297652967274189
    2. 'n' → logprob: -3.5297653675079346
    3. ' n' → logprob: -12.029765129089355
    4. '(' → logprob: -12.029765129089355
    5. ' (' → logprob: -13.029765129089355
    6. '	n' → logprob: -14.404765129089355
    7. '_n' → logprob: -17.029766082763672
    8. ')n' → logprob: -17.404766082763672
    9. ',n' → logprob: -17.654766082763672
    10. '(
' → logprob: -18.029766082763672

Token 757: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.253199964761734
    2. ')]' → logprob: -1.5031999349594116
    3. ']
' → logprob: -6.753200054168701
    4. ')' → logprob: -10.128199577331543
    5. ')]
' → logprob: -10.378199577331543
    6. '()]' → logprob: -10.753199577331543
    7. '           ' → logprob: -12.378199577331543
    8. ' ]' → logprob: -12.628199577331543
    9. ']
' → logprob: -14.253199577331543
    10. '       ' → logprob: -14.378199577331543

Token 758: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018041854491457343
    2. '
' → logprob: -9.5001802444458
    3. ',' → logprob: -10.6251802444458
    4. '       ' → logprob: -10.8751802444458
    5. '<|end|>' → logprob: -11.0001802444458
    6. '            
' → logprob: -11.5001802444458
    7. 'return' → logprob: -11.6251802444458
    8. 'self' → logprob: -12.2501802444458
    9. '	       ' → logprob: -12.3751802444458
    10. '		' → logprob: -12.3751802444458

Token 759: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.351971298456192
    2. 'table' → logprob: -1.2269712686538696
    3. '           ' → logprob: -6.85197114944458
    4. 'indices' → logprob: -6.97697114944458
    5. ' self' → logprob: -8.101971626281738
    6. 't' → logprob: -8.101971626281738
    7. 'index' → logprob: -8.601971626281738
    8. 'for' → logprob: -8.726971626281738
    9. 'indexes' → logprob: -9.101971626281738
    10. 'tables' → logprob: -9.476971626281738

Token 760: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.12854336202144623
    2. '.process' → logprob: -2.1285433769226074
    3. 'datasets' → logprob: -7.128543376922607
    4. '._' → logprob: -7.378543376922607
    5. '.store' → logprob: -9.25354290008545
    6. '.handle' → logprob: -11.00354290008545
    7. '.datas' → logprob: -11.37854290008545
    8. '.place' → logprob: -11.62854290008545
    9. '.add' → logprob: -11.87854290008545
    10. '.groups' → logprob: -11.87854290008545

Token 761: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.662937372922897e-05
    2. '.' → logprob: -9.500096321105957
    3. '.extend' → logprob: -11.625096321105957
    4. '<|end|>' → logprob: -12.500096321105957
    5. '.setdefault' → logprob: -13.000096321105957
    6. '.app' → logprob: -13.125096321105957
    7. '.py' → logprob: -13.625096321105957
    8. '.add' → logprob: -14.250096321105957
    9. '.Append' → logprob: -14.750096321105957
    10. '.push' → logprob: -15.000096321105957

Token 762: '((' (ID: 2054)
  Prédit: '(colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(colors' → logprob: -0.000585918256547302
    2. 'colors' → logprob: -7.500586032867432
    3. '((' → logprob: -10.375585556030273
    4. '(tuple' → logprob: -14.375585556030273
    5. '(list' → logprob: -14.625585556030273
    6. '(' → logprob: -15.250585556030273
    7. '(color' → logprob: -15.250585556030273
    8. ' colors' → logprob: -15.875585556030273
    9. ' (' → logprob: -17.375585556030273
    10. '(col' → logprob: -17.875585556030273

Token 763: 'n' (ID: 77)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.5764418840408325
    2. 'n' → logprob: -0.8264418840408325
    3. ' colors' → logprob: -7.951441764831543
    4. ' n' → logprob: -8.951441764831543
    5. 'color' → logprob: -12.576441764831543
    6. '
' → logprob: -13.201441764831543
    7. '(colors' → logprob: -13.513941764831543
    8. '[n' → logprob: -13.576441764831543
    9. 'Colors' → logprob: -13.763941764831543
    10. 'len' → logprob: -13.888941764831543

Token 764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.697387966094539e-05
    2. ' ,' → logprob: -9.375086784362793
    3. ',
' → logprob: -14.000086784362793
    4. 'colors' → logprob: -14.125086784362793
    5. ',color' → logprob: -14.875086784362793
    6. '
' → logprob: -16.62508773803711
    7. ' colors' → logprob: -17.62508773803711
    8. '   ' → logprob: -18.25008773803711
    9. '‌,' → logprob: -19.00008773803711
    10. 'Colors' → logprob: -19.00008773803711

Token 765: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.005233882926404476
    2. ' colors' → logprob: -5.2552337646484375
    3. 'color' → logprob: -17.505233764648438
    4. '(colors' → logprob: -18.505233764648438
    5. '   ' → logprob: -18.880233764648438
    6. '.colors' → logprob: -19.130233764648438
    7. '           ' → logprob: -20.255233764648438
    8. '[' → logprob: -20.255233764648438
    9. 'Colors' → logprob: -20.255233764648438
    10. ')' → logprob: -20.380233764648438

Token 766: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0028398223221302032
    2. ')' → logprob: -5.877840042114258
    3. '))
' → logprob: -10.377840042114258
    4. ' ))' → logprob: -13.752840042114258
    5. '       ' → logprob: -14.127840042114258
    6. ')))' → logprob: -14.252840042114258
    7. '           ' → logprob: -15.002840042114258
    8. ',' → logprob: -15.502840042114258
    9. ')]' → logprob: -15.877840042114258
    10. '<|end|>' → logprob: -15.877840042114258

Token 767: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026401663199067116
    2. 'def' → logprob: -4.151401519775391
    3. '
' → logprob: -4.651401519775391
    4. ' def' → logprob: -7.526401519775391
    5. '<|end|>' → logprob: -9.15140151977539
    6. '<|end|>' → logprob: -10.02640151977539
    7. '    
' → logprob: -10.52640151977539
    8. '```' → logprob: -10.52640151977539
    9. ' ' → logprob: -11.90140151977539
    10. '	def' → logprob: -12.65140151977539

Token 768: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012288003927096725
    2. '   ' → logprob: -6.8762288093566895
    3. ' def' → logprob: -9.126228332519531
    4. '
' → logprob: -9.376228332519531
    5. '	def' → logprob: -13.751228332519531
    6. '```' → logprob: -13.751228332519531
    7. '<|end|>' → logprob: -16.87622833251953
    8. '    
' → logprob: -17.00122833251953
    9. '`' → logprob: -17.37622833251953
    10. '

' → logprob: -17.50122833251953

Token 769: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.02900014817714691
    2. 'property' → logprob: -4.029000282287598
    3. 'classmethod' → logprob: -4.529000282287598
    4. '@' → logprob: -19.52899932861328
    5. '@property' → logprob: -19.52899932861328
    6. ' property' → logprob: -19.77899932861328
    7. 'static' → logprob: -20.27899932861328
    8. 'dat' → logprob: -20.40399932861328
    9. 'code' → logprob: -21.65399932861328
    10. 'class' → logprob: -22.02899932861328

Token 770: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009596600197255611
    2. '   ' → logprob: -4.759596824645996
    3. '
' → logprob: -7.509596824645996
    4. ' def' → logprob: -7.759596824645996
    5. '	def' → logprob: -12.009596824645996
    6. '    
' → logprob: -14.634596824645996
    7. '_def' → logprob: -14.884596824645996
    8. '\' → logprob: -16.13459587097168
    9. '```' → logprob: -17.00959587097168
    10. '
' → logprob: -17.50959587097168

Token 771: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.77627644513268e-06
    2. ' def' → logprob: -12.000008583068848
    3. '   ' → logprob: -13.000008583068848
    4. '
' → logprob: -15.000008583068848
    5. '	def' → logprob: -18.000009536743164
    6. '    
' → logprob: -20.875009536743164
    7. '\' → logprob: -21.125009536743164
    8. '_def' → logprob: -21.250009536743164
    9. ':def' → logprob: -22.375009536743164
    10. '```' → logprob: -22.375009536743164

Token 772: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.4849443838757e-06
    2. ' def' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.000003814697266
    4. '
' → logprob: -19.125003814697266
    5. '_def' → logprob: -19.750003814697266
    6. '	def' → logprob: -20.250003814697266
    7. 'read' → logprob: -20.875003814697266
    8. '```' → logprob: -20.875003814697266
    9. 'from' → logprob: -21.250003814697266
    10. 'Def' → logprob: -22.000003814697266

Token 773: ' _' (ID: 1175)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2035125344991684
    2. '_read' → logprob: -1.7035125494003296
    3. 'def' → logprob: -7.953512668609619
    4. 'input' → logprob: -8.203512191772461
    5. 'parse' → logprob: -8.328512191772461
    6. 'main' → logprob: -8.453512191772461
    7. 'from' → logprob: -8.578512191772461
    8. ' read' → logprob: -8.578512191772461
    9. '_main' → logprob: -9.703512191772461
    10. 'process' → logprob: -9.703512191772461

Token 774: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.9361264946837764e-07
    2. '_read' → logprob: -16.5
    3. ' read' → logprob: -17.375
    4. '
' → logprob: -17.5
    5. 'def' → logprob: -18.5
    6. '	read' → logprob: -19.5
    7. 'parse' → logprob: -20.625
    8. 'get' → logprob: -20.875
    9. '.read' → logprob: -20.875
    10. '(read' → logprob: -21.25

Token 775: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.00013238313840702176
    2. 'integer' → logprob: -9.12513256072998
    3. 'int' → logprob: -10.87513256072998
    4. '_int' → logprob: -13.12513256072998
    5. 'Integer' → logprob: -13.87513256072998
    6. 'def' → logprob: -14.25013256072998
    7. 'line' → logprob: -14.75013256072998
    8. '_line' → logprob: -15.62513256072998
    9. '_input' → logprob: -15.62513256072998
    10. '_INTEGER' → logprob: -16.375131607055664

Token 776: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001567353610880673
    2. '():
' → logprob: -6.501567363739014
    3. '()' → logprob: -10.376566886901855
    4. ' ():' → logprob: -10.501566886901855
    5. '(' → logprob: -13.251566886901855
    6. '(file' → logprob: -14.376566886901855
    7. '(src' → logprob: -14.376566886901855
    8. 'def' → logprob: -14.501566886901855
    9. '(stdin' → logprob: -14.501566886901855
    10. '(input' → logprob: -14.501566886901855

Token 777: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12741927802562714
    2. '():
' → logprob: -2.1274192333221436
    3. '()' → logprob: -7.627419471740723
    4. '():
' → logprob: -13.877419471740723
    5. '()->' → logprob: -14.127419471740723
    6. 'def' → logprob: -14.502419471740723
    7. '():

' → logprob: -14.627419471740723
    8. ' ():' → logprob: -15.002419471740723
    9. '(' → logprob: -15.627419471740723
    10. '();' → logprob: -15.752419471740723

Token 778: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.935296834039036e-06
    2. ' int' → logprob: -12.75000286102295
    3. '(int' → logprob: -18.125003814697266
    4. '[int' → logprob: -20.625003814697266
    5. '<int' → logprob: -22.250003814697266
    6. '	int' → logprob: -22.625003814697266
    7. '=int' → logprob: -24.000003814697266
    8. 'ints' → logprob: -24.000003814697266
    9. '
' → logprob: -24.250003814697266
    10. ':int' → logprob: -24.625003814697266

Token 779: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.4770265221595764
    2. '():' → logprob: -0.9770265221595764
    3. '()' → logprob: -5.852026462554932
    4. '   ' → logprob: -10.85202693939209
    5. ':' → logprob: -11.10202693939209
    6. ':
' → logprob: -11.47702693939209
    7. '()->' → logprob: -11.85202693939209
    8. 'return' → logprob: -12.22702693939209
    9. '():
' → logprob: -12.47702693939209
    10. '(' → logprob: -13.35202693939209

Token 780: '       ' (ID: 309)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.45041972398757935
    2. 'return' → logprob: -1.7004196643829346
    3. ' return' → logprob: -2.2004196643829346
    4. '       ' → logprob: -3.4504196643829346
    5. ' int' → logprob: -3.8254196643829346
    6. 'try' → logprob: -4.325419902801514
    7. ' try' → logprob: -6.700419902801514
    8. 'import' → logprob: -7.450419902801514
    9. '   ' → logprob: -7.575419902801514
    10. ' import' → logprob: -10.325419425964355

Token 781: ' import' (ID: 1588)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13884639739990234
    2. 'return' → logprob: -2.1388463973999023
    3. 'import' (adapté à ' import') → logprob: -4.638846397399902
    4. 'try' → logprob: -6.138846397399902
    5. ' return' → logprob: -11.138846397399902
    6. ' int' → logprob: -12.138846397399902
    7. '
' → logprob: -14.888846397399902
    8. '   ' → logprob: -15.388846397399902
    9. '=int' → logprob: -15.388846397399902
    10. '```' → logprob: -15.888846397399902

Token 782: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.5716304410016164e-05
    2. ' sys' → logprob: -10.250035285949707
    3. 'built' → logprob: -15.750035285949707
    4. 'io' → logprob: -16.250036239624023
    5. '=sys' → logprob: -18.750036239624023
    6. 'stdin' → logprob: -19.250036239624023
    7. 'int' → logprob: -20.500036239624023
    8. '(sys' → logprob: -21.375036239624023
    9. 'input' → logprob: -21.625036239624023
    10. 'math' → logprob: -21.750036239624023

Token 783: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09480804949998856
    2. 'return' → logprob: -2.4698081016540527
    3. ' return' → logprob: -5.594808101654053
    4. '        
' → logprob: -7.344808101654053
    5. 'line' → logprob: -7.469808101654053
    6. ' line' → logprob: -7.969808101654053
    7. 'input' → logprob: -8.844807624816895
    8. '.readline' → logprob: -8.969807624816895
    9. '   ' → logprob: -9.719807624816895
    10. 'try' → logprob: -10.094807624816895

Token 784: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09397660940885544
    2. 'return' → logprob: -2.4689764976501465
    3. ' return' → logprob: -5.5939764976501465
    4. 'line' → logprob: -7.3439764976501465
    5. ' line' → logprob: -7.4689764976501465
    6. 'try' → logprob: -10.218976974487305
    7. '   ' → logprob: -10.343976974487305
    8. '        
' → logprob: -12.093976974487305
    9. 'data' → logprob: -12.593976974487305
    10. ' readline' → logprob: -13.093976974487305

Token 785: ' while' (ID: 2049)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010613501071929932
    2. 'line' → logprob: -5.010613441467285
    3. '   ' → logprob: -5.885613441467285
    4. ' return' → logprob: -7.260613441467285
    5. '       ' → logprob: -8.260613441467285
    6. 'value' → logprob: -9.510613441467285
    7. ' line' → logprob: -10.010613441467285
    8. 'try' → logprob: -11.385613441467285
    9. 'data' → logprob: -11.510613441467285
    10. '	return' → logprob: -12.885613441467285

Token 786: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.02991374582052231
    2. ' True' → logprob: -3.5299136638641357
    3. '(True' → logprob: -8.779913902282715
    4. '1' → logprob: -11.654913902282715
    5. '=True' → logprob: -15.154913902282715
    6. ' ' → logprob: -15.904913902282715
    7. '   ' → logprob: -16.0299129486084
    8. 'true' → logprob: -16.2799129486084
    9. '(' → logprob: -16.6549129486084
    10. '
' → logprob: -16.7799129486084

Token 787: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20195576548576355
    2. ' line' → logprob: -1.826955795288086
    3. '       ' → logprob: -5.326955795288086
    4. ',' → logprob: -5.326955795288086
    5. 'line' → logprob: -6.076955795288086
    6. ':
' → logprob: -6.451955795288086
    7. '   ' → logprob: -6.826955795288086
    8. 's' → logprob: -7.201955795288086
    9. ':' → logprob: -7.326955795288086
    10. '(line' → logprob: -7.326955795288086

Token 788: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013097420334815979
    2. ' line' → logprob: -4.513097286224365
    3. ' try' → logprob: -7.013097286224365
    4. 'try' → logprob: -7.263097286224365
    5. 'line' → logprob: -8.638097763061523
    6. '       ' → logprob: -8.763097763061523
    7. '   ' → logprob: -10.638097763061523
    8. '	       ' → logprob: -10.763097763061523
    9. 's' → logprob: -11.013097763061523
    10. '               ' → logprob: -11.763097763061523

Token 789: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0024977754801511765
    2. ' line' → logprob: -6.002497673034668
    3. '           ' → logprob: -10.752497673034668
    4. '	line' → logprob: -15.002497673034668
    5. '_line' → logprob: -15.502497673034668
    6. 's' → logprob: -16.877498626708984
    7. '   ' → logprob: -17.877498626708984
    8. '(line' → logprob: -18.502498626708984
    9. 'try' → logprob: -18.627498626708984
    10. '               ' → logprob: -19.377498626708984

Token 790: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043195921927690506
    2. '=' → logprob: -3.168195962905884
    3. '=line' → logprob: -8.793195724487305
    4. '           ' → logprob: -10.918195724487305
    5. '<|end|>' → logprob: -12.168195724487305
    6. 's' → logprob: -12.293195724487305
    7. '<|end|>' → logprob: -12.793195724487305
    8. 'import' → logprob: -12.918195724487305
    9. '.readline' → logprob: -12.918195724487305
    10. '       ' → logprob: -13.793195724487305

Token 791: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2014296054840088
    2. ' sys' → logprob: -1.7014296054840088
    3. 'input' → logprob: -11.82642936706543
    4. '           ' → logprob: -12.07642936706543
    5. 'import' → logprob: -12.95142936706543
    6. ' input' → logprob: -14.57642936706543
    7. '(sys' → logprob: -15.57642936706543
    8. '=sys' → logprob: -15.82642936706543
    9. '               ' → logprob: -17.07642936706543
    10. '	sys' → logprob: -17.20142936706543

Token 792: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007388730882667005
    2. 'stdin' → logprob: -7.875739097595215
    3. 'import' → logprob: -8.750739097595215
    4. 'in' → logprob: -8.750739097595215
    5. '.stdout' → logprob: -10.875739097595215
    6. '.stderr' → logprob: -12.375739097595215
    7. '(stdin' → logprob: -12.625739097595215
    8. ' stdin' → logprob: -13.125739097595215
    9. '.readline' → logprob: -13.250739097595215
    10. '```' → logprob: -13.500739097595215

Token 793: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.7432603272027336e-06
    2. '.' → logprob: -13.875001907348633
    3. ' readline' → logprob: -14.500001907348633
    4. '.stdin' → logprob: -15.750001907348633
    5. '.readlines' → logprob: -17.875001907348633
    6. 'read' → logprob: -18.250001907348633
    7. '.stdout' → logprob: -19.250001907348633
    8. 'stdin' → logprob: -19.250001907348633
    9. '```' → logprob: -19.375001907348633
    10. '().' → logprob: -19.875001907348633

Token 794: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5600881576538086
    2. '().' → logprob: -1.0600881576538086
    3. '           ' → logprob: -2.8100881576538086
    4. '()
' → logprob: -4.185088157653809
    5. '       ' → logprob: -5.560088157653809
    6. '.strip' → logprob: -6.810088157653809
    7. '():
' → logprob: -6.935088157653809
    8. '.rstrip' → logprob: -8.310088157653809
    9. '<|end|>' → logprob: -9.185088157653809
    10. '<|end|>' → logprob: -9.435088157653809

Token 795: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039688896387815475
    2. '       ' → logprob: -3.4146888256073
    3. '.strip' → logprob: -5.789689064025879
    4. '<|end|>' → logprob: -6.789689064025879
    5. '.rstrip' → logprob: -7.289689064025879
    6. '<|end|>' → logprob: -8.414689064025879
    7. '().' → logprob: -9.039689064025879
    8. ' if' → logprob: -9.039689064025879
    9. ',' → logprob: -9.164689064025879
    10. ' =' → logprob: -9.289689064025879

Token 796: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28922590613365173
    2. ' if' → logprob: -1.6642259359359741
    3. 'if' (adapté à ' if') → logprob: -2.7892258167266846
    4. ' line' → logprob: -8.164225578308105
    5. '               ' → logprob: -10.914225578308105
    6. 'line' → logprob: -11.039225578308105
    7. '	       ' → logprob: -11.789225578308105
    8. '		' → logprob: -12.164225578308105
    9. '	if' → logprob: -12.414225578308105
    10. 's' → logprob: -13.039225578308105

Token 797: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.29175305366516113
    2. 'line' → logprob: -1.5417530536651611
    3. ' not' → logprob: -3.291753053665161
    4. 'not' → logprob: -6.291752815246582
    5. '#line' → logprob: -14.291752815246582
    6. '=line' → logprob: -14.666752815246582
    7. '	line' → logprob: -15.916752815246582
    8. '(line' → logprob: -16.0417537689209
    9. '_line' → logprob: -18.0417537689209
    10. '[line' → logprob: -18.0417537689209

Token 798: ' ==' (ID: 951)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.009570498019456863
    2. ':' → logprob: -5.634570598602295
    3. '==' → logprob: -6.009570598602295
    4. ' ==' → logprob: -6.134570598602295
    5. '.' → logprob: -7.509570598602295
    6. ' is' → logprob: -8.259570121765137
    7. ':
' → logprob: -8.384570121765137
    8. 'strip' → logprob: -8.759570121765137
    9. '=' → logprob: -10.384570121765137
    10. '_strip' → logprob: -11.259570121765137

Token 799: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.13024023175239563
    2. ''' → logprob: -2.1302402019500732
    3. '"":' → logprob: -6.255240440368652
    4. '""' → logprob: -6.755240440368652
    5. ' '':
' → logprob: -8.880240440368652
    6. '"' → logprob: -9.880240440368652
    7. ' '' → logprob: -11.130240440368652
    8. '''
' → logprob: -12.130240440368652
    9. ''b' → logprob: -12.380240440368652
    10. ''''' → logprob: -14.005240440368652

Token 800: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009033341892063618
    2. '           ' → logprob: -5.134033203125
    3. '\n' → logprob: -7.009033203125
    4. ':
' → logprob: -7.509033203125
    5. '       ' → logprob: -7.759033203125
    6. ' or' → logprob: -7.884033203125
    7. 'return' → logprob: -8.259033203125
    8. ':return' → logprob: -8.884033203125
    9. ':' → logprob: -9.259033203125
    10. ' return' → logprob: -9.384033203125

Token 801: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.041231896728277206
    2. ' return' → logprob: -3.291231870651245
    3. 'continue' → logprob: -6.541232109069824
    4. 'raise' → logprob: -6.791232109069824
    5. 'break' → logprob: -7.916232109069824
    6. ' raise' → logprob: -8.791232109069824
    7. '               ' → logprob: -10.166232109069824
    8. ' continue' → logprob: -10.291232109069824
    9. ' break' → logprob: -10.916232109069824
    10. '           ' → logprob: -11.791232109069824

Token 802: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0905432254076004
    2. 'None' → logprob: -2.590543270111084
    3. '-' → logprob: -4.465543270111084
    4. ' None' → logprob: -9.465542793273926
    5. ' -' → logprob: -12.465542793273926
    6. ' ' → logprob: -12.715542793273926
    7. 'int' → logprob: -13.965542793273926
    8. 'EOF' → logprob: -14.340542793273926
    9. 'none' → logprob: -15.465542793273926
    10. '""' → logprob: -15.465542793273926

Token 803: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008754846639931202
    2. 'None' → logprob: -4.758754730224609
    3. '-' → logprob: -8.88375473022461
    4. ' None' → logprob: -13.38375473022461
    5. ' ' → logprob: -15.88375473022461
    6. ' -' → logprob: -17.38375473022461
    7. 'none' → logprob: -18.38375473022461
    8. '
' → logprob: -18.38375473022461
    9. 'EOF' → logprob: -18.38375473022461
    10. 'int' → logprob: -18.63375473022461

Token 804: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.190178904333152e-05
    2. '<|end|>' → logprob: -11.250031471252441
    3. '            
' → logprob: -11.750031471252441
    4. '       ' → logprob: -13.125031471252441
    5. ',' → logprob: -13.375031471252441
    6. '#line' → logprob: -13.625031471252441
    7. '
' → logprob: -13.875031471252441
    8. '               ' → logprob: -13.875031471252441
    9. 'return' → logprob: -14.375031471252441
    10. '		' → logprob: -14.375031471252441

Token 805: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.77627644513268e-06
    2. '       ' → logprob: -12.125008583068848
    3. '               ' → logprob: -14.000008583068848
    4. '		' → logprob: -14.250008583068848
    5. '            
' → logprob: -14.500008583068848
    6. '#line' → logprob: -15.000008583068848
    7. '
' → logprob: -15.375008583068848
    8. ' line' → logprob: -15.500008583068848
    9. '          ' → logprob: -15.875008583068848
    10. '   ' → logprob: -16.500009536743164

Token 806: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.07431469112634659
    2. ' line' → logprob: -2.949314594268799
    3. 'try' → logprob: -4.449314594268799
    4. '           ' → logprob: -4.949314594268799
    5. ' try' → logprob: -8.699315071105957
    6. 'value' → logprob: -8.949315071105957
    7. '	line' → logprob: -9.949315071105957
    8. 'token' → logprob: -10.824315071105957
    9. '=line' → logprob: -10.949315071105957
    10. 'str' → logprob: -11.324315071105957

Token 807: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00026753442944027483
    2. '.strip' → logprob: -9.00026798248291
    3. ' =' → logprob: -9.12526798248291
    4. 'strip' → logprob: -10.37526798248291
    5. '_strip' → logprob: -13.50026798248291
    6. '=line' → logprob: -13.75026798248291
    7. '.=' → logprob: -14.25026798248291
    8. '=
' → logprob: -14.87526798248291
    9. '.' → logprob: -15.50026798248291
    10. '=int' → logprob: -15.75026798248291

Token 808: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004078401252627373
    2. ' line' → logprob: -5.504078388214111
    3. '	line' → logprob: -20.629077911376953
    4. '=line' → logprob: -20.629077911376953
    5. '(line' → logprob: -21.129077911376953
    6. '#line' → logprob: -22.004077911376953
    7. 'lin' → logprob: -22.004077911376953
    8. 'Line' → logprob: -23.129077911376953
    9. 'lines' → logprob: -23.379077911376953
    10. 'l' → logprob: -23.754077911376953

Token 809: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.001275353948585689
    2. '.' → logprob: -7.251275539398193
    3. 'strip' → logprob: -7.626275539398193
    4. '.rstrip' → logprob: -9.626275062561035
    5. ' .' → logprob: -12.126275062561035
    6. '.trim' → logprob: -12.751275062561035
    7. '_strip' → logprob: -13.876275062561035
    8. 'str' → logprob: -14.501275062561035
    9. ' strip' → logprob: -14.501275062561035
    10. '=line' → logprob: -15.001275062561035

Token 810: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3173042833805084
    2. '()
' → logprob: -1.442304253578186
    3. '           ' → logprob: -3.9423043727874756
    4. '       ' → logprob: -4.3173041343688965
    5. '<|end|>' → logprob: -6.9423041343688965
    6. '<|end|>' → logprob: -7.0673041343688965
    7. '():
' → logprob: -8.442304611206055
    8. 'and' → logprob: -9.192304611206055
    9. ')' → logprob: -9.567304611206055
    10. ' and' → logprob: -9.942304611206055

Token 811: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002639582962729037
    2. 'if' → logprob: -8.750264167785645
    3. ' if' → logprob: -9.750264167785645
    4. '       ' → logprob: -10.750264167785645
    5. '   ' → logprob: -11.875264167785645
    6. '               ' → logprob: -12.375264167785645
    7. '	       ' → logprob: -12.375264167785645
    8. '<|end|>' → logprob: -12.375264167785645
    9. '		' → logprob: -13.000264167785645
    10. '<|end|>' → logprob: -14.125264167785645

Token 812: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001328572048805654
    2. ' if' → logprob: -6.751328468322754
    3. '           ' → logprob: -8.751328468322754
    4. '	if' → logprob: -15.626328468322754
    5. '               ' → logprob: -17.25132942199707
    6. 'If' → logprob: -17.50132942199707
    7. 'try' → logprob: -17.62632942199707
    8. '       ' → logprob: -18.00132942199707
    9. '   ' → logprob: -18.50132942199707
    10. ';if' → logprob: -19.25132942199707

Token 813: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0019532525911927223
    2. ' line' → logprob: -6.251953125
    3. 'not' → logprob: -11.001953125
    4. ' not' → logprob: -11.751953125
    5. 'len' → logprob: -16.501953125
    6. '	line' → logprob: -18.751953125
    7. '(line' → logprob: -19.751953125
    8. 'Line' → logprob: -20.626953125
    9. '   ' → logprob: -21.376953125
    10. '#line' → logprob: -21.751953125

Token 814: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5861116051673889
    2. ':' → logprob: -1.2111115455627441
    3. '!=' → logprob: -2.336111545562744
    4. '<|end|>' → logprob: -3.961111545562744
    5. ' !=' → logprob: -4.586111545562744
    6. '!='' → logprob: -5.336111545562744
    7. '.startswith' → logprob: -6.086111545562744
    8. ' ==' → logprob: -6.211111545562744
    9. '.is' → logprob: -6.211111545562744
    10. 'isdigit' → logprob: -6.336111545562744

Token 815: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.011050417087972164
    2. ''' → logprob: -4.511050224304199
    3. '""' → logprob: -13.8860502243042
    4. '''
' → logprob: -13.8860502243042
    5. ' '':
' → logprob: -14.8860502243042
    6. '"":' → logprob: -15.8860502243042
    7. '''.' → logprob: -16.261051177978516
    8. ''',' → logprob: -16.886051177978516
    9. '"' → logprob: -18.886051177978516
    10. '':' → logprob: -19.011051177978516

Token 816: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05379331111907959
    2. ':' → logprob: -3.553793430328369
    3. ':
' → logprob: -3.803793430328369
    4. 'continue' → logprob: -7.053793430328369
    5. ' continue' → logprob: -7.928793430328369
    6. '           ' → logprob: -8.803792953491211
    7. ' and' → logprob: -10.928792953491211
    8. ',' → logprob: -11.053792953491211
    9. '):
' → logprob: -11.053792953491211
    10. ' continues' → logprob: -11.678792953491211

Token 817: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.08402874320745468
    2. '               ' → logprob: -2.834028720855713
    3. ' continue' → logprob: -3.834028720855713
    4. '	continue' → logprob: -8.834029197692871
    5. '   ' → logprob: -10.459029197692871
    6. '                   ' → logprob: -11.084029197692871
    7. '_continue' → logprob: -12.834029197692871
    8. '	           ' → logprob: -13.709029197692871
    9. 'contin' → logprob: -13.959029197692871
    10. 'Continue' → logprob: -14.209029197692871

Token 818: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030831284821033478
    2. 'return' → logprob: -3.5308313369750977
    3. '       ' → logprob: -7.030831336975098
    4. ' return' → logprob: -8.905831336975098
    5. 'try' → logprob: -10.280831336975098
    6. '               ' → logprob: -11.155831336975098
    7. '   ' → logprob: -12.655831336975098
    8. '
' → logprob: -12.905831336975098
    9. '	       ' → logprob: -14.030831336975098
    10. '		' → logprob: -14.155831336975098

Token 819: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013345159590244293
    2. '       ' → logprob: -4.388345241546631
    3. 'return' → logprob: -7.138345241546631
    4. '               ' → logprob: -11.138344764709473
    5. '   ' → logprob: -11.513344764709473
    6. ' return' → logprob: -12.263344764709473
    7. 'try' → logprob: -12.263344764709473
    8. '```' → logprob: -12.888344764709473
    9. 'import' → logprob: -13.888344764709473
    10. '	       ' → logprob: -14.013344764709473

Token 820: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04010608419775963
    2. '           ' → logprob: -3.2901060581207275
    3. ' return' → logprob: -6.665106296539307
    4. 'try' → logprob: -7.290106296539307
    5. '       ' → logprob: -9.290105819702148
    6. '               ' → logprob: -11.665105819702148
    7. '   ' → logprob: -12.790105819702148
    8. ' try' → logprob: -13.915105819702148
    9. '	return' → logprob: -14.665105819702148
    10. '```' → logprob: -15.415105819702148

Token 821: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.5048530030981055e-06
    2. ' int' → logprob: -13.500001907348633
    3. '(int' → logprob: -23.625001907348633
    4. '[int' → logprob: -24.125001907348633
    5. '<int' → logprob: -24.625001907348633
    6. '   ' → logprob: -26.250001907348633
    7. '	int' → logprob: -26.250001907348633
    8. ':int' → logprob: -26.875001907348633
    9. '=int' → logprob: -28.000001907348633
    10. 'ints' → logprob: -28.500001907348633

Token 822: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0002614550176076591
    2. 'line' → logprob: -8.250261306762695
    3. ' line' → logprob: -16.250261306762695
    4. '[line' → logprob: -18.875261306762695
    5. '#line' → logprob: -18.875261306762695
    6. '=line' → logprob: -19.000261306762695
    7. '(' → logprob: -19.875261306762695
    8. '	line' → logprob: -20.625261306762695
    9. ',line' → logprob: -21.125261306762695
    10. 'Line' → logprob: -22.375261306762695

Token 823: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.264322317088954e-05
    2. ' )' → logprob: -10.250052452087402
    3. ')
' → logprob: -12.125052452087402
    4. '())' → logprob: -12.250052452087402
    5. '<|end|>' → logprob: -12.875052452087402
    6. ')return' → logprob: -13.000052452087402
    7. '       ' → logprob: -14.375052452087402
    8. '()' → logprob: -15.250052452087402
    9. '   ' → logprob: -15.250052452087402
    10. '<|end|>' → logprob: -15.875052452087402

Token 824: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014237082563340664
    2. '   ' → logprob: -4.264236927032471
    3. 'class' → logprob: -10.139237403869629
    4. ' def' → logprob: -11.139237403869629
    5. '
' → logprob: -11.389237403869629
    6. '```' → logprob: -12.014237403869629
    7. '	def' → logprob: -13.639237403869629
    8. '<|end|>' → logprob: -15.139237403869629
    9. '    
' → logprob: -15.764237403869629
    10. 'import' → logprob: -15.889237403869629

Token 825: ' Output' (ID: 18315)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.5887477993965149
    2. 'Output' → logprob: -1.7137477397918701
    3. 'Solver' → logprob: -1.7137477397918701
    4. 'Solution' → logprob: -3.33874773979187
    5. 'Processor' → logprob: -3.96374773979187
    6. 'Main' → logprob: -4.838747978210449
    7. 'Stone' → logprob: -5.088747978210449
    8. 'Runner' → logprob: -5.088747978210449
    9. 'Go' → logprob: -5.463747978210449
    10. 'Table' → logprob: -6.463747978210449

Token 826: 'Processor' (ID: 22334)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.45908689498901367
    2. 'Processor' → logprob: -1.0840868949890137
    3. 'Handler' → logprob: -3.5840868949890137
    4. 'ter' → logprob: -7.209086894989014
    5. 'Manager' → logprob: -7.959086894989014
    6. ':
' → logprob: -7.959086894989014
    7. ':' → logprob: -8.459087371826172
    8. 'Generator' → logprob: -9.209087371826172
    9. 'Printer' → logprob: -9.334087371826172
    10. 'Formatter' → logprob: -9.709087371826172

Token 827: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008631941862404346
    2. ':
' → logprob: -4.758631706237793
    3. ':

' → logprob: -12.258631706237793
    4. '<|end|>' → logprob: -12.633631706237793
    5. '):' → logprob: -13.008631706237793
    6. ':def' → logprob: -13.883631706237793
    7. '(object' → logprob: -14.133631706237793
    8. ' :' → logprob: -14.383631706237793
    9. '():' → logprob: -14.508631706237793
    10. '):
' → logprob: -14.508631706237793

Token 828: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030508115887641907
    2. 'class' → logprob: -3.655508041381836
    3. 'def' → logprob: -5.530508041381836
    4. ' def' → logprob: -8.780508041381836
    5. ' class' → logprob: -9.655508041381836
    6. '```' → logprob: -11.155508041381836
    7. 'classmethod' → logprob: -14.155508041381836
    8. '	def' → logprob: -14.405508041381836
    9. '@dat' → logprob: -15.030508041381836
    10. ':' → logprob: -15.155508041381836

Token 829: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018401099368929863
    2. '@' (adapté à ' @') → logprob: -6.751840114593506
    3. ' def' → logprob: -7.501840114593506
    4. 'class' → logprob: -9.626839637756348
    5. '   ' → logprob: -9.876839637756348
    6. '```' → logprob: -15.376839637756348
    7. ' @' → logprob: -16.251840591430664
    8. '	def' → logprob: -17.501840591430664
    9. 'import' → logprob: -17.751840591430664
    10. 'staticmethod' → logprob: -19.376840591430664

Token 830: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.00033546582562848926
    2. 'classmethod' → logprob: -8.000335693359375
    3. 'static' → logprob: -18.375335693359375
    4. 'dat' → logprob: -19.250335693359375
    5. 'object' → logprob: -20.250335693359375
    6. 'property' → logprob: -21.000335693359375
    7. '
' → logprob: -22.875335693359375
    8. 'class' → logprob: -23.125335693359375
    9. 'stat' → logprob: -23.875335693359375
    10. '@' → logprob: -23.875335693359375

Token 831: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6835806965827942
    2. '   ' → logprob: -0.8085806965827942
    3. ' def' → logprob: -3.0585806369781494
    4. '
' → logprob: -6.1835808753967285
    5. '<|end|>' → logprob: -8.68358039855957
    6. '	def' → logprob: -8.93358039855957
    7. '(' → logprob: -9.05858039855957
    8. 'class' → logprob: -9.43358039855957
    9. '<|end|>' → logprob: -10.18358039855957
    10. ':' → logprob: -10.80858039855957

Token 832: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019750266801565886
    2. '   ' → logprob: -6.251975059509277
    3. ' def' → logprob: -10.001975059509277
    4. '
' → logprob: -14.251975059509277
    5. '	def' → logprob: -15.251975059509277
    6. '```' → logprob: -15.626975059509277
    7. ':def' → logprob: -18.00197410583496
    8. ':' → logprob: -18.12697410583496
    9. '@' → logprob: -18.12697410583496
    10. '_def' → logprob: -18.12697410583496

Token 833: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.9266199160483666e-05
    2. ' def' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.875019073486328
    4. '
' → logprob: -16.250019073486328
    5. '	def' → logprob: -18.875019073486328
    6. '```' → logprob: -18.875019073486328
    7. 'from' → logprob: -19.250019073486328
    8. 'class' → logprob: -19.250019073486328
    9. '    
' → logprob: -19.750019073486328
    10. 'classmethod' → logprob: -20.750019073486328

Token 834: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007871478796005249
    2. 'write' → logprob: -5.132871627807617
    3. 'process' → logprob: -6.757871627807617
    4. 'format' → logprob: -7.632871627807617
    5. 'output' → logprob: -9.007871627807617
    6. ' print' → logprob: -9.507871627807617
    7. 'println' → logprob: -10.257871627807617
    8. 'put' → logprob: -10.507871627807617
    9. 'display' → logprob: -11.132871627807617
    10. 'white' → logprob: -12.257871627807617

Token 835: '_white' (ID: 105599)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.287360817193985
    2. '(' → logprob: -1.9123607873916626
    3. '(result' → logprob: -3.537360906600952
    4. '(count' → logprob: -3.787360906600952
    5. '(table' → logprob: -4.537360668182373
    6. '(d' → logprob: -4.662360668182373
    7. '(data' → logprob: -4.662360668182373
    8. '(line' → logprob: -4.912360668182373
    9. '(lines' → logprob: -5.537360668182373
    10. '(n' → logprob: -5.912360668182373

Token 836: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0008299979381263256
    2. '_counts' → logprob: -7.125830173492432
    3. 'count' → logprob: -10.625829696655273
    4. '_counter' → logprob: -14.750829696655273
    5. 's' → logprob: -15.125829696655273
    6. ' _' → logprob: -15.875829696655273
    7. '```' → logprob: -16.500829696655273
    8. '_COUNT' → logprob: -17.250829696655273
    9. 'counts' → logprob: -17.375829696655273
    10. ' count' → logprob: -17.375829696655273

Token 837: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.5379121899604797
    2. '(' → logprob: -1.412912130355835
    3. '(table' → logprob: -1.787912130355835
    4. '(n' → logprob: -5.537912368774414
    5. '(t' → logprob: -7.912912368774414
    6. '(cnt' → logprob: -9.037912368774414
    7. '(total' → logprob: -9.162912368774414
    8. '(result' → logprob: -9.287912368774414
    9. '(tc' → logprob: -9.287912368774414
    10. ' (' → logprob: -9.412912368774414

Token 838: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18219994008541107
    2. '):
' → logprob: -2.1821999549865723
    3. ':' → logprob: -2.9321999549865723
    4. '   ' → logprob: -8.432199478149414
    5. ')' → logprob: -8.932199478149414
    6. '):
' → logprob: -9.307199478149414
    7. ',' → logprob: -10.182199478149414
    8. '       ' → logprob: -11.807199478149414
    9. ' ):' → logprob: -13.432199478149414
    10. ' :' → logprob: -13.932199478149414

Token 839: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02422034740447998
    2. 'count' → logprob: -3.7742204666137695
    3. ')' → logprob: -7.3992204666137695
    4. ' int' → logprob: -8.14922046661377
    5. ' count' → logprob: -9.89922046661377
    6. 'str' → logprob: -11.89922046661377
    7. 'print' → logprob: -12.02422046661377
    8. '):
' → logprob: -13.52422046661377
    9. '):' → logprob: -13.77422046661377
    10. ' ' → logprob: -13.89922046661377

Token 840: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01640395075082779
    2. '):
' → logprob: -4.266404151916504
    3. ')' → logprob: -6.141404151916504
    4. '):
' → logprob: -9.516404151916504
    5. '   ' → logprob: -11.641404151916504
    6. ')->' → logprob: -13.391404151916504
    7. ':' → logprob: -13.766404151916504
    8. ' ):' → logprob: -13.891404151916504
    9. '       ' → logprob: -16.391403198242188
    10. ' )' → logprob: -17.391403198242188

Token 841: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023643692838959396
    2. 'print' → logprob: -8.375236511230469
    3. '   ' → logprob: -12.250236511230469
    4. ' print' → logprob: -13.750236511230469
    5. '```' → logprob: -17.12523651123047
    6. '           ' → logprob: -18.25023651123047
    7. '	print' → logprob: -18.37523651123047
    8. '	' → logprob: -19.75023651123047
    9. 'import' → logprob: -19.87523651123047
    10. '	   ' → logprob: -21.12523651123047

Token 842: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.750436007976532e-05
    2. '       ' → logprob: -10.25003719329834
    3. ' print' → logprob: -13.25003719329834
    4. 'import' → logprob: -15.37503719329834
    5. '   ' → logprob: -18.750038146972656
    6. '```' → logprob: -20.000038146972656
    7. '	print' → logprob: -20.125038146972656
    8. '#print' → logprob: -21.500038146972656
    9. '           ' → logprob: -22.500038146972656
    10. 'def' → logprob: -23.375038146972656

Token 843: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.01105300523340702
    2. 'count' → logprob: -4.511053085327148
    3. '(' → logprob: -12.636053085327148
    4. '(f' → logprob: -13.511053085327148
    5. ' count' → logprob: -16.51105308532715
    6. '[count' → logprob: -16.51105308532715
    7. 'f' → logprob: -16.76105308532715
    8. '$count' → logprob: -16.88605308532715
    9. '()' → logprob: -17.13605308532715
    10. '0' → logprob: -17.26105308532715

Token 844: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.217951886355877e-05
    2. '())' → logprob: -10.000061988830566
    3. '()' → logprob: -11.125061988830566
    4. ' )' → logprob: -14.000061988830566
    5. '   ' → logprob: -14.375061988830566
    6. ')`' → logprob: -15.500061988830566
    7. ')
' → logprob: -16.375062942504883
    8. ',' → logprob: -16.375062942504883
    9. '))' → logprob: -16.500062942504883
    10. ')")' → logprob: -17.000062942504883

Token 845: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.062083978205919266
    2. 'class' → logprob: -2.8120839595794678
    3. 'if' → logprob: -9.062084197998047
    4. '```' → logprob: -15.937084197998047
    5. 'import' → logprob: -16.437084197998047
    6. '
' → logprob: -16.437084197998047
    7. ' def' → logprob: -17.687084197998047
    8. '#' → logprob: -18.437084197998047
    9. ' class' → logprob: -18.562084197998047
    10. 'from' → logprob: -18.812084197998047

Token 846: ' G' (ID: 499)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.035406675189733505
    2. 'Main' → logprob: -4.660406589508057
    3. 'Solver' → logprob: -4.785406589508057
    4. ' Game' → logprob: -5.410406589508057
    5. 'Solution' → logprob: -5.785406589508057
    6. 'Processor' → logprob: -6.035406589508057
    7. 'Runner' → logprob: -6.285406589508057
    8. 'Simulator' → logprob: -6.285406589508057
    9. 'Stone' → logprob: -6.660406589508057
    10. 'Problem' → logprob: -7.660406589508057

Token 847: 'ose' (ID: 918)
  Prédit: 'ame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ame' → logprob: -0.2988738715648651
    2. 'o' → logprob: -1.4238739013671875
    3. 'om' → logprob: -5.0488739013671875
    4. 'am' → logprob: -5.6738739013671875
    5. 'a' → logprob: -6.1738739013671875
    6. 'amer' → logprob: -6.6738739013671875
    7. 'O' → logprob: -7.4238739013671875
    8. 'Game' → logprob: -7.5488739013671875
    9. 'ob' → logprob: -7.9238739013671875
    10. 'amelo' → logprob: -8.048873901367188

Token 848: 'ki' (ID: 3129)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022930024191737175
    2. 'ki' → logprob: -4.272930145263672
    3. 'Game' → logprob: -5.022930145263672
    4. 'ng' → logprob: -6.772930145263672
    5. 'ifu' → logprob: -8.772930145263672
    6. '```' → logprob: -8.897930145263672
    7. '``' → logprob: -9.147930145263672
    8. 'ku' → logprob: -9.397930145263672
    9. 'ngine' → logprob: -9.647930145263672
    10. 'game' → logprob: -9.647930145263672

Token 849: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.21074743568897247
    2. ':' → logprob: -2.460747480392456
    3. 'Solver' → logprob: -2.460747480392456
    4. 'Simulator' → logprob: -4.960747241973877
    5. ':
' → logprob: -5.460747241973877
    6. 'Processor' → logprob: -5.960747241973877
    7. 'Engine' → logprob: -6.710747241973877
    8. 'Analyzer' → logprob: -6.710747241973877
    9. 'Player' → logprob: -7.585747241973877
    10. 'Manager' → logprob: -7.710747241973877

Token 850: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004975094925612211
    2. ':
' → logprob: -7.625497341156006
    3. ' :' → logprob: -13.000497817993164
    4. '():' → logprob: -13.375497817993164
    5. ':def' → logprob: -13.500497817993164
    6. '<|end|>' → logprob: -13.625497817993164
    7. ':

' → logprob: -14.500497817993164
    8. '(' → logprob: -14.500497817993164
    9. '>:' → logprob: -14.500497817993164
    10. '):' → logprob: -14.625497817993164

Token 851: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018531967652961612
    2. 'def' → logprob: -6.376852989196777
    3. ' def' → logprob: -9.126852989196777
    4. 'class' → logprob: -11.501852989196777
    5. ':' → logprob: -12.126852989196777
    6. '):
' → logprob: -12.376852989196777
    7. ':
' → logprob: -12.501852989196777
    8. '<|end|>' → logprob: -12.501852989196777
    9. '    
' → logprob: -12.626852989196777
    10. '	def' → logprob: -12.626852989196777

Token 852: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003643191885203123
    2. ' def' → logprob: -6.003643035888672
    3. '   ' → logprob: -6.753643035888672
    4. '@' → logprob: -16.128643035888672
    5. '	def' → logprob: -16.378643035888672
    6. 'class' → logprob: -18.628643035888672
    7. ' ' → logprob: -19.128643035888672
    8. '
' → logprob: -19.503643035888672
    9. ':def' → logprob: -19.753643035888672
    10. '```' → logprob: -20.128643035888672

Token 853: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5895787477493286
    2. ' __' → logprob: -2.089578628540039
    3. 'def' → logprob: -2.089578628540039
    4. 'init' → logprob: -2.214578628540039
    5. '__' → logprob: -2.464578628540039
    6. ' init' → logprob: -5.839578628540039
    7. '_init' → logprob: -7.464578628540039
    8. ' ' → logprob: -9.589578628540039
    9. '___' → logprob: -10.089578628540039
    10. '   ' → logprob: -10.589578628540039

Token 854: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.75
    3. ' init' → logprob: -16.875
    4. 'inite' → logprob: -19.5
    5. 'ini' → logprob: -19.5
    6. '(init' → logprob: -19.875
    7. 'in' → logprob: -20.0
    8. '   ' → logprob: -20.25
    9. '	init' → logprob: -20.25
    10. 'new' → logprob: -20.875

Token 855: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01115428376942873
    2. '(self' → logprob: -4.5111541748046875
    3. '__' → logprob: -9.511154174804688
    4. '_(' → logprob: -10.636154174804688
    5. 'self' → logprob: -12.386154174804688
    6. '__(
' → logprob: -13.011154174804688
    7. '(' → logprob: -14.386154174804688
    8. '```' → logprob: -14.511154174804688
    9. ' (' → logprob: -15.261154174804688
    10. '   ' → logprob: -16.011154174804688

Token 856: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0802738870552275e-05
    2. ')' → logprob: -12.00001049041748
    3. '):
' → logprob: -12.75001049041748
    4. ' self' → logprob: -13.87501049041748
    5. '(self' → logprob: -15.62501049041748
    6. '   ' → logprob: -15.62501049041748
    7. '       ' → logprob: -16.125011444091797
    8. '0' → logprob: -16.500011444091797
    9. ')(' → logprob: -17.000011444091797
    10. '
' → logprob: -17.125011444091797

Token 857: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2610459327697754
    2. 'self' → logprob: -1.7610459327697754
    3. '):' → logprob: -2.8860459327697754
    4. '(self' → logprob: -6.886045932769775
    5. ',' → logprob: -8.136045455932617
    6. '   ' → logprob: -8.261045455932617
    7. '       ' → logprob: -8.761045455932617
    8. ')' → logprob: -8.886045455932617
    9. '():
' → logprob: -9.136045455932617
    10. ' self' → logprob: -10.136045455932617

Token 858: ' n' (ID: 297)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0581655502319336
    2. 'datasets' → logprob: -1.4331655502319336
    3. 'input' → logprob: -1.5581655502319336
    4. 'self' → logprob: -2.5581655502319336
    5. '):' → logprob: -3.0581655502319336
    6. 'processor' → logprob: -3.9331655502319336
    7. 'moves' → logprob: -4.183165550231934
    8. 'n' → logprob: -4.433165550231934
    9. 'table' → logprob: -4.808165550231934
    10. 'tables' → logprob: -4.933165550231934

Token 859: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5953435897827148
    2. '):' → logprob: -1.3453435897827148
    3. ':' → logprob: -1.7203435897827148
    4. '):
' → logprob: -4.970343589782715
    5. ':int' → logprob: -7.345343589782715
    6. ' ,' → logprob: -7.595343589782715
    7. '=None' → logprob: -7.845343589782715
    8. '=' → logprob: -8.220343589782715
    9. ' ):' → logprob: -8.470343589782715
    10. '   ' → logprob: -9.220343589782715

Token 860: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002394559560343623
    2. ' int' → logprob: -6.127394676208496
    3. 'None' → logprob: -8.752394676208496
    4. 'self' → logprob: -10.752394676208496
    5. '0' → logprob: -10.877394676208496
    6. '   ' → logprob: -12.127394676208496
    7. ' None' → logprob: -13.752394676208496
    8. '       ' → logprob: -13.877394676208496
    9. '=int' → logprob: -14.252394676208496
    10. ':int' → logprob: -14.377394676208496

Token 861: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.310693111619912e-05
    2. '       ' → logprob: -10.500042915344238
    3. ' ,' → logprob: -11.375042915344238
    4. '):
' → logprob: -13.000042915344238
    5. '):' → logprob: -14.000042915344238
    6. '   ' → logprob: -15.250042915344238
    7. ',color' → logprob: -15.250042915344238
    8. '=' → logprob: -16.750043869018555
    9. ',
' → logprob: -16.875043869018555
    10. ',n' → logprob: -17.125043869018555

Token 862: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.04409172758460045
    2. ' colors' → logprob: -3.1690917015075684
    3. 'moves' → logprob: -7.294091701507568
    4. 'stones' → logprob: -8.169092178344727
    5. 'color' → logprob: -9.669092178344727
    6. ' moves' → logprob: -10.294092178344727
    7. ' stones' → logprob: -11.294092178344727
    8. 'stone' → logprob: -12.419092178344727
    9. 'positions' → logprob: -12.794092178344727
    10. ' stone' → logprob: -13.169092178344727

Token 863: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021152731031179428
    2. ':' → logprob: -3.8961527347564697
    3. ' ,' → logprob: -8.14615249633789
    4. '):
' → logprob: -8.89615249633789
    5. '   ' → logprob: -9.14615249633789
    6. '):' → logprob: -9.77115249633789
    7. ' :' → logprob: -12.14615249633789
    8. '       ' → logprob: -12.14615249633789
    9. '  ' → logprob: -13.52115249633789
    10. '```' → logprob: -13.64615249633789

Token 864: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005979988723993301
    2. ' list' → logprob: -5.255980014801025
    3. 'List' → logprob: -7.505980014801025
    4. '[list' → logprob: -8.630979537963867
    5. ')' → logprob: -11.880979537963867
    6. ':list' → logprob: -12.130979537963867
    7. '   ' → logprob: -13.630979537963867
    8. '):
' → logprob: -13.755979537963867
    9. '_list' → logprob: -14.255979537963867
    10. 'int' → logprob: -14.380979537963867

Token 865: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.1622401773929596
    2. '):
' → logprob: -1.9122401475906372
    3. '):' → logprob: -6.287240028381348
    4. '   ' → logprob: -9.287240028381348
    5. 'int' → logprob: -10.912240028381348
    6. ':' → logprob: -11.037240028381348
    7. ':int' → logprob: -11.537240028381348
    8. '<int' → logprob: -12.037240028381348
    9. '):
' → logprob: -12.787240028381348
    10. '       ' → logprob: -13.037240028381348

Token 866: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.2668793201446533
    2. ']):' → logprob: -1.5168793201446533
    3. '):' → logprob: -5.016879081726074
    4. '):
' → logprob: -5.516879081726074
    5. '[int' → logprob: -5.641879081726074
    6. ']:' → logprob: -8.516879081726074
    7. '],' → logprob: -8.641879081726074
    8. '[' → logprob: -9.266879081726074
    9. ']' → logprob: -9.516879081726074
    10. '])' → logprob: -10.266879081726074

Token 867: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001777960715116933
    2. '):
' → logprob: -9.625177383422852
    3. 'self' → logprob: -10.000177383422852
    4. ',' → logprob: -10.500177383422852
    5. ' self' → logprob: -11.625177383422852
    6. ':' → logprob: -11.875177383422852
    7. '(self' → logprob: -12.125177383422852
    8. '   ' → logprob: -12.125177383422852
    9. ':
' → logprob: -12.875177383422852
    10. ')' → logprob: -13.000177383422852

Token 868: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07940182089805603
    2. '       ' → logprob: -2.579401731491089
    3. ' self' → logprob: -7.579401969909668
    4. '   ' → logprob: -14.454401969909668
    5. 'def' → logprob: -15.079401969909668
    6. '	self' → logprob: -16.07940101623535
    7. '(self' → logprob: -17.07940101623535
    8. 'class' → logprob: -18.07940101623535
    9. '           ' → logprob: -18.20440101623535
    10. '#' → logprob: -18.32940101623535

Token 869: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.06284639984369278
    2. '.colors' → logprob: -3.5628464221954346
    3. '.table' → logprob: -4.1878461837768555
    4. 'n' → logprob: -5.1878461837768555
    5. '=' → logprob: -5.4378461837768555
    6. 'colors' → logprob: -6.3128461837768555
    7. '       ' → logprob: -6.3128461837768555
    8. '.size' → logprob: -7.1878461837768555
    9. ' =' → logprob: -7.4378461837768555
    10. '.count' → logprob: -7.5628461837768555

Token 870: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931573748588562
    2. ' =' → logprob: -0.6931573748588562
    3. '   ' → logprob: -12.318157196044922
    4. '       ' → logprob: -12.943157196044922
    5. '=n' → logprob: -12.943157196044922
    6. '    ' → logprob: -15.443157196044922
    7. ' ' → logprob: -15.693157196044922
    8. ',' → logprob: -15.943157196044922
    9. ')' → logprob: -16.193157196044922
    10. '=self' → logprob: -16.318157196044922

Token 871: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033558503491804004
    2. ' n' → logprob: -8.000335693359375
    3. '	n' → logprob: -15.750335693359375
    4. '       ' → logprob: -18.625335693359375
    5. '_n' → logprob: -19.000335693359375
    6. ')n' → logprob: -19.750335693359375
    7. '   ' → logprob: -20.250335693359375
    8. '
' → logprob: -20.875335693359375
    9. ',n' → logprob: -21.000335693359375
    10. '[n' → logprob: -21.000335693359375

Token 872: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000454506283858791
    2. 'self' → logprob: -7.750454425811768
    3. ',' → logprob: -11.000454902648926
    4. '<|end|>' → logprob: -12.750454902648926
    5. '   ' → logprob: -13.375454902648926
    6. ' self' → logprob: -13.500454902648926
    7. '(self' → logprob: -15.500454902648926
    8. '<|end|>' → logprob: -15.625454902648926
    9. ',self' → logprob: -16.00045394897461
    10. '      ' → logprob: -16.12545394897461

Token 873: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008638916537165642
    2. 'self' → logprob: -4.758638858795166
    3. ' self' → logprob: -10.883639335632324
    4. '   ' → logprob: -12.258639335632324
    5. '	self' → logprob: -15.633639335632324
    6. '(self' → logprob: -15.758639335632324
    7. '
' → logprob: -16.008638381958008
    8. '<|end|>' → logprob: -16.383638381958008
    9. '           ' → logprob: -16.508638381958008
    10. '      ' → logprob: -16.633638381958008

Token 874: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00013464801304508
    2. '       ' → logprob: -9.250134468078613
    3. ' self' → logprob: -10.750134468078613
    4. 'colors' → logprob: -11.000134468078613
    5. '   ' → logprob: -15.875134468078613
    6. '	self' → logprob: -16.87513542175293
    7. 'color' → logprob: -16.87513542175293
    8. '(self' → logprob: -17.87513542175293
    9. '           ' → logprob: -18.00013542175293
    10. 'def' → logprob: -18.12513542175293

Token 875: '.colors' (ID: 57861)
  Prédit: '.table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.table' → logprob: -0.2979494631290436
    2. 'table' → logprob: -1.5479494333267212
    3. 'colors' → logprob: -3.5479495525360107
    4. '.colors' → logprob: -4.297949314117432
    5. '_table' → logprob: -6.672949314117432
    6. ' table' → logprob: -7.422949314117432
    7. 'stones' → logprob: -9.04794979095459
    8. ' colors' → logprob: -9.17294979095459
    9. 'Table' → logprob: -9.17294979095459
    10. '.st' → logprob: -9.92294979095459

Token 876: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484600782394409
    2. '=' → logprob: -1.223460078239441
    3. '   ' → logprob: -12.09846019744873
    4. '<|end|>' → logprob: -12.72346019744873
    5. '       ' → logprob: -13.09846019744873
    6. ' ' → logprob: -13.47346019744873
    7. '=self' → logprob: -13.84846019744873
    8. ',' → logprob: -14.22346019744873
    9. '=
' → logprob: -15.22346019744873
    10. '<|end|>' → logprob: -15.34846019744873

Token 877: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.004079589620232582
    2. ' colors' → logprob: -5.504079818725586
    3. 'color' → logprob: -13.754079818725586
    4. '   ' → logprob: -17.504079818725586
    5. '(colors' → logprob: -17.754079818725586
    6. 'list' → logprob: -19.004079818725586
    7. 'Colors' → logprob: -19.254079818725586
    8. '.colors' → logprob: -19.379079818725586
    9. 'col' → logprob: -19.504079818725586
    10. '_colors' → logprob: -19.629079818725586

Token 878: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005375341512262821
    2. '
' → logprob: -5.630375385284424
    3. '   ' → logprob: -6.380375385284424
    4. '<|end|>' → logprob: -9.755374908447266
    5. 'def' → logprob: -11.380374908447266
    6. ',' → logprob: -13.005374908447266
    7. '<|end|>' → logprob: -13.255374908447266
    8. 'self' → logprob: -13.505374908447266
    9. '    
' → logprob: -14.255374908447266
    10. '        
' → logprob: -14.505374908447266

Token 879: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10749632865190506
    2. '       ' → logprob: -2.7324962615966797
    3. '
' → logprob: -3.6074962615966797
    4. 'def' → logprob: -5.10749626159668
    5. '<|end|>' → logprob: -5.73249626159668
    6. ' def' → logprob: -8.10749626159668
    7. '<|end|>' → logprob: -9.85749626159668
    8. '  ' → logprob: -10.23249626159668
    9. ' ' → logprob: -10.73249626159668
    10. '    
' → logprob: -11.98249626159668

Token 880: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6945794224739075
    2. 'self' (adapté à ' self') → logprob: -0.6945794224739075
    3. ' self' → logprob: -7.069579601287842
    4. 'def' → logprob: -7.694579601287842
    5. '   ' → logprob: -9.069579124450684
    6. '
' → logprob: -11.819579124450684
    7. '	self' → logprob: -13.319579124450684
    8. '(self' → logprob: -15.194579124450684
    9. ' ' → logprob: -15.444579124450684
    10. '      ' → logprob: -15.694579124450684

Token 881: '.table' (ID: 18483)
  Prédit: ' table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.6018747091293335
    2. 'table' → logprob: -0.8518747091293335
    3. '.table' → logprob: -3.851874828338623
    4. '_table' → logprob: -5.726874828338623
    5. '   ' → logprob: -8.226874351501465
    6. 'Table' → logprob: -8.601874351501465
    7. '.' → logprob: -8.976874351501465
    8. ' =' → logprob: -9.351874351501465
    9. '
' → logprob: -9.476874351501465
    10. '=' → logprob: -9.476874351501465

Token 882: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132616877555847
    2. '=' → logprob: -1.3132617473602295
    3. '   ' → logprob: -18.313261032104492
    4. '       ' → logprob: -18.438261032104492
    5. ' ' → logprob: -18.688261032104492
    6. ' =
' → logprob: -18.813261032104492
    7. ':' → logprob: -19.188261032104492
    8. '＝' → logprob: -19.313261032104492
    9. ')' → logprob: -19.438261032104492
    10. '<|end|>' → logprob: -19.563261032104492

Token 883: ' Table' (ID: 10211)
  Prédit: 'Table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -0.2519298195838928
    2. ' Table' → logprob: -1.501929759979248
    3. '	Table' → logprob: -14.251930236816406
    4. '   ' → logprob: -15.876930236816406
    5. '(Table' → logprob: -18.251930236816406
    6. '_Table' → logprob: -19.501930236816406
    7. '<Table' → logprob: -19.626930236816406
    8. '.Table' → logprob: -19.876930236816406
    9. ' table' → logprob: -19.876930236816406
    10. ' ' → logprob: -20.251930236816406

Token 884: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014547866769134998
    2. '
' → logprob: -4.639547824859619
    3. 'def' → logprob: -6.139547824859619
    4. '    
' → logprob: -6.389547824859619
    5. '<|end|>' → logprob: -7.139547824859619
    6. '<|end|>' → logprob: -9.264548301696777
    7. '        
' → logprob: -10.639548301696777
    8. '

' → logprob: -11.389548301696777
    9. ' def' → logprob: -12.264548301696777
    10. '       ' → logprob: -12.264548301696777

Token 885: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004972710739821196
    2. 'def' → logprob: -7.625497341156006
    3. ' def' → logprob: -12.125496864318848
    4. '<|end|>' → logprob: -13.375496864318848
    5. '    
' → logprob: -13.625496864318848
    6. '```' → logprob: -14.875496864318848
    7. '
' → logprob: -15.250496864318848
    8. '	def' → logprob: -15.750496864318848
    9. '<|end|>' → logprob: -15.875496864318848
    10. '       ' → logprob: -16.250497817993164

Token 886: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.60414821645827e-06
    2. ' def' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.000004768371582
    4. '	def' → logprob: -20.625003814697266
    5. '    
' → logprob: -22.000003814697266
    6. '
' → logprob: -22.125003814697266
    7. ' ' → logprob: -24.125003814697266
    8. 'Def' → logprob: -24.125003814697266
    9. '  ' → logprob: -24.125003814697266
    10. '       ' → logprob: -24.875003814697266

Token 887: ' play' (ID: 2107)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.10210803151130676
    2. 'run' → logprob: -2.4771080017089844
    3. 'process' → logprob: -4.852108001708984
    4. 'simulate' → logprob: -5.977108001708984
    5. ' play' → logprob: -6.102108001708984
    6. ' run' → logprob: -7.852108001708984
    7. 'solve' → logprob: -9.727108001708984
    8. 'execute' → logprob: -11.477108001708984
    9. ' process' → logprob: -11.602108001708984
    10. ' simulate' → logprob: -11.977108001708984

Token 888: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.249780638725497e-05
    2. '(' → logprob: -11.375032424926758
    3. '_st' → logprob: -11.500032424926758
    4. '_game' → logprob: -12.625032424926758
    5. '_(' → logprob: -13.000032424926758
    6. 'self' → logprob: -13.250032424926758
    7. '   ' → logprob: -13.500032424926758
    8. '_' → logprob: -14.500032424926758
    9. '():' → logprob: -15.375032424926758
    10. '()' → logprob: -15.500032424926758

Token 889: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010339930653572083
    2. '):' → logprob: -4.635339736938477
    3. '       ' → logprob: -8.135339736938477
    4. 'self' → logprob: -9.010339736938477
    5. '):
' → logprob: -9.635339736938477
    6. '   ' → logprob: -9.885339736938477
    7. ')' → logprob: -10.010339736938477
    8. '):

' → logprob: -13.135339736938477
    9. ' ' → logprob: -13.385339736938477
    10. '(self' → logprob: -14.010339736938477

Token 890: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029058007057756186
    2. 'for' → logprob: -6.00290584564209
    3. ' for' → logprob: -7.75290584564209
    4. '   ' → logprob: -15.00290584564209
    5. '```' → logprob: -16.377904891967773
    6. '	for' → logprob: -16.627904891967773
    7. '      ' → logprob: -18.752904891967773
    8. '
' → logprob: -18.877904891967773
    9. '     ' → logprob: -19.627904891967773
    10. '           ' → logprob: -19.752904891967773

Token 891: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16595014929771423
    2. '       ' → logprob: -1.9159501791000366
    3. ' for' → logprob: -5.165950298309326
    4. '   ' → logprob: -13.415949821472168
    5. '	for' → logprob: -14.415949821472168
    6. 'color' → logprob: -16.915950775146484
    7. '```' → logprob: -18.540950775146484
    8. ' ' → logprob: -18.665950775146484
    9. '      ' → logprob: -18.665950775146484
    10. '
' → logprob: -18.665950775146484

Token 892: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.019134322181344032
    2. 'index' → logprob: -4.144134521484375
    3. ' i' → logprob: -6.519134521484375
    4. 'idx' → logprob: -6.519134521484375
    5. ' index' → logprob: -9.394134521484375
    6. ' idx' → logprob: -10.394134521484375
    7. '(i' → logprob: -11.144134521484375
    8. 'color' → logprob: -11.394134521484375
    9. 'self' → logprob: -13.644134521484375
    10. 'pos' → logprob: -14.144134521484375

Token 893: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6273742318153381
    2. ' in' → logprob: -0.8773742318153381
    3. 'in' → logprob: -3.0023741722106934
    4. ' ,' → logprob: -8.127374649047852
    5. ',in' → logprob: -9.002374649047852
    6. ',n' → logprob: -11.752374649047852
    7. ',color' → logprob: -11.877374649047852
    8. '_,' → logprob: -12.002374649047852
    9. 'n' → logprob: -12.127374649047852
    10. '1' → logprob: -12.127374649047852

Token 894: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.006802287418395281
    2. 'c' → logprob: -5.006802082061768
    3. ' color' → logprob: -9.381802558898926
    4. '(color' → logprob: -13.881802558898926
    5. 'stone' → logprob: -14.006802558898926
    6. ' c' → logprob: -14.506802558898926
    7. 'col' → logprob: -15.506802558898926
    8. '	color' → logprob: -17.88180160522461
    9. 'Color' → logprob: -18.13180160522461
    10. '(c' → logprob: -18.25680160522461

Token 895: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029760558158159256
    2. 'in' → logprob: -3.5297605991363525
    3. '   ' → logprob: -12.404760360717773
    4. ' ' → logprob: -13.154760360717773
    5. 's' → logprob: -13.404760360717773
    6. '_in' → logprob: -14.029760360717773
    7. ',' → logprob: -15.029760360717773
    8. '	in' → logprob: -15.029760360717773
    9. '  ' → logprob: -15.279760360717773
    10. ')' → logprob: -16.029760360717773

Token 896: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.1269282102584839
    2. ' enumerate' → logprob: -2.1269283294677734
    3. 'enum' → logprob: -16.126928329467773
    4. '   ' → logprob: -17.626928329467773
    5. '
' → logprob: -18.001928329467773
    6. 'en' → logprob: -19.001928329467773
    7. '(en' → logprob: -19.126928329467773
    8. '```' → logprob: -19.126928329467773
    9. '.enumer' → logprob: -19.251928329467773
    10. 'Enumer' → logprob: -19.876928329467773

Token 897: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013774730905424803
    2. 'self' → logprob: -9.000137329101562
    3. ' (' → logprob: -11.875137329101562
    4. '(' → logprob: -12.500137329101562
    5. ' self' → logprob: -13.750137329101562
    6. '       ' → logprob: -13.875137329101562
    7. ',' → logprob: -14.625137329101562
    8. 's' → logprob: -14.875137329101562
    9. '   ' → logprob: -15.250137329101562
    10. '(range' → logprob: -16.250137329101562

Token 898: '.colors' (ID: 57861)
  Prédit: '.colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.colors' → logprob: -0.005926308687776327
    2. 'self' → logprob: -5.630926132202148
    3. 'colors' → logprob: -6.255926132202148
    4. '.self' → logprob: -8.130926132202148
    5. ' .' → logprob: -10.130926132202148
    6. 's' → logprob: -10.880926132202148
    7. '_colors' → logprob: -11.380926132202148
    8. '.s' → logprob: -11.630926132202148
    9. ' self' → logprob: -12.380926132202148
    10. ',' → logprob: -12.505926132202148

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. ' ,' → logprob: -11.62501335144043
    3. '   ' → logprob: -13.25001335144043
    4. ',start' → logprob: -13.50001335144043
    5. '       ' → logprob: -14.12501335144043
    6. '(),' → logprob: -14.37501335144043
    7. '_,' → logprob: -15.75001335144043
    8. '           ' → logprob: -16.87501335144043
    9. '):
' → logprob: -17.37501335144043
    10. '    ' → logprob: -17.87501335144043

Token 900: ' start' (ID: 1604)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20149189233779907
    2. 'start' → logprob: -1.7014918327331543
    3. ' start' → logprob: -9.576492309570312
    4. ' ' → logprob: -12.076492309570312
    5. '   ' → logprob: -12.701492309570312
    6. '       ' → logprob: -14.951492309570312
    7. '           ' → logprob: -16.826492309570312
    8. 'Start' → logprob: -17.951492309570312
    9. '```' → logprob: -18.201492309570312
    10. '2' → logprob: -18.451492309570312

Token 901: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.7968066206085496e-05
    2. '1' → logprob: -10.500027656555176
    3. '(' → logprob: -14.750027656555176
    4. '```' → logprob: -17.375028610229492
    5. '=
' → logprob: -18.500028610229492
    6. '=True' → logprob: -18.750028610229492
    7. 'from' → logprob: -19.625028610229492
    8. '＝' → logprob: -20.750028610229492
    9. '   ' → logprob: -21.000028610229492
    10. ')=' → logprob: -21.125028610229492

Token 902: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '=' → logprob: -15.375001907348633
    4. '   ' → logprob: -17.000001907348633
    5. '```' → logprob: -17.625001907348633
    6. '0' → logprob: -18.375001907348633
    7. '2' → logprob: -19.000001907348633
    8. ')' → logprob: -19.375001907348633
    9. '۱' → logprob: -19.625001907348633
    10. '(' → logprob: -19.750001907348633

Token 903: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0062735904939472675
    2. '):' → logprob: -5.2562737464904785
    3. '       ' → logprob: -7.3812737464904785
    4. '):
' → logprob: -8.00627326965332
    5. '           ' → logprob: -9.88127326965332
    6. ':' → logprob: -10.88127326965332
    7. '():
' → logprob: -11.88127326965332
    8. ':
' → logprob: -12.75627326965332
    9. '   ' → logprob: -13.63127326965332
    10. ' ):
' → logprob: -15.13127326965332

Token 904: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009876732947304845
    2. 'self' → logprob: -7.250987529754639
    3. '       ' → logprob: -8.375988006591797
    4. ' self' → logprob: -10.000988006591797
    5. '               ' → logprob: -14.750988006591797
    6. '(self' → logprob: -15.000988006591797
    7. '	       ' → logprob: -15.250988006591797
    8. '          ' → logprob: -15.250988006591797
    9. '<|end|>' → logprob: -15.625988006591797
    10. '```' → logprob: -15.875988006591797

Token 905: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1801277995109558
    2. '           ' → logprob: -1.9301278591156006
    3. ' self' → logprob: -3.9301278591156006
    4. '               ' → logprob: -9.68012809753418
    5. '   ' → logprob: -13.80512809753418
    6. '	self' → logprob: -14.30512809753418
    7. '       ' → logprob: -14.43012809753418
    8. '(self' → logprob: -14.55512809753418
    9. ' ' → logprob: -15.80512809753418
    10. '          ' → logprob: -15.93012809753418

Token 906: '.table' (ID: 18483)
  Prédit: '.table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.table' → logprob: -4.008129963040119e-06
    2. '.' → logprob: -13.250003814697266
    3. 'table' → logprob: -13.250003814697266
    4. ' .' → logprob: -15.375003814697266
    5. '.place' → logprob: -16.875003814697266
    6. '.Table' → logprob: -17.625003814697266
    7. '	table' → logprob: -17.750003814697266
    8. ' table' → logprob: -17.750003814697266
    9. '.tab' → logprob: -19.000003814697266
    10. '<table' → logprob: -19.375003814697266

Token 907: '.place' (ID: 50295)
  Prédit: '.place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.place' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.500000953674316
    3. 'place' → logprob: -15.250000953674316
    4. ' .' → logprob: -17.25
    5. '       ' → logprob: -18.625
    6. '_place' → logprob: -19.125
    7. '   ' → logprob: -19.375
    8. '.Place' → logprob: -19.375
    9. '.perform' → logprob: -19.5
    10. '.play' → logprob: -19.625

Token 908: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -4.4849443838757e-06
    2. '_' → logprob: -12.625004768371582
    3. 'stone' → logprob: -14.500004768371582
    4. '_color' → logprob: -16.125003814697266
    5. 'Stone' → logprob: -16.750003814697266
    6. '_token' → logprob: -16.750003814697266
    7. 'st' → logprob: -17.000003814697266
    8. '_s' → logprob: -17.250003814697266
    9. '_piece' → logprob: -17.250003814697266
    10. '```' → logprob: -17.875003814697266

Token 909: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.0007786541245877743
    2. 'stone' → logprob: -8.000778198242188
    3. '_one' → logprob: -8.250778198242188
    4. '_st' → logprob: -9.750778198242188
    5. 'color' → logprob: -10.000778198242188
    6. 'e' → logprob: -11.375778198242188
    7. 'ne' → logprob: -11.375778198242188
    8. 'tone' → logprob: -11.375778198242188
    9. '_' → logprob: -12.000778198242188
    10. '_color' → logprob: -12.125778198242188

Token 910: '(color' (ID: 27329)
  Prédit: '(color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.375
    3. 'color' → logprob: -15.75
    4. '(
' → logprob: -18.5
    5. '=color' → logprob: -18.625
    6. '(Color' → logprob: -19.125
    7. '[color' → logprob: -20.625
    8. ' (' → logprob: -20.625
    9. ',color' → logprob: -21.0
    10. ' color' → logprob: -21.5

Token 911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.490809417096898e-05
    2. ' ,' → logprob: -10.000055313110352
    3. ',i' → logprob: -12.375055313110352
    4. ',color' → logprob: -12.750055313110352
    5. 'color' → logprob: -14.375055313110352
    6. '           ' → logprob: -14.375055313110352
    7. '   ' → logprob: -14.750055313110352
    8. '(color' → logprob: -15.875055313110352
    9. '               ' → logprob: -15.875055313110352
    10. ',index' → logprob: -16.25005531311035

Token 912: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033546582562848926
    2. ' i' → logprob: -8.000335693359375
    3. '	i' → logprob: -18.875335693359375
    4. '   ' → logprob: -18.875335693359375
    5. ')i' → logprob: -19.250335693359375
    6. ')' → logprob: -20.000335693359375
    7. '(i' → logprob: -20.625335693359375
    8. '           ' → logprob: -20.750335693359375
    9. '       ' → logprob: -21.125335693359375
    10. '```' → logprob: -21.375335693359375

Token 913: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.787507714354433e-05
    2. ')
' → logprob: -10.00004768371582
    3. '       ' → logprob: -13.62504768371582
    4. ' )' → logprob: -14.87504768371582
    5. ')

' → logprob: -14.87504768371582
    6. '           ' → logprob: -15.50004768371582
    7. ')return' → logprob: -16.50004768371582
    8. '<|end|>' → logprob: -16.50004768371582
    9. '   ' → logprob: -17.12504768371582
    10. ')
' → logprob: -17.50004768371582

Token 914: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22212614119052887
    2. 'def' → logprob: -1.7221261262893677
    3. ' def' → logprob: -4.222126007080078
    4. '       ' → logprob: -5.722126007080078
    5. '<|end|>' → logprob: -6.222126007080078
    6. '
' → logprob: -7.597126007080078
    7. ' ' → logprob: -10.722126007080078
    8. '	def' → logprob: -11.222126007080078
    9. '```' → logprob: -11.722126007080078
    10. 'return' → logprob: -11.722126007080078

Token 915: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005541055579669774
    2. '   ' → logprob: -7.750554084777832
    3. ' def' → logprob: -9.000554084777832
    4. '	def' → logprob: -17.25055503845215
    5. ' ' → logprob: -18.62555503845215
    6. '       ' → logprob: -18.87555503845215
    7. '
' → logprob: -19.12555503845215
    8. '  ' → logprob: -20.12555503845215
    9. 'from' → logprob: -21.00055503845215
    10. '<|end|>' → logprob: -21.25055503845215

Token 916: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.07161537557840347
    2. ' get' → logprob: -2.69661545753479
    3. 'result' → logprob: -7.071615219116211
    4. 'count' → logprob: -7.571615219116211
    5. 'white' → logprob: -8.821615219116211
    6. 'final' → logprob: -9.571615219116211
    7. ' result' → logprob: -10.696615219116211
    8. ' count' → logprob: -10.821615219116211
    9. 'score' → logprob: -10.821615219116211
    10. 'print' → logprob: -11.196615219116211

Token 917: '_result' (ID: 11623)
  Prédit: '_white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -0.0019601555541157722
    2. 'white' → logprob: -6.251960277557373
    3. '_result' → logprob: -10.876959800720215
    4. 'result' → logprob: -12.251959800720215
    5. ' white' → logprob: -13.251959800720215
    6. '   ' → logprob: -13.251959800720215
    7. '_' → logprob: -13.751959800720215
    8. '_table' → logprob: -13.876959800720215
    9. '_wh' → logprob: -14.626959800720215
    10. '_final' → logprob: -14.876959800720215

Token 918: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -14.375000953674316
    3. 'self' → logprob: -16.5
    4. '       ' → logprob: -16.625
    5. '_white' → logprob: -16.75
    6. 'white' → logprob: -17.25
    7. '_count' → logprob: -17.5
    8. 'count' → logprob: -17.625
    9. '```' → logprob: -17.875
    10. '=self' → logprob: -18.875

Token 919: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10733272135257721
    2. ')' → logprob: -2.357332706451416
    3. '):' → logprob: -4.982332706451416
    4. 'self' → logprob: -9.482333183288574
    5. '(self' → logprob: -9.482333183288574
    6. '):
' → logprob: -10.107333183288574
    7. '   ' → logprob: -10.607333183288574
    8. '       ' → logprob: -11.232333183288574
    9. '():
' → logprob: -12.107333183288574
    10. ')->' → logprob: -12.732333183288574

Token 920: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004689226043410599
    2. 'return' → logprob: -8.000469207763672
    3. ' return' → logprob: -9.125469207763672
    4. '
' → logprob: -10.750469207763672
    5. '()' → logprob: -13.625469207763672
    6. '   ' → logprob: -14.875469207763672
    7. '()
' → logprob: -15.000469207763672
    8. 'self' → logprob: -15.625469207763672
    9. '```' → logprob: -15.625469207763672
    10. '(self' → logprob: -15.750469207763672

Token 921: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4760573208332062
    2. '       ' → logprob: -0.9760572910308838
    3. ' return' → logprob: -6.226057529449463
    4. '   ' → logprob: -14.226057052612305
    5. '	return' → logprob: -14.726057052612305
    6. '{return' → logprob: -17.976057052612305
    7. ' ' → logprob: -18.226057052612305
    8. '	' → logprob: -19.726057052612305
    9. '     ' → logprob: -19.976057052612305
    10. '           ' → logprob: -19.976057052612305

Token 922: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00861468818038702
    2. ' self' → logprob: -4.758614540100098
    3. '       ' → logprob: -17.258615493774414
    4. '(self' → logprob: -17.758615493774414
    5. '   ' → logprob: -18.258615493774414
    6. '	self' → logprob: -18.758615493774414
    7. '[self' → logprob: -21.133615493774414
    8. ' ' → logprob: -22.633615493774414
    9. '
' → logprob: -22.758615493774414
    10. '           ' → logprob: -22.883615493774414

Token 923: '.table' (ID: 18483)
  Prédit: '.table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.table' → logprob: -1.7954958821064793e-05
    2. 'table' → logprob: -11.375018119812012
    3. '.' → logprob: -12.375018119812012
    4. ').' → logprob: -14.375018119812012
    5. ' .' → logprob: -14.500018119812012
    6. '
' → logprob: -15.375018119812012
    7. '.tables' → logprob: -15.625018119812012
    8. '<table' → logprob: -15.875018119812012
    9. '	table' → logprob: -16.500017166137695
    10. '().' → logprob: -16.500017166137695

Token 924: '.get' (ID: 775)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5869752168655396
    2. '<|end|>' → logprob: -0.8369752168655396
    3. '
' → logprob: -4.96197509765625
    4. ' def' → logprob: -6.46197509765625
    5. '<|end|>' → logprob: -6.71197509765625
    6. '   ' → logprob: -8.08697509765625
    7. '

' → logprob: -8.33697509765625
    8. 'class' → logprob: -8.71197509765625
    9. 'if' → logprob: -9.21197509765625
    10. '```' → logprob: -9.21197509765625

Token 925: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -9.014684110297821e-06
    2. 'white' → logprob: -11.625008583068848
    3. '白' → logprob: -17.125009536743164
    4. '```' → logprob: -18.500009536743164
    5. '_WHITE' → logprob: -18.625009536743164
    6. '\' → logprob: -18.750009536743164
    7. 'White' → logprob: -18.750009536743164
    8. ' white' → logprob: -18.875009536743164
    9. '.white' → logprob: -19.750009536743164
    10. 's' → logprob: -19.750009536743164

Token 926: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.896309739408025e-07
    2. 'count' → logprob: -14.500000953674316
    3. '```' → logprob: -16.625
    4. '_counts' → logprob: -17.5
    5. '_color' → logprob: -17.625
    6. 'Count' → logprob: -18.375
    7. '_code' → logprob: -18.875
    8. '   ' → logprob: -19.625
    9. '_counter' → logprob: -19.625
    10. ' _' → logprob: -19.75

Token 927: '()


' (ID: 29771)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 928: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003185198176652193
    2. 'if' → logprob: -5.753185272216797
    3. '```' → logprob: -12.128185272216797
    4. 'import' → logprob: -13.253185272216797
    5. ' def' → logprob: -15.628185272216797
    6. 'from' → logprob: -17.128185272216797
    7. '#' → logprob: -17.378185272216797
    8. ' if' → logprob: -17.378185272216797
    9. 'class' → logprob: -18.878185272216797
    10. '
' → logprob: -19.503185272216797

Token 929: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.014202055521309376
    2. 'main' → logprob: -4.264202117919922
    3. ' run' → logprob: -10.514202117919922
    4. '_main' → logprob: -12.014202117919922
    5. ' solve' → logprob: -12.639202117919922
    6. 'def' → logprob: -14.139202117919922
    7. ' def' → logprob: -15.264202117919922
    8. '
' → logprob: -15.389202117919922
    9. 'run' → logprob: -15.514202117919922
    10. '	main' → logprob: -15.514202117919922

Token 930: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00020449401927180588
    2. '():
' → logprob: -8.500204086303711
    3. '()' → logprob: -14.250204086303711
    4. ' ():' → logprob: -15.375204086303711
    5. '():
' → logprob: -15.875204086303711
    6. '():

' → logprob: -18.50020408630371
    7. '()>' → logprob: -20.75020408630371
    8. ':' → logprob: -20.87520408630371
    9. '(' → logprob: -21.12520408630371
    10. '):' → logprob: -21.12520408630371

Token 931: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0065852319821715355
    2. 'input' → logprob: -5.881585121154785
    3. 'ip' → logprob: -6.631585121154785
    4. ' input' → logprob: -7.006585121154785
    5. 'processor' → logprob: -7.256585121154785
    6. ' processor' → logprob: -7.381585121154785
    7. ' ip' → logprob: -8.881585121154785
    8. 'import' → logprob: -9.756585121154785
    9. 'inp' → logprob: -11.381585121154785
    10. ' inp' → logprob: -12.381585121154785

Token 932: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.8275299072265625
    2. '   ' → logprob: -1.0775299072265625
    3. 'ip' → logprob: -2.3275299072265625
    4. 'import' → logprob: -2.5775299072265625
    5. 'processor' → logprob: -3.2025299072265625
    6. 'inp' → logprob: -4.9525299072265625
    7. ' input' → logprob: -7.4525299072265625
    8. ' processor' → logprob: -8.702529907226562
    9. ' import' → logprob: -9.327529907226562
    10. ' ip' → logprob: -9.327529907226562

Token 933: '_processor' (ID: 129611)
  Prédit: '_processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -0.00010103991371579468
    2. '_proc' → logprob: -9.500101089477539
    3. 'Processor' → logprob: -11.125101089477539
    4. 'processor' → logprob: -11.625101089477539
    5. ' =' → logprob: -14.250101089477539
    6. '_process' → logprob: -14.375101089477539
    7. 'proc' → logprob: -15.250101089477539
    8. '_processors' → logprob: -15.250101089477539
    9. '_' → logprob: -15.500101089477539
    10. '_reader' → logprob: -15.750101089477539

Token 934: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00218583014793694
    2. '=' → logprob: -6.127185821533203
    3. '   ' → logprob: -14.752185821533203
    4. ' ' → logprob: -16.002185821533203
    5. '.process' → logprob: -16.502185821533203
    6. '  ' → logprob: -16.877185821533203
    7. 'process' → logprob: -17.377185821533203
    8. '```' → logprob: -17.377185821533203
    9. '_processor' → logprob: -17.877185821533203
    10. 'processor' → logprob: -18.002185821533203

Token 935: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. ' Input' → logprob: -17.5
    3. '	Input' → logprob: -23.0
    4. 'input' → logprob: -23.25
    5. '_input' → logprob: -25.125
    6. 'Output' → logprob: -25.75
    7. '_Input' → logprob: -25.875
    8. '<Input' → logprob: -26.0
    9. '\Input' → logprob: -26.375
    10. 'INPUT' → logprob: -27.375

Token 936: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. 'Process' → logprob: -20.5
    3. 'Processors' → logprob: -22.0
    4. '_processor' → logprob: -22.625
    5. 'processor' → logprob: -23.125
    6. 'Proces' → logprob: -24.5
    7. 'Processed' → logprob: -25.0
    8. 'Producer' → logprob: -25.5
    9. ' Processor' → logprob: -25.875
    10. 'Proc' → logprob: -26.5

Token 937: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006964712869375944
    2. 'input' → logprob: -5.256964683532715
    3. '
' → logprob: -6.381964683532715
    4. ' input' → logprob: -11.506964683532715
    5. 'output' → logprob: -11.631964683532715
    6. 'def' → logprob: -11.881964683532715
    7. '    
' → logprob: -12.131964683532715
    8. '(input' → logprob: -12.756964683532715
    9. ',input' → logprob: -14.381964683532715
    10. '  ' → logprob: -15.006964683532715

Token 938: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011050531640648842
    2. 'input' → logprob: -4.511050701141357
    3. ' input' → logprob: -13.3860502243042
    4. 'output' → logprob: -13.8860502243042
    5. 'def' → logprob: -16.261051177978516
    6. '	input' → logprob: -16.511051177978516
    7. '```' → logprob: -17.386051177978516
    8. '
' → logprob: -17.886051177978516
    9. '[input' → logprob: -18.261051177978516
    10. '       ' → logprob: -18.886051177978516

Token 939: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.00010556964843999594
    2. 'output' → logprob: -9.375105857849121
    3. '   ' → logprob: -10.875105857849121
    4. ' input' → logprob: -13.250105857849121
    5. 'import' → logprob: -17.000104904174805
    6. '
' → logprob: -17.625104904174805
    7. '	input' → logprob: -19.250104904174805
    8. '(input' → logprob: -19.750104904174805
    9. '<input' → logprob: -19.750104904174805
    10. 'def' → logprob: -20.000104904174805

Token 940: '_processor' (ID: 129611)
  Prédit: '_processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -1.0921942703134846e-05
    2. 'processor' → logprob: -11.62501049041748
    3. 'Processor' → logprob: -14.37501049041748
    4. '_processors' → logprob: -14.37501049041748
    5. '   ' → logprob: -15.50001049041748
    6. '_process' → logprob: -16.125011444091797
    7. '._' → logprob: -16.500011444091797
    8. '_processing' → logprob: -16.875011444091797
    9. '_processed' → logprob: -17.250011444091797
    10. '_controller' → logprob: -17.375011444091797

Token 941: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -4.320199877838604e-07
    2. 'read' → logprob: -15.0
    3. '.process' → logprob: -17.625
    4. '.readline' → logprob: -18.875
    5. '.' → logprob: -19.375
    6. '.readlines' → logprob: -19.375
    7. '.write' → logprob: -20.125
    8. '.load' → logprob: -20.375
    9. ' .' → logprob: -21.0
    10. '.Read' → logprob: -21.75

Token 942: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00016921341011766344
    2. 'datasets' → logprob: -8.750168800354004
    3. 'atasets' → logprob: -11.500168800354004
    4. ' datasets' → logprob: -15.875168800354004
    5. '()
' → logprob: -16.00016975402832
    6. '_sets' → logprob: -16.25016975402832
    7. '
' → logprob: -16.37516975402832
    8. '()' → logprob: -17.00016975402832
    9. 'Datas' → logprob: -17.12516975402832
    10. 's' → logprob: -17.75016975402832

Token 943: 'atasets' (ID: 105003)
  Prédit: 'atasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atasets' → logprob: -2.45848218582978e-06
    2. 'datasets' → logprob: -13.00000286102295
    3. 'ataset' → logprob: -16.250001907348633
    4. 'sets' → logprob: -19.000001907348633
    5. 'ata' → logprob: -19.125001907348633
    6. ' datasets' → logprob: -19.500001907348633
    7. '.datasets' → logprob: -19.750001907348633
    8. 'atas' → logprob: -20.125001907348633
    9. '
' → logprob: -21.500001907348633
    10. 'at' → logprob: -21.875001907348633

Token 944: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01828010566532612
    2. 'for' → logprob: -4.018280029296875
    3. ' for' → logprob: -9.018280029296875
    4. '
' → logprob: -12.018280029296875
    5. '    
' → logprob: -13.393280029296875
    6. '```' → logprob: -14.393280029296875
    7. 'while' → logprob: -14.893280029296875
    8. 'def' → logprob: -15.268280029296875
    9. '	for' → logprob: -16.018280029296875
    10. 'output' → logprob: -16.143280029296875

Token 945: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01819712109863758
    2. 'for' → logprob: -4.018197059631348
    3. ' for' → logprob: -10.268197059631348
    4. '```' → logprob: -11.518197059631348
    5. 'from' → logprob: -13.768197059631348
    6. 'output' → logprob: -14.018197059631348
    7. '
' → logprob: -15.268197059631348
    8. '    
' → logprob: -15.893197059631348
    9. 'def' → logprob: -16.018198013305664
    10. '``' → logprob: -17.268198013305664

Token 946: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16088302433490753
    2. 'output' → logprob: -1.9108830690383911
    3. '   ' → logprob: -7.410882949829102
    4. ' for' → logprob: -10.160882949829102
    5. 'from' → logprob: -11.535882949829102
    6. ' output' → logprob: -12.785882949829102
    7. 'import' → logprob: -13.785882949829102
    8. 'while' → logprob: -14.160882949829102
    9. 'Output' → logprob: -14.660882949829102
    10. '```' → logprob: -14.910882949829102

Token 947: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019962577149271965
    2. ' n' → logprob: -4.019962787628174
    3. '(n' → logprob: -6.644962787628174
    4. ' (' → logprob: -8.144962310791016
    5. '   ' → logprob: -8.519962310791016
    6. '(' → logprob: -11.894962310791016
    7. 'dataset' → logprob: -11.894962310791016
    8. '_n' → logprob: -13.144962310791016
    9. ' dataset' → logprob: -13.519962310791016
    10. '	n' → logprob: -13.894962310791016

Token 948: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.394135612528771e-05
    2. ',color' → logprob: -10.250043869018555
    3. ' ,' → logprob: -11.750043869018555
    4. '_,' → logprob: -16.375043869018555
    5. 'colors' → logprob: -16.375043869018555
    6. ',input' → logprob: -16.875043869018555
    7. '‌,' → logprob: -17.000043869018555
    8. ',data' → logprob: -17.000043869018555
    9. ',d' → logprob: -17.250043869018555
    10. ' in' → logprob: -17.500043869018555

Token 949: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.001170225441455841
    2. ' colors' → logprob: -6.7511701583862305
    3. '(colors' → logprob: -18.251171112060547
    4. '_colors' → logprob: -19.126171112060547
    5. 'Colors' → logprob: -19.751171112060547
    6. '   ' → logprob: -19.876171112060547
    7. 'color' → logprob: -20.251171112060547
    8. '.colors' → logprob: -20.376171112060547
    9. 'cols' → logprob: -20.626171112060547
    10. ' ' → logprob: -22.501171112060547

Token 950: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006717743817716837
    2. 'in' → logprob: -5.006717681884766
    3. '   ' → logprob: -13.256717681884766
    4. '	in' → logprob: -15.131717681884766
    5. ',' → logprob: -15.756717681884766
    6. '    ' → logprob: -16.381717681884766
    7. 'import' → logprob: -17.256717681884766
    8. '_in' → logprob: -17.631717681884766
    9. 'n' → logprob: -17.756717681884766
    10. ' ' → logprob: -18.131717681884766

Token 951: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005930813029408455
    2. ' input' → logprob: -5.1309309005737305
    3. '   ' → logprob: -13.63093090057373
    4. ' ' → logprob: -14.38093090057373
    5. '(input' → logprob: -16.255929946899414
    6. '	input' → logprob: -16.380929946899414
    7. '[input' → logprob: -16.755929946899414
    8. '
' → logprob: -17.005929946899414
    9. 'output' → logprob: -17.130929946899414
    10. '<input' → logprob: -17.255929946899414

Token 952: '_processor' (ID: 129611)
  Prédit: '_processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -2.7729658540920354e-05
    2. 'processor' → logprob: -10.750027656555176
    3. 'Processor' → logprob: -12.625027656555176
    4. '_processors' → logprob: -13.125027656555176
    5. 'in' → logprob: -14.750027656555176
    6. '   ' → logprob: -15.875027656555176
    7. '_processed' → logprob: -16.500028610229492
    8. ' in' → logprob: -16.500028610229492
    9. '_generator' → logprob: -17.125028610229492
    10. 's' → logprob: -17.250028610229492

Token 953: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -6.945094355614856e-05
    2. ' .' → logprob: -9.625069618225098
    3. 'datasets' → logprob: -13.875069618225098
    4. '.datas' → logprob: -13.875069618225098
    5. '.dataset' → logprob: -14.250069618225098
    6. '.' → logprob: -14.250069618225098
    7. ' datasets' → logprob: -17.50006866455078
    8. '._' → logprob: -17.75006866455078
    9. '.
' → logprob: -17.87506866455078
    10. '
' → logprob: -18.00006866455078

Token 954: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.037837881594896317
    2. ':' → logprob: -3.4128379821777344
    3. '       ' → logprob: -6.162837982177734
    4. '   ' → logprob: -6.287837982177734
    5. '():
' → logprob: -9.162837982177734
    6. '):
' → logprob: -9.662837982177734
    7. ' :
' → logprob: -11.037837982177734
    8. ',' → logprob: -11.412837982177734
    9. ':

' → logprob: -12.287837982177734
    10. ':
' → logprob: -12.787837982177734

Token 955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005700715119019151
    2. '   ' → logprob: -7.750570297241211
    3. 'g' → logprob: -9.625570297241211
    4. ':
' → logprob: -11.250570297241211
    5. ' g' → logprob: -11.750570297241211
    6. '
' → logprob: -11.875570297241211
    7. '```' → logprob: -12.125570297241211
    8. 'game' → logprob: -12.250570297241211
    9. '<|end|>' → logprob: -12.250570297241211
    10. ':' → logprob: -12.250570297241211

Token 956: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' (adapté à ' game') → logprob: -0.022111214697360992
    2. '       ' → logprob: -3.897111177444458
    3. ' game' → logprob: -6.772111415863037
    4. '   ' → logprob: -8.397110939025879
    5. 'g' → logprob: -8.647110939025879
    6. '
' → logprob: -11.022110939025879
    7. '	game' → logprob: -12.647110939025879
    8. '           ' → logprob: -14.272110939025879
    9. '_game' → logprob: -15.397110939025879
    10. 'games' → logprob: -15.772110939025879

Token 957: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009115827269852161
    2. '=' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.500911712646484
    4. ' ' → logprob: -18.125911712646484
    5. ' =
' → logprob: -18.500911712646484
    6. '	' → logprob: -19.000911712646484
    7. '＝' → logprob: -19.625911712646484
    8. '  ' → logprob: -19.750911712646484
    9. ' ' → logprob: -19.875911712646484
    10. '    ' → logprob: -20.250911712646484

Token 958: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0001234428636962548
    2. ' G' → logprob: -9.000123023986816
    3. '   ' → logprob: -19.625123977661133
    4. '       ' → logprob: -22.625123977661133
    5. 'g' → logprob: -23.250123977661133
    6. '	G' → logprob: -23.375123977661133
    7. 'Game' → logprob: -23.625123977661133
    8. '```' → logprob: -24.375123977661133
    9. '    ' → logprob: -24.625123977661133
    10. ' ' → logprob: -24.875123977661133

Token 959: 'ose' (ID: 918)
  Prédit: 'ose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ose' → logprob: -0.00029720881138928235
    2. 'G' → logprob: -8.125297546386719
    3. 'ase' → logprob: -14.500297546386719
    4. '   ' → logprob: -15.500297546386719
    5. ' G' → logprob: -16.25029754638672
    6. '```' → logprob: -16.25029754638672
    7. 'O' → logprob: -17.00029754638672
    8. '       ' → logprob: -17.12529754638672
    9. 'lose' → logprob: -17.25029754638672
    10. 'Game' → logprob: -17.62529754638672

Token 960: 'ki' (ID: 3129)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.00040338258258998394
    2. 'ki' → logprob: -8.75040340423584
    3. 'ski' → logprob: -9.12540340423584
    4. 's' → logprob: -9.75040340423584
    5. 'Game' → logprob: -10.12540340423584
    6. 'eki' → logprob: -11.00040340423584
    7. 'sk' → logprob: -12.37540340423584
    8. 'si' → logprob: -12.50040340423584
    9. 'S' → logprob: -12.62540340423584
    10. 'te' → logprob: -13.37540340423584

Token 961: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -2.696889623621246e-06
    2. 'game' → logprob: -12.87500286102295
    3. 'G' → logprob: -17.000001907348633
    4. '_game' → logprob: -17.125001907348633
    5. '   ' → logprob: -19.375001907348633
    6. 'Games' → logprob: -19.625001907348633
    7. '_Game' → logprob: -20.125001907348633
    8. ' game' → logprob: -20.375001907348633
    9. '<Game' → logprob: -20.625001907348633
    10. 'n' → logprob: -20.625001907348633

Token 962: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.126521035796031e-05
    2. '       ' → logprob: -9.375091552734375
    3. 'n' → logprob: -12.250091552734375
    4. '(' → logprob: -14.000091552734375
    5. ' (' → logprob: -14.875091552734375
    6. '(game' → logprob: -15.750091552734375
    7. '           ' → logprob: -16.125091552734375
    8. '   ' → logprob: -16.500091552734375
    9. '=' → logprob: -17.375091552734375
    10. '```' → logprob: -18.000091552734375

Token 963: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ' ,' → logprob: -11.50001049041748
    3. 'colors' → logprob: -16.875009536743164
    4. ',color' → logprob: -16.875009536743164
    5. ')' → logprob: -17.250009536743164
    6. '       ' → logprob: -17.625009536743164
    7. ',
' → logprob: -17.875009536743164
    8. '   ' → logprob: -18.500009536743164
    9. '```' → logprob: -18.500009536743164
    10. '),' → logprob: -18.625009536743164

Token 964: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.20141403377056122
    2. ' colors' → logprob: -1.7014139890670776
    3. 'Colors' → logprob: -15.201414108276367
    4. 'color' → logprob: -15.451414108276367
    5. '(colors' → logprob: -16.826414108276367
    6. '_colors' → logprob: -17.201414108276367
    7. '.colors' → logprob: -17.576414108276367
    8. '   ' → logprob: -18.201414108276367
    9. ' colores' → logprob: -18.201414108276367
    10. ')' → logprob: -19.951414108276367

Token 965: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5462188720703125
    2. ')
' → logprob: -1.0462188720703125
    3. ')' → logprob: -2.6712188720703125
    4. '   ' → logprob: -8.296218872070312
    5. ')
' → logprob: -9.796218872070312
    6. 'game' → logprob: -9.796218872070312
    7. ').' → logprob: -10.921218872070312
    8. '           ' → logprob: -11.046218872070312
    9. '
' → logprob: -11.296218872070312
    10. '(game' → logprob: -11.546218872070312

Token 966: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08016569167375565
    2. '   ' → logprob: -2.5801656246185303
    3. 'game' → logprob: -6.705165863037109
    4. '
' → logprob: -10.58016586303711
    5. '           ' → logprob: -11.70516586303711
    6. '	game' → logprob: -12.20516586303711
    7. '        
' → logprob: -12.70516586303711
    8. ' ' → logprob: -13.20516586303711
    9. '    
' → logprob: -13.58016586303711
    10. ' game' → logprob: -13.83016586303711

Token 967: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' (adapté à ' game') → logprob: -0.007920087315142155
    2. '       ' → logprob: -4.882920265197754
    3. ' game' → logprob: -8.507920265197754
    4. '   ' → logprob: -9.132920265197754
    5. '	game' → logprob: -13.007920265197754
    6. '           ' → logprob: -14.132920265197754
    7. '(game' → logprob: -15.007920265197754
    8. ' ' → logprob: -15.882920265197754
    9. '
' → logprob: -16.007919311523438
    10. '.game' → logprob: -16.382919311523438

Token 968: '.play' (ID: 23389)
  Prédit: '.play'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.play' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.0
    3. 'play' → logprob: -16.75
    4. '.perform' → logprob: -18.0
    5. ' .' → logprob: -18.5
    6. '.run' → logprob: -18.75
    7. '	play' → logprob: -19.375
    8. '.Play' → logprob: -19.5
    9. '.player' → logprob: -20.125
    10. '.place' → logprob: -20.25

Token 969: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011725161311915144
    2. '   ' → logprob: -9.500117301940918
    3. 'print' → logprob: -10.125117301940918
    4. ' print' → logprob: -13.750117301940918
    5. 'result' → logprob: -15.000117301940918
    6. '<|end|>' → logprob: -15.000117301940918
    7. '```' → logprob: -16.3751163482666
    8. 'output' → logprob: -16.3751163482666
    9. 'count' → logprob: -16.5001163482666
    10. '           ' → logprob: -17.0001163482666

Token 970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002470305422320962
    2. 'print' → logprob: -6.37747049331665
    3. '   ' → logprob: -7.87747049331665
    4. 'result' → logprob: -8.502470016479492
    5. ' print' → logprob: -9.502470016479492
    6. 'count' → logprob: -10.002470016479492
    7. ' result' → logprob: -10.252470016479492
    8. 'output' → logprob: -10.877470016479492
    9. 'Output' → logprob: -12.127470016479492
    10. ' output' → logprob: -12.752470016479492

Token 971: ' result' (ID: 1534)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.3089602589607239
    2. 'result' (adapté à ' result') → logprob: -1.558960199356079
    3. 'count' → logprob: -3.183960199356079
    4. 'print' → logprob: -4.933960437774658
    5. '       ' → logprob: -5.183960437774658
    6. 'output' → logprob: -7.183960437774658
    7. ' Output' → logprob: -8.4339599609375
    8. ' result' → logprob: -8.9339599609375
    9. 'res' → logprob: -9.9339599609375
    10. '   ' → logprob: -10.8089599609375

Token 972: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994610279798508
    2. '=' → logprob: -2.694946050643921
    3. '   ' → logprob: -12.4449462890625
    4. ')' → logprob: -12.4449462890625
    5. '.' → logprob: -14.3199462890625
    6. '       ' → logprob: -15.1949462890625
    7. ' ' → logprob: -15.3199462890625
    8. '    ' → logprob: -15.8199462890625
    9. '=result' → logprob: -15.9449462890625
    10. '_' → logprob: -16.3199462890625

Token 973: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' → logprob: -3.130576806142926e-05
    2. ' game' → logprob: -10.375031471252441
    3. '(game' → logprob: -17.375030517578125
    4. '	game' → logprob: -17.750030517578125
    5. '   ' → logprob: -19.250030517578125
    6. 'output' → logprob: -20.625030517578125
    7. '.game' → logprob: -20.625030517578125
    8. '`' → logprob: -21.125030517578125
    9. '
' → logprob: -21.375030517578125
    10. 'Output' → logprob: -22.125030517578125

Token 974: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.306760805164231e-05
    2. '.' → logprob: -11.50001335144043
    3. 'get' → logprob: -12.87501335144043
    4. ' .' → logprob: -15.75001335144043
    5. '.
' → logprob: -17.12501335144043
    6. '       ' → logprob: -17.87501335144043
    7. '
' → logprob: -18.00001335144043
    8. '   ' → logprob: -18.00001335144043
    9. '_get' → logprob: -18.12501335144043
    10. '```' → logprob: -18.25001335144043

Token 975: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.700132997939363e-05
    2. '_white' → logprob: -11.000017166137695
    3. 'result' → logprob: -15.125017166137695
    4. 'white' → logprob: -18.750017166137695
    5. '   ' → logprob: -19.250017166137695
    6. 'Result' → logprob: -19.625017166137695
    7. '_' → logprob: -19.875017166137695
    8. '_results' → logprob: -20.000017166137695
    9. '_output' → logprob: -20.625017166137695
    10. '\' → logprob: -21.250017166137695

Token 976: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.522638169466518e-05
    2. 'Output' → logprob: -11.750024795532227
    3. '   ' → logprob: -12.250024795532227
    4. '
' → logprob: -12.250024795532227
    5. '        
' → logprob: -12.750024795532227
    6. '```' → logprob: -13.250024795532227
    7. '<|end|>' → logprob: -14.000024795532227
    8. '()' → logprob: -15.000024795532227
    9. '(Output' → logprob: -15.125024795532227
    10. ',' → logprob: -15.250024795532227

Token 977: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006729110609740019
    2. 'Output' → logprob: -5.0067291259765625
    3. '   ' → logprob: -11.256729125976562
    4. '	Output' → logprob: -14.756729125976562
    5. 'output' → logprob: -15.381729125976562
    6. ' Output' → logprob: -16.506729125976562
    7. '           ' → logprob: -16.631729125976562
    8. '```' → logprob: -17.131729125976562
    9. '_Output' → logprob: -17.381729125976562
    10. '_output' → logprob: -17.506729125976562

Token 978: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' (adapté à ' Output') → logprob: -0.000727921025827527
    2. '       ' → logprob: -7.250728130340576
    3. ' Output' → logprob: -11.625727653503418
    4. 'print' → logprob: -11.750727653503418
    5. '	Output' → logprob: -14.250727653503418
    6. '   ' → logprob: -15.250727653503418
    7. 'output' → logprob: -15.875727653503418
    8. '_output' → logprob: -16.750728607177734
    9. '_Output' → logprob: -17.625728607177734
    10. 'Input' → logprob: -17.625728607177734

Token 979: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. '_processor' → logprob: -19.125
    3. ' Processor' → logprob: -21.375
    4. 'processor' → logprob: -21.375
    5. 'Process' → logprob: -21.5
    6. 'Processors' → logprob: -22.875
    7. 'Producer' → logprob: -23.875
    8. ' processor' → logprob: -25.0
    9. 'Proces' → logprob: -25.0
    10. 'Processed' → logprob: -25.25

Token 980: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -1.9361264946837764e-07
    2. 'output' → logprob: -16.125
    3. '.' → logprob: -17.125
    4. ' .' → logprob: -18.625
    5. '	output' → logprob: -19.25
    6. '.input' → logprob: -19.5
    7. '.Output' → logprob: -20.0
    8. '(output' → logprob: -20.5
    9. '.print' → logprob: -21.125
    10. ' output' → logprob: -21.25

Token 981: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -5.796184723294573e-06
    2. 'white' → logprob: -12.750005722045898
    3. 'White' → logprob: -13.250005722045898
    4. 'result' → logprob: -14.500005722045898
    5. '白' → logprob: -16.3750057220459
    6. '_' → logprob: -16.5000057220459
    7. '_WHITE' → logprob: -16.5000057220459
    8. '_wh' → logprob: -16.6250057220459
    9. '```' → logprob: -16.6250057220459
    10. '_result' → logprob: -17.5000057220459

Token 982: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.372294698550832e-06
    2. 'count' → logprob: -11.875009536743164
    3. '_white' → logprob: -13.000009536743164
    4. '_result' → logprob: -16.250009536743164
    5. 'white' → logprob: -17.750009536743164
    6. 'ount' → logprob: -17.875009536743164
    7. '_counts' → logprob: -18.250009536743164
    8. '_' → logprob: -18.500009536743164
    9. 's' → logprob: -18.500009536743164
    10. 'e' → logprob: -18.625009536743164

Token 983: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -9.615255839889869e-05
    2. 'result' → logprob: -9.250096321105957
    3. ' result' → logprob: -18.12509536743164
    4. '(' → logprob: -18.50009536743164
    5. '=result' → logprob: -19.50009536743164
    6. '(results' → logprob: -20.75009536743164
    7. '	result' → logprob: -21.37509536743164
    8. ',result' → logprob: -21.37509536743164
    9. '[result' → logprob: -21.75009536743164
    10. ' (' → logprob: -22.12509536743164

Token 984: ')


' (ID: 7861)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5039370656013489
    2. ')' → logprob: -1.503937005996704
    3. '()' → logprob: -1.753937005996704
    4. '()
' → logprob: -7.753937244415283
    5. '())
' → logprob: -10.503936767578125
    6. ' ())' → logprob: -11.253936767578125
    7. '(' → logprob: -11.503936767578125
    8. '<|end|>' → logprob: -12.128936767578125
    9. '       ' → logprob: -12.503936767578125
    10. ' )' → logprob: -12.503936767578125

Token 985: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9361264946837764e-07
    2. ' if' → logprob: -15.75
    3. '```' → logprob: -17.375
    4. '
' → logprob: -19.875
    5. 'import' → logprob: -21.125
    6. '#' → logprob: -22.625
    7. '	if' → logprob: -22.75
    8. '#if' → logprob: -23.5
    9. '    
' → logprob: -23.875
    10. '  
' → logprob: -24.375

Token 986: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007418495370075107
    2. ' __' → logprob: -7.625741958618164
    3. 'name' → logprob: -8.500741958618164
    4. ''' → logprob: -10.000741958618164
    5. '"' → logprob: -12.875741958618164
    6. '___' → logprob: -13.625741958618164
    7. '_name' → logprob: -14.500741958618164
    8. 'Name' → logprob: -15.125741958618164
    9. '.__' → logprob: -16.250741958618164
    10. '____' → logprob: -16.250741958618164

Token 987: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.056495994329452515
    2. '==' → logprob: -3.0564959049224854
    3. 'name' → logprob: -5.4314961433410645
    4. ' ==' → logprob: -5.9314961433410645
    5. '=="' → logprob: -8.056495666503906
    6. '__.__' → logprob: -8.056495666503906
    7. '=='' → logprob: -9.306495666503906
    8. 'main' → logprob: -10.431495666503906
    9. '.__' → logprob: -10.806495666503906
    10. '```' → logprob: -10.931495666503906

Token 988: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0280383548888494e-06
    2. '__.__' → logprob: -14.625000953674316
    3. '==' → logprob: -15.000000953674316
    4. '__.' → logprob: -16.500001907348633
    5. 'name' → logprob: -17.500001907348633
    6. '____' → logprob: -18.375001907348633
    7. '__
' → logprob: -18.500001907348633
    8. '_' → logprob: -18.500001907348633
    9. ' ==' → logprob: -18.500001907348633
    10. '__('' → logprob: -18.875001907348633

Token 989: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06338662654161453
    2. '==' → logprob: -2.8133866786956787
    3. ' ==' → logprob: -6.6883864402771
    4. '=="' → logprob: -8.813386917114258
    5. '=='' → logprob: -10.813386917114258
    6. '__.__' → logprob: -13.438386917114258
    7. '=' → logprob: -14.688386917114258
    8. '===' → logprob: -14.688386917114258
    9. '_' → logprob: -14.813386917114258
    10. '___' → logprob: -14.938386917114258

Token 990: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04860644042491913
    2. ''' → logprob: -3.0486063957214355
    3. '__' → logprob: -11.048606872558594
    4. ' "__' → logprob: -12.923606872558594
    5. ''"' → logprob: -15.673606872558594
    6. ' '__' → logprob: -16.298606872558594
    7. 'main' → logprob: -16.298606872558594
    8. '   ' → logprob: -16.548606872558594
    9. '"name' → logprob: -16.548606872558594
    10. '"'' → logprob: -16.923606872558594

Token 991: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003213245654478669
    2. '__' → logprob: -5.753213405609131
    3. 'name' → logprob: -10.253212928771973
    4. '_main' → logprob: -15.503212928771973
    5. ' main' → logprob: -16.37821388244629
    6. '(main' → logprob: -18.00321388244629
    7. 'built' → logprob: -18.25321388244629
    8. 'm' → logprob: -18.75321388244629
    9. 'MAIN' → logprob: -18.87821388244629
    10. '___' → logprob: -18.87821388244629

Token 992: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.005245498847216368
    2. '__' → logprob: -5.255245685577393
    3. '__":
' → logprob: -11.380245208740234
    4. '__.' → logprob: -15.880245208740234
    5. '_' → logprob: -16.255245208740234
    6. '__:' → logprob: -17.255245208740234
    7. '__
' → logprob: -17.630245208740234
    8. '':
' → logprob: -18.880245208740234
    9. '___' → logprob: -18.880245208740234
    10. '__.__' → logprob: -19.130245208740234

Token 993: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38728663325309753
    2. 'main' → logprob: -1.13728666305542
    3. '   ' → logprob: -8.762286186218262
    4. '__':
' → logprob: -9.012286186218262
    5. ''' → logprob: -10.137286186218262
    6. ' main' → logprob: -10.262286186218262
    7. '____' → logprob: -11.012286186218262
    8. '__":
' → logprob: -11.262286186218262
    9. '(main' → logprob: -11.637286186218262
    10. '_main' → logprob: -11.637286186218262

Token 994: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. 'import' → logprob: -15.75
    3. ' main' → logprob: -18.25
    4. '	main' → logprob: -22.25
    5. '(main' → logprob: -25.875
    6. '_main' → logprob: -26.125
    7. 'from' → logprob: -26.25
    8. '.main' → logprob: -26.25
    9. '   ' → logprob: -26.25
    10. 'Main' → logprob: -28.875

Token 995: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 993
Tokens correctement prédits (1ère position, stricte): 373
Tokens correctement prédits (1ère position, avec adaptation): 442
Tokens correctement prédits (top 10): 813
Précision stricte (1ère position): 37.56%
Précision adaptée (1ère position): 44.51%
Précision (top 10): 81.87%
================================================================================
