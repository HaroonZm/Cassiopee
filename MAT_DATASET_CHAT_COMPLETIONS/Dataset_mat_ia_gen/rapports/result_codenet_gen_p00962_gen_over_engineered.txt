================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

class Graph:
    def __init__(self, n):
        self.n = n
        self.adj_forward = [[] for _ in range(n + 1)]
        self.adj_reverse = [[] for _ in range(n + 1)]

    def add_edge(self, u, v, w, idx):
        # Store edges separately forward and backward
        self.adj_forward[u].append((v, w, idx))
        self.adj_reverse[v].append((u, w, idx))

class ShortestPathFinder:
    def __init__(self, graph):
        self.graph = graph
        self.n = graph.n
        self.dist_from_start = [float('inf')] * (self.n + 1)
        self.dist_to_end = [float('inf')] * (self.n + 1)

    def dijkstra(self, start, adj):
        dist = [float('inf')] * (self.n + 1)
        dist[start] = 0
        hq = [(0, start)]
        while hq:
            d, u = heapq.heappop(hq)
            if d > dist[u]:
                continue
            for v, w, _ in adj[u]:
                nd = d + w
                if nd < dist[v]:
                    dist[v] = nd
                    heapq.heappush(hq, (nd, v))
        return dist

    def compute(self):
        # Distances from start (1) using original edges
        self.dist_from_start = self.dijkstra(1, self.graph.adj_forward)
        # Distances to end (2) using reversed edges (for paths ending at 2)
        self.dist_to_end = self.dijkstra(2, self.graph.adj_reverse)

class ExperimentEvaluator:
    def __init__(self, graph, spfinder):
        self.graph = graph
        self.spfinder = spfinder
        self.n = graph.n
        self.m = 0
        # Will store edges as tuples (a,b,c)
        self.edges = []
        # Will store minimal shortest distance before experiment
        self.original_dist = self.spfinder.dist_from_start[2]

    def register_edges(self, edges):
        self.edges = edges
        self.m = len(edges)

    def evaluate_day(self, i):
        a, b, c = self.edges[i]
        d = self.original_dist

        dist_from_start = self.spfinder.dist_from_start
        dist_to_end = self.spfinder.dist_to_end

        # We consider the experiment reversing edge i: from (a->b) to (b->a)

        # 1) Check if shortest path unchanged:
        # shortest path is d originally, from 1 to 2

        # 2) Check if new shortest path can be shorter by using the reversed edge:
        # shortest path candidate with reversed edge:
        # dist_from_start[b] + c + dist_to_end[a]
        cand = dist_from_start[b] + c + dist_to_end[a]

        # 3) Check if new shortest path can be longer or no route if we exclude edge (a->b) original?
        # Since original shortest path uses some edges, if the reversed edge is on the shortest path,
        # its reversal may break it, possibly making path longer or none.

        # Instead of full recomputation, use:
        # If original shortest path > cand => HAPPY
        # if original shortest path == cand => SOSO
        # if cand > d or no path => SAD (including if cand infinite)
        # But also if reversing edge breaks original shortest path and no better alternative exists, SAD.

        if cand < d:
            return "HAPPY"
        elif cand == d:
            return "SOSO"
        else:
            # Possibly no improvement, check if original shortest path used this edge a->b
            # To detect usage of edge i on some shortest path, check:
            # Whether dist_from_start[a] + c + dist_to_end[b] == d

            # Because edge i is a->b with length c, if it lies on the shortest path,
            # the path passing through edge i will have distance:
            # dist_from_start[a] + c + dist_to_end[b]

            use = (dist_from_start[a] + c + dist_to_end[b]) == d

            if use:
                # Since reversal removes edge i in original direction, and alternative route was longer or none,
                # it's SAD
                return "SAD"
            else:
                # edge i not on shortest path, reversing doesn't increase length
                # means shortest path doesn't change
                return "SOSO"

class PizzaDeliveryExperiment:
    def __init__(self):
        self.n = 0
        self.m = 0
        self.graph = None
        self.edges = []

    def parse_input(self):
        input = sys.stdin.readline
        self.n, self.m = map(int, input().split())
        self.edges = []
        self.graph = Graph(self.n)
        for i in range(self.m):
            a, b, c = map(int, input().split())
            self.edges.append((a, b, c))
            self.graph.add_edge(a, b, c, i+1)

    def run(self):
        # 1) compute shortest paths for original graph
        spfinder = ShortestPathFinder(self.graph)
        spfinder.compute()

        evaluator = ExperimentEvaluator(self.graph, spfinder)
        evaluator.register_edges(self.edges)

        # Evaluate each day
        out = []
        for i in range(self.m):
            res = evaluator.evaluate_day(i)
            out.append(res)
        print("\n".join(out))


def main():
    experiment = PizzaDeliveryExperiment()
    experiment.parse_input()
    experiment.run()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18539276719093323
    2. '\n' → logprob: -2.0603928565979004
    3. '<|end|>' → logprob: -4.1853928565979
    4. '\' → logprob: -4.5603928565979
    5. 'newline' → logprob: -5.3103928565979
    6. '```' → logprob: -6.0603928565979
    7. 'import' → logprob: -6.1853928565979
    8. '<|end|>' → logprob: -6.5603928565979
    9. '' → logprob: -6.9353928565979
    10. '
' → logprob: -7.1853928565979

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.253090865968261e-06
    2. '.' → logprob: -12.000009536743164
    3. 'queue' → logprob: -13.125009536743164
    4. 'ify' → logprob: -15.625009536743164
    5. '_' → logprob: -15.625009536743164
    6. '#' → logprob: -16.000009536743164
    7. 'space' → logprob: -16.750009536743164
    8. '[' → logprob: -16.875009536743164
    9. '=' → logprob: -16.875009536743164
    10. 'p' → logprob: -17.000009536743164

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21456386148929596
    2. '
' → logprob: -2.4645638465881348
    3. '\n' → logprob: -3.2145638465881348
    4. '\' → logprob: -3.7145638465881348
    5. '<|end|>' → logprob: -4.589563846588135
    6. '.
' → logprob: -4.964563846588135
    7. '

' → logprob: -4.964563846588135
    8. 'import' → logprob: -5.339563846588135
    9. '' → logprob: -5.464563846588135
    10. '```' → logprob: -5.714563846588135

Token 7: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04834660142660141
    2. '\' → logprob: -3.923346519470215
    3. '
' → logprob: -4.548346519470215
    4. '\n' → logprob: -5.173346519470215
    5. 'def' → logprob: -6.048346519470215
    6. '.
' → logprob: -6.173346519470215
    7. '```' → logprob: -6.423346519470215
    8. '' → logprob: -6.673346519470215
    9. ',' → logprob: -6.923346519470215
    10. 'import' → logprob: -7.673346519470215

Token 8: ' Graph' (ID: 15559)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0034568102564662695
    2. ' Priority' → logprob: -6.1284565925598145
    3. ' My' → logprob: -7.2534565925598145
    4. ' Heap' → logprob: -8.878457069396973
    5. ' Node' → logprob: -9.003457069396973
    6. ' Min' → logprob: -9.128457069396973
    7. ' A' → logprob: -9.503457069396973
    8. ' Max' → logprob: -10.003457069396973
    9. ' Binary' → logprob: -10.878457069396973
    10. ' K' → logprob: -11.253457069396973

Token 9: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014025058771949261
    2. '(' → logprob: -9.125140190124512
    3. '():' → logprob: -11.875140190124512
    4. '(:' → logprob: -12.375140190124512
    5. '):' → logprob: -12.500140190124512
    6. ':
' → logprob: -12.750140190124512
    7. '```' → logprob: -13.000140190124512
    8. ' :' → logprob: -13.125140190124512
    9. ':**' → logprob: -13.375140190124512
    10. '>:' → logprob: -13.625140190124512

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004281161818653345
    2. '():' → logprob: -6.629281044006348
    3. '```' → logprob: -6.629281044006348
    4. '   ' → logprob: -6.879281044006348
    5. '(' → logprob: -8.254281044006348
    6. ' :' → logprob: -9.754281044006348
    7. '<|end|>' → logprob: -10.129281044006348
    8. 'def' → logprob: -10.129281044006348
    9. '(object' → logprob: -10.254281044006348
    10. '[' → logprob: -10.629281044006348

Token 11: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.09286227822303772
    2. 'def' (adapté à ' def') → logprob: -2.717862367630005
    3. '   ' → logprob: -3.967862367630005
    4. '    ' → logprob: -5.967862129211426
    5. ' ' → logprob: -7.467862129211426
    6. '```' → logprob: -8.717862129211426
    7. '    
' → logprob: -8.842862129211426
    8. ' 
' → logprob: -9.717862129211426
    9. 'class' → logprob: -10.342862129211426
    10. ')' → logprob: -10.592862129211426

Token 12: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0833912044763565
    2. ' init' → logprob: -2.9583911895751953
    3. ' _' → logprob: -3.8333911895751953
    4. 'init' → logprob: -5.333391189575195
    5. ' def' → logprob: -7.833391189575195
    6. '_init' → logprob: -8.458391189575195
    7. ' ' → logprob: -8.458391189575195
    8. '__' → logprob: -8.583391189575195
    9. 'initely' → logprob: -9.333391189575195
    10. ' ‌' → logprob: -9.333391189575195

Token 13: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.75
    3. 'inite' → logprob: -21.0
    4. 'innit' → logprob: -21.875
    5. 'ini' → logprob: -22.0
    6. 'int' → logprob: -22.25
    7. 'inti' → logprob: -22.5
    8. '	init' → logprob: -22.5
    9. '_init' → logprob: -22.5
    10. '   ' → logprob: -22.75

Token 14: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03511149063706398
    2. '__' → logprob: -3.410111427307129
    3. '__(
' → logprob: -7.285111427307129
    4. '__((' → logprob: -7.410111427307129
    5. '__('' → logprob: -9.535111427307129
    6. '__(*' → logprob: -10.160111427307129
    7. '(self' → logprob: -11.035111427307129
    8. '<|end|>' → logprob: -11.285111427307129
    9. '(' → logprob: -11.660111427307129
    10. '__("' → logprob: -12.285111427307129

Token 15: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007222028798423707
    2. ' self' → logprob: -7.250722408294678
    3. ')' → logprob: -11.75072193145752
    4. '(self' → logprob: -12.75072193145752
    5. ',self' → logprob: -14.62572193145752
    6. '_self' → logprob: -15.25072193145752
    7. '	self' → logprob: -15.62572193145752
    8. ' )' → logprob: -16.000722885131836
    9. ' ' → logprob: -16.375722885131836
    10. '0' → logprob: -16.625722885131836

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4037400484085083
    2. ')' → logprob: -1.5287400484085083
    3. '(self' → logprob: -3.2787399291992188
    4. 'self' → logprob: -3.4037399291992188
    5. '(' → logprob: -3.5287399291992188
    6. ' )' → logprob: -5.903739929199219
    7. ' (' → logprob: -6.028739929199219
    8. '<|end|>' → logprob: -6.403739929199219
    9. ' ,' → logprob: -6.528739929199219
    10. ')(' → logprob: -6.528739929199219

Token 17: ' n' (ID: 297)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.7615468502044678
    2. ' self' → logprob: -1.0115468502044678
    3. 'self' → logprob: -2.5115468502044678
    4. ')' → logprob: -3.3865468502044678
    5. ' n' → logprob: -4.386547088623047
    6. ' vertices' → logprob: -4.886547088623047
    7. ' ' → logprob: -5.011547088623047
    8. 'vertices' → logprob: -5.136547088623047
    9. 'graph' → logprob: -5.261547088623047
    10. ' graph' → logprob: -5.511547088623047

Token 18: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6341519951820374
    2. '):' → logprob: -0.7591519951820374
    3. ',' → logprob: -6.884151935577393
    4. ' )' → logprob: -8.63415241241455
    5. ' ):' → logprob: -8.75915241241455
    6. ':' → logprob: -9.50915241241455
    7. '_nodes' → logprob: -10.00915241241455
    8. '):
' → logprob: -10.63415241241455
    9. '_' → logprob: -10.88415241241455
    10. ' ,' → logprob: -12.13415241241455

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013044459745287895
    2. 'self' → logprob: -4.513044357299805
    3. ' self' → logprob: -7.388044357299805
    4. '   ' → logprob: -8.013044357299805
    5. '    ' → logprob: -8.513044357299805
    6. ')' → logprob: -8.763044357299805
    7. 'n' → logprob: -9.138044357299805
    8. '     ' → logprob: -9.263044357299805
    9. ',' → logprob: -9.388044357299805
    10. '```' → logprob: -9.638044357299805

Token 20: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.24310463666915894
    2. 'self' (adapté à ' self') → logprob: -1.7431046962738037
    3. '       ' → logprob: -3.7431046962738037
    4. '    ' → logprob: -5.118104457855225
    5. '   ' → logprob: -5.493104457855225
    6. ' ' → logprob: -5.618104457855225
    7. 'n' → logprob: -6.118104457855225
    8. '        ' → logprob: -7.743104457855225
    9. ' n' → logprob: -7.993104457855225
    10. '_self' → logprob: -9.493104934692383

Token 21: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0027777741197496653
    2. '.nodes' → logprob: -6.627777576446533
    3. '.n' → logprob: -6.877777576446533
    4. ' .' → logprob: -8.502778053283691
    5. '.vertices' → logprob: -9.877778053283691
    6. '.points' → logprob: -10.252778053283691
    7. '.edges' → logprob: -11.002778053283691
    8. '.data' → logprob: -11.002778053283691
    9. '.graph' → logprob: -11.252778053283691
    10. '.user' → logprob: -11.502778053283691

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02633989416062832
    2. '=' → logprob: -3.6513400077819824
    3. ' ' → logprob: -10.526339530944824
    4. ' =)' → logprob: -12.401339530944824
    5. '  ' → logprob: -12.901339530944824
    6. '    ' → logprob: -13.776339530944824
    7. '=int' → logprob: -13.901339530944824
    8. '   ' → logprob: -13.901339530944824
    9. ' =
' → logprob: -14.151339530944824
    10. '<|end|>' → logprob: -14.151339530944824

Token 23: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1269284337759018
    2. 'n' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.626928329467773
    4. ' ' → logprob: -16.376928329467773
    5. '	n' → logprob: -16.751928329467773
    6. 'int' → logprob: -18.001928329467773
    7. ')n' → logprob: -18.126928329467773
    8. '    ' → logprob: -18.501928329467773
    9. '```' → logprob: -19.126928329467773
    10. '0' → logprob: -19.376928329467773

Token 24: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004021407105028629
    2. '
' → logprob: -6.004021644592285
    3. '<|end|>' → logprob: -6.629021644592285
    4. '        
' → logprob: -9.629021644592285
    5. '        ' → logprob: -10.379021644592285
    6. '   ' → logprob: -10.504021644592285
    7. '<|end|>' → logprob: -11.129021644592285
    8. ',' → logprob: -11.129021644592285
    9. '      ' → logprob: -11.504021644592285
    10. '    ' → logprob: -11.504021644592285

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004200674593448639
    2. '<|end|>' → logprob: -8.500419616699219
    3. '        ' → logprob: -9.875419616699219
    4. '      ' → logprob: -10.375419616699219
    5. 'self' → logprob: -10.375419616699219
    6. '        
' → logprob: -10.625419616699219
    7. '
' → logprob: -10.875419616699219
    8. '   ' → logprob: -11.125419616699219
    9. '    ' → logprob: -11.250419616699219
    10. ',' → logprob: -12.125419616699219

Token 26: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007254600524902344
    2. 'self' (adapté à ' self') → logprob: -5.007254600524902
    3. ' self' → logprob: -7.882254600524902
    4. '   ' → logprob: -9.882254600524902
    5. '        ' → logprob: -10.132254600524902
    6. '0' → logprob: -11.507254600524902
    7. '        
' → logprob: -11.632254600524902
    8. '<|end|>' → logprob: -12.007254600524902
    9. '           ' → logprob: -12.132254600524902
    10. '      ' → logprob: -12.132254600524902

Token 27: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.17697304487228394
    2. '.graph' → logprob: -2.8019731044769287
    3. '.' → logprob: -3.0519731044769287
    4. '.edges' → logprob: -3.4269731044769287
    5. '.nodes' → logprob: -4.55197286605835
    6. ' .' → logprob: -5.17697286605835
    7. '._' → logprob: -6.17697286605835
    8. '.vertices' → logprob: -6.55197286605835
    9. 'adj' → logprob: -7.92697286605835
    10. '.Ad' → logprob: -8.301973342895508

Token 28: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012368128227535635
    2. 'jac' → logprob: -9.000123977661133
    3. 'ja' → logprob: -16.625123977661133
    4. 'jc' → logprob: -17.000123977661133
    5. 'js' → logprob: -17.750123977661133
    6. '[j' → logprob: -17.875123977661133
    7. '	j' → logprob: -18.625123977661133
    8. ' j' → logprob: -19.250123977661133
    9. 'jl' → logprob: -19.625123977661133
    10. 'jec' → logprob: -19.875123977661133

Token 29: '_forward' (ID: 75888)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.03537733852863312
    2. '[' → logprob: -4.160377502441406
    3. '_list' → logprob: -4.160377502441406
    4. 'acent' → logprob: -6.285377502441406
    5. '=' → logprob: -7.410377502441406
    6. 'ac' → logprob: -8.285377502441406
    7. ' =' → logprob: -8.660377502441406
    8. '_lists' → logprob: -8.785377502441406
    9. 'List' → logprob: -9.410377502441406
    10. 'list' → logprob: -9.410377502441406

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3473491966724396
    2. ' =' → logprob: -1.7223491668701172
    3. '[' → logprob: -2.222349166870117
    4. '_list' → logprob: -5.847349166870117
    5. '_' → logprob: -6.347349166870117
    6. ']' → logprob: -7.847349166870117
    7. 'acency' → logprob: -7.972349166870117
    8. '=[]' → logprob: -8.097349166870117
    9. '[:]' → logprob: -8.972349166870117
    10. ')' → logprob: -9.347349166870117

Token 31: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08419280499219894
    2. ' [[]' → logprob: -2.5841927528381348
    3. ' [' → logprob: -5.834192752838135
    4. '[]' → logprob: -6.584192752838135
    5. '{}' → logprob: -7.709192752838135
    6. ' [{}' → logprob: -8.584193229675293
    7. ' defaultdict' → logprob: -9.084193229675293
    8. '{' → logprob: -9.209193229675293
    9. 'default' → logprob: -9.584193229675293
    10. ' []' → logprob: -10.959193229675293

Token 32: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6736668348312378
    2. ',' → logprob: -1.5486668348312378
    3. ')' → logprob: -2.1736669540405273
    4. ' for' → logprob: -2.5486669540405273
    5. 'for' → logprob: -2.9236669540405273
    6. '(' → logprob: -4.423666954040527
    7. '<|end|>' → logprob: -4.923666954040527
    8. '[' → logprob: -5.423666954040527
    9. ')]' → logprob: -5.923666954040527
    10. ' ]' → logprob: -7.048666954040527

Token 33: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.36638516187667847
    2. '_' → logprob: -1.7413852214813232
    3. ' _' → logprob: -2.3663852214813232
    4. 'range' → logprob: -3.6163852214813232
    5. ' ' → logprob: -4.991384983062744
    6. '(range' → logprob: -5.866384983062744
    7. '_range' → logprob: -7.741384983062744
    8. ' i' → logprob: -7.991384983062744
    9. ' in' → logprob: -8.616385459899902
    10. '	range' → logprob: -8.991385459899902

Token 34: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22993804514408112
    2. ' in' → logprob: -1.72993803024292
    3. 'range' → logprob: -3.60493803024292
    4. 'i' → logprob: -7.35493803024292
    5. ' ' → logprob: -8.354938507080078
    6. ' range' → logprob: -10.354938507080078
    7. ' i' → logprob: -12.229938507080078
    8. '  ' → logprob: -12.354938507080078
    9. '(range' → logprob: -12.604938507080078
    10. '_' → logprob: -12.604938507080078

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047814972698689
    2. ' range' → logprob: -4.511047840118408
    3. '(range' → logprob: -16.76104736328125
    4. '	range' → logprob: -18.01104736328125
    5. '_range' → logprob: -19.63604736328125
    6. '```' → logprob: -19.88604736328125
    7. 'rang' → logprob: -20.01104736328125
    8. '.range' → logprob: -20.76104736328125
    9. '-range' → logprob: -21.01104736328125
    10. ')' → logprob: -21.26104736328125

Token 36: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00385387078858912
    2. '(' → logprob: -6.253853797912598
    3. '(self' → logprob: -6.253853797912598
    4. ' (' → logprob: -15.378853797912598
    5. 'self' → logprob: -16.128854751586914
    6. '(N' → logprob: -17.253854751586914
    7. '(
' → logprob: -17.628854751586914
    8. 'n' → logprob: -17.753854751586914
    9. '(s' → logprob: -18.003854751586914
    10. ')n' → logprob: -18.128854751586914

Token 37: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010580805974313989
    2. ' )' → logprob: -9.625105857849121
    3. ')' → logprob: -10.625105857849121
    4. ')])' → logprob: -12.125105857849121
    5. ')]
' → logprob: -12.625105857849121
    6. ' ' → logprob: -13.125105857849121
    7. '   ' → logprob: -13.250105857849121
    8. '))' → logprob: -14.625105857849121
    9. ']' → logprob: -14.625105857849121
    10. '])]' → logprob: -14.875105857849121

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889000326395035
    2. ' ' → logprob: -2.578890085220337
    3. '2' → logprob: -15.953889846801758
    4. '```' → logprob: -16.328889846801758
    5. '0' → logprob: -17.703889846801758
    6. '7' → logprob: -18.328889846801758
    7. ')' → logprob: -18.953889846801758
    8. ' ' → logprob: -19.453889846801758
    9. ' )' → logprob: -19.828889846801758
    10. '   ' → logprob: -19.953889846801758

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '2' → logprob: -17.5
    4. '0' → logprob: -17.625
    5. '```' → logprob: -18.875
    6. '   ' → logprob: -19.875
    7. ')' → logprob: -20.0
    8. '7' → logprob: -20.125
    9. '１' → logprob: -20.875
    10. '(' → logprob: -21.9375

Token 40: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001205893131555058
    2. ')' → logprob: -9.875120162963867
    3. ']' → logprob: -10.875120162963867
    4. ' )' → logprob: -11.000120162963867
    5. ')])' → logprob: -11.500120162963867
    6. '       ' → logprob: -11.625120162963867
    7. '])]' → logprob: -12.500120162963867
    8. '   ' → logprob: -12.750120162963867
    9. '])' → logprob: -13.500120162963867
    10. ')]
' → logprob: -13.625120162963867

Token 41: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4877070188522339
    2. '   ' → logprob: -1.6127070188522339
    3. '       ' → logprob: -1.7377070188522339
    4. ' self' → logprob: -5.112707138061523
    5. ' ' → logprob: -6.112707138061523
    6. 'def' → logprob: -6.362707138061523
    7. '    ' → logprob: -8.737707138061523
    8. '        
' → logprob: -9.112707138061523
    9. '  ' → logprob: -9.487707138061523
    10. '    
' → logprob: -9.737707138061523

Token 43: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.020741578191518784
    2. '.' → logprob: -3.8957414627075195
    3. '._' → logprob: -9.14574146270752
    4. ' .' → logprob: -10.77074146270752
    5. '.rev' → logprob: -11.27074146270752
    6. 'adj' → logprob: -11.52074146270752
    7. '_adj' → logprob: -11.52074146270752
    8. '.reverse' → logprob: -11.64574146270752
    9. '_.' → logprob: -12.39574146270752
    10. '_ad' → logprob: -12.39574146270752

Token 44: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003720980603247881
    2. 'd' → logprob: -6.253720760345459
    3. 'jac' → logprob: -7.003720760345459
    4. '_backward' → logprob: -7.503720760345459
    5. '_reverse' → logprob: -8.628721237182617
    6. '_forward' → logprob: -9.378721237182617
    7. 'f' → logprob: -11.003721237182617
    8. 'v' → logprob: -11.753721237182617
    9. '_back' → logprob: -12.378721237182617
    10. 's' → logprob: -12.378721237182617

Token 45: '_reverse' (ID: 112788)
  Prédit: '_backward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -0.3889683783054352
    2. '_reverse' → logprob: -1.1389683485031128
    3. '_back' → logprob: -6.388968467712402
    4. '_' → logprob: -9.013968467712402
    5. '_rev' → logprob: -9.388968467712402
    6. '_inverse' → logprob: -9.513968467712402
    7. '_re' → logprob: -9.763968467712402
    8. '_forward' → logprob: -10.138968467712402
    9. '_b' → logprob: -11.888968467712402
    10. '_return' → logprob: -12.888968467712402

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17977100610733032
    2. '=' → logprob: -1.8047709465026855
    3. '=[]' → logprob: -11.179771423339844
    4. '[' → logprob: -12.304771423339844
    5. ' ' → logprob: -12.804771423339844
    6. '_' → logprob: -13.554771423339844
    7. '   ' → logprob: -14.304771423339844
    8. ' =[' → logprob: -14.554771423339844
    9. ')' → logprob: -14.679771423339844
    10. '<|end|>' → logprob: -14.804771423339844

Token 47: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47408124804496765
    2. ' [[]' → logprob: -0.97408127784729
    3. '[]' → logprob: -13.224081039428711
    4. '[['' → logprob: -14.099081039428711
    5. ' ' → logprob: -15.099081039428711
    6. '[:]' → logprob: -15.224081039428711
    7. 'self' → logprob: -15.349081039428711
    8. '[[' → logprob: -15.474081039428711
    9. '[List' → logprob: -15.599081039428711
    10. '([' → logprob: -15.849081039428711

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05500629544258118
    2. 'for' → logprob: -2.930006265640259
    3. '(for' → logprob: -9.80500602722168
    4. ' (' → logprob: -10.43000602722168
    5. ' [' → logprob: -10.68000602722168
    6. '[' → logprob: -11.93000602722168
    7. ')' → logprob: -12.68000602722168
    8. '	for' → logprob: -12.93000602722168
    9. ' ' → logprob: -14.05500602722168
    10. '(' → logprob: -14.05500602722168

Token 49: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14399033784866333
    2. ' _' → logprob: -2.0189902782440186
    3. '_range' → logprob: -7.018990516662598
    4. ' range' → logprob: -7.893990516662598
    5. 'range' → logprob: -10.518990516662598
    6. ' (' → logprob: -11.768990516662598
    7. '(range' → logprob: -12.018990516662598
    8. ' ' → logprob: -12.893990516662598
    9. ' in' → logprob: -14.393990516662598
    10. '_in' → logprob: -14.393990516662598

Token 50: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003301881952211261
    2. ' _' → logprob: -6.503302097320557
    3. 'range' → logprob: -7.128302097320557
    4. '_range' → logprob: -7.753302097320557
    5. ' range' → logprob: -7.878302097320557
    6. ' in' → logprob: -8.628301620483398
    7. '_token' → logprob: -12.253301620483398
    8. '_in' → logprob: -13.628301620483398
    9. '(range' → logprob: -14.003301620483398
    10. '_tokens' → logprob: -14.378301620483398

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023246407508850098
    2. 'range' → logprob: -3.7732462882995605
    3. '(range' → logprob: -13.898246765136719
    4. '	range' → logprob: -18.27324676513672
    5. '_range' → logprob: -20.14824676513672
    6. ' xrange' → logprob: -20.89824676513672
    7. ' ' → logprob: -21.52324676513672
    8. '```' → logprob: -22.14824676513672
    9. '.range' → logprob: -22.39824676513672
    10. ' rango' → logprob: -23.64824676513672

Token 52: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008537048124708235
    2. ' (' → logprob: -7.125853538513184
    3. '(' → logprob: -10.000853538513184
    4. 'n' → logprob: -12.625853538513184
    5. ' n' → logprob: -14.500853538513184
    6. ' ' → logprob: -17.0008544921875
    7. ')' → logprob: -17.5008544921875
    8. 'range' → logprob: -17.7508544921875
    9. '(range' → logprob: -17.8758544921875
    10. '(s' → logprob: -17.8758544921875

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3484576344490051
    2. ' +' → logprob: -1.2234575748443604
    3. ')' → logprob: -12.098457336425781
    4. ' ' → logprob: -12.473457336425781
    5. ' ' → logprob: -13.848457336425781
    6. ' +
' → logprob: -14.348457336425781
    7. ')]' → logprob: -14.598457336425781
    8. ' plus' → logprob: -15.098457336425781
    9. '+
' → logprob: -15.223457336425781
    10. '_plus' → logprob: -15.723457336425781

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006717147771269083
    2. ' ' → logprob: -5.006717205047607
    3. ')' → logprob: -14.50671672821045
    4. '(' → logprob: -15.00671672821045
    5. 'range' → logprob: -15.38171672821045
    6. '```' → logprob: -15.88171672821045
    7. '  ' → logprob: -16.006717681884766
    8. '   ' → logprob: -16.256717681884766
    9. ' (' → logprob: -16.631717681884766
    10. '0' → logprob: -16.881717681884766

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. ')' → logprob: -17.25
    4. '```' → logprob: -18.0
    5. '0' → logprob: -18.25
    6. '   ' → logprob: -19.25
    7. '۱' → logprob: -19.625
    8. '(' → logprob: -19.875
    9. '１' → logprob: -20.125
    10. '১' → logprob: -20.6875

Token 56: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006532243569381535
    2. ']' → logprob: -7.375653266906738
    3. ')' → logprob: -11.625653266906738
    4. '])' → logprob: -12.250653266906738
    5. '])]' → logprob: -12.250653266906738
    6. '       ' → logprob: -12.625653266906738
    7. ')]
' → logprob: -13.375653266906738
    8. ')])' → logprob: -13.875653266906738
    9. ' ]' → logprob: -14.500653266906738
    10. '   ' → logprob: -14.500653266906738

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8140296936035156
    2. 'def' → logprob: -0.8140296936035156
    3. ' def' → logprob: -2.1890296936035156
    4. '
' → logprob: -6.814029693603516
    5. '	def' → logprob: -7.814029693603516
    6. '    
' → logprob: -8.439029693603516
    7. '```' → logprob: -10.189029693603516
    8. '<|end|>' → logprob: -10.689029693603516
    9. '        
' → logprob: -11.439029693603516
    10. ' 
' → logprob: -11.689029693603516

Token 58: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03426817059516907
    2. ' def' → logprob: -3.5342681407928467
    3. '   ' → logprob: -5.409268379211426
    4. '
' → logprob: -11.159268379211426
    5. '	def' → logprob: -11.159268379211426
    6. '    
' → logprob: -13.534268379211426
    7. 'de' → logprob: -13.909268379211426
    8. '```' → logprob: -14.659268379211426
    9. ' ' → logprob: -15.034268379211426
    10. '

' → logprob: -15.534268379211426

Token 59: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.09225110709667206
    2. '_add' → logprob: -2.5922510623931885
    3. ' def' → logprob: -4.967251300811768
    4. '_' → logprob: -5.342251300811768
    5. 'add' → logprob: -7.092251300811768
    6. '_insert' → logprob: -8.96725082397461
    7. '.add' → logprob: -9.21725082397461
    8. ' _' → logprob: -9.34225082397461
    9. ' addedge' → logprob: -9.34225082397461
    10. ' ' → logprob: -9.71725082397461

Token 60: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.01823703572154045
    2. '_' → logprob: -4.018237113952637
    3. '_node' → logprob: -9.893237113952637
    4. '_edges' → logprob: -10.643237113952637
    5. '_neighbor' → logprob: -12.268237113952637
    6. '_vertex' → logprob: -13.268237113952637
    7. '_connection' → logprob: -13.643237113952637
    8. '_e' → logprob: -13.768237113952637
    9. '_ed' → logprob: -14.393237113952637
    10. ' _' → logprob: -14.893237113952637

Token 61: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10273910313844681
    2. '(self' → logprob: -2.352739095687866
    3. ' (' → logprob: -6.352739334106445
    4. '<|end|>' → logprob: -7.477739334106445
    5. '(
' → logprob: -8.977739334106445
    6. 'self' → logprob: -10.852739334106445
    7. '<|end|>' → logprob: -11.102739334106445
    8. '   ' → logprob: -11.227739334106445
    9. ' ' → logprob: -11.477739334106445
    10. '(s' → logprob: -11.727739334106445

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029988480731844902
    2. ' ,' → logprob: -3.5299885272979736
    3. ',u' → logprob: -8.654988288879395
    4. 'self' → logprob: -10.654988288879395
    5. ',v' → logprob: -12.404988288879395
    6. 'u' → logprob: -12.404988288879395
    7. ',node' → logprob: -12.404988288879395
    8. ',a' → logprob: -12.654988288879395
    9. ',line' → logprob: -12.779988288879395
    10. '_,' → logprob: -12.904988288879395

Token 63: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.04014547914266586
    2. 'u' → logprob: -3.2901453971862793
    3. 'from' → logprob: -6.665145397186279
    4. ' from' → logprob: -7.290145397186279
    5. ')' → logprob: -9.665145874023438
    6. ' self' → logprob: -10.415145874023438
    7. 'self' → logprob: -10.915145874023438
    8. ' )' → logprob: -11.415145874023438
    9. '   ' → logprob: -11.790145874023438
    10. ' source' → logprob: -12.290145874023438

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007626973092556
    2. ' ,' → logprob: -4.882627010345459
    3. ',u' → logprob: -11.5076265335083
    4. '‌,' → logprob: -12.2576265335083
    5. '<|end|>' → logprob: -12.2576265335083
    6. '<|end|>' → logprob: -15.2576265335083
    7. ',user' → logprob: -15.5076265335083
    8. ')' → logprob: -15.7576265335083
    9. ',int' → logprob: -16.007627487182617
    10. '‍,' → logprob: -16.382627487182617

Token 65: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.20141693949699402
    2. 'v' → logprob: -1.7014169692993164
    3. ' ' → logprob: -14.451416969299316
    4. ')' → logprob: -14.576416969299316
    5. '	v' → logprob: -14.576416969299316
    6. ')v' → logprob: -14.576416969299316
    7. ',' → logprob: -14.701416969299316
    8. ',v' → logprob: -14.826416969299316
    9. '<|end|>' → logprob: -15.326416969299316
    10. ' )' → logprob: -15.951416969299316

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002783783129416406
    2. '):' → logprob: -8.37527847290039
    3. ' ,' → logprob: -10.00027847290039
    4. '),' → logprob: -13.75027847290039
    5. ')' → logprob: -14.25027847290039
    6. '   ' → logprob: -15.62527847290039
    7. '):
' → logprob: -15.87527847290039
    8. '‌,' → logprob: -16.00027847290039
    9. ' ):' → logprob: -16.37527847290039
    10. ',u' → logprob: -17.50027847290039

Token 67: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.10135549306869507
    2. 'w' → logprob: -2.35135555267334
    3. 'weight' → logprob: -7.35135555267334
    4. ' weight' → logprob: -8.35135555267334
    5. ' ' → logprob: -10.10135555267334
    6. 'cost' → logprob: -10.10135555267334
    7. '    ' → logprob: -10.35135555267334
    8. ',' → logprob: -10.60135555267334
    9. ')' → logprob: -10.85135555267334
    10. ' cost' → logprob: -10.97635555267334

Token 68: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010944963432848454
    2. ')' → logprob: -6.876094341278076
    3. ',' → logprob: -10.126094818115234
    4. '):
' → logprob: -11.501094818115234
    5. ' ):' → logprob: -11.626094818115234
    6. ':' → logprob: -13.376094818115234
    7. '),' → logprob: -15.501094818115234
    8. '   ' → logprob: -15.626094818115234
    9. '):
' → logprob: -15.626094818115234
    10. ')：' → logprob: -16.251094818115234

Token 69: ' idx' (ID: 14016)
  Prédit: ' forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' forward' → logprob: -0.8240049481391907
    2. 'forward' → logprob: -2.199004888534546
    3. ' is' → logprob: -2.199004888534546
    4. ' reverse' → logprob: -2.324004888534546
    5. ' directed' → logprob: -2.824004888534546
    6. 'reverse' → logprob: -3.074004888534546
    7. ' direction' → logprob: -4.199005126953125
    8. ' ' → logprob: -4.199005126953125
    9. '   ' → logprob: -4.199005126953125
    10. ')' → logprob: -4.324005126953125

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009790797717869282
    2. ')' → logprob: -4.634790897369385
    3. '):
' → logprob: -11.009790420532227
    4. ' ):' → logprob: -11.259790420532227
    5. ':' → logprob: -13.134790420532227
    6. '   ' → logprob: -13.759790420532227
    7. ',' → logprob: -14.509790420532227
    8. ''):' → logprob: -15.009790420532227
    9. ')：' → logprob: -15.259790420532227
    10. ' ' → logprob: -15.384790420532227

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02438264898955822
    2. ':' → logprob: -3.8993825912475586
    3. '):' → logprob: -5.649382591247559
    4. ',' → logprob: -10.024382591247559
    5. ' :' → logprob: -10.149382591247559
    6. '<|end|>' → logprob: -10.274382591247559
    7. '```' → logprob: -10.524382591247559
    8. '   ' → logprob: -10.524382591247559
    9. '      ' → logprob: -10.774382591247559
    10. '        
' → logprob: -11.024382591247559

Token 72: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23264849185943604
    2. ' self' → logprob: -1.982648491859436
    3. 'self' → logprob: -3.4826483726501465
    4. '        ' → logprob: -3.9826483726501465
    5. ' ' → logprob: -4.2326483726501465
    6. ' ' → logprob: -5.6076483726501465
    7. '    ' → logprob: -7.7326483726501465
    8. ')' → logprob: -8.107648849487305
    9. '   ' → logprob: -8.232648849487305
    10. '           ' → logprob: -8.482648849487305

Token 73: ' Store' (ID: 12600)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6473085284233093
    2. ' self' → logprob: -0.7723085284233093
    3. '       ' → logprob: -4.272308349609375
    4. '   ' → logprob: -7.897308349609375
    5. ' ' → logprob: -9.772308349609375
    6. '        ' → logprob: -9.897308349609375
    7. ')' → logprob: -10.147308349609375
    8. ' ' → logprob: -10.272308349609375
    9. '    ' → logprob: -10.522308349609375
    10. '```' → logprob: -10.897308349609375

Token 74: ' edges' (ID: 22569)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7546231746673584
    2. 'self' → logprob: -0.7546231746673584
    3. ' self' → logprob: -3.1296231746673584
    4. '(' → logprob: -4.7546234130859375
    5. '       ' → logprob: -6.0046234130859375
    6. '(self' → logprob: -6.2546234130859375
    7. '   ' → logprob: -7.0046234130859375
    8. ')' → logprob: -7.1296234130859375
    9. ' forward' → logprob: -8.629623413085938
    10. ' in' → logprob: -8.754623413085938

Token 75: ' separately' (ID: 37741)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8663048148155212
    2. '<|end|>' → logprob: -1.741304874420166
    3. 'self' → logprob: -2.366304874420166
    4. ',' → logprob: -2.741304874420166
    5. '.append' → logprob: -3.116304874420166
    6. '<|end|>' → logprob: -3.616304874420166
    7. '       ' → logprob: -3.741304874420166
    8. ')' → logprob: -3.866304874420166
    9. ':' → logprob: -3.991304874420166
    10. ' for' → logprob: -3.991304874420166

Token 76: ' forward' (ID: 6687)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3900872468948364
    2. ',' → logprob: -1.6400872468948364
    3. '       ' → logprob: -1.8900872468948364
    4. ')' → logprob: -2.515087127685547
    5. '_forward' → logprob: -2.515087127685547
    6. ' for' → logprob: -2.640087127685547
    7. '<|end|>' → logprob: -3.265087127685547
    8. '   ' → logprob: -3.515087127685547
    9. ' self' → logprob: -4.015087127685547
    10. ' in' → logprob: -4.390087127685547

Token 77: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5796259045600891
    2. ',' → logprob: -1.3296258449554443
    3. ')' → logprob: -1.8296258449554443
    4. ' for' → logprob: -5.954626083374023
    5. '   ' → logprob: -6.079626083374023
    6. 'ly' → logprob: -6.204626083374023
    7. '       ' → logprob: -6.454626083374023
    8. ']' → logprob: -7.079626083374023
    9. ' in' → logprob: -7.204626083374023
    10. ' ,' → logprob: -7.204626083374023

Token 78: ' backward' (ID: 58986)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.33272868394851685
    2. 'reverse' → logprob: -1.332728624343872
    3. ' backward' → logprob: -4.207728862762451
    4. '_reverse' → logprob: -5.582728862762451
    5. ' backwards' → logprob: -8.832728385925293
    6. '.reverse' → logprob: -9.332728385925293
    7. '(reverse' → logprob: -9.957728385925293
    8. '_backward' → logprob: -10.082728385925293
    9. '=' → logprob: -10.582728385925293
    10. 's' → logprob: -10.832728385925293

Token 79: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3682304620742798
    2. '<|end|>' → logprob: -1.3682304620742798
    3. '       ' → logprob: -1.4932304620742798
    4. ',' → logprob: -2.1182303428649902
    5. ')' → logprob: -3.6182303428649902
    6. '<|end|>' → logprob: -3.7432303428649902
    7. '.' → logprob: -3.8682303428649902
    8. '.append' → logprob: -3.9932303428649902
    9. '):' → logprob: -4.24323034286499
    10. '   ' → logprob: -4.49323034286499

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07959934324026108
    2. '<|end|>' → logprob: -3.579599380493164
    3. ',' → logprob: -3.954599380493164
    4. '
' → logprob: -4.579599380493164
    5. ':' → logprob: -4.954599380493164
    6. ')' → logprob: -5.079599380493164
    7. '   ' → logprob: -6.454599380493164
    8. '        
' → logprob: -6.954599380493164
    9. '.' → logprob: -7.329599380493164
    10. '<|end|>' → logprob: -7.704599380493164

Token 81: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7499778866767883
    2. '       ' → logprob: -0.9999778866767883
    3. ' self' → logprob: -1.8749778270721436
    4. ')' → logprob: -6.499978065490723
    5. '   ' → logprob: -7.374978065490723
    6. '        ' → logprob: -7.374978065490723
    7. '```' → logprob: -7.374978065490723
    8. '           ' → logprob: -7.499978065490723
    9. '<|end|>' → logprob: -7.749978065490723
    10. '        
' → logprob: -7.999978065490723

Token 82: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.00595664931461215
    2. '.' → logprob: -5.130956649780273
    3. ' .' → logprob: -10.880956649780273
    4. 'adj' → logprob: -13.755956649780273
    5. '   ' → logprob: -14.130956649780273
    6. '.import' → logprob: -14.755956649780273
    7. '`.' → logprob: -14.755956649780273
    8. '.Ad' → logprob: -14.755956649780273
    9. '.s' → logprob: -14.880956649780273
    10. '‌.' → logprob: -15.005956649780273

Token 83: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3499048352241516
    2. 'd' → logprob: -1.2249047756195068
    3. 'f' → logprob: -7.474905014038086
    4. 'g' → logprob: -7.849905014038086
    5. '_j' → logprob: -9.474905014038086
    6. '_' → logprob: -9.724905014038086
    7. ' d' → logprob: -9.974905014038086
    8. 'dj' → logprob: -9.974905014038086
    9. '_d' → logprob: -10.224905014038086
    10. '```' → logprob: -10.474905014038086

Token 84: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -2.7133641196996905e-05
    2. '_f' → logprob: -11.00002670288086
    3. '_' → logprob: -12.50002670288086
    4. '_backward' → logprob: -12.62502670288086
    5. '_for' → logprob: -12.87502670288086
    6. '_FORWARD' → logprob: -16.00002670288086
    7. '```' → logprob: -16.37502670288086
    8. ')_' → logprob: -16.37502670288086
    9. ' _' → logprob: -16.75002670288086
    10. '_fore' → logprob: -17.25002670288086

Token 85: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.500003814697266
    3. '[v' → logprob: -15.625003814697266
    4. ' [' → logprob: -17.750003814697266
    5. 'u' → logprob: -18.000003814697266
    6. '[user' → logprob: -18.500003814697266
    7. '[self' → logprob: -19.750003814697266
    8. '[s' → logprob: -20.250003814697266
    9. '```' → logprob: -20.625003814697266
    10. '(u' → logprob: -21.125003814697266

Token 86: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0069299195893108845
    2. ').' → logprob: -5.131929874420166
    3. '.append' → logprob: -7.631929874420166
    4. ']' → logprob: -8.131930351257324
    5. '.' → logprob: -9.006930351257324
    6. ' ].' → logprob: -9.506930351257324
    7. '   ' → logprob: -11.756930351257324
    8. ')' → logprob: -12.131930351257324
    9. '       ' → logprob: -12.756930351257324
    10. ',' → logprob: -13.006930351257324

Token 87: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -16.25
    3. ' append' → logprob: -16.375
    4. 'app' → logprob: -17.375
    5. '_append' → logprob: -18.125
    6. 'Append' → logprob: -20.5
    7. 'appen' → logprob: -20.5
    8. 'push' → logprob: -20.625
    9. ' ' → logprob: -21.25
    10. '	append' → logprob: -21.625

Token 88: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008625920861959457
    2. '(' → logprob: -4.7586259841918945
    3. ' (' → logprob: -12.133625984191895
    4. '(v' → logprob: -12.383625984191895
    5. ' ((' → logprob: -13.758625984191895
    6. '(('' → logprob: -15.258625984191895
    7. '([' → logprob: -15.758625984191895
    8. '(
' → logprob: -16.008625030517578
    9. ' ' → logprob: -17.508625030517578
    10. '<|end|>' → logprob: -17.633625030517578

Token 89: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -8.41866585687967e-06
    2. ' v' → logprob: -11.750008583068848
    3. '(v' → logprob: -14.750008583068848
    4. ')v' → logprob: -18.00000762939453
    5. '	v' → logprob: -18.62500762939453
    6. 'vq' → logprob: -18.75000762939453
    7. ',v' → logprob: -19.37500762939453
    8. '?v' → logprob: -19.62500762939453
    9. '   ' → logprob: -20.00000762939453
    10. '[v' → logprob: -20.25000762939453

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005060884868726134
    2. ' ,' → logprob: -7.7505059242248535
    3. ',w' → logprob: -9.500506401062012
    4. '<|end|>' → logprob: -15.500506401062012
    5. '‌,' → logprob: -15.625506401062012
    6. 'w' → logprob: -16.125505447387695
    7. ',
' → logprob: -17.000505447387695
    8. '`,' → logprob: -17.250505447387695
    9. '),' → logprob: -17.750505447387695
    10. '```' → logprob: -18.500505447387695

Token 91: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.11461974680423737
    2. 'w' → logprob: -2.239619731903076
    3. ' ' → logprob: -6.364619731903076
    4. ' ' → logprob: -10.114620208740234
    5. ' 
' → logprob: -11.489620208740234
    6. ')' → logprob: -12.114620208740234
    7. '<|end|>' → logprob: -12.239620208740234
    8. ',' → logprob: -12.739620208740234
    9. 'space' → logprob: -13.739620208740234
    10. '  
' → logprob: -13.864620208740234

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012797261297237128
    2. ' ,' → logprob: -9.125127792358398
    3. ')' → logprob: -11.000127792358398
    4. '),' → logprob: -14.500127792358398
    5. '))' → logprob: -14.875127792358398
    6. ',)' → logprob: -14.875127792358398
    7. '‌,' → logprob: -15.625127792358398
    8. ',index' → logprob: -15.625127792358398
    9. '<|end|>' → logprob: -16.0001277923584
    10. ',
' → logprob: -16.2501277923584

Token 93: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2519395649433136
    2. ' idx' → logprob: -1.5019395351409912
    3. '	idx' → logprob: -12.00193977355957
    4. ' ' → logprob: -13.12693977355957
    5. ')' → logprob: -14.62693977355957
    6. '[idx' → logprob: -14.62693977355957
    7. '  ' → logprob: -14.87693977355957
    8. '   ' → logprob: -15.12693977355957
    9. '_idx' → logprob: -15.50193977355957
    10. '(idx' → logprob: -15.75193977355957

Token 94: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1602552980184555
    2. ')' → logprob: -1.9102553129196167
    3. ',' → logprob: -11.660255432128906
    4. '),' → logprob: -11.785255432128906
    5. ')))' → logprob: -12.160255432128906
    6. '))
' → logprob: -12.285255432128906
    7. ' ))' → logprob: -13.035255432128906
    8. ' )' → logprob: -14.035255432128906
    9. ')
' → logprob: -14.285255432128906
    10. '));' → logprob: -15.035255432128906

Token 95: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7075018286705017
    2. '       ' → logprob: -0.7075018286705017
    3. ')
' → logprob: -4.9575018882751465
    4. '
' → logprob: -5.8325018882751465
    5. '<|end|>' → logprob: -6.5825018882751465
    6. '        
' → logprob: -7.4575018882751465
    7. '   ' → logprob: -7.5825018882751465
    8. '	' → logprob: -7.9575018882751465
    9. ' )' → logprob: -8.207501411437988
    10. '  
' → logprob: -8.332501411437988

Token 96: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4407002925872803
    2. 'self' (adapté à ' self') → logprob: -1.3157002925872803
    3. ' self' → logprob: -2.4407002925872803
    4. ' ' → logprob: -7.190700531005859
    5. '	self' → logprob: -9.56570053100586
    6. ')' → logprob: -10.06570053100586
    7. '<|end|>' → logprob: -10.44070053100586
    8. '   ' → logprob: -10.56570053100586
    9. ' ' → logprob: -10.56570053100586
    10. '```' → logprob: -11.69070053100586

Token 97: '.ad' (ID: 19775)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6934881210327148
    2. '.ad' → logprob: -0.6934881210327148
    3. ' .' → logprob: -9.068488121032715
    4. '.
' → logprob: -10.318488121032715
    5. '
' → logprob: -10.443488121032715
    6. '.user' → logprob: -10.443488121032715
    7. '`.' → logprob: -10.943488121032715
    8. '<|end|>' → logprob: -11.318488121032715
    9. '<|end|>' → logprob: -11.693488121032715
    10. 's' → logprob: -11.818488121032715

Token 98: 'j' (ID: 73)
  Prédit: '_reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reverse' → logprob: -0.019298039376735687
    2. 'j' → logprob: -4.019298076629639
    3. 'f' → logprob: -7.769298076629639
    4. '_forward' → logprob: -7.894298076629639
    5. 'd' → logprob: -9.64429759979248
    6. 'reverse' → logprob: -10.26929759979248
    7. '_rev' → logprob: -10.39429759979248
    8. 'v' → logprob: -10.51929759979248
    9. '_backward' → logprob: -10.89429759979248
    10. '_re' → logprob: -11.01929759979248

Token 99: '_reverse' (ID: 112788)
  Prédit: '_reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reverse' → logprob: -0.000399925687815994
    2. '_forward' → logprob: -8.000399589538574
    3. '_backward' → logprob: -10.375399589538574
    4. '_' → logprob: -11.375399589538574
    5. '_re' → logprob: -12.125399589538574
    6. '_repeat' → logprob: -13.000399589538574
    7. 'reverse' → logprob: -13.875399589538574
    8. '_previous' → logprob: -13.875399589538574
    9. '_replace' → logprob: -14.000399589538574
    10. '_finalize' → logprob: -14.125399589538574

Token 100: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.5094070477061905e-05
    2. '[' → logprob: -11.500015258789062
    3. ' [' → logprob: -13.000015258789062
    4. '[u' → logprob: -13.250015258789062
    5. 'v' → logprob: -14.875015258789062
    6. '```' → logprob: -16.125015258789062
    7. '

' → logprob: -16.500015258789062
    8. '[V' → logprob: -16.625015258789062
    9. ' ' → logprob: -16.875015258789062
    10. ')[' → logprob: -17.000015258789062

Token 101: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0023378278128802776
    2. '.append' → logprob: -6.25233793258667
    3. '.' → logprob: -8.127337455749512
    4. ')' → logprob: -9.877337455749512
    5. '].' → logprob: -10.127337455749512
    6. ' ).' → logprob: -11.627337455749512
    7. '   ' → logprob: -12.002337455749512
    8. '`).' → logprob: -13.002337455749512
    9. '}.' → logprob: -13.502337455749512
    10. ',' → logprob: -13.752337455749512

Token 102: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.4121114822482923e-06
    2. '.append' → logprob: -13.125003814697266
    3. ' append' → logprob: -13.750003814697266
    4. 'appen' → logprob: -16.000003814697266
    5. '	append' → logprob: -16.625003814697266
    6. 'Append' → logprob: -17.875003814697266
    7. 'push' → logprob: -18.750003814697266
    8. '_append' → logprob: -18.875003814697266
    9. 'add' → logprob: -19.000003814697266
    10. 'pend' → logprob: -19.125003814697266

Token 103: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -6.468279752880335e-05
    2. '(u' → logprob: -10.000064849853516
    3. '(' → logprob: -10.875064849853516
    4. ' ((' → logprob: -16.125064849853516
    5. '(
' → logprob: -16.250064849853516
    6. ' (' → logprob: -18.250064849853516
    7. ' ' → logprob: -19.125064849853516
    8. 'u' → logprob: -19.500064849853516
    9. '(()' → logprob: -20.125064849853516
    10. '[(' → logprob: -20.250064849853516

Token 104: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.003518233075737953
    2. ' u' → logprob: -5.753518104553223
    3. '(u' → logprob: -8.003518104553223
    4. ' (' → logprob: -13.003518104553223
    5. '	u' → logprob: -13.503518104553223
    6. ' ' → logprob: -14.003518104553223
    7. '
' → logprob: -15.128518104553223
    8. '   ' → logprob: -15.128518104553223
    9. ',u' → logprob: -15.503518104553223
    10. '[u' → logprob: -15.628518104553223

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002043748099822551
    2. ' ,' → logprob: -8.750204086303711
    3. ',w' → logprob: -10.000204086303711
    4. 'w' → logprob: -15.750204086303711
    5. ',
' → logprob: -16.87520408630371
    6. ' ' → logprob: -17.00020408630371
    7. '‌,' → logprob: -17.12520408630371
    8. '`,' → logprob: -17.62520408630371
    9. '),' → logprob: -17.75020408630371
    10. ')' → logprob: -17.75020408630371

Token 106: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.3133161664009094
    2. 'w' → logprob: -1.3133161067962646
    3. ' ' → logprob: -10.313316345214844
    4. ' 
' → logprob: -12.188316345214844
    5. '<|end|>' → logprob: -12.188316345214844
    6. ' ' → logprob: -13.063316345214844
    7. '
' → logprob: -13.438316345214844
    8. ',' → logprob: -13.563316345214844
    9. '    ' → logprob: -14.188316345214844
    10. '1' → logprob: -14.500816345214844

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005535095697268844
    2. ' ,' → logprob: -7.500553607940674
    3. ',
' → logprob: -15.375553131103516
    4. ')' → logprob: -15.500553131103516
    5. '‌,' → logprob: -16.500553131103516
    6. ' ' → logprob: -16.875553131103516
    7. ',index' → logprob: -17.625553131103516
    8. '),' → logprob: -17.875553131103516
    9. '<|end|>' → logprob: -18.250553131103516
    10. '	' → logprob: -18.375553131103516

Token 108: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5759792327880859
    2. ' idx' → logprob: -0.8259792327880859
    3. ' ' → logprob: -11.325979232788086
    4. ')' → logprob: -11.700979232788086
    5. '	idx' → logprob: -11.825979232788086
    6. ' )' → logprob: -13.450979232788086
    7. '
' → logprob: -13.575979232788086
    8. '[idx' → logprob: -13.825979232788086
    9. '(idx' → logprob: -13.825979232788086
    10. '  ' → logprob: -13.950979232788086

Token 109: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011474833445390686
    2. '))' → logprob: -9.500114440917969
    3. ')
' → logprob: -10.250114440917969
    4. ' )' → logprob: -12.375114440917969
    5. ')

' → logprob: -16.00011444091797
    6. '       ' → logprob: -17.37511444091797
    7. ')))' → logprob: -18.00011444091797
    8. '   ' → logprob: -18.00011444091797
    9. ')`' → logprob: -18.12511444091797
    10. '<|end|>' → logprob: -18.37511444091797

Token 110: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4532496929168701
    2. '
' → logprob: -1.0782496929168701
    3. 'def' → logprob: -4.203249931335449
    4. '    
' → logprob: -5.328249931335449
    5. '```' → logprob: -6.078249931335449
    6. ' def' → logprob: -6.703249931335449
    7. ' 
' → logprob: -7.828249931335449
    8. '<|end|>' → logprob: -8.82824993133545
    9. '

' → logprob: -9.20324993133545
    10. '        
' → logprob: -9.32824993133545

Token 111: ' Short' (ID: 15362)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.440006822347641
    2. ' ' → logprob: -1.1900068521499634
    3. ' Graph' → logprob: -4.190006732940674
    4. ' Dj' → logprob: -4.565006732940674
    5. ' A' → logprob: -4.815006732940674
    6. ' Solution' → logprob: -5.690006732940674
    7. ' d' → logprob: -6.065006732940674
    8. ' Space' → logprob: -6.440006732940674
    9. ' ' → logprob: -6.690006732940674
    10. ' Solver' → logprob: -6.815006732940674

Token 112: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0018763974076136947
    2. 'path' → logprob: -6.376876354217529
    3. '_path' → logprob: -9.626876831054688
    4. 'Path' → logprob: -9.876876831054688
    5. 'cut' → logprob: -10.501876831054688
    6. ' path' → logprob: -12.501876831054688
    7. 'e' → logprob: -12.751876831054688
    8. '

' → logprob: -12.751876831054688
    9. '```' → logprob: -13.001876831054688
    10. 'paths' → logprob: -13.126876831054688

Token 113: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.03162354975938797
    2. 'Paths' → logprob: -3.531623601913452
    3. '_path' → logprob: -6.906623363494873
    4. '_paths' → logprob: -7.406623363494873
    5. 'path' → logprob: -8.781623840332031
    6. 'paths' → logprob: -11.031623840332031
    7. '_Path' → logprob: -11.031623840332031
    8. 'Pat' → logprob: -11.156623840332031
    9. 'Distance' → logprob: -11.281623840332031
    10. 'P' → logprob: -11.906623840332031

Token 114: 'Finder' (ID: 42976)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28929656744003296
    2. 'Finder' → logprob: -1.6642966270446777
    3. 'Calculator' → logprob: -3.4142966270446777
    4. 'Solver' → logprob: -3.9142966270446777
    5. ':
' → logprob: -6.289296627044678
    6. '(' → logprob: -6.414296627044678
    7. 'Optimizer' → logprob: -6.789296627044678
    8. 'Algorithm' → logprob: -6.789296627044678
    9. '{' → logprob: -7.414296627044678
    10. 'Finding' → logprob: -7.664296627044678

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031443238258361816
    2. ' :' → logprob: -6.003144264221191
    3. '(' → logprob: -7.753144264221191
    4. ':
' → logprob: -9.253144264221191
    5. '<|end|>' → logprob: -9.378144264221191
    6. '):' → logprob: -10.753144264221191
    7. '   ' → logprob: -11.378144264221191
    8. ':def' → logprob: -12.503144264221191
    9. '():' → logprob: -12.753144264221191
    10. '<|end|>' → logprob: -13.003144264221191

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02918125130236149
    2. ' def' → logprob: -4.404181480407715
    3. '    
' → logprob: -4.529181480407715
    4. ' 
' → logprob: -5.904181480407715
    5. '    ' → logprob: -6.654181480407715
    6. '(' → logprob: -7.904181480407715
    7. '<|end|>' → logprob: -8.029181480407715
    8. '     
' → logprob: -8.154181480407715
    9. ' ' → logprob: -8.904181480407715
    10. 'def' → logprob: -9.779181480407715

Token 117: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.01698072999715805
    2. '   ' → logprob: -4.1419806480407715
    3. 'def' (adapté à ' def') → logprob: -7.5169806480407715
    4. ' ' → logprob: -8.39198112487793
    5. ' 
' → logprob: -9.51698112487793
    6. '    ' → logprob: -9.76698112487793
    7. '    
' → logprob: -11.76698112487793
    8. ' ' → logprob: -11.89198112487793
    9. '_' → logprob: -12.14198112487793
    10. '  ' → logprob: -12.39198112487793

Token 118: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.80403733253479
    2. ' __' → logprob: -1.30403733253479
    3. ' init' → logprob: -2.17903733253479
    4. ' _' → logprob: -2.92903733253479
    5. ' def' → logprob: -3.05403733253479
    6. '_init' → logprob: -3.17903733253479
    7. '_' → logprob: -4.554037094116211
    8. ' ' → logprob: -4.679037094116211
    9. ' find' → logprob: -6.429037094116211
    10. 'init' → logprob: -6.804037094116211

Token 119: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.1008713702030946e-06
    2. 'i' → logprob: -13.750001907348633
    3. ' init' → logprob: -14.875001907348633
    4. 'in' → logprob: -15.000001907348633
    5. 'ini' → logprob: -15.625001907348633
    6. 'def' → logprob: -16.375001907348633
    7. 'inite' → logprob: -16.750001907348633
    8. '   ' → logprob: -16.875001907348633
    9. 'int' → logprob: -18.000001907348633
    10. '	init' → logprob: -18.125001907348633

Token 120: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005399276851676404
    2. '__' → logprob: -7.875539779663086
    3. '__(
' → logprob: -9.500539779663086
    4. '(self' → logprob: -10.125539779663086
    5. '(' → logprob: -10.375539779663086
    6. ' (' → logprob: -12.250539779663086
    7. '__((' → logprob: -12.250539779663086
    8. '<|end|>' → logprob: -13.625539779663086
    9. '_(' → logprob: -13.875539779663086
    10. '_' → logprob: -14.500539779663086

Token 121: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03806869313120842
    2. ' self' → logprob: -3.2880687713623047
    3. 'graph' → logprob: -11.163068771362305
    4. '
' → logprob: -12.538068771362305
    5. ',' → logprob: -13.038068771362305
    6. '(self' → logprob: -13.163068771362305
    7. '       ' → logprob: -13.163068771362305
    8. ')' → logprob: -13.788068771362305
    9. '	self' → logprob: -14.538068771362305
    10. '   ' → logprob: -14.913068771362305

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011050059460103512
    2. ' ,' → logprob: -4.511050224304199
    3. 'self' → logprob: -14.3860502243042
    4. '‌,' → logprob: -14.6360502243042
    5. ' ' → logprob: -14.8860502243042
    6. '<|end|>' → logprob: -15.5110502243042
    7. ')' → logprob: -15.6360502243042
    8. ',self' → logprob: -16.136049270629883
    9. '‍,' → logprob: -16.386049270629883
    10. ' )' → logprob: -16.511049270629883

Token 123: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.03811688721179962
    2. 'graph' → logprob: -3.288116931915283
    3. ' self' → logprob: -10.413116455078125
    4. 'self' → logprob: -10.538116455078125
    5. '	graph' → logprob: -11.663116455078125
    6. ' g' → logprob: -12.913116455078125
    7. 'Graph' → logprob: -13.038116455078125
    8. 'g' → logprob: -14.038116455078125
    9. '```' → logprob: -14.163116455078125
    10. ' n' → logprob: -14.413116455078125

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05565563961863518
    2. ',' → logprob: -2.9306557178497314
    3. '):
' → logprob: -7.305655479431152
    4. ' ):' → logprob: -9.805655479431152
    5. ')' → logprob: -10.305655479431152
    6. ':' → logprob: -12.430655479431152
    7. '   ' → logprob: -12.930655479431152
    8. ' ,' → logprob: -13.180655479431152
    9. ' ' → logprob: -14.055655479431152
    10. '(graph' → logprob: -14.555655479431152

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006294802762567997
    2. '<|end|>' → logprob: -6.2562947273254395
    3. '        
' → logprob: -6.5062947273254395
    4. '   ' → logprob: -7.0062947273254395
    5. ')' → logprob: -7.6312947273254395
    6. '    ' → logprob: -7.8812947273254395
    7. ' 
' → logprob: -8.131295204162598
    8. ',' → logprob: -8.756295204162598
    9. ' self' → logprob: -9.256295204162598
    10. '    
' → logprob: -9.506295204162598

Token 126: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.018497683107852936
    2. 'self' (adapté à ' self') → logprob: -4.143497467041016
    3. '       ' → logprob: -6.018497467041016
    4. ' graph' → logprob: -11.518497467041016
    5. '        ' → logprob: -11.768497467041016
    6. 'graph' → logprob: -12.518497467041016
    7. ' ' → logprob: -13.393497467041016
    8. ' ' → logprob: -13.518497467041016
    9. '   ' → logprob: -14.393497467041016
    10. ' 
' → logprob: -14.768497467041016

Token 127: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.09667409211397171
    2. '.' → logprob: -2.5966742038726807
    3. ' .' → logprob: -4.096673965454102
    4. '.g' → logprob: -8.096673965454102
    5. ' ' → logprob: -8.721673965454102
    6. ' =' → logprob: -9.346673965454102
    7. '.Graph' → logprob: -9.471673965454102
    8. '.user' → logprob: -9.596673965454102
    9. 'graph' → logprob: -10.471673965454102
    10. '=' → logprob: -10.471673965454102

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016078125685453415
    2. '=' → logprob: -4.141077995300293
    3. '.' → logprob: -10.766077995300293
    4. ' ' → logprob: -11.141077995300293
    5. '.graph' → logprob: -12.516077995300293
    6. '  ' → logprob: -13.891077995300293
    7. ' =
' → logprob: -13.891077995300293
    8. '   ' → logprob: -14.391077995300293
    9. '.=' → logprob: -14.891077995300293
    10. '	' → logprob: -15.141077995300293

Token 129: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.31340670585632324
    2. 'graph' → logprob: -1.3134067058563232
    3. '	graph' → logprob: -8.938406944274902
    4. '(graph' → logprob: -11.688406944274902
    5. 'Graph' → logprob: -13.438406944274902
    6. '_graph' → logprob: -13.688406944274902
    7. '.graph' → logprob: -13.938406944274902
    8. '
' → logprob: -14.313406944274902
    9. ' ' → logprob: -15.063406944274902
    10. '<|end|>' → logprob: -15.188406944274902

Token 130: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04325814172625542
    2. '<|end|>' → logprob: -3.4182581901550293
    3. '

' → logprob: -5.293258190155029
    4. '   ' → logprob: -6.168258190155029
    5. '    
' → logprob: -7.168258190155029
    6. '<|end|>' → logprob: -7.168258190155029
    7. 'def' → logprob: -8.293257713317871
    8. ' 
' → logprob: -8.668257713317871
    9. ' def' → logprob: -9.043257713317871
    10. '  
' → logprob: -9.168257713317871

Token 131: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008167007938027382
    2. '<|end|>' → logprob: -5.758166790008545
    3. '

' → logprob: -6.383166790008545
    4. '    
' → logprob: -6.633166790008545
    5. '   ' → logprob: -7.133166790008545
    6. ' 
' → logprob: -7.383166790008545
    7. '  
' → logprob: -8.008167266845703
    8. '<|end|>' → logprob: -9.758167266845703
    9. 'def' → logprob: -10.383167266845703
    10. ' ' → logprob: -10.758167266845703

Token 132: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15416133403778076
    2. ' self' → logprob: -2.2791614532470703
    3. 'def' → logprob: -3.5291614532470703
    4. '       ' → logprob: -5.02916145324707
    5. '   ' → logprob: -6.02916145324707
    6. 'import' → logprob: -6.52916145324707
    7. ' def' → logprob: -8.15416145324707
    8. '    ' → logprob: -9.15416145324707
    9. 'dist' → logprob: -9.52916145324707
    10. ' ' → logprob: -9.65416145324707

Token 133: '.n' (ID: 1835)
  Prédit: '.dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.07620896399021149
    2. ' .' → logprob: -3.20120906829834
    3. '.' → logprob: -4.32620906829834
    4. '.distance' → logprob: -4.45120906829834
    5. '.inf' → logprob: -5.57620906829834
    6. 'dist' → logprob: -6.82620906829834
    7. ' dist' → logprob: -7.70120906829834
    8. '.dp' → logprob: -7.95120906829834
    9. '.dis' → logprob: -8.32620906829834
    10. '.d' → logprob: -8.57620906829834

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07746929675340652
    2. '<|end|>' → logprob: -3.4524693489074707
    3. '=' → logprob: -3.7024693489074707
    4. ' ' → logprob: -4.577469348907471
    5. ',' → logprob: -5.702469348907471
    6. '<|end|>' → logprob: -6.452469348907471
    7. '  ' → logprob: -7.077469348907471
    8. '+' → logprob: -7.202469348907471
    9. '    ' → logprob: -7.452469348907471
    10. ')' → logprob: -8.452468872070312

Token 135: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.07891920208930969
    2. 'graph' → logprob: -2.5789191722869873
    3. '	graph' → logprob: -10.703919410705566
    4. ' self' → logprob: -12.578919410705566
    5. '(graph' → logprob: -13.328919410705566
    6. 'self' → logprob: -13.703919410705566
    7. '.graph' → logprob: -15.703919410705566
    8. '_graph' → logprob: -15.703919410705566
    9. ' ' → logprob: -15.828919410705566
    10. 'graphql' → logprob: -16.82891845703125

Token 136: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.043268874287605286
    2. '.' → logprob: -3.168268918991089
    3. ' .' → logprob: -8.293269157409668
    4. '<|end|>' → logprob: -12.293269157409668
    5. '<|end|>' → logprob: -12.918269157409668
    6. '
' → logprob: -13.293269157409668
    7. ' ' → logprob: -13.793269157409668
    8. '.nl' → logprob: -13.918269157409668
    9. '‌.' → logprob: -14.043269157409668
    10. '.user' → logprob: -14.293269157409668

Token 137: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13381950557231903
    2. '<|end|>' → logprob: -2.258819580078125
    3. '       ' → logprob: -4.133819580078125
    4. '   ' → logprob: -6.883819580078125
    5. '    
' → logprob: -7.258819580078125
    6. '        
' → logprob: -7.508819580078125
    7. ' 
' → logprob: -7.508819580078125
    8. '  
' → logprob: -7.633819580078125
    9. ',' → logprob: -8.133819580078125
    10. ' ' → logprob: -8.133819580078125

Token 138: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059619538486003876
    2. '<|end|>' → logprob: -3.434619426727295
    3. ' 
' → logprob: -4.559619426727295
    4. '

' → logprob: -4.809619426727295
    5. '   ' → logprob: -6.559619426727295
    6. ' def' → logprob: -6.559619426727295
    7. 'def' → logprob: -6.934619426727295
    8. '    
' → logprob: -6.934619426727295
    9. '  
' → logprob: -7.184619426727295
    10. ' ' → logprob: -7.309619426727295

Token 139: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9301900267601013
    2. 'self' (adapté à ' self') → logprob: -1.055190086364746
    3. 'import' → logprob: -2.055190086364746
    4. 'def' → logprob: -2.805190086364746
    5. ' def' → logprob: -3.930190086364746
    6. '       ' → logprob: -4.055190086364746
    7. '   ' → logprob: -4.055190086364746
    8. ' import' → logprob: -5.305190086364746
    9. 'INF' → logprob: -5.930190086364746
    10. '    ' → logprob: -6.930190086364746

Token 140: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.38659006357192993
    2. ' .' → logprob: -2.636590003967285
    3. 'dist' → logprob: -2.761590003967285
    4. '_dist' → logprob: -3.136590003967285
    5. ' dist' → logprob: -3.386590003967285
    6. '.inf' → logprob: -3.886590003967285
    7. '.' → logprob: -4.261590003967285
    8. '.distance' → logprob: -4.261590003967285
    9. '._' → logprob: -4.511590003967285
    10. '_distance' → logprob: -4.636590003967285

Token 141: '_from' (ID: 12526)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.2797669470310211
    2. ' =' → logprob: -1.5297669172286987
    3. '_' → logprob: -4.029767036437988
    4. '=' → logprob: -5.279767036437988
    5. '_f' → logprob: -6.279767036437988
    6. 'forward' → logprob: -7.654767036437988
    7. ' ' → logprob: -7.779767036437988
    8. 'Forward' → logprob: -8.279767036437988
    9. '   ' → logprob: -8.529767036437988
    10. ',' → logprob: -8.529767036437988

Token 142: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.742500901222229
    2. '_source' → logprob: -0.867500901222229
    3. '_s' → logprob: -2.9925007820129395
    4. 'start' → logprob: -4.3675007820129395
    5. 's' → logprob: -4.4925007820129395
    6. '_src' → logprob: -4.6175007820129395
    7. 'source' → logprob: -5.1175007820129395
    8. '_' → logprob: -5.9925007820129395
    9. '[' → logprob: -6.4925007820129395
    10. '<|end|>' → logprob: -6.4925007820129395

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009683613665401936
    2. '=' → logprob: -4.759683609008789
    3. ' ' → logprob: -7.009683609008789
    4. ',' → logprob: -9.509683609008789
    5. '[' → logprob: -9.759683609008789
    6. '  ' → logprob: -11.884683609008789
    7. ' ,' → logprob: -12.009683609008789
    8. ' =[' → logprob: -12.009683609008789
    9. ' =
' → logprob: -12.634683609008789
    10. ')' → logprob: -13.009683609008789

Token 144: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31335580348968506
    2. ' [' → logprob: -1.313355803489685
    3. '[self' → logprob: -10.188355445861816
    4. '[int' → logprob: -10.438355445861816
    5. '[node' → logprob: -12.313355445861816
    6. '[s' → logprob: -12.563355445861816
    7. '[n' → logprob: -12.688355445861816
    8. '[class' → logprob: -12.938355445861816
    9. '[-' → logprob: -13.063355445861816
    10. '[src' → logprob: -13.438355445861816

Token 145: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004186909645795822
    2. ' float' → logprob: -5.504187107086182
    3. 'sys' → logprob: -9.254186630249023
    4. ' sys' → logprob: -11.629186630249023
    5. '10' → logprob: -14.379186630249023
    6. '(float' → logprob: -14.379186630249023
    7. 'int' → logprob: -14.504186630249023
    8. ',float' → logprob: -14.504186630249023
    9. '0' → logprob: -14.629186630249023
    10. 'inf' → logprob: -15.129186630249023

Token 146: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.534558552724775e-05
    2. '(' → logprob: -11.625025749206543
    3. ''in' → logprob: -12.000025749206543
    4. ''' → logprob: -13.000025749206543
    5. '("' → logprob: -13.125025749206543
    6. ' ('' → logprob: -13.125025749206543
    7. ']' → logprob: -13.250025749206543
    8. 'inf' → logprob: -13.750025749206543
    9. '   ' → logprob: -14.875025749206543
    10. '(in' → logprob: -15.250025749206543

Token 147: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.7432603272027336e-06
    2. ' inf' → logprob: -13.375001907348633
    3. 'in' → logprob: -16.500001907348633
    4. '')' → logprob: -16.875001907348633
    5. '_inf' → logprob: -17.875001907348633
    6. '-inf' → logprob: -18.375001907348633
    7. '.inf' → logprob: -20.000001907348633
    8. 'info' → logprob: -20.125001907348633
    9. ''' → logprob: -20.125001907348633
    10. ')' → logprob: -20.250001907348633

Token 148: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.06791778653860092
    2. ')]' → logprob: -2.817917823791504
    3. ']' → logprob: -5.942917823791504
    4. ')' → logprob: -6.442917823791504
    5. '')' → logprob: -6.817917823791504
    6. ''),' → logprob: -8.192917823791504
    7. ' '' → logprob: -8.942917823791504
    8. '),' → logprob: -9.817917823791504
    9. '")]' → logprob: -10.192917823791504
    10. ',' → logprob: -10.317917823791504

Token 149: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31720516085624695
    2. ',' → logprob: -1.9422051906585693
    3. ' for' → logprob: -2.3172051906585693
    4. ' *' → logprob: -4.31720495223999
    5. ')' → logprob: -5.19220495223999
    6. '*' → logprob: -5.31720495223999
    7. ' ]' → logprob: -6.56720495223999
    8. ' ' → logprob: -6.69220495223999
    9. 'for' → logprob: -6.81720495223999
    10. ']*(' → logprob: -6.94220495223999

Token 150: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18347442150115967
    2. ' (' → logprob: -1.8084744215011597
    3. '(' → logprob: -5.808474540710449
    4. '(n' → logprob: -7.308474540710449
    5. 'self' → logprob: -11.18347454071045
    6. '(len' → logprob: -11.68347454071045
    7. '<|end|>' → logprob: -11.80847454071045
    8. '(this' → logprob: -12.30847454071045
    9. '(
' → logprob: -12.68347454071045
    10. '(next' → logprob: -12.93347454071045

Token 151: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1216735914349556
    2. '(self' → logprob: -2.371673583984375
    3. ' self' → logprob: -3.871673583984375
    4. ' (' → logprob: -7.871673583984375
    5. '
' → logprob: -11.621673583984375
    6. '[self' → logprob: -11.996673583984375
    7. '   ' → logprob: -12.121673583984375
    8. '(' → logprob: -12.496673583984375
    9. ' ' → logprob: -13.121673583984375
    10. '	self' → logprob: -13.996673583984375

Token 152: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0008975276723504066
    2. '.' → logprob: -7.125897407531738
    3. ' .' → logprob: -9.625897407531738
    4. 'n' → logprob: -11.125897407531738
    5. '.
' → logprob: -12.500897407531738
    6. '
' → logprob: -12.625897407531738
    7. ' ' → logprob: -13.875897407531738
    8. '	n' → logprob: -14.375897407531738
    9. '```' → logprob: -14.375897407531738
    10. ')' → logprob: -14.750897407531738

Token 153: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931835412979126
    2. ' +' → logprob: -0.6931835412979126
    3. ' ' → logprob: -11.193183898925781
    4. ')' → logprob: -11.693183898925781
    5. ' +
' → logprob: -12.068183898925781
    6. '1' → logprob: -12.318183898925781
    7. '+
' → logprob: -13.193183898925781
    8. '+)' → logprob: -14.693183898925781
    9. ' )' → logprob: -14.693183898925781
    10. '[' → logprob: -15.443183898925781

Token 154: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06197138875722885
    2. ' ' → logprob: -2.811971426010132
    3. ')' → logprob: -13.811971664428711
    4. '
' → logprob: -14.311971664428711
    5. '```' → logprob: -14.311971664428711
    6. '<|end|>' → logprob: -15.061971664428711
    7. '  ' → logprob: -15.624471664428711
    8. '

' → logprob: -15.749471664428711
    9. '   ' → logprob: -15.936971664428711
    10. ' )' → logprob: -16.18697166442871

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. ')' → logprob: -16.625017166137695
    4. '```' → logprob: -16.875017166137695
    5. '
' → logprob: -18.250017166137695
    6. '   ' → logprob: -18.500017166137695
    7. '۱' → logprob: -18.625017166137695
    8. '１' → logprob: -19.500017166137695
    9. '

' → logprob: -19.500017166137695
    10. '2' → logprob: -19.562517166137695

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019424250058364123
    2. ')
' → logprob: -8.625194549560547
    3. ' )' → logprob: -11.875194549560547
    4. '<|end|>' → logprob: -11.875194549560547
    5. ')

' → logprob: -16.000194549560547
    6. '),' → logprob: -16.125194549560547
    7. '```' → logprob: -16.875194549560547
    8. ' ' → logprob: -16.875194549560547
    9. '<|end|>' → logprob: -17.000194549560547
    10. ')\
' → logprob: -17.250194549560547

Token 157: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009179589338600636
    2. ' self' → logprob: -5.134179592132568
    3. '       ' → logprob: -5.759179592132568
    4. '   ' → logprob: -10.13417911529541
    5. '	self' → logprob: -10.50917911529541
    6. ' ' → logprob: -11.75917911529541
    7. 'def' → logprob: -12.25917911529541
    8. '  ' → logprob: -13.63417911529541
    9. '0' → logprob: -13.75917911529541
    10. '<|end|>' → logprob: -13.88417911529541

Token 159: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.007067112717777491
    2. '.' → logprob: -5.1320672035217285
    3. ' .' → logprob: -7.5070672035217285
    4. 'dist' → logprob: -7.6320672035217285
    5. '_dist' → logprob: -10.75706672668457
    6. '.distance' → logprob: -11.25706672668457
    7. '	dist' → logprob: -11.38206672668457
    8. ' dist' → logprob: -11.50706672668457
    9. '.def' → logprob: -11.63206672668457
    10. '.prev' → logprob: -12.13206672668457

Token 160: '_to' (ID: 5089)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.006300841923803091
    2. '_to' → logprob: -5.131300926208496
    3. 'from' → logprob: -8.381300926208496
    4. '_' → logprob: -9.756300926208496
    5. '<|end|>' → logprob: -9.756300926208496
    6. '_reverse' → logprob: -11.631300926208496
    7. '_for' → logprob: -12.756300926208496
    8. ' _' → logprob: -12.881300926208496
    9. '_s' → logprob: -13.631300926208496
    10. ' from' → logprob: -13.631300926208496

Token 161: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.4221948981285095
    2. '_start' → logprob: -1.1721949577331543
    3. 'start' → logprob: -4.547194957733154
    4. '_goal' → logprob: -4.672194957733154
    5. '_target' → logprob: -5.172194957733154
    6. 'end' → logprob: -5.422194957733154
    7. '_finish' → logprob: -5.547194957733154
    8. '_' → logprob: -8.297194480895996
    9. '_destination' → logprob: -8.797194480895996
    10. '_s' → logprob: -9.297194480895996

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699671134352684
    2. '=' → logprob: -2.694967031478882
    3. ' ' → logprob: -10.569967269897461
    4. '<|end|>' → logprob: -13.819967269897461
    5. ' =[' → logprob: -13.944967269897461
    6. '   ' → logprob: -13.944967269897461
    7. '[' → logprob: -14.069967269897461
    8. '  ' → logprob: -14.694967269897461
    9. '=[' → logprob: -15.694967269897461
    10. '    ' → logprob: -15.819967269897461

Token 163: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2519388198852539
    2. '[' → logprob: -1.501938819885254
    3. '[f' → logprob: -12.251938819885254
    4. ' ' → logprob: -13.626938819885254
    5. 'float' → logprob: -13.626938819885254
    6. ' float' → logprob: -14.376938819885254
    7. '<float' → logprob: -15.001938819885254
    8. '[int' → logprob: -15.251938819885254
    9. '   ' → logprob: -15.751938819885254
    10. '[self' → logprob: -15.751938819885254

Token 164: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0087815523147583
    2. ' float' → logprob: -4.758781433105469
    3. '(float' → logprob: -8.758781433105469
    4. '<float' → logprob: -12.508781433105469
    5. '=float' → logprob: -12.633781433105469
    6. '	float' → logprob: -13.758781433105469
    7. ',float' → logprob: -14.383781433105469
    8. 'f' → logprob: -15.008781433105469
    9. 'inf' → logprob: -15.133781433105469
    10. '.float' → logprob: -15.508781433105469

Token 165: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -8.53050296427682e-05
    2. ' ('' → logprob: -9.62508487701416
    3. ''s' → logprob: -11.62508487701416
    4. 'inf' → logprob: -12.37508487701416
    5. '(' → logprob: -12.62508487701416
    6. ''in' → logprob: -14.50008487701416
    7. '(in' → logprob: -14.87508487701416
    8. ''' → logprob: -15.12508487701416
    9. '("' → logprob: -15.37508487701416
    10. ' (' → logprob: -15.37508487701416

Token 166: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.438573680294212e-06
    2. ' inf' → logprob: -12.625005722045898
    3. '-inf' → logprob: -14.500005722045898
    4. 'float' → logprob: -14.625005722045898
    5. '.inf' → logprob: -14.750005722045898
    6. ')' → logprob: -15.625005722045898
    7. '
' → logprob: -16.0000057220459
    8. 'import' → logprob: -16.8750057220459
    9. '_inf' → logprob: -17.0625057220459
    10. '```' → logprob: -17.1875057220459

Token 167: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.0025358288548886776
    2. ']' → logprob: -6.252535820007324
    3. ')]' → logprob: -7.752535820007324
    4. '']' → logprob: -9.627535820007324
    5. '')' → logprob: -9.877535820007324
    6. ')' → logprob: -10.002535820007324
    7. ''' → logprob: -11.377535820007324
    8. '")]' → logprob: -13.377535820007324
    9. ']'' → logprob: -14.127535820007324
    10. '')]
' → logprob: -14.877535820007324

Token 168: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.007873606868088245
    2. '*' → logprob: -5.00787353515625
    3. ' (' → logprob: -7.75787353515625
    4. '(' → logprob: -8.00787353515625
    5. '<|end|>' → logprob: -8.75787353515625
    6. ']' → logprob: -9.75787353515625
    7. ' ' → logprob: -9.88287353515625
    8. '[' → logprob: -10.25787353515625
    9. '*(' → logprob: -10.63287353515625
    10. ')' → logprob: -11.13287353515625

Token 169: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.049804966896772385
    2. '(self' → logprob: -3.049804925918579
    3. '(' → logprob: -6.924805164337158
    4. '<|end|>' → logprob: -8.4248046875
    5. ' ' → logprob: -12.7998046875
    6. '(n' → logprob: -13.1748046875
    7. '<|end|>' → logprob: -13.4248046875
    8. '(len' → logprob: -13.5498046875
    9. 'self' → logprob: -13.5498046875
    10. ' self' → logprob: -13.9248046875

Token 170: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0176040418446064
    2. '(self' → logprob: -4.142603874206543
    3. ' self' → logprob: -6.517603874206543
    4. ' (' → logprob: -10.267603874206543
    5. ')' → logprob: -10.517603874206543
    6. '[self' → logprob: -11.517603874206543
    7. '
' → logprob: -12.267603874206543
    8. ' ' → logprob: -12.892603874206543
    9. 's' → logprob: -13.267603874206543
    10. '0' → logprob: -13.267603874206543

Token 171: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -4.060365608893335e-05
    2. 'n' → logprob: -10.125041007995605
    3. '(n' → logprob: -15.625041007995605
    4. '+' → logprob: -16.25004005432129
    5. ' .' → logprob: -17.12504005432129
    6. '	n' → logprob: -17.50004005432129
    7. '   ' → logprob: -17.50004005432129
    8. '.' → logprob: -17.62504005432129
    9. '+n' → logprob: -17.62504005432129
    10. ' n' → logprob: -18.00004005432129

Token 172: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04301026836037636
    2. ' +' → logprob: -3.1680102348327637
    3. ')+' → logprob: -12.918010711669922
    4. '+
' → logprob: -13.043010711669922
    5. ')' → logprob: -13.293010711669922
    6. '1' → logprob: -13.418010711669922
    7. '<|end|>' → logprob: -14.043010711669922
    8. ' +
' → logprob: -15.043010711669922
    9. ' ' → logprob: -15.043010711669922
    10. '
' → logprob: -15.543010711669922

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.566264295950532e-05
    2. ' ' → logprob: -9.375085830688477
    3. '<|end|>' → logprob: -14.500085830688477
    4. ')' → logprob: -17.000085830688477
    5. '
' → logprob: -17.125085830688477
    6. '   ' → logprob: -17.375085830688477
    7. '0' → logprob: -17.500085830688477
    8. '...' → logprob: -18.375085830688477
    9. '```' → logprob: -18.375085830688477
    10. '(' → logprob: -18.625085830688477

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'n' → logprob: -16.0000057220459
    4. '```' → logprob: -16.7500057220459
    5. '<|end|>' → logprob: -17.3750057220459
    6. '0' → logprob: -17.6250057220459
    7. '   ' → logprob: -17.6250057220459
    8. ')' → logprob: -17.6250057220459
    9. '+' → logprob: -18.2500057220459
    10. 'user' → logprob: -18.5625057220459

Token 175: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001777960715116933
    2. ')
' → logprob: -8.875177383422852
    3. ' )' → logprob: -10.250177383422852
    4. '<|end|>' → logprob: -13.750177383422852
    5. '   ' → logprob: -14.750177383422852
    6. '       ' → logprob: -15.625177383422852
    7. ' ' → logprob: -16.00017738342285
    8. '`)' → logprob: -16.12517738342285
    9. ')

' → logprob: -16.12517738342285
    10. '
' → logprob: -16.25017738342285

Token 176: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01124293077737093
    2. '<|end|>' → logprob: -4.886242866516113
    3. '   ' → logprob: -6.386242866516113
    4. '    
' → logprob: -7.136242866516113
    5. '

' → logprob: -7.761242866516113
    6. ' 
' → logprob: -7.886242866516113
    7. 'def' → logprob: -8.886242866516113
    8. '<|end|>' → logprob: -9.636242866516113
    9. '  
' → logprob: -10.386242866516113
    10. ' def' → logprob: -10.386242866516113

Token 177: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.21853801608085632
    2. ' def' → logprob: -1.7185380458831787
    3. '   ' → logprob: -4.0935378074646
    4. '
' → logprob: -8.468538284301758
    5. '    
' → logprob: -10.093538284301758
    6. ' 
' → logprob: -10.593538284301758
    7. '	def' → logprob: -11.593538284301758
    8. ' ' → logprob: -12.093538284301758
    9. '   
' → logprob: -13.968538284301758
    10. '  ' → logprob: -14.218538284301758

Token 178: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.43269580602645874
    2. ' def' → logprob: -1.3076958656311035
    3. ' compute' → logprob: -2.8076958656311035
    4. 'd' → logprob: -4.6826958656311035
    5. 'def' → logprob: -5.6826958656311035
    6. ' calculate' → logprob: -6.0576958656311035
    7. ' find' → logprob: -6.3076958656311035
    8. ' run' → logprob: -6.9326958656311035
    9. 'compute' → logprob: -6.9326958656311035
    10. '_' → logprob: -7.8076958656311035

Token 179: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.6766502857208252
    2. 'i' → logprob: -1.4266502857208252
    3. 'ijk' → logprob: -1.6766502857208252
    4. 'ij' → logprob: -2.801650285720825
    5. '_' → logprob: -6.051650047302246
    6. '_i' → logprob: -7.176650047302246
    7. 'jik' → logprob: -8.301650047302246
    8. 'ijkl' → logprob: -8.551650047302246
    9. 'ijs' → logprob: -9.926650047302246
    10. '   ' → logprob: -9.926650047302246

Token 180: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7088125944137573
    2. '(self' → logprob: -0.7088125944137573
    3. ' (' → logprob: -4.208812713623047
    4. '(
' → logprob: -8.083812713623047
    5. '   ' → logprob: -8.583812713623047
    6. ' ' → logprob: -9.708812713623047
    7. '_forward' → logprob: -9.708812713623047
    8. '_' → logprob: -11.583812713623047
    9. '_(' → logprob: -11.583812713623047
    10. 'self' → logprob: -11.833812713623047

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03681670129299164
    2. ' ,' → logprob: -3.4118165969848633
    3. ')' → logprob: -6.786816596984863
    4. 'self' → logprob: -7.411816596984863
    5. '(self' → logprob: -7.536816596984863
    6. '_,' → logprob: -8.036816596984863
    7. ',self' → logprob: -8.286816596984863
    8. '   ' → logprob: -9.786816596984863
    9. ',_' → logprob: -9.911816596984863
    10. ' ' → logprob: -10.036816596984863

Token 182: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.46140334010124207
    2. ' start' → logprob: -1.3364033699035645
    3. 'graph' → logprob: -3.0864033699035645
    4. 'self' → logprob: -3.7114033699035645
    5. ' graph' → logprob: -4.2114033699035645
    6. 'source' → logprob: -5.2114033699035645
    7. ' self' → logprob: -5.3364033699035645
    8. '   ' → logprob: -5.5864033699035645
    9. ' source' → logprob: -5.8364033699035645
    10. ')' → logprob: -5.8364033699035645

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005773669108748436
    2. '):' → logprob: -5.255773544311523
    3. ' ,' → logprob: -7.880773544311523
    4. '):
' → logprob: -9.380773544311523
    5. ' ):' → logprob: -10.005773544311523
    6. '   ' → logprob: -11.005773544311523
    7. ')' → logprob: -11.630773544311523
    8. '    ' → logprob: -13.880773544311523
    9. ' )' → logprob: -13.880773544311523
    10. '       ' → logprob: -14.130773544311523

Token 184: ' adj' (ID: 20251)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14368703961372375
    2. 'adj' → logprob: -2.7686870098114014
    3. 'graph' → logprob: -3.5186870098114014
    4. ' dist' → logprob: -3.5186870098114014
    5. ' adj' → logprob: -5.3936872482299805
    6. ' graph' → logprob: -5.3936872482299805
    7. ' distances' → logprob: -7.0186872482299805
    8. 'distance' → logprob: -7.2686872482299805
    9. '   ' → logprob: -7.8936872482299805
    10. ' adjacency' → logprob: -8.26868724822998

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26784631609916687
    2. '_' → logprob: -1.7678463459014893
    3. '_forward' → logprob: -3.2678463459014893
    4. '):
' → logprob: -4.26784610748291
    5. ')' → logprob: -5.14284610748291
    6. ',' → logprob: -6.14284610748291
    7. ')_' → logprob: -6.39284610748291
    8. '   ' → logprob: -7.01784610748291
    9. '_adj' → logprob: -7.39284610748291
    10. '       ' → logprob: -8.89284610748291

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14769254624843597
    2. '):' → logprob: -2.6476924419403076
    3. ':' → logprob: -3.6476924419403076
    4. '   ' → logprob: -4.272692680358887
    5. '):
' → logprob: -4.522692680358887
    6. '(self' → logprob: -4.522692680358887
    7. '(' → logprob: -6.522692680358887
    8. '
' → logprob: -7.272692680358887
    9. ':
' → logprob: -7.522692680358887
    10. ')' → logprob: -7.897692680358887

Token 187: ' dist' (ID: 3601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1071920096874237
    2. 'dist' (adapté à ' dist') → logprob: -2.607192039489746
    3. ' dist' → logprob: -4.107192039489746
    4. '   ' → logprob: -5.232192039489746
    5. '
' → logprob: -6.107192039489746
    6. ' heap' → logprob: -6.982192039489746
    7. 'heap' → logprob: -7.107192039489746
    8. 'import' → logprob: -7.232192039489746
    9. '    ' → logprob: -7.732192039489746
    10. '        
' → logprob: -8.107192039489746

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07920492440462112
    2. '=' → logprob: -2.57920503616333
    3. ',' → logprob: -9.079204559326172
    4. ' ' → logprob: -9.579204559326172
    5. '[' → logprob: -9.954204559326172
    6. '   ' → logprob: -10.454204559326172
    7. '    ' → logprob: -11.579204559326172
    8. ')' → logprob: -11.704204559326172
    9. '  ' → logprob: -11.829204559326172
    10. ' =[' → logprob: -12.079204559326172

Token 189: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6988252401351929
    2. ' [' → logprob: -0.6988252401351929
    3. '[self' → logprob: -5.198825359344482
    4. '[f' → logprob: -9.448824882507324
    5. '[node' → logprob: -11.448824882507324
    6. '[class' → logprob: -11.698824882507324
    7. '[df' → logprob: -11.823824882507324
    8. ' ' → logprob: -12.698824882507324
    9. '[int' → logprob: -12.698824882507324
    10. '[array' → logprob: -12.823824882507324

Token 190: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0015028368216007948
    2. ' float' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.501502990722656
    4. '(float' → logprob: -16.376502990722656
    5. '
' → logprob: -16.751502990722656
    6. '```' → logprob: -16.751502990722656
    7. ',float' → logprob: -17.001502990722656
    8. '	float' → logprob: -17.001502990722656
    9. ' ' → logprob: -17.751502990722656
    10. '<float' → logprob: -18.001502990722656

Token 191: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.8232690460281447e-05
    2. '(' → logprob: -10.000048637390137
    3. ' ('' → logprob: -13.250048637390137
    4. '(in' → logprob: -15.000048637390137
    5. '(
' → logprob: -15.375048637390137
    6. ''s' → logprob: -15.375048637390137
    7. '("' → logprob: -16.37504768371582
    8. ''in' → logprob: -17.12504768371582
    9. '(\'' → logprob: -17.25004768371582
    10. 'inf' → logprob: -17.62504768371582

Token 192: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.9361264946837764e-07
    2. ' inf' → logprob: -16.375
    3. '
' → logprob: -17.875
    4. '   ' → logprob: -18.0
    5. ''' → logprob: -19.0
    6. '

' → logprob: -19.25
    7. '  ' → logprob: -19.25
    8. ')' → logprob: -19.25
    9. 'in' → logprob: -20.125
    10. '.inf' → logprob: -20.25

Token 193: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.5766990780830383
    2. ')]' → logprob: -0.8266990780830383
    3. ')' → logprob: -7.826699256896973
    4. ']' → logprob: -8.076699256896973
    5. '']' → logprob: -10.451699256896973
    6. '')' → logprob: -11.326699256896973
    7. ''' → logprob: -12.951699256896973
    8. '")]' → logprob: -12.951699256896973
    9. '']]' → logprob: -13.201699256896973
    10. '   ' → logprob: -14.201699256896973

Token 194: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002394559560343623
    2. ' ]' → logprob: -6.502394676208496
    3. ']*(' → logprob: -7.752394676208496
    4. ']*' → logprob: -8.377394676208496
    5. ' for' → logprob: -9.127394676208496
    6. ' *' → logprob: -9.377394676208496
    7. ' if' → logprob: -11.627394676208496
    8. 'for' → logprob: -11.877394676208496
    9. '']' → logprob: -12.252394676208496
    10. ',' → logprob: -12.627394676208496

Token 195: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02366829663515091
    2. ' (' → logprob: -3.7736682891845703
    3. '(len' → logprob: -7.89866828918457
    4. '(' → logprob: -9.89866828918457
    5. 'self' → logprob: -14.64866828918457
    6. '(s' → logprob: -15.39866828918457
    7. ' ' → logprob: -15.89866828918457
    8. '(this' → logprob: -16.02366828918457
    9. '(n' → logprob: -16.14866828918457
    10. ' self' → logprob: -16.77366828918457

Token 196: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06558849662542343
    2. 'self' → logprob: -2.8155884742736816
    3. ' (' → logprob: -5.940588474273682
    4. '(len' → logprob: -7.440588474273682
    5. ' self' → logprob: -8.31558895111084
    6. 'len' → logprob: -8.94058895111084
    7. '
' → logprob: -11.81558895111084
    8. '(' → logprob: -12.69058895111084
    9. '   ' → logprob: -12.81558895111084
    10. ')' → logprob: -13.19058895111084

Token 197: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -8.077528764260933e-05
    2. 'n' → logprob: -9.500081062316895
    3. 'graph' → logprob: -13.250081062316895
    4. '.' → logprob: -13.250081062316895
    5. '(n' → logprob: -13.875081062316895
    6. '
' → logprob: -14.875081062316895
    7. ' .' → logprob: -15.000081062316895
    8. '   ' → logprob: -16.000080108642578
    9. '_n' → logprob: -16.125080108642578
    10. ' n' → logprob: -16.250080108642578

Token 198: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519354820251465
    2. ' +' → logprob: -1.5019354820251465
    3. ')' → logprob: -12.251935958862305
    4. '+
' → logprob: -14.376935958862305
    5. ' +
' → logprob: -15.126935958862305
    6. ')+' → logprob: -16.001935958862305
    7. ' ' → logprob: -16.001935958862305
    8. '+)' → logprob: -16.251935958862305
    9. ' ' → logprob: -16.501935958862305
    10. '   ' → logprob: -16.751935958862305

Token 199: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005535095697268844
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.375553131103516
    4. '(' → logprob: -17.125553131103516
    5. ')' → logprob: -17.125553131103516
    6. '```' → logprob: -17.125553131103516
    7. '
' → logprob: -17.500553131103516
    8. '       ' → logprob: -18.188053131103516
    9. '           ' → logprob: -18.188053131103516
    10. 'self' → logprob: -18.188053131103516

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.250024795532227
    4. '
' → logprob: -17.125024795532227
    5. '```' → logprob: -17.312524795532227
    6. '

' → logprob: -17.875024795532227
    7. ')' → logprob: -17.875024795532227
    8. '{' → logprob: -18.312524795532227
    9. '+' → logprob: -18.437524795532227
    10. '0' → logprob: -18.500024795532227

Token 201: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00598022760823369
    2. ')
' → logprob: -5.130980014801025
    3. ')
' → logprob: -10.630980491638184
    4. ' )' → logprob: -10.630980491638184
    5. ' )
' → logprob: -13.630980491638184
    6. ')

' → logprob: -14.255980491638184
    7. ' ' → logprob: -14.755980491638184
    8. '   ' → logprob: -15.630980491638184
    9. '
' → logprob: -15.630980491638184
    10. ')return' → logprob: -16.130979537963867

Token 202: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3133358657360077
    2. '       ' → logprob: -1.81333589553833
    3. '
' → logprob: -2.56333589553833
    4. '<|end|>' → logprob: -4.31333589553833
    5. ' dist' → logprob: -4.81333589553833
    6. '	dist' → logprob: -5.81333589553833
    7. '        
' → logprob: -6.56333589553833
    8. ' 
' → logprob: -7.18833589553833
    9. '    
' → logprob: -7.68833589553833
    10. '   ' → logprob: -8.188335418701172

Token 203: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.00700911320745945
    2. ' dist' → logprob: -5.007009029388428
    3. '
' → logprob: -8.632009506225586
    4. '	dist' → logprob: -10.257009506225586
    5. '   ' → logprob: -10.382009506225586
    6. ' 
' → logprob: -10.882009506225586
    7. '    
' → logprob: -11.257009506225586
    8. '       ' → logprob: -12.507009506225586
    9. '  
' → logprob: -12.757009506225586
    10. ' ' → logprob: -12.882009506225586

Token 204: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -6.8497312895488e-05
    2. '[' → logprob: -9.625068664550781
    3. 'start' → logprob: -13.625068664550781
    4. '[end' → logprob: -15.500068664550781
    5. '```' → logprob: -15.750068664550781
    6. ' [' → logprob: -16.00006866455078
    7. '_start' → logprob: -16.25006866455078
    8. '[s' → logprob: -16.25006866455078
    9. '=start' → logprob: -16.62506866455078
    10. ' start' → logprob: -16.75006866455078

Token 205: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005386164411902428
    2. ' ]' → logprob: -7.7505388259887695
    3. ')' → logprob: -9.37553882598877
    4. ']=' → logprob: -10.75053882598877
    5. ')]' → logprob: -14.75053882598877
    6. '])' → logprob: -14.75053882598877
    7. ' )' → logprob: -14.87553882598877
    8. '[' → logprob: -15.25053882598877
    9. ']
' → logprob: -16.000537872314453
    10. '   ' → logprob: -16.750537872314453

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741065204143524
    2. ' =' → logprob: -0.9741065502166748
    3. ']' → logprob: -11.099106788635254
    4. ']=' → logprob: -12.099106788635254
    5. ' =
' → logprob: -12.849106788635254
    6. '[' → logprob: -12.974106788635254
    7. ' ' → logprob: -13.474106788635254
    8. ')' → logprob: -14.224106788635254
    9. '=
' → logprob: -14.474106788635254
    10. ')=' → logprob: -14.974106788635254

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.25004005432129
    4. '  ' → logprob: -18.37504005432129
    5. '
' → logprob: -19.81254005432129
    6. '۰' → logprob: -19.81254005432129
    7. ' ' → logprob: -20.06254005432129
    8. '    ' → logprob: -20.18754005432129
    9. '     ' → logprob: -20.75004005432129
    10. '00' → logprob: -20.87504005432129

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -20.375
    4. '  ' → logprob: -22.125
    5. '00' → logprob: -23.0
    6. '۰' → logprob: -23.0
    7. '
' → logprob: -23.375
    8. '    ' → logprob: -23.375
    9. '     ' → logprob: -23.75
    10. ' ' → logprob: -23.875

Token 209: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15997152030467987
    2. '
' → logprob: -2.2849714756011963
    3. '<|end|>' → logprob: -3.1599714756011963
    4. '        
' → logprob: -7.159971714019775
    5. '   ' → logprob: -7.409971714019775
    6. ' 
' → logprob: -7.784971714019775
    7. ',' → logprob: -7.909971714019775
    8. '  
' → logprob: -8.534971237182617
    9. '<|end|>' → logprob: -8.534971237182617
    10. '' → logprob: -8.909971237182617

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019079314079135656
    2. '
' → logprob: -7.376907825469971
    3. '   ' → logprob: -7.376907825469971
    4. '<|end|>' → logprob: -8.001908302307129
    5. ' heap' → logprob: -9.626908302307129
    6. '	' → logprob: -10.001908302307129
    7. ',' → logprob: -10.376908302307129
    8. '        
' → logprob: -10.501908302307129
    9. 'heap' → logprob: -10.876908302307129
    10. ' ' → logprob: -11.376908302307129

Token 211: ' h' (ID: 312)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.12243254482746124
    2. 'heap' → logprob: -2.3724324703216553
    3. '       ' → logprob: -4.622432708740234
    4. 'queue' → logprob: -4.872432708740234
    5. ' heap' → logprob: -5.872432708740234
    6. ' pq' → logprob: -6.872432708740234
    7. 'hq' → logprob: -8.372432708740234
    8. '   ' → logprob: -8.622432708740234
    9. 'q' → logprob: -8.747432708740234
    10. ' queue' → logprob: -10.122432708740234

Token 212: 'q' (ID: 80)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01593465358018875
    2. ' =' → logprob: -4.265934467315674
    3. '=' → logprob: -6.890934467315674
    4. 'q' → logprob: -7.640934467315674
    5. 'p' → logprob: -9.265934944152832
    6. '   ' → logprob: -9.515934944152832
    7. 'eat' → logprob: -10.640934944152832
    8. 'eep' → logprob: -10.765934944152832
    9. ' ' → logprob: -11.390934944152832
    10. 'heap' → logprob: -11.765934944152832

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10051999986171722
    2. '=' → logprob: -2.350519895553589
    3. '=[]' → logprob: -8.850520133972168
    4. 'q' → logprob: -9.475520133972168
    5. ' ' → logprob: -10.225520133972168
    6. '.' → logprob: -10.475520133972168
    7. ',' → logprob: -11.600520133972168
    8. '=[]
' → logprob: -12.850520133972168
    9. ')' → logprob: -12.850520133972168
    10. '.push' → logprob: -13.100520133972168

Token 214: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.5759509205818176
    2. ' [(' → logprob: -0.8259509205818176
    3. '[]' → logprob: -11.575950622558594
    4. ' []' → logprob: -13.200950622558594
    5. '([(' → logprob: -15.950950622558594
    6. '[' → logprob: -16.700950622558594
    7. ' [' → logprob: -16.700950622558594
    8. '[]
' → logprob: -17.200950622558594
    9. '[((' → logprob: -17.825950622558594
    10. ' []
' → logprob: -18.200950622558594

Token 215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '(' → logprob: -19.125
    4. ')' → logprob: -20.125
    5. '   ' → logprob: -20.5
    6. '
' → logprob: -21.625
    7. 'dist' → logprob: -21.75
    8. ',' → logprob: -21.875
    9. '۰' → logprob: -22.375
    10. ')
' → logprob: -23.0

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4855663721391466e-05
    2. ')' → logprob: -12.375015258789062
    3. '<|end|>' → logprob: -12.500015258789062
    4. ',
' → logprob: -12.875015258789062
    5. ' ,' → logprob: -13.125015258789062
    6. ',)' → logprob: -14.000015258789062
    7. ',start' → logprob: -15.250015258789062
    8. ')]' → logprob: -15.625015258789062
    9. ',

' → logprob: -15.750015258789062
    10. ',user' → logprob: -15.875015258789062

Token 217: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.008614808320999146
    2. ' start' → logprob: -4.758615016937256
    3. ' ' → logprob: -16.508615493774414
    4. '[start' → logprob: -16.758615493774414
    5. ')' → logprob: -17.008615493774414
    6. '
' → logprob: -17.508615493774414
    7. '(start' → logprob: -17.633615493774414
    8. '=start' → logprob: -18.133615493774414
    9. 'star' → logprob: -18.258615493774414
    10. '	start' → logprob: -18.758615493774414

Token 218: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011075903894379735
    2. ')]
' → logprob: -6.876107692718506
    3. ')' → logprob: -9.876107215881348
    4. '),' → logprob: -11.501107215881348
    5. '       ' → logprob: -12.001107215881348
    6. ')]
' → logprob: -13.126107215881348
    7. ')])' → logprob: -13.751107215881348
    8. '   ' → logprob: -14.001107215881348
    9. ']' → logprob: -14.126107215881348
    10. ')]

' → logprob: -14.251107215881348

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009618389885872602
    2. ' while' → logprob: -7.500961780548096
    3. ')' → logprob: -8.750962257385254
    4. 'while' → logprob: -9.250962257385254
    5. '   ' → logprob: -9.500962257385254
    6. '	while' → logprob: -10.875962257385254
    7. '<|end|>' → logprob: -11.000962257385254
    8. ',' → logprob: -11.125962257385254
    9. '	' → logprob: -12.000962257385254
    10. '        
' → logprob: -12.500962257385254

Token 220: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4505719244480133
    2. '       ' → logprob: -1.200571894645691
    3. ' while' → logprob: -2.9505720138549805
    4. '	while' → logprob: -5.2005720138549805
    5. '   ' → logprob: -5.7005720138549805
    6. '
' → logprob: -8.82557201385498
    7. '        
' → logprob: -8.95057201385498
    8. ')' → logprob: -9.45057201385498
    9. ' ' → logprob: -10.20057201385498
    10. '	' → logprob: -10.45057201385498

Token 221: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.012105769477784634
    2. 'hq' → logprob: -4.512105941772461
    3. 'h' → logprob: -6.887105941772461
    4. '	h' → logprob: -10.387105941772461
    5. '(h' → logprob: -13.012105941772461
    6. ' ' → logprob: -13.137105941772461
    7. '   ' → logprob: -14.637105941772461
    8. ' len' → logprob: -15.262105941772461
    9. '
' → logprob: -15.387105941772461
    10. '_h' → logprob: -15.887105941772461

Token 222: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.537868779967539e-06
    2. 'hq' → logprob: -13.250008583068848
    3. '
' → logprob: -13.375008583068848
    4. 'qh' → logprob: -13.625008583068848
    5. 'cq' → logprob: -13.875008583068848
    6. 'Q' → logprob: -14.250008583068848
    7. '   ' → logprob: -15.125008583068848
    8. '[' → logprob: -15.375008583068848
    9. '?q' → logprob: -15.750008583068848
    10. 'c' → logprob: -15.750008583068848

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08216728270053864
    2. ':
' → logprob: -2.582167387008667
    3. ',' → logprob: -6.707167148590088
    4. '[' → logprob: -7.332167148590088
    5. '.pop' → logprob: -7.707167148590088
    6. '):' → logprob: -8.332167625427246
    7. '):
' → logprob: -8.457167625427246
    8. 'and' → logprob: -8.582167625427246
    9. ' and' → logprob: -8.707167625427246
    10. 'pop' → logprob: -10.582167625427246

Token 224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11570054292678833
    2. ',' → logprob: -2.2407004833221436
    3. '       ' → logprob: -6.615700721740723
    4. ' ,' → logprob: -6.865700721740723
    5. '	       ' → logprob: -8.615700721740723
    6. '
' → logprob: -9.365700721740723
    7. '_,' → logprob: -10.365700721740723
    8. '   ' → logprob: -10.865700721740723
    9. '```' → logprob: -10.865700721740723
    10. ',
' → logprob: -11.115700721740723

Token 225: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.4215274155139923
    2. ' d' → logprob: -1.67152738571167
    3. 'cost' → logprob: -3.17152738571167
    4. 'cur' → logprob: -3.29652738571167
    5. 'dist' → logprob: -3.29652738571167
    6. 'curr' → logprob: -3.92152738571167
    7. ' dist' → logprob: -5.04652738571167
    8. '   ' → logprob: -5.17152738571167
    9. 'current' → logprob: -5.42152738571167
    10. ' current' → logprob: -6.92152738571167

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006917051505297422
    2. ' ,' → logprob: -7.750691890716553
    3. 'ist' → logprob: -8.625691413879395
    4. '_,' → logprob: -9.875691413879395
    5. ',u' → logprob: -11.250691413879395
    6. ',
' → logprob: -11.875691413879395
    7. 'istance' → logprob: -12.250691413879395
    8. ',_' → logprob: -13.000691413879395
    9. ',e' → logprob: -14.875691413879395
    10. 'ists' → logprob: -14.875691413879395

Token 227: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.023266442120075226
    2. ' u' → logprob: -3.773266553878784
    3. 'node' → logprob: -11.023266792297363
    4. ' node' → logprob: -12.523266792297363
    5. '   ' → logprob: -14.273266792297363
    6. '```' → logprob: -15.773266792297363
    7. '	u' → logprob: -16.148265838623047
    8. ' ' → logprob: -17.023265838623047
    9. '    
' → logprob: -17.648265838623047
    10. '(u' → logprob: -17.773265838623047

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931495666503906
    2. ' =' → logprob: -0.6931495666503906
    3. ')' → logprob: -13.44314956665039
    4. ' ' → logprob: -14.56814956665039
    5. '   ' → logprob: -15.06814956665039
    6. ')=' → logprob: -16.31814956665039
    7. '=u' → logprob: -17.94314956665039
    8. '    ' → logprob: -18.06814956665039
    9. '=sys' → logprob: -18.06814956665039
    10. ']' → logprob: -18.19314956665039

Token 229: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.07890477031469345
    2. ' heap' → logprob: -2.578904867172241
    3. 'he' → logprob: -11.20390510559082
    4. ' he' → logprob: -13.95390510559082
    5. '(heap' → logprob: -15.57890510559082
    6. '.heap' → logprob: -15.70390510559082
    7. 'hq' → logprob: -16.32890510559082
    8. ' ' → logprob: -16.95390510559082
    9. '_heap' → logprob: -17.32890510559082
    10. 'h' → logprob: -17.45390510559082

Token 230: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.833878508885391e-05
    2. '[' → logprob: -10.250038146972656
    3. '   ' → logprob: -14.625038146972656
    4. '```' → logprob: -14.625038146972656
    5. 'p' → logprob: -14.750038146972656
    6. '
' → logprob: -15.250038146972656
    7. '       ' → logprob: -15.625038146972656
    8. ')' → logprob: -15.875038146972656
    9. 'ify' → logprob: -16.000038146972656
    10. 'u' → logprob: -16.000038146972656

Token 231: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.0219828002154827e-05
    2. 'q' → logprob: -11.750020027160645
    3. ' he' → logprob: -11.875020027160645
    4. '.' → logprob: -12.750020027160645
    5. 'he' → logprob: -13.875020027160645
    6. '.heap' → logprob: -14.375020027160645
    7. '.pop' → logprob: -15.000020027160645
    8. 'app' → logprob: -15.625020027160645
    9. '.q' → logprob: -15.875020027160645
    10. '.h' → logprob: -16.00002098083496

Token 232: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.001722188200801611
    2. 'pp' → logprob: -6.37672233581543
    3. 'ap' → logprob: -12.00172233581543
    4. 'q' → logprob: -12.37672233581543
    5. '[' → logprob: -12.87672233581543
    6. 'p' → logprob: -13.12672233581543
    7. 'pop' → logprob: -13.62672233581543
    8. '```' → logprob: -14.12672233581543
    9. 'appen' → logprob: -14.37672233581543
    10. 'appe' → logprob: -14.62672233581543

Token 233: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.17234840989112854
    2. 'app' → logprob: -2.0473484992980957
    3. 'ush' → logprob: -3.6723484992980957
    4. 'pp' → logprob: -5.922348499298096
    5. 'pop' → logprob: -7.172348499298096
    6. 'p' → logprob: -8.672348022460938
    7. 'ap' → logprob: -9.797348022460938
    8. 'ort' → logprob: -10.672348022460938
    9. '[' → logprob: -10.672348022460938
    10. 'q' → logprob: -10.922348022460938

Token 234: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00027456742827780545
    2. '(' → logprob: -8.250274658203125
    3. '(
' → logprob: -12.500274658203125
    4. ')' → logprob: -13.125274658203125
    5. ' (' → logprob: -13.375274658203125
    6. 'h' → logprob: -13.375274658203125
    7. '(q' → logprob: -13.375274658203125
    8. '(heap' → logprob: -13.875274658203125
    9. 'hq' → logprob: -14.125274658203125
    10. ' ' → logprob: -15.125274658203125

Token 235: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.451116051815916e-05
    2. ')' → logprob: -11.000024795532227
    3. ')
' → logprob: -13.250024795532227
    4. 'Q' → logprob: -13.625024795532227
    5. '[' → logprob: -13.750024795532227
    6. '
' → logprob: -14.000024795532227
    7. ',' → logprob: -14.125024795532227
    8. ' ' → logprob: -15.125024795532227
    9. ']' → logprob: -15.250024795532227
    10. '	q' → logprob: -15.500024795532227

Token 236: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2015300840139389
    2. ')
' → logprob: -1.7015300989151
    3. '           ' → logprob: -9.201530456542969
    4. ')
' → logprob: -11.451530456542969
    5. ' )' → logprob: -13.076530456542969
    6. ' )
' → logprob: -13.701530456542969
    7. ')

' → logprob: -14.201530456542969
    8. '       ' → logprob: -14.826530456542969
    9. '               ' → logprob: -14.826530456542969
    10. ')`
' → logprob: -15.576530456542969

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025871701654978096
    2. '       ' → logprob: -9.375258445739746
    3. '
' → logprob: -9.500258445739746
    4. '            
' → logprob: -10.000258445739746
    5. ' if' → logprob: -11.375258445739746
    6. '<|end|>' → logprob: -11.500258445739746
    7. '          ' → logprob: -12.000258445739746
    8. '            ' → logprob: -12.125258445739746
    9. 'if' → logprob: -12.375258445739746
    10. '               ' → logprob: -12.500258445739746

Token 238: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3589726686477661
    2. ' if' → logprob: -1.3589726686477661
    3. 'if' (adapté à ' if') → logprob: -3.1089725494384766
    4. '            
' → logprob: -11.608972549438477
    5. '
' → logprob: -11.858972549438477
    6. '            ' → logprob: -12.108972549438477
    7. '          ' → logprob: -12.483972549438477
    8. '               ' → logprob: -12.858972549438477
    9. ' 
' → logprob: -13.233972549438477
    10. '   ' → logprob: -13.358972549438477

Token 239: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.17424726486206055
    2. 'd' → logprob: -1.9242472648620605
    3. ' dist' → logprob: -4.5492472648620605
    4. 'dist' → logprob: -5.7992472648620605
    5. '	d' → logprob: -8.299247741699219
    6. '   ' → logprob: -10.799247741699219
    7. ' ' → logprob: -10.924247741699219
    8. '	dist' → logprob: -11.049247741699219
    9. ' ' → logprob: -12.486747741699219
    10. ' д' → logprob: -13.111747741699219

Token 240: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.31329724192619324
    2. '>' → logprob: -1.3132972717285156
    3. ' !=' → logprob: -11.438297271728516
    4. ' ' → logprob: -11.438297271728516
    5. ' ' → logprob: -12.438297271728516
    6. '!=' → logprob: -13.063297271728516
    7. '[' → logprob: -13.188297271728516
    8. '">' → logprob: -13.313297271728516
    9. ' >
' → logprob: -14.438297271728516
    10. '()>' → logprob: -14.813297271728516

Token 241: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -2.7610454708337784e-05
    2. ' dist' → logprob: -10.500027656555176
    3. '	dist' → logprob: -17.25002670288086
    4. '.dist' → logprob: -19.50002670288086
    5. '_dist' → logprob: -19.50002670288086
    6. '(dist' → logprob: -19.50002670288086
    7. 'Dist' → logprob: -20.50002670288086
    8. 'd' → logprob: -20.75002670288086
    9. '```' → logprob: -21.75002670288086
    10. '
' → logprob: -21.75002670288086

Token 242: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. '[
' → logprob: -17.625
    3. ' [' → logprob: -17.75
    4. '[' → logprob: -18.0
    5. 'u' → logprob: -18.0
    6. '
' → logprob: -18.25
    7. '	u' → logprob: -18.625
    8. '   ' → logprob: -18.75
    9. '<u' → logprob: -19.625
    10. '```' → logprob: -19.625

Token 243: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6110312938690186
    2. ':' → logprob: -0.8610312938690186
    3. '):
' → logprob: -3.7360312938690186
    4. ':
' → logprob: -4.611031532287598
    5. ')' → logprob: -7.736031532287598
    6. ':return' → logprob: -9.236031532287598
    7. ']:' → logprob: -9.361031532287598
    8. 'continue' → logprob: -10.486031532287598
    9. '}:' → logprob: -11.611031532287598
    10. ' continue' → logprob: -11.861031532287598

Token 244: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024112078826874495
    2. 'continue' → logprob: -6.752411365509033
    3. ' continue' → logprob: -7.002411365509033
    4. '           ' → logprob: -8.252410888671875
    5. ':' → logprob: -9.752410888671875
    6. ':
' → logprob: -12.377410888671875
    7. '_continue' → logprob: -12.877410888671875
    8. '                   ' → logprob: -13.377410888671875
    9. '              ' → logprob: -14.127410888671875
    10. '   ' → logprob: -14.252410888671875

Token 245: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.592865526676178
    2. 'continue' (adapté à ' continue') → logprob: -0.842865526676178
    3. '               ' → logprob: -4.092865467071533
    4. '           ' → logprob: -10.467865943908691
    5. '_continue' → logprob: -10.467865943908691
    6. '	continue' → logprob: -10.592865943908691
    7. '                   ' → logprob: -12.092865943908691
    8. 'contin' → logprob: -13.592865943908691
    9. 'Continue' → logprob: -13.842865943908691
    10. '   ' → logprob: -14.342865943908691

Token 246: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007852102862671018
    2. '            
' → logprob: -7.5007853507995605
    3. '       ' → logprob: -9.250784873962402
    4. '<|end|>' → logprob: -10.500784873962402
    5. '   ' → logprob: -11.125784873962402
    6. ' 
' → logprob: -11.125784873962402
    7. '          ' → logprob: -11.250784873962402
    8. '               ' → logprob: -11.375784873962402
    9. '    
' → logprob: -11.750784873962402
    10. '
' → logprob: -11.750784873962402

Token 247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007168424781411886
    2. '       ' → logprob: -7.500716686248779
    3. '            
' → logprob: -9.375717163085938
    4. '   ' → logprob: -11.125717163085938
    5. ' 
' → logprob: -11.500717163085938
    6. '          ' → logprob: -11.875717163085938
    7. '<|end|>' → logprob: -12.000717163085938
    8. '               ' → logprob: -12.250717163085938
    9. ',' → logprob: -12.250717163085938
    10. ' ' → logprob: -12.250717163085938

Token 248: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2480961084365845
    2. ' for' → logprob: -1.3730961084365845
    3. '       ' → logprob: -1.3730961084365845
    4. 'for' (adapté à ' for') → logprob: -1.6230961084365845
    5. '   ' → logprob: -4.748095989227295
    6. '	for' → logprob: -8.498096466064453
    7. '        
' → logprob: -10.248096466064453
    8. '            
' → logprob: -10.373096466064453
    9. ' ' → logprob: -10.998096466064453
    10. '    
' → logprob: -11.373096466064453

Token 249: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.062290992587804794
    2. '(v' → logprob: -2.812290906906128
    3. ' v' → logprob: -8.062291145324707
    4. 'vv' → logprob: -12.937291145324707
    5. ' (' → logprob: -13.187291145324707
    6. 'to' → logprob: -13.562291145324707
    7. '	v' → logprob: -14.312291145324707
    8. '[v' → logprob: -14.937291145324707
    9. '```' → logprob: -14.937291145324707
    10. '_v' → logprob: -15.187291145324707

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007233949727378786
    2. ' ,' → logprob: -7.250723361968994
    3. ',v' → logprob: -11.875723838806152
    4. ',w' → logprob: -12.250723838806152
    5. ',
' → logprob: -14.500723838806152
    6. '<|end|>' → logprob: -15.125723838806152
    7. '           ' → logprob: -15.250723838806152
    8. '‌,' → logprob: -15.500723838806152
    9. '_,' → logprob: -16.125722885131836
    10. ',d' → logprob: -16.250722885131836

Token 251: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3868939280509949
    2. ' w' → logprob: -1.1368939876556396
    3. ',' → logprob: -11.761894226074219
    4. ',w' → logprob: -12.386894226074219
    5. '```' → logprob: -13.011894226074219
    6. '    ' → logprob: -13.636894226074219
    7. ' ' → logprob: -13.636894226074219
    8. '_w' → logprob: -13.886894226074219
    9. '           ' → logprob: -14.011894226074219
    10. '   ' → logprob: -14.011894226074219

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006310671451501548
    2. ' ,' → logprob: -7.375630855560303
    3. ' in' → logprob: -12.625631332397461
    4. ',v' → logprob: -15.000631332397461
    5. ',w' → logprob: -15.375631332397461
    6. 'w' → logprob: -16.25063133239746
    7. ',user' → logprob: -16.25063133239746
    8. '<|end|>' → logprob: -16.37563133239746
    9. '‌,' → logprob: -16.62563133239746
    10. ',
' → logprob: -16.75063133239746

Token 253: ' _' (ID: 1175)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.004274515435099602
    2. ' idx' → logprob: -5.504274368286133
    3. '_idx' → logprob: -9.129274368286133
    4. '_' → logprob: -9.504274368286133
    5. 'id' → logprob: -12.129274368286133
    6. 'i' → logprob: -13.004274368286133
    7. ' _' → logprob: -13.129274368286133
    8. '	idx' → logprob: -13.254274368286133
    9. '_i' → logprob: -14.754274368286133
    10. ' ' → logprob: -15.504274368286133

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02325514331459999
    2. 'in' → logprob: -3.7732551097869873
    3. ' ' → logprob: -12.523255348205566
    4. 'v' → logprob: -13.898255348205566
    5. '
' → logprob: -14.023255348205566
    6. '   ' → logprob: -14.523255348205566
    7. '	in' → logprob: -14.523255348205566
    8. '  ' → logprob: -14.898255348205566
    9. 's' → logprob: -14.898255348205566
    10. ',' → logprob: -15.023255348205566

Token 255: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.03365446254611015
    2. ' adj' → logprob: -3.4086544513702393
    3. 'ad' → logprob: -12.90865421295166
    4. '   ' → logprob: -13.15865421295166
    5. ' ' → logprob: -13.40865421295166
    6. '(adj' → logprob: -13.53365421295166
    7. '  ' → logprob: -15.03365421295166
    8. '    ' → logprob: -15.28365421295166
    9. 'adm' → logprob: -15.78365421295166
    10. 'Adj' → logprob: -16.408655166625977

Token 256: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.368984107510187e-05
    2. 'u' → logprob: -10.500033378601074
    3. '[' → logprob: -12.375033378601074
    4. '(u' → logprob: -14.750033378601074
    5. ':' → logprob: -15.125033378601074
    6. ' [' → logprob: -15.500033378601074
    7. '[v' → logprob: -15.625033378601074
    8. '
' → logprob: -15.625033378601074
    9. '   ' → logprob: -15.875033378601074
    10. ' u' → logprob: -16.00003433227539

Token 257: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0669969990849495
    2. '):
' → logprob: -3.1919970512390137
    3. ']:' → logprob: -3.9419970512390137
    4. ':' → logprob: -5.566997051239014
    5. ']:
' → logprob: -8.066996574401855
    6. ' ):' → logprob: -9.566996574401855
    7. '       ' → logprob: -10.941996574401855
    8. '           ' → logprob: -11.066996574401855
    9. '}:' → logprob: -11.066996574401855
    10. ':
' → logprob: -11.316996574401855

Token 258: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001951961312443018
    2. ' if' → logprob: -9.750195503234863
    3. '           ' → logprob: -10.000195503234863
    4. '                ' → logprob: -10.750195503234863
    5. ',' → logprob: -10.875195503234863
    6. '                
' → logprob: -11.000195503234863
    7. '	           ' → logprob: -11.875195503234863
    8. '              ' → logprob: -12.125195503234863
    9. '            ' → logprob: -12.375195503234863
    10. '   ' → logprob: -12.500195503234863

Token 259: ' nd' (ID: 5914)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25513890385627747
    2. '                   ' → logprob: -2.505138874053955
    3. ' new' → logprob: -2.880138874053955
    4. '               ' → logprob: -3.005138874053955
    5. ' nd' → logprob: -3.630138874053955
    6. '                ' → logprob: -5.255138874053955
    7. 'if' → logprob: -5.880138874053955
    8. '   ' → logprob: -7.005138874053955
    9. ' alt' → logprob: -7.755138874053955
    10. '    ' → logprob: -7.755138874053955

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16103728115558624
    2. '=' → logprob: -1.9110373258590698
    3. 'ist' → logprob: -7.536037445068359
    4. 'istance' → logprob: -8.41103744506836
    5. '=v' → logprob: -11.28603744506836
    6. ',' → logprob: -12.03603744506836
    7. ')' → logprob: -12.41103744506836
    8. ' =
' → logprob: -12.53603744506836
    9. '   ' → logprob: -12.78603744506836
    10. '=w' → logprob: -13.03603744506836

Token 261: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2519562244415283
    2. 'd' → logprob: -1.5019562244415283
    3. ' dist' → logprob: -11.50195598602295
    4. 'dist' → logprob: -11.50195598602295
    5. '               ' → logprob: -12.87695598602295
    6. '                   ' → logprob: -13.37695598602295
    7. '	d' → logprob: -13.87695598602295
    8. '                ' → logprob: -14.50195598602295
    9. ' ' → logprob: -15.00195598602295
    10. '           ' → logprob: -15.50195598602295

Token 262: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18142889440059662
    2. '+' → logprob: -1.8064289093017578
    3. '+w' → logprob: -6.431428909301758
    4. '+d' → logprob: -10.556428909301758
    5. '+n' → logprob: -11.306428909301758
    6. ' ' → logprob: -11.806428909301758
    7. '+l' → logprob: -12.681428909301758
    8. '+b' → logprob: -12.806428909301758
    9. '+c' → logprob: -12.806428909301758
    10. '=' → logprob: -12.806428909301758

Token 263: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3868729770183563
    2. ' w' → logprob: -1.1368730068206787
    3. ' ' → logprob: -14.386873245239258
    4. '   ' → logprob: -15.011873245239258
    5. '	w' → logprob: -15.386873245239258
    6. ' ' → logprob: -15.761873245239258
    7. '    ' → logprob: -16.136873245239258
    8. '
' → logprob: -16.261873245239258
    9. ''w' → logprob: -16.324373245239258
    10. '_w' → logprob: -16.386873245239258

Token 264: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022861862555146217
    2. '<|end|>' → logprob: -4.272861957550049
    3. '           ' → logprob: -5.647861957550049
    4. '
' → logprob: -6.272861957550049
    5. '                   ' → logprob: -6.772861957550049
    6. '                ' → logprob: -7.522861957550049
    7. '<|end|>' → logprob: -8.02286148071289
    8. '                
' → logprob: -8.02286148071289
    9. ')' → logprob: -8.39786148071289
    10. '              ' → logprob: -8.64786148071289

Token 265: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016059131594374776
    2. '<|end|>' → logprob: -6.751605987548828
    3. '           ' → logprob: -8.876605987548828
    4. '                
' → logprob: -9.251605987548828
    5. '                ' → logprob: -9.876605987548828
    6. '
' → logprob: -10.001605987548828
    7. '                   ' → logprob: -10.376605987548828
    8. '              ' → logprob: -11.001605987548828
    9. '<|end|>' → logprob: -11.126605987548828
    10. ' 
' → logprob: -12.001605987548828

Token 266: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004252438899129629
    2. ' if' → logprob: -5.5042524337768555
    3. 'if' (adapté à ' if') → logprob: -9.379252433776855
    4. '           ' → logprob: -10.754252433776855
    5. '
' → logprob: -11.004252433776855
    6. '                ' → logprob: -11.379252433776855
    7. '                   ' → logprob: -11.379252433776855
    8. '                
' → logprob: -11.504252433776855
    9. ' ' → logprob: -12.254252433776855
    10. '              ' → logprob: -12.379252433776855

Token 267: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.0054991221986711025
    2. 'nd' → logprob: -5.255498886108398
    3. ' dist' → logprob: -8.380498886108398
    4. 'dist' → logprob: -11.130498886108398
    5. '(nd' → logprob: -11.130498886108398
    6. ' ' → logprob: -13.755498886108398
    7. '```' → logprob: -14.255498886108398
    8. '   ' → logprob: -14.255498886108398
    9. ' ' → logprob: -14.380498886108398
    10. ' ndo' → logprob: -14.567998886108398

Token 268: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03365122899413109
    2. '<' → logprob: -3.408651113510132
    3. ' ' → logprob: -13.033651351928711
    4. '<|end|>' → logprob: -14.283651351928711
    5. ' ' → logprob: -14.783651351928711
    6. '<int' → logprob: -15.033651351928711
    7. '[' → logprob: -15.158651351928711
    8. '<n' → logprob: -15.408651351928711
    9. '<len' → logprob: -15.658651351928711
    10. '<th' → logprob: -15.783651351928711

Token 269: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07889220863580704
    2. ' dist' → logprob: -2.578892230987549
    3. '	dist' → logprob: -13.95389175415039
    4. '(dist' → logprob: -14.20389175415039
    5. '
' → logprob: -14.45389175415039
    6. '_dist' → logprob: -16.32889175415039
    7. 'Dist' → logprob: -16.82889175415039
    8. '.dist' → logprob: -16.95389175415039
    9. ' ' → logprob: -17.57889175415039
    10. '```' → logprob: -17.57889175415039

Token 270: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.5048530030981055e-06
    2. '[u' → logprob: -13.500001907348633
    3. 'v' → logprob: -17.750001907348633
    4. '[' → logprob: -18.000001907348633
    5. ' [' → logprob: -19.375001907348633
    6. '```' → logprob: -19.375001907348633
    7. '<v' → logprob: -19.625001907348633
    8. '               ' → logprob: -20.375001907348633
    9. ' v' → logprob: -20.875001907348633
    10. '][' → logprob: -21.250001907348633

Token 271: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8505862951278687
    2. ']:' → logprob: -0.8505862951278687
    3. ']:
' → logprob: -2.850586414337158
    4. '):' → logprob: -3.350586414337158
    5. ':
' → logprob: -3.475586414337158
    6. '):
' → logprob: -3.850586414337158
    7. '}:' → logprob: -8.1005859375
    8. '>:' → logprob: -9.3505859375
    9. ']' → logprob: -10.1005859375
    10. ']:
' → logprob: -10.6005859375

Token 272: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004850530531257391
    2. ':
' → logprob: -5.879850387573242
    3. ':' → logprob: -6.504850387573242
    4. '                       ' → logprob: -8.379850387573242
    5. '               ' → logprob: -8.629850387573242
    6. '):
' → logprob: -10.379850387573242
    7. '                           ' → logprob: -10.379850387573242
    8. '           ' → logprob: -11.504850387573242
    9. '                  ' → logprob: -11.504850387573242
    10. '                    
' → logprob: -11.504850387573242

Token 273: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.06198505312204361
    2. 'dist' (adapté à ' dist') → logprob: -2.8119850158691406
    3. '                   ' → logprob: -11.31198501586914
    4. '                       ' → logprob: -12.43698501586914
    5. '	dist' → logprob: -14.06198501586914
    6. '                    ' → logprob: -15.81198501586914
    7. 'Dist' → logprob: -16.56198501586914
    8. '                           ' → logprob: -16.93698501586914
    9. '_dist' → logprob: -17.06198501586914
    10. '               ' → logprob: -17.06198501586914

Token 274: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.12500286102295
    3. 'v' → logprob: -14.12500286102295
    4. '<v' → logprob: -16.375003814697266
    5. '=v' → logprob: -16.750003814697266
    6. '[u' → logprob: -16.750003814697266
    7. '                   ' → logprob: -16.875003814697266
    8. '[var' → logprob: -17.125003814697266
    9. '<|end|>' → logprob: -17.125003814697266
    10. ' v' → logprob: -17.250003814697266

Token 275: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.6623750329017639
    2. ']' → logprob: -0.9123750329017639
    3. ']=' → logprob: -2.537374973297119
    4. '=' → logprob: -6.162374973297119
    5. ' =' → logprob: -7.537374973297119
    6. '=v' → logprob: -7.537374973297119
    7. '<v' → logprob: -8.412375450134277
    8. ' ]' → logprob: -8.912375450134277
    9. '[' → logprob: -9.912375450134277
    10. 'v' → logprob: -10.287375450134277

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16037775576114655
    2. ' =' → logprob: -1.9103777408599854
    3. '=v' → logprob: -9.285377502441406
    4. '=
' → logprob: -10.285377502441406
    5. ']=' → logprob: -11.910377502441406
    6. ' =
' → logprob: -12.285377502441406
    7. '<|end|>' → logprob: -12.910377502441406
    8. '[' → logprob: -13.410377502441406
    9. '.=' → logprob: -13.410377502441406
    10. '[v' → logprob: -13.535377502441406

Token 277: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.38687583804130554
    2. 'nd' → logprob: -1.136875867843628
    3. '(nd' → logprob: -12.761876106262207
    4. '_nd' → logprob: -13.636876106262207
    5. '
' → logprob: -15.761876106262207
    6. '.nd' → logprob: -16.26187515258789
    7. 'ndl' → logprob: -16.51187515258789
    8. 'ng' → logprob: -16.51187515258789
    9. 'nb' → logprob: -17.01187515258789
    10. 'nt' → logprob: -17.26187515258789

Token 278: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002680112374946475
    2. 'heap' → logprob: -8.87526798248291
    3. '               ' → logprob: -9.87526798248291
    4. '           ' → logprob: -10.50026798248291
    5. '				' → logprob: -11.12526798248291
    6. ',' → logprob: -11.50026798248291
    7. ' heap' → logprob: -11.75026798248291
    8. '                       ' → logprob: -12.37526798248291
    9. '<|end|>' → logprob: -12.75026798248291
    10. '(heap' → logprob: -13.25026798248291

Token 279: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00033784625702537596
    2. 'heap' → logprob: -8.250337600708008
    3. ' heap' → logprob: -10.000337600708008
    4. '				' → logprob: -11.375337600708008
    5. '                    ' → logprob: -12.250337600708008
    6. '               ' → logprob: -12.375337600708008
    7. '                  ' → logprob: -12.500337600708008
    8. '           ' → logprob: -13.375337600708008
    9. ',' → logprob: -13.500337600708008
    10. '                    
' → logprob: -13.750337600708008

Token 280: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.004078997299075127
    2. ' heap' → logprob: -5.5040788650512695
    3. '                   ' → logprob: -14.62907886505127
    4. 'he' → logprob: -17.754079818725586
    5. '               ' → logprob: -19.379079818725586
    6. '                       ' → logprob: -19.504079818725586
    7. '   ' → logprob: -19.629079818725586
    8. '.heap' → logprob: -19.629079818725586
    9. '(heap' → logprob: -19.629079818725586
    10. '           ' → logprob: -19.879079818725586

Token 281: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2664456789934775e-06
    2. '.he' → logprob: -15.000000953674316
    3. 'p' → logprob: -15.250000953674316
    4. 'he' → logprob: -15.375000953674316
    5. 'push' → logprob: -16.125001907348633
    6. 'h' → logprob: -17.000001907348633
    7. 'app' → logprob: -17.250001907348633
    8. '```' → logprob: -17.250001907348633
    9. '.push' → logprob: -17.875001907348633
    10. '_push' → logprob: -17.875001907348633

Token 282: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.6240566083070007e-06
    2. '.push' → logprob: -14.000001907348633
    3. 'he' → logprob: -15.000001907348633
    4. '.heap' → logprob: -16.125001907348633
    5. 'q' → logprob: -16.250001907348633
    6. '.' → logprob: -16.375001907348633
    7. '_he' → logprob: -17.250001907348633
    8. 'push' → logprob: -17.750001907348633
    9. ' .' → logprob: -18.250001907348633
    10. ' he' → logprob: -18.750001907348633

Token 283: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.005243598949164152
    2. 'pp' → logprob: -5.25524377822876
    3. 'push' → logprob: -11.755243301391602
    4. 'ush' → logprob: -14.255243301391602
    5. 'p' → logprob: -14.630243301391602
    6. 'ap' → logprob: -15.005243301391602
    7. '```' → logprob: -15.255243301391602
    8. 'he' → logprob: -16.6302433013916
    9. '[' → logprob: -16.8802433013916
    10. 'e' → logprob: -17.0052433013916

Token 284: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.029605258256196976
    2. 'app' → logprob: -4.279605388641357
    3. 'pp' → logprob: -4.779605388641357
    4. 'push' → logprob: -5.154605388641357
    5. 'p' → logprob: -6.904605388641357
    6. 'q' → logprob: -10.1546049118042
    7. 'op' → logprob: -10.1546049118042
    8. '```' → logprob: -10.2796049118042
    9. '   ' → logprob: -11.2796049118042
    10. 'ap' → logprob: -11.6546049118042

Token 285: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. '(q' → logprob: -17.375003814697266
    4. '(heap' → logprob: -17.625003814697266
    5. ' (' → logprob: -17.875003814697266
    6. '(
' → logprob: -18.125003814697266
    7. '(n' → logprob: -18.375003814697266
    8. 'h' → logprob: -19.750003814697266
    9. '((' → logprob: -19.875003814697266
    10. '(k' → logprob: -20.125003814697266

Token 286: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.7014437364414334e-05
    2. '(h' → logprob: -11.00002670288086
    3. '(q' → logprob: -11.75002670288086
    4. 'c' → logprob: -14.50002670288086
    5. 'Q' → logprob: -14.62502670288086
    6. 'v' → logprob: -15.62502670288086
    7. ' q' → logprob: -15.75002670288086
    8. '(heap' → logprob: -15.75002670288086
    9. ' (' → logprob: -15.87502670288086
    10. ')' → logprob: -16.00002670288086

Token 287: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.07200879603624344
    2. ',' → logprob: -2.6970088481903076
    3. ' (' → logprob: -6.8220086097717285
    4. ',(' → logprob: -7.4470086097717285
    5. ' ,' → logprob: -8.822009086608887
    6. ',h' → logprob: -9.072009086608887
    7. ')' → logprob: -9.822009086608887
    8. '(' → logprob: -10.072009086608887
    9. '(heap' → logprob: -10.572009086608887
    10. '(q' → logprob: -12.072009086608887

Token 288: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.50565505027771
    2. '(nd' → logprob: -1.00565505027771
    3. '(' → logprob: -3.50565505027771
    4. '(n' → logprob: -6.880655288696289
    5. '(v' → logprob: -12.130655288696289
    6. '(dist' → logprob: -12.255655288696289
    7. '(nn' → logprob: -12.505655288696289
    8. '(ns' → logprob: -12.755655288696289
    9. '(nt' → logprob: -12.755655288696289
    10. '(sd' → logprob: -13.005655288696289

Token 289: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.009766122326254845
    2. ' nd' → logprob: -4.634766101837158
    3. '(nd' → logprob: -11.634766578674316
    4. '   ' → logprob: -15.134766578674316
    5. ' ' → logprob: -15.259766578674316
    6. '_nd' → logprob: -15.259766578674316
    7. '  ' → logprob: -16.384765625
    8. ')' → logprob: -16.634765625
    9. 'nt' → logprob: -16.884765625
    10. 'ndl' → logprob: -17.259765625

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.32654589228332e-05
    2. ',v' → logprob: -9.625073432922363
    3. ' ,' → logprob: -12.000073432922363
    4. ',
' → logprob: -14.500073432922363
    5. ')' → logprob: -15.500073432922363
    6. 'v' → logprob: -15.625073432922363
    7. ',u' → logprob: -16.875072479248047
    8. ' v' → logprob: -17.250072479248047
    9. '<|end|>' → logprob: -17.250072479248047
    10. '```' → logprob: -17.500072479248047

Token 291: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.018150296062231064
    2. ' v' → logprob: -4.018150329589844
    3. ')v' → logprob: -15.643150329589844
    4. '	v' → logprob: -16.393150329589844
    5. '
' → logprob: -17.518150329589844
    6. '```' → logprob: -18.018150329589844
    7. '[v' → logprob: -18.268150329589844
    8. ' ' → logprob: -18.643150329589844
    9. ' 
' → logprob: -18.893150329589844
    10. '(v' → logprob: -18.893150329589844

Token 292: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001617035741219297
    2. '))
' → logprob: -8.750162124633789
    3. ' ))' → logprob: -13.500162124633789
    4. ')' → logprob: -13.625162124633789
    5. ')))' → logprob: -15.375162124633789
    6. '))

' → logprob: -16.00016212463379
    7. '               ' → logprob: -16.50016212463379
    8. '));' → logprob: -16.87516212463379
    9. '           ' → logprob: -16.87516212463379
    10. '                   ' → logprob: -17.75016212463379

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006021226872690022
    2. 'return' → logprob: -9.000601768493652
    3. ' return' → logprob: -9.250601768493652
    4. '
' → logprob: -9.250601768493652
    5. '   ' → logprob: -9.500601768493652
    6. '                   ' → logprob: -10.125601768493652
    7. '        
' → logprob: -10.500601768493652
    8. '           ' → logprob: -10.625601768493652
    9. '<|end|>' → logprob: -11.000601768493652
    10. '    
' → logprob: -11.125601768493652

Token 294: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7004688382148743
    2. 'return' (adapté à ' return') → logprob: -0.7004688382148743
    3. ' return' → logprob: -5.325469017028809
    4. '   ' → logprob: -6.075469017028809
    5. '	return' → logprob: -9.075469017028809
    6. '           ' → logprob: -12.075469017028809
    7. '	' → logprob: -12.950469017028809
    8. ' ' → logprob: -13.325469017028809
    9. '```' → logprob: -14.075469017028809
    10. ')return' → logprob: -14.075469017028809

Token 295: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01814994215965271
    2. ' dist' → logprob: -4.0181498527526855
    3. '(dist' → logprob: -18.143150329589844
    4. '	dist' → logprob: -18.893150329589844
    5. '_dist' → logprob: -20.518150329589844
    6. 'Dist' → logprob: -21.643150329589844
    7. '.dist' → logprob: -22.143150329589844
    8. '
' → logprob: -23.143150329589844
    9. '```' → logprob: -23.518150329589844
    10. 'dest' → logprob: -24.018150329589844

Token 296: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.795426070690155
    2. '<|end|>' → logprob: -1.0454261302947998
    3. '   ' → logprob: -1.7954261302947998
    4. '    
' → logprob: -4.045425891876221
    5. 'def' → logprob: -5.045425891876221
    6. '

' → logprob: -5.920425891876221
    7. '<|end|>' → logprob: -6.170425891876221
    8. '  
' → logprob: -7.045425891876221
    9. '```' → logprob: -7.045425891876221
    10. ' def' → logprob: -8.295426368713379

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1440437138080597
    2. '
' → logprob: -2.1440436840057373
    3. '    
' → logprob: -4.644043922424316
    4. '<|end|>' → logprob: -5.394043922424316
    5. 'def' → logprob: -6.894043922424316
    6. ' 
' → logprob: -7.894043922424316
    7. '```' → logprob: -7.894043922424316
    8. '  
' → logprob: -7.894043922424316
    9. ' def' → logprob: -8.269043922424316
    10. '<|end|>' → logprob: -9.144043922424316

Token 298: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05599622428417206
    2. '   ' → logprob: -3.4309961795806885
    3. ' def' → logprob: -4.055996417999268
    4. '
' → logprob: -5.680996417999268
    5. '    
' → logprob: -6.680996417999268
    6. '  
' → logprob: -10.18099594116211
    7. '	def' → logprob: -10.68099594116211
    8. '

' → logprob: -11.18099594116211
    9. ' ' → logprob: -11.43099594116211
    10. ' 
' → logprob: -11.55599594116211

Token 299: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.49527692794799805
    2. ' compute' → logprob: -0.995276927947998
    3. ' find' → logprob: -4.995276927947998
    4. 'calculate' → logprob: -5.495276927947998
    5. 'find' → logprob: -5.620276927947998
    6. 'pre' → logprob: -6.245276927947998
    7. ' pre' → logprob: -6.370276927947998
    8. ' calculate' → logprob: -6.870276927947998
    9. ' preprocess' → logprob: -7.120276927947998
    10. 'prepare' → logprob: -7.495276927947998

Token 300: '(self' (ID: 2402)
  Prédit: '_paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.6000412106513977
    2. '_short' → logprob: -1.100041151046753
    3. '_dist' → logprob: -2.975041151046753
    4. '_' → logprob: -3.475041151046753
    5. '_all' → logprob: -3.975041151046753
    6. '_path' → logprob: -4.475041389465332
    7. '_opt' → logprob: -6.350041389465332
    8. '_full' → logprob: -7.600041389465332
    9. '_distance' → logprob: -7.600041389465332
    10. '_from' → logprob: -7.725041389465332

Token 301: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.2397739887237549
    2. ')_' → logprob: -1.7397739887237549
    3. '_paths' → logprob: -1.8647739887237549
    4. '_' → logprob: -1.8647739887237549
    5. '_short' → logprob: -2.739773988723755
    6. ')' → logprob: -3.114773988723755
    7. '_dist' → logprob: -3.239773988723755
    8. '_path' → logprob: -3.989773988723755
    9. '_from' → logprob: -4.364773750305176
    10. '_distance' → logprob: -4.614773750305176

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007684823591262102
    2. '
' → logprob: -5.507684707641602
    3. '        
' → logprob: -6.507684707641602
    4. 'self' → logprob: -6.882684707641602
    5. '(self' → logprob: -7.132684707641602
    6. '```' → logprob: -9.257684707641602
    7. '(' → logprob: -10.132684707641602
    8. ' self' → logprob: -10.632684707641602
    9. ',' → logprob: -10.632684707641602
    10. '#' → logprob: -10.757684707641602

Token 303: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5761949419975281
    2. '       ' → logprob: -1.3261950016021729
    3. ' self' → logprob: -2.076195001602173
    4. '
' → logprob: -3.076195001602173
    5. '        
' → logprob: -7.451194763183594
    6. '
' → logprob: -9.701194763183594
    7. ' 
' → logprob: -9.826194763183594
    8. '(self' → logprob: -9.826194763183594
    9. '   ' → logprob: -10.076194763183594
    10. '```' → logprob: -10.451194763183594

Token 304: ' Dist' (ID: 35375)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005875940900295973
    2. ' self' → logprob: -5.255876064300537
    3. '       ' → logprob: -7.505876064300537
    4. '#' → logprob: -9.880875587463379
    5. 'dist' → logprob: -10.630875587463379
    6. 'def' → logprob: -12.505875587463379
    7. '
' → logprob: -12.880875587463379
    8. '```' → logprob: -13.380875587463379
    9. '   ' → logprob: -13.630875587463379
    10. ' ' → logprob: -14.130875587463379

Token 305: 'ances' (ID: 3528)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0089421346783638
    2. 'ance' → logprob: -4.758942127227783
    3. 'from' → logprob: -8.258942604064941
    4. 'ances' → logprob: -10.008942604064941
    5. '_to' → logprob: -12.008942604064941
    6. '   ' → logprob: -12.258942604064941
    7. ' from' → logprob: -12.508942604064941
    8. '       ' → logprob: -12.883942604064941
    9. 'From' → logprob: -13.133942604064941
    10. '_' → logprob: -13.258942604064941

Token 306: ' from' (ID: 591)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.40260639786720276
    2. 'from' → logprob: -1.7776063680648804
    3. ' =' → logprob: -2.40260648727417
    4. '=' → logprob: -3.52760648727417
    5. '       ' → logprob: -3.65260648727417
    6. ' from' → logprob: -4.77760648727417
    7. 'self' → logprob: -5.27760648727417
    8. 'From' → logprob: -7.02760648727417
    9. '=self' → logprob: -7.02760648727417
    10. '   ' → logprob: -8.402606010437012

Token 307: ' start' (ID: 1604)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023466343991458416
    2. '       ' → logprob: -7.002346515655518
    3. 'start' → logprob: -7.627346515655518
    4. 'self' → logprob: -7.752346515655518
    5. ' ' → logprob: -8.377346992492676
    6. '           ' → logprob: -9.377346992492676
    7. '0' → logprob: -9.877346992492676
    8. 'def' → logprob: -10.252346992492676
    9. 's' → logprob: -10.627346992492676
    10. '        ' → logprob: -10.877346992492676

Token 308: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45984482765197754
    2. '=' → logprob: -1.3348448276519775
    3. '       ' → logprob: -2.5848448276519775
    4. 'self' → logprob: -4.584844589233398
    5. '(' → logprob: -4.959844589233398
    6. '[' → logprob: -6.209844589233398
    7. '(self' → logprob: -6.334844589233398
    8. '1' → logprob: -6.459844589233398
    9. '=self' → logprob: -6.584844589233398
    10. ')' → logprob: -6.959844589233398

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.217951886355877e-05
    2. ' ' → logprob: -10.375061988830566
    3. ')' → logprob: -11.000061988830566
    4. '       ' → logprob: -12.375061988830566
    5. 'self' → logprob: -13.000061988830566
    6. '0' → logprob: -13.125061988830566
    7. '=' → logprob: -14.000061988830566
    8. 's' → logprob: -14.000061988830566
    9. '           ' → logprob: -14.000061988830566
    10. 'def' → logprob: -14.000061988830566

Token 310: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009960533119738102
    2. ')
' → logprob: -5.009960651397705
    3. ' )' → logprob: -6.134960651397705
    4. ' to' → logprob: -7.634960651397705
    5. ' and' → logprob: -8.259960174560547
    6. ')

' → logprob: -9.634960174560547
    7. 'self' → logprob: -10.009960174560547
    8. ' )
' → logprob: -10.009960174560547
    9. ',' → logprob: -10.259960174560547
    10. 'to' → logprob: -10.759960174560547

Token 311: ' using' (ID: 2360)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2537170648574829
    2. '       ' → logprob: -1.628717064857483
    3. '=' → logprob: -4.003716945648193
    4. 'self' → logprob: -5.878716945648193
    5. ' to' → logprob: -6.378716945648193
    6. '
' → logprob: -6.628716945648193
    7. ' and' → logprob: -6.628716945648193
    8. '=self' → logprob: -7.003716945648193
    9. ' self' → logprob: -7.753716945648193
    10. ':' → logprob: -8.253717422485352

Token 312: ' original' (ID: 4756)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3986934721469879
    2. ' self' → logprob: -1.1486934423446655
    3. 'adj' → logprob: -4.773693561553955
    4. ' adj' → logprob: -6.148693561553955
    5. ' forward' → logprob: -7.898693561553955
    6. 'forward' → logprob: -8.523693084716797
    7. '_forward' → logprob: -8.773693084716797
    8. ' graph' → logprob: -9.523693084716797
    9. ' the' → logprob: -9.648693084716797
    10. 'graph' → logprob: -9.773693084716797

Token 313: ' edges' (ID: 22569)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5895616412162781
    2. 'adj' → logprob: -1.3395617008209229
    3. ' graph' → logprob: -1.8395617008209229
    4. 'edges' → logprob: -4.589561462402344
    5. '_graph' → logprob: -5.714561462402344
    6. ' adjacency' → logprob: -5.714561462402344
    7. ' edges' → logprob: -6.214561462402344
    8. '_adj' → logprob: -6.589561462402344
    9. 'self' → logprob: -7.089561462402344
    10. 'forward' → logprob: -7.339561462402344

Token 314: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006010683253407478
    2. '
' → logprob: -5.75601053237915
    3. ' to' → logprob: -7.00601053237915
    4. ',' → logprob: -7.13101053237915
    5. ' and' → logprob: -7.75601053237915
    6. 'self' → logprob: -8.006011009216309
    7. ':' → logprob: -9.131011009216309
    8. '        
' → logprob: -9.631011009216309
    9. ' self' → logprob: -10.381011009216309
    10. ' =' → logprob: -10.631011009216309

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0071854800917208195
    2. 'self' → logprob: -5.257185459136963
    3. '
' → logprob: -6.632185459136963
    4. ' self' → logprob: -7.882185459136963
    5. ',' → logprob: -9.007185935974121
    6. '        
' → logprob: -9.757185935974121
    7. '```' → logprob: -11.007185935974121
    8. '(self' → logprob: -11.882185935974121
    9. '   ' → logprob: -11.882185935974121
    10. ')
' → logprob: -12.132185935974121

Token 316: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.025675512850284576
    2. ' self' → logprob: -3.9006755352020264
    3. '       ' → logprob: -5.275675296783447
    4. '   ' → logprob: -13.900675773620605
    5. '        
' → logprob: -13.900675773620605
    6. 'dist' → logprob: -13.900675773620605
    7. ' ' → logprob: -14.150675773620605
    8. '```' → logprob: -14.400675773620605
    9. '
' → logprob: -14.775675773620605
    10. '	self' → logprob: -14.775675773620605

Token 317: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -1.3782830137643032e-05
    2. '.' → logprob: -11.62501335144043
    3. 'dist' → logprob: -12.50001335144043
    4. ' .' → logprob: -14.25001335144043
    5. '	dist' → logprob: -16.25001335144043
    6. '.def' → logprob: -16.37501335144043
    7. '..' → logprob: -16.50001335144043
    8. '}.' → logprob: -16.87501335144043
    9. ' dist' → logprob: -17.00001335144043
    10. '.dest' → logprob: -17.25001335144043

Token 318: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.0325924449716695e-05
    2. 'from' → logprob: -11.50001049041748
    3. '=_' → logprob: -17.000009536743164
    4. '_for' → logprob: -17.375009536743164
    5. ' from' → logprob: -17.500009536743164
    6. '_' → logprob: -17.500009536743164
    7. '_FROM' → logprob: -17.750009536743164
    8. '_to' → logprob: -18.125009536743164
    9. '.from' → logprob: -18.500009536743164
    10. 'From' → logprob: -18.875009536743164

Token 319: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.935296834039036e-06
    2. ' _' → logprob: -14.12500286102295
    3. 'start' → logprob: -14.12500286102295
    4. '_' → logprob: -14.50000286102295
    5. '_forward' → logprob: -14.62500286102295
    6. '_from' → logprob: -16.500003814697266
    7. '=_' → logprob: -17.375003814697266
    8. '_START' → logprob: -17.375003814697266
    9. '_finish' → logprob: -17.375003814697266
    10. '[' → logprob: -17.625003814697266

Token 320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143204927444458
    2. '=' → logprob: -1.7014319896697998
    3. '[' → logprob: -11.076432228088379
    4. '[:]' → logprob: -13.451432228088379
    5. '=self' → logprob: -14.076432228088379
    6. ')' → logprob: -14.951432228088379
    7. ' ' → logprob: -15.451432228088379
    8. '   ' → logprob: -15.826432228088379
    9. ',' → logprob: -16.326431274414062
    10. ']' → logprob: -16.326431274414062

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04859793186187744
    2. ' self' → logprob: -3.048597812652588
    3. '       ' → logprob: -11.673598289489746
    4. '(self' → logprob: -13.673598289489746
    5. '           ' → logprob: -15.298598289489746
    6. '[self' → logprob: -15.423598289489746
    7. '=self' → logprob: -15.798598289489746
    8. '        ' → logprob: -16.42359733581543
    9. '	self' → logprob: -16.54859733581543
    10. '   ' → logprob: -16.92359733581543

Token 322: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.11311329901218414
    2. '.graph' → logprob: -2.2381134033203125
    3. '.dist' → logprob: -8.988113403320312
    4. '.' → logprob: -9.488113403320312
    5. 'graph' → logprob: -10.113113403320312
    6. ' .' → logprob: -10.238113403320312
    7. '..' → logprob: -12.863113403320312
    8. 'd' → logprob: -13.613113403320312
    9. '`.' → logprob: -13.738113403320312
    10. '	graph' → logprob: -13.863113403320312

Token 323: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -5.319370302458992e-06
    2. 'ijk' → logprob: -12.625005722045898
    3. 'ij' → logprob: -13.250005722045898
    4. 'ijkl' → logprob: -16.8750057220459
    5. 'jik' → logprob: -16.8750057220459
    6. 'ijks' → logprob: -17.8750057220459
    7. '```' → logprob: -18.0000057220459
    8. 'ijski' → logprob: -18.3750057220459
    9. 'i' → logprob: -18.6250057220459
    10. 'ijska' → logprob: -18.7500057220459

Token 324: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. ' (' → logprob: -13.375001907348633
    3. '(
' → logprob: -15.000001907348633
    4. '1' → logprob: -16.625001907348633
    5. '(self' → logprob: -17.875001907348633
    6. '((' → logprob: -18.750001907348633
    7. ' ' → logprob: -20.375001907348633
    8. ',' → logprob: -20.500001907348633
    9. '(start' → logprob: -20.500001907348633
    10. '(

' → logprob: -20.500001907348633

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.375000953674316
    3. '(' → logprob: -15.625000953674316
    4. ')' → logprob: -16.500001907348633
    5. '
' → logprob: -17.375001907348633
    6. ',' → logprob: -20.375001907348633
    7. '   ' → logprob: -20.500001907348633
    8. '(
' → logprob: -20.750001907348633
    9. ')
' → logprob: -21.375001907348633
    10. '```' → logprob: -21.375001907348633

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016754455282352865
    2. ' ,' → logprob: -8.875167846679688
    3. ',self' → logprob: -10.875167846679688
    4. 'self' → logprob: -11.750167846679688
    5. ' self' → logprob: -15.250167846679688
    6. '       ' → logprob: -15.375167846679688
    7. ',
' → logprob: -15.875167846679688
    8. ')' → logprob: -16.250167846679688
    9. '),' → logprob: -16.500167846679688
    10. '   ' → logprob: -17.500167846679688

Token 327: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006716436706483364
    2. ' self' → logprob: -5.006716251373291
    3. '
' → logprob: -14.75671672821045
    4. 'graph' → logprob: -15.38171672821045
    5. ')' → logprob: -15.75671672821045
    6. '           ' → logprob: -16.631715774536133
    7. '       ' → logprob: -17.006715774536133
    8. ')
' → logprob: -17.506715774536133
    9. '   ' → logprob: -17.506715774536133
    10. '(self' → logprob: -17.756715774536133

Token 328: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0621178075671196
    2. '.ad' → logprob: -2.8121178150177
    3. 'graph' → logprob: -9.062117576599121
    4. ' .' → logprob: -10.812117576599121
    5. '.' → logprob: -11.437117576599121
    6. '	graph' → logprob: -14.187117576599121
    7. ').' → logprob: -14.312117576599121
    8. ' graph' → logprob: -15.062117576599121
    9. 'adj' → logprob: -15.187117576599121
    10. '.g' → logprob: -15.437117576599121

Token 329: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -6.869017852295656e-06
    2. ' .' → logprob: -12.000006675720215
    3. '.' → logprob: -14.625006675720215
    4. ').' → logprob: -15.750006675720215
    5. 'adj' → logprob: -17.87500762939453
    6. '.ads' → logprob: -19.00000762939453
    7. '.att' → logprob: -19.12500762939453
    8. '   ' → logprob: -19.50000762939453
    9. '_.' → logprob: -20.00000762939453
    10. '.Ad' → logprob: -20.12500762939453

Token 330: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.200166469876422e-06
    2. 'jac' → logprob: -13.125004768371582
    3. 'd' → logprob: -13.250004768371582
    4. '_' → logprob: -14.625004768371582
    5. 'jf' → logprob: -15.625004768371582
    6. '_j' → logprob: -15.625004768371582
    7. '_forward' → logprob: -15.875004768371582
    8. 'g' → logprob: -16.5000057220459
    9. ' j' → logprob: -16.7500057220459
    10. '\' → logprob: -17.1250057220459

Token 331: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -9.088346359931165e-07
    2. ')_' → logprob: -14.750000953674316
    3. '_' → logprob: -16.625
    4. '_backward' → logprob: -16.875
    5. 'forward' → logprob: -17.0
    6. '_f' → logprob: -17.25
    7. ' _' → logprob: -17.375
    8. '_for' → logprob: -17.5
    9. '__' → logprob: -17.875
    10. '```' → logprob: -18.25

Token 332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005287261446937919
    2. ')
' → logprob: -7.625528812408447
    3. ' )' → logprob: -10.750528335571289
    4. '       ' → logprob: -11.000528335571289
    5. ')

' → logprob: -13.750528335571289
    6. ')
' → logprob: -14.375528335571289
    7. '   ' → logprob: -15.000528335571289
    8. ')#' → logprob: -15.375528335571289
    9. ')\
' → logprob: -16.12552833557129
    10. ' )
' → logprob: -16.62552833557129

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000605933484621346
    2. '
' → logprob: -7.875606060028076
    3. '#' → logprob: -9.125605583190918
    4. 'self' → logprob: -9.125605583190918
    5. '        
' → logprob: -11.875605583190918
    6. '   ' → logprob: -15.000605583190918
    7. ' self' → logprob: -15.375605583190918
    8. ' #' → logprob: -15.875605583190918
    9. '           ' → logprob: -16.000606536865234
    10. '```' → logprob: -16.125606536865234

Token 334: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1324598640203476
    2. '       ' → logprob: -2.132459878921509
    3. 'self' → logprob: -5.25745964050293
    4. ' #' → logprob: -8.38245964050293
    5. '   ' → logprob: -9.75745964050293
    6. '
' → logprob: -12.13245964050293
    7. ' self' → logprob: -12.38245964050293
    8. '```' → logprob: -12.63245964050293
    9. ' ' → logprob: -13.13245964050293
    10. '        
' → logprob: -13.38245964050293

Token 335: ' Dist' (ID: 35375)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3166986107826233
    2. '#' → logprob: -1.4416985511779785
    3. 'Dist' → logprob: -4.3166985511779785
    4. '       ' → logprob: -4.3166985511779785
    5. 'Distances' → logprob: -5.4416985511779785
    6. ' self' → logprob: -6.1916985511779785
    7. ' #' → logprob: -7.0666985511779785
    8. 'dist' → logprob: -7.4416985511779785
    9. ' Dist' → logprob: -8.441699028015137
    10. '   ' → logprob: -10.066699028015137

Token 336: 'ances' (ID: 3528)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.5066286325454712
    2. 'ances' → logprob: -1.0066286325454712
    3. '_to' → logprob: -3.8816285133361816
    4. 'from' → logprob: -5.131628513336182
    5. 'ance' → logprob: -5.256628513336182
    6. '       ' → logprob: -9.13162899017334
    7. ' from' → logprob: -10.13162899017334
    8. 'import' → logprob: -10.75662899017334
    9. '#' → logprob: -10.88162899017334
    10. '_reverse' → logprob: -11.25662899017334

Token 337: ' to' (ID: 316)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5976162552833557
    2. 'from' → logprob: -0.8476162552833557
    3. '_from' → logprob: -3.972616195678711
    4. ' to' → logprob: -6.847616195678711
    5. '_to' → logprob: -7.722616195678711
    6. ' =' → logprob: -7.972616195678711
    7. 'to' → logprob: -8.097616195678711
    8. '=' → logprob: -8.472616195678711
    9. '       ' → logprob: -8.472616195678711
    10. 'From' → logprob: -10.597616195678711

Token 338: ' end' (ID: 1268)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.539202868938446
    2. '1' → logprob: -1.4142029285430908
    3. 'end' → logprob: -2.414202928543091
    4. ' self' → logprob: -3.414202928543091
    5. '_end' → logprob: -4.039202690124512
    6. 'the' → logprob: -4.789202690124512
    7. ' end' → logprob: -5.039202690124512
    8. ' ' → logprob: -5.039202690124512
    9. 'n' → logprob: -5.664202690124512
    10. ' the' → logprob: -5.789202690124512

Token 339: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19095395505428314
    2. '=' → logprob: -2.1909539699554443
    3. '(' → logprob: -3.1909539699554443
    4. ' (' → logprob: -3.9409539699554443
    5. '       ' → logprob: -7.315953731536865
    6. '=(' → logprob: -8.565954208374023
    7. '(self' → logprob: -8.565954208374023
    8. '=self' → logprob: -8.690954208374023
    9. 'self' → logprob: -9.690954208374023
    10. ',' → logprob: -10.190954208374023

Token 340: '2' (ID: 17)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0337020643055439
    2. ' self' → logprob: -3.4087021350860596
    3. ')' → logprob: -10.40870189666748
    4. '1' → logprob: -11.78370189666748
    5. ' ' → logprob: -12.53370189666748
    6. 'n' → logprob: -12.78370189666748
    7. '(self' → logprob: -13.03370189666748
    8. '   ' → logprob: -13.28370189666748
    9. 's' → logprob: -13.65870189666748
    10. '=self' → logprob: -13.65870189666748

Token 341: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04356107860803604
    2. ',' → logprob: -3.1685609817504883
    3. 'self' → logprob: -8.418560981750488
    4. '),' → logprob: -8.793560981750488
    5. ' )' → logprob: -9.418560981750488
    6. ' using' → logprob: -10.543560981750488
    7. '(self' → logprob: -10.793560981750488
    8. 'using' → logprob: -10.918560981750488
    9. ' ,' → logprob: -11.543560981750488
    10. ')
' → logprob: -12.418560981750488

Token 342: ' using' (ID: 2360)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020641274750232697
    2. '=' → logprob: -3.895641326904297
    3. '=self' → logprob: -10.020641326904297
    4. '       ' → logprob: -11.145641326904297
    5. 'self' → logprob: -11.270641326904297
    6. ' using' → logprob: -11.770641326904297
    7. 'using' → logprob: -12.020641326904297
    8. ',' → logprob: -12.520641326904297
    9. ' ' → logprob: -12.645641326904297
    10. ' self' → logprob: -13.645641326904297

Token 343: ' reversed' (ID: 57184)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18057920038700104
    2. ' self' → logprob: -1.8055791854858398
    3. 'the' → logprob: -7.93057918548584
    4. ' the' → logprob: -8.18057918548584
    5. 'graph' → logprob: -9.80557918548584
    6. 'reverse' → logprob: -10.30557918548584
    7. '(self' → logprob: -10.55557918548584
    8. ' reverse' → logprob: -11.18057918548584
    9. '
' → logprob: -11.43057918548584
    10. '[self' → logprob: -11.43057918548584

Token 344: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.8059417605400085
    2. ' edges' → logprob: -1.0559418201446533
    3. 'edges' → logprob: -1.9309418201446533
    4. ' self' → logprob: -3.4309418201446533
    5. 'self' → logprob: -3.8059418201446533
    6. 'graph' → logprob: -6.180941581726074
    7. '(self' → logprob: -6.680941581726074
    8. '_graph' → logprob: -6.805941581726074
    9. ' graph' → logprob: -7.180941581726074
    10. '_' → logprob: -8.555941581726074

Token 345: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3916514217853546
    2. '       ' → logprob: -1.7666513919830322
    3. '=' → logprob: -1.8916513919830322
    4. 'self' → logprob: -6.516651630401611
    5. '=self' → logprob: -7.516651630401611
    6. ' self' → logprob: -8.641651153564453
    7. ',' → logprob: -10.266651153564453
    8. '
' → logprob: -10.891651153564453
    9. ' ' → logprob: -10.891651153564453
    10. '   ' → logprob: -11.266651153564453

Token 346: 'for' (ID: 1938)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12248263508081436
    2. ')' → logprob: -2.9974825382232666
    3. ')
' → logprob: -3.4974825382232666
    4. ' self' → logprob: -3.8724825382232666
    5. '       ' → logprob: -4.372482776641846
    6. '2' → logprob: -8.747482299804688
    7. ',' → logprob: -8.747482299804688
    8. 'graph' → logprob: -8.747482299804688
    9. '),' → logprob: -8.872482299804688
    10. '   ' → logprob: -8.872482299804688

Token 347: ' paths' (ID: 23373)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5542382597923279
    2. ')' → logprob: -2.6792383193969727
    3. 'back' → logprob: -2.6792383193969727
    4. ' self' → logprob: -2.9292383193969727
    5. 'adj' → logprob: -2.9292383193969727
    6. ' backward' → logprob: -3.1792383193969727
    7. 'reverse' → logprob: -3.3042383193969727
    8. ' shortest' → logprob: -4.429238319396973
    9. ' adjacency' → logprob: -4.554238319396973
    10. 'the' → logprob: -4.679238319396973

Token 348: ' ending' (ID: 22013)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3468230366706848
    2. 'from' → logprob: -1.72182297706604
    3. ' to' → logprob: -3.09682297706604
    4. 'to' → logprob: -3.34682297706604
    5. '       ' → logprob: -4.096823215484619
    6. ' from' → logprob: -4.471823215484619
    7. '   ' → logprob: -7.346823215484619
    8. 'finding' → logprob: -7.471823215484619
    9. '[::-' → logprob: -7.721823215484619
    10. ',' → logprob: -7.721823215484619

Token 349: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.21002839505672455
    2. ' at' → logprob: -1.7100284099578857
    3. ')' → logprob: -5.085028171539307
    4. 'in' → logprob: -6.710028171539307
    5. '2' → logprob: -8.585028648376465
    6. ' in' → logprob: -8.710028648376465
    7. '   ' → logprob: -9.210028648376465
    8. '_at' → logprob: -9.210028648376465
    9. ',' → logprob: -9.335028648376465
    10. '),' → logprob: -9.460028648376465

Token 350: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10027589648962021
    2. ' ' → logprob: -2.350275993347168
    3. ')' → logprob: -9.850275993347168
    4. 'self' → logprob: -11.850275993347168
    5. '   ' → logprob: -12.475275993347168
    6. ' )' → logprob: -14.100275993347168
    7. ',' → logprob: -14.350275993347168
    8. '  ' → logprob: -14.600275993347168
    9. ' self' → logprob: -14.600275993347168
    10. 'end' → logprob: -14.725275993347168

Token 351: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005705483490601182
    2. ' ' → logprob: -7.500570774078369
    3. ')' → logprob: -11.375570297241211
    4. 'self' → logprob: -12.875570297241211
    5. '   ' → logprob: -13.125570297241211
    6. '       ' → logprob: -15.250570297241211
    7. '  ' → logprob: -15.500570297241211
    8. '
' → logprob: -15.500570297241211
    9. ' )' → logprob: -16.12557029724121
    10. '    ' → logprob: -16.12557029724121

Token 352: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008176109753549099
    2. ')
' → logprob: -4.883176326751709
    3. '       ' → logprob: -7.883176326751709
    4. ' )' → logprob: -9.63317584991455
    5. ')
' → logprob: -9.88317584991455
    6. ').' → logprob: -11.00817584991455
    7. '   ' → logprob: -11.25817584991455
    8. ')

' → logprob: -11.63317584991455
    9. '):
' → logprob: -12.13317584991455
    10. ')`' → logprob: -12.13317584991455

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048619840294122696
    2. 'self' → logprob: -3.1736197471618652
    3. ' self' → logprob: -5.548619747161865
    4. '
' → logprob: -6.423619747161865
    5. ',' → logprob: -10.548620223999023
    6. '        
' → logprob: -10.673620223999023
    7. '   ' → logprob: -11.048620223999023
    8. '(self' → logprob: -12.798620223999023
    9. '	' → logprob: -13.048620223999023
    10. '```' → logprob: -13.173620223999023

Token 354: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2062806785106659
    2. ' self' → logprob: -1.7062807083129883
    3. '       ' → logprob: -5.331280708312988
    4. '
' → logprob: -12.456280708312988
    5. ' ' → logprob: -12.581280708312988
    6. '   ' → logprob: -13.081280708312988
    7. '	self' → logprob: -13.206280708312988
    8. ' ' → logprob: -13.331280708312988
    9. '(self' → logprob: -14.081280708312988
    10. '=self' → logprob: -14.331280708312988

Token 355: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.0028215162456035614
    2. 'dist' → logprob: -5.877821445465088
    3. '.' → logprob: -11.627821922302246
    4. '.d' → logprob: -12.127821922302246
    5. '	dist' → logprob: -13.377821922302246
    6. ' dist' → logprob: -14.502821922302246
    7. 'd' → logprob: -16.00282096862793
    8. '_dist' → logprob: -16.37782096862793
    9. 'Dist' → logprob: -16.87782096862793
    10. ' .' → logprob: -17.50282096862793

Token 356: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0004896456957794726
    2. '_from' → logprob: -7.625489711761475
    3. '_reverse' → logprob: -13.875489234924316
    4. 'to' → logprob: -15.625489234924316
    5. '_' → logprob: -15.875489234924316
    6. '_for' → logprob: -16.000490188598633
    7. 'from' → logprob: -16.125490188598633
    8. '=_' → logprob: -17.125490188598633
    9. 'To' → logprob: -18.250490188598633
    10. '_=' → logprob: -18.250490188598633

Token 357: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0005781737272627652
    2. '_reverse' → logprob: -7.5005784034729
    3. 'end' → logprob: -10.750577926635742
    4. '_' → logprob: -13.375577926635742
    5. 'reverse' → logprob: -14.375577926635742
    6. '[end' → logprob: -14.500577926635742
    7. '=end' → logprob: -15.375577926635742
    8. '_finish' → logprob: -16.000577926635742
    9. '_to' → logprob: -16.375577926635742
    10. '_END' → logprob: -16.625577926635742

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760003924369812
    2. '=' → logprob: -0.8260003924369812
    3. '[' → logprob: -9.951000213623047
    4. '=self' → logprob: -11.826000213623047
    5. ' ' → logprob: -12.951000213623047
    6. '[:]' → logprob: -14.576000213623047
    7. ')' → logprob: -14.701000213623047
    8. 'self' → logprob: -14.701000213623047
    9. '   ' → logprob: -15.326000213623047
    10. ']' → logprob: -15.326000213623047

Token 359: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01251424103975296
    2. ' self' → logprob: -4.387514114379883
    3. '(self' → logprob: -14.012514114379883
    4. '   ' → logprob: -14.137514114379883
    5. '=self' → logprob: -14.387514114379883
    6. '
' → logprob: -14.512514114379883
    7. ' ' → logprob: -14.762514114379883
    8. '       ' → logprob: -14.762514114379883
    9. '[self' → logprob: -15.137514114379883
    10. 's' → logprob: -15.387514114379883

Token 360: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -7.636475493200123e-05
    2. 'd' → logprob: -9.750076293945312
    3. '.' → logprob: -11.125076293945312
    4. ' .' → logprob: -12.875076293945312
    5. '	d' → logprob: -15.250076293945312
    6. ' d' → logprob: -15.875076293945312
    7. 'graph' → logprob: -16.250076293945312
    8. 'self' → logprob: -16.500076293945312
    9. '..' → logprob: -17.000076293945312
    10. '   ' → logprob: -17.250076293945312

Token 361: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -5.9153885558771435e-06
    2. 'ijk' → logprob: -12.125005722045898
    3. 'ij' → logprob: -15.250005722045898
    4. 'ijks' → logprob: -17.1250057220459
    5. 'ijkl' → logprob: -17.1250057220459
    6. 'jik' → logprob: -17.2500057220459
    7. '[' → logprob: -18.0000057220459
    8. '[i' → logprob: -18.2500057220459
    9. '```' → logprob: -18.2500057220459
    10. 'ist' → logprob: -18.2500057220459

Token 362: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.999452772201039e-05
    2. '2' → logprob: -10.500029563903809
    3. '(
' → logprob: -13.500029563903809
    4. ' (' → logprob: -14.250029563903809
    5. '(self' → logprob: -14.875029563903809
    6. ',' → logprob: -17.000030517578125
    7. ' ' → logprob: -17.000030517578125
    8. '((' → logprob: -18.875030517578125
    9. '(

' → logprob: -19.750030517578125
    10. '(
' → logprob: -20.125030517578125

Token 363: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018029935017693788
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.3751802444458
    4. '
' → logprob: -17.375181198120117
    5. '           ' → logprob: -17.375181198120117
    6. '۲' → logprob: -17.500181198120117
    7. '    ' → logprob: -17.625181198120117
    8. ',' → logprob: -18.000181198120117
    9. '２' → logprob: -18.000181198120117
    10. ')' → logprob: -18.000181198120117

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002505505457520485
    2. ' ,' → logprob: -6.002505302429199
    3. ',self' → logprob: -10.5025053024292
    4. ',
' → logprob: -13.7525053024292
    5. 'self' → logprob: -14.3775053024292
    6. ')' → logprob: -14.7525053024292
    7. ' self' → logprob: -15.3775053024292
    8. '),' → logprob: -17.377506256103516
    9. '(self' → logprob: -18.127506256103516
    10. '   ' → logprob: -18.127506256103516

Token 365: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023250021040439606
    2. ' self' → logprob: -3.773250102996826
    3. 'graph' → logprob: -12.523249626159668
    4. '   ' → logprob: -14.898249626159668
    5. '(self' → logprob: -15.398249626159668
    6. '[self' → logprob: -15.898249626159668
    7. '	self' → logprob: -16.398250579833984
    8. '       ' → logprob: -16.398250579833984
    9. '=self' → logprob: -17.273250579833984
    10. '           ' → logprob: -17.398250579833984

Token 366: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.13015976548194885
    2. 'graph' → logprob: -2.130159854888916
    3. 'self' → logprob: -5.880159854888916
    4. ' graph' → logprob: -8.005159378051758
    5. '	graph' → logprob: -10.505159378051758
    6. ' .' → logprob: -11.005159378051758
    7. '_graph' → logprob: -11.130159378051758
    8. '(graph' → logprob: -11.255159378051758
    9. ' self' → logprob: -11.380159378051758
    10. '.' → logprob: -11.630159378051758

Token 367: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -6.2729995988775045e-06
    2. ' .' → logprob: -12.250006675720215
    3. '.' → logprob: -13.625006675720215
    4. 'adj' → logprob: -16.6250057220459
    5. ').' → logprob: -17.2500057220459
    6. '_.' → logprob: -17.5000057220459
    7. '.graph' → logprob: -17.7500057220459
    8. '   ' → logprob: -18.1250057220459
    9. '_ad' → logprob: -18.1250057220459
    10. '.ads' → logprob: -18.1250057220459

Token 368: 'j' (ID: 73)
  Prédit: '_reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reverse' → logprob: -0.0029427558183670044
    2. '_forward' → logprob: -6.5029425621032715
    3. 'reverse' → logprob: -6.6279425621032715
    4. 'j' → logprob: -9.50294303894043
    5. 'adj' → logprob: -11.37794303894043
    6. 'self' → logprob: -11.75294303894043
    7. '_backward' → logprob: -12.00294303894043
    8. 'Reverse' → logprob: -12.62794303894043
    9. 'forward' → logprob: -13.00294303894043
    10. 'aj' → logprob: -13.50294303894043

Token 369: '_reverse' (ID: 112788)
  Prédit: '_reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reverse' → logprob: -0.005339774303138256
    2. 'reverse' → logprob: -5.255339622497559
    3. '_forward' → logprob: -9.380339622497559
    4. 'verse' → logprob: -11.380339622497559
    5. 'Reverse' → logprob: -12.005339622497559
    6. '.reverse' → logprob: -14.130339622497559
    7. '_backward' → logprob: -14.630339622497559
    8. 'forward' → logprob: -14.630339622497559
    9. 'v' → logprob: -14.880339622497559
    10. 'def' → logprob: -15.130339622497559

Token 370: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ' )' → logprob: -11.87501335144043
    3. ')
' → logprob: -12.12501335144043
    4. '))' → logprob: -14.37501335144043
    5. '       ' → logprob: -16.50001335144043
    6. ')

' → logprob: -17.25001335144043
    7. ')return' → logprob: -17.37501335144043
    8. ')`' → logprob: -18.00001335144043
    9. '   ' → logprob: -18.25001335144043
    10. '),' → logprob: -18.50001335144043

Token 371: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38141775131225586
    2. '<|end|>' → logprob: -1.5064177513122559
    3. '   ' → logprob: -3.381417751312256
    4. '       ' → logprob: -3.506417751312256
    5. 'def' → logprob: -3.881417751312256
    6. '    
' → logprob: -6.006417751312256
    7. '

' → logprob: -6.131417751312256
    8. ' def' → logprob: -6.256417751312256
    9. '<|end|>' → logprob: -6.506417751312256
    10. '        
' → logprob: -6.881417751312256

Token 372: ' Experiment' (ID: 76340)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.1782582998275757
    2. 'Solution' → logprob: -1.3032582998275757
    3. ' Edge' → logprob: -1.9282582998275757
    4. 'Edge' → logprob: -2.5532584190368652
    5. ' Path' → logprob: -2.8032584190368652
    6. 'Path' → logprob: -2.9282584190368652
    7. 'Query' → logprob: -4.678258419036865
    8. ' Query' → logprob: -4.803258419036865
    9. 'Shortest' → logprob: -5.053258419036865
    10. 'Optimizer' → logprob: -5.178258419036865

Token 373: 'Evaluator' (ID: 87172)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010942052118480206
    2. ':
' → logprob: -4.760941982269287
    3. '(' → logprob: -6.135941982269287
    4. '{' → logprob: -10.385942459106445
    5. '):' → logprob: -11.260942459106445
    6. '   ' → logprob: -11.385942459106445
    7. ' :' → logprob: -11.510942459106445
    8. '(Graph' → logprob: -11.635942459106445
    9. ':

' → logprob: -11.760942459106445
    10. '(object' → logprob: -11.885942459106445

Token 374: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003210746217519045
    2. ':
' → logprob: -5.753210544586182
    3. ' :' → logprob: -11.25321102142334
    4. ':def' → logprob: -11.62821102142334
    5. '(' → logprob: -12.37821102142334
    6. ':

' → logprob: -13.25321102142334
    7. '   ' → logprob: -13.75321102142334
    8. '(object' → logprob: -13.87821102142334
    9. '():' → logprob: -14.00321102142334
    10. '<|end|>' → logprob: -14.62821102142334

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20607087016105652
    2. ' def' → logprob: -1.831070899963379
    3. 'def' → logprob: -3.706070899963379
    4. '	def' → logprob: -7.581070899963379
    5. ':' → logprob: -8.581070899963379
    6. '```' → logprob: -8.706070899963379
    7. '  ' → logprob: -9.206070899963379
    8. 'class' → logprob: -9.206070899963379
    9. '    ' → logprob: -9.456070899963379
    10. '    
' → logprob: -9.581070899963379

Token 376: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.11690213531255722
    2. 'def' (adapté à ' def') → logprob: -2.3669021129608154
    3. '   ' → logprob: -4.1169023513793945
    4. ' __' → logprob: -8.491902351379395
    5. '__' → logprob: -10.366902351379395
    6. ' ' → logprob: -11.116902351379395
    7. '	def' → logprob: -12.616902351379395
    8. '  ' → logprob: -12.741902351379395
    9. '    ' → logprob: -13.616902351379395
    10. ':' → logprob: -13.741902351379395

Token 377: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.31442558765411377
    2. '__' → logprob: -1.3144255876541138
    3. 'init' → logprob: -6.814425468444824
    4. '_init' → logprob: -10.439425468444824
    5. ' init' → logprob: -11.189425468444824
    6. 'def' → logprob: -12.314425468444824
    7. '```' → logprob: -12.564425468444824
    8. 'valuate' → logprob: -12.689425468444824
    9. '__(' → logprob: -12.939425468444824
    10. '.__' → logprob: -13.439425468444824

Token 378: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'def' → logprob: -16.375
    3. ' init' → logprob: -16.375
    4. '(init' → logprob: -17.0
    5. '_init' → logprob: -18.25
    6. 'indent' → logprob: -19.5
    7. 'class' → logprob: -21.0
    8. 'call' → logprob: -21.125
    9. '	init' → logprob: -21.375
    10. 'inite' → logprob: -21.375

Token 379: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00018029935017693788
    2. '(self' → logprob: -9.2501802444458
    3. '__' → logprob: -9.6251802444458
    4. '__(
' → logprob: -11.1251802444458
    5. '(' → logprob: -13.6251802444458
    6. '__((' → logprob: -13.7501802444458
    7. ' (' → logprob: -14.6251802444458
    8. '<>(' → logprob: -16.125181198120117
    9. '_(' → logprob: -16.250181198120117
    10. '__('' → logprob: -16.250181198120117

Token 380: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00071695790393278
    2. ' self' → logprob: -7.2507171630859375
    3. 'graph' → logprob: -12.000717163085938
    4. ',' → logprob: -14.375717163085938
    5. '(self' → logprob: -15.500717163085938
    6. '
' → logprob: -16.750717163085938
    7. 'Graph' → logprob: -17.000717163085938
    8. ',self' → logprob: -17.875717163085938
    9. ' graph' → logprob: -18.250717163085938
    10. '   ' → logprob: -18.625717163085938

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007462753914296627
    2. 'self' → logprob: -5.007462978363037
    3. '(self' → logprob: -7.632462978363037
    4. ' ,' → logprob: -9.007462501525879
    5. '__,' → logprob: -9.632462501525879
    6. '__(' → logprob: -10.257462501525879
    7. ',self' → logprob: -11.007462501525879
    8. ' self' → logprob: -11.632462501525879
    9. ' (' → logprob: -11.882462501525879
    10. '(' → logprob: -13.382462501525879

Token 382: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.18359993398189545
    2. ' graph' → logprob: -1.8085999488830566
    3. 'n' → logprob: -7.058599948883057
    4. ' n' → logprob: -7.058599948883057
    5. 'experiment' → logprob: -7.433599948883057
    6. 'self' → logprob: -7.683599948883057
    7. 'edges' → logprob: -8.183599472045898
    8. ' edges' → logprob: -8.683599472045898
    9. ')' → logprob: -8.933599472045898
    10. ' experiment' → logprob: -9.183599472045898

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056961845606565475
    2. '):' → logprob: -2.93196177482605
    3. '):
' → logprob: -6.181962013244629
    4. ',
' → logprob: -12.806962013244629
    5. ' ,' → logprob: -13.306962013244629
    6. '(graph' → logprob: -13.681962013244629
    7. ')' → logprob: -14.056962013244629
    8. '   ' → logprob: -14.181962013244629
    9. ' ):' → logprob: -14.681962013244629
    10. '):

' → logprob: -14.806962013244629

Token 384: ' sp' (ID: 1014)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -1.2399064302444458
    2. 'start' → logprob: -1.2399064302444458
    3. 'path' → logprob: -2.7399063110351562
    4. 'k' → logprob: -2.9899063110351562
    5. ' path' → logprob: -3.3649063110351562
    6. 'dist' → logprob: -3.3649063110351562
    7. 'special' → logprob: -3.7399063110351562
    8. ' edges' → logprob: -3.8649063110351562
    9. 'target' → logprob: -4.114906311035156
    10. ' dist' → logprob: -4.114906311035156

Token 385: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.19901132583618164
    2. '_f' → logprob: -2.0740113258361816
    3. 'f' → logprob: -2.9490113258361816
    4. 'ather' → logprob: -8.074010848999023
    5. 'find' → logprob: -8.199010848999023
    6. 'Finder' → logprob: -8.324010848999023
    7. 'inder' → logprob: -8.324010848999023
    8. ')' → logprob: -8.949010848999023
    9. 'ath' → logprob: -9.074010848999023
    10. '   ' → logprob: -9.324010848999023

Token 386: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11063916981220245
    2. '):' → logprob: -2.4856390953063965
    3. ',' → logprob: -3.8606390953063965
    4. '):
' → logprob: -8.985639572143555
    5. '):

' → logprob: -9.235639572143555
    6. ')' → logprob: -9.860639572143555
    7. '   ' → logprob: -10.735639572143555
    8. 'raph' → logprob: -11.360639572143555
    9. ' ,' → logprob: -11.360639572143555
    10. 'self' → logprob: -11.360639572143555

Token 387: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7666462659835815
    2. '       ' → logprob: -0.8916462659835815
    3. 'self' → logprob: -2.766646385192871
    4. '(self' → logprob: -3.766646385192871
    5. ',' → logprob: -4.266646385192871
    6. '(graph' → logprob: -4.516646385192871
    7. ' self' → logprob: -5.016646385192871
    8. 'graph' → logprob: -5.516646385192871
    9. 'def' → logprob: -6.141646385192871
    10. ' (' → logprob: -7.641646385192871

Token 388: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014285735785961151
    2. ' self' → logprob: -4.264285564422607
    3. '       ' → logprob: -9.014286041259766
    4. 'graph' → logprob: -14.764286041259766
    5. '   ' → logprob: -15.889286041259766
    6. 'def' → logprob: -17.389286041259766
    7. '	self' → logprob: -17.639286041259766
    8. '(self' → logprob: -17.889286041259766
    9. 'import' → logprob: -18.389286041259766
    10. '```' → logprob: -19.139286041259766

Token 389: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.005263999104499817
    2. ' .' → logprob: -5.505263805389404
    3. '.' → logprob: -7.380263805389404
    4. '=' → logprob: -8.380264282226562
    5. 'graph' → logprob: -9.130264282226562
    6. '   ' → logprob: -9.505264282226562
    7. ' =' → logprob: -10.005264282226562
    8. '	graph' → logprob: -10.005264282226562
    9. ' graph' → logprob: -10.880264282226562
    10. ',' → logprob: -10.880264282226562

Token 390: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6333130598068237
    2. ' =' → logprob: -0.7583130598068237
    3. ',' → logprob: -7.508313179016113
    4. '.' → logprob: -9.633313179016113
    5. '   ' → logprob: -9.758313179016113
    6. '.graph' → logprob: -11.258313179016113
    7. ')' → logprob: -12.258313179016113
    8. ' ' → logprob: -12.633313179016113
    9. '=self' → logprob: -12.758313179016113
    10. '.=' → logprob: -12.883313179016113

Token 391: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.38754814863204956
    2. ' graph' → logprob: -1.1375482082366943
    3. 'sp' → logprob: -7.512547969818115
    4. ' sp' → logprob: -9.137548446655273
    5. '	graph' → logprob: -10.762548446655273
    6. '(graph' → logprob: -13.637548446655273
    7. '_graph' → logprob: -14.887548446655273
    8. 'Graph' → logprob: -16.137548446655273
    9. '       ' → logprob: -16.262548446655273
    10. '.graph' → logprob: -16.512548446655273

Token 392: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3109317421913147
    2. '
' → logprob: -1.43593168258667
    3. '<|end|>' → logprob: -3.68593168258667
    4. ',' → logprob: -6.06093168258667
    5. '        
' → logprob: -7.31093168258667
    6. '   ' → logprob: -7.93593168258667
    7. ' 
' → logprob: -8.560932159423828
    8. '<|end|>' → logprob: -8.810932159423828
    9. 'self' → logprob: -9.185932159423828
    10. '  
' → logprob: -9.310932159423828

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000783899100497365
    2. 'self' → logprob: -8.000783920288086
    3. '
' → logprob: -8.500783920288086
    4. ' self' → logprob: -8.750783920288086
    5. '   ' → logprob: -9.625783920288086
    6. ',' → logprob: -11.250783920288086
    7. '        
' → logprob: -12.875783920288086
    8. 'def' → logprob: -13.000783920288086
    9. ' def' → logprob: -14.750783920288086
    10. ' 
' → logprob: -15.000783920288086

Token 394: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0011604580795392394
    2. ' self' → logprob: -7.376160621643066
    3. 'sp' → logprob: -7.751160621643066
    4. '       ' → logprob: -9.251160621643066
    5. '   ' → logprob: -13.251160621643066
    6. 'def' → logprob: -13.376160621643066
    7. '
' → logprob: -13.376160621643066
    8. '        
' → logprob: -13.376160621643066
    9. ' sp' → logprob: -15.376160621643066
    10. 'graph' → logprob: -15.626160621643066

Token 395: '.sp' (ID: 16144)
  Prédit: '.sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sp' → logprob: -0.003837374970316887
    2. ' .' → logprob: -6.003837585449219
    3. '.' → logprob: -6.878837585449219
    4. '.s' → logprob: -8.753837585449219
    5. 'sp' → logprob: -9.753837585449219
    6. '
' → logprob: -10.253837585449219
    7. '.short' → logprob: -10.753837585449219
    8. '.spy' → logprob: -11.503837585449219
    9. ' sp' → logprob: -11.628837585449219
    10. '.graph' → logprob: -11.753837585449219

Token 396: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -3.292907877039397e-06
    2. 'found' → logprob: -13.75000286102295
    3. 'find' → logprob: -13.75000286102295
    4. 'f' → logprob: -14.25000286102295
    5. ' finder' → logprob: -15.12500286102295
    6. 'inder' → logprob: -17.875003814697266
    7. 'fin' → logprob: -17.875003814697266
    8. '_f' → logprob: -18.000003814697266
    9. 'finding' → logprob: -18.000003814697266
    10. 'Finder' → logprob: -18.250003814697266

Token 397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4292246997356415
    2. ' =' → logprob: -1.0542247295379639
    3. '.' → logprob: -8.679224967956543
    4. ',' → logprob: -9.054224967956543
    5. '   ' → logprob: -9.929224967956543
    6. ' ' → logprob: -10.554224967956543
    7. '<|end|>' → logprob: -10.679224967956543
    8. '.=' → logprob: -10.929224967956543
    9. '.find' → logprob: -11.179224967956543
    10. '.evaluate' → logprob: -11.179224967956543

Token 398: ' sp' (ID: 1014)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.011048882268369198
    2. ' sp' → logprob: -4.511048793792725
    3. '	sp' → logprob: -15.136049270629883
    4. '(sp' → logprob: -15.636049270629883
    5. 's' → logprob: -15.886049270629883
    6. 'spf' → logprob: -15.886049270629883
    7. '_sp' → logprob: -16.011049270629883
    8. '.sp' → logprob: -16.511049270629883
    9. 'spath' → logprob: -17.261049270629883
    10. '
' → logprob: -18.261049270629883

Token 399: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.00027111053350381553
    2. 'inder' → logprob: -8.25027084350586
    3. 'find' → logprob: -11.87527084350586
    4. 'f' → logprob: -13.87527084350586
    5. ' finder' → logprob: -14.25027084350586
    6. 'found' → logprob: -15.37527084350586
    7. 'fin' → logprob: -15.50027084350586
    8. 'fi' → logprob: -16.12527084350586
    9. 'finding' → logprob: -16.50027084350586
    10. 'fig' → logprob: -16.50027084350586

Token 400: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011587190441787243
    2. '   ' → logprob: -4.761587142944336
    3. '<|end|>' → logprob: -6.011587142944336
    4. ' def' → logprob: -8.511587142944336
    5. 'def' → logprob: -9.136587142944336
    6. '<|end|>' → logprob: -9.261587142944336
    7. '    
' → logprob: -10.011587142944336
    8. '

' → logprob: -10.761587142944336
    9. '
' → logprob: -10.886587142944336
    10. ' 
' → logprob: -11.761587142944336

Token 401: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11787330359220505
    2. '   ' → logprob: -2.242873191833496
    3. '    
' → logprob: -5.992873191833496
    4. 'def' → logprob: -6.617873191833496
    5. ' def' → logprob: -7.492873191833496
    6. '<|end|>' → logprob: -8.242873191833496
    7. ' 
' → logprob: -8.742873191833496
    8. '  
' → logprob: -9.367873191833496
    9. '

' → logprob: -10.242873191833496
    10. '<|end|>' → logprob: -10.617873191833496

Token 402: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03078261762857437
    2. 'self' (adapté à ' self') → logprob: -3.780782699584961
    3. '   ' → logprob: -5.030782699584961
    4. ' def' → logprob: -7.530782699584961
    5. '       ' → logprob: -8.405782699584961
    6. '
' → logprob: -8.530782699584961
    7. ' self' → logprob: -11.905782699584961
    8. ' ' → logprob: -12.655782699584961
    9. '	def' → logprob: -13.030782699584961
    10. '        
' → logprob: -13.655782699584961

Token 403: '.n' (ID: 1835)
  Prédit: '.best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.best' → logprob: -1.6681400537490845
    2. '.edge' → logprob: -1.6681400537490845
    3. '.edges' → logprob: -2.168139934539795
    4. '.min' → logprob: -2.418139934539795
    5. '.total' → logprob: -3.168139934539795
    6. '.dist' → logprob: -3.168139934539795
    7. '.used' → logprob: -3.168139934539795
    8. '.m' → logprob: -3.543139934539795
    9. '.results' → logprob: -3.668139934539795
    10. '.k' → logprob: -3.793139934539795

Token 404: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0901082307100296
    2. '=' → logprob: -2.4651081562042236
    3. ' ' → logprob: -7.465108394622803
    4. ',' → logprob: -7.715108394622803
    5. '   ' → logprob: -10.215107917785645
    6. '  ' → logprob: -10.715107917785645
    7. '<|end|>' → logprob: -10.840107917785645
    8. ' ,' → logprob: -11.715107917785645
    9. ')' → logprob: -11.840107917785645
    10. '_' → logprob: -11.965107917785645

Token 405: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5253459215164185
    2. ' graph' → logprob: -0.9003459215164185
    3. 'sp' → logprob: -6.650345802307129
    4. ' sp' → logprob: -8.025345802307129
    5. 'self' → logprob: -8.025345802307129
    6. ' self' → logprob: -8.525345802307129
    7. '	graph' → logprob: -9.650345802307129
    8. '(graph' → logprob: -12.150345802307129
    9. '_graph' → logprob: -13.775345802307129
    10. '.graph' → logprob: -14.025345802307129

Token 406: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.009241010062396526
    2. '.' → logprob: -4.759241104125977
    3. ' .' → logprob: -7.509241104125977
    4. '<|end|>' → logprob: -10.009241104125977
    5. 'n' → logprob: -11.509241104125977
    6. '<|end|>' → logprob: -11.884241104125977
    7. '   ' → logprob: -12.509241104125977
    8. '‌.' → logprob: -13.884241104125977
    9. '	n' → logprob: -13.884241104125977
    10. ' ' → logprob: -14.259241104125977

Token 407: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22815369069576263
    2. '
' → logprob: -1.6031537055969238
    3. '    
' → logprob: -6.728153705596924
    4. 'def' → logprob: -6.853153705596924
    5. '<|end|>' → logprob: -8.478153228759766
    6. ' def' → logprob: -8.853153228759766
    7. '       ' → logprob: -9.978153228759766
    8. '        
' → logprob: -10.853153228759766
    9. '	def' → logprob: -10.853153228759766
    10. '```' → logprob: -11.603153228759766

Token 408: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01643853820860386
    2. '
' → logprob: -4.6414384841918945
    3. 'def' → logprob: -5.1414384841918945
    4. '       ' → logprob: -8.141438484191895
    5. ' def' → logprob: -8.266438484191895
    6. '    
' → logprob: -8.766438484191895
    7. '```' → logprob: -9.891438484191895
    8. '	def' → logprob: -10.891438484191895
    9. '<|end|>' → logprob: -11.141438484191895
    10. '        
' → logprob: -11.641438484191895

Token 409: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11781883984804153
    2. 'def' → logprob: -2.242818832397461
    3. '       ' → logprob: -6.242818832397461
    4. '   ' → logprob: -6.367818832397461
    5. 'import' → logprob: -7.742818832397461
    6. ' self' → logprob: -8.117818832397461
    7. '
' → logprob: -8.367818832397461
    8. 'class' → logprob: -9.117818832397461
    9. ' def' → logprob: -9.242818832397461
    10. 'from' → logprob: -9.992818832397461

Token 410: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.261483371257782
    2. '.dist' → logprob: -1.8864834308624268
    3. '.edges' → logprob: -3.1364834308624268
    4. '.k' → logprob: -4.511483192443848
    5. '.max' → logprob: -5.386483192443848
    6. '.best' → logprob: -5.386483192443848
    7. '.edge' → logprob: -6.136483192443848
    8. '.sp' → logprob: -6.261483192443848
    9. '.total' → logprob: -6.761483192443848
    10. '.results' → logprob: -7.011483192443848

Token 411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17088432610034943
    2. '=' → logprob: -1.920884370803833
    3. ' ' → logprob: -5.420884132385254
    4. ',' → logprob: -5.545884132385254
    5. '<|end|>' → logprob: -6.170884132385254
    6. ' ,' → logprob: -9.545884132385254
    7. '  ' → logprob: -10.420884132385254
    8. ')' → logprob: -10.920884132385254
    9. '<|end|>' → logprob: -11.420884132385254
    10. '   ' → logprob: -11.795884132385254

Token 412: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37311166524887085
    2. 'len' → logprob: -1.2481117248535156
    3. ' len' → logprob: -4.373111724853516
    4. ' ' → logprob: -4.498111724853516
    5. 'sum' → logprob: -8.248111724853516
    6. ' None' → logprob: -8.873111724853516
    7. 'None' → logprob: -8.998111724853516
    8. ' sum' → logprob: -10.248111724853516
    9. '[]' → logprob: -10.748111724853516
    10. 'max' → logprob: -11.248111724853516

Token 413: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4748997688293457
    2. 'len' → logprob: -0.9748997688293457
    3. 'sum' → logprob: -7.599899768829346
    4. ' len' → logprob: -8.849899291992188
    5. 'None' → logprob: -9.974899291992188
    6. ' ' → logprob: -9.974899291992188
    7. 'max' → logprob: -10.224899291992188
    8. '[]' → logprob: -11.099899291992188
    9. '[len' → logprob: -11.474899291992188
    10. '(len' → logprob: -11.849899291992188

Token 414: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14984259009361267
    2. ' self' → logprob: -3.1498425006866455
    3. 'def' → logprob: -3.2748425006866455
    4. '<|end|>' → logprob: -3.5248425006866455
    5. '       ' → logprob: -4.149842739105225
    6. '
' → logprob: -5.024842739105225
    7. '#' (adapté à ' #') → logprob: -5.649842739105225
    8. '   ' → logprob: -7.774842739105225
    9. '```' → logprob: -7.774842739105225
    10. ' ' → logprob: -7.899842739105225

Token 417: ' Will' (ID: 6835)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7107881307601929
    2. 'self' → logprob: -1.3357881307601929
    3. 'edges' → logprob: -2.0857882499694824
    4. ' edges' → logprob: -3.2107882499694824
    5. ' self' → logprob: -3.8357882499694824
    6. ' def' → logprob: -4.210788249969482
    7. '#' → logprob: -4.210788249969482
    8. 'edge' → logprob: -4.710788249969482
    9. 'for' → logprob: -5.585788249969482
    10. 'import' → logprob: -5.710788249969482

Token 418: ' store' (ID: 4897)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.2360221892595291
    2. ' store' → logprob: -1.8610222339630127
    3. ' continue' → logprob: -4.611021995544434
    4. 'be' → logprob: -4.736021995544434
    5. 'store' → logprob: -4.861021995544434
    6. ' define' → logprob: -5.111021995544434
    7. 'def' → logprob: -5.861021995544434
    8. ' go' → logprob: -5.861021995544434
    9. 'continue' → logprob: -6.111021995544434
    10. ' initialize' → logprob: -6.236021995544434

Token 419: ' edges' (ID: 22569)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7925405502319336
    2. ' self' → logprob: -1.4175405502319336
    3. ' the' → logprob: -2.1675405502319336
    4. '[]' → logprob: -2.2925405502319336
    5. ' []' → logprob: -3.4175405502319336
    6. 'the' → logprob: -3.7925405502319336
    7. ' edges' → logprob: -4.417540550231934
    8. ' all' → logprob: -5.292540550231934
    9. 'edges' → logprob: -5.542540550231934
    10. ' an' → logprob: -5.917540550231934

Token 420: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3913325071334839
    2. '[]' → logprob: -1.6413325071334839
    3. '=[]' → logprob: -2.3913326263427734
    4. '=' → logprob: -4.641332626342773
    5. 'self' → logprob: -5.016332626342773
    6. ',' → logprob: -5.141332626342773
    7. ' []' → logprob: -5.641332626342773
    8. ' self' → logprob: -5.891332626342773
    9. '   ' → logprob: -6.766332626342773
    10. '_' → logprob: -6.766332626342773

Token 421: ' tuples' (ID: 112464)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5815334320068359
    2. ' []' → logprob: -0.8315334320068359
    3. ' a' → logprob: -5.706533432006836
    4. ' an' → logprob: -7.206533432006836
    5. ' (' → logprob: -7.706533432006836
    6. '()' → logprob: -8.456533432006836
    7. ' tuples' → logprob: -8.581533432006836
    8. 'list' → logprob: -9.081533432006836
    9. ' ()' → logprob: -9.206533432006836
    10. '[]
' → logprob: -9.456533432006836

Token 422: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.18280640244483948
    2. '       ' → logprob: -3.0578064918518066
    3. ',' → logprob: -3.6828064918518066
    4. '[]' → logprob: -3.8078064918518066
    5. '   ' → logprob: -4.307806491851807
    6. ' of' → logprob: -4.432806491851807
    7. '(' → logprob: -4.682806491851807
    8. '(self' → logprob: -5.057806491851807
    9. ' =' → logprob: -5.307806491851807
    10. '<|end|>' → logprob: -5.307806491851807

Token 423: 'a' (ID: 64)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.15087606012821198
    2. ')' → logprob: -2.525876045227051
    3. 'self' → logprob: -4.150876045227051
    4. 'int' → logprob: -4.275876045227051
    5. '0' → logprob: -4.775876045227051
    6. ' u' → logprob: -5.400876045227051
    7. 'v' → logprob: -5.525876045227051
    8. '[],' → logprob: -5.900876045227051
    9. '[])' → logprob: -6.525876045227051
    10. ',' → logprob: -6.525876045227051

Token 424: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001676971442066133
    2. ' ,' → logprob: -6.7516770362854
    3. ',b' → logprob: -8.001676559448242
    4. ',u' → logprob: -9.751676559448242
    5. 'b' → logprob: -10.001676559448242
    6. 's' → logprob: -10.876676559448242
    7. 'u' → logprob: -11.751676559448242
    8. ',v' → logprob: -12.126676559448242
    9. 'n' → logprob: -12.126676559448242
    10. '=' → logprob: -12.251676559448242

Token 425: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028168857097625732
    2. ',w' → logprob: -6.127816677093506
    3. ' ,' → logprob: -8.002817153930664
    4. ')' → logprob: -9.252817153930664
    5. ',u' → logprob: -9.377817153930664
    6. ',
' → logprob: -10.002817153930664
    7. ',c' → logprob: -11.252817153930664
    8. 'w' → logprob: -11.502817153930664
    9. ',v' → logprob: -11.752817153930664
    10. ',d' → logprob: -12.377817153930664

Token 426: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14661265909671783
    2. ')' → logprob: -2.0216126441955566
    3. ',u' → logprob: -6.396612644195557
    4. ',w' → logprob: -7.021612644195557
    5. ',)' → logprob: -7.021612644195557
    6. ' ,' → logprob: -9.146613121032715
    7. ',i' → logprob: -9.646613121032715
    8. ',c' → logprob: -10.021613121032715
    9. ',v' → logprob: -10.271613121032715
    10. ' )' → logprob: -10.271613121032715

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39821892976760864
    2. ',' → logprob: -1.2732188701629639
    3. '   ' → logprob: -3.398218870162964
    4. '<|end|>' → logprob: -4.773219108581543
    5. ' ' → logprob: -6.523219108581543
    6. ' ,' → logprob: -6.648219108581543
    7. '\' → logprob: -7.898219108581543
    8. ' in' → logprob: -8.148219108581543
    9. '        
' → logprob: -8.273219108581543
    10. '    ' → logprob: -8.398219108581543

Token 428: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.054294753819704056
    2. '       ' → logprob: -3.4292948246002197
    3. ' self' → logprob: -3.9292948246002197
    4. '[]' → logprob: -7.429294586181641
    5. '	self' → logprob: -10.30429458618164
    6. '   ' → logprob: -10.42929458618164
    7. ' ' → logprob: -10.67929458618164
    8. ' []' → logprob: -11.05429458618164
    9. 'def' → logprob: -11.05429458618164
    10. '0' → logprob: -11.17929458618164

Token 429: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.1306825876235962
    2. '_edges' → logprob: -2.8806824684143066
    3. '.' → logprob: -3.3806824684143066
    4. 'edges' → logprob: -3.8806824684143066
    5. '._' → logprob: -6.005682468414307
    6. '.edge' → logprob: -6.005682468414307
    7. 'Edges' → logprob: -6.505682468414307
    8. ' .' → logprob: -6.505682468414307
    9. '.m' → logprob: -7.380682468414307
    10. ' edges' → logprob: -7.380682468414307

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.252082496881485
    2. '=' → logprob: -1.5020824670791626
    3. '=[]' → logprob: -8.877082824707031
    4. ':' → logprob: -12.502082824707031
    5. '[]' → logprob: -13.002082824707031
    6. ',' → logprob: -13.252082824707031
    7. '   ' → logprob: -13.752082824707031
    8. '_' → logprob: -14.002082824707031
    9. ')' → logprob: -14.002082824707031
    10. '=[]
' → logprob: -14.627082824707031

Token 431: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00034237600630149245
    2. ' []' → logprob: -8.00034236907959
    3. '[]
' → logprob: -12.00034236907959
    4. '[]

' → logprob: -15.25034236907959
    5. '[' → logprob: -15.37534236907959
    6. '[]}' → logprob: -15.50034236907959
    7. '[],' → logprob: -16.875343322753906
    8. '[]"' → logprob: -17.625343322753906
    9. '[])' → logprob: -18.125343322753906
    10. '[]>' → logprob: -18.250343322753906

Token 432: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7326176762580872
    2. '<|end|>' → logprob: -1.2326176166534424
    3. '   ' → logprob: -2.2326176166534424
    4. ' def' → logprob: -2.4826176166534424
    5. 'def' → logprob: -3.6076176166534424
    6. '    
' → logprob: -5.2326178550720215
    7. '<|end|>' → logprob: -6.2326178550720215
    8. ' 
' → logprob: -7.1076178550720215
    9. '	def' → logprob: -7.2326178550720215
    10. ',' → logprob: -8.232617378234863

Token 433: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7403239607810974
    2. 'def' → logprob: -1.4903240203857422
    3. '
' → logprob: -1.7403240203857422
    4. ' def' → logprob: -2.240324020385742
    5. '    
' → logprob: -5.490324020385742
    6. ' 
' → logprob: -5.865324020385742
    7. '	def' → logprob: -5.865324020385742
    8. ' ' → logprob: -5.990324020385742
    9. '        
' → logprob: -7.115324020385742
    10. '       ' → logprob: -7.240324020385742

Token 434: ' Will' (ID: 6835)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01994621381163597
    2. ' def' → logprob: -4.519946098327637
    3. 'edge' → logprob: -5.269946098327637
    4. 'idx' → logprob: -6.269946098327637
    5. 'next' → logprob: -8.019946098327637
    6. '
' → logprob: -8.644946098327637
    7. 'index' → logprob: -8.769946098327637
    8. 'edges' → logprob: -8.894946098327637
    9. 'max' → logprob: -9.144946098327637
    10. 'import' → logprob: -9.394946098327637

Token 435: ' store' (ID: 4897)
  Prédit: ' store'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.7749097943305969
    2. 'store' → logprob: -1.3999097347259521
    3. 'continue' → logprob: -2.149909734725952
    4. 'def' → logprob: -2.524909734725952
    5. ' continue' → logprob: -3.524909734725952
    6. '   ' → logprob: -4.149909973144531
    7. ' def' → logprob: -5.274909973144531
    8. 'self' → logprob: -5.274909973144531
    9. ' add' → logprob: -5.899909973144531
    10. '_continue' → logprob: -6.024909973144531

Token 436: ' minimal' (ID: 19957)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07515937834978104
    2. '[]' → logprob: -3.3251593112945557
    3. ' self' → logprob: -4.700159549713135
    4. 'indices' → logprob: -5.200159549713135
    5. 'len' → logprob: -5.450159549713135
    6. '0' → logprob: -5.700159549713135
    7. 'idx' → logprob: -5.950159549713135
    8. 'edges' → logprob: -6.200159549713135
    9. 'the' → logprob: -6.575159549713135
    10. 'edge' → logprob: -6.575159549713135

Token 437: ' shortest' (ID: 70564)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5689727067947388
    2. '_edge' → logprob: -1.9439727067947388
    3. '_dist' → logprob: -2.568972587585449
    4. 'dist' → logprob: -3.193972587585449
    5. '_distance' → logprob: -3.568972587585449
    6. '_edges' → logprob: -3.818972587585449
    7. '_cost' → logprob: -4.068972587585449
    8. '_change' → logprob: -4.818972587585449
    9. '_w' → logprob: -5.068972587585449
    10. '_path' → logprob: -5.068972587585449

Token 438: ' distance' (ID: 9324)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5391335487365723
    2. '_path' → logprob: -1.0391335487365723
    3. '_paths' → logprob: -3.2891335487365723
    4. 'paths' → logprob: -3.9141335487365723
    5. 'edge' → logprob: -6.164133548736572
    6. ' path' → logprob: -6.789133548736572
    7. '_edge' → logprob: -7.039133548736572
    8. 'dist' → logprob: -7.664133548736572
    9. 'edges' → logprob: -7.664133548736572
    10. '_edges' → logprob: -7.914133548736572

Token 439: ' before' (ID: 2254)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7300042510032654
    2. ' =' → logprob: -1.3550043106079102
    3. '   ' → logprob: -2.10500431060791
    4. '_edges' → logprob: -3.35500431060791
    5. '_' → logprob: -3.85500431060791
    6. '_edge' → logprob: -4.73000431060791
    7. '_sum' → logprob: -4.98000431060791
    8. '_from' → logprob: -5.10500431060791
    9. '_to' → logprob: -5.23000431060791
    10. '=' → logprob: -5.23000431060791

Token 440: ' experiment' (ID: 12527)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.3396506309509277
    2. 'mod' → logprob: -1.3396506309509277
    3. 'any' → logprob: -1.7146506309509277
    4. 'change' → logprob: -2.5896506309509277
    5. ' modification' → logprob: -2.9646506309509277
    6. '_' → logprob: -3.4646506309509277
    7. ' change' → logprob: -4.089650630950928
    8. '_mod' → logprob: -4.589650630950928
    9. 'the' → logprob: -4.714650630950928
    10. ' =' → logprob: -4.964650630950928

Token 441: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9512150883674622
    2. '_before' → logprob: -1.5762150287628174
    3. '_distance' → logprob: -2.7012150287628174
    4. '_change' → logprob: -2.9512150287628174
    5. '_diff' → logprob: -3.0762150287628174
    6. 's' → logprob: -3.0762150287628174
    7. ' =' → logprob: -3.4512150287628174
    8. '_cost' → logprob: -3.5762150287628174
    9. '_time' → logprob: -3.8262150287628174
    10. '_dist' → logprob: -4.0762152671813965

Token 442: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.43695342540740967
    2. '   ' → logprob: -2.186953544616699
    3. ' self' → logprob: -2.311953544616699
    4. '       ' → logprob: -2.311953544616699
    5. '
' → logprob: -4.561953544616699
    6. ' to' → logprob: -5.186953544616699
    7. '_self' → logprob: -5.811953544616699
    8. ' _' → logprob: -5.936953544616699
    9. ',' → logprob: -6.061953544616699
    10. 's' → logprob: -6.436953544616699

Token 443: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007206656504422426
    2. ' self' → logprob: -5.007206439971924
    3. '   ' → logprob: -8.257206916809082
    4. '       ' → logprob: -9.132206916809082
    5. '0' → logprob: -9.257206916809082
    6. '[]' → logprob: -11.757206916809082
    7. ' ' → logprob: -12.632206916809082
    8. '           ' → logprob: -13.007206916809082
    9. 'None' → logprob: -13.007206916809082
    10. '1' → logprob: -13.507206916809082

Token 444: '.original' (ID: 65193)
  Prédit: '.min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -1.0791295766830444
    2. '.dist' → logprob: -1.7041295766830444
    3. '.original' → logprob: -1.8291295766830444
    4. '.initial' → logprob: -2.329129695892334
    5. '.best' → logprob: -2.454129695892334
    6. '.orig' → logprob: -2.829129695892334
    7. '.' → logprob: -3.579129695892334
    8. '.short' → logprob: -3.704129695892334
    9. '.base' → logprob: -5.204129695892334
    10. '._' → logprob: -5.579129695892334

Token 445: '_dist' (ID: 37968)
  Prédit: '_short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -0.29363030195236206
    2. '_dist' → logprob: -1.5436303615570068
    3. '_distance' → logprob: -3.918630361557007
    4. '_' → logprob: -4.543630123138428
    5. '_sp' → logprob: -5.543630123138428
    6. '_path' → logprob: -6.168630123138428
    7. '_best' → logprob: -6.168630123138428
    8. '_edges' → logprob: -7.793630123138428
    9. '_d' → logprob: -8.043630599975586
    10. '_min' → logprob: -8.418630599975586

Token 446: ' =' (ID: 314)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.09720218926668167
    2. 'ances' → logprob: -3.3472023010253906
    3. ' =' → logprob: -3.4722023010253906
    4. '=' → logprob: -4.472202301025391
    5. 'from' → logprob: -5.097202301025391
    6. '_' → logprob: -5.722202301025391
    7. 'ance' → logprob: -5.972202301025391
    8. 's' → logprob: -6.597202301025391
    9. '_before' → logprob: -7.097202301025391
    10. '_to' → logprob: -8.34720230102539

Token 447: ' self' (ID: 1051)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.82789146900177
    2. 'None' → logprob: -1.07789146900177
    3. '[]' → logprob: -2.3278913497924805
    4. 'self' → logprob: -2.4528913497924805
    5. '0' → logprob: -3.4528913497924805
    6. ' None' → logprob: -6.0778913497924805
    7. '[' → logprob: -6.5778913497924805
    8. '{}' → logprob: -6.8278913497924805
    9. 'inf' → logprob: -7.2028913497924805
    10. '[]
' → logprob: -8.07789134979248

Token 448: '.sp' (ID: 16144)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -1.0049138069152832
    2. 'from' → logprob: -2.004913806915283
    3. '.dist' → logprob: -2.004913806915283
    4. '_from' → logprob: -2.254913806915283
    5. 'float' → logprob: -2.379913806915283
    6. 'dist' → logprob: -3.129913806915283
    7. '.inf' → logprob: -3.129913806915283
    8. '[' → logprob: -3.879913806915283
    9. 'None' → logprob: -4.379913806915283
    10. '[]' → logprob: -4.629913806915283

Token 449: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -1.27099974633893e-05
    2. 'from' → logprob: -11.375012397766113
    3. 'find' → logprob: -14.750012397766113
    4. '_from' → logprob: -15.375012397766113
    5. 'found' → logprob: -15.750012397766113
    6. 'distance' → logprob: -16.37501335144043
    7. 'inder' → logprob: -16.75001335144043
    8. ' finder' → logprob: -16.75001335144043
    9. 'f' → logprob: -17.00001335144043
    10. 'fi' → logprob: -17.37501335144043

Token 450: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.028336400166153908
    2. '.compute' → logprob: -3.7783362865448
    3. '.from' → logprob: -6.403336524963379
    4. '._' → logprob: -6.403336524963379
    5. '_from' → logprob: -7.278336524963379
    6. ' .' → logprob: -8.153336524963379
    7. '.' → logprob: -8.153336524963379
    8. 'from' → logprob: -8.528336524963379
    9. '_dist' → logprob: -10.028336524963379
    10. ' ' → logprob: -10.153336524963379

Token 451: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.00014799882774241269
    2. 'from' → logprob: -8.875147819519043
    3. '_' → logprob: -13.625147819519043
    4. '_to' → logprob: -13.625147819519043
    5. ' from' → logprob: -13.750147819519043
    6. 'From' → logprob: -13.875147819519043
    7. 's' → logprob: -14.750147819519043
    8. '_for' → logprob: -14.750147819519043
    9. 'ances' → logprob: -15.375147819519043
    10. '[' → logprob: -15.375147819519043

Token 452: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.12693145871162415
    2. 'start' → logprob: -2.1269314289093018
    3. ' start' → logprob: -13.251931190490723
    4. 'sys' → logprob: -14.501931190490723
    5. '_end' → logprob: -15.126931190490723
    6. '_' → logprob: -15.501931190490723
    7. 'import' → logprob: -16.12693214416504
    8. '[start' → logprob: -16.12693214416504
    9. '_sys' → logprob: -16.62693214416504
    10. 's' → logprob: -17.00193214416504

Token 453: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 454: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.908022285439074e-05
    2. '-' → logprob: -10.375059127807617
    3. ' ' → logprob: -10.750059127807617
    4. ']' → logprob: -12.500059127807617
    5. 'self' → logprob: -13.875059127807617
    6. '   ' → logprob: -14.625059127807617
    7. ' -' → logprob: -14.875059127807617
    8. '
' → logprob: -15.250059127807617
    9. '1' → logprob: -16.000059127807617
    10. '  ' → logprob: -16.375059127807617

Token 455: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004556983185466379
    2. ' ]' → logprob: -7.750455856323242
    3. ']
' → logprob: -11.125455856323242
    4. ')' → logprob: -12.750455856323242
    5. '<|end|>' → logprob: -13.125455856323242
    6. ']

' → logprob: -14.000455856323242
    7. '])' → logprob: -14.250455856323242
    8. '],' → logprob: -14.625455856323242
    9. ']>' → logprob: -14.625455856323242
    10. '']' → logprob: -14.750455856323242

Token 456: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09995126724243164
    2. '   ' → logprob: -2.4749512672424316
    3. 'def' → logprob: -4.974951267242432
    4. ' def' → logprob: -5.724951267242432
    5. '<|end|>' → logprob: -7.849951267242432
    6. '    
' → logprob: -8.724950790405273
    7. '

' → logprob: -9.349950790405273
    8. '	def' → logprob: -9.849950790405273
    9. ' 
' → logprob: -10.599950790405273
    10. '<|end|>' → logprob: -10.974950790405273

Token 457: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.032467007637023926
    2. '
' → logprob: -3.9074668884277344
    3. ' def' → logprob: -4.532466888427734
    4. '   ' → logprob: -6.907466888427734
    5. '<|end|>' → logprob: -10.157466888427734
    6. '	def' → logprob: -10.407466888427734
    7. '    
' → logprob: -11.157466888427734
    8. '

' → logprob: -11.907466888427734
    9. ' ' → logprob: -13.032466888427734
    10. '<|end|>' → logprob: -13.157466888427734

Token 458: ' register' (ID: 5929)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.021456731483340263
    2. 'read' → logprob: -4.771456718444824
    3. ' add' → logprob: -5.271456718444824
    4. 'set' → logprob: -5.646456718444824
    5. 'load' → logprob: -6.146456718444824
    6. 'evaluate' → logprob: -8.021456718444824
    7. 'compute' → logprob: -8.021456718444824
    8. 'update' → logprob: -8.146456718444824
    9. 'run' → logprob: -8.646456718444824
    10. '_add' → logprob: -8.646456718444824

Token 459: '_edges' (ID: 68870)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0002326224057469517
    2. '_edges' → logprob: -8.750232696533203
    3. '_' → logprob: -9.625232696533203
    4. '(' → logprob: -12.625232696533203
    5. '(_' → logprob: -13.750232696533203
    6. '_node' → logprob: -14.500232696533203
    7. '_ed' → logprob: -14.500232696533203
    8. '_input' → logprob: -14.750232696533203
    9. '(self' → logprob: -15.125232696533203
    10. '_line' → logprob: -15.250232696533203

Token 460: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.672236824873835e-05
    2. '(' → logprob: -9.500076293945312
    3. ' (' → logprob: -13.375076293945312
    4. '(
' → logprob: -16.125076293945312
    5. '   ' → logprob: -16.625076293945312
    6. '(s' → logprob: -18.250076293945312
    7. 'self' → logprob: -18.375076293945312
    8. '       ' → logprob: -18.875076293945312
    9. 'def' → logprob: -19.000076293945312
    10. ',' → logprob: -19.750076293945312

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032259563449770212
    2. '(self' → logprob: -6.003225803375244
    3. ' ,' → logprob: -7.503225803375244
    4. ',self' → logprob: -8.878226280212402
    5. 'self' → logprob: -10.628226280212402
    6. ',(' → logprob: -10.878226280212402
    7. '):' → logprob: -12.628226280212402
    8. ' (' → logprob: -12.628226280212402
    9. '):
' → logprob: -13.003226280212402
    10. ')(' → logprob: -13.378226280212402

Token 462: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.15823403000831604
    2. ' edges' → logprob: -2.283234119415283
    3. 'm' → logprob: -4.283234119415283
    4. 'edge' → logprob: -4.283234119415283
    5. 'u' → logprob: -4.908234119415283
    6. 'a' → logprob: -5.283234119415283
    7. ' m' → logprob: -6.033234119415283
    8. ' edge' → logprob: -6.908234119415283
    9. ' u' → logprob: -7.408234119415283
    10. ' a' → logprob: -8.533233642578125

Token 463: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10290076583623886
    2. '):
' → logprob: -2.352900743484497
    3. ',' → logprob: -5.977900981903076
    4. ')' → logprob: -10.227900505065918
    5. '):
' → logprob: -10.602900505065918
    6. 'self' → logprob: -10.727900505065918
    7. '<|end|>' → logprob: -10.852900505065918
    8. '[]):' → logprob: -11.477900505065918
    9. ':' → logprob: -11.602900505065918
    10. '):

' → logprob: -11.852900505065918

Token 464: '       ' (ID: 309)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.13663749396800995
    2. '(edges' → logprob: -2.7616374492645264
    3. '       ' → logprob: -3.3866374492645264
    4. 'edges' → logprob: -4.2616376876831055
    5. '   ' → logprob: -4.8866376876831055
    6. ' self' → logprob: -5.5116376876831055
    7. ',' → logprob: -6.3866376876831055
    8. '    ' → logprob: -6.8866376876831055
    9. ' for' → logprob: -7.2616376876831055
    10. ' (' → logprob: -8.136637687683105

Token 465: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7722072601318359
    2. 'self' (adapté à ' self') → logprob: -1.147207260131836
    3. '       ' → logprob: -1.522207260131836
    4. ' for' → logprob: -6.522207260131836
    5. 'for' → logprob: -7.897207260131836
    6. '   ' → logprob: -9.272207260131836
    7. '[self' → logprob: -9.272207260131836
    8. '	self' → logprob: -9.647207260131836
    9. '
' → logprob: -10.022207260131836
    10. '(self' → logprob: -10.397207260131836

Token 466: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.0007461408386006951
    2. '.' → logprob: -7.750746250152588
    3. '.m' → logprob: -8.62574577331543
    4. ' .' → logprob: -9.00074577331543
    5. '.faces' → logprob: -12.62574577331543
    6. '.ed' → logprob: -12.75074577331543
    7. '.ext' → logprob: -14.50074577331543
    8. '.lines' → logprob: -14.50074577331543
    9. '.edge' → logprob: -14.62574577331543
    10. 'edges' → logprob: -14.62574577331543

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3717678487300873
    2. '=' → logprob: -1.3717678785324097
    3. '.extend' → logprob: -2.87176775932312
    4. '.' → logprob: -8.8717679977417
    5. '.=' → logprob: -10.2467679977417
    6. ' +=' → logprob: -10.3717679977417
    7. '+=' → logprob: -11.4967679977417
    8. ' .' → logprob: -12.2467679977417
    9. '.append' → logprob: -12.8717679977417
    10. ' .=' → logprob: -13.2467679977417

Token 468: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.026306336745619774
    2. ' edges' → logprob: -3.651306390762329
    3. 'edge' → logprob: -13.15130615234375
    4. 'list' → logprob: -13.40130615234375
    5. '(edges' → logprob: -13.90130615234375
    6. '.edges' → logprob: -14.90130615234375
    7. '[' → logprob: -15.02630615234375
    8. '[]' → logprob: -15.27630615234375
    9. '_edges' → logprob: -15.40130615234375
    10. 'Edges' → logprob: -15.52630615234375

Token 469: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00770091125741601
    2. '
' → logprob: -4.8827009201049805
    3. '	' → logprob: -10.50770092010498
    4. '<|end|>' → logprob: -10.50770092010498
    5. 'self' → logprob: -10.63270092010498
    6. '
' → logprob: -12.63270092010498
    7. ' self' → logprob: -13.00770092010498
    8. ',' → logprob: -13.00770092010498
    9. '	self' → logprob: -13.38270092010498
    10. '   ' → logprob: -13.88270092010498

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008489402942359447
    2. '	' → logprob: -5.133489608764648
    3. 'self' → logprob: -6.633489608764648
    4. '
' → logprob: -7.383489608764648
    5. '	self' → logprob: -8.258489608764648
    6. '<|end|>' → logprob: -8.758489608764648
    7. '   ' → logprob: -9.508489608764648
    8. ',' → logprob: -10.258489608764648
    9. '	   ' → logprob: -10.508489608764648
    10. ' self' → logprob: -10.508489608764648

Token 471: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0018225008388981223
    2. '       ' → logprob: -6.626822471618652
    3. ' self' → logprob: -7.626822471618652
    4. '   ' → logprob: -12.376822471618652
    5. '	self' → logprob: -12.376822471618652
    6. '
' → logprob: -15.001822471618652
    7. '[self' → logprob: -15.751822471618652
    8. '(self' → logprob: -16.25182342529297
    9. ' ' → logprob: -16.75182342529297
    10. '        
' → logprob: -17.37682342529297

Token 472: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0001427538663847372
    2. '.' → logprob: -9.000143051147461
    3. 'm' → logprob: -11.125143051147461
    4. ' .' → logprob: -12.375143051147461
    5. '
' → logprob: -16.37514305114746
    6. '	m' → logprob: -16.50014305114746
    7. '.м' → logprob: -16.75014305114746
    8. ').' → logprob: -16.87514305114746
    9. '`.' → logprob: -17.37514305114746
    10. '   ' → logprob: -17.37514305114746

Token 473: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026423148810863495
    2. '=' → logprob: -3.651423215866089
    3. '=len' → logprob: -9.151423454284668
    4. ' +=' → logprob: -11.526423454284668
    5. ' ' → logprob: -12.401423454284668
    6. ',' → logprob: -13.901423454284668
    7. '+=' → logprob: -14.901423454284668
    8. '=int' → logprob: -15.026423454284668
    9. '.=' → logprob: -15.151423454284668
    10. ' .=' → logprob: -15.651423454284668

Token 474: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20141403377056122
    2. ' len' → logprob: -1.7014139890670776
    3. '(len' → logprob: -14.951414108276367
    4. '=len' → logprob: -15.451414108276367
    5. '	len' → logprob: -15.701414108276367
    6. '[len' → logprob: -17.076414108276367
    7. ',len' → logprob: -19.076414108276367
    8. '<len' → logprob: -20.326414108276367
    9. '   ' → logprob: -21.951414108276367
    10. ' ' → logprob: -22.076414108276367

Token 475: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.0012702319072559476
    2. '(' → logprob: -6.751270294189453
    3. 'edges' → logprob: -9.876270294189453
    4. '(self' → logprob: -10.001270294189453
    5. '(
' → logprob: -13.126270294189453
    6. '(e' → logprob: -14.876270294189453
    7. 'self' → logprob: -15.501270294189453
    8. ' edges' → logprob: -15.876270294189453
    9. '(edge' → logprob: -16.001270294189453
    10. ' (' → logprob: -16.001270294189453

Token 476: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2246291337069124e-05
    2. ')
' → logprob: -11.000021934509277
    3. '<|end|>' → logprob: -12.750021934509277
    4. ' )' → logprob: -13.250021934509277
    5. '   ' → logprob: -15.375021934509277
    6. ')

' → logprob: -15.750021934509277
    7. ')return' → logprob: -16.250022888183594
    8. '       ' → logprob: -16.375022888183594
    9. '<|end|>' → logprob: -16.750022888183594
    10. '),' → logprob: -16.875022888183594

Token 477: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7348238825798035
    2. '<|end|>' → logprob: -0.8598238825798035
    3. 'def' → logprob: -2.8598239421844482
    4. '   ' → logprob: -3.6098239421844482
    5. '<|end|>' → logprob: -5.234823703765869
    6. ' def' → logprob: -5.609823703765869
    7. '

' → logprob: -5.859823703765869
    8. '    
' → logprob: -7.234823703765869
    9. '  
' → logprob: -8.859824180603027
    10. '	def' → logprob: -10.234824180603027

Token 478: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0020638995338231325
    2. '   ' → logprob: -6.252063751220703
    3. ' def' → logprob: -9.002063751220703
    4. '
' → logprob: -11.502063751220703
    5. ' ' → logprob: -13.752063751220703
    6. '

' → logprob: -15.377063751220703
    7. '    
' → logprob: -15.502063751220703
    8. '  ' → logprob: -15.877063751220703
    9. '	def' → logprob: -15.877063751220703
    10. '<|end|>' → logprob: -16.002063751220703

Token 479: ' evaluate' (ID: 21646)
  Prédit: ' evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.7148765325546265
    2. 'evaluate' → logprob: -0.8398765325546265
    3. ' find' → logprob: -4.214876651763916
    4. 'can' → logprob: -4.464876651763916
    5. ' minimal' → logprob: -4.714876651763916
    6. ' can' → logprob: -4.839876651763916
    7. ' compute' → logprob: -4.964876651763916
    8. 'compute' → logprob: -5.589876651763916
    9. ' check' → logprob: -5.589876651763916
    10. 'calculate' → logprob: -5.964876651763916

Token 480: '_day' (ID: 38491)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.025819340720772743
    2. '(' → logprob: -3.7758193016052246
    3. '_ex' → logprob: -6.775819301605225
    4. '_edge' → logprob: -7.150819301605225
    5. ' (' → logprob: -7.900819301605225
    6. '_' → logprob: -9.525819778442383
    7. 'self' → logprob: -9.900819778442383
    8. '_edges' → logprob: -9.900819778442383
    9. '_(' → logprob: -10.525819778442383
    10. '_self' → logprob: -11.150819778442383

Token 481: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005114326719194651
    2. '(' → logprob: -5.380114555358887
    3. ' (' → logprob: -8.255114555358887
    4. 'self' → logprob: -9.630114555358887
    5. '   ' → logprob: -9.755114555358887
    6. 's' → logprob: -10.380114555358887
    7. '(s' → logprob: -11.005114555358887
    8. '_' → logprob: -11.505114555358887
    9. '_(' → logprob: -11.505114555358887
    10. '1' → logprob: -11.880114555358887

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004652273200917989
    2. ' ,' → logprob: -7.875465393066406
    3. 'self' → logprob: -10.000465393066406
    4. '):' → logprob: -10.875465393066406
    5. ',d' → logprob: -12.375465393066406
    6. '   ' → logprob: -12.500465393066406
    7. '_,' → logprob: -12.875465393066406
    8. ',self' → logprob: -12.875465393066406
    9. ',s' → logprob: -13.500465393066406
    10. '       ' → logprob: -14.125465393066406

Token 483: ' i' (ID: 575)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.5151975154876709
    2. ' day' → logprob: -1.015197515487671
    3. 'd' → logprob: -4.76519775390625
    4. 'k' → logprob: -5.51519775390625
    5. 'u' → logprob: -5.64019775390625
    6. 'edges' → logprob: -5.76519775390625
    7. 'edge' → logprob: -5.89019775390625
    8. 'c' → logprob: -6.26519775390625
    9. ' edges' → logprob: -6.51519775390625
    10. ' d' → logprob: -6.51519775390625

Token 484: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004258138593286276
    2. ' ,' → logprob: -6.379258155822754
    3. '):' → logprob: -6.879258155822754
    4. 'self' → logprob: -6.879258155822754
    5. '):
' → logprob: -8.129258155822754
    6. '   ' → logprob: -9.379258155822754
    7. '       ' → logprob: -10.004258155822754
    8. ')' → logprob: -10.504258155822754
    9. '(self' → logprob: -11.629258155822754
    10. '  ' → logprob: -12.379258155822754

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008422021754086018
    2. '   ' → logprob: -5.383421897888184
    3. 'self' → logprob: -6.883421897888184
    4. ' (' → logprob: -7.133421897888184
    5. '(self' → logprob: -7.508421897888184
    6. '(' → logprob: -8.383421897888184
    7. ',' → logprob: -8.383421897888184
    8. ' self' → logprob: -8.758421897888184
    9. '(u' → logprob: -9.008421897888184
    10. 'a' → logprob: -9.133421897888184

Token 486: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.14159642159938812
    2. 'u' → logprob: -2.6415963172912598
    3. '   ' → logprob: -3.7665963172912598
    4. 'edge' → logprob: -4.64159631729126
    5. ' a' → logprob: -4.89159631729126
    6. 'res' → logprob: -6.14159631729126
    7. '       ' → logprob: -6.14159631729126
    8. '(u' → logprob: -6.26659631729126
    9. '(a' → logprob: -6.51659631729126
    10. 'min' → logprob: -6.64159631729126

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010203058831393719
    2. ',b' → logprob: -4.635202884674072
    3. ' ,' → logprob: -8.76020336151123
    4. 'b' → logprob: -9.01020336151123
    5. ',a' → logprob: -9.88520336151123
    6. '_,' → logprob: -10.13520336151123
    7. '=' → logprob: -10.38520336151123
    8. 'a' → logprob: -11.13520336151123
    9. ',v' → logprob: -11.63520336151123
    10. ' =' → logprob: -12.26020336151123

Token 488: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03806581720709801
    2. ' b' → logprob: -3.2880659103393555
    3. ',' → logprob: -10.913065910339355
    4. ',b' → logprob: -13.038065910339355
    5. '_,' → logprob: -13.538065910339355
    6. '_' → logprob: -14.413065910339355
    7. ' ' → logprob: -14.538065910339355
    8. '   ' → logprob: -14.788065910339355
    9. ' ,' → logprob: -15.288065910339355
    10. '=' → logprob: -15.788065910339355

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9504606825648807e-05
    2. ' ,' → logprob: -11.125019073486328
    3. '=' → logprob: -13.000019073486328
    4. ',w' → logprob: -14.000019073486328
    5. ',c' → logprob: -14.375019073486328
    6. 'c' → logprob: -14.750019073486328
    7. 'w' → logprob: -15.125019073486328
    8. ' =' → logprob: -15.625019073486328
    9. '_,' → logprob: -16.250019073486328
    10. '```' → logprob: -17.750019073486328

Token 490: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1270199716091156
    2. ' c' → logprob: -2.1270198822021484
    3. 'w' → logprob: -10.752019882202148
    4. ' =' → logprob: -11.002019882202148
    5. ' ' → logprob: -11.502019882202148
    6. ' w' → logprob: -11.502019882202148
    7. ',' → logprob: -11.877019882202148
    8. ',c' → logprob: -12.127019882202148
    9. '=' → logprob: -12.252019882202148
    10. '   ' → logprob: -12.627019882202148

Token 491: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22678251564502716
    2. ' =' → logprob: -1.6017825603485107
    3. ',' → logprob: -6.601782321929932
    4. ' ,' → logprob: -12.85178279876709
    5. '=self' → logprob: -12.97678279876709
    6. '   ' → logprob: -13.97678279876709
    7. ' ' → logprob: -14.10178279876709
    8. '=i' → logprob: -14.72678279876709
    9. '=u' → logprob: -14.85178279876709
    10. ',c' → logprob: -15.10178279876709

Token 492: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1269317865371704
    2. ' self' → logprob: -2.126931667327881
    3. '       ' → logprob: -13.001932144165039
    4. '   ' → logprob: -14.626932144165039
    5. '=self' → logprob: -14.876932144165039
    6. '(self' → logprob: -15.626932144165039
    7. '
' → logprob: -16.12693214416504
    8. '	self' → logprob: -16.25193214416504
    9. '    ' → logprob: -16.25193214416504
    10. '*self' → logprob: -16.37693214416504

Token 493: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.00014764121442567557
    2. 'edges' → logprob: -8.875147819519043
    3. '.' → logprob: -12.625147819519043
    4. ' .' → logprob: -13.375147819519043
    5. ' edges' → logprob: -14.500147819519043
    6. 'self' → logprob: -14.500147819519043
    7. '.s' → logprob: -14.875147819519043
    8. 's' → logprob: -15.000147819519043
    9. '_edges' → logprob: -15.250147819519043
    10. '   ' → logprob: -15.750147819519043

Token 494: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.999452772201039e-05
    2. 'i' → logprob: -10.750029563903809
    3. '[' → logprob: -12.500029563903809
    4. ' [' → logprob: -13.500029563903809
    5. ' i' → logprob: -13.875029563903809
    6. '       ' → logprob: -14.250029563903809
    7. '
' → logprob: -14.500029563903809
    8. '(i' → logprob: -14.875029563903809
    9. '   ' → logprob: -15.875029563903809
    10. '[
' → logprob: -16.250030517578125

Token 495: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04903649538755417
    2. ')' → logprob: -3.0490365028381348
    3. '])' → logprob: -8.549036026000977
    4. ']
' → logprob: -8.674036026000977
    5. '<|end|>' → logprob: -10.299036026000977
    6. ')]' → logprob: -10.674036026000977
    7. ' ]' → logprob: -11.174036026000977
    8. ' )' → logprob: -12.674036026000977
    9. ')
' → logprob: -12.799036026000977
    10. ']

' → logprob: -13.674036026000977

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.382668673992157
    2. '
' → logprob: -1.2576687335968018
    3. '        
' → logprob: -3.8826687335968018
    4. ' if' → logprob: -5.257668495178223
    5. ',' → logprob: -6.132668495178223
    6. ' 
' → logprob: -6.382668495178223
    7. 'if' → logprob: -7.132668495178223
    8. '
' → logprob: -7.257668495178223
    9. '  
' → logprob: -8.132668495178223
    10. '        ' → logprob: -8.132668495178223

Token 497: ' d' (ID: 272)
  Prédit: 'orig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orig' → logprob: -1.0717281103134155
    2. 'original' → logprob: -1.4467281103134155
    3. 'new' → logprob: -2.071728229522705
    4. 'if' → logprob: -2.321728229522705
    5. '       ' → logprob: -3.071728229522705
    6. 'best' → logprob: -3.571728229522705
    7. 'old' → logprob: -4.071728229522705
    8. 'res' → logprob: -4.321728229522705
    9. 'dist' → logprob: -4.321728229522705
    10. 'ans' → logprob: -4.446728229522705

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6331754326820374
    2. 'a' → logprob: -1.6331753730773926
    3. 'ist' → logprob: -2.8831753730773926
    4. 'elta' → logprob: -2.8831753730773926
    5. '1' → logprob: -3.8831753730773926
    6. '=' → logprob: -4.008175373077393
    7. '_from' → logprob: -4.133175373077393
    8. '_new' → logprob: -4.258175373077393
    9. '_a' → logprob: -4.508175373077393
    10. 'el' → logprob: -4.633175373077393

Token 499: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10710986703634262
    2. ' self' → logprob: -2.357109785079956
    3. 'c' → logprob: -5.732110023498535
    4. 'float' → logprob: -6.107110023498535
    5. 'a' → logprob: -7.982110023498535
    6. ' c' → logprob: -8.482110023498535
    7. ' float' → logprob: -8.732110023498535
    8. ' ' → logprob: -8.857110023498535
    9. 'sys' → logprob: -8.982110023498535
    10. 'min' → logprob: -9.357110023498535

Token 500: '.original' (ID: 65193)
  Prédit: '.sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sp' → logprob: -0.06771761178970337
    2. '.dist' → logprob: -2.8177175521850586
    3. '.original' → logprob: -5.567717552185059
    4. '.orig' → logprob: -7.442717552185059
    5. 'ist' → logprob: -7.567717552185059
    6. 'sp' → logprob: -8.192717552185059
    7. '.graph' → logprob: -8.442717552185059
    8. '.' → logprob: -10.067717552185059
    9. 'original' → logprob: -10.067717552185059
    10. ' .' → logprob: -10.192717552185059

Token 501: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00038038729690015316
    2. 'dist' → logprob: -8.125380516052246
    3. '_' → logprob: -10.625380516052246
    4. '_distance' → logprob: -10.625380516052246
    5. '_d' → logprob: -11.875380516052246
    6. '_cost' → logprob: -12.250380516052246
    7. '_c' → logprob: -12.875380516052246
    8. '
' → logprob: -13.125380516052246
    9. 'd' → logprob: -13.375380516052246
    10. ' _' → logprob: -13.500380516052246

Token 502: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.6677253246307373
    2. 'if' → logprob: -1.6677253246307373
    3. ' +' → logprob: -1.6677253246307373
    4. '
' → logprob: -1.9177253246307373
    5. '       ' → logprob: -2.1677253246307373
    6. '+' → logprob: -2.1677253246307373
    7. ' =' → logprob: -3.9177253246307373
    8. ',' → logprob: -4.917725563049316
    9. '=' → logprob: -5.417725563049316
    10. ' -' → logprob: -5.667725563049316

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14819376170635223
    2. ' if' → logprob: -2.648193836212158
    3. '
' → logprob: -3.023193836212158
    4. 'if' → logprob: -4.148193836212158
    5. '        
' → logprob: -7.523193836212158
    6. '   ' → logprob: -7.648193836212158
    7. '
' → logprob: -8.148193359375
    8. ',' → logprob: -8.398193359375
    9. '  
' → logprob: -9.523193359375
    10. '           ' → logprob: -9.523193359375

Token 504: ' dist' (ID: 3601)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5812950134277344
    2. ' if' → logprob: -0.9562950134277344
    3. '
' → logprob: -4.456295013427734
    4. ' res' → logprob: -4.581295013427734
    5. 'new' → logprob: -4.956295013427734
    6. ' new' → logprob: -5.081295013427734
    7. 'res' → logprob: -5.331295013427734
    8. '       ' → logprob: -5.706295013427734
    9. 'for' → logprob: -5.831295013427734
    10. 'ans' → logprob: -6.706295013427734

Token 505: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.4767654538154602
    2. ' =' → logprob: -1.6017653942108154
    3. 'from' → logprob: -2.7267653942108154
    4. '_u' → logprob: -3.3517653942108154
    5. '_a' → logprob: -3.8517653942108154
    6. '=' → logprob: -4.2267656326293945
    7. '_new' → logprob: -4.3517656326293945
    8. '_' → logprob: -5.6017656326293945
    9. '_b' → logprob: -5.6017656326293945
    10. '       ' → logprob: -5.7267656326293945

Token 506: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.02461460418999195
    2. 'start' → logprob: -3.7746145725250244
    3. ' =' → logprob: -7.0246148109436035
    4. '=' → logprob: -8.274614334106445
    5. '_' → logprob: -9.024614334106445
    6. '_end' → logprob: -10.649614334106445
    7. '=start' → logprob: -11.024614334106445
    8. '[start' → logprob: -11.899614334106445
    9. '_u' → logprob: -12.024614334106445
    10. 's' → logprob: -12.024614334106445

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4998033046722412
    2. '[a' → logprob: -1.7498033046722412
    3. '[b' → logprob: -2.624803304672241
    4. '=' → logprob: -3.249803304672241
    5. '_b' → logprob: -3.624803304672241
    6. 'b' → logprob: -3.624803304672241
    7. 'a' → logprob: -3.749803304672241
    8. '_a' → logprob: -4.62480354309082
    9. '[self' → logprob: -4.74980354309082
    10. '=self' → logprob: -6.12480354309082

Token 508: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011864649131894112
    2. ' self' → logprob: -5.26186466217041
    3. '[self' → logprob: -5.38686466217041
    4. '[' → logprob: -7.13686466217041
    5. 'float' → logprob: -8.01186466217041
    6. '       ' → logprob: -8.01186466217041
    7. ' [' → logprob: -9.13686466217041
    8. 'd' → logprob: -9.26186466217041
    9. 'a' → logprob: -9.26186466217041
    10. 'c' → logprob: -10.26186466217041

Token 509: '.sp' (ID: 16144)
  Prédit: '.sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sp' → logprob: -0.3976871073246002
    2. '.dist' → logprob: -1.2726870775222778
    3. 'dist' → logprob: -3.6476871967315674
    4. 'sp' → logprob: -4.272686958312988
    5. '.graph' → logprob: -5.647686958312988
    6. 'graph' → logprob: -6.022686958312988
    7. '   ' → logprob: -7.272686958312988
    8. '.d' → logprob: -8.022686958312988
    9. '       ' → logprob: -8.147686958312988
    10. ' dist' → logprob: -8.647686958312988

Token 510: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -3.726595241460018e-05
    2. 'from' → logprob: -10.62503719329834
    3. 'find' → logprob: -11.87503719329834
    4. 'inder' → logprob: -13.62503719329834
    5. 'found' → logprob: -14.00003719329834
    6. '   ' → logprob: -14.25003719329834
    7. '.find' → logprob: -14.62503719329834
    8. 'dist' → logprob: -14.87503719329834
    9. ' finder' → logprob: -15.00003719329834
    10. 'f' → logprob: -15.12503719329834

Token 511: '.dist' (ID: 77404)
  Prédit: '.dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.00045069176121614873
    2. 'dist' → logprob: -9.00045108795166
    3. '.d' → logprob: -9.12545108795166
    4. '.' → logprob: -9.37545108795166
    5. ' .' → logprob: -10.25045108795166
    6. 'self' → logprob: -10.50045108795166
    7. '       ' → logprob: -10.87545108795166
    8. '[' → logprob: -11.37545108795166
    9. '   ' → logprob: -11.62545108795166
    10. '.self' → logprob: -12.00045108795166

Token 512: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.3782830137643032e-05
    2. 'from' → logprob: -11.75001335144043
    3. '_for' → logprob: -12.87501335144043
    4. ' _' → logprob: -13.75001335144043
    5. '_to' → logprob: -13.75001335144043
    6. '_' → logprob: -15.12501335144043
    7. '_form' → logprob: -15.87501335144043
    8. '_f' → logprob: -16.00001335144043
    9. '[_' → logprob: -16.62501335144043
    10. ')_' → logprob: -16.75001335144043

Token 513: '_start' (ID: 10949)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3132758140563965
    2. '_start' → logprob: -1.3132758140563965
    3. '_end' → logprob: -12.688276290893555
    4. 'b' → logprob: -12.938276290893555
    5. 'a' → logprob: -13.688276290893555
    6. 'graph' → logprob: -13.938276290893555
    7. 'forward' → logprob: -14.063276290893555
    8. ' start' → logprob: -14.188276290893555
    9. 'sys' → logprob: -14.188276290893555
    10. '   ' → logprob: -14.438276290893555

Token 514: '
' (ID: 198)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.16751183569431305
    2. '[a' → logprob: -1.9175118207931519
    3. 'b' → logprob: -6.042511940002441
    4. 'a' → logprob: -6.917511940002441
    5. '[' → logprob: -7.042511940002441
    6. '        
' → logprob: -7.292511940002441
    7. '[c' → logprob: -7.542511940002441
    8. '
' → logprob: -7.667511940002441
    9. '       ' → logprob: -8.042511940002441
    10. '[d' → logprob: -8.417511940002441

Token 515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07534988224506378
    2. 'dist' → logprob: -2.825349807739258
    3. 'to' → logprob: -5.575349807739258
    4. 'if' → logprob: -6.450349807739258
    5. 'b' → logprob: -6.700349807739258
    6. 'from' → logprob: -6.950349807739258
    7. ' if' → logprob: -6.950349807739258
    8. '[' → logprob: -7.200349807739258
    9. ' dist' → logprob: -7.325349807739258
    10. ' +' → logprob: -7.325349807739258

Token 516: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0028326958417892456
    2. '       ' → logprob: -6.002832889556885
    3. 'to' → logprob: -9.127832412719727
    4. 'if' → logprob: -9.627832412719727
    5. 'for' → logprob: -10.252832412719727
    6. 'new' → logprob: -10.502832412719727
    7. '   ' → logprob: -10.502832412719727
    8. 'alt' → logprob: -11.127832412719727
    9. ' dist' → logprob: -11.127832412719727
    10. '           ' → logprob: -11.752832412719727

Token 517: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.002230905694887042
    2. '_from' → logprob: -6.127231121063232
    3. 'from' → logprob: -11.627230644226074
    4. '   ' → logprob: -11.752230644226074
    5. '       ' → logprob: -11.752230644226074
    6. '=_' → logprob: -12.127230644226074
    7. '=' → logprob: -12.877230644226074
    8. ' =' → logprob: -12.877230644226074
    9. 'to' → logprob: -13.502230644226074
    10. '[' → logprob: -13.877230644226074

Token 518: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -3.91732100979425e-05
    2. 'end' → logprob: -10.375039100646973
    3. '_' → logprob: -12.750039100646973
    4. '_to' → logprob: -13.250039100646973
    5. '[end' → logprob: -14.250039100646973
    6. '[_' → logprob: -14.500039100646973
    7. '```' → logprob: -15.000039100646973
    8. '[' → logprob: -15.375039100646973
    9. '   ' → logprob: -15.500039100646973
    10. 'self' → logprob: -16.00004005432129

Token 519: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22544248402118683
    2. '=' → logprob: -1.6004425287246704
    3. '=b' → logprob: -11.725442886352539
    4. ' ' → logprob: -11.850442886352539
    5. '    ' → logprob: -12.600442886352539
    6. '   ' → logprob: -12.975442886352539
    7. 'b' → logprob: -13.350442886352539
    8. '        ' → logprob: -13.350442886352539
    9. '=self' → logprob: -13.975442886352539
    10. '       ' → logprob: -14.100442886352539

Token 520: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10057111084461212
    2. ' self' → logprob: -2.3505711555480957
    3. '[self' → logprob: -8.350570678710938
    4. '       ' → logprob: -9.475570678710938
    5. '=self' → logprob: -10.475570678710938
    6. '(self' → logprob: -11.975570678710938
    7. '	self' → logprob: -12.350570678710938
    8. '           ' → logprob: -12.475570678710938
    9. '   ' → logprob: -12.600570678710938
    10. ' ' → logprob: -13.975570678710938

Token 521: '.sp' (ID: 16144)
  Prédit: '.sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sp' → logprob: -0.0010385256027802825
    2. 'sp' → logprob: -6.876038551330566
    3. '	sp' → logprob: -13.751038551330566
    4. '.s' → logprob: -14.001038551330566
    5. '.' → logprob: -14.126038551330566
    6. '
' → logprob: -14.376038551330566
    7. ' sp' → logprob: -14.501038551330566
    8. ' .' → logprob: -14.876038551330566
    9. '.graph' → logprob: -15.376038551330566
    10. '   ' → logprob: -15.626038551330566

Token 522: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -5.080963092041202e-06
    2. 'find' → logprob: -12.500004768371582
    3. 'inder' → logprob: -14.625004768371582
    4. ' finder' → logprob: -15.125004768371582
    5. 'fig' → logprob: -16.2500057220459
    6. 'fi' → logprob: -16.2500057220459
    7. 'f' → logprob: -16.3750057220459
    8. 'found' → logprob: -16.5000057220459
    9. '.find' → logprob: -16.6250057220459
    10. 'Finder' → logprob: -17.2500057220459

Token 523: '.dist' (ID: 77404)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012911133468151093
    2. '.dist' → logprob: -4.762911319732666
    3. 'dist' → logprob: -5.762911319732666
    4. '```' → logprob: -7.762911319732666
    5. '.' → logprob: -8.387910842895508
    6. '<|end|>' → logprob: -9.512910842895508
    7. '[self' → logprob: -9.512910842895508
    8. '[
' → logprob: -9.887910842895508
    9. ']' → logprob: -10.012910842895508
    10. '[]' → logprob: -10.637910842895508

Token 524: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0025534271262586117
    2. '_from' → logprob: -6.002553462982178
    3. 'from' → logprob: -10.37755298614502
    4. 'to' → logprob: -11.12755298614502
    5. '_for' → logprob: -11.87755298614502
    6. '_end' → logprob: -12.12755298614502
    7. 'end' → logprob: -12.12755298614502
    8. '[' → logprob: -12.37755298614502
    9. '   ' → logprob: -12.50255298614502
    10. '```' → logprob: -14.12755298614502

Token 525: '_end' (ID: 13707)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.575941264629364
    2. '_end' → logprob: -0.825941264629364
    3. ' end' → logprob: -14.82594108581543
    4. 'self' → logprob: -15.07594108581543
    5. 'End' → logprob: -15.20094108581543
    6. 'e' → logprob: -15.82594108581543
    7. 'nd' → logprob: -16.20094108581543
    8. 'END' → logprob: -16.32594108581543
    9. '[end' → logprob: -16.32594108581543
    10. '-end' → logprob: -16.45094108581543

Token 526: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3297251760959625
    2. '
' → logprob: -1.4547251462936401
    3. '        
' → logprob: -3.2047252655029297
    4. '<|end|>' → logprob: -6.32972526550293
    5. 'if' → logprob: -6.82972526550293
    6. ' if' → logprob: -7.07972526550293
    7. '  
' → logprob: -7.82972526550293
    8. ',' → logprob: -7.82972526550293
    9. ' 
' → logprob: -7.95472526550293
    10. ',
' → logprob: -8.70472526550293

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042380768805742264
    2. '
' → logprob: -4.0423808097839355
    3. 'if' → logprob: -4.2923808097839355
    4. '        
' → logprob: -5.1673808097839355
    5. ' if' → logprob: -5.6673808097839355
    6. '   ' → logprob: -7.7923808097839355
    7. '    
' → logprob: -8.917380332946777
    8. '  
' → logprob: -9.042380332946777
    9. '```' → logprob: -9.042380332946777
    10. ' 
' → logprob: -9.667380332946777

Token 528: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6306695342063904
    2. 'ans' → logprob: -1.8806695938110352
    3. 'if' → logprob: -2.130669593811035
    4. 'new' → logprob: -2.380669593811035
    5. 'alt' → logprob: -3.755669593811035
    6. 'best' → logprob: -3.880669593811035
    7. '#' (adapté à ' #') → logprob: -4.130669593811035
    8. 'option' → logprob: -4.505669593811035
    9. 'result' → logprob: -4.755669593811035
    10. 'answer' → logprob: -5.380669593811035

Token 529: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9014653563499451
    2. 'new' → logprob: -1.5264654159545898
    3. 'res' → logprob: -2.27646541595459
    4. 'option' → logprob: -3.27646541595459
    5. 'alt' → logprob: -3.40146541595459
    6. 'best' → logprob: -3.40146541595459
    7. '#' → logprob: -3.40146541595459
    8. 'ans' → logprob: -3.90146541595459
    9. 'candidate' → logprob: -4.15146541595459
    10. 'min' → logprob: -4.52646541595459

Token 530: ' consider' (ID: 3331)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10706574469804764
    2. ' if' → logprob: -3.3570656776428223
    3. 'if' → logprob: -3.8570656776428223
    4. ' check' → logprob: -4.607065677642822
    5. ' can' → logprob: -5.107065677642822
    6. '   ' → logprob: -5.357065677642822
    7. '
' → logprob: -5.732065677642822
    8. '        
' → logprob: -6.107065677642822
    9. '#' → logprob: -6.357065677642822
    10. ' #' → logprob: -6.482065677642822

Token 531: ' the' (ID: 290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6725265383720398
    2. 'self' → logprob: -2.5475265979766846
    3. ' dist' → logprob: -2.5475265979766846
    4. 'all' → logprob: -2.7975265979766846
    5. 'min' → logprob: -3.1725265979766846
    6. 'max' → logprob: -3.6725265979766846
    7. ' two' → logprob: -3.6725265979766846
    8. 'possible' → logprob: -3.6725265979766846
    9. 'two' → logprob: -3.7975265979766846
    10. ' min' → logprob: -4.1725263595581055

Token 532: ' experiment' (ID: 12527)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49397748708724976
    2. 'if' → logprob: -2.3689775466918945
    3. 'dist' → logprob: -3.1189775466918945
    4. 'min' → logprob: -3.3689775466918945
    5. ' #' → logprob: -3.4939775466918945
    6. 'possible' → logprob: -3.4939775466918945
    7. 'poss' → logprob: -3.6189775466918945
    8. 'new' → logprob: -3.8689775466918945
    9. ' if' → logprob: -4.8689775466918945
    10. 'best' → logprob: -4.8689775466918945

Token 533: ' reversing' (ID: 156690)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8719073534011841
    2. ' if' → logprob: -1.246907353401184
    3. 'if' → logprob: -2.6219072341918945
    4. ' for' → logprob: -2.8719072341918945
    5. 'for' → logprob: -3.1219072341918945
    6. '           ' → logprob: -4.2469072341918945
    7. '#' → logprob: -4.4969072341918945
    8. '   ' → logprob: -4.8719072341918945
    9. ',' → logprob: -4.8719072341918945
    10. ' edges' → logprob: -4.8719072341918945

Token 534: ' edge' (ID: 11165)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.33695706725120544
    2. 'the' → logprob: -1.3369570970535278
    3. 'a' → logprob: -4.836956977844238
    4. ' an' → logprob: -5.336956977844238
    5. ' edges' → logprob: -5.961956977844238
    6. 'edges' → logprob: -6.336956977844238
    7. 'b' → logprob: -6.711956977844238
    8. ' a' → logprob: -7.086956977844238
    9. 'edge' → logprob: -7.336956977844238
    10. 'c' → logprob: -7.586956977844238

Token 535: ' i' (ID: 575)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0072771310806274
    2. 'b' → logprob: -1.7572771310806274
    3. ' if' → logprob: -1.8822771310806274
    4. 'a' → logprob: -2.632277011871338
    5. '       ' → logprob: -3.507277011871338
    6. '(a' → logprob: -3.507277011871338
    7. ' or' → logprob: -3.632277011871338
    8. 's' → logprob: -3.757277011871338
    9. ',' → logprob: -3.882277011871338
    10. ' a' → logprob: -4.132277011871338

Token 536: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08945430815219879
    2. ',' → logprob: -3.214454412460327
    3. '
' → logprob: -3.964454412460327
    4. '        
' → logprob: -4.589454174041748
    5. ' if' → logprob: -5.464454174041748
    6. 'a' → logprob: -6.089454174041748
    7. 'if' → logprob: -6.839454174041748
    8. '   ' → logprob: -6.964454174041748
    9. ',
' → logprob: -6.964454174041748
    10. ' and' → logprob: -7.214454174041748

Token 537: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34535807371139526
    2. ' if' → logprob: -1.97035813331604
    3. ' new' → logprob: -2.97035813331604
    4. 'if' → logprob: -3.72035813331604
    5. 'new' → logprob: -4.595357894897461
    6. '        
' → logprob: -4.845357894897461
    7. 'old' → logprob: -5.095357894897461
    8. ' old' → logprob: -5.470357894897461
    9. '   ' → logprob: -5.595357894897461
    10. ' d' → logprob: -5.970357894897461

Token 538: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5366717576980591
    2. 'a' → logprob: -0.9116717576980591
    3. ' b' → logprob: -4.9116716384887695
    4. ' a' → logprob: -5.1616716384887695
    5. '   ' → logprob: -8.91167163848877
    6. '(a' → logprob: -10.78667163848877
    7. 'u' → logprob: -11.22417163848877
    8. ')' → logprob: -11.28667163848877
    9. '=a' → logprob: -11.34917163848877
    10. '=b' → logprob: -11.41167163848877

Token 539: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010927198454737663
    2. 'b' → logprob: -4.760927200317383
    3. ' a' → logprob: -6.260927200317383
    4. ')a' → logprob: -8.760927200317383
    5. ' b' → logprob: -9.760927200317383
    6. ')' → logprob: -9.760927200317383
    7. ',' → logprob: -10.010927200317383
    8. '   ' → logprob: -10.885927200317383
    9. ',a' → logprob: -10.885927200317383
    10. ')b' → logprob: -11.010927200317383

Token 540: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02488197572529316
    2. ',b' → logprob: -3.7748820781707764
    3. ' ,' → logprob: -6.899881839752197
    4. ')' → logprob: -8.524882316589355
    5. 'b' → logprob: -8.899882316589355
    6. '-' → logprob: -9.649882316589355
    7. ',
' → logprob: -9.899882316589355
    8. ',a' → logprob: -10.774882316589355
    9. '```' → logprob: -11.024882316589355
    10. ',c' → logprob: -11.024882316589355

Token 541: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06996088474988937
    2. ' b' → logprob: -2.694960832595825
    3. ' ' → logprob: -11.944960594177246
    4. ')b' → logprob: -11.944960594177246
    5. '>b' → logprob: -12.569960594177246
    6. ')' → logprob: -12.569960594177246
    7. '   ' → logprob: -13.819960594177246
    8. ',' → logprob: -13.819960594177246
    9. ',b' → logprob: -14.194960594177246
    10. 'a' → logprob: -14.319960594177246

Token 542: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021436776965856552
    2. ' to' → logprob: -4.14643669128418
    3. ' )' → logprob: -6.02143669128418
    4. ',' → logprob: -6.39643669128418
    5. '       ' → logprob: -7.27143669128418
    6. 'to' → logprob: -8.89643669128418
    7. ' ->' → logprob: -9.64643669128418
    8. '),' → logprob: -9.64643669128418
    9. ' ,' → logprob: -9.77143669128418
    10. ')->' → logprob: -10.14643669128418

Token 543: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4090602993965149
    2. '       ' → logprob: -1.7840602397918701
    3. 'to' → logprob: -1.9090602397918701
    4. ')' → logprob: -4.659060478210449
    5. ',' → logprob: -4.909060478210449
    6. ' with' → logprob: -8.03406047821045
    7. '           ' → logprob: -8.28406047821045
    8. ' if' → logprob: -8.78406047821045
    9. ' and' → logprob: -8.78406047821045
    10. '        ' → logprob: -8.90906047821045

Token 544: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.5115832090377808
    2. ' (' → logprob: -1.0115832090377808
    3. 'b' → logprob: -3.7615833282470703
    4. '(' → logprob: -5.01158332824707
    5. ' b' → logprob: -5.26158332824707
    6. '"' → logprob: -7.51158332824707
    7. '(a' → logprob: -8.38658332824707
    8. ')' → logprob: -8.51158332824707
    9. '   ' → logprob: -8.51158332824707
    10. ' ' → logprob: -9.38658332824707

Token 545: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006746512372046709
    2. ' b' → logprob: -5.506746292114258
    3. '(b' → logprob: -6.881746292114258
    4. ')' → logprob: -7.506746292114258
    5. ' (' → logprob: -7.756746292114258
    6. ')b' → logprob: -8.006746292114258
    7. '(' → logprob: -8.756746292114258
    8. ')(' → logprob: -10.131746292114258
    9. ''b' → logprob: -10.506746292114258
    10. '   ' → logprob: -10.756746292114258

Token 546: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.07507368177175522
    2. ',' → logprob: -3.325073719024658
    3. ' ->' → logprob: -3.825073719024658
    4. ')->' → logprob: -4.325073719024658
    5. ')' → logprob: -7.075073719024658
    6. ' )->' → logprob: -9.5750732421875
    7. '   ' → logprob: -9.5750732421875
    8. '->[' → logprob: -9.7000732421875
    9. ' ,' → logprob: -10.3250732421875
    10. '```' → logprob: -10.3250732421875

Token 547: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001938631059601903
    2. ' a' → logprob: -6.251938819885254
    3. ')' → logprob: -12.626938819885254
    4. '>a' → logprob: -13.751938819885254
    5. ')a' → logprob: -13.751938819885254
    6. ',' → logprob: -13.876938819885254
    7. '   ' → logprob: -13.876938819885254
    8. ' ' → logprob: -13.876938819885254
    9. '	a' → logprob: -14.751938819885254
    10. ',a' → logprob: -14.876938819885254

Token 548: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022552231326699257
    2. ')
' → logprob: -4.022552013397217
    3. '       ' → logprob: -6.147552013397217
    4. ').' → logprob: -6.647552013397217
    5. ' )' → logprob: -7.647552013397217
    6. '),' → logprob: -9.272552490234375
    7. ')

' → logprob: -9.647552490234375
    8. ')
' → logprob: -9.647552490234375
    9. ' )
' → logprob: -9.897552490234375
    10. '):
' → logprob: -10.147552490234375

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20700086653232574
    2. '
' → logprob: -1.7070008516311646
    3. '        
' → logprob: -5.582000732421875
    4. ' if' → logprob: -7.332000732421875
    5. 'if' → logprob: -7.457000732421875
    6. ',' → logprob: -9.332000732421875
    7. '  
' → logprob: -9.832000732421875
    8. '```' → logprob: -9.832000732421875
    9. ' 
' → logprob: -9.957000732421875
    10. '   ' → logprob: -9.957000732421875

Token 550: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8697760105133057
    2. 'res' → logprob: -1.6197760105133057
    3. '#' (adapté à ' #') → logprob: -2.2447760105133057
    4. 'ans' → logprob: -2.8697760105133057
    5. 'best' → logprob: -3.2447760105133057
    6. 'if' → logprob: -3.6197760105133057
    7. 'alt' → logprob: -3.9947760105133057
    8. 'd' → logprob: -3.9947760105133057
    9. 'min' → logprob: -4.119775772094727
    10. '       ' → logprob: -4.369775772094727

Token 551: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.033219814300537
    2. 'new' → logprob: -1.533219814300537
    3. 'res' → logprob: -1.783219814300537
    4. 'best' → logprob: -3.033219814300537
    5. 'alt' → logprob: -3.408219814300537
    6. 'min' → logprob: -3.783219814300537
    7. 'ans' → logprob: -4.158219814300537
    8. 'orig' → logprob: -4.283219814300537
    9. 'dist' → logprob: -4.408219814300537
    10. 'rev' → logprob: -4.533219814300537

Token 552: '1' (ID: 16)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.795776903629303
    2. '#' → logprob: -1.5457768440246582
    3. 'best' → logprob: -2.545776844024658
    4. 'new' → logprob: -2.795776844024658
    5. 'ans' → logprob: -3.545776844024658
    6. 'result' → logprob: -3.670776844024658
    7. 'old' → logprob: -4.170776844024658
    8. 'rev' → logprob: -4.170776844024658
    9. 'min' → logprob: -4.295776844024658
    10. 'dist' → logprob: -4.420776844024658

Token 553: ')' (ID: 8)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6587151288986206
    2. '       ' → logprob: -1.5337151288986206
    3. ' if' → logprob: -1.5337151288986206
    4. '#' → logprob: -4.15871524810791
    5. '.' → logprob: -4.53371524810791
    6. '
' → logprob: -5.40871524810791
    7. ')' → logprob: -5.53371524810791
    8. '   ' → logprob: -6.28371524810791
    9. 'result' → logprob: -6.40871524810791
    10. 'e' → logprob: -6.65871524810791

Token 554: ' Check' (ID: 6208)
  Prédit: 'Check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Check' → logprob: -0.702236533164978
    2. '#' → logprob: -1.827236533164978
    3. 'if' → logprob: -2.0772366523742676
    4. 'dist' → logprob: -3.9522366523742676
    5. 'for' → logprob: -4.202236652374268
    6. 'best' → logprob: -4.327236652374268
    7. 'orig' → logprob: -4.327236652374268
    8. 'If' → logprob: -4.452236652374268
    9. 'min' → logprob: -4.452236652374268
    10. 'new' → logprob: -4.577236652374268

Token 555: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2607949674129486
    2. 'if' → logprob: -1.510794997215271
    3. '   ' → logprob: -6.1357951164245605
    4. 'for' → logprob: -6.2607951164245605
    5. '#' → logprob: -7.3857951164245605
    6. 'possible' → logprob: -7.6357951164245605
    7. 'forward' → logprob: -7.6357951164245605
    8. ' for' → logprob: -7.7607951164245605
    9. ' forward' → logprob: -7.8857951164245605
    10. ' #' → logprob: -8.385794639587402

Token 556: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.036261796951293945
    2. ' dist' → logprob: -3.536261796951294
    3. 'a' → logprob: -5.536261558532715
    4. 'self' → logprob: -6.661261558532715
    5. ' a' → logprob: -7.911261558532715
    6. '(dist' → logprob: -8.786261558532715
    7. 'the' → logprob: -9.036261558532715
    8. 'c' → logprob: -9.161261558532715
    9. 'b' → logprob: -9.161261558532715
    10. ' self' → logprob: -9.536261558532715

Token 557: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0390443354845047
    2. '_' → logprob: -3.9140443801879883
    3. 'path' → logprob: -4.289044380187988
    4. 'from' → logprob: -6.789044380187988
    5. '_from' → logprob: -7.289044380187988
    6. ' path' → logprob: -7.414044380187988
    7. '_distance' → logprob: -7.539044380187988
    8. '_paths' → logprob: -7.914044380187988
    9. '_possible' → logprob: -8.164044380187988
    10. '   ' → logprob: -8.414044380187988

Token 558: ' unchanged' (ID: 73928)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.3078665733337402
    2. 'passes' → logprob: -1.8078665733337402
    3. 'through' → logprob: -1.9328665733337402
    4. 'from' → logprob: -1.9328665733337402
    5. ' passes' → logprob: -2.8078665733337402
    6. 'uses' → logprob: -3.1828665733337402
    7. 'length' → logprob: -3.4328665733337402
    8. '   ' → logprob: -3.6828665733337402
    9. ' goes' → logprob: -3.9328665733337402
    10. 'is' → logprob: -4.43286657333374

Token 559: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3223336338996887
    2. ' if' → logprob: -1.947333574295044
    3. 'if' → logprob: -2.072333574295044
    4. ':' → logprob: -5.822333812713623
    5. '
' → logprob: -6.572333812713623
    6. ' =' → logprob: -7.822333812713623
    7. ' and' → logprob: -7.947333812713623
    8. '=' → logprob: -8.072333335876465
    9. ',' → logprob: -8.072333335876465
    10. ':
' → logprob: -8.197333335876465

Token 560: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7018373608589172
    2. '       ' → logprob: -1.0768373012542725
    3. ' if' → logprob: -1.9518373012542725
    4. 'new' → logprob: -5.701837539672852
    5. 'old' → logprob: -5.951837539672852
    6. ' new' → logprob: -6.451837539672852
    7. 'for' → logprob: -6.576837539672852
    8. '```' → logprob: -6.576837539672852
    9. 'possible' → logprob: -6.951837539672852
    10. '   ' → logprob: -7.076837539672852

Token 561: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5787450075149536
    2. ' if' → logprob: -1.3287450075149536
    3. '       ' → logprob: -1.9537450075149536
    4. 'u' → logprob: -5.078744888305664
    5. 'return' → logprob: -5.703744888305664
    6. 'new' → logprob: -5.953744888305664
    7. ' new' → logprob: -6.203744888305664
    8. 'forward' → logprob: -6.328744888305664
    9. 'old' → logprob: -6.703744888305664
    10. 'd' → logprob: -6.703744888305664

Token 562: ' shortest' (ID: 70564)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1802596002817154
    2. ' if' → logprob: -2.4302597045898438
    3. 'u' → logprob: -4.430259704589844
    4. 'for' → logprob: -4.680259704589844
    5. '   ' → logprob: -4.930259704589844
    6. 'return' → logprob: -4.930259704589844
    7. 'orig' → logprob: -4.930259704589844
    8. 'old' → logprob: -5.430259704589844
    9. '#' → logprob: -5.555259704589844
    10. 'path' → logprob: -6.180259704589844

Token 563: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.07315554469823837
    2. '_' → logprob: -2.823155641555786
    3. ' path' → logprob: -5.073155403137207
    4. 'path' → logprob: -5.823155403137207
    5. ' =' → logprob: -7.948155403137207
    6. ' _' → logprob: -8.323155403137207
    7. '_distance' → logprob: -8.448155403137207
    8. '_dist' → logprob: -8.823155403137207
    9. '=' → logprob: -8.948155403137207
    10. ')' → logprob: -9.198155403137207

Token 564: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.7342215776443481
    2. ' <=' → logprob: -1.7342215776443481
    3. 'if' → logprob: -1.8592215776443481
    4. '==' → logprob: -2.1092214584350586
    5. 'from' → logprob: -2.6092214584350586
    6. '_length' → logprob: -3.2342214584350586
    7. 'length' → logprob: -3.2342214584350586
    8. '<=' → logprob: -3.4842214584350586
    9. ' =' → logprob: -3.9842214584350586
    10. ' if' → logprob: -4.234221458435059

Token 565: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15646201372146606
    2. 'min' → logprob: -2.5314619541168213
    3. 'dist' → logprob: -3.2814619541168213
    4. '<=' → logprob: -4.2814621925354
    5. 'not' → logprob: -5.4064621925354
    6. '   ' → logprob: -6.6564621925354
    7. ' min' → logprob: -6.7814621925354
    8. '```' → logprob: -6.9064621925354
    9. ' d' → logprob: -7.0314621925354
    10. 'less' → logprob: -7.1564621925354

Token 566: ' originally' (ID: 22257)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6916509866714478
    2. 'if' → logprob: -1.5666509866714478
    3. ' and' → logprob: -2.191650867462158
    4. '       ' → logprob: -2.816650867462158
    5. 'and' → logprob: -3.691650867462158
    6. '   ' → logprob: -3.941650867462158
    7. ',' → logprob: -4.441650867462158
    8. ':' → logprob: -4.566650867462158
    9. ' =' → logprob: -4.566650867462158
    10. '=' → logprob: -4.691650867462158

Token 567: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6945679783821106
    2. '
' → logprob: -1.3195679187774658
    3. ' and' → logprob: -1.9445679187774658
    4. ',' → logprob: -3.819567918777466
    5. ':' → logprob: -4.319568157196045
    6. 'and' → logprob: -4.569568157196045
    7. ' if' → logprob: -4.694568157196045
    8. '<|end|>' → logprob: -5.069568157196045
    9. ' or' → logprob: -5.444568157196045
    10. ':
' → logprob: -5.569568157196045

Token 568: ' from' (ID: 591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7474745512008667
    2. '#' → logprob: -1.6224745512008667
    3. '       ' → logprob: -1.7474745512008667
    4. 'new' → logprob: -2.8724746704101562
    5. 'dist' → logprob: -3.8724746704101562
    6. 'alt' → logprob: -4.247474670410156
    7. ' if' → logprob: -4.247474670410156
    8. 'rev' → logprob: -4.372474670410156
    9. 'reverse' → logprob: -5.372474670410156
    10. 'old' → logprob: -5.497474670410156

Token 569: ' ' (ID: 220)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.741067111492157
    2. '1' → logprob: -1.3660671710968018
    3. 'dist' → logprob: -1.3660671710968018
    4. 'a' → logprob: -5.241066932678223
    5. ' start' → logprob: -5.866066932678223
    6. ' dist' → logprob: -6.366066932678223
    7. 'source' → logprob: -7.116066932678223
    8. 'the' → logprob: -7.616066932678223
    9. ' ' → logprob: -7.866066932678223
    10. 'from' → logprob: -8.116066932678223

Token 570: '1' (ID: 16)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4982225000858307
    2. '1' → logprob: -0.9982224702835083
    3. 'dist' → logprob: -4.123222351074219
    4. 'a' → logprob: -5.748222351074219
    5. ' start' → logprob: -6.623222351074219
    6. 'source' → logprob: -6.873222351074219
    7. 'the' → logprob: -7.373222351074219
    8. 'self' → logprob: -8.498222351074219
    9. '```' → logprob: -8.873222351074219
    10. ' ' → logprob: -8.873222351074219

Token 571: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10797497630119324
    2. 'to' → logprob: -2.3579750061035156
    3. ' through' → logprob: -5.482975006103516
    4. ')' → logprob: -6.982975006103516
    5. 'through' → logprob: -7.232975006103516
    6. ',' → logprob: -7.607975006103516
    7. '       ' → logprob: -8.232975006103516
    8. ' if' → logprob: -9.357975006103516
    9. ' and' → logprob: -9.482975006103516
    10. ' ' → logprob: -9.482975006103516

Token 572: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005258422344923019
    2. ' ' → logprob: -5.255258560180664
    3. 'a' → logprob: -12.130258560180664
    4. '```' → logprob: -12.130258560180664
    5. '1' → logprob: -12.880258560180664
    6. '   ' → logprob: -13.130258560180664
    7. '
' → logprob: -13.255258560180664
    8. 'b' → logprob: -13.380258560180664
    9. ' a' → logprob: -13.505258560180664
    10. '  ' → logprob: -14.442758560180664

Token 573: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021855919621884823
    2. ' ' → logprob: -6.127185821533203
    3. '
' → logprob: -16.127185821533203
    4. '```' → logprob: -16.377185821533203
    5. 'b' → logprob: -16.439685821533203
    6. '   ' → logprob: -17.064685821533203
    7. 'a' → logprob: -17.127185821533203
    8. '  ' → logprob: -17.377185821533203
    9. '1' → logprob: -17.689685821533203
    10. 'n' → logprob: -18.064685821533203

Token 574: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18222162127494812
    2. '
' → logprob: -2.0572216510772705
    3. 'if' → logprob: -4.057221412658691
    4. '        
' → logprob: -4.807221412658691
    5. ' if' → logprob: -4.807221412658691
    6. ',' → logprob: -6.307221412658691
    7. '<|end|>' → logprob: -6.432221412658691
    8. '<|end|>' → logprob: -8.682221412658691
    9. '  
' → logprob: -8.807221412658691
    10. '   ' → logprob: -8.807221412658691

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004691306967288256
    2. '
' → logprob: -6.504691123962402
    3. '        
' → logprob: -6.504691123962402
    4. ' if' → logprob: -7.629691123962402
    5. '<|end|>' → logprob: -7.629691123962402
    6. 'if' → logprob: -8.504691123962402
    7. ',' → logprob: -9.004691123962402
    8. '   ' → logprob: -9.129691123962402
    9. '      ' → logprob: -10.504691123962402
    10. '        ' → logprob: -10.504691123962402

Token 576: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8659112453460693
    2. 'new' → logprob: -0.8659112453460693
    3. 'if' → logprob: -2.4909112453460693
    4. 'res' → logprob: -3.8659112453460693
    5. '#' (adapté à ' #') → logprob: -4.740911483764648
    6. 'alt' → logprob: -4.865911483764648
    7. 'forward' → logprob: -4.990911483764648
    8. 'dist' → logprob: -5.615911483764648
    9. 'orig' → logprob: -5.740911483764648
    10. 'd' → logprob: -5.990911483764648

Token 577: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2375390529632568
    2. 'res' → logprob: -1.6125390529632568
    3. 'new' → logprob: -2.112539052963257
    4. '#' → logprob: -2.237539052963257
    5. 'path' → logprob: -2.737539052963257
    6. 'best' → logprob: -2.987539052963257
    7. 'candidate' → logprob: -3.737539052963257
    8. 'min' → logprob: -4.112539291381836
    9. 'ans' → logprob: -4.112539291381836
    10. 'alt' → logprob: -4.487539291381836

Token 578: '2' (ID: 17)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6102074384689331
    2. 'res' → logprob: -2.2352075576782227
    3. 'new' → logprob: -2.2352075576782227
    4. '#' → logprob: -2.4852075576782227
    5. 'rev' → logprob: -3.9852075576782227
    6. 'dist' → logprob: -4.110207557678223
    7. 'orig' → logprob: -4.610207557678223
    8. 'u' → logprob: -4.610207557678223
    9. 'alt' → logprob: -4.610207557678223
    10. 'best' → logprob: -4.610207557678223

Token 579: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0180192943662405
    2. ' )' → logprob: -4.893019199371338
    3. '       ' → logprob: -4.893019199371338
    4. '   ' → logprob: -6.143019199371338
    5. ' if' → logprob: -8.518019676208496
    6. ')
' → logprob: -8.768019676208496
    7. '
' → logprob: -9.268019676208496
    8. '    ' → logprob: -9.768019676208496
    9. '        ' → logprob: -10.268019676208496
    10. 'if' → logprob: -11.018019676208496

Token 580: ' Check' (ID: 6208)
  Prédit: 'Check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Check' → logprob: -0.7450764775276184
    2. '#' → logprob: -1.6200764179229736
    3. 'dist' → logprob: -2.4950764179229736
    4. 'if' → logprob: -3.1200764179229736
    5. 'new' → logprob: -3.4950764179229736
    6. 'orig' → logprob: -3.4950764179229736
    7. 'path' → logprob: -3.9950764179229736
    8. 'for' → logprob: -4.120076656341553
    9. 'possible' → logprob: -4.745076656341553
    10. 'forward' → logprob: -5.120076656341553

Token 581: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2782726585865021
    2. 'if' → logprob: -1.5282726287841797
    3. '       ' → logprob: -3.9032726287841797
    4. '   ' → logprob: -6.02827262878418
    5. 'possible' → logprob: -7.02827262878418
    6. ' possible' → logprob: -7.27827262878418
    7. 'for' → logprob: -7.90327262878418
    8. 'dist' → logprob: -8.40327262878418
    9. ' all' → logprob: -8.65327262878418
    10. 'all' → logprob: -8.65327262878418

Token 582: ' new' (ID: 620)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07493267953395844
    2. ' dist' → logprob: -2.82493257522583
    3. 'a' → logprob: -5.32493257522583
    4. 'c' → logprob: -6.07493257522583
    5. '(dist' → logprob: -6.69993257522583
    6. ' a' → logprob: -7.07493257522583
    7. 'self' → logprob: -7.57493257522583
    8. ' (' → logprob: -7.69993257522583
    9. '   ' → logprob: -7.82493257522583
    10. '(' → logprob: -7.94993257522583

Token 583: ' shortest' (ID: 70564)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.33258986473083496
    2. '_path' → logprob: -1.957589864730835
    3. 'dist' → logprob: -2.582589864730835
    4. '_distance' → logprob: -3.832589864730835
    5. 'path' → logprob: -4.082590103149414
    6. '_d' → logprob: -4.332590103149414
    7. 'd' → logprob: -6.082590103149414
    8. 'distance' → logprob: -6.457590103149414
    9. '_short' → logprob: -6.457590103149414
    10. ' path' → logprob: -6.832590103149414

Token 584: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.33927395939826965
    2. '_path' → logprob: -1.3392739295959473
    3. ' path' → logprob: -3.7142739295959473
    4. '_' → logprob: -7.714273929595947
    5. 'dist' → logprob: -8.589274406433105
    6. 'distance' → logprob: -9.089274406433105
    7. '
' → logprob: -9.339274406433105
    8. '   ' → logprob: -9.589274406433105
    9. ')' → logprob: -9.589274406433105
    10. '_dist' → logprob: -9.714274406433105

Token 585: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5952038764953613
    2. 'can' → logprob: -1.8452038764953613
    3. ' is' → logprob: -2.2202038764953613
    4. 'is' → logprob: -2.3452038764953613
    5. 'length' → logprob: -2.7202038764953613
    6. ' can' → logprob: -2.9702038764953613
    7. 'could' → logprob: -2.9702038764953613
    8. '=' → logprob: -3.2202038764953613
    9. ' might' → logprob: -3.5952038764953613
    10. 'might' → logprob: -3.7202038764953613

Token 586: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.4726746082305908
    2. ' be' → logprob: -1.9726746082305908
    3. 'exist' → logprob: -2.097674608230591
    4. 'go' → logprob: -3.597674608230591
    5. 'pass' → logprob: -3.722674608230591
    6. 'im' → logprob: -3.847674608230591
    7. 'possibly' → logprob: -4.722674369812012
    8. ' exist' → logprob: -4.847674369812012
    9. 'use' → logprob: -5.097674369812012
    10. 'potential' → logprob: -5.472674369812012

Token 587: ' shorter' (ID: 37168)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.6375928521156311
    2. 'min' → logprob: -1.1375927925109863
    3. 'd' → logprob: -3.1375927925109863
    4. 'short' → logprob: -3.2625927925109863
    5. ' min' → logprob: -4.012592792510986
    6. ' found' → logprob: -4.262592792510986
    7. ' shorter' → logprob: -5.012592792510986
    8. ' d' → logprob: -5.137592792510986
    9. 'better' → logprob: -5.512592792510986
    10. 'sm' → logprob: -5.637592792510986

Token 588: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16854262351989746
    2. 'if' → logprob: -2.9185426235198975
    3. ' if' → logprob: -3.5435426235198975
    4. '
' → logprob: -3.9185426235198975
    5. ' or' → logprob: -3.9185426235198975
    6. ',' → logprob: -4.668542861938477
    7. ':' → logprob: -4.793542861938477
    8. ':
' → logprob: -5.543542861938477
    9. '        
' → logprob: -5.543542861938477
    10. 'or' → logprob: -6.168542861938477

Token 589: ' using' (ID: 2360)
  Prédit: 'using'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'using' → logprob: -0.3935304582118988
    2. 'consider' → logprob: -1.8935304880142212
    3. 'checking' → logprob: -3.1435303688049316
    4. 'going' → logprob: -3.2685303688049316
    5. 'passing' → logprob: -3.8935303688049316
    6. 'min' → logprob: -4.643530368804932
    7. 'trying' → logprob: -4.643530368804932
    8. 're' → logprob: -4.643530368804932
    9. 'taking' → logprob: -4.768530368804932
    10. 'dist' → logprob: -5.143530368804932

Token 590: ' the' (ID: 290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.45218151807785034
    2. ' dist' → logprob: -1.0771815776824951
    3. 'b' → logprob: -5.077181339263916
    4. 'c' → logprob: -5.827181339263916
    5. ' reversed' → logprob: -6.452181339263916
    6. 'a' → logprob: -6.577181339263916
    7. ' c' → logprob: -6.702181339263916
    8. 'self' → logprob: -6.702181339263916
    9. ' a' → logprob: -6.952181339263916
    10. ' b' → logprob: -6.952181339263916

Token 591: ' reversed' (ID: 57184)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.29713454842567444
    2. 'c' → logprob: -2.6721346378326416
    3. 're' → logprob: -2.7971346378326416
    4. 'dist' → logprob: -2.7971346378326416
    5. ' b' → logprob: -4.0471343994140625
    6. ' reversed' → logprob: -4.6721343994140625
    7. 'edge' → logprob: -4.9221343994140625
    8. 'reverse' → logprob: -5.1721343994140625
    9. ' dist' → logprob: -5.4221343994140625
    10. 'a' → logprob: -5.4221343994140625

Token 592: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.13105960190296173
    2. ' edge' → logprob: -2.1310596466064453
    3. '_edge' → logprob: -5.881059646606445
    4. ')' → logprob: -7.756059646606445
    5. '
' → logprob: -8.881059646606445
    6. 'c' → logprob: -9.256059646606445
    7. '#' → logprob: -9.631059646606445
    8. ''' → logprob: -10.131059646606445
    9. '"' → logprob: -10.131059646606445
    10. 'a' → logprob: -10.256059646606445

Token 593: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07395750284194946
    2. '
' → logprob: -3.0739574432373047
    3. '        
' → logprob: -4.323957443237305
    4. 'if' → logprob: -5.573957443237305
    5. 'a' → logprob: -5.823957443237305
    6. '#' → logprob: -6.823957443237305
    7. ',' → logprob: -6.948957443237305
    8. ' if' → logprob: -7.323957443237305
    9. 'from' → logprob: -8.448957443237305
    10. '

' → logprob: -8.573957443237305

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2882688045501709
    2. 'new' → logprob: -2.538268804550171
    3. 'if' → logprob: -2.913268804550171
    4. 'for' → logprob: -4.16326904296875
    5. 'dist' → logprob: -4.53826904296875
    6. ' new' → logprob: -4.66326904296875
    7. ' if' → logprob: -4.66326904296875
    8. 'u' → logprob: -4.91326904296875
    9. 'possible' → logprob: -5.03826904296875
    10. 'forward' → logprob: -5.16326904296875

Token 595: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7506074905395508
    2. 'res' → logprob: -1.5006074905395508
    3. '       ' → logprob: -2.000607490539551
    4. 'ans' → logprob: -3.250607490539551
    5. 'possible' → logprob: -4.250607490539551
    6. 'if' → logprob: -4.375607490539551
    7. 'best' → logprob: -4.375607490539551
    8. 'alt' → logprob: -4.625607490539551
    9. '#' (adapté à ' #') → logprob: -4.750607490539551
    10. 'dist' → logprob: -5.000607490539551

Token 596: ' shortest' (ID: 70564)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.1516848802566528
    2. 'res' → logprob: -2.1516847610473633
    3. ' new' → logprob: -2.9016847610473633
    4. 'if' → logprob: -2.9016847610473633
    5. 'option' → logprob: -3.1516847610473633
    6. '       ' → logprob: -3.1516847610473633
    7. ' alt' → logprob: -3.5266847610473633
    8. 'cand' → logprob: -3.6516847610473633
    9. 'possible' → logprob: -3.7766847610473633
    10. 'ans' → logprob: -3.7766847610473633

Token 597: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.44058844447135925
    2. 'path' → logprob: -1.0655884742736816
    3. '=' → logprob: -6.190588474273682
    4. 'from' → logprob: -6.190588474273682
    5. '       ' → logprob: -6.440588474273682
    6. 'if' → logprob: -6.565588474273682
    7. '_from' → logprob: -6.940588474273682
    8. ' =' → logprob: -7.315588474273682
    9. '_' → logprob: -7.690588474273682
    10. '   ' → logprob: -7.815588474273682

Token 598: ' candidate' (ID: 17098)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.6963351964950562
    2. ' =' → logprob: -2.0713353157043457
    3. '_candidate' → logprob: -2.4463353157043457
    4. '_th' → logprob: -2.6963353157043457
    5. '=' → logprob: -3.3213353157043457
    6. 'via' → logprob: -3.4463353157043457
    7. '_new' → logprob: -3.6963353157043457
    8. 'can' → logprob: -3.6963353157043457
    9. '_possible' → logprob: -4.196335315704346
    10. '_with' → logprob: -4.196335315704346

Token 599: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.651013195514679
    2. '=' → logprob: -0.901013195514679
    3. '_candidate' → logprob: -3.526013135910034
    4. '1' → logprob: -4.026013374328613
    5. 'candidate' → logprob: -4.151013374328613
    6. 'c' → logprob: -6.276013374328613
    7. 'cand' → logprob: -7.026013374328613
    8. '       ' → logprob: -7.276013374328613
    9. '_new' → logprob: -7.276013374328613
    10. '_v' → logprob: -7.651013374328613

Token 600: ' reversed' (ID: 57184)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.013090351596474648
    2. ' dist' → logprob: -5.138090133666992
    3. 'self' → logprob: -5.888090133666992
    4. 'a' → logprob: -6.638090133666992
    5. '#' → logprob: -7.388090133666992
    6. 're' → logprob: -8.013090133666992
    7. 'c' → logprob: -8.263090133666992
    8. '=' → logprob: -8.388090133666992
    9. '
' → logprob: -8.513090133666992
    10. '(dist' → logprob: -8.513090133666992

Token 601: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.4827483892440796
    2. '_edge' → logprob: -1.2327483892440796
    3. ' edge' → logprob: -2.982748508453369
    4. '_' → logprob: -3.607748508453369
    5. ' _' → logprob: -5.857748508453369
    6. 'a' → logprob: -6.357748508453369
    7. ''' → logprob: -6.732748508453369
    8. '"' → logprob: -6.857748508453369
    9. ')' → logprob: -6.982748508453369
    10. 'b' → logprob: -7.107748508453369

Token 602: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49497705698013306
    2. ' =' → logprob: -1.4949769973754883
    3. 'candidate' → logprob: -2.6199769973754883
    4. '_candidate' → logprob: -2.6199769973754883
    5. '       ' → logprob: -4.869976997375488
    6. '1' → logprob: -6.119976997375488
    7. 'c' → logprob: -6.369976997375488
    8. 'cand' → logprob: -6.494976997375488
    9. ' candidate' → logprob: -7.369976997375488
    10. 'from' → logprob: -7.494976997375488

Token 603: '       ' (ID: 309)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.33876535296440125
    2. 'candidate' → logprob: -2.3387653827667236
    3. 'new' → logprob: -2.5887653827667236
    4. '       ' → logprob: -3.0887653827667236
    5. ' cand' → logprob: -3.9637653827667236
    6. 'c' → logprob: -4.3387651443481445
    7. 'dist' → logprob: -5.3387651443481445
    8. ' new' → logprob: -5.4637651443481445
    9. 'possible' → logprob: -5.5887651443481445
    10. 'alt' → logprob: -5.7137651443481445

Token 604: ' #' (ID: 1069)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.6068163514137268
    2. 'candidate' → logprob: -1.356816291809082
    3. 'new' → logprob: -2.481816291809082
    4. 'min' → logprob: -2.606816291809082
    5. 'c' → logprob: -4.356816291809082
    6. 'ans' → logprob: -5.356816291809082
    7. 'dist' → logprob: -5.356816291809082
    8. 'possible' → logprob: -5.481816291809082
    9. ' cand' → logprob: -6.356816291809082
    10. 'best' → logprob: -6.356816291809082

Token 605: ' dist' (ID: 3601)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0539066791534424
    2. 'candidate' → logprob: -1.5539066791534424
    3. 'cand' → logprob: -1.8039066791534424
    4. 'dist' → logprob: -2.0539066791534424
    5. 'new' → logprob: -2.5539066791534424
    6. 'possible' → logprob: -3.8039066791534424
    7. 'c' → logprob: -4.178906440734863
    8. 'ans' → logprob: -4.928906440734863
    9. ' min' → logprob: -5.803906440734863
    10. 'potential' → logprob: -5.803906440734863

Token 606: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0005140714929439127
    2. 'from' → logprob: -7.750514030456543
    3. '_to' → logprob: -10.250514030456543
    4. '   ' → logprob: -11.750514030456543
    5. ' =' → logprob: -12.125514030456543
    6. '=' → logprob: -12.125514030456543
    7. '_' → logprob: -12.125514030456543
    8. '[' → logprob: -12.875514030456543
    9. '[from' → logprob: -12.875514030456543
    10. '_for' → logprob: -13.000514030456543

Token 607: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -4.4849443838757e-06
    2. 'start' → logprob: -13.125004768371582
    3. '[start' → logprob: -13.750004768371582
    4. '_START' → logprob: -14.875004768371582
    5. 'a' → logprob: -15.000004768371582
    6. '_a' → logprob: -16.375003814697266
    7. '```' → logprob: -16.500003814697266
    8. '_' → logprob: -16.625003814697266
    9. '[_' → logprob: -16.625003814697266
    10. '[' → logprob: -16.750003814697266

Token 608: '[b' (ID: 40800)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.000540762091986835
    2. '[b' → logprob: -7.750540733337402
    3. 'a' → logprob: -9.375540733337402
    4. '[c' → logprob: -10.875540733337402
    5. '[' → logprob: -12.625540733337402
    6. '   ' → logprob: -14.375540733337402
    7. ' [' → logprob: -15.125540733337402
    8. '```' → logprob: -15.125540733337402
    9. '=a' → logprob: -15.250540733337402
    10. 'b' → logprob: -15.500540733337402

Token 609: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012156403623521328
    2. ']+' → logprob: -4.5121564865112305
    3. ' ]' → logprob: -7.6371564865112305
    4. ' +' → logprob: -7.8871564865112305
    5. '+' → logprob: -8.63715648651123
    6. '[a' → logprob: -10.63715648651123
    7. '[' → logprob: -10.88715648651123
    8. '+]' → logprob: -12.26215648651123
    9. '][' → logprob: -12.51215648651123
    10. 'a' → logprob: -12.88715648651123

Token 610: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07890664041042328
    2. '+' → logprob: -2.578906536102295
    3. ' +
' → logprob: -12.703907012939453
    4. ',' → logprob: -12.953907012939453
    5. ')' → logprob: -13.453907012939453
    6. '<|end|>' → logprob: -13.453907012939453
    7. '+
' → logprob: -13.703907012939453
    8. '+c' → logprob: -13.828907012939453
    9. '[' → logprob: -14.203907012939453
    10. '       ' → logprob: -14.453907012939453

Token 611: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004522804170846939
    2. ' c' → logprob: -5.504522800445557
    3. '   ' → logprob: -8.879523277282715
    4. 'w' → logprob: -9.629523277282715
    5. '1' → logprob: -10.129523277282715
    6. ' ' → logprob: -10.504523277282715
    7. '
' → logprob: -10.504523277282715
    8. '```' → logprob: -10.629523277282715
    9. '    ' → logprob: -11.004523277282715
    10. ')c' → logprob: -11.129523277282715

Token 612: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602267622947693
    2. '+' → logprob: -1.910226821899414
    3. ' ' → logprob: -15.035226821899414
    4. '    ' → logprob: -15.160226821899414
    5. '        ' → logprob: -15.285226821899414
    6. ' +
' → logprob: -15.535226821899414
    7. '           ' → logprob: -15.660226821899414
    8. '   ' → logprob: -15.660226821899414
    9. '+self' → logprob: -15.910226821899414
    10. '       ' → logprob: -16.035226821899414

Token 613: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004631738178431988
    2. ' dist' → logprob: -5.379631519317627
    3. '   ' → logprob: -12.504631996154785
    4. '	dist' → logprob: -13.129631996154785
    5. '       ' → logprob: -13.879631996154785
    6. '```' → logprob: -14.254631996154785
    7. '
' → logprob: -14.379631996154785
    8. '(dist' → logprob: -14.379631996154785
    9. '.dist' → logprob: -14.629631996154785
    10. 'self' → logprob: -14.629631996154785

Token 614: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.03805331513285637
    2. '_from' → logprob: -3.288053274154663
    3. 'from' → logprob: -11.538053512573242
    4. '[to' → logprob: -14.163053512573242
    5. '[' → logprob: -14.413053512573242
    6. 'to' → logprob: -15.163053512573242
    7. '[_' → logprob: -15.413053512573242
    8. '   ' → logprob: -16.163053512573242
    9. '_for' → logprob: -16.288053512573242
    10. '```' → logprob: -16.538053512573242

Token 615: '_end' (ID: 13707)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.006116251926869154
    2. '_end' → logprob: -5.6311163902282715
    3. 'start' → logprob: -6.0061163902282715
    4. '[a' → logprob: -10.506115913391113
    5. 'end' → logprob: -11.631115913391113
    6. '[b' → logprob: -12.381115913391113
    7. '[start' → logprob: -12.381115913391113
    8. 'a' → logprob: -12.756115913391113
    9. 'Start' → logprob: -14.381115913391113
    10. '_forward' → logprob: -15.506115913391113

Token 616: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00048381939996033907
    2. '[b' → logprob: -8.000483512878418
    3. 'a' → logprob: -9.625483512878418
    4. '[' → logprob: -10.000483512878418
    5. '[
' → logprob: -11.625483512878418
    6. ' [' → logprob: -11.875483512878418
    7. '   ' → logprob: -12.250483512878418
    8. '
' → logprob: -13.000483512878418
    9. '```' → logprob: -13.250483512878418
    10. '       ' → logprob: -13.500483512878418

Token 617: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23213396966457367
    2. ']' → logprob: -1.6071339845657349
    3. '])' → logprob: -5.732133865356445
    4. ' )' → logprob: -6.107133865356445
    5. ' ]' → logprob: -7.357133865356445
    6. ')]' → logprob: -8.857133865356445
    7. '       ' → logprob: -8.857133865356445
    8. '[' → logprob: -9.107133865356445
    9. ')
' → logprob: -10.107133865356445
    10. '   ' → logprob: -10.482133865356445

Token 618: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36636415123939514
    2. '       ' → logprob: -2.4913642406463623
    3. ' ' → logprob: -3.2413642406463623
    4. ' +' → logprob: -3.4913642406463623
    5. ' if' → logprob: -3.4913642406463623
    6. '<|end|>' → logprob: -3.6163642406463623
    7. '+' → logprob: -3.7413642406463623
    8. '
' → logprob: -4.241364002227783
    9. ' )' → logprob: -4.991364002227783
    10. ' <=' → logprob: -5.116364002227783

Token 619: ' cand' (ID: 31771)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9425637722015381
    2. '+' → logprob: -1.567563772201538
    3. ' ' → logprob: -2.317563772201538
    4. '       ' → logprob: -2.442563772201538
    5. '<|end|>' → logprob: -2.942563772201538
    6. ' if' → logprob: -3.317563772201538
    7. ' +' → logprob: -3.567563772201538
    8. '   ' → logprob: -3.692563772201538
    9. 'if' → logprob: -4.442564010620117
    10. ',' → logprob: -4.567564010620117

Token 620: ' =' (ID: 314)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.037189025431871414
    2. '=' → logprob: -3.66218900680542
    3. ' =' → logprob: -4.53718900680542
    4. '_id' → logprob: -9.412189483642578
    5. '=c' → logprob: -12.162189483642578
    6. '=id' → logprob: -12.287189483642578
    7. 'inate' → logprob: -12.412189483642578
    8. '_candidate' → logprob: -12.537189483642578
    9. '[' → logprob: -12.787189483642578
    10. '_' → logprob: -13.037189483642578

Token 621: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09163999557495117
    2. ' dist' → logprob: -2.466639995574951
    3. 'self' → logprob: -6.341639995574951
    4. ' self' → logprob: -7.591639995574951
    5. '(dist' → logprob: -8.21664047241211
    6. '       ' → logprob: -9.21664047241211
    7. '	dist' → logprob: -10.84164047241211
    8. '   ' → logprob: -11.09164047241211
    9. '           ' → logprob: -12.34164047241211
    10. '.dist' → logprob: -12.46664047241211

Token 622: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.005281900055706501
    2. '_to' → logprob: -5.255281925201416
    3. 'from' → logprob: -10.005281448364258
    4. '[_' → logprob: -14.380281448364258
    5. '[b' → logprob: -14.505281448364258
    6. '_for' → logprob: -14.755281448364258
    7. '_b' → logprob: -15.380281448364258
    8. '_' → logprob: -15.630281448364258
    9. '_of' → logprob: -15.880281448364258
    10. ' from' → logprob: -16.130281448364258

Token 623: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.16029642522335052
    2. 'start' → logprob: -1.9102964401245117
    3. 'b' → logprob: -10.160296440124512
    4. '_end' → logprob: -10.910296440124512
    5. 'a' → logprob: -11.785296440124512
    6. '[start' → logprob: -13.285296440124512
    7. ' start' → logprob: -13.535296440124512
    8. 'sys' → logprob: -13.785296440124512
    9. '_b' → logprob: -14.160296440124512
    10. 'end' → logprob: -14.785296440124512

Token 624: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00010413920972496271
    2. 'b' → logprob: -9.375103950500488
    3. '[c' → logprob: -11.250103950500488
    4. '[' → logprob: -12.875103950500488
    5. '[a' → logprob: -13.000103950500488
    6. '   ' → logprob: -14.250103950500488
    7. ' [' → logprob: -15.750103950500488
    8. '[
' → logprob: -16.000104904174805
    9. '```' → logprob: -16.375104904174805
    10. ',b' → logprob: -16.625104904174805

Token 625: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13149438798427582
    2. '+' → logprob: -2.1314942836761475
    3. ']' → logprob: -5.881494522094727
    4. '+c' → logprob: -6.506494522094727
    5. ']+' → logprob: -8.381494522094727
    6. ')' → logprob: -11.256494522094727
    7. ' ]' → logprob: -11.631494522094727
    8. '+]' → logprob: -12.131494522094727
    9. '   ' → logprob: -12.756494522094727
    10. '[' → logprob: -13.756494522094727

Token 626: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22586029767990112
    2. '+' → logprob: -1.600860357284546
    3. '+c' → logprob: -7.725860118865967
    4. '<|end|>' → logprob: -13.600860595703125
    5. '+
' → logprob: -13.850860595703125
    6. '[' → logprob: -13.975860595703125
    7. '
' → logprob: -14.350860595703125
    8. ' +
' → logprob: -14.475860595703125
    9. '+C' → logprob: -14.725860595703125
    10. 'c' → logprob: -14.975860595703125

Token 627: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0024763736873865128
    2. ' c' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.877476692199707
    4. '	c' → logprob: -16.25247573852539
    5. ' ' → logprob: -16.37747573852539
    6. '+' → logprob: -17.87747573852539
    7. '+c' → logprob: -17.87747573852539
    8. ' +' → logprob: -18.00247573852539
    9. '  ' → logprob: -18.25247573852539
    10. '       ' → logprob: -18.37747573852539

Token 628: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326326727867126
    2. '+' → logprob: -1.3132632970809937
    3. ' +
' → logprob: -15.063262939453125
    4. '+
' → logprob: -15.063262939453125
    5. '>' → logprob: -15.188262939453125
    6. ' ' → logprob: -15.563262939453125
    7. '[' → logprob: -16.313262939453125
    8. ')' → logprob: -16.813262939453125
    9. ' ' → logprob: -17.063262939453125
    10. '           ' → logprob: -17.188262939453125

Token 629: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0031777136027812958
    2. ' dist' → logprob: -5.753177642822266
    3. '(dist' → logprob: -19.003177642822266
    4. '	dist' → logprob: -19.378177642822266
    5. '.dist' → logprob: -20.128177642822266
    6. '   ' → logprob: -20.753177642822266
    7. '_dist' → logprob: -21.003177642822266
    8. 'dest' → logprob: -21.503177642822266
    9. ' ' → logprob: -22.753177642822266
    10. 'diff' → logprob: -23.128177642822266

Token 630: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -9.088346359931165e-07
    2. '_from' → logprob: -14.625000953674316
    3. 'to' → logprob: -14.750000953674316
    4. '_TO' → logprob: -18.25
    5. '*_' → logprob: -18.625
    6. 'To' → logprob: -18.625
    7. '"_' → logprob: -19.125
    8. '._' → logprob: -19.375
    9. '```' → logprob: -19.375
    10. '[_' → logprob: -20.0

Token 631: '_end' (ID: 13707)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1426856815814972
    2. '_end' → logprob: -2.017685651779175
    3. ' end' → logprob: -12.767685890197754
    4. 'nd' → logprob: -12.767685890197754
    5. 'End' → logprob: -12.892685890197754
    6. 'e' → logprob: -15.017685890197754
    7. '-end' → logprob: -15.142685890197754
    8. '_start' → logprob: -15.392685890197754
    9. 'start' → logprob: -15.892685890197754
    10. '   ' → logprob: -16.142684936523438

Token 632: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.000263481488218531
    2. 'a' → logprob: -8.250263214111328
    3. '[
' → logprob: -14.250263214111328
    4. '[' → logprob: -14.500263214111328
    5. ' [' → logprob: -14.500263214111328
    6. '```' → logprob: -15.250263214111328
    7. '(a' → logprob: -16.125263214111328
    8. ' a' → logprob: -16.375263214111328
    9. '   ' → logprob: -16.500263214111328
    10. '
' → logprob: -17.500263214111328

Token 633: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027167420834302902
    2. '       ' → logprob: -4.027167320251465
    3. '<|end|>' → logprob: -5.152167320251465
    4. ')
' → logprob: -6.277167320251465
    5. '
' → logprob: -7.152167320251465
    6. ' if' → logprob: -8.652167320251465
    7. ']' → logprob: -8.777167320251465
    8. '<|end|>' → logprob: -10.277167320251465
    9. ' )' → logprob: -10.402167320251465
    10. 'if' → logprob: -10.402167320251465

Token 634: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2234540432691574
    2. '       ' → logprob: -1.9734539985656738
    3. ' if' → logprob: -3.098453998565674
    4. 'if' → logprob: -4.473453998565674
    5. '<|end|>' → logprob: -6.098453998565674
    6. '        
' → logprob: -7.598453998565674
    7. '   ' → logprob: -8.098454475402832
    8. '\n' → logprob: -8.473454475402832
    9. '  
' → logprob: -8.473454475402832
    10. 'return' → logprob: -8.598454475402832

Token 635: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03840257227420807
    2. '       ' → logprob: -3.788402557373047
    3. ' if' → logprob: -4.288402557373047
    4. 'return' → logprob: -6.663402557373047
    5. '
' → logprob: -10.788402557373047
    6. ' return' → logprob: -12.163402557373047
    7. '   ' → logprob: -12.413402557373047
    8. '        
' → logprob: -12.538402557373047
    9. '	if' → logprob: -12.913402557373047
    10. '#' (adapté à ' #') → logprob: -14.538402557373047

Token 636: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006316597107797861
    2. 'return' → logprob: -5.756316661834717
    3. '       ' → logprob: -5.881316661834717
    4. ' if' → logprob: -8.006316184997559
    5. '
' → logprob: -12.756316184997559
    6. '   ' → logprob: -13.131316184997559
    7. '```' → logprob: -13.881316184997559
    8. '#' → logprob: -14.131316184997559
    9. ' return' → logprob: -14.131316184997559
    10. '        
' → logprob: -14.506316184997559

Token 637: '3' (ID: 18)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0038266757037490606
    2. 'return' → logprob: -5.62882661819458
    3. '       ' → logprob: -8.628827095031738
    4. ' if' → logprob: -10.128827095031738
    5. 'result' → logprob: -12.878827095031738
    6. 'new' → logprob: -13.503827095031738
    7. '#' → logprob: -13.503827095031738
    8. '```' → logprob: -14.503827095031738
    9. '   ' → logprob: -15.003827095031738
    10. '        
' → logprob: -15.378827095031738

Token 638: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6794074773788452
    2. '       ' → logprob: -0.8044074773788452
    3. ')' → logprob: -4.179407596588135
    4. '
' → logprob: -4.429407596588135
    5. 'if' → logprob: -4.804407596588135
    6. ' =' → logprob: -6.179407596588135
    7. '<|end|>' → logprob: -6.429407596588135
    8. '=' → logprob: -6.804407596588135
    9. '   ' → logprob: -6.929407596588135
    10. ' ==' → logprob: -7.554407596588135

Token 639: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05990150198340416
    2. 'return' → logprob: -3.059901475906372
    3. ' if' → logprob: -5.309901714324951
    4. '       ' → logprob: -5.434901714324951
    5. 'result' → logprob: -6.434901714324951
    6. ' return' → logprob: -8.934901237487793
    7. '#' → logprob: -9.809901237487793
    8. '```' → logprob: -10.559901237487793
    9. 'answer' → logprob: -10.559901237487793
    10. 'res' → logprob: -11.059901237487793

Token 640: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20206806063652039
    2. 'if' → logprob: -1.7020680904388428
    3. '       ' → logprob: -7.577067852020264
    4. '   ' → logprob: -9.577068328857422
    5. '
' → logprob: -10.452068328857422
    6. 'return' → logprob: -11.202068328857422
    7. ' return' → logprob: -11.702068328857422
    8. '    ' → logprob: -12.077068328857422
    9. 'dist' → logprob: -12.577068328857422
    10. '#' → logprob: -12.827068328857422

Token 641: ' new' (ID: 620)
  Prédit: ' cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cand' → logprob: -0.7002605199813843
    2. 'cand' → logprob: -0.7002605199813843
    3. 'dist' → logprob: -5.450260639190674
    4. ' dist' → logprob: -6.575260639190674
    5. 'd' → logprob: -7.075260639190674
    6. ' d' → logprob: -8.200260162353516
    7. 'c' → logprob: -8.825260162353516
    8. ' ' → logprob: -11.075260162353516
    9. 'self' → logprob: -11.762760162353516
    10. '```' → logprob: -12.012760162353516

Token 642: ' shortest' (ID: 70564)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22348017990589142
    2. 'if' → logprob: -1.973480224609375
    3. '_' → logprob: -4.098480224609375
    4. ' =' → logprob: -4.848480224609375
    5. ' _' → logprob: -4.973480224609375
    6. 'dist' → logprob: -5.223480224609375
    7. '_dist' → logprob: -5.348480224609375
    8. ' shortest' → logprob: -5.973480224609375
    9. '_path' → logprob: -6.098480224609375
    10. '_short' → logprob: -6.473480224609375

Token 643: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.014120728708803654
    2. 'path' → logprob: -4.389120578765869
    3. ' path' → logprob: -6.514120578765869
    4. '_' → logprob: -10.389121055603027
    5. 'if' → logprob: -10.514121055603027
    6. ')' → logprob: -11.514121055603027
    7. '==' → logprob: -11.889121055603027
    8. '_paths' → logprob: -11.889121055603027
    9. '```' → logprob: -12.014121055603027
    10. ' if' → logprob: -12.389121055603027

Token 644: ' can' (ID: 665)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1813165247440338
    2. '<' → logprob: -2.681316614151001
    3. ' =' → logprob: -3.181316614151001
    4. '=' → logprob: -3.556316614151001
    5. ' <=' → logprob: -4.806316375732422
    6. '<c' → logprob: -5.056316375732422
    7. '<=' → logprob: -5.306316375732422
    8. ' >' → logprob: -6.056316375732422
    9. '>' → logprob: -6.556316375732422
    10. ')' → logprob: -7.681316375732422

Token 645: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7074711322784424
    2. 'be' → logprob: -0.8324711322784424
    3. '<' → logprob: -2.8324711322784424
    4. ' <' → logprob: -5.582470893859863
    5. ' become' → logprob: -6.082470893859863
    6. '=' → logprob: -6.207470893859863
    7. 'short' → logprob: -7.332470893859863
    8. '>' → logprob: -7.332470893859863
    9. 'de' → logprob: -7.582470893859863
    10. '<=' → logprob: -7.832470893859863

Token 646: ' longer' (ID: 7411)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.6312328577041626
    2. 'dist' → logprob: -1.8812328577041626
    3. ' shorter' → logprob: -2.131232738494873
    4. 'd' → logprob: -2.756232738494873
    5. 'sm' → logprob: -3.131232738494873
    6. 'less' → logprob: -3.256232738494873
    7. 'cand' → logprob: -3.381232738494873
    8. 'min' → logprob: -5.756232738494873
    9. ' smaller' → logprob: -5.756232738494873
    10. ' dist' → logprob: -6.006232738494873

Token 647: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03531081974506378
    2. ',' → logprob: -4.785310745239258
    3. ' if' → logprob: -5.035310745239258
    4. '=' → logprob: -5.160310745239258
    5. ' =' → logprob: -5.285310745239258
    6. ' or' → logprob: -5.660310745239258
    7. 'if' → logprob: -6.035310745239258
    8. ':' → logprob: -6.785310745239258
    9. 'elif' → logprob: -8.160310745239258
    10. '#' → logprob: -8.785310745239258

Token 648: ' no' (ID: 860)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.0845092311501503
    2. 'unch' → logprob: -3.3345091342926025
    3. 'not' → logprob: -4.334509372711182
    4. ' equal' → logprob: -4.834509372711182
    5. 'short' → logprob: -4.959509372711182
    6. 'different' → logprob: -5.084509372711182
    7. 'un' → logprob: -5.209509372711182
    8. '#' → logprob: -7.209509372711182
    9. 'same' → logprob: -7.209509372711182
    10. 'changed' → logprob: -7.334509372711182

Token 649: ' route' (ID: 9656)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2222796529531479
    2. 'w' → logprob: -2.3472795486450195
    3. 'ne' → logprob: -2.7222795486450195
    4. 'change' → logprob: -4.2222795486450195
    5. ' longer' → logprob: -4.8472795486450195
    6. ' change' → logprob: -5.3472795486450195
    7. 'te' → logprob: -5.5972795486450195
    8. 'r' → logprob: -6.3472795486450195
    9. 'n' → logprob: -6.4722795486450195
    10. ' t' → logprob: -7.3472795486450195

Token 650: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2588132321834564
    2. ' if' → logprob: -1.6338132619857788
    3. 'if' → logprob: -3.5088131427764893
    4. ',' → logprob: -6.633813381195068
    5. ':' → logprob: -8.13381290435791
    6. ' or' → logprob: -8.13381290435791
    7. '.' → logprob: -8.75881290435791
    8. ':
' → logprob: -9.25881290435791
    9. ' =' → logprob: -9.38381290435791
    10. '        
' → logprob: -9.38381290435791

Token 651: ' we' (ID: 581)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.7381999492645264
    2. 'dist' → logprob: -0.9881999492645264
    3. ' dist' → logprob: -2.6131999492645264
    4. ' cand' → logprob: -2.6131999492645264
    5. 'd' → logprob: -6.3632001876831055
    6. '   ' → logprob: -7.8632001876831055
    7. ' d' → logprob: -8.613200187683105
    8. '(dist' → logprob: -8.675700187683105
    9. 'c' → logprob: -8.988200187683105
    10. ' ' → logprob: -9.738200187683105

Token 652: ' exclude' (ID: 39566)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5458285212516785
    2. 'cannot' → logprob: -2.6708285808563232
    3. ' try' → logprob: -2.7958285808563232
    4. 'reverse' → logprob: -2.9208285808563232
    5. ' reverse' → logprob: -3.1708285808563232
    6. 'try' → logprob: -3.2958285808563232
    7. ' cannot' → logprob: -3.4208285808563232
    8. 'consider' → logprob: -3.4208285808563232
    9. ' use' → logprob: -3.7958285808563232
    10. ' consider' → logprob: -4.795828342437744

Token 653: ' edge' (ID: 11165)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6139964461326599
    2. 'the' → logprob: -1.3639965057373047
    3. ' the' → logprob: -2.2389965057373047
    4. 'edge' → logprob: -3.2389965057373047
    5. '(a' → logprob: -4.113996505737305
    6. ' a' → logprob: -4.363996505737305
    7. ' edge' → logprob: -4.988996505737305
    8. ' (' → logprob: -4.988996505737305
    9. 'c' → logprob: -6.238996505737305
    10. 'this' → logprob: -6.488996505737305

Token 654: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2723746299743652
    2. ' i' → logprob: -1.7723746299743652
    3. '       ' → logprob: -1.7723746299743652
    4. ' if' → logprob: -2.0223746299743652
    5. 'if' → logprob: -2.7723746299743652
    6. '[i' → logprob: -3.0223746299743652
    7. 'a' → logprob: -3.3973746299743652
    8. ' (' → logprob: -3.8973746299743652
    9. 's' → logprob: -4.522374629974365
    10. ' a' → logprob: -4.647374629974365

Token 655: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14331938326358795
    2. 'i' → logprob: -2.1433193683624268
    3. ' a' → logprob: -4.518319606781006
    4. ' i' → logprob: -5.893319606781006
    5. ')' → logprob: -6.393319606781006
    6. ',' → logprob: -8.393319129943848
    7. '   ' → logprob: -8.768319129943848
    8. '),' → logprob: -9.518319129943848
    9. '
' → logprob: -9.768319129943848
    10. '```' → logprob: -9.768319129943848

Token 656: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1444835215806961
    2. ',b' → logprob: -2.6444835662841797
    3. '->' → logprob: -2.8944835662841797
    4. ')->' → logprob: -5.26948356628418
    5. ' ,' → logprob: -6.14448356628418
    6. ')' → logprob: -7.64448356628418
    7. ' ->' → logprob: -9.26948356628418
    8. ',a' → logprob: -10.26948356628418
    9. '-->' → logprob: -10.39448356628418
    10. '}->' → logprob: -10.89448356628418

Token 657: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000431861262768507
    2. ' b' → logprob: -7.750432014465332
    3. ')b' → logprob: -14.750432014465332
    4. ')' → logprob: -15.000432014465332
    5. ' ' → logprob: -15.250432014465332
    6. '```' → logprob: -16.000431060791016
    7. '	b' → logprob: -16.875431060791016
    8. 'a' → logprob: -17.500431060791016
    9. '>b' → logprob: -17.500431060791016
    10. '
' → logprob: -17.625431060791016

Token 658: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5033379197120667
    2. '):' → logprob: -1.0033378601074219
    3. '):
' → logprob: -3.753337860107422
    4. ')
' → logprob: -6.253337860107422
    5. '       ' → logprob: -6.253337860107422
    6. ').' → logprob: -7.253337860107422
    7. '):

' → logprob: -8.003337860107422
    8. '),' → logprob: -9.003337860107422
    9. ',' → logprob: -9.503337860107422
    10. ':' → logprob: -9.878337860107422

Token 659: ' original' (ID: 4756)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8649702668190002
    2. ' if' → logprob: -1.4899702072143555
    3. '
' → logprob: -1.7399702072143555
    4. 'if' → logprob: -2.6149702072143555
    5. '<|end|>' → logprob: -3.2399702072143555
    6. '        
' → logprob: -3.9899702072143555
    7. ',' → logprob: -4.4899702072143555
    8. '#' → logprob: -5.6149702072143555
    9. '  
' → logprob: -5.7399702072143555
    10. 'dist' → logprob: -5.8649702072143555

Token 660: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06636043637990952
    2. 'if' → logprob: -4.4413604736328125
    3. 'exclude' → logprob: -4.5663604736328125
    4. '        
' → logprob: -4.9413604736328125
    5. '#' → logprob: -5.1913604736328125
    6. ' if' → logprob: -5.4413604736328125
    7. 'excluded' → logprob: -5.6913604736328125
    8. '
' → logprob: -5.9413604736328125
    9. 'dist' → logprob: -6.0663604736328125
    10. 'original' → logprob: -6.1913604736328125

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2575090229511261
    2. ' if' → logprob: -2.2575089931488037
    3. '
' → logprob: -2.3825089931488037
    4. 'if' → logprob: -4.007509231567383
    5. '        
' → logprob: -5.632509231567383
    6. '<|end|>' → logprob: -6.632509231567383
    7. ',' → logprob: -6.757509231567383
    8. 'return' → logprob: -7.132509231567383
    9. '#' → logprob: -7.257509231567383
    10. '```' → logprob: -7.382509231567383

Token 662: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18305400013923645
    2. 'if' → logprob: -2.433053970336914
    3. ' if' → logprob: -3.808053970336914
    4. '
' → logprob: -3.808053970336914
    5. 'exclude' → logprob: -4.308053970336914
    6. '```' → logprob: -5.308053970336914
    7. 'excluded' → logprob: -5.808053970336914
    8. 'return' → logprob: -6.058053970336914
    9. '        
' → logprob: -6.183053970336914
    10. 'dist' → logprob: -6.433053970336914

Token 663: ' Since' (ID: 12265)
  Prédit: 'exclude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exclude' → logprob: -0.608272910118103
    2. 'if' → logprob: -1.858272910118103
    3. 'excluded' → logprob: -2.7332730293273926
    4. '       ' → logprob: -2.7332730293273926
    5. 'orig' → logprob: -3.2332730293273926
    6. '#' → logprob: -3.9832730293273926
    7. 'dist' → logprob: -3.9832730293273926
    8. 'old' → logprob: -4.483273029327393
    9. '```' → logprob: -4.608273029327393
    10. 'original' → logprob: -4.733273029327393

Token 664: ' original' (ID: 4756)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6596102118492126
    2. 'c' → logprob: -2.1596102714538574
    3. 'self' → logprob: -2.4096102714538574
    4. 'cand' → logprob: -2.4096102714538574
    5. 'd' → logprob: -3.2846102714538574
    6. 'the' → logprob: -3.7846102714538574
    7. '#' → logprob: -4.034610271453857
    8. ' dist' → logprob: -4.159610271453857
    9. ' cand' → logprob: -4.284610271453857
    10. 'a' → logprob: -4.284610271453857

Token 665: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14026013016700745
    2. '_dist' → logprob: -3.5152602195739746
    3. ' code' → logprob: -4.015260219573975
    4. 'edge' → logprob: -4.015260219573975
    5. ' shortest' → logprob: -4.515260219573975
    6. ' dist' → logprob: -4.890260219573975
    7. 'distance' → logprob: -4.890260219573975
    8. 'edges' → logprob: -5.140260219573975
    9. 'path' → logprob: -5.390260219573975
    10. 'code' → logprob: -5.640260219573975

Token 666: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0011667684884741902
    2. ' path' → logprob: -7.126166820526123
    3. '_path' → logprob: -8.126166343688965
    4. 'paths' → logprob: -10.001166343688965
    5. '_paths' → logprob: -12.251166343688965
    6. 'token' → logprob: -12.876166343688965
    7. 'dist' → logprob: -13.126166343688965
    8. 'distance' → logprob: -13.251166343688965
    9. ')' → logprob: -13.376166343688965
    10. 'p' → logprob: -13.626166343688965

Token 667: ' uses' (ID: 8844)
  Prédit: 'includes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'includes' → logprob: -0.6976072788238525
    2. 'uses' → logprob: -1.9476072788238525
    3. 'may' → logprob: -2.6976072788238525
    4. ' includes' → logprob: -2.8226072788238525
    5. 'is' → logprob: -2.9476072788238525
    6. 'might' → logprob: -3.5726072788238525
    7. ' uses' → logprob: -3.8226072788238525
    8. ' is' → logprob: -3.9476072788238525
    9. 'passes' → logprob: -4.072607040405273
    10. 'in' → logprob: -4.447607040405273

Token 668: ' some' (ID: 1236)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2288379967212677
    2. ' a' → logprob: -2.3538379669189453
    3. ' (' → logprob: -3.4788379669189453
    4. '(a' → logprob: -3.4788379669189453
    5. 'edge' → logprob: -3.8538379669189453
    6. 'c' → logprob: -5.603837966918945
    7. 'the' → logprob: -5.728837966918945
    8. '(' → logprob: -5.853837966918945
    9. ' the' → logprob: -5.853837966918945
    10. ' edges' → logprob: -5.853837966918945

Token 669: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.728922426700592
    2. 'edges' → logprob: -0.978922426700592
    3. 'edge' → logprob: -2.7289223670959473
    4. ' edge' → logprob: -3.2289223670959473
    5. '#' → logprob: -5.103922367095947
    6. ' of' → logprob: -5.603922367095947
    7. ' #' → logprob: -5.728922367095947
    8. ')' → logprob: -6.353922367095947
    9. 'adj' → logprob: -6.353922367095947
    10. 'a' → logprob: -6.603922367095947

Token 670: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3040461838245392
    2. '<|end|>' → logprob: -2.054046154022217
    3. ' if' → logprob: -2.554046154022217
    4. ',' → logprob: -3.429046154022217
    5. 'if' → logprob: -5.429046154022217
    6. '
' → logprob: -5.554046154022217
    7. '        
' → logprob: -6.304046154022217
    8. '   ' → logprob: -6.304046154022217
    9. '#' → logprob: -6.554046154022217
    10. '.' → logprob: -6.679046154022217

Token 671: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8321563601493835
    2. '       ' → logprob: -1.7071564197540283
    3. 'if' → logprob: -2.3321564197540283
    4. 'for' → logprob: -2.5821564197540283
    5. 'excluded' → logprob: -2.9571564197540283
    6. ' if' → logprob: -3.4571564197540283
    7. ' for' → logprob: -3.5821564197540283
    8. 'exclude' → logprob: -3.7071564197540283
    9. ' #' → logprob: -4.207156181335449
    10. 'return' → logprob: -4.332156181335449

Token 672: ' the' (ID: 290)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.8605809807777405
    2. 'dist' → logprob: -1.1105809211730957
    3. 'a' → logprob: -2.4855809211730957
    4. 'c' → logprob: -3.3605809211730957
    5. 'self' → logprob: -3.4855809211730957
    6. '(c' → logprob: -3.9855809211730957
    7. ' (' → logprob: -4.110580921173096
    8. '(' → logprob: -4.110580921173096
    9. 'cand' → logprob: -4.735580921173096
    10. ' dist' → logprob: -4.735580921173096

Token 673: ' reversed' (ID: 57184)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.37556004524230957
    2. 'a' → logprob: -2.5005600452423096
    3. 'original' → logprob: -3.1255600452423096
    4. 'cand' → logprob: -3.5005600452423096
    5. '(a' → logprob: -3.6255600452423096
    6. 'edge' → logprob: -4.0005598068237305
    7. ' dist' → logprob: -4.2505598068237305
    8. 'i' → logprob: -4.3755598068237305
    9. ' cand' → logprob: -4.5005598068237305
    10. 'edges' → logprob: -4.5005598068237305

Token 674: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.5014082193374634
    2. 'edge' → logprob: -1.0014082193374634
    3. '_edge' → logprob: -4.626408100128174
    4. '<|end|>' → logprob: -4.876408100128174
    5. ' (' → logprob: -6.251408100128174
    6. ')' → logprob: -6.501408100128174
    7. '(edge' → logprob: -6.876408100128174
    8. 'token' → logprob: -6.876408100128174
    9. '<|end|>' → logprob: -7.751408100128174
    10. '=edge' → logprob: -8.001408576965332

Token 675: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4788282811641693
    2. 'is' → logprob: -1.2288283109664917
    3. ' not' → logprob: -4.478828430175781
    4. 'a' → logprob: -4.478828430175781
    5. 'in' → logprob: -4.603828430175781
    6. 'not' → logprob: -4.603828430175781
    7. '(a' → logprob: -4.978828430175781
    8. ' in' → logprob: -4.978828430175781
    9. ' was' → logprob: -5.103828430175781
    10. '#' → logprob: -5.228828430175781

Token 676: ' on' (ID: 402)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.6106172800064087
    2. 'on' → logprob: -1.2356172800064087
    3. 'not' → logprob: -2.485617160797119
    4. 'used' → logprob: -3.360617160797119
    5. ' part' → logprob: -3.360617160797119
    6. 'a' → logprob: -5.485617160797119
    7. ' on' → logprob: -5.735617160797119
    8. 'original' → logprob: -6.110617160797119
    9. 'in' → logprob: -6.235617160797119
    10. ' not' → logprob: -7.610617160797119

Token 677: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.04985940456390381
    2. ' the' → logprob: -3.1748595237731934
    3. ' shortest' → logprob: -6.299859523773193
    4. 'original' → logprob: -6.424859523773193
    5. '<|end|>' → logprob: -6.549859523773193
    6. 'short' → logprob: -7.424859523773193
    7. 'any' → logprob: -7.924859523773193
    8. '
' → logprob: -8.424859046936035
    9. 'a' → logprob: -8.674859046936035
    10. ' any' → logprob: -9.174859046936035

Token 678: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.7567335963249207
    2. 'original' → logprob: -0.7567335963249207
    3. ' shortest' → logprob: -2.8817336559295654
    4. 'path' → logprob: -6.006733417510986
    5. ' original' → logprob: -7.381733417510986
    6. 'current' → logprob: -7.631733417510986
    7. '...' → logprob: -8.006733894348145
    8. 'optimal' → logprob: -8.131733894348145
    9. 'reverse' → logprob: -8.881733894348145
    10. '
' → logprob: -9.131733894348145

Token 679: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5840900540351868
    2. '_path' → logprob: -0.8340900540351868
    3. ' path' → logprob: -5.084090232849121
    4. '_paths' → logprob: -6.334090232849121
    5. '_' → logprob: -9.459090232849121
    6. ')' → logprob: -11.084090232849121
    7. '
' → logprob: -11.209090232849121
    8. 'paths' → logprob: -11.709090232849121
    9. '-path' → logprob: -12.459090232849121
    10. '	path' → logprob: -12.459090232849121

Token 680: ',
' (ID: 412)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7572235465049744
    2. ':' → logprob: -1.3822236061096191
    3. ',' → logprob: -1.8822236061096191
    4. 'and' → logprob: -2.257223606109619
    5. ':
' → logprob: -5.007223606109619
    6. ' if' → logprob: -5.507223606109619
    7. '       ' → logprob: -5.632223606109619
    8. '.' → logprob: -6.632223606109619
    9. '   ' → logprob: -6.757223606109619
    10. ' :' → logprob: -6.882223606109619

Token 681: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2467639297246933
    2. '       ' → logprob: -1.6217639446258545
    3. 'if' → logprob: -4.621763706207275
    4. ' return' → logprob: -5.746763706207275
    5. '#' → logprob: -6.121763706207275
    6. '<|end|>' → logprob: -6.496763706207275
    7. '        ' → logprob: -7.246763706207275
    8. ')' → logprob: -7.496763706207275
    9. ' #' → logprob: -7.621763706207275
    10. 'return' → logprob: -7.871763706207275

Token 682: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.827633798122406
    2. '       ' → logprob: -1.7026338577270508
    3. ' we' → logprob: -2.077633857727051
    4. ' the' → logprob: -2.952633857727051
    5. ' then' → logprob: -3.202633857727051
    6. ' #' → logprob: -3.577633857727051
    7. 'we' → logprob: -3.827633857727051
    8. ' return' → logprob: -3.952633857727051
    9. ' if' → logprob: -3.952633857727051
    10. 'return' → logprob: -4.327633857727051

Token 683: ' its' (ID: 1617)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6121658086776733
    2. 'if' → logprob: -1.2371658086776733
    3. '       ' → logprob: -2.862165927886963
    4. '#' → logprob: -3.362165927886963
    5. ' return' → logprob: -3.987165927886963
    6. 'return' → logprob: -4.237165927886963
    7. 'dist' → logprob: -4.612165927886963
    8. 'excluded' → logprob: -4.612165927886963
    9. ' dist' → logprob: -5.237165927886963
    10. ' #' → logprob: -5.237165927886963

Token 684: ' reversal' (ID: 117109)
  Prédit: ' removal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' removal' → logprob: -0.10707024484872818
    2. 'rem' → logprob: -3.232070207595825
    3. ' presence' → logprob: -3.982070207595825
    4. ' exclusion' → logprob: -4.607070446014404
    5. ' weight' → logprob: -5.232070446014404
    6. ' original' → logprob: -5.732070446014404
    7. ' absence' → logprob: -5.732070446014404
    8. ' usage' → logprob: -6.107070446014404
    9. 'absence' → logprob: -6.107070446014404
    10. 'weight' → logprob: -6.482070446014404

Token 685: ' may' (ID: 1340)
  Prédit: ' may'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' may' → logprob: -1.3072141408920288
    2. ' might' → logprob: -1.6822141408920288
    3. ' would' → logprob: -1.9322141408920288
    4. ' will' → logprob: -2.8072142601013184
    5. 'would' → logprob: -3.0572142601013184
    6. ' breaks' → logprob: -3.1822142601013184
    7. 'might' → logprob: -3.3072142601013184
    8. ' invalid' → logprob: -3.4322142601013184
    9. 'may' → logprob: -3.6822142601013184
    10. ' makes' → logprob: -3.6822142601013184

Token 686: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.494182825088501
    2. 'make' → logprob: -2.244182825088501
    3. 'invalidate' → logprob: -2.744182825088501
    4. 'disconnect' → logprob: -2.869182825088501
    5. 'remove' → logprob: -3.244182825088501
    6. 'increase' → logprob: -3.369182825088501
    7. ' break' → logprob: -3.369182825088501
    8. 'cause' → logprob: -3.869182825088501
    9. 'change' → logprob: -4.494182586669922
    10. ' cause' → logprob: -5.494182586669922

Token 687: ' it' (ID: 480)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.47845953702926636
    2. ' the' → logprob: -0.9784595370292664
    3. 'that' → logprob: -6.603459358215332
    4. ' that' → logprob: -7.478459358215332
    5. ' shortest' → logprob: -7.603459358215332
    6. '```' → logprob: -7.728459358215332
    7. ' it' → logprob: -8.228459358215332
    8. 'if' → logprob: -8.353459358215332
    9. 'short' → logprob: -8.603459358215332
    10. '   ' → logprob: -8.978459358215332

Token 688: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045776959508657455
    2. '
' → logprob: -3.420776844024658
    3. '<|end|>' → logprob: -5.795776844024658
    4. ',' → logprob: -6.170776844024658
    5. '        
' → logprob: -6.170776844024658
    6. ' if' → logprob: -6.420776844024658
    7. 'if' → logprob: -7.170776844024658
    8. '#' → logprob: -7.670776844024658
    9. '.' → logprob: -8.045777320861816
    10. '   ' → logprob: -8.670777320861816

Token 689: ' possibly' (ID: 14836)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03050927259027958
    2. ' if' → logprob: -4.5305094718933105
    3. ' and' → logprob: -5.5305094718933105
    4. '#' → logprob: -5.5305094718933105
    5. 'return' → logprob: -5.6555094718933105
    6. ' return' → logprob: -6.5305094718933105
    7. 'if' → logprob: -7.1555094718933105
    8. '   ' → logprob: -7.1555094718933105
    9. ' or' → logprob: -7.6555094718933105
    10. ' then' → logprob: -7.7805094718933105

Token 690: ' making' (ID: 4137)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2005159854888916
    2. '       ' → logprob: -1.4505159854888916
    3. ' increasing' → logprob: -1.8255159854888916
    4. ' making' → logprob: -2.4505159854888916
    5. 'in' → logprob: -3.0755159854888916
    6. 'increase' → logprob: -3.4505159854888916
    7. 'making' → logprob: -3.5755159854888916
    8. ' causing' → logprob: -3.7005159854888916
    9. ' return' → logprob: -4.8255157470703125
    10. 'leading' → logprob: -5.2005157470703125

Token 691: ' path' (ID: 3104)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.41013920307159424
    2. 'dist' → logprob: -1.2851392030715942
    3. 'd' → logprob: -3.2851390838623047
    4. ' the' → logprob: -4.410139083862305
    5. 'new' → logprob: -5.410139083862305
    6. 'some' → logprob: -6.660139083862305
    7. 'it' → logprob: -6.910139083862305
    8. 'distance' → logprob: -7.035139083862305
    9. ' dist' → logprob: -7.660139083862305
    10. ' d' → logprob: -8.410139083862305

Token 692: ' longer' (ID: 7411)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.32031235098838806
    2. ' longer' → logprob: -1.6953123807907104
    3. 's' → logprob: -3.445312261581421
    4. '=' → logprob: -4.3203125
    5. ' =' → logprob: -4.6953125
    6. 'inf' → logprob: -4.9453125
    7. '       ' → logprob: -4.9453125
    8. '   ' → logprob: -5.5703125
    9. '_long' → logprob: -5.6953125
    10. 'length' → logprob: -6.0703125

Token 693: ' or' (ID: 503)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.795310378074646
    2. '       ' → logprob: -0.795310378074646
    3. '<|end|>' → logprob: -2.5453104972839355
    4. ',' → logprob: -5.2953104972839355
    5. '<|end|>' → logprob: -6.0453104972839355
    6. '        
' → logprob: -6.2953104972839355
    7. ' or' → logprob: -6.2953104972839355
    8. ' if' → logprob: -6.6703104972839355
    9. '.' → logprob: -6.9203104972839355
    10. '  
' → logprob: -7.2953104972839355

Token 694: ' none' (ID: 12698)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dis' → logprob: -1.0548433065414429
    2. 'in' → logprob: -1.6798433065414429
    3. 'im' → logprob: -1.6798433065414429
    4. 'no' → logprob: -2.0548434257507324
    5. 'un' → logprob: -2.3048434257507324
    6. ' impossible' → logprob: -4.054843425750732
    7. 'even' → logprob: -4.929843425750732
    8. ' no' → logprob: -4.929843425750732
    9. 'disconnect' → logprob: -5.054843425750732
    10. 'not' → logprob: -6.179843425750732

Token 695: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030289335176348686
    2. '
' → logprob: -3.7802894115448
    3. '<|end|>' → logprob: -5.780289173126221
    4. '        
' → logprob: -6.655289173126221
    5. ',' → logprob: -7.405289173126221
    6. ' if' → logprob: -7.530289173126221
    7. '   ' → logprob: -8.030289649963379
    8. 'if' → logprob: -8.530289649963379
    9. '<|end|>' → logprob: -8.530289649963379
    10. '#' → logprob: -8.780289649963379

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20991861820220947
    2. '
' → logprob: -1.7099186182022095
    3. ' if' → logprob: -6.08491849899292
    4. '        
' → logprob: -6.20991849899292
    5. 'if' → logprob: -6.33491849899292
    6. '```' → logprob: -7.20991849899292
    7. '<|end|>' → logprob: -7.58491849899292
    8. '   ' → logprob: -8.584918975830078
    9. 'return' → logprob: -8.959918975830078
    10. '#' → logprob: -9.334918975830078

Token 697: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39542636275291443
    2. 'if' → logprob: -1.8954263925552368
    3. ' if' → logprob: -2.5204262733459473
    4. '
' → logprob: -4.020426273345947
    5. 'return' → logprob: -4.270426273345947
    6. '        
' → logprob: -4.770426273345947
    7. '   ' → logprob: -4.895426273345947
    8. '#' (adapté à ' #') → logprob: -4.895426273345947
    9. ' used' → logprob: -5.395426273345947
    10. 'used' → logprob: -5.395426273345947

Token 698: ' Instead' (ID: 21050)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.0845997333526611
    2. 'if' → logprob: -1.4595997333526611
    3. 'return' → logprob: -1.8345997333526611
    4. 'orig' → logprob: -2.959599733352661
    5. 'for' → logprob: -3.209599733352661
    6. 'original' → logprob: -3.834599733352661
    7. 'affected' → logprob: -3.959599733352661
    8. 'path' → logprob: -4.084599494934082
    9. '#' → logprob: -4.084599494934082
    10. 'use' → logprob: -4.459599494934082

Token 699: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6320260763168335
    2. '       ' → logprob: -1.3820260763168335
    3. 'of' → logprob: -1.7570260763168335
    4. ',' → logprob: -3.507026195526123
    5. '   ' → logprob: -5.132026195526123
    6. ':' → logprob: -6.382026195526123
    7. 'if' → logprob: -6.632026195526123
    8. '.' → logprob: -6.757026195526123
    9. '#' → logprob: -6.757026195526123
    10. '        
' → logprob: -6.757026195526123

Token 700: ' full' (ID: 3149)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.15741166472434998
    2. 'checking' → logprob: -3.032411575317383
    3. 'rew' → logprob: -3.657411575317383
    4. 'rem' → logprob: -3.907411575317383
    5. 'rer' → logprob: -4.157411575317383
    6. 'full' → logprob: -4.407411575317383
    7. 'running' → logprob: -5.282411575317383
    8. 'writing' → logprob: -5.532411575317383
    9. 'perform' → logprob: -6.032411575317383
    10. 'comput' → logprob: -6.157411575317383

Token 701: ' recom' (ID: 19119)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.10201244801282883
    2. 'rer' → logprob: -3.7270123958587646
    3. 'graph' → logprob: -3.9770123958587646
    4. 'd' → logprob: -4.227012634277344
    5. 'rew' → logprob: -4.852012634277344
    6. 'def' → logprob: -5.227012634277344
    7. 'dfs' → logprob: -5.352012634277344
    8. 'short' → logprob: -5.477012634277344
    9. 'search' → logprob: -5.477012634277344
    10. 'path' → logprob: -5.852012634277344

Token 702: 'putation' (ID: 47913)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.052104827016592026
    2. 'putation' → logprob: -3.6771047115325928
    3. 'pute' → logprob: -3.6771047115325928
    4. '.put' → logprob: -10.302104949951172
    5. '```' → logprob: -10.677104949951172
    6. 'uting' → logprob: -10.927104949951172
    7. 'puta' → logprob: -10.927104949951172
    8. 'puted' → logprob: -11.552104949951172
    9. '_put' → logprob: -11.677104949951172
    10. '-put' → logprob: -12.052104949951172

Token 703: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14903299510478973
    2. '       ' → logprob: -2.0240330696105957
    3. ',
' → logprob: -6.149033069610596
    4. ' if' → logprob: -6.149033069610596
    5. 'if' → logprob: -7.774033069610596
    6. '<|end|>' → logprob: -7.899033069610596
    7. ' ,' → logprob: -7.899033069610596
    8. '<|end|>' → logprob: -8.149032592773438
    9. '#' → logprob: -8.899032592773438
    10. 'return' → logprob: -9.024032592773438

Token 704: ' use' (ID: 1199)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2046657800674438
    2. 'if' → logprob: -1.8296657800674438
    3. '#' → logprob: -1.9546657800674438
    4. 'return' → logprob: -2.2046656608581543
    5. '   ' → logprob: -3.0796656608581543
    6. 'used' → logprob: -3.2046656608581543
    7. 'for' → logprob: -3.4546656608581543
    8. ' if' → logprob: -3.8296656608581543
    9. ' used' → logprob: -3.9546656608581543
    10. ' return' → logprob: -4.204665660858154

Token 705: ':
' (ID: 734)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5048790574073792
    2. 'dist' → logprob: -1.3798789978027344
    3. 'the' → logprob: -2.0048789978027344
    4. ' self' → logprob: -6.629878997802734
    5. ' dist' → logprob: -6.754878997802734
    6. 'original' → logprob: -6.879878997802734
    7. 'adj' → logprob: -6.879878997802734
    8. '```' → logprob: -6.879878997802734
    9. ' the' → logprob: -7.504878997802734
    10. 'if' → logprob: -7.504878997802734

Token 706: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48718520998954773
    2. 'if' → logprob: -1.8621852397918701
    3. ' if' → logprob: -2.11218523979187
    4. 'old' → logprob: -3.98718523979187
    5. ' original' → logprob: -4.112185001373291
    6. 'orig' → logprob: -4.112185001373291
    7. 'original' → logprob: -4.487185001373291
    8. ' old' → logprob: -4.487185001373291
    9. '```' → logprob: -4.987185001373291
    10. ' orig' → logprob: -5.612185001373291

Token 707: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28956934809684753
    2. '       ' → logprob: -2.66456937789917
    3. ' if' → logprob: -3.16456937789917
    4. 'orig' → logprob: -3.28956937789917
    5. 'old' → logprob: -3.91456937789917
    6. 'exclude' → logprob: -4.03956937789917
    7. 'used' → logprob: -4.78956937789917
    8. 'dist' → logprob: -5.16456937789917
    9. 'original' → logprob: -5.28956937789917
    10. 'cand' → logprob: -5.41456937789917

Token 708: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5276429653167725
    2. 'orig' → logprob: -2.6526429653167725
    3. 'dist' → logprob: -2.6526429653167725
    4. 'old' → logprob: -3.0276429653167725
    5. 'min' → logprob: -3.6526429653167725
    6. 'original' → logprob: -3.7776429653167725
    7. 'max' → logprob: -3.9026429653167725
    8. 'self' → logprob: -4.027643203735352
    9. '#' → logprob: -4.152643203735352
    10. ' if' → logprob: -4.527643203735352

Token 709: ' original' (ID: 4756)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4426044225692749
    2. 'self' → logprob: -2.1926045417785645
    3. ' dist' → logprob: -2.4426045417785645
    4. ' self' → logprob: -3.3176045417785645
    5. 'cand' → logprob: -3.5676045417785645
    6. 'd' → logprob: -3.5676045417785645
    7. ' cand' → logprob: -3.9426045417785645
    8. 'c' → logprob: -4.8176045417785645
    9. ' (' → logprob: -4.9426045417785645
    10. '(' → logprob: -5.0676045417785645

Token 710: ' shortest' (ID: 70564)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0436701737344265
    2. 'dist' → logprob: -3.418670177459717
    3. ' shortest' → logprob: -6.168670177459717
    4. '_short' → logprob: -6.668670177459717
    5. ' dist' → logprob: -7.168670177459717
    6. '_d' → logprob: -7.168670177459717
    7. '_edges' → logprob: -7.293670177459717
    8. 'd' → logprob: -7.543670177459717
    9. '```' → logprob: -7.543670177459717
    10. '
' → logprob: -7.793670177459717

Token 711: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0401468500494957
    2. 'path' → logprob: -3.290146827697754
    3. ' path' → logprob: -6.290146827697754
    4. '_paths' → logprob: -8.665146827697754
    5. '_' → logprob: -10.040146827697754
    6. '   ' → logprob: -11.915146827697754
    7. 'paths' → logprob: -12.540146827697754
    8. ')' → logprob: -13.165146827697754
    9. '.path' → logprob: -13.165146827697754
    10. '_dist' → logprob: -13.290146827697754

Token 712: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5008518099784851
    2. ' ==' → logprob: -1.7508518695831299
    3. '<=' → logprob: -2.50085186958313
    4. ' <=' → logprob: -3.00085186958313
    5. 'distance' → logprob: -4.125851631164551
    6. '>' → logprob: -4.375851631164551
    7. 'uses' → logprob: -4.750851631164551
    8. 'dist' → logprob: -5.000851631164551
    9. '_dist' → logprob: -5.125851631164551
    10. ' uses' → logprob: -5.375851631164551

Token 713: ' cand' (ID: 31771)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12747982144355774
    2. 'dist' → logprob: -2.3774797916412354
    3. ' dist' → logprob: -3.8774797916412354
    4. 'd' → logprob: -6.2524800300598145
    5. '==' → logprob: -7.1274800300598145
    6. 'c' → logprob: -7.1274800300598145
    7. 'cand' → logprob: -7.1274800300598145
    8. '=c' → logprob: -7.5024800300598145
    9. '=
' → logprob: -8.752479553222656
    10. ' cand' → logprob: -8.877479553222656

Token 714: ' =>' (ID: 871)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6250408887863159
    2. ':' → logprob: -1.125040888786316
    3. 'and' → logprob: -2.7500410079956055
    4. '>' → logprob: -3.5000410079956055
    5. ' or' → logprob: -4.1250410079956055
    6. '       ' → logprob: -4.8750410079956055
    7. ',' → logprob: -5.0000410079956055
    8. ':
' → logprob: -5.3750410079956055
    9. ' >' → logprob: -5.5000410079956055
    10. 'if' → logprob: -6.2500410079956055

Token 715: ' HAPPY' (ID: 187789)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8577326536178589
    2. 'return' → logprob: -0.8577326536178589
    3. 'd' → logprob: -3.1077327728271484
    4. '       ' → logprob: -3.7327327728271484
    5. ' cand' → logprob: -3.7327327728271484
    6. 'cand' → logprob: -3.7327327728271484
    7. ' d' → logprob: -4.357732772827148
    8. 'print' → logprob: -5.107732772827148
    9. '           ' → logprob: -5.607732772827148
    10. '   ' → logprob: -6.232732772827148

Token 716: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10341320931911469
    2. ' if' → logprob: -2.8534131050109863
    3. 'if' → logprob: -3.7284131050109863
    4. '<|end|>' → logprob: -4.603413105010986
    5. '
' → logprob: -5.853413105010986
    6. ',' → logprob: -6.978413105010986
    7. '   ' → logprob: -7.728413105010986
    8. 'elif' → logprob: -7.728413105010986
    9. '<|end|>' → logprob: -7.728413105010986
    10. '        
' → logprob: -8.853413581848145

Token 717: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016926003620028496
    2. ' if' → logprob: -4.516925811767578
    3. ':' → logprob: -6.891925811767578
    4. ',' → logprob: -7.391925811767578
    5. '   ' → logprob: -7.516925811767578
    6. '           ' → logprob: -7.641925811767578
    7. 'if' → logprob: -7.766925811767578
    8. '<|end|>' → logprob: -7.766925811767578
    9. 'elif' → logprob: -8.016925811767578
    10. ' elif' → logprob: -8.141925811767578

Token 718: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21500132977962494
    2. ' if' → logprob: -2.340001344680786
    3. 'if' → logprob: -2.465001344680786
    4. 'elif' → logprob: -5.090001106262207
    5. '   ' → logprob: -6.090001106262207
    6. ' elif' → logprob: -7.465001106262207
    7. ',' → logprob: -8.090001106262207
    8. '        
' → logprob: -8.090001106262207
    9. 'return' → logprob: -8.215001106262207
    10. '           ' → logprob: -8.215001106262207

Token 719: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.998024046421051
    2. ' if' → logprob: -0.998024046421051
    3. '       ' → logprob: -1.3730239868164062
    4. 'elif' → logprob: -4.873023986816406
    5. ' elif' → logprob: -7.623023986816406
    6. '```' → logprob: -7.873023986816406
    7. 'return' → logprob: -8.248023986816406
    8. '   ' → logprob: -8.373023986816406
    9. ' return' → logprob: -9.373023986816406
    10. 'else' → logprob: -9.873023986816406

Token 720: ' original' (ID: 4756)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8648239374160767
    2. ' dist' → logprob: -1.3648239374160767
    3. 'd' → logprob: -1.7398239374160767
    4. ' cand' → logprob: -2.864823818206787
    5. 'dist' → logprob: -2.989823818206787
    6. 'cand' → logprob: -3.614823818206787
    7. ' self' → logprob: -4.864823818206787
    8. 'self' → logprob: -5.489823818206787
    9. ' ' → logprob: -8.052324295043945
    10. 'c' → logprob: -8.239824295043945

Token 721: ' shortest' (ID: 70564)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0010661551496014
    2. 'dist' → logprob: -7.001066207885742
    3. '>' → logprob: -9.876066207885742
    4. '```' → logprob: -10.501066207885742
    5. '_d' → logprob: -11.001066207885742
    6. '_' → logprob: -11.876066207885742
    7. '_distance' → logprob: -11.876066207885742
    8. '_path' → logprob: -12.126066207885742
    9. '
' → logprob: -12.376066207885742
    10. ')' → logprob: -12.751066207885742

Token 722: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.02596292831003666
    2. 'path' → logprob: -3.7759628295898438
    3. '_dist' → logprob: -6.025962829589844
    4. ' path' → logprob: -8.525962829589844
    5. '>' → logprob: -10.150962829589844
    6. 'dist' → logprob: -11.150962829589844
    7. '```' → logprob: -11.525962829589844
    8. '_paths' → logprob: -12.275962829589844
    9. '==' → logprob: -12.275962829589844
    10. '_pat' → logprob: -12.400962829589844

Token 723: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6679012179374695
    2. ' <' → logprob: -0.9179012179374695
    3. ' >' → logprob: -3.2929012775421143
    4. '==' → logprob: -3.5429012775421143
    5. '<' → logprob: -4.542901039123535
    6. ' <=' → logprob: -5.167901039123535
    7. ' >=' → logprob: -6.292901039123535
    8. '>' → logprob: -6.417901039123535
    9. '[' → logprob: -7.542901039123535
    10. '<=' → logprob: -8.167901039123535

Token 724: ' cand' (ID: 31771)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13654784858226776
    2. 'cand' → logprob: -2.511547803878784
    3. 'dist' → logprob: -3.636547803878784
    4. ' d' → logprob: -4.136548042297363
    5. ' cand' → logprob: -6.136548042297363
    6. ' dist' → logprob: -6.886548042297363
    7. 'c' → logprob: -7.386548042297363
    8. '   ' → logprob: -9.261548042297363
    9. ' ' → logprob: -10.324048042297363
    10. '=' → logprob: -10.761548042297363

Token 725: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3956158459186554
    2. ' and' → logprob: -1.520615816116333
    3. '==' → logprob: -3.020615816116333
    4. 'and' → logprob: -3.520615816116333
    5. ' ==' → logprob: -3.770615816116333
    6. '   ' → logprob: -6.520616054534912
    7. ',' → logprob: -6.645616054534912
    8. '=' → logprob: -6.895616054534912
    9. ' :' → logprob: -7.395616054534912
    10. '       ' → logprob: -7.895616054534912

Token 726: ' SOS' (ID: 105425)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2571294903755188
    2. 'NE' → logprob: -3.007129430770874
    3. 'UN' → logprob: -3.382129430770874
    4. 'SOS' → logprob: -3.507129430770874
    5. 'M' → logprob: -4.132129669189453
    6. '"' → logprob: -4.382129669189453
    7. 'UNKNOWN' → logprob: -4.507129669189453
    8. 'P' → logprob: -5.132129669189453
    9. 'SUR' → logprob: -5.132129669189453
    10. 'H' → logprob: -5.257129669189453

Token 727: 'O' (ID: 46)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2777406573295593
    2. 'if' → logprob: -2.277740716934204
    3. ' if' → logprob: -2.402740716934204
    4. 'elif' → logprob: -3.652740716934204
    5. '
' → logprob: -4.902740478515625
    6. '   ' → logprob: -5.527740478515625
    7. ' elif' → logprob: -5.777740478515625
    8. 'else' → logprob: -6.027740478515625
    9. ' else' → logprob: -6.277740478515625
    10. '           ' → logprob: -7.027740478515625

Token 728: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5633553862571716
    2. '
' → logprob: -1.5633554458618164
    3. 'if' → logprob: -2.8133554458618164
    4. ' if' → logprob: -3.0633554458618164
    5. 'elif' → logprob: -3.0633554458618164
    6. 'else' → logprob: -4.813355445861816
    7. ' else' → logprob: -4.938355445861816
    8. '\n' → logprob: -5.063355445861816
    9. '        
' → logprob: -5.313355445861816
    10. '  
' → logprob: -5.313355445861816

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10778876394033432
    2. 'elif' → logprob: -2.3577888011932373
    3. ' elif' → logprob: -5.357788562774658
    4. '```' → logprob: -6.982788562774658
    5. 'if' → logprob: -7.607788562774658
    6. ' if' → logprob: -7.982788562774658
    7. 'else' → logprob: -8.357789039611816
    8. '   ' → logprob: -8.732789039611816
    9. ' else' → logprob: -8.857789039611816
    10. '<|end|>' → logprob: -9.107789039611816

Token 730: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5944322943687439
    2. 'elif' → logprob: -1.0944323539733887
    3. 'if' → logprob: -2.4694323539733887
    4. ' if' → logprob: -3.9694323539733887
    5. ' elif' → logprob: -4.969432353973389
    6. 'else' → logprob: -6.344432353973389
    7. ' else' → logprob: -7.844432353973389
    8. '   ' → logprob: -8.59443187713623
    9. '```' → logprob: -8.59443187713623
    10. ',' → logprob: -9.21943187713623

Token 731: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44330158829689026
    2. 'elif' → logprob: -1.5683015584945679
    3. '       ' → logprob: -2.3183016777038574
    4. ' if' → logprob: -3.3183016777038574
    5. 'else' → logprob: -4.443301677703857
    6. ' elif' → logprob: -6.568301677703857
    7. '   ' → logprob: -7.318301677703857
    8. ' else' → logprob: -7.568301677703857
    9. '```' → logprob: -8.3183012008667
    10. 'return' → logprob: -9.0683012008667

Token 732: ' cand' (ID: 31771)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.8436586856842041
    2. 'd' → logprob: -1.593658685684204
    3. 'dist' → logprob: -1.718658685684204
    4. ' d' → logprob: -1.968658685684204
    5. 'cand' → logprob: -3.718658685684204
    6. ' cand' → logprob: -3.968658685684204
    7. ' original' → logprob: -6.718658447265625
    8. 'self' → logprob: -7.343658447265625
    9. ' self' → logprob: -7.343658447265625
    10. 'original' → logprob: -7.593658447265625

Token 733: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2774569094181061
    2. ' <' → logprob: -1.7774568796157837
    3. '>' → logprob: -2.7774569988250732
    4. '<' → logprob: -4.527456760406494
    5. ' ' → logprob: -9.277457237243652
    6. '>d' → logprob: -11.027457237243652
    7. ' >
' → logprob: -11.027457237243652
    8. ' ==' → logprob: -11.277457237243652
    9. '  ' → logprob: -11.527457237243652
    10. ' ' → logprob: -11.777457237243652

Token 734: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007756276521831751
    2. ' d' → logprob: -5.007756233215332
    3. 'dist' → logprob: -7.007756233215332
    4. ' dist' → logprob: -10.132756233215332
    5. 'c' → logprob: -10.257756233215332
    6. 'self' → logprob: -10.757756233215332
    7. '   ' → logprob: -11.382756233215332
    8. ' ' → logprob: -12.007756233215332
    9. '```' → logprob: -12.882756233215332
    10. '    ' → logprob: -13.007756233215332

Token 735: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006945186760276556
    2. ' :' → logprob: -5.3819451332092285
    3. ':
' → logprob: -7.3819451332092285
    4. ' and' → logprob: -7.5069451332092285
    5. ',' → logprob: -8.256945610046387
    6. ' or' → logprob: -8.756945610046387
    7. '       ' → logprob: -8.756945610046387
    8. '>' → logprob: -9.506945610046387
    9. ' ' → logprob: -9.506945610046387
    10. ':return' → logprob: -9.756945610046387

Token 736: ' no' (ID: 860)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.568244457244873
    2. 'cand' → logprob: -1.193244457244873
    3. ' dist' → logprob: -2.818244457244873
    4. 'd' → logprob: -3.318244457244873
    5. ' cand' → logprob: -3.818244457244873
    6. ' d' → logprob: -6.068244457244873
    7. '(dist' → logprob: -6.318244457244873
    8. 'self' → logprob: -6.443244457244873
    9. 'c' → logprob: -6.693244457244873
    10. 'float' → logprob: -6.693244457244873

Token 737: ' path' (ID: 3104)
  Prédit: ' route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' route' → logprob: -0.48668158054351807
    2. 'route' → logprob: -1.861681580543518
    3. 't' → logprob: -2.1116814613342285
    4. 'te' → logprob: -3.4866814613342285
    5. 'r' → logprob: -3.9866814613342285
    6. 'ne' → logprob: -4.1116814613342285
    7. '_route' → logprob: -4.4866814613342285
    8. ' t' → logprob: -4.9866814613342285
    9. ' path' → logprob: -5.3616814613342285
    10. 'c' → logprob: -5.9866814613342285

Token 738: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3919622302055359
    2. '==' → logprob: -2.1419622898101807
    3. ' or' → logprob: -2.7669622898101807
    4. ' ==' → logprob: -3.1419622898101807
    5. ' is' → logprob: -3.5169622898101807
    6. '   ' → logprob: -4.016962051391602
    7. '=' → logprob: -4.391962051391602
    8. '       ' → logprob: -4.891962051391602
    9. ':
' → logprob: -5.016962051391602
    10. ' then' → logprob: -5.391962051391602

Token 739: ' SAD' (ID: 129323)
  Prédit: 'BAD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BAD' → logprob: -0.547123908996582
    2. 'SOS' → logprob: -2.422123908996582
    3. 'S' → logprob: -2.547123908996582
    4. ' SAD' → logprob: -2.672123908996582
    5. 'sad' → logprob: -3.547123908996582
    6. 'H' → logprob: -4.047123908996582
    7. 'UN' → logprob: -4.172123908996582
    8. 'BRO' → logprob: -4.172123908996582
    9. 'F' → logprob: -4.297123908996582
    10. 'SOR' → logprob: -4.797123908996582

Token 740: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03705750033259392
    2. ' if' → logprob: -4.537057399749756
    3. '
' → logprob: -4.662057399749756
    4. '   ' → logprob: -5.537057399749756
    5. '        
' → logprob: -5.912057399749756
    6. 'if' → logprob: -6.412057399749756
    7. '  
' → logprob: -6.412057399749756
    8. ':' → logprob: -6.662057399749756
    9. ',' → logprob: -7.162057399749756
    10. '```' → logprob: -7.662057399749756

Token 741: 'including' (ID: 26167)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008951944299042225
    2. '       ' → logprob: -5.0089521408081055
    3. ')
' → logprob: -6.3839521408081055
    4. ' )' → logprob: -8.508952140808105
    5. '           ' → logprob: -9.633952140808105
    6. '   ' → logprob: -10.008952140808105
    7. 'else' → logprob: -10.258952140808105
    8. '")' → logprob: -10.258952140808105
    9. 'elif' → logprob: -10.633952140808105
    10. ')return' → logprob: -10.758952140808105

Token 742: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2956607937812805
    2. 'd' → logprob: -2.1706607341766357
    3. 'cand' → logprob: -3.0456607341766357
    4. ' dist' → logprob: -3.2956607341766357
    5. 'inf' → logprob: -3.7956607341766357
    6. ' d' → logprob: -4.545660972595215
    7. 'if' → logprob: -4.670660972595215
    8. ' cand' → logprob: -5.545660972595215
    9. ' if' → logprob: -6.045660972595215
    10. 'float' → logprob: -6.045660972595215

Token 743: ' cand' (ID: 31771)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15960656106472015
    2. 'cand' → logprob: -2.784606456756592
    3. ' dist' → logprob: -3.159606456756592
    4. 'd' → logprob: -3.284606456756592
    5. ' cand' → logprob: -5.659606456756592
    6. ' d' → logprob: -6.534606456756592
    7. 'c' → logprob: -7.409606456756592
    8. 'float' → logprob: -10.15960693359375
    9. '   ' → logprob: -10.22210693359375
    10. 'a' → logprob: -10.47210693359375

Token 744: ' infinite' (ID: 48413)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8564088344573975
    2. ' ==' → logprob: -0.9814088344573975
    3. '>' → logprob: -2.2314088344573975
    4. ' >' → logprob: -2.8564088344573975
    5. ' >=' → logprob: -4.106409072875977
    6. '>=' → logprob: -4.356409072875977
    7. ')' → logprob: -5.231409072875977
    8. ' is' → logprob: -7.981409072875977
    9. ' <' → logprob: -9.106409072875977
    10. '=' → logprob: -9.231409072875977

Token 745: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004099416080862284
    2. ' or' → logprob: -6.129099369049072
    3. ')
' → logprob: -7.629099369049072
    4. ' )' → logprob: -8.00409984588623
    5. '):' → logprob: -8.00409984588623
    6. '       ' → logprob: -8.25409984588623
    7. '`)' → logprob: -10.00409984588623
    8. 'or' → logprob: -10.00409984588623
    9. '')' → logprob: -10.12909984588623
    10. ')
' → logprob: -10.25409984588623

Token 746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09000483900308609
    2. 'if' → logprob: -3.2150049209594727
    3. ' if' → logprob: -3.9650049209594727
    4. '
' → logprob: -3.9650049209594727
    5. '   ' → logprob: -5.965004920959473
    6. '        
' → logprob: -6.090004920959473
    7. '  
' → logprob: -7.715004920959473
    8. ' 
' → logprob: -7.840004920959473
    9. '\' → logprob: -7.965004920959473
    10. '\n' → logprob: -8.215004920959473

Token 747: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10095664113759995
    2. 'if' → logprob: -2.475956678390503
    3. ' if' → logprob: -4.475956439971924
    4. '        
' → logprob: -8.350956916809082
    5. '   ' → logprob: -8.725956916809082
    6. '
' → logprob: -9.600956916809082
    7. '```' → logprob: -10.850956916809082
    8. '  
' → logprob: -11.475956916809082
    9. '	if' → logprob: -11.600956916809082
    10. ' ' → logprob: -11.850956916809082

Token 748: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5067421197891235
    2. 'if' → logprob: -1.2567421197891235
    3. ' if' → logprob: -2.256742000579834
    4. '   ' → logprob: -5.256742000579834
    5. ' ' → logprob: -7.006742000579834
    6. '        
' → logprob: -7.256742000579834
    7. '
' → logprob: -8.131742477416992
    8. 'return' → logprob: -8.131742477416992
    9. ' 
' → logprob: -8.881742477416992
    10. '  ' → logprob: -9.131742477416992

Token 749: ' also' (ID: 1217)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49042269587516785
    2. ' if' → logprob: -0.9904227256774902
    3. '       ' → logprob: -4.24042272567749
    4. 'return' → logprob: -7.24042272567749
    5. 'd' → logprob: -8.240422248840332
    6. ' d' → logprob: -8.615422248840332
    7. ' return' → logprob: -8.740422248840332
    8. 'dist' → logprob: -8.740422248840332
    9. '   ' → logprob: -9.490422248840332
    10. '
' → logprob: -9.865422248840332

Token 750: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2575761079788208
    2. 'consider' → logprob: -2.6325759887695312
    3. ' if' → logprob: -3.0075759887695312
    4. '#' → logprob: -3.3825759887695312
    5. 'check' → logprob: -3.3825759887695312
    6. '       ' → logprob: -4.382575988769531
    7. 'dist' → logprob: -4.632575988769531
    8. 'we' → logprob: -5.382575988769531
    9. ' check' → logprob: -5.632575988769531
    10. ' consider' → logprob: -6.382575988769531

Token 751: ' reversing' (ID: 156690)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5497485995292664
    2. ' dist' → logprob: -1.9247486591339111
    3. 'd' → logprob: -2.549748659133911
    4. 'self' → logprob: -3.049748659133911
    5. 'cand' → logprob: -3.174748659133911
    6. 'c' → logprob: -3.174748659133911
    7. ' d' → logprob: -4.049748420715332
    8. ' self' → logprob: -4.049748420715332
    9. ' cand' → logprob: -4.299748420715332
    10. ' c' → logprob: -4.799748420715332

Token 752: ' edge' (ID: 11165)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1962676048278809
    2. ' (' → logprob: -1.6962676048278809
    3. ' the' → logprob: -2.196267604827881
    4. 'a' → logprob: -2.446267604827881
    5. 'edge' → logprob: -2.946267604827881
    6. ' edge' → logprob: -3.196267604827881
    7. 'c' → logprob: -3.446267604827881
    8. 'the' → logprob: -3.446267604827881
    9. '(a' → logprob: -3.571267604827881
    10. 'd' → logprob: -4.071267604827881

Token 753: ' breaks' (ID: 29617)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.8098113536834717
    2. '[i' → logprob: -1.8098113536834717
    3. ' (' → logprob: -2.3098113536834717
    4. '_' → logprob: -2.3098113536834717
    5. '==' → logprob: -2.4348113536834717
    6. ' ' → logprob: -3.0598113536834717
    7. ' and' → logprob: -3.3098113536834717
    8. '[' → logprob: -3.5598113536834717
    9. '(i' → logprob: -3.6848113536834717
    10. '[a' → logprob: -3.8098113536834717

Token 754: ' original' (ID: 4756)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.35631710290908813
    2. 'the' → logprob: -1.7313170433044434
    3. ' if' → logprob: -2.4813170433044434
    4. 'if' → logprob: -3.9813170433044434
    5. '   ' → logprob: -4.856317043304443
    6. ' shortest' → logprob: -5.731317043304443
    7. 'd' → logprob: -6.481317043304443
    8. '       ' → logprob: -6.731317043304443
    9. ' original' → logprob: -6.981317043304443
    10. '```' → logprob: -7.106317043304443

Token 755: ' shortest' (ID: 70564)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48722586035728455
    2. '       ' → logprob: -1.612225890159607
    3. '   ' → logprob: -2.8622257709503174
    4. 'if' → logprob: -3.3622257709503174
    5. ':' → logprob: -3.7372257709503174
    6. '_' → logprob: -4.4872260093688965
    7. 'dist' → logprob: -4.8622260093688965
    8. '        
' → logprob: -5.1122260093688965
    9. ' ' → logprob: -5.2372260093688965
    10. '
' → logprob: -5.2372260093688965

Token 756: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5272940993309021
    2. '_path' → logprob: -0.9022940993309021
    3. ' path' → logprob: -6.152294158935547
    4. 'if' → logprob: -6.902294158935547
    5. '   ' → logprob: -7.277294158935547
    6. ')' → logprob: -9.652294158935547
    7. '_' → logprob: -10.027294158935547
    8. '```' → logprob: -10.402294158935547
    9. '           ' → logprob: -10.777294158935547
    10. '       ' → logprob: -10.777294158935547

Token 757: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3448605239391327
    2. '
' → logprob: -1.594860553741455
    3. '<|end|>' → logprob: -3.094860553741455
    4. '        
' → logprob: -4.219860553741455
    5. ' if' → logprob: -4.594860553741455
    6. 'if' → logprob: -4.844860553741455
    7. '  
' → logprob: -6.094860553741455
    8. ',' → logprob: -6.469860553741455
    9. ' 
' → logprob: -6.594860553741455
    10. '   ' → logprob: -7.594860553741455

Token 758: ' no' (ID: 860)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.41531166434288025
    2. '(dist' → logprob: -2.290311574935913
    3. 'cand' → logprob: -2.665311574935913
    4. ' dist' → logprob: -3.040311574935913
    5. 'self' → logprob: -3.915311574935913
    6. '(c' → logprob: -4.165311813354492
    7. '(' → logprob: -4.290311813354492
    8. ' (' → logprob: -4.415311813354492
    9. 'd' → logprob: -4.415311813354492
    10. ' cand' → logprob: -4.540311813354492

Token 759: ' better' (ID: 3432)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.6731749773025513
    2. 'dist' → logprob: -1.9231749773025513
    3. 'path' → logprob: -1.9231749773025513
    4. ' dist' → logprob: -2.1731748580932617
    5. ' route' → logprob: -3.1731748580932617
    6. ' alternative' → logprob: -4.798174858093262
    7. 'route' → logprob: -4.923174858093262
    8. ' other' → logprob: -6.173174858093262
    9. ' reverse' → logprob: -6.548174858093262
    10. ' new' → logprob: -6.548174858093262

Token 760: ' alternative' (ID: 13319)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8593521118164062
    2. 'path' → logprob: -1.6093521118164062
    3. ' path' → logprob: -1.7343521118164062
    4. 'if' → logprob: -2.3593521118164062
    5. ' or' → logprob: -3.7343521118164062
    6. ':' → logprob: -4.109352111816406
    7. '   ' → logprob: -4.234352111816406
    8. '       ' → logprob: -4.859352111816406
    9. '_path' → logprob: -4.984352111816406
    10. 'return' → logprob: -5.109352111816406

Token 761: ' exists' (ID: 13031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19783596694469452
    2. '
' → logprob: -2.697835922241211
    3. ':' → logprob: -2.822835922241211
    4. '   ' → logprob: -4.322835922241211
    5. ' if' → logprob: -4.322835922241211
    6. ':
' → logprob: -4.947835922241211
    7. 'if' → logprob: -5.072835922241211
    8. '        
' → logprob: -5.072835922241211
    9. '  
' → logprob: -6.822835922241211
    10. '    
' → logprob: -7.072835922241211

Token 762: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6690148711204529
    2. ':' → logprob: -1.4190149307250977
    3. '
' → logprob: -2.0440149307250977
    4. '   ' → logprob: -3.9190149307250977
    5. ':
' → logprob: -3.9190149307250977
    6. ',' → logprob: -4.169014930725098
    7. ' if' → logprob: -4.419014930725098
    8. '        
' → logprob: -4.544014930725098
    9. '  
' → logprob: -5.169014930725098
    10. ' 
' → logprob: -5.669014930725098

Token 763: ' SAD' (ID: 129323)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21734565496444702
    2. ' if' → logprob: -2.342345714569092
    3. 'return' → logprob: -2.717345714569092
    4. '       ' → logprob: -3.717345714569092
    5. ' return' → logprob: -5.842345714569092
    6. '#' → logprob: -5.967345714569092
    7. '           ' → logprob: -6.592345714569092
    8. 'result' → logprob: -6.717345714569092
    9. '   ' → logprob: -8.592345237731934
    10. 'res' → logprob: -9.217345237731934

Token 764: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09207194298505783
    2. '
' → logprob: -2.717072010040283
    3. '        
' → logprob: -4.967072010040283
    4. ' if' → logprob: -5.092072010040283
    5. 'if' → logprob: -5.592072010040283
    6. '<|end|>' → logprob: -6.342072010040283
    7. '```' → logprob: -7.217072010040283
    8. '  
' → logprob: -7.717072010040283
    9. ',' → logprob: -8.217071533203125
    10. '   ' → logprob: -8.467071533203125

Token 765: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6200504302978516
    2. '       ' → logprob: -0.8700504302978516
    3. ' if' → logprob: -3.4950504302978516
    4. '```' → logprob: -4.870050430297852
    5. 'dist' → logprob: -5.620050430297852
    6. '        
' → logprob: -7.870050430297852
    7. '\' → logprob: -8.620050430297852
    8. '   ' → logprob: -8.745050430297852
    9. 'return' → logprob: -8.870050430297852
    10. '``' → logprob: -9.245050430297852

Token 766: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14673680067062378
    2. '       ' → logprob: -2.1467368602752686
    3. ' if' → logprob: -4.0217366218566895
    4. '
' → logprob: -6.6467366218566895
    5. 'return' → logprob: -9.146737098693848
    6. '        
' → logprob: -9.146737098693848
    7. '```' → logprob: -9.146737098693848
    8. 'dist' → logprob: -10.521737098693848
    9. '\
' → logprob: -11.521737098693848
    10. '\' → logprob: -12.021737098693848

Token 767: ' cand' (ID: 31771)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.266980916261673
    2. ' cand' → logprob: -1.5169808864593506
    3. 'dist' → logprob: -5.01698112487793
    4. 'd' → logprob: -5.51698112487793
    5. ' dist' → logprob: -6.14198112487793
    6. ' d' → logprob: -6.39198112487793
    7. 'c' → logprob: -8.64198112487793
    8. '   ' → logprob: -8.76698112487793
    9. 'self' → logprob: -10.14198112487793
    10. ' ' → logprob: -11.01698112487793

Token 768: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.31344765424728394
    2. ' <' → logprob: -1.3134477138519287
    3. '>' → logprob: -9.188447952270508
    4. '<=' → logprob: -10.688447952270508
    5. ' >' → logprob: -10.813447952270508
    6. '==' → logprob: -11.063447952270508
    7. ' <=' → logprob: -11.938447952270508
    8. ' ==' → logprob: -12.688447952270508
    9. ' ' → logprob: -13.063447952270508
    10. '>=' → logprob: -13.438447952270508

Token 769: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00018196819291915745
    2. ' d' → logprob: -8.625182151794434
    3. '       ' → logprob: -14.125182151794434
    4. '   ' → logprob: -14.375182151794434
    5. '     ' → logprob: -15.625182151794434
    6. ' ' → logprob: -15.625182151794434
    7. '    ' → logprob: -15.875182151794434
    8. '           ' → logprob: -15.875182151794434
    9. 'dist' → logprob: -16.125181198120117
    10. '
' → logprob: -16.500181198120117

Token 770: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16035644710063934
    2. ':
' → logprob: -1.9103564023971558
    3. ':
' → logprob: -9.410356521606445
    4. ':return' → logprob: -10.160356521606445
    5. '       ' → logprob: -12.160356521606445
    6. '           ' → logprob: -13.285356521606445
    7. '):
' → logprob: -13.785356521606445
    8. '):' → logprob: -14.160356521606445
    9. ':

' → logprob: -14.285356521606445
    10. ' and' → logprob: -14.660356521606445

Token 771: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03892028331756592
    2. 'return' → logprob: -3.5389204025268555
    3. ' return' → logprob: -5.4139204025268555
    4. '
' → logprob: -5.5389204025268555
    5. '       ' → logprob: -8.038920402526855
    6. '\n' → logprob: -8.913920402526855
    7. '   ' → logprob: -9.663920402526855
    8. '```' → logprob: -10.288920402526855
    9. ':
' → logprob: -10.413920402526855
    10. ':' → logprob: -10.538920402526855

Token 772: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02465100958943367
    2. '           ' → logprob: -4.899651050567627
    3. 'print' → logprob: -5.024651050567627
    4. '"' → logprob: -5.024651050567627
    5. ' return' → logprob: -7.024651050567627
    6. '"H' → logprob: -7.024651050567627
    7. '   ' → logprob: -7.149651050567627
    8. ''' → logprob: -7.274651050567627
    9. ''H' → logprob: -7.899651050567627
    10. '       ' → logprob: -9.524650573730469

Token 773: ' "' (ID: 392)
  Prédit: '"H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"H' → logprob: -0.09974079579114914
    2. ''H' → logprob: -2.974740743637085
    3. '"' → logprob: -3.224740743637085
    4. ' "' → logprob: -6.099740982055664
    5. ''' → logprob: -6.474740982055664
    6. ' '' → logprob: -9.099740982055664
    7. '   ' → logprob: -9.849740982055664
    8. '"S' → logprob: -10.724740982055664
    9. ''"' → logprob: -10.849740982055664
    10. ''S' → logprob: -10.849740982055664

Token 774: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2541002035140991
    2. '"H' → logprob: -1.5041002035140991
    3. ''H' → logprob: -6.879100322723389
    4. '"' → logprob: -6.879100322723389
    5. 'Happy' → logprob: -10.25409984588623
    6. '“H' → logprob: -10.62909984588623
    7. ''' → logprob: -11.62909984588623
    8. '`' → logprob: -11.75409984588623
    9. ' HAPPY' → logprob: -12.00409984588623
    10. '\"' → logprob: -12.37909984588623

Token 775: 'APPY' (ID: 124449)
  Prédit: 'APPY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'APPY' → logprob: -0.02414330467581749
    2. 'A' → logprob: -3.7741432189941406
    3. 'APP' → logprob: -7.024143218994141
    4. 'AP' → logprob: -12.14914321899414
    5. 'appy' → logprob: -13.52414321899414
    6. ' A' → logprob: -16.52414321899414
    7. '"' → logprob: -16.52414321899414
    8. 'App' → logprob: -16.89914321899414
    9. 'H' → logprob: -16.89914321899414
    10. 'AAP' → logprob: -17.14914321899414

Token 776: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10039051622152328
    2. '\n' → logprob: -2.3503904342651367
    3. ' "' → logprob: -9.350390434265137
    4. '"
' → logprob: -10.475390434265137
    5. '```' → logprob: -10.475390434265137
    6. '"\' → logprob: -10.975390434265137
    7. '\' → logprob: -12.225390434265137
    8. '\r' → logprob: -12.600390434265137
    9. '")' → logprob: -12.850390434265137
    10. '"""' → logprob: -13.475390434265137

Token 777: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.10443157702684402
    2. '<|end|>' → logprob: -2.729431629180908
    3. '       ' → logprob: -3.604431629180908
    4. ' elif' → logprob: -5.354431629180908
    5. '```' → logprob: -8.10443115234375
    6. '	elif' → logprob: -8.35443115234375
    7. '<|end|>' → logprob: -8.35443115234375
    8. ')' → logprob: -8.60443115234375
    9. '   ' → logprob: -8.72943115234375
    10. '\n' → logprob: -8.72943115234375

Token 778: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.014927281066775322
    2. ' elif' → logprob: -4.264927387237549
    3. '<|end|>' → logprob: -7.639927387237549
    4. '       ' → logprob: -8.63992691040039
    5. 'if' → logprob: -10.26492691040039
    6. '	elif' → logprob: -10.51492691040039
    7. '```' → logprob: -11.63992691040039
    8. 'else' → logprob: -12.13992691040039
    9. ' 
' → logprob: -12.38992691040039
    10. '   ' → logprob: -12.51492691040039

Token 779: ' cand' (ID: 31771)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.12700097262859344
    2. ' cand' → logprob: -2.1270010471343994
    3. 'c' → logprob: -9.62700080871582
    4. '	c' → logprob: -13.25200080871582
    5. ' ' → logprob: -13.25200080871582
    6. '   ' → logprob: -13.50200080871582
    7. 'Cand' → logprob: -14.75200080871582
    8. '```' → logprob: -14.87700080871582
    9. 'd' → logprob: -15.37700080871582
    10. ' ' → logprob: -15.75200080871582

Token 780: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25195467472076416
    2. '==' → logprob: -1.5019546747207642
    3. ' <=' → logprob: -11.001955032348633
    4. '<=' → logprob: -12.126955032348633
    5. '=' → logprob: -13.626955032348633
    6. '==
' → logprob: -14.251955032348633
    7. '===' → logprob: -14.751955032348633
    8. ')==' → logprob: -15.251955032348633
    9. ' =' → logprob: -15.251955032348633
    10. ']==' → logprob: -15.626955032348633

Token 781: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005251187365502119
    2. ' d' → logprob: -5.255251407623291
    3. '"d' → logprob: -11.630250930786133
    4. '"' → logprob: -13.005250930786133
    5. '   ' → logprob: -13.130250930786133
    6. ''d' → logprob: -13.255250930786133
    7. ' ' → logprob: -14.255250930786133
    8. '       ' → logprob: -14.255250930786133
    9. '           ' → logprob: -15.380250930786133
    10. '     ' → logprob: -15.505250930786133

Token 782: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5761744379997253
    2. ':' → logprob: -0.8261744379997253
    3. '           ' → logprob: -8.70117473602295
    4. ':
' → logprob: -10.95117473602295
    5. '       ' → logprob: -11.32617473602295
    6. ':return' → logprob: -11.57617473602295
    7. '):
' → logprob: -11.82617473602295
    8. ' and' → logprob: -11.82617473602295
    9. ')' → logprob: -12.82617473602295
    10. ':

' → logprob: -13.20117473602295

Token 783: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005118123255670071
    2. 'return' → logprob: -5.505117893218994
    3. ' return' → logprob: -7.255117893218994
    4. '       ' → logprob: -8.130118370056152
    5. '               ' → logprob: -10.880118370056152
    6. '   ' → logprob: -11.130118370056152
    7. '	       ' → logprob: -13.630118370056152
    8. '	return' → logprob: -14.005118370056152
    9. ' ' → logprob: -14.630118370056152
    10. '          ' → logprob: -14.755118370056152

Token 784: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41217759251594543
    2. ' return' → logprob: -1.662177562713623
    3. 'return' (adapté à ' return') → logprob: -1.912177562713623
    4. '       ' → logprob: -9.287178039550781
    5. '               ' → logprob: -9.537178039550781
    6. '	return' → logprob: -9.787178039550781
    7. '	       ' → logprob: -9.787178039550781
    8. '   ' → logprob: -10.912178039550781
    9. '		' → logprob: -12.287178039550781
    10. ' ' → logprob: -12.912178039550781

Token 785: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05496060103178024
    2. ' "' → logprob: -2.9299604892730713
    3. '"S' → logprob: -10.179960250854492
    4. '"H' → logprob: -10.429960250854492
    5. ''' → logprob: -12.054960250854492
    6. ' ' → logprob: -13.054960250854492
    7. '("' → logprob: -14.054960250854492
    8. '"s' → logprob: -14.304960250854492
    9. '
' → logprob: -15.429960250854492
    10. ' ' → logprob: -15.429960250854492

Token 786: 'SOS' (ID: 157130)
  Prédit: '"S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"S' → logprob: -0.47824639081954956
    2. 'SOS' → logprob: -0.9782463908195496
    3. ''S' → logprob: -5.603246212005615
    4. '"' → logprob: -7.853246212005615
    5. '"s' → logprob: -9.853246688842773
    6. '"So' → logprob: -11.103246688842773
    7. 's' → logprob: -11.728246688842773
    8. ' SOS' → logprob: -12.603246688842773
    9. 'S' → logprob: -13.103246688842773
    10. ''' → logprob: -13.103246688842773

Token 787: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.5451681974809617e-05
    2. '"O' → logprob: -11.500015258789062
    3. '"' → logprob: -13.125015258789062
    4. 'О' → logprob: -13.750015258789062
    5. '```' → logprob: -14.375015258789062
    6. ' O' → logprob: -14.625015258789062
    7. '	O' → logprob: -14.750015258789062
    8. '
' → logprob: -15.625015258789062
    9. '")' → logprob: -16.250015258789062
    10. 'SO' → logprob: -16.250015258789062

Token 788: '"
' (ID: 1092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010811600368469954
    2. 'else' → logprob: -7.5010809898376465
    3. '
' → logprob: -8.001081466674805
    4. ' else' → logprob: -9.751081466674805
    5. '<|end|>' → logprob: -9.751081466674805
    6. 'elif' → logprob: -10.126081466674805
    7. '```' → logprob: -11.501081466674805
    8. '	' → logprob: -12.126081466674805
    9. '\
' → logprob: -12.751081466674805
    10. '  
' → logprob: -13.126081466674805

Token 789: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010581768117845058
    2. 'else' → logprob: -5.135581970214844
    3. ' else' → logprob: -5.885581970214844
    4. '<|end|>' → logprob: -6.635581970214844
    5. '```' → logprob: -8.260581970214844
    6. '	' → logprob: -9.010581970214844
    7. '	else' → logprob: -10.260581970214844
    8. '[' → logprob: -10.635581970214844
    9. 'elif' → logprob: -10.760581970214844
    10. '   ' → logprob: -11.510581970214844

Token 790: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5380932092666626
    2. '       ' → logprob: -1.0380932092666626
    3. ' else' → logprob: -2.788093090057373
    4. 'elif' → logprob: -7.788093090057373
    5. '```' → logprob: -10.538093566894531
    6. '	else' → logprob: -10.913093566894531
    7. ' elif' → logprob: -11.538093566894531
    8. '	' → logprob: -14.538093566894531
    9. '	elif' → logprob: -14.663093566894531
    10. '<|end|>' → logprob: -14.913093566894531

Token 791: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21137069165706635
    2. ':' → logprob: -2.0863707065582275
    3. ':
' → logprob: -2.8363707065582275
    4. '       ' → logprob: -5.211370468139648
    5. '<|end|>' → logprob: -7.336370468139648
    6. '	       ' → logprob: -7.586370468139648
    7. '               ' → logprob: -8.336370468139648
    8. ' if' → logprob: -8.461370468139648
    9. ',' → logprob: -8.711370468139648
    10. ' return' → logprob: -9.336370468139648

Token 792: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00441480940207839
    2. ' return' → logprob: -6.129415035247803
    3. 'return' → logprob: -7.004415035247803
    4. '       ' → logprob: -7.004415035247803
    5. ' if' → logprob: -8.004414558410645
    6. 'if' → logprob: -10.379414558410645
    7. '               ' → logprob: -10.629414558410645
    8. '```' → logprob: -11.629414558410645
    9. '   ' → logprob: -12.254414558410645
    10. '          ' → logprob: -13.379414558410645

Token 793: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23128288984298706
    2. 'if' → logprob: -1.9812829494476318
    3. '#' (adapté à ' #') → logprob: -3.481282949447632
    4. '       ' → logprob: -3.606282949447632
    5. 'orig' → logprob: -5.481282711029053
    6. '           ' → logprob: -6.606282711029053
    7. 'original' → logprob: -6.606282711029053
    8. 'dist' → logprob: -6.606282711029053
    9. ' return' → logprob: -7.606282711029053
    10. 'from' → logprob: -7.856282711029053

Token 794: ' Possibly' (ID: 138743)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0716599225997925
    2. '#' → logprob: -1.1966599225997925
    3. 'orig' → logprob: -1.5716599225997925
    4. 'return' → logprob: -3.196660041809082
    5. '       ' → logprob: -3.571660041809082
    6. 'original' → logprob: -4.071660041809082
    7. 'dist' → logprob: -4.571660041809082
    8. 'alt' → logprob: -4.821660041809082
    9. 'edge' → logprob: -5.071660041809082
    10. 'for' → logprob: -5.196660041809082

Token 795: ' no' (ID: 860)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7904850840568542
    2. '#' → logprob: -1.040485143661499
    3. 'orig' → logprob: -2.540485143661499
    4. '           ' → logprob: -2.915485143661499
    5. 'dist' → logprob: -4.41548490524292
    6. '   ' → logprob: -4.41548490524292
    7. 'u' → logprob: -4.79048490524292
    8. 'edge' → logprob: -5.04048490524292
    9. 'if' → logprob: -5.29048490524292
    10. 'original' → logprob: -5.66548490524292

Token 796: ' improvement' (ID: 20692)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.26333796977996826
    2. ' path' → logprob: -2.263338088989258
    3. '_path' → logprob: -2.888338088989258
    4. ' route' → logprob: -4.013338088989258
    5. 'route' → logprob: -4.263338088989258
    6. ' if' → logprob: -4.763338088989258
    7. '   ' → logprob: -5.013338088989258
    8. '#' → logprob: -5.263338088989258
    9. '       ' → logprob: -5.388338088989258
    10. 'if' → logprob: -5.763338088989258

Token 797: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10590898245573044
    2. ' if' → logprob: -3.3559088706970215
    3. ' or' → logprob: -3.3559088706970215
    4. ',' → logprob: -4.4809088706970215
    5. '       ' → logprob: -5.1059088706970215
    6. '
' → logprob: -5.4809088706970215
    7. 'return' → logprob: -6.2309088706970215
    8. ' and' → logprob: -6.3559088706970215
    9. ' return' → logprob: -6.3559088706970215
    10. '               ' → logprob: -6.6059088706970215

Token 798: ' check' (ID: 2371)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9149296879768372
    2. '           ' → logprob: -1.4149296283721924
    3. ' return' → logprob: -1.7899296283721924
    4. '#' → logprob: -2.4149296283721924
    5. '       ' → logprob: -3.5399296283721924
    6. ' #' → logprob: -3.9149296283721924
    7. 'orig' → logprob: -4.4149298667907715
    8. 'if' → logprob: -4.6649298667907715
    9. 'dist' → logprob: -4.6649298667907715
    10. ' if' → logprob: -5.1649298667907715

Token 799: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3603115975856781
    2. 'if' → logprob: -1.2353116273880005
    3. '           ' → logprob: -5.235311508178711
    4. 'dist' → logprob: -5.860311508178711
    5. '       ' → logprob: -7.110311508178711
    6. '               ' → logprob: -7.360311508178711
    7. ' dist' → logprob: -7.485311508178711
    8. '   ' → logprob: -7.735311508178711
    9. ' original' → logprob: -7.985311508178711
    10. 'original' → logprob: -8.860311508178711

Token 800: ' original' (ID: 4756)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07144802808761597
    2. ' dist' → logprob: -3.4464480876922607
    3. 'self' → logprob: -4.071447849273682
    4. 'd' → logprob: -4.321447849273682
    5. 'a' → logprob: -6.196447849273682
    6. ' self' → logprob: -6.571447849273682
    7. 'c' → logprob: -6.696447849273682
    8. 'cand' → logprob: -6.821447849273682
    9. ' d' → logprob: -7.946447849273682
    10. '(dist' → logprob: -9.07144832611084

Token 801: ' shortest' (ID: 70564)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.43013903498649597
    2. 'dist' → logprob: -1.0551390647888184
    3. ' dist' → logprob: -7.430139064788818
    4. 'd' → logprob: -8.80513858795166
    5. '_d' → logprob: -9.30513858795166
    6. '```' → logprob: -9.93013858795166
    7. 'edges' → logprob: -10.05513858795166
    8. '_edges' → logprob: -10.18013858795166
    9. 'Dist' → logprob: -10.18013858795166
    10. 'short' → logprob: -10.30513858795166

Token 802: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0021950986701995134
    2. ' path' → logprob: -6.252194881439209
    3. '_path' → logprob: -8.252195358276367
    4. 'distance' → logprob: -13.627195358276367
    5. '           ' → logprob: -13.877195358276367
    6. '```' → logprob: -14.252195358276367
    7. 'edge' → logprob: -14.627195358276367
    8. 'dist' → logprob: -14.877195358276367
    9. ')' → logprob: -15.127195358276367
    10. 'if' → logprob: -15.252195358276367

Token 803: ' used' (ID: 2061)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2881852388381958
    2. '==' → logprob: -1.4131852388381958
    3. ' ==' → logprob: -1.5381852388381958
    4. 'is' → logprob: -1.9131852388381958
    5. 'in' → logprob: -3.2881851196289062
    6. 'uses' → logprob: -3.9131851196289062
    7. ' <' → logprob: -4.288185119628906
    8. ' uses' → logprob: -4.913185119628906
    9. ' !=' → logprob: -5.163185119628906
    10. '           ' → logprob: -5.288185119628906

Token 804: ' this' (ID: 495)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4363383948802948
    2. 'a' → logprob: -1.6863384246826172
    3. ' any' → logprob: -3.311338424682617
    4. ' (' → logprob: -3.436338424682617
    5. 'any' → logprob: -3.561338424682617
    6. '_edges' → logprob: -4.061338424682617
    7. ' a' → logprob: -5.061338424682617
    8. '[a' → logprob: -5.061338424682617
    9. '_edge' → logprob: -5.061338424682617
    10. 'in' → logprob: -5.311338424682617

Token 805: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.7133539915084839
    2. ' edge' → logprob: -0.9633539915084839
    3. ' if' → logprob: -3.5883541107177734
    4. '           ' → logprob: -3.8383541107177734
    5. 'for' → logprob: -4.088354110717773
    6. ' for' → logprob: -4.088354110717773
    7. 'if' → logprob: -4.213354110717773
    8. '_edge' → logprob: -4.713354110717773
    9. '       ' → logprob: -5.213354110717773
    10. '(edge' → logprob: -5.838354110717773

Token 806: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24672575294971466
    2. '           ' → logprob: -1.8717257976531982
    3. '
' → logprob: -3.4967257976531982
    4. ',' → logprob: -4.246725559234619
    5. '        
' → logprob: -5.246725559234619
    6. ' if' → logprob: -5.496725559234619
    7. '<|end|>' → logprob: -5.996725559234619
    8. ' =' → logprob: -6.996725559234619
    9. ' and' → logprob: -7.371725559234619
    10. 'if' → logprob: -7.496725559234619

Token 807: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17594760656356812
    2. 'nd' → logprob: -2.550947666168213
    3. '==' → logprob: -3.300947666168213
    4. ',b' → logprob: -3.800947666168213
    5. '->' → logprob: -4.300947666168213
    6. ' ,' → logprob: -6.175947666168213
    7. ' in' → logprob: -6.550947666168213
    8. 'pp' → logprob: -6.675947666168213
    9. ' ==' → logprob: -6.925947666168213
    10. 's' → logprob: -7.550947666168213

Token 808: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9027791495318525e-05
    2. ' b' → logprob: -10.875019073486328
    3. '```' → logprob: -17.125019073486328
    4. ')b' → logprob: -18.750019073486328
    5. '	b' → logprob: -19.250019073486328
    6. '>b' → logprob: -19.250019073486328
    7. ',b' → logprob: -19.375019073486328
    8. ' ' → logprob: -19.625019073486328
    9. '`' → logprob: -19.875019073486328
    10. '   ' → logprob: -19.875019073486328

Token 809: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040264107286930084
    2. '
' → logprob: -3.790264129638672
    3. '           ' → logprob: -4.915264129638672
    4. '        
' → logprob: -5.290264129638672
    5. ',' → logprob: -6.915264129638672
    6. 'if' → logprob: -7.790264129638672
    7. ' if' → logprob: -7.790264129638672
    8. '#' → logprob: -8.290264129638672
    9. '<|end|>' → logprob: -8.290264129638672
    10. 'import' → logprob: -8.540264129638672

Token 810: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027413968928158283
    2. '           ' → logprob: -7.00274133682251
    3. ' if' → logprob: -7.87774133682251
    4. 'if' → logprob: -8.252741813659668
    5. '```' → logprob: -8.252741813659668
    6. ' for' → logprob: -8.377741813659668
    7. '<|end|>' → logprob: -9.127741813659668
    8. 'for' → logprob: -9.252741813659668
    9. '        
' → logprob: -9.627741813659668
    10. '#' → logprob: -9.752741813659668

Token 811: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3264479637145996
    2. 'used' → logprob: -1.8264479637145996
    3. 'for' → logprob: -1.9514479637145996
    4. '       ' → logprob: -2.3264479637145996
    5. 'dist' → logprob: -2.4514479637145996
    6. '           ' → logprob: -2.5764479637145996
    7. 'orig' → logprob: -2.5764479637145996
    8. 'path' → logprob: -3.8264479637145996
    9. '#' (adapté à ' #') → logprob: -4.0764479637146
    10. ' used' → logprob: -4.5764479637146

Token 812: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1975313425064087
    2. 'if' → logprob: -1.1975313425064087
    3. 'used' → logprob: -1.8225313425064087
    4. 'for' → logprob: -2.572531223297119
    5. 'path' → logprob: -3.197531223297119
    6. 'orig' → logprob: -3.447531223297119
    7. 'dist' → logprob: -3.572531223297119
    8. 'u' → logprob: -4.197531223297119
    9. 'from' → logprob: -4.697531223297119
    10. '#' → logprob: -4.822531223297119

Token 813: ' detect' (ID: 11839)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.5717470049858093
    2. 'det' → logprob: -0.9467470049858093
    3. 'do' → logprob: -4.571746826171875
    4. 'find' → logprob: -4.821746826171875
    5. 'def' → logprob: -5.071746826171875
    6. ' check' → logprob: -5.446746826171875
    7. 'answer' → logprob: -5.571746826171875
    8. 'continue' → logprob: -5.571746826171875
    9. '#' → logprob: -6.321746826171875
    10. 'return' → logprob: -6.696746826171875

Token 814: ' usage' (ID: 16622)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.12428976595401764
    2. 'if' → logprob: -2.4992897510528564
    3. 'original' → logprob: -4.7492899894714355
    4. ' used' → logprob: -4.7492899894714355
    5. '   ' → logprob: -4.9992899894714355
    6. 'whether' → logprob: -5.6242899894714355
    7. 'for' → logprob: -6.7492899894714355
    8. 'edge' → logprob: -6.8742899894714355
    9. '#' → logprob: -6.9992899894714355
    10. ' if' → logprob: -7.3742899894714355

Token 815: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36094748973846436
    2. '           ' → logprob: -1.8609474897384644
    3. ' used' → logprob: -3.235947608947754
    4. ' if' → logprob: -3.360947608947754
    5. ' for' → logprob: -3.860947608947754
    6. 'if' → logprob: -4.235947608947754
    7. 'for' → logprob: -4.610947608947754
    8. ',' → logprob: -5.360947608947754
    9. ' in' → logprob: -5.360947608947754
    10. ' =' → logprob: -5.485947608947754

Token 816: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.22223955392837524
    2. 'the' → logprob: -2.4722394943237305
    3. 'a' → logprob: -3.3472394943237305
    4. 'this' → logprob: -3.8472394943237305
    5. ' edge' → logprob: -4.2222394943237305
    6. 'import' → logprob: -4.3472394943237305
    7. 'edges' → logprob: -4.4722394943237305
    8. 'an' → logprob: -5.7222394943237305
    9. 'any' → logprob: -5.7222394943237305
    10. 'self' → logprob: -5.8472394943237305

Token 817: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4545059204101562
    2. '       ' → logprob: -1.5795059204101562
    3. ' if' → logprob: -1.8295059204101562
    4. '           ' → logprob: -1.9545059204101562
    5. ' in' → logprob: -2.3295059204101562
    6. 'for' → logprob: -3.2045059204101562
    7. ',' → logprob: -3.8295059204101562
    8. ' for' → logprob: -3.9545059204101562
    9. 'in' → logprob: -4.329505920410156
    10. ' used' → logprob: -4.579505920410156

Token 818: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03900948539376259
    2. ',' → logprob: -4.2890095710754395
    3. ' if' → logprob: -5.1640095710754395
    4. ':' → logprob: -5.1640095710754395
    5. '           ' → logprob: -5.5390095710754395
    6. 'if' → logprob: -5.5390095710754395
    7. '=' → logprob: -7.1640095710754395
    8. ' =' → logprob: -7.2890095710754395
    9. '#' → logprob: -7.6640095710754395
    10. '   ' → logprob: -7.9140095710754395

Token 819: ' some' (ID: 1236)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.25440821051597595
    2. ' shortest' → logprob: -2.504408121109009
    3. ' the' → logprob: -2.879408121109009
    4. 'self' → logprob: -3.129408121109009
    5. 'short' → logprob: -3.504408121109009
    6. 'any' → logprob: -5.254408359527588
    7. 'original' → logprob: -5.379408359527588
    8. ' any' → logprob: -6.754408359527588
    9. ' original' → logprob: -8.25440788269043
    10. 'path' → logprob: -8.25440788269043

Token 820: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.6522072553634644
    2. ' shortest' → logprob: -0.7772072553634644
    3. 'self' → logprob: -4.777207374572754
    4. 'path' → logprob: -4.902207374572754
    5. '_short' → logprob: -6.777207374572754
    6. 'def' → logprob: -7.277207374572754
    7. '   ' → logprob: -8.152207374572754
    8. '#' → logprob: -8.152207374572754
    9. '
' → logprob: -8.527207374572754
    10. 'Shortest' → logprob: -8.777207374572754

Token 821: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.4745832681655884
    2. 'path' → logprob: -0.9745832681655884
    3. ' path' → logprob: -8.099583625793457
    4. '           ' → logprob: -9.099583625793457
    5. '_paths' → logprob: -10.599583625793457
    6. 'paths' → logprob: -11.099583625793457
    7. '       ' → logprob: -11.224583625793457
    8. 'dist' → logprob: -11.474583625793457
    9. '   ' → logprob: -11.724583625793457
    10. 'distance' → logprob: -12.724583625793457

Token 822: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21293656527996063
    2. 'if' → logprob: -2.4629366397857666
    3. '           ' → logprob: -3.2129366397857666
    4. ' if' → logprob: -3.3379366397857666
    5. ',' → logprob: -4.4629364013671875
    6. 'dist' → logprob: -4.4629364013671875
    7. '#' → logprob: -6.7129364013671875
    8. 'from' → logprob: -7.3379364013671875
    9. 'distance' → logprob: -7.3379364013671875
    10. 'u' → logprob: -7.4629364013671875

Token 823: ' check' (ID: 2371)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0931962728500366
    2. ' used' → logprob: -1.7181962728500366
    3. 'if' → logprob: -2.218196392059326
    4. ' for' → logprob: -2.218196392059326
    5. 'for' → logprob: -3.093196392059326
    6. ' dist' → logprob: -3.093196392059326
    7. 'dist' → logprob: -3.218196392059326
    8. '           ' → logprob: -3.343196392059326
    9. '       ' → logprob: -3.593196392059326
    10. 'used' → logprob: -3.968196392059326

Token 824: ':
' (ID: 734)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08072535693645477
    2. ' if' → logprob: -2.8307254314422607
    3. 'dist' → logprob: -4.330725193023682
    4. 'self' → logprob: -5.830725193023682
    5. '       ' → logprob: -6.580725193023682
    6. '           ' → logprob: -7.455725193023682
    7. 'for' → logprob: -8.83072566986084
    8. '   ' → logprob: -9.33072566986084
    9. ' dist' → logprob: -9.45572566986084
    10. 'from' → logprob: -10.08072566986084

Token 825: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6502954959869385
    2. '       ' → logprob: -0.9002954959869385
    3. 'if' → logprob: -2.7752954959869385
    4. '```' → logprob: -5.900295257568359
    5. '           ' → logprob: -6.150295257568359
    6. 'dist' → logprob: -6.275295257568359
    7. ' dist' → logprob: -7.025295257568359
    8. ' for' → logprob: -7.775295257568359
    9. ' u' → logprob: -8.77529525756836
    10. '   ' → logprob: -8.90029525756836

Token 826: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006028930656611919
    2. ' if' → logprob: -5.25602912902832
    3. '       ' → logprob: -8.38102912902832
    4. '           ' → logprob: -8.50602912902832
    5. 'used' → logprob: -8.75602912902832
    6. 'dist' → logprob: -9.13102912902832
    7. '```' → logprob: -10.00602912902832
    8. 'from' → logprob: -10.88102912902832
    9. 'for' → logprob: -11.75602912902832
    10. 'self' → logprob: -12.00602912902832

Token 827: ' Whether' (ID: 14959)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03114343248307705
    2. 'used' → logprob: -4.031143665313721
    3. 'dist' → logprob: -5.031143665313721
    4. ' if' → logprob: -5.281143665313721
    5. ' used' → logprob: -8.406143188476562
    6. '       ' → logprob: -8.406143188476562
    7. 'self' → logprob: -8.531143188476562
    8. '           ' → logprob: -9.156143188476562
    9. ' dist' → logprob: -9.281143188476562
    10. 'a' → logprob: -9.531143188476562

Token 828: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03844581916928291
    2. 'self' → logprob: -3.2884457111358643
    3. ' dist' → logprob: -8.038445472717285
    4. '(dist' → logprob: -10.538445472717285
    5. '   ' → logprob: -10.663445472717285
    6. ' self' → logprob: -11.163445472717285
    7. 'd' → logprob: -12.038445472717285
    8. '       ' → logprob: -12.913445472717285
    9. '(self' → logprob: -13.538445472717285
    10. 'abs' → logprob: -13.538445472717285

Token 829: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -6.051066520740278e-05
    2. 'from' → logprob: -9.750060081481934
    3. '[a' → logprob: -14.125060081481934
    4. '   ' → logprob: -14.750060081481934
    5. 'From' → logprob: -15.125060081481934
    6. '_to' → logprob: -15.125060081481934
    7. '[from' → logprob: -15.875060081481934
    8. 'a' → logprob: -16.12506103515625
    9. '_for' → logprob: -16.75006103515625
    10. ' from' → logprob: -16.87506103515625

Token 830: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00010080150241265073
    2. 'start' → logprob: -9.250101089477539
    3. 'a' → logprob: -13.375101089477539
    4. '```' → logprob: -13.500101089477539
    5. '[start' → logprob: -14.500101089477539
    6. '_end' → logprob: -15.500101089477539
    7. 'from' → logprob: -15.750101089477539
    8. '_sys' → logprob: -15.875101089477539
    9. '_user' → logprob: -16.00010108947754
    10. '_' → logprob: -16.50010108947754

Token 831: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0077075352892279625
    2. '[b' → logprob: -4.882707595825195
    3. 'a' → logprob: -9.507707595825195
    4. '[u' → logprob: -11.257707595825195
    5. '[' → logprob: -12.132707595825195
    6. 'b' → logprob: -12.882707595825195
    7. '[c' → logprob: -13.757707595825195
    8. '```' → logprob: -13.757707595825195
    9. ' [' → logprob: -14.132707595825195
    10. '[self' → logprob: -14.257707595825195

Token 832: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.385392427444458
    2. ' +' → logprob: -1.760392427444458
    3. '+' → logprob: -2.385392427444458
    4. ']+' → logprob: -3.010392427444458
    5. '[a' → logprob: -6.260392189025879
    6. '[' → logprob: -6.510392189025879
    7. '[u' → logprob: -6.635392189025879
    8. '[i' → logprob: -8.010392189025879
    9. '```' → logprob: -8.010392189025879
    10. ' ]' → logprob: -8.010392189025879

Token 833: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2262156456708908
    2. '+' → logprob: -1.6012156009674072
    3. '<=' → logprob: -7.601215839385986
    4. ' <=' → logprob: -8.726215362548828
    5. '==' → logprob: -9.351215362548828
    6. '```' → logprob: -11.226215362548828
    7. ' ==' → logprob: -11.351215362548828
    8. '!=' → logprob: -11.476215362548828
    9. ' !=' → logprob: -11.976215362548828
    10. ' ' → logprob: -13.351215362548828

Token 834: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001426346570951864
    2. ' c' → logprob: -8.875143051147461
    3. '           ' → logprob: -13.750143051147461
    4. '   ' → logprob: -14.250143051147461
    5. '```' → logprob: -15.000143051147461
    6. '       ' → logprob: -15.500143051147461
    7. '               ' → logprob: -16.00014305114746
    8. 'import' → logprob: -16.37514305114746
    9. '0' → logprob: -16.75014305114746
    10. '    ' → logprob: -17.37514305114746

Token 835: ' +' (ID: 659)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.906035304069519
    2. ' ==' → logprob: -1.156035304069519
    3. ' +' → logprob: -2.0310354232788086
    4. '+' → logprob: -2.7810354232788086
    5. ' <=' → logprob: -2.9060354232788086
    6. '<=' → logprob: -3.4060354232788086
    7. ' ' → logprob: -10.531035423278809
    8. '===' → logprob: -10.906035423278809
    9. '>=' → logprob: -11.156035423278809
    10. '```' → logprob: -11.156035423278809

Token 836: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.002027731155976653
    2. 'self' → logprob: -6.25202751159668
    3. ' dist' → logprob: -9.37702751159668
    4. '           ' → logprob: -11.37702751159668
    5. '               ' → logprob: -13.62702751159668
    6. ' self' → logprob: -14.50202751159668
    7. '   ' → logprob: -15.00202751159668
    8. '                   ' → logprob: -15.75202751159668
    9. '_dist' → logprob: -16.00202751159668
    10. '	dist' → logprob: -16.00202751159668

Token 837: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.029773171991109848
    2. '_from' → logprob: -3.529773235321045
    3. 'from' → logprob: -10.904772758483887
    4. '[b' → logprob: -13.279772758483887
    5. 'to' → logprob: -13.779772758483887
    6. '   ' → logprob: -14.529772758483887
    7. 'b' → logprob: -15.654772758483887
    8. '           ' → logprob: -16.654773712158203
    9. '[to' → logprob: -16.654773712158203
    10. '```' → logprob: -16.654773712158203

Token 838: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.029752222821116447
    2. 'end' → logprob: -3.529752254486084
    3. 'b' → logprob: -14.404751777648926
    4. '_start' → logprob: -14.779751777648926
    5. '   ' → logprob: -16.154752731323242
    6. 'a' → logprob: -16.154752731323242
    7. '[end' → logprob: -16.154752731323242
    8. 'End' → logprob: -16.529752731323242
    9. '=end' → logprob: -16.654752731323242
    10. '-end' → logprob: -16.654752731323242

Token 839: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -8.65707261255011e-06
    2. 'b' → logprob: -11.750008583068848
    3. '[a' → logprob: -14.375008583068848
    4. '```' → logprob: -16.875009536743164
    5. '[' → logprob: -17.875009536743164
    6. '==' → logprob: -18.000009536743164
    7. '(b' → logprob: -18.375009536743164
    8. '   ' → logprob: -18.625009536743164
    9. '	b' → logprob: -18.750009536743164
    10. '
' → logprob: -19.250009536743164

Token 840: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2507206201553345
    2. ' ==' → logprob: -2.125720500946045
    3. ']==' → logprob: -2.875720500946045
    4. '==' → logprob: -3.250720500946045
    5. ' <=' → logprob: -5.375720500946045
    6. ')' → logprob: -7.250720500946045
    7. '<=' → logprob: -7.875720500946045
    8. ' ]' → logprob: -8.125720977783203
    9. '```' → logprob: -8.375720977783203
    10. '>' → logprob: -8.625720977783203

Token 841: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5874019265174866
    2. ' <=' → logprob: -1.0874018669128418
    3. '==' → logprob: -2.462401866912842
    4. '<=' → logprob: -3.837401866912842
    5. ' <' → logprob: -9.58740234375
    6. ' >=' → logprob: -9.58740234375
    7. ' ' → logprob: -10.08740234375
    8. ')' → logprob: -10.33740234375
    9. ')<=' → logprob: -10.46240234375
    10. ')==' → logprob: -10.71240234375

Token 842: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00015002528380136937
    2. 'dist' → logprob: -9.375149726867676
    3. ' d' → logprob: -9.875149726867676
    4. 'self' → logprob: -12.000149726867676
    5. '   ' → logprob: -12.750149726867676
    6. '       ' → logprob: -13.125149726867676
    7. '           ' → logprob: -14.000149726867676
    8. ' dist' → logprob: -14.125149726867676
    9. '    ' → logprob: -15.375149726867676
    10. '	d' → logprob: -15.375149726867676

Token 843: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2724652588367462
    2. ' if' → logprob: -2.022465229034424
    3. '           ' → logprob: -3.147465229034424
    4. '
' → logprob: -4.022465229034424
    5. ' and' → logprob: -4.647465229034424
    6. ':' → logprob: -5.147465229034424
    7. '   ' → logprob: -5.147465229034424
    8. 'if' → logprob: -5.397465229034424
    9. ':
' → logprob: -5.522465229034424
    10. ',' → logprob: -6.147465229034424

Token 844: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0160243958234787
    2. ' if' → logprob: -4.766024589538574
    3. '           ' → logprob: -5.891024589538574
    4. '<|end|>' → logprob: -5.891024589538574
    5. '\' → logprob: -7.766024589538574
    6. 'if' → logprob: -8.141024589538574
    7. '   ' → logprob: -8.391024589538574
    8. '\n' → logprob: -8.891024589538574
    9. ' \' → logprob: -9.141024589538574
    10. '```' → logprob: -9.266024589538574

Token 845: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17958484590053558
    2. ' if' → logprob: -1.9295848608016968
    3. '       ' → logprob: -4.429584980010986
    4. '           ' → logprob: -4.929584980010986
    5. '   ' → logprob: -10.804584503173828
    6. '	if' → logprob: -13.429584503173828
    7. '```' → logprob: -13.429584503173828
    8. ' ' → logprob: -14.179584503173828
    9. 'If' → logprob: -14.804584503173828
    10. ' ' → logprob: -14.804584503173828

Token 846: ' Because' (ID: 13602)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009574044495821
    2. 'used' → logprob: -5.259573936462402
    3. ' if' → logprob: -6.009573936462402
    4. '           ' → logprob: -6.384573936462402
    5. '       ' → logprob: -9.134573936462402
    6. '   ' → logprob: -10.384573936462402
    7. ' used' → logprob: -10.509573936462402
    8. 'use' → logprob: -11.509573936462402
    9. 'usage' → logprob: -12.259573936462402
    10. '```' → logprob: -13.634573936462402

Token 847: ' edge' (ID: 11165)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03384348377585411
    2. ' dist' → logprob: -3.408843517303467
    3. '(dist' → logprob: -9.033843040466309
    4. 'self' → logprob: -9.908843040466309
    5. '   ' → logprob: -12.033843040466309
    6. ' (' → logprob: -12.158843040466309
    7. ' self' → logprob: -12.408843040466309
    8. 'abs' → logprob: -12.658843040466309
    9. '       ' → logprob: -12.908843040466309
    10. '(' → logprob: -13.158843040466309

Token 848: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1769038438796997
    2. 'i' → logprob: -1.8019038438796997
    3. ' a' → logprob: -2.05190372467041
    4. ' (' → logprob: -2.05190372467041
    5. 's' → logprob: -2.42690372467041
    6. ' i' → logprob: -2.67690372467041
    7. ' is' → logprob: -3.42690372467041
    8. '(a' → logprob: -4.42690372467041
    9. '=' → logprob: -4.80190372467041
    10. ' ' → logprob: -4.92690372467041

Token 849: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6065717339515686
    2. 's' → logprob: -1.4815716743469238
    3. 'is' → logprob: -2.231571674346924
    4. ' was' → logprob: -3.856571674346924
    5. ' in' → logprob: -3.981571674346924
    6. '==' → logprob: -4.356571674346924
    7. ''s' → logprob: -4.356571674346924
    8. ')' → logprob: -4.981571674346924
    9. '.' → logprob: -4.981571674346924
    10. ' ==' → logprob: -4.981571674346924

Token 850: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12897390127182007
    2. 'a' → logprob: -2.628973960876465
    3. ' (' → logprob: -3.378973960876465
    4. 'used' → logprob: -6.128973960876465
    5. 'from' → logprob: -6.253973960876465
    6. ' a' → logprob: -6.253973960876465
    7. '(u' → logprob: -6.378973960876465
    8. 'not' → logprob: -7.128973960876465
    9. 'an' → logprob: -7.253973960876465
    10. 'b' → logprob: -7.628973960876465

Token 851: '->' (ID: 609)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.1390855312347412
    2. 'b' → logprob: -1.6390855312347412
    3. 'n' → logprob: -2.014085531234741
    4. '->' → logprob: -2.139085531234741
    5. 'direct' → logprob: -2.639085531234741
    6. ' (' → logprob: -3.264085531234741
    7. ' ->' → logprob: -4.13908576965332
    8. ' directed' → logprob: -4.26408576965332
    9. ' part' → logprob: -4.88908576965332
    10. 'a' → logprob: -5.01408576965332

Token 852: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2113979209971149e-05
    2. ' b' → logprob: -11.375012397766113
    3. ')b' → logprob: -15.125012397766113
    4. '```' → logprob: -16.125011444091797
    5. '	b' → logprob: -16.750011444091797
    6. '>b' → logprob: -17.000011444091797
    7. '(b' → logprob: -17.750011444091797
    8. ',' → logprob: -17.750011444091797
    9. ',b' → logprob: -17.875011444091797
    10. '   ' → logprob: -18.125011444091797

Token 853: ' with' (ID: 483)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8116681575775146
    2. '       ' → logprob: -0.9366681575775146
    3. 'if' → logprob: -2.1866681575775146
    4. '           ' → logprob: -3.1866681575775146
    5. ',' → logprob: -5.561668395996094
    6. ' and' → logprob: -5.936668395996094
    7. '
' → logprob: -6.436668395996094
    8. '   ' → logprob: -7.936668395996094
    9. '<|end|>' → logprob: -7.936668395996094
    10. 'and' → logprob: -8.061668395996094

Token 854: ' length' (ID: 5517)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2266438752412796
    2. 'weight' → logprob: -1.8516439199447632
    3. ' c' → logprob: -4.226644039154053
    4. 'a' → logprob: -4.976644039154053
    5. ' weight' → logprob: -5.351644039154053
    6. 'w' → logprob: -5.601644039154053
    7. ' a' → logprob: -5.976644039154053
    8. 'b' → logprob: -6.476644039154053
    9. 'cost' → logprob: -6.476644039154053
    10. 'the' → logprob: -6.601644039154053

Token 855: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47411835193634033
    2. ' c' → logprob: -0.9741183519363403
    3. ' =' → logprob: -11.59911823272705
    4. '=' → logprob: -11.84911823272705
    5. ' ' → logprob: -11.97411823272705
    6. '           ' → logprob: -12.09911823272705
    7. '            ' → logprob: -12.59911823272705
    8. ' ' → logprob: -13.09911823272705
    9. '               ' → logprob: -13.72411823272705
    10. ',' → logprob: -13.72411823272705

Token 856: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6788057684898376
    2. ' if' → logprob: -1.0538058280944824
    3. 'if' → logprob: -2.0538058280944824
    4. '       ' → logprob: -4.303805828094482
    5. '
' → logprob: -6.678805828094482
    6. ',' → logprob: -7.428805828094482
    7. '   ' → logprob: -8.428805351257324
    8. '<|end|>' → logprob: -9.428805351257324
    9. '            
' → logprob: -9.803805351257324
    10. ';if' → logprob: -10.803805351257324

Token 857: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3649103343486786
    2. ' if' → logprob: -1.364910364151001
    3. '           ' → logprob: -2.989910364151001
    4. '       ' → logprob: -11.864910125732422
    5. '   ' → logprob: -11.989910125732422
    6. 'used' → logprob: -12.364910125732422
    7. ' used' → logprob: -12.489910125732422
    8. '		' → logprob: -12.614910125732422
    9. ' ' → logprob: -12.614910125732422
    10. '	if' → logprob: -12.864910125732422

Token 858: ' it' (ID: 480)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004652742296457291
    2. 'self' → logprob: -5.879652976989746
    3. ' dist' → logprob: -6.379652976989746
    4. '(dist' → logprob: -9.004652976989746
    5. ' self' → logprob: -11.379652976989746
    6. '   ' → logprob: -12.379652976989746
    7. '(self' → logprob: -12.504652976989746
    8. 'abs' → logprob: -13.129652976989746
    9. '       ' → logprob: -13.504652976989746
    10. '(' → logprob: -14.004652976989746

Token 859: ' lies' (ID: 24384)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.4555250406265259
    2. 'used' → logprob: -1.4555250406265259
    3. 's' → logprob: -1.8305250406265259
    4. 'dist' → logprob: -2.0805249214172363
    5. ' used' → logprob: -2.3305249214172363
    6. ' is' → logprob: -2.7055249214172363
    7. ' in' → logprob: -4.455524921417236
    8. 'in' → logprob: -4.455524921417236
    9. ' was' → logprob: -4.580524921417236
    10. '==' → logprob: -4.705524921417236

Token 860: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.14090509712696075
    2. ' on' → logprob: -2.1409051418304443
    3. 'in' → logprob: -4.640904903411865
    4. ' in' → logprob: -6.015904903411865
    5. '==' → logprob: -7.140904903411865
    6. '   ' → logprob: -8.765905380249023
    7. '           ' → logprob: -9.265905380249023
    8. '_on' → logprob: -9.390905380249023
    9. ' exactly' → logprob: -9.390905380249023
    10. 'exact' → logprob: -9.640905380249023

Token 861: ' the' (ID: 290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0243549682199955
    2. ' dist' → logprob: -3.899354934692383
    3. 'self' → logprob: -6.149354934692383
    4. 'the' → logprob: -7.274354934692383
    5. 'd' → logprob: -7.399354934692383
    6. ' the' → logprob: -9.274354934692383
    7. '   ' → logprob: -10.149354934692383
    8. 'a' → logprob: -10.274354934692383
    9. '(dist' → logprob: -10.274354934692383
    10. ' self' → logprob: -10.399354934692383

Token 862: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5555257797241211
    2. 'short' → logprob: -1.555525779724121
    3. ' shortest' → logprob: -1.930525779724121
    4. 'd' → logprob: -3.180525779724121
    5. 'original' → logprob: -3.805525779724121
    6. ' dist' → logprob: -6.805525779724121
    7. ' original' → logprob: -7.430525779724121
    8. 'Shortest' → logprob: -7.430525779724121
    9. '   ' → logprob: -7.555525779724121
    10. 'a' → logprob: -7.805525779724121

Token 863: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.07932121306657791
    2. 'path' → logprob: -2.5793211460113525
    3. ' path' → logprob: -7.829321384429932
    4. '   ' → logprob: -11.079320907592773
    5. 'Path' → logprob: -12.579320907592773
    6. '```' → logprob: -12.829320907592773
    7. '           ' → logprob: -13.204320907592773
    8. '"path' → logprob: -13.454320907592773
    9. '_' → logprob: -13.579320907592773
    10. '_paths' → logprob: -13.579320907592773

Token 864: ',
' (ID: 412)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9148469567298889
    2. 'and' → logprob: -0.9148469567298889
    3. ',' → logprob: -1.7898468971252441
    4. ':' → logprob: -4.289846897125244
    5. '           ' → logprob: -4.539846897125244
    6. 'if' → logprob: -5.789846897125244
    7. ':
' → logprob: -6.289846897125244
    8. ' if' → logprob: -6.664846897125244
    9. ')' → logprob: -8.289847373962402
    10. '               ' → logprob: -8.664847373962402

Token 865: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8919898271560669
    2. '           ' → logprob: -1.266989827156067
    3. 'if' → logprob: -1.891989827156067
    4. 'dist' → logprob: -2.2669897079467773
    5. ' dist' → logprob: -3.0169897079467773
    6. '               ' → logprob: -5.516989707946777
    7. '            ' → logprob: -7.766989707946777
    8. '(dist' → logprob: -9.266989707946777
    9. ')' → logprob: -9.391989707946777
    10. '```' → logprob: -9.516989707946777

Token 866: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02528318390250206
    2. ' dist' → logprob: -3.900283098220825
    3. 'self' → logprob: -5.525283336639404
    4. '           ' → logprob: -8.025282859802246
    5. 'abs' → logprob: -9.275282859802246
    6. ' self' → logprob: -9.525282859802246
    7. '(dist' → logprob: -9.525282859802246
    8. '               ' → logprob: -9.525282859802246
    9. '       ' → logprob: -10.275282859802246
    10. '            ' → logprob: -10.900282859802246

Token 867: ' the' (ID: 290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.037858422845602036
    2. ' dist' → logprob: -3.537858486175537
    3. 'if' → logprob: -4.912858486175537
    4. ' if' → logprob: -7.912858486175537
    5. '           ' → logprob: -8.037858009338379
    6. 'self' → logprob: -11.287858009338379
    7. '(dist' → logprob: -11.287858009338379
    8. '               ' → logprob: -12.662858009338379
    9. '            ' → logprob: -13.162858009338379
    10. 'abs' → logprob: -13.287858009338379

Token 868: ' path' (ID: 3104)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007202766370028257
    2. ' dist' → logprob: -5.382202625274658
    3. 'if' → logprob: -6.507202625274658
    4. 'self' → logprob: -7.007202625274658
    5. '(dist' → logprob: -10.132203102111816
    6. 'abs' → logprob: -10.382203102111816
    7. ' if' → logprob: -10.757203102111816
    8. '       ' → logprob: -10.882203102111816
    9. '   ' → logprob: -11.132203102111816
    10. '           ' → logprob: -11.507203102111816

Token 869: ' passing' (ID: 21178)
  Prédit: 'uses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.9956557154655457
    2. 'from' → logprob: -1.2456557750701904
    3. 'passes' → logprob: -2.4956557750701904
    4. ' passes' → logprob: -2.9956557750701904
    5. 'includes' → logprob: -3.1206557750701904
    6. 'is' → logprob: -3.9956557750701904
    7. 'must' → logprob: -4.245655536651611
    8. '           ' → logprob: -4.245655536651611
    9. ' uses' → logprob: -4.370655536651611
    10. '       ' → logprob: -4.870655536651611

Token 870: ' through' (ID: 1819)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.2205170840024948
    2. 'dist' → logprob: -2.095517158508301
    3. ' through' → logprob: -2.845517158508301
    4. 'a' → logprob: -4.220517158508301
    5. ' dist' → logprob: -7.345517158508301
    6. 'self' → logprob: -7.595517158508301
    7. '           ' → logprob: -8.4705171585083
    8. '       ' → logprob: -9.3455171585083
    9. '   ' → logprob: -9.3455171585083
    10. '(a' → logprob: -9.4705171585083

Token 871: ' edge' (ID: 11165)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008624859154224396
    2. ' a' → logprob: -4.758625030517578
    3. ''a' → logprob: -12.758625030517578
    4. '"a' → logprob: -13.508625030517578
    5. '`' → logprob: -14.008625030517578
    6. '   ' → logprob: -14.133625030517578
    7. ''' → logprob: -14.133625030517578
    8. '(a' → logprob: -14.258625030517578
    9. '[a' → logprob: -14.258625030517578
    10. '"' → logprob: -14.633625030517578

Token 872: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15132509171962738
    2. ' a' → logprob: -2.401324987411499
    3. 'i' → logprob: -3.151324987411499
    4. ' i' → logprob: -5.151325225830078
    5. '`' → logprob: -7.776325225830078
    6. '[i' → logprob: -9.401325225830078
    7. ''s' → logprob: -9.526325225830078
    8. '[a' → logprob: -9.526325225830078
    9. ''' → logprob: -9.776325225830078
    10. '   ' → logprob: -9.776325225830078

Token 873: ' will' (ID: 738)
  Prédit: ' passes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passes' → logprob: -1.0476371049880981
    2. '           ' → logprob: -2.1726369857788086
    3. 'must' → logprob: -2.4226369857788086
    4. ' must' → logprob: -2.5476369857788086
    5. 'a' → logprob: -3.0476369857788086
    6. 'passes' → logprob: -3.1726369857788086
    7. 'should' → logprob: -3.2976369857788086
    8. 'if' → logprob: -3.5476369857788086
    9. 'uses' → logprob: -3.6726369857788086
    10. '#' → logprob: -3.7976369857788086

Token 874: ' have' (ID: 679)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6124395132064819
    2. ' be' → logprob: -1.487439513206482
    3. 'equal' → logprob: -1.862439513206482
    4. ' equal' → logprob: -3.6124396324157715
    5. 'have' → logprob: -4.4874396324157715
    6. 's' → logprob: -4.6124396324157715
    7. '==' → logprob: -5.3624396324157715
    8. 'pass' → logprob: -5.3624396324157715
    9. 'dist' → logprob: -5.6124396324157715
    10. ' have' → logprob: -5.7374396324157715

Token 875: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01435517705976963
    2. ' dist' → logprob: -4.889355182647705
    3. 'self' → logprob: -5.014355182647705
    4. ' self' → logprob: -9.764354705810547
    5. '(dist' → logprob: -11.264354705810547
    6. '   ' → logprob: -12.639354705810547
    7. 'd' → logprob: -12.764354705810547
    8. '(self' → logprob: -13.139354705810547
    9. '```' → logprob: -13.639354705810547
    10. '_dist' → logprob: -14.264354705810547

Token 876: ':
' (ID: 734)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17365522682666779
    2. ' dist' → logprob: -2.0486552715301514
    3. '==' → logprob: -3.7986552715301514
    4. ' ==' → logprob: -5.048655033111572
    5. '=' → logprob: -7.298655033111572
    6. '(dist' → logprob: -8.17365550994873
    7. '           ' → logprob: -8.42365550994873
    8. ' =' → logprob: -9.04865550994873
    9. 'if' → logprob: -9.17365550994873
    10. 'self' → logprob: -9.54865550994873

Token 877: '           ' (ID: 352)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5508739352226257
    2. 'if' → logprob: -2.1758739948272705
    3. ' dist' → logprob: -2.1758739948272705
    4. ' if' → logprob: -2.1758739948272705
    5. '           ' → logprob: -2.5508739948272705
    6. '       ' → logprob: -6.550873756408691
    7. '(dist' → logprob: -6.800873756408691
    8. '               ' → logprob: -6.925873756408691
    9. 'self' → logprob: -8.050873756408691
    10. '```' → logprob: -8.550873756408691

Token 878: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.35397541522979736
    2. ' dist' → logprob: -1.2289754152297974
    3. 'if' → logprob: -5.978975296020508
    4. '"' → logprob: -7.228975296020508
    5. ' if' → logprob: -7.228975296020508
    6. 'self' → logprob: -7.853975296020508
    7. '           ' → logprob: -7.978975296020508
    8. ''' → logprob: -8.728975296020508
    9. 'd' → logprob: -8.978975296020508
    10. '               ' → logprob: -9.353975296020508

Token 879: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1148298904299736
    2. ' dist' → logprob: -2.2398297786712646
    3. 'self' → logprob: -6.364830017089844
    4. ' self' → logprob: -8.864830017089844
    5. '"' → logprob: -10.239830017089844
    6. 'd' → logprob: -10.489830017089844
    7. '(dist' → logprob: -10.864830017089844
    8. 'f' → logprob: -11.739830017089844
    9. '           ' → logprob: -11.864830017089844
    10. '`' → logprob: -11.864830017089844

Token 880: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -2.129266067640856e-05
    2. 'from' → logprob: -10.875020980834961
    3. '_for' → logprob: -13.875020980834961
    4. '_to' → logprob: -15.750020980834961
    5. ')_' → logprob: -16.00002098083496
    6. '_FROM' → logprob: -16.00002098083496
    7. '[_' → logprob: -16.12502098083496
    8. '_form' → logprob: -16.25002098083496
    9. '```' → logprob: -16.37502098083496
    10. '   ' → logprob: -16.50002098083496

Token 881: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0011711753904819489
    2. 'start' → logprob: -6.751171112060547
    3. '```' → logprob: -14.251171112060547
    4. 'sys' → logprob: -16.126171112060547
    5. '_sys' → logprob: -16.751171112060547
    6. '[start' → logprob: -17.001171112060547
    7. 'a' → logprob: -17.251171112060547
    8. 'Start' → logprob: -17.501171112060547
    9. ' start' → logprob: -17.751171112060547
    10. '_START' → logprob: -17.751171112060547

Token 882: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.5776860184123507e-06
    2. 'a' → logprob: -13.00000286102295
    3. '```' → logprob: -15.62500286102295
    4. '   ' → logprob: -17.250001907348633
    5. '(a' → logprob: -18.625001907348633
    6. ' [' → logprob: -18.750001907348633
    7. '[' → logprob: -18.750001907348633
    8. '\[' → logprob: -18.875001907348633
    9. '[
' → logprob: -19.500001907348633
    10. '[u' → logprob: -19.500001907348633

Token 883: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009625543025322258
    2. ']+' → logprob: -7.000962734222412
    3. ' ]' → logprob: -10.000962257385254
    4. ']
' → logprob: -13.125962257385254
    5. '+' → logprob: -13.625962257385254
    6. ')' → logprob: -14.250962257385254
    7. '[' → logprob: -14.625962257385254
    8. '']' → logprob: -14.875962257385254
    9. ' +' → logprob: -15.375962257385254
    10. '+]' → logprob: -15.375962257385254

Token 884: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07907385379076004
    2. '+' → logprob: -2.579073905944824
    3. ')' → logprob: -9.454073905944824
    4. '+c' → logprob: -10.579073905944824
    5. ')+' → logprob: -10.829073905944824
    6. ']' → logprob: -10.954073905944824
    7. ']+' → logprob: -11.329073905944824
    8. '```' → logprob: -11.704073905944824
    9. '           ' → logprob: -12.204073905944824
    10. '[' → logprob: -12.579073905944824

Token 885: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009756559506058693
    2. ' c' → logprob: -4.634756565093994
    3. '```' → logprob: -15.259756088256836
    4. ' ' → logprob: -16.259756088256836
    5. '   ' → logprob: -16.384756088256836
    6. ' ' → logprob: -16.634756088256836
    7. '`' → logprob: -17.259756088256836
    8. '	c' → logprob: -17.634756088256836
    9. '
' → logprob: -17.884756088256836
    10. '_c' → logprob: -18.134756088256836

Token 886: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38689517974853516
    2. '+' → logprob: -1.1368951797485352
    3. '<|end|>' → logprob: -11.261895179748535
    4. ')' → logprob: -11.886895179748535
    5. '[' → logprob: -14.136895179748535
    6. '+b' → logprob: -14.386895179748535
    7. '```' → logprob: -14.386895179748535
    8. ' ' → logprob: -15.011895179748535
    9. ' ' → logprob: -15.136895179748535
    10. '=' → logprob: -15.261895179748535

Token 887: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009114635176956654
    2. ' dist' → logprob: -7.000911235809326
    3. '(dist' → logprob: -18.125911712646484
    4. '	dist' → logprob: -18.125911712646484
    5. 'self' → logprob: -18.500911712646484
    6. '_dist' → logprob: -18.875911712646484
    7. '.dist' → logprob: -19.000911712646484
    8. '   ' → logprob: -19.250911712646484
    9. '```' → logprob: -20.000911712646484
    10. '
' → logprob: -20.125911712646484

Token 888: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.320199877838604e-07
    2. 'to' → logprob: -15.625
    3. '   ' → logprob: -16.875
    4. '_from' → logprob: -17.0
    5. '\' → logprob: -18.25
    6. '_on' → logprob: -18.375
    7. '```' → logprob: -18.375
    8. '_of' → logprob: -18.75
    9. 'o' → logprob: -18.875
    10. '``' → logprob: -19.125

Token 889: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.474078893661499
    2. 'end' → logprob: -0.974078893661499
    3. '_to' → logprob: -13.974079132080078
    4. '_start' → logprob: -15.099079132080078
    5. 'End' → logprob: -15.474079132080078
    6. '-end' → logprob: -15.974079132080078
    7. 'END' → logprob: -16.474079132080078
    8. ' end' → logprob: -16.474079132080078
    9. 'b' → logprob: -16.599079132080078
    10. '[end' → logprob: -17.099079132080078

Token 890: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.5491004129871726e-05
    2. 'b' → logprob: -10.000045776367188
    3. '```' → logprob: -17.375045776367188
    4. '(b' → logprob: -18.500045776367188
    5. '[' → logprob: -18.750045776367188
    6. '	b' → logprob: -18.875045776367188
    7. '[a' → logprob: -19.750045776367188
    8. '[c' → logprob: -19.875045776367188
    9. '[
' → logprob: -20.000045776367188
    10. ' [' → logprob: -20.125045776367188

Token 891: ']

' (ID: 3144)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8129042983055115
    2. ']' → logprob: -1.5629043579101562
    3. '==' → logprob: -1.5629043579101562
    4. ']==' → logprob: -2.1879043579101562
    5. ')' → logprob: -4.062904357910156
    6. ')==' → logprob: -5.062904357910156
    7. '           ' → logprob: -6.687904357910156
    8. ' ]' → logprob: -9.312904357910156
    9. '==
' → logprob: -9.687904357910156
    10. '}' → logprob: -9.687904357910156

Token 892: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25652483105659485
    2. '<|end|>' → logprob: -2.1315248012542725
    3. '       ' → logprob: -2.6315248012542725
    4. ' if' → logprob: -3.6315248012542725
    5. '<|end|>' → logprob: -5.881525039672852
    6. 'if' → logprob: -7.006525039672852
    7. '```' → logprob: -7.131525039672852
    8. ')' → logprob: -7.256525039672852
    9. '[' → logprob: -7.631525039672852
    10. ',' → logprob: -7.756525039672852

Token 893: ' use' (ID: 1199)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19151103496551514
    2. '           ' → logprob: -2.1915111541748047
    3. ' if' → logprob: -2.8165111541748047
    4. '       ' → logprob: -5.941511154174805
    5. '```' → logprob: -9.691511154174805
    6. '   ' → logprob: -10.941511154174805
    7. '	if' → logprob: -11.941511154174805
    8. 'elif' → logprob: -12.691511154174805
    9. '		' → logprob: -12.941511154174805
    10. ' ' → logprob: -13.691511154174805

Token 894: ' =' (ID: 314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05039365962147713
    2. '_' → logprob: -3.175393581390381
    3. '_from' → logprob: -5.425393581390381
    4. '_used' → logprob: -6.175393581390381
    5. ' =' → logprob: -8.300394058227539
    6. '=' → logprob: -9.175394058227539
    7. '_usage' → logprob: -9.300394058227539
    8. '_use' → logprob: -9.550394058227539
    9. 'ed' → logprob: -9.675394058227539
    10. 's' → logprob: -9.925394058227539

Token 895: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05107228830456734
    2. '(dist' → logprob: -3.176072359085083
    3. ' dist' → logprob: -4.926072120666504
    4. 'self' → logprob: -7.801072120666504
    5. ' (' → logprob: -8.801072120666504
    6. '(' → logprob: -9.301072120666504
    7. '(self' → logprob: -9.926072120666504
    8. 'abs' → logprob: -10.301072120666504
    9. '(abs' → logprob: -11.301072120666504
    10. ' self' → logprob: -12.176072120666504

Token 896: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001614365610294044
    2. 'self' → logprob: -6.501614570617676
    3. ' dist' → logprob: -9.626614570617676
    4. 'abs' → logprob: -10.626614570617676
    5. '(dist' → logprob: -11.626614570617676
    6. '       ' → logprob: -12.501614570617676
    7. '   ' → logprob: -13.001614570617676
    8. '           ' → logprob: -13.376614570617676
    9. '               ' → logprob: -14.376614570617676
    10. 'int' → logprob: -14.501614570617676

Token 897: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.7432603272027336e-06
    2. 'from' → logprob: -14.000001907348633
    3. '[a' → logprob: -14.875001907348633
    4. '[_' → logprob: -15.250001907348633
    5. '_for' → logprob: -16.500001907348633
    6. '_to' → logprob: -18.000001907348633
    7. '[from' → logprob: -18.000001907348633
    8. '_FROM' → logprob: -18.250001907348633
    9. ')_' → logprob: -18.375001907348633
    10. '_of' → logprob: -18.625001907348633

Token 898: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.9146995327901095e-05
    2. 'start' → logprob: -10.875019073486328
    3. 'from' → logprob: -16.875019073486328
    4. '_from' → logprob: -17.000019073486328
    5. '```' → logprob: -17.625019073486328
    6. '[start' → logprob: -18.625019073486328
    7. '_START' → logprob: -19.250019073486328
    8. 'a' → logprob: -19.625019073486328
    9. 'Start' → logprob: -19.875019073486328
    10. '``' → logprob: -21.000019073486328

Token 899: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -8.061054359131958e-06
    2. 'a' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.50000762939453
    4. '[' → logprob: -17.87500762939453
    5. '(a' → logprob: -18.25000762939453
    6. '[
' → logprob: -18.37500762939453
    7. ' [' → logprob: -18.50000762939453
    8. '```' → logprob: -19.00000762939453
    9. '
' → logprob: -19.12500762939453
    10. ')[' → logprob: -19.25000762939453

Token 900: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.26321902871131897
    2. '+' → logprob: -1.5132189989089966
    3. ']' → logprob: -4.763218879699707
    4. ']+' → logprob: -6.388218879699707
    5. ')' → logprob: -7.013218879699707
    6. '[' → logprob: -10.138218879699707
    7. ')+' → logprob: -10.388218879699707
    8. ' ]' → logprob: -11.888218879699707
    9. '+c' → logprob: -12.263218879699707
    10. '+]' → logprob: -12.388218879699707

Token 901: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4741380214691162
    2. '+' → logprob: -0.9741380214691162
    3. '+c' → logprob: -10.599138259887695
    4. ')' → logprob: -10.849138259887695
    5. ' !=' → logprob: -12.599138259887695
    6. '!=' → logprob: -12.599138259887695
    7. '<=' → logprob: -12.849138259887695
    8. ')+' → logprob: -13.099138259887695
    9. '+)' → logprob: -13.849138259887695
    10. ' <=' → logprob: -14.599138259887695

Token 902: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1269284337759018
    2. ' c' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.251928329467773
    4. '	c' → logprob: -16.501928329467773
    5. '   ' → logprob: -17.001928329467773
    6. ')c' → logprob: -17.126928329467773
    7. '```' → logprob: -18.376928329467773
    8. ' ' → logprob: -18.751928329467773
    9. '_c' → logprob: -18.876928329467773
    10. '+c' → logprob: -19.251928329467773

Token 903: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5889735817909241
    2. '+' → logprob: -0.9639735817909241
    3. ')' → logprob: -3.8389735221862793
    4. '==' → logprob: -4.088973522186279
    5. ' ==' → logprob: -4.213973522186279
    6. ' <=' → logprob: -4.963973522186279
    7. '<=' → logprob: -5.713973522186279
    8. ')==' → logprob: -8.588973999023438
    9. '<|end|>' → logprob: -9.588973999023438
    10. ')<=' → logprob: -9.838973999023438

Token 904: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0005532711511477828
    2. ' dist' → logprob: -7.500553131103516
    3. '(dist' → logprob: -16.375553131103516
    4. '	dist' → logprob: -17.000553131103516
    5. '   ' → logprob: -17.125553131103516
    6. '_dist' → logprob: -17.625553131103516
    7. '.dist' → logprob: -18.250553131103516
    8. '```' → logprob: -18.875553131103516
    9. 'Dist' → logprob: -19.750553131103516
    10. '-dist' → logprob: -19.875553131103516

Token 905: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.080963092041202e-06
    2. '_from' → logprob: -12.375004768371582
    3. 'to' → logprob: -14.875004768371582
    4. '```' → logprob: -16.2500057220459
    5. 'To' → logprob: -16.3750057220459
    6. '_end' → logprob: -16.5000057220459
    7. '_on' → logprob: -16.8750057220459
    8. '_out' → logprob: -16.8750057220459
    9. '``' → logprob: -17.0000057220459
    10. '   ' → logprob: -17.3750057220459

Token 906: '_end' (ID: 13707)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4740905463695526
    2. '_end' → logprob: -0.974090576171875
    3. 'nd' → logprob: -11.599090576171875
    4. 'End' → logprob: -12.849090576171875
    5. 'b' → logprob: -14.599090576171875
    6. 'END' → logprob: -15.474090576171875
    7. '-end' → logprob: -16.224090576171875
    8. '[end' → logprob: -16.349090576171875
    9. '(end' → logprob: -16.349090576171875
    10. '```' → logprob: -16.599090576171875

Token 907: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -6.704273118884885e-07
    2. 'b' → logprob: -14.250000953674316
    3. '   ' → logprob: -21.5
    4. '	b' → logprob: -21.625
    5. ' [' → logprob: -21.75
    6. '(b' → logprob: -21.75
    7. '[' → logprob: -22.125
    8. ')[' → logprob: -22.5
    9. '[
' → logprob: -22.75
    10. '```' → logprob: -22.75

Token 908: '])' (ID: 4636)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2842726707458496
    2. ')' → logprob: -1.7842726707458496
    3. ' ==' → logprob: -2.6592726707458496
    4. ')==' → logprob: -4.65927267074585
    5. ']==' → logprob: -10.409273147583008
    6. ']' → logprob: -12.159273147583008
    7. '==
' → logprob: -12.409273147583008
    8. ' )' → logprob: -12.659273147583008
    9. '   ' → logprob: -14.034273147583008
    10. '<=' → logprob: -14.409273147583008

Token 909: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0028234198689460754
    2. ' ==' → logprob: -5.877823352813721
    3. '<=' → logprob: -11.377823829650879
    4. '==
' → logprob: -12.502823829650879
    5. ')==' → logprob: -13.002823829650879
    6. '```' → logprob: -14.877823829650879
    7. ']==' → logprob: -15.252823829650879
    8. '=' → logprob: -15.752823829650879
    9. ')' → logprob: -15.877823829650879
    10. '===' → logprob: -16.877822875976562

Token 910: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03804401680827141
    2. ' d' → logprob: -3.288043975830078
    3. '   ' → logprob: -14.288043975830078
    4. '       ' → logprob: -14.663043975830078
    5. '	d' → logprob: -15.038043975830078
    6. '    ' → logprob: -15.288043975830078
    7. ' ' → logprob: -15.288043975830078
    8. 'dist' → logprob: -15.663043975830078
    9. '_d' → logprob: -16.413043975830078
    10. '2' → logprob: -16.413043975830078

Token 911: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20084993541240692
    2. '       ' → logprob: -1.9508498907089233
    3. '<|end|>' → logprob: -3.325850009918213
    4. ' if' → logprob: -6.325850009918213
    5. '           ' → logprob: -7.200850009918213
    6. '<|end|>' → logprob: -8.325849533081055
    7. '   ' → logprob: -8.450849533081055
    8. '\n' → logprob: -8.825849533081055
    9. '
' → logprob: -9.075849533081055
    10. 'if' → logprob: -9.325849533081055

Token 912: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033635508734732866
    2. '
' → logprob: -6.753363609313965
    3. ' if' → logprob: -7.378363609313965
    4. '```' → logprob: -7.878363609313965
    5. '<|end|>' → logprob: -8.003363609313965
    6. '           ' → logprob: -8.003363609313965
    7. '   ' → logprob: -9.128363609313965
    8. '	' → logprob: -9.378363609313965
    9. 'if' → logprob: -9.378363609313965
    10. '        
' → logprob: -9.753363609313965

Token 913: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.030614139512181282
    2. '           ' → logprob: -4.280614376068115
    3. ' if' → logprob: -4.530614376068115
    4. '       ' → logprob: -5.280614376068115
    5. '	if' → logprob: -8.155613899230957
    6. '   ' → logprob: -9.405613899230957
    7. '		' → logprob: -10.655613899230957
    8. '	' → logprob: -10.655613899230957
    9. '	       ' → logprob: -10.905613899230957
    10. '	   ' → logprob: -12.155613899230957

Token 914: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.31345897912979126
    2. ' use' → logprob: -1.3134589195251465
    3. ' not' → logprob: -8.813459396362305
    4. '   ' → logprob: -10.938459396362305
    5. 'not' → logprob: -11.438459396362305
    6. '           ' → logprob: -11.813459396362305
    7. '       ' → logprob: -12.313459396362305
    8. '	use' → logprob: -12.688459396362305
    9. '    ' → logprob: -13.313459396362305
    10. '(use' → logprob: -13.813459396362305

Token 915: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009972578845918179
    2. ':
' → logprob: -4.75997257232666
    3. ' :' → logprob: -6.75997257232666
    4. ':return' → logprob: -9.63497257232666
    5. ' :
' → logprob: -10.25997257232666
    6. ' and' → logprob: -10.63497257232666
    7. '           ' → logprob: -11.00997257232666
    8. '==' → logprob: -11.50997257232666
    9. '<|end|>' → logprob: -11.75997257232666
    10. ' ==' → logprob: -12.00997257232666

Token 916: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1469414234161377
    2. '           ' → logprob: -2.0219414234161377
    3. 'return' → logprob: -6.271941184997559
    4. ' return' → logprob: -6.521941184997559
    5. '	       ' → logprob: -7.646941184997559
    6. '	           ' → logprob: -8.896941184997559
    7. '		' → logprob: -9.771941184997559
    8. '		       ' → logprob: -9.896941184997559
    9. '			' → logprob: -10.396941184997559
    10. '       ' → logprob: -10.521941184997559

Token 917: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003029286628589034
    2. ' return' → logprob: -6.5030293464660645
    3. '               ' → logprob: -6.8780293464660645
    4. '           ' → logprob: -7.8780293464660645
    5. '                   ' → logprob: -9.253028869628906
    6. '"' → logprob: -12.003028869628906
    7. '   ' → logprob: -12.003028869628906
    8. '```' → logprob: -13.378028869628906
    9. ' ' → logprob: -13.753028869628906
    10. '#' (adapté à ' #') → logprob: -13.753028869628906

Token 918: ' Since' (ID: 12265)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.020945191383361816
    2. '               ' → logprob: -4.520945072174072
    3. ' return' → logprob: -5.020945072174072
    4. '           ' → logprob: -5.895945072174072
    5. 'if' → logprob: -8.39594554901123
    6. '#' → logprob: -8.89594554901123
    7. '                   ' → logprob: -9.27094554901123
    8. '   ' → logprob: -10.64594554901123
    9. '       ' → logprob: -12.27094554901123
    10. ' if' → logprob: -12.39594554901123

Token 919: ' reversal' (ID: 117109)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.22581227123737335
    2. ' cand' → logprob: -2.8508121967315674
    3. 'True' → logprob: -3.2258121967315674
    4. ' True' → logprob: -3.9758121967315674
    5. ' not' → logprob: -4.2258124351501465
    6. 'dist' → logprob: -4.2258124351501465
    7. 'use' → logprob: -4.2258124351501465
    8. 'not' → logprob: -4.4758124351501465
    9. 'c' → logprob: -5.3508124351501465
    10. 're' → logprob: -5.4758124351501465

Token 920: ' removes' (ID: 52683)
  Prédit: 'would'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'would' → logprob: -0.9357105493545532
    2. ' would' → logprob: -1.3107105493545532
    3. ' will' → logprob: -2.5607104301452637
    4. ' breaks' → logprob: -2.9357104301452637
    5. '               ' → logprob: -3.1857104301452637
    6. ' may' → logprob: -3.5607104301452637
    7. 'will' → logprob: -3.6857104301452637
    8. '           ' → logprob: -3.6857104301452637
    9. 'break' → logprob: -4.060710430145264
    10. ' of' → logprob: -4.560710430145264

Token 921: ' edge' (ID: 11165)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.8730788230895996
    2. 'the' → logprob: -1.4980788230895996
    3. ' this' → logprob: -2.1230788230895996
    4. '#' → logprob: -2.7480788230895996
    5. 'edge' → logprob: -2.7480788230895996
    6. ' the' → logprob: -3.2480788230895996
    7. 'that' → logprob: -3.3730788230895996
    8. ' that' → logprob: -3.8730788230895996
    9. ' edge' → logprob: -4.7480788230896
    10. 'original' → logprob: -5.3730788230896

Token 922: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8394978642463684
    2. ' (' → logprob: -1.0894978046417236
    3. ',' → logprob: -2.3394978046417236
    4. 'a' → logprob: -2.8394978046417236
    5. ' a' → logprob: -3.2144978046417236
    6. '(a' → logprob: -4.589498043060303
    7. ' from' → logprob: -5.339498043060303
    8. '                   ' → logprob: -5.464498043060303
    9. 'from' → logprob: -5.964498043060303
    10. '(i' → logprob: -5.964498043060303

Token 923: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11867375671863556
    2. '               ' → logprob: -2.243673801422119
    3. ' from' → logprob: -5.993673801422119
    4. 'from' → logprob: -6.368673801422119
    5. ' (' → logprob: -7.493673801422119
    6. ' and' → logprob: -7.743673801422119
    7. ',
' → logprob: -8.868673324584961
    8. ' ,' → logprob: -9.368673324584961
    9. 'and' → logprob: -9.743673324584961
    10. ' in' → logprob: -9.743673324584961

Token 924: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.5164912343025208
    2. 'the' → logprob: -1.391491174697876
    3. 'forward' → logprob: -2.391491174697876
    4. ' original' → logprob: -3.766491174697876
    5. ' forward' → logprob: -4.391491413116455
    6. ' the' → logprob: -5.016491413116455
    7. 'its' → logprob: -5.141491413116455
    8. 'adj' → logprob: -5.266491413116455
    9. 'graph' → logprob: -5.891491413116455
    10. 'direction' → logprob: -6.391491413116455

Token 925: ' direction' (ID: 9262)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.16030709445476532
    2. 'short' → logprob: -2.5353071689605713
    3. ' shortest' → logprob: -3.1603071689605713
    4. ' path' → logprob: -4.410306930541992
    5. 'graph' → logprob: -4.535306930541992
    6. 'direction' → logprob: -7.160306930541992
    7. 'form' → logprob: -7.410306930541992
    8. ' graph' → logprob: -7.535306930541992
    9. '#' → logprob: -8.160306930541992
    10. ''s' → logprob: -8.410306930541992

Token 926: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28368207812309265
    2. '               ' → logprob: -1.408682107925415
    3. ',
' → logprob: -6.283681869506836
    4. ' and' → logprob: -8.533681869506836
    5. '                   ' → logprob: -8.658681869506836
    6. ' ,' → logprob: -9.908681869506836
    7. ' (' → logprob: -10.033681869506836
    8. 'and' → logprob: -10.158681869506836
    9. 'return' → logprob: -10.783681869506836
    10. '           ' → logprob: -10.783681869506836

Token 927: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.062311939895153046
    2. 'return' → logprob: -3.062311887741089
    3. ' return' → logprob: -4.312312126159668
    4. '           ' → logprob: -8.812312126159668
    5. '                   ' → logprob: -9.937312126159668
    6. '   ' → logprob: -10.687312126159668
    7. '       ' → logprob: -12.187312126159668
    8. '              ' → logprob: -14.312312126159668
    9. ' ' → logprob: -14.437312126159668
    10. '	return' → logprob: -14.687312126159668

Token 928: ' alternative' (ID: 13319)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -1.2637635469436646
    2. 're' → logprob: -1.5137635469436646
    3. 'no' → logprob: -1.8887635469436646
    4. 'there' → logprob: -2.888763427734375
    5. 'not' → logprob: -3.138763427734375
    6. '#' → logprob: -3.138763427734375
    7. 'the' → logprob: -3.263763427734375
    8. 'cand' → logprob: -3.388763427734375
    9. 'dist' → logprob: -3.638763427734375
    10. 'self' → logprob: -4.138763427734375

Token 929: ' route' (ID: 9656)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.4762929379940033
    2. 'paths' → logprob: -1.2262929677963257
    3. ' path' → logprob: -3.601292848587036
    4. '_path' → logprob: -4.101293087005615
    5. 'routes' → logprob: -5.101293087005615
    6. ' paths' → logprob: -5.226293087005615
    7. 'edges' → logprob: -5.351293087005615
    8. 'dist' → logprob: -5.726293087005615
    9. 'exists' → logprob: -5.851293087005615
    10. 'route' → logprob: -6.101293087005615

Token 930: ' was' (ID: 673)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.9133307337760925
    2. '==' → logprob: -1.1633307933807373
    3. 'does' → logprob: -1.7883307933807373
    4. 's' → logprob: -2.9133307933807373
    5. ' is' → logprob: -3.9133307933807373
    6. 'exists' → logprob: -4.163330554962158
    7. '=' → logprob: -4.663330554962158
    8. 'may' → logprob: -5.288330554962158
    9. ' ==' → logprob: -5.413330554962158
    10. ' =' → logprob: -6.413330554962158

Token 931: ' longer' (ID: 7411)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.04801875352859497
    2. ' not' → logprob: -3.17301869392395
    3. 'False' → logprob: -5.548018932342529
    4. '               ' → logprob: -7.923018932342529
    5. '                   ' → logprob: -8.298018455505371
    6. ' False' → logprob: -8.673018455505371
    7. 'abs' → logprob: -9.298018455505371
    8. 'false' → logprob: -9.798018455505371
    9. '	not' → logprob: -10.048018455505371
    10. '           ' → logprob: -10.673018455505371

Token 932: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.49847131967544556
    2. '               ' → logprob: -1.4984712600708008
    3. '                   ' → logprob: -2.248471260070801
    4. 'or' → logprob: -3.373471260070801
    5. ',' → logprob: -3.623471260070801
    6. ':
' → logprob: -6.998471260070801
    7. ':' → logprob: -7.873471260070801
    8. '           ' → logprob: -8.1234712600708
    9. '                       ' → logprob: -8.4984712600708
    10. ',
' → logprob: -8.9984712600708

Token 933: ' none' (ID: 12698)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.6085240840911865
    2. 'no' → logprob: -1.6085240840911865
    3. 'none' → logprob: -2.2335240840911865
    4. 'in' → logprob: -2.7335240840911865
    5. 'abs' → logprob: -3.2335240840911865
    6. 'not' → logprob: -3.7335240840911865
    7. 'inf' → logprob: -4.608524322509766
    8. 'same' → logprob: -5.483524322509766
    9. '=' → logprob: -6.608524322509766
    10. 'non' → logprob: -7.233524322509766

Token 934: ',
' (ID: 412)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.31285253167152405
    2. ',' → logprob: -2.062852621078491
    3. '               ' → logprob: -2.187852621078491
    4. ':
' → logprob: -4.187852382659912
    5. ':' → logprob: -4.937852382659912
    6. ' or' → logprob: -5.312852382659912
    7. ',
' → logprob: -7.937852382659912
    8. 'return' → logprob: -8.06285285949707
    9. 'or' → logprob: -8.43785285949707
    10. '```' → logprob: -8.68785285949707

Token 935: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013560713268816471
    2. 'return' → logprob: -7.25135612487793
    3. ' return' → logprob: -7.87635612487793
    4. '                   ' → logprob: -8.25135612487793
    5. '           ' → logprob: -13.00135612487793
    6. '                       ' → logprob: -13.87635612487793
    7. '   ' → logprob: -14.00135612487793
    8. '                ' → logprob: -14.75135612487793
    9. '                
' → logprob: -14.87635612487793
    10. '       ' → logprob: -15.87635612487793

Token 936: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3573293089866638
    2. ' return' → logprob: -1.8573293685913086
    3. 'return' → logprob: -2.1073293685913086
    4. '                   ' → logprob: -3.8573293685913086
    5. '           ' → logprob: -6.857329368591309
    6. '   ' → logprob: -7.857329368591309
    7. '                ' → logprob: -9.732329368591309
    8. '                       ' → logprob: -9.732329368591309
    9. ' ' → logprob: -10.607329368591309
    10. ' ' → logprob: -10.607329368591309

Token 937: ' it's' (ID: 4275)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008100435137748718
    2. ' return' → logprob: -5.258100509643555
    3. '               ' → logprob: -6.008100509643555
    4. '                   ' → logprob: -8.008100509643555
    5. '           ' → logprob: -9.758100509643555
    6. '   ' → logprob: -11.758100509643555
    7. '	return' → logprob: -12.883100509643555
    8. '                       ' → logprob: -14.008100509643555
    9. '       ' → logprob: -14.133100509643555
    10. '                ' → logprob: -15.008100509643555

Token 938: ' SAD' (ID: 129323)
  Prédit: '"S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"S' → logprob: -0.48821577429771423
    2. '"' → logprob: -0.9882158041000366
    3. ' "' → logprob: -4.488215923309326
    4. '   ' → logprob: -7.363215923309326
    5. '           ' → logprob: -7.488215923309326
    6. '       ' → logprob: -8.113215446472168
    7. ''S' → logprob: -8.488215446472168
    8. 'return' → logprob: -8.613215446472168
    9. '               ' → logprob: -8.613215446472168
    10. '"s' → logprob: -8.863215446472168

Token 939: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004128622822463512
    2. '           ' → logprob: -6.879128456115723
    3. 'return' → logprob: -7.004128456115723
    4. '                
' → logprob: -7.379128456115723
    5. '
' → logprob: -7.504128456115723
    6. '                   ' → logprob: -7.754128456115723
    7. ' return' → logprob: -8.629128456115723
    8. '                ' → logprob: -9.629128456115723
    9. '              ' → logprob: -10.004128456115723
    10. '\n' → logprob: -10.379128456115723

Token 940: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00034630970912985504
    2. '           ' → logprob: -9.500346183776855
    3. 'return' → logprob: -9.750346183776855
    4. '                
' → logprob: -9.875346183776855
    5. '
' → logprob: -10.000346183776855
    6. '                   ' → logprob: -10.250346183776855
    7. ' return' → logprob: -10.500346183776855
    8. '```' → logprob: -10.750346183776855
    9. '<|end|>' → logprob: -11.625346183776855
    10. '			' → logprob: -12.250346183776855

Token 941: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04086977615952492
    2. ' return' → logprob: -3.29086971282959
    3. '               ' → logprob: -6.04086971282959
    4. '           ' → logprob: -7.79086971282959
    5. '	return' → logprob: -10.91586971282959
    6. '                   ' → logprob: -11.54086971282959
    7. '   ' → logprob: -13.54086971282959
    8. '```' → logprob: -13.91586971282959
    9. ':return' → logprob: -15.04086971282959
    10. '{return' → logprob: -15.66586971282959

Token 942: ' "' (ID: 392)
  Prédit: '"S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"S' → logprob: -0.001564853941090405
    2. '"' → logprob: -6.501564979553223
    3. ' "' → logprob: -10.126564979553223
    4. ''S' → logprob: -11.126564979553223
    5. '"H' → logprob: -12.251564979553223
    6. '   ' → logprob: -13.751564979553223
    7. '       ' → logprob: -14.251564979553223
    8. '"s' → logprob: -14.376564979553223
    9. '           ' → logprob: -15.501564979553223
    10. '     ' → logprob: -16.126564025878906

Token 943: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.062395378947257996
    2. '"S' → logprob: -2.8123953342437744
    3. ''S' → logprob: -7.8123955726623535
    4. ' SAD' → logprob: -11.187395095825195
    5. '"' → logprob: -12.562395095825195
    6. 'Sad' → logprob: -12.687395095825195
    7. '“S' → logprob: -14.437395095825195
    8. '>S' → logprob: -14.812395095825195
    9. '\S' → logprob: -15.062395095825195
    10. 'sad' → logprob: -16.187395095825195

Token 944: 'AD' (ID: 2416)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003617885522544384
    2. 'AD' → logprob: -5.628617763519287
    3. '   ' → logprob: -12.378618240356445
    4. '	A' → logprob: -13.128618240356445
    5. 'ADO' → logprob: -13.378618240356445
    6. ' A' → logprob: -13.378618240356445
    7. 'АД' → logprob: -13.628618240356445
    8. 'ADB' → logprob: -13.753618240356445
    9. '\' → logprob: -14.003618240356445
    10. 'Ａ' → logprob: -14.128618240356445

Token 945: '"
' (ID: 1092)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8440828323364258
    2. '       ' → logprob: -1.0940828323364258
    3. '<|end|>' → logprob: -1.7190828323364258
    4. ')' → logprob: -3.969082832336426
    5. '")' → logprob: -4.219082832336426
    6. '"' → logprob: -4.969082832336426
    7. '
' → logprob: -5.219082832336426
    8. '}' → logprob: -5.969082832336426
    9. '<|end|>' → logprob: -6.219082832336426
    10. '```' → logprob: -6.969082832336426

Token 946: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04774852097034454
    2. '	' → logprob: -3.672748565673828
    3. '           ' → logprob: -5.047748565673828
    4. 'else' → logprob: -5.047748565673828
    5. '<|end|>' → logprob: -5.922748565673828
    6. '		' → logprob: -6.297748565673828
    7. '	       ' → logprob: -7.172748565673828
    8. '        
' → logprob: -7.672748565673828
    9. ' else' → logprob: -8.172748565673828
    10. '```' → logprob: -8.547748565673828

Token 947: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1319514364004135
    2. 'else' (adapté à ' else') → logprob: -2.131951332092285
    3. ' else' → logprob: -5.756951332092285
    4. '           ' → logprob: -6.756951332092285
    5. 'return' → logprob: -8.381951332092285
    6. '	' → logprob: -8.506951332092285
    7. '	else' → logprob: -9.506951332092285
    8. '	       ' → logprob: -9.631951332092285
    9. '
' → logprob: -10.256951332092285
    10. '```' → logprob: -11.381951332092285

Token 948: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5804904103279114
    2. '               ' → logprob: -0.8304904103279114
    3. 'return' → logprob: -6.580490589141846
    4. ':
' → logprob: -6.955490589141846
    5. ' return' → logprob: -7.330490589141846
    6. ':' → logprob: -7.455490589141846
    7. '	       ' → logprob: -7.705490589141846
    8. '	           ' → logprob: -9.205490112304688
    9. ':return' → logprob: -9.205490112304688
    10. '       ' → logprob: -9.330490112304688

Token 949: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001559854601509869
    2. ' return' → logprob: -7.001559734344482
    3. 'return' → logprob: -7.501559734344482
    4. '               ' → logprob: -9.37656021118164
    5. '       ' → logprob: -11.87656021118164
    6. '   ' → logprob: -13.00156021118164
    7. '		' → logprob: -14.62656021118164
    8. '	       ' → logprob: -14.87656021118164
    9. '          ' → logprob: -14.87656021118164
    10. ' ' → logprob: -15.25156021118164

Token 950: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011058438569307327
    2. ' return' → logprob: -4.511058330535889
    3. '           ' → logprob: -11.761058807373047
    4. '               ' → logprob: -13.636058807373047
    5. '   ' → logprob: -14.136058807373047
    6. '       ' → logprob: -14.636058807373047
    7. '                   ' → logprob: -15.636058807373047
    8. '```' → logprob: -15.636058807373047
    9. '	return' → logprob: -15.886058807373047
    10. ' ' → logprob: -17.761058807373047

Token 951: ' edge' (ID: 11165)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008670237846672535
    2. ' return' → logprob: -4.758670330047607
    3. '           ' → logprob: -9.88366985321045
    4. '   ' → logprob: -12.88366985321045
    5. '               ' → logprob: -13.88366985321045
    6. '       ' → logprob: -14.50866985321045
    7. '                   ' → logprob: -15.25866985321045
    8. '
' → logprob: -15.50866985321045
    9. '	return' → logprob: -15.50866985321045
    10. '  ' → logprob: -17.508670806884766

Token 952: ' i' (ID: 575)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2195185273885727
    2. ' i' → logprob: -2.4695184230804443
    3. ' not' → logprob: -3.0945184230804443
    4. 'i' → logprob: -4.094518661499023
    5. ' can' → logprob: -4.469518661499023
    6. ' =' → logprob: -5.469518661499023
    7. ' does' → logprob: -5.594518661499023
    8. 's' → logprob: -5.719518661499023
    9. '           ' → logprob: -5.844518661499023
    10. ')' → logprob: -5.844518661499023

Token 953: ' not' (ID: 625)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8327082991600037
    2. ' not' → logprob: -1.0827083587646484
    3. ' can' → logprob: -2.5827083587646484
    4. 'not' → logprob: -3.0827083587646484
    5. 'is' → logprob: -3.4577083587646484
    6. ')' → logprob: -3.5827083587646484
    7. 'can' → logprob: -4.707708358764648
    8. ' was' → logprob: -5.457708358764648
    9. ' may' → logprob: -5.582708358764648
    10. 's' → logprob: -5.957708358764648

Token 954: ' on' (ID: 402)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.04390669986605644
    2. ' used' → logprob: -3.7939066886901855
    3. 'on' → logprob: -3.9189066886901855
    4. ' on' → logprob: -7.5439066886901855
    5. '_used' → logprob: -10.043907165527344
    6. 'in' → logprob: -12.293907165527344
    7. 'use' → logprob: -12.918907165527344
    8. ' ' → logprob: -13.293907165527344
    9. '.used' → logprob: -13.918907165527344
    10. ' part' → logprob: -14.043907165527344

Token 955: ' shortest' (ID: 70564)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4760572612285614
    2. ' shortest' → logprob: -1.2260572910308838
    3. 'short' → logprob: -2.851057291030884
    4. ' the' → logprob: -4.476057052612305
    5. 'a' → logprob: -4.726057052612305
    6. 'any' → logprob: -5.476057052612305
    7. 'original' → logprob: -6.351057052612305
    8. 'Shortest' → logprob: -7.601057052612305
    9. ' any' → logprob: -7.851057052612305
    10. ' a' → logprob: -8.226057052612305

Token 956: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.04343244805932045
    2. 'path' → logprob: -3.1684324741363525
    3. ' path' → logprob: -7.918432235717773
    4. '_' → logprob: -10.543432235717773
    5. ')' → logprob: -11.668432235717773
    6. '"path' → logprob: -12.168432235717773
    7. 'line' → logprob: -12.293432235717773
    8. '_line' → logprob: -12.418432235717773
    9. ' _' → logprob: -12.543432235717773
    10. '```' → logprob: -12.668432235717773

Token 957: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00580946309491992
    2. '               ' → logprob: -5.630809307098389
    3. '
' → logprob: -6.380809307098389
    4. '		' → logprob: -9.005809783935547
    5. 'return' → logprob: -9.130809783935547
    6. ':
' → logprob: -9.380809783935547
    7. '       ' → logprob: -10.130809783935547
    8. '          ' → logprob: -10.630809783935547
    9. ',' → logprob: -10.755809783935547
    10. '	       ' → logprob: -11.005809783935547

Token 958: ' reversing' (ID: 156690)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.48346850275993347
    2. ' return' → logprob: -0.9834685325622559
    3. '           ' → logprob: -4.858468532562256
    4. '               ' → logprob: -6.483468532562256
    5. '       ' → logprob: -10.483468055725098
    6. '   ' → logprob: -10.858468055725098
    7. '                   ' → logprob: -12.483468055725098
    8. '	return' → logprob: -12.608468055725098
    9. ' ' → logprob: -14.233468055725098
    10. '
' → logprob: -14.733468055725098

Token 959: ' doesn't' (ID: 8740)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.1842174232006073
    2. ' edge' → logprob: -2.0592174530029297
    3. ' it' → logprob: -4.30921745300293
    4. 'it' → logprob: -5.30921745300293
    5. 'does' → logprob: -5.43421745300293
    6. ' does' → logprob: -5.80921745300293
    7. ' the' → logprob: -5.93421745300293
    8. 'the' → logprob: -6.43421745300293
    9. ' doesn't' → logprob: -6.43421745300293
    10. 'return' → logprob: -6.43421745300293

Token 960: ' increase' (ID: 7064)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.6051504015922546
    2. 'change' → logprob: -1.4801504611968994
    3. ' affect' → logprob: -1.7301504611968994
    4. ' change' → logprob: -3.7301504611968994
    5. 'matter' → logprob: -4.85515022277832
    6. ' harm' → logprob: -5.35515022277832
    7. 'break' → logprob: -5.35515022277832
    8. 'hurt' → logprob: -6.10515022277832
    9. 'harm' → logprob: -6.23015022277832
    10. ' matter' → logprob: -7.23015022277832

Token 961: ' length' (ID: 5517)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.8344188332557678
    2. ' distance' → logprob: -1.084418773651123
    3. ' d' → logprob: -2.459418773651123
    4. ' the' → logprob: -2.584418773651123
    5. 'dist' → logprob: -3.334418773651123
    6. 'd' → logprob: -4.209418773651123
    7. 'the' → logprob: -5.334418773651123
    8. ' dist' → logprob: -6.084418773651123
    9. ' path' → logprob: -6.334418773651123
    10. 'path' → logprob: -6.584418773651123

Token 962: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020061541348695755
    2. '           ' → logprob: -4.145061492919922
    3. '			' → logprob: -6.520061492919922
    4. '
' → logprob: -7.020061492919922
    5. '		' → logprob: -7.270061492919922
    6. '		       ' → logprob: -8.645061492919922
    7. '	       ' → logprob: -9.145061492919922
    8. '	           ' → logprob: -9.270061492919922
    9. ',' → logprob: -9.395061492919922
    10. 'return' → logprob: -9.520061492919922

Token 963: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03979440778493881
    2. '           ' → logprob: -3.789794445037842
    3. 'return' → logprob: -4.914794445037842
    4. ' return' → logprob: -5.289794445037842
    5. '   ' → logprob: -6.539794445037842
    6. '	return' → logprob: -6.664794445037842
    7. '                   ' → logprob: -8.289793968200684
    8. '			' → logprob: -8.414793968200684
    9. '	' → logprob: -8.914793968200684
    10. '		' → logprob: -9.164793968200684

Token 964: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12918983399868011
    2. ' return' → logprob: -2.1291897296905518
    3. '           ' → logprob: -6.129189968109131
    4. '               ' → logprob: -10.379189491271973
    5. '   ' → logprob: -10.379189491271973
    6. '       ' → logprob: -11.379189491271973
    7. '	return' → logprob: -12.629189491271973
    8. ' ' → logprob: -13.504189491271973
    9. '                   ' → logprob: -13.629189491271973
    10. '  ' → logprob: -14.754189491271973

Token 965: ' means' (ID: 4748)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01994680054485798
    2. ' return' → logprob: -4.019946575164795
    3. '           ' → logprob: -6.394946575164795
    4. '   ' → logprob: -9.394947052001953
    5. '       ' → logprob: -10.644947052001953
    6. '               ' → logprob: -11.019947052001953
    7. '	return' → logprob: -13.894947052001953
    8. ' ' → logprob: -14.644947052001953
    9. '                   ' → logprob: -15.269947052001953
    10. '  ' → logprob: -15.644947052001953

Token 966: ' shortest' (ID: 70564)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5697828531265259
    2. 'return' → logprob: -1.1947828531265259
    3. '"' → logprob: -2.0697827339172363
    4. ' "' → logprob: -5.569782733917236
    5. '"S' → logprob: -7.569782733917236
    6. '               ' → logprob: -7.944782733917236
    7. '           ' → logprob: -8.194783210754395
    8. '   ' → logprob: -8.694783210754395
    9. '                   ' → logprob: -9.444783210754395
    10. ' ' → logprob: -9.694783210754395

Token 967: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.8115713000297546
    2. '_path' → logprob: -1.0615713596343994
    3. 'path' → logprob: -1.5615713596343994
    4. '_' → logprob: -9.81157112121582
    5. '"path' → logprob: -10.93657112121582
    6. '_paths' → logprob: -11.18657112121582
    7. '	path' → logprob: -12.18657112121582
    8. '   ' → logprob: -12.56157112121582
    9. ' pathway' → logprob: -12.56157112121582
    10. '               ' → logprob: -12.81157112121582

Token 968: ' doesn't' (ID: 8740)
  Prédit: ' remains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remains' → logprob: -0.12716621160507202
    2. ' unchanged' → logprob: -2.627166271209717
    3. ' is' → logprob: -4.252166271209717
    4. ' stays' → logprob: -5.252166271209717
    5. ' will' → logprob: -5.377166271209717
    6. '           ' → logprob: -5.377166271209717
    7. ' can' → logprob: -5.502166271209717
    8. 'rem' → logprob: -6.127166271209717
    9. '"' → logprob: -6.502166271209717
    10. '               ' → logprob: -6.627166271209717

Token 969: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.12189490348100662
    2. ' change' → logprob: -2.2468948364257812
    3. 'break' → logprob: -4.871894836425781
    4. ' break' → logprob: -7.246894836425781
    5. 'increase' → logprob: -7.996894836425781
    6. 'get' → logprob: -9.121894836425781
    7. 'depend' → logprob: -10.246894836425781
    8. ' get' → logprob: -10.496894836425781
    9. 'chang' → logprob: -10.746894836425781
    10. '_change' → logprob: -10.871894836425781

Token 970: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036989495158195496
    2. '               ' → logprob: -3.786989450454712
    3. '
' → logprob: -4.536989688873291
    4. '       ' → logprob: -6.911989688873291
    5. '            
' → logprob: -7.661989688873291
    6. '		' → logprob: -8.286989212036133
    7. ' 
' → logprob: -8.286989212036133
    8. 'return' → logprob: -8.536989212036133
    9. '   ' → logprob: -8.911989212036133
    10. '                   ' → logprob: -9.036989212036133

Token 971: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5840451121330261
    2. ' return' → logprob: -1.334045171737671
    3. 'return' → logprob: -1.834045171737671
    4. '               ' → logprob: -4.084044933319092
    5. '	return' → logprob: -7.209044933319092
    6. '   ' → logprob: -7.709044933319092
    7. '
' → logprob: -7.959044933319092
    8. '		' → logprob: -9.08404541015625
    9. '                   ' → logprob: -9.08404541015625
    10. '```' → logprob: -9.20904541015625

Token 972: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5759491920471191
    2. ' return' → logprob: -0.8259491920471191
    3. '           ' → logprob: -12.325948715209961
    4. '   ' → logprob: -13.200948715209961
    5. '               ' → logprob: -13.325948715209961
    6. '"' → logprob: -14.325948715209961
    7. '	return' → logprob: -14.575948715209961
    8. '       ' → logprob: -14.825948715209961
    9. ' ' → logprob: -15.825948715209961
    10. '                   ' → logprob: -16.07594871520996

Token 973: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1394725888967514
    2. '"S' → logprob: -2.139472484588623
    3. ' "' → logprob: -4.514472484588623
    4. '"H' → logprob: -6.514472484588623
    5. ''S' → logprob: -11.014472961425781
    6. ''' → logprob: -11.889472961425781
    7. ' SOS' → logprob: -12.764472961425781
    8. ' ' → logprob: -13.014472961425781
    9. 'SOS' → logprob: -13.139472961425781
    10. ' ' → logprob: -13.139472961425781

Token 974: 'SOS' (ID: 157130)
  Prédit: 'SOS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SOS' → logprob: -0.00028052396373823285
    2. '"' → logprob: -8.750280380249023
    3. '"S' → logprob: -9.500280380249023
    4. ' SOS' → logprob: -10.500280380249023
    5. 'H' → logprob: -11.625280380249023
    6. '"H' → logprob: -11.875280380249023
    7. 'SOC' → logprob: -13.875280380249023
    8. ''' → logprob: -14.125280380249023
    9. 'S' → logprob: -14.625280380249023
    10. '"s' → logprob: -14.750280380249023

Token 975: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.981667537620524e-06
    2. '"O' → logprob: -14.375001907348633
    3. '"' → logprob: -14.875001907348633
    4. ')' → logprob: -15.375001907348633
    5. '")' → logprob: -15.500001907348633
    6. 'SO' → logprob: -15.500001907348633
    7. '```' → logprob: -15.500001907348633
    8. 'О' → logprob: -16.875001907348633
    9. ' O' → logprob: -17.625001907348633
    10. 'OS' → logprob: -17.750001907348633

Token 976: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 977: 'class' (ID: 1444)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5855473279953003
    2. '<|end|>' → logprob: -0.9605473279953003
    3. ')' → logprob: -3.46054744720459
    4. '\' → logprob: -4.33554744720459
    5. '
' → logprob: -5.71054744720459
    6. '```' → logprob: -5.83554744720459
    7. '.' → logprob: -5.96054744720459
    8. '#' → logprob: -6.21054744720459
    9. ' ' → logprob: -6.71054744720459
    10. '<|end|>' → logprob: -7.21054744720459

Token 978: ' Pizza' (ID: 48892)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.761942982673645
    2. 'Solution' → logprob: -1.011942982673645
    3. ' sys' → logprob: -3.1369428634643555
    4. 'Graph' → logprob: -3.7619428634643555
    5. ' Graph' → logprob: -3.7619428634643555
    6. ' Solver' → logprob: -4.5119428634643555
    7. 'Main' → logprob: -4.6369428634643555
    8. ' Main' → logprob: -4.7619428634643555
    9. ' Experiment' → logprob: -4.8869428634643555
    10. 'Code' → logprob: -5.1369428634643555

Token 979: 'Delivery' (ID: 28728)
  Prédit: 'Delivery'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Delivery' → logprob: -1.1451882123947144
    2. 'Experiment' → logprob: -1.8951882123947144
    3. 'Solver' → logprob: -1.8951882123947144
    4. 'Maker' → logprob: -2.270188331604004
    5. 'Shop' → logprob: -2.895188331604004
    6. 'Builder' → logprob: -3.145188331604004
    7. 'Order' → logprob: -3.645188331604004
    8. ':' → logprob: -3.770188331604004
    9. 'Optimizer' → logprob: -4.395188331604004
    10. 'Vendor' → logprob: -4.895188331604004

Token 980: 'Experiment' (ID: 87597)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1547980159521103
    2. 'Optimizer' → logprob: -2.9047980308532715
    3. 'Planner' → logprob: -3.2797980308532715
    4. 'Evaluator' → logprob: -4.2797980308532715
    5. 'Scheduler' → logprob: -4.9047980308532715
    6. ':
' → logprob: -4.9047980308532715
    7. 'Service' → logprob: -5.0297980308532715
    8. 'Solver' → logprob: -5.1547980308532715
    9. 'Graph' → logprob: -6.1547980308532715
    10. 'Manager' → logprob: -6.4047980308532715

Token 981: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035213178489357233
    2. ':
' → logprob: -5.75352144241333
    3. '(' → logprob: -8.503520965576172
    4. '{' → logprob: -10.003520965576172
    5. '():' → logprob: -10.503520965576172
    6. 'Evaluator' → logprob: -11.503520965576172
    7. '):' → logprob: -11.878520965576172
    8. ':

' → logprob: -12.253520965576172
    9. ' :' → logprob: -12.378520965576172
    10. ':def' → logprob: -12.378520965576172

Token 982: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008826930075883865
    2. 'class' → logprob: -5.008826732635498
    3. ':' → logprob: -6.508826732635498
    4. 'def' → logprob: -7.633826732635498
    5. ' def' → logprob: -10.133827209472656
    6. ':
' → logprob: -10.133827209472656
    7. '```' → logprob: -11.008827209472656
    8. ' class' → logprob: -11.133827209472656
    9. 'import' → logprob: -12.258827209472656
    10. '	def' → logprob: -12.383827209472656

Token 983: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6042593121528625
    2. ':' → logprob: -1.1042592525482178
    3. '   ' → logprob: -2.6042592525482178
    4. ' def' → logprob: -3.2292592525482178
    5. ':
' → logprob: -5.354259490966797
    6. ':def' → logprob: -5.729259490966797
    7. 'class' → logprob: -7.854259490966797
    8. '	def' → logprob: -9.729259490966797
    9. '```' → logprob: -9.729259490966797
    10. '):' → logprob: -12.229259490966797

Token 984: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014249415136873722
    2. ' __' → logprob: -4.264249324798584
    3. '_init' → logprob: -10.264249801635742
    4. '```' → logprob: -11.264249801635742
    5. '___' → logprob: -11.514249801635742
    6. 'def' → logprob: -11.639249801635742
    7. '__(' → logprob: -11.639249801635742
    8. '__
' → logprob: -12.514249801635742
    9. '_' → logprob: -12.889249801635742
    10. ' def' → logprob: -13.514249801635742

Token 985: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0007663871510885656
    2. 'it' → logprob: -7.375766277313232
    3. 'nit' → logprob: -9.87576675415039
    4. 'def' → logprob: -10.37576675415039
    5. '__' → logprob: -10.62576675415039
    6. '```' → logprob: -10.87576675415039
    7. 'iter' → logprob: -12.00076675415039
    8. '_init' → logprob: -12.75076675415039
    9. 'int' → logprob: -13.50076675415039
    10. 'class' → logprob: -13.87576675415039

Token 986: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00011808603449026123
    2. '__' → logprob: -9.625118255615234
    3. '(self' → logprob: -10.000118255615234
    4. '__(
' → logprob: -12.125118255615234
    5. '__((' → logprob: -14.625118255615234
    6. '(' → logprob: -15.375118255615234
    7. '_(' → logprob: -15.750118255615234
    8. '```' → logprob: -16.000118255615234
    9. ' (' → logprob: -16.125118255615234
    10. '__('' → logprob: -17.000118255615234

Token 987: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.004696090007201e-05
    2. ' self' → logprob: -9.875069618225098
    3. ',' → logprob: -11.500069618225098
    4. 'graph' → logprob: -12.750069618225098
    5. ',self' → logprob: -13.500069618225098
    6. 'Graph' → logprob: -13.750069618225098
    7. ')' → logprob: -14.000069618225098
    8. '   ' → logprob: -14.125069618225098
    9. '(self' → logprob: -14.250069618225098
    10. '
' → logprob: -14.625069618225098

Token 988: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008309515542350709
    2. 'self' → logprob: -7.375831127166748
    3. ' ,' → logprob: -9.75083065032959
    4. ',self' → logprob: -9.87583065032959
    5. '(self' → logprob: -10.50083065032959
    6. '):' → logprob: -11.12583065032959
    7. 'graph' → logprob: -11.50083065032959
    8. ',
' → logprob: -11.62583065032959
    9. '   ' → logprob: -11.62583065032959
    10. '(graph' → logprob: -12.00083065032959

Token 989: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00021903318702243268
    2. ' self' → logprob: -8.500219345092773
    3. '   ' → logprob: -11.750219345092773
    4. 'graph' → logprob: -12.250219345092773
    5. '       ' → logprob: -13.625219345092773
    6. '
' → logprob: -14.000219345092773
    7. 'Graph' → logprob: -14.500219345092773
    8. '(self' → logprob: -16.250219345092773
    9. '	self' → logprob: -16.625219345092773
    10. ',' → logprob: -17.500219345092773

Token 990: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.021576086059212685
    2. 'def' → logprob: -4.646575927734375
    3. '   ' → logprob: -5.271575927734375
    4. ' self' → logprob: -5.271575927734375
    5. 'pass' → logprob: -6.896575927734375
    6. '       ' → logprob: -8.771575927734375
    7. 'import' → logprob: -9.021575927734375
    8. '
' → logprob: -9.396575927734375
    9. ' def' → logprob: -10.146575927734375
    10. ' pass' → logprob: -10.146575927734375

Token 991: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5510449409484863
    2. '.n' → logprob: -1.1760449409484863
    3. ' n' → logprob: -2.9260449409484863
    4. 'def' → logprob: -4.176044940948486
    5. '.graph' → logprob: -4.301044940948486
    6. '_n' → logprob: -4.801044940948486
    7. '.' → logprob: -5.551044940948486
    8. 'import' → logprob: -5.926044940948486
    9. ' .' → logprob: -6.051044940948486
    10. '   ' → logprob: -6.051044940948486

Token 992: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21192309260368347
    2. '=' → logprob: -2.086923122406006
    3. ',' → logprob: -2.711923122406006
    4. ' ,' → logprob: -7.961923122406006
    5. ' ' → logprob: -9.461922645568848
    6. '<|end|>' → logprob: -10.961922645568848
    7. '=int' → logprob: -11.086922645568848
    8. '  ' → logprob: -11.461922645568848
    9. ' =
' → logprob: -11.711922645568848
    10. '   ' → logprob: -11.836922645568848

Token 993: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01303445640951395
    2. 'int' → logprob: -4.638034343719482
    3. ' ' → logprob: -6.513034343719482
    4. 'None' → logprob: -6.763034343719482
    5. ' int' → logprob: -8.01303482055664
    6. ' None' → logprob: -8.13803482055664
    7. '  ' → logprob: -12.76303482055664
    8. '1' → logprob: -13.13803482055664
    9. '100' → logprob: -13.76303482055664
    10. '10' → logprob: -14.01303482055664

Token 994: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01868501678109169
    2. 'int' → logprob: -4.0186848640441895
    3. 'None' → logprob: -8.143685340881348
    4. ' ' → logprob: -8.643685340881348
    5. ' int' → logprob: -10.018685340881348
    6. 'self' → logprob: -11.643685340881348
    7. ' None' → logprob: -12.143685340881348
    8. '1' → logprob: -12.643685340881348
    9. '10' → logprob: -14.018685340881348
    10. '   ' → logprob: -14.018685340881348

Token 995: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 996: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 997: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -3.0948158382670954e-05
    2. '       ' → logprob: -11.000030517578125
    3. '   ' → logprob: -11.250030517578125
    4. 'def' → logprob: -14.000030517578125
    5. ' self' → logprob: -15.125030517578125
    6. '	self' → logprob: -17.375030517578125
    7. '
' → logprob: -17.375030517578125
    8. 'm' → logprob: -18.250030517578125
    9. '```' → logprob: -18.750030517578125
    10. 'graph' → logprob: -19.000030517578125

Token 998: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.08488579094409943
    2. '_m' → logprob: -3.084885835647583
    3. '_edges' → logprob: -4.334885597229004
    4. '._' → logprob: -4.709885597229004
    5. '.edges' → logprob: -4.834885597229004
    6. 'm' → logprob: -6.209885597229004
    7. '.graph' → logprob: -6.209885597229004
    8. '_graph' → logprob: -7.084885597229004
    9. 'edges' → logprob: -8.459885597229004
    10. '.' → logprob: -9.584885597229004

Token 999: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287453591823578
    2. '=' → logprob: -1.0537453889846802
    3. ',' → logprob: -10.42874526977539
    4. '<|end|>' → logprob: -12.17874526977539
    5. ' ' → logprob: -12.55374526977539
    6. ' =
' → logprob: -12.92874526977539
    7. '  ' → logprob: -14.42874526977539
    8. '=None' → logprob: -14.55374526977539
    9. '   ' → logprob: -14.67874526977539
    10. ')' → logprob: -14.80374526977539

Token 1000: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001801801408873871
    2. ' ' → logprob: -8.6251802444458
    3. 'None' → logprob: -15.1251802444458
    4. '[]' → logprob: -15.2501802444458
    5. '   ' → logprob: -16.875179290771484
    6. 'int' → logprob: -18.000179290771484
    7. '[]
' → logprob: -18.125179290771484
    8. '[' → logprob: -18.125179290771484
    9. '  ' → logprob: -18.250179290771484
    10. ' None' → logprob: -18.250179290771484

Token 1001: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '[]' → logprob: -15.375001907348633
    4. 'int' → logprob: -15.875001907348633
    5. 'None' → logprob: -16.875001907348633
    6. '-' → logprob: -18.875001907348633
    7. '1' → logprob: -19.375001907348633
    8. '[]
' → logprob: -19.625001907348633
    9. '```' → logprob: -19.750001907348633
    10. '   ' → logprob: -19.875001907348633

Token 1002: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6745762228965759
    2. '   ' → logprob: -0.7995762228965759
    3. ' def' → logprob: -3.4245762825012207
    4. '
' → logprob: -5.424576282501221
    5. '	def' → logprob: -5.924576282501221
    6. '       ' → logprob: -7.549576282501221
    7. '    
' → logprob: -8.049575805664062
    8. '```' → logprob: -8.549575805664062
    9. ' ' → logprob: -8.799575805664062
    10. 'self' → logprob: -9.174575805664062

Token 1003: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0473170205950737
    2. 'def' → logprob: -4.047317028045654
    3. '	def' → logprob: -4.047317028045654
    4. ' def' → logprob: -4.672317028045654
    5. '       ' → logprob: -7.422317028045654
    6. '
' → logprob: -7.547317028045654
    7. '    
' → logprob: -8.172316551208496
    8. ',' → logprob: -8.547316551208496
    9. ' ' → logprob: -9.547316551208496
    10. '```' → logprob: -9.922316551208496

Token 1004: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17666320502758026
    2. 'def' → logprob: -2.1766631603240967
    3. '   ' → logprob: -3.5516631603240967
    4. '
' → logprob: -4.551663398742676
    5. '       ' → logprob: -4.801663398742676
    6. '```' → logprob: -7.301663398742676
    7. ' self' → logprob: -9.301663398742676
    8. ' ' → logprob: -9.801663398742676
    9. ' def' → logprob: -10.051663398742676
    10. 'graph' → logprob: -10.301663398742676

Token 1005: '.graph' (ID: 18104)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.7433978915214539
    2. '.graph' → logprob: -1.3683979511260986
    3. '_graph' → logprob: -1.9933979511260986
    4. '.edges' → logprob: -2.7433979511260986
    5. '._' → logprob: -3.6183979511260986
    6. 'graph' → logprob: -3.7433979511260986
    7. 'edges' → logprob: -4.7433977127075195
    8. '.' → logprob: -6.1183977127075195
    9. '=' → logprob: -6.7433977127075195
    10. 'import' → logprob: -6.9933977127075195

Token 1006: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3349207043647766
    2. ' =' → logprob: -1.4599206447601318
    3. '.' → logprob: -2.959920644760132
    4. '.=' → logprob: -8.709920883178711
    5. '   ' → logprob: -9.334920883178711
    6. 'self' → logprob: -10.334920883178711
    7. ' .' → logprob: -10.334920883178711
    8. '[' → logprob: -10.459920883178711
    9. ')' → logprob: -10.709920883178711
    10. ' =
' → logprob: -10.834920883178711

Token 1007: ' None' (ID: 4662)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.04921229928731918
    2. ' Graph' → logprob: -3.0492122173309326
    3. 'None' → logprob: -7.424212455749512
    4. ' None' → logprob: -10.549212455749512
    5. '   ' → logprob: -14.299212455749512
    6. '(Graph' → logprob: -14.299212455749512
    7. 'Graphs' → logprob: -15.549212455749512
    8. ' ' → logprob: -15.924212455749512
    9. 'graph' → logprob: -16.424211502075195
    10. '.Graph' → logprob: -16.549211502075195

Token 1008: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026211697608232498
    2. '       ' → logprob: -3.901211738586426
    3. '
' → logprob: -5.776211738586426
    4. 'def' → logprob: -6.276211738586426
    5. 'self' → logprob: -7.901211738586426
    6. '    
' → logprob: -9.026211738586426
    7. '```' → logprob: -10.026211738586426
    8. '        
' → logprob: -10.276211738586426
    9. '	def' → logprob: -10.401211738586426
    10. '<|end|>' → logprob: -10.901211738586426

Token 1009: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006528265308588743
    2. '       ' → logprob: -5.131528377532959
    3. 'def' → logprob: -7.756528377532959
    4. 'self' → logprob: -9.2565279006958
    5. '```' → logprob: -10.0065279006958
    6. '
' → logprob: -12.0065279006958
    7. ' def' → logprob: -12.1315279006958
    8. '    
' → logprob: -12.1315279006958
    9. '	def' → logprob: -12.2565279006958
    10. ' self' → logprob: -13.1315279006958

Token 1010: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5589935779571533
    2. 'def' → logprob: -1.0589935779571533
    3. '   ' → logprob: -2.6839935779571533
    4. '       ' → logprob: -4.433993339538574
    5. '
' → logprob: -7.308993339538574
    6. ' self' → logprob: -8.558993339538574
    7. ' def' → logprob: -8.683993339538574
    8. '```' → logprob: -8.683993339538574
    9. '	self' → logprob: -11.183993339538574
    10. '        
' → logprob: -11.558993339538574

Token 1011: '.edges' (ID: 102481)
  Prédit: '.sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sp' → logprob: -0.0017616904806345701
    2. '_sp' → logprob: -7.1267619132995605
    3. '._' → logprob: -7.2517619132995605
    4. 'sp' → logprob: -8.501761436462402
    5. ' .' → logprob: -11.751761436462402
    6. '.s' → logprob: -12.126761436462402
    7. '.p' → logprob: -12.126761436462402
    8. '.graph' → logprob: -12.751761436462402
    9. '.py' → logprob: -12.876761436462402
    10. '```' → logprob: -13.376761436462402

Token 1012: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08899202942848206
    2. ' =' → logprob: -2.463992118835449
    3. '[' → logprob: -11.33899211883545
    4. '   ' → logprob: -11.83899211883545
    5. '.append' → logprob: -11.96399211883545
    6. ',' → logprob: -12.33899211883545
    7. '=
' → logprob: -12.46399211883545
    8. '=[]' → logprob: -12.46399211883545
    9. ')' → logprob: -12.71399211883545
    10. '.' → logprob: -12.96399211883545

Token 1013: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -6.2729995988775045e-06
    2. '[]
' → logprob: -12.500006675720215
    3. ' []' → logprob: -13.000006675720215
    4. '[]

' → logprob: -16.3750057220459
    5. '[' → logprob: -16.7500057220459
    6. '[]}' → logprob: -17.3750057220459
    7. '[]"' → logprob: -18.0000057220459
    8. '[],' → logprob: -18.3750057220459
    9. '[])' → logprob: -18.8750057220459
    10. '[]=' → logprob: -19.2500057220459

Token 1014: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1661696583032608
    2. 'def' → logprob: -1.9161696434020996
    3. ' def' → logprob: -5.1661696434021
    4. '	def' → logprob: -8.791170120239258
    5. '
' → logprob: -10.166170120239258
    6. '```' → logprob: -10.541170120239258
    7. '    
' → logprob: -12.666170120239258
    8. '       ' → logprob: -14.541170120239258
    9. '        
' → logprob: -15.666170120239258
    10. 'import' → logprob: -15.916170120239258

Token 1015: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00012368128227535635
    2. ' def' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.125123977661133
    4. '
' → logprob: -17.625123977661133
    5. '	def' → logprob: -18.250123977661133
    6. '```' → logprob: -21.125123977661133
    7. '    
' → logprob: -21.500123977661133
    8. 'class' → logprob: -23.000123977661133
    9. 'de' → logprob: -23.125123977661133
    10. ' 
' → logprob: -23.250123977661133

Token 1016: ' parse' (ID: 8420)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.04030521586537361
    2. 'run' → logprob: -3.2903051376342773
    3. 'load' → logprob: -7.040305137634277
    4. 'solve' → logprob: -8.040305137634277
    5. 'parse' → logprob: -8.165305137634277
    6. 'add' → logprob: -8.540305137634277
    7. 'init' → logprob: -8.665305137634277
    8. 'prepare' → logprob: -9.040305137634277
    9. 'build' → logprob: -9.415305137634277
    10. 'initialize' → logprob: -9.415305137634277

Token 1017: '_input' (ID: 12507)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.17573624849319458
    2. '(self' → logprob: -2.55073618888855
    3. '_input' → logprob: -2.92573618888855
    4. '_' → logprob: -4.550736427307129
    5. 'self' → logprob: -4.675736427307129
    6. '(' → logprob: -4.925736427307129
    7. 'line' → logprob: -7.300736427307129
    8. ' (' → logprob: -7.800736427307129
    9. '_next' → logprob: -8.425736427307129
    10. 'input' → logprob: -8.675736427307129

Token 1018: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00764613738283515
    2. '(' → logprob: -4.882646083831787
    3. ' (' → logprob: -10.507646560668945
    4. 'self' → logprob: -11.757646560668945
    5. '(
' → logprob: -13.257646560668945
    6. '   ' → logprob: -13.257646560668945
    7. '       ' → logprob: -15.007646560668945
    8. '_line' → logprob: -15.382646560668945
    9. '(s' → logprob: -15.882646560668945
    10. '(line' → logprob: -16.132646560668945

Token 1019: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006167917046695948
    2. '(' → logprob: -5.506167888641357
    3. 'self' → logprob: -6.506167888641357
    4. ')' → logprob: -8.506168365478516
    5. ' (' → logprob: -8.631168365478516
    6. ',' → logprob: -8.881168365478516
    7. ')(' → logprob: -10.631168365478516
    8. '   ' → logprob: -11.381168365478516
    9. '(
' → logprob: -11.756168365478516
    10. '[' → logprob: -12.131168365478516

Token 1020: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026999766007065773
    2. '```' → logprob: -3.6519997119903564
    3. 'self' → logprob: -8.026999473571777
    4. '	' → logprob: -9.401999473571777
    5. '   ' → logprob: -9.526999473571777
    6. '​' → logprob: -10.276999473571777
    7. ' lines' → logprob: -10.276999473571777
    8. 'import' → logprob: -10.526999473571777
    9. ',' → logprob: -11.151999473571777
    10. ' self' → logprob: -11.151999473571777

Token 1021: ' input' (ID: 3422)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5899480581283569
    2. 'self' → logprob: -1.964948058128357
    3. ' line' → logprob: -2.2149481773376465
    4. 'line' → logprob: -2.7149481773376465
    5. ' lines' → logprob: -2.7149481773376465
    6. ' self' → logprob: -3.7149481773376465
    7. 'lines' → logprob: -3.9649481773376465
    8. 'import' → logprob: -4.7149481773376465
    9. 'for' → logprob: -5.7149481773376465
    10. 'data' → logprob: -6.3399481773376465

Token 1022: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.35841134190559387
    2. '()' → logprob: -1.2334113121032715
    3. '_data' → logprob: -5.1084113121032715
    4. '().' → logprob: -6.6084113121032715
    5. '_' → logprob: -7.2334113121032715
    6. 'line' → logprob: -7.4834113121032715
    7. '_lines' → logprob: -7.8584113121032715
    8. '_text' → logprob: -8.98341178894043
    9. '(' → logprob: -9.35841178894043
    10. '())' → logprob: -9.48341178894043

Token 1023: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03015320561826229
    2. ' sys' → logprob: -3.530153274536133
    3. 'input' → logprob: -8.030153274536133
    4. '=sys' → logprob: -10.030153274536133
    5. '(sys' → logprob: -11.030153274536133
    6. '	sys' → logprob: -11.780153274536133
    7. 'lambda' → logprob: -11.905153274536133
    8. ' input' → logprob: -13.030153274536133
    9. '_sys' → logprob: -16.030153274536133
    10. ' lambda' → logprob: -16.530153274536133

Token 1024: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.018898408859968185
    2. '.' → logprob: -4.0188984870910645
    3. '.readline' → logprob: -7.5188984870910645
    4. '().' → logprob: -8.893898010253906
    5. 'stdin' → logprob: -10.518898010253906
    6. '.stdout' → logprob: -11.018898010253906
    7. '.std' → logprob: -11.268898010253906
    8. '.argv' → logprob: -12.643898010253906
    9. '.​' → logprob: -13.393898010253906
    10. '(stdin' → logprob: -13.643898010253906

Token 1025: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002882721892092377
    2. 'read' → logprob: -8.875288009643555
    3. '.' → logprob: -9.625288009643555
    4. '().' → logprob: -10.250288009643555
    5. ' readline' → logprob: -11.000288009643555
    6. '()' → logprob: -11.375288009643555
    7. '_read' → logprob: -11.500288009643555
    8. '.read' → logprob: -12.750288009643555
    9. '.readlines' → logprob: -13.375288009643555
    10. 'line' → logprob: -13.375288009643555

Token 1026: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.051647450774908066
    2. '().' → logprob: -3.051647424697876
    3. '()
' → logprob: -5.801647663116455
    4. '())' → logprob: -11.176647186279297
    5. '()\' → logprob: -12.301647186279297
    6. '()

' → logprob: -12.551647186279297
    7. '()
' → logprob: -12.801647186279297
    8. '()`' → logprob: -13.051647186279297
    9. '(' → logprob: -13.926647186279297
    10. 'def' → logprob: -14.426647186279297

Token 1027: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02304525300860405
    2. '()' → logprob: -4.148045063018799
    3. '()
' → logprob: -5.398045063018799
    4. 'def' → logprob: -7.023045063018799
    5. '
' → logprob: -7.523045063018799
    6. '   ' → logprob: -7.898045063018799
    7. 'self' → logprob: -8.523045539855957
    8. '```' → logprob: -9.148045539855957
    9. 'for' → logprob: -9.773045539855957
    10. 'n' → logprob: -9.898045539855957

Token 1028: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15634067356586456
    2. 'for' → logprob: -2.5313405990600586
    3. '       ' → logprob: -2.7813405990600586
    4. 'n' → logprob: -6.406340599060059
    5. 'line' → logprob: -6.906340599060059
    6. ' for' → logprob: -8.656340599060059
    7. ' self' → logprob: -8.906340599060059
    8. '   ' → logprob: -9.406340599060059
    9. '(self' → logprob: -10.406340599060059
    10. 'u' → logprob: -10.781340599060059

Token 1029: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0006071255193091929
    2. '.' → logprob: -7.875607013702393
    3. 'n' → logprob: -8.75060749053955
    4. '.m' → logprob: -10.12560749053955
    5. ' .' → logprob: -11.75060749053955
    6. 'def' → logprob: -13.00060749053955
    7. '```' → logprob: -13.00060749053955
    8. '=' → logprob: -13.12560749053955
    9. '.=' → logprob: -13.25060749053955
    10. '.
' → logprob: -13.37560749053955

Token 1030: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17949768900871277
    2. '=' → logprob: -1.9294977188110352
    3. ' =' → logprob: -4.429497718811035
    4. ' ,' → logprob: -5.054497718811035
    5. '   ' → logprob: -8.179497718811035
    6. '       ' → logprob: -8.929497718811035
    7. '    ' → logprob: -9.429497718811035
    8. '        ' → logprob: -10.304497718811035
    9. ' ' → logprob: -10.429497718811035
    10. '<|end|>' → logprob: -10.429497718811035

Token 1031: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003178901970386505
    2. ' self' → logprob: -5.75317907333374
    3. '=self' → logprob: -14.503178596496582
    4. '
' → logprob: -14.753178596496582
    5. ' 
' → logprob: -16.0031795501709
    6. '=' → logprob: -16.5031795501709
    7. ' ' → logprob: -17.0031795501709
    8. ' =' → logprob: -17.0031795501709
    9. ',self' → logprob: -17.3781795501709
    10. ' ' → logprob: -17.7531795501709

Token 1032: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0009594622533768415
    2. 'm' → logprob: -7.250959396362305
    3. '.' → logprob: -8.375959396362305
    4. '=' → logprob: -11.625959396362305
    5. '.n' → logprob: -12.875959396362305
    6. '_m' → logprob: -12.875959396362305
    7. ',m' → logprob: -13.375959396362305
    8. ' .' → logprob: -14.375959396362305
    9. ' =' → logprob: -14.625959396362305
    10. '   ' → logprob: -14.875959396362305

Token 1033: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031791406217962503
    2. ' =' → logprob: -5.75317907333374
    3. ',' → logprob: -14.378179550170898
    4. '=input' → logprob: -14.628179550170898
    5. '＝' → logprob: -16.6281795501709
    6. '=
' → logprob: -16.7531795501709
    7. '=int' → logprob: -16.8781795501709
    8. ')=' → logprob: -17.1281795501709
    9. ')' → logprob: -17.6281795501709
    10. '=line' → logprob: -17.6281795501709

Token 1034: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16022422909736633
    2. 'map' → logprob: -1.910224199295044
    3. '	map' → logprob: -17.53522491455078
    4. '(map' → logprob: -17.91022491455078
    5. '[' → logprob: -18.91022491455078
    6. '_map' → logprob: -19.28522491455078
    7. 'list' → logprob: -19.91022491455078
    8. ' ' → logprob: -20.03522491455078
    9. '   ' → logprob: -20.03522491455078
    10. '.map' → logprob: -20.41022491455078

Token 1035: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0621747188270092
    2. 'input' → logprob: -3.8121747970581055
    3. '(input' → logprob: -3.8121747970581055
    4. 'int' → logprob: -4.4371747970581055
    5. '(str' → logprob: -5.5621747970581055
    6. 'str' → logprob: -8.562174797058105
    7. '(lambda' → logprob: -9.437174797058105
    8. 'list' → logprob: -10.437174797058105
    9. 'lambda' → logprob: -10.437174797058105
    10. '[int' → logprob: -10.562174797058105

Token 1036: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.019689805805683136
    2. '(sys' → logprob: -4.144690036773682
    3. ',input' → logprob: -6.394690036773682
    4. '(' → logprob: -7.144690036773682
    5. 'input' → logprob: -7.144690036773682
    6. 'sys' → logprob: -8.769689559936523
    7. '=input' → logprob: -9.519689559936523
    8. ',' → logprob: -9.769689559936523
    9. ')' → logprob: -9.769689559936523
    10. ' (' → logprob: -10.519689559936523

Token 1037: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.15310683415737e-05
    2. ' input' → logprob: -10.750021934509277
    3. '
' → logprob: -18.75002098083496
    4. '(input' → logprob: -20.75002098083496
    5. ')' → logprob: -22.25002098083496
    6. ',input' → logprob: -22.50002098083496
    7. '<input' → logprob: -23.00002098083496
    8. '=input' → logprob: -23.25002098083496
    9. '	input' → logprob: -23.87502098083496
    10. '           ' → logprob: -24.00002098083496

Token 1038: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006433341186493635
    2. '('' → logprob: -7.750643253326416
    3. '()' → logprob: -8.500643730163574
    4. '('').' → logprob: -12.375643730163574
    5. '("' → logprob: -13.625643730163574
    6. '(' → logprob: -13.625643730163574
    7. '())' → logprob: -14.625643730163574
    8. '()
' → logprob: -14.750643730163574
    9. '("").' → logprob: -15.125643730163574
    10. ' ().' → logprob: -15.125643730163574

Token 1039: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.030046900734305382
    2. 'strip' → logprob: -3.5300469398498535
    3. 'rstrip' → logprob: -8.155046463012695
    4. ')' → logprob: -13.155046463012695
    5. ' split' → logprob: -13.280046463012695
    6. '().' → logprob: -13.280046463012695
    7. 'plit' → logprob: -13.530046463012695
    8. '(split' → logprob: -14.030046463012695
    9. '_split' → logprob: -14.030046463012695
    10. ' strip' → logprob: -15.155046463012695

Token 1040: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49093809723854065
    2. '())' → logprob: -0.9909380674362183
    3. '()' → logprob: -4.115938186645508
    4. '(' → logprob: -8.615938186645508
    5. '())
' → logprob: -9.115938186645508
    6. '('' → logprob: -10.115938186645508
    7. '))' → logprob: -10.740938186645508
    8. ')
' → logprob: -11.115938186645508
    9. '')' → logprob: -11.865938186645508
    10. '(','' → logprob: -11.865938186645508

Token 1041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024812091141939163
    2. 'for' → logprob: -4.0248122215271
    3. 'self' → logprob: -5.3998122215271
    4. '<|end|>' → logprob: -7.0248122215271
    5. ' for' → logprob: -7.8998122215271
    6. '	' → logprob: -8.024811744689941
    7. '
' → logprob: -8.649811744689941
    8. '   ' → logprob: -9.649811744689941
    9. '```' → logprob: -9.649811744689941
    10. ',' → logprob: -10.399811744689941

Token 1042: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023682035505771637
    2. 'self' (adapté à ' self') → logprob: -3.773682117462158
    3. '       ' → logprob: -7.773682117462158
    4. ' for' → logprob: -11.148681640625
    5. '
' → logprob: -14.398681640625
    6. '```' → logprob: -14.648681640625
    7. ' self' → logprob: -15.648681640625
    8. '        
' → logprob: -16.148681640625
    9. '[self' → logprob: -16.773681640625
    10. '	for' → logprob: -16.773681640625

Token 1043: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.00042102107545360923
    2. 'edges' → logprob: -8.000420570373535
    3. '.n' → logprob: -9.875420570373535
    4. 'for' → logprob: -11.250420570373535
    5. '.graph' → logprob: -11.750420570373535
    6. '.lines' → logprob: -12.250420570373535
    7. '.nodes' → logprob: -13.000420570373535
    8. ' edges' → logprob: -13.500420570373535
    9. 'n' → logprob: -14.125420570373535
    10. '```' → logprob: -14.375420570373535

Token 1044: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4231890141963959
    2. '.extend' → logprob: -1.9231890439987183
    3. '.append' → logprob: -2.4231889247894287
    4. '.' → logprob: -2.9231889247894287
    5. '.clear' → logprob: -3.6731889247894287
    6. ' =' → logprob: -3.7981889247894287
    7. '=[]' → logprob: -4.923189163208008
    8. '.=' → logprob: -8.173189163208008
    9. '=[]
' → logprob: -8.173189163208008
    10. '+=' → logprob: -8.423189163208008

Token 1045: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05064118653535843
    2. '[self' → logprob: -3.0506412982940674
    3. '[input' → logprob: -7.550641059875488
    4. '[int' → logprob: -7.800641059875488
    5. '[a' → logprob: -8.300641059875488
    6. '[]' → logprob: -8.675641059875488
    7. '[array' → logprob: -8.925641059875488
    8. '[class' → logprob: -9.050641059875488
    9. '[]
' → logprob: -9.175641059875488
    10. '[i' → logprob: -9.300641059875488

Token 1046: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5809106826782227
    2. '       ' → logprob: -0.8309106826782227
    3. ' for' → logprob: -5.330910682678223
    4. '	for' → logprob: -9.830910682678223
    5. '	' → logprob: -10.330910682678223
    6. '   ' → logprob: -10.455910682678223
    7. '           ' → logprob: -13.705910682678223
    8. '	   ' → logprob: -14.080910682678223
    9. '	       ' → logprob: -14.705910682678223
    10. '
' → logprob: -14.830910682678223

Token 1047: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.506661833962426e-05
    2. '       ' → logprob: -9.50008487701416
    3. ' for' → logprob: -11.50008487701416
    4. '	for' → logprob: -17.625085830688477
    5. '   ' → logprob: -18.500085830688477
    6. '```' → logprob: -18.750085830688477
    7. '
' → logprob: -20.500085830688477
    8. '	' → logprob: -21.375085830688477
    9. '           ' → logprob: -21.750085830688477
    10. '        
' → logprob: -22.125085830688477

Token 1048: '.graph' (ID: 18104)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030556678771972656
    2. ' for' → logprob: -4.405556678771973
    3. 'edges' → logprob: -5.530556678771973
    4. '.edges' → logprob: -5.655556678771973
    5. 'm' → logprob: -5.905556678771973
    6. 'def' → logprob: -6.280556678771973
    7. '.' → logprob: -6.405556678771973
    8. 'n' → logprob: -6.655556678771973
    9. '_edges' → logprob: -7.530556678771973
    10. '.for' → logprob: -7.655556678771973

Token 1049: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004170645028352737
    2. ' =' → logprob: -5.6291704177856445
    3. '.=' → logprob: -8.004170417785645
    4. '.' → logprob: -8.504170417785645
    5. '=self' → logprob: -11.004170417785645
    6. '=
' → logprob: -12.254170417785645
    7. '=None' → logprob: -12.754170417785645
    8. '=create' → logprob: -13.254170417785645
    9. '=.' → logprob: -13.504170417785645
    10. '=new' → logprob: -13.879170417785645

Token 1050: ' Graph' (ID: 15559)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.01815006136894226
    2. ' Graph' → logprob: -4.0181498527526855
    3. '(Graph' → logprob: -16.393150329589844
    4. 'Graphs' → logprob: -16.893150329589844
    5. 'graph' → logprob: -18.018150329589844
    6. '   ' → logprob: -18.268150329589844
    7. '_graph' → logprob: -18.768150329589844
    8. '.Graph' → logprob: -19.518150329589844
    9. ' ' → logprob: -20.393150329589844
    10. '```' → logprob: -20.768150329589844

Token 1051: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001725511101540178
    2. 'self' → logprob: -8.75017261505127
    3. '(' → logprob: -11.25017261505127
    4. '(
' → logprob: -14.00017261505127
    5. ' self' → logprob: -15.75017261505127
    6. ' (' → logprob: -17.750171661376953
    7. '(n' → logprob: -18.125171661376953
    8. '	self' → logprob: -18.750171661376953
    9. '
' → logprob: -19.000171661376953
    10. '=self' → logprob: -19.250171661376953

Token 1052: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.018157200887799263
    2. 'n' → logprob: -4.018157005310059
    3. '_n' → logprob: -12.268157005310059
    4. '	n' → logprob: -14.643157005310059
    5. '   ' → logprob: -14.893157005310059
    6. ',n' → logprob: -14.893157005310059
    7. '
' → logprob: -15.143157005310059
    8. 'self' → logprob: -15.143157005310059
    9. 'm' → logprob: -15.768157005310059
    10. '<n' → logprob: -16.143157958984375

Token 1053: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0619908832013607
    2. ')
' → logprob: -2.811990976333618
    3. '       ' → logprob: -11.311990737915039
    4. ')
' → logprob: -11.561990737915039
    5. '   ' → logprob: -14.811990737915039
    6. ')`
' → logprob: -15.061990737915039
    7. ' )' → logprob: -15.186990737915039
    8. ')

' → logprob: -15.311990737915039
    9. ')`' → logprob: -16.06199073791504
    10. ' )
' → logprob: -16.43699073791504

Token 1054: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033328952267766
    2. 'for' → logprob: -5.75333309173584
    3. ' for' → logprob: -9.37833309173584
    4. '   ' → logprob: -9.62833309173584
    5. '	for' → logprob: -13.25333309173584
    6. '	' → logprob: -13.50333309173584
    7. '
' → logprob: -14.50333309173584
    8. '           ' → logprob: -15.12833309173584
    9. '<|end|>' → logprob: -15.50333309173584
    10. '        
' → logprob: -15.75333309173584

Token 1055: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009331366163678467
    2. '       ' → logprob: -7.0009331703186035
    3. ' for' → logprob: -10.750932693481445
    4. '	for' → logprob: -15.750932693481445
    5. '   ' → logprob: -18.000932693481445
    6. '
' → logprob: -18.875932693481445
    7. '```' → logprob: -19.125932693481445
    8. '        
' → logprob: -19.375932693481445
    9. '	' → logprob: -20.375932693481445
    10. '           ' → logprob: -21.250932693481445

Token 1056: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00015979631280060858
    2. ' _' → logprob: -8.750160217285156
    3. '_i' → logprob: -14.125160217285156
    4. '_range' → logprob: -15.000160217285156
    5. '_
' → logprob: -16.375160217285156
    6. ' in' → logprob: -16.875160217285156
    7. '_=' → logprob: -16.875160217285156
    8. '_line' → logprob: -17.625160217285156
    9. ' range' → logprob: -17.750160217285156
    10. 'range' → logprob: -18.250160217285156

Token 1057: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012675861828029156
    2. 'in' → logprob: -4.387675762176514
    3. 'n' → logprob: -9.262676239013672
    4. '_' → logprob: -10.262676239013672
    5. ' ' → logprob: -11.387676239013672
    6. '   ' → logprob: -12.137676239013672
    7. ',' → logprob: -12.137676239013672
    8. ' _' → logprob: -12.387676239013672
    9. '  ' → logprob: -13.137676239013672
    10. '    ' → logprob: -13.512676239013672

Token 1058: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324547804892063
    2. ' range' → logprob: -3.7732455730438232
    3. '(range' → logprob: -18.398244857788086
    4. '	range' → logprob: -18.523244857788086
    5. 'self' → logprob: -18.648244857788086
    6. '   ' → logprob: -19.523244857788086
    7. '_range' → logprob: -19.648244857788086
    8. ' ' → logprob: -19.773244857788086
    9. '_' → logprob: -19.898244857788086
    10. 'in' → logprob: -20.273244857788086

Token 1059: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20578765869140625
    2. 'self' → logprob: -1.8307876586914062
    3. ' self' → logprob: -3.7057876586914062
    4. '(' → logprob: -7.330787658691406
    5. '   ' → logprob: -9.205787658691406
    6. 'range' → logprob: -9.455787658691406
    7. 's' → logprob: -9.705787658691406
    8. '0' → logprob: -9.705787658691406
    9. '	self' → logprob: -9.705787658691406
    10. ' range' → logprob: -9.830787658691406

Token 1060: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0015417613321915269
    2. 'm' → logprob: -6.626541614532471
    3. '	m' → logprob: -9.626542091369629
    4. '.' → logprob: -10.376542091369629
    5. '   ' → logprob: -10.376542091369629
    6. ')' → logprob: -10.501542091369629
    7. ' .' → logprob: -10.751542091369629
    8. ' m' → logprob: -10.876542091369629
    9. '_m' → logprob: -12.001542091369629
    10. ')m' → logprob: -13.001542091369629

Token 1061: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5234442353248596
    2. '):' → logprob: -0.8984442353248596
    3. '):
' → logprob: -9.023444175720215
    4. ':' → logprob: -9.773444175720215
    5. '   ' → logprob: -9.898444175720215
    6. ' ):
' → logprob: -11.273444175720215
    7. '       ' → logprob: -11.398444175720215
    8. ' ):' → logprob: -11.398444175720215
    9. '():
' → logprob: -11.398444175720215
    10. '+' → logprob: -11.648444175720215

Token 1062: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5989522933959961
    2. ' line' → logprob: -1.348952293395996
    3. '       ' → logprob: -1.723952293395996
    4. ' u' → logprob: -5.598952293395996
    5. 'u' → logprob: -5.973952293395996
    6. '(u' → logprob: -6.473952293395996
    7. 'line' → logprob: -6.723952293395996
    8. '   ' → logprob: -6.848952293395996
    9. ' data' → logprob: -7.973952293395996
    10. ',' → logprob: -7.973952293395996

Token 1063: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.006529565434902906
    2. 'a' (adapté à ' a') → logprob: -5.256529331207275
    3. 'line' → logprob: -7.006529331207275
    4. ' u' → logprob: -8.006529808044434
    5. ' line' → logprob: -10.131529808044434
    6. '           ' → logprob: -11.631529808044434
    7. '   ' → logprob: -12.881529808044434
    8. '	u' → logprob: -13.756529808044434
    9. '       ' → logprob: -13.881529808044434
    10. 'parts' → logprob: -14.756529808044434

Token 1064: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00872199796140194
    2. ',b' → logprob: -5.008721828460693
    3. ' ,' → logprob: -6.258721828460693
    4. 'b' → logprob: -9.633722305297852
    5. ',v' → logprob: -11.008722305297852
    6. ' b' → logprob: -13.508722305297852
    7. ',p' → logprob: -13.758722305297852
    8. ',
' → logprob: -13.758722305297852
    9. '_,' → logprob: -14.383722305297852
    10. ',int' → logprob: -14.508722305297852

Token 1065: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031777136027812958
    2. ' b' → logprob: -5.753177642822266
    3. ',b' → logprob: -20.878177642822266
    4. '>b' → logprob: -21.628177642822266
    5. '	b' → logprob: -21.753177642822266
    6. '=b' → logprob: -22.253177642822266
    7. '    ' → logprob: -22.503177642822266
    8. ' ' → logprob: -22.503177642822266
    9. '   ' → logprob: -22.503177642822266
    10. '=' → logprob: -22.753177642822266

Token 1066: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003577495808713138
    2. ' ,' → logprob: -8.500357627868652
    3. '=' → logprob: -9.125357627868652
    4. '<|end|>' → logprob: -10.875357627868652
    5. ' =' → logprob: -11.125357627868652
    6. ',c' → logprob: -13.000357627868652
    7. '<|end|>' → logprob: -13.375357627868652
    8. 'c' → logprob: -14.125357627868652
    9. ',b' → logprob: -14.375357627868652
    10. ',
' → logprob: -14.500357627868652

Token 1067: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01815006136894226
    2. ' c' → logprob: -4.0181498527526855
    3. 'w' → logprob: -16.018150329589844
    4. '	c' → logprob: -18.268150329589844
    5. ' ' → logprob: -18.643150329589844
    6. 'int' → logprob: -19.518150329589844
    7. ',c' → logprob: -19.643150329589844
    8. ' w' → logprob: -20.018150329589844
    9. '_c' → logprob: -20.143150329589844
    10. '  ' → logprob: -20.143150329589844

Token 1068: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20160581171512604
    2. ' =' → logprob: -1.7016057968139648
    3. ',' → logprob: -8.576605796813965
    4. '=input' → logprob: -13.076605796813965
    5. '=line' → logprob: -13.576605796813965
    6. ')' → logprob: -15.451605796813965
    7. ' ' → logprob: -16.45160675048828
    8. ')=' → logprob: -16.70160675048828
    9. ' ,' → logprob: -16.95160675048828
    10. '=int' → logprob: -17.20160675048828

Token 1069: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03804194927215576
    2. 'map' → logprob: -3.2880420684814453
    3. '	map' → logprob: -14.663042068481445
    4. ' list' → logprob: -17.163042068481445
    5. '(map' → logprob: -17.913042068481445
    6. '_map' → logprob: -18.038042068481445
    7. ' mapa' → logprob: -18.288042068481445
    8. 'list' → logprob: -18.538042068481445
    9. '.map' → logprob: -18.913042068481445
    10. ',map' → logprob: -19.038042068481445

Token 1070: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014165511354804039
    2. 'int' → logprob: -4.26416540145874
    3. '[int' → logprob: -14.014165878295898
    4. ' int' → logprob: -14.889165878295898
    5. '=int' → logprob: -15.014165878295898
    6. '<int' → logprob: -15.764165878295898
    7. '(' → logprob: -16.5141658782959
    8. ',int' → logprob: -16.5141658782959
    9. '(
' → logprob: -17.0141658782959
    10. '(str' → logprob: -17.1391658782959

Token 1071: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9660264849662781
    2. '(input' → logprob: -1.2160265445709229
    3. ',input' → logprob: -1.2160265445709229
    4. 'input' → logprob: -3.966026544570923
    5. '(sys' → logprob: -5.466026306152344
    6. '(' → logprob: -6.341026306152344
    7. 'sys' → logprob: -7.841026306152344
    8. ' input' → logprob: -8.216026306152344
    9. ')' → logprob: -8.591026306152344
    10. '(),' → logprob: -8.841026306152344

Token 1072: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.000452241423772648
    2. ' input' → logprob: -7.750452041625977
    3. 'sys' → logprob: -10.750452041625977
    4. ' sys' → logprob: -17.625452041625977
    5. '=input' → logprob: -18.625452041625977
    6. '(input' → logprob: -18.875452041625977
    7. '_input' → logprob: -19.125452041625977
    8. '<input' → logprob: -19.250452041625977
    9. '	input' → logprob: -19.875452041625977
    10. ',input' → logprob: -20.000452041625977

Token 1073: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014942926645744592
    2. '()' → logprob: -8.875149726867676
    3. '())' → logprob: -12.000149726867676
    4. '()
' → logprob: -13.125149726867676
    5. ')' → logprob: -14.750149726867676
    6. '()[' → logprob: -14.750149726867676
    7. '.readline' → logprob: -15.875149726867676
    8. ' ().' → logprob: -15.875149726867676
    9. '('').' → logprob: -16.62514877319336
    10. '(' → logprob: -16.87514877319336

Token 1074: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003238555509597063
    2. 'strip' → logprob: -6.003238677978516
    3. 'rstrip' → logprob: -7.253238677978516
    4. 'read' → logprob: -9.878238677978516
    5. ' split' → logprob: -13.628238677978516
    6. '(split' → logprob: -13.878238677978516
    7. 'decode' → logprob: -15.628238677978516
    8. 'plit' → logprob: -15.878238677978516
    9. '.readline' → logprob: -15.878238677978516
    10. '().' → logprob: -16.003238677978516

Token 1075: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21092480421066284
    2. '())' → logprob: -2.2109248638153076
    3. ')
' → logprob: -2.9609248638153076
    4. '())
' → logprob: -3.5859248638153076
    5. '()' → logprob: -7.0859246253967285
    6. '       ' → logprob: -8.710925102233887
    7. '(' → logprob: -10.835925102233887
    8. '           ' → logprob: -10.960925102233887
    9. '()
' → logprob: -11.335925102233887
    10. ')`
' → logprob: -11.710925102233887

Token 1076: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030733743915334344
    2. '       ' → logprob: -8.375307083129883
    3. '   ' → logprob: -10.500307083129883
    4. 'self' → logprob: -10.750307083129883
    5. '<|end|>' → logprob: -11.875307083129883
    6. '	       ' → logprob: -12.000307083129883
    7. '               ' → logprob: -13.000307083129883
    8. '		' → logprob: -13.250307083129883
    9. '            
' → logprob: -13.250307083129883
    10. ' self' → logprob: -13.250307083129883

Token 1077: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007096354383975267
    2. ' self' → logprob: -5.007096290588379
    3. '           ' → logprob: -7.882096290588379
    4. '            
' → logprob: -13.882096290588379
    5. '	self' → logprob: -13.882096290588379
    6. '
' → logprob: -14.132096290588379
    7. '   ' → logprob: -14.382096290588379
    8. '               ' → logprob: -16.007097244262695
    9. '       ' → logprob: -16.257097244262695
    10. '		' → logprob: -17.507097244262695

Token 1078: '.edges' (ID: 102481)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.1274527609348297
    2. 'graph' → logprob: -2.127452850341797
    3. '.edges' → logprob: -7.752452850341797
    4. 'edges' → logprob: -9.377452850341797
    5. '	graph' → logprob: -12.377452850341797
    6. ' graph' → logprob: -12.752452850341797
    7. '.' → logprob: -13.752452850341797
    8. '_graph' → logprob: -14.252452850341797
    9. '
' → logprob: -14.877452850341797
    10. '(graph' → logprob: -15.752452850341797

Token 1079: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005272957496345043
    2. '.' → logprob: -7.625527381896973
    3. '.app' → logprob: -11.250527381896973
    4. '           ' → logprob: -11.625527381896973
    5. ' .' → logprob: -12.500527381896973
    6. '       ' → logprob: -12.875527381896973
    7. '.extend' → logprob: -13.250527381896973
    8. '[' → logprob: -13.500527381896973
    9. '.py' → logprob: -13.875527381896973
    10. '```' → logprob: -14.125527381896973

Token 1080: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4741569459438324
    2. '((' → logprob: -0.9741569757461548
    3. '(' → logprob: -9.974157333374023
    4. ' (' → logprob: -10.349157333374023
    5. '   ' → logprob: -14.474157333374023
    6. '(A' → logprob: -14.724157333374023
    7. '(
' → logprob: -15.099157333374023
    8. '(an' → logprob: -17.349157333374023
    9. '[(' → logprob: -17.849157333374023
    10. '```' → logprob: -17.974157333374023

Token 1081: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.704273118884885e-07
    2. ' a' → logprob: -14.375000953674316
    3. ')a' → logprob: -19.5
    4. '	a' → logprob: -20.375
    5. ',a' → logprob: -22.125
    6. '(a' → logprob: -22.125
    7. '   ' → logprob: -22.125
    8. '#a' → logprob: -22.25
    9. ''a' → logprob: -22.875
    10. '>a' → logprob: -23.25

Token 1082: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017319408943876624
    2. ',b' → logprob: -6.751731872558594
    3. ' ,' → logprob: -7.501731872558594
    4. ',
' → logprob: -11.751731872558594
    5. 'b' → logprob: -14.001731872558594
    6. '
' → logprob: -15.751731872558594
    7. '```' → logprob: -15.751731872558594
    8. ' ' → logprob: -15.876731872558594
    9. '<|end|>' → logprob: -16.751731872558594
    10. '‌,' → logprob: -16.876731872558594

Token 1083: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007099286303855479
    2. ' b' → logprob: -7.2507100105285645
    3. ')b' → logprob: -20.750709533691406
    4. '	b' → logprob: -22.125709533691406
    5. ',b' → logprob: -22.875709533691406
    6. '
' → logprob: -23.750709533691406
    7. ' ' → logprob: -23.875709533691406
    8. '>b' → logprob: -24.250709533691406
    9. ')' → logprob: -24.375709533691406
    10. '<|end|>' → logprob: -24.500709533691406

Token 1084: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011152983643114567
    2. ',c' → logprob: -9.75011157989502
    3. ' ,' → logprob: -10.00011157989502
    4. '),' → logprob: -13.00011157989502
    5. ',
' → logprob: -13.25011157989502
    6. '```' → logprob: -14.12511157989502
    7. ')' → logprob: -14.25011157989502
    8. '<|end|>' → logprob: -14.37511157989502
    9. '`,' → logprob: -14.75011157989502
    10. 'c' → logprob: -14.87511157989502

Token 1085: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009115827269852161
    2. ' c' → logprob: -7.000911712646484
    3. ')c' → logprob: -16.750911712646484
    4. '
' → logprob: -18.625911712646484
    5. '	c' → logprob: -18.625911712646484
    6. '   ' → logprob: -19.750911712646484
    7. ' ' → logprob: -20.625911712646484
    8. '$c' → logprob: -20.875911712646484
    9. '    ' → logprob: -20.875911712646484
    10. '  ' → logprob: -21.000911712646484

Token 1086: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014018110930919647
    2. ',' → logprob: -5.0140180587768555
    3. '))
' → logprob: -5.0140180587768555
    4. ' ))' → logprob: -8.264018058776855
    5. '           ' → logprob: -8.514018058776855
    6. ')' → logprob: -9.014018058776855
    7. '               ' → logprob: -11.264018058776855
    8. '       ' → logprob: -12.014018058776855
    9. ' ,' → logprob: -12.014018058776855
    10. ',))
' → logprob: -12.389018058776855

Token 1087: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000182921823579818
    2. '       ' → logprob: -9.00018310546875
    3. 'self' → logprob: -10.12518310546875
    4. '   ' → logprob: -11.12518310546875
    5. '```' → logprob: -13.50018310546875
    6. ' self' → logprob: -13.87518310546875
    7. '	       ' → logprob: -14.50018310546875
    8. '
' → logprob: -15.00018310546875
    9. '               ' → logprob: -15.12518310546875
    10. '<|end|>' → logprob: -15.25018310546875

Token 1088: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015104549238458276
    2. ' self' → logprob: -6.5015106201171875
    3. '           ' → logprob: -11.751510620117188
    4. '       ' → logprob: -16.751510620117188
    5. '	self' → logprob: -16.876510620117188
    6. '
' → logprob: -17.251510620117188
    7. '```' → logprob: -17.376510620117188
    8. '   ' → logprob: -18.001510620117188
    9. '            
' → logprob: -18.251510620117188
    10. '(self' → logprob: -19.376510620117188

Token 1089: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.023253049701452255
    2. 'graph' → logprob: -3.7732529640197754
    3. '	graph' → logprob: -12.273253440856934
    4. '.' → logprob: -14.023253440856934
    5. '.edges' → logprob: -14.648253440856934
    6. ' graph' → logprob: -14.648253440856934
    7. '_graph' → logprob: -15.273253440856934
    8. '(graph' → logprob: -15.648253440856934
    9. '
' → logprob: -15.898253440856934
    10. '```' → logprob: -16.023252487182617

Token 1090: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.3451433409936726e-05
    2. '.ad' → logprob: -10.875033378601074
    3. '.' → logprob: -11.250033378601074
    4. '.import' → logprob: -14.500033378601074
    5. '.append' → logprob: -14.750033378601074
    6. 'add' → logprob: -16.37503433227539
    7. ').' → logprob: -16.50003433227539
    8. '   ' → logprob: -17.00003433227539
    9. ' .' → logprob: -17.00003433227539
    10. '.py' → logprob: -17.62503433227539

Token 1091: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.9361264946837764e-07
    2. 'edge' → logprob: -16.375
    3. '_edges' → logprob: -18.5
    4. '_' → logprob: -18.875
    5. ' edge' → logprob: -19.625
    6. '_EDGE' → logprob: -19.75
    7. '_ed' → logprob: -20.0
    8. '_node' → logprob: -20.0
    9. '(edge' → logprob: -20.25
    10. '_vertex' → logprob: -20.875

Token 1092: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.515961285913363e-05
    2. '(' → logprob: -10.000064849853516
    3. 'a' → logprob: -11.250064849853516
    4. '(u' → logprob: -12.375064849853516
    5. '(
' → logprob: -13.250064849853516
    6. ' (' → logprob: -14.500064849853516
    7. '((' → logprob: -16.125064849853516
    8. ' a' → logprob: -17.875064849853516
    9. '[a' → logprob: -18.500064849853516
    10. '   ' → logprob: -18.500064849853516

Token 1093: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016133375465869904
    2. ',b' → logprob: -4.2661333084106445
    3. ' ,' → logprob: -6.2661333084106445
    4. 'b' → logprob: -9.766133308410645
    5. ')' → logprob: -12.516133308410645
    6. ',
' → logprob: -13.266133308410645
    7. ' b' → logprob: -13.391133308410645
    8. ',a' → logprob: -13.891133308410645
    9. '<|end|>' → logprob: -14.266133308410645
    10. '```' → logprob: -14.391133308410645

Token 1094: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. ')b' → logprob: -19.75020408630371
    4. '	b' → logprob: -21.12520408630371
    5. ' ' → logprob: -22.00020408630371
    6. '>b' → logprob: -22.37520408630371
    7. '   ' → logprob: -22.50020408630371
    8. '<|end|>' → logprob: -22.62520408630371
    9. '    ' → logprob: -23.00020408630371
    10. ' б' → logprob: -23.75020408630371

Token 1095: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011405241675674915
    2. ' ,' → logprob: -5.1364054679870605
    3. ',c' → logprob: -5.2614054679870605
    4. 'c' → logprob: -8.261404991149902
    5. ' c' → logprob: -12.011404991149902
    6. ')' → logprob: -12.761404991149902
    7. '           ' → logprob: -13.261404991149902
    8. '```' → logprob: -14.136404991149902
    9. ',
' → logprob: -14.386404991149902
    10. '
' → logprob: -14.511404991149902

Token 1096: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015024791937321424
    2. ' c' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.376502990722656
    4. '	c' → logprob: -17.001502990722656
    5. '           ' → logprob: -17.126502990722656
    6. ')c' → logprob: -17.126502990722656
    7. '       ' → logprob: -18.376502990722656
    8. '$c' → logprob: -19.126502990722656
    9. '```' → logprob: -19.126502990722656
    10. '               ' → logprob: -19.251502990722656

Token 1097: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006000844296067953
    2. ',i' → logprob: -5.506000995635986
    3. ' ,' → logprob: -6.256000995635986
    4. 'i' → logprob: -14.131000518798828
    5. '   ' → logprob: -15.381000518798828
    6. '           ' → logprob: -15.381000518798828
    7. ',
' → logprob: -15.631000518798828
    8. ' i' → logprob: -16.006000518798828
    9. ')' → logprob: -16.131000518798828
    10. ' ' → logprob: -17.131000518798828

Token 1098: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.676292231422849e-05
    2. ' i' → logprob: -11.000017166137695
    3. '	i' → logprob: -19.875017166137695
    4. '   ' → logprob: -20.625017166137695
    5. '           ' → logprob: -22.625017166137695
    6. ')i' → logprob: -22.750017166137695
    7. '```' → logprob: -23.875017166137695
    8. '    ' → logprob: -23.875017166137695
    9. '=i' → logprob: -24.375017166137695
    10. '
' → logprob: -24.625017166137695

Token 1099: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4987974029500037e-05
    2. ')
' → logprob: -10.625024795532227
    3. ' )' → logprob: -14.750024795532227
    4. '       ' → logprob: -15.375024795532227
    5. '))' → logprob: -18.000024795532227
    6. '   ' → logprob: -18.250024795532227
    7. '           ' → logprob: -18.375024795532227
    8. ')
' → logprob: -18.500024795532227
    9. ')

' → logprob: -18.875024795532227
    10. ')`' → logprob: -19.125024795532227

Token 1100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '0' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '```' → logprob: -20.000001907348633
    6. ')' → logprob: -20.375001907348633
    7. '+' → logprob: -20.500001907348633
    8. '=' → logprob: -20.875001907348633
    9. '	' → logprob: -21.375001907348633
    10. '2' → logprob: -21.500001907348633

Token 1101: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.870950215263292e-05
    2. ')
' → logprob: -10.000048637390137
    3. ' )' → logprob: -13.125048637390137
    4. '       ' → logprob: -14.125048637390137
    5. '           ' → logprob: -16.000049591064453
    6. '<|end|>' → logprob: -16.250049591064453
    7. '))' → logprob: -16.500049591064453
    8. ')

' → logprob: -17.125049591064453
    9. ')return' → logprob: -17.375049591064453
    10. ')
' → logprob: -17.750049591064453

Token 1102: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1103: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003810049733147025
    2. '
' → logprob: -6.503809928894043
    3. '   ' → logprob: -6.503809928894043
    4. ' def' → logprob: -7.128809928894043
    5. '	def' → logprob: -13.003809928894043
    6. '    
' → logprob: -13.628809928894043
    7. '```' → logprob: -13.753809928894043
    8. '

' → logprob: -14.378809928894043
    9. '        
' → logprob: -15.628809928894043
    10. '       ' → logprob: -16.75381088256836

Token 1104: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.006968974601477385
    2. ' run' → logprob: -5.006968975067139
    3. 'solve' → logprob: -8.38196849822998
    4. 'prepare' → logprob: -11.75696849822998
    5. 'compute' → logprob: -11.75696849822998
    6. 'process' → logprob: -12.38196849822998
    7. ' solve' → logprob: -13.13196849822998
    8. 'perform' → logprob: -13.63196849822998
    9. 'main' → logprob: -14.63196849822998
    10. 'execute' → logprob: -15.00696849822998

Token 1105: '(self' (ID: 2402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.70171719789505
    2. '(self' → logprob: -0.82671719789505
    3. '(' → logprob: -2.8267171382904053
    4. '_(' → logprob: -5.451717376708984
    5. 'self' → logprob: -6.826717376708984
    6. '(
' → logprob: -7.076717376708984
    7. '   ' → logprob: -7.076717376708984
    8. '()' → logprob: -8.201717376708984
    9. '_self' → logprob: -9.451717376708984
    10. '_
' → logprob: -10.076717376708984

Token 1106: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.76763516664505
    2. ')_' → logprob: -1.0176351070404053
    3. '):' → logprob: -2.8926351070404053
    4. '):
' → logprob: -3.0176351070404053
    5. '_' → logprob: -3.2676351070404053
    6. '(self' → logprob: -4.642635345458984
    7. ')(' → logprob: -4.767635345458984
    8. 'self' → logprob: -5.392635345458984
    9. ')(_' → logprob: -6.392635345458984
    10. ')(
' → logprob: -6.642635345458984

Token 1107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016018638852983713
    2. 'self' → logprob: -6.626601696014404
    3. '   ' → logprob: -8.626602172851562
    4. '(self' → logprob: -10.126602172851562
    5. '
' → logprob: -10.876602172851562
    6. '```' → logprob: -11.376602172851562
    7. '(' → logprob: -12.001602172851562
    8. '()' → logprob: -12.251602172851562
    9. '        
' → logprob: -12.251602172851562
    10. 'def' → logprob: -13.001602172851562

Token 1108: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03811688721179962
    2. '       ' → logprob: -3.288116931915283
    3. '
' → logprob: -9.913116455078125
    4. ' self' → logprob: -11.038116455078125
    5. '#' (adapté à ' #') → logprob: -12.288116455078125
    6. '   ' → logprob: -12.788116455078125
    7. '(self' → logprob: -14.413116455078125
    8. 'input' → logprob: -14.538116455078125
    9. 'sp' → logprob: -14.663116455078125
    10. '```' → logprob: -15.038116455078125

Token 1109: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005978313274681568
    2. '       ' → logprob: -7.625597953796387
    3. ' self' → logprob: -9.625597953796387
    4. '
' → logprob: -11.000597953796387
    5. '   ' → logprob: -11.125597953796387
    6. 'def' → logprob: -12.125597953796387
    7. '#' → logprob: -12.625597953796387
    8. 'sp' → logprob: -13.250597953796387
    9. '```' → logprob: -14.000597953796387
    10. 'graph' → logprob: -14.375597953796387

Token 1110: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018916653469204903
    2. 'sp' → logprob: -4.018916606903076
    3. '       ' → logprob: -8.393917083740234
    4. '#' → logprob: -8.643917083740234
    5. 'def' → logprob: -8.643917083740234
    6. '   ' → logprob: -9.143917083740234
    7. '
' → logprob: -10.268917083740234
    8. ' self' → logprob: -10.768917083740234
    9. 'spf' → logprob: -12.143917083740234
    10. 'e' → logprob: -12.768917083740234

Token 1111: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.305595874786377
    2. '       ' → logprob: -1.555595874786377
    3. 'def' → logprob: -1.680595874786377
    4. 'self' → logprob: -2.305595874786377
    5. '=' → logprob: -2.680595874786377
    6. '   ' → logprob: -2.680595874786377
    7. '.' → logprob: -3.180595874786377
    8. ' self' → logprob: -4.305595874786377
    9. ' def' → logprob: -5.055595874786377
    10. '()' → logprob: -5.180595874786377

Token 1112: ' compute' (ID: 23864)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005013040266931057
    2. ' self' → logprob: -5.6300129890441895
    3. 'sp' → logprob: -7.2550129890441895
    4. '       ' → logprob: -7.3800129890441895
    5. '#' → logprob: -10.630013465881348
    6. '
' → logprob: -11.005013465881348
    7. '   ' → logprob: -11.255013465881348
    8. 'e' → logprob: -12.130013465881348
    9. 'Compute' → logprob: -12.380013465881348
    10. ' ' → logprob: -13.005013465881348

Token 1113: ' shortest' (ID: 70564)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3022729456424713
    2. '       ' → logprob: -1.427272915840149
    3. ' self' → logprob: -4.552272796630859
    4. '()
' → logprob: -5.427272796630859
    5. '()' → logprob: -5.677272796630859
    6. '(self' → logprob: -7.052272796630859
    7. '
' → logprob: -7.177272796630859
    8. '   ' → logprob: -7.302272796630859
    9. '        
' → logprob: -9.55227279663086
    10. '```' → logprob: -10.17727279663086

Token 1114: ' paths' (ID: 23373)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.03878279775381088
    2. '_paths' → logprob: -3.413782835006714
    3. '_from' → logprob: -5.413782596588135
    4. '_' → logprob: -8.163783073425293
    5. 'from' → logprob: -8.413783073425293
    6. '_dist' → logprob: -9.413783073425293
    7. '_p' → logprob: -10.538783073425293
    8. 'path' → logprob: -10.663783073425293
    9. 'paths' → logprob: -12.413783073425293
    10. '_to' → logprob: -12.663783073425293

Token 1115: ' for' (ID: 395)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6387129426002502
    2. '()' → logprob: -0.8887129426002502
    3. '       ' → logprob: -2.8887128829956055
    4. '(' → logprob: -6.1387128829956055
    5. 'from' → logprob: -6.2637128829956055
    6. 'self' → logprob: -8.263712882995605
    7. '
' → logprob: -8.638712882995605
    8. '()
' → logprob: -8.888712882995605
    9. '()

' → logprob: -9.388712882995605
    10. '        
' → logprob: -9.388712882995605

Token 1116: ' original' (ID: 4756)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09522832930088043
    2. 'start' → logprob: -2.970228433609009
    3. 'self' → logprob: -3.720228433609009
    4. '(' → logprob: -4.34522819519043
    5. 'all' → logprob: -6.84522819519043
    6. 'both' → logprob: -7.47022819519043
    7. ' ' → logprob: -8.97022819519043
    8. '(self' → logprob: -9.09522819519043
    9. '```' → logprob: -9.47022819519043
    10. '   ' → logprob: -9.59522819519043

Token 1117: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.19439101219177246
    2. '       ' → logprob: -2.1943910121917725
    3. 'self' → logprob: -3.3193910121917725
    4. ' graph' → logprob: -4.319391250610352
    5. '
' → logprob: -5.944391250610352
    6. '```' → logprob: -5.944391250610352
    7. '_graph' → logprob: -6.069391250610352
    8. '()
' → logprob: -6.319391250610352
    9. 'graphs' → logprob: -6.319391250610352
    10. '   ' → logprob: -6.569391250610352

Token 1118: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.137080579996109
    2. '
' → logprob: -2.512080669403076
    3. '()
' → logprob: -3.262080669403076
    4. '()' → logprob: -5.512080669403076
    5. 'self' → logprob: -5.887080669403076
    6. '        
' → logprob: -6.887080669403076
    7. '(self' → logprob: -8.012080192565918
    8. ',' → logprob: -8.637080192565918
    9. '(' → logprob: -9.137080192565918
    10. '  
' → logprob: -10.387080192565918

Token 1119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009026461048051715
    2. '
' → logprob: -7.2509026527404785
    3. 'self' → logprob: -8.62590217590332
    4. '```' → logprob: -12.50090217590332
    5. '        
' → logprob: -12.75090217590332
    6. ',' → logprob: -13.12590217590332
    7. ' self' → logprob: -13.62590217590332
    8. '      ' → logprob: -14.00090217590332
    9. '           ' → logprob: -14.25090217590332
    10. '   ' → logprob: -14.50090217590332

Token 1120: ' sp' (ID: 1014)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' (adapté à ' sp') → logprob: -0.11185499280691147
    2. '       ' → logprob: -2.3618550300598145
    3. 'self' → logprob: -4.7368550300598145
    4. ' sp' → logprob: -5.9868550300598145
    5. 'spf' → logprob: -8.986854553222656
    6. ' self' → logprob: -9.236854553222656
    7. '   ' → logprob: -9.736854553222656
    8. 'graph' → logprob: -12.486854553222656
    9. '```' → logprob: -12.986854553222656
    10. '	sp' → logprob: -12.986854553222656

Token 1121: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.0007247024914249778
    2. '_f' → logprob: -7.250724792480469
    3. 'f' → logprob: -12.125724792480469
    4. 'find' → logprob: -12.375724792480469
    5. ' =' → logprob: -13.750724792480469
    6. '_' → logprob: -13.875724792480469
    7. 'found' → logprob: -14.250724792480469
    8. 'fi' → logprob: -14.500724792480469
    9. ' finder' → logprob: -14.625724792480469
    10. '=' → logprob: -15.250724792480469

Token 1122: ' =' (ID: 314)
  Prédit: '.compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.681770384311676
    2. '.' → logprob: -1.1817703247070312
    3. ' =' → logprob: -1.8067703247070312
    4. '=' → logprob: -3.8067703247070312
    5. '.=' → logprob: -7.306770324707031
    6. '.run' → logprob: -8.806770324707031
    7. '=.' → logprob: -9.806770324707031
    8. ' .' → logprob: -9.806770324707031
    9. '.calculate' → logprob: -10.306770324707031
    10. '   ' → logprob: -10.431770324707031

Token 1123: ' Short' (ID: 15362)
  Prédit: 'Shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Shortest' → logprob: -0.0002670575922820717
    2. ' Short' → logprob: -8.250267028808594
    3. 'Short' → logprob: -12.125267028808594
    4. ' shortest' → logprob: -15.000267028808594
    5. 'Shortcut' → logprob: -17.375267028808594
    6. '   ' → logprob: -18.875267028808594
    7. 'short' → logprob: -18.875267028808594
    8. 'Closest' → logprob: -19.250267028808594
    9. '.Short' → logprob: -19.875267028808594
    10. 'Shot' → logprob: -20.000267028808594

Token 1124: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.04104107245802879
    2. 'Path' → logprob: -3.541041135787964
    3. 'path' → logprob: -4.541040897369385
    4. '_path' → logprob: -7.541040897369385
    5. 'er' → logprob: -11.166041374206543
    6. 'ter' → logprob: -12.166041374206543
    7. 'ert' → logprob: -12.791041374206543
    8. 'test' → logprob: -13.416041374206543
    9. 'ester' → logprob: -13.541041374206543
    10. 'spath' → logprob: -13.791041374206543

Token 1125: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -1.3544423381972592e-05
    2. 'path' → logprob: -11.25001335144043
    3. '_path' → logprob: -15.75001335144043
    4. ' Path' → logprob: -16.12501335144043
    5. 'PATH' → logprob: -16.87501335144043
    6. 'Paths' → logprob: -17.00001335144043
    7. 'Point' → logprob: -17.37501335144043
    8. '	Path' → logprob: -18.62501335144043
    9. '```' → logprob: -18.62501335144043
    10. 'P' → logprob: -18.75001335144043

Token 1126: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -5.860340752406046e-05
    2. 'finder' → logprob: -9.7500581741333
    3. ' Finder' → logprob: -15.7500581741333
    4. ' finder' → logprob: -15.8750581741333
    5. 'F' → logprob: -17.500059127807617
    6. 'Fetcher' → logprob: -18.375059127807617
    7. 'Find' → logprob: -18.750059127807617
    8. '   ' → logprob: -18.750059127807617
    9. 'Getter' → logprob: -19.625059127807617
    10. '(' → logprob: -19.875059127807617

Token 1127: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.3458322731312364e-06
    2. 'self' → logprob: -12.250007629394531
    3. '(' → logprob: -13.125007629394531
    4. '(
' → logprob: -14.875007629394531
    5. '(graph' → logprob: -15.875007629394531
    6. '(Graph' → logprob: -17.00000762939453
    7. '       ' → logprob: -17.75000762939453
    8. ' (' → logprob: -18.25000762939453
    9. ' self' → logprob: -18.87500762939453
    10. 'graph' → logprob: -19.00000762939453

Token 1128: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -3.2020991056924686e-05
    2. 'graph' → logprob: -10.375032424926758
    3. '.' → logprob: -15.000032424926758
    4. '	graph' → logprob: -15.375032424926758
    5. '(graph' → logprob: -15.625032424926758
    6. ' .' → logprob: -16.375032424926758
    7. ' graph' → logprob: -17.375032424926758
    8. ',' → logprob: -17.625032424926758
    9. 'Graph' → logprob: -18.875032424926758
    10. '.Graph' → logprob: -19.375032424926758

Token 1129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16084739565849304
    2. ')
' → logprob: -1.9108474254608154
    3. '       ' → logprob: -7.410847187042236
    4. ')
' → logprob: -11.410847663879395
    5. ').' → logprob: -12.660847663879395
    6. '   ' → logprob: -13.535847663879395
    7. ' )' → logprob: -14.285847663879395
    8. ' )
' → logprob: -15.035847663879395
    9. '),' → logprob: -15.160847663879395
    10. '
' → logprob: -15.160847663879395

Token 1130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015790171455591917
    2. 'sp' → logprob: -6.5015788078308105
    3. ' sp' → logprob: -10.376579284667969
    4. '
' → logprob: -11.126579284667969
    5. '.sp' → logprob: -11.376579284667969
    6. '   ' → logprob: -12.126579284667969
    7. '        
' → logprob: -12.876579284667969
    8. '```' → logprob: -13.251579284667969
    9. '           ' → logprob: -13.376579284667969
    10. '(sp' → logprob: -13.501579284667969

Token 1131: ' sp' (ID: 1014)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' (adapté à ' sp') → logprob: -0.007660465780645609
    2. '       ' → logprob: -4.882660388946533
    3. ' sp' → logprob: -9.882660865783691
    4. '   ' → logprob: -13.382660865783691
    5. '	sp' → logprob: -14.757660865783691
    6. '
' → logprob: -14.882660865783691
    7. '.sp' → logprob: -15.257660865783691
    8. '        
' → logprob: -15.507660865783691
    9. '```' → logprob: -16.132659912109375
    10. 'self' → logprob: -16.257659912109375

Token 1132: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -1.0087516784551553e-05
    2. ' =' → logprob: -12.87501049041748
    3. 'find' → logprob: -13.62501049041748
    4. 'f' → logprob: -13.75001049041748
    5. '.find' → logprob: -14.25001049041748
    6. 'fi' → logprob: -14.37501049041748
    7. '=' → logprob: -14.37501049041748
    8. '   ' → logprob: -14.62501049041748
    9. 'fin' → logprob: -14.87501049041748
    10. 'inder' → logprob: -15.00001049041748

Token 1133: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -8.537868779967539e-06
    2. '.' → logprob: -11.750008583068848
    3. ' .' → logprob: -16.00000762939453
    4. ').' → logprob: -16.25000762939453
    5. '.calculate' → logprob: -16.37500762939453
    6. 'compute' → logprob: -16.62500762939453
    7. '   ' → logprob: -17.00000762939453
    8. '.run' → logprob: -17.62500762939453
    9. '.execute' → logprob: -17.75000762939453
    10. '.perform' → logprob: -17.87500762939453

Token 1134: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43035510182380676
    2. '       ' → logprob: -1.0553550720214844
    3. '        
' → logprob: -6.930355072021484
    4. '<|end|>' → logprob: -7.555355072021484
    5. '  
' → logprob: -10.555355072021484
    6. '   ' → logprob: -10.680355072021484
    7. '<|end|>' → logprob: -11.055355072021484
    8. '
' → logprob: -11.180355072021484
    9. '#' → logprob: -11.430355072021484
    10. ',' → logprob: -11.805355072021484

Token 1135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010192327899858356
    2. '
' → logprob: -7.12601900100708
    3. 'e' → logprob: -9.251019477844238
    4. '   ' → logprob: -9.751019477844238
    5. 'evalu' → logprob: -11.001019477844238
    6. '```' → logprob: -11.126019477844238
    7. '        
' → logprob: -11.501019477844238
    8. ' evaluator' → logprob: -12.876019477844238
    9. 'experiment' → logprob: -13.001019477844238
    10. 'eval' → logprob: -13.001019477844238

Token 1136: ' evaluator' (ID: 153499)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09126926213502884
    2. 'eval' → logprob: -2.8412692546844482
    3. ' evaluator' → logprob: -4.216269493103027
    4. '       ' → logprob: -5.216269493103027
    5. 'evalu' → logprob: -5.216269493103027
    6. 'ev' → logprob: -6.466269493103027
    7. 'ee' → logprob: -6.841269493103027
    8. 'eva' → logprob: -8.716269493103027
    9. 'eve' → logprob: -9.341269493103027
    10. 'evaluation' → logprob: -9.466269493103027

Token 1137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008615635335445404
    2. '=' → logprob: -4.758615493774414
    3. '.evaluate' → logprob: -14.258615493774414
    4. ' =
' → logprob: -15.133615493774414
    5. '   ' → logprob: -17.258615493774414
    6. '=
' → logprob: -17.383615493774414
    7. '=e' → logprob: -17.383615493774414
    8. ' ' → logprob: -17.508615493774414
    9. '.eval' → logprob: -17.633615493774414
    10. '	' → logprob: -17.758615493774414

Token 1138: ' Experiment' (ID: 76340)
  Prédit: 'Experiment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Experiment' → logprob: -0.014164102263748646
    2. ' Experiment' → logprob: -4.264163970947266
    3. 'Experimental' → logprob: -14.764163970947266
    4. '   ' → logprob: -16.514163970947266
    5. 'Expert' → logprob: -17.139163970947266
    6. 'Exercise' → logprob: -17.389163970947266
    7. '       ' → logprob: -17.514163970947266
    8. 'Experience' → logprob: -17.764163970947266
    9. 'Exam' → logprob: -17.764163970947266
    10. '
' → logprob: -18.264163970947266

Token 1139: 'Evaluator' (ID: 87172)
  Prédit: 'Evaluator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluator' → logprob: -2.339278580620885e-06
    2. 'valuator' → logprob: -13.125001907348633
    3. 'Evalu' → logprob: -16.625001907348633
    4. 'Eval' → logprob: -16.625001907348633
    5. 'Enumerator' → logprob: -17.875001907348633
    6. 'Evaluate' → logprob: -17.875001907348633
    7. 'Eva' → logprob: -17.875001907348633
    8. 'e' → logprob: -18.375001907348633
    9. 'Estimator' → logprob: -18.750001907348633
    10. '(e' → logprob: -19.000001907348633

Token 1140: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.250007629394531
    3. '       ' → logprob: -14.125007629394531
    4. '(graph' → logprob: -14.375007629394531
    5. 'self' → logprob: -14.500007629394531
    6. '(
' → logprob: -14.625007629394531
    7. ' (' → logprob: -15.875007629394531
    8. '
' → logprob: -17.75000762939453
    9. ' self' → logprob: -18.75000762939453
    10. '(this' → logprob: -19.00000762939453

Token 1141: '.graph' (ID: 18104)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2269156277179718
    2. '.graph' → logprob: -1.6019155979156494
    3. ',' → logprob: -6.8519158363342285
    4. '(graph' → logprob: -8.72691535949707
    5. '	graph' → logprob: -9.35191535949707
    6. ' graph' → logprob: -10.22691535949707
    7. '       ' → logprob: -10.47691535949707
    8. 'sp' → logprob: -10.97691535949707
    9. ',
' → logprob: -10.97691535949707
    10. '
' → logprob: -10.97691535949707

Token 1142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.309382373117842e-05
    2. ',
' → logprob: -11.000033378601074
    3. ',self' → logprob: -11.250033378601074
    4. ' ,' → logprob: -13.000033378601074
    5. 'self' → logprob: -14.125033378601074
    6. '       ' → logprob: -15.375033378601074
    7. ')' → logprob: -17.250032424926758
    8. ',

' → logprob: -17.500032424926758
    9. '(self' → logprob: -18.125032424926758
    10. 'graph' → logprob: -18.250032424926758

Token 1143: ' sp' (ID: 1014)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -9.615255839889869e-05
    2. ' sp' → logprob: -9.250096321105957
    3. '(sp' → logprob: -19.37509536743164
    4. '	sp' → logprob: -20.37509536743164
    5. '
' → logprob: -21.12509536743164
    6. '       ' → logprob: -21.25009536743164
    7. '_sp' → logprob: -21.50009536743164
    8. '.sp' → logprob: -21.62509536743164
    9. '           ' → logprob: -22.75009536743164
    10. ')' → logprob: -22.87509536743164

Token 1144: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -1.9361264946837764e-07
    2. 'inder' → logprob: -16.0
    3. 'find' → logprob: -18.5
    4. 'found' → logprob: -19.25
    5. 'f' → logprob: -19.5
    6. 'fi' → logprob: -19.75
    7. ' finder' → logprob: -20.875
    8. 'fin' → logprob: -21.625
    9. 'hunter' → logprob: -21.75
    10. 'Finder' → logprob: -22.0

Token 1145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041579375974833965
    2. ')
' → logprob: -5.879158020019531
    3. '       ' → logprob: -6.629158020019531
    4. '<|end|>' → logprob: -10.879158020019531
    5. '   ' → logprob: -12.879158020019531
    6. ',' → logprob: -13.129158020019531
    7. '<|end|>' → logprob: -13.504158020019531
    8. ' )' → logprob: -14.129158020019531
    9. ')e' → logprob: -14.129158020019531
    10. '),' → logprob: -14.254158020019531

Token 1146: '       ' (ID: 309)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.38909614086151123
    2. '       ' → logprob: -1.1390961408615112
    3. '   ' → logprob: -7.389096260070801
    4. ',e' → logprob: -7.639096260070801
    5. 'evalu' → logprob: -8.6390962600708
    6. '.e' → logprob: -8.7640962600708
    7. '
' → logprob: -8.7640962600708
    8. '\e' → logprob: -9.0140962600708
    9. '	e' → logprob: -9.3890962600708
    10. 'Evaluator' → logprob: -9.5140962600708

Token 1147: ' evaluator' (ID: 153499)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00020735491125378758
    2. '       ' → logprob: -8.62520694732666
    3. 'evalu' → logprob: -10.87520694732666
    4. 'evaluate' → logprob: -12.75020694732666
    5. ' evaluator' → logprob: -13.25020694732666
    6. '   ' → logprob: -13.62520694732666
    7. '        
' → logprob: -13.87520694732666
    8. '
' → logprob: -14.75020694732666
    9. '```' → logprob: -15.12520694732666
    10. 'eval' → logprob: -15.25020694732666

Token 1148: '.register' (ID: 17046)
  Prédit: '.register'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.register' → logprob: -4.723352049040841e-06
    2. '.' → logprob: -12.750004768371582
    3. '.evaluate' → logprob: -13.375004768371582
    4. 'register' → logprob: -17.375003814697266
    5. '.eval' → logprob: -17.375003814697266
    6. '\.' → logprob: -17.375003814697266
    7. '.unregister' → logprob: -17.500003814697266
    8. '`.' → logprob: -17.875003814697266
    9. '```' → logprob: -17.875003814697266
    10. ').' → logprob: -18.125003814697266

Token 1149: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -5.512236498361744e-07
    2. 'edges' → logprob: -15.125000953674316
    3. '_ed' → logprob: -16.0
    4. 's' → logprob: -16.75
    5. '(self' → logprob: -17.125
    6. '_' → logprob: -17.875
    7. '_edge' → logprob: -19.0
    8. '(edges' → logprob: -19.375
    9. '_faces' → logprob: -19.625
    10. '(_' → logprob: -20.0

Token 1150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.87500286102295
    3. '(
' → logprob: -16.125003814697266
    4. ' (' → logprob: -16.500003814697266
    5. 'self' → logprob: -16.875003814697266
    6. '((' → logprob: -18.625003814697266
    7. '```' → logprob: -18.625003814697266
    8. '[self' → logprob: -18.750003814697266
    9. ',self' → logprob: -20.000003814697266
    10. ' self' → logprob: -20.250003814697266

Token 1151: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.16613885760307312
    2. 'self' → logprob: -2.9161388874053955
    3. 'edges' → logprob: -2.9161388874053955
    4. '(self' → logprob: -3.5411388874053955
    5. '(edges' → logprob: -5.416138648986816
    6. '_edges' → logprob: -5.916138648986816
    7. ' edges' → logprob: -6.166138648986816
    8. ',' → logprob: -6.291138648986816
    9. ')' → logprob: -6.541138648986816
    10. '[self' → logprob: -6.666138648986816

Token 1152: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03817896917462349
    2. '       ' → logprob: -3.7881789207458496
    3. '<|end|>' → logprob: -4.28817892074585
    4. '<|end|>' → logprob: -7.66317892074585
    5. ')
' → logprob: -8.038179397583008
    6. '()' → logprob: -9.163179397583008
    7. '(' → logprob: -10.163179397583008
    8. '[' → logprob: -10.663179397583008
    9. '())' → logprob: -10.663179397583008
    10. ',' → logprob: -11.788179397583008

Token 1153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1316605508327484
    2. 'for' → logprob: -2.1316604614257812
    3. ' for' → logprob: -5.506660461425781
    4. '```' → logprob: -8.006660461425781
    5. '
' → logprob: -9.006660461425781
    6. '   ' → logprob: -9.256660461425781
    7. '<|end|>' → logprob: -10.131660461425781
    8. '	for' → logprob: -10.506660461425781
    9. 'results' → logprob: -11.256660461425781
    10. '        
' → logprob: -12.006660461425781

Token 1154: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00041386886732652783
    2. ' for' → logprob: -8.25041389465332
    3. 'results' → logprob: -9.12541389465332
    4. '       ' → logprob: -10.12541389465332
    5. 'output' → logprob: -13.87541389465332
    6. 'result' → logprob: -14.12541389465332
    7. 'outputs' → logprob: -14.12541389465332
    8. '	for' → logprob: -14.87541389465332
    9. 'return' → logprob: -15.37541389465332
    10. 'import' → logprob: -15.75041389465332

Token 1155: ' Evaluate' (ID: 95819)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010568645084276795
    2. 'results' → logprob: -7.126056671142578
    3. '       ' → logprob: -8.751056671142578
    4. ' for' → logprob: -9.876056671142578
    5. 'output' → logprob: -10.626056671142578
    6. 'import' → logprob: -11.751056671142578
    7. 'outputs' → logprob: -12.126056671142578
    8. 'result' → logprob: -12.376056671142578
    9. 'answers' → logprob: -15.251056671142578
    10. 'input' → logprob: -15.876056671142578

Token 1156: ' each' (ID: 2454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014028461650013924
    2. 'range' → logprob: -4.764028549194336
    3. '(i' → logprob: -5.889028549194336
    4. 'i' → logprob: -6.764028549194336
    5. 'results' → logprob: -7.764028549194336
    6. '(' → logprob: -8.264028549194336
    7. ' for' → logprob: -8.639028549194336
    8. 'self' → logprob: -8.639028549194336
    9. '_results' → logprob: -9.139028549194336
    10. '   ' → logprob: -9.514028549194336

Token 1157: ' day' (ID: 2163)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01143775973469019
    2. ' i' → logprob: -5.386437892913818
    3. 'edge' → logprob: -6.011437892913818
    4. ' day' → logprob: -6.261437892913818
    5. 'day' → logprob: -6.636437892913818
    6. 'range' → logprob: -8.01143741607666
    7. ' edge' → logprob: -8.13643741607666
    8. '(i' → logprob: -9.01143741607666
    9. '_day' → logprob: -9.63643741607666
    10. '
' → logprob: -9.63643741607666

Token 1158: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11049337685108185
    2. '       ' → logprob: -2.3604934215545654
    3. ' for' → logprob: -4.610493183135986
    4. '(' → logprob: -8.985493659973145
    5. '   ' → logprob: -9.985493659973145
    6. '
' → logprob: -9.985493659973145
    7. 'range' → logprob: -10.235493659973145
    8. '	for' → logprob: -11.735493659973145
    9. '```' → logprob: -12.110493659973145
    10. '        
' → logprob: -12.235493659973145

Token 1159: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08014193177223206
    2. '       ' → logprob: -2.580142021179199
    3. ' for' → logprob: -6.705142021179199
    4. '   ' → logprob: -11.2051420211792
    5. '
' → logprob: -11.8301420211792
    6. '	for' → logprob: -12.4551420211792
    7. '```' → logprob: -13.9551420211792
    8. '           ' → logprob: -14.8301420211792
    9. '	' → logprob: -14.8301420211792
    10. '        
' → logprob: -15.5801420211792

Token 1160: ' out' (ID: 842)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0181878749281168
    2. ' for' → logprob: -4.018187999725342
    3. '       ' → logprob: -10.393187522888184
    4. 'results' → logprob: -12.643187522888184
    5. '	for' → logprob: -13.518187522888184
    6. 'result' → logprob: -13.643187522888184
    7. '   ' → logprob: -14.268187522888184
    8. '```' → logprob: -14.768187522888184
    9. ' results' → logprob: -15.393187522888184
    10. 'output' → logprob: -15.768187522888184

Token 1161: ' =' (ID: 314)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.0024950411170721054
    2. 'puts' → logprob: -6.002494812011719
    3. 'pt' → logprob: -12.127494812011719
    4. 'p' → logprob: -12.502494812011719
    5. 'pu' → logprob: -12.752494812011719
    6. '=' → logprob: -12.877494812011719
    7. '   ' → logprob: -13.752494812011719
    8. '```' → logprob: -14.002494812011719
    9. 'pute' → logprob: -14.127494812011719
    10. '_put' → logprob: -14.252494812011719

Token 1162: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0015081972815096378
    2. ' []' → logprob: -6.7515082359313965
    3. '[]
' → logprob: -8.001507759094238
    4. '[' → logprob: -13.626507759094238
    5. '   ' → logprob: -14.251507759094238
    6. ' []
' → logprob: -14.876507759094238
    7. '[]

' → logprob: -14.876507759094238
    8. '[]"' → logprob: -16.126508712768555
    9. '["' → logprob: -16.626508712768555
    10. '""' → logprob: -17.126508712768555

Token 1163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07069601118564606
    2. 'for' → logprob: -3.1956961154937744
    3. ' for' → logprob: -3.8206961154937744
    4. '	' → logprob: -5.820695877075195
    5. '	for' → logprob: -6.320695877075195
    6. '   ' → logprob: -8.195695877075195
    7. '
' → logprob: -8.195695877075195
    8. '	   ' → logprob: -9.695695877075195
    9. '        
' → logprob: -11.820695877075195
    10. '```' → logprob: -12.070695877075195

Token 1164: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023504719138145447
    2. ' for' → logprob: -3.7735047340393066
    3. '       ' → logprob: -8.273504257202148
    4. '```' → logprob: -13.023504257202148
    5. '	for' → logprob: -13.773504257202148
    6. '
' → logprob: -14.523504257202148
    7. '   ' → logprob: -16.14850425720215
    8. '	' → logprob: -18.02350425720215
    9. '``' → logprob: -18.39850425720215
    10. '        
' → logprob: -19.02350425720215

Token 1165: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018168555572628975
    2. ' i' → logprob: -4.0181684494018555
    3. '_i' → logprob: -11.518168449401855
    4. '_' → logprob: -12.643168449401855
    5. ' day' → logprob: -13.018168449401855
    6. '	i' → logprob: -13.893168449401855
    7. '   ' → logprob: -14.018168449401855
    8. ' _' → logprob: -14.018168449401855
    9. 'day' → logprob: -14.893168449401855
    10. '```' → logprob: -16.268169403076172

Token 1166: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759873390197754
    2. 'in' → logprob: -0.8259873390197754
    3. '	in' → logprob: -10.575986862182617
    4. '_' → logprob: -12.575986862182617
    5. '0' → logprob: -12.700986862182617
    6. '(' → logprob: -12.825986862182617
    7. '_in' → logprob: -12.825986862182617
    8. 'range' → logprob: -13.200986862182617
    9. 'In' → logprob: -13.450986862182617
    10. ' ' → logprob: -13.825986862182617

Token 1167: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.753177642822266
    4. '(range' → logprob: -18.878177642822266
    5. '	range' → logprob: -19.753177642822266
    6. ' ' → logprob: -19.878177642822266
    7. '  ' → logprob: -20.503177642822266
    8. 'in' → logprob: -20.503177642822266
    9. '
' → logprob: -21.878177642822266
    10. '    ' → logprob: -21.878177642822266

Token 1168: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007312587113119662
    2. 'self' → logprob: -7.250731468200684
    3. '(' → logprob: -11.125731468200684
    4. '(len' → logprob: -12.250731468200684
    5. ' self' → logprob: -14.125731468200684
    6. '(e' → logprob: -14.375731468200684
    7. '(s' → logprob: -16.125730514526367
    8. '(m' → logprob: -16.250730514526367
    9. '(
' → logprob: -16.875730514526367
    10. '0' → logprob: -16.875730514526367

Token 1169: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -1.9146995327901095e-05
    2. '.' → logprob: -11.000019073486328
    3. ' .' → logprob: -13.125019073486328
    4. ').' → logprob: -15.250019073486328
    5. 'm' → logprob: -15.875019073486328
    6. '.м' → logprob: -18.125019073486328
    7. ')' → logprob: -18.250019073486328
    8. '   ' → logprob: -18.625019073486328
    9. '.M' → logprob: -19.250019073486328
    10. '.
' → logprob: -19.625019073486328

Token 1170: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5234231352806091
    2. '):' → logprob: -0.8984231352806091
    3. ')' → logprob: -9.398423194885254
    4. ':' → logprob: -9.648423194885254
    5. '       ' → logprob: -9.773423194885254
    6. '   ' → logprob: -10.273423194885254
    7. '):
' → logprob: -10.398423194885254
    8. ':
' → logprob: -10.898423194885254
    9. '           ' → logprob: -12.898423194885254
    10. ' ):
' → logprob: -13.648423194885254

Token 1171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050332117825746536
    2. '       ' → logprob: -3.1753320693969727
    3. '   ' → logprob: -5.925332069396973
    4. '        
' → logprob: -7.300332069396973
    5. '            
' → logprob: -7.800332069396973
    6. '	   ' → logprob: -7.800332069396973
    7. '    
' → logprob: -7.925332069396973
    8. '```' → logprob: -7.925332069396973
    9. '	       ' → logprob: -8.300332069396973
    10. 'out' → logprob: -8.300332069396973

Token 1172: ' res' (ID: 694)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.065867118537426
    2. 'result' → logprob: -3.5658671855926514
    3. ' out' → logprob: -4.065866947174072
    4. '           ' → logprob: -4.440866947174072
    5. 'res' (adapté à ' res') → logprob: -5.565866947174072
    6. ' result' → logprob: -6.315866947174072
    7. 'status' → logprob: -7.940866947174072
    8. ' res' → logprob: -8.31586742401123
    9. '	out' → logprob: -9.56586742401123
    10. 'answer' → logprob: -9.94086742401123

Token 1173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23318536579608917
    2. ' =' → logprob: -1.8581854104995728
    3. '.append' → logprob: -2.983185291290283
    4. '=res' → logprob: -6.608185291290283
    5. '+=' → logprob: -10.733185768127441
    6. 's' → logprob: -11.733185768127441
    7. ' +=' → logprob: -12.233185768127441
    8. 'append' → logprob: -12.983185768127441
    9. 'res' → logprob: -12.983185768127441
    10. '.extend' → logprob: -13.108185768127441

Token 1174: ' evaluator' (ID: 153499)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0025011058896780014
    2. ' evaluator' → logprob: -6.002501010894775
    3. 'evalu' → logprob: -10.877501487731934
    4. ' e' → logprob: -12.627501487731934
    5. 'Evaluator' → logprob: -13.252501487731934
    6. '	e' → logprob: -14.502501487731934
    7. 'evaluate' → logprob: -14.877501487731934
    8. '_e' → logprob: -15.502501487731934
    9. '(e' → logprob: -15.627501487731934
    10. 'eval' → logprob: -16.377500534057617

Token 1175: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.062265899032354355
    2. 'evaluate' → logprob: -2.8122658729553223
    3. '.' → logprob: -8.31226634979248
    4. ' .' → logprob: -9.93726634979248
    5. '```' → logprob: -12.81226634979248
    6. ' evaluate' → logprob: -14.06226634979248
    7. '.eval' → logprob: -15.56226634979248
    8. '   ' → logprob: -15.56226634979248
    9. 'evalu' → logprob: -16.812265396118164
    10. '.e' → logprob: -17.062265396118164

Token 1176: '_day' (ID: 38491)
  Prédit: '_day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_day' → logprob: -2.2200749754119897e-06
    2. 'day' → logprob: -13.625001907348633
    3. '[i' → logprob: -15.250001907348633
    4. '(i' → logprob: -15.750001907348633
    5. 'i' → logprob: -16.125001907348633
    6. '_daily' → logprob: -16.375001907348633
    7. '_DAY' → logprob: -16.375001907348633
    8. '_' → logprob: -16.625001907348633
    9. 'Day' → logprob: -16.750001907348633
    10. '\' → logprob: -16.875001907348633

Token 1177: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -11.875006675720215
    3. '(ii' → logprob: -18.75000762939453
    4. '(
' → logprob: -19.12500762939453
    5. ' (' → logprob: -19.37500762939453
    6. '```' → logprob: -20.00000762939453
    7. 'i' → logprob: -20.87500762939453
    8. '(j' → logprob: -21.50000762939453
    9. '[i' → logprob: -21.62500762939453
    10. '(a' → logprob: -21.87500762939453

Token 1178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016075778752565384
    2. ')
' → logprob: -4.141075611114502
    3. '           ' → logprob: -11.01607608795166
    4. ')`
' → logprob: -11.76607608795166
    5. ')
' → logprob: -12.51607608795166
    6. '       ' → logprob: -12.64107608795166
    7. '()' → logprob: -12.89107608795166
    8. ')`' → logprob: -13.01607608795166
    9. '())' → logprob: -13.39107608795166
    10. '))' → logprob: -13.76607608795166

Token 1179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004516039043664932
    2. 'out' → logprob: -5.629516124725342
    3. '```' → logprob: -7.629516124725342
    4. '
' → logprob: -8.754515647888184
    5. ' out' → logprob: -8.879515647888184
    6. '       ' → logprob: -10.129515647888184
    7. '``' → logprob: -10.754515647888184
    8. '   ' → logprob: -11.254515647888184
    9. '(out' → logprob: -11.379515647888184
    10. '            
' → logprob: -11.379515647888184

Token 1180: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.0025349983479827642
    2. ' out' → logprob: -6.627534866333008
    3. '           ' → logprob: -6.752534866333008
    4. '
' → logprob: -10.502534866333008
    5. '   ' → logprob: -12.252534866333008
    6. '       ' → logprob: -13.002534866333008
    7. '	out' → logprob: -13.377534866333008
    8. '            
' → logprob: -13.627534866333008
    9. '               ' → logprob: -13.877534866333008
    10. 'output' → logprob: -14.752534866333008

Token 1181: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008137972326949239
    2. '.' → logprob: -7.125813961029053
    3. ' .' → logprob: -12.500813484191895
    4. '.ap' → logprob: -13.625813484191895
    5. 'append' → logprob: -13.875813484191895
    6. '.app' → logprob: -14.375813484191895
    7. '   ' → logprob: -14.375813484191895
    8. '_.' → logprob: -14.500813484191895
    9. '_append' → logprob: -14.875813484191895
    10. '​.' → logprob: -14.875813484191895

Token 1182: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. 'res' → logprob: -15.125008583068848
    4. '(f' → logprob: -16.62500762939453
    5. '(
' → logprob: -17.00000762939453
    6. '((' → logprob: -18.75000762939453
    7. ' (' → logprob: -19.12500762939453
    8. '("'"' → logprob: -19.62500762939453
    9. '(str' → logprob: -20.12500762939453
    10. '(result' → logprob: -20.37500762939453

Token 1183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004163283389061689
    2. ')
' → logprob: -6.2541632652282715
    3. '       ' → logprob: -6.7541632652282715
    4. '           ' → logprob: -7.5041632652282715
    5. '
' → logprob: -8.37916374206543
    6. '')' → logprob: -10.12916374206543
    7. '")' → logprob: -10.12916374206543
    8. '   ' → logprob: -10.25416374206543
    9. '<|end|>' → logprob: -10.37916374206543
    10. '[' → logprob: -10.75416374206543

Token 1184: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1816769242286682
    2. 'print' → logprob: -2.6816768646240234
    3. '       ' → logprob: -2.8066768646240234
    4. '`
' → logprob: -4.556676864624023
    5. '\n' → logprob: -4.681676864624023
    6. '```' → logprob: -4.931676864624023
    7. '        
' → logprob: -5.806676864624023
    8. 'for' → logprob: -6.306676864624023
    9. 'return' → logprob: -6.806676864624023
    10. '``' → logprob: -6.931676864624023

Token 1185: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05768350884318352
    2. 'for' → logprob: -3.3076834678649902
    3. '       ' → logprob: -4.80768346786499
    4. '
' → logprob: -5.05768346786499
    5. 'return' → logprob: -5.55768346786499
    6. ' for' → logprob: -7.30768346786499
    7. ' print' → logprob: -8.307683944702148
    8. '```' → logprob: -9.307683944702148
    9. '   ' → logprob: -10.432683944702148
    10. ' return' → logprob: -11.432683944702148

Token 1186: '("\' (ID: 9730)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.0628041997551918
    2. '("\' → logprob: -2.8128042221069336
    3. '('' → logprob: -7.937804222106934
    4. '(*' → logprob: -8.187804222106934
    5. '(' → logprob: -9.062804222106934
    6. ''\' → logprob: -10.062804222106934
    7. '("' → logprob: -10.312804222106934
    8. '"\' → logprob: -12.062804222106934
    9. '(
' → logprob: -13.437804222106934
    10. '()' → logprob: -13.687804222106934

Token 1187: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006878906278871
    2. '"\' → logprob: -8.250687599182129
    3. '\n' → logprob: -8.375687599182129
    4. '
' → logprob: -8.625687599182129
    5. ''\' → logprob: -11.125687599182129
    6. '("\' → logprob: -14.250687599182129
    7. ' "\' → logprob: -14.750687599182129
    8. '"' → logprob: -16.000688552856445
    9. '``' → logprob: -16.000688552856445
    10. '
' → logprob: -16.125688552856445

Token 1188: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.11843489110469818
    2. 'join' → logprob: -2.6184349060058594
    3. '.join' → logprob: -3.3684349060058594
    4. '.' → logprob: -5.493434906005859
    5. ''.' → logprob: -8.99343490600586
    6. ' join' → logprob: -9.49343490600586
    7. '"' → logprob: -12.61843490600586
    8. ' .' → logprob: -12.99343490600586
    9. 'Join' → logprob: -13.11843490600586
    10. ').' → logprob: -13.11843490600586

Token 1189: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.7432603272027336e-06
    2. 'print' → logprob: -13.500001907348633
    3. 'jo' → logprob: -15.875001907348633
    4. '```' → logprob: -16.250001907348633
    5. ' join' → logprob: -17.125001907348633
    6. 'j' → logprob: -17.125001907348633
    7. '(join' → logprob: -19.125001907348633
    8. '
' → logprob: -19.250001907348633
    9. 'write' → logprob: -19.625001907348633
    10. '.join' → logprob: -19.750001907348633

Token 1190: '(out' (ID: 20090)
  Prédit: '(out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -0.1602325439453125
    2. 'out' → logprob: -1.9102325439453125
    3. '[out' → logprob: -11.785232543945312
    4. ' out' → logprob: -15.660232543945312
    5. '(map' → logprob: -16.160232543945312
    6. '(
' → logprob: -16.410232543945312
    7. '(' → logprob: -16.660232543945312
    8. '*out' → logprob: -16.660232543945312
    9. '```' → logprob: -16.910232543945312
    10. ')' → logprob: -17.160232543945312

Token 1191: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06198235973715782
    2. '))' → logprob: -2.8119823932647705
    3. '())' → logprob: -11.561982154846191
    4. ')")' → logprob: -13.311982154846191
    5. '()' → logprob: -14.186982154846191
    6. '`)' → logprob: -14.436982154846191
    7. ')`' → logprob: -14.561982154846191
    8. ')))' → logprob: -14.686982154846191
    9. '})' → logprob: -14.936982154846191
    10. '")' → logprob: -15.186982154846191

Token 1192: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007768734358251095
    2. 'def' → logprob: -8.000777244567871
    3. '```' → logprob: -8.125777244567871
    4. ' if' → logprob: -9.250777244567871
    5. 'Pizza' → logprob: -11.000777244567871
    6. '
' → logprob: -11.625777244567871
    7. '<|end|>' → logprob: -12.125777244567871
    8. 'a' → logprob: -12.500777244567871
    9. '#' → logprob: -12.875777244567871
    10. 'If' → logprob: -12.875777244567871

Token 1193: ' main' (ID: 2758)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7334065437316895
    2. ' __' → logprob: -0.7334065437316895
    3. ' main' → logprob: -3.4834065437316895
    4. 'if' → logprob: -5.7334065437316895
    5. '_' → logprob: -6.3584065437316895
    6. 'main' → logprob: -7.1084065437316895
    7. ' if' → logprob: -7.3584065437316895
    8. ' _' → logprob: -7.3584065437316895
    9. '_main' → logprob: -7.8584065437316895
    10. ' ' → logprob: -7.9834065437316895

Token 1194: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002671768015716225
    2. '():
' → logprob: -8.250267028808594
    3. '()' → logprob: -12.500267028808594
    4. ' ():' → logprob: -13.750267028808594
    5. '(' → logprob: -14.375267028808594
    6. '():
' → logprob: -15.500267028808594
    7. ':' → logprob: -15.875267028808594
    8. '_' → logprob: -16.250267028808594
    9. '():

' → logprob: -16.875267028808594
    10. '().' → logprob: -17.500267028808594

Token 1195: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8464556932449341
    2. '   ' → logprob: -1.346455693244934
    3. 'def' → logprob: -2.3464555740356445
    4. '```' → logprob: -2.5964555740356445
    5. ' if' → logprob: -2.7214555740356445
    6. 'Pizza' → logprob: -3.0964555740356445
    7. 'pizza' → logprob: -4.4714555740356445
    8. 'pd' → logprob: -4.7214555740356445
    9. 'experiment' → logprob: -5.7214555740356445
    10. '``' → logprob: -6.8464555740356445

Token 1196: ' experiment' (ID: 12527)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16129906475543976
    2. 'experiment' (adapté à ' experiment') → logprob: -2.161298990249634
    3. '   ' → logprob: -3.661298990249634
    4. 'exp' → logprob: -5.786299228668213
    5. 'P' → logprob: -5.911299228668213
    6. ' p' → logprob: -7.786299228668213
    7. 'pizza' → logprob: -7.786299228668213
    8. 'ppe' → logprob: -7.911299228668213
    9. ' experiment' → logprob: -8.161298751831055
    10. 'app' → logprob: -8.536298751831055

Token 1197: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6408343315124512
    2. ' =' → logprob: -1.3908343315124512
    3. '=' → logprob: -1.6408343315124512
    4. '.' → logprob: -4.140834331512451
    5. '().' → logprob: -4.640834331512451
    6. '(' → logprob: -6.390834331512451
    7. '()
' → logprob: -7.265834331512451
    8. '_' → logprob: -7.265834331512451
    9. '.run' → logprob: -7.890834331512451
    10. '   ' → logprob: -8.26583480834961

Token 1198: ' Pizza' (ID: 48892)
  Prédit: 'Pizza'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pizza' → logprob: -0.004078401252627373
    2. ' Pizza' → logprob: -5.504078388214111
    3. ' pizza' → logprob: -19.629077911376953
    4. '	P' → logprob: -19.879077911376953
    5. 'Pie' → logprob: -20.004077911376953
    6. 'P' → logprob: -20.254077911376953
    7. 'Poker' → logprob: -20.879077911376953
    8. '```' → logprob: -22.129077911376953
    9. 'pizza' → logprob: -22.504077911376953
    10. 'Puzzle' → logprob: -22.504077911376953

Token 1199: 'Delivery' (ID: 28728)
  Prédit: 'Delivery'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Delivery' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -15.500000953674316
    3. '_delivery' → logprob: -15.500000953674316
    4. ' Delivery' → logprob: -15.875000953674316
    5. '   ' → logprob: -16.375
    6. 'Experiment' → logprob: -17.25
    7. 'delivery' → logprob: -17.375
    8. 'Deliver' → logprob: -17.875
    9. 'Del' → logprob: -19.75
    10. '  ' → logprob: -20.125

Token 1200: 'Experiment' (ID: 87597)
  Prédit: 'Experiment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Experiment' → logprob: -2.339278580620885e-06
    2. '
' → logprob: -13.875001907348633
    3. 'experiment' → logprob: -13.875001907348633
    4. ' Experiment' → logprob: -15.500001907348633
    5. '```' → logprob: -16.000001907348633
    6. 'Experimental' → logprob: -17.625001907348633
    7. 'Exper' → logprob: -18.375001907348633
    8. '_' → logprob: -18.375001907348633
    9. 'x' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.500001907348633

Token 1201: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3143450915813446
    2. '()' → logprob: -1.814345121383667
    3. '   ' → logprob: -2.439345121383667
    4. 'def' → logprob: -4.939344882965088
    5. '
' → logprob: -5.439344882965088
    6. '(
' → logprob: -5.564344882965088
    7. '(' → logprob: -6.564344882965088
    8. '().' → logprob: -7.314344882965088
    9. '    
' → logprob: -7.939344882965088
    10. '();' → logprob: -7.939344882965088

Token 1202: '   ' (ID: 271)
  Prédit: 'experiment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'experiment' → logprob: -0.0054914141073822975
    2. '   ' → logprob: -5.255491256713867
    3. 'def' → logprob: -8.505491256713867
    4. ' experiment' → logprob: -9.880491256713867
    5. '	ex' → logprob: -12.880491256713867
    6. 'experimental' → logprob: -14.380491256713867
    7. 'exper' → logprob: -15.380491256713867
    8. '
' → logprob: -15.505491256713867
    9. '```' → logprob: -15.755491256713867
    10. 'main' → logprob: -16.130491256713867

Token 1203: ' experiment' (ID: 12527)
  Prédit: 'experiment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'experiment' (adapté à ' experiment') → logprob: -1.9361264946837764e-07
    2. ' experiment' → logprob: -16.125
    3. '   ' → logprob: -17.0
    4. '
' → logprob: -17.5
    5. 'exercise' → logprob: -20.625
    6. 'exper' → logprob: -20.625
    7. '```' → logprob: -21.125
    8. 'experimental' → logprob: -21.25
    9. 'experience' → logprob: -22.25
    10. '    
' → logprob: -22.5

Token 1204: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.008684063330292702
    2. '.' → logprob: -4.758684158325195
    3. '.run' → logprob: -10.133684158325195
    4. 'parse' → logprob: -11.508684158325195
    5. '.mainloop' → logprob: -12.133684158325195
    6. ' .' → logprob: -12.508684158325195
    7. '=parse' → logprob: -13.133684158325195
    8. '.
' → logprob: -14.008684158325195
    9. '.parametrize' → logprob: -14.008684158325195
    10. '.Popen' → logprob: -14.133684158325195

Token 1205: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0280383548888494e-06
    2. 'input' → logprob: -13.875000953674316
    3. 'Input' → logprob: -18.625001907348633
    4. '_inputs' → logprob: -19.875001907348633
    5. '_INPUT' → logprob: -20.000001907348633
    6. '_
' → logprob: -20.125001907348633
    7. '```' → logprob: -20.125001907348633
    8. '_' → logprob: -20.250001907348633
    9. '(input' → logprob: -20.375001907348633
    10. '_Input' → logprob: -20.625001907348633

Token 1206: '()
' (ID: 1234)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5951777696609497
    2. '   ' → logprob: -1.0951777696609497
    3. 'experiment' → logprob: -2.84517765045166
    4. '
' → logprob: -2.97017765045166
    5. '```' → logprob: -6.09517765045166
    6. '<|end|>' → logprob: -7.09517765045166
    7. '    
' → logprob: -8.22017765045166
    8. '	ex' → logprob: -8.47017765045166
    9. '``' → logprob: -8.59517765045166
    10. '[' → logprob: -8.84517765045166

Token 1207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018326109275221825
    2. 'experiment' → logprob: -4.018326282501221
    3. '
' → logprob: -8.768325805664062
    4. ' experiment' → logprob: -11.143325805664062
    5. '```' → logprob: -13.143325805664062
    6. 'def' → logprob: -13.393325805664062
    7. '    
' → logprob: -13.643325805664062
    8. '	ex' → logprob: -14.768325805664062
    9. ' ' → logprob: -14.893325805664062
    10. '       ' → logprob: -15.768325805664062

Token 1208: ' experiment' (ID: 12527)
  Prédit: 'experiment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'experiment' (adapté à ' experiment') → logprob: -2.1008713702030946e-06
    2. ' experiment' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.250001907348633
    4. 'exercise' → logprob: -19.125001907348633
    5. '```' → logprob: -21.750001907348633
    6. 'experience' → logprob: -22.125001907348633
    7. 'exper' → logprob: -22.750001907348633
    8. 'experimental' → logprob: -23.000001907348633
    9. '``' → logprob: -23.125001907348633
    10. 'Experiment' → logprob: -23.750001907348633

Token 1209: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.0002622894535306841
    2. '.' → logprob: -8.250262260437012
    3. ' .' → logprob: -14.125262260437012
    4. '.
' → logprob: -16.000263214111328
    5. '.Run' → logprob: -17.125263214111328
    6. 'run' → logprob: -17.125263214111328
    7. '.mainloop' → logprob: -17.250263214111328
    8. '.execute' → logprob: -17.750263214111328
    9. '\.' → logprob: -18.125263214111328
    10. '​.' → logprob: -18.375263214111328

Token 1210: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3886986970901489
    2. 'if' → logprob: -1.138698697090149
    3. '<|end|>' → logprob: -7.263698577880859
    4. '```' → logprob: -7.638698577880859
    5. 'main' → logprob: -8.38869857788086
    6. ' if' → logprob: -9.51369857788086
    7. '\n' → logprob: -9.76369857788086
    8. '   ' → logprob: -9.88869857788086
    9. '  
' → logprob: -10.01369857788086
    10. '    
' → logprob: -10.01369857788086

Token 1211: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.054500666621607e-06
    2. ' if' → logprob: -13.50000286102295
    3. '```' → logprob: -13.50000286102295
    4. 'main' → logprob: -16.375003814697266
    5. '
' → logprob: -16.750003814697266
    6. '#' → logprob: -18.750003814697266
    7. 'import' → logprob: -19.000003814697266
    8. '	if' → logprob: -19.625003814697266
    9. '<|end|>' → logprob: -20.000003814697266
    10. '#if' → logprob: -20.000003814697266

Token 1212: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0297523383051157
    2. '__' → logprob: -3.529752254486084
    3. '___' → logprob: -14.654752731323242
    4. '```' → logprob: -14.654752731323242
    5. ' ' → logprob: -15.154752731323242
    6. '​' → logprob: -15.154752731323242
    7. '﻿' → logprob: -16.029752731323242
    8. ' ' → logprob: -16.404752731323242
    9. '/__' → logprob: -16.904752731323242
    10. '_name' → logprob: -17.154752731323242

Token 1213: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08939021080732346
    2. ' ==' → logprob: -2.964390277862549
    3. '==' → logprob: -3.464390277862549
    4. '.__' → logprob: -6.839390277862549
    5. '=="' → logprob: -7.464390277862549
    6. ' __' → logprob: -8.71438980102539
    7. '[' → logprob: -8.96438980102539
    8. '.' → logprob: -9.08938980102539
    9. '=='' → logprob: -9.08938980102539
    10. '__.__' → logprob: -9.46438980102539

Token 1214: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005103797884657979
    2. '==' → logprob: -7.625510215759277
    3. '__.__' → logprob: -11.000510215759277
    4. ' ==' → logprob: -12.875510215759277
    5. '=="' → logprob: -13.875510215759277
    6. '=='' → logprob: -14.125510215759277
    7. '__.' → logprob: -14.500510215759277
    8. '__
' → logprob: -15.250510215759277
    9. '___' → logprob: -15.500510215759277
    10. '__('' → logprob: -15.500510215759277

Token 1215: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5080443024635315
    2. '==' → logprob: -1.0080442428588867
    3. ' ==' → logprob: -3.5080442428588867
    4. '=="' → logprob: -5.883044242858887
    5. '=='' → logprob: -7.508044242858887
    6. '===' → logprob: -10.883044242858887
    7. '.__' → logprob: -10.883044242858887
    8. '==
' → logprob: -11.008044242858887
    9. '__.__' → logprob: -11.383044242858887
    10. '=' → logprob: -11.383044242858887

Token 1216: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014179375022649765
    2. ''' → logprob: -4.264179229736328
    3. '__' → logprob: -11.139179229736328
    4. ' "__' → logprob: -13.639179229736328
    5. ''"' → logprob: -17.514179229736328
    6. '"name' → logprob: -17.764179229736328
    7. ' '__' → logprob: -17.889179229736328
    8. '"'' → logprob: -18.639179229736328
    9. '("__' → logprob: -19.014179229736328
    10. '"class' → logprob: -19.014179229736328

Token 1217: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003777648089453578
    2. 'name' → logprob: -8.250377655029297
    3. '__' → logprob: -9.125377655029297
    4. 'if' → logprob: -12.625377655029297
    5. '__":
' → logprob: -13.000377655029297
    6. ' main' → logprob: -14.375377655029297
    7. '_main' → logprob: -14.750377655029297
    8. 'built' → logprob: -15.250377655029297
    9. 'guard' → logprob: -15.750377655029297
    10. '"' → logprob: -15.875377655029297

Token 1218: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.024401497095823288
    2. '__' → logprob: -3.7744014263153076
    3. '__':
' → logprob: -6.774401664733887
    4. '__.' → logprob: -12.524401664733887
    5. '__["' → logprob: -12.649401664733887
    6. '__
' → logprob: -13.024401664733887
    7. '__.__' → logprob: -13.399401664733887
    8. '__:' → logprob: -13.774401664733887
    9. '_' → logprob: -15.399401664733887
    10. '.' → logprob: -15.524401664733887

Token 1219: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0006445261533372104
    2. ' main' → logprob: -7.500644683837891
    3. '   ' → logprob: -9.87564468383789
    4. '	main' → logprob: -10.37564468383789
    5. '__' → logprob: -12.00064468383789
    6. '_main' → logprob: -13.75064468383789
    7. '(main' → logprob: -13.87564468383789
    8. '    
' → logprob: -14.50064468383789
    9. '```' → logprob: -16.37564468383789
    10. '____' → logprob: -17.25064468383789

Token 1220: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.75
    3. '	main' → logprob: -22.5
    4. '_main' → logprob: -25.625
    5. '.main' → logprob: -26.25
    6. '(main' → logprob: -26.375
    7. '   ' → logprob: -26.875
    8. 'mai' → logprob: -28.25
    9. '
' → logprob: -28.375
    10. 'import' → logprob: -29.25

Token 1221: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1219
Tokens correctement prédits (1ère position, stricte): 465
Tokens correctement prédits (1ère position, avec adaptation): 516
Tokens correctement prédits (top 10): 938
Précision stricte (1ère position): 38.15%
Précision adaptée (1ère position): 42.33%
Précision (top 10): 76.95%
================================================================================
