================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

# Constantes pour résoudre les problèmes de précision flottante
EPS = 1e-12

class Gate:
    def __init__(self, X, L, F, D, UD):
        self.X = X         # Position du seuil (km)
        self.L = L         # Volume d'eau à déplacer (L)
        self.F = F         # Max injection d'eau par heure (L/h)
        self.D = D         # Max vidage d'eau par heure (L/h)
        self.UD = UD       # 0 : est plus haut que ouest, 1 : est plus bas que ouest

        # Initialisation du niveau du sas: départ au niveau le plus bas entre les deux côtés
        # hauteur relative aux eaux du côté ouest ou est: on modélise: 0 = bas, 1 = haut
        # Si UD=0 => est est haut, donc sas initial au bas (0)
        # Si UD=1 => est est bas, donc sas initial au bas (0)
        # On considère que niveau 0 = niveau le plus bas
        # Nous utilisons True/False pour indiquer si sas est au niveau haut (True) ou bas (False)
        # mais sachant que sas commence toujours au niveau le plus bas:
        if UD == 0:
            # Ouest plus bas, Est plus haut
            # Sas initial = bas (niveau 0)
            self.level = False
        else:
            # Ouest plus haut, Est plus bas
            # Sas initial = bas (niveau 0)
            self.level = False

        # L'Etat du sas est simple: actuellement au niveau bas ou haut
        # On aura besoin d'une méthode pour simuler le changement entre ces états selon la présence de bateau
        # et la direction du flux

    def level_is_high(self):
        return self.level

    def high_level_rate(self):
        # quantité d'eau à injecter ou vidanger pour passer du bas au haut
        # ou du haut au bas.
        # En L/h (taux max)
        return self.F if not self.level else self.D

    def time_to_switch(self, to_high):
        # Calcule le temps nécessaire pour passer du niveau actuel au niveau 'to_high' (bool)
        # Bas => Haut = injection d'eau => taux F
        # Haut => Bas = vidange d'eau => taux D
        if self.level == to_high:
            return 0.0
        # Volume à deplacer
        volume = self.L
        if to_high:
            # injection eau
            rate = self.F
        else:
            # vidage eau
            rate = self.D
        return volume / rate


class Ship:
    def __init__(self, max_speed, position):
        self.Vmax = max_speed  # vitesse max (km/h)
        self.pos = position    # position actuelle (km)
        self.speed = 0.0       # vitesse actuelle (km/h)
        self.done = False      # si le bateau a dépassé le bord est du pays
        self.waiting = False   # s'il est arrêté

    def __repr__(self):
        return f'Ship(pos={self.pos:.6f}, speed={self.speed:.6f}, vmax={self.Vmax}, done={self.done})'


def simulate(N, M, K, gates_data, ship_speeds):
    # Construction des gates
    gates = []
    for data in gates_data:
        g = Gate(*data)
        gates.append(g)

    # Initial positions des bateaux:
    # Enoncé : bateaux placés à l'origine 0 km (premier bateau), puis espacés de 1km en arrière (vers l'ouest)
    # Donc le i-esime bateau a position = -i km (car 1er à 0, 2eme à -1, 3eme à -2, ...)
    ships = []
    for i in range(M):
        ship = Ship(ship_speeds[i], position = -i)
        ships.append(ship)

    # Vitesse initiale: uniquement le premier bateau peut partir rapidement, les autres doivent respecter la règle:
    # Chaque bateau atteint instantanément sa vitesse max, mais si il est à moins de 1km du bateau devant, il doit réduire sa vitesse
    # à la vitesse du bateau de devant.
    # Au départ, tous arrêtés (speed=0), mais dès que possible, avancent.
    # On modélisera le mouvement par évènements

    # Points à simuler:
    # Evènements à gérer :
    # - bateau arrive à devant/suivant à un endroit où il faut modifier vitesse pour respecter contrainte 1km
    # - bateau arrive à un seuil : il doit pouvoir passer seulement si le niveau du sas correspond au niveau d'eau amont
    #   (ceci nécessite de modéliser le sas: quand changer le niveau, et la durée)
    # - changement niveau sas de bas à haut ou haut à bas
    # - bateau peut sortir du sas si les conditions sont bon (niveau de sas = eau aval)
    # - fin de simulation quand le dernier bateau dépasse K

    # Pour modéliser on procède en évènements chronologiques
    # Chaque évènement a un temps, on avance de temps en temps et on met à jour vitesse et position des bateaux

    # Evènements possibles (avec leurs traitements):
    # - bateau atteint position d'un gate depuis ou vers le sas (entrée/sortie)
    # - sas change de niveau (requis pour que bateau entre ou sorte)
    # - bateau atteint position du bateau devant (doit s'adapter)

    # Pour simplifier, on utilisera une approche par pas de temps glissant à partir d'évènements à gérer
    # Les évènements sont pushés dans une file prioritaire
    # Initialement, tous les bateaux démarrent à vitesse maximale (pour le premier),
    # puis vitesse adaptées selon espacements initiaux (ships espacés de 1 km donc vitesse max peut être initialement donnée)

    import heapq

    # Position des gates plus une porte virtuelle finale après K (à K)
    gate_positions = [g.X for g in gates]
    gate_positions_set = set(gate_positions)

    # Evènement contient
    # (temps, ev_type, param)
    # ev_type:
    # 1: bateau atteint position cible (param=(ship_index, position))
    # 2: gate sas niveau changement fini (param=gate_index)
    # 3: bateau sort du sas (param=ship_index, gate_index)
    # 4: bateau commence à bouger ou ralentir (param=ship_index)
    # On se limitera a evenement 1 et 2, en prenant soin d gérer tout le reste dans la simulation des évènements

    # Etat des sas: pour chaque sas:
    # level: False ou True (bas ou haut)
    # target_level: si sas doit changer d'etat (True/False/None)
    # boat_inside: None ou index bateau (on peut gérer l'état avec une variable supplémentaire)
    sas_inside = [None] * N  # None ou i bateau
    sas_target_level = [None] * N  # None si pas de changement en cours
    sas_level = [g.level for g in gates]

    # Etat des bateaux:
    # position en float
    # vitesse en float
    # done booléen si sortie
    # on ajoute index de gate où le bateau est (si dans sas), sinon None
    ship_in_sas = [None] * M

    # On définit un heap d'évènements
    event_queue = []

    # Certains outils pour avancer un bateau à une position donnée en vitesse donnée
    def schedule_ship_arrival(i, pos, current_time):
        # Calcule temps pour que bateau i atteigne pos à vitesse courante, si possible (pos > pos courante)
        # Si vitesse=0 ou pos <= position actuelle, pas d'évènement généré
        s = ships[i]
        if s.done:
            return
        if pos < s.pos + EPS:
            return
        dist = pos - s.pos
        if s.speed < EPS:
            return
        t = dist / s.speed
        heapq.heappush(event_queue, (current_time + t, 1, (i, pos)))

    # Ajuster les vitesses des bateaux selon la contrainte d'espacement
    def adjust_speeds(current_time):
        # On parcourt les bateaux dans l'ordre, du premier (plus à l'est) au dernier (plus à l'ouest)
        # Rappel: bateau 0 plus en amont (position la plus élevée) au départ
        # les bateaux sont en positions croissantes (position -i)
        # Il faut que le bateau suivant ne soit jamais a moins d'1 km derrière
        # règle: si bateau j rattrape bateau i (j>i), alors V_j = V_i
        # sinon V_j = Vmax_j

        # On commence par le premier bateau: vitesse max
        # mais s'il est dans sas, vitesse = 0 car il doit attendre
        # ou s'il est "bloqué" devant un bateau arrêté

        # On recompute aussi les évènements d'arrivé après changement vitesse

        # On traite les bateaux dans l'ordre croissant des positions (donc ordre index)
        # important: bateau avec plus haut index a position initiale plus faible

        # Rien ne nous dit que index i < j => vi est devant vj, car position peuvent bouger,
        # donc on trie par position actuelle décroissante (plus grand pos est devant)
        # Mais positions peuvent être égales ou proches, on gère

        # Nous allons trier les bateaux par position décroissante (bords est à l'ouest)
        idx_order = sorted(range(M), key=lambda x: ships[x].pos, reverse=True)

        # Pour la vitesse, on parcourt de l'avant à l'arrière, on fixe viteesses

        speeds = [0.0]*M
        # Premier bateau devant à sa vitesse max ou 0 s’il est dans sas ou fini
        front_i = idx_order[0]
        if ships[front_i].done:
            speeds[front_i] = 0.0
        elif ship_in_sas[front_i] is not None:
            # dans un sas, bateau doit attendre, vitesse=0
            speeds[front_i] = 0.0
        else:
            speeds[front_i] = ships[front_i].Vmax

        # Puis pour les autres:
        for posi in range(1, M):
            i = idx_order[posi]
            # On cherche le bateau supposé devant
            # On calcule position du bateau devant dans order
            front = idx_order[posi-1]

            # Contrainte: bateau i doit garder distance >= 1km du bateau devant
            # Cas vitesse max du i et vitesse du devant si i rattrape -> i réduit sa vitesse

            # distance actuelle
            dist = ships[front].pos - ships[i].pos

            # Si distance < 1, i doit rouler à vitesse du devant si Vmax_i > speed_front

            if dist < 1 - EPS:
                # on force vitesse <= vitesse du devant
                speeds[i] = min(ships[i].Vmax, speeds[front])
            else:
                # distance ok, peut aller à sa vitesse max
                speeds[i] = ships[i].Vmax

            # Mais si devant est arrêté (vitesse=0) et distance <=1, vitesse=0, sinon vitesse max
            if speeds[front] < EPS and dist < 1 + EPS:
                speeds[i] = 0.0

        # On applique dans l'ordre original des boats
        changed = False
        for i in range(M):
            if abs(speeds[i] - ships[i].speed) > EPS:
                ships[i].speed = speeds[i]
                changed = True

        return changed

    # On doit gérer aussi les appels pour recaler les évènements de arrivée
    def reschedule_all_arrivals(current_time):
        # On enlève tous les événements existants, ici on reconstruit event queue à partir des bateaux+équipements
        # mais ce n’est pas trivial, car évènements gates doivent être conservés
        # On va juste ajouter les évènements arrivés à partir d'aujourd'hui afin d’éviter des conflits

        # Pour simplifier, on ne supprime pas les évènements, mais on ne programme que les prochains évènements d'arrivée bateaux
        # Ils seront ajoutés si on detecte que la position a été modifiés ou vitesse a changé

        # Cette fonction sera appelée seulement après ajustement vitesse.

        # On programme l'arrivée du bateau à la prochaine position importante: gate ou fin de K +1 (au delà de K)
        # ou position du bateau devant -1 pour respecter distance

        # Pour chaque bateau, on calcule sa prochaine position cible

        for i in range(M):
            if ships[i].done:
                continue
            s = ships[i]
            # Position suivante possible: gate la plus proche à l'est > s.pos
            next_pos = K + 10  # quelques km après fin pour sortir
            for g in gates:
                if g.X > s.pos + EPS and g.X < next_pos:
                    next_pos = g.X
            # Ensuite, si ce n'est pas le premier bateau, on doit s'arreter avant bateau devant
            # pour un garde fou, position bateau devant -1

            # on trouve bateau devant
            candidates = []
            for j in range(M):
                if ships[j].pos > s.pos + EPS:
                    candidates.append((ships[j].pos, j))
            if candidates:
                candidates.sort()
                pos_front, idx_front = candidates[0]
                # distance doit être au moins 1km
                pos_limit = pos_front - 1.0
                if pos_limit < next_pos:
                    next_pos = pos_limit

            # Enfin si la vitesse est > 0 on programme arrivée à next_pos
            if s.speed > EPS and next_pos > s.pos + EPS:
                schedule_ship_arrival(i, next_pos, current_time)
    # Méthode: on procède par itérations d'évènements:

    # Initialisation:
    current_time = 0.0
    # Tous les bateaux démarrent immobiles, on met vitesse max possible en ajustant constraints
    # Ils sont espacés de 1km, plus lentes propagées

    # mets vitesse max pour tous (le premier le max, les autres sont plus lents donc peuvent aller direct a leur vitesse max)
    for i in range(M):
        ships[i].speed = ships[i].Vmax

    # Adjuste vitesses pour respecter distances initiales:
    adjust_speeds(current_time)
    reschedule_all_arrivals(current_time)

    # On garde l'etat d'evènements de sas:
    # sas_target_level[i], None si pas de changement, sinon True/False

    # Procéder par boucle d'évènements
    while True:
        # Si aucun bateau n'a fini on break si pas d'évènements ?

        # Condition finale : tous les bateaux sont au-delà de K (fin du pays)
        done_all = True
        for i in range(M):
            if not ships[i].done:
                done_all = False
                break
        if done_all:
            # Fin de simulation, afficher temps actuel
            return current_time

        if not event_queue:
            # Plus d'évènements => on peut avancer le temps au prochain changement imaginaire (on a bouclé)
            # Cela ne devrait pas arriver car on a toujours des évènements pour les bateaux
            # ou sas.
            # Pour éviter un blocage, on avance un petit pas
            dt = 1e-4
            for i in range(M):
                s = ships[i]
                if s.done:
                    continue
                s.pos += s.speed * dt
            current_time += dt
            continue

        # Prendre évènement suivant
        time_ev, ev_type, param = heapq.heappop(event_queue)

        # Avancer le temps...
        dt = time_ev - current_time
        if dt < -EPS:
            # Evènement antérieur au temps actuel => bug dans la file, on ignore
            continue
        # Déplacer les bateaux en fonction de leur vitesse et dt
        for i in range(M):
            if ships[i].done:
                continue
            ships[i].pos += ships[i].speed * dt
        current_time = time_ev

        if ev_type == 1:
            # Bateau i arrive à position pos cible
            i, pos = param
            s = ships[i]
            # Corriger position exacte possible à cause erreurs flottantes:
            s.pos = pos

            # Vérifier si fin atteint --> s.pos >= K
            if s.pos >= K - EPS:
                s.done = True
                s.speed = 0.0
                ship_in_sas[i] = None
                # Quand bateau fini, on doit laisser le suivant accélérer s'il peut
                # Re-ajuster vitesses et réordonner evènements
                adjust_speeds(current_time)
                reschedule_all_arrivals(current_time)
                continue

            # Vérifier s'il a atteint un gate X

            if pos in gate_positions_set:
                # C'est une position de sas
                gate_i = gate_positions.index(pos)
                g = gates[gate_i]

                # Scénarios:

                # 1) Si bateau est devant sas (juste arrive dessus) et dans sens d'entree, 
                # il ne peut entrer que si sas niveau = niveau coté ouest

                # Determinons si bateau est à l'entrée (ou sortie) ou côté sas
                # Cas entree sas:
                # Si bateau n'est pas dans sas, il essaie d'entrer si sas_level = côté ouest du gate
                # Il doit s'arreter devant sas sinon

                if ship_in_sas[i] is None:
                    # Bateau devant sas
                    # sas_level vs niveau ouest
                    # niveau ouest est le plus haut ou bas selon UD et sas_level booléen

                    # Niveau ouest: si UD=0 => est haut, ouest bas
                    # UD=0 => ouest bas (False), est haut (True)
                    # UD=1 => ouest haut (True), est bas (False)
                    if g.UD == 0:
                        west_level = False
                    else:
                        west_level = True

                    # Le bateau peut entrer dans sas que si sas_level == niveau ouest
                    if sas_level[gate_i] == west_level and sas_inside[gate_i] is None:
                        # Bateau entre dans sas
                        ship_in_sas[i] = gate_i
                        sas_inside[gate_i] = i
                        # Bateau s'arrête dans sas, vitesse=0
                        ships[i].speed = 0.0

                        # Début de changement niveau
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16543753445148468
    2. '\n' → logprob: -2.1654374599456787
    3. '<|end|>' → logprob: -4.290437698364258
    4. '\' → logprob: -4.665437698364258
    5. 'newline' → logprob: -5.415437698364258
    6. '```' → logprob: -6.165437698364258
    7. 'import' → logprob: -6.290437698364258
    8. '<|end|>' → logprob: -6.540437698364258
    9. '' → logprob: -7.040437698364258
    10. '
' → logprob: -7.290437698364258

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2694591283798218
    2. '\n' → logprob: -2.7694592475891113
    3. 'import' → logprob: -3.1444592475891113
    4. '<|end|>' → logprob: -3.2694592475891113
    5. '\' → logprob: -3.3944592475891113
    6. '
' → logprob: -3.6444592475891113
    7. '```' → logprob: -4.394459247589111
    8. '

' → logprob: -5.269459247589111
    9. '<|end|>' → logprob: -5.269459247589111
    10. ',' → logprob: -5.894459247589111

Token 6: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22251643240451813
    2. '```' → logprob: -2.9725165367126465
    3. '\' → logprob: -3.0975165367126465
    4. '\n' → logprob: -3.2225165367126465
    5. 'import' → logprob: -3.4725165367126465
    6. ',' → logprob: -4.5975165367126465
    7. 'def' → logprob: -5.7225165367126465
    8. '*' → logprob: -5.8475165367126465
    9. '#' → logprob: -5.8475165367126465
    10. '(' → logprob: -6.2225165367126465

Token 7: ' Const' (ID: 19594)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.606051504611969
    2. ' def' → logprob: -1.1060514450073242
    3. 'def' → logprob: -2.231051445007324
    4. ' factorial' → logprob: -6.231051445007324
    5. ' #' → logprob: -6.731051445007324
    6. ' ' → logprob: -6.731051445007324
    7. ' is' → logprob: -6.856051445007324
    8. 'import' → logprob: -7.106051445007324
    9. ' import' → logprob: -7.231051445007324
    10. ' 

' → logprob: -7.356051445007324

Token 8: 'antes' (ID: 5193)
  Prédit: 'ants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.11189763247966766
    2. 'ant' → logprob: -2.3618977069854736
    3. 'a' → logprob: -4.9868974685668945
    4. 's' → logprob: -6.4868974685668945
    5. 'anst' → logprob: -6.9868974685668945
    6. ' ant' → logprob: -7.3618974685668945
    7. 'ANTS' → logprob: -7.8618974685668945
    8. '_' → logprob: -8.111897468566895
    9. ' ants' → logprob: -8.486897468566895
    10. '_ant' → logprob: -8.861897468566895

Token 9: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35362708568573
    2. 'S' → logprob: -1.72862708568573
    3. ':' → logprob: -2.9786272048950195
    4. '```' → logprob: -3.6036272048950195
    5. '_SPACE' → logprob: -4.9786272048950195
    6. '\' → logprob: -4.9786272048950195
    7. 'PI' → logprob: -5.6036272048950195
    8. '_S' → logprob: -5.7286272048950195
    9. ' =' → logprob: -5.7286272048950195
    10. '_PI' → logprob: -5.8536272048950195

Token 10: ' résoudre' (ID: 134006)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3118804693222046
    2. ' les' → logprob: -1.4368804693222046
    3. ' l' → logprob: -4.311880588531494
    4. ' le' → logprob: -5.061880588531494
    5. 'les' → logprob: -5.436880588531494
    6. ' ' → logprob: -6.561880588531494
    7. 'la' → logprob: -6.686880588531494
    8. 'l' → logprob: -6.936880588531494
    9. 'le' → logprob: -7.061880588531494
    10. ' pi' → logprob: -7.061880588531494

Token 11: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8759251236915588
    2. ' l' → logprob: -1.250925064086914
    3. ' ' → logprob: -2.000925064086914
    4. ' le' → logprob: -2.125925064086914
    5. ' des' → logprob: -3.875925064086914
    6. 'l' → logprob: -4.625925064086914
    7. 'le' → logprob: -5.625925064086914
    8. 'les' → logprob: -6.250925064086914
    9. '_' → logprob: -6.625925064086914
    10. ' quadratic' → logprob: -6.625925064086914

Token 12: ' problèmes' (ID: 49822)
  Prédit: 'équ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'équ' → logprob: -0.27798354625701904
    2. ' equations' → logprob: -2.5279836654663086
    3. 'é' → logprob: -3.1529836654663086
    4. ' équ' → logprob: -3.2779836654663086
    5. 'quadr' → logprob: -3.6529836654663086
    6. ' quadratic' → logprob: -4.152983665466309
    7. ' problèmes' → logprob: -4.152983665466309
    8. ' quadr' → logprob: -4.902983665466309
    9. 'pro' → logprob: -6.152983665466309
    10. ' math' → logprob: -6.277983665466309

Token 13: ' de' (ID: 334)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6300207376480103
    2. ':' → logprob: -1.3800207376480103
    3. ' de' → logprob: -1.8800207376480103
    4. ' ' → logprob: -3.8800206184387207
    5. 's' → logprob: -4.380020618438721
    6. '<|end|>' → logprob: -5.005020618438721
    7. '_' → logprob: -5.880020618438721
    8. ' ' → logprob: -6.005020618438721
    9. '```' → logprob: -6.005020618438721
    10. 'import' → logprob: -6.130020618438721

Token 14: ' précision' (ID: 130591)
  Prédit: ' physique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' physique' → logprob: -0.2607307732105255
    2. ' triangle' → logprob: -2.510730743408203
    3. ' triangles' → logprob: -2.635730743408203
    4. ' gé' → logprob: -3.885730743408203
    5. 'triangle' → logprob: -4.885730743408203
    6. ' mécanique' → logprob: -5.260730743408203
    7. ' mouvement' → logprob: -5.385730743408203
    8. ' trig' → logprob: -5.385730743408203
    9. 'cin' → logprob: -5.635730743408203
    10. 'équ' → logprob: -5.885730743408203

Token 15: ' flott' (ID: 108700)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.1231985092163086
    2. ' ' → logprob: -1.8731985092163086
    3. ':' → logprob: -2.2481985092163086
    4. ',' → logprob: -2.7481985092163086
    5. ' des' → logprob: -2.9981985092163086
    6. 'import' → logprob: -3.1231985092163086
    7. 's' → logprob: -3.1231985092163086
    8. ' de' → logprob: -3.1231985092163086
    9. ' ,' → logprob: -3.7481985092163086
    10. 'e' → logprob: -4.123198509216309

Token 16: 'ante' (ID: 2116)
  Prédit: 'antes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.31097471714019775
    2. 'ante' → logprob: -1.4359747171401978
    3. 'ant' → logprob: -4.560974597930908
    4. 'é' → logprob: -4.935974597930908
    5. 'a' → logprob: -5.435974597930908
    6. 'e' → logprob: -6.310974597930908
    7. 'ation' → logprob: -6.935974597930908
    8. 'ants' → logprob: -7.060974597930908
    9. 'ée' → logprob: -7.185974597930908
    10. '```' → logprob: -7.810974597930908

Token 17: '
' (ID: 198)
  Prédit: 'epsilon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'epsilon' → logprob: -0.9895485639572144
    2. '_' → logprob: -1.6145485639572144
    3. 'EPS' → logprob: -1.8645485639572144
    4. ' epsilon' → logprob: -2.614548683166504
    5. 'E' → logprob: -3.364548683166504
    6. 's' → logprob: -3.614548683166504
    7. 'e' → logprob: -3.864548683166504
    8. ':' → logprob: -3.864548683166504
    9. ',' → logprob: -4.114548683166504
    10. ' ' → logprob: -4.239548683166504

Token 18: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.39633721113204956
    2. 'epsilon' → logprob: -1.8963372707366943
    3. ' epsilon' → logprob: -1.8963372707366943
    4. ' EPS' → logprob: -4.646337032318115
    5. '_eps' → logprob: -4.771337032318115
    6. '_' → logprob: -5.521337032318115
    7. 'E' → logprob: -6.396337032318115
    8. '_E' → logprob: -6.771337032318115
    9. 'eps' → logprob: -8.146337509155273
    10. 'FLOAT' → logprob: -8.271337509155273

Token 19: ' =' (ID: 314)
  Prédit: 'ILON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILON' → logprob: -0.2718735337257385
    2. ' =' → logprob: -1.7718734741210938
    3. '=' → logprob: -3.1468734741210938
    4. '_' → logprob: -3.7718734741210938
    5. ' _' → logprob: -7.646873474121094
    6. '__' → logprob: -8.146873474121094
    7. '=_' → logprob: -8.396873474121094
    8. '   ' → logprob: -8.521873474121094
    9. '_=' → logprob: -9.021873474121094
    10. '  ' → logprob: -9.146873474121094

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01104935072362423
    2. '1' → logprob: -4.511049270629883
    3. '10' → logprob: -13.886049270629883
    4. ' ' → logprob: -15.011049270629883
    5. '0' → logprob: -15.386049270629883
    6. '2' → logprob: -17.136049270629883
    7. ' sys' → logprob: -19.011049270629883
    8. '  ' → logprob: -19.136049270629883
    9. '```' → logprob: -19.136049270629883
    10. '​' → logprob: -19.511049270629883

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014168919064104557
    2. ' ' → logprob: -4.264168739318848
    3. '10' → logprob: -12.264168739318848
    4. '   ' → logprob: -16.014169692993164
    5. '2' → logprob: -16.139169692993164
    6. '0' → logprob: -16.264169692993164
    7. ' ' → logprob: -16.514169692993164
    8. '```' → logprob: -16.764169692993164
    9. '  ' → logprob: -16.889169692993164
    10. '=' → logprob: -17.014169692993164

Token 22: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18337012827396393
    2. '-' → logprob: -1.8083701133728027
    3. '0' → logprob: -5.683370113372803
    4. 'E' → logprob: -9.683370590209961
    5. '.' → logprob: -9.808370590209961
    6. '-e' → logprob: -9.933370590209961
    7. '```' → logprob: -10.558370590209961
    8. '-
' → logprob: -11.683370590209961
    9. '^-' → logprob: -12.933370590209961
    10. '−' → logprob: -13.058370590209961

Token 23: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. '7' → logprob: -17.125
    3. '9' → logprob: -17.375
    4. '8' → logprob: -17.75
    5. '−' → logprob: -17.75
    6. '```' → logprob: -18.0
    7. ' -' → logprob: -18.125
    8. '6' → logprob: -18.5
    9. '10' → logprob: -18.75
    10. '3' → logprob: -19.125

Token 24: '12' (ID: 899)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.022493602707982063
    2. '09' → logprob: -4.272493839263916
    3. '12' → logprob: -5.272493839263916
    4. '10' → logprob: -5.897493839263916
    5. '7' → logprob: -8.147493362426758
    6. '15' → logprob: -9.522493362426758
    7. '-' → logprob: -10.897493362426758
    8. '8' → logprob: -11.272493362426758
    9. '07' → logprob: -11.397493362426758
    10. '08' → logprob: -12.147493362426758

Token 25: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22131793200969696
    2. '

' → logprob: -1.7213178873062134
    3. '' → logprob: -4.471317768096924
    4. ' ' → logprob: -5.846317768096924
    5. ' 

' → logprob: -6.846317768096924
    6. '\' → logprob: -7.096317768096924
    7. '\n' → logprob: -7.096317768096924
    8. ' 
' → logprob: -7.346317768096924
    9. '


' → logprob: -7.346317768096924
    10. '
' → logprob: -7.471317768096924

Token 26: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2378576397895813
    2. '

' → logprob: -1.6128575801849365
    3. 'def' → logprob: -4.487857818603516
    4. '


' → logprob: -8.487857818603516
    5. '
' → logprob: -8.612857818603516
    6. '\n' → logprob: -8.612857818603516
    7. '' → logprob: -8.612857818603516
    8. '#' → logprob: -8.862857818603516
    9. '\' → logprob: -9.487857818603516
    10. '
 
' → logprob: -10.487857818603516

Token 27: ' Gate' (ID: 47325)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20002977550029755
    2. ' Float' → logprob: -3.0750298500061035
    3. ' My' → logprob: -3.2000298500061035
    4. ' Space' → logprob: -3.5750298500061035
    5. ' Floating' → logprob: -3.9500298500061035
    6. ' Solver' → logprob: -4.5750298500061035
    7. ' Calculator' → logprob: -4.8250298500061035
    8. ' Complex' → logprob: -5.4500298500061035
    9. ' Precision' → logprob: -5.4500298500061035
    10. ' ' → logprob: -5.4500298500061035

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006882481975480914
    2. '(' → logprob: -7.750688076019287
    3. ' :' → logprob: -8.375688552856445
    4. ':
' → logprob: -11.875688552856445
    5. '():' → logprob: -12.000688552856445
    6. '(:' → logprob: -12.125688552856445
    7. ':**' → logprob: -12.250688552856445
    8. '):' → logprob: -13.625688552856445
    9. '(":' → logprob: -14.500688552856445
    10. '```' → logprob: -14.875688552856445

Token 29: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25507205724716187
    2. '   ' → logprob: -1.8800721168518066
    3. ' :' → logprob: -2.8800721168518066
    4. '(' → logprob: -4.880072116851807
    5. ' ' → logprob: -5.880072116851807
    6. '    ' → logprob: -6.380072116851807
    7. '  ' → logprob: -7.130072116851807
    8. ':
' → logprob: -7.130072116851807
    9. ' (' → logprob: -7.505072116851807
    10. ' :
' → logprob: -7.755072116851807

Token 30: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10029400885105133
    2. 'def' (adapté à ' def') → logprob: -2.3502941131591797
    3. '   ' → logprob: -9.47529411315918
    4. ' pass' → logprob: -11.85029411315918
    5. ' de' → logprob: -14.10029411315918
    6. ' """' → logprob: -14.35029411315918
    7. ' ' → logprob: -14.35029411315918
    8. 'de' → logprob: -14.72529411315918
    9. 'pass' → logprob: -14.72529411315918
    10. '    ' → logprob: -15.72529411315918

Token 31: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.15230749547481537
    2. 'nit' → logprob: -2.6523075103759766
    3. 'init' → logprob: -3.4023075103759766
    4. '__' → logprob: -4.152307510375977
    5. '_init' → logprob: -4.277307510375977
    6. ' nit' → logprob: -5.777307510375977
    7. ' init' → logprob: -5.902307510375977
    8. '_' → logprob: -7.277307510375977
    9. 'n' → logprob: -7.777307510375977
    10. 'it' → logprob: -7.902307510375977

Token 32: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -15.75
    3. ' init' → logprob: -17.5
    4. 'in' → logprob: -18.625
    5. 'int' → logprob: -20.125
    6. '_init' → logprob: -21.375
    7. '	init' → logprob: -21.75
    8. 'innit' → logprob: -22.0
    9. 'inite' → logprob: -22.375
    10. ' ' → logprob: -22.75

Token 33: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.023976778611540794
    2. '__' → logprob: -4.148976802825928
    3. '(' → logprob: -5.398976802825928
    4. '(self' → logprob: -6.273976802825928
    5. '__(
' → logprob: -7.273976802825928
    6. ' (' → logprob: -7.898976802825928
    7. '__((' → logprob: -8.52397632598877
    8. '<|end|>' → logprob: -9.14897632598877
    9. '__(*' → logprob: -9.89897632598877
    10. '__('' → logprob: -10.39897632598877

Token 34: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018164340406656265
    2. ' self' → logprob: -4.018164157867432
    3. ' ' → logprob: -11.89316463470459
    4. ')' → logprob: -12.89316463470459
    5. ' )' → logprob: -13.01816463470459
    6. '	self' → logprob: -13.64316463470459
    7. '(self' → logprob: -14.14316463470459
    8. '  ' → logprob: -15.89316463470459
    9. '       ' → logprob: -16.268163681030273
    10. ',' → logprob: -16.268163681030273

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9931818842887878
    2. '(' → logprob: -1.6181819438934326
    3. ' (' → logprob: -1.8681819438934326
    4. ' )' → logprob: -2.2431819438934326
    5. ')' → logprob: -2.7431819438934326
    6. ' ,' → logprob: -3.4931819438934326
    7. ' ' → logprob: -3.7431819438934326
    8. '(self' → logprob: -3.8681819438934326
    9. 'self' → logprob: -4.1181817054748535
    10. '_' → logprob: -5.1181817054748535

Token 36: ' X' (ID: 2127)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9082722067832947
    2. ' name' → logprob: -1.0332722663879395
    3. ' type' → logprob: -2.2832722663879395
    4. 'self' → logprob: -2.9082722663879395
    5. 'name' → logprob: -3.2832722663879395
    6. 'type' → logprob: -3.6582722663879395
    7. ' input' → logprob: -4.6582722663879395
    8. ' inputs' → logprob: -5.7832722663879395
    9. ' )' → logprob: -6.5332722663879395
    10. 'input' → logprob: -6.6582722663879395

Token 37: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.33857375383377075
    2. ',' → logprob: -1.463573694229126
    3. ')' → logprob: -3.213573694229126
    4. ' ):' → logprob: -5.338573932647705
    5. ' ,' → logprob: -5.588573932647705
    6. '_' → logprob: -6.463573932647705
    7. ' )' → logprob: -6.463573932647705
    8. ':' → logprob: -6.463573932647705
    9. '[' → logprob: -8.213573455810547
    10. '  ' → logprob: -8.338573455810547

Token 38: ' L' (ID: 451)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.6977165937423706
    2. ' Y' → logprob: -0.6977165937423706
    3. 'y' → logprob: -6.44771671295166
    4. ' y' → logprob: -6.57271671295166
    5. ' n' → logprob: -7.69771671295166
    6. ' ' → logprob: -8.07271671295166
    7. 'n' → logprob: -8.19771671295166
    8. ')' → logprob: -9.07271671295166
    9. ' name' → logprob: -10.44771671295166
    10. ' input' → logprob: -10.57271671295166

Token 39: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04424558952450752
    2. 'e' → logprob: -4.669245719909668
    3. 'ength' → logprob: -4.669245719909668
    4. 'ist' → logprob: -4.919245719909668
    5. ',' → logprob: -5.169245719909668
    6. ' ):' → logprob: -6.419245719909668
    7. ')' → logprob: -6.419245719909668
    8. 'en' → logprob: -7.044245719909668
    9. '):
' → logprob: -7.294245719909668
    10. 'o' → logprob: -7.294245719909668

Token 40: ' F' (ID: 454)
  Prédit: ' Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.5470132231712341
    2. 'Y' → logprob: -1.297013282775879
    3. ' ' → logprob: -4.297013282775879
    4. ' U' → logprob: -4.547013282775879
    5. ' R' → logprob: -4.797013282775879
    6. ' M' → logprob: -4.859513282775879
    7. ' O' → logprob: -4.922013282775879
    8. ' C' → logprob: -5.047013282775879
    9. ' T' → logprob: -5.359513282775879
    10. 'n' → logprob: -5.359513282775879

Token 41: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014999852515757084
    2. ',' → logprob: -4.764999866485596
    3. ' ):' → logprob: -6.139999866485596
    4. ')' → logprob: -6.764999866485596
    5. 'unction' → logprob: -7.264999866485596
    6. '):
' → logprob: -7.389999866485596
    7. 'a' → logprob: -8.764999389648438
    8. 'o' → logprob: -8.889999389648438
    9. '):
' → logprob: -9.014999389648438
    10. 'u' → logprob: -9.077499389648438

Token 42: ' D' (ID: 415)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -1.8233091831207275
    2. 'R' → logprob: -2.7608091831207275
    3. ' M' → logprob: -2.8858091831207275
    4. ' Y' → logprob: -3.0108091831207275
    5. ' O' → logprob: -3.0733091831207275
    6. ' ' → logprob: -3.1983091831207275
    7. ' C' → logprob: -3.2608091831207275
    8. ' T' → logprob: -3.5733091831207275
    9. ' S' → logprob: -3.6358091831207275
    10. ' N' → logprob: -3.6358091831207275

Token 43: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005007467232644558
    2. ')' → logprob: -5.505007266998291
    3. ',' → logprob: -7.255007266998291
    4. ' ):' → logprob: -9.00500774383545
    5. '):
' → logprob: -9.88000774383545
    6. '=' → logprob: -11.25500774383545
    7. ':' → logprob: -11.75500774383545
    8. '_' → logprob: -12.50500774383545
    9. '=None' → logprob: -13.25500774383545
    10. '   ' → logprob: -13.38000774383545

Token 44: ' UD' (ID: 121618)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -2.162994384765625
    2. ' M' → logprob: -2.662994384765625
    3. ' C' → logprob: -2.725494384765625
    4. ' ' → logprob: -2.850494384765625
    5. ' O' → logprob: -2.912994384765625
    6. ' T' → logprob: -2.975494384765625
    7. ' S' → logprob: -3.162994384765625
    8. ' P' → logprob: -3.162994384765625
    9. 'R' → logprob: -3.412994384765625
    10. ' I' → logprob: -3.600494384765625

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05032360553741455
    2. ',' → logprob: -3.550323486328125
    3. ')' → logprob: -4.550323486328125
    4. ' ):' → logprob: -5.300323486328125
    5. '=' → logprob: -6.675323486328125
    6. '_' → logprob: -7.175323486328125
    7. 'C' → logprob: -8.425323486328125
    8. 'G' → logprob: -8.425323486328125
    9. 'T' → logprob: -8.550323486328125
    10. 'U' → logprob: -8.675323486328125

Token 46: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1610167771577835
    2. ':' → logprob: -2.0360167026519775
    3. ',' → logprob: -4.661016941070557
    4. ')' → logprob: -5.036016941070557
    5. '       ' → logprob: -6.661016941070557
    6. '   ' → logprob: -8.036016464233398
    7. '):
' → logprob: -8.286016464233398
    8. ' :' → logprob: -9.161016464233398
    9. '=' → logprob: -9.911016464233398
    10. '.' → logprob: -9.911016464233398

Token 47: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16141825914382935
    2. 'self' (adapté à ' self') → logprob: -1.9114181995391846
    3. '       ' → logprob: -7.411418437957764
    4. ' ' → logprob: -8.411417961120605
    5. '        ' → logprob: -8.536417961120605
    6. '    ' → logprob: -10.286417961120605
    7. '   ' → logprob: -11.161417961120605
    8. ' ' → logprob: -11.161417961120605
    9. ' 
' → logprob: -11.286417961120605
    10. ':' → logprob: -11.411417961120605

Token 48: '.X' (ID: 8869)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00048620346933603287
    2. ' .' → logprob: -8.000486373901367
    3. '.X' → logprob: -8.875486373901367
    4. ' ' → logprob: -13.000486373901367
    5. ' =' → logprob: -13.500486373901367
    6. '.
' → logprob: -13.750486373901367
    7. '.=' → logprob: -13.750486373901367
    8. '.I' → logprob: -14.000486373901367
    9. '=' → logprob: -14.125486373901367
    10. '.E' → logprob: -14.625486373901367

Token 49: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28295016288757324
    2. ' =' → logprob: -1.7829501628875732
    3. '=' → logprob: -3.1579501628875732
    4. ' ,' → logprob: -4.032950401306152
    5. '[' → logprob: -5.157950401306152
    6. ')' → logprob: -5.282950401306152
    7. '<|end|>' → logprob: -5.782950401306152
    8. '.' → logprob: -6.407950401306152
    9. '<|end|>' → logprob: -7.782950401306152
    10. ' ' → logprob: -8.032950401306152

Token 50: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.201441690325737
    2. 'X' → logprob: -1.7014416456222534
    3. ' ' → logprob: -10.701441764831543
    4. '	X' → logprob: -12.451441764831543
    5. 'x' → logprob: -14.201441764831543
    6. ' ' → logprob: -14.451441764831543
    7. ' x' → logprob: -14.826441764831543
    8. '    ' → logprob: -15.951441764831543
    9. '[' → logprob: -16.826440811157227
    10. '_X' → logprob: -16.826440811157227

Token 51: '        ' (ID: 269)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' Position' (ID: 21829)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6357806324958801
    2. ' X' → logprob: -0.7607806324958801
    3. ' ' → logprob: -6.1357808113098145
    4. ' float' → logprob: -8.260780334472656
    5. 'int' → logprob: -9.010780334472656
    6. 'float' → logprob: -9.010780334472656
    7. ' int' → logprob: -9.385780334472656
    8. ' L' → logprob: -9.635780334472656
    9. '0' → logprob: -9.885780334472656
    10. '  ' → logprob: -10.010780334472656

Token 54: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' seuil' (ID: 194475)
  Prédit: ' gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gate' → logprob: -0.14518991112709045
    2. 'gate' → logprob: -2.2701900005340576
    3. '_gate' → logprob: -5.1451897621154785
    4. 'Gate' → logprob: -5.6451897621154785
    5. ' point' → logprob: -5.7701897621154785
    6. ' portail' → logprob: -5.7701897621154785
    7. 'point' → logprob: -5.7701897621154785
    8. 'port' → logprob: -5.8951897621154785
    9. 'g' → logprob: -6.8951897621154785
    10. ' Gate' → logprob: -7.0826897621154785

Token 56: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: 'km' (ID: 15284)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44730129837989807
    2. ' seuil' → logprob: -1.5723012685775757
    3. ' )' → logprob: -2.4473013877868652
    4. 'se' → logprob: -3.4473013877868652
    5. 'threshold' → logprob: -5.322301387786865
    6. ',' → logprob: -5.572301387786865
    7. 'le' → logprob: -6.197301387786865
    8. ' le' → logprob: -6.322301387786865
    9. ' de' → logprob: -6.447301387786865
    10. 'int' → logprob: -6.447301387786865

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004914337769150734
    2. ')
' → logprob: -7.750491619110107
    3. ' )' → logprob: -10.12549114227295
    4. ',' → logprob: -11.62549114227295
    5. '<|end|>' → logprob: -12.00049114227295
    6. '')' → logprob: -13.50049114227295
    7. ')
' → logprob: -13.62549114227295
    8. ')

' → logprob: -14.75049114227295
    9. '),' → logprob: -14.87549114227295
    10. ' )
' → logprob: -15.00049114227295

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01961125247180462
    2. '        ' → logprob: -4.394611358642578
    3. '<|end|>' → logprob: -6.019611358642578
    4. '        
' → logprob: -6.644611358642578
    5. '
' → logprob: -6.644611358642578
    6. ' ' → logprob: -7.269611358642578
    7. ',' → logprob: -8.269611358642578
    8. 'self' → logprob: -8.269611358642578
    9. '      ' → logprob: -8.519611358642578
    10. ' 
' → logprob: -8.894611358642578

Token 60: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3201386630535126
    2. ' self' → logprob: -1.320138692855835
    3. 'L' → logprob: -5.320138454437256
    4. '       ' → logprob: -7.195138454437256
    5. ' L' → logprob: -7.445138454437256
    6. ' ' → logprob: -8.695138931274414
    7. '        ' → logprob: -8.695138931274414
    8. '    ' → logprob: -9.570138931274414
    9. ' ' → logprob: -9.695138931274414
    10. ',' → logprob: -10.445138931274414

Token 61: '.L' (ID: 2024)
  Prédit: '.L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.L' → logprob: -0.2706436514854431
    2. '.' → logprob: -1.645643711090088
    3. ' .' → logprob: -3.145643711090088
    4. '.X' → logprob: -8.02064323425293
    5. '.D' → logprob: -8.64564323425293
    6. '.I' → logprob: -8.64564323425293
    7. 'L' → logprob: -9.39564323425293
    8. ' ' → logprob: -9.77064323425293
    9. '.E' → logprob: -10.02064323425293
    10. ' L' → logprob: -10.14564323425293

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06278953701257706
    2. '=' → logprob: -2.8127894401550293
    3. ' ' → logprob: -7.812789440155029
    4. '<|end|>' → logprob: -8.312789916992188
    5. ',' → logprob: -9.812789916992188
    6. ')' → logprob: -11.187789916992188
    7. '  ' → logprob: -11.437789916992188
    8. '<|end|>' → logprob: -11.687789916992188
    9. 'ength' → logprob: -11.937789916992188
    10. '_' → logprob: -12.062789916992188

Token 63: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2519347369670868
    2. ' L' → logprob: -1.5019347667694092
    3. ' ' → logprob: -12.251935005187988
    4. '  ' → logprob: -15.501935005187988
    5. '	L' → logprob: -16.251934051513672
    6. 'int' → logprob: -16.689434051513672
    7. '   ' → logprob: -16.814434051513672
    8. 'l' → logprob: -16.939434051513672
    9. ' ' → logprob: -17.189434051513672
    10. '    ' → logprob: -17.501934051513672

Token 64: '        ' (ID: 269)
  Prédit: '        '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.43291032314300537
    2. ' =' → logprob: -1.1829103231430054
    3. '=' → logprob: -4.057910442352295
    4. ' ' → logprob: -4.182910442352295
    5. '         ' → logprob: -5.307910442352295
    6. '       ' → logprob: -5.557910442352295
    7. ' #' → logprob: -6.682910442352295
    8. '<|end|>' → logprob: -7.557910442352295
    9. '     ' → logprob: -8.182909965515137
    10. '    ' → logprob: -8.182909965515137

Token 65: ' #' (ID: 1069)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.24240362644195557
    2. ' =' → logprob: -2.367403507232666
    3. ' ' → logprob: -2.992403507232666
    4. '=' → logprob: -3.242403507232666
    5. '         ' → logprob: -4.117403507232666
    6. '       ' → logprob: -5.242403507232666
    7. ',' → logprob: -5.867403507232666
    8. ' #' → logprob: -5.992403507232666
    9. '#' (adapté à ' #') → logprob: -6.992403507232666
    10. ')' → logprob: -7.117403507232666

Token 66: ' Volume' (ID: 36103)
  Prédit: ' longueur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -1.4877907037734985
    2. ' L' → logprob: -1.6127907037734985
    3. ' long' → logprob: -2.362790584564209
    4. ' largeur' → logprob: -2.487790584564209
    5. 'L' → logprob: -2.737790584564209
    6. 'ength' → logprob: -2.862790584564209
    7. ' length' → logprob: -3.362790584564209
    8. ' Long' → logprob: -3.487790584564209
    9. 'arge' → logprob: -3.737790584564209
    10. 'long' → logprob: -3.862790584564209

Token 67: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ''eau' (ID: 38948)
  Prédit: ''eau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''eau' → logprob: -0.02954137697815895
    2. ''' → logprob: -4.654541492462158
    3. 'e' → logprob: -4.904541492462158
    4. '’eau' → logprob: -5.404541492462158
    5. ''é' → logprob: -6.279541492462158
    6. ''air' → logprob: -6.654541492462158
    7. '_e' → logprob: -6.904541492462158
    8. ''e' → logprob: -7.654541492462158
    9. ''entrée' → logprob: -7.654541492462158
    10. '_' → logprob: -8.404541015625

Token 69: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' déplacer' (ID: 142135)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.7420371770858765
    2. 'tr' → logprob: -1.9920371770858765
    3. ' ' → logprob: -2.492037296295166
    4. '  ' → logprob: -2.992037296295166
    5. ' filtr' → logprob: -2.992037296295166
    6. 'pass' → logprob: -2.992037296295166
    7. '   ' → logprob: -3.367037296295166
    8. ' l' → logprob: -3.617037296295166
    9. 'reten' → logprob: -3.742037296295166
    10. ' franch' → logprob: -3.742037296295166

Token 71: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: 'L' (ID: 43)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5006422996520996
    2. 'm' → logprob: -1.7506422996520996
    3. ')' → logprob: -2.0006422996520996
    4. ' km' → logprob: -3.5006422996520996
    5. ' )' → logprob: -3.5006422996520996
    6. ' ' → logprob: -4.3756422996521
    7. ' mètres' → logprob: -6.8756422996521
    8. ' l' → logprob: -7.0631422996521
    9. 'e' → logprob: -7.0631422996521
    10. '    ' → logprob: -7.2506422996521

Token 73: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026710687205195427
    2. ' )' → logprob: -3.6517107486724854
    3. ')
' → logprob: -8.276710510253906
    4. ' )
' → logprob: -9.901710510253906
    5. ')
' → logprob: -10.026710510253906
    6. '   ' → logprob: -11.526710510253906
    7. '')' → logprob: -12.276710510253906
    8. ' )
' → logprob: -12.401710510253906
    9. 'it' → logprob: -12.526710510253906
    10. ',' → logprob: -12.651710510253906

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005875834613107145
    2. '<|end|>' → logprob: -8.000587463378906
    3. 'self' → logprob: -9.125587463378906
    4. '      ' → logprob: -10.500587463378906
    5. ',' → logprob: -10.875587463378906
    6. ' self' → logprob: -11.000587463378906
    7. '<|end|>' → logprob: -11.250587463378906
    8. '        ' → logprob: -11.250587463378906
    9. '   ' → logprob: -11.500587463378906
    10. '        
' → logprob: -11.625587463378906

Token 75: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.30654987692832947
    2. ' self' → logprob: -1.8065499067306519
    3. '       ' → logprob: -2.3065497875213623
    4. '	self' → logprob: -9.556550025939941
    5. ' ' → logprob: -10.181550025939941
    6. ' ' → logprob: -10.556550025939941
    7. '   ' → logprob: -11.181550025939941
    8. '      ' → logprob: -11.431550025939941
    9. 'def' → logprob: -12.431550025939941
    10. '     ' → logprob: -12.431550025939941

Token 76: '.F' (ID: 1737)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.056342318654060364
    2. '.F' → logprob: -2.931342363357544
    3. ' .' → logprob: -7.181342124938965
    4. ' =' → logprob: -8.431342124938965
    5. '.D' → logprob: -8.681342124938965
    6. '=' → logprob: -8.931342124938965
    7. 'F' → logprob: -9.306342124938965
    8. ' F' → logprob: -11.431342124938965
    9. '.=' → logprob: -11.431342124938965
    10. '.A' → logprob: -12.306342124938965

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0186651311814785
    2. '=' → logprob: -4.143665313720703
    3. ' ' → logprob: -7.143665313720703
    4. 'low' → logprob: -8.018665313720703
    5. '<|end|>' → logprob: -8.268665313720703
    6. 'w' → logprob: -8.393665313720703
    7. 'd' → logprob: -9.268665313720703
    8. 'max' → logprob: -9.268665313720703
    9. 'u' → logprob: -9.768665313720703
    10. '  ' → logprob: -9.768665313720703

Token 78: ' F' (ID: 454)
  Prédit: ' F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.2520699203014374
    2. 'F' → logprob: -1.5020699501037598
    3. ' ' → logprob: -9.377069473266602
    4. '	F' → logprob: -10.627069473266602
    5. ' f' → logprob: -12.127069473266602
    6. '  ' → logprob: -12.252069473266602
    7. ' math' → logprob: -12.252069473266602
    8. 'f' → logprob: -12.752069473266602
    9. '<|end|>' → logprob: -12.877069473266602
    10. ' float' → logprob: -13.002069473266602

Token 79: '        ' (ID: 269)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4014742970466614
    2. '        ' → logprob: -2.1514742374420166
    3. '<|end|>' → logprob: -2.5264742374420166
    4. ' ' → logprob: -2.6514742374420166
    5. ' #' → logprob: -4.151474475860596
    6. '=' → logprob: -4.276474475860596
    7. '<|end|>' → logprob: -5.026474475860596
    8. '       ' → logprob: -5.026474475860596
    9. ',' → logprob: -5.151474475860596
    10. '  ' → logprob: -5.901474475860596

Token 80: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2368997037410736
    2. '=' → logprob: -2.2368996143341064
    3. ' ' → logprob: -3.3618996143341064
    4. ' #' → logprob: -3.4868996143341064
    5. '       ' → logprob: -4.4868998527526855
    6. '        ' → logprob: -4.4868998527526855
    7. '#' (adapté à ' #') → logprob: -5.1118998527526855
    8. ':' → logprob: -5.3618998527526855
    9. '   ' → logprob: -6.6118998527526855
    10. '    ' → logprob: -6.6118998527526855

Token 81: ' Max' (ID: 10093)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.5432037711143494
    2. 'D' → logprob: -0.9182037711143494
    3. ' F' → logprob: -5.793203830718994
    4. 'F' → logprob: -6.043203830718994
    5. ' float' → logprob: -6.418203830718994
    6. 'float' → logprob: -6.418203830718994
    7. ' flow' → logprob: -6.543203830718994
    8. ' flowing' → logprob: -6.668203830718994
    9. 'def' → logprob: -6.793203830718994
    10. ' def' → logprob: -7.168203830718994

Token 82: ' injection' (ID: 39701)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7928050756454468
    2. 'l' → logprob: -2.0428051948547363
    3. 'low' → logprob: -2.1678051948547363
    4. '<|end|>' → logprob: -2.7928051948547363
    5. '_flow' → logprob: -3.0428051948547363
    6. ' débit' → logprob: -3.6678051948547363
    7. ' flow' → logprob: -3.7928051948547363
    8. 'i' → logprob: -3.9178051948547363
    9. 'lux' → logprob: -3.9178051948547363
    10. 'lu' → logprob: -4.292805194854736

Token 83: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ''eau' (ID: 38948)
  Prédit: 'lux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lux' → logprob: -0.6418357491493225
    2. 'l' → logprob: -1.0168356895446777
    3. 'low' → logprob: -2.6418356895446777
    4. 'lu' → logprob: -3.8918356895446777
    5. 'luent' → logprob: -4.516835689544678
    6. 'e' → logprob: -6.141835689544678
    7. '_' → logprob: -6.891835689544678
    8. '_l' → logprob: -7.141835689544678
    9. 'luss' → logprob: -7.766835689544678
    10. ' low' → logprob: -8.266836166381836

Token 85: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' heure' (ID: 40341)
  Prédit: ' seconde'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seconde' → logprob: -0.5144632458686829
    2. ' ' → logprob: -2.389463186264038
    3. 's' → logprob: -2.639463186264038
    4. ' unité' → logprob: -2.764463186264038
    5. ' pas' → logprob: -3.764463186264038
    6. ' s' → logprob: -3.889463186264038
    7. ' se' → logprob: -4.076963424682617
    8. 'se' → logprob: -4.076963424682617
    9. '  ' → logprob: -4.639463424682617
    10. ' une' → logprob: -5.326963424682617

Token 87: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: 'L' (ID: 43)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47041773796081543
    2. ' )' → logprob: -1.2204177379608154
    3. 'h' → logprob: -3.2204177379608154
    4. 'L' → logprob: -4.7204179763793945
    5. '')' → logprob: -5.3454179763793945
    6. ' ' → logprob: -5.4704179763793945
    7. 'l' → logprob: -5.8454179763793945
    8. ' L' → logprob: -6.0954179763793945
    9. 'heure' → logprob: -6.3454179763793945
    10. 'H' → logprob: -6.4704179763793945

Token 89: '/h' (ID: 14174)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011069044470787048
    2. ' )' → logprob: -5.136068820953369
    3. '/h' → logprob: -5.761068820953369
    4. '/' → logprob: -7.261068820953369
    5. 'h' → logprob: -7.261068820953369
    6. ')
' → logprob: -8.011069297790527
    7. '/s' → logprob: -9.636069297790527
    8. ' )
' → logprob: -10.636069297790527
    9. '#' → logprob: -10.761069297790527
    10. ' /' → logprob: -10.886069297790527

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00048763392260298133
    2. ' )' → logprob: -8.125487327575684
    3. ')
' → logprob: -8.750487327575684
    4. '#' → logprob: -12.125487327575684
    5. '')' → logprob: -12.125487327575684
    6. '<|end|>' → logprob: -12.125487327575684
    7. ',' → logprob: -12.500487327575684
    8. ')
' → logprob: -13.125487327575684
    9. ')#' → logprob: -13.500487327575684
    10. ')

' → logprob: -13.625487327575684

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037952077109366655
    2. 'self' → logprob: -5.878795146942139
    3. ' self' → logprob: -7.003795146942139
    4. '   ' → logprob: -10.753795623779297
    5. '      ' → logprob: -11.128795623779297
    6. ',' → logprob: -11.503795623779297
    7. '     ' → logprob: -11.628795623779297
    8. ' ' → logprob: -12.253795623779297
    9. '	self' → logprob: -12.503795623779297
    10. '<|end|>' → logprob: -12.628795623779297

Token 92: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6763657331466675
    2. '       ' → logprob: -0.8013657331466675
    3. ' self' → logprob: -3.176365852355957
    4. ' ' → logprob: -8.301365852355957
    5. '   ' → logprob: -8.926365852355957
    6. ')' → logprob: -8.926365852355957
    7. '	self' → logprob: -9.051365852355957
    8. '     ' → logprob: -9.926365852355957
    9. '      ' → logprob: -9.926365852355957
    10. '        ' → logprob: -10.051365852355957

Token 93: '.D' (ID: 1696)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024279789067804813
    2. '.D' → logprob: -6.12742805480957
    3. 'D' → logprob: -8.75242805480957
    4. ' .' → logprob: -9.62742805480957
    5. '<|end|>' → logprob: -12.25242805480957
    6. 'u' → logprob: -13.37742805480957
    7. '.U' → logprob: -13.37742805480957
    8. ')' → logprob: -13.37742805480957
    9. '=' → logprob: -14.12742805480957
    10. '#' → logprob: -14.37742805480957

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00417313352227211
    2. '=' → logprob: -5.504173278808594
    3. '<|end|>' → logprob: -9.754173278808594
    4. ' ' → logprob: -11.504173278808594
    5. ',' → logprob: -12.004173278808594
    6. 'elta' → logprob: -12.629173278808594
    7. 'c' → logprob: -13.129173278808594
    8. '_' → logprob: -13.254173278808594
    9. '<|end|>' → logprob: -13.379173278808594
    10. 'u' → logprob: -13.941673278808594

Token 95: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.1271233856678009
    2. 'D' → logprob: -2.1271233558654785
    3. ' ' → logprob: -9.002123832702637
    4. '	D' → logprob: -10.502123832702637
    5. ' math' → logprob: -11.939623832702637
    6. '0' → logprob: -12.377123832702637
    7. 'int' → logprob: -12.627123832702637
    8. '  ' → logprob: -12.627123832702637
    9. ' ' → logprob: -12.939623832702637
    10. '     ' → logprob: -13.127123832702637

Token 96: '        ' (ID: 269)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35634052753448486
    2. '        ' → logprob: -1.4813405275344849
    3. ' ' → logprob: -3.6063404083251953
    4. '       ' → logprob: -4.106340408325195
    5. ' #' → logprob: -4.606340408325195
    6. '=' → logprob: -4.606340408325195
    7. ',' → logprob: -6.481340408325195
    8. '<|end|>' → logprob: -6.731340408325195
    9. '      ' → logprob: -6.981340408325195
    10. '#' → logprob: -6.981340408325195

Token 97: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7915127277374268
    2. ' #' → logprob: -1.7915127277374268
    3. '        ' → logprob: -1.9165127277374268
    4. '       ' → logprob: -2.6665127277374268
    5. '=' → logprob: -2.7915127277374268
    6. ' ' → logprob: -3.1665127277374268
    7. '#' (adapté à ' #') → logprob: -3.2915127277374268
    8. '    ' → logprob: -5.041512489318848
    9. '      ' → logprob: -5.166512489318848
    10. '     ' → logprob: -5.541512489318848

Token 98: ' Max' (ID: 10093)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.821591317653656
    2. ' D' → logprob: -1.0715913772583008
    3. 'Duration' → logprob: -3.821591377258301
    4. ' def' → logprob: -4.071591377258301
    5. ' ' → logprob: -4.509091377258301
    6. '  ' → logprob: -4.509091377258301
    7. ' Duration' → logprob: -4.634091377258301
    8. 'Direction' → logprob: -4.759091377258301
    9. 'd' → logprob: -4.884091377258301
    10. ' max' → logprob: -4.946591377258301

Token 99: ' vid' (ID: 11217)
  Prédit: ' débit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' débit' → logprob: -1.442535638809204
    2. 'dé' → logprob: -1.567535638809204
    3. ' ' → logprob: -1.692535638809204
    4. ' dé' → logprob: -2.817535638809204
    5. ' d' → logprob: -3.567535638809204
    6. 'é' → logprob: -3.692535638809204
    7. '  ' → logprob: -3.817535638809204
    8. ' sortie' → logprob: -3.817535638809204
    9. ' fuite' → logprob: -3.817535638809204
    10. ' de' → logprob: -3.942535638809204

Token 100: 'age' (ID: 477)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.06387589871883392
    2. 'e' → logprob: -3.313875913619995
    3. 'él' → logprob: -5.188875675201416
    4. 'uration' → logprob: -5.313875675201416
    5. 'urée' → logprob: -6.063875675201416
    6. '=' → logprob: -7.063875675201416
    7. 'ée' → logprob: -7.063875675201416
    8. 'rain' → logprob: -7.376375675201416
    9. 'éf' → logprob: -7.438875675201416
    10. ''é' → logprob: -7.563875675201416

Token 101: ' d' (ID: 272)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.22258998453617096
    2. 'par' → logprob: -1.9725899696350098
    3. ' (' → logprob: -3.8475899696350098
    4. ' per' → logprob: -3.8475899696350098
    5. ' ' → logprob: -4.59758996963501
    6. '_par' → logprob: -6.09758996963501
    7. 'per' → logprob: -6.47258996963501
    8. ' de' → logprob: -7.59758996963501
    9. '<|end|>' → logprob: -7.59758996963501
    10. ' d' → logprob: -8.222590446472168

Token 102: ''eau' (ID: 38948)
  Prédit: ''eau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''eau' → logprob: -0.013849534094333649
    2. 'e' → logprob: -4.38884973526001
    3. '’eau' → logprob: -6.76384973526001
    4. '_e' → logprob: -9.138849258422852
    5. ''e' → logprob: -10.638849258422852
    6. ''' → logprob: -11.513849258422852
    7. 'u' → logprob: -12.263849258422852
    8. ' eau' → logprob: -12.263849258422852
    9. ''heure' → logprob: -12.388849258422852
    10. ''espace' → logprob: -12.888849258422852

Token 103: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.2482408732175827
    2. 'par' → logprob: -2.1232409477233887
    3. ' (' → logprob: -2.3732409477233887
    4. ' ' → logprob: -5.623240947723389
    5. ' per' → logprob: -6.998240947723389
    6. '(par' → logprob: -7.123240947723389
    7. '_par' → logprob: -7.873240947723389
    8. '(' → logprob: -8.74824047088623
    9. ' /' → logprob: -8.87324047088623
    10. '<|end|>' → logprob: -8.87324047088623

Token 104: ' heure' (ID: 40341)
  Prédit: ' heure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heure' → logprob: -0.22700265049934387
    2. 'heure' → logprob: -1.6020026206970215
    3. ' ' → logprob: -7.2270026206970215
    4. 'he' → logprob: -8.35200309753418
    5. ''heure' → logprob: -8.60200309753418
    6. 'h' → logprob: -9.10200309753418
    7. ' hour' → logprob: -9.10200309753418
    8. 'hour' → logprob: -9.22700309753418
    9. 'heur' → logprob: -10.60200309753418
    10. ' hora' → logprob: -11.10200309753418

Token 105: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27222001552581787
    2. ' (' → logprob: -2.0222201347351074
    3. '<|end|>' → logprob: -2.3972201347351074
    4. '        ' → logprob: -5.522220134735107
    5. '(' → logprob: -5.647220134735107
    6. ')' → logprob: -6.022220134735107
    7. ' ' → logprob: -6.772220134735107
    8. '<|end|>' → logprob: -7.022220134735107
    9. ' )' → logprob: -7.647220134735107
    10. '   ' → logprob: -7.772220134735107

Token 106: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.06553458422422409
    2. ' L' → logprob: -3.1905345916748047
    3. ')' → logprob: -3.9405345916748047
    4. '/L' → logprob: -7.315534591674805
    5. 'h' → logprob: -7.440534591674805
    6. ')L' → logprob: -7.815534591674805
    7. '/h' → logprob: -8.315534591674805
    8. ' ' → logprob: -8.440534591674805
    9. '   ' → logprob: -8.440534591674805
    10. '  ' → logprob: -8.815534591674805

Token 107: '/h' (ID: 14174)
  Prédit: '/h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/h' → logprob: -0.00372728006914258
    2. '/' → logprob: -6.003727436065674
    3. ')' → logprob: -6.878727436065674
    4. '/s' → logprob: -9.003726959228516
    5. ' /' → logprob: -10.003726959228516
    6. '/hr' → logprob: -10.378726959228516
    7. ')
' → logprob: -12.003726959228516
    8. 'h' → logprob: -12.378726959228516
    9. '/j' → logprob: -12.628726959228516
    10. '/hour' → logprob: -13.253726959228516

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020989900454878807
    2. ')
' → logprob: -3.8959898948669434
    3. ' )' → logprob: -8.020990371704102
    4. ' )
' → logprob: -9.770990371704102
    5. '):
' → logprob: -10.895990371704102
    6. '       ' → logprob: -11.020990371704102
    7. '   ' → logprob: -11.645990371704102
    8. ')
' → logprob: -11.895990371704102
    9. ')

' → logprob: -12.020990371704102
    10. '):' → logprob: -13.270990371704102

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008720364421606064
    2. 'self' → logprob: -7.1258721351623535
    3. ' self' → logprob: -9.625871658325195
    4. '	self' → logprob: -14.875871658325195
    5. '
' → logprob: -15.000871658325195
    6. '        
' → logprob: -15.250871658325195
    7. '	' → logprob: -15.500871658325195
    8. '   ' → logprob: -15.500871658325195
    9. '<|end|>' → logprob: -16.375871658325195
    10. '      ' → logprob: -16.375871658325195

Token 110: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8693995475769043
    2. 'self' (adapté à ' self') → logprob: -1.1193995475769043
    3. ' self' → logprob: -1.3693995475769043
    4. '	self' → logprob: -10.744400024414062
    5. '      ' → logprob: -11.494400024414062
    6. '        ' → logprob: -11.869400024414062
    7. ' ' → logprob: -11.994400024414062
    8. ' ' → logprob: -12.244400024414062
    9. '   ' → logprob: -12.619400024414062
    10. '     ' → logprob: -12.869400024414062

Token 111: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009049764834344387
    2. '.U' → logprob: -4.759049892425537
    3. 'UD' → logprob: -9.009049415588379
    4. ' .' → logprob: -9.009049415588379
    5. '.UP' → logprob: -10.259049415588379
    6. '.UN' → logprob: -10.634049415588379
    7. '   ' → logprob: -10.884049415588379
    8. ' ' → logprob: -10.884049415588379
    9. '.UR' → logprob: -11.384049415588379
    10. '.D' → logprob: -11.509049415588379

Token 112: 'UD' (ID: 7965)
  Prédit: 'UD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UD' → logprob: -5.676981345459353e-06
    2. 'U' → logprob: -12.625005722045898
    3. 'ud' → logprob: -14.125005722045898
    4. 'UID' → logprob: -14.250005722045898
    5. 'D' → logprob: -14.625005722045898
    6. 'def' → logprob: -16.1250057220459
    7. ' UD' → logprob: -16.2500057220459
    8. 'Ud' → logprob: -16.3750057220459
    9. 'UR' → logprob: -17.2500057220459
    10. '   ' → logprob: -17.3750057220459

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25199681520462036
    2. '=' → logprob: -1.5019967555999756
    3. ' ' → logprob: -9.626996994018555
    4. ',' → logprob: -14.001996994018555
    5. ')' → logprob: -14.751996994018555
    6. '  ' → logprob: -14.876996994018555
    7. '   ' → logprob: -17.001996994018555
    8. '_' → logprob: -17.376996994018555
    9. '=None' → logprob: -17.376996994018555
    10. ' )' → logprob: -17.626996994018555

Token 114: ' UD' (ID: 121618)
  Prédit: 'UD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UD' → logprob: -0.00474482262507081
    2. ' UD' → logprob: -5.379745006561279
    3. '0' → logprob: -9.504744529724121
    4. ' ' → logprob: -10.629744529724121
    5. 'U' → logprob: -11.254744529724121
    6. '   ' → logprob: -12.879744529724121
    7. '-' → logprob: -13.129744529724121
    8. 'ud' → logprob: -13.754744529724121
    9. 'D' → logprob: -13.879744529724121
    10. 'Ud' → logprob: -14.129744529724121

Token 115: '      ' (ID: 1699)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15381640195846558
    2. '=' → logprob: -2.0288164615631104
    3. ' ' → logprob: -4.528816223144531
    4. '        ' → logprob: -9.653816223144531
    5. '       ' → logprob: -9.653816223144531
    6. '   ' → logprob: -9.778816223144531
    7. '    ' → logprob: -10.028816223144531
    8. '  ' → logprob: -10.903816223144531
    9. '=None' → logprob: -12.153816223144531
    10. '     ' → logprob: -12.403816223144531

Token 116: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4349503815174103
    2. '=' → logprob: -1.059950351715088
    3. ' ' → logprob: -6.184950351715088
    4. '#' (adapté à ' #') → logprob: -6.559950351715088
    5. ' #' → logprob: -6.559950351715088
    6. '       ' → logprob: -6.809950351715088
    7. '   ' → logprob: -9.684950828552246
    8. ':' → logprob: -10.559950828552246
    9. ',' → logprob: -10.684950828552246
    10. ')' → logprob: -10.934950828552246

Token 117: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.774251937866211
    2. ' ' → logprob: -1.774251937866211
    3. ' bool' → logprob: -2.899251937866211
    4. ' Un' → logprob: -3.024251937866211
    5. ' True' → logprob: -3.024251937866211
    6. ' sens' → logprob: -3.461751937866211
    7. '1' → logprob: -3.586751937866211
    8. ' Sens' → logprob: -3.649251937866211
    9. 'UD' → logprob: -3.899251937866211
    10. ' '' → logprob: -4.024251937866211

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5978703498840332
    2. ' bool' → logprob: -1.7228703498840332
    3. 'bool' → logprob: -1.8478703498840332
    4. ' ' → logprob: -2.722870349884033
    5. ' int' → logprob: -2.972870349884033
    6. '1' → logprob: -3.097870349884033
    7. 'UD' → logprob: -3.222870349884033
    8. '"' → logprob: -3.847870349884033
    9. 'True' → logprob: -3.972870349884033
    10. 'int' → logprob: -4.222870349884033

Token 119: ' :' (ID: 712)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.12215647846460342
    2. ' #' → logprob: -2.6221563816070557
    3. ' or' → logprob: -3.7471563816070557
    4. ' ' → logprob: -4.622156620025635
    5. ' if' → logprob: -6.122156620025635
    6. 'ou' → logprob: -6.497156620025635
    7. ' /' → logprob: -6.872156620025635
    8. '/' → logprob: -6.872156620025635
    9. '#' → logprob: -6.997156620025635
    10. ' pour' → logprob: -7.622156620025635

Token 120: ' est' (ID: 893)
  Prédit: ' ouverture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ouverture' → logprob: -1.4519476890563965
    2. ' sens' → logprob: -1.7019476890563965
    3. '1' → logprob: -1.9519476890563965
    4. ' ' → logprob: -2.8269476890563965
    5. ' True' → logprob: -3.0769476890563965
    6. ' False' → logprob: -3.5769476890563965
    7. ' ouvrir' → logprob: -3.7019476890563965
    8. ' vid' → logprob: -3.8269476890563965
    9. ' -' → logprob: -3.8269476890563965
    10. ' up' → logprob: -4.0144476890563965

Token 121: ' plus' (ID: 2932)
  Prédit: 'imation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imation' → logprob: -1.4029334783554077
    2. 'imer' → logprob: -1.6529334783554077
    3. 't' → logprob: -2.2779335975646973
    4. 'ime' → logprob: -2.4029335975646973
    5. '_' → logprob: -3.4029335975646973
    6. 'e' → logprob: -3.6529335975646973
    7. 'à' → logprob: -4.402933597564697
    8. 'en' → logprob: -4.402933597564697
    9. 'ernal' → logprob: -4.402933597564697
    10. '_un' → logprob: -4.527933597564697

Token 122: ' haut' (ID: 28223)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.1430635452270508
    2. 't' → logprob: -1.8930635452270508
    3. 'un' → logprob: -2.893063545227051
    4. ' une' → logprob: -2.893063545227051
    5. 'imal' → logprob: -3.393063545227051
    6. ' ou' → logprob: -3.518063545227051
    7. ' haut' → logprob: -3.643063545227051
    8. ' élevé' → logprob: -3.643063545227051
    9. ' ' → logprob: -3.893063545227051
    10. 'ou' → logprob: -3.893063545227051

Token 123: ' que' (ID: 661)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.42097026109695435
    2. ',' → logprob: -1.1709702014923096
    3. ' or' → logprob: -5.170970439910889
    4. ' ' → logprob: -5.170970439910889
    5. 'ou' → logprob: -5.670970439910889
    6. ' (' → logprob: -5.670970439910889
    7. '       ' → logprob: -6.045970439910889
    8. ';' → logprob: -6.170970439910889
    9. ' ,' → logprob: -6.420970439910889
    10. '0' → logprob: -6.420970439910889

Token 124: ' ou' (ID: 2031)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.133277416229248
    2. '0' → logprob: -1.258277416229248
    3. 'l' → logprob: -2.258277416229248
    4. 'le' → logprob: -2.633277416229248
    5. 'UD' → logprob: -2.758277416229248
    6. 'la' → logprob: -3.508277416229248
    7. ' self' → logprob: -3.633277416229248
    8. ' la' → logprob: -4.258277416229248
    9. ' le' → logprob: -4.258277416229248
    10. ' l' → logprob: -4.758277416229248

Token 125: 'est' (ID: 376)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.7417018413543701
    2. ' ' → logprob: -1.3667018413543701
    3. ' bas' → logprob: -2.74170184135437
    4. ' égal' → logprob: -2.74170184135437
    5. ' =' → logprob: -4.116702079772949
    6. ' equal' → logprob: -4.241702079772949
    7. '  ' → logprob: -4.366702079772949
    8. '=' → logprob: -4.366702079772949
    9. ' egal' → logprob: -4.616702079772949
    10. ' eg' → logprob: -4.991702079772949

Token 126: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09707053750753403
    2. '1' → logprob: -2.4720704555511475
    3. '0' → logprob: -5.222070693969727
    4. ' None' → logprob: -6.722070693969727
    5. '  ' → logprob: -8.222070693969727
    6. '    ' → logprob: -8.847070693969727
    7. '       ' → logprob: -8.847070693969727
    8. '        ' → logprob: -8.847070693969727
    9. ' ' → logprob: -9.097070693969727
    10. ' True' → logprob: -9.222070693969727

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22671028971672058
    2. ' ' → logprob: -1.726710319519043
    3. '#' → logprob: -4.601710319519043
    4. ' #' → logprob: -5.476710319519043
    5. '0' → logprob: -5.601710319519043
    6. ' None' → logprob: -6.601710319519043
    7. '  ' → logprob: -6.726710319519043
    8. 'None' → logprob: -7.101710319519043
    9. ''' → logprob: -7.601710319519043
    10. '   ' → logprob: -7.726710319519043

Token 129: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.30504459142684937
    2. ':' → logprob: -1.4300446510314941
    3. ' =' → logprob: -4.680044651031494
    4. ' ' → logprob: -5.180044651031494
    5. ' ou' → logprob: -6.305044651031494
    6. ' est' → logprob: -6.305044651031494
    7. '=' → logprob: -6.930044651031494
    8. 'est' → logprob: -7.180044651031494
    9. '  ' → logprob: -7.680044651031494
    10. ' plus' → logprob: -7.930044651031494

Token 130: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.8727286458015442
    2. ' est' → logprob: -0.8727286458015442
    3. ' ' → logprob: -2.1227285861968994
    4. '1' → logprob: -4.3727288246154785
    5. '0' → logprob: -4.7477288246154785
    6. ' east' → logprob: -5.3727288246154785
    7. ' plus' → logprob: -5.6227288246154785
    8. ' sud' → logprob: -5.7477288246154785
    9. ' ou' → logprob: -6.1227288246154785
    10. '  ' → logprob: -6.2477288246154785

Token 131: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.5168087482452393
    2. 'plus' → logprob: -2.1418087482452393
    3. ' :' → logprob: -2.2668087482452393
    4. ':' → logprob: -3.2668087482452393
    5. ' ou' → logprob: -3.3918087482452393
    6. 'est' → logprob: -3.3918087482452393
    7. ' est' → logprob: -3.7668087482452393
    8. ' =' → logprob: -4.89180850982666
    9. ' ' → logprob: -5.14180850982666
    10. ' et' → logprob: -5.14180850982666

Token 132: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.08549337834119797
    2. 'b' → logprob: -2.960493326187134
    3. 'haut' → logprob: -3.835493326187134
    4. ' bas' → logprob: -5.460493564605713
    5. 'é' → logprob: -6.960493564605713
    6. '```' → logprob: -7.585493564605713
    7. 'ha' → logprob: -7.960493564605713
    8. 'loin' → logprob: -8.085493087768555
    9. ' élevé' → logprob: -8.335493087768555
    10. 'élé' → logprob: -8.460493087768555

Token 133: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.02737472392618656
    2. 'l' → logprob: -4.777374744415283
    3. ' ou' → logprob: -5.402374744415283
    4. ' l' → logprob: -5.402374744415283
    5. '0' → logprob: -5.527374744415283
    6. '```' → logprob: -6.152374744415283
    7. ' ' → logprob: -6.652374744415283
    8. 'o' → logprob: -7.152374744415283
    9. ''ou' → logprob: -8.152374267578125
    10. 'O' → logprob: -8.902374267578125

Token 135: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.023202959448099136
    2. 'uest' → logprob: -4.648202896118164
    3. 'st' → logprob: -5.523202896118164
    4. 's' → logprob: -6.898202896118164
    5. '```' → logprob: -6.898202896118164
    6. 'e' → logprob: -7.398202896118164
    7. '-' → logprob: -7.523202896118164
    8. '>' → logprob: -7.523202896118164
    9. '#' → logprob: -7.710702896118164
    10. 'es' → logprob: -7.835702896118164

Token 136: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6640715003013611
    2. '<|end|>' → logprob: -0.9140715003013611
    3. '   ' → logprob: -2.789071559906006
    4. '<|end|>' → logprob: -4.914071559906006
    5. 'def' → logprob: -6.164071559906006
    6. '    
' → logprob: -6.164071559906006
    7. '\n' → logprob: -6.289071559906006
    8. ')' → logprob: -6.414071559906006
    9. ' 
' → logprob: -6.664071559906006
    10. ':' → logprob: -6.664071559906006

Token 138: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' Initial' (ID: 9209)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20843714475631714
    2. ' self' → logprob: -1.833437204360962
    3. 'def' → logprob: -3.958437204360962
    4. '       ' → logprob: -5.458436965942383
    5. '#' → logprob: -6.208436965942383
    6. ' def' → logprob: -6.958436965942383
    7. 'if' → logprob: -7.708436965942383
    8. '   ' → logprob: -8.083436965942383
    9. 'import' → logprob: -8.083436965942383
    10. ' #' → logprob: -8.458436965942383

Token 140: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -1.3294113874435425
    2. 'ize' → logprob: -1.8294113874435425
    3. 'isation' → logprob: -2.329411506652832
    4. '_volume' → logprob: -2.329411506652832
    5. 'izer' → logprob: -2.579411506652832
    6. 'e' → logprob: -3.454411506652832
    7. 'ialize' → logprob: -3.579411506652832
    8. 'ise' → logprob: -3.579411506652832
    9. 'ization' → logprob: -3.704411506652832
    10. 'ement' → logprob: -3.704411506652832

Token 141: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45432406663894653
    2. ' self' → logprob: -1.8293240070343018
    3. 'self' → logprob: -2.2043240070343018
    4. ' des' → logprob: -3.0793240070343018
    5. ' de' → logprob: -3.8293240070343018
    6. ' =' → logprob: -4.704324245452881
    7. '<|end|>' → logprob: -5.579324245452881
    8. ' of' → logprob: -5.704324245452881
    9. ' du' → logprob: -6.329324245452881
    10. ',' → logprob: -6.329324245452881

Token 142: ' niveau' (ID: 21708)
  Prédit: ' volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -1.3559513092041016
    2. ' self' → logprob: -1.4809513092041016
    3. ' niveau' → logprob: -2.1059513092041016
    4. 'self' → logprob: -2.4809513092041016
    5. 'volume' → logprob: -2.8559513092041016
    6. 'state' → logprob: -3.7309513092041016
    7. ' state' → logprob: -3.7309513092041016
    8. ' débit' → logprob: -3.7309513092041016
    9. ' current' → logprob: -3.8559513092041016
    10. ' courant' → logprob: -3.9809513092041016

Token 143: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27361536026000977
    2. '       ' → logprob: -2.1486153602600098
    3. ' de' → logprob: -3.3986153602600098
    4. 's' → logprob: -3.8986153602600098
    5. ' d' → logprob: -3.8986153602600098
    6. ',' → logprob: -5.14861536026001
    7. '_current' → logprob: -5.39861536026001
    8. ' du' → logprob: -5.64861536026001
    9. ' actuelle' → logprob: -5.64861536026001
    10. ' actuel' → logprob: -5.89861536026001

Token 144: ' sas' (ID: 51515)
  Prédit: 'seau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seau' → logprob: -1.670689344406128
    2. 'lac' → logprob: -2.045689344406128
    3. 'b' → logprob: -2.170689344406128
    4. 'ré' → logprob: -2.420689344406128
    5. ' lac' → logprob: -2.670689344406128
    6. 'e' → logprob: -2.670689344406128
    7. 'niveau' → logprob: -3.045689344406128
    8. 'se' → logprob: -3.170689344406128
    9. ' seuil' → logprob: -3.420689344406128
    10. ' ré' → logprob: -3.545689344406128

Token 145: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40172863006591797
    2. '       ' → logprob: -1.276728630065918
    3. 'self' → logprob: -3.401728630065918
    4. ' self' → logprob: -4.776728630065918
    5. '=' → logprob: -5.151728630065918
    6. ',' → logprob: -6.026728630065918
    7. '=self' → logprob: -7.526728630065918
    8. ':' → logprob: -8.276728630065918
    9. 's' → logprob: -8.901728630065918
    10. '(self' → logprob: -9.026728630065918

Token 146: ' départ' (ID: 32693)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5563051700592041
    2. 'self' → logprob: -0.9313051700592041
    3. '       ' → logprob: -4.056304931640625
    4. '0' → logprob: -4.306304931640625
    5. ' ' → logprob: -6.431304931640625
    6. ' =' → logprob: -10.181304931640625
    7. '(self' → logprob: -10.743804931640625
    8. ' X' → logprob: -10.993804931640625
    9. ' L' → logprob: -11.181304931640625
    10. ' (' → logprob: -11.493804931640625

Token 147: ' au' (ID: 2791)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5463476777076721
    2. '       ' → logprob: -1.4213476181030273
    3. 'self' → logprob: -2.4213476181030273
    4. ' self' → logprob: -2.7963476181030273
    5. '=' → logprob: -3.9213476181030273
    6. ',' → logprob: -5.671347618103027
    7. '=self' → logprob: -6.296347618103027
    8. ' à' → logprob: -6.671347618103027
    9. ':' → logprob: -7.921347618103027
    10. '0' → logprob: -8.046347618103027

Token 148: ' niveau' (ID: 21708)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07837782800197601
    2. ' ' → logprob: -4.453377723693848
    3. 'niveau' → logprob: -4.453377723693848
    4. 'X' → logprob: -4.828377723693848
    5. ' niveau' → logprob: -4.828377723693848
    6. 'O' → logprob: -5.078377723693848
    7. 'L' → logprob: -5.703377723693848
    8. '   ' → logprob: -6.453377723693848
    9. 'D' → logprob: -6.578377723693848
    10. 'plus' → logprob: -6.890877723693848

Token 149: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6456243395805359
    2. 'de' → logprob: -2.0206243991851807
    3. '=' → logprob: -2.5206243991851807
    4. ' =' → logprob: -2.6456243991851807
    5. ' de' → logprob: -2.8956243991851807
    6. ' ' → logprob: -3.3956243991851807
    7. '   ' → logprob: -3.8956243991851807
    8. 'O' → logprob: -4.145624160766602
    9. 'est' → logprob: -4.645624160766602
    10. '       ' → logprob: -4.645624160766602

Token 150: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.05731020122766495
    2. ' plus' → logprob: -3.682310104370117
    3. 'niveau' → logprob: -4.932310104370117
    4. 'e' → logprob: -5.307310104370117
    5. 'sol' → logprob: -5.432310104370117
    6. 'bas' → logprob: -5.807310104370117
    7. 'X' → logprob: -6.057310104370117
    8. '+' → logprob: -6.432310104370117
    9. 'minimum' → logprob: -6.807310104370117
    10. 'moins' → logprob: -6.932310104370117

Token 151: ' bas' (ID: 3222)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.3744882643222809
    2. 'bas' → logprob: -1.2494882345199585
    3. 'b' → logprob: -4.624488353729248
    4. ' haut' → logprob: -4.749488353729248
    5. 'é' → logprob: -5.999488353729248
    6. 'ha' → logprob: -6.374488353729248
    7. ' bas' → logprob: -6.874488353729248
    8. ' élevé' → logprob: -7.624488353729248
    9. '```' → logprob: -7.624488353729248
    10. 'e' → logprob: -7.999488353729248

Token 152: ' entre' (ID: 3853)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5366131067276001
    2. '       ' → logprob: -1.9116131067276
    3. ' self' → logprob: -2.0366129875183105
    4. ' =' → logprob: -2.4116129875183105
    5. ',' → logprob: -4.0366129875183105
    6. '(self' → logprob: -4.9116129875183105
    7. '
' → logprob: -5.2866129875183105
    8. '0' → logprob: -6.1616129875183105
    9. '=' → logprob: -6.2866129875183105
    10. '        
' → logprob: -6.4116129875183105

Token 153: ' les' (ID: 1341)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.909310221672058
    2. ' X' → logprob: -1.909310221672058
    3. ' O' → logprob: -2.4093103408813477
    4. ' l' → logprob: -2.4093103408813477
    5. 'O' → logprob: -2.5343103408813477
    6. 'self' → logprob: -2.5343103408813477
    7. 'l' → logprob: -2.7843103408813477
    8. 'UD' → logprob: -2.9093103408813477
    9. ' les' → logprob: -3.0343103408813477
    10. 'est' → logprob: -3.1593103408813477

Token 154: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6549739837646484
    2. ' deux' → logprob: -0.7799739837646484
    3. ' two' → logprob: -5.279973983764648
    4. 'X' → logprob: -5.904973983764648
    5. ' ' → logprob: -6.029973983764648
    6. '2' → logprob: -6.279973983764648
    7. 'two' → logprob: -6.279973983764648
    8. 'O' → logprob: -7.154973983764648
    9. 'L' → logprob: -7.279973983764648
    10. ' gates' → logprob: -7.592473983764648

Token 155: ' côtés' (ID: 103239)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.24059127271175385
    2. 'self' → logprob: -2.240591287612915
    3. 'des' → logprob: -3.365591287612915
    4. ' de' → logprob: -4.365591049194336
    5. ' self' → logprob: -4.365591049194336
    6. ' entre' → logprob: -4.615591049194336
    7. '<|end|>' → logprob: -4.990591049194336
    8. '(self' → logprob: -5.240591049194336
    9. ' possible' → logprob: -5.490591049194336
    10. ',' → logprob: -5.865591049194336

Token 156: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9900651574134827
    2. 'self' → logprob: -1.365065097808838
    3. '<|end|>' → logprob: -1.740065097808838
    4. ' self' → logprob: -2.240065097808838
    5. ',' → logprob: -2.865065097808838
    6. '.' → logprob: -5.365065097808838
    7. ' :' → logprob: -5.365065097808838
    8. ' if' → logprob: -5.490065097808838
    9. ':' → logprob: -5.490065097808838
    10. '(self' → logprob: -5.990065097808838

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06497305631637573
    2. 'self' → logprob: -3.5649731159210205
    3. '
' → logprob: -4.314972877502441
    4. '<|end|>' → logprob: -4.939972877502441
    5. ',' → logprob: -5.314972877502441
    6. ' self' → logprob: -5.689972877502441
    7. 'if' → logprob: -6.439972877502441
    8. ' if' → logprob: -6.564972877502441
    9. '        
' → logprob: -7.564972877502441
    10. ')' → logprob: -7.814972877502441

Token 158: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19758281111717224
    2. ' self' → logprob: -2.447582721710205
    3. 'if' → logprob: -2.697582721710205
    4. '       ' → logprob: -4.197582721710205
    5. ' if' → logprob: -4.572582721710205
    6. '```' → logprob: -11.822583198547363
    7. 'def' → logprob: -11.947583198547363
    8. '   ' → logprob: -12.072583198547363
    9. 'n' → logprob: -12.197583198547363
    10. '
' → logprob: -12.572583198547363

Token 159: ' hauteur' (ID: 72987)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6374295353889465
    2. ' self' → logprob: -1.1374294757843018
    3. ' if' → logprob: -2.6374294757843018
    4. 'if' → logprob: -2.8874294757843018
    5. '       ' → logprob: -3.7624294757843018
    6. 'def' → logprob: -10.887429237365723
    7. ' ' → logprob: -10.887429237365723
    8. 'n' → logprob: -11.012429237365723
    9. 'niveau' → logprob: -11.137429237365723
    10. 'level' → logprob: -11.262429237365723

Token 160: ' relative' (ID: 15001)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10171153396368027
    2. '_init' → logprob: -3.3517115116119385
    3. '_min' → logprob: -3.8517115116119385
    4. '_initial' → logprob: -4.226711750030518
    5. '_' → logprob: -4.851711750030518
    6. '_s' → logprob: -6.101711750030518
    7. ' ' → logprob: -6.101711750030518
    8. '_de' → logprob: -6.476711750030518
    9. '_depart' → logprob: -6.601711750030518
    10. '=' → logprob: -6.726711750030518

Token 161: ' aux' (ID: 5850)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006874264217913151
    2. '=' → logprob: -6.006874084472656
    3. ' ' → logprob: -7.631874084472656
    4. '_' → logprob: -7.881874084472656
    5. '       ' → logprob: -8.131874084472656
    6. '_init' → logprob: -8.131874084472656
    7. ' de' → logprob: -8.256874084472656
    8. 's' → logprob: -8.506874084472656
    9. '   ' → logprob: -8.631874084472656
    10. '_s' → logprob: -8.881874084472656

Token 162: ' eaux' (ID: 110406)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.9002057909965515
    2. '0' → logprob: -1.9002058506011963
    3. 'min' → logprob: -2.5252058506011963
    4. ' ' → logprob: -2.5252058506011963
    5. ' min' → logprob: -3.5252058506011963
    6. ' niveaux' → logprob: -3.5252058506011963
    7. 'b' → logprob: -4.150205612182617
    8. 'de' → logprob: -4.150205612182617
    9. 'X' → logprob: -4.150205612182617
    10. 'l' → logprob: -4.275205612182617

Token 163: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018492771312594414
    2. '=' → logprob: -4.893492698669434
    3. 'est' → logprob: -5.768492698669434
    4. '_' → logprob: -6.768492698669434
    5. 'O' → logprob: -7.268492698669434
    6. '   ' → logprob: -7.518492698669434
    7. '_est' → logprob: -7.518492698669434
    8. ' ' → logprob: -7.768492698669434
    9. 'bas' → logprob: -8.018492698669434
    10. '_bas' → logprob: -8.143492698669434

Token 164: ' côté' (ID: 33533)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.3761192560195923
    2. 'est' → logprob: -3.3761191368103027
    3. ' côtés' → logprob: -3.8761191368103027
    4. ' ' → logprob: -4.126119136810303
    5. 'de' → logprob: -4.188619136810303
    6. 'b' → logprob: -4.563619136810303
    7. 'X' → logprob: -4.626119136810303
    8. '2' → logprob: -4.688619136810303
    9. 'sas' → logprob: -4.688619136810303
    10. 'ud' → logprob: -4.813619136810303

Token 165: ' ou' (ID: 2031)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.5885956883430481
    2. 'est' → logprob: -1.5885956287384033
    3. ' est' → logprob: -2.7135956287384033
    4. 'west' → logprob: -3.2135956287384033
    5. ' O' → logprob: -3.3385956287384033
    6. '   ' → logprob: -3.8385956287384033
    7. ' ou' → logprob: -3.9635956287384033
    8. ' =' → logprob: -5.088595867156982
    9. 'ou' → logprob: -5.213595867156982
    10. '=' → logprob: -5.338595867156982

Token 166: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.006032957695424557
    2. 'uest' → logprob: -6.256032943725586
    3. 'es' → logprob: -6.631032943725586
    4. 'e' → logprob: -7.631032943725586
    5. 'ests' → logprob: -7.881032943725586
    6. '```' → logprob: -8.256032943725586
    7. 'east' → logprob: -8.256032943725586
    8. '   ' → logprob: -8.506032943725586
    9. '      ' → logprob: -9.631032943725586
    10. '``' → logprob: -9.693532943725586

Token 167: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13062819838523865
    2. 'self' → logprob: -3.0056281089782715
    3. ' =' → logprob: -3.2556281089782715
    4. ' self' → logprob: -4.0056281089782715
    5. ',' → logprob: -5.5056281089782715
    6. '<|end|>' → logprob: -5.7556281089782715
    7. ' if' → logprob: -6.5056281089782715
    8. 'if' → logprob: -6.6306281089782715
    9. '=self' → logprob: -6.7556281089782715
    10. '=' → logprob: -6.8806281089782715

Token 168: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.004280684515833855
    2. 'uest' → logprob: -7.1292805671691895
    3. ' est' → logprob: -7.7542805671691895
    4. ' l' → logprob: -7.8792805671691895
    5. 'east' → logprob: -7.8792805671691895
    6. ' de' → logprob: -8.004281044006348
    7. '```' → logprob: -8.379281044006348
    8. 'r' → logprob: -8.754281044006348
    9. 'e' → logprob: -8.816781044006348
    10. 'st' → logprob: -8.941781044006348

Token 169: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19563691318035126
    2. 'self' → logprob: -2.0706369876861572
    3. ' self' → logprob: -4.070636749267578
    4. ',' → logprob: -4.320636749267578
    5. '
' → logprob: -4.445636749267578
    6. '<|end|>' → logprob: -5.820636749267578
    7. ':' → logprob: -6.820636749267578
    8. '(self' → logprob: -7.070636749267578
    9. ' if' → logprob: -7.320636749267578
    10. ' =' → logprob: -7.320636749267578

Token 170: ' on' (ID: 402)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.746418297290802
    2. 'self' → logprob: -0.871418297290802
    3. '       ' → logprob: -3.1214182376861572
    4. ' if' → logprob: -3.2464182376861572
    5. 'if' → logprob: -3.9964182376861572
    6. '0' → logprob: -5.996418476104736
    7. ' min' → logprob: -5.996418476104736
    8. 'min' → logprob: -7.621418476104736
    9. ' ' → logprob: -8.121417999267578
    10. '   ' → logprob: -9.683917999267578

Token 171: ' mod' (ID: 1812)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6763817071914673
    2. ' =' → logprob: -1.4263817071914673
    3. '.' → logprob: -2.6763815879821777
    4. 'self' → logprob: -3.4263815879821777
    5. '       ' → logprob: -3.9263815879821777
    6. '.init' → logprob: -4.176381587982178
    7. 'a' → logprob: -5.051381587982178
    8. ' self' → logprob: -5.051381587982178
    9. 't' → logprob: -5.426381587982178
    10. ' suppose' → logprob: -5.426381587982178

Token 172: 'él' (ID: 6778)
  Prédit: 'ifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.11454544216394424
    2. 'ule' → logprob: -2.4895453453063965
    3. 'ifié' → logprob: -4.4895453453063965
    4. 'if' → logprob: -5.7395453453063965
    5. 'ifier' → logprob: -6.1145453453063965
    6. 'er' → logprob: -6.4895453453063965
    7. 'ifiée' → logprob: -6.8645453453063965
    8. 'e' → logprob: -7.3645453453063965
    9. 'él' → logprob: -7.3645453453063965
    10. 'èle' → logprob: -7.6145453453063965

Token 173: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.056342318654060364
    2. 'e' → logprob: -3.056342363357544
    3. 'é' → logprob: -5.556342124938965
    4. 'is' → logprob: -6.431342124938965
    5. 'isé' → logprob: -7.431342124938965
    6. 'aise' → logprob: -7.806342124938965
    7. 'ize' → logprob: -8.306342124938965
    8. 'es' → logprob: -8.556342124938965
    9. 'er' → logprob: -9.806342124938965
    10. '```' → logprob: -9.806342124938965

Token 174: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3207135200500488
    2. 'self' → logprob: -1.5707135200500488
    3. ' self' → logprob: -1.8207135200500488
    4. ' =' → logprob: -1.8207135200500488
    5. '<|end|>' → logprob: -3.445713520050049
    6. ',' → logprob: -3.570713520050049
    7. '       ' → logprob: -3.945713520050049
    8. '(self' → logprob: -4.070713520050049
    9. ' le' → logprob: -4.195713520050049
    10. ' la' → logprob: -4.195713520050049

Token 175: ' ' (ID: 220)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6137877702713013
    2. 'self' → logprob: -0.9887877702713013
    3. ' if' → logprob: -2.7387876510620117
    4. 'if' → logprob: -4.363787651062012
    5. '       ' → logprob: -5.738787651062012
    6. ' min' → logprob: -5.863787651062012
    7. 'min' → logprob: -7.238787651062012
    8. '0' → logprob: -7.488787651062012
    9. ' max' → logprob: -7.488787651062012
    10. 'max' → logprob: -8.238787651062012

Token 176: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18119479715824127
    2. 'if' → logprob: -2.43119478225708
    3. ' self' → logprob: -3.05619478225708
    4. ' if' → logprob: -3.55619478225708
    5. '       ' → logprob: -6.30619478225708
    6. 'min' → logprob: -8.931195259094238
    7. '0' → logprob: -10.181195259094238
    8. '   ' → logprob: -10.431195259094238
    9. ' min' → logprob: -10.431195259094238
    10. '```' → logprob: -10.806195259094238

Token 177: ' =' (ID: 314)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7345947027206421
    2. '<|end|>' → logprob: -1.859594702720642
    3. ' si' → logprob: -2.4845948219299316
    4. '.' → logprob: -2.4845948219299316
    5. ')' → logprob: -2.8595948219299316
    6. ' ou' → logprob: -2.9845948219299316
    7. 'if' → logprob: -3.4845948219299316
    8. ',' → logprob: -3.6095948219299316
    9. ' et' → logprob: -5.234594821929932
    10. ' pour' → logprob: -5.484594821929932

Token 178: ' bas' (ID: 3222)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.7001561522483826
    2. 'min' → logprob: -1.3251562118530273
    3. '0' → logprob: -2.7001562118530273
    4. 'ou' → logprob: -3.5751562118530273
    5. 'west' → logprob: -3.9501562118530273
    6. 'l' → logprob: -4.075156211853027
    7. 'est' → logprob: -4.200156211853027
    8. ' l' → logprob: -4.325156211853027
    9. 'le' → logprob: -4.825156211853027
    10. 'O' → logprob: -4.950156211853027

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37296900153160095
    2. '<|end|>' → logprob: -1.6229690313339233
    3. ' ou' → logprob: -3.372968912124634
    4. '
' → logprob: -3.372968912124634
    5. ' or' → logprob: -4.372969150543213
    6. ')' → logprob: -4.997969150543213
    7. ' if' → logprob: -5.372969150543213
    8. ' ,' → logprob: -5.497969150543213
    9. ',
' → logprob: -5.622969150543213
    10. ' et' → logprob: -5.872969150543213

Token 180: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6062480211257935
    2. ' ' → logprob: -0.9812480211257935
    3. '0' → logprob: -2.981247901916504
    4. ' -' → logprob: -4.231247901916504
    5. '-' → logprob: -4.856247901916504
    6. ' bas' → logprob: -7.481247901916504
    7. 'self' → logprob: -7.606247901916504
    8. ' min' → logprob: -7.606247901916504
    9. 'min' → logprob: -7.668747901916504
    10. ' "' → logprob: -7.731247901916504

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11579388380050659
    2. ' ' → logprob: -2.2407939434051514
    3. '0' → logprob: -7.240793704986572
    4. '-' → logprob: -7.240793704986572
    5. ' -' → logprob: -7.490793704986572
    6. ' L' → logprob: -8.49079418182373
    7. ' min' → logprob: -9.11579418182373
    8. 'L' → logprob: -9.24079418182373
    9. ' max' → logprob: -9.36579418182373
    10. 'X' → logprob: -9.99079418182373

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1596442610025406
    2. ',' → logprob: -2.909644365310669
    3. '=' → logprob: -2.909644365310669
    4. ' ou' → logprob: -4.15964412689209
    5. '<|end|>' → logprob: -5.15964412689209
    6. 'bas' → logprob: -5.78464412689209
    7. ' ,' → logprob: -5.78464412689209
    8. ' or' → logprob: -6.15964412689209
    9. ' ' → logprob: -6.28464412689209
    10. '.' → logprob: -6.78464412689209

Token 183: ' haut' (ID: 28223)
  Prédit: ' haut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' haut' → logprob: -0.47077327966690063
    2. 'haut' → logprob: -1.2207732200622559
    3. '1' → logprob: -3.095773220062256
    4. 'ha' → logprob: -4.095773220062256
    5. ' ' → logprob: -4.220773220062256
    6. 'bas' → logprob: -6.595773220062256
    7. ' élevé' → logprob: -7.720773220062256
    8. ' bas' → logprob: -7.720773220062256
    9. ' high' → logprob: -8.720773696899414
    10. ' hauts' → logprob: -8.720773696899414

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05782078951597214
    2. 'self' → logprob: -3.5578207969665527
    3. '
' → logprob: -3.9328207969665527
    4. ' self' → logprob: -5.932820796966553
    5. ',' → logprob: -6.807820796966553
    6. ')' → logprob: -7.182820796966553
    7. '        
' → logprob: -7.182820796966553
    8. '<|end|>' → logprob: -7.682820796966553
    9. ')
' → logprob: -7.807820796966553
    10. 'if' → logprob: -8.057820320129395

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021829459816217422
    2. 'self' → logprob: -4.146829605102539
    3. ' self' → logprob: -5.896829605102539
    4. '<|end|>' → logprob: -6.521829605102539
    5. '
' → logprob: -7.896829605102539
    6. ')' → logprob: -8.146829605102539
    7. ',' → logprob: -8.146829605102539
    8. ')
' → logprob: -8.646829605102539
    9. '        
' → logprob: -9.146829605102539
    10. 'if' → logprob: -9.646829605102539

Token 186: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2004060447216034
    2. ' self' → logprob: -1.9504060745239258
    3. '       ' → logprob: -3.450406074523926
    4. 'if' → logprob: -5.200406074523926
    5. ' if' → logprob: -6.200406074523926
    6. '(self' → logprob: -11.200406074523926
    7. 'def' → logprob: -11.325406074523926
    8. '0' → logprob: -11.325406074523926
    9. '	self' → logprob: -11.575406074523926
    10. '   ' → logprob: -11.700406074523926

Token 187: ' Si' (ID: 7832)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9388318657875061
    2. 'self' → logprob: -0.9388318657875061
    3. ' if' → logprob: -2.3138318061828613
    4. '       ' → logprob: -2.5638318061828613
    5. 'if' → logprob: -3.1888318061828613
    6. '#' → logprob: -8.56383228302002
    7. ' ' → logprob: -9.31383228302002
    8. 'def' → logprob: -9.56383228302002
    9. ' #' → logprob: -9.68883228302002
    10. '   ' → logprob: -10.00133228302002

Token 188: ' UD' (ID: 121618)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.17473696172237396
    2. 'self' → logprob: -2.174736976623535
    3. ' UD' → logprob: -3.424736976623535
    4. 'UD' → logprob: -4.299736976623535
    5. ' ' → logprob: -8.674736976623535
    6. ' not' → logprob: -9.549736976623535
    7. '(self' → logprob: -9.549736976623535
    8. ' L' → logprob: -9.924736976623535
    9. ' X' → logprob: -10.612236976623535
    10. ' D' → logprob: -10.987236976623535

Token 189: '=' (ID: 28)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0892404317855835
    2. '==' → logprob: -2.464240550994873
    3. ':' → logprob: -8.214240074157715
    4. ' =' → logprob: -11.464240074157715
    5. '=' → logprob: -11.714240074157715
    6. ' :' → logprob: -12.214240074157715
    7. ' ' → logprob: -13.089240074157715
    8. ' else' → logprob: -13.589240074157715
    9. ' ' → logprob: -13.714240074157715
    10. ' ===' → logprob: -15.464240074157715

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46489688754081726
    2. ' ' → logprob: -1.2148969173431396
    3. '1' → logprob: -2.5898969173431396
    4. '=' → logprob: -10.714897155761719
    5. '   ' → logprob: -13.214897155761719
    6. ' =' → logprob: -13.214897155761719
    7. ' ' → logprob: -13.777397155761719
    8. '  ' → logprob: -13.902397155761719
    9. '==' → logprob: -13.902397155761719
    10. 'True' → logprob: -14.152397155761719

Token 191: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07805261760950089
    2. ' :' → logprob: -3.078052520751953
    3. ',' → logprob: -3.828052520751953
    4. ':
' → logprob: -5.453052520751953
    5. ' :
' → logprob: -7.203052520751953
    6. ' and' → logprob: -7.328052520751953
    7. ' else' → logprob: -7.578052520751953
    8. ' ,' → logprob: -7.703052520751953
    9. ' ==' → logprob: -8.953052520751953
    10. 'else' → logprob: -9.328052520751953

Token 192: ' est' (ID: 893)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35055625438690186
    2. ' self' → logprob: -1.2255562543869019
    3. '0' → logprob: -6.850556373596191
    4. 'niveau' → logprob: -7.850556373596191
    5. ' niveau' → logprob: -8.600556373596191
    6. ' ' → logprob: -9.350556373596191
    7. 'ha' → logprob: -9.600556373596191
    8. '1' → logprob: -10.100556373596191
    9. 'level' → logprob: -10.225556373596191
    10. '   ' → logprob: -10.350556373596191

Token 193: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5136338472366333
    2. ' est' → logprob: -2.2636337280273438
    3. ' =' → logprob: -2.3886337280273438
    4. '==' → logprob: -2.5136337280273438
    5. 'est' → logprob: -3.5136337280273438
    6. '=' → logprob: -3.7636337280273438
    7. ' bas' → logprob: -4.263633728027344
    8. 'bas' → logprob: -5.013633728027344
    9. ' is' → logprob: -5.263633728027344
    10. ' ' → logprob: -5.388633728027344

Token 194: ' haut' (ID: 28223)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3179503381252289
    2. ' plus' → logprob: -1.9429503679275513
    3. 'en' → logprob: -3.1929502487182617
    4. 'au' → logprob: -3.4429502487182617
    5. ' au' → logprob: -4.067950248718262
    6. ' en' → logprob: -4.442950248718262
    7. 'le' → logprob: -4.692950248718262
    8. 'haut' → logprob: -4.942950248718262
    9. 'bas' → logprob: -5.442950248718262
    10. 'ha' → logprob: -6.942950248718262

Token 195: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14431461691856384
    2. ',' → logprob: -2.2693145275115967
    3. 'self' → logprob: -4.519314765930176
    4. '
' → logprob: -4.894314765930176
    5. ' if' → logprob: -5.269314765930176
    6. 'if' → logprob: -6.519314765930176
    7. ' self' → logprob: -6.644314765930176
    8. ';' → logprob: -7.144314765930176
    9. '        
' → logprob: -7.769314765930176
    10. ':' → logprob: -8.019314765930176

Token 196: ' donc' (ID: 14206)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7847943305969238
    2. ' self' → logprob: -2.034794330596924
    3. 'else' → logprob: -2.159794330596924
    4. 'self' → logprob: -2.159794330596924
    5. ' ' → logprob: -2.284794330596924
    6. ' else' → logprob: -2.409794330596924
    7. ' ou' → logprob: -3.159794330596924
    8. ' sinon' → logprob: -3.284794330596924
    9. 'ou' → logprob: -3.534794330596924
    10. ' donc' → logprob: -3.784794330596924

Token 197: ' sas' (ID: 51515)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3390498459339142
    2. ' self' → logprob: -1.3390498161315918
    3. 'niveau' → logprob: -4.339049816131592
    4. ' niveau' → logprob: -5.339049816131592
    5. '0' → logprob: -5.964049816131592
    6. ' ' → logprob: -6.339049816131592
    7. 'level' → logprob: -7.339049816131592
    8. ' level' → logprob: -8.21405029296875
    9. 'bas' → logprob: -8.46405029296875
    10. 'est' → logprob: -8.58905029296875

Token 198: ' initial' (ID: 4871)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5115231275558472
    2. '_level' → logprob: -1.7615231275558472
    3. '=' → logprob: -2.0115232467651367
    4. 'niveau' → logprob: -3.5115232467651367
    5. '_n' → logprob: -3.7615232467651367
    6. '_' → logprob: -4.636523246765137
    7. ' niveau' → logprob: -5.011523246765137
    8. 'level' → logprob: -5.261523246765137
    9. '_position' → logprob: -6.636523246765137
    10. 'N' → logprob: -6.636523246765137

Token 199: ' au' (ID: 2791)
  Prédit: 'isé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isé' → logprob: -1.4768279790878296
    2. 'ise' → logprob: -1.9768279790878296
    3. 'ement' → logprob: -2.101828098297119
    4. 'isation' → logprob: -2.101828098297119
    5. '_level' → logprob: -2.101828098297119
    6. ' =' → logprob: -2.726828098297119
    7. 'e' → logprob: -3.101828098297119
    8. '=' → logprob: -3.101828098297119
    9. '_' → logprob: -3.226828098297119
    10. 'is' → logprob: -4.351828098297119

Token 200: ' bas' (ID: 3222)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32654839754104614
    2. ' bas' → logprob: -1.9515483379364014
    3. ' ' → logprob: -2.5765483379364014
    4. 'bas' → logprob: -2.9515483379364014
    5. '1' → logprob: -5.5765485763549805
    6. ' plus' → logprob: -5.8265485763549805
    7. ' niveau' → logprob: -7.4515485763549805
    8. 'plus' → logprob: -8.32654857635498
    9. 'niveau' → logprob: -9.07654857635498
    10. '_bas' → logprob: -9.32654857635498

Token 201: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1695055961608887
    2. ',' → logprob: -1.4195055961608887
    3. ' (' → logprob: -1.9195055961608887
    4. '0' → logprob: -2.6695055961608887
    5. '<|end|>' → logprob: -2.9195055961608887
    6. '
' → logprob: -3.0445055961608887
    7. '.' → logprob: -3.7945055961608887
    8. 'else' → logprob: -3.9195055961608887
    9. '       ' → logprob: -4.294505596160889
    10. ' else' → logprob: -4.294505596160889

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13059473037719727
    2. ' ' → logprob: -2.6305947303771973
    3. '1' → logprob: -3.0055947303771973
    4. ')' → logprob: -7.255594730377197
    5. '   ' → logprob: -9.380594253540039
    6. ',' → logprob: -10.630594253540039
    7. ' )' → logprob: -10.880594253540039
    8. '  ' → logprob: -11.505594253540039
    9. ' =' → logprob: -11.755594253540039
    10. '    ' → logprob: -12.193094253540039

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006051208823919296
    2. ')
' → logprob: -5.756051063537598
    3. ' )' → logprob: -5.881051063537598
    4. ' )
' → logprob: -10.256051063537598
    5. '),' → logprob: -11.131051063537598
    6. ')
' → logprob: -11.131051063537598
    7. ')

' → logprob: -12.381051063537598
    8. '0' → logprob: -13.131051063537598
    9. ').' → logprob: -13.131051063537598
    10. ')#' → logprob: -13.756051063537598

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032529314048588276
    2. 'self' → logprob: -5.878252983093262
    3. ' self' → logprob: -7.878252983093262
    4. '
' → logprob: -10.753252983093262
    5. '        
' → logprob: -11.253252983093262
    6. ',' → logprob: -11.878252983093262
    7. '   ' → logprob: -12.128252983093262
    8. ')' → logprob: -12.253252983093262
    9. '<|end|>' → logprob: -12.378252983093262
    10. '```' → logprob: -13.128252983093262

Token 205: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07183773070573807
    2. 'self' → logprob: -2.8218376636505127
    3. ' self' → logprob: -4.821837902069092
    4. 'if' → logprob: -7.071837902069092
    5. ' if' → logprob: -7.321837902069092
    6. ')' → logprob: -9.696837425231934
    7. 'else' → logprob: -9.821837425231934
    8. ',' → logprob: -10.696837425231934
    9. 'elif' → logprob: -10.696837425231934
    10. '        
' → logprob: -10.946837425231934

Token 206: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49588075280189514
    2. 'self' → logprob: -1.8708807229995728
    3. ' if' → logprob: -1.9958807229995728
    4. '       ' → logprob: -2.4958808422088623
    5. ' self' → logprob: -4.120880603790283
    6. 'else' → logprob: -6.370880603790283
    7. '   ' → logprob: -8.120881080627441
    8. 'elif' → logprob: -8.245881080627441
    9. ' else' → logprob: -9.745881080627441
    10. ' ' → logprob: -10.745881080627441

Token 207: ' UD' (ID: 121618)
  Prédit: ' UD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' UD' → logprob: -0.35984721779823303
    2. 'UD' → logprob: -1.3598471879959106
    3. ' self' → logprob: -3.7348473072052
    4. 'self' → logprob: -3.8598473072052
    5. ' ' → logprob: -8.609847068786621
    6. ' not' → logprob: -8.984847068786621
    7. ' U' → logprob: -9.859847068786621
    8. ' ud' → logprob: -9.859847068786621
    9. '   ' → logprob: -10.359847068786621
    10. 'not' → logprob: -10.734847068786621

Token 208: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.056618452072143555
    2. '==' → logprob: -3.0566184520721436
    3. ' ==' → logprob: -5.056618690490723
    4. ' =' → logprob: -6.431618690490723
    5. ' ' → logprob: -12.181618690490723
    6. '>' → logprob: -12.681618690490723
    7. ')' → logprob: -13.181618690490723
    8. '!=' → logprob: -13.181618690490723
    9. '==
' → logprob: -14.056618690490723
    10. ',' → logprob: -14.181618690490723

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000890259922016412
    2. '0' → logprob: -7.375890254974365
    3. ' ' → logprob: -8.250890731811523
    4. '' → logprob: -14.313390731811523
    5. '   ' → logprob: -15.438390731811523
    6. '>' → logprob: -15.500890731811523
    7. '۱' → logprob: -15.688390731811523
    8. '

' → logprob: -15.750890731811523
    9. '```' → logprob: -16.000890731811523
    10. '  ' → logprob: -16.063390731811523

Token 210: ' =>' (ID: 871)
  Prédit: ' =>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =>' → logprob: -0.1591707170009613
    2. '=>' → logprob: -2.909170627593994
    3. ':' → logprob: -3.034170627593994
    4. ' :' → logprob: -3.659170627593994
    5. ' ' → logprob: -5.034170627593994
    6. ' ==' → logprob: -5.659170627593994
    7. '=' → logprob: -5.909170627593994
    8. ' =' → logprob: -6.284170627593994
    9. ',' → logprob: -6.909170627593994
    10. '==' → logprob: -7.034170627593994

Token 211: ' est' (ID: 893)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.8881223201751709
    2. ' sas' → logprob: -1.388122320175171
    3. 'est' → logprob: -1.638122320175171
    4. ' est' → logprob: -2.013122320175171
    5. 's' → logprob: -5.26312255859375
    6. ' ' → logprob: -6.38812255859375
    7. ' ou' → logprob: -6.88812255859375
    8. 'ou' → logprob: -7.63812255859375
    9. ' west' → logprob: -8.13812255859375
    10. '  ' → logprob: -8.13812255859375

Token 212: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.0633314698934555
    2. 'est' → logprob: -2.813331365585327
    3. ' is' → logprob: -6.813331604003906
    4. ' ' → logprob: -9.188331604003906
    5. '=' → logprob: -9.688331604003906
    6. 'bas' → logprob: -10.563331604003906
    7. ' =' → logprob: -10.688331604003906
    8. ' ' → logprob: -10.938331604003906
    9. ' bas' → logprob: -11.563331604003906
    10. ''est' → logprob: -12.938331604003906

Token 213: ' bas' (ID: 3222)
  Prédit: ' bas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bas' → logprob: -0.35117098689079285
    2. 'bas' → logprob: -1.2261710166931152
    3. ' haut' → logprob: -6.226171016693115
    4. 'haut' → logprob: -7.476171016693115
    5. ' plus' → logprob: -10.226170539855957
    6. ' ' → logprob: -10.226170539855957
    7. '1' → logprob: -10.351170539855957
    8. 'b' → logprob: -10.476170539855957
    9. '0' → logprob: -11.226170539855957
    10. '_bas' → logprob: -11.351170539855957

Token 214: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10976257920265198
    2. ',' → logprob: -2.984762668609619
    3. 'self' → logprob: -4.234762668609619
    4. ' =' → logprob: -4.359762668609619
    5. '0' → logprob: -4.984762668609619
    6. ' self' → logprob: -5.109762668609619
    7. ' ,' → logprob: -5.484762668609619
    8. ' ' → logprob: -6.109762668609619
    9. '        ' → logprob: -6.234762668609619
    10. ' :' → logprob: -6.859762668609619

Token 215: ' donc' (ID: 14206)
  Prédit: ' donc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donc' → logprob: -0.05042562633752823
    2. ' sas' → logprob: -3.5504255294799805
    3. ' ' → logprob: -4.1754255294799805
    4. 'sas' → logprob: -6.8004255294799805
    5. ' on' → logprob: -7.3004255294799805
    6. 'don' → logprob: -7.5504255294799805
    7. ' le' → logprob: -7.5504255294799805
    8. '    ' → logprob: -7.9254255294799805
    9. ' alors' → logprob: -8.30042552947998
    10. '   ' → logprob: -8.55042552947998

Token 216: ' sas' (ID: 51515)
  Prédit: ' sas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sas' → logprob: -0.18782559037208557
    2. 'sas' → logprob: -1.8128255605697632
    3. 's' → logprob: -5.937825679779053
    4. ' ' → logprob: -6.312825679779053
    5. ' bas' → logprob: -6.312825679779053
    6. 'bas' → logprob: -7.062825679779053
    7. ' ' → logprob: -8.312825202941895
    8. '0' → logprob: -9.312825202941895
    9. ' initial' → logprob: -9.500325202941895
    10. '  ' → logprob: -9.812825202941895

Token 217: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.03605450317263603
    2. 'initial' → logprob: -3.6610546112060547
    3. ' au' → logprob: -5.661054611206055
    4. ' est' → logprob: -5.911054611206055
    5. ' =' → logprob: -6.911054611206055
    6. ' ' → logprob: -6.911054611206055
    7. '_initial' → logprob: -7.661054611206055
    8. 'est' → logprob: -7.911054611206055
    9. '=' → logprob: -8.911054611206055
    10. ' aussi' → logprob: -8.911054611206055

Token 218: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.0077640893869102
    2. 'au' → logprob: -5.257763862609863
    3. ' =' → logprob: -6.632763862609863
    4. '=' → logprob: -7.382763862609863
    5. ' at' → logprob: -7.757763862609863
    6. ' à' → logprob: -9.882763862609863
    7. ' ' → logprob: -10.257763862609863
    8. ' est' → logprob: -10.507763862609863
    9. 'at' → logprob: -11.382763862609863
    10. 'est' → logprob: -11.632763862609863

Token 219: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.5211551189422607
    2. '0' → logprob: -1.2711551189422607
    3. '1' → logprob: -2.1461551189422607
    4. 'haut' → logprob: -5.39615535736084
    5. 'plus' → logprob: -5.77115535736084
    6. ' ' → logprob: -7.14615535736084
    7. 'ha' → logprob: -9.77115535736084
    8. '   ' → logprob: -9.89615535736084
    9. ' bas' → logprob: -10.14615535736084
    10. '  ' → logprob: -10.14615535736084

Token 220: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.012467150576412678
    2. '(' → logprob: -4.512467384338379
    3. ' =' → logprob: -7.137467384338379
    4. '=' → logprob: -7.887467384338379
    5. '0' → logprob: -8.887467384338379
    6. ' ' → logprob: -10.512467384338379
    7. ')' → logprob: -10.887467384338379
    8. ' (=' → logprob: -11.387467384338379
    9. ' au' → logprob: -11.512467384338379
    10. ',' → logprob: -11.637467384338379

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16210101544857025
    2. '1' → logprob: -2.2871010303497314
    3. ' ' → logprob: -3.0371010303497314
    4. ')' → logprob: -9.287100791931152
    5. '   ' → logprob: -11.912100791931152
    6. ' (' → logprob: -13.537100791931152
    7. ' )' → logprob: -13.599600791931152
    8. '(' → logprob: -13.662100791931152
    9. ',' → logprob: -13.974600791931152
    10. '  ' → logprob: -14.099600791931152

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038735889829695225
    2. ' )' → logprob: -5.628873825073242
    3. ')
' → logprob: -8.378873825073242
    4. '0' → logprob: -11.128873825073242
    5. '       ' → logprob: -12.253873825073242
    6. ' )
' → logprob: -12.753873825073242
    7. ')

' → logprob: -12.878873825073242
    8. ')
' → logprob: -13.128873825073242
    9. '),' → logprob: -13.128873825073242
    10. ').' → logprob: -13.128873825073242

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017050558235496283
    2. 'self' → logprob: -6.876705169677734
    3. ' self' → logprob: -7.376705169677734
    4. '        
' → logprob: -11.126705169677734
    5. '
' → logprob: -11.376705169677734
    6. ',' → logprob: -12.376705169677734
    7. '<|end|>' → logprob: -12.876705169677734
    8. '   ' → logprob: -13.001705169677734
    9. '```' → logprob: -13.626705169677734
    10. '0' → logprob: -13.876705169677734

Token 224: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13012710213661194
    2. 'self' → logprob: -2.505127191543579
    3. ' self' → logprob: -3.255127191543579
    4. '0' → logprob: -7.505126953125
    5. ')' → logprob: -8.130126953125
    6. ',' → logprob: -8.755126953125
    7. '   ' → logprob: -8.755126953125
    8. '
' → logprob: -9.130126953125
    9. '        
' → logprob: -9.130126953125
    10. ')
' → logprob: -9.630126953125

Token 225: ' On' (ID: 2160)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20049794018268585
    2. ' self' → logprob: -1.8254979848861694
    3. '       ' → logprob: -4.075498104095459
    4. 'if' → logprob: -6.075498104095459
    5. ' if' → logprob: -6.825498104095459
    6. '#' → logprob: -9.5754976272583
    7. '   ' → logprob: -10.3254976272583
    8. ' ' → logprob: -11.0754976272583
    9. ' #' → logprob: -11.7004976272583
    10. 'def' → logprob: -12.3254976272583

Token 226: ' considère' (ID: 176437)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.835975170135498
    2. '_init' → logprob: -2.460975170135498
    3. '_initial' → logprob: -2.835975170135498
    4. '_' → logprob: -2.960975170135498
    5. ' initial' → logprob: -2.960975170135498
    6. 'init' → logprob: -3.460975170135498
    7. 'initialize' → logprob: -3.460975170135498
    8. ' initialise' → logprob: -3.460975170135498
    9. ' initialize' → logprob: -3.835975170135498
    10. 's' → logprob: -3.835975170135498

Token 227: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.3540024757385254
    2. 'initial' → logprob: -1.7290024757385254
    3. 'self' → logprob: -1.7290024757385254
    4. ' ' → logprob: -2.2290024757385254
    5. 'le' → logprob: -2.4790024757385254
    6. '0' → logprob: -3.1040024757385254
    7. ' initial' → logprob: -3.2290024757385254
    8. ' self' → logprob: -3.2290024757385254
    9. ' le' → logprob: -3.6040024757385254
    10. 'que' → logprob: -4.229002475738525

Token 228: ' niveau' (ID: 21708)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32667282223701477
    2. ' self' → logprob: -1.3266727924346924
    3. ' le' → logprob: -5.3266730308532715
    4. '0' → logprob: -6.0766730308532715
    5. 'le' → logprob: -6.4516730308532715
    6. ' ' → logprob: -6.4516730308532715
    7. ' la' → logprob: -6.5766730308532715
    8. 'initial' → logprob: -8.076672554016113
    9. ' initial' → logprob: -8.326672554016113
    10. ' l' → logprob: -8.451672554016113

Token 229: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08162007480859756
    2. '=' → logprob: -3.45661997795105
    3. '_s' → logprob: -4.331620216369629
    4. 'sas' → logprob: -4.331620216369629
    5. 's' → logprob: -5.456620216369629
    6. '_' → logprob: -5.456620216369629
    7. '_initial' → logprob: -5.831620216369629
    8. 'initial' → logprob: -6.206620216369629
    9. 'bas' → logprob: -6.956620216369629
    10. ' sas' → logprob: -7.081620216369629

Token 230: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5323101878166199
    2. '=' → logprob: -1.9073102474212646
    3. 'initial' → logprob: -2.4073102474212646
    4. 'sas' → logprob: -2.5323102474212646
    5. '_initial' → logprob: -3.2823102474212646
    6. '_s' → logprob: -4.4073100090026855
    7. ' sas' → logprob: -4.7823100090026855
    8. ' initial' → logprob: -4.7823100090026855
    9. '_init' → logprob: -5.4073100090026855
    10. 'bas' → logprob: -5.6573100090026855

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14816652238368988
    2. '=' → logprob: -2.0231664180755615
    3. 'est' → logprob: -6.398166656494141
    4. ' est' → logprob: -6.898166656494141
    5. 'initial' → logprob: -7.273166656494141
    6. ' is' → logprob: -7.398166656494141
    7. ' ' → logprob: -8.39816665649414
    8. '0' → logprob: -8.64816665649414
    9. ',' → logprob: -8.89816665649414
    10. '<|end|>' → logprob: -8.89816665649414

Token 232: ' niveau' (ID: 21708)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5917770266532898
    2. ' bas' → logprob: -1.3417770862579346
    3. ' ' → logprob: -1.8417770862579346
    4. 'bas' → logprob: -3.8417770862579346
    5. ' min' → logprob: -6.3417768478393555
    6. 'min' → logprob: -6.7167768478393555
    7. ' baseline' → logprob: -7.8417768478393555
    8. '1' → logprob: -8.716776847839355
    9. ' le' → logprob: -8.841776847839355
    10. ' sas' → logprob: -8.966776847839355

Token 233: ' le' (ID: 505)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.4524230360984802
    2. ' bas' → logprob: -1.077423095703125
    3. ' le' → logprob: -5.452423095703125
    4. '_bas' → logprob: -5.577423095703125
    5. 'le' → logprob: -6.077423095703125
    6. '0' → logprob: -6.077423095703125
    7. ' de' → logprob: -6.202423095703125
    8. ' d' → logprob: -6.577423095703125
    9. ' initial' → logprob: -6.702423095703125
    10. 'de' → logprob: -6.952423095703125

Token 234: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.07918839901685715
    2. ' plus' → logprob: -2.579188346862793
    3. '+' → logprob: -9.454188346862793
    4. 'Plus' → logprob: -9.579188346862793
    5. '_plus' → logprob: -9.954188346862793
    6. 'bas' → logprob: -10.079188346862793
    7. '-plus' → logprob: -10.454188346862793
    8. ' +' → logprob: -11.954188346862793
    9. 'pl' → logprob: -11.954188346862793
    10. '```' → logprob: -12.579188346862793

Token 235: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.005288542713969946
    2. ' bas' → logprob: -5.880288600921631
    3. 'b' → logprob: -6.130288600921631
    4. 'haut' → logprob: -9.130288124084473
    5. '```' → logprob: -10.255288124084473
    6. '_bas' → logprob: -10.380288124084473
    7. '0' → logprob: -10.755288124084473
    8. 'low' → logprob: -11.067788124084473
    9. 'ba' → logprob: -11.130288124084473
    10. ' ' → logprob: -11.567788124084473

Token 236: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006902090273797512
    2. 'self' → logprob: -5.38190221786499
    3. ' self' → logprob: -6.13190221786499
    4. '
' → logprob: -9.881901741027832
    5. '        
' → logprob: -11.006901741027832
    6. '<|end|>' → logprob: -11.256901741027832
    7. '   ' → logprob: -12.256901741027832
    8. ',' → logprob: -12.381901741027832
    9. '0' → logprob: -12.631901741027832
    10. '(self' → logprob: -13.256901741027832

Token 238: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15654650330543518
    2. 'self' → logprob: -2.2815465927124023
    3. ' self' → logprob: -3.1565465927124023
    4. '0' → logprob: -9.781546592712402
    5. '   ' → logprob: -10.156546592712402
    6. ',' → logprob: -10.781546592712402
    7. ' ' → logprob: -10.906546592712402
    8. '	self' → logprob: -11.531546592712402
    9. '        
' → logprob: -11.656546592712402
    10. '
' → logprob: -11.906546592712402

Token 239: ' Nous' (ID: 20193)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08259115368127823
    2. ' self' → logprob: -2.7075910568237305
    3. '       ' → logprob: -4.4575910568237305
    4. 'if' → logprob: -7.3325910568237305
    5. ' if' → logprob: -8.33259105682373
    6. '#' → logprob: -10.45759105682373
    7. '   ' → logprob: -10.95759105682373
    8. 'n' → logprob: -11.95759105682373
    9. 'def' → logprob: -12.20759105682373
    10. 'niveau' → logprob: -12.20759105682373

Token 240: ' utilis' (ID: 18688)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.049036979675293
    2. '.level' → logprob: -1.549036979675293
    3. '.' → logprob: -1.799036979675293
    4. 'n' → logprob: -3.299036979675293
    5. '.s' → logprob: -3.549036979675293
    6. 'self' → logprob: -3.674036979675293
    7. '.initial' → logprob: -3.674036979675293
    8. 'niveau' → logprob: -3.799036979675293
    9. 'ud' → logprob: -3.924036979675293
    10. '       ' → logprob: -4.174036979675293

Token 241: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0005353979649953544
    2. '#' → logprob: -7.750535488128662
    3. 'on' → logprob: -10.500535011291504
    4. '```' → logprob: -11.250535011291504
    5. 'e' → logprob: -11.500535011291504
    6. '   ' → logprob: -11.625535011291504
    7. '=' → logprob: -12.250535011291504
    8. ' ons' → logprob: -12.250535011291504
    9. 'ont' → logprob: -12.500535011291504
    10. 'ions' → logprob: -12.875535011291504

Token 242: ' True' (ID: 6432)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.863182008266449
    2. ' self' → logprob: -1.2381820678710938
    3. 'self' → logprob: -1.9881820678710938
    4. ' ' → logprob: -1.9881820678710938
    5. 'niveau' → logprob: -4.988182067871094
    6. ' le' → logprob: -5.613182067871094
    7. ' niveau' → logprob: -6.988182067871094
    8. ' la' → logprob: -7.613182067871094
    9. ' l' → logprob: -8.238182067871094
    10. '   ' → logprob: -8.488182067871094

Token 243: '/' (ID: 14)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.006715370807796717
    2. ' False' → logprob: -5.006715297698975
    3. 'false' → logprob: -17.256715774536133
    4. '(False' → logprob: -17.381715774536133
    5. 'True' → logprob: -18.131715774536133
    6. '_false' → logprob: -18.256715774536133
    7. '=False' → logprob: -18.381715774536133
    8. ' false' → logprob: -19.631715774536133
    9. '.False' → logprob: -20.506715774536133
    10. '_FALSE' → logprob: -20.756715774536133

Token 245: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8271130323410034
    2. ' =' → logprob: -1.0771130323410034
    3. 'self' → logprob: -2.327113151550293
    4. '       ' → logprob: -2.952113151550293
    5. ' self' → logprob: -3.952113151550293
    6. '<|end|>' → logprob: -4.327113151550293
    7. '=True' → logprob: -4.577113151550293
    8. '=False' → logprob: -4.577113151550293
    9. '        
' → logprob: -4.952113151550293
    10. ':' → logprob: -6.202113151550293

Token 246: ' ind' (ID: 1383)
  Prédit: ' représ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représ' → logprob: -0.18021173775196075
    2. ' represent' → logprob: -2.1802117824554443
    3. ' ind' → logprob: -3.4302117824554443
    4. 'represent' → logprob: -4.930211544036865
    5. 'ind' → logprob: -5.680211544036865
    6. ' repres' → logprob: -6.680211544036865
    7. ' False' → logprob: -6.930211544036865
    8. 'False' → logprob: -7.305211544036865
    9. 'rep' → logprob: -7.305211544036865
    10. ' repr' → logprob: -7.430211544036865

Token 247: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.5588825941085815
    2. 'ex' → logprob: -1.3088825941085815
    3. 'iqué' → logprob: -3.058882713317871
    4. 'icate' → logprob: -3.308882713317871
    5. 'ique' → logprob: -4.183882713317871
    6. 'icator' → logprob: -4.683882713317871
    7. 'éf' → logprob: -4.683882713317871
    8. 'efined' → logprob: -4.683882713317871
    9. 'ef' → logprob: -4.933882713317871
    10. 'ic' → logprob: -5.308882713317871

Token 248: ' si' (ID: 1784)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.19347728788852692
    2. ' False' → logprob: -2.8184773921966553
    3. ' que' → logprob: -3.0684773921966553
    4. ' un' → logprob: -3.6934773921966553
    5. 'le' → logprob: -4.693477153778076
    6. ' ' → logprob: -4.943477153778076
    7. 'False' → logprob: -4.943477153778076
    8. ' la' → logprob: -5.068477153778076
    9. ' l' → logprob: -5.193477153778076
    10. ' si' → logprob: -5.818477153778076

Token 249: ' sas' (ID: 51515)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3250752389431
    2. ' self' → logprob: -1.7000752687454224
    3. 'self' → logprob: -3.325075149536133
    4. 'le' → logprob: -3.825075149536133
    5. ' sas' → logprob: -3.950075149536133
    6. 'sas' → logprob: -5.200075149536133
    7. ' la' → logprob: -5.575075149536133
    8. ' the' → logprob: -5.950075149536133
    9. ' est' → logprob: -6.200075149536133
    10. ' l' → logprob: -6.700075149536133

Token 250: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.17842218279838562
    2. ' is' → logprob: -2.303422212600708
    3. ' ' → logprob: -3.428422212600708
    4. 'est' → logprob: -4.303421974182129
    5. ' ouvert' → logprob: -5.053421974182129
    6. '_' → logprob: -6.928421974182129
    7. '_est' → logprob: -7.178421974182129
    8. ' initial' → logprob: -7.303421974182129
    9. ' fermé' → logprob: -7.303421974182129
    10. 'niveau' → logprob: -7.428421974182129

Token 251: ' au' (ID: 2791)
  Prédit: ' ouvert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ouvert' → logprob: -0.6438339948654175
    2. ' bas' → logprob: -1.6438339948654175
    3. 'bas' → logprob: -2.393834114074707
    4. ' haut' → logprob: -2.643834114074707
    5. ' fermé' → logprob: -3.268834114074707
    6. ' True' → logprob: -3.643834114074707
    7. ' en' → logprob: -4.143834114074707
    8. 'True' → logprob: -4.893834114074707
    9. 'haut' → logprob: -5.393834114074707
    10. ' False' → logprob: -5.518834114074707

Token 252: ' niveau' (ID: 21708)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.3982084393501282
    2. ' True' → logprob: -1.7732083797454834
    3. ' bas' → logprob: -2.1482083797454834
    4. 'haut' → logprob: -4.1482086181640625
    5. 'True' → logprob: -4.6482086181640625
    6. ' haut' → logprob: -5.6482086181640625
    7. ' False' → logprob: -5.6482086181640625
    8. 'ha' → logprob: -5.8982086181640625
    9. 'le' → logprob: -6.5232086181640625
    10. '_bas' → logprob: -7.0232086181640625

Token 253: ' haut' (ID: 28223)
  Prédit: ' bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bas' → logprob: -0.1785055547952652
    2. '_bas' → logprob: -2.4285056591033936
    3. 'bas' → logprob: -3.4285056591033936
    4. ' False' → logprob: -4.0535054206848145
    5. 'False' → logprob: -4.8035054206848145
    6. ' True' → logprob: -5.4285054206848145
    7. '_' → logprob: -5.6785054206848145
    8. '_b' → logprob: -5.8035054206848145
    9. ' du' → logprob: -6.5535054206848145
    10. 'True' → logprob: -6.9285054206848145

Token 254: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015682850033044815
    2. 'self' → logprob: -5.015682697296143
    3. ' self' → logprob: -6.015682697296143
    4. '
' → logprob: -6.140682697296143
    5. '<|end|>' → logprob: -6.265682697296143
    6. '        
' → logprob: -6.765682697296143
    7. ' =' → logprob: -8.3906831741333
    8. '(self' → logprob: -8.3906831741333
    9. '   ' → logprob: -9.0156831741333
    10. ',' → logprob: -9.0156831741333

Token 255: 'True' (ID: 4710)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6330375075340271
    2. ')' → logprob: -1.2580375671386719
    3. ' False' → logprob: -2.508037567138672
    4. 'True' → logprob: -2.758037567138672
    5. ' True' → logprob: -3.758037567138672
    6. ' )' → logprob: -4.133037567138672
    7. '0' → logprob: -8.633037567138672
    8. '=False' → logprob: -9.383037567138672
    9. ' ' → logprob: -9.758037567138672
    10. '=True' → logprob: -10.258037567138672

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027604142669588327
    2. ' ou' → logprob: -6.627760410308838
    3. ' )' → logprob: -6.752760410308838
    4. ' or' → logprob: -9.127760887145996
    5. ',' → logprob: -9.252760887145996
    6. ')
' → logprob: -10.877760887145996
    7. '),' → logprob: -11.127760887145996
    8. '   ' → logprob: -12.127760887145996
    9. ' ' → logprob: -12.877760887145996
    10. 'False' → logprob: -13.002760887145996

Token 257: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03672419860959053
    2. 'self' → logprob: -4.411724090576172
    3. ' or' → logprob: -5.411724090576172
    4. '<|end|>' → logprob: -5.536724090576172
    5. '        
' → logprob: -5.786724090576172
    6. '=False' → logprob: -6.036724090576172
    7. '=True' → logprob: -6.536724090576172
    8. '
' → logprob: -6.786724090576172
    9. 'False' → logprob: -6.786724090576172
    10. ',' → logprob: -7.036724090576172

Token 258: ' bas' (ID: 3222)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07894542813301086
    2. ' False' → logprob: -2.5789453983306885
    3. ' bas' → logprob: -10.57894515991211
    4. 'not' → logprob: -11.32894515991211
    5. '=False' → logprob: -11.82894515991211
    6. 'bas' → logprob: -12.32894515991211
    7. ' not' → logprob: -12.82894515991211
    8. 'false' → logprob: -14.70394515991211
    9. ' haut' → logprob: -14.70394515991211
    10. 'non' → logprob: -14.95394515991211

Token 259: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07398196309804916
    2. 'self' → logprob: -3.823982000350952
    3. '
' → logprob: -4.073981761932373
    4. '<|end|>' → logprob: -5.073981761932373
    5. '        
' → logprob: -5.198981761932373
    6. ' self' → logprob: -5.698981761932373
    7. '=True' → logprob: -5.948981761932373
    8. ' =' → logprob: -6.198981761932373
    9. '=False' → logprob: -6.323981761932373
    10. ',' → logprob: -6.448981761932373

Token 260: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16025368869304657
    2. ' False' → logprob: -1.910253643989563
    3. 'True' → logprob: -10.785253524780273
    4. ' True' → logprob: -12.035253524780273
    5. ')' → logprob: -13.035253524780273
    6. '=False' → logprob: -14.410253524780273
    7. '(False' → logprob: -15.160253524780273
    8. '0' → logprob: -17.910253524780273
    9. '_false' → logprob: -18.660253524780273
    10. ' )' → logprob: -18.785253524780273

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010264652781188488
    2. ')
' → logprob: -4.760264873504639
    3. '       ' → logprob: -6.510264873504639
    4. ' )' → logprob: -9.63526439666748
    5. '):
' → logprob: -10.01026439666748
    6. '):' → logprob: -11.38526439666748
    7. 'self' → logprob: -11.76026439666748
    8. '   ' → logprob: -12.26026439666748
    9. ')
' → logprob: -12.26026439666748
    10. ' )
' → logprob: -12.38526439666748

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010302766226232052
    2. 'self' → logprob: -4.635302543640137
    3. ' self' → logprob: -7.760302543640137
    4. '        
' → logprob: -9.385302543640137
    5. ',' → logprob: -12.010302543640137
    6. '
' → logprob: -12.260302543640137
    7. '  
' → logprob: -12.635302543640137
    8. '<|end|>' → logprob: -12.635302543640137
    9. ')' → logprob: -13.010302543640137
    10. '   ' → logprob: -13.135302543640137

Token 263: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11010700464248657
    2. '       ' → logprob: -2.735106945037842
    3. ' self' → logprob: -3.235106945037842
    4. '   ' → logprob: -12.735107421875
    5. '	self' → logprob: -12.735107421875
    6. ' ' → logprob: -12.985107421875
    7. '        
' → logprob: -13.110107421875
    8. 'if' → logprob: -13.485107421875
    9. 'def' → logprob: -13.735107421875
    10. '(self' → logprob: -13.985107421875

Token 264: ' mais' (ID: 2899)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7110357284545898
    2. ' self' → logprob: -0.8360357284545898
    3. '       ' → logprob: -2.58603572845459
    4. '   ' → logprob: -10.58603572845459
    5. ' ' → logprob: -10.83603572845459
    6. '#' → logprob: -11.33603572845459
    7. '        
' → logprob: -11.33603572845459
    8. '	self' → logprob: -11.46103572845459
    9. ' ' → logprob: -11.83603572845459
    10. '```' → logprob: -12.21103572845459

Token 265: ' sachant' (ID: 174239)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8010168075561523
    2. '       ' → logprob: -1.1760168075561523
    3. 'self' → logprob: -1.4260168075561523
    4. ' ' → logprob: -7.301016807556152
    5. '        ' → logprob: -8.301016807556152
    6. '#' → logprob: -8.676016807556152
    7. '        
' → logprob: -9.176016807556152
    8. ' #' → logprob: -9.176016807556152
    9. ' ce' → logprob: -9.301016807556152
    10. '	self' → logprob: -9.551016807556152

Token 266: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.05528731644153595
    2. '       ' → logprob: -3.8052873611450195
    3. 'self' → logprob: -4.1802873611450195
    4. ' self' → logprob: -4.6802873611450195
    5. ' qu' → logprob: -6.8052873611450195
    6. ' ' → logprob: -6.8052873611450195
    7. '           ' → logprob: -7.0552873611450195
    8. 'que' → logprob: -7.4302873611450195
    9. ' that' → logprob: -7.6802873611450195
    10. ' ' → logprob: -8.05528736114502

Token 267: ' sas' (ID: 51515)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9105545282363892
    2. ' self' → logprob: -1.0355545282363892
    3. ' False' → logprob: -2.4105544090270996
    4. 'False' → logprob: -2.4105544090270996
    5. ' UD' → logprob: -3.7855544090270996
    6. 'UD' → logprob: -3.7855544090270996
    7. ' not' → logprob: -4.9105544090271
    8. 'not' → logprob: -5.7855544090271
    9. ' True' → logprob: -6.9105544090271
    10. ' ud' → logprob: -6.9105544090271

Token 268: ' commence' (ID: 44755)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.4325195550918579
    2. ' =' → logprob: -1.557519555091858
    3. ' is' → logprob: -2.6825194358825684
    4. 'est' → logprob: -3.9325194358825684
    5. ' n' → logprob: -4.057519435882568
    6. '=' → logprob: -4.932519435882568
    7. '=False' → logprob: -5.307519435882568
    8. ' ' → logprob: -5.557519435882568
    9. '_' → logprob: -5.807519435882568
    10. '_est' → logprob: -5.932519435882568

Token 269: ' toujours' (ID: 16867)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.08420289307832718
    2. ' False' → logprob: -3.584203004837036
    3. '=False' → logprob: -3.584203004837036
    4. ' à' → logprob: -4.959202766418457
    5. 'au' → logprob: -5.084202766418457
    6. ' at' → logprob: -5.209202766418457
    7. 'False' → logprob: -5.709202766418457
    8. ' =' → logprob: -6.834202766418457
    9. ' toujours' → logprob: -7.584202766418457
    10. '_false' → logprob: -7.834202766418457

Token 270: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.7340754866600037
    2. 'au' → logprob: -1.4840755462646484
    3. 'False' → logprob: -1.9840755462646484
    4. ' False' → logprob: -2.6090755462646484
    5. ' à' → logprob: -3.2340755462646484
    6. ' at' → logprob: -4.109075546264648
    7. '=False' → logprob: -4.734075546264648
    8. 'à' → logprob: -4.859075546264648
    9. 'at' → logprob: -5.109075546264648
    10. ' bas' → logprob: -6.359075546264648

Token 271: ' niveau' (ID: 21708)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.06324027478694916
    2. ' False' → logprob: -2.8132402896881104
    3. ' bas' → logprob: -7.313240051269531
    4. 'bas' → logprob: -7.438240051269531
    5. 'F' → logprob: -11.563240051269531
    6. '=False' → logprob: -13.438240051269531
    7. 'niveau' → logprob: -13.438240051269531
    8. 'b' → logprob: -13.938240051269531
    9. '_false' → logprob: -14.188240051269531
    10. '0' → logprob: -14.188240051269531

Token 272: ' le' (ID: 505)
  Prédit: ' bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bas' → logprob: -0.17667727172374725
    2. 'bas' → logprob: -2.4266772270202637
    3. ' False' → logprob: -2.9266772270202637
    4. 'False' → logprob: -3.9266772270202637
    5. '_bas' → logprob: -9.301677703857422
    6. 'b' → logprob: -9.676677703857422
    7. ' ' → logprob: -10.051677703857422
    8. '0' → logprob: -10.551677703857422
    9. ' basal' → logprob: -10.801677703857422
    10. ' false' → logprob: -11.051677703857422

Token 273: ' plus' (ID: 2932)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.1326560378074646
    2. 'plus' → logprob: -2.1326560974121094
    3. ' plus' → logprob: -5.507656097412109
    4. ' bas' → logprob: -6.757656097412109
    5. 'b' → logprob: -7.882656097412109
    6. 'False' → logprob: -9.38265609741211
    7. ' False' → logprob: -10.75765609741211
    8. 'moins' → logprob: -12.50765609741211
    9. ' ' → logprob: -13.25765609741211
    10. 'haut' → logprob: -13.25765609741211

Token 274: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.0032844250090420246
    2. ' bas' → logprob: -6.003284454345703
    3. 'b' → logprob: -7.128284454345703
    4. '_bas' → logprob: -13.253284454345703
    5. '```' → logprob: -14.003284454345703
    6. '0' → logprob: -14.003284454345703
    7. 'low' → logprob: -14.128284454345703
    8. ' ' → logprob: -15.503284454345703
    9. 'haut' → logprob: -15.503284454345703
    10. 'base' → logprob: -15.628284454345703

Token 275: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3999921381473541
    2. 'self' → logprob: -1.8999921083450317
    3. '<|end|>' → logprob: -1.8999921083450317
    4. ',' → logprob: -4.399991989135742
    5. '
' → logprob: -4.774991989135742
    6. ' self' → logprob: -6.274991989135742
    7. '.' → logprob: -6.399991989135742
    8. ')' → logprob: -6.649991989135742
    9. '<|end|>' → logprob: -6.774991989135742
    10. '        
' → logprob: -7.274991989135742

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5999467372894287
    2. 'self' → logprob: -1.2249467372894287
    3. ' self' → logprob: -1.8499467372894287
    4. '        
' → logprob: -9.974946975708008
    5. 'False' → logprob: -10.724946975708008
    6. '	self' → logprob: -11.224946975708008
    7. '0' → logprob: -11.349946975708008
    8. ' False' → logprob: -11.849946975708008
    9. '```' → logprob: -12.474946975708008
    10. '   ' → logprob: -12.599946975708008

Token 277: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11978824436664581
    2. ' self' → logprob: -2.49478816986084
    3. '       ' → logprob: -3.49478816986084
    4. 'False' → logprob: -11.74478816986084
    5. ' ' → logprob: -13.11978816986084
    6. '	self' → logprob: -13.11978816986084
    7. '        
' → logprob: -13.24478816986084
    8. '0' → logprob: -13.49478816986084
    9. '      ' → logprob: -13.74478816986084
    10. '   ' → logprob: -13.74478816986084

Token 278: ' UD' (ID: 121618)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39292749762535095
    2. ' self' → logprob: -1.7679275274276733
    3. 'UD' → logprob: -2.017927408218384
    4. ' UD' → logprob: -3.892927408218384
    5. ' not' → logprob: -8.642927169799805
    6. '       ' → logprob: -8.892927169799805
    7. '   ' → logprob: -9.142927169799805
    8. 'not' → logprob: -9.267927169799805
    9. '(self' → logprob: -9.267927169799805
    10. 'False' → logprob: -9.767927169799805

Token 279: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1430860161781311
    2. '==' → logprob: -2.0180859565734863
    3. ' !=' → logprob: -8.893086433410645
    4. ')' → logprob: -9.018086433410645
    5. ')==' → logprob: -10.018086433410645
    6. ' ' → logprob: -10.268086433410645
    7. '=' → logprob: -10.643086433410645
    8. '!=' → logprob: -11.393086433410645
    9. ':' → logprob: -11.768086433410645
    10. '0' → logprob: -12.268086433410645

Token 280: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043103668838739395
    2. ' ' → logprob: -3.1681036949157715
    3. '1' → logprob: -9.168103218078613
    4. '=' → logprob: -16.66810417175293
    5. '   ' → logprob: -17.29310417175293
    6. '  ' → logprob: -18.04310417175293
    7. '	' → logprob: -18.16810417175293
    8. '
' → logprob: -19.04310417175293
    9. '<|end|>' → logprob: -19.04310417175293
    10. '۰' → logprob: -19.41810417175293

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022940635681152344
    2. '1' → logprob: -6.127294063568115
    3. ' ' → logprob: -9.127294540405273
    4. '   ' → logprob: -16.127294540405273
    5. '<|end|>' → logprob: -16.689794540405273
    6. '=' → logprob: -17.002294540405273
    7. '  ' → logprob: -17.314794540405273
    8. '```' → logprob: -17.939794540405273
    9. ')' → logprob: -18.127294540405273
    10. '۰' → logprob: -18.502294540405273

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048625748604536057
    2. ':
' → logprob: -3.0486257076263428
    3. ' :' → logprob: -10.423625946044922
    4. ' :
' → logprob: -12.298625946044922
    5. ':
' → logprob: -12.673625946044922
    6. ':

' → logprob: -14.798625946044922
    7. ' ==' → logprob: -16.048625946044922
    8. '):
' → logprob: -16.173625946044922
    9. '):' → logprob: -16.298625946044922
    10. '       ' → logprob: -16.923625946044922

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003054950386285782
    2. 'self' → logprob: -6.378055095672607
    3. ' self' → logprob: -6.628055095672607
    4. ':' → logprob: -11.87805461883545
    5. 'False' → logprob: -12.00305461883545
    6. '0' → logprob: -12.87805461883545
    7. '          ' → logprob: -13.00305461883545
    8. '            
' → logprob: -13.00305461883545
    9. '       ' → logprob: -13.25305461883545
    10. ':
' → logprob: -13.75305461883545

Token 284: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10047926008701324
    2. ' self' → logprob: -2.3504793643951416
    3. '           ' → logprob: -8.725479125976562
    4. '       ' → logprob: -9.225479125976562
    5. 'False' → logprob: -11.850479125976562
    6. '	self' → logprob: -13.725479125976562
    7. '   ' → logprob: -14.100479125976562
    8. ' False' → logprob: -14.475479125976562
    9. '               ' → logprob: -14.725479125976562
    10. '
' → logprob: -14.725479125976562

Token 285: ' O' (ID: 532)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10055870562791824
    2. ' self' → logprob: -2.3505587577819824
    3. '       ' → logprob: -8.350558280944824
    4. '           ' → logprob: -9.850558280944824
    5. 'False' → logprob: -9.850558280944824
    6. ' False' → logprob: -13.225558280944824
    7. '   ' → logprob: -13.350558280944824
    8. '	self' → logprob: -13.600558280944824
    9. '(self' → logprob: -14.225558280944824
    10. ' ' → logprob: -14.350558280944824

Token 286: 'uest' (ID: 22033)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4183565676212311
    2. 'self' → logprob: -1.4183565378189087
    3. 'ffset' → logprob: -3.2933566570281982
    4. 'ut' → logprob: -4.418356418609619
    5. ' self' → logprob: -4.668356418609619
    6. '           ' → logprob: -4.793356418609619
    7. '   ' → logprob: -4.918356418609619
    8. 'ur' → logprob: -6.043356418609619
    9. 'ne' → logprob: -6.168356418609619
    10. '      ' → logprob: -6.293356418609619

Token 287: ' plus' (ID: 2932)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.539076805114746
    2. ':' → logprob: -1.914076805114746
    3. ' =' → logprob: -2.289076805114746
    4. '       ' → logprob: -2.414076805114746
    5. ' ==' → logprob: -2.664076805114746
    6. 'niveau' → logprob: -2.789076805114746
    7. '
' → logprob: -3.539076805114746
    8. ',' → logprob: -3.664076805114746
    9. 'level' → logprob: -3.789076805114746
    10. '=' → logprob: -3.789076805114746

Token 288: ' bas' (ID: 3222)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.05329827219247818
    2. 'bas' → logprob: -3.303298234939575
    3. 'ha' → logprob: -4.553298473358154
    4. ' haut' → logprob: -5.553298473358154
    5. 'high' → logprob: -8.428297996520996
    6. 'b' → logprob: -8.553297996520996
    7. ' bas' → logprob: -9.678297996520996
    8. 'h' → logprob: -10.053297996520996
    9. ' élevé' → logprob: -10.178297996520996
    10. '```' → logprob: -10.553297996520996

Token 289: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3735061585903168
    2. '           ' → logprob: -1.3735061883926392
    3. ':' → logprob: -3.1235060691833496
    4. '
' → logprob: -4.62350606918335
    5. ' :
' → logprob: -6.24850606918335
    6. 'self' → logprob: -6.74850606918335
    7. ',' → logprob: -8.248506546020508
    8. ' :' → logprob: -8.248506546020508
    9. ' self' → logprob: -8.373506546020508
    10. '       ' → logprob: -8.498506546020508

Token 290: ' Est' (ID: 4555)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47719207406044006
    2. 'self' → logprob: -0.9771920442581177
    3. '           ' → logprob: -6.102191925048828
    4. '       ' → logprob: -7.352191925048828
    5. 'False' → logprob: -9.102191925048828
    6. ' False' → logprob: -10.227191925048828
    7. '0' → logprob: -11.477191925048828
    8. 'True' → logprob: -11.727191925048828
    9. '	self' → logprob: -11.852191925048828
    10. ' True' → logprob: -11.977191925048828

Token 291: ' plus' (ID: 2932)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.7618803977966309
    2. ' plus' → logprob: -1.7618803977966309
    3. '           ' → logprob: -1.8868803977966309
    4. 'est' → logprob: -2.011880397796631
    5. ' is' → logprob: -2.011880397796631
    6. 'plus' → logprob: -2.011880397796631
    7. ' =' → logprob: -3.011880397796631
    8. '=' → logprob: -4.261880397796631
    9. ' au' → logprob: -5.886880397796631
    10. ':' → logprob: -5.886880397796631

Token 292: ' haut' (ID: 28223)
  Prédit: ' haut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' haut' → logprob: -0.3899792730808258
    2. 'haut' → logprob: -1.1399792432785034
    3. 'ha' → logprob: -6.639979362487793
    4. ' bas' → logprob: -7.139979362487793
    5. 'bas' → logprob: -7.264979362487793
    6. ' hauts' → logprob: -8.889979362487793
    7. ' ' → logprob: -9.889979362487793
    8. ' élevé' → logprob: -10.264979362487793
    9. ' high' → logprob: -10.764979362487793
    10. ' Haut' → logprob: -11.014979362487793

Token 293: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03695698082447052
    2. '
' → logprob: -3.786957025527954
    3. ':
' → logprob: -4.786956787109375
    4. 'self' → logprob: -5.911956787109375
    5. ':' → logprob: -6.536956787109375
    6. '       ' → logprob: -7.661956787109375
    7. ' self' → logprob: -8.411956787109375
    8. '            
' → logprob: -9.286956787109375
    9. '):
' → logprob: -9.411956787109375
    10. ' =' → logprob: -10.036956787109375

Token 294: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02122674137353897
    2. 'self' → logprob: -4.14622688293457
    3. ' self' → logprob: -6.02122688293457
    4. '
' → logprob: -6.89622688293457
    5. ':
' → logprob: -7.14622688293457
    6. ':' → logprob: -7.39622688293457
    7. '       ' → logprob: -8.89622688293457
    8. '            
' → logprob: -9.89622688293457
    9. '               ' → logprob: -10.39622688293457
    10. ',' → logprob: -10.64622688293457

Token 295: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017775505781173706
    2. '           ' → logprob: -4.642775535583496
    3. ' self' → logprob: -4.892775535583496
    4. '       ' → logprob: -7.642775535583496
    5. '   ' → logprob: -12.642775535583496
    6. '	self' → logprob: -14.017775535583496
    7. ' ' → logprob: -14.392775535583496
    8. '  ' → logprob: -14.642775535583496
    9. '               ' → logprob: -14.642775535583496
    10. '
' → logprob: -14.767775535583496

Token 296: ' Sas' (ID: 87859)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0087767094373703
    2. ' self' → logprob: -4.883776664733887
    3. '       ' → logprob: -6.883776664733887
    4. '           ' → logprob: -8.883776664733887
    5. '
' → logprob: -12.883776664733887
    6. '   ' → logprob: -13.258776664733887
    7. '	self' → logprob: -14.383776664733887
    8. '(self' → logprob: -14.883776664733887
    9. ' ' → logprob: -15.008776664733887
    10. '  ' → logprob: -15.633776664733887

Token 297: ' initial' (ID: 4871)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7499812841415405
    2. '_level' → logprob: -0.9999812841415405
    3. '_position' → logprob: -2.62498140335083
    4. '_state' → logprob: -3.62498140335083
    5. '=' → logprob: -4.12498140335083
    6. '_n' → logprob: -4.99998140335083
    7. 'est' → logprob: -5.12498140335083
    8. '_status' → logprob: -5.24998140335083
    9. '_pos' → logprob: -5.37498140335083
    10. '_est' → logprob: -5.87498140335083

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16926534473896027
    2. '=' → logprob: -1.9192653894424438
    3. '_level' → logprob: -5.419265270233154
    4. '=False' → logprob: -5.669265270233154
    5. 'est' → logprob: -8.419265747070312
    6. '_n' → logprob: -9.044265747070312
    7. '_position' → logprob: -9.169265747070312
    8. '_state' → logprob: -9.419265747070312
    9. 'level' → logprob: -9.419265747070312
    10. 'niveau' → logprob: -9.544265747070312

Token 299: ' bas' (ID: 3222)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16022981703281403
    2. ' False' → logprob: -1.9102298021316528
    3. '0' → logprob: -12.160229682922363
    4. '(False' → logprob: -15.285229682922363
    5. 'false' → logprob: -16.78523063659668
    6. ' ' → logprob: -17.16023063659668
    7. 'Fal' → logprob: -17.28523063659668
    8. 'True' → logprob: -17.28523063659668
    9. '=False' → logprob: -17.78523063659668
    10. ' false' → logprob: -17.91023063659668

Token 300: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02103601023554802
    2. '
' → logprob: -4.396036148071289
    3. 'self' → logprob: -5.396036148071289
    4. '       ' → logprob: -6.396036148071289
    5. ' =' → logprob: -7.271036148071289
    6. ':
' → logprob: -7.396036148071289
    7. ':' → logprob: -7.771036148071289
    8. ' self' → logprob: -8.146036148071289
    9. '               ' → logprob: -10.271036148071289
    10. 'False' → logprob: -10.396036148071289

Token 301: 'niveau' (ID: 114906)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011064093559980392
    2. ' False' → logprob: -4.511064052581787
    3. '0' → logprob: -11.261064529418945
    4. ')' → logprob: -13.261064529418945
    5. '(False' → logprob: -13.886064529418945
    6. '=False' → logprob: -15.386064529418945
    7. 'false' → logprob: -15.386064529418945
    8. 'True' → logprob: -15.636064529418945
    9. '_false' → logprob: -17.386064529418945
    10. '   ' → logprob: -17.511064529418945

Token 302: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2593899369239807
    2. ' False' → logprob: -1.759389877319336
    3. ')' → logprob: -3.259389877319336
    4. ' bas' → logprob: -5.509389877319336
    5. '_false' → logprob: -5.509389877319336
    6. '=False' → logprob: -5.634389877319336
    7. 'bas' → logprob: -5.634389877319336
    8. '0' → logprob: -6.759389877319336
    9. ' )' → logprob: -7.759389877319336
    10. '(False' → logprob: -7.759389877319336

Token 303: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0037322607822716236
    2. ' False' → logprob: -6.128732204437256
    3. ')' → logprob: -7.128732204437256
    4. '0' → logprob: -7.628732204437256
    5. '=False' → logprob: -8.878732681274414
    6. '(False' → logprob: -10.003732681274414
    7. 'bas' → logprob: -10.503732681274414
    8. '_false' → logprob: -10.628732681274414
    9. 'false' → logprob: -11.003732681274414
    10. 'b' → logprob: -13.503732681274414

Token 304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022765498608350754
    2. ')
' → logprob: -4.022765636444092
    3. 'False' → logprob: -5.647765636444092
    4. ' )' → logprob: -7.272765636444092
    5. '           ' → logprob: -9.147765159606934
    6. ',' → logprob: -9.772765159606934
    7. ' )
' → logprob: -10.022765159606934
    8. ' False' → logprob: -10.272765159606934
    9. '       ' → logprob: -10.397765159606934
    10. '=False' → logprob: -10.522765159606934

Token 305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03917181119322777
    2. '       ' → logprob: -3.9141716957092285
    3. 'self' → logprob: -4.1641716957092285
    4. ' self' → logprob: -6.5391716957092285
    5. '
' → logprob: -6.7891716957092285
    6. ':' → logprob: -9.789172172546387
    7. '               ' → logprob: -10.039172172546387
    8. '            
' → logprob: -10.039172172546387
    9. '        
' → logprob: -10.289172172546387
    10. ',' → logprob: -10.789172172546387

Token 306: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11073875427246094
    2. '           ' → logprob: -2.485738754272461
    3. ' self' → logprob: -3.860738754272461
    4. '       ' → logprob: -7.610738754272461
    5. '         ' → logprob: -12.735738754272461
    6. '   ' → logprob: -13.110738754272461
    7. '               ' → logprob: -13.110738754272461
    8. '          ' → logprob: -13.110738754272461
    9. '
' → logprob: -13.610738754272461
    10. '	self' → logprob: -13.610738754272461

Token 307: '.level' (ID: 36989)
  Prédit: '.level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.level' → logprob: -0.048919010907411575
    2. '.n' → logprob: -4.173919200897217
    3. '.current' → logprob: -4.548919200897217
    4. '.is' → logprob: -5.048919200897217
    5. '.s' → logprob: -5.548919200897217
    6. '.state' → logprob: -5.798919200897217
    7. '.' → logprob: -5.798919200897217
    8. '.Level' → logprob: -6.298919200897217
    9. '.status' → logprob: -6.423919200897217
    10. '.position' → logprob: -7.423919200897217

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759463310241699
    2. '=' → logprob: -0.8259463310241699
    3. '=False' → logprob: -12.075946807861328
    4. ' ' → logprob: -14.325946807861328
    5. '_' → logprob: -15.825946807861328
    6. 's' → logprob: -16.075946807861328
    7. '_=' → logprob: -16.575946807861328
    8. '=True' → logprob: -16.700946807861328
    9. '＝' → logprob: -16.950946807861328
    10. '0' → logprob: -17.075946807861328

Token 309: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020497082732617855
    2. ' False' → logprob: -8.500205039978027
    3. '0' → logprob: -13.500205039978027
    4. '(False' → logprob: -19.00020408630371
    5. 'false' → logprob: -19.62520408630371
    6. '   ' → logprob: -21.62520408630371
    7. ' ' → logprob: -21.75020408630371
    8. '=False' → logprob: -21.87520408630371
    9. 'True' → logprob: -22.12520408630371
    10. '.False' → logprob: -22.50020408630371

Token 310: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4721936583518982
    2. '<|end|>' → logprob: -1.222193717956543
    3. 'else' → logprob: -2.847193717956543
    4. ' else' → logprob: -3.972193717956543
    5. '
' → logprob: -5.847193717956543
    6. '<|end|>' → logprob: -6.972193717956543
    7. 'elif' → logprob: -7.097193717956543
    8. ')' → logprob: -8.972193717956543
    9. ' elif' → logprob: -10.222193717956543
    10. '	else' → logprob: -10.597193717956543

Token 311: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.18382392823696136
    2. ' else' → logprob: -1.8088239431381226
    3. '       ' → logprob: -6.308824062347412
    4. 'elif' → logprob: -6.808824062347412
    5. '<|end|>' → logprob: -7.308824062347412
    6. '	else' → logprob: -7.933824062347412
    7. ' elif' → logprob: -10.058823585510254
    8. '
' → logprob: -10.683823585510254
    9. '<|end|>' → logprob: -11.183823585510254
    10. '   ' → logprob: -11.433823585510254

Token 313: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16031542420387268
    2. ':
' → logprob: -1.9103153944015503
    3. '           ' → logprob: -9.78531551361084
    4. ' :' → logprob: -11.03531551361084
    5. ' :
' → logprob: -11.03531551361084
    6. '       ' → logprob: -13.91031551361084
    7. ':
' → logprob: -14.28531551361084
    8. ':

' → logprob: -14.91031551361084
    9. '   ' → logprob: -15.28531551361084
    10. '<|end|>' → logprob: -15.66031551361084

Token 314: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0045585306361317635
    2. 'self' → logprob: -5.504558563232422
    3. ' self' → logprob: -7.879558563232422
    4. '       ' → logprob: -9.629558563232422
    5. '	       ' → logprob: -10.879558563232422
    6. '		' → logprob: -12.379558563232422
    7. '	self' → logprob: -12.754558563232422
    8. '               ' → logprob: -13.004558563232422
    9. ' ' → logprob: -13.254558563232422
    10. '            
' → logprob: -13.879558563232422

Token 315: ' #' (ID: 1069)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.788163959980011
    2. 'self' → logprob: -0.788163959980011
    3. '           ' → logprob: -3.038163900375366
    4. '       ' → logprob: -3.163163900375366
    5. 'False' → logprob: -8.663164138793945
    6. '0' → logprob: -9.788164138793945
    7. ' False' → logprob: -9.788164138793945
    8. '	self' → logprob: -9.913164138793945
    9. ' ' → logprob: -10.288164138793945
    10. '               ' → logprob: -11.413164138793945

Token 316: ' O' (ID: 532)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7247294783592224
    2. 'self' → logprob: -0.8497294783592224
    3. ' self' → logprob: -2.974729537963867
    4. ' #' → logprob: -3.974729537963867
    5. '       ' → logprob: -4.599729537963867
    6. '           ' → logprob: -4.849729537963867
    7. ' ' → logprob: -9.849729537963867
    8. '   ' → logprob: -9.974729537963867
    9. 'Self' → logprob: -10.099729537963867
    10. 'O' → logprob: -10.224729537963867

Token 317: 'uest' (ID: 22033)
  Prédit: 'uest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uest' → logprob: -0.0012423748848959804
    2. 'est' → logprob: -7.001242160797119
    3. 'west' → logprob: -8.126242637634277
    4. 'West' → logprob: -11.251242637634277
    5. 'Est' → logprob: -11.501242637634277
    6. 'ust' → logprob: -12.501242637634277
    7. 'vest' → logprob: -12.626242637634277
    8. 'u' → logprob: -13.501242637634277
    9. 'UEST' → logprob: -14.626242637634277
    10. 'st' → logprob: -14.876242637634277

Token 318: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.14059969782829285
    2. ' more' → logprob: -2.6405997276306152
    3. 'plus' → logprob: -2.8905997276306152
    4. 'more' → logprob: -6.265599727630615
    5. ' is' → logprob: -6.890599727630615
    6. ' est' → logprob: -7.015599727630615
    7. ' más' → logprob: -9.890599250793457
    8. ' ' → logprob: -10.015599250793457
    9. ' più' → logprob: -10.390599250793457
    10. '#' → logprob: -10.515599250793457

Token 319: ' haut' (ID: 28223)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.0733722373843193
    2. ' bas' → logprob: -2.6983721256256104
    3. 'haut' → logprob: -5.9483723640441895
    4. ' haut' → logprob: -7.1983723640441895
    5. 'b' → logprob: -10.073371887207031
    6. ' ' → logprob: -11.073371887207031
    7. ' ' → logprob: -12.073371887207031
    8. 'ha' → logprob: -13.073371887207031
    9. '0' → logprob: -13.698371887207031
    10. '```' → logprob: -14.073371887207031

Token 320: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008837147615849972
    2. '       ' → logprob: -7.75088357925415
    3. '
' → logprob: -8.875884056091309
    4. ':' → logprob: -8.875884056091309
    5. 'self' → logprob: -9.500884056091309
    6. ':
' → logprob: -9.625884056091309
    7. ' self' → logprob: -10.875884056091309
    8. '   ' → logprob: -12.500884056091309
    9. ',' → logprob: -12.750884056091309
    10. '               ' → logprob: -13.625884056091309

Token 321: ' Est' (ID: 4555)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.23607800900936127
    2. 'self' → logprob: -1.6110780239105225
    3. 'False' → logprob: -5.361077785491943
    4. ' False' → logprob: -5.861077785491943
    5. '           ' → logprob: -6.111077785491943
    6. ' True' → logprob: -7.986077785491943
    7. '       ' → logprob: -8.111078262329102
    8. 'True' → logprob: -8.861078262329102
    9. 'Self' → logprob: -10.986078262329102
    10. ' ' → logprob: -11.361078262329102

Token 322: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.19231531023979187
    2. 'plus' → logprob: -1.9423153400421143
    3. ' more' → logprob: -4.317315101623535
    4. ' self' → logprob: -4.942315101623535
    5. ' est' → logprob: -5.942315101623535
    6. 'more' → logprob: -6.192315101623535
    7. ' =' → logprob: -6.567315101623535
    8. ' level' → logprob: -6.817315101623535
    9. 'self' → logprob: -7.067315101623535
    10. ' is' → logprob: -7.692315101623535

Token 323: ' bas' (ID: 3222)
  Prédit: ' bas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bas' → logprob: -0.6933338642120361
    2. 'bas' → logprob: -0.6933338642120361
    3. 'haut' → logprob: -9.193333625793457
    4. ' haut' → logprob: -10.318333625793457
    5. 'False' → logprob: -10.818333625793457
    6. ' False' → logprob: -10.818333625793457
    7. 'b' → logprob: -11.943333625793457
    8. ' ' → logprob: -13.443333625793457
    9. 'low' → logprob: -14.068333625793457
    10. '_bas' → logprob: -14.193333625793457

Token 324: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36726540327072144
    2. '       ' → logprob: -1.3672654628753662
    3. 'self' → logprob: -3.367265462875366
    4. ' self' → logprob: -4.117265224456787
    5. '
' → logprob: -6.367265224456787
    6. '   ' → logprob: -10.242265701293945
    7. '               ' → logprob: -11.492265701293945
    8. '	self' → logprob: -11.992265701293945
    9. '        
' → logprob: -12.367265701293945
    10. '          ' → logprob: -12.742265701293945

Token 325: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30612418055534363
    2. '           ' → logprob: -1.556124210357666
    3. 'self' → logprob: -3.056124210357666
    4. ' self' → logprob: -5.181124210357666
    5. '   ' → logprob: -10.556123733520508
    6. '	self' → logprob: -11.181123733520508
    7. '               ' → logprob: -12.056123733520508
    8. '	       ' → logprob: -12.306123733520508
    9. '
' → logprob: -12.806123733520508
    10. '	' → logprob: -13.931123733520508

Token 326: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0433133989572525
    2. '       ' → logprob: -3.418313503265381
    3. '           ' → logprob: -5.168313503265381
    4. ' self' → logprob: -5.543313503265381
    5. '	self' → logprob: -11.793313026428223
    6. '   ' → logprob: -12.918313026428223
    7. '               ' → logprob: -14.043313026428223
    8. ' ' → logprob: -14.793313026428223
    9. '          ' → logprob: -15.168313026428223
    10. '(self' → logprob: -15.293313026428223

Token 327: ' Sas' (ID: 87859)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005902845878154039
    2. ' self' → logprob: -5.2559027671813965
    3. '       ' → logprob: -7.3809027671813965
    4. '           ' → logprob: -10.130903244018555
    5. '#' → logprob: -12.755903244018555
    6. 'Self' → logprob: -13.880903244018555
    7. '	self' → logprob: -14.130903244018555
    8. '   ' → logprob: -14.255903244018555
    9. ' ' → logprob: -15.755903244018555
    10. 'S' → logprob: -16.130903244018555

Token 328: ' initial' (ID: 4871)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.5798572897911072
    2. ' level' → logprob: -1.454857349395752
    3. ' =' → logprob: -2.579857349395752
    4. '.level' → logprob: -3.204857349395752
    5. 'initial' → logprob: -3.329857349395752
    6. ' initial' → logprob: -4.454857349395752
    7. 'self' → logprob: -4.704857349395752
    8. ' self' → logprob: -4.704857349395752
    9. '       ' → logprob: -4.954857349395752
    10. '   ' → logprob: -5.079857349395752

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014257162809372
    2. '=' → logprob: -1.7014256715774536
    3. '       ' → logprob: -11.951425552368164
    4. '           ' → logprob: -12.576425552368164
    5. '=self' → logprob: -14.326425552368164
    6. ' ' → logprob: -14.701425552368164
    7. 'self' → logprob: -14.826425552368164
    8. '=False' → logprob: -14.951425552368164
    9. '   ' → logprob: -15.576425552368164
    10. '=True' → logprob: -15.951425552368164

Token 330: ' bas' (ID: 3222)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.023245595395565033
    2. ' False' → logprob: -3.7732455730438232
    3. '(False' → logprob: -16.523244857788086
    4. '=False' → logprob: -18.148244857788086
    5. ' bas' → logprob: -18.648244857788086
    6. 'True' → logprob: -18.773244857788086
    7. 'false' → logprob: -19.148244857788086
    8. '_false' → logprob: -19.398244857788086
    9. '.False' → logprob: -20.148244857788086
    10. 'bas' → logprob: -20.398244857788086

Token 331: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10469076037406921
    2. '(False' → logprob: -2.7296907901763916
    3. '       ' → logprob: -3.6046907901763916
    4. '           ' → logprob: -5.8546905517578125
    5. '(True' → logprob: -6.7296905517578125
    6. ' =' → logprob: -6.8546905517578125
    7. '=False' → logprob: -7.3546905517578125
    8. '(self' → logprob: -7.7296905517578125
    9. '(' → logprob: -8.479690551757812
    10. 'False' → logprob: -8.604690551757812

Token 332: 'niveau' (ID: 114906)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.014166799373924732
    2. ' False' → logprob: -4.264166831970215
    3. 'True' → logprob: -13.014166831970215
    4. '(False' → logprob: -14.514166831970215
    5. '0' → logprob: -15.139166831970215
    6. '=False' → logprob: -16.1391658782959
    7. ' True' → logprob: -16.7641658782959
    8. 'level' → logprob: -17.5141658782959
    9. 'false' → logprob: -17.6391658782959
    10. ')' → logprob: -17.8891658782959

Token 333: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4208151698112488
    2. ' False' → logprob: -1.1708152294158936
    3. '0' → logprob: -3.4208152294158936
    4. ' ' → logprob: -7.2958149909973145
    5. '(False' → logprob: -11.795815467834473
    6. '=False' → logprob: -13.045815467834473
    7. ' True' → logprob: -15.795815467834473
    8. '_false' → logprob: -15.920815467834473
    9. 'True' → logprob: -16.045814514160156
    10. '   ' → logprob: -16.670814514160156

Token 334: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16208964586257935
    2. '0' → logprob: -1.9120895862579346
    3. ' False' → logprob: -6.287089824676514
    4. '(False' → logprob: -13.287089347839355
    5. ' ' → logprob: -13.537089347839355
    6. '=False' → logprob: -15.412089347839355
    7. 'True' → logprob: -15.537089347839355
    8. 'false' → logprob: -15.912089347839355
    9. '   ' → logprob: -17.162090301513672
    10. '_false' → logprob: -17.787090301513672

Token 335: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018873488530516624
    2. '       ' → logprob: -4.018873691558838
    3. ')
' → logprob: -7.518873691558838
    4. ' )' → logprob: -9.01887321472168
    5. '           ' → logprob: -10.14387321472168
    6. '<|end|>' → logprob: -11.39387321472168
    7. '):
' → logprob: -13.14387321472168
    8. ')\
' → logprob: -13.64387321472168
    9. '   ' → logprob: -13.76887321472168
    10. ')#' → logprob: -14.51887321472168

Token 336: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02796388603746891
    2. 'self' → logprob: -3.777963876724243
    3. '           ' → logprob: -5.527964115142822
    4. ' self' → logprob: -7.277964115142822
    5. '<|end|>' → logprob: -11.527963638305664
    6. '	self' → logprob: -11.652963638305664
    7. '	' → logprob: -11.777963638305664
    8. '   ' → logprob: -12.527963638305664
    9. '               ' → logprob: -12.652963638305664
    10. '	       ' → logprob: -12.902963638305664

Token 337: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0001649220648687333
    2. ' self' → logprob: -8.750164985656738
    3. '       ' → logprob: -12.625164985656738
    4. '           ' → logprob: -12.750164985656738
    5. 'False' → logprob: -15.500164985656738
    6. '	self' → logprob: -17.500164031982422
    7. '   ' → logprob: -18.625164031982422
    8. '0' → logprob: -19.125164031982422
    9. '(self' → logprob: -19.875164031982422
    10. ' ' → logprob: -20.000164031982422

Token 338: '.level' (ID: 36989)
  Prédit: '.level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.level' → logprob: -9.102680633077398e-05
    2. 'level' → logprob: -9.625090599060059
    3. '.' → logprob: -10.625090599060059
    4. ' .' → logprob: -14.625090599060059
    5. '.Level' → logprob: -16.625091552734375
    6. ' level' → logprob: -16.750091552734375
    7. '.le' → logprob: -17.125091552734375
    8. '	level' → logprob: -17.750091552734375
    9. '[level' → logprob: -18.000091552734375
    10. '.l' → logprob: -19.750091552734375

Token 339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575951099395752
    2. '=' → logprob: -0.825951099395752
    3. '=False' → logprob: -11.450950622558594
    4. '=True' → logprob: -14.325950622558594
    5. ')' → logprob: -16.575950622558594
    6. '<|end|>' → logprob: -16.825950622558594
    7. '＝' → logprob: -16.950950622558594
    8. '=
' → logprob: -17.325950622558594
    9. ' =
' → logprob: -17.325950622558594
    10. ' ' → logprob: -17.700950622558594

Token 340: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009114635176956654
    2. ' False' → logprob: -7.000911235809326
    3. '(False' → logprob: -20.000911712646484
    4. '=False' → logprob: -21.625911712646484
    5. 'True' → logprob: -22.500911712646484
    6. '.False' → logprob: -23.000911712646484
    7. '_false' → logprob: -23.500911712646484
    8. '0' → logprob: -23.500911712646484
    9. 'false' → logprob: -24.375911712646484
    10. 'Fal' → logprob: -25.250911712646484

Token 341: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 342: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' L' (ID: 451)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.37094709277153015
    2. 'def' → logprob: -1.3709471225738525
    3. '#' → logprob: -4.245946884155273
    4. '       ' → logprob: -4.245946884155273
    5. 'pass' → logprob: -4.245946884155273
    6. ' self' → logprob: -5.370946884155273
    7. 'current' → logprob: -5.745946884155273
    8. '   ' → logprob: -6.120946884155273
    9. 'time' → logprob: -7.745946884155273
    10. 'max' → logprob: -7.995946884155273

Token 345: ''Etat' (ID: 136777)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13692517578601837
    2. '#' → logprob: -3.511925220489502
    3. 'imiter' → logprob: -4.886925220489502
    4. 'ev' → logprob: -5.011925220489502
    5. 'im' → logprob: -5.136925220489502
    6. 'imit' → logprob: -5.136925220489502
    7. 'ock' → logprob: -5.511925220489502
    8. 'ocked' → logprob: -5.511925220489502
    9. ' =' → logprob: -5.636925220489502
    10. '   ' → logprob: -5.761925220489502

Token 346: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16291438043117523
    2. '=' → logprob: -2.162914276123047
    3. '_' → logprob: -5.287914276123047
    4. ' de' → logprob: -5.287914276123047
    5. 'de' → logprob: -5.412914276123047
    6. '       ' → logprob: -5.912914276123047
    7. 'e' → logprob: -6.037914276123047
    8. 'initial' → logprob: -6.412914276123047
    9. '_s' → logprob: -6.537914276123047
    10. '#' → logprob: -6.662914276123047

Token 347: ' sas' (ID: 51515)
  Prédit: ' sas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sas' → logprob: -0.18243667483329773
    2. 'sas' → logprob: -1.9324367046356201
    3. ' gate' → logprob: -4.432436466217041
    4. 'self' → logprob: -5.807436466217041
    5. 'gate' → logprob: -5.932436466217041
    6. ' self' → logprob: -7.057436466217041
    7. 's' → logprob: -7.682436466217041
    8. ' passage' → logprob: -7.932436466217041
    9. ' flux' → logprob: -8.5574369430542
    10. 'pass' → logprob: -8.5574369430542

Token 348: ' est' (ID: 893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6740102171897888
    2. ' =' → logprob: -0.7990102171897888
    3. '   ' → logprob: -5.174010276794434
    4. 'self' → logprob: -5.299010276794434
    5. ':' → logprob: -5.424010276794434
    6. '=' → logprob: -5.424010276794434
    7. '<|end|>' → logprob: -5.424010276794434
    8. ',' → logprob: -5.674010276794434
    9. ' self' → logprob: -6.049010276794434
    10. ' :' → logprob: -6.174010276794434

Token 349: ' simple' (ID: 4705)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.8812852501869202
    2. ' False' → logprob: -1.0062851905822754
    3. '"' → logprob: -2.1312851905822754
    4. ' "' → logprob: -2.6312851905822754
    5. ' self' → logprob: -4.881285190582275
    6. '0' → logprob: -5.006285190582275
    7. 'self' → logprob: -5.256285190582275
    8. ' '' → logprob: -5.506285190582275
    9. ' ' → logprob: -6.506285190582275
    10. ''' → logprob: -6.631285190582275

Token 350: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: ' actuellement' (ID: 67741)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5400067567825317
    2. 'self' → logprob: -1.1650067567825317
    3. '       ' → logprob: -2.290006637573242
    4. '#' → logprob: -5.665006637573242
    5. ' #' → logprob: -7.915006637573242
    6. '	self' → logprob: -10.290006637573242
    7. '0' → logprob: -10.415006637573242
    8. '        
' → logprob: -10.540006637573242
    9. '
' → logprob: -10.665006637573242
    10. '   ' → logprob: -10.665006637573242

Token 352: ' au' (ID: 2791)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.669090211391449
    2. '       ' → logprob: -1.4190902709960938
    3. ' self' → logprob: -1.9190902709960938
    4. ',' → logprob: -3.7940902709960938
    5. 'False' → logprob: -4.294090270996094
    6. ' False' → logprob: -4.669090270996094
    7. ' =' → logprob: -4.794090270996094
    8. ':' → logprob: -4.919090270996094
    9. '#' → logprob: -4.919090270996094
    10. '"' → logprob: -5.794090270996094

Token 353: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.37071189284324646
    2. 'bas' → logprob: -1.2457119226455688
    3. 'level' → logprob: -4.620711803436279
    4. 'repos' → logprob: -4.745711803436279
    5. ' niveau' → logprob: -6.870711803436279
    6. 'False' → logprob: -7.870711803436279
    7. 'nivel' → logprob: -7.995711803436279
    8. 'low' → logprob: -8.120712280273438
    9. '```' → logprob: -8.245712280273438
    10. 'niv' → logprob: -8.620712280273438

Token 354: ' bas' (ID: 3222)
  Prédit: ' bas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bas' → logprob: -0.155202716588974
    2. 'bas' → logprob: -2.030202627182007
    3. '_bas' → logprob: -5.030202865600586
    4. ' False' → logprob: -5.780202865600586
    5. ' haut' → logprob: -7.155202865600586
    6. 'False' → logprob: -7.155202865600586
    7. '_' → logprob: -7.905202865600586
    8. 'haut' → logprob: -8.655202865600586
    9. '0' → logprob: -9.155202865600586
    10. '_false' → logprob: -9.280202865600586

Token 355: ' ou' (ID: 2031)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: ' haut' (ID: 28223)
  Prédit: ' haut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' haut' → logprob: -0.05417155846953392
    2. 'haut' → logprob: -3.054171562194824
    3. 'ha' → logprob: -5.679171562194824
    4. ' True' → logprob: -6.929171562194824
    5. 'high' → logprob: -8.179171562194824
    6. 'bas' → logprob: -8.304171562194824
    7. 'True' → logprob: -8.929171562194824
    8. ' high' → logprob: -9.429171562194824
    9. ' hauts' → logprob: -9.429171562194824
    10. ' niveau' → logprob: -9.804171562194824

Token 357: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6742150783538818
    2. '       ' → logprob: -1.7992150783538818
    3. 'pass' → logprob: -2.049215078353882
    4. '   ' → logprob: -2.424215078353882
    5. '<|end|>' → logprob: -3.299215078353882
    6. '#' → logprob: -3.799215078353882
    7. 'self' → logprob: -4.799215316772461
    8. ' pass' → logprob: -4.924215316772461
    9. '
' → logprob: -5.174215316772461
    10. '        
' → logprob: -5.299215316772461

Token 361: ' aura' (ID: 33008)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6828034520149231
    2. '       ' → logprob: -1.8078033924102783
    3. '   ' → logprob: -2.3078033924102783
    4. '#' → logprob: -2.4328033924102783
    5. ' def' → logprob: -2.6828033924102783
    6. ' continue' → logprob: -3.5578033924102783
    7. 'continue' → logprob: -4.682803630828857
    8. ' peut' → logprob: -5.057803630828857
    9. ' #' → logprob: -5.432803630828857
    10. ' a' → logprob: -5.557803630828857

Token 362: ' besoin' (ID: 27703)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24213586747646332
    2. ' self' → logprob: -1.9921358823776245
    3. '   ' → logprob: -3.242135763168335
    4. '       ' → logprob: -4.117136001586914
    5. 'def' → logprob: -4.867136001586914
    6. '  ' → logprob: -5.867136001586914
    7. ' une' → logprob: -6.117136001586914
    8. ' un' → logprob: -6.242136001586914
    9. ' besoin' → logprob: -6.492136001586914
    10. '	self' → logprob: -6.617136001586914

Token 363: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06508498638868332
    2. ' de' → logprob: -3.440084934234619
    3. 'd' → logprob: -4.440084934234619
    4. '    ' → logprob: -4.815084934234619
    5. '   ' → logprob: -5.315084934234619
    6. ' ' → logprob: -5.815084934234619
    7. '  ' → logprob: -6.690084934234619
    8. '       ' → logprob: -7.065084934234619
    9. '_' → logprob: -8.440085411071777
    10. '        ' → logprob: -8.565085411071777

Token 364: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2332110404968262
    2. ''un' → logprob: -1.6082110404968262
    3. 'une' → logprob: -1.6082110404968262
    4. ''une' → logprob: -2.108211040496826
    5. 'un' → logprob: -2.358211040496826
    6. ' un' → logprob: -4.108211040496826
    7. 'a' → logprob: -4.108211040496826
    8. ' une' → logprob: -4.733211040496826
    9. ' a' → logprob: -5.233211040496826
    10. 'u' → logprob: -5.233211040496826

Token 365: ' méthode' (ID: 71490)
  Prédit: ' méthode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' méthode' → logprob: -0.6434415578842163
    2. 'def' → logprob: -2.518441677093506
    3. ' variable' → logprob: -2.643441677093506
    4. 'fonction' → logprob: -2.768441677093506
    5. 'mé' → logprob: -3.143441677093506
    6. ' fonction' → logprob: -3.143441677093506
    7. 'method' → logprob: -3.393441677093506
    8. ' method' → logprob: -4.018441677093506
    9. 'variable' → logprob: -4.268441677093506
    10. ' def' → logprob: -4.518441677093506

Token 366: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: ' sim' (ID: 1845)
  Prédit: 'changer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'changer' → logprob: -0.5476979613304138
    2. ' changer' → logprob: -0.9226979613304138
    3. ' gérer' → logprob: -5.172698020935059
    4. 'switch' → logprob: -5.547698020935059
    5. 'ch' → logprob: -5.797698020935059
    6. 'bas' → logprob: -7.172698020935059
    7. 'pass' → logprob: -7.297698020935059
    8. 'toggle' → logprob: -7.422698020935059
    9. ' bas' → logprob: -7.422698020935059
    10. 'def' → logprob: -7.422698020935059

Token 368: 'uler' (ID: 11802)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.3842954933643341
    2. 'ulate' → logprob: -2.2592954635620117
    3. 'pl' → logprob: -2.3842954635620117
    4. 'plement' → logprob: -3.0092954635620117
    5. 'pler' → logprob: -3.3842954635620117
    6. 'uler' → logprob: -5.009295463562012
    7. 'p' → logprob: -5.134295463562012
    8. 'plate' → logprob: -5.384295463562012
    9. 'ule' → logprob: -5.884295463562012
    10. 'ply' → logprob: -6.384295463562012

Token 369: ' le' (ID: 505)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9633793830871582
    2. '<|end|>' → logprob: -0.9633793830871582
    3. 'def' → logprob: -1.9633793830871582
    4. '   ' → logprob: -3.588379383087158
    5. ' la' → logprob: -4.338379383087158
    6. ' l' → logprob: -4.838379383087158
    7. '       ' → logprob: -5.213379383087158
    8. ' ' → logprob: -5.213379383087158
    9. ' le' → logprob: -5.463379383087158
    10. '<|end|>' → logprob: -5.963379383087158

Token 370: ' changement' (ID: 61912)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passage' → logprob: -0.1866334080696106
    2. 'pass' → logprob: -2.436633348464966
    3. ' changement' → logprob: -3.561633348464966
    4. ' mouvement' → logprob: -4.436633586883545
    5. 'ch' → logprob: -4.811633586883545
    6. ' déplacement' → logprob: -4.936633586883545
    7. 'pas' → logprob: -5.061633586883545
    8. ' fonctionnement' → logprob: -5.186633586883545
    9. 'dé' → logprob: -6.311633586883545
    10. ' temps' → logprob: -6.561633586883545

Token 371: ' entre' (ID: 3853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: ' ces' (ID: 10532)
  Prédit: ' niveaux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' niveaux' → logprob: -0.4003353416919708
    2. 'niveau' → logprob: -2.1503353118896484
    3. 'levels' → logprob: -2.4003353118896484
    4. ' niveau' → logprob: -3.4003353118896484
    5. ' levels' → logprob: -4.275335311889648
    6. 'les' → logprob: -4.275335311889648
    7. 'level' → logprob: -4.275335311889648
    8. ' les' → logprob: -4.775335311889648
    9. ' level' → logprob: -5.025335311889648
    10. ' nive' → logprob: -5.025335311889648

Token 373: ' états' (ID: 184259)
  Prédit: ' niveaux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' niveaux' → logprob: -0.24267984926700592
    2. ' deux' → logprob: -1.7426798343658447
    3. 'n' → logprob: -4.242680072784424
    4. 'de' → logprob: -4.617680072784424
    5. 'niveau' → logprob: -5.117680072784424
    6. ' ' → logprob: -5.617680072784424
    7. '2' → logprob: -6.742680072784424
    8. ' nive' → logprob: -6.867680072784424
    9. ' niveau' → logprob: -6.867680072784424
    10. 'levels' → logprob: -7.117680072784424

Token 374: ' selon' (ID: 27571)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 375: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3503016233444214
    2. ' les' → logprob: -1.7253016233444214
    3. ' le' → logprob: -3.225301742553711
    4. 'l' → logprob: -4.100301742553711
    5. ' la' → logprob: -4.225301742553711
    6. ' des' → logprob: -4.600301742553711
    7. 'les' → logprob: -4.850301742553711
    8. 'le' → logprob: -5.100301742553711
    9. ' time' → logprob: -5.600301742553711
    10. ' un' → logprob: -5.850301742553711

Token 376: ' présence' (ID: 57522)
  Prédit: ' flux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flux' → logprob: -0.8182135820388794
    2. 'flux' → logprob: -1.3182135820388794
    3. 'dé' → logprob: -2.44321346282959
    4. ' flow' → logprob: -3.44321346282959
    5. ' temps' → logprob: -4.31821346282959
    6. 'volume' → logprob: -4.44321346282959
    7. ' volume' → logprob: -4.44321346282959
    8. 'temps' → logprob: -4.56821346282959
    9. ' débit' → logprob: -4.69321346282959
    10. 'flow' → logprob: -5.19321346282959

Token 377: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.2109159231185913
    2. ' des' → logprob: -1.3359159231185913
    3. ' de' → logprob: -1.4609159231185913
    4. ' ou' → logprob: -1.9609159231185913
    5. 'd' → logprob: -4.085916042327881
    6. '       ' → logprob: -4.335916042327881
    7. ' du' → logprob: -4.960916042327881
    8. ' or' → logprob: -5.210916042327881
    9. '<|end|>' → logprob: -5.210916042327881
    10. 'de' → logprob: -5.460916042327881

Token 378: ' bateau' (ID: 123794)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5693398714065552
    2. 'l' → logprob: -1.6943398714065552
    3. ' eau' → logprob: -2.4443397521972656
    4. 'e' → logprob: -2.9443397521972656
    5. ' water' → logprob: -3.5693397521972656
    6. 'water' → logprob: -4.069339752197266
    7. ' flux' → logprob: -4.444339752197266
    8. 'flux' → logprob: -4.819339752197266
    9. ''eau' → logprob: -4.944339752197266
    10. ' la' → logprob: -5.319339752197266

Token 379: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.982755720615387
    2. ' les' → logprob: -1.6077556610107422
    3. ' la' → logprob: -1.9827556610107422
    4. ' le' → logprob: -2.357755661010742
    5. 'le' → logprob: -2.857755661010742
    6. ' des' → logprob: -3.357755661010742
    7. 'les' → logprob: -3.357755661010742
    8. 'l' → logprob: -4.357755661010742
    9. ' de' → logprob: -4.482755661010742
    10. ' d' → logprob: -4.732755661010742

Token 384: ' direction' (ID: 9262)
  Prédit: ' logique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' logique' → logprob: -1.6334786415100098
    2. ' passage' → logprob: -1.8834786415100098
    3. ' demande' → logprob: -2.1334786415100098
    4. ' quantité' → logprob: -3.0084786415100098
    5. ' gestion' → logprob: -3.2584786415100098
    6. ' pression' → logprob: -3.2584786415100098
    7. ' consommation' → logprob: -3.3834786415100098
    8. ' cons' → logprob: -3.5084786415100098
    9. ' disponibilité' → logprob: -3.5084786415100098
    10. 'pass' → logprob: -3.7584786415100098

Token 385: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: ' flux' (ID: 36547)
  Prédit: ' flux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flux' → logprob: -0.8252955079078674
    2. ' passage' → logprob: -1.2002954483032227
    3. ' sas' → logprob: -2.4502954483032227
    4. ' bateau' → logprob: -3.0752954483032227
    5. ' mouvement' → logprob: -3.2002954483032227
    6. ' courant' → logprob: -3.5752954483032227
    7. ' déplacement' → logprob: -3.9502954483032227
    8. 'flux' → logprob: -4.825295448303223
    9. 'sas' → logprob: -5.325295448303223
    10. 'bate' → logprob: -5.950295448303223

Token 387: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6428590416908264
    2. '<|end|>' → logprob: -0.8928590416908264
    3. ':' → logprob: -3.5178589820861816
    4. '\n' → logprob: -4.392858982086182
    5. '
' → logprob: -4.642858982086182
    6. '    
' → logprob: -6.017858982086182
    7. '<|end|>' → logprob: -6.267858982086182
    8. ' 
' → logprob: -6.517858982086182
    9. '\' → logprob: -6.642858982086182
    10. 'def' → logprob: -6.642858982086182

Token 389: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0357252359390259
    2. '<|end|>' → logprob: -1.0357252359390259
    3. 'def' (adapté à ' def') → logprob: -2.0357251167297363
    4. '   ' → logprob: -2.1607251167297363
    5. '    
' → logprob: -4.160725116729736
    6. ' 
' → logprob: -5.035725116729736
    7. ' def' → logprob: -5.285725116729736
    8. '\n' → logprob: -5.285725116729736
    9. '<|end|>' → logprob: -5.660725116729736
    10. '  
' → logprob: -6.285725116729736

Token 390: ' level' (ID: 3211)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -1.1793750524520874
    2. ' can' → logprob: -1.4293750524520874
    3. ' change' → logprob: -1.8043750524520874
    4. 'can' → logprob: -2.679375171661377
    5. ' toggle' → logprob: -2.804375171661377
    6. 'change' → logprob: -3.429375171661377
    7. ' simulate' → logprob: -3.679375171661377
    8. ' switch' → logprob: -4.304375171661377
    9. 'toggle' → logprob: -4.679375171661377
    10. ' update' → logprob: -4.679375171661377

Token 391: '_is' (ID: 15224)
  Prédit: '_up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.1809525042772293
    2. '_' → logprob: -2.430952548980713
    3. '():' → logprob: -3.805952548980713
    4. '_change' → logprob: -4.055952548980713
    5. '(self' → logprob: -4.305952548980713
    6. '(' → logprob: -5.055952548980713
    7. '):' → logprob: -5.805952548980713
    8. '_switch' → logprob: -5.805952548980713
    9. '()' → logprob: -6.055952548980713
    10. '_toggle' → logprob: -6.430952548980713

Token 392: '_high' (ID: 51432)
  Prédit: '_high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_high' → logprob: -0.20296676456928253
    2. '_low' → logprob: -1.9529668092727661
    3. '(self' → logprob: -4.077966690063477
    4. '_up' → logprob: -5.202966690063477
    5. '(level' → logprob: -5.327966690063477
    6. '_true' → logprob: -5.827966690063477
    7. '_lower' → logprob: -6.327966690063477
    8. '(' → logprob: -6.327966690063477
    9. 'False' → logprob: -6.702966690063477
    10. '_false' → logprob: -6.702966690063477

Token 393: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013810492237098515
    2. '(' → logprob: -9.500138282775879
    3. '():' → logprob: -10.625138282775879
    4. ' (' → logprob: -10.750138282775879
    5. 'self' → logprob: -11.500138282775879
    6. '(s' → logprob: -12.625138282775879
    7. '   ' → logprob: -13.750138282775879
    8. '()' → logprob: -14.000138282775879
    9. ' ' → logprob: -14.750138282775879
    10. ':' → logprob: -15.125138282775879

Token 394: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005899641662836075
    2. '):
' → logprob: -5.380899429321289
    3. ' ):' → logprob: -7.380899429321289
    4. ')' → logprob: -7.755899429321289
    5. '():' → logprob: -8.755899429321289
    6. ':' → logprob: -10.630899429321289
    7. '()' → logprob: -11.130899429321289
    8. 'self' → logprob: -11.755899429321289
    9. '):

' → logprob: -12.255899429321289
    10. ' ' → logprob: -12.755899429321289

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.175940603017807
    2. 'return' → logprob: -2.92594051361084
    3. ' return' → logprob: -3.17594051361084
    4. ':' → logprob: -3.30094051361084
    5. ':return' → logprob: -4.17594051361084
    6. '(' → logprob: -4.92594051361084
    7. '   ' → logprob: -5.67594051361084
    8. '():' → logprob: -6.55094051361084
    9. '<|end|>' → logprob: -8.05094051361084
    10. '()' → logprob: -8.42594051361084

Token 396: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13634629547595978
    2. ' return' → logprob: -2.6363463401794434
    3. '       ' → logprob: -2.8863463401794434
    4. '   ' → logprob: -9.886345863342285
    5. '	return' → logprob: -12.261345863342285
    6. ' ' → logprob: -14.386345863342285
    7. ' ' → logprob: -14.886345863342285
    8. '	' → logprob: -15.136345863342285
    9. '    ' → logprob: -15.511345863342285
    10. ':return' → logprob: -15.761345863342285

Token 397: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2519311308860779
    2. 'self' → logprob: -1.5019311904907227
    3. '	self' → logprob: -14.376931190490723
    4. ' True' → logprob: -14.626931190490723
    5. ' not' → logprob: -15.126931190490723
    6. 'True' → logprob: -15.251931190490723
    7. ' ' → logprob: -15.376931190490723
    8. ' ' → logprob: -15.501931190490723
    9. 'not' → logprob: -16.876930236816406
    10. '(self' → logprob: -17.876930236816406

Token 398: '.level' (ID: 36989)
  Prédit: '.level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.level' → logprob: -0.00039063513395376503
    2. '.' → logprob: -7.875390529632568
    3. ' .' → logprob: -11.750391006469727
    4. '.le' → logprob: -13.500391006469727
    5. 'level' → logprob: -14.500391006469727
    6. '.Level' → logprob: -14.625391006469727
    7. '.status' → logprob: -16.000391006469727
    8. '	level' → logprob: -16.625391006469727
    9. '.l' → logprob: -17.375391006469727
    10. '[level' → logprob: -17.750391006469727

Token 399: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2762333154678345
    2. '<|end|>' → logprob: -2.401233196258545
    3. '
' → logprob: -2.776233196258545
    4. '   ' → logprob: -2.901233196258545
    5. ' def' → logprob: -3.651233196258545
    6. '<|end|>' → logprob: -5.651233196258545
    7. '

' → logprob: -6.776233196258545
    8. '	def' → logprob: -7.401233196258545
    9. '    
' → logprob: -7.776233196258545
    10. ')' → logprob: -8.026233673095703

Token 402: ' high' (ID: 1932)
  Prédit: ' level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' level' → logprob: -0.2727680206298828
    2. 'level' → logprob: -1.7727680206298828
    3. ' set' → logprob: -3.397768020629883
    4. ' lower' → logprob: -4.272768020629883
    5. 'lower' → logprob: -5.022768020629883
    6. '_level' → logprob: -5.272768020629883
    7. ' toggle' → logprob: -5.772768020629883
    8. 'toggle' → logprob: -6.522768020629883
    9. '_' → logprob: -7.022768020629883
    10. 'set' → logprob: -7.272768020629883

Token 403: '_level' (ID: 18404)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.6985805630683899
    2. '_up' → logprob: -1.9485805034637451
    3. '_level' → logprob: -2.198580503463745
    4. 'en' → logprob: -2.948580503463745
    5. 'level' → logprob: -3.448580503463745
    6. 'def' → logprob: -3.573580503463745
    7. 'er' → logprob: -3.823580503463745
    8. '()' → logprob: -4.448580741882324
    9. '<|end|>' → logprob: -4.448580741882324
    10. 'raise' → logprob: -4.823580741882324

Token 404: '_rate' (ID: 20477)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07821336388587952
    2. '():' → logprob: -2.9532134532928467
    3. 'def' → logprob: -4.953213214874268
    4. '():
' → logprob: -5.078213214874268
    5. '   ' → logprob: -6.578213214874268
    6. '_is' → logprob: -6.953213214874268
    7. '()' → logprob: -7.203213214874268
    8. '(' → logprob: -7.328213214874268
    9. 'self' → logprob: -7.578213214874268
    10. '_possible' → logprob: -7.578213214874268

Token 405: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007735223043709993
    2. '(' → logprob: -4.882735252380371
    3. '()' → logprob: -9.257735252380371
    4. ' (' → logprob: -11.257735252380371
    5. 'self' → logprob: -11.507735252380371
    6. 's' → logprob: -12.882735252380371
    7. '   ' → logprob: -13.132735252380371
    8. '(
' → logprob: -13.882735252380371
    9. '(s' → logprob: -14.007735252380371
    10. '()(' → logprob: -14.257735252380371

Token 406: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004380397964268923
    2. '(' → logprob: -5.629380226135254
    3. 'self' → logprob: -8.129380226135254
    4. ')' → logprob: -8.754380226135254
    5. '()' → logprob: -9.379380226135254
    6. '():' → logprob: -10.004380226135254
    7. 'def' → logprob: -10.254380226135254
    8. '   ' → logprob: -10.629380226135254
    9. ' (' → logprob: -10.629380226135254
    10. '(
' → logprob: -10.754380226135254

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2713397741317749
    2. '0' → logprob: -1.771339774131775
    3. 'return' → logprob: -3.3963398933410645
    4. ' return' → logprob: -4.1463398933410645
    5. 'self' → logprob: -4.7713398933410645
    6. ' self' → logprob: -5.2713398933410645
    7. '1' → logprob: -7.3963398933410645
    8. ' ' → logprob: -7.5213398933410645
    9. '        
' → logprob: -7.6463398933410645
    10. '(self' → logprob: -8.021339416503906

Token 408: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11036058515310287
    2. 'if' → logprob: -2.610360622406006
    3. '       ' → logprob: -3.985360622406006
    4. ' return' → logprob: -4.485360622406006
    5. ' if' → logprob: -7.110360622406006
    6. '#' (adapté à ' #') → logprob: -8.485360145568848
    7. '   ' → logprob: -10.610360145568848
    8. 'def' → logprob: -10.860360145568848
    9. '0' → logprob: -10.985360145568848
    10. '	return' → logprob: -11.985360145568848

Token 409: ' quantité' (ID: 89219)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.610275149345398
    2. 'if' → logprob: -0.860275149345398
    3. '#' → logprob: -3.8602752685546875
    4. '       ' → logprob: -4.8602752685546875
    5. ' return' → logprob: -5.9852752685546875
    6. ' if' → logprob: -6.7352752685546875
    7. '   ' → logprob: -7.7352752685546875
    8. 'rate' → logprob: -7.8602752685546875
    9. 'Si' → logprob: -9.485275268554688
    10. '"""' → logprob: -10.110275268554688

Token 410: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21837666630744934
    2. '=' → logprob: -2.468376636505127
    3. 'd' → logprob: -3.093376636505127
    4. '_d' → logprob: -4.468376636505127
    5. '_in' → logprob: -4.593376636505127
    6. '_e' → logprob: -5.093376636505127
    7. ' d' → logprob: -5.093376636505127
    8. '_max' → logprob: -5.593376636505127
    9. '_de' → logprob: -5.593376636505127
    10. '_water' → logprob: -5.843376636505127

Token 411: ''eau' (ID: 38948)
  Prédit: ''eau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''eau' → logprob: -0.027216842398047447
    2. 'e' → logprob: -3.652216911315918
    3. '’eau' → logprob: -7.152216911315918
    4. ' eau' → logprob: -9.527216911315918
    5. ''' → logprob: -11.527216911315918
    6. '   ' → logprob: -11.902216911315918
    7. '_e' → logprob: -11.902216911315918
    8. 'water' → logprob: -12.027216911315918
    9. ''énergie' → logprob: -12.402216911315918
    10. ''e' → logprob: -12.652216911315918

Token 412: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5204802751541138
    2. ' à' → logprob: -2.020480155944824
    3. '=' → logprob: -2.145480155944824
    4. 'à' → logprob: -2.520480155944824
    5. ' nécessaire' → logprob: -3.895480155944824
    6. 'max' → logprob: -4.645480155944824
    7. '   ' → logprob: -4.645480155944824
    8. '       ' → logprob: -5.645480155944824
    9. 'dé' → logprob: -5.895480155944824
    10. '_max' → logprob: -6.020480155944824

Token 413: ' inject' (ID: 26079)
  Prédit: 'inject'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inject' → logprob: -0.19359390437602997
    2. 'dé' → logprob: -2.693593978881836
    3. 'rem' → logprob: -3.443593978881836
    4. 'in' → logprob: -3.693593978881836
    5. 'vider' → logprob: -4.693593978881836
    6. 'm' → logprob: -4.943593978881836
    7. 'lever' → logprob: -5.193593978881836
    8. 'é' → logprob: -5.443593978881836
    9. 'aj' → logprob: -5.943593978881836
    10. '   ' → logprob: -5.943593978881836

Token 414: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.04253559559583664
    2. 'e' → logprob: -3.6675355434417725
    3. '   ' → logprob: -4.667535781860352
    4. 'é' → logprob: -5.917535781860352
    5. 'ion' → logprob: -6.542535781860352
    6. 'ée' → logprob: -6.542535781860352
    7. '       ' → logprob: -7.792535781860352
    8. '     ' → logprob: -9.417535781860352
    9. 'r' → logprob: -9.417535781860352
    10. ' ' → logprob: -9.542535781860352

Token 415: ' ou' (ID: 2031)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0177680253982544
    2. '       ' → logprob: -1.5177680253982544
    3. '   ' → logprob: -1.8927680253982544
    4. ' pour' → logprob: -2.767767906188965
    5. 'pour' → logprob: -3.267767906188965
    6. ' si' → logprob: -3.642767906188965
    7. '()' → logprob: -3.767767906188965
    8. ' ' → logprob: -4.267767906188965
    9. ' /' → logprob: -4.392767906188965
    10. ' par' → logprob: -4.392767906188965

Token 416: ' vid' (ID: 11217)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32598140835762024
    2. ' retirer' → logprob: -2.575981378555298
    3. 'év' → logprob: -3.450981378555298
    4. ' vider' → logprob: -3.575981378555298
    5. 'pré' → logprob: -3.700981378555298
    6. 'ret' → logprob: -3.700981378555298
    7. 'vider' → logprob: -4.200981616973877
    8. 'r' → logprob: -4.700981616973877
    9. '       ' → logprob: -4.825981616973877
    10. '   ' → logprob: -5.200981616973877

Token 417: 'anger' (ID: 5249)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0004995359340682626
    2. 'eer' → logprob: -8.875499725341797
    3. 'anger' → logprob: -9.500499725341797
    4. 'uer' → logprob: -9.625499725341797
    5. 'erer' → logprob: -9.875499725341797
    6. 'rer' → logprob: -10.000499725341797
    7. 'e' → logprob: -10.750499725341797
    8. 'ger' → logprob: -11.000499725341797
    9. 'a' → logprob: -11.500499725341797
    10. 'éer' → logprob: -11.750499725341797

Token 418: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1921178102493286
    2. '   ' → logprob: -2.817117691040039
    3. ' si' → logprob: -3.817117691040039
    4. '       ' → logprob: -3.942117691040039
    5. ' if' → logprob: -4.067117691040039
    6. '=' → logprob: -4.192117691040039
    7. 'if' → logprob: -4.567117691040039
    8. '()' → logprob: -4.817117691040039
    9. ' pour' → logprob: -5.067117691040039
    10. ' ' → logprob: -5.192117691040039

Token 419: ' passer' (ID: 27727)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.0764552652835846
    2. ' passer' → logprob: -3.0764553546905518
    3. 'changer' → logprob: -4.076455116271973
    4. 'mon' → logprob: -5.826455116271973
    5. ' changer' → logprob: -6.701455116271973
    6. 'switch' → logprob: -7.076455116271973
    7. 'p' → logprob: -7.201455116271973
    8. ' monter' → logprob: -7.326455116271973
    9. 'bas' → logprob: -7.451455116271973
    10. 'faire' → logprob: -7.701455116271973

Token 420: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.7304752469062805
    2. ' au' → logprob: -1.8554751873016357
    3. 'du' → logprob: -2.2304751873016357
    4. 'au' → logprob: -2.4804751873016357
    5. ' d' → logprob: -2.6054751873016357
    6. 'd' → logprob: -3.1054751873016357
    7. ' à' → logprob: -4.355475425720215
    8. '_' → logprob: -4.480475425720215
    9. ' de' → logprob: -4.480475425720215
    10. ' ' → logprob: -5.230475425720215

Token 421: ' bas' (ID: 3222)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.46490153670310974
    2. 'bas' → logprob: -1.0899015665054321
    3. ' niveau' → logprob: -3.9649014472961426
    4. ' bas' → logprob: -4.464901447296143
    5. 'level' → logprob: -5.964901447296143
    6. 'self' → logprob: -8.0899019241333
    7. 'nivel' → logprob: -8.0899019241333
    8. ' level' → logprob: -8.0899019241333
    9. 'b' → logprob: -8.2149019241333
    10. 'c' → logprob: -8.3399019241333

Token 422: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.043853651732206345
    2. 'au' → logprob: -3.668853759765625
    3. ' ' → logprob: -4.418853759765625
    4. '_' → logprob: -5.918853759765625
    5. ' à' → logprob: -6.418853759765625
    6. ' _' → logprob: -7.668853759765625
    7. '  ' → logprob: -9.168853759765625
    8. '   ' → logprob: -9.168853759765625
    9. ' ou' → logprob: -9.418853759765625
    10. '    ' → logprob: -9.668853759765625

Token 423: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.1076446995139122
    2. ' haut' → logprob: -2.35764479637146
    3. 'ha' → logprob: -4.982644557952881
    4. ' ' → logprob: -8.482645034790039
    5. ' niveau' → logprob: -9.482645034790039
    6. 'niveau' → logprob: -9.607645034790039
    7. 'high' → logprob: -9.732645034790039
    8. 'h' → logprob: -10.482645034790039
    9. 'hau' → logprob: -10.732645034790039
    10. ' high' → logprob: -11.232645034790039

Token 424: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7000511288642883
    2. '       ' → logprob: -1.2000510692596436
    3. ':' → logprob: -2.2000510692596436
    4. '   ' → logprob: -3.0750510692596436
    5. ' :' → logprob: -4.325051307678223
    6. '=' → logprob: -4.575051307678223
    7. '():' → logprob: -5.700051307678223
    8. ' (' → logprob: -5.950051307678223
    9. '()' → logprob: -6.325051307678223
    10. '    ' → logprob: -6.825051307678223

Token 426: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005435931961983442
    2. ' return' → logprob: -5.380435943603516
    3. '       ' → logprob: -7.130435943603516
    4. ':return' → logprob: -12.255435943603516
    5. '#' (adapté à ' #') → logprob: -12.755435943603516
    6. 'eturn' → logprob: -13.630435943603516
    7. '        
' → logprob: -14.005435943603516
    8. 'if' → logprob: -14.255435943603516
    9. 'self' → logprob: -14.255435943603516
    10. 'import' → logprob: -14.380435943603516

Token 427: ' ou' (ID: 2031)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002563172485679388
    2. ' return' → logprob: -6.627562999725342
    3. '       ' → logprob: -6.877562999725342
    4. '#' → logprob: -8.8775634765625
    5. '   ' → logprob: -10.0025634765625
    6. 'def' → logprob: -11.6275634765625
    7. 'if' → logprob: -12.1275634765625
    8. 'volume' → logprob: -13.0025634765625
    9. '	return' → logprob: -13.2525634765625
    10. ':return' → logprob: -14.7525634765625

Token 428: ' du' (ID: 1462)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.656998634338379
    2. '       ' → logprob: -2.031998634338379
    3. ' return' → logprob: -2.156998634338379
    4. 'self' → logprob: -2.156998634338379
    5. 'return' → logprob: -2.406998634338379
    6. '   ' → logprob: -2.656998634338379
    7. ' self' → logprob: -2.906998634338379
    8. ' du' → logprob: -3.531998634338379
    9. ' #' → logprob: -3.781998634338379
    10. ' de' → logprob: -3.781998634338379

Token 429: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.3161301910877228
    2. 'bas' → logprob: -1.5661301612854004
    3. 'self' → logprob: -4.0661301612854
    4. ' haut' → logprob: -4.1911301612854
    5. ' bas' → logprob: -4.3161301612854
    6. 'ha' → logprob: -5.5661301612854
    7. 'H' → logprob: -6.0661301612854
    8. ' self' → logprob: -6.3161301612854
    9. '0' → logprob: -6.4411301612854
    10. 'high' → logprob: -6.5661301612854

Token 430: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.35534828901290894
    2. ' au' → logprob: -1.2303483486175537
    3. ' to' → logprob: -5.730348110198975
    4. 'to' → logprob: -6.355348110198975
    5. 'à' → logprob: -7.480348110198975
    6. '=' → logprob: -7.980348110198975
    7. ' à' → logprob: -8.980348587036133
    8. '```' → logprob: -9.105348587036133
    9. '   ' → logprob: -9.230348587036133
    10. ' ' → logprob: -9.355348587036133

Token 431: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.01420722994953394
    2. ' bas' → logprob: -4.264207363128662
    3. 'b' → logprob: -11.014206886291504
    4. ' ' → logprob: -11.264206886291504
    5. 'haut' → logprob: -12.389206886291504
    6. ' ' → logprob: -12.764206886291504
    7. '   ' → logprob: -13.389206886291504
    8. '#' → logprob: -13.639206886291504
    9. '```' → logprob: -13.764206886291504
    10. '  ' → logprob: -14.639206886291504

Token 432: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13227930665016174
    2. '       ' → logprob: -3.007279396057129
    3. '=' → logprob: -3.632279396057129
    4. ':' → logprob: -3.757279396057129
    5. '   ' → logprob: -5.382279396057129
    6. '<|end|>' → logprob: -5.757279396057129
    7. '(self' → logprob: -6.132279396057129
    8. '():' → logprob: -6.132279396057129
    9. 'return' → logprob: -6.632279396057129
    10. ')' → logprob: -6.757279396057129

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07123512029647827
    2. 'return' → logprob: -3.071235179901123
    3. ' return' → logprob: -3.946235179901123
    4. ' =' → logprob: -6.321235179901123
    5. '        
' → logprob: -8.071234703063965
    6. '   ' → logprob: -8.196234703063965
    7. ':' → logprob: -8.446234703063965
    8. '=' → logprob: -9.071234703063965
    9. ' 
' → logprob: -9.946234703063965
    10. '
' → logprob: -10.071234703063965

Token 434: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4577277600765228
    2. 'return' → logprob: -1.2077277898788452
    3. '       ' → logprob: -2.7077276706695557
    4. '	return' → logprob: -7.707727909088135
    5. '   ' → logprob: -8.332727432250977
    6. '0' → logprob: -8.707727432250977
    7. '        
' → logprob: -8.957727432250977
    8. ' 
' → logprob: -9.082727432250977
    9. '#' (adapté à ' #') → logprob: -9.207727432250977
    10. ' #' → logprob: -9.832727432250977

Token 435: ' En' (ID: 2130)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01548707950860262
    2. ' return' → logprob: -4.265487194061279
    3. '#' → logprob: -7.015487194061279
    4. '   ' → logprob: -8.515486717224121
    5. '       ' → logprob: -8.765486717224121
    6. 'volume' → logprob: -10.015486717224121
    7. 'if' → logprob: -11.765486717224121
    8. '	return' → logprob: -12.640486717224121
    9. ' #' → logprob: -13.140486717224121
    10. 'delta' → logprob: -13.515486717224121

Token 436: ' L' (ID: 451)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lit' → logprob: -0.5502426028251648
    2. ' litres' → logprob: -1.4252426624298096
    3. 'L' → logprob: -2.4252426624298096
    4. 'Lit' → logprob: -3.1752426624298096
    5. ' litre' → logprob: -4.0502424240112305
    6. ' Lit' → logprob: -4.9252424240112305
    7. '#' → logprob: -5.0502424240112305
    8. 'def' → logprob: -5.5502424240112305
    9. ' liters' → logprob: -5.5502424240112305
    10. ' L' → logprob: -5.6752424240112305

Token 437: '/h' (ID: 14174)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17488710582256317
    2. '=' → logprob: -3.549887180328369
    3. '       ' → logprob: -3.549887180328369
    4. '   ' → logprob: -3.674887180328369
    5. ' /' → logprob: -3.799887180328369
    6. ':' → logprob: -4.174887180328369
    7. 'def' → logprob: -4.924887180328369
    8. ' *' → logprob: -5.674887180328369
    9. '#' → logprob: -6.049887180328369
    10. '
' → logprob: -6.049887180328369

Token 438: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8148067593574524
    2. '       ' → logprob: -1.1898066997528076
    3. ':' → logprob: -1.9398066997528076
    4. '=' → logprob: -3.4398066997528076
    5. 'return' → logprob: -3.5648066997528076
    6. ' :' → logprob: -4.189806938171387
    7. ' return' → logprob: -4.439806938171387
    8. '   ' → logprob: -5.064806938171387
    9. ':
' → logprob: -5.939806938171387
    10. '        
' → logprob: -6.314806938171387

Token 439: 't' (ID: 83)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0862581878900528
    2. ')
' → logprob: -3.8362581729888916
    3. 'self' → logprob: -3.9612581729888916
    4. '):' → logprob: -3.9612581729888916
    5. ' )' → logprob: -4.961258411407471
    6. '):
' → logprob: -5.211258411407471
    7. 'return' → logprob: -5.461258411407471
    8. '       ' → logprob: -5.836258411407471
    9. ' return' → logprob: -6.961258411407471
    10. ' )
' → logprob: -7.461258411407471

Token 440: 'aux' (ID: 5454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2643551528453827
    2. 'ime' → logprob: -3.014355182647705
    3. 'he' → logprob: -3.264355182647705
    4. 'e' → logprob: -3.514355182647705
    5. '   ' → logprob: -4.139355182647705
    6. '=' → logprob: -4.514355182647705
    7. ' )' → logprob: -4.514355182647705
    8. '*' → logprob: -4.889355182647705
    9. ' =' → logprob: -5.014355182647705
    10. ')
' → logprob: -5.014355182647705

Token 441: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33050036430358887
    2. ' =' → logprob: -1.7055003643035889
    3. '=' → logprob: -3.205500364303589
    4. ' )' → logprob: -3.830500364303589
    5. ' de' → logprob: -4.330500602722168
    6. ' d' → logprob: -5.205500602722168
    7. '   ' → logprob: -6.080500602722168
    8. ')
' → logprob: -6.330500602722168
    9. '_de' → logprob: -6.330500602722168
    10. ':' → logprob: -6.705500602722168

Token 442: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014317571185529232
    2. ' )' → logprob: -5.139317512512207
    3. ')
' → logprob: -5.389317512512207
    4. '):' → logprob: -6.264317512512207
    5. '):
' → logprob: -7.639317512512207
    6. ' de' → logprob: -7.889317512512207
    7. '   ' → logprob: -8.764317512512207
    8. ' =' → logprob: -9.264317512512207
    9. '*' → logprob: -9.639317512512207
    10. ' )
' → logprob: -9.639317512512207

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007523100823163986
    2. 'return' → logprob: -5.632523059844971
    3. ' return' → logprob: -6.632523059844971
    4. '   ' → logprob: -6.632523059844971
    5. ':' → logprob: -7.507523059844971
    6. '<|end|>' → logprob: -8.257523536682129
    7. ':return' → logprob: -9.382523536682129
    8. ')' → logprob: -9.382523536682129
    9. ' :' → logprob: -9.632523536682129
    10. '        
' → logprob: -10.382523536682129

Token 444: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1843627691268921
    2. '       ' → logprob: -2.4343628883361816
    3. ' return' → logprob: -2.5593628883361816
    4. 'if' → logprob: -5.934362888336182
    5. ' if' → logprob: -7.684362888336182
    6. '   ' → logprob: -9.809362411499023
    7. '	return' → logprob: -10.434362411499023
    8. 'def' → logprob: -10.559362411499023
    9. '#' → logprob: -11.059362411499023
    10. ':' → logprob: -11.184362411499023

Token 445: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008768673054873943
    2. 'max' → logprob: -5.508768558502197
    3. 'min' → logprob: -5.883768558502197
    4. ' self' → logprob: -6.883768558502197
    5. 'abs' → logprob: -7.633768558502197
    6. 'math' → logprob: -9.008769035339355
    7. 'float' → logprob: -9.383769035339355
    8. '1' → logprob: -9.633769035339355
    9. ' min' → logprob: -10.883769035339355
    10. '0' → logprob: -11.258769035339355

Token 446: '.F' (ID: 1737)
  Prédit: '.F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.F' → logprob: -0.018749484792351723
    2. '.L' → logprob: -4.518749713897705
    3. '.D' → logprob: -4.893749713897705
    4. 'F' → logprob: -9.643749237060547
    5. '.U' → logprob: -9.768749237060547
    6. '.' → logprob: -10.893749237060547
    7. '.H' → logprob: -11.518749237060547
    8. '.E' → logprob: -11.643749237060547
    9. 'L' → logprob: -12.268749237060547
    10. ' .' → logprob: -12.893749237060547

Token 447: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: ' not' (ID: 625)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.018589075654745102
    2. 'self' → logprob: -4.018589019775391
    3. ' not' → logprob: -7.768589019775391
    4. '	self' → logprob: -12.14358901977539
    5. '(self' → logprob: -12.64358901977539
    6. ' ' → logprob: -12.76858901977539
    7. 'not' → logprob: -12.76858901977539
    8. ' (' → logprob: -14.76858901977539
    9. '0' → logprob: -14.89358901977539
    10. ' ' → logprob: -15.14358901977539

Token 449: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3484492301940918
    2. ' self' → logprob: -1.2234492301940918
    3. '(self' → logprob: -13.09844970703125
    4. '	self' → logprob: -13.47344970703125
    5. ' ' → logprob: -14.97344970703125
    6. ' ' → logprob: -15.47344970703125
    7. '[self' → logprob: -15.47344970703125
    8. '   ' → logprob: -16.59844970703125
    9. '  ' → logprob: -16.72344970703125
    10. '<|end|>' → logprob: -16.97344970703125

Token 450: '.level' (ID: 36989)
  Prédit: '.level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.level' → logprob: -2.534558552724775e-05
    2. 'level' → logprob: -10.875025749206543
    3. '.' → logprob: -12.125025749206543
    4. '.high' → logprob: -14.875025749206543
    5. ' .' → logprob: -16.375024795532227
    6. '.status' → logprob: -16.750024795532227
    7. '[level' → logprob: -17.000024795532227
    8. '.is' → logprob: -17.250024795532227
    9. '	level' → logprob: -17.375024795532227
    10. '.Level' → logprob: -17.375024795532227

Token 451: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.005253322422504425
    2. 'else' → logprob: -5.255253314971924
    3. ' ' → logprob: -11.380253791809082
    4. '	else' → logprob: -12.505253791809082
    5. '   ' → logprob: -14.130253791809082
    6. '        ' → logprob: -14.130253791809082
    7. '    ' → logprob: -14.255253791809082
    8. '       ' → logprob: -14.505253791809082
    9. '_else' → logprob: -14.880253791809082
    10. ' ' → logprob: -15.005253791809082

Token 452: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1534409075975418
    2. '-self' → logprob: -2.0284409523010254
    3. ' self' → logprob: -5.528440952301025
    4. '-' → logprob: -5.653440952301025
    5. ' -' → logprob: -6.403440952301025
    6. '-s' → logprob: -6.528440952301025
    7. '0' → logprob: -10.153440475463867
    8. '	self' → logprob: -10.903440475463867
    9. '-m' → logprob: -11.278440475463867
    10. '   ' → logprob: -11.528440475463867

Token 453: '.D' (ID: 1696)
  Prédit: '.D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.D' → logprob: -5.133198283147067e-05
    2. 'D' → logprob: -10.500051498413086
    3. '.F' → logprob: -11.375051498413086
    4. '.' → logprob: -11.750051498413086
    5. ' .' → logprob: -12.875051498413086
    6. '	D' → logprob: -13.625051498413086
    7. '.L' → logprob: -16.000051498413086
    8. ' ' → logprob: -16.375051498413086
    9. ':D' → logprob: -16.750051498413086
    10. '..' → logprob: -16.750051498413086

Token 454: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 456: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 457: ' time' (ID: 1058)
  Prédit: 'toggle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'toggle' → logprob: -1.4180747270584106
    2. ' can' → logprob: -1.6680747270584106
    3. 'can' → logprob: -1.7930747270584106
    4. ' toggle' → logprob: -1.9180747270584106
    5. 'change' → logprob: -2.668074607849121
    6. ' change' → logprob: -3.043074607849121
    7. ' switch' → logprob: -3.668074607849121
    8. ' set' → logprob: -3.793074607849121
    9. 'switch' → logprob: -3.918074607849121
    10. 'set' → logprob: -4.543074607849121

Token 458: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0022862108889967203
    2. '_needed' → logprob: -6.877286434173584
    3. '_required' → logprob: -7.377286434173584
    4. '_' → logprob: -7.752286434173584
    5. '_for' → logprob: -9.252285957336426
    6. 'to' → logprob: -10.877285957336426
    7. '_up' → logprob: -11.752285957336426
    8. '_pass' → logprob: -11.752285957336426
    9. '_between' → logprob: -12.002285957336426
    10. '_until' → logprob: -12.252285957336426

Token 459: '_switch' (ID: 64715)
  Prédit: '_change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.08557174354791641
    2. '_switch' → logprob: -3.085571765899658
    3. 'change' → logprob: -4.710571765899658
    4. '_high' → logprob: -5.210571765899658
    5. '_toggle' → logprob: -5.335571765899658
    6. '_level' → logprob: -5.585571765899658
    7. '_open' → logprob: -6.085571765899658
    8. '_' → logprob: -6.460571765899658
    9. '_transition' → logprob: -6.460571765899658
    10. '_fill' → logprob: -6.460571765899658

Token 460: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03835254907608032
    2. '(' → logprob: -3.2883524894714355
    3. ' (' → logprob: -8.538352966308594
    4. 'self' → logprob: -9.663352966308594
    5. '_(' → logprob: -10.538352966308594
    6. '_' → logprob: -11.163352966308594
    7. '_level' → logprob: -13.163352966308594
    8. '   ' → logprob: -13.288352966308594
    9. '(level' → logprob: -13.663352966308594
    10. '()' → logprob: -13.913352966308594

Token 461: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4214157164096832
    2. '):' → logprob: -1.4214156866073608
    3. ')' → logprob: -3.0464158058166504
    4. 'self' → logprob: -3.7964158058166504
    5. '(' → logprob: -4.54641580581665
    6. '_level' → logprob: -4.92141580581665
    7. ',' → logprob: -5.29641580581665
    8. '():' → logprob: -6.04641580581665
    9. '_' → logprob: -6.42141580581665
    10. '):
' → logprob: -6.79641580581665

Token 462: ' to' (ID: 316)
  Prédit: ' volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.7915248870849609
    2. ' target' → logprob: -1.541524887084961
    3. 'volume' → logprob: -2.666524887084961
    4. ' direction' → logprob: -2.666524887084961
    5. 'target' → logprob: -2.791524887084961
    6. ' current' → logprob: -3.291524887084961
    7. 'direction' → logprob: -3.916524887084961
    8. ' flow' → logprob: -4.291524887084961
    9. 'current' → logprob: -4.541524887084961
    10. ' water' → logprob: -4.666524887084961

Token 463: '_high' (ID: 51432)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.7385862469673157
    2. '_level' → logprob: -0.8635862469673157
    3. '_high' → logprob: -2.738586187362671
    4. '):
' → logprob: -4.48858642578125
    5. ')' → logprob: -4.73858642578125
    6. '):' → logprob: -5.36358642578125
    7. 'high' → logprob: -5.73858642578125
    8. ' level' → logprob: -6.11358642578125
    9. 'Level' → logprob: -6.98858642578125
    10. 'ogle' → logprob: -7.23858642578125

Token 464: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1214580163359642
    2. '):
' → logprob: -2.246458053588867
    3. '_level' → logprob: -4.871458053588867
    4. 'level' → logprob: -8.496458053588867
    5. ')' → logprob: -8.746458053588867
    6. '=' → logprob: -8.746458053588867
    7. 'Level' → logprob: -9.121458053588867
    8. '):
' → logprob: -9.371458053588867
    9. '):

' → logprob: -9.996458053588867
    10. ' ):' → logprob: -10.121458053588867

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15904676914215088
    2. ':' → logprob: -2.1590466499328613
    3. '(' → logprob: -3.7840466499328613
    4. ':
' → logprob: -5.909046649932861
    5. '():' → logprob: -6.659046649932861
    6. '):' → logprob: -6.784046649932861
    7. '   ' → logprob: -6.909046649932861
    8. '(
' → logprob: -7.159046649932861
    9. '):
' → logprob: -7.784046649932861
    10. '(self' → logprob: -7.909046649932861

Token 466: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4360044300556183
    2. 'if' → logprob: -1.186004400253296
    3. ' if' → logprob: -3.061004400253296
    4. '#' (adapté à ' #') → logprob: -7.436004638671875
    5. 'volume' → logprob: -8.561004638671875
    6. 'rate' → logprob: -9.436004638671875
    7. 'diff' → logprob: -10.186004638671875
    8. 'amount' → logprob: -10.436004638671875
    9. ' volume' → logprob: -10.561004638671875
    10. ' #' → logprob: -10.561004638671875

Token 467: ' Cal' (ID: 4453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1048513650894165
    2. 'volume' → logprob: -2.979851245880127
    3. '#' → logprob: -3.354851245880127
    4. 'delta' → logprob: -5.604851245880127
    5. 'vol' → logprob: -5.729851245880127
    6. '   ' → logprob: -6.104851245880127
    7. '       ' → logprob: -6.729851245880127
    8. 'return' → logprob: -7.479851245880127
    9. 'distance' → logprob: -7.479851245880127
    10. 'target' → logprob: -7.854851245880127

Token 468: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.33989080786705017
    2. 'cul' → logprob: -1.8398908376693726
    3. 'cule' → logprob: -2.089890718460083
    4. 'c' → logprob: -5.214890956878662
    5. 'cular' → logprob: -10.089890480041504
    6. 'cula' → logprob: -10.214890480041504
    7. 'cut' → logprob: -10.964890480041504
    8. 'cules' → logprob: -11.089890480041504
    9. 'culator' → logprob: -11.714890480041504
    10. 'culated' → logprob: -11.714890480041504

Token 469: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06380857527256012
    2. 'self' → logprob: -3.9388086795806885
    3. ' self' → logprob: -4.438808441162109
    4. ' le' → logprob: -4.563808441162109
    5. 'return' → logprob: -5.313808441162109
    6. ' return' → logprob: -5.438808441162109
    7. '   ' → logprob: -5.938808441162109
    8. 'def' → logprob: -6.063808441162109
    9. '(self' → logprob: -7.063808441162109
    10. 'tion' → logprob: -7.313808441162109

Token 470: ' temps' (ID: 11160)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.3102062940597534
    2. 'if' → logprob: -1.4352062940597534
    3. 'volume' → logprob: -1.4352062940597534
    4. 'temps' → logprob: -2.810206413269043
    5. ' volume' → logprob: -2.935206413269043
    6. 'time' → logprob: -3.060206413269043
    7. '#' → logprob: -3.685206413269043
    8. 'EPS' → logprob: -4.185206413269043
    9. 'return' → logprob: -4.435206413269043
    10. ' if' → logprob: -4.935206413269043

Token 471: ' nécessaire' (ID: 43098)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5101900100708008
    2. ' (' → logprob: -1.7601900100708008
    3. '(' → logprob: -2.010190010070801
    4. ' if' → logprob: -2.010190010070801
    5. '       ' → logprob: -2.010190010070801
    6. '(
' → logprob: -3.385190010070801
    7. '_' → logprob: -3.635190010070801
    8. ')' → logprob: -3.885190010070801
    9. ' ' → logprob: -4.010190010070801
    10. 'if' → logprob: -4.260190010070801

Token 472: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2867421805858612
    2. ' (' → logprob: -2.0367422103881836
    3. '       ' → logprob: -3.4117422103881836
    4. ',' → logprob: -4.036742210388184
    5. '(
' → logprob: -4.036742210388184
    6. '   ' → logprob: -4.536742210388184
    7. 'return' → logprob: -4.911742210388184
    8. ')' → logprob: -4.911742210388184
    9. ' pour' → logprob: -4.911742210388184
    10. ' return' → logprob: -5.911742210388184

Token 473: ' passer' (ID: 27727)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.876622200012207
    2. 'switch' → logprob: -0.876622200012207
    3. ' passer' → logprob: -2.626622200012207
    4. 'changer' → logprob: -2.626622200012207
    5. ' changer' → logprob: -4.001622200012207
    6. ' switch' → logprob: -6.626622200012207
    7. ' passage' → logprob: -7.251622200012207
    8. '   ' → logprob: -7.626622200012207
    9. ' pass' → logprob: -8.001622200012207
    10. 'ch' → logprob: -8.001622200012207

Token 474: ' du' (ID: 1462)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6451593637466431
    2. ' du' → logprob: -1.770159363746643
    3. ' au' → logprob: -1.895159363746643
    4. 'au' → logprob: -2.5201592445373535
    5. '       ' → logprob: -3.7701592445373535
    6. 'à' → logprob: -4.2701592445373535
    7. '(' → logprob: -5.2701592445373535
    8. 'from' → logprob: -5.2701592445373535
    9. '(self' → logprob: -5.5201592445373535
    10. ' (' → logprob: -5.5201592445373535

Token 475: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.12168551236391068
    2. 'bas' → logprob: -2.49668550491333
    3. ' niveau' → logprob: -3.74668550491333
    4. ' bas' → logprob: -5.12168550491333
    5. 'self' → logprob: -6.87168550491333
    6. 'level' → logprob: -7.37168550491333
    7. 'b' → logprob: -8.496685981750488
    8. 'niv' → logprob: -8.746685981750488
    9. 'current' → logprob: -8.871685981750488
    10. 'c' → logprob: -8.996685981750488

Token 476: ' actuel' (ID: 113646)
  Prédit: ' bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bas' → logprob: -0.10033132135868073
    2. 'bas' → logprob: -2.3503313064575195
    3. ' actuel' → logprob: -9.47533130645752
    4. '_bas' → logprob: -11.10033130645752
    5. ' current' → logprob: -12.10033130645752
    6. ' low' → logprob: -12.10033130645752
    7. 'b' → logprob: -12.22533130645752
    8. ' self' → logprob: -12.97533130645752
    9. 'current' → logprob: -13.10033130645752
    10. ' basse' → logprob: -13.22533130645752

Token 477: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5353475213050842
    2. '       ' → logprob: -1.0353474617004395
    3. ' (' → logprob: -4.2853474617004395
    4. ' au' → logprob: -4.5353474617004395
    5. '   ' → logprob: -4.6603474617004395
    6. ',' → logprob: -4.7853474617004395
    7. ' ' → logprob: -5.0353474617004395
    8. 'à' → logprob: -5.6603474617004395
    9. ' if' → logprob: -6.0353474617004395
    10. ' to' → logprob: -6.4103474617004395

Token 478: ' niveau' (ID: 21708)
  Prédit: ' niveau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' niveau' → logprob: -0.3080902397632599
    2. 'niveau' → logprob: -1.4330902099609375
    3. 'haut' → logprob: -4.0580902099609375
    4. ' haut' → logprob: -4.9330902099609375
    5. 'ha' → logprob: -7.5580902099609375
    6. ' level' → logprob: -7.9330902099609375
    7. '   ' → logprob: -8.183090209960938
    8. ' high' → logprob: -8.433090209960938
    9. 'high' → logprob: -8.558090209960938
    10. ' ' → logprob: -8.808090209960938

Token 479: ' '' (ID: 461)
  Prédit: ' haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' haut' → logprob: -0.799559473991394
    2. 'haut' → logprob: -1.424559473991394
    3. '_high' → logprob: -3.0495595932006836
    4. '   ' → logprob: -3.0495595932006836
    5. '_' → logprob: -3.2995595932006836
    6. ' suivant' → logprob: -3.2995595932006836
    7. 'ha' → logprob: -3.9245595932006836
    8. ' ' → logprob: -4.049559593200684
    9. ' high' → logprob: -4.049559593200684
    10. 'high' → logprob: -4.299559593200684

Token 480: 'to' (ID: 935)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.4092887341976166
    2. 'haut' → logprob: -1.284288763999939
    3. 'ha' → logprob: -3.4092886447906494
    4. ' haut' → logprob: -4.5342888832092285
    5. ' high' → logprob: -4.7842888832092285
    6. '_high' → logprob: -5.9092888832092285
    7. 'not' → logprob: -6.7842888832092285
    8. 'niveau' → logprob: -7.6592888832092285
    9. '(high' → logprob: -7.7842888832092285
    10. '   ' → logprob: -8.28428840637207

Token 481: '_high' (ID: 51432)
  Prédit: '_high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_high' → logprob: -2.47495681833243e-05
    2. '_' → logprob: -10.750024795532227
    3. '_HIGH' → logprob: -13.375024795532227
    4. 'high' → logprob: -14.250024795532227
    5. ' _' → logprob: -14.375024795532227
    6. '_low' → logprob: -15.875024795532227
    7. '_h' → logprob: -16.500024795532227
    8. 'High' → logprob: -16.625024795532227
    9. '_hi' → logprob: -17.250024795532227
    10. ')_' → logprob: -17.250024795532227

Token 482: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8354146480560303
    2. ')'' → logprob: -1.2104146480560303
    3. ''' → logprob: -1.5854146480560303
    4. '):' → logprob: -3.7104146480560303
    5. ')'
' → logprob: -4.585414886474609
    6. '):
' → logprob: -4.960414886474609
    7. ''
' → logprob: -5.335414886474609
    8. '':' → logprob: -5.585414886474609
    9. ')':' → logprob: -5.585414886474609
    10. ':' → logprob: -5.835414886474609

Token 483: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7649964690208435
    2. ':' → logprob: -0.8899964690208435
    3. '):' → logprob: -3.5149965286254883
    4. ' if' → logprob: -3.6399965286254883
    5. '(' → logprob: -4.014996528625488
    6. 'if' → logprob: -4.139996528625488
    7. ')' → logprob: -5.014996528625488
    8. '   ' → logprob: -5.139996528625488
    9. ' (' → logprob: -5.139996528625488
    10. ',' → logprob: -5.139996528625488

Token 484: 'bool' (ID: 9037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7127124667167664
    2. ' True' → logprob: -1.0877125263214111
    3. 'True' → logprob: -2.337712526321411
    4. ' to' → logprob: -3.837712526321411
    5. 'to' → logprob: -3.837712526321411
    6. '):
' → logprob: -5.087712287902832
    7. ' not' → logprob: -5.337712287902832
    8. '):' → logprob: -5.462712287902832
    9. ')
' → logprob: -5.962712287902832
    10. '   ' → logprob: -6.212712287902832

Token 485: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22276869416236877
    2. 'ean' → logprob: -2.097768783569336
    3. 'é' → logprob: -3.097768783569336
    4. ')
' → logprob: -3.972768783569336
    5. '=True' → logprob: -5.347768783569336
    6. '):
' → logprob: -5.722768783569336
    7. 'éan' → logprob: -6.972768783569336
    8. ')`' → logprob: -7.597768783569336
    9. '):' → logprob: -7.847768783569336
    10. ' )' → logprob: -8.097768783569336

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09610962867736816
    2. ':' → logprob: -2.471109628677368
    3. '):' → logprob: -6.096109390258789
    4. '   ' → logprob: -6.596109390258789
    5. ' :' → logprob: -7.346109390258789
    6. '(' → logprob: -7.471109390258789
    7. ',' → logprob: -7.471109390258789
    8. '):
' → logprob: -7.971109390258789
    9. ')' → logprob: -8.096109390258789
    10. ':
' → logprob: -8.596109390258789

Token 487: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1512729376554489
    2. 'if' → logprob: -2.401273012161255
    3. ' if' → logprob: -3.026273012161255
    4. 'time' → logprob: -7.651272773742676
    5. '   ' → logprob: -9.151272773742676
    6. ')' → logprob: -9.526272773742676
    7. '#' (adapté à ' #') → logprob: -9.776272773742676
    8. 'return' → logprob: -9.776272773742676
    9. 'diff' → logprob: -9.776272773742676
    10. ':' → logprob: -10.401272773742676

Token 488: ' Bas' (ID: 18373)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1526108682155609
    2. '       ' → logprob: -2.6526107788085938
    3. 'delta' → logprob: -3.1526107788085938
    4. 'volume' → logprob: -4.402610778808594
    5. 'diff' → logprob: -5.027610778808594
    6. 'time' → logprob: -5.902610778808594
    7. '#' → logprob: -6.402610778808594
    8. 'distance' → logprob: -6.777610778808594
    9. '   ' → logprob: -7.402610778808594
    10. 'vol' → logprob: -7.527610778808594

Token 489: ' =>' (ID: 871)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5339845418930054
    2. '==' → logprob: -2.408984661102295
    3. '       ' → logprob: -2.533984661102295
    4. ' to' → logprob: -2.658984661102295
    5. ' ->' → logprob: -3.283984661102295
    6. '_to' → logprob: -3.658984661102295
    7. ' à' → logprob: -3.908984661102295
    8. '   ' → logprob: -4.033984661102295
    9. ' au' → logprob: -4.658984661102295
    10. ' if' → logprob: -4.658984661102295

Token 490: ' Haut' (ID: 40888)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5892138481140137
    2. 'to' → logprob: -1.2142138481140137
    3. ' to' → logprob: -2.4642138481140137
    4. ' True' → logprob: -3.0892138481140137
    5. 'high' → logprob: -5.089213848114014
    6. ' haut' → logprob: -5.089213848114014
    7. ' high' → logprob: -6.214213848114014
    8. 'High' → logprob: -6.714213848114014
    9. 'true' → logprob: -7.214213848114014
    10. 'haut' → logprob: -7.214213848114014

Token 491: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6342989206314087
    2. ' if' → logprob: -1.1342989206314087
    3. 'if' → logprob: -2.634298801422119
    4. ':' → logprob: -3.009298801422119
    5. ':
' → logprob: -5.134298801422119
    6. '
' → logprob: -5.509298801422119
    7. ' =' → logprob: -5.634298801422119
    8. ')' → logprob: -6.009298801422119
    9. ',' → logprob: -6.384298801422119
    10. ' :' → logprob: -6.509298801422119

Token 492: ' injection' (ID: 39701)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8112621307373047
    2. '(self' → logprob: -1.6862621307373047
    3. 'self' → logprob: -1.9362621307373047
    4. ' (' → logprob: -2.3112621307373047
    5. ' abs' → logprob: -2.8112621307373047
    6. '(abs' → logprob: -3.1862621307373047
    7. ' self' → logprob: -4.061262130737305
    8. 'math' → logprob: -5.561262130737305
    9. '(' → logprob: -6.186262130737305
    10. '(math' → logprob: -7.186262130737305

Token 493: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43735870718955994
    2. ' *' → logprob: -2.3123586177825928
    3. ' if' → logprob: -2.4373586177825928
    4. ' /' → logprob: -2.6873586177825928
    5. ':' → logprob: -4.187358856201172
    6. ' (' → logprob: -4.312358856201172
    7. '        
' → logprob: -4.437358856201172
    8. ')' → logprob: -4.437358856201172
    9. '*' → logprob: -4.812358856201172
    10. '   ' → logprob: -4.812358856201172

Token 494: ''eau' (ID: 38948)
  Prédit: ''eau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''eau' → logprob: -0.2032727599143982
    2. 'e' → logprob: -1.703272819519043
    3. '’eau' → logprob: -6.453272819519043
    4. ' eau' → logprob: -8.828272819519043
    5. '_e' → logprob: -10.453272819519043
    6. '```' → logprob: -10.453272819519043
    7. 'ea' → logprob: -11.078272819519043
    8. 'au' → logprob: -11.203272819519043
    9. '   ' → logprob: -11.703272819519043
    10. 'eux' → logprob: -11.953272819519043

Token 495: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3653934597969055
    2. ' if' → logprob: -1.4903934001922607
    3. '
' → logprob: -3.9903934001922607
    4. ':' → logprob: -4.24039363861084
    5. 'if' → logprob: -4.61539363861084
    6. ' *' → logprob: -4.61539363861084
    7. ')' → logprob: -4.86539363861084
    8. ' (' → logprob: -5.24039363861084
    9. ' :' → logprob: -5.99039363861084
    10. '   ' → logprob: -6.11539363861084

Token 496: ' taux' (ID: 52869)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8449719548225403
    2. 'self' → logprob: -0.9699719548225403
    3. '(self' → logprob: -1.8449718952178955
    4. ' abs' → logprob: -4.719972133636475
    5. ' (' → logprob: -4.844972133636475
    6. '(abs' → logprob: -4.844972133636475
    7. ' self' → logprob: -5.219972133636475
    8. 'math' → logprob: -6.969972133636475
    9. '1' → logprob: -7.719972133636475
    10. '(' → logprob: -7.719972133636475

Token 497: ' F' (ID: 454)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08071953058242798
    2. '=' → logprob: -3.080719470977783
    3. '       ' → logprob: -3.830719470977783
    4. 'if' → logprob: -5.455719470977783
    5. ' if' → logprob: -6.455719470977783
    6. 'return' → logprob: -7.080719470977783
    7. '=self' → logprob: -7.330719470977783
    8. '_rate' → logprob: -7.955719470977783
    9. 'rate' → logprob: -8.455719947814941
    10. '_time' → logprob: -8.705719947814941

Token 498: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30459916591644287
    2. ' if' → logprob: -2.4295992851257324
    3. ' *' → logprob: -2.8045992851257324
    4. ')' → logprob: -2.9295992851257324
    5. '<|end|>' → logprob: -4.054599285125732
    6. '*' → logprob: -4.804599285125732
    7. ' /' → logprob: -4.929599285125732
    8. '<|end|>' → logprob: -5.179599285125732
    9. 'if' → logprob: -5.304599285125732
    10. ',' → logprob: -5.804599285125732

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025296896696090698
    2. 'if' → logprob: -4.775296688079834
    3. ' if' → logprob: -5.025296688079834
    4. ')' → logprob: -5.650296688079834
    5. ',' → logprob: -6.400296688079834
    6. ':' → logprob: -6.650296688079834
    7. '=' → logprob: -7.775296688079834
    8. '        
' → logprob: -7.775296688079834
    9. '
' → logprob: -7.900296688079834
    10. '(' → logprob: -8.275297164916992

Token 500: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.366783082485199
    2. ' if' → logprob: -1.6167831420898438
    3. 'if' → logprob: -2.2417831420898438
    4. 'time' → logprob: -7.366783142089844
    5. 'return' → logprob: -8.241783142089844
    6. ' time' → logprob: -8.366783142089844
    7. '        
' → logprob: -8.741783142089844
    8. 't' → logprob: -8.866783142089844
    9. ',' → logprob: -8.991783142089844
    10. ' t' → logprob: -9.241783142089844

Token 501: ' Haut' (ID: 40888)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010206005536019802
    2. '       ' → logprob: -4.63520622253418
    3. ' if' → logprob: -8.63520622253418
    4. 'time' → logprob: -9.01020622253418
    5. 'to' → logprob: -9.88520622253418
    6. 'duration' → logprob: -10.76020622253418
    7. '   ' → logprob: -11.01020622253418
    8. 'Bas' → logprob: -11.13520622253418
    9. 'bas' → logprob: -11.63520622253418
    10. 'delta' → logprob: -12.38520622253418

Token 502: ' =>' (ID: 871)
  Prédit: ' =>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =>' → logprob: -0.05021171644330025
    2. '=>' → logprob: -3.0502116680145264
    3. ' ->' → logprob: -6.9252119064331055
    4. '=' → logprob: -8.050211906433105
    5. ' =>
' → logprob: -8.925211906433105
    6. ' =' → logprob: -9.050211906433105
    7. '->' → logprob: -10.925211906433105
    8. '       ' → logprob: -11.550211906433105
    9. ' =>
' → logprob: -11.550211906433105
    10. ' ' → logprob: -11.550211906433105

Token 503: ' Bas' (ID: 18373)
  Prédit: 'Bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bas' → logprob: -0.1131320372223854
    2. ' Bas' → logprob: -2.2381319999694824
    3. ' bas' → logprob: -8.73813247680664
    4. ' ' → logprob: -9.98813247680664
    5. 'bas' → logprob: -9.98813247680664
    6. 'B' → logprob: -10.61313247680664
    7. 'Vid' → logprob: -11.86313247680664
    8. '   ' → logprob: -11.98813247680664
    9. '_bas' → logprob: -12.23813247680664
    10. ' Vid' → logprob: -12.73813247680664

Token 504: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06238025799393654
    2. '=' → logprob: -2.812380313873291
    3. '       ' → logprob: -8.187379837036133
    4. ':' → logprob: -10.312379837036133
    5. '   ' → logprob: -10.812379837036133
    6. ' =>' → logprob: -10.937379837036133
    7. 'return' → logprob: -11.437379837036133
    8. ' ' → logprob: -11.687379837036133
    9. ')' → logprob: -11.812379837036133
    10. ' return' → logprob: -12.187379837036133

Token 505: ' vid' (ID: 11217)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8975082635879517
    2. ' vid' → logprob: -1.2725082635879517
    3. 'vid' → logprob: -1.6475082635879517
    4. ' self' → logprob: -2.147508144378662
    5. 'vider' → logprob: -7.647508144378662
    6. ' dé' → logprob: -8.02250862121582
    7. 'dé' → logprob: -8.02250862121582
    8. ' ' → logprob: -8.52250862121582
    9. 'de' → logprob: -8.71000862121582
    10. '   ' → logprob: -8.77250862121582

Token 506: 'ange' (ID: 1052)
  Prédit: 'ange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.039675381034612656
    2. 'anger' → logprob: -3.78967547416687
    3. 'age' → logprob: -4.289675235748291
    4. 'an' → logprob: -6.414675235748291
    5. 'a' → logprob: -7.914675235748291
    6. 'ang' → logprob: -8.66467571258545
    7. ' anger' → logprob: -8.91467571258545
    8. 'd' → logprob: -10.28967571258545
    9. 'er' → logprob: -10.53967571258545
    10. '   ' → logprob: -11.03967571258545

Token 507: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2202080488204956
    2. ' (' → logprob: -1.3452080488204956
    3. ' if' → logprob: -1.9702080488204956
    4. ' =' → logprob: -2.345208168029785
    5. ')' → logprob: -3.345208168029785
    6. '   ' → logprob: -3.470208168029785
    7. '(' → logprob: -3.720208168029785
    8. ':' → logprob: -3.845208168029785
    9. ' *' → logprob: -4.220208168029785
    10. 'if' → logprob: -4.720208168029785

Token 508: ''eau' (ID: 38948)
  Prédit: ''eau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''eau' → logprob: -0.008688322268426418
    2. 'e' → logprob: -4.758688449859619
    3. '’eau' → logprob: -10.258687973022461
    4. '_e' → logprob: -10.758687973022461
    5. ''e' → logprob: -11.383687973022461
    6. ',e' → logprob: -13.883687973022461
    7. 'water' → logprob: -14.133687973022461
    8. ' eau' → logprob: -14.133687973022461
    9. '```' → logprob: -14.133687973022461
    10. 'ea' → logprob: -14.758687973022461

Token 509: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04050098732113838
    2. ' =' → logprob: -3.6655008792877197
    3. ' (' → logprob: -5.665501117706299
    4. ')' → logprob: -6.165501117706299
    5. '(self' → logprob: -6.540501117706299
    6. '   ' → logprob: -7.165501117706299
    7. '(' → logprob: -7.165501117706299
    8. ' =>' → logprob: -7.290501117706299
    9. '<|end|>' → logprob: -7.290501117706299
    10. ',' → logprob: -7.415501117706299

Token 510: ' taux' (ID: 52869)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2255883514881134
    2. ' self' → logprob: -1.600588321685791
    3. 'D' → logprob: -9.47558879852295
    4. ' D' → logprob: -9.60058879852295
    5. '	self' → logprob: -11.35058879852295
    6. ' math' → logprob: -12.22558879852295
    7. ' ' → logprob: -12.22558879852295
    8. '   ' → logprob: -13.22558879852295
    9. '(self' → logprob: -13.85058879852295
    10. 'rate' → logprob: -13.85058879852295

Token 511: ' D' (ID: 415)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.017628053203225136
    2. 'self' → logprob: -4.142628192901611
    3. ' D' → logprob: -6.642628192901611
    4. 'D' → logprob: -8.392627716064453
    5. '       ' → logprob: -10.892627716064453
    6. '(self' → logprob: -11.017627716064453
    7. '	self' → logprob: -11.892627716064453
    8. ' ' → logprob: -12.017627716064453
    9. ' ' → logprob: -12.767627716064453
    10. ' math' → logprob: -13.017627716064453

Token 512: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024537728168070316
    2. 'if' → logprob: -8.002453804016113
    3. ' if' → logprob: -8.127453804016113
    4. ':' → logprob: -8.252453804016113
    5. 'volume' → logprob: -8.377453804016113
    6. ')' → logprob: -8.627453804016113
    7. '(' → logprob: -8.877453804016113
    8. 'return' → logprob: -9.002453804016113
    9. ',' → logprob: -9.002453804016113
    10. '(
' → logprob: -9.252453804016113

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019903095439076424
    2. ':' → logprob: -4.144903182983398
    3. ')' → logprob: -6.519903182983398
    4. '   ' → logprob: -7.519903182983398
    5. ',' → logprob: -7.894903182983398
    6. '<|end|>' → logprob: -8.519903182983398
    7. '(' → logprob: -8.644903182983398
    8. '):' → logprob: -8.769903182983398
    9. ':
' → logprob: -8.769903182983398
    10. '):
' → logprob: -8.894903182983398

Token 514: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31109926104545593
    2. 'volume' → logprob: -2.3110992908477783
    3. 'if' (adapté à ' if') → logprob: -2.5610992908477783
    4. 'delta' → logprob: -3.0610992908477783
    5. 'time' → logprob: -4.186099052429199
    6. ' if' → logprob: -5.436099052429199
    7. 'diff' → logprob: -5.561099052429199
    8. 'amount' → logprob: -5.936099052429199
    9. 'switch' → logprob: -5.936099052429199
    10. 'vol' → logprob: -6.061099052429199

Token 515: ' self' (ID: 1051)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.0224497318267822
    2. ' not' → logprob: -1.1474497318267822
    3. 'not' → logprob: -1.8974497318267822
    4. ' to' → logprob: -2.0224497318267822
    5. 'self' → logprob: -3.6474497318267822
    6. ' self' → logprob: -4.272449493408203
    7. '   ' → logprob: -7.772449493408203
    8. '       ' → logprob: -10.147449493408203
    9. '(not' → logprob: -10.522449493408203
    10. ' ' → logprob: -10.897449493408203

Token 516: '.level' (ID: 36989)
  Prédit: '.level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.level' → logprob: -2.7968066206085496e-05
    2. 'level' → logprob: -10.875027656555176
    3. '.' → logprob: -12.125027656555176
    4. '.F' → logprob: -12.875027656555176
    5. '.X' → logprob: -14.625027656555176
    6. '	level' → logprob: -16.375028610229492
    7. '.D' → logprob: -16.500028610229492
    8. ' .' → logprob: -17.000028610229492
    9. '.Level' → logprob: -17.000028610229492
    10. '[level' → logprob: -17.375028610229492

Token 517: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6697099208831787
    2. ' ==' → logprob: -0.7947099208831787
    3. ' !=' → logprob: -3.5447099208831787
    4. '!=' → logprob: -5.044710159301758
    5. ' and' → logprob: -7.169710159301758
    6. ':' → logprob: -8.919710159301758
    7. 'and' → logprob: -9.169710159301758
    8. ' ' → logprob: -10.419710159301758
    9. '       ' → logprob: -11.419710159301758
    10. 'is' → logprob: -11.544710159301758

Token 518: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00012678056373260915
    2. ' to' → logprob: -9.000126838684082
    3. 'False' → logprob: -12.625126838684082
    4. '	to' → logprob: -17.625125885009766
    5. ' False' → logprob: -18.000125885009766
    6. 'True' → logprob: -18.125125885009766
    7. '0' → logprob: -18.750125885009766
    8. '   ' → logprob: -19.125125885009766
    9. '(to' → logprob: -19.375125885009766
    10. ' ' → logprob: -20.000125885009766

Token 519: '_high' (ID: 51432)
  Prédit: '_high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_high' → logprob: -7.20734242349863e-05
    2. 'high' → logprob: -9.625072479248047
    3. 'High' → logprob: -13.125072479248047
    4. '_HIGH' → logprob: -13.500072479248047
    5. 'igh' → logprob: -13.625072479248047
    6. '_' → logprob: -15.250072479248047
    7. ' high' → logprob: -15.250072479248047
    8. '高' → logprob: -15.625072479248047
    9. '.high' → logprob: -15.625072479248047
    10. '(high' → logprob: -16.250072479248047

Token 520: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012534257024526596
    2. ':
' → logprob: -4.387534141540527
    3. ' :' → logprob: -11.387534141540527
    4. ':return' → logprob: -11.387534141540527
    5. '==' → logprob: -14.387534141540527
    6. '=' → logprob: -14.887534141540527
    7. ':
' → logprob: -14.887534141540527
    8. ' :
' → logprob: -15.262534141540527
    9. ':

' → logprob: -15.512534141540527
    10. '):
' → logprob: -16.387535095214844

Token 521: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5539996027946472
    2. '           ' → logprob: -1.928999662399292
    3. ':' → logprob: -2.303999662399292
    4. '0' → logprob: -2.428999662399292
    5. 'return' → logprob: -2.678999662399292
    6. ' return' → logprob: -4.303999423980713
    7. ':
' → logprob: -5.428999423980713
    8. ':return' → logprob: -5.928999423980713
    9. '
' → logprob: -6.678999423980713
    10. '	' → logprob: -8.178999900817871

Token 522: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007304898463189602
    2. '0' → logprob: -5.507304668426514
    3. ' return' → logprob: -5.757304668426514
    4. '       ' → logprob: -9.757305145263672
    5. '   ' → logprob: -13.757305145263672
    6. '	return' → logprob: -13.757305145263672
    7. '           ' → logprob: -14.132305145263672
    8. '
' → logprob: -14.132305145263672
    9. ' ' → logprob: -16.007305145263672
    10. '1' → logprob: -16.757305145263672

Token 523: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.375021934509277
    4. '  ' → logprob: -18.37502098083496
    5. '       ' → logprob: -18.62502098083496
    6. '           ' → logprob: -19.37502098083496
    7. ' ' → logprob: -19.50002098083496
    8. '     ' → logprob: -19.62502098083496
    9. '    ' → logprob: -20.00002098083496
    10. '	' → logprob: -20.25002098083496

Token 524: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.625003814697266
    4. 'float' → logprob: -19.500003814697266
    5. '  ' → logprob: -19.625003814697266
    6. '00' → logprob: -20.375003814697266
    7. '     ' → logprob: -20.562503814697266
    8. '    ' → logprob: -20.937503814697266
    9. '       ' → logprob: -21.000003814697266
    10. '	' → logprob: -21.000003814697266

Token 525: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4457254111766815
    2. '       ' → logprob: -1.070725440979004
    3. '        
' → logprob: -4.320725440979004
    4. '  
' → logprob: -6.945725440979004
    5. '<|end|>' → logprob: -7.195725440979004
    6. '
' → logprob: -7.820725440979004
    7. '    
' → logprob: -7.820725440979004
    8. '

' → logprob: -8.820725440979004
    9. '       
' → logprob: -9.195725440979004
    10. '		
' → logprob: -9.195725440979004

Token 526: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '5' → logprob: -16.25
    3. ' ' → logprob: -17.375
    4. 'return' → logprob: -17.5
    5. '
' → logprob: -18.5
    6. '1' → logprob: -18.875
    7. '000' → logprob: -19.125
    8. '   ' → logprob: -19.375
    9. ')' → logprob: -19.5
    10. 'def' → logprob: -19.875

Token 527: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3728277385234833
    2. '       ' → logprob: -1.2478277683258057
    3. '        
' → logprob: -4.247827529907227
    4. '<|end|>' → logprob: -4.747827529907227
    5. '  
' → logprob: -8.747827529907227
    6. '
' → logprob: -8.872827529907227
    7. ')' → logprob: -8.997827529907227
    8. '\n' → logprob: -8.997827529907227
    9. '<|end|>' → logprob: -9.372827529907227
    10. ' 
' → logprob: -9.747827529907227

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07236447185277939
    2. '        
' → logprob: -3.072364568710327
    3. '
' → logprob: -3.947364568710327
    4. '    
' → logprob: -6.947364330291748
    5. 'return' → logprob: -7.197364330291748
    6. ' 
' → logprob: -7.322364330291748
    7. '  
' → logprob: -7.572364330291748
    8. '		
' → logprob: -8.322364807128906
    9. '       
' → logprob: -8.447364807128906
    10. '   ' → logprob: -9.197364807128906

Token 529: ' #' (ID: 1069)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.4605156183242798
    2. ' volume' → logprob: -1.7105156183242798
    3. '       ' → logprob: -1.9605156183242798
    4. '
' → logprob: -4.71051549911499
    5. 'vol' → logprob: -4.96051549911499
    6. 'water' → logprob: -5.33551549911499
    7. 'delta' → logprob: -5.33551549911499
    8. 'if' → logprob: -5.58551549911499
    9. '#' (adapté à ' #') → logprob: -5.83551549911499
    10. '        
' → logprob: -6.33551549911499

Token 530: ' Volume' (ID: 36103)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4105381369590759
    2. 'volume' → logprob: -1.1605381965637207
    3. 'delta' → logprob: -5.035538196563721
    4. 'vol' → logprob: -5.160538196563721
    5. 'amount' → logprob: -5.785538196563721
    6. 'if' → logprob: -6.160538196563721
    7. 'needed' → logprob: -6.785538196563721
    8. '   ' → logprob: -7.035538196563721
    9. 'required' → logprob: -7.160538196563721
    10. 'water' → logprob: -7.285538196563721

Token 531: ' à' (ID: 1221)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.8698091506958008
    2. '_needed' → logprob: -1.1198091506958008
    3. ' =' → logprob: -1.7448091506958008
    4. ' /' → logprob: -3.869809150695801
    5. '_required' → logprob: -3.994809150695801
    6. '_time' → logprob: -4.244809150695801
    7. '_remaining' → logprob: -4.494809150695801
    8. '_rem' → logprob: -5.494809150695801
    9. '       ' → logprob: -6.119809150695801
    10. '_div' → logprob: -6.619809150695801

Token 532: ' de' (ID: 334)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.10040216147899628
    2. 'abs' → logprob: -3.3504021167755127
    3. 'L' → logprob: -3.4754021167755127
    4. 'self' → logprob: -4.100402355194092
    5. 'm' → logprob: -5.850402355194092
    6. 'fill' → logprob: -6.350402355194092
    7. 'dé' → logprob: -6.350402355194092
    8. 'pour' → logprob: -7.100402355194092
    9. ' move' → logprob: -7.225402355194092
    10. 'vol' → logprob: -7.225402355194092

Token 533: 'placer' (ID: 58807)
  Prédit: 'placer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -6.945094355614856e-05
    2. 'pl' → logprob: -10.375069618225098
    3. 'plac' → logprob: -11.125069618225098
    4. 'place' → logprob: -11.750069618225098
    5. 'pla' → logprob: -12.000069618225098
    6. 'ployer' → logprob: -12.500069618225098
    7. 'plorer' → logprob: -13.500069618225098
    8. 'caler' → logprob: -13.750069618225098
    9. 'placement' → logprob: -14.000069618225098
    10. 'plier' → logprob: -14.125069618225098

Token 534: '
' (ID: 198)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.006535965017974377
    2. ' =' → logprob: -5.25653600692749
    3. '/' → logprob: -7.00653600692749
    4. 'self' → logprob: -9.131535530090332
    5. '=' → logprob: -9.631535530090332
    6. '       ' → logprob: -9.881535530090332
    7. ' ' → logprob: -10.381535530090332
    8. ' /
' → logprob: -10.756535530090332
    9. '/self' → logprob: -11.131535530090332
    10. ' *' → logprob: -11.631535530090332

Token 535: '       ' (ID: 309)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2562466561794281
    2. ' =' → logprob: -1.8812466859817505
    3. '/' → logprob: -3.131246566772461
    4. '=' → logprob: -3.631246566772461
    5. '       ' → logprob: -6.131246566772461
    6. 'return' → logprob: -7.506246566772461
    7. 'self' → logprob: -9.381246566772461
    8. '/self' → logprob: -9.756246566772461
    9. ' /=' → logprob: -9.881246566772461
    10. 'div' → logprob: -9.881246566772461

Token 536: ' volume' (ID: 10945)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04486752301454544
    2. ' return' → logprob: -3.669867515563965
    3. 'if' → logprob: -5.294867515563965
    4. 'self' → logprob: -5.419867515563965
    5. 'volume' (adapté à ' volume') → logprob: -5.669867515563965
    6. '       ' → logprob: -5.794867515563965
    7. 'vol' → logprob: -7.294867515563965
    8. 'time' → logprob: -7.919867515563965
    9. ' if' → logprob: -8.294867515563965
    10. 'amount' → logprob: -8.669867515563965

Token 537: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061981577426195145
    2. '=' → logprob: -2.811981678009033
    3. '_needed' → logprob: -12.436981201171875
    4. ' ' → logprob: -13.061981201171875
    5. '=self' → logprob: -13.311981201171875
    6. '_to' → logprob: -14.061981201171875
    7. '	' → logprob: -14.186981201171875
    8. '        ' → logprob: -14.561981201171875
    9. ')' → logprob: -14.936981201171875
    10. ' =
' → logprob: -15.436981201171875

Token 538: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005235529970377684
    2. ' self' → logprob: -5.25523567199707
    3. '   ' → logprob: -14.75523567199707
    4. '       ' → logprob: -14.75523567199707
    5. '	self' → logprob: -14.88023567199707
    6. '(self' → logprob: -15.25523567199707
    7. 'abs' → logprob: -15.50523567199707
    8. 'math' → logprob: -16.38023567199707
    9. 'float' → logprob: -17.38023567199707
    10. ' math' → logprob: -17.50523567199707

Token 539: '.L' (ID: 2024)
  Prédit: '.L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.L' → logprob: -0.0010482928482815623
    2. 'L' → logprob: -6.8760480880737305
    3. '.' → logprob: -12.12604808807373
    4. '	L' → logprob: -12.75104808807373
    5. ' L' → logprob: -12.87604808807373
    6. ' .' → logprob: -13.00104808807373
    7. '[' → logprob: -14.62604808807373
    8. 'self' → logprob: -14.75104808807373
    9. '   ' → logprob: -15.00104808807373
    10. '```' → logprob: -15.37604808807373

Token 540: '
' (ID: 198)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.01061515137553215
    2. '/' → logprob: -4.635615348815918
    3. '/self' → logprob: -8.260615348815918
    4. ' /
' → logprob: -8.385615348815918
    5. '       ' → logprob: -9.135615348815918
    6. '
' → logprob: -9.135615348815918
    7. '/
' → logprob: -9.885615348815918
    8. ' if' → logprob: -10.010615348815918
    9. 'self' → logprob: -10.760615348815918
    10. '/math' → logprob: -12.260615348815918

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031294215470552444
    2. ' /' → logprob: -3.656294107437134
    3. '/' → logprob: -6.156294345855713
    4. '
' → logprob: -6.531294345855713
    5. 'return' → logprob: -7.906294345855713
    6. ' if' → logprob: -8.031293869018555
    7. ' return' → logprob: -8.656293869018555
    8. '#' → logprob: -8.906293869018555
    9. '        
' → logprob: -8.906293869018555
    10. '/t' → logprob: -9.781293869018555

Token 542: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8241176605224609
    2. '
' → logprob: -1.199117660522461
    3. ' if' → logprob: -2.324117660522461
    4. ' /' → logprob: -2.699117660522461
    5. 'if' (adapté à ' if') → logprob: -3.074117660522461
    6. '        
' → logprob: -3.699117660522461
    7. 'rate' → logprob: -4.449117660522461
    8. ' rate' → logprob: -5.824117660522461
    9. 'return' → logprob: -6.199117660522461
    10. '/' → logprob: -6.199117660522461

Token 543: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03173603489995003
    2. ' to' → logprob: -4.031735897064209
    3. 'not' → logprob: -5.156735897064209
    4. 'self' → logprob: -5.156735897064209
    5. ' not' → logprob: -6.531735897064209
    6. ' self' → logprob: -7.656735897064209
    7. '   ' → logprob: -11.031736373901367
    8. '	to' → logprob: -11.781736373901367
    9. '(to' → logprob: -12.156736373901367
    10. ' ' → logprob: -12.281736373901367

Token 544: '_high' (ID: 51432)
  Prédit: '_high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_high' → logprob: -1.1472419600977446e-06
    2. '_HIGH' → logprob: -14.125000953674316
    3. 'high' → logprob: -15.375000953674316
    4. '_' → logprob: -16.500001907348633
    5. 'High' → logprob: -17.875001907348633
    6. '_low' → logprob: -18.500001907348633
    7. '```' → logprob: -19.000001907348633
    8. ' high' → logprob: -19.500001907348633
    9. 'HIGH' → logprob: -19.750001907348633
    10. '   ' → logprob: -19.750001907348633

Token 545: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021719705313444138
    2. ':
' → logprob: -3.8967196941375732
    3. '==' → logprob: -7.146719932556152
    4. ' :' → logprob: -8.396719932556152
    5. ' ==' → logprob: -8.896719932556152
    6. '):' → logprob: -12.271719932556152
    7. ' and' → logprob: -12.771719932556152
    8. ' :
' → logprob: -12.896719932556152
    9. ':

' → logprob: -13.146719932556152
    10. '   ' → logprob: -13.271719932556152

Token 546: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023503202944993973
    2. ':' → logprob: -4.898503303527832
    3. ' /' → logprob: -5.023503303527832
    4. ':
' → logprob: -5.648503303527832
    5. 'return' → logprob: -6.023503303527832
    6. ' return' → logprob: -7.148503303527832
    7. '
' → logprob: -7.273503303527832
    8. '/' → logprob: -7.898503303527832
    9. '       ' → logprob: -8.148503303527832
    10. '		' → logprob: -8.398503303527832

Token 547: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5923519134521484
    2. '
' → logprob: -1.5923519134521484
    3. ' return' → logprob: -1.8423519134521484
    4. '           ' → logprob: -2.5923519134521484
    5. ' /' → logprob: -5.592351913452148
    6. '       ' → logprob: -5.967351913452148
    7. 'rate' → logprob: -6.217351913452148
    8. '/' → logprob: -7.467351913452148
    9. ' rate' → logprob: -7.967351913452148
    10. '
' → logprob: -8.717351913452148

Token 548: ' injection' (ID: 39701)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.020565710961818695
    2. 'rate' → logprob: -4.395565509796143
    3. ' return' → logprob: -5.520565509796143
    4. 'time' → logprob: -5.645565509796143
    5. '       ' → logprob: -8.0205659866333
    6. '   ' → logprob: -10.2705659866333
    7. 'duration' → logprob: -10.2705659866333
    8. ' rate' → logprob: -10.8955659866333
    9. '           ' → logprob: -10.8955659866333
    10. 'flow' → logprob: -11.0205659866333

Token 549: ' eau' (ID: 79359)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.31687530875205994
    2. 'self' → logprob: -3.1918752193450928
    3. ' =' → logprob: -3.3168752193450928
    4. ' *' → logprob: -3.3168752193450928
    5. '       ' → logprob: -3.6918752193450928
    6. 'return' → logprob: -3.8168752193450928
    7. ')' → logprob: -4.066875457763672
    8. ':' → logprob: -4.191875457763672
    9. '_rate' → logprob: -4.816875457763672
    10. ' return' → logprob: -4.941875457763672

Token 550: '
' (ID: 198)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.057815615087747574
    2. '/' → logprob: -4.0578155517578125
    3. '           ' → logprob: -4.1828155517578125
    4. '       ' → logprob: -4.4328155517578125
    5. '
' → logprob: -5.3078155517578125
    6. 'return' → logprob: -5.8078155517578125
    7. ')' → logprob: -7.0578155517578125
    8. ' return' → logprob: -7.0578155517578125
    9. ',' → logprob: -7.1828155517578125
    10. ':' → logprob: -8.557815551757812

Token 551: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1963660717010498
    2. 'return' → logprob: -2.07136607170105
    3. ' return' → logprob: -3.57136607170105
    4. '
' → logprob: -4.696366310119629
    5. '       ' → logprob: -5.071366310119629
    6. ':
' → logprob: -5.696366310119629
    7. ':' → logprob: -5.821366310119629
    8. ' /' → logprob: -7.446366310119629
    9. 'rate' → logprob: -8.071366310119629
    10. '               ' → logprob: -8.196366310119629

Token 552: ' rate' (ID: 6251)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08380676805973053
    2. ' return' → logprob: -2.7088067531585693
    3. 'rate' (adapté à ' rate') → logprob: -4.708806991577148
    4. '           ' → logprob: -6.208806991577148
    5. '
' → logprob: -7.208806991577148
    6. '       ' → logprob: -7.583806991577148
    7. 'volume' → logprob: -7.583806991577148
    8. ' rate' → logprob: -8.083806991577148
    9. 'time' → logprob: -8.333806991577148
    10. 'self' → logprob: -8.333806991577148

Token 553: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002098023891449
    2. '=' → logprob: -2.3502097129821777
    3. '=self' → logprob: -13.100210189819336
    4. 'self' → logprob: -15.100210189819336
    5. '           ' → logprob: -15.225210189819336
    6. '       ' → logprob: -15.350210189819336
    7. ' ' → logprob: -16.600210189819336
    8. '   ' → logprob: -16.725210189819336
    9. ' self' → logprob: -16.850210189819336
    10. '_rate' → logprob: -17.225210189819336

Token 554: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306760805164231e-05
    2. ' self' → logprob: -11.25001335144043
    3. 'float' → logprob: -18.50001335144043
    4. '(self' → logprob: -20.37501335144043
    5. '	self' → logprob: -20.50001335144043
    6. '=self' → logprob: -21.62501335144043
    7. '[self' → logprob: -22.00001335144043
    8. '   ' → logprob: -22.37501335144043
    9. 'math' → logprob: -22.62501335144043
    10. '-self' → logprob: -22.75001335144043

Token 555: '.F' (ID: 1737)
  Prédit: '.F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.F' → logprob: -6.511406809295295e-06
    2. 'F' → logprob: -12.500006675720215
    3. '.' → logprob: -13.000006675720215
    4. ' .' → logprob: -15.250006675720215
    5. '	F' → logprob: -15.625006675720215
    6. ' F' → logprob: -17.8750057220459
    7. '   ' → logprob: -19.2500057220459
    8. '.
' → logprob: -19.3750057220459
    9. '.f' → logprob: -19.5000057220459
    10. '_F' → logprob: -19.5000057220459

Token 556: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026778582483530045
    2. 'else' → logprob: -4.526778697967529
    3. '
' → logprob: -4.776778697967529
    4. ' else' → logprob: -5.526778697967529
    5. '<|end|>' → logprob: -6.026778697967529
    6. '<|end|>' → logprob: -8.151778221130371
    7. '  
' → logprob: -9.276778221130371
    8. '        
' → logprob: -9.651778221130371
    9. '.' → logprob: -9.651778221130371
    10. ')' → logprob: -10.026778221130371

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04886621609330177
    2. 'else' → logprob: -3.2988662719726562
    3. ' else' → logprob: -4.548866271972656
    4. '
' → logprob: -9.048866271972656
    5. '<|end|>' → logprob: -10.673866271972656
    6. 'return' → logprob: -11.923866271972656
    7. ')' → logprob: -12.048866271972656
    8. '	else' → logprob: -12.048866271972656
    9. '        
' → logprob: -12.798866271972656
    10. ' return' → logprob: -12.923866271972656

Token 558: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2386089712381363
    2. ' else' → logprob: -1.863608956336975
    3. '       ' → logprob: -2.8636090755462646
    4. '	else' → logprob: -9.238609313964844
    5. '_else' → logprob: -13.988609313964844
    6. '
' → logprob: -14.238609313964844
    7. ':' → logprob: -14.488609313964844
    8. '#else' → logprob: -14.488609313964844
    9. ':
' → logprob: -14.613609313964844
    10. '<|end|>' → logprob: -14.738609313964844

Token 559: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8582082986831665
    2. ':
' → logprob: -0.9832082986831665
    3. '           ' → logprob: -1.6082082986831665
    4. '       ' → logprob: -7.108208179473877
    5. '=' → logprob: -7.358208179473877
    6. ' =' → logprob: -9.608208656311035
    7. '   ' → logprob: -9.608208656311035
    8. '          ' → logprob: -10.733208656311035
    9. '               ' → logprob: -10.983208656311035
    10. ':
' → logprob: -11.108208656311035

Token 560: '           ' (ID: 352)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rate' → logprob: -0.03280806913971901
    2. '       ' → logprob: -4.532808303833008
    3. ' rate' → logprob: -4.532808303833008
    4. '           ' → logprob: -4.532808303833008
    5. '   ' → logprob: -12.032808303833008
    6. '_rate' → logprob: -12.157808303833008
    7. '(rate' → logprob: -12.657808303833008
    8. '#' → logprob: -13.282808303833008
    9. '        ' → logprob: -13.532808303833008
    10. '.rate' → logprob: -13.657808303833008

Token 561: ' #' (ID: 1069)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rate' → logprob: -0.005398345645517111
    2. ' rate' → logprob: -5.255398273468018
    3. 'self' → logprob: -9.380398750305176
    4. '           ' → logprob: -9.880398750305176
    5. '       ' → logprob: -10.630398750305176
    6. '   ' → logprob: -12.880398750305176
    7. ' self' → logprob: -13.630398750305176
    8. '_rate' → logprob: -14.880398750305176
    9. '.rate' → logprob: -15.505398750305176
    10. '(rate' → logprob: -16.00539779663086

Token 562: ' vid' (ID: 11217)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rate' → logprob: -0.03536088019609451
    2. 'self' → logprob: -3.660360813140869
    3. ' rate' → logprob: -4.785360813140869
    4. ' self' → logprob: -7.660360813140869
    5. '       ' → logprob: -9.910361289978027
    6. '           ' → logprob: -9.910361289978027
    7. '   ' → logprob: -10.035361289978027
    8. '_rate' → logprob: -11.035361289978027
    9. '
' → logprob: -12.035361289978027
    10. '.rate' → logprob: -12.035361289978027

Token 563: 'age' (ID: 477)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rate' → logprob: -0.393830806016922
    2. 'age' → logprob: -1.1438307762145996
    3. ' =' → logprob: -6.2688307762146
    4. '=' → logprob: -7.1438307762146
    5. 'er' → logprob: -7.1438307762146
    6. 'ange' → logprob: -7.2688307762146
    7. '   ' → logprob: -7.2688307762146
    8. ' rate' → logprob: -7.5188307762146
    9. 'e' → logprob: -7.6438307762146
    10. 'nage' → logprob: -8.268831253051758

Token 564: ' eau' (ID: 79359)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011716088280081749
    2. '=' → logprob: -4.761715888977051
    3. '           ' → logprob: -6.261715888977051
    4. 'rate' → logprob: -7.386715888977051
    5. ' rate' → logprob: -8.38671588897705
    6. '       ' → logprob: -8.63671588897705
    7. 'self' → logprob: -9.88671588897705
    8. '   ' → logprob: -10.01171588897705
    9. '_rate' → logprob: -10.76171588897705
    10. '=self' → logprob: -11.13671588897705

Token 565: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7114243507385254
    2. '           ' → logprob: -1.3364243507385254
    3. '=' → logprob: -1.4614243507385254
    4. 'rate' → logprob: -4.836424350738525
    5. '       ' → logprob: -5.211424350738525
    6. '
' → logprob: -8.336423873901367
    7. '   ' → logprob: -8.586423873901367
    8. '               ' → logprob: -8.711423873901367
    9. ' rate' → logprob: -8.711423873901367
    10. '=
' → logprob: -9.836423873901367

Token 566: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7127076983451843
    2. 'rate' → logprob: -1.587707757949829
    3. '=' → logprob: -1.712707757949829
    4. '           ' → logprob: -2.212707757949829
    5. ' rate' → logprob: -4.46270751953125
    6. '       ' → logprob: -5.58770751953125
    7. '(rate' → logprob: -10.08770751953125
    8. '
' → logprob: -10.33770751953125
    9. '_rate' → logprob: -10.33770751953125
    10. '.rate' → logprob: -10.46270751953125

Token 567: ' rate' (ID: 6251)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rate' (adapté à ' rate') → logprob: -0.04069695249199867
    2. 'self' → logprob: -3.415696859359741
    3. ' rate' → logprob: -5.04069709777832
    4. ' self' → logprob: -7.54069709777832
    5. ' =' → logprob: -11.41569709777832
    6. '=' → logprob: -12.04069709777832
    7. '   ' → logprob: -13.04069709777832
    8. '       ' → logprob: -13.04069709777832
    9. '=self' → logprob: -13.41569709777832
    10. '_rate' → logprob: -13.79069709777832

Token 568: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602243334054947
    2. ' =' → logprob: -1.9102243185043335
    3. '=self' → logprob: -16.28522491455078
    4. ' ' → logprob: -17.16022491455078
    5. '           ' → logprob: -17.16022491455078
    6. '       ' → logprob: -18.16022491455078
    7. '   ' → logprob: -18.28522491455078
    8. ':' → logprob: -19.28522491455078
    9. '=
' → logprob: -19.28522491455078
    10. '＝' → logprob: -19.28522491455078

Token 569: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '	self' → logprob: -18.626502990722656
    4. '(self' → logprob: -18.751502990722656
    5. '       ' → logprob: -19.376502990722656
    6. '-self' → logprob: -19.626502990722656
    7. '   ' → logprob: -19.876502990722656
    8. '=self' → logprob: -20.126502990722656
    9. '[self' → logprob: -20.626502990722656
    10. '           ' → logprob: -20.626502990722656

Token 570: '.D' (ID: 1696)
  Prédit: '.D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.D' → logprob: -0.000558512459974736
    2. 'self' → logprob: -7.500558376312256
    3. '.' → logprob: -12.875558853149414
    4. 'D' → logprob: -13.125558853149414
    5. '.S' → logprob: -14.500558853149414
    6. ' self' → logprob: -14.875558853149414
    7. ' .' → logprob: -16.375558853149414
    8. '.F' → logprob: -16.875558853149414
    9. '.C' → logprob: -17.875558853149414
    10. '.B' → logprob: -18.250558853149414

Token 571: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7332313656806946
    2. '       ' → logprob: -0.7332313656806946
    3. 'return' → logprob: -3.73323130607605
    4. '  
' → logprob: -5.358231544494629
    5. '        
' → logprob: -5.483231544494629
    6. ' return' → logprob: -6.108231544494629
    7. '
' → logprob: -6.733231544494629
    8. '<|end|>' → logprob: -6.733231544494629
    9. ' 
' → logprob: -7.233231544494629
    10. '

' → logprob: -8.608231544494629

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033376287668943405
    2. 'return' → logprob: -4.283376216888428
    3. '        
' → logprob: -4.783376216888428
    4. '
' → logprob: -5.033376216888428
    5. ' return' → logprob: -6.533376216888428
    6. '  
' → logprob: -6.908376216888428
    7. '    
' → logprob: -8.033376693725586
    8. '
' → logprob: -8.533376693725586
    9. ' if' → logprob: -8.658376693725586
    10. 'if' → logprob: -8.658376693725586

Token 573: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4250570237636566
    2. 'return' (adapté à ' return') → logprob: -1.175057053565979
    3. ' return' → logprob: -3.5500569343566895
    4. '
' → logprob: -5.0500569343566895
    5. '        
' → logprob: -6.6750569343566895
    6. 'if' → logprob: -8.050057411193848
    7. ' if' → logprob: -8.675057411193848
    8. '  
' → logprob: -8.925057411193848
    9. '```' → logprob: -9.175057411193848
    10. ' 
' → logprob: -9.550057411193848

Token 574: ' volume' (ID: 10945)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.12696297466754913
    2. ' volume' → logprob: -2.126962900161743
    3. 'self' → logprob: -10.626962661743164
    4. ' self' → logprob: -11.751962661743164
    5. '(volume' → logprob: -13.251962661743164
    6. '   ' → logprob: -14.501962661743164
    7. 'float' → logprob: -15.126962661743164
    8. 'vol' → logprob: -16.001962661743164
    9. ' volumen' → logprob: -17.251962661743164
    10. ' ' → logprob: -17.626962661743164

Token 575: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.25193890929222107
    2. ' /' → logprob: -1.5019389390945435
    3. '/r' → logprob: -11.626938819885254
    4. ' ' → logprob: -14.501938819885254
    5. '/
' → logprob: -16.00193977355957
    6. ' /
' → logprob: -16.62693977355957
    7. '*' → logprob: -16.75193977355957
    8. ' ' → logprob: -18.00193977355957
    9. '/
/' → logprob: -18.12693977355957
    10. ')' → logprob: -18.12693977355957

Token 576: ' rate' (ID: 6251)
  Prédit: 'rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rate' → logprob: -1.0206720617134124e-05
    2. ' rate' → logprob: -11.50001049041748
    3. '(rate' → logprob: -17.000009536743164
    4. 'float' → logprob: -18.750009536743164
    5. 'max' → logprob: -20.750009536743164
    6. '
' → logprob: -21.625009536743164
    7. '.rate' → logprob: -22.375009536743164
    8. '   ' → logprob: -22.875009536743164
    9. 'rank' → logprob: -23.250009536743164
    10. 'rating' → logprob: -23.250009536743164

Token 577: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 578: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 579: ' Ship' (ID: 43598)
  Prédit: ' Lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Lock' → logprob: -1.7119768857955933
    2. ' System' → logprob: -1.8369768857955933
    3. ' Gate' → logprob: -1.8369768857955933
    4. 'System' → logprob: -2.711977005004883
    5. 'Gate' → logprob: -2.836977005004883
    6. 'Lock' → logprob: -2.961977005004883
    7. ' Solution' → logprob: -3.086977005004883
    8. ' Water' → logprob: -3.336977005004883
    9. 'Solution' → logprob: -3.586977005004883
    10. ' Canal' → logprob: -3.711977005004883

Token 580: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010424555512145162
    2. ':
' → logprob: -7.751042366027832
    3. ' :' → logprob: -8.626042366027832
    4. '(' → logprob: -8.626042366027832
    5. '(object' → logprob: -9.376042366027832
    6. '<|end|>' → logprob: -9.751042366027832
    7. '):' → logprob: -10.001042366027832
    8. '>:' → logprob: -10.876042366027832
    9. '():' → logprob: -11.376042366027832
    10. ' (' → logprob: -11.751042366027832

Token 581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004003961570560932
    2. '<|end|>' → logprob: -6.004004001617432
    3. '    
' → logprob: -7.379004001617432
    4. '
' → logprob: -8.254003524780273
    5. ' def' → logprob: -8.754003524780273
    6. ':
' → logprob: -9.254003524780273
    7. ':' → logprob: -9.379003524780273
    8. ' 
' → logprob: -9.754003524780273
    9. '    ' → logprob: -9.754003524780273
    10. '(' → logprob: -9.879003524780273

Token 582: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008813696913421154
    2. ' def' → logprob: -5.008813858032227
    3. '   ' → logprob: -6.258813858032227
    4. 'class' → logprob: -8.633813858032227
    5. '__' → logprob: -13.133813858032227
    6. '	def' → logprob: -13.383813858032227
    7. ':def' → logprob: -14.758813858032227
    8. '  ' → logprob: -14.883813858032227
    9. ' ' → logprob: -15.633813858032227
    10. ':' → logprob: -16.758813858032227

Token 583: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.016088567674160004
    2. ' __' → logprob: -4.266088485717773
    3. 'init' → logprob: -6.266088485717773
    4. '_init' → logprob: -11.891088485717773
    5. ' init' → logprob: -12.016088485717773
    6. 'def' → logprob: -12.141088485717773
    7. '__(' → logprob: -13.266088485717773
    8. '.__' → logprob: -13.766088485717773
    9. ' def' → logprob: -13.891088485717773
    10. '___' → logprob: -14.141088485717773

Token 584: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -16.625
    3. 'def' → logprob: -16.75
    4. 'ini' → logprob: -16.75
    5. 'class' → logprob: -17.75
    6. '_init' → logprob: -17.875
    7. 'in' → logprob: -19.875
    8. 'int' → logprob: -20.0
    9. '__' → logprob: -20.625
    10. '```' → logprob: -21.0

Token 585: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.038646895438432693
    2. '__' → logprob: -3.288646936416626
    3. ' (' → logprob: -8.913646697998047
    4. '__(
' → logprob: -8.913646697998047
    5. '(' → logprob: -9.038646697998047
    6. '__((' → logprob: -9.163646697998047
    7. '(self' → logprob: -9.663646697998047
    8. '__,' → logprob: -10.413646697998047
    9. ',' → logprob: -11.663646697998047
    10. '__('' → logprob: -12.538646697998047

Token 586: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17241694033145905
    2. ' self' → logprob: -2.047416925430298
    3. 'X' → logprob: -4.047417163848877
    4. ' X' → logprob: -5.172417163848877
    5. ',' → logprob: -6.047417163848877
    6. '   ' → logprob: -6.922417163848877
    7. 'position' → logprob: -7.547417163848877
    8. 'x' → logprob: -7.672417163848877
    9. '0' → logprob: -8.172416687011719
    10. ' ' → logprob: -8.547416687011719

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.306760805164231e-05
    2. ' ,' → logprob: -11.50001335144043
    3. 'self' → logprob: -13.12501335144043
    4. '_,' → logprob: -14.75001335144043
    5. ' (' → logprob: -15.25001335144043
    6. ',X' → logprob: -16.62501335144043
    7. '__,' → logprob: -16.75001335144043
    8. ',(' → logprob: -16.87501335144043
    9. '(' → logprob: -17.00001335144043
    10. ',self' → logprob: -17.12501335144043

Token 588: ' max' (ID: 2999)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.848739743232727
    2. 'X' → logprob: -1.348739743232727
    3. 'pos' → logprob: -2.0987396240234375
    4. ' position' → logprob: -3.2237396240234375
    5. 'start' → logprob: -3.4737396240234375
    6. 'arrival' → logprob: -3.9737396240234375
    7. 'x' → logprob: -4.0987396240234375
    8. 'side' → logprob: -4.0987396240234375
    9. 'direction' → logprob: -4.2237396240234375
    10. 'length' → logprob: -4.7237396240234375

Token 589: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.019833441823720932
    2. '_load' → logprob: -4.394833564758301
    3. 'speed' → logprob: -5.769833564758301
    4. 'Speed' → logprob: -6.769833564758301
    5. '_velocity' → logprob: -7.394833564758301
    6. '_size' → logprob: -7.769833564758301
    7. '_capacity' → logprob: -8.5198335647583
    8. '_weight' → logprob: -8.6448335647583
    9. '_length' → logprob: -8.6448335647583
    10. '_volume' → logprob: -8.8948335647583

Token 590: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3420755863189697
    2. '):' → logprob: -1.7170755863189697
    3. '=' → logprob: -2.4670755863189697
    4. ' ,' → logprob: -4.092075347900391
    5. '):
' → logprob: -5.592075347900391
    6. '<|end|>' → logprob: -5.967075347900391
    7. ' ):' → logprob: -7.092075347900391
    8. '=None' → logprob: -8.09207534790039
    9. ')' → logprob: -8.46707534790039
    10. ' =' → logprob: -8.71707534790039

Token 591: ' position' (ID: 4010)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.8553832769393921
    2. 'length' → logprob: -1.605383276939392
    3. 'max' → logprob: -2.6053833961486816
    4. ' max' → logprob: -2.7303833961486816
    5. ' position' → logprob: -3.1053833961486816
    6. 'arrival' → logprob: -3.2303833961486816
    7. 'position' → logprob: -3.7303833961486816
    8. ' volume' → logprob: -3.8553833961486816
    9. ' arrival' → logprob: -3.9803833961486816
    10. ' direction' → logprob: -4.355383396148682

Token 592: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5152510404586792
    2. ',' → logprob: -1.0152510404586792
    3. '):
' → logprob: -3.5152511596679688
    4. '=' → logprob: -4.640251159667969
    5. '):

' → logprob: -8.265251159667969
    6. ' ):' → logprob: -8.390251159667969
    7. '):
' → logprob: -9.265251159667969
    8. '<|end|>' → logprob: -9.265251159667969
    9. '=None' → logprob: -9.390251159667969
    10. ' ,' → logprob: -9.390251159667969

Token 593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027881475165486336
    2. ',' → logprob: -3.652881383895874
    3. '<|end|>' → logprob: -7.277881622314453
    4. '(max' → logprob: -8.777881622314453
    5. '):
' → logprob: -9.027881622314453
    6. ' ,' → logprob: -9.152881622314453
    7. ' (' → logprob: -9.402881622314453
    8. '   ' → logprob: -9.527881622314453
    9. ':' → logprob: -9.902881622314453
    10. ')' → logprob: -9.902881622314453

Token 594: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15488408505916595
    2. 'max' → logprob: -2.154884099960327
    3. ' self' → logprob: -3.904884099960327
    4. ' max' → logprob: -4.904883861541748
    5. '       ' → logprob: -11.154884338378906
    6. '   ' → logprob: -14.654884338378906
    7. '_max' → logprob: -16.154884338378906
    8. '	self' → logprob: -16.654884338378906
    9. '	max' → logprob: -16.654884338378906
    10. 'Max' → logprob: -16.904884338378906

Token 595: '.V' (ID: 5970)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002562099602073431
    2. ' .' → logprob: -6.502562046051025
    3. '.max' → logprob: -6.877562046051025
    4. '=' → logprob: -11.502562522888184
    5. ' =' → logprob: -12.252562522888184
    6. '.maximum' → logprob: -12.377562522888184
    7. '.m' → logprob: -13.252562522888184
    8. '=max' → logprob: -13.377562522888184
    9. ' ' → logprob: -14.002562522888184
    10. '.position' → logprob: -14.002562522888184

Token 596: 'max' (ID: 3228)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49712449312210083
    2. '=' → logprob: -1.497124433517456
    3. '_max' → logprob: -1.872124433517456
    4. 'max' → logprob: -4.622124671936035
    5. '_' → logprob: -5.622124671936035
    6. '=max' → logprob: -8.497124671936035
    7. '   ' → logprob: -8.747124671936035
    8. ',' → logprob: -9.372124671936035
    9. ' max' → logprob: -9.997124671936035
    10. '_MAX' → logprob: -10.122124671936035

Token 597: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326764822006226
    2. ' =' → logprob: -0.7576764822006226
    3. '<|end|>' → logprob: -10.132676124572754
    4. ' ' → logprob: -11.507676124572754
    5. '=max' → logprob: -11.632676124572754
    6. ',' → logprob: -11.632676124572754
    7. 'max' → logprob: -12.757676124572754
    8. '_max' → logprob: -13.507676124572754
    9. ')' → logprob: -13.882676124572754
    10. '=int' → logprob: -14.132676124572754

Token 598: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12692810595035553
    2. ' max' → logprob: -2.1269280910491943
    3. '	max' → logprob: -17.251928329467773
    4. 'float' → logprob: -18.001928329467773
    5. ' ' → logprob: -18.626928329467773
    6. '(max' → logprob: -18.751928329467773
    7. '   ' → logprob: -19.501928329467773
    8. '_max' → logprob: -19.751928329467773
    9. '[max' → logprob: -19.876928329467773
    10. '=max' → logprob: -20.001928329467773

Token 599: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.000649529043585062
    2. '_' → logprob: -7.375649452209473
    3. ' _' → logprob: -11.250649452209473
    4. '_velocity' → logprob: -12.500649452209473
    5. '_space' → logprob: -13.625649452209473
    6. 'speed' → logprob: -13.625649452209473
    7. '_SPEED' → logprob: -13.875649452209473
    8. 'Speed' → logprob: -14.375649452209473
    9. '_s' → logprob: -15.000649452209473
    10. '_score' → logprob: -15.125649452209473

Token 600: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018069108482450247
    2. '<|end|>' → logprob: -6.876806735992432
    3. '
' → logprob: -7.501806735992432
    4. ' =' → logprob: -9.75180721282959
    5. ' ' → logprob: -9.75180721282959
    6. '        ' → logprob: -10.62680721282959
    7. '=' → logprob: -10.75180721282959
    8. ' #' → logprob: -11.50180721282959
    9. '<|end|>' → logprob: -11.62680721282959
    10. '	' → logprob: -11.62680721282959

Token 601: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15047556161880493
    2. '<|end|>' → logprob: -2.52547550201416
    3. '
' → logprob: -2.90047550201416
    4. '=' → logprob: -6.02547550201416
    5. ' ' → logprob: -7.52547550201416
    6. ' =' → logprob: -8.02547550201416
    7. '<|end|>' → logprob: -8.02547550201416
    8. '#' → logprob: -8.15047550201416
    9. '        ' → logprob: -8.40047550201416
    10. ' #' → logprob: -8.90047550201416

Token 602: ' vitesse' (ID: 71752)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.013388562947511673
    2. ' position' → logprob: -4.388388633728027
    3. 'max' → logprob: -7.138388633728027
    4. 'float' → logprob: -10.013388633728027
    5. ' max' → logprob: -10.888388633728027
    6. 'velocity' → logprob: -11.388388633728027
    7. 'V' → logprob: -12.138388633728027
    8. ' float' → logprob: -13.763388633728027
    9. 'speed' → logprob: -14.013388633728027
    10. '	position' → logprob: -14.388388633728027

Token 603: ' max' (ID: 2999)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 604: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 605: 'km' (ID: 15284)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.29917335510253906
    2. 'km' → logprob: -1.799173355102539
    3. ' float' → logprob: -3.174173355102539
    4. ')' → logprob: -3.549173355102539
    5. ' km' → logprob: -3.924173355102539
    6. '=float' → logprob: -7.424173355102539
    7. 'm' → logprob: -7.924173355102539
    8. 'V' → logprob: -7.924173355102539
    9. 'Km' → logprob: -8.299173355102539
    10. '(float' → logprob: -8.674173355102539

Token 606: '/h' (ID: 14174)
  Prédit: '/h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/h' → logprob: -2.165027217415627e-05
    2. '/' → logprob: -10.750021934509277
    3. '/s' → logprob: -17.00002098083496
    4. 'h' → logprob: -17.50002098083496
    5. '/H' → logprob: -17.87502098083496
    6. ' /' → logprob: -18.12502098083496
    7. '/hr' → logprob: -18.37502098083496
    8. ')' → logprob: -18.62502098083496
    9. '_h' → logprob: -18.87502098083496
    10. '   ' → logprob: -19.25002098083496

Token 607: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028104635421186686
    2. ')
' → logprob: -5.877810478210449
    3. '<|end|>' → logprob: -13.00281047821045
    4. ')
' → logprob: -13.75281047821045
    5. ' )' → logprob: -13.87781047821045
    6. ')

' → logprob: -14.50281047821045
    7. '       ' → logprob: -15.00281047821045
    8. '   ' → logprob: -15.50281047821045
    9. '),' → logprob: -16.627809524536133
    10. ',' → logprob: -16.752809524536133

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011251410469412804
    2. 'self' → logprob: -4.636251449584961
    3. ' self' → logprob: -6.511251449584961
    4. '
' → logprob: -12.636251449584961
    5. '   ' → logprob: -13.511251449584961
    6. ' ' → logprob: -13.636251449584961
    7. '<|end|>' → logprob: -14.636251449584961
    8. '	self' → logprob: -14.886251449584961
    9. '        
' → logprob: -15.386251449584961
    10. '      ' → logprob: -15.511251449584961

Token 609: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00011641718447208405
    2. ' self' → logprob: -9.375116348266602
    3. '       ' → logprob: -10.375116348266602
    4. '   ' → logprob: -16.7501163482666
    5. '	self' → logprob: -17.1251163482666
    6. ' ' → logprob: -17.8751163482666
    7. '0' → logprob: -17.8751163482666
    8. '        
' → logprob: -18.0001163482666
    9. '
' → logprob: -18.0001163482666
    10. '#' → logprob: -18.6251163482666

Token 610: '.pos' (ID: 25321)
  Prédit: '.position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.10486843436956406
    2. '.' → logprob: -2.4798684120178223
    3. '.pos' → logprob: -4.854868412017822
    4. '.P' → logprob: -5.479868412017822
    5. '.V' → logprob: -6.479868412017822
    6. '.x' → logprob: -7.104868412017822
    7. 'position' → logprob: -8.72986888885498
    8. '.current' → logprob: -8.85486888885498
    9. '.Position' → logprob: -8.85486888885498
    10. '.I' → logprob: -8.97986888885498

Token 611: ' =' (ID: 314)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.13917899131774902
    2. ' =' → logprob: -2.639178991317749
    3. '=' → logprob: -3.389178991317749
    4. 'osition' → logprob: -3.764178991317749
    5. 'itions' → logprob: -7.639179229736328
    6. 'otion' → logprob: -7.889179229736328
    7. 'ession' → logprob: -8.764179229736328
    8. 'tion' → logprob: -9.014179229736328
    9. ' ' → logprob: -9.264179229736328
    10. 'ITION' → logprob: -9.639179229736328

Token 612: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.16022484004497528
    2. ' position' → logprob: -1.9102247953414917
    3. '	position' → logprob: -14.910224914550781
    4. 'float' → logprob: -15.660224914550781
    5. '(position' → logprob: -15.910224914550781
    6. '[position' → logprob: -16.91022491455078
    7. ' float' → logprob: -18.03522491455078
    8. 'pos' → logprob: -18.03522491455078
    9. '.position' → logprob: -18.28522491455078
    10. '0' → logprob: -18.41022491455078

Token 613: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 615: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.013093880377709866
    2. ' position' → logprob: -4.513093948364258
    3. '0' → logprob: -6.763093948364258
    4. '<|end|>' → logprob: -8.138093948364258
    5. 'float' → logprob: -8.513093948364258
    6. 'None' → logprob: -8.638093948364258
    7. '<|end|>' → logprob: -10.138093948364258
    8. ' None' → logprob: -10.388093948364258
    9. 'pos' → logprob: -10.638093948364258
    10. ' ' → logprob: -10.763093948364258

Token 616: ' actuelle' (ID: 104951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 617: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: 'km' (ID: 15284)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25389325618743896
    2. 'float' → logprob: -1.628893256187439
    3. ' )' → logprob: -4.5038933753967285
    4. 'km' → logprob: -4.6288933753967285
    5. ' float' → logprob: -5.5038933753967285
    6. ' km' → logprob: -6.2538933753967285
    7. '0' → logprob: -7.6288933753967285
    8. '=float' → logprob: -8.37889289855957
    9. '<|end|>' → logprob: -8.75389289855957
    10. '(float' → logprob: -9.50389289855957

Token 619: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003270023735240102
    2. ' )' → logprob: -8.250327110290527
    3. ')
' → logprob: -10.375327110290527
    4. '<|end|>' → logprob: -10.500327110290527
    5. '   ' → logprob: -12.625327110290527
    6. '       ' → logprob: -13.125327110290527
    7. '<|end|>' → logprob: -14.375327110290527
    8. ' ' → logprob: -15.500327110290527
    9. ')

' → logprob: -15.500327110290527
    10. '')' → logprob: -15.625327110290527

Token 620: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 621: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0043478719890117645
    2. '       ' → logprob: -5.629347801208496
    3. ' self' → logprob: -8.254347801208496
    4. 'def' → logprob: -8.379347801208496
    5. '   ' → logprob: -9.504347801208496
    6. '#' → logprob: -9.629347801208496
    7. 'pass' → logprob: -10.004347801208496
    8. '0' → logprob: -10.254347801208496
    9. '	self' → logprob: -11.879347801208496
    10. ' ' → logprob: -12.254347801208496

Token 622: '.speed' (ID: 54856)
  Prédit: '.V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.298249214887619
    2. '.speed' → logprob: -2.5482492446899414
    3. ' .' → logprob: -2.9232492446899414
    4. '.vel' → logprob: -3.2982492446899414
    5. '.v' → logprob: -3.4232492446899414
    6. '.' → logprob: -4.173249244689941
    7. '._' → logprob: -4.298249244689941
    8. '.velocity' → logprob: -4.798249244689941
    9. '_speed' → logprob: -5.673249244689941
    10. '.S' → logprob: -6.298249244689941

Token 623: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. ' ' → logprob: -15.75192928314209
    4. '=None' → logprob: -16.001930236816406
    5. '_' → logprob: -16.376930236816406
    6. '_=' → logprob: -17.001930236816406
    7. '＝' → logprob: -17.001930236816406
    8. 's' → logprob: -17.501930236816406
    9. '0' → logprob: -17.626930236816406
    10. '	' → logprob: -17.876930236816406

Token 624: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017781148198992014
    2. ' ' → logprob: -6.6267781257629395
    3. 'self' → logprob: -7.8767781257629395
    4. ' self' → logprob: -10.251777648925781
    5. 'max' → logprob: -10.376777648925781
    6. ' max' → logprob: -12.376777648925781
    7. '1' → logprob: -13.876777648925781
    8. '   ' → logprob: -15.126777648925781
    9. 'None' → logprob: -15.376777648925781
    10. ' ' → logprob: -16.18927764892578

Token 625: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007182692061178386
    2. 'max' → logprob: -7.875718116760254
    3. 'self' → logprob: -8.000718116760254
    4. 'None' → logprob: -13.875718116760254
    5. ' ' → logprob: -14.000718116760254
    6. 'V' → logprob: -14.750718116760254
    7. 'float' → logprob: -15.500718116760254
    8. '1' → logprob: -16.12571907043457
    9. 'v' → logprob: -16.81321907043457
    10. 'math' → logprob: -16.87571907043457

Token 626: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '5' → logprob: -20.25
    3. '```' → logprob: -20.625
    4. 'float' → logprob: -21.125
    5. '   ' → logprob: -21.75
    6. '1' → logprob: -21.875
    7. ' ' → logprob: -22.125
    8. '  ' → logprob: -23.0
    9. 'f' → logprob: -23.125
    10. 'd' → logprob: -23.25

Token 628: '      ' (ID: 1699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 629: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: ' vitesse' (ID: 71752)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048587825149297714
    2. ' ' → logprob: -3.0485877990722656
    3. 'float' → logprob: -15.548587799072266
    4. ' float' → logprob: -16.923587799072266
    5. '1' → logprob: -17.173587799072266
    6. ' ' → logprob: -17.423587799072266
    7. '   ' → logprob: -17.548587799072266
    8. '  ' → logprob: -17.798587799072266
    9. 'speed' → logprob: -18.548587799072266
    10. 'None' → logprob: -18.923587799072266

Token 631: ' actuelle' (ID: 104951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 632: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 633: 'km' (ID: 15284)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03096223622560501
    2. 'km' → logprob: -3.9059622287750244
    3. ' ' → logprob: -4.9059624671936035
    4. ' km' → logprob: -5.9059624671936035
    5. 'float' → logprob: -8.405961990356445
    6. ')' → logprob: -11.405961990356445
    7. ' float' → logprob: -12.780961990356445
    8. '   ' → logprob: -14.405961990356445
    9. '  ' → logprob: -14.655961990356445
    10. ' ' → logprob: -14.905961990356445

Token 634: '/h' (ID: 14174)
  Prédit: '/h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/h' → logprob: -0.000432695698691532
    2. '/' → logprob: -7.75043249130249
    3. '/hr' → logprob: -13.375432968139648
    4. ' /' → logprob: -16.12543296813965
    5. ')' → logprob: -16.50043296813965
    6. '/hour' → logprob: -16.62543296813965
    7. '/H' → logprob: -16.75043296813965
    8. '/
' → logprob: -17.87543296813965
    9. '/s' → logprob: -17.87543296813965
    10. '/d' → logprob: -17.87543296813965

Token 635: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023647459223866463
    2. '<|end|>' → logprob: -3.7736475467681885
    3. ' )' → logprob: -8.02364730834961
    4. '<|end|>' → logprob: -10.14864730834961
    5. '       ' → logprob: -11.27364730834961
    6. ')
' → logprob: -11.27364730834961
    7. '
' → logprob: -13.27364730834961
    8. '}' → logprob: -13.39864730834961
    9. '),' → logprob: -13.52364730834961
    10. ',' → logprob: -13.77364730834961

Token 636: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 637: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1467590481042862
    2. '       ' → logprob: -2.271759033203125
    3. ' self' → logprob: -4.021759033203125
    4. '<|end|>' → logprob: -4.646759033203125
    5. '   ' → logprob: -5.896759033203125
    6. 'def' → logprob: -6.521759033203125
    7. '#' → logprob: -7.646759033203125
    8. ' ' → logprob: -8.146759033203125
    9. '	self' → logprob: -8.396759033203125
    10. '<|end|>' → logprob: -8.771759033203125

Token 638: '.done' (ID: 64548)
  Prédit: '.time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.time' → logprob: -0.327033668756485
    2. '.arr' → logprob: -2.327033758163452
    3. '.target' → logprob: -3.202033758163452
    4. '.status' → logprob: -3.327033758163452
    5. '.wait' → logprob: -3.452033758163452
    6. '.direction' → logprob: -4.077033519744873
    7. '.state' → logprob: -4.202033519744873
    8. '.next' → logprob: -4.702033519744873
    9. '.destination' → logprob: -5.452033519744873
    10. '.' → logprob: -5.702033519744873

Token 639: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010802679695189
    2. '=' → logprob: -4.635802745819092
    3. '=False' → logprob: -7.510802745819092
    4. '_time' → logprob: -7.885802745819092
    5. '<|end|>' → logprob: -9.885802268981934
    6. 'Time' → logprob: -11.385802268981934
    7. '=True' → logprob: -11.635802268981934
    8. '_' → logprob: -11.885802268981934
    9. '_loading' → logprob: -12.010802268981934
    10. '_steps' → logprob: -12.260802268981934

Token 640: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007099286303855479
    2. ' False' → logprob: -7.2507100105285645
    3. '=False' → logprob: -17.375709533691406
    4. 'True' → logprob: -17.750709533691406
    5. '(False' → logprob: -17.750709533691406
    6. '0' → logprob: -18.500709533691406
    7. '[]' → logprob: -18.875709533691406
    8. 'false' → logprob: -19.750709533691406
    9. '   ' → logprob: -20.125709533691406
    10. '.False' → logprob: -20.500709533691406

Token 641: '     ' (ID: 530)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 642: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 643: ' si' (ID: 1784)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.4741531312465668
    2. 'False' → logprob: -0.9741531610488892
    3. ' True' → logprob: -9.849153518676758
    4. 'True' → logprob: -10.849153518676758
    5. ' self' → logprob: -13.724153518676758
    6. '(False' → logprob: -13.849153518676758
    7. '=False' → logprob: -13.974153518676758
    8. '#' → logprob: -15.224153518676758
    9. 'F' → logprob: -15.474153518676758
    10. 'self' → logprob: -15.974153518676758

Token 644: ' le' (ID: 505)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.091898798942566
    2. ' True' → logprob: -1.341898798942566
    3. ' le' → logprob: -1.716898798942566
    4. 'True' → logprob: -1.966898798942566
    5. 'self' → logprob: -3.4668989181518555
    6. ' la' → logprob: -3.5918989181518555
    7. ' arrivé' → logprob: -5.2168989181518555
    8. ' not' → logprob: -5.3418989181518555
    9. ' l' → logprob: -5.3418989181518555
    10. ' the' → logprob: -6.2168989181518555

Token 645: ' bateau' (ID: 123794)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4611796140670776
    2. 'v' → logprob: -2.586179733276367
    3. ' self' → logprob: -2.586179733276367
    4. 'jour' → logprob: -2.961179733276367
    5. 'ship' → logprob: -3.211179733276367
    6. 's' → logprob: -3.211179733276367
    7. 'pos' → logprob: -3.586179733276367
    8. ' voyage' → logprob: -3.586179733276367
    9. ' passage' → logprob: -3.836179733276367
    10. 'pass' → logprob: -3.898679733276367

Token 646: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.48856666684150696
    2. 'a' → logprob: -0.9885666370391846
    3. 'est' → logprob: -5.238566875457764
    4. ' has' → logprob: -5.613566875457764
    5. ' est' → logprob: -5.738566875457764
    6. 'has' → logprob: -6.738566875457764
    7. 'arr' → logprob: -8.488566398620605
    8. 's' → logprob: -8.613566398620605
    9. ' is' → logprob: -8.613566398620605
    10. '_a' → logprob: -9.488566398620605

Token 647: ' dépass' (ID: 99759)
  Prédit: 'termin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'termin' → logprob: -1.0560399293899536
    2. 'pass' → logprob: -1.8060399293899536
    3. ' terminé' → logprob: -2.056039810180664
    4. 'arr' → logprob: -2.306039810180664
    5. 'dé' → logprob: -2.556039810180664
    6. 'ache' → logprob: -3.431039810180664
    7. 'd' → logprob: -3.681039810180664
    8. 'tr' → logprob: -3.806039810180664
    9. 'term' → logprob: -3.931039810180664
    10. ' franch' → logprob: -4.056039810180664

Token 648: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0003079334564972669
    2. 'e' → logprob: -8.1253080368042
    3. 'ed' → logprob: -12.3753080368042
    4. 'u' → logprob: -12.6253080368042
    5. '&eacute' → logprob: -13.1253080368042
    6. 'ée' → logprob: -14.8753080368042
    7. 'É' → logprob: -14.8753080368042
    8. 'er' → logprob: -15.6253080368042
    9. '\x' → logprob: -15.6253080368042
    10. 'ép' → logprob: -16.000307083129883

Token 649: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7908153533935547
    2. 'self' → logprob: -1.9158153533935547
    3. 'la' → logprob: -2.0408153533935547
    4. ' la' → logprob: -2.0408153533935547
    5. ' le' → logprob: -2.7908153533935547
    6. 'l' → logprob: -3.0408153533935547
    7. ' l' → logprob: -4.915815353393555
    8. ' self' → logprob: -5.040815353393555
    9. ' son' → logprob: -5.415815353393555
    10. 'son' → logprob: -5.915815353393555

Token 650: ' bord' (ID: 26431)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.39959558844566345
    2. 'se' → logprob: -2.7745954990386963
    3. 'b' → logprob: -3.2745954990386963
    4. '100' → logprob: -3.3995954990386963
    5. 'sys' → logprob: -3.5245954990386963
    6. 'but' → logprob: -3.7745954990386963
    7. 'None' → logprob: -4.524595737457275
    8. ' seuil' → logprob: -4.524595737457275
    9. 'destination' → logprob: -4.649595737457275
    10. 'point' → logprob: -4.774595737457275

Token 651: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 652: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 653: ' pays' (ID: 15236)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.22321215271949768
    2. 'sas' → logprob: -3.473212242126465
    3. ' canal' → logprob: -3.973212242126465
    4. 'sys' → logprob: -4.348212242126465
    5. 'b' → logprob: -4.473212242126465
    6. 'la' → logprob: -4.598212242126465
    7. 'port' → logprob: -4.598212242126465
    8. 'pass' → logprob: -4.723212242126465
    9. 'segment' → logprob: -4.848212242126465
    10. 'chen' → logprob: -4.848212242126465

Token 654: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 655: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 656: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 657: '.wait' (ID: 29833)
  Prédit: '.time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -0.3781665861606598
    2. '.wait' → logprob: -2.628166675567627
    3. '.path' → logprob: -3.128166675567627
    4. '.arr' → logprob: -3.253166675567627
    5. '.target' → logprob: -3.253166675567627
    6. '.next' → logprob: -3.378166675567627
    7. '.direction' → logprob: -4.128166675567627
    8. '.t' → logprob: -4.503166675567627
    9. '.route' → logprob: -5.003166675567627
    10. '.current' → logprob: -5.503166675567627

Token 658: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0017255148850381374
    2. '_time' → logprob: -6.376725673675537
    3. '_for' → logprob: -12.626725196838379
    4. 'ed' → logprob: -12.626725196838379
    5. '=' → logprob: -12.751725196838379
    6. '_count' → logprob: -12.751725196838379
    7. '_start' → logprob: -13.126725196838379
    8. ' =' → logprob: -13.376725196838379
    9. '_ing' → logprob: -13.626725196838379
    10. '_' → logprob: -13.751725196838379

Token 659: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24300488829612732
    2. ' =' → logprob: -2.11800479888916
    3. '_time' → logprob: -3.11800479888916
    4. '_for' → logprob: -3.36800479888916
    5. '_' → logprob: -4.74300479888916
    6. 'ing' → logprob: -6.11800479888916
    7. '_count' → logprob: -6.36800479888916
    8. '_times' → logprob: -7.61800479888916
    9. '_position' → logprob: -7.86800479888916
    10. 'For' → logprob: -8.11800479888916

Token 660: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1604091376066208
    2. 'True' → logprob: -1.9104090929031372
    3. '0' → logprob: -9.035408973693848
    4. 'None' → logprob: -10.035408973693848
    5. ' False' → logprob: -11.035408973693848
    6. '[]' → logprob: -12.660408973693848
    7. ' True' → logprob: -12.910408973693848
    8. '   ' → logprob: -16.535409927368164
    9. '(False' → logprob: -16.785409927368164
    10. '1' → logprob: -17.035409927368164

Token 661: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 662: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 663: ' s' (ID: 265)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1604927033185959
    2. ' False' → logprob: -1.9104926586151123
    3. 'True' → logprob: -8.660492897033691
    4. ' True' → logprob: -9.285492897033691
    5. '(False' → logprob: -13.535492897033691
    6. '=False' → logprob: -14.535492897033691
    7. '<|end|>' → logprob: -14.910492897033691
    8. '#' → logprob: -16.160491943359375
    9. '   ' → logprob: -17.160491943359375
    10. ' ' → logprob: -17.285491943359375

Token 664: ''il' (ID: 14683)
  Prédit: 'elf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elf' → logprob: -0.0029407329857349396
    2. '#' → logprob: -7.502940654754639
    3. 'ur' → logprob: -8.252941131591797
    4. 'u' → logprob: -8.377941131591797
    5. '=True' → logprob: -8.377941131591797
    6. 'e' → logprob: -8.877941131591797
    7. 'True' → logprob: -8.877941131591797
    8. 'False' → logprob: -9.002941131591797
    9. ''il' → logprob: -9.127941131591797
    10. ' True' → logprob: -9.377941131591797

Token 665: ' est' (ID: 893)
  Prédit: ''att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''att' → logprob: -1.2625236511230469
    2. 'est' → logprob: -1.7625236511230469
    3. ''agit' → logprob: -1.8875236511230469
    4. ' attend' → logprob: -2.012523651123047
    5. 'att' → logprob: -2.512523651123047
    6. ''est' → logprob: -2.637523651123047
    7. 'e' → logprob: -2.887523651123047
    8. ' est' → logprob: -4.762523651123047
    9. 'arr' → logprob: -5.637523651123047
    10. ''''' → logprob: -5.637523651123047

Token 666: ' arrêté' (ID: 143709)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.23363648355007172
    2. 'en' → logprob: -1.608636498451233
    3. 'arr' → logprob: -5.608636379241943
    4. ' blo' → logprob: -6.108636379241943
    5. ' à' → logprob: -7.733636379241943
    6. 'à' → logprob: -7.983636379241943
    7. 'dans' → logprob: -8.483636856079102
    8. 'blo' → logprob: -8.608636856079102
    9. ' arrêté' → logprob: -8.733636856079102
    10. '```' → logprob: -8.858636856079102

Token 667: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 668: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 669: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.018087074160575867
    2. '   ' → logprob: -4.268086910247803
    3. '<|end|>' → logprob: -5.643086910247803
    4. ' def' → logprob: -8.518087387084961
    5. '	def' → logprob: -9.643087387084961
    6. '<|end|>' → logprob: -9.643087387084961
    7. '
' → logprob: -11.143087387084961
    8. ')' → logprob: -11.893087387084961
    9. '```' → logprob: -12.393087387084961
    10. '       ' → logprob: -12.393087387084961

Token 670: ' __' (ID: 2516)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.5322662591934204
    2. 'set' → logprob: -1.6572662591934204
    3. 'move' → logprob: -2.157266139984131
    4. ' accelerate' → logprob: -2.282266139984131
    5. 'update' → logprob: -2.532266139984131
    6. ' set' → logprob: -2.532266139984131
    7. 'acceler' → logprob: -2.657266139984131
    8. 'stop' → logprob: -2.907266139984131
    9. ' move' → logprob: -2.907266139984131
    10. ' update' → logprob: -4.532266139984131

Token 671: 'repr' (ID: 67002)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.4654251039028168
    2. 'lt' → logprob: -1.4654251337051392
    3. 'repr' → logprob: -2.2154250144958496
    4. 'str' → logprob: -3.4654250144958496
    5. 'eq' → logprob: -7.21542501449585
    6. 'next' → logprob: -10.715425491333008
    7. 'le' → logprob: -11.340425491333008
    8. 'copy' → logprob: -11.965425491333008
    9. 'set' → logprob: -12.340425491333008
    10. 'call' → logprob: -13.965425491333008

Token 672: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000932421418838203
    2. '__' → logprob: -7.000932216644287
    3. '__(
' → logprob: -11.625932693481445
    4. '__('' → logprob: -11.875932693481445
    5. '_(' → logprob: -13.875932693481445
    6. '__("' → logprob: -13.875932693481445
    7. '__((' → logprob: -14.000932693481445
    8. '(self' → logprob: -14.125932693481445
    9. '_' → logprob: -14.250932693481445
    10. '___' → logprob: -14.500932693481445

Token 673: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.64839569455944e-05
    2. ' self' → logprob: -9.750076293945312
    3. '(self' → logprob: -11.375076293945312
    4. ')' → logprob: -12.000076293945312
    5. ')(' → logprob: -15.250076293945312
    6. '(' → logprob: -16.750076293945312
    7. 's' → logprob: -17.000076293945312
    8. '__(' → logprob: -17.125076293945312
    9. '       ' → logprob: -17.500076293945312
    10. '   ' → logprob: -17.750076293945312

Token 674: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07445897161960602
    2. '__' → logprob: -2.9494590759277344
    3. '__('' → logprob: -4.949459075927734
    4. '(self' → logprob: -5.199459075927734
    5. 'self' → logprob: -5.949459075927734
    6. '__(
' → logprob: -6.324459075927734
    7. '__)' → logprob: -6.699459075927734
    8. '__((' → logprob: -8.449459075927734
    9. '__(*' → logprob: -8.449459075927734
    10. '__("' → logprob: -8.824459075927734

Token 675: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009642988443374634
    2. ' f' → logprob: -4.884643077850342
    3. '   ' → logprob: -7.384643077850342
    4. 'return' → logprob: -7.634643077850342
    5. 'f' → logprob: -7.759643077850342
    6. ' return' → logprob: -8.384642601013184
    7. 'def' → logprob: -9.259642601013184
    8. '           ' → logprob: -9.384642601013184
    9. '    ' → logprob: -10.259642601013184
    10. '     ' → logprob: -10.884642601013184

Token 676: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7018397450447083
    2. ' f' → logprob: -1.7018396854400635
    3. '       ' → logprob: -1.7018396854400635
    4. 'f' → logprob: -2.4518396854400635
    5. ' return' → logprob: -2.9518396854400635
    6. '   ' → logprob: -6.826839923858643
    7. '           ' → logprob: -9.451839447021484
    8. 'def' → logprob: -10.701839447021484
    9. '     ' → logprob: -10.826839447021484
    10. '    ' → logprob: -10.826839447021484

Token 677: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.25193482637405396
    2. 'f' → logprob: -1.5019347667694092
    3. '"' → logprob: -12.376935005187988
    4. ''f' → logprob: -14.751935005187988
    5. ''' → logprob: -15.001935005187988
    6. ' ' → logprob: -15.376935005187988
    7. '	f' → logprob: -15.376935005187988
    8. '(f' → logprob: -15.501935005187988
    9. 'F' → logprob: -16.001934051513672
    10. ' F' → logprob: -16.751934051513672

Token 678: ''S' (ID: 31233)
  Prédit: '"<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"<' → logprob: -0.4788808524608612
    2. ''S' → logprob: -1.9788808822631836
    3. '"' → logprob: -2.2288808822631836
    4. ''<' → logprob: -2.3538808822631836
    5. ''' → logprob: -3.7288808822631836
    6. '<' → logprob: -4.853880882263184
    7. 'f' → logprob: -5.728880882263184
    8. '(' → logprob: -6.353880882263184
    9. '(f' → logprob: -6.978880882263184
    10. '('<' → logprob: -7.978880882263184

Token 679: 'hip' (ID: 2504)
  Prédit: 'hip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hip' → logprob: -5.200166469876422e-06
    2. '{' → logprob: -12.875004768371582
    3. 'hips' → logprob: -13.625004768371582
    4. ' hip' → logprob: -14.500004768371582
    5. '<' → logprob: -15.000004768371582
    6. 'Hip' → logprob: -15.500004768371582
    7. 'hi' → logprob: -15.625004768371582
    8. ''' → logprob: -16.8750057220459
    9. '[' → logprob: -17.2500057220459
    10. 'hipping' → logprob: -17.5000057220459

Token 680: '(pos' (ID: 24566)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.06638921052217484
    2. '(' → logprob: -2.816389322280884
    3. '(V' → logprob: -6.316389083862305
    4. '('{' → logprob: -7.191389083862305
    5. '('' → logprob: -7.316389083862305
    6. '{' → logprob: -7.941389083862305
    7. '(pos' → logprob: -8.441389083862305
    8. '<{' → logprob: -8.441389083862305
    9. '({'' → logprob: -9.441389083862305
    10. '(max' → logprob: -9.566389083862305

Token 681: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5819110870361328
    2. '={' → logprob: -0.8319110870361328
    3. '{' → logprob: -5.331911087036133
    4. ',' → logprob: -7.081911087036133
    5. '=self' → logprob: -9.206911087036133
    6. '=}' → logprob: -9.956911087036133
    7. '='{' → logprob: -10.206911087036133
    8. '={'' → logprob: -10.456911087036133
    9. ')' → logprob: -10.581911087036133
    10. '={
' → logprob: -11.456911087036133

Token 682: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001239196863025427
    2. '{' → logprob: -9.000123977661133
    3. ' self' → logprob: -14.625123977661133
    4. 'round' → logprob: -19.125123977661133
    5. '   ' → logprob: -20.625123977661133
    6. '	self' → logprob: -20.750123977661133
    7. '0' → logprob: -21.000123977661133
    8. '{
' → logprob: -21.000123977661133
    9. '(self' → logprob: -22.125123977661133
    10. '       ' → logprob: -22.875123977661133

Token 683: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.020365875214338303
    2. 'self' → logprob: -4.0203657150268555
    3. '.self' → logprob: -7.0203657150268555
    4. '.' → logprob: -7.1453657150268555
    5. ' self' → logprob: -9.395365715026855
    6. '.position' → logprob: -9.520365715026855
    7. 'pos' → logprob: -9.520365715026855
    8. '{' → logprob: -9.770365715026855
    9. '.x' → logprob: -9.770365715026855
    10. '.s' → logprob: -9.895365715026855

Token 684: ':.' (ID: 27474)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025883622583933175
    2. '},' → logprob: -9.375258445739746
    3. ' ,' → logprob: -9.625258445739746
    4. '),' → logprob: -10.250258445739746
    5. ')' → logprob: -10.500258445739746
    6. '}' → logprob: -11.125258445739746
    7. ')}' → logprob: -11.750258445739746
    8. '',' → logprob: -11.875258445739746
    9. ',
' → logprob: -12.125258445739746
    10. '<|end|>' → logprob: -12.250258445739746

Token 685: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.056857913732528687
    2. '3' → logprob: -2.9318578243255615
    3. '1' → logprob: -6.681858062744141
    4. '6' → logprob: -7.306858062744141
    5. '4' → logprob: -10.05685806274414
    6. '5' → logprob: -12.93185806274414
    7. '{' → logprob: -13.43185806274414
    8. '02' → logprob: -13.55685806274414
    9. '0' → logprob: -14.80685806274414
    10. '03' → logprob: -15.18185806274414

Token 686: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.320199877838604e-07
    2. 'g' → logprob: -15.0
    3. 'e' → logprob: -18.0
    4. '}' → logprob: -19.625
    5. ' f' → logprob: -19.875
    6. '```' → logprob: -20.25
    7. '	f' → logprob: -21.0
    8. ''f' → logprob: -21.125
    9. 'F' → logprob: -21.375
    10. '
' → logprob: -21.5

Token 687: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020064231008291245
    2. '}' → logprob: -4.270064353942871
    3. ')' → logprob: -5.895064353942871
    4. '},' → logprob: -6.395064353942871
    5. '})' → logprob: -7.145064353942871
    6. ' ,' → logprob: -8.520064353942871
    7. 'f' → logprob: -8.770064353942871
    8. '}')' → logprob: -8.770064353942871
    9. ')}' → logprob: -9.645064353942871
    10. ',f' → logprob: -10.520064353942871

Token 688: ' speed' (ID: 7733)
  Prédit: ' speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' speed' → logprob: -0.018153687939047813
    2. 'speed' → logprob: -4.018153667449951
    3. '	speed' → logprob: -13.64315414428711
    4. ' V' → logprob: -14.51815414428711
    5. ' velocity' → logprob: -14.51815414428711
    6. ' vel' → logprob: -15.26815414428711
    7. ' status' → logprob: -15.39315414428711
    8. 'spd' → logprob: -16.01815414428711
    9. 'vel' → logprob: -16.26815414428711
    10. '.speed' → logprob: -16.64315414428711

Token 689: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.039597924798727036
    2. '=' → logprob: -3.414597988128662
    3. '=}' → logprob: -5.289597988128662
    4. '}' → logprob: -7.289597988128662
    5. '{' → logprob: -9.164597511291504
    6. ')' → logprob: -10.164597511291504
    7. ')}' → logprob: -10.789597511291504
    8. '=f' → logprob: -11.414597511291504
    9. '={
' → logprob: -11.664597511291504
    10. '=self' → logprob: -12.164597511291504

Token 690: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4751704931259155
    2. '{' → logprob: -0.9751704931259155
    3. ' self' → logprob: -7.475170612335205
    4. '0' → logprob: -7.600170612335205
    5. ' {' → logprob: -11.100170135498047
    6. 'f' → logprob: -11.850170135498047
    7. '.' → logprob: -13.600170135498047
    8. ' ' → logprob: -14.100170135498047
    9. '}' → logprob: -15.225170135498047
    10. '{s' → logprob: -15.225170135498047

Token 691: '.speed' (ID: 54856)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06442775577306747
    2. ':.' → logprob: -2.8144278526306152
    3. '.speed' → logprob: -6.814427852630615
    4. '.pos' → logprob: -7.689427852630615
    5. '=.' → logprob: -7.689427852630615
    6. '.s' → logprob: -9.814427375793457
    7. '.max' → logprob: -9.814427375793457
    8. '.value' → logprob: -10.314427375793457
    9. '=' → logprob: -10.314427375793457
    10. '.float' → logprob: -10.439427375793457

Token 692: ':.' (ID: 27474)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '})' → logprob: -0.45166048407554626
    2. '}' → logprob: -1.3266605138778687
    3. ')' → logprob: -2.701660394668579
    4. 'f' → logprob: -3.826660394668579
    5. '},' → logprob: -5.701660633087158
    6. ')}' → logprob: -6.076660633087158
    7. ',' → logprob: -6.201660633087158
    8. '}')' → logprob: -7.451660633087158
    9. '.' → logprob: -7.951660633087158
    10. ',f' → logprob: -8.95166015625

Token 693: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.01301856990903616
    2. 'f' → logprob: -4.513018608093262
    3. '2' → logprob: -6.263018608093262
    4. '3' → logprob: -10.763018608093262
    5. '1' → logprob: -10.763018608093262
    6. '0' → logprob: -11.388018608093262
    7. '```' → logprob: -12.138018608093262
    8. ' ' → logprob: -13.013018608093262
    9. '{' → logprob: -14.513018608093262
    10. 'float' → logprob: -14.638018608093262

Token 694: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.128163257315464e-07
    2. '}' → logprob: -15.75
    3. 'ff' → logprob: -17.375
    4. ' f' → logprob: -17.5
    5. '
' → logprob: -17.875
    6. '```' → logprob: -18.125
    7. ':f' → logprob: -18.25
    8. 'fff' → logprob: -18.375
    9. '{' → logprob: -18.375
    10. '	f' → logprob: -18.625

Token 695: '},' (ID: 4180)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035667259246110916
    2. ')'' → logprob: -3.6606671810150146
    3. ',' → logprob: -5.160667419433594
    4. '}' → logprob: -6.285667419433594
    5. '})' → logprob: -7.410667419433594
    6. ')}' → logprob: -7.660667419433594
    7. '}')' → logprob: -8.160667419433594
    8. '}'' → logprob: -8.535667419433594
    9. '')' → logprob: -9.535667419433594
    10. ' )' → logprob: -9.785667419433594

Token 696: ' vmax' (ID: 195212)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.09469342976808548
    2. ' done' → logprob: -2.469693422317505
    3. 'waiting' → logprob: -5.469693660736084
    4. 'wait' → logprob: -6.969693660736084
    5. ' waiting' → logprob: -7.719693660736084
    6. ' wait' → logprob: -9.594693183898926
    7. 'level' → logprob: -10.469693183898926
    8. 'f' → logprob: -12.094693183898926
    9. '	done' → logprob: -12.344693183898926
    10. 'status' → logprob: -12.344693183898926

Token 697: '={' (ID: 1693)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.0624436140060425
    2. '})' → logprob: -1.0624436140060425
    3. '=' → logprob: -1.8124436140060425
    4. ')' → logprob: -2.437443733215332
    5. ')}' → logprob: -3.937443733215332
    6. ',' → logprob: -4.187443733215332
    7. '}')' → logprob: -4.187443733215332
    8. '={' → logprob: -6.062443733215332
    9. '=}' → logprob: -6.187443733215332
    10. '=True' → logprob: -6.312443733215332

Token 698: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16023468971252441
    2. '{' → logprob: -1.9102346897125244
    3. ' self' → logprob: -11.535234451293945
    4. 'f' → logprob: -14.785234451293945
    5. ' {' → logprob: -15.910234451293945
    6. '{
' → logprob: -16.785234451293945
    7. '
' → logprob: -17.035234451293945
    8. '	self' → logprob: -17.535234451293945
    9. '   ' → logprob: -17.660234451293945
    10. '0' → logprob: -17.910234451293945

Token 699: '.V' (ID: 5970)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.5693638324737549
    2. 'max' → logprob: -1.1943638324737549
    3. ':.' → logprob: -2.069363832473755
    4. ':max' → logprob: -5.819363594055176
    5. '.Max' → logprob: -7.194363594055176
    6. '_max' → logprob: -7.194363594055176
    7. '.MAX' → logprob: -8.694363594055176
    8. '})' → logprob: -9.319363594055176
    9. 'Max' → logprob: -10.194363594055176
    10. '}' → logprob: -10.444363594055176

Token 700: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.038043901324272156
    2. 'ax' → logprob: -3.288043975830078
    3. '{' → logprob: -14.538043975830078
    4. ' max' → logprob: -14.538043975830078
    5. '_max' → logprob: -15.288043975830078
    6. '}' → logprob: -15.288043975830078
    7. ')' → logprob: -15.663043975830078
    8. '
' → logprob: -16.038043975830078
    9. 'm' → logprob: -16.413043975830078
    10. 'Max' → logprob: -16.538043975830078

Token 701: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37906262278556824
    2. '}' → logprob: -2.1290626525878906
    3. '})' → logprob: -2.3790626525878906
    4. ')' → logprob: -2.7540626525878906
    5. '}')' → logprob: -3.8790626525878906
    6. ')}' → logprob: -4.254062652587891
    7. '},' → logprob: -5.504062652587891
    8. '}',' → logprob: -7.629062652587891
    9. '),' → logprob: -8.00406265258789
    10. '}'' → logprob: -9.00406265258789

Token 702: ' done' (ID: 4167)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.08458942174911499
    2. ' done' → logprob: -2.5845894813537598
    3. 'waiting' → logprob: -5.45958948135376
    4. 'wait' → logprob: -7.20958948135376
    5. ' waiting' → logprob: -7.45958948135376
    6. ' wait' → logprob: -9.584589004516602
    7. 'pos' → logprob: -11.709589004516602
    8. ')' → logprob: -11.834589004516602
    9. 'max' → logprob: -12.459589004516602
    10. 'level' → logprob: -12.834589004516602

Token 703: '={' (ID: 1693)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03659537434577942
    2. '=True' → logprob: -3.411595344543457
    3. '=False' → logprob: -7.161595344543457
    4. '})' → logprob: -7.536595344543457
    5. '}' → logprob: -7.786595344543457
    6. ')}' → logprob: -8.036595344543457
    7. '')' → logprob: -8.036595344543457
    8. '}')' → logprob: -8.786595344543457
    9. ')>' → logprob: -8.911595344543457
    10. ',' → logprob: -9.536595344543457

Token 704: 'self' (ID: 1156)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.9796775579452515
    2. 'self' → logprob: -1.2296775579452515
    3. 'False' → logprob: -1.2296775579452515
    4. '{' → logprob: -3.229677677154541
    5. '}' → logprob: -8.854677200317383
    6. '})' → logprob: -11.354677200317383
    7. '')' → logprob: -11.604677200317383
    8. ')}' → logprob: -11.854677200317383
    9. '{}' → logprob: -11.854677200317383
    10. ')' → logprob: -11.979677200317383

Token 705: '.done' (ID: 64548)
  Prédit: '.done'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.done' → logprob: -0.03509572148323059
    2. '})' → logprob: -4.410095691680908
    3. '.completed' → logprob: -4.910095691680908
    4. '.wait' → logprob: -5.410095691680908
    5. '.' → logprob: -5.660095691680908
    6. ')' → logprob: -5.910095691680908
    7. '}' → logprob: -6.285095691680908
    8. '.Done' → logprob: -7.285095691680908
    9. '=True' → logprob: -7.785095691680908
    10. 'done' → logprob: -8.410096168518066

Token 706: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05802609771490097
    2. ',' → logprob: -3.308026075363159
    3. '})' → logprob: -4.183026313781738
    4. '}' → logprob: -5.933026313781738
    5. ')}' → logprob: -6.808026313781738
    6. ')>' → logprob: -7.683026313781738
    7. '')' → logprob: -9.058026313781738
    8. '}')' → logprob: -9.558026313781738
    9. '))' → logprob: -9.808026313781738
    10. '>)' → logprob: -10.808026313781738

Token 707: ''


' (ID: 58266)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 708: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22935685515403748
    2. 'class' → logprob: -2.3543567657470703
    3. '<|end|>' → logprob: -2.4793567657470703
    4. '<|end|>' → logprob: -4.47935676574707
    5. '```' → logprob: -4.72935676574707
    6. '#' → logprob: -6.22935676574707
    7. 'import' → logprob: -6.60435676574707
    8. '
' → logprob: -6.97935676574707
    9. '\' → logprob: -7.85435676574707
    10. '<class' → logprob: -8.10435676574707

Token 709: ' simulate' (ID: 66687)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8766002058982849
    2. ' simulate' → logprob: -1.2516002655029297
    3. 'simulate' → logprob: -1.6266002655029297
    4. ' solve' → logprob: -3.7516002655029297
    5. ' parse' → logprob: -3.8766002655029297
    6. 'main' → logprob: -4.00160026550293
    7. ' read' → logprob: -4.50160026550293
    8. 'parse' → logprob: -4.75160026550293
    9. 'solve' → logprob: -4.75160026550293
    10. ' run' → logprob: -5.75160026550293

Token 710: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12145210802555084
    2. '():' → logprob: -2.7464520931243896
    3. '_sh' → logprob: -4.621452331542969
    4. '(G' → logprob: -5.371452331542969
    5. '_g' → logprob: -5.496452331542969
    6. '(sh' → logprob: -5.496452331542969
    7. '_step' → logprob: -5.621452331542969
    8. '(g' → logprob: -5.621452331542969
    9. '(sim' → logprob: -5.621452331542969
    10. '_' → logprob: -5.746452331542969

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008999554440379143
    2. ')' → logprob: -5.383999347686768
    3. 'G' → logprob: -6.383999347686768
    4. ',G' → logprob: -6.758999347686768
    5. '):' → logprob: -7.258999347686768
    6. ' ,' → logprob: -8.508999824523926
    7. '=' → logprob: -8.758999824523926
    8. 'Ships' → logprob: -9.008999824523926
    9. '),' → logprob: -10.008999824523926
    10. '_G' → logprob: -10.258999824523926

Token 712: ' M' (ID: 391)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6111551523208618
    2. 'M' → logprob: -1.3611551523208618
    3. 'ships' → logprob: -2.2361550331115723
    4. 'G' → logprob: -2.6111550331115723
    5. ' ships' → logprob: -5.361155033111572
    6. ' gates' → logprob: -5.611155033111572
    7. ' M' → logprob: -5.986155033111572
    8. 'Ships' → logprob: -6.611155033111572
    9. 'K' → logprob: -6.986155033111572
    10. '```' → logprob: -7.111155033111572

Token 713: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0033853515051305e-05
    2. ',G' → logprob: -10.375060081481934
    3. ')' → logprob: -11.750060081481934
    4. ',N' → logprob: -12.375060081481934
    5. ',
' → logprob: -12.500060081481934
    6. ' ,' → logprob: -12.750060081481934
    7. 'G' → logprob: -13.000060081481934
    8. '):' → logprob: -13.500060081481934
    9. '<|end|>' → logprob: -14.000060081481934
    10. ',n' → logprob: -15.000060081481934

Token 714: ' K' (ID: 658)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.10685333609580994
    2. 'ships' → logprob: -2.9818532466888428
    3. 'G' → logprob: -3.1068532466888428
    4. ' gates' → logprob: -6.356853485107422
    5. 'boats' → logprob: -7.731853485107422
    6. ' ships' → logprob: -7.856853485107422
    7. 'gate' → logprob: -8.106853485107422
    8. 'L' → logprob: -8.106853485107422
    9. 'Ships' → logprob: -8.356853485107422
    10. 'T' → logprob: -8.481853485107422

Token 715: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016706773021724075
    2. '):' → logprob: -9.000166893005371
    3. ',G' → logprob: -10.875166893005371
    4. ' ,' → logprob: -11.875166893005371
    5. ')' → logprob: -12.375166893005371
    6. ',N' → logprob: -12.875166893005371
    7. 'G' → logprob: -12.875166893005371
    8. '):
' → logprob: -13.250166893005371
    9. ',
' → logprob: -14.625166893005371
    10. ',n' → logprob: -14.750166893005371

Token 716: ' gates' (ID: 61915)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.19098834693431854
    2. 'G' → logprob: -2.565988302230835
    3. 'ships' → logprob: -2.690988302230835
    4. ' gates' → logprob: -4.065988540649414
    5. ' ships' → logprob: -5.065988540649414
    6. 'Ships' → logprob: -6.940988540649414
    7. 'boats' → logprob: -7.315988540649414
    8. '```' → logprob: -7.440988540649414
    9. 'gate' → logprob: -8.128488540649414
    10. 'sh' → logprob: -8.128488540649414

Token 717: '_data' (ID: 3537)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20286624133586884
    2. '):' → logprob: -1.7028661966323853
    3. '):
' → logprob: -7.577866077423096
    4. ')' → logprob: -7.577866077423096
    5. 's' → logprob: -9.077866554260254
    6. ',g' → logprob: -9.827866554260254
    7. '<|end|>' → logprob: -10.327866554260254
    8. ',G' → logprob: -10.577866554260254
    9. '   ' → logprob: -10.702866554260254
    10. 'G' → logprob: -10.702866554260254

Token 718: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012582694762386382
    2. '):' → logprob: -9.000125885009766
    3. ' ,' → logprob: -14.125125885009766
    4. ',g' → logprob: -14.750125885009766
    5. ',
' → logprob: -15.375125885009766
    6. ')' → logprob: -15.375125885009766
    7. ':' → logprob: -16.000125885009766
    8. ',G' → logprob: -16.500125885009766
    9. ',n' → logprob: -16.625125885009766
    10. 's' → logprob: -16.875125885009766

Token 719: ' ship' (ID: 12407)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.004023426678031683
    2. ' ships' → logprob: -5.629023551940918
    3. 'boats' → logprob: -8.004023551940918
    4. 'ship' → logprob: -9.629023551940918
    5. 'sh' → logprob: -12.004023551940918
    6. 's' → logprob: -12.879023551940918
    7. 'Ships' → logprob: -12.879023551940918
    8. '```' → logprob: -13.129023551940918
    9. 'b' → logprob: -13.504023551940918
    10. ' boats' → logprob: -13.504023551940918

Token 720: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.9054008084349334e-05
    2. '_s' → logprob: -10.500039100646973
    3. '_positions' → logprob: -11.750039100646973
    4. 'positions' → logprob: -14.250039100646973
    5. ')' → logprob: -14.375039100646973
    6. ' s' → logprob: -14.750039100646973
    7. ')s' → logprob: -14.750039100646973
    8. 'es' → logprob: -15.000039100646973
    9. 'S' → logprob: -15.125039100646973
    10. '{s' → logprob: -15.750039100646973

Token 721: 'pe' (ID: 424)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4550229012966156
    2. 'peed' → logprob: -1.580022931098938
    3. 'pe' → logprob: -1.955022931098938
    4. 'hips' → logprob: -4.830022811889648
    5. 'izes' → logprob: -5.330022811889648
    6. 'p' → logprob: -6.705022811889648
    7. 'ize' → logprob: -7.830022811889648
    8. 'im' → logprob: -7.830022811889648
    9. 'e' → logprob: -7.830022811889648
    10. 'ettings' → logprob: -7.955022811889648

Token 722: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -0.5250470638275146
    2. 'ed' → logprob: -0.9000470638275146
    3. 'cs' → logprob: -7.275047302246094
    4. 'c' → logprob: -7.400047302246094
    5. 'd' → logprob: -8.275047302246094
    6. 'ec' → logprob: -9.525047302246094
    7. '```' → logprob: -9.650047302246094
    8. 'e' → logprob: -10.275047302246094
    9. 'eed' → logprob: -10.400047302246094
    10. 'cies' → logprob: -10.525047302246094

Token 723: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005300754681229591
    2. 's' → logprob: -5.255300521850586
    3. ',
' → logprob: -10.880300521850586
    4. ' ,' → logprob: -11.130300521850586
    5. ')' → logprob: -11.755300521850586
    6. '<|end|>' → logprob: -12.755300521850586
    7. ',s' → logprob: -12.755300521850586
    8. '_,' → logprob: -12.880300521850586
    9. '[' → logprob: -13.505300521850586
    10. 'and' → logprob: -13.630300521850586

Token 724: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0989866554737091
    2. '   ' → logprob: -2.7239866256713867
    3. ':
' → logprob: -4.223986625671387
    4. '():' → logprob: -5.598986625671387
    5. '<|end|>' → logprob: -5.973986625671387
    6. '```' → logprob: -6.473986625671387
    7. '):' → logprob: -6.473986625671387
    8. 'def' → logprob: -7.223986625671387
    9. ':def' → logprob: -7.473986625671387
    10. '<|end|>' → logprob: -7.848986625671387

Token 725: ' #' (ID: 1069)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.02902285009622574
    2. '   ' → logprob: -4.404022693634033
    3. '#' (adapté à ' #') → logprob: -4.779022693634033
    4. ' gates' → logprob: -5.029022693634033
    5. '```' → logprob: -8.404023170471191
    6. ' #' → logprob: -8.904023170471191
    7. '
' → logprob: -9.029023170471191
    8. 'G' → logprob: -9.154023170471191
    9. 'ships' → logprob: -9.404023170471191
    10. '    
' → logprob: -9.529023170471191

Token 726: ' Construction' (ID: 31452)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.010133085772395134
    2. '#' → logprob: -4.760133266448975
    3. 'ships' → logprob: -6.885133266448975
    4. '   ' → logprob: -9.010132789611816
    5. ' gates' → logprob: -9.510132789611816
    6. 'time' → logprob: -9.760132789611816
    7. 'gate' → logprob: -10.010132789611816
    8. 'import' → logprob: -10.385132789611816
    9. 'from' → logprob: -10.635132789611816
    10. 'boats' → logprob: -10.760132789611816

Token 727: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20201323926448822
    2. ' des' → logprob: -1.9520132541656494
    3. 'des' → logprob: -4.07701301574707
    4. ' of' → logprob: -4.70201301574707
    5. ' =' → logprob: -4.95201301574707
    6. '=' → logprob: -5.70201301574707
    7. 'g' → logprob: -5.82701301574707
    8. '_des' → logprob: -8.32701301574707
    9. '    ' → logprob: -8.70201301574707
    10. ' de' → logprob: -8.82701301574707

Token 728: ' gates' (ID: 61915)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.03662571683526039
    2. ' gates' → logprob: -3.911625623703003
    3. 'portes' → logprob: -4.411625862121582
    4. ' portes' → logprob: -6.536625862121582
    5. 'port' → logprob: -7.536625862121582
    6. 'ports' → logprob: -7.911625862121582
    7. '#' → logprob: -8.536625862121582
    8. 'gages' → logprob: -8.911625862121582
    9. 'pass' → logprob: -8.911625862121582
    10. 'gate' → logprob: -9.036625862121582

Token 729: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5329391360282898
    2. ' =' → logprob: -1.5329391956329346
    3. ':' → logprob: -2.6579391956329346
    4. 'g' → logprob: -3.1579391956329346
    5. ' gates' → logprob: -3.2829391956329346
    6. 's' → logprob: -3.6579391956329346
    7. ':
' → logprob: -4.5329389572143555
    8. '    
' → logprob: -6.1579389572143555
    9. '=' → logprob: -6.4079389572143555
    10. '):
' → logprob: -6.6579389572143555

Token 730: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15908999741077423
    2. ' gates' → logprob: -2.409090042114258
    3. 'g' → logprob: -3.534090042114258
    4. ':' → logprob: -4.409090042114258
    5. ' =' → logprob: -4.534090042114258
    6. '    
' → logprob: -6.659090042114258
    7. ':
' → logprob: -7.159090042114258
    8. 's' → logprob: -7.284090042114258
    9. '=' → logprob: -7.909090042114258
    10. '
' → logprob: -8.034090042114258

Token 731: ' gates' (ID: 61915)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04902491718530655
    2. '   ' → logprob: -3.674024820327759
    3. ' gates' → logprob: -3.799024820327759
    4. 'gate' → logprob: -10.54902458190918
    5. '```' → logprob: -11.04902458190918
    6. '	g' → logprob: -11.92402458190918
    7. '    
' → logprob: -12.42402458190918
    8. '_g' → logprob: -12.67402458190918
    9. '       ' → logprob: -13.23652458190918
    10. ' g' → logprob: -13.23652458190918

Token 732: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408080101013184
    2. '=' → logprob: -0.9740808010101318
    3. '=[]' → logprob: -12.599081039428711
    4. '=[' → logprob: -16.09908103942871
    5. '   ' → logprob: -16.22408103942871
    6. '=[]
' → logprob: -16.84908103942871
    7. '=g' → logprob: -16.97408103942871
    8. ' ' → logprob: -17.47408103942871
    9. ':' → logprob: -17.72408103942871
    10. '[' → logprob: -18.09908103942871

Token 733: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17244693636894226
    2. '[]
' → logprob: -2.6724469661712646
    3. '[G' → logprob: -2.9224469661712646
    4. '[]' → logprob: -3.6724469661712646
    5. '[g' → logprob: -4.6724467277526855
    6. '[]

' → logprob: -7.9224467277526855
    7. ' [' → logprob: -8.047447204589844
    8. '[
' → logprob: -10.172447204589844
    9. '[class' → logprob: -12.047447204589844
    10. '[list' → logprob: -12.672447204589844

Token 734: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8439675569534302
    2. 'for' → logprob: -1.0939675569534302
    3. '   ' → logprob: -1.4689675569534302
    4. '    
' → logprob: -6.593967437744141
    5. '[
' → logprob: -6.843967437744141
    6. '[' → logprob: -6.968967437744141
    7. '	for' → logprob: -7.343967437744141
    8. ' 
' → logprob: -8.46896743774414
    9. '  
' → logprob: -8.84396743774414
    10. '
' → logprob: -9.46896743774414

Token 735: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00318163656629622
    2. ' for' → logprob: -5.753181457519531
    3. '   ' → logprob: -12.753181457519531
    4. '
' → logprob: -14.253181457519531
    5. '	for' → logprob: -14.503181457519531
    6. '    
' → logprob: -20.12818145751953
    7. ' 
' → logprob: -21.12818145751953
    8. '```' → logprob: -21.37818145751953
    9. '[' → logprob: -21.75318145751953
    10. '\t' → logprob: -22.12818145751953

Token 736: ' data' (ID: 1238)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08036547899246216
    2. ' i' → logprob: -3.0803654193878174
    3. 'data' → logprob: -3.7053654193878174
    4. ' data' → logprob: -5.9553656578063965
    5. 'gd' → logprob: -6.2053656578063965
    6. 'g' → logprob: -7.2053656578063965
    7. 'gate' → logprob: -7.8303656578063965
    8. ' gd' → logprob: -7.8303656578063965
    9. 'd' → logprob: -8.830365180969238
    10. '_i' → logprob: -8.830365180969238

Token 737: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023302895948290825
    2. 'in' → logprob: -3.7733027935028076
    3. '_' → logprob: -11.023303031921387
    4. '[' → logprob: -11.773303031921387
    5. '_in' → logprob: -12.023303031921387
    6. ' ' → logprob: -12.523303031921387
    7. '   ' → logprob: -12.523303031921387
    8. '_token' → logprob: -12.773303031921387
    9. 's' → logprob: -13.148303031921387
    10. ' =' → logprob: -13.273303031921387

Token 738: ' gates' (ID: 61915)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.002199740381911397
    2. ' gates' → logprob: -6.127199649810791
    3. 'gate' → logprob: -11.50220012664795
    4. '   ' → logprob: -12.87720012664795
    5. '[g' → logprob: -14.62720012664795
    6. '[' → logprob: -14.87720012664795
    7. '	g' → logprob: -15.25220012664795
    8. ' ' → logprob: -16.002199172973633
    9. 'range' → logprob: -16.127199172973633
    10. '  ' → logprob: -16.127199172973633

Token 739: '_data' (ID: 3537)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16740666329860687
    2. ':
' → logprob: -2.1674065589904785
    3. '_data' → logprob: -3.2924065589904785
    4. '   ' → logprob: -7.2924065589904785
    5. '):
' → logprob: -7.5424065589904785
    6. '):' → logprob: -8.417407035827637
    7. '[' → logprob: -8.542407035827637
    8. 'g' → logprob: -9.292407035827637
    9. '.split' → logprob: -9.542407035827637
    10. ')' → logprob: -9.667407035827637

Token 740: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3879421055316925
    2. ':
' → logprob: -1.1379420757293701
    3. '   ' → logprob: -7.012942314147949
    4. '       ' → logprob: -10.38794231414795
    5. '):
' → logprob: -10.38794231414795
    6. ',' → logprob: -11.13794231414795
    7. '[' → logprob: -11.13794231414795
    8. '[:-' → logprob: -11.13794231414795
    9. '[:' → logprob: -11.38794231414795
    10. ':
' → logprob: -12.13794231414795

Token 741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06244533509016037
    2. '   ' → logprob: -3.1874454021453857
    3. ':
' → logprob: -4.687445163726807
    4. 'g' → logprob: -5.937445163726807
    5. ':' → logprob: -6.187445163726807
    6. ' gates' → logprob: -6.187445163726807
    7. '):
' → logprob: -7.187445163726807
    8. ' (' → logprob: -8.187445640563965
    9. '
' → logprob: -8.312445640563965
    10. '[' → logprob: -8.437445640563965

Token 742: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.32424938678741455
    2. 'gate' → logprob: -1.4492493867874146
    3. 'X' → logprob: -3.324249267578125
    4. ' gate' → logprob: -6.199249267578125
    5. ' gates' → logprob: -6.199249267578125
    6. '   ' → logprob: -6.949249267578125
    7. ' X' → logprob: -7.699249267578125
    8. 'x' → logprob: -7.949249267578125
    9. '       ' → logprob: -8.449249267578125
    10. ' g' → logprob: -9.324249267578125

Token 743: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0281203985214233
    2. 'ates' → logprob: -1.1531203985214233
    3. '=' → logprob: -1.4031203985214233
    4. 'ate' → logprob: -2.528120517730713
    5. '=g' → logprob: -7.403120517730713
    6. 'a' → logprob: -9.278120040893555
    7. 'g' → logprob: -9.278120040893555
    8. '   ' → logprob: -10.028120040893555
    9. '.append' → logprob: -10.903120040893555
    10. '=(' → logprob: -11.528120040893555

Token 744: ' Gate' (ID: 47325)
  Prédit: 'Gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gate' → logprob: -2.339278580620885e-06
    2. ' Gate' → logprob: -13.000001907348633
    3. 'Gateway' → logprob: -23.500001907348633
    4. '   ' → logprob: -24.125001907348633
    5. '_gate' → logprob: -25.500001907348633
    6. '  ' → logprob: -27.125001907348633
    7. '
' → logprob: -27.250001907348633
    8. 'gate' → logprob: -27.250001907348633
    9. 'Gun' → logprob: -27.375001907348633
    10. ' ' → logprob: -27.500001907348633

Token 745: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0008104594890028238
    2. '(' → logprob: -7.500810623168945
    3. '(data' → logprob: -8.375810623168945
    4. '(
' → logprob: -10.875810623168945
    5. '*' → logprob: -12.125810623168945
    6. '(*)' → logprob: -13.750810623168945
    7. '(**' → logprob: -14.375810623168945
    8. '(

' → logprob: -14.500810623168945
    9. 'data' → logprob: -14.875810623168945
    10. '(*(' → logprob: -15.625810623168945

Token 746: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -9.372294698550832e-06
    2. ' data' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.500009536743164
    4. 'tuple' → logprob: -16.875009536743164
    5. '(data' → logprob: -17.250009536743164
    6. '[' → logprob: -17.375009536743164
    7. '
' → logprob: -17.625009536743164
    8. 'list' → logprob: -18.250009536743164
    9. 'g' → logprob: -18.500009536743164
    10. 'map' → logprob: -19.000009536743164

Token 747: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20143243670463562
    2. ')
' → logprob: -1.701432466506958
    3. ')
' → logprob: -10.951432228088379
    4. ' )' → logprob: -15.076432228088379
    5. ')`
' → logprob: -15.201432228088379
    6. ' )
' → logprob: -15.326432228088379
    7. '       ' → logprob: -15.326432228088379
    8. '   ' → logprob: -15.451432228088379
    9. '),' → logprob: -15.826432228088379
    10. ')

' → logprob: -15.826432228088379

Token 748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012273734901100397
    2. 'g' → logprob: -6.876227378845215
    3. '   ' → logprob: -9.251227378845215
    4. '<|end|>' → logprob: -10.251227378845215
    5. ',' → logprob: -11.251227378845215
    6. ',g' → logprob: -11.751227378845215
    7. '	g' → logprob: -12.251227378845215
    8. ' g' → logprob: -12.501227378845215
    9. '           ' → logprob: -12.501227378845215
    10. ')' → logprob: -12.501227378845215

Token 749: ' gates' (ID: 61915)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -5.657694418914616e-05
    2. ' gates' → logprob: -10.375056266784668
    3. '       ' → logprob: -11.000056266784668
    4. '   ' → logprob: -11.750056266784668
    5. '	g' → logprob: -15.250056266784668
    6. ' g' → logprob: -16.125057220458984
    7. 'gate' → logprob: -16.250057220458984
    8. '.g' → logprob: -16.375057220458984
    9. '
' → logprob: -16.750057220458984
    10. 'gages' → logprob: -17.375057220458984

Token 750: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00043257648940198123
    2. '.' → logprob: -7.75043249130249
    3. 's' → logprob: -13.625432968139648
    4. 'append' → logprob: -15.625432968139648
    5. '.app' → logprob: -15.750432968139648
    6. '.push' → logprob: -16.37543296813965
    7. '.Append' → logprob: -16.87543296813965
    8. ').' → logprob: -17.00043296813965
    9. '.ap' → logprob: -17.00043296813965
    10. '.s' → logprob: -17.75043296813965

Token 751: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -5.512236498361744e-07
    2. 'g' → logprob: -14.625000953674316
    3. '(' → logprob: -18.0
    4. '(
' → logprob: -22.0
    5. ' (' → logprob: -22.625
    6. ' g' → logprob: -22.625
    7. '	g' → logprob: -23.125
    8. '=g' → logprob: -23.25
    9. ',g' → logprob: -23.375
    10. '[g' → logprob: -23.75

Token 752: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001426346570951864
    2. ')
' → logprob: -8.875143051147461
    3. ' )' → logprob: -13.375143051147461
    4. ')

' → logprob: -14.875143051147461
    5. '   ' → logprob: -15.375143051147461
    6. ')
' → logprob: -15.500143051147461
    7. '
' → logprob: -15.750143051147461
    8. ')n' → logprob: -16.25014305114746
    9. '))' → logprob: -17.25014305114746
    10. '       ' → logprob: -17.25014305114746

Token 753: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5523098111152649
    2. '   ' → logprob: -0.9273098111152649
    3. '    
' → logprob: -3.80230975151062
    4. ' ships' → logprob: -5.677309989929199
    5. 'ships' → logprob: -7.052309989929199
    6. '```' → logprob: -7.427309989929199
    7. '#' → logprob: -7.802309989929199
    8. ' ship' → logprob: -7.927309989929199
    9. ' for' → logprob: -8.9273099899292
    10. 'for' → logprob: -8.9273099899292

Token 754: ' #' (ID: 1069)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.08113895356655121
    2. '#' (adapté à ' #') → logprob: -2.581138849258423
    3. '   ' → logprob: -7.081139087677002
    4. 'for' → logprob: -7.331139087677002
    5. ' ships' → logprob: -8.831138610839844
    6. 'boats' → logprob: -9.206138610839844
    7. 'time' → logprob: -9.456138610839844
    8. 'positions' → logprob: -10.081138610839844
    9. '```' → logprob: -10.081138610839844
    10. ' #' → logprob: -10.081138610839844

Token 755: ' Initial' (ID: 9209)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.04926382005214691
    2. '#' → logprob: -3.0492637157440186
    3. 'boats' → logprob: -8.549263954162598
    4. ' ships' → logprob: -9.174263954162598
    5. 'ship' → logprob: -9.799263954162598
    6. 'time' → logprob: -9.924263954162598
    7. 'fleet' → logprob: -10.049263954162598
    8. 'Ships' → logprob: -10.299263954162598
    9. 'v' → logprob: -10.924263954162598
    10. 'positions' → logprob: -10.924263954162598

Token 756: ' positions' (ID: 15897)
  Prédit: 'isation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.6952748894691467
    2. 'ization' → logprob: -0.8202748894691467
    3. 'ize' → logprob: -3.070274829864502
    4. 'ement' → logprob: -5.445274829864502
    5. 'izer' → logprob: -6.570274829864502
    6. 'iser' → logprob: -6.695274829864502
    7. '#' → logprob: -6.820274829864502
    8. 'position' → logprob: -6.820274829864502
    9. 'state' → logprob: -7.070274829864502
    10. 'izing' → logprob: -7.320274829864502

Token 757: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11321508139371872
    2. '=' → logprob: -2.7382149696350098
    3. '   ' → logprob: -4.23821496963501
    4. 'ships' → logprob: -4.23821496963501
    5. 's' → logprob: -4.86321496963501
    6. ':' → logprob: -5.98821496963501
    7. ' ships' → logprob: -6.86321496963501
    8. 'for' → logprob: -8.113215446472168
    9. '=[]' → logprob: -8.113215446472168
    10. ',' → logprob: -8.238215446472168

Token 758: ' bate' (ID: 39378)
  Prédit: ' ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ships' → logprob: -0.49160656332969666
    2. 'ships' → logprob: -0.991606593132019
    3. 'v' → logprob: -5.866606712341309
    4. 'ship' → logprob: -5.866606712341309
    5. 'boats' → logprob: -6.366606712341309
    6. 'b' → logprob: -6.491606712341309
    7. 'nav' → logprob: -6.616606712341309
    8. ' nav' → logprob: -7.179106712341309
    9. ' v' → logprob: -7.241606712341309
    10. ' ship' → logprob: -7.304106712341309

Token 759: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -3.531315314830863e-06
    2. 'au' → logprob: -13.500003814697266
    3. 'ux' → logprob: -13.625003814697266
    4. 'a' → logprob: -14.250003814697266
    5. '```' → logprob: -16.875003814697266
    6. 'eux' → logprob: -17.000003814697266
    7. 'e' → logprob: -17.250003814697266
    8. 'Aux' → logprob: -17.875003814697266
    9. '_aux' → logprob: -18.000003814697266
    10. 'aus' → logprob: -18.125003814697266

Token 760: ':
' (ID: 734)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.2046578824520111
    2. ' ships' → logprob: -1.8296579122543335
    3. '
' → logprob: -4.329658031463623
    4. '   ' → logprob: -4.954658031463623
    5. '    
' → logprob: -6.579658031463623
    6. 'positions' → logprob: -7.204658031463623
    7. 's' → logprob: -7.454658031463623
    8. ' =' → logprob: -7.954658031463623
    9. 'ship' → logprob: -8.079657554626465
    10. 'boats' → logprob: -8.704657554626465

Token 761: '   ' (ID: 271)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.012170777656137943
    2. ' ships' → logprob: -4.512170791625977
    3. '   ' → logprob: -7.262170791625977
    4. 'positions' → logprob: -8.262170791625977
    5. 'boats' → logprob: -9.012170791625977
    6. '```' → logprob: -11.637170791625977
    7. '    
' → logprob: -11.762170791625977
    8. 'ship' → logprob: -11.887170791625977
    9. ' positions' → logprob: -12.262170791625977
    10. 'Ships' → logprob: -12.762170791625977

Token 762: ' #' (ID: 1069)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.00041756415157578886
    2. 'positions' → logprob: -7.875417709350586
    3. 'boats' → logprob: -10.875417709350586
    4. ' ships' → logprob: -11.250417709350586
    5. 'ship' → logprob: -13.875417709350586
    6. 'pos' → logprob: -13.875417709350586
    7. '```' → logprob: -14.000417709350586
    8. '   ' → logprob: -14.375417709350586
    9. 'position' → logprob: -14.750417709350586
    10. '#' (adapté à ' #') → logprob: -14.875417709350586

Token 763: ' En' (ID: 2130)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.01291878242045641
    2. 'positions' → logprob: -4.512918949127197
    3. ' ships' → logprob: -6.637918949127197
    4. 'boats' → logprob: -8.637918472290039
    5. '   ' → logprob: -8.887918472290039
    6. 'ship' → logprob: -9.137918472290039
    7. 'pos' → logprob: -9.637918472290039
    8. ' positions' → logprob: -10.887918472290039
    9. '#' → logprob: -11.012918472290039
    10. 'position' → logprob: -11.762918472290039

Token 764: 'oncé' (ID: 59071)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3170114755630493
    2. 'positions' → logprob: -1.8170114755630493
    3. 'range' → logprob: -1.9420114755630493
    4. ' range' → logprob: -2.5670113563537598
    5. 'pos' → logprob: -2.5670113563537598
    6. ' positions' → logprob: -3.0670113563537598
    7. 'for' → logprob: -3.8170113563537598
    8. ' pos' → logprob: -3.9420113563537598
    9. ' [' → logprob: -3.9420113563537598
    10. 'ships' → logprob: -4.69201135635376

Token 765: ' :' (ID: 712)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.381417155265808
    2. 'positions' → logprob: -1.381417155265808
    3. 'ships' → logprob: -2.1314172744750977
    4. 'for' → logprob: -2.6314172744750977
    5. ' positions' → logprob: -2.7564172744750977
    6. ' ships' → logprob: -3.1314172744750977
    7. 'pos' → logprob: -3.5064172744750977
    8. ':' → logprob: -3.6314172744750977
    9. ' =' → logprob: -3.6314172744750977
    10. 's' → logprob: -3.7564172744750977

Token 766: ' bate' (ID: 39378)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.6020383834838867
    2. ' ships' → logprob: -0.9770383834838867
    3. 'positions' → logprob: -3.3520383834838867
    4. ' positions' → logprob: -4.477038383483887
    5. 'ship' → logprob: -4.602038383483887
    6. ' ship' → logprob: -4.852038383483887
    7. 'boats' → logprob: -5.602038383483887
    8. 'for' → logprob: -6.102038383483887
    9. '```' → logprob: -6.852038383483887
    10. 'pos' → logprob: -6.852038383483887

Token 767: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.0016985106049105525
    2. 'e' → logprob: -7.3766984939575195
    3. 'au' → logprob: -8.12669849395752
    4. 'eux' → logprob: -8.25169849395752
    5. 'ux' → logprob: -8.37669849395752
    6. '```' → logprob: -8.62669849395752
    7. 'a' → logprob: -9.62669849395752
    8. '``' → logprob: -11.62669849395752
    9. 't' → logprob: -12.62669849395752
    10. '

' → logprob: -12.75169849395752

Token 768: ' plac' (ID: 7097)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1027754619717598
    2. '_positions' → logprob: -3.7277755737304688
    3. 's' → logprob: -4.227775573730469
    4. '=' → logprob: -4.602775573730469
    5. 'positions' → logprob: -5.102775573730469
    6. 'position' → logprob: -5.227775573730469
    7. '_pos' → logprob: -5.352775573730469
    8. '_s' → logprob: -5.352775573730469
    9. 'pos' → logprob: -5.602775573730469
    10. '_position' → logprob: -5.852775573730469

Token 769: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.001502717612311244
    2. 'é' → logprob: -7.001502513885498
    3. 'es' → logprob: -7.751502513885498
    4. 's' → logprob: -9.751502990722656
    5. 'e' → logprob: -10.376502990722656
    6. 'ées' → logprob: -10.376502990722656
    7. 'er' → logprob: -10.751502990722656
    8. 'ès' → logprob: -12.126502990722656
    9. '```' → logprob: -13.126502990722656
    10. '=' → logprob: -13.251502990722656

Token 770: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5834685564041138
    2. ' au' → logprob: -2.083468437194824
    3. 'à' → logprob: -2.458468437194824
    4. ' at' → logprob: -3.083468437194824
    5. 'sur' → logprob: -3.333468437194824
    6. 'en' → logprob: -3.458468437194824
    7. 'au' → logprob: -3.583468437194824
    8. ' en' → logprob: -3.708468437194824
    9. ' aux' → logprob: -4.083468437194824
    10. ' sur' → logprob: -4.333468437194824

Token 771: ' l' (ID: 305)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.588473379611969
    2. '0' → logprob: -0.963473379611969
    3. '-' → logprob: -3.838473320007324
    4. 'position' → logprob: -4.463473320007324
    5. 'la' → logprob: -5.213473320007324
    6. '[-' → logprob: -5.463473320007324
    7. 'x' → logprob: -5.713473320007324
    8. 'l' → logprob: -5.838473320007324
    9. ' [' → logprob: -6.088473320007324
    10. 'pos' → logprob: -6.213473320007324

Token 772: ''origine' (ID: 89355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3609658181667328
    2. '0' → logprob: -2.1109657287597656
    3. 'e' → logprob: -3.8609657287597656
    4. 'position' → logprob: -3.8609657287597656
    5. ''entrée' → logprob: -3.9859657287597656
    6. 'est' → logprob: -4.110965728759766
    7. 'x' → logprob: -4.235965728759766
    8. ''extérieur' → logprob: -4.485965728759766
    9. 'km' → logprob: -4.735965728759766
    10. ''' → logprob: -5.110965728759766

Token 773: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19415326416492462
    2. 'ships' → logprob: -2.319153308868408
    3. ' ships' → logprob: -2.694153308868408
    4. '
' → logprob: -5.069153308868408
    5. '    
' → logprob: -6.319153308868408
    6. 's' → logprob: -7.319153308868408
    7. ',' → logprob: -7.944153308868408
    8. 'for' → logprob: -8.31915283203125
    9. 'boats' → logprob: -8.81915283203125
    10. '  ' → logprob: -9.06915283203125

Token 774: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43363454937934875
    2. ' (' → logprob: -1.4336345195770264
    3. '0' → logprob: -2.5586345195770264
    4. ',' → logprob: -3.6836345195770264
    5. ' =' → logprob: -5.3086347579956055
    6. 'for' → logprob: -6.0586347579956055
    7. '=' → logprob: -7.3086347579956055
    8. ' for' → logprob: -8.183634757995605
    9. '(ship' → logprob: -8.183634757995605
    10. '[' → logprob: -8.308634757995605

Token 775: ' km' (ID: 8571)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5943813920021057
    2. '   ' → logprob: -1.094381332397461
    3. 's' → logprob: -2.844381332397461
    4. 'ships' → logprob: -4.219381332397461
    5. ' ships' → logprob: -4.344381332397461
    6. ',' → logprob: -4.719381332397461
    7. '    
' → logprob: -5.344381332397461
    8. ' for' → logprob: -5.594381332397461
    9. 'for' → logprob: -6.094381332397461
    10. '  
' → logprob: -6.844381332397461

Token 776: ' (' (ID: 350)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.5125468969345093
    2. '   ' → logprob: -1.3875468969345093
    3. ' ships' → logprob: -2.512547016143799
    4. '
' → logprob: -3.012547016143799
    5. '    
' → logprob: -4.012547016143799
    6. 's' → logprob: -6.512547016143799
    7. 'Ships' → logprob: -8.13754653930664
    8. '   
' → logprob: -8.63754653930664
    9. 'boats' → logprob: -9.01254653930664
    10. '```' → logprob: -9.38754653930664

Token 777: 'prem' (ID: 76294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15878625214099884
    2. ',' → logprob: -2.2837862968444824
    3. ' )' → logprob: -3.4087862968444824
    4. ' ,' → logprob: -5.033786296844482
    5. '),' → logprob: -5.783786296844482
    6. ' avec' → logprob: -7.908786296844482
    7. ').' → logprob: -8.283785820007324
    8. '0' → logprob: -8.283785820007324
    9. ' ),' → logprob: -8.908785820007324
    10. ' au' → logprob: -9.158785820007324

Token 778: 'ier' (ID: 905)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.12742829322814941
    2. 'ier' → logprob: -2.1274282932281494
    3. 'iers' → logprob: -8.37742805480957
    4. 'i' → logprob: -8.62742805480957
    5. 'ières' → logprob: -9.50242805480957
    6. 'iere' → logprob: -12.25242805480957
    7. '   ' → logprob: -13.12742805480957
    8. '```' → logprob: -13.50242805480957
    9. '1' → logprob: -13.62742805480957
    10. 'ième' → logprob: -13.62742805480957

Token 779: ' bateau' (ID: 123794)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1998376846313477
    2. 'token' → logprob: -1.6998376846313477
    3. ' bateau' → logprob: -1.6998376846313477
    4. ' token' → logprob: -2.6998376846313477
    5. 'bate' → logprob: -3.5748376846313477
    6. '=' → logprob: -3.5748376846313477
    7. ' line' → logprob: -3.6998376846313477
    8. 'position' → logprob: -3.9498376846313477
    9. ' position' → logprob: -4.324837684631348
    10. ',' → logprob: -4.449837684631348

Token 780: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05121976509690285
    2. '),' → logprob: -3.3012197017669678
    3. ',' → logprob: -4.801219940185547
    4. ' )' → logprob: -6.301219940185547
    5. '<|end|>' → logprob: -6.676219940185547
    6. ').' → logprob: -6.801219940185547
    7. ' ),' → logprob: -9.801219940185547
    8. ' et' → logprob: -9.801219940185547
    9. ')
' → logprob: -9.926219940185547
    10. ' au' → logprob: -9.926219940185547

Token 781: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.4308188259601593
    2. ' et' → logprob: -1.555818796157837
    3. 'et' → logprob: -3.555818796157837
    4. ' then' → logprob: -4.055819034576416
    5. 's' → logprob: -4.555819034576416
    6. ',' → logprob: -5.055819034576416
    7. ' ensuite' → logprob: -5.055819034576416
    8. ' ships' → logprob: -5.180819034576416
    9. 'ships' → logprob: -5.305819034576416
    10. ' avec' → logprob: -5.430819034576416

Token 782: ' espac' (ID: 195747)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.6872763633728027
    2. ' espac' → logprob: -1.8122763633728027
    3. ' spaced' → logprob: -2.0622763633728027
    4. 'esp' → logprob: -2.3122763633728027
    5. '[' → logprob: -2.4372763633728027
    6. ' à' → logprob: -2.6872763633728027
    7. ' ' → logprob: -3.3122763633728027
    8. '0' → logprob: -3.3122763633728027
    9. ' esp' → logprob: -3.5622763633728027
    10. 'increment' → logprob: -4.062276363372803

Token 783: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.03304072469472885
    2. 'es' → logprob: -3.783040761947632
    3. 'é' → logprob: -5.408040523529053
    4. 'e' → logprob: -6.283040523529053
    5. 'ées' → logprob: -6.533040523529053
    6. 'ement' → logprob: -6.783040523529053
    7. 'ed' → logprob: -8.533041000366211
    8. 'ée' → logprob: -9.283041000366211
    9. '```' → logprob: -9.283041000366211
    10. 'ément' → logprob: -9.658041000366211

Token 784: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5803885459899902
    2. ' de' → logprob: -1.0803885459899902
    3. 'd' → logprob: -3.3303885459899902
    4. 'de' → logprob: -4.20538854598999
    5. '=' → logprob: -4.83038854598999
    6. '100' → logprob: -4.83038854598999
    7. '0' → logprob: -5.08038854598999
    8. ' =' → logprob: -5.33038854598999
    9. ' by' → logprob: -5.45538854598999
    10. ' of' → logprob: -5.70538854598999

Token 785: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7262405753135681
    2. '1' → logprob: -1.226240634918213
    3. ' ' → logprob: -2.101240634918213
    4. 'EPS' → logprob: -2.976240634918213
    5. ' EPS' → logprob: -4.101240634918213
    6. '10' → logprob: -4.726240634918213
    7. ' (' → logprob: -4.726240634918213
    8. '100' → logprob: -5.101240634918213
    9. '(' → logprob: -5.976240634918213
    10. '5' → logprob: -6.226240634918213

Token 786: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21294552087783813
    2. '1' → logprob: -1.8379454612731934
    3. '100' → logprob: -4.962945461273193
    4. '2' → logprob: -5.087945461273193
    5. '10' → logprob: -5.087945461273193
    6. '5' → logprob: -5.462945461273193
    7. '(' → logprob: -6.087945461273193
    8. ' ' → logprob: -6.587945461273193
    9. 'EPS' → logprob: -6.837945461273193
    10. '50' → logprob: -6.962945461273193

Token 787: 'km' (ID: 15284)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3899155259132385
    2. 'e' → logprob: -2.0149154663085938
    3. '_' → logprob: -2.5149154663085938
    4. '0' → logprob: -3.5149154663085938
    5. ' km' → logprob: -4.014915466308594
    6. '<|end|>' → logprob: -4.389915466308594
    7. ' ' → logprob: -4.639915466308594
    8. ' 
' → logprob: -5.014915466308594
    9. 'km' → logprob: -5.264915466308594
    10. '000' → logprob: -5.264915466308594

Token 788: ' en' (ID: 469)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9830440878868103
    2. ',' → logprob: -1.483044147491455
    3. 'for' → logprob: -1.608044147491455
    4. ' for' → logprob: -2.483044147491455
    5. '<|end|>' → logprob: -2.733044147491455
    6. '   ' → logprob: -4.233044147491455
    7. ',
' → logprob: -4.483044147491455
    8. '    
' → logprob: -4.733044147491455
    9. ' 
' → logprob: -5.358044147491455
    10. '<|end|>' → logprob: -6.108044147491455

Token 789: ' arrière' (ID: 100451)
  Prédit: 'aval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aval' → logprob: -0.3269011080265045
    2. 'avant' → logprob: -2.0769011974334717
    3. 'am' → logprob: -2.8269011974334717
    4. 'avance' → logprob: -3.8269011974334717
    5. '```' → logprob: -4.326900959014893
    6. ' arrière' → logprob: -4.826900959014893
    7. ' am' → logprob: -4.951900959014893
    8. 'position' → logprob: -5.326900959014893
    9. 'ligne' → logprob: -5.701900959014893
    10. 'entrée' → logprob: -5.701900959014893

Token 790: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46854808926582336
    2. '   ' → logprob: -2.218548059463501
    3. '
' → logprob: -2.843548059463501
    4. '.' → logprob: -2.968548059463501
    5. 'for' → logprob: -2.968548059463501
    6. ' for' → logprob: -3.343548059463501
    7. '<|end|>' → logprob: -3.843548059463501
    8. 's' → logprob: -4.21854829788208
    9. ' ,' → logprob: -4.71854829788208
    10. ',
' → logprob: -5.09354829788208

Token 791: 'vers' (ID: 3674)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0928524732589722
    2. ' for' → logprob: -1.5928524732589722
    3. ')' → logprob: -1.8428524732589722
    4. '1' → logprob: -2.5928525924682617
    5. '0' → logprob: -2.8428525924682617
    6. 'range' → logprob: -3.2178525924682617
    7. ' range' → logprob: -3.4678525924682617
    8. ' i' → logprob: -3.7178525924682617
    9. ' ' → logprob: -4.092852592468262
    10. '<|end|>' → logprob: -4.217852592468262

Token 792: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00810516718775034
    2. 'la' → logprob: -5.133105278015137
    3. '-l' → logprob: -7.008105278015137
    4. 'O' → logprob: -7.883105278015137
    5. 'le' → logprob: -8.383105278015137
    6. '-' → logprob: -8.758105278015137
    7. 'lac' → logprob: -9.383105278015137
    8. '```' → logprob: -9.508105278015137
    9. ' l' → logprob: -10.258105278015137
    10. '0' → logprob: -10.383105278015137

Token 793: ''ou' (ID: 68966)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.3304086923599243
    2. 'st' → logprob: -1.3304086923599243
    3. 'e' → logprob: -4.955408573150635
    4. ''ou' → logprob: -5.580408573150635
    5. ''est' → logprob: -6.205408573150635
    6. 'ou' → logprob: -7.705408573150635
    7. 'o' → logprob: -7.955408573150635
    8. '0' → logprob: -7.955408573150635
    9. '2' → logprob: -8.205409049987793
    10. 'a' → logprob: -8.455409049987793

Token 794: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -7.111979357432574e-05
    2. 'es' → logprob: -9.87507152557373
    3. 'e' → logprob: -11.25007152557373
    4. 'uest' → logprob: -13.50007152557373
    5. 'et' → logprob: -13.87507152557373
    6. '```' → logprob: -14.12507152557373
    7. 'east' → logprob: -14.75007152557373
    8. '[' → logprob: -15.25007152557373
    9. '

' → logprob: -15.25007152557373
    10. '#' → logprob: -15.37507152557373

Token 795: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020241934806108475
    2. ',' → logprob: -4.645241737365723
    3. '),' → logprob: -4.895241737365723
    4. ' )' → logprob: -7.020241737365723
    5. ')
' → logprob: -7.270241737365723
    6. ' for' → logprob: -8.020241737365723
    7. ').' → logprob: -8.395241737365723
    8. '   ' → logprob: -8.520241737365723
    9. 'for' → logprob: -8.895241737365723
    10. '<|end|>' → logprob: -9.395241737365723

Token 796: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025597896426916122
    2. '
' → logprob: -4.150598049163818
    3. ' for' → logprob: -5.900598049163818
    4. ',' → logprob: -6.275598049163818
    5. 'for' → logprob: -6.400598049163818
    6. '    
' → logprob: -6.400598049163818
    7. '```' → logprob: -7.775598049163818
    8. '#' → logprob: -8.65059757232666
    9. 'positions' → logprob: -8.90059757232666
    10. '<|end|>' → logprob: -8.90059757232666

Token 797: ' #' (ID: 1069)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.6925879716873169
    2. '   ' → logprob: -1.567587971687317
    3. 'positions' → logprob: -2.3175878524780273
    4. ' ships' → logprob: -2.3175878524780273
    5. '
' → logprob: -3.3175878524780273
    6. '    
' → logprob: -3.9425878524780273
    7. 'for' → logprob: -4.442587852478027
    8. ' positions' → logprob: -4.442587852478027
    9. 'boats' → logprob: -5.567587852478027
    10. 'pos' → logprob: -6.192587852478027

Token 798: ' Donc' (ID: 88837)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.702974796295166
    2. ' ships' → logprob: -1.077974796295166
    3. 'for' → logprob: -2.827974796295166
    4. 'positions' → logprob: -3.202974796295166
    5. ' positions' → logprob: -3.577974796295166
    6. ' for' → logprob: -4.202974796295166
    7. '   ' → logprob: -4.827974796295166
    8. 'ship' → logprob: -5.952974796295166
    9. 'pos' → logprob: -6.077974796295166
    10. '    
' → logprob: -6.452974796295166

Token 799: ' le' (ID: 505)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38658779859542847
    2. 'for' → logprob: -1.3865878582000732
    3. '   ' → logprob: -3.0115878582000732
    4. 'positions' → logprob: -4.636587619781494
    5. 'pos' → logprob: -5.386587619781494
    6. ' positions' → logprob: -5.511587619781494
    7. 'position' → logprob: -7.136587619781494
    8. ' ships' → logprob: -7.511587619781494
    9. ' pos' → logprob: -7.886587619781494
    10. 'ships' → logprob: -8.136588096618652

Token 800: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2915714979171753
    2. ' for' → logprob: -1.7915714979171753
    3. 'positions' → logprob: -1.9165714979171753
    4. 'pos' → logprob: -2.166571617126465
    5. 'ships' → logprob: -2.916571617126465
    6. ' ships' → logprob: -2.916571617126465
    7. ' positions' → logprob: -3.291571617126465
    8. ' first' → logprob: -3.291571617126465
    9. 'first' → logprob: -3.791571617126465
    10. ' initial' → logprob: -3.916571617126465

Token 801: '-es' (ID: 40011)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.445460319519043
    2. 'n' → logprob: -1.695460319519043
    3. 'nd' → logprob: -1.820460319519043
    4. '=' → logprob: -2.445460319519043
    5. ' =' → logprob: -2.570460319519043
    6. ' ' → logprob: -2.570460319519043
    7. 'nde' → logprob: -3.320460319519043
    8. '-' → logprob: -4.195460319519043
    9. 'nt' → logprob: -4.195460319519043
    10. ' n' → logprob: -4.195460319519043

Token 802: 'ime' (ID: 642)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6260390281677246
    2. 's' → logprob: -1.8760390281677246
    3. 'ime' → logprob: -2.1260390281677246
    4. 'i' → logprob: -3.6260390281677246
    5. 'ième' → logprob: -3.8760390281677246
    6. '#' → logprob: -3.8760390281677246
    7. '```' → logprob: -3.8760390281677246
    8. 'p' → logprob: -4.126039028167725
    9. 'me' → logprob: -4.126039028167725
    10. 'c' → logprob: -4.876039028167725

Token 803: ' bateau' (ID: 123794)
  Prédit: ' bateau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bateau' → logprob: -0.13185250759124756
    2. ' ship' → logprob: -3.006852626800537
    3. ' boat' → logprob: -3.756852626800537
    4. '_ship' → logprob: -4.756852626800537
    5. '_' → logprob: -4.881852626800537
    6. '_b' → logprob: -5.006852626800537
    7. 'ship' → logprob: -5.131852626800537
    8. 'bate' → logprob: -5.131852626800537
    9. 'boat' → logprob: -5.881852626800537
    10. ' bate' → logprob: -5.881852626800537

Token 804: ' a' (ID: 261)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.40443527698516846
    2. ' =' → logprob: -1.7794352769851685
    3. '.position' → logprob: -3.154435157775879
    4. 's' → logprob: -3.279435157775879
    5. '_pos' → logprob: -4.154435157775879
    6. ' pos' → logprob: -4.404435157775879
    7. 'position' → logprob: -4.529435157775879
    8. '=' → logprob: -4.654435157775879
    9. ''s' → logprob: -5.029435157775879
    10. '_position' → logprob: -5.154435157775879

Token 805: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5095579028129578
    2. 'position' → logprob: -1.0095579624176025
    3. ' une' → logprob: -4.009557723999023
    4. ' position' → logprob: -5.009557723999023
    5. ' pos' → logprob: -6.009557723999023
    6. ' la' → logprob: -6.134557723999023
    7. '-position' → logprob: -6.384557723999023
    8. 'une' → logprob: -6.884557723999023
    9. '-' → logprob: -7.259557723999023
    10. ' ' → logprob: -7.509557723999023

Token 806: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13994117081165314
    2. '=-' → logprob: -2.3899412155151367
    3. ' =' → logprob: -3.2649412155151367
    4. '=
' → logprob: -7.389941215515137
    5. ' -' → logprob: -9.764941215515137
    6. '=(-' → logprob: -10.639941215515137
    7. ' =
' → logprob: -11.514941215515137
    8. '-' → logprob: -11.889941215515137
    9. '=i' → logprob: -11.889941215515137
    10. ' ' → logprob: -12.014941215515137

Token 807: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12448452413082123
    2. '-i' → logprob: -2.8744845390319824
    3. '-' → logprob: -2.9994845390319824
    4. '-n' → logprob: -5.624484539031982
    5. '-s' → logprob: -5.999484539031982
    6. '-k' → logprob: -7.374484539031982
    7. '-f' → logprob: -7.624484539031982
    8. '-g' → logprob: -7.874484539031982
    9. '-M' → logprob: -7.999484539031982
    10. '-m' → logprob: -8.374484062194824

Token 808: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018154039978981018
    2. ' i' → logprob: -4.018154144287109
    3. ' (' → logprob: -13.14315414428711
    4. '(i' → logprob: -13.64315414428711
    5. '(' → logprob: -14.89315414428711
    6. '   ' → logprob: -15.14315414428711
    7. '1' → logprob: -15.64315414428711
    8. ' ' → logprob: -16.14315414428711
    9. '
' → logprob: -16.76815414428711
    10. '	i' → logprob: -16.76815414428711

Token 809: ' km' (ID: 8571)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.3778942823410034
    2. '<|end|>' → logprob: -1.5028942823410034
    3. 'for' → logprob: -1.8778942823410034
    4. '   ' → logprob: -2.002894401550293
    5. ' for' → logprob: -2.752894401550293
    6. '
' → logprob: -3.502894401550293
    7. '*' → logprob: -3.877894401550293
    8. ')' → logprob: -3.877894401550293
    9. '<|end|>' → logprob: -3.877894401550293
    10. ',' → logprob: -4.252894401550293

Token 810: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.391455739736557
    2. '
' → logprob: -1.7664557695388794
    3. 'for' → logprob: -2.64145565032959
    4. ' for' → logprob: -2.76645565032959
    5. '<|end|>' → logprob: -4.39145565032959
    6. '    
' → logprob: -6.26645565032959
    7. '<|end|>' → logprob: -6.64145565032959
    8. 'ships' → logprob: -7.39145565032959
    9. 'positions' → logprob: -7.64145565032959
    10. '	for' → logprob: -7.64145565032959

Token 811: 'car' (ID: 6830)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8367977142333984
    2. ' i' → logprob: -0.8367977142333984
    3. ')' → logprob: -2.0867977142333984
    4. ' )' → logprob: -5.336797714233398
    5. '1' → logprob: -6.211797714233398
    6. ')i' → logprob: -6.586797714233398
    7. ' -' → logprob: -8.086797714233398
    8. ')
' → logprob: -8.961797714233398
    9. '`)' → logprob: -9.211797714233398
    10. '):
' → logprob: -9.461797714233398

Token 812: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28449323773384094
    2. 'i' → logprob: -1.4094932079315186
    3. ' ' → logprob: -7.534493446350098
    4. ' on' → logprob: -7.784493446350098
    5. '1' → logprob: -8.034493446350098
    6. ' les' → logprob: -8.034493446350098
    7. ' ils' → logprob: -8.534493446350098
    8. '
' → logprob: -8.659493446350098
    9. ')' → logprob: -8.784493446350098
    10. ' M' → logprob: -9.034493446350098

Token 813: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16016703844070435
    2. ' i' → logprob: -2.0351669788360596
    3. '1' → logprob: -6.160167217254639
    4. 'le' → logprob: -6.285167217254639
    5. ' ils' → logprob: -6.285167217254639
    6. ' les' → logprob: -6.785167217254639
    7. ' le' → logprob: -6.910167217254639
    8. ' ' → logprob: -7.035167217254639
    9. '-' → logprob: -7.160167217254639
    10. '
' → logprob: -7.160167217254639

Token 814: 'er' (ID: 259)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7120286226272583
    2. '<|end|>' → logprob: -0.7120286226272583
    3. ' *' → logprob: -5.712028503417969
    4. 'km' → logprob: -5.837028503417969
    5. '0' → logprob: -5.837028503417969
    6. ' km' → logprob: -6.087028503417969
    7. '<|end|>' → logprob: -6.212028503417969
    8. '*' → logprob: -6.962028503417969
    9. '000' → logprob: -7.212028503417969
    10. ' )' → logprob: -7.462028503417969

Token 815: ' à' (ID: 1221)
  Prédit: ' bateau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bateau' → logprob: -0.13516637682914734
    2. ')' → logprob: -3.5101664066314697
    3. '_' → logprob: -3.5101664066314697
    4. ' boat' → logprob: -3.6351664066314697
    5. '<|end|>' → logprob: -5.135166168212891
    6. ' ship' → logprob: -5.385166168212891
    7. ' )' → logprob: -5.510166168212891
    8. 'bate' → logprob: -5.510166168212891
    9. ' -' → logprob: -6.010166168212891
    10. ' ' → logprob: -6.135166168212891

Token 816: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005538671393878758
    2. ' ' → logprob: -7.500554084777832
    3. 'i' → logprob: -14.125554084777832
    4. ' i' → logprob: -16.500553131103516
    5. 'position' → logprob: -18.250553131103516
    6. '```' → logprob: -18.375553131103516
    7. ')' → logprob: -18.500553131103516
    8. ' ' → logprob: -18.500553131103516
    9. 'import' → logprob: -18.875553131103516
    10. 'distance' → logprob: -19.000553131103516

Token 817: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'i' → logprob: -15.25001049041748
    4. 'import' → logprob: -17.750009536743164
    5. '```' → logprob: -17.750009536743164
    6. '-' → logprob: -17.875009536743164
    7. '[' → logprob: -18.375009536743164
    8. '(' → logprob: -18.625009536743164
    9. '...' → logprob: -19.062509536743164
    10. '`' → logprob: -19.125009536743164

Token 818: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7169780731201172
    2. ' +' → logprob: -1.9669780731201172
    3. ')' → logprob: -2.091978073120117
    4. ' -' → logprob: -2.216978073120117
    5. '
' → logprob: -2.841978073120117
    6. ' km' → logprob: -4.091978073120117
    7. '+' → logprob: -4.091978073120117
    8. '),' → logprob: -4.591978073120117
    9. 'km' → logprob: -4.841978073120117
    10. '<|end|>' → logprob: -5.716978073120117

Token 819: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7464890480041504
    2. ' -' → logprob: -0.8714890480041504
    3. ' ' → logprob: -3.3714890480041504
    4. '-' → logprob: -3.8714890480041504
    5. '1' → logprob: -4.49648904800415
    6. '-i' → logprob: -4.74648904800415
    7. 'i' → logprob: -4.87148904800415
    8. ' (' → logprob: -5.24648904800415
    9. '    ' → logprob: -5.37148904800415
    10. '2' → logprob: -5.87148904800415

Token 820: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26146838068962097
    2. '1' → logprob: -1.7614684104919434
    3. ' i' → logprob: -3.0114684104919434
    4. ' (' → logprob: -5.761468410491943
    5. '-' → logprob: -6.511468410491943
    6. ' ' → logprob: -6.636468410491943
    7. '(' → logprob: -7.136468410491943
    8. ' -' → logprob: -7.136468410491943
    9. '
' → logprob: -8.136467933654785
    10. 'for' → logprob: -8.386467933654785

Token 821: 'eme' (ID: 5825)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1908971220254898
    2. '-i' → logprob: -2.690897226333618
    3. '-' → logprob: -3.565897226333618
    4. '
' → logprob: -4.190896987915039
    5. '   ' → logprob: -4.690896987915039
    6. '*i' → logprob: -4.940896987915039
    7. ')' → logprob: -5.315896987915039
    8. 'e' → logprob: -5.440896987915039
    9. 'ième' → logprob: -5.815896987915039
    10. '

' → logprob: -5.940896987915039

Token 822: ' à' (ID: 1221)
  Prédit: ' km'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' km' → logprob: -0.7933601140975952
    2. ' à' → logprob: -1.0433601140975952
    3. ' -' → logprob: -2.6683602333068848
    4. ' at' → logprob: -3.5433602333068848
    5. ' =' → logprob: -3.9183602333068848
    6. ' ' → logprob: -4.418360233306885
    7. ',' → logprob: -4.668360233306885
    8. ' bateau' → logprob: -4.668360233306885
    9. ' i' → logprob: -4.793360233306885
    10. 'km' → logprob: -5.043360233306885

Token 823: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6329938173294067
    2. '-' → logprob: -0.8829938173294067
    3. '-i' → logprob: -3.007993698120117
    4. '1' → logprob: -5.382993698120117
    5. '-(' → logprob: -7.507993698120117
    6. ' ' → logprob: -7.882993698120117
    7. ' i' → logprob: -8.132993698120117
    8. ' -(' → logprob: -9.257993698120117
    9. 'i' → logprob: -9.757993698120117
    10. '(-' → logprob: -10.507993698120117

Token 824: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.036141086369752884
    2. 'i' → logprob: -3.4111411571502686
    3. ' i' → logprob: -6.4111409187316895
    4. ' ' → logprob: -8.036141395568848
    5. '(' → logprob: -8.036141395568848
    6. ' (' → logprob: -8.911141395568848
    7. '(i' → logprob: -9.786141395568848
    8. '
' → logprob: -12.911141395568848
    9. ')' → logprob: -13.661141395568848
    10. '  ' → logprob: -14.286141395568848

Token 825: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37036022543907166
    2. ')' → logprob: -1.495360255241394
    3. '<|end|>' → logprob: -2.7453601360321045
    4. '),' → logprob: -4.120360374450684
    5. '<|end|>' → logprob: -6.495360374450684
    6. ' ,' → logprob: -6.745360374450684
    7. ' )' → logprob: -7.245360374450684
    8. ' km' → logprob: -7.870360374450684
    9. ' ),' → logprob: -8.120360374450684
    10. 'km' → logprob: -9.370360374450684

Token 826: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6906784176826477
    2. ' ' → logprob: -1.190678358078003
    3. ' -' → logprob: -1.815678358078003
    4. '-' → logprob: -3.815678358078003
    5. '2' → logprob: -5.440678596496582
    6. ' i' → logprob: -6.190678596496582
    7. ')' → logprob: -6.815678596496582
    8. '1' → logprob: -7.690678596496582
    9. '...' → logprob: -7.940678596496582
    10. '-i' → logprob: -8.190678596496582

Token 827: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001980856526643038
    2. ' ' → logprob: -6.376980781555176
    3. '
' → logprob: -9.751980781555176
    4. '-' → logprob: -10.001980781555176
    5. '1' → logprob: -10.001980781555176
    6. 'i' → logprob: -10.126980781555176
    7. ' -' → logprob: -10.251980781555176
    8. ' (' → logprob: -11.251980781555176
    9. ' i' → logprob: -11.501980781555176
    10. '(' → logprob: -11.876980781555176

Token 828: 'eme' (ID: 5825)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4565482139587402
    2. ' *' → logprob: -1.4565482139587402
    3. '*i' → logprob: -1.7065482139587402
    4. '*' → logprob: -2.0815482139587402
    5. '<|end|>' → logprob: -2.3315482139587402
    6. '
' → logprob: -3.3315482139587402
    7. ',' → logprob: -3.4565482139587402
    8. '<|end|>' → logprob: -3.8315482139587402
    9. ' -' → logprob: -4.95654821395874
    10. '*k' → logprob: -5.45654821395874

Token 829: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05909561365842819
    2. ' km' → logprob: -2.934095621109009
    3. ' i' → logprob: -6.68409538269043
    4. ')' → logprob: -6.68409538269043
    5. ' etc' → logprob: -8.05909538269043
    6. '),' → logprob: -8.18409538269043
    7. '*i' → logprob: -8.68409538269043
    8. 'i' → logprob: -8.80909538269043
    9. 'km' → logprob: -8.80909538269043
    10. ' ,' → logprob: -9.18409538269043

Token 830: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7116616368293762
    2. '-' → logprob: -0.9616616368293762
    3. '-i' → logprob: -2.0866615772247314
    4. '2' → logprob: -6.5866618156433105
    5. '-(' → logprob: -6.7116618156433105
    6. ' ' → logprob: -9.211661338806152
    7. ' i' → logprob: -10.586661338806152
    8. '
' → logprob: -10.586661338806152
    9. ' -(' → logprob: -10.711661338806152
    10. 'i' → logprob: -11.461661338806152

Token 831: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006265374249778688
    2. '(' → logprob: -8.250626564025879
    3. 'i' → logprob: -8.375626564025879
    4. '(i' → logprob: -9.500626564025879
    5. ' (' → logprob: -10.125626564025879
    6. ' ' → logprob: -11.375626564025879
    7. '
' → logprob: -12.500626564025879
    8. ' i' → logprob: -12.625626564025879
    9. '(
' → logprob: -14.875626564025879
    10. '(N' → logprob: -15.000626564025879

Token 832: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03376844897866249
    2. ')' → logprob: -4.033768653869629
    3. '...' → logprob: -5.158768653869629
    4. ',...' → logprob: -5.158768653869629
    5. '...)' → logprob: -5.783768653869629
    6. '),' → logprob: -9.158768653869629
    7. ')
' → logprob: -9.283768653869629
    8. ' ,' → logprob: -9.283768653869629
    9. '   ' → logprob: -9.533768653869629
    10. '):
' → logprob: -9.783768653869629

Token 833: ' ...)
' (ID: 132905)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -1.0678645372390747
    2. '...)' → logprob: -1.3178645372390747
    3. ' etc' → logprob: -1.5678645372390747
    4. ' ...' → logprob: -2.442864418029785
    5. ' ...)' → logprob: -2.692864418029785
    6. ')' → logprob: -4.942864418029785
    7. 'etc' → logprob: -5.067864418029785
    8. ' ' → logprob: -5.567864418029785
    9. '...),' → logprob: -5.942864418029785
    10. '#' → logprob: -6.817864418029785

Token 834: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051382288336753845
    2. 'ships' → logprob: -3.176382303237915
    3. ' ships' → logprob: -4.926382064819336
    4. '
' → logprob: -7.551382064819336
    5. '    
' → logprob: -7.801382064819336
    6. 'Ships' → logprob: -9.301382064819336
    7. '```' → logprob: -10.801382064819336
    8. 'for' → logprob: -11.551382064819336
    9. ' Ships' → logprob: -12.051382064819336
    10. 'boats' → logprob: -12.176382064819336

Token 835: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' (adapté à ' ships') → logprob: -0.032526906579732895
    2. '   ' → logprob: -4.032526969909668
    3. ' ships' → logprob: -4.282526969909668
    4. '    
' → logprob: -8.407526969909668
    5. '
' → logprob: -8.782526969909668
    6. '```' → logprob: -10.282526969909668
    7. 'boats' → logprob: -10.532526969909668
    8. 'Ships' → logprob: -11.032526969909668
    9. 's' → logprob: -12.657526969909668
    10. 'fleet' → logprob: -13.907526969909668

Token 836: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038094162940979004
    2. '=' → logprob: -3.2880940437316895
    3. '=[]' → logprob: -10.288094520568848
    4. '.append' → logprob: -11.163094520568848
    5. '=[' → logprob: -13.413094520568848
    6. '=[]
' → logprob: -13.663094520568848
    7. ' =[' → logprob: -14.163094520568848
    8. '[' → logprob: -15.413094520568848
    9. '[]' → logprob: -15.913094520568848
    10. '   ' → logprob: -15.913094520568848

Token 837: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.08245152980089188
    2. '[' → logprob: -2.582451581954956
    3. ' [' → logprob: -6.332451343536377
    4. ' []
' → logprob: -6.832451343536377
    5. '[]' → logprob: -7.332451343536377
    6. '[]

' → logprob: -10.332451820373535
    7. '[S' → logprob: -12.082451820373535
    8. '[
' → logprob: -12.082451820373535
    9. ' []' → logprob: -13.957451820373535
    10. '[List' → logprob: -16.20745086669922

Token 838: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027956360951066017
    2. '	for' → logprob: -3.652956247329712
    3. ' for' → logprob: -6.652956485748291
    4. 'for' → logprob: -8.152956008911133
    5. '    
' → logprob: -11.027956008911133
    6. '<|end|>' → logprob: -11.027956008911133
    7. '
' → logprob: -11.402956008911133
    8. '	
' → logprob: -12.027956008911133
    9. '```' → logprob: -12.027956008911133
    10. '       ' → logprob: -12.902956008911133

Token 839: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007094927132129669
    2. ' for' → logprob: -5.007094860076904
    3. '   ' → logprob: -7.882094860076904
    4. '	for' → logprob: -13.257095336914062
    5. '
' → logprob: -15.632095336914062
    6. '    
' → logprob: -17.007095336914062
    7. '```' → logprob: -17.257095336914062
    8. '  ' → logprob: -17.632095336914062
    9. 'spacing' → logprob: -17.632095336914062
    10. ' ' → logprob: -18.007095336914062

Token 840: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003192804753780365
    2. ' i' → logprob: -5.753192901611328
    3. '   ' → logprob: -12.003192901611328
    4. 'speed' → logprob: -12.628192901611328
    5. '_i' → logprob: -13.003192901611328
    6. ' speed' → logprob: -14.003192901611328
    7. ' ' → logprob: -14.378192901611328
    8. 'range' → logprob: -15.003192901611328
    9. '	i' → logprob: -15.253192901611328
    10. 'idx' → logprob: -15.378192901611328

Token 841: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054892443120479584
    2. 'in' → logprob: -2.9298925399780273
    3. '	in' → logprob: -13.054892539978027
    4. ' ' → logprob: -13.554892539978027
    5. '  ' → logprob: -13.804892539978027
    6. ',' → logprob: -14.054892539978027
    7. 'range' → logprob: -14.304892539978027
    8. 'In' → logprob: -14.554892539978027
    9. '_in' → logprob: -14.804892539978027
    10. 'import' → logprob: -14.929892539978027

Token 842: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. '	range' → logprob: -17.37747573852539
    4. '(range' → logprob: -17.50247573852539
    5. '   ' → logprob: -17.62747573852539
    6. ' ' → logprob: -18.62747573852539
    7. 'rang' → logprob: -19.50247573852539
    8. '  ' → logprob: -19.50247573852539
    9. '```' → logprob: -19.62747573852539
    10. '
' → logprob: -19.87747573852539

Token 843: '(M' (ID: 6103)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3889891803264618
    2. '(M' → logprob: -1.1389892101287842
    3. 'N' → logprob: -6.888988971710205
    4. 'M' → logprob: -7.388988971710205
    5. '(' → logprob: -8.013989448547363
    6. '(K' → logprob: -9.388989448547363
    7. ' N' → logprob: -10.888989448547363
    8. ' M' → logprob: -11.013989448547363
    9. '(
' → logprob: -11.638989448547363
    10. ' (' → logprob: -11.763989448547363

Token 844: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5233725309371948
    2. '):' → logprob: -0.8983725309371948
    3. '):
' → logprob: -8.398372650146484
    4. '+' → logprob: -11.398372650146484
    5. ' ):' → logprob: -12.648372650146484
    6. ',' → logprob: -12.898372650146484
    7. ' ):
' → logprob: -13.398372650146484
    8. ':' → logprob: -13.648372650146484
    9. '   ' → logprob: -13.773372650146484
    10. '):

' → logprob: -14.023372650146484

Token 845: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0208759605884552
    2. ' ships' → logprob: -4.395875930786133
    3. '       ' → logprob: -5.395875930786133
    4. ' s' → logprob: -6.145875930786133
    5. '    
' → logprob: -6.895875930786133
    6. '
' → logprob: -9.020875930786133
    7. ' ship' → logprob: -9.270875930786133
    8. 'ships' → logprob: -9.645875930786133
    9. '        
' → logprob: -9.645875930786133
    10. '   ' → logprob: -10.020875930786133

Token 846: ' ship' (ID: 12407)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0148138999938965
    2. 's' → logprob: -1.1398138999938965
    3. 'ship' (adapté à ' ship') → logprob: -1.6398138999938965
    4. 'ships' → logprob: -3.2648138999938965
    5. ' pos' → logprob: -3.3898138999938965
    6. ' s' → logprob: -4.1398138999938965
    7. 'position' → logprob: -4.7648138999938965
    8. ' ship' → logprob: -4.8898138999938965
    9. 'speed' → logprob: -4.8898138999938965
    10. '   ' → logprob: -5.0148138999938965

Token 847: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2303142249584198
    2. 's' → logprob: -1.9803142547607422
    3. '=' → logprob: -2.855314254760742
    4. '_s' → logprob: -4.605314254760742
    5. '_speed' → logprob: -9.730314254760742
    6. '=s' → logprob: -10.480314254760742
    7. '_pos' → logprob: -10.730314254760742
    8. 'S' → logprob: -11.605314254760742
    9. '_position' → logprob: -11.730314254760742
    10. '_' → logprob: -12.105314254760742

Token 848: ' Ship' (ID: 43598)
  Prédit: 'Ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ship' → logprob: -0.01814994215965271
    2. ' Ship' → logprob: -4.0181498527526855
    3. '   ' → logprob: -20.893150329589844
    4. ' ' → logprob: -21.143150329589844
    5. 'ship' → logprob: -22.268150329589844
    6. 'Ships' → logprob: -22.643150329589844
    7. ' ship' → logprob: -22.893150329589844
    8. '  ' → logprob: -22.893150329589844
    9. '_ship' → logprob: -22.893150329589844
    10. '	' → logprob: -23.268150329589844

Token 849: '(ship' (ID: 185532)
  Prédit: '(ship'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ship' → logprob: -4.668304245569743e-05
    2. 'ship' → logprob: -10.125046730041504
    3. '(sh' → logprob: -12.625046730041504
    4. '(' → logprob: -13.250046730041504
    5. ' ship' → logprob: -13.750046730041504
    6. '(shop' → logprob: -15.750046730041504
    7. '(
' → logprob: -16.000045776367188
    8. '((' → logprob: -16.375045776367188
    9. '.ship' → logprob: -16.625045776367188
    10. '(float' → logprob: -17.250045776367188

Token 850: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.629921436891891e-05
    2. 's' → logprob: -10.75002670288086
    3. '_speed' → logprob: -13.87502670288086
    4. 'speed' → logprob: -14.62502670288086
    5. 'Spe' → logprob: -14.75002670288086
    6. 'spe' → logprob: -14.87502670288086
    7. ' speeds' → logprob: -15.12502670288086
    8. ')' → logprob: -15.37502670288086
    9. '[i' → logprob: -15.50002670288086
    10. 'V' → logprob: -15.62502670288086

Token 851: 'pe' (ID: 424)
  Prédit: 'eed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eed' → logprob: -0.15985915064811707
    2. 'pe' → logprob: -2.5348591804504395
    3. 'peed' → logprob: -2.9098591804504395
    4. 'e' → logprob: -4.5348591804504395
    5. 'hips' → logprob: -7.2848591804504395
    6. 'hip' → logprob: -7.4098591804504395
    7. 'eep' → logprob: -8.159858703613281
    8. 'p' → logprob: -8.284858703613281
    9. 'ips' → logprob: -8.534858703613281
    10. '_pe' → logprob: -8.534858703613281

Token 852: 'eds' (ID: 5575)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.029851147904992104
    2. 'eds' → logprob: -3.529851198196411
    3. 'd' → logprob: -10.029850959777832
    4. 'eed' → logprob: -10.154850959777832
    5. '   ' → logprob: -12.154850959777832
    6. 'e' → logprob: -12.779850959777832
    7. '[' → logprob: -13.154850959777832
    8. '```' → logprob: -13.404850959777832
    9. '#' → logprob: -14.279850959777832
    10. 'ds' → logprob: -14.779850959777832

Token 853: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0339031834737398e-05
    2. '[' → logprob: -11.625020027160645
    3. '[M' → logprob: -11.875020027160645
    4. ' [' → logprob: -13.375020027160645
    5. ',' → logprob: -14.750020027160645
    6. '(i' → logprob: -15.000020027160645
    7. '[I' → logprob: -15.000020027160645
    8. ',i' → logprob: -15.000020027160645
    9. '   ' → logprob: -15.125020027160645
    10. '[max' → logprob: -15.875020027160645

Token 854: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8590300139039755e-05
    2. ',-' → logprob: -10.250048637390137
    3. ' ,' → logprob: -12.000048637390137
    4. ',i' → logprob: -12.125048637390137
    5. ',
' → logprob: -14.625048637390137
    6. '),' → logprob: -15.625048637390137
    7. '   ' → logprob: -15.875048637390137
    8. ')' → logprob: -16.00004768371582
    9. ',)' → logprob: -16.37504768371582
    10. '-' → logprob: -16.75004768371582

Token 855: ' position' (ID: 4010)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5529818534851074
    2. '-i' → logprob: -1.3029818534851074
    3. '-' → logprob: -1.9279818534851074
    4. '-position' → logprob: -5.427981853485107
    5. '-pos' → logprob: -6.802981853485107
    6. ' float' → logprob: -7.427981853485107
    7. 'float' → logprob: -8.052982330322266
    8. '-x' → logprob: -8.427982330322266
    9. '-(' → logprob: -8.927982330322266
    10. '-f' → logprob: -8.927982330322266

Token 856: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6792036890983582
    2. '=-' → logprob: -0.8042036890983582
    3. ' =' → logprob: -3.554203748703003
    4. ' -' → logprob: -4.929203510284424
    5. '(-' → logprob: -5.429203510284424
    6. '=(-' → logprob: -6.804203510284424
    7. '=i' → logprob: -6.929203510284424
    8. '-i' → logprob: -6.929203510284424
    9. '   ' → logprob: -7.429203510284424
    10. '=float' → logprob: -7.929203510284424

Token 857: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.41723474860191345
    2. '-i' → logprob: -1.2922347784042358
    3. '-' → logprob: -2.7922346591949463
    4. ' float' → logprob: -6.542234897613525
    5. 'float' → logprob: -6.667234897613525
    6. '-f' → logprob: -6.917234897613525
    7. '(-' → logprob: -7.792234897613525
    8. '-s' → logprob: -8.792234420776367
    9. '   ' → logprob: -9.167234420776367
    10. '0' → logprob: -9.167234420776367

Token 858: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9027791495318525e-05
    2. ' i' → logprob: -10.875019073486328
    3. '	i' → logprob: -18.750019073486328
    4. '(i' → logprob: -19.875019073486328
    5. '   ' → logprob: -20.375019073486328
    6. ')i' → logprob: -21.625019073486328
    7. ' (' → logprob: -22.000019073486328
    8. '
' → logprob: -22.250019073486328
    9. '_i' → logprob: -22.625019073486328
    10. 'int' → logprob: -22.875019073486328

Token 859: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028980709612369537
    2. ' )' → logprob: -5.877898216247559
    3. '.' → logprob: -9.752898216247559
    4. ')
' → logprob: -11.002898216247559
    5. '0' → logprob: -11.127898216247559
    6. '<|end|>' → logprob: -14.627898216247559
    7. ' ' → logprob: -14.877898216247559
    8. '1' → logprob: -15.002898216247559
    9. '*' → logprob: -15.002898216247559
    10. ' ' → logprob: -15.002898216247559

Token 860: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12045244872570038
    2. '       ' → logprob: -2.495452404022217
    3. '<|end|>' → logprob: -4.245452404022217
    4. ' ships' → logprob: -4.370452404022217
    5. ')' → logprob: -6.995452404022217
    6. '    
' → logprob: -7.120452404022217
    7. 'ships' → logprob: -7.245452404022217
    8. '<|end|>' → logprob: -7.870452404022217
    9. ' ' → logprob: -8.870452880859375
    10. '(ship' → logprob: -8.870452880859375

Token 861: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' (adapté à ' ships') → logprob: -0.005966834723949432
    2. ' ships' → logprob: -5.130966663360596
    3. '   ' → logprob: -10.380967140197754
    4. 'ship' → logprob: -12.255967140197754
    5. '       ' → logprob: -13.255967140197754
    6. '	' → logprob: -15.130967140197754
    7. 'Ships' → logprob: -16.755966186523438
    8. 's' → logprob: -16.880966186523438
    9. ' ' → logprob: -17.005966186523438
    10. '           ' → logprob: -17.255966186523438

Token 862: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004645622801035643
    2. '.' → logprob: -5.379645824432373
    3. 's' → logprob: -11.004645347595215
    4. 'append' → logprob: -12.504645347595215
    5. '.push' → logprob: -13.879645347595215
    6. 'ships' → logprob: -13.879645347595215
    7. ').' → logprob: -14.004645347595215
    8. '.Append' → logprob: -14.254645347595215
    9. '.app' → logprob: -14.754645347595215
    10. '.add' → logprob: -15.129645347595215

Token 863: '(ship' (ID: 185532)
  Prédit: '(ship'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ship' → logprob: -1.5332478142227046e-05
    2. 'ship' → logprob: -11.250015258789062
    3. ' ship' → logprob: -13.000015258789062
    4. '(' → logprob: -17.625015258789062
    5. '(
' → logprob: -19.750015258789062
    6. '(shop' → logprob: -20.000015258789062
    7. '(sh' → logprob: -20.500015258789062
    8. '.ship' → logprob: -21.250015258789062
    9. '(song' → logprob: -21.250015258789062
    10. '_ship' → logprob: -21.375015258789062

Token 864: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 865: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28734293580055237
    2. '   ' → logprob: -1.53734290599823
    3. '
' → logprob: -4.5373430252075195
    4. 'while' → logprob: -5.2873430252075195
    5. '<|end|>' → logprob: -5.5373430252075195
    6. '    
' → logprob: -6.0373430252075195
    7. ' #' → logprob: -6.2873430252075195
    8. 'for' → logprob: -6.6623430252075195
    9. ')' → logprob: -6.7873430252075195
    10. '```' → logprob: -6.7873430252075195

Token 866: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.641175389289856
    2. 'current' → logprob: -1.391175389289856
    3. '#' (adapté à ' #') → logprob: -2.0161752700805664
    4. 't' → logprob: -2.7661752700805664
    5. 'for' → logprob: -4.391175270080566
    6. '   ' → logprob: -5.141175270080566
    7. 'while' → logprob: -5.391175270080566
    8. 'remaining' → logprob: -6.766175270080566
    9. 'max' → logprob: -7.016175270080566
    10. 'def' → logprob: -7.266175270080566

Token 867: ' V' (ID: 631)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0751483142375946
    2. '#' → logprob: -3.325148344039917
    3. 'current' → logprob: -3.825148344039917
    4. 't' → logprob: -4.825148105621338
    5. 'return' → logprob: -5.075148105621338
    6. 'pass' → logprob: -9.200148582458496
    7. 'events' → logprob: -9.575148582458496
    8. 'for' → logprob: -9.575148582458496
    9. 'curr' → logprob: -10.825148582458496
    10. 'def' → logprob: -11.450148582458496

Token 868: 'itesse' (ID: 58831)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0893966555595398
    2. '#' → logprob: -3.3393967151641846
    3. 'is' → logprob: -4.5893964767456055
    4. 'itesse' → logprob: -5.0893964767456055
    5. 'irtual' → logprob: -5.2143964767456055
    6. 'for' → logprob: -5.3393964767456055
    7. 'time' → logprob: -5.3393964767456055
    8. 'MAX' → logprob: -6.3393964767456055
    9. 'current' → logprob: -6.3393964767456055
    10. 'pos' → logprob: -6.3393964767456055

Token 869: ' initial' (ID: 4871)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7478561997413635
    2. ' =' → logprob: -1.3728561401367188
    3. '=' → logprob: -2.6228561401367188
    4. 'max' → logprob: -2.6228561401367188
    5. '_max' → logprob: -2.7478561401367188
    6. '_target' → logprob: -4.122856140136719
    7. '_limit' → logprob: -4.247856140136719
    8. '_current' → logprob: -5.122856140136719
    9. '_targets' → logprob: -5.497856140136719
    10. 'limit' → logprob: -5.997856140136719

Token 870: 'e' (ID: 68)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10795989632606506
    2. 'e' → logprob: -2.6079599857330322
    3. '=' → logprob: -4.232959747314453
    4. 's' → logprob: -4.482959747314453
    5. ' =' → logprob: -5.982959747314453
    6. '   ' → logprob: -9.107959747314453
    7. '=s' → logprob: -10.482959747314453
    8. 'ies' → logprob: -10.607959747314453
    9. 'és' → logprob: -10.732959747314453
    10. 'a' → logprob: -11.232959747314453

Token 871: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7020794153213501
    2. ' =' → logprob: -1.32707941532135
    3. '=' → logprob: -1.70207941532135
    4. 's' → logprob: -3.4520792961120605
    5. ' for' → logprob: -3.9520792961120605
    6. '   ' → logprob: -5.4520792961120605
    7. '#' → logprob: -8.827079772949219
    8. '0' → logprob: -8.827079772949219
    9. 'max' → logprob: -8.827079772949219
    10. '_for' → logprob: -9.077079772949219

Token 872: ' uniquement' (ID: 65527)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5785611867904663
    2. ' for' → logprob: -0.8285611867904663
    3. '0' → logprob: -6.078561305999756
    4. '[' → logprob: -8.953560829162598
    5. ' ' → logprob: -9.703560829162598
    6. ' [' → logprob: -9.953560829162598
    7. '   ' → logprob: -10.328560829162598
    8. '#' → logprob: -11.328560829162598
    9. 'pass' → logprob: -11.953560829162598
    10. 's' → logprob: -12.078560829162598

Token 873: ' le' (ID: 505)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pour' → logprob: -0.43489977717399597
    2. 'for' → logprob: -1.9348998069763184
    3. '0' → logprob: -2.3098998069763184
    4. 'à' → logprob: -3.0598998069763184
    5. 'le' → logprob: -4.684899806976318
    6. 'max' → logprob: -4.809899806976318
    7. 'ships' → logprob: -4.809899806976318
    8. '=' → logprob: -5.059899806976318
    9. 'sur' → logprob: -5.684899806976318
    10. 'des' → logprob: -5.809899806976318

Token 874: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.06411687284708023
    2. ' premier' → logprob: -3.064116954803467
    3. 'first' → logprob: -4.814116954803467
    4. 'dern' → logprob: -6.064116954803467
    5. ' first' → logprob: -7.189116954803467
    6. '0' → logprob: -7.314116954803467
    7. 'max' → logprob: -8.064116477966309
    8. '1' → logprob: -8.189116477966309
    9. 'v' → logprob: -8.314116477966309
    10. 'plus' → logprob: -8.439116477966309

Token 875: ' bateau' (ID: 123794)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.12779533863067627
    2. ' ships' → logprob: -2.5027952194213867
    3. 'ship' → logprob: -3.3777952194213867
    4. 's' → logprob: -6.377795219421387
    5. ' ship' → logprob: -7.502795219421387
    6. ' =' → logprob: -7.877795219421387
    7. '(ship' → logprob: -8.502795219421387
    8. 'if' → logprob: -8.752795219421387
    9. '=' → logprob: -8.877795219421387
    10. ' for' → logprob: -9.127795219421387

Token 876: ' peut' (ID: 9216)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.09410280734300613
    2. 's' → logprob: -3.2191028594970703
    3. ' ships' → logprob: -3.3441028594970703
    4. ' =' → logprob: -5.09410285949707
    5. '=' → logprob: -5.71910285949707
    6. '   ' → logprob: -7.21910285949707
    7. '[' → logprob: -7.21910285949707
    8. 'if' → logprob: -7.59410285949707
    9. '
' → logprob: -7.71910285949707
    10. 'for' → logprob: -8.21910285949707

Token 877: ' partir' (ID: 12100)
  Prédit: ' avancer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avancer' → logprob: -0.5765807032585144
    2. 'aller' → logprob: -1.5765807628631592
    3. 'rou' → logprob: -3.076580762863159
    4. 'avance' → logprob: -3.201580762863159
    5. 'av' → logprob: -3.701580762863159
    6. 'v' → logprob: -3.826580762863159
    7. 'avoir' → logprob: -3.826580762863159
    8. 'atte' → logprob: -4.07658052444458
    9. 'dé' → logprob: -4.70158052444458
    10. 'b' → logprob: -4.70158052444458

Token 878: ' rapidement' (ID: 43157)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5609388947486877
    2. 'ships' → logprob: -1.935938835144043
    3. '
' → logprob: -2.060938835144043
    4. ' ships' → logprob: -2.310938835144043
    5. ' if' → logprob: -3.810938835144043
    6. '    
' → logprob: -4.310938835144043
    7. ' for' → logprob: -4.685938835144043
    8. 'if' → logprob: -5.435938835144043
    9. 'for' → logprob: -5.685938835144043
    10. '.' → logprob: -7.560938835144043

Token 879: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12713377177715302
    2. ' ships' → logprob: -2.627133846282959
    3. 'ships' → logprob: -3.502133846282959
    4. '
' → logprob: -5.002133846282959
    5. '    
' → logprob: -5.252133846282959
    6. '.' → logprob: -6.627133846282959
    7. 'for' → logprob: -6.877133846282959
    8. ' for' → logprob: -7.252133846282959
    9. 'Ships' → logprob: -8.2521333694458
    10. 'if' → logprob: -8.6271333694458

Token 880: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3638090193271637
    2. '   ' → logprob: -1.7388089895248413
    3. 'ships' → logprob: -2.863809108734131
    4. 'for' → logprob: -2.988809108734131
    5. ' ships' → logprob: -4.488809108734131
    6. ' for' → logprob: -5.613809108734131
    7. ' #' → logprob: -5.988809108734131
    8. '    
' → logprob: -6.613809108734131
    9. '```' → logprob: -7.863809108734131
    10. '
' → logprob: -7.988809108734131

Token 881: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.4032417833805084
    2. 'for' → logprob: -1.653241753578186
    3. ' autres' → logprob: -2.9032418727874756
    4. 'others' → logprob: -3.6532418727874756
    5. 'other' → logprob: -3.7782418727874756
    6. ' suivants' → logprob: -3.9032418727874756
    7. 'su' → logprob: -4.7782416343688965
    8. 'ships' → logprob: -6.1532416343688965
    9. ' for' → logprob: -6.4032416343688965
    10. '#' → logprob: -6.9032416343688965

Token 882: ' doivent' (ID: 44722)
  Prédit: ' restent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' restent' → logprob: -1.099827527999878
    2. ' =' → logprob: -1.349827527999878
    3. ' rest' → logprob: -1.724827527999878
    4. '=' → logprob: -2.974827527999878
    5. ' sont' → logprob: -3.724827527999878
    6. 's' → logprob: -3.849827527999878
    7. ' rester' → logprob: -3.974827527999878
    8. 'ont' → logprob: -4.349827766418457
    9. '#' → logprob: -4.349827766418457
    10. 'rest' → logprob: -4.474827766418457

Token 883: ' respecter' (ID: 107203)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.47215133905410767
    2. 're' → logprob: -1.347151279449463
    3. 'wait' → logprob: -2.597151279449463
    4. 'être' → logprob: -4.472151279449463
    5. 'rest' → logprob: -4.597151279449463
    6. ' attendre' → logprob: -5.847151279449463
    7. 'reste' → logprob: -6.097151279449463
    8. 'v' → logprob: -6.097151279449463
    9. 'fre' → logprob: -6.347151279449463
    10. 'se' → logprob: -6.722151279449463

Token 884: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3949309587478638
    2. 'ships' → logprob: -1.3949309587478638
    3. 'le' → logprob: -2.144930839538574
    4. 'la' → logprob: -2.269930839538574
    5. '0' → logprob: -2.769930839538574
    6. 'les' → logprob: -2.894930839538574
    7. 'the' → logprob: -3.269930839538574
    8. 'EPS' → logprob: -4.019930839538574
    9. 'distance' → logprob: -4.019930839538574
    10. 'max' → logprob: -4.144930839538574

Token 885: ' règle' (ID: 115826)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.04001961275935173
    2. ' distance' → logprob: -4.040019512176514
    3. 'gap' → logprob: -5.540019512176514
    4. 'v' → logprob: -5.790019512176514
    5. 'spacing' → logprob: -5.790019512176514
    6. 'dist' → logprob: -5.790019512176514
    7. 'esp' → logprob: -7.040019512176514
    8. ' spacing' → logprob: -7.290019512176514
    9. 'ship' → logprob: -7.415019512176514
    10. 'safe' → logprob: -7.790019512176514

Token 886: ':
' (ID: 734)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7034279704093933
    2. ' s' → logprob: -1.578428030014038
    3. '.' → logprob: -2.578428030014038
    4. '   ' → logprob: -2.578428030014038
    5. '<|end|>' → logprob: -3.078428030014038
    6. '(s' → logprob: -3.453428030014038
    7. ':' → logprob: -4.203427791595459
    8. ' for' → logprob: -4.953427791595459
    9. ' de' → logprob: -5.203427791595459
    10. ',' → logprob: -5.203427791595459

Token 887: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 888: ' #' (ID: 1069)
  Prédit: ' ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ships' → logprob: -0.36939001083374023
    2. ' for' → logprob: -1.7443900108337402
    3. '   ' → logprob: -2.4943900108337402
    4. '\n' → logprob: -4.36939001083374
    5. ' 
' → logprob: -4.61939001083374
    6. 'for' → logprob: -4.61939001083374
    7. '    
' → logprob: -4.86939001083374
    8. 'ships' → logprob: -5.86939001083374
    9. '#' (adapté à ' #') → logprob: -6.36939001083374
    10. '
' → logprob: -6.36939001083374

Token 889: ' Chaque' (ID: 94758)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.24168024957180023
    2. 'for' → logprob: -1.8666802644729614
    3. ' ships' → logprob: -2.991680145263672
    4. ' for' → logprob: -4.741680145263672
    5. '   ' → logprob: -7.491680145263672
    6. '#' → logprob: -7.991680145263672
    7. 'ship' → logprob: -9.866680145263672
    8. 'if' → logprob: -9.991680145263672
    9. 'boats' → logprob: -10.616680145263672
    10. '
' → logprob: -11.241680145263672

Token 890: ' bateau' (ID: 123794)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.1355147510766983
    2. ' ship' → logprob: -2.510514736175537
    3. ' bateau' → logprob: -4.010514736175537
    4. '_ship' → logprob: -5.385514736175537
    5. 's' → logprob: -5.510514736175537
    6. '_' → logprob: -5.885514736175537
    7. '
' → logprob: -5.885514736175537
    8. 'for' → logprob: -6.010514736175537
    9. 'boat' → logprob: -6.135514736175537
    10. 'bate' → logprob: -6.760514736175537

Token 891: ' atteint' (ID: 104876)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.5162918567657471
    2. ' doit' → logprob: -1.766291856765747
    3. 'su' → logprob: -3.266291856765747
    4. ' n' → logprob: -3.391291856765747
    5. ' est' → logprob: -3.391291856765747
    6. ' suivant' → logprob: -3.391291856765747
    7. 'pe' → logprob: -4.016291618347168
    8. ' peut' → logprob: -4.391291618347168
    9. 'ne' → logprob: -4.891291618347168
    10. 'n' → logprob: -4.891291618347168

Token 892: ' instant' (ID: 12823)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5540315508842468
    2. 'la' → logprob: -1.9290316104888916
    3. ' au' → logprob: -2.1790316104888916
    4. ' une' → logprob: -3.1790316104888916
    5. 'une' → logprob: -3.5540316104888916
    6. 'le' → logprob: -3.5540316104888916
    7. 'au' → logprob: -3.8040316104888916
    8. 'max' → logprob: -3.8040316104888916
    9. ' sa' → logprob: -5.0540313720703125
    10. 'sa' → logprob: -6.0540313720703125

Token 893: 'anément' (ID: 193192)
  Prédit: 'anément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anément' → logprob: -0.001666134805418551
    2. 'an' → logprob: -6.751666069030762
    3. 'ément' → logprob: -8.251666069030762
    4. 'ané' → logprob: -8.876666069030762
    5. 'ann' → logprob: -10.626666069030762
    6. 'é' → logprob: -10.751666069030762
    7. '#' → logprob: -12.251666069030762
    8. 'né' → logprob: -12.251666069030762
    9. '   ' → logprob: -12.251666069030762
    10. '_' → logprob: -12.626666069030762

Token 894: ' sa' (ID: 880)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.10267822444438934
    2. 'la' → logprob: -2.9776782989501953
    3. ' sa' → logprob: -3.3526782989501953
    4. 'le' → logprob: -5.852678298950195
    5. ' une' → logprob: -6.227678298950195
    6. 'une' → logprob: -6.227678298950195
    7. 'max' → logprob: -6.602678298950195
    8. 'sa' → logprob: -6.602678298950195
    9. 'v' → logprob: -8.227678298950195
    10. ' max' → logprob: -8.477678298950195

Token 895: ' vitesse' (ID: 71752)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.055650461465120316
    2. 'distance' → logprob: -3.805650472640991
    3. 'max' → logprob: -4.430650234222412
    4. ' vitesse' → logprob: -4.805650234222412
    5. 'position' → logprob: -4.930650234222412
    6. 'speed' → logprob: -6.930650234222412
    7. 'V' → logprob: -6.930650234222412
    8. 'vo' → logprob: -7.180650234222412
    9. 'vit' → logprob: -7.180650234222412
    10. 'vite' → logprob: -8.30565071105957

Token 896: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5166507363319397
    2. ' maximale' → logprob: -1.141650676727295
    3. ' =' → logprob: -3.766650676727295
    4. ' max' → logprob: -3.766650676727295
    5. 'initial' → logprob: -4.266650676727295
    6. '=' → logprob: -5.391650676727295
    7. 'maximum' → logprob: -5.891650676727295
    8. ' initial' → logprob: -6.016650676727295
    9. '_max' → logprob: -6.016650676727295
    10. ' maximum' → logprob: -6.391650676727295

Token 897: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 898: ' mais' (ID: 2899)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -1.0476754903793335
    2. ' but' → logprob: -1.2976754903793335
    3. '   ' → logprob: -2.172675609588623
    4. 'but' → logprob: -2.297675609588623
    5. ' mais' → logprob: -3.172675609588623
    6. 'mais' → logprob: -3.797675609588623
    7. '\n' → logprob: -4.047675609588623
    8. ' except' → logprob: -4.297675609588623
    9. '    
' → logprob: -4.547675609588623
    10. '
' → logprob: -4.672675609588623

Token 899: ' si' (ID: 1784)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8474451303482056
    2. 'les' → logprob: -1.7224451303482056
    3. 'do' → logprob: -2.347445011138916
    4. 'la' → logprob: -2.847445011138916
    5. 'leur' → logprob: -3.097445011138916
    6. 'il' → logprob: -3.222445011138916
    7. 'ne' → logprob: -3.722445011138916
    8. 'se' → logprob: -4.097445011138916
    9. 'ils' → logprob: -4.722445011138916
    10. 's' → logprob: -4.847445011138916

Token 900: ' il' (ID: 1793)
  Prédit: ' ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ships' → logprob: -0.8873742818832397
    2. ' i' → logprob: -1.2623742818832397
    3. ' not' → logprob: -2.0123744010925293
    4. 'i' → logprob: -3.1373744010925293
    5. ' len' → logprob: -3.2623744010925293
    6. ' le' → logprob: -3.2623744010925293
    7. 'not' → logprob: -4.637374401092529
    8. 'ships' → logprob: -4.762374401092529
    9. 'len' → logprob: -5.137374401092529
    10. ' the' → logprob: -5.387374401092529

Token 901: ' est' (ID: 893)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7979653477668762
    2. ' y' → logprob: -1.6729652881622314
    3. ' est' → logprob: -2.0479652881622314
    4. ' is' → logprob: -2.0479652881622314
    5. 'n' → logprob: -3.0479652881622314
    6. 'est' → logprob: -3.6729652881622314
    7. 'y' → logprob: -4.2979655265808105
    8. ' a' → logprob: -5.0479655265808105
    9. ' se' → logprob: -5.1729655265808105
    10. 's' → logprob: -7.0479655265808105

Token 902: ' à' (ID: 1221)
  Prédit: ' trop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trop' → logprob: -0.4528515934944153
    2. 'too' → logprob: -2.0778515338897705
    3. 'à' → logprob: -3.0778515338897705
    4. 'blo' → logprob: -3.0778515338897705
    5. 'der' → logprob: -3.2028515338897705
    6. 't' → logprob: -3.3278515338897705
    7. ' derrière' → logprob: -3.7028515338897705
    8. 'behind' → logprob: -4.70285177230835
    9. ' too' → logprob: -5.20285177230835
    10. 'plus' → logprob: -5.45285177230835

Token 903: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.21189086139202118
    2. 'distance' → logprob: -1.7118908166885376
    3. '0' → logprob: -5.336890697479248
    4. 'une' → logprob: -5.961890697479248
    5. 'less' → logprob: -6.711890697479248
    6. 'mo' → logprob: -7.461890697479248
    7. '1' → logprob: -7.836890697479248
    8. ' moins' → logprob: -8.586891174316406
    9. 'dist' → logprob: -8.586891174316406
    10. '<=' → logprob: -9.211891174316406

Token 904: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9449783563613892
    2. 'd' → logprob: -1.1949783563613892
    3. ' de' → logprob: -1.5699783563613892
    4. 'de' → logprob: -2.3199782371520996
    5. ' ' → logprob: -7.3199782371521
    6. ' than' → logprob: -8.069978713989258
    7. '   ' → logprob: -8.194978713989258
    8. '1' → logprob: -8.194978713989258
    9. '  ' → logprob: -8.569978713989258
    10. '    ' → logprob: -9.444978713989258

Token 905: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1004016250371933
    2. ' ' → logprob: -2.3504016399383545
    3. 'EPS' → logprob: -9.600401878356934
    4. ' EPS' → logprob: -9.850401878356934
    5. '100' → logprob: -11.225401878356934
    6. '0' → logprob: -11.225401878356934
    7. 'distance' → logprob: -11.662901878356934
    8. 'g' → logprob: -12.225401878356934
    9. ' distance' → logprob: -12.725401878356934
    10. '2' → logprob: -12.850401878356934

Token 906: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006566775846295059
    2. ' ' → logprob: -8.250657081604004
    3. '2' → logprob: -8.500657081604004
    4. 'EPS' → logprob: -9.250657081604004
    5. '100' → logprob: -10.500657081604004
    6. '0' → logprob: -11.000657081604004
    7. 'distance' → logprob: -11.625657081604004
    8. '```' → logprob: -12.188157081604004
    9. 'eps' → logprob: -12.250657081604004
    10. 'g' → logprob: -12.563157081604004

Token 907: 'km' (ID: 15284)
  Prédit: ' km'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' km' → logprob: -0.05778782442212105
    2. 'km' → logprob: -3.0577878952026367
    3. '.' → logprob: -4.807787895202637
    4. '_' → logprob: -7.557787895202637
    5. ' ' → logprob: -8.932787895202637
    6. ' de' → logprob: -9.057787895202637
    7. ' _' → logprob: -10.057787895202637
    8. ' kilom' → logprob: -10.307787895202637
    9. '```' → logprob: -10.682787895202637
    10. ' ' → logprob: -10.682787895202637

Token 908: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.6615541577339172
    2. 'd' → logprob: -2.0365540981292725
    3. ' d' → logprob: -2.0365540981292725
    4. 'du' → logprob: -2.1615540981292725
    5. ' de' → logprob: -2.6615540981292725
    6. 'de' → logprob: -3.5365540981292725
    7. ' des' → logprob: -6.161554336547852
    8. 'from' → logprob: -6.286554336547852
    9. ' ' → logprob: -6.911554336547852
    10. '   ' → logprob: -7.286554336547852

Token 909: ' bateau' (ID: 123794)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.8852976560592651
    2. 'pr' → logprob: -1.1352976560592651
    3. 'ship' → logprob: -1.7602976560592651
    4. 'nav' → logprob: -3.8852977752685547
    5. ' ship' → logprob: -4.510297775268555
    6. ' précédent' → logprob: -4.510297775268555
    7. ' bateau' → logprob: -4.885297775268555
    8. 'bate' → logprob: -5.010297775268555
    9. 'pré' → logprob: -5.260297775268555
    10. '```' → logprob: -5.385297775268555

Token 910: ' devant' (ID: 37522)
  Prédit: 'dev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dev' → logprob: -0.6075350046157837
    2. 'pr' → logprob: -1.1075350046157837
    3. ' devant' → logprob: -2.982534885406494
    4. 'de' → logprob: -3.482534885406494
    5. ' précédent' → logprob: -4.482534885406494
    6. 'su' → logprob: -4.857534885406494
    7. 'qui' → logprob: -5.107534885406494
    8. 'preced' → logprob: -5.357534885406494
    9. ' qui' → logprob: -6.232534885406494
    10. 'avant' → logprob: -6.357534885406494

Token 911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006182490848004818
    2. ' lui' → logprob: -5.756182670593262
    3. 'e' → logprob: -7.006182670593262
    4. '   ' → logprob: -7.756182670593262
    5. 'le' → logprob: -8.381182670593262
    6. ' ,' → logprob: -8.631182670593262
    7. '(e' → logprob: -8.756182670593262
    8. 'é' → logprob: -9.006182670593262
    9. '(' → logprob: -9.131182670593262
    10. '.' → logprob: -9.381182670593262

Token 912: ' il' (ID: 1793)
  Prédit: ' il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.3181491196155548
    2. ' ils' → logprob: -2.3181490898132324
    3. 'il' → logprob: -2.5681490898132324
    4. ' sa' → logprob: -3.4431490898132324
    5. ' alors' → logprob: -3.5681490898132324
    6. 'leur' → logprob: -4.568149089813232
    7. 'ils' → logprob: -5.318149089813232
    8. ' celui' → logprob: -5.568149089813232
    9. '#' → logprob: -5.693149089813232
    10. ' leur' → logprob: -5.693149089813232

Token 913: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -1.4602106809616089
    2. ' must' → logprob: -1.5852106809616089
    3. 'must' → logprob: -2.2102108001708984
    4. ' devra' → logprob: -2.3352108001708984
    5. 's' → logprob: -2.5852108001708984
    6. ' ralent' → logprob: -2.8352108001708984
    7. 'v' → logprob: -3.3352108001708984
    8. 'do' → logprob: -3.3352108001708984
    9. 'speed' → logprob: -3.9602108001708984
    10. ' reste' → logprob: -4.460210800170898

Token 914: ' réduire' (ID: 78295)
  Prédit: 'ral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ral' → logprob: -0.5276934504508972
    2. 're' → logprob: -2.027693510055542
    3. 'ré' → logprob: -2.777693510055542
    4. ' ralent' → logprob: -2.777693510055542
    5. 's' → logprob: -3.027693510055542
    6. 'aller' → logprob: -3.652693510055542
    7. 'ra' → logprob: -4.152693271636963
    8. 'se' → logprob: -4.777693271636963
    9. 'avoir' → logprob: -4.902693271636963
    10. 'r' → logprob: -5.152693271636963

Token 915: ' sa' (ID: 880)
  Prédit: 'sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sa' → logprob: -0.3833298683166504
    2. ' sa' → logprob: -1.2583298683166504
    3. 'v' → logprob: -4.13332986831665
    4. 'son' → logprob: -5.13332986831665
    5. 'la' → logprob: -5.50832986831665
    6. '_sa' → logprob: -6.00832986831665
    7. ' ' → logprob: -7.13332986831665
    8. 'l' → logprob: -7.13332986831665
    9. '_v' → logprob: -7.13332986831665
    10. 'leur' → logprob: -7.63332986831665

Token 916: ' vitesse' (ID: 71752)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4970642924308777
    2. 'speed' → logprob: -0.9970642924308777
    3. ' vitesse' → logprob: -4.372064113616943
    4. ' speed' → logprob: -4.872064113616943
    5. 'distance' → logprob: -6.872064113616943
    6. '_v' → logprob: -6.997064113616943
    7. 'vit' → logprob: -8.747064590454102
    8. '_speed' → logprob: -9.372064590454102
    9. 'space' → logprob: -9.997064590454102
    10. 'velocity' → logprob: -9.997064590454102

Token 917: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4709777235984802
    2. '
' → logprob: -1.345977783203125
    3. '<|end|>' → logprob: -2.845977783203125
    4. '.' → logprob: -3.720977783203125
    5. '    
' → logprob: -4.845977783203125
    6. '       ' → logprob: -5.470977783203125
    7. '<|end|>' → logprob: -5.595977783203125
    8. '  
' → logprob: -6.095977783203125
    9. '```' → logprob: -6.345977783203125
    10. ' for' → logprob: -6.720977783203125

Token 918: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9177358150482178
    2. '<|end|>' → logprob: -1.7927358150482178
    3. '   ' → logprob: -2.2927358150482178
    4. '_' → logprob: -2.5427358150482178
    5. 's' → logprob: -2.9177358150482178
    6. ',' → logprob: -3.2927358150482178
    7. '(s' → logprob: -3.4177358150482178
    8. '       ' → logprob: -3.7927358150482178
    9. ' ' → logprob: -3.7927358150482178
    10. '<|end|>' → logprob: -4.167736053466797

Token 919: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0363028459250927
    2. '<|end|>' → logprob: -4.4113030433654785
    3. '
' → logprob: -4.9113030433654785
    4. ' for' → logprob: -5.1613030433654785
    5. '    
' → logprob: -5.6613030433654785
    6. 'for' → logprob: -6.6613030433654785
    7. '       ' → logprob: -6.9113030433654785
    8. ' 
' → logprob: -7.2863030433654785
    9. '<|end|>' → logprob: -7.2863030433654785
    10. '\n' → logprob: -7.4113030433654785

Token 920: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.035444974899292
    2. 'for' → logprob: -1.285444974899292
    3. ' for' → logprob: -1.535444974899292
    4. '   ' → logprob: -2.035444974899292
    5. '    
' → logprob: -4.660445213317871
    6. ' 
' → logprob: -5.160445213317871
    7. '\n' → logprob: -6.160445213317871
    8. '#' → logprob: -6.660445213317871
    9. '```' → logprob: -7.285445213317871
    10. '  
' → logprob: -7.410445213317871

Token 921: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4824075698852539
    2. 'min' → logprob: -1.232407569885254
    3. 'max' → logprob: -2.982407569885254
    4. 'ships' → logprob: -4.607407569885254
    5. 'ship' → logprob: -4.732407569885254
    6. '1' → logprob: -4.857407569885254
    7. ' ' → logprob: -5.857407569885254
    8. ' celui' → logprob: -6.482407569885254
    9. '(' → logprob: -6.982407569885254
    10. 'la' → logprob: -6.982407569885254

Token 922: ' vitesse' (ID: 71752)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6211580038070679
    2. 'ships' → logprob: -1.4961580038070679
    3. 'min' → logprob: -1.9961580038070679
    4. 'ship' → logprob: -3.2461581230163574
    5. '0' → logprob: -3.7461581230163574
    6. 'distance' → logprob: -3.9961581230163574
    7. '1' → logprob: -5.246158123016357
    8. 'float' → logprob: -5.996158123016357
    9. ' ships' → logprob: -6.621158123016357
    10. ' max' → logprob: -6.746158123016357

Token 923: ' du' (ID: 1462)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17402370274066925
    2. 'du' → logprob: -2.6740236282348633
    3. ' du' → logprob: -3.2990236282348633
    4. ' maximale' → logprob: -3.4240236282348633
    5. 'min' → logprob: -5.049023628234863
    6. 'maximum' → logprob: -5.549023628234863
    7. 'minimum' → logprob: -6.049023628234863
    8. 'de' → logprob: -6.299023628234863
    9. ' minimale' → logprob: -6.299023628234863
    10. ' max' → logprob: -6.799023628234863

Token 924: ' bateau' (ID: 123794)
  Prédit: 'dev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dev' → logprob: -0.8305579423904419
    2. 'bate' → logprob: -1.830557942390442
    3. 'dern' → logprob: -1.955557942390442
    4. 'preced' → logprob: -2.3305578231811523
    5. ' bateau' → logprob: -3.5805578231811523
    6. 'ship' → logprob: -3.7055578231811523
    7. ' devant' → logprob: -4.080557823181152
    8. 'b' → logprob: -4.205557823181152
    9. '```' → logprob: -4.330557823181152
    10. 'boat' → logprob: -4.330557823181152

Token 925: ' de' (ID: 334)
  Prédit: ' devant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' devant' → logprob: -0.16871614754199982
    2. ' juste' → logprob: -2.4187161922454834
    3. ' précédent' → logprob: -4.418715953826904
    4. 'preced' → logprob: -4.793715953826904
    5. 's' → logprob: -5.293715953826904
    6. 'dev' → logprob: -5.418715953826904
    7. 'ahead' → logprob: -5.543715953826904
    8. '```' → logprob: -5.918715953826904
    9. 'def' → logprob: -6.043715953826904
    10. '#' → logprob: -6.168715953826904

Token 926: ' devant' (ID: 37522)
  Prédit: 'dev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dev' → logprob: -0.00700911320745945
    2. ' devant' → logprob: -5.382009029388428
    3. 'dess' → logprob: -6.757009029388428
    4. '```' → logprob: -8.257009506225586
    5. 'avant' → logprob: -9.007009506225586
    6. '
' → logprob: -9.132009506225586
    7. 'dav' → logprob: -9.257009506225586
    8. 'pr' → logprob: -9.882009506225586
    9. 'de' → logprob: -10.007009506225586
    10. 'l' → logprob: -10.007009506225586

Token 927: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39601877331733704
    2. '   ' → logprob: -1.1460187435150146
    3. '    
' → logprob: -4.771018981933594
    4. '<|end|>' → logprob: -8.521018981933594
    5. '```' → logprob: -8.771018981933594
    6. '\n' → logprob: -9.271018981933594
    7. '  
' → logprob: -10.521018981933594
    8. '<|end|>' → logprob: -10.771018981933594
    9. 'for' → logprob: -10.896018981933594
    10. ' 
' → logprob: -11.021018981933594

Token 928: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30493229627609253
    2. '
' → logprob: -1.4299323558807373
    3. '    
' → logprob: -4.304932117462158
    4. 'for' → logprob: -6.054932117462158
    5. ' for' → logprob: -6.179932117462158
    6. '\n' → logprob: -6.429932117462158
    7. '<|end|>' → logprob: -6.804932117462158
    8. '```' → logprob: -6.929932117462158
    9. ' 
' → logprob: -7.054932117462158
    10. '  
' → logprob: -7.679932117462158

Token 929: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.348891019821167
    2. '   ' → logprob: -1.848891019821167
    3. ' for' → logprob: -2.848891019821167
    4. 'for' → logprob: -3.598891019821167
    5. '    
' → logprob: -3.723891019821167
    6. ' 
' → logprob: -3.723891019821167
    7. '\n' → logprob: -7.223891258239746
    8. '#' (adapté à ' #') → logprob: -7.598891258239746
    9. '   
' → logprob: -7.723891258239746
    10. '  
' → logprob: -7.848891258239746

Token 930: ' Au' (ID: 18016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2797585725784302
    2. 'for' → logprob: -1.5297585725784302
    3. ' for' → logprob: -3.9047584533691406
    4. '
' → logprob: -5.279758453369141
    5. '    
' → logprob: -7.029758453369141
    6. '```' → logprob: -7.654758453369141
    7. 'def' → logprob: -8.02975845336914
    8. '#' → logprob: -8.15475845336914
    9. 'ships' → logprob: -10.02975845336914
    10. 'i' → logprob: -10.02975845336914

Token 931: ' départ' (ID: 32693)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.13713538646698
    2. 'def' → logprob: -2.0121355056762695
    3. ' passage' → logprob: -2.1371355056762695
    4. 'pp' → logprob: -2.6371355056762695
    5. '#' → logprob: -3.0121355056762695
    6. 'ucune' → logprob: -3.2621355056762695
    7. ' for' → logprob: -3.3871355056762695
    8. 'près' → logprob: -3.5121355056762695
    9. 'ss' → logprob: -3.6371355056762695
    10. 'n' → logprob: -4.0121355056762695

Token 932: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10226558148860931
    2. ' for' → logprob: -2.7272655963897705
    3. 'for' → logprob: -4.227265357971191
    4. ' ships' → logprob: -4.727265357971191
    5. ',' → logprob: -5.852265357971191
    6. '    
' → logprob: -6.102265357971191
    7. '
' → logprob: -6.477265357971191
    8. 'ships' → logprob: -7.727265357971191
    9. ' ,' → logprob: -7.852265357971191
    10. ':' → logprob: -8.352265357971191

Token 933: ' tous' (ID: 10688)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09462901204824448
    2. 'ships' → logprob: -2.4696290493011475
    3. ' for' → logprob: -5.719628810882568
    4. '#' → logprob: -6.594628810882568
    5. ' ships' → logprob: -7.469628810882568
    6. 'if' → logprob: -8.094629287719727
    7. '   ' → logprob: -9.094629287719727
    8. ' #' → logprob: -12.094629287719727
    9. 'pass' → logprob: -12.219629287719727
    10. '```' → logprob: -12.344629287719727

Token 934: ' arrêt' (ID: 77403)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.10868697613477707
    2. ' ships' → logprob: -2.483686923980713
    3. 'les' → logprob: -5.233686923980713
    4. 'ships' → logprob: -5.483686923980713
    5. ' have' → logprob: -6.608686923980713
    6. ' ' → logprob: -6.733686923980713
    7. ' ont' → logprob: -6.983686923980713
    8. ' the' → logprob: -7.108686923980713
    9. ' n' → logprob: -7.233686923980713
    10. 's' → logprob: -7.233686923980713

Token 935: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.026399457827210426
    2. 'é' → logprob: -3.6513993740081787
    3. 'es' → logprob: -9.401399612426758
    4. 'e' → logprob: -12.276399612426758
    5. 'er' → logprob: -12.526399612426758
    6. 'ès' → logprob: -12.651399612426758
    7. 's' → logprob: -13.651399612426758
    8. 'ées' → logprob: -14.276399612426758
    9. 'ée' → logprob: -14.276399612426758
    10. '```' → logprob: -14.401399612426758

Token 936: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8844889402389526
    2. '.' → logprob: -1.2594889402389526
    3. '   ' → logprob: -1.7594889402389526
    4. '<|end|>' → logprob: -2.384489059448242
    5. '    
' → logprob: -4.134489059448242
    6. '\n' → logprob: -5.134489059448242
    7. '<|end|>' → logprob: -5.509489059448242
    8. ',' → logprob: -6.134489059448242
    9. '```' → logprob: -6.259489059448242
    10. '.
' → logprob: -6.509489059448242

Token 937: 'speed' (ID: 42880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04063458740711212
    2. ')
' → logprob: -4.165634632110596
    3. ' )' → logprob: -4.415634632110596
    4. '0' → logprob: -4.540634632110596
    5. ' )
' → logprob: -7.915634632110596
    6. ')\' → logprob: -8.415634155273438
    7. '),' → logprob: -8.790634155273438
    8. 'ships' → logprob: -9.040634155273438
    9. ')#' → logprob: -9.540634155273438
    10. ').' → logprob: -9.665634155273438

Token 938: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142970979213715
    2. '=' → logprob: -1.7014297246932983
    3. ')' → logprob: -11.57642936706543
    4. '0' → logprob: -12.57642936706543
    5. ' ' → logprob: -13.20142936706543
    6. ' )' → logprob: -14.70142936706543
    7. '   ' → logprob: -15.20142936706543
    8. ' ==' → logprob: -15.45142936706543
    9. '  ' → logprob: -16.20142936706543
    10. 's' → logprob: -16.32642936706543

Token 939: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002622894535306841
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.875262260437012
    4. '  ' → logprob: -15.562762260437012
    5. '```' → logprob: -15.812762260437012
    6. '.' → logprob: -16.500263214111328
    7. '1' → logprob: -16.750263214111328
    8. ' ' → logprob: -17.062763214111328
    9. '    ' → logprob: -17.312763214111328
    10. '=' → logprob: -17.687763214111328

Token 940: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028537323232740164
    2. ')
' → logprob: -5.877853870391846
    3. ')

' → logprob: -11.002853393554688
    4. ' )' → logprob: -11.252853393554688
    5. '
' → logprob: -12.127853393554688
    6. '),' → logprob: -12.877853393554688
    7. ').' → logprob: -13.002853393554688
    8. ')
' → logprob: -13.377853393554688
    9. ')\' → logprob: -13.377853393554688
    10. '.' → logprob: -13.877853393554688

Token 941: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8955909013748169
    2. '
' → logprob: -1.020590901374817
    3. '    
' → logprob: -2.0205907821655273
    4. '#' → logprob: -3.5205907821655273
    5. 'for' → logprob: -4.270590782165527
    6. ' 
' → logprob: -4.395590782165527
    7. ' for' → logprob: -4.645590782165527
    8. '\n' → logprob: -5.020590782165527
    9. ' ' → logprob: -5.520590782165527
    10. ' ships' → logprob: -5.895590782165527

Token 942: ' dès' (ID: 37926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0930635929107666
    2. ' for' → logprob: -1.2180635929107666
    3. ' ships' → logprob: -1.3430635929107666
    4. '#' → logprob: -2.7180635929107666
    5. 'ships' → logprob: -3.7180635929107666
    6. ' #' → logprob: -5.4680633544921875
    7. '
' → logprob: -5.9680633544921875
    8. 'le' → logprob: -6.5930633544921875
    9. 's' → logprob: -6.8430633544921875
    10. ' les' → logprob: -6.8430633544921875

Token 943: ' que' (ID: 661)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7898064255714417
    2. ' l' → logprob: -1.2898063659667969
    3. ' la' → logprob: -2.164806365966797
    4. ' the' → logprob: -3.289806365966797
    5. ' que' → logprob: -3.789806365966797
    6. 'le' → logprob: -4.039806365966797
    7. 'l' → logprob: -4.164806365966797
    8. 'import' → logprob: -4.914806365966797
    9. ' les' → logprob: -5.039806365966797
    10. ' t' → logprob: -5.664806365966797

Token 944: ' possible' (ID: 4149)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.1608794927597046
    2. 'True' → logprob: -1.5358794927597046
    3. ' i' → logprob: -1.7858794927597046
    4. 'i' → logprob: -1.9108794927597046
    5. ' ships' → logprob: -3.035879611968994
    6. ' le' → logprob: -3.410879611968994
    7. 'ships' → logprob: -4.160879611968994
    8. 'le' → logprob: -4.535879611968994
    9. ' la' → logprob: -4.785879611968994
    10. ' the' → logprob: -4.785879611968994

Token 945: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01991034485399723
    2. ' ,' → logprob: -4.2699103355407715
    3. ' ships' → logprob: -6.3949103355407715
    4. ',
' → logprob: -6.8949103355407715
    5. ':' → logprob: -7.1449103355407715
    6. '<|end|>' → logprob: -7.2699103355407715
    7. '   ' → logprob: -7.5199103355407715
    8. ' for' → logprob: -8.51991081237793
    9. ':
' → logprob: -9.14491081237793
    10. '       ' → logprob: -9.14491081237793

Token 946: ' avanc' (ID: 87985)
  Prédit: ' ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ships' → logprob: -0.17756204307079315
    2. 'ships' → logprob: -2.3025619983673096
    3. ' for' → logprob: -3.1775619983673096
    4. 'for' → logprob: -3.9275619983673096
    5. '   ' → logprob: -7.052562236785889
    6. 'ship' → logprob: -9.30256175994873
    7. 'boats' → logprob: -9.80256175994873
    8. '       ' → logprob: -10.61506175994873
    9. ' ship' → logprob: -10.61506175994873
    10. ' ' → logprob: -10.67756175994873

Token 947: 'ent' (ID: 299)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4989466667175293
    2. 'e' → logprob: -0.9989466667175293
    3. 'ent' → logprob: -3.7489466667175293
    4. 'ant' → logprob: -8.373947143554688
    5. ' e' → logprob: -8.748947143554688
    6. '   ' → logprob: -9.123947143554688
    7. 'es' → logprob: -9.373947143554688
    8. 'ers' → logprob: -9.498947143554688
    9. 'é' → logprob: -9.498947143554688
    10. 'aient' → logprob: -9.623947143554688

Token 948: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2794211804866791
    2. '
' → logprob: -2.654421091079712
    3. '<|end|>' → logprob: -3.029421091079712
    4. '.' → logprob: -3.279421091079712
    5. 'for' → logprob: -3.529421091079712
    6. ',' → logprob: -4.404421329498291
    7. '    
' → logprob: -4.654421329498291
    8. '       ' → logprob: -5.029421329498291
    9. ' for' → logprob: -5.529421329498291
    10. ' =' → logprob: -5.779421329498291

Token 949: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04985225945711136
    2. '   ' → logprob: -3.2998523712158203
    3. '    
' → logprob: -4.92485237121582
    4. ' for' → logprob: -6.17485237121582
    5. 'for' → logprob: -7.04985237121582
    6. ' 
' → logprob: -7.17485237121582
    7. '<|end|>' → logprob: -8.42485237121582
    8. '#' → logprob: -9.17485237121582
    9. '```' → logprob: -9.17485237121582
    10. '  
' → logprob: -9.42485237121582

Token 950: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2592589855194092
    2. '
' → logprob: -1.8842589855194092
    3. '#' (adapté à ' #') → logprob: -3.509258985519409
    4. '    
' → logprob: -4.009259223937988
    5. 'for' → logprob: -4.509259223937988
    6. 'while' → logprob: -4.884259223937988
    7. '```' → logprob: -6.009259223937988
    8. 'current' → logprob: -6.384259223937988
    9. 'def' → logprob: -7.134259223937988
    10. ' 
' → logprob: -7.134259223937988

Token 951: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10522784292697906
    2. '
' → logprob: -3.7302279472351074
    3. '#' → logprob: -4.105227947235107
    4. 'for' → logprob: -4.230227947235107
    5. '    
' → logprob: -4.480227947235107
    6. 'current' → logprob: -4.730227947235107
    7. ' #' → logprob: -5.105227947235107
    8. 'while' → logprob: -5.230227947235107
    9. ' for' → logprob: -5.855227947235107
    10. 'time' → logprob: -6.105227947235107

Token 952: ' mod' (ID: 1812)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8630751371383667
    2. ' continue' → logprob: -1.9880751371383667
    3. ' =' → logprob: -2.2380752563476562
    4. 'n' → logprob: -2.2380752563476562
    5. ' ' → logprob: -2.2380752563476562
    6. ' #' → logprob: -2.2380752563476562
    7. '   ' → logprob: -3.3630752563476562
    8. '#' → logprob: -3.4880752563476562
    9. 'def' → logprob: -3.6130752563476562
    10. '
' → logprob: -4.238075256347656

Token 953: 'él' (ID: 6778)
  Prédit: 'ify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ify' → logprob: -1.311768651008606
    2. 'el' → logprob: -1.811768651008606
    3. 'ifié' → logprob: -2.1867685317993164
    4. 'ifie' → logprob: -2.4367685317993164
    5. 'if' → logprob: -2.5617685317993164
    6. 'é' → logprob: -2.9367685317993164
    7. 'er' → logprob: -2.9367685317993164
    8. 'èle' → logprob: -3.0617685317993164
    9. 'e' → logprob: -3.3117685317993164
    10. 'ule' → logprob: -3.4367685317993164

Token 954: 'is' (ID: 276)
  Prédit: 'isons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isons' → logprob: -0.5952145457267761
    2. 'ise' → logprob: -1.095214605331421
    3. 'e' → logprob: -3.470214605331421
    4. 'isent' → logprob: -3.595214605331421
    5. 'is' → logprob: -4.220214366912842
    6. 'ons' → logprob: -4.470214366912842
    7. 'iser' → logprob: -4.470214366912842
    8. '```' → logprob: -4.845214366912842
    9. 'er' → logprob: -6.220214366912842
    10. 'isé' → logprob: -7.345214366912842

Token 955: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02048804983496666
    2. 'ons' → logprob: -4.145488262176514
    3. 'er' → logprob: -5.645488262176514
    4. 'ent' → logprob: -7.395488262176514
    5. 'é' → logprob: -9.145487785339355
    6. '#' → logprob: -9.770487785339355
    7. '```' → logprob: -9.895487785339355
    8. 'es' → logprob: -11.145487785339355
    9. 'se' → logprob: -11.395487785339355
    10. 'on' → logprob: -11.895487785339355

Token 956: ' le' (ID: 505)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3213624954223633
    2. ' un' → logprob: -2.0713624954223633
    3. ' for' → logprob: -2.3213624954223633
    4. ' une' → logprob: -2.5713624954223633
    5. ' ici' → logprob: -2.6963624954223633
    6. ' la' → logprob: -3.0713624954223633
    7. ' here' → logprob: -3.0713624954223633
    8. 'for' → logprob: -3.5713624954223633
    9. ' def' → logprob: -3.6963624954223633
    10. ' l' → logprob: -3.6963624954223633

Token 957: ' mouvement' (ID: 62236)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passage' → logprob: -1.53346586227417
    2. ' time' → logprob: -2.28346586227417
    3. ' code' → logprob: -2.53346586227417
    4. ' next' → logprob: -2.78346586227417
    5. ' simulate' → logprob: -2.78346586227417
    6. ' behavior' → logprob: -2.90846586227417
    7. ' def' → logprob: -3.03346586227417
    8. ' movement' → logprob: -3.15846586227417
    9. '_' → logprob: -3.15846586227417
    10. ' logic' → logprob: -3.53346586227417

Token 958: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 959: ' év' (ID: 23692)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.0459131002426147
    2. ' une' → logprob: -1.7959131002426147
    3. 'une' → logprob: -2.0459132194519043
    4. 'un' → logprob: -2.0459132194519043
    5. ' pas' → logprob: -2.5459132194519043
    6. ' un' → logprob: -3.0459132194519043
    7. ' des' → logprob: -3.9209132194519043
    8. 'pet' → logprob: -4.420913219451904
    9. 'des' → logprob: -4.670913219451904
    10. 't' → logprob: -4.920913219451904

Token 960: 'ènements' (ID: 178488)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.46788644790649414
    2. 'en' → logprob: -1.8428864479064941
    3. 'ent' → logprob: -2.217886447906494
    4. 'olution' → logprob: -3.467886447906494
    5. 'énement' → logprob: -3.592886447906494
    6. 'ènement' → logprob: -3.967886447906494
    7. 'ènements' → logprob: -4.717886447906494
    8. 'enment' → logprob: -5.592886447906494
    9. 'én' → logprob: -6.467886447906494
    10. 'ement' → logprob: -7.092886447906494

Token 961: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 962: '   ' (ID: 271)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.2842913269996643
    2. '#' → logprob: -1.9092912673950195
    3. ' events' → logprob: -2.7842912673950195
    4. 'import' → logprob: -4.6592912673950195
    5. '
' → logprob: -5.1592912673950195
    6. ' 
' → logprob: -5.7842912673950195
    7. 'event' → logprob: -5.9092912673950195
    8. 'def' → logprob: -6.0342912673950195
    9. '   ' → logprob: -6.1592912673950195
    10. 'class' → logprob: -6.2842912673950195

Token 963: ' #' (ID: 1069)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.07603829354047775
    2. 'import' → logprob: -3.576038360595703
    3. '#' (adapté à ' #') → logprob: -3.826038360595703
    4. 'event' → logprob: -4.451038360595703
    5. ' events' → logprob: -5.201038360595703
    6. '   ' → logprob: -5.951038360595703
    7. 'time' → logprob: -6.576038360595703
    8. 'return' → logprob: -7.826038360595703
    9. 'from' → logprob: -7.951038360595703
    10. 'times' → logprob: -8.326038360595703

Token 964: ' Points' (ID: 38086)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.024088161066174507
    2. 'import' → logprob: -4.899088382720947
    3. 'time' → logprob: -5.274088382720947
    4. 'event' → logprob: -5.274088382720947
    5. '#' → logprob: -5.399088382720947
    6. 'times' → logprob: -7.524088382720947
    7. 'from' → logprob: -7.774088382720947
    8. 'ev' → logprob: -9.149087905883789
    9. 'current' → logprob: -9.149087905883789
    10. 't' → logprob: -9.399087905883789

Token 965: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2434529811143875
    2. '_events' → logprob: -1.993453025817871
    3. '=' → logprob: -3.493453025817871
    4. '=[]' → logprob: -3.993453025817871
    5. 'events' → logprob: -4.618453025817871
    6. '_de' → logprob: -5.493453025817871
    7. 'de' → logprob: -5.743453025817871
    8. '[]' → logprob: -6.118453025817871
    9. '_' → logprob: -6.243453025817871
    10. '_positions' → logprob: -6.368453025817871

Token 966: ' sim' (ID: 1845)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.6044768691062927
    2. 'sim' → logprob: -1.2294769287109375
    3. 'g' → logprob: -2.3544769287109375
    4. 'tr' → logprob: -4.1044769287109375
    5. 'su' → logprob: -4.7294769287109375
    6. 'consider' → logprob: -4.8544769287109375
    7. 'aj' → logprob: -5.1044769287109375
    8. 'ger' → logprob: -5.1044769287109375
    9. ' traiter' → logprob: -5.6044769287109375
    10. 'tra' → logprob: -5.8544769287109375

Token 967: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.0011791547294706106
    2. 'enter' → logprob: -7.751179218292236
    3. 'er' → logprob: -9.001178741455078
    4. 'ule' → logprob: -9.126178741455078
    5. 'pler' → logprob: -9.251178741455078
    6. 'ul' → logprob: -9.376178741455078
    7. 'ulation' → logprob: -9.876178741455078
    8. 'ulate' → logprob: -9.876178741455078
    9. 'ent' → logprob: -10.001178741455078
    10. 'ple' → logprob: -10.376178741455078

Token 968: ':
' (ID: 734)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.7029630541801453
    2. '#' → logprob: -1.20296311378479
    3. ':' → logprob: -2.32796311378479
    4. 'event' → logprob: -3.70296311378479
    5. 'pass' → logprob: -4.077962875366211
    6. 'time' → logprob: -4.577962875366211
    7. '```' → logprob: -4.577962875366211
    8. ' events' → logprob: -5.327962875366211
    9. '<|end|>' → logprob: -5.577962875366211
    10. '...' → logprob: -5.577962875366211

Token 969: '   ' (ID: 271)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.17080473899841309
    2. ' events' → logprob: -2.045804738998413
    3. 'pass' → logprob: -4.670804977416992
    4. 'time' → logprob: -5.170804977416992
    5. 'event' → logprob: -5.670804977416992
    6. '#' → logprob: -6.170804977416992
    7. ' pass' → logprob: -6.420804977416992
    8. ' #' → logprob: -7.420804977416992
    9. 'current' → logprob: -7.795804977416992
    10. ' time' → logprob: -7.795804977416992

Token 970: ' #' (ID: 1069)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.3023759424686432
    2. 'pass' → logprob: -2.1773760318756104
    3. 'time' → logprob: -2.9273760318756104
    4. ' events' → logprob: -3.6773760318756104
    5. '#' (adapté à ' #') → logprob: -3.8023760318756104
    6. 'event' → logprob: -4.552375793457031
    7. 't' → logprob: -4.802375793457031
    8. ' gates' → logprob: -5.302375793457031
    9. 'current' → logprob: -5.427375793457031
    10. 'times' → logprob: -5.552375793457031

Token 971: ' Ev' (ID: 16426)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.8485395312309265
    2. 'pass' → logprob: -1.0985395908355713
    3. '#' → logprob: -2.0985395908355713
    4. 'time' → logprob: -3.2235395908355713
    5. 'g' → logprob: -4.598539352416992
    6. 'event' → logprob: -4.723539352416992
    7. ' events' → logprob: -4.848539352416992
    8. ' gates' → logprob: -4.973539352416992
    9. 'positions' → logprob: -5.348539352416992
    10. ' #' → logprob: -5.473539352416992

Token 972: 'ènements' (ID: 178488)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.012860527262091637
    2. 'ent' → logprob: -4.512860298156738
    3. 'ènements' → logprob: -6.512860298156738
    4. 'ènement' → logprob: -9.262860298156738
    5. 'events' → logprob: -10.512860298156738
    6. 'en' → logprob: -10.512860298156738
    7. ' ents' → logprob: -10.637860298156738
    8. 'énement' → logprob: -11.012860298156738
    9. 'enants' → logprob: -11.012860298156738
    10. 'ENTS' → logprob: -11.137860298156738

Token 973: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002166794380173087
    2. '=' → logprob: -6.627166748046875
    3. '_events' → logprob: -8.002166748046875
    4. 'events' → logprob: -8.502166748046875
    5. '=[]' → logprob: -8.627166748046875
    6. 's' → logprob: -10.252166748046875
    7. ':' → logprob: -10.252166748046875
    8. '[]' → logprob: -12.127166748046875
    9. ' =
' → logprob: -12.252166748046875
    10. '   ' → logprob: -12.377166748046875

Token 974: ' gérer' (ID: 86786)
  Prédit: ' traiter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traiter' → logprob: -0.860426664352417
    2. ' gérer' → logprob: -1.235426664352417
    3. 'g' → logprob: -2.235426664352417
    4. 'trait' → logprob: -2.735426664352417
    5. 'ger' → logprob: -3.360426664352417
    6. 'sim' → logprob: -3.985426664352417
    7. 'process' → logprob: -3.985426664352417
    8. 'aj' → logprob: -4.735426902770996
    9. 'tr' → logprob: -4.860426902770996
    10. 'tra' → logprob: -5.235426902770996

Token 975: ' :
' (ID: 10039)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.13107529282569885
    2. ' events' → logprob: -2.256075382232666
    3. 'event' → logprob: -5.756075382232666
    4. '
' → logprob: -6.131075382232666
    5. '   ' → logprob: -6.131075382232666
    6. '_events' → logprob: -6.256075382232666
    7. '[]' → logprob: -6.256075382232666
    8. '<|end|>' → logprob: -7.131075382232666
    9. '<|end|>' → logprob: -7.381075382232666
    10. ' =' → logprob: -7.381075382232666

Token 976: '   ' (ID: 271)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.37426936626434326
    2. ' events' → logprob: -1.2492693662643433
    3. 'event' → logprob: -4.749269485473633
    4. '   ' → logprob: -5.249269485473633
    5. 'ev' → logprob: -6.374269485473633
    6. ' pass' → logprob: -6.499269485473633
    7. '#' → logprob: -6.749269485473633
    8. '[]' → logprob: -6.749269485473633
    9. ' event' → logprob: -6.874269485473633
    10. ' ev' → logprob: -7.874269485473633

Token 977: ' #' (ID: 1069)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.5056558847427368
    2. '#' (adapté à ' #') → logprob: -1.8806558847427368
    3. ' events' → logprob: -1.8806558847427368
    4. 'pass' → logprob: -3.8806557655334473
    5. ' pass' → logprob: -4.005655765533447
    6. ' #' → logprob: -4.130655765533447
    7. 'event' → logprob: -4.755655765533447
    8. '   ' → logprob: -5.380655765533447
    9. 'class' → logprob: -5.630655765533447
    10. '[]' → logprob: -5.880655765533447

Token 978: ' -' (ID: 533)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.44947952032089233
    2. '#' → logprob: -1.324479579925537
    3. ' events' → logprob: -3.324479579925537
    4. ' #' → logprob: -3.699479579925537
    5. 'pass' → logprob: -4.449479579925537
    6. ' pass' → logprob: -5.324479579925537
    7. 'event' → logprob: -5.574479579925537
    8. '[]' → logprob: -5.824479579925537
    9. '   ' → logprob: -6.699479579925537
    10. 'g' → logprob: -6.824479579925537

Token 979: ' bateau' (ID: 123794)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.147971272468567
    2. ''' → logprob: -1.397971272468567
    3. ' '' → logprob: -2.7729711532592773
    4. '[]' → logprob: -2.8979711532592773
    5. 'g' → logprob: -3.1479711532592773
    6. 'for' → logprob: -3.3979711532592773
    7. 'def' → logprob: -3.7729711532592773
    8. ''s' → logprob: -4.147971153259277
    9. 'pass' → logprob: -4.522971153259277
    10. '('' → logprob: -4.522971153259277

Token 980: ' arrive' (ID: 18338)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9631995558738708
    2. '_position' → logprob: -1.9631996154785156
    3. '_' → logprob: -2.0881996154785156
    4. '<|end|>' → logprob: -2.0881996154785156
    5. '_positions' → logprob: -2.4631996154785156
    6. ',' → logprob: -3.3381996154785156
    7. '_arr' → logprob: -3.7131996154785156
    8. '_s' → logprob: -4.838199615478516
    9. ' ' → logprob: -4.963199615478516
    10. '_pos' → logprob: -5.213199615478516

Token 981: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006203819531947374
    2. '_gate' → logprob: -6.881203651428223
    3. ' à' → logprob: -7.131203651428223
    4. ')' → logprob: -7.381203651428223
    5. '_a' → logprob: -7.381203651428223
    6. '_at' → logprob: -7.506203651428223
    7. 'à' → logprob: -7.631203651428223
    8. ',' → logprob: -7.631203651428223
    9. ' _' → logprob: -8.631203651428223
    10. '_sur' → logprob: -8.756203651428223

Token 982: ' devant' (ID: 37522)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.42689839005470276
    2. 'un' → logprob: -1.1768983602523804
    3. ' une' → logprob: -3.80189847946167
    4. ' un' → logprob: -5.67689847946167
    5. 'la' → logprob: -5.67689847946167
    6. 'l' → logprob: -6.05189847946167
    7. 'position' → logprob: -6.17689847946167
    8. 'port' → logprob: -7.30189847946167
    9. 'gate' → logprob: -7.30189847946167
    10. 'porte' → logprob: -7.42689847946167

Token 983: '/s' (ID: 5031)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8258681297302246
    2. '<|end|>' → logprob: -1.9508681297302246
    3. '_gate' → logprob: -2.8258681297302246
    4. 'du' → logprob: -2.8258681297302246
    5. 'une' → logprob: -3.0758681297302246
    6. 'e' → logprob: -3.0758681297302246
    7. 'g' → logprob: -3.3258681297302246
    8. 'un' → logprob: -3.7008681297302246
    9. 'le' → logprob: -3.9508681297302246
    10. 'de' → logprob: -3.9508681297302246

Token 984: 'u' (ID: 84)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.28352218866348267
    2. 'u' → logprob: -2.283522129058838
    3. 'la' → logprob: -3.533522129058838
    4. 'ur' → logprob: -4.283522129058838
    5. 'ure' → logprob: -4.408522129058838
    6. 'e' → logprob: -4.658522129058838
    7. 'g' → logprob: -5.283522129058838
    8. 'a' → logprob: -5.283522129058838
    9. 'oi' → logprob: -5.408522129058838
    10. 'sas' → logprob: -5.533522129058838

Token 985: 'ivant' (ID: 100782)
  Prédit: 'ivant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivant' → logprob: -0.29384446144104004
    2. 'r' → logprob: -1.54384446144104
    3. 'pr' → logprob: -4.043844223022461
    4. 'per' → logprob: -5.043844223022461
    5. 'p' → logprob: -5.543844223022461
    6. 'iv' → logprob: -5.668844223022461
    7. 'ivi' → logprob: -6.168844223022461
    8. 'b' → logprob: -6.418844223022461
    9. 'it' → logprob: -6.918844223022461
    10. 'ite' → logprob: -7.043844223022461

Token 986: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014633395709097385
    2. '<|end|>' → logprob: -5.2646331787109375
    3. ',' → logprob: -5.8896331787109375
    4. ')' → logprob: -6.5146331787109375
    5. '_gate' → logprob: -6.6396331787109375
    6. 'e' → logprob: -7.2646331787109375
    7. '
' → logprob: -7.5146331787109375
    8. '_
' → logprob: -7.5146331787109375
    9. '_g' → logprob: -7.7646331787109375
    10. 's' → logprob: -8.764633178710938

Token 987: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4615505635738373
    2. 'distance' → logprob: -1.7115505933761597
    3. 'une' → logprob: -2.08655047416687
    4. 'moins' → logprob: -3.46155047416687
    5. 'la' → logprob: -4.711550712585449
    6. 'position' → logprob: -5.211550712585449
    7. '0' → logprob: -5.336550712585449
    8. 'un' → logprob: -5.461550712585449
    9. 'l' → logprob: -6.961550712585449
    10. '```' → logprob: -7.086550712585449

Token 988: ' endroit' (ID: 79158)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gate' → logprob: -1.2344398498535156
    2. 'distance' → logprob: -1.9844398498535156
    3. '1' → logprob: -2.7344398498535156
    4. 'point' → logprob: -2.7344398498535156
    5. 'certain' → logprob: -2.7344398498535156
    6. 'e' → logprob: -2.9844398498535156
    7. 'port' → logprob: -3.3594398498535156
    8. 'c' → logprob: -3.4844398498535156
    9. '```' → logprob: -3.7344398498535156
    10. 'bate' → logprob: -3.8594398498535156

Token 989: ' où' (ID: 15113)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 990: ' il' (ID: 1793)
  Prédit: 'il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.4050072133541107
    2. 'un' → logprob: -1.530007243156433
    3. 'on' → logprob: -3.2800071239471436
    4. 'une' → logprob: -3.5300071239471436
    5. 'le' → logprob: -3.9050071239471436
    6. ' il' → logprob: -4.655007362365723
    7. 'se' → logprob: -5.405007362365723
    8. 'pass' → logprob: -5.530007362365723
    9. 'l' → logprob: -6.155007362365723
    10. 'ouvrir' → logprob: -6.530007362365723

Token 991: ' faut' (ID: 17821)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -1.4767128229141235
    2. 's' → logprob: -1.7267128229141235
    3. ' faut' → logprob: -1.8517128229141235
    4. 'f' → logprob: -2.101712703704834
    5. 'pe' → logprob: -3.351712703704834
    6. 'avance' → logprob: -3.351712703704834
    7. 'y' → logprob: -3.601712703704834
    8. ' se' → logprob: -3.601712703704834
    9. ' y' → logprob: -3.601712703704834
    10. 'se' → logprob: -3.726712703704834

Token 992: ' modifier' (ID: 37684)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9086996912956238
    2. ' avancer' → logprob: -2.7836997509002686
    3. 's' → logprob: -2.9086997509002686
    4. ',' → logprob: -3.1586997509002686
    5. 'pass' → logprob: -3.2836997509002686
    6. ' aller' → logprob: -3.4086997509002686
    7. '_stop' → logprob: -3.4086997509002686
    8. 'aller' → logprob: -3.4086997509002686
    9. '_pass' → logprob: -3.5336997509002686
    10. 'arr' → logprob: -3.7836997509002686

Token 993: ' vitesse' (ID: 71752)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2879457473754883
    2. 'v' → logprob: -2.4129457473754883
    3. 'sa' → logprob: -3.1629457473754883
    4. ' la' → logprob: -3.2879457473754883
    5. '_la' → logprob: -3.9129457473754883
    6. ' sa' → logprob: -4.287945747375488
    7. '_v' → logprob: -4.287945747375488
    8. 'le' → logprob: -4.787945747375488
    9. 'leur' → logprob: -5.037945747375488
    10. 'de' → logprob: -5.037945747375488

Token 994: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 995: ' respecter' (ID: 107203)
  Prédit: 'respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'respect' → logprob: -0.22433285415172577
    2. 'év' → logprob: -1.8493328094482422
    3. 'maint' → logprob: -4.474332809448242
    4. 'ne' → logprob: -4.974332809448242
    5. 'ev' → logprob: -5.099332809448242
    6. 'g' → logprob: -5.974332809448242
    7. 's' → logprob: -5.974332809448242
    8. ' respecter' → logprob: -6.349332809448242
    9. 'su' → logprob: -6.599332809448242
    10. 'ass' → logprob: -6.724332809448242

Token 996: ' contr' (ID: 6030)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.20095320045948029
    2. 'l' → logprob: -3.075953245162964
    3. 'les' → logprob: -3.200953245162964
    4. 'le' → logprob: -3.200953245162964
    5. 'distance' → logprob: -3.450953245162964
    6. 'une' → logprob: -5.200953006744385
    7. 'dist' → logprob: -5.700953006744385
    8. ' la' → logprob: -5.825953006744385
    9. '```' → logprob: -5.950953006744385
    10. 'sé' → logprob: -6.575953006744385

Token 997: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.03520620986819267
    2. 'ôle' → logprob: -3.4102063179016113
    3. '```' → logprob: -7.160206317901611
    4. 'a' → logprob: -8.410205841064453
    5. '
' → logprob: -8.910205841064453
    6. '``' → logprob: -9.160205841064453
    7. 'ain' → logprob: -9.660205841064453
    8. 'ô' → logprob: -10.410205841064453
    9. 'aine' → logprob: -10.535205841064453
    10. 'aint' → logprob: -10.660205841064453

Token 998: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2951104938983917
    2. '<|end|>' → logprob: -2.2951104640960693
    3. 's' → logprob: -3.1701104640960693
    4. ',' → logprob: -3.5451104640960693
    5. '#' → logprob: -3.9201104640960693
    6. '   ' → logprob: -4.545110702514648
    7. '.' → logprob: -4.670110702514648
    8. 'def' → logprob: -4.795110702514648
    9. ')' → logprob: -5.295110702514648
    10. '_
' → logprob: -5.545110702514648

Token 999: '1' (ID: 16)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8479864001274109
    2. 's' → logprob: -1.3479864597320557
    3. '<|end|>' → logprob: -2.7229864597320557
    4. ' de' → logprob: -3.0979864597320557
    5. 'es' → logprob: -3.2229864597320557
    6. '(s' → logprob: -3.3479864597320557
    7. 'd' → logprob: -3.4729864597320557
    8. '.' → logprob: -3.5979864597320557
    9. 'distance' → logprob: -4.597986221313477
    10. 'pro' → logprob: -4.847986221313477

Token 1000: 'km' (ID: 15284)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1001: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5879738926887512
    2. '   ' → logprob: -1.4629738330841064
    3. '<|end|>' → logprob: -2.3379738330841064
    4. ',' → logprob: -3.2129738330841064
    5. '
' → logprob: -3.8379738330841064
    6. ',
' → logprob: -4.4629740715026855
    7. '#
' → logprob: -4.8379740715026855
    8. ' #' → logprob: -4.9629740715026855
    9. '.' → logprob: -5.0879740715026855
    10. '<|end|>' → logprob: -5.5879740715026855

Token 1002: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2291404753923416
    2. '#' → logprob: -2.229140520095825
    3. 's' → logprob: -2.979140520095825
    4. '
' → logprob: -4.729140281677246
    5. ',' → logprob: -4.854140281677246
    6. ':' → logprob: -5.354140281677246
    7. '_' → logprob: -5.854140281677246
    8. ' #' → logprob: -5.979140281677246
    9. '.' → logprob: -6.104140281677246
    10. '       ' → logprob: -6.229140281677246

Token 1003: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.0873639583587646
    2. '\' → logprob: -1.7123639583587646
    3. '   ' → logprob: -2.0873639583587646
    4. ' ' → logprob: -2.8373639583587646
    5. '<|end|>' → logprob: -2.8373639583587646
    6. ')' → logprob: -3.0873639583587646
    7. ':' → logprob: -3.2123639583587646
    8. '\n' → logprob: -3.4623639583587646
    9. ' 
' → logprob: -3.8373639583587646
    10. '_' → logprob: -4.087364196777344

Token 1004: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25735780596733093
    2. '#' → logprob: -1.8823578357696533
    3. '
' → logprob: -3.5073578357696533
    4. '<|end|>' → logprob: -4.132357597351074
    5. 'def' → logprob: -5.257357597351074
    6. '    
' → logprob: -5.382357597351074
    7. ' #' → logprob: -5.507357597351074
    8. ' 
' → logprob: -6.257357597351074
    9. '  
' → logprob: -6.382357597351074
    10. 'events' → logprob: -6.632357597351074

Token 1005: ' bateau' (ID: 123794)
  Prédit: 'porte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'porte' → logprob: -0.9446439743041992
    2. 'gate' → logprob: -1.4446439743041992
    3. 'pass' → logprob: -1.9446439743041992
    4. '#' → logprob: -2.569643974304199
    5. 'port' → logprob: -3.569643974304199
    6. 'niveau' → logprob: -3.819643974304199
    7. ' gate' → logprob: -4.194643974304199
    8. 'bate' → logprob: -4.319643974304199
    9. 'b' → logprob: -4.444643974304199
    10. 'g' → logprob: -4.819643974304199

Token 1006: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.2525576949119568
    2. 'avance' → logprob: -2.5025577545166016
    3. ' arrives' → logprob: -3.1275577545166016
    4. 'appro' → logprob: -3.6275577545166016
    5. ' arrive' → logprob: -4.002557754516602
    6. 's' → logprob: -4.127557754516602
    7. ' avance' → logprob: -4.377557754516602
    8. '_arr' → logprob: -5.252557754516602
    9. ''arrive' → logprob: -6.252557754516602
    10. ' se' → logprob: -6.252557754516602

Token 1007: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4288749694824219
    2. 'à' → logprob: -1.5538749694824219
    3. ' à' → logprob: -2.178874969482422
    4. 'au' → logprob: -5.303874969482422
    5. '<|end|>' → logprob: -5.678874969482422
    6. ' ' → logprob: -5.928874969482422
    7. ' at' → logprob: -6.428874969482422
    8. '   ' → logprob: -6.553874969482422
    9. ' au' → logprob: -6.553874969482422
    10. ')' → logprob: -6.553874969482422

Token 1008: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3408242464065552
    2. 'une' → logprob: -1.5908242464065552
    3. 'l' → logprob: -3.8408241271972656
    4. 'niveau' → logprob: -4.465824127197266
    5. 'position' → logprob: -5.215824127197266
    6. 'pass' → logprob: -5.215824127197266
    7. ' une' → logprob: -5.465824127197266
    8. 'é' → logprob: -5.590824127197266
    9. 'la' → logprob: -5.590824127197266
    10. '```' → logprob: -5.715824127197266

Token 1009: ' seuil' (ID: 194475)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8248439431190491
    2. 'gate' → logprob: -1.4498438835144043
    3. 'é' → logprob: -2.0748438835144043
    4. 'e' → logprob: -3.0748438835144043
    5. 'niveau' → logprob: -3.1998438835144043
    6. 'pass' → logprob: -3.1998438835144043
    7. 's' → logprob: -4.574843883514404
    8. 'g' → logprob: -4.824843883514404
    9. 'pont' → logprob: -5.199843883514404
    10. 'port' → logprob: -5.199843883514404

Token 1010: ' :' (ID: 712)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8050581216812134
    2. 's' → logprob: -2.055058002471924
    3. ',' → logprob: -2.430058002471924
    4. '   ' → logprob: -2.805058002471924
    5. '#' → logprob: -2.930058002471924
    6. ')' → logprob: -3.430058002471924
    7. ':' → logprob: -3.430058002471924
    8. '<|end|>' → logprob: -3.680058002471924
    9. '.' → logprob: -4.180058002471924
    10. '
' → logprob: -4.680058002471924

Token 1011: ' il' (ID: 1793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1012: ' doit' (ID: 21822)
  Prédit: ' faut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.2045287787914276
    2. ' faudra' → logprob: -2.20452880859375
    3. 'f' → logprob: -3.20452880859375
    4. ' doit' → logprob: -4.32952880859375
    5. ' devra' → logprob: -4.70452880859375
    6. '#' → logprob: -6.20452880859375
    7. 's' → logprob: -6.45452880859375
    8. '   ' → logprob: -6.57952880859375
    9. ' f' → logprob: -6.70452880859375
    10. ' faudrait' → logprob: -6.95452880859375

Token 1013: ' pouvoir' (ID: 27197)
  Prédit: 'changer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'changer' → logprob: -1.3460757732391357
    2. 'pass' → logprob: -1.7210757732391357
    3. 'stop' → logprob: -1.7210757732391357
    4. 'att' → logprob: -1.9710757732391357
    5. 's' → logprob: -2.0960757732391357
    6. 'wait' → logprob: -3.3460757732391357
    7. 'arr' → logprob: -3.4710757732391357
    8. 'acc' → logprob: -5.596076011657715
    9. 'être' → logprob: -5.596076011657715
    10. 'tr' → logprob: -5.596076011657715

Token 1014: ' passer' (ID: 27727)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.15485773980617523
    2. 'tr' → logprob: -3.029857635498047
    3. 'stop' → logprob: -3.154857635498047
    4. 's' → logprob: -4.029857635498047
    5. 'contin' → logprob: -5.404857635498047
    6. 'dé' → logprob: -5.529857635498047
    7. 'ouvrir' → logprob: -5.779857635498047
    8. 'arr' → logprob: -5.904857635498047
    9. 'att' → logprob: -6.404857635498047
    10. 'être' → logprob: -6.404857635498047

Token 1015: ' seulement' (ID: 32072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7727779746055603
    2. ',' → logprob: -1.397778034210205
    3. '#' → logprob: -2.272778034210205
    4. '_' → logprob: -2.647778034210205
    5. 's' → logprob: -3.772778034210205
    6. '.' → logprob: -3.897778034210205
    7. ':' → logprob: -4.647778034210205
    8. '...' → logprob: -4.647778034210205
    9. ',
' → logprob: -4.897778034210205
    10. ')' → logprob: -5.022778034210205

Token 1016: ' si' (ID: 1784)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19547319412231445
    2. ' ' → logprob: -3.1954731941223145
    3. ',' → logprob: -3.3204731941223145
    4. ')' → logprob: -4.0704731941223145
    5. ' à' → logprob: -4.8204731941223145
    6. '#' → logprob: -4.9454731941223145
    7. ' si' → logprob: -4.9454731941223145
    8. 's' → logprob: -5.0704731941223145
    9. ' au' → logprob: -5.1954731941223145
    10. 'à' → logprob: -5.3204731941223145

Token 1017: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.16858723759651184
    2. 'la' → logprob: -2.5435872077941895
    3. 'self' → logprob: -3.9185872077941895
    4. 'gate' → logprob: -4.2935872077941895
    5. ' le' → logprob: -4.9185872077941895
    6. 'g' → logprob: -5.4185872077941895
    7. 'l' → logprob: -5.5435872077941895
    8. 'level' → logprob: -5.5435872077941895
    9. 'not' → logprob: -5.9185872077941895
    10. '(' → logprob: -6.0435872077941895

Token 1018: ' niveau' (ID: 21708)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.728485107421875
    2. 'niveau' → logprob: -1.478485107421875
    3. 'level' → logprob: -1.978485107421875
    4. ' gate' → logprob: -3.228485107421875
    5. 'sas' → logprob: -3.853485107421875
    6. 'se' → logprob: -4.103485107421875
    7. ' niveau' → logprob: -4.353485107421875
    8. 'g' → logprob: -4.353485107421875
    9. 'pass' → logprob: -5.103485107421875
    10. 'code' → logprob: -5.103485107421875

Token 1019: ' du' (ID: 1462)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.4146968126296997
    2. 'est' → logprob: -1.5396968126296997
    3. ' du' → logprob: -2.03969669342041
    4. 'du' → logprob: -2.16469669342041
    5. ' ==' → logprob: -2.53969669342041
    6. ' est' → logprob: -2.53969669342041
    7. ' is' → logprob: -3.41469669342041
    8. 'haut' → logprob: -3.53969669342041
    9. ' haut' → logprob: -4.41469669342041
    10. 'bas' → logprob: -4.66469669342041

Token 1020: ' sas' (ID: 51515)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.04819154739379883
    2. 'se' → logprob: -3.548191547393799
    3. ' sas' → logprob: -5.048191547393799
    4. 'gate' → logprob: -5.423191547393799
    5. 's' → logprob: -6.298191547393799
    6. 'level' → logprob: -7.048191547393799
    7. '```' → logprob: -7.048191547393799
    8. 'pas' → logprob: -7.673191547393799
    9. 'niveau' → logprob: -7.673191547393799
    10. 'seau' → logprob: -8.23569107055664

Token 1021: ' correspond' (ID: 11095)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.29698503017425537
    2. 'est' → logprob: -1.4219850301742554
    3. '==' → logprob: -5.421985149383545
    4. '=' → logprob: -5.796985149383545
    5. ' ==' → logprob: -5.921985149383545
    6. ' is' → logprob: -6.171985149383545
    7. ' =' → logprob: -6.546985149383545
    8. 'du' → logprob: -8.171984672546387
    9. ' du' → logprob: -8.296984672546387
    10. 's' → logprob: -8.421984672546387

Token 1022: ' au' (ID: 2791)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1023: ' niveau' (ID: 21708)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06422241777181625
    2. 'sens' → logprob: -3.4392223358154297
    3. 'niveau' → logprob: -4.06422233581543
    4. 'bate' → logprob: -4.81422233581543
    5. 'nav' → logprob: -7.06422233581543
    6. 'pass' → logprob: -7.18922233581543
    7. ' sens' → logprob: -7.31422233581543
    8. 'b' → logprob: -7.56422233581543
    9. 'cot' → logprob: -7.68922233581543
    10. '#' → logprob: -8.68922233581543

Token 1024: ' d' (ID: 272)
  Prédit: ' haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' haut' → logprob: -0.8015141487121582
    2. '_' → logprob: -1.6765141487121582
    3. ' du' → logprob: -2.301514148712158
    4. 'haut' → logprob: -2.426514148712158
    5. 'bas' → logprob: -3.426514148712158
    6. ' demandé' → logprob: -3.676514148712158
    7. ' actuel' → logprob: -3.801514148712158
    8. 'du' → logprob: -4.426514148712158
    9. ' souhait' → logprob: -4.926514148712158
    10. '_high' → logprob: -4.926514148712158

Token 1025: ''eau' (ID: 38948)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6610860824584961
    2. ''eau' → logprob: -0.7860860824584961
    3. 'u' → logprob: -3.911086082458496
    4. ''entrée' → logprob: -5.786086082458496
    5. ''arrivée' → logprob: -6.286086082458496
    6. ''accueil' → logprob: -6.786086082458496
    7. ''' → logprob: -7.536086082458496
    8. ''accès' → logprob: -8.661086082458496
    9. ''un' → logprob: -8.786086082458496
    10. ''ouverture' → logprob: -9.036086082458496

Token 1026: ' am' (ID: 939)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1027: 'ont' (ID: 645)
  Prédit: 'ont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -8.923874702304602e-05
    2. 'b' → logprob: -9.625089645385742
    3. 'éli' → logprob: -12.375089645385742
    4. 'onts' → logprob: -12.625089645385742
    5. '_' → logprob: -13.250089645385742
    6. 'bi' → logprob: -13.375089645385742
    7. '```' → logprob: -13.500089645385742
    8. 'p' → logprob: -13.625089645385742
    9. 'bit' → logprob: -13.625089645385742
    10. ' ont' → logprob: -14.250089645385742

Token 1028: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4470956325531006
    2. '<|end|>' → logprob: -2.0720956325531006
    3. '.' → logprob: -2.5720956325531006
    4. '#' → logprob: -2.6970956325531006
    5. ')' → logprob: -3.5720956325531006
    6. ':' → logprob: -4.07209587097168
    7. ',' → logprob: -4.32209587097168
    8. '...' → logprob: -5.19709587097168
    9. 'def' → logprob: -5.19709587097168
    10. '       ' → logprob: -5.19709587097168

Token 1029: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09920279681682587
    2. '<|end|>' → logprob: -3.474202871322632
    3. '#' → logprob: -4.224202632904053
    4. '       ' → logprob: -4.474202632904053
    5. ')' → logprob: -4.474202632904053
    6. ',' → logprob: -4.849202632904053
    7. '.' → logprob: -5.349202632904053
    8. ':' → logprob: -6.099202632904053
    9. '_' → logprob: -6.349202632904053
    10. '\' → logprob: -6.599202632904053

Token 1030: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12374481558799744
    2. '       ' → logprob: -3.2487447261810303
    3. '_' → logprob: -3.7487447261810303
    4. '#' (adapté à ' #') → logprob: -4.498744964599609
    5. ',' → logprob: -5.123744964599609
    6. '\' → logprob: -5.373744964599609
    7. ''' → logprob: -5.373744964599609
    8. ':' → logprob: -5.498744964599609
    9. ')' → logprob: -5.623744964599609
    10. '.' → logprob: -5.623744964599609

Token 1031: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22861941158771515
    2. '#' → logprob: -1.6036194562911987
    3. 'def' → logprob: -6.978619575500488
    4. ' #' → logprob: -7.103619575500488
    5. '
' → logprob: -8.353619575500488
    6. '...' → logprob: -8.478619575500488
    7. '    
' → logprob: -8.603619575500488
    8. 'import' → logprob: -8.603619575500488
    9. 'pass' → logprob: -8.728619575500488
    10. '       ' → logprob: -9.353619575500488

Token 1032: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25216904282569885
    2. '   ' → logprob: -1.6271690130233765
    3. '       ' → logprob: -5.127169132232666
    4. ',' → logprob: -5.127169132232666
    5. '.' → logprob: -5.752169132232666
    6. ' #' → logprob: -6.252169132232666
    7. '<|end|>' → logprob: -6.377169132232666
    8. '...' → logprob: -7.127169132232666
    9. ' ' → logprob: -7.127169132232666
    10. '#
' → logprob: -7.377169132232666

Token 1033: 'ce' (ID: 400)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9797729849815369
    2. '#' → logprob: -1.3547730445861816
    3. ')' → logprob: -2.1047730445861816
    4. 'niveau' → logprob: -2.6047730445861816
    5. 'la' → logprob: -3.3547730445861816
    6. ' le' → logprob: -4.104773044586182
    7. ' #' → logprob: -4.479773044586182
    8. 'l' → logprob: -4.854773044586182
    9. 'don' → logprob: -4.854773044586182
    10. 'level' → logprob: -4.854773044586182

Token 1034: 'ci' (ID: 2114)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6870653033256531
    2. 'n' → logprob: -1.8120653629302979
    3. ')' → logprob: -2.437065362930298
    4. ' n' → logprob: -2.437065362930298
    5. ''' → logprob: -3.812065362930298
    6. ' niveau' → logprob: -3.937065362930298
    7. ' #' → logprob: -4.062065124511719
    8. 's' → logprob: -4.312065124511719
    9. 'u' → logprob: -4.687065124511719
    10. '```' → logprob: -4.812065124511719

Token 1035: ' nécessite' (ID: 126196)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7441620826721191
    2. ' )' → logprob: -1.3691620826721191
    3. ' est' → logprob: -2.994162082672119
    4. ' signifie' → logprob: -2.994162082672119
    5. ' )
' → logprob: -3.494162082672119
    6. ')
' → logprob: -3.494162082672119
    7. ' n' → logprob: -3.994162082672119
    8. 'n' → logprob: -4.369162082672119
    9. '#' → logprob: -4.494162082672119
    10. '
' → logprob: -5.119162082672119

Token 1036: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7549504637718201
    2. 'une' → logprob: -1.2549505233764648
    3. 'd' → logprob: -2.254950523376465
    4. 'la' → logprob: -2.629950523376465
    5. 'un' → logprob: -3.504950523376465
    6. 'a' → logprob: -4.254950523376465
    7. 'le' → logprob: -5.004950523376465
    8. 'l' → logprob: -5.754950523376465
    9. ' de' → logprob: -5.879950523376465
    10. 'que' → logprob: -6.504950523376465

Token 1037: ' mod' (ID: 1812)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.3719732761383057
    2. 'sim' → logprob: -1.7469732761383057
    3. 'contin' → logprob: -2.2469732761383057
    4. 'aj' → logprob: -2.3719732761383057
    5. 'mettre' → logprob: -2.4969732761383057
    6. ' gérer' → logprob: -2.9969732761383057
    7. 'impl' → logprob: -2.9969732761383057
    8. 'com' → logprob: -3.4969732761383057
    9. 'calcul' → logprob: -3.6219732761383057
    10. 'implement' → logprob: -4.496973037719727

Token 1038: 'él' (ID: 6778)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.05891063064336777
    2. 'if' → logprob: -3.183910608291626
    3. 'el' → logprob: -5.308910846710205
    4. '#' → logprob: -5.683910846710205
    5. 'él' → logprob: -6.308910846710205
    6. 'eler' → logprob: -7.433910846710205
    7. '```' → logprob: -7.683910846710205
    8. 'ifie' → logprob: -7.933910846710205
    9. 'ifer' → logprob: -7.933910846710205
    10. 'ify' → logprob: -7.933910846710205

Token 1039: 'iser' (ID: 7466)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.017644451931118965
    2. 'él' → logprob: -5.26764440536499
    3. 'er' → logprob: -5.64264440536499
    4. 'uler' → logprob: -5.64264440536499
    5. 'érer' → logprob: -6.14264440536499
    6. 'é' → logprob: -7.01764440536499
    7. '#' → logprob: -7.89264440536499
    8. 'eler' → logprob: -8.267644882202148
    9. 'if' → logprob: -8.392644882202148
    10. 'è' → logprob: -8.517644882202148

Token 1040: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.17290140688419342
    2. ' le' → logprob: -2.4229013919830322
    3. 'les' → logprob: -4.047901630401611
    4. 'l' → logprob: -4.172901630401611
    5. 'la' → logprob: -4.172901630401611
    6. ' les' → logprob: -5.172901630401611
    7. ' l' → logprob: -5.172901630401611
    8. ' la' → logprob: -5.297901630401611
    9. 'un' → logprob: -6.172901630401611
    10. 'une' → logprob: -6.797901630401611

Token 1041: ' sas' (ID: 51515)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passage' → logprob: -1.1553821563720703
    2. 'pass' → logprob: -1.4053821563720703
    3. 'niveau' → logprob: -1.9053821563720703
    4. ' niveau' → logprob: -2.0303821563720703
    5. ' flux' → logprob: -2.7803821563720703
    6. 'flux' → logprob: -4.15538215637207
    7. 'level' → logprob: -4.40538215637207
    8. 'dé' → logprob: -4.53038215637207
    9. ' level' → logprob: -4.90538215637207
    10. ' changement' → logprob: -5.03038215637207

Token 1042: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03349607437849045
    2. ' )' → logprob: -4.158495903015137
    3. ')
' → logprob: -5.158495903015137
    4. 's' → logprob: -6.158495903015137
    5. ',' → logprob: -6.408495903015137
    6. ' et' → logprob: -6.533495903015137
    7. '),' → logprob: -7.033495903015137
    8. 'e' → logprob: -7.533495903015137
    9. 'et' → logprob: -7.658495903015137
    10. ' niveau' → logprob: -8.033495903015137

Token 1043: ' quand' (ID: 18026)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5368955731391907
    2. ')' → logprob: -2.161895513534546
    3. ' le' → logprob: -3.286895513534546
    4. ' #' → logprob: -3.286895513534546
    5. ' la' → logprob: -3.536895513534546
    6. '   ' → logprob: -3.911895513534546
    7. 'le' → logprob: -4.036895751953125
    8. '       ' → logprob: -4.161895751953125
    9. ' niveau' → logprob: -4.161895751953125
    10. 'niveau' → logprob: -4.286895751953125

Token 1044: ' changer' (ID: 47099)
  Prédit: 'il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.9035767912864685
    2. ' il' → logprob: -1.6535768508911133
    3. 'le' → logprob: -2.0285768508911133
    4. ' celui' → logprob: -2.0285768508911133
    5. ' le' → logprob: -2.9035768508911133
    6. ' on' → logprob: -3.2785768508911133
    7. 'on' → logprob: -4.028576850891113
    8. 'l' → logprob: -5.403576850891113
    9. 'un' → logprob: -5.403576850891113
    10. 'level' → logprob: -6.028576850891113

Token 1045: ' le' (ID: 505)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.11600195616483688
    2. 'le' → logprob: -3.241001844406128
    3. ' de' → logprob: -3.366001844406128
    4. '_de' → logprob: -4.366002082824707
    5. 'd' → logprob: -4.491002082824707
    6. 'niveau' → logprob: -5.116002082824707
    7. '_le' → logprob: -6.616002082824707
    8. 's' → logprob: -6.866002082824707
    9. '_' → logprob: -6.991002082824707
    10. 'l' → logprob: -7.741002082824707

Token 1046: ' niveau' (ID: 21708)
  Prédit: ' niveau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' niveau' → logprob: -0.6964380145072937
    2. 'niveau' → logprob: -0.8214380145072937
    3. 'level' → logprob: -3.3214380741119385
    4. ' level' → logprob: -3.8214380741119385
    5. ' nivel' → logprob: -7.071437835693359
    6. 'nivel' → logprob: -7.571437835693359
    7. 'n' → logprob: -8.07143783569336
    8. 'state' → logprob: -8.32143783569336
    9. ' nive' → logprob: -8.32143783569336
    10. ' code' → logprob: -8.69643783569336

Token 1047: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49233654141426086
    2. ',' → logprob: -1.3673365116119385
    3. '?' → logprob: -2.8673365116119385
    4. ' de' → logprob: -3.4923365116119385
    5. '),' → logprob: -4.492336750030518
    6. ',
' → logprob: -4.617336750030518
    7. 'de' → logprob: -5.117336750030518
    8. '   ' → logprob: -5.742336750030518
    9. ' du' → logprob: -5.867336750030518
    10. '#' → logprob: -5.867336750030518

Token 1048: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.004584872629493475
    2. 'comment' → logprob: -6.004584789276123
    3. '   ' → logprob: -7.504584789276123
    4. ' #' → logprob: -8.254585266113281
    5. 'quoi' → logprob: -8.379585266113281
    6. 'pass' → logprob: -8.754585266113281
    7. 'où' → logprob: -9.004585266113281
    8. ' comment' → logprob: -9.129585266113281
    9. 'pour' → logprob: -9.629585266113281
    10. 'quelle' → logprob: -9.754585266113281

Token 1049: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00989160779863596
    2. ' comment' → logprob: -5.509891510009766
    3. ' #' → logprob: -6.384891510009766
    4. 'comment' → logprob: -6.509891510009766
    5. '   ' → logprob: -7.509891510009766
    6. ' gérer' → logprob: -8.259891510009766
    7. '       ' → logprob: -8.384891510009766
    8. 'quoi' → logprob: -8.384891510009766
    9. 'où' → logprob: -8.509891510009766
    10. ' quelles' → logprob: -8.634891510009766

Token 1050: ' durée' (ID: 57595)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.9329367280006409
    2. ' passage' → logprob: -1.557936668395996
    3. '#' → logprob: -2.057936668395996
    4. ' présence' → logprob: -2.932936668395996
    5. ' gestion' → logprob: -3.432936668395996
    6. ' pass' → logprob: -3.432936668395996
    7. ' #' → logprob: -4.182936668395996
    8. ' position' → logprob: -4.182936668395996
    9. ' disponibilité' → logprob: -4.807936668395996
    10. 'position' → logprob: -4.932936668395996

Token 1051: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21790280938148499
    2. '   ' → logprob: -2.342902898788452
    3. ',' → logprob: -3.592902898788452
    4. '       ' → logprob: -3.842902898788452
    5. '#' → logprob: -4.467902660369873
    6. ',
' → logprob: -4.717902660369873
    7. ' de' → logprob: -5.342902660369873
    8. ')
' → logprob: -5.342902660369873
    9. ' nécessaire' → logprob: -5.717902660369873
    10. 'de' → logprob: -5.967902660369873

Token 1052: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22635968029499054
    2. '#' → logprob: -2.1013596057891846
    3. '\' → logprob: -2.9763596057891846
    4. '\n' → logprob: -5.101359844207764
    5. ' 
' → logprob: -5.101359844207764
    6. '    
' → logprob: -5.601359844207764
    7. '       ' → logprob: -6.226359844207764
    8. 'def' → logprob: -6.601359844207764
    9. ':' → logprob: -6.851359844207764
    10. '\t' → logprob: -6.976359844207764

Token 1053: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04696222022175789
    2. '#' (adapté à ' #') → logprob: -4.046962261199951
    3. '    
' → logprob: -5.171962261199951
    4. '\' → logprob: -5.171962261199951
    5. '\n' → logprob: -5.296962261199951
    6. ' 
' → logprob: -6.046962261199951
    7. '
' → logprob: -6.171962261199951
    8. ')' → logprob: -6.421962261199951
    9. '...' → logprob: -6.796962261199951
    10. '<|end|>' → logprob: -6.921962261199951

Token 1054: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23432336747646332
    2. '#' → logprob: -2.609323263168335
    3. '
' → logprob: -2.984323263168335
    4. '    
' → logprob: -3.609323263168335
    5. ' 
' → logprob: -4.234323501586914
    6. 'def' → logprob: -4.859323501586914
    7. '\' → logprob: -5.109323501586914
    8. ')' → logprob: -5.109323501586914
    9. '_' → logprob: -5.734323501586914
    10. '  
' → logprob: -6.109323501586914

Token 1055: ' changement' (ID: 61912)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1296280473470688
    2. '   ' → logprob: -3.1296279430389404
    3. ' #' → logprob: -3.1296279430389404
    4. 'def' → logprob: -4.7546281814575195
    5. 'time' → logprob: -5.1296281814575195
    6. 'events' → logprob: -5.6296281814575195
    7. 'pass' → logprob: -5.6296281814575195
    8. '
' → logprob: -6.3796281814575195
    9. 'current' → logprob: -6.5046281814575195
    10. 'return' → logprob: -6.6296281814575195

Token 1056: ' niveau' (ID: 21708)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1124689057469368
    2. 's' → logprob: -2.737468957901001
    3. 'de' → logprob: -3.987468957901001
    4. 'niveau' → logprob: -4.237468719482422
    5. '_level' → logprob: -5.862468719482422
    6. ' du' → logprob: -6.862468719482422
    7. 'level' → logprob: -6.987468719482422
    8. '_de' → logprob: -7.362468719482422
    9. 'd' → logprob: -7.362468719482422
    10. '   ' → logprob: -8.237468719482422

Token 1057: ' sas' (ID: 51515)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3310644626617432
    2. '<|end|>' → logprob: -1.3310644626617432
    3. '#' → logprob: -1.4560644626617432
    4. ' de' → logprob: -2.581064462661743
    5. '...' → logprob: -3.456064462661743
    6. 'def' → logprob: -3.581064462661743
    7. ' des' → logprob: -4.206064224243164
    8. 'niveau' → logprob: -4.706064224243164
    9. '<|end|>' → logprob: -4.956064224243164
    10. '_levels' → logprob: -5.206064224243164

Token 1058: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4118645489215851
    2. 'def' → logprob: -2.2868645191192627
    3. '<|end|>' → logprob: -2.5368645191192627
    4. '   ' → logprob: -2.9118645191192627
    5. '#' → logprob: -2.9118645191192627
    6. '
' → logprob: -4.661864757537842
    7. '\' → logprob: -5.161864757537842
    8. '<|end|>' → logprob: -5.286864757537842
    9. ' :' → logprob: -5.411864757537842
    10. ' def' → logprob: -5.536864757537842

Token 1059: ' bas' (ID: 3222)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.22359560430049896
    2. 'l' → logprob: -2.34859561920166
    3. 'e' → logprob: -3.59859561920166
    4. ' niveau' → logprob: -3.84859561920166
    5. 'sas' → logprob: -4.22359561920166
    6. 'level' → logprob: -4.72359561920166
    7. 'gate' → logprob: -4.84859561920166
    8. 'un' → logprob: -5.47359561920166
    9. '```' → logprob: -5.84859561920166
    10. ' l' → logprob: -6.72359561920166

Token 1060: ' à' (ID: 1221)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -1.2382559776306152
    2. ' à' → logprob: -1.6132559776306152
    3. 'haut' → logprob: -1.6132559776306152
    4. 'à' → logprob: -1.9882559776306152
    5. ' to' → logprob: -3.1132559776306152
    6. 'au' → logprob: -3.3632559776306152
    7. 'to' → logprob: -3.9882559776306152
    8. ' ' → logprob: -4.488255977630615
    9. ' au' → logprob: -4.988255977630615
    10. 'ou' → logprob: -5.113255977630615

Token 1061: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.004663422703742981
    2. 'ha' → logprob: -5.379663467407227
    3. ' haut' → logprob: -11.004663467407227
    4. 'high' → logprob: -11.754663467407227
    5. 'hau' → logprob: -11.879663467407227
    6. '
' → logprob: -12.629663467407227
    7. '```' → logprob: -12.629663467407227
    8. 'h' → logprob: -13.504663467407227
    9. '   ' → logprob: -13.879663467407227
    10. 'hoch' → logprob: -14.379663467407227

Token 1062: ' ou' (ID: 2031)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5209212303161621
    2. '   ' → logprob: -1.645921230316162
    3. '#' → logprob: -2.145921230316162
    4. ':' → logprob: -2.770921230316162
    5. 'import' → logprob: -5.020921230316162
    6. '()' → logprob: -5.270921230316162
    7. ')' → logprob: -5.520921230316162
    8. ':
' → logprob: -5.645921230316162
    9. '
' → logprob: -6.145921230316162
    10. 'pass' → logprob: -6.395921230316162

Token 1063: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.07177471369504929
    2. ' haut' → logprob: -2.69677472114563
    3. 'bas' → logprob: -6.696774482727051
    4. 'high' → logprob: -7.821774482727051
    5. 'ha' → logprob: -9.44677448272705
    6. '#' → logprob: -10.07177448272705
    7. ' bas' → logprob: -11.07177448272705
    8. '```' → logprob: -11.19677448272705
    9. 'de' → logprob: -11.44677448272705
    10. ' high' → logprob: -12.07177448272705

Token 1064: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.18319734930992126
    2. ' à' → logprob: -2.683197259902954
    3. 'to' → logprob: -2.683197259902954
    4. '<|end|>' → logprob: -4.558197498321533
    5. 'def' → logprob: -5.058197498321533
    6. 'niveau' → logprob: -5.433197498321533
    7. '...' → logprob: -6.433197498321533
    8. '#' → logprob: -6.558197498321533
    9. ' to' → logprob: -6.683197498321533
    10. ',' → logprob: -7.433197498321533

Token 1065: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -1.5690089639974758e-05
    2. 'b' → logprob: -11.500015258789062
    3. ' bas' → logprob: -12.625015258789062
    4. 'base' → logprob: -13.500015258789062
    5. 'ba' → logprob: -15.625015258789062
    6. ' ' → logprob: -15.750015258789062
    7. '```' → logprob: -15.750015258789062
    8. 'bal' → logprob: -16.500015258789062
    9. '
' → logprob: -16.625015258789062
    10. '0' → logprob: -17.000015258789062

Token 1066: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31401994824409485
    2. '<|end|>' → logprob: -2.3140199184417725
    3. '#' → logprob: -2.4390199184417725
    4. ':' → logprob: -2.9390199184417725
    5. '<|end|>' → logprob: -4.689020156860352
    6. 'def' → logprob: -5.439020156860352
    7. '...' → logprob: -5.564020156860352
    8. '
' → logprob: -5.689020156860352
    9. ')' → logprob: -6.314020156860352
    10. '    
' → logprob: -6.689020156860352

Token 1067: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28929123282432556
    2. '#' → logprob: -2.1642911434173584
    3. '<|end|>' → logprob: -2.4142911434173584
    4. 'def' → logprob: -4.1642913818359375
    5. '
' → logprob: -4.4142913818359375
    6. ':' → logprob: -5.1642913818359375
    7. '<|end|>' → logprob: -5.9142913818359375
    8. ')' → logprob: -6.4142913818359375
    9. '    
' → logprob: -6.4142913818359375
    10. '\' → logprob: -6.5392913818359375

Token 1068: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4732893705368042
    2. '#' (adapté à ' #') → logprob: -1.5982893705368042
    3. '\' → logprob: -2.5982894897460938
    4. ' 
' → logprob: -3.8482894897460938
    5. '\n' → logprob: -4.223289489746094
    6. '<|end|>' → logprob: -4.348289489746094
    7. ' ' → logprob: -4.473289489746094
    8. ')' → logprob: -4.723289489746094
    9. '       ' → logprob: -4.848289489746094
    10. '
' → logprob: -5.473289489746094

Token 1069: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8772716522216797
    2. 'events' → logprob: -1.8772716522216797
    3. 'time' → logprob: -2.1272716522216797
    4. '   ' → logprob: -2.1272716522216797
    5. 'def' → logprob: -2.2522716522216797
    6. 'pass' → logprob: -3.5022716522216797
    7. ' #' → logprob: -4.00227165222168
    8. '    
' → logprob: -5.00227165222168
    9. 'current' → logprob: -5.12727165222168
    10. 'import' → logprob: -5.25227165222168

Token 1070: ' bateau' (ID: 123794)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2457866072654724
    2. 'time' → logprob: -2.745786666870117
    3. 'events' → logprob: -2.745786666870117
    4. 'pass' → logprob: -3.745786666870117
    5. 'import' → logprob: -3.995786666870117
    6. 'return' → logprob: -4.245786666870117
    7. 'event' → logprob: -5.245786666870117
    8. '   ' → logprob: -5.495786666870117
    9. 'def' → logprob: -5.745786666870117
    10. 'current' → logprob: -5.745786666870117

Token 1071: ' peut' (ID: 9216)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.0532783269882202
    2. 's' → logprob: -1.3032783269882202
    3. '_arr' → logprob: -1.3032783269882202
    4. 'avance' → logprob: -4.05327844619751
    5. '_position' → logprob: -4.30327844619751
    6. ' arrives' → logprob: -4.42827844619751
    7. '_positions' → logprob: -4.42827844619751
    8. 'contin' → logprob: -5.05327844619751
    9. '_' → logprob: -5.17827844619751
    10. ' arrive' → logprob: -5.55327844619751

Token 1072: ' sortir' (ID: 55515)
  Prédit: ' avancer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avancer' → logprob: -0.22919422388076782
    2. 'pass' → logprob: -1.729194164276123
    3. ' passer' → logprob: -4.729194164276123
    4. 'avance' → logprob: -5.354194164276123
    5. ' partir' → logprob: -6.229194164276123
    6. 'contin' → logprob: -6.354194164276123
    7. 'av' → logprob: -6.604194164276123
    8. 'part' → logprob: -6.729194164276123
    9. ' commencer' → logprob: -7.229194164276123
    10. ' pass' → logprob: -7.354194164276123

Token 1073: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3307855427265167
    2. 'events' → logprob: -2.4557855129241943
    3. '#' → logprob: -2.7057855129241943
    4. ':' → logprob: -3.3307855129241943
    5. '_events' → logprob: -4.455785751342773
    6. 'def' → logprob: -4.580785751342773
    7. ')' → logprob: -4.705785751342773
    8. ' events' → logprob: -4.955785751342773
    9. ':
' → logprob: -5.205785751342773
    10. '
' → logprob: -5.330785751342773

Token 1074: ' sas' (ID: 51515)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.018201803788542747
    2. 'territ' → logprob: -4.76820182800293
    3. 'bord' → logprob: -5.76820182800293
    4. '0' → logprob: -6.39320182800293
    5. 'sys' → logprob: -6.89320182800293
    6. ' pays' → logprob: -7.01820182800293
    7. '```' → logprob: -7.64320182800293
    8. '
' → logprob: -8.39320182800293
    9. 'K' → logprob: -8.64320182800293
    10. 'Pays' → logprob: -8.76820182800293

Token 1075: ' si' (ID: 1784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7955742478370667
    2. '   ' → logprob: -0.9205742478370667
    3. '<|end|>' → logprob: -2.295574188232422
    4. '...' → logprob: -3.795574188232422
    5. 'def' → logprob: -4.920574188232422
    6. '    
' → logprob: -5.420574188232422
    7. 'pass' → logprob: -5.545574188232422
    8. '<|end|>' → logprob: -5.795574188232422
    9. '
' → logprob: -6.170574188232422
    10. 'import' → logprob: -6.170574188232422

Token 1076: ' les' (ID: 1341)
  Prédit: ' gates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gates' → logprob: -0.6739740371704102
    2. ' ships' → logprob: -1.0489740371704102
    3. 'ships' → logprob: -3.04897403717041
    4. 'pos' → logprob: -3.42397403717041
    5. 'g' → logprob: -4.29897403717041
    6. 'position' → logprob: -4.54897403717041
    7. ' la' → logprob: -4.92397403717041
    8. ' position' → logprob: -4.92397403717041
    9. ' gate' → logprob: -5.92397403717041
    10. 'self' → logprob: -5.92397403717041

Token 1077: ' conditions' (ID: 6409)
  Prédit: ' gates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gates' → logprob: -0.6596095561981201
    2. 'g' → logprob: -2.15960955619812
    3. 's' → logprob: -2.65960955619812
    4. '```' → logprob: -3.53460955619812
    5. 'b' → logprob: -3.65960955619812
    6. 'es' → logprob: -3.90960955619812
    7. 'pass' → logprob: -4.159609794616699
    8. ' passages' → logprob: -4.159609794616699
    9. ')' → logprob: -4.284609794616699
    10. 'se' → logprob: -4.409609794616699

Token 1078: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27862071990966797
    2. 'de' → logprob: -2.153620719909668
    3. '#' → logprob: -3.028620719909668
    4. ' sont' → logprob: -3.278620719909668
    5. ' de' → logprob: -4.028620719909668
    6. '       ' → logprob: -5.153620719909668
    7. '   ' → logprob: -6.028620719909668
    8. 'd' → logprob: -6.153620719909668
    9. 'ne' → logprob: -6.403620719909668
    10. 'per' → logprob: -6.528620719909668

Token 1079: ' bon' (ID: 4846)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.455150842666626
    2. 's' → logprob: -1.080150842666626
    3. 'respect' → logprob: -4.580150604248047
    4. 'favor' → logprob: -5.455150604248047
    5. 'ré' → logprob: -5.955150604248047
    6. 'atte' → logprob: -6.080150604248047
    7. 'v' → logprob: -6.580150604248047
    8. 'valid' → logprob: -6.955150604248047
    9. '```' → logprob: -6.955150604248047
    10. 'correct' → logprob: -7.080150604248047

Token 1080: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5449546575546265
    2. '<|end|>' → logprob: -1.0449546575546265
    3. 'def' → logprob: -3.544954776763916
    4. '#' → logprob: -4.544954776763916
    5. '<|end|>' → logprob: -4.919954776763916
    6. ')' → logprob: -5.419954776763916
    7. '
' → logprob: -5.419954776763916
    8. '...' → logprob: -5.544954776763916
    9. '_' → logprob: -6.419954776763916
    10. 'import' → logprob: -6.544954776763916

Token 1081: 'niveau' (ID: 114906)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04093843325972557
    2. ' )' → logprob: -3.540938377380371
    3. ' ' → logprob: -6.290938377380371
    4. '```' → logprob: -6.915938377380371
    5. 'le' → logprob: -7.165938377380371
    6. '#' → logprob: -7.165938377380371
    7. '0' → logprob: -7.540938377380371
    8. ''' → logprob: -7.665938377380371
    9. 'niveau' → logprob: -7.665938377380371
    10. '...' → logprob: -8.040938377380371

Token 1082: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39918413758277893
    2. ')' → logprob: -2.274184226989746
    3. ' bas' → logprob: -3.024184226989746
    4. '_bas' → logprob: -3.649184226989746
    5. ' )' → logprob: -3.899184226989746
    6. ' _' → logprob: -4.024184226989746
    7. '_s' → logprob: -4.274184226989746
    8. ' ==' → logprob: -4.274184226989746
    9. 'bas' → logprob: -4.399184226989746
    10. '_b' → logprob: -4.649184226989746

Token 1083: ' sas' (ID: 51515)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.47523418068885803
    2. 'e' → logprob: -1.1002341508865356
    3. 'pass' → logprob: -3.975234270095825
    4. ' l' → logprob: -4.100234031677246
    5. 'sas' → logprob: -5.850234031677246
    6. 's' → logprob: -6.225234031677246
    7. 'la' → logprob: -6.725234031677246
    8. 'le' → logprob: -6.975234031677246
    9. ' ' → logprob: -7.350234031677246
    10. '```' → logprob: -7.475234031677246

Token 1084: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33439505100250244
    2. '=' → logprob: -3.084394931793213
    3. ',' → logprob: -3.334394931793213
    4. ' )' → logprob: -3.459394931793213
    5. ' est' → logprob: -3.584394931793213
    6. ' ==' → logprob: -3.709394931793213
    7. ' correct' → logprob: -3.709394931793213
    8. ' =' → logprob: -4.209394931793213
    9. '_' → logprob: -4.709394931793213
    10. '==' → logprob: -4.834394931793213

Token 1085: ' eau' (ID: 79359)
  Prédit: ' celui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' celui' → logprob: -1.4085334539413452
    2. 'est' → logprob: -1.7835334539413452
    3. 'self' → logprob: -2.2835335731506348
    4. 'niveau' → logprob: -2.2835335731506348
    5. 'l' → logprob: -2.4085335731506348
    6. 'g' → logprob: -2.7835335731506348
    7. 'cel' → logprob: -3.4085335731506348
    8. 'level' → logprob: -3.4085335731506348
    9. 'la' → logprob: -3.6585335731506348
    10. 'le' → logprob: -3.7835335731506348

Token 1086: ' aval' (ID: 24204)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11949758976697922
    2. 'am' → logprob: -2.869497537612915
    3. ')' → logprob: -3.619497537612915
    4. '_am' → logprob: -3.869497537612915
    5. '_m' → logprob: -6.994497776031494
    6. '_amp' → logprob: -7.119497776031494
    7. ' )' → logprob: -7.744497776031494
    8. '   ' → logprob: -7.744497776031494
    9. '_r' → logprob: -7.744497776031494
    10. ' am' → logprob: -7.994497776031494

Token 1087: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03595215082168579
    2. 'e' → logprob: -4.035952091217041
    3. ' )' → logprob: -4.285952091217041
    4. '_' → logprob: -6.535952091217041
    5. ')
' → logprob: -7.410952091217041
    6. ',' → logprob: -8.2859525680542
    7. '#' → logprob: -8.7859525680542
    8. '')' → logprob: -8.7859525680542
    9. '),' → logprob: -9.0359525680542
    10. '+' → logprob: -9.0359525680542

Token 1088: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0258855652064085
    2. '    
' → logprob: -4.775885581970215
    3. ')' → logprob: -5.275885581970215
    4. '#' → logprob: -5.525885581970215
    5. '
' → logprob: -5.650885581970215
    6. '<|end|>' → logprob: -7.150885581970215
    7. ',' → logprob: -7.275885581970215
    8. ' 
' → logprob: -7.400885581970215
    9. 'def' → logprob: -7.525885581970215
    10. '\' → logprob: -7.900885581970215

Token 1089: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06790218502283096
    2. '    
' → logprob: -3.692902088165283
    3. '
' → logprob: -3.817902088165283
    4. ' 
' → logprob: -5.067902088165283
    5. '#' (adapté à ' #') → logprob: -5.817902088165283
    6. '\' → logprob: -5.942902088165283
    7. '<|end|>' → logprob: -6.192902088165283
    8. ')' → logprob: -6.442902088165283
    9. '  
' → logprob: -7.567902088165283
    10. '\n' → logprob: -7.567902088165283

Token 1090: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4102010130882263
    2. '#' → logprob: -2.535201072692871
    3. ' 
' → logprob: -2.660201072692871
    4. '
' → logprob: -2.910201072692871
    5. 'def' → logprob: -3.035201072692871
    6. '    
' → logprob: -3.285201072692871
    7. 'import' → logprob: -3.535201072692871
    8. '<|end|>' → logprob: -6.160201072692871
    9. '\' → logprob: -6.285201072692871
    10. ')' → logprob: -6.285201072692871

Token 1091: ' fin' (ID: 2131)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37222957611083984
    2. '   ' → logprob: -1.9972295761108398
    3. 'import' → logprob: -2.24722957611084
    4. '
' → logprob: -3.74722957611084
    5. 'events' → logprob: -3.99722957611084
    6. 'pass' → logprob: -4.37222957611084
    7. 'time' → logprob: -5.49722957611084
    8. ' #' → logprob: -6.37222957611084
    9. 'event' → logprob: -6.49722957611084
    10. 'from' → logprob: -6.49722957611084

Token 1092: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4718629717826843
    2. ':' → logprob: -1.471863031387329
    3. '
' → logprob: -2.971863031387329
    4. ':
' → logprob: -4.09686279296875
    5. ' =' → logprob: -4.09686279296875
    6. 'def' → logprob: -4.09686279296875
    7. '(
' → logprob: -4.22186279296875
    8. '_' → logprob: -5.34686279296875
    9. ',' → logprob: -5.84686279296875
    10. '():' → logprob: -6.09686279296875

Token 1093: ' simulation' (ID: 30937)
  Prédit: 'simulation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simulation' → logprob: -0.08425285667181015
    2. 'la' → logprob: -3.0842528343200684
    3. ' simulation' → logprob: -3.9592528343200684
    4. 'sim' → logprob: -4.959252834320068
    5. 'course' → logprob: -5.834252834320068
    6. ' la' → logprob: -6.084252834320068
    7. 'l' → logprob: -6.459252834320068
    8. 'temps' → logprob: -7.334252834320068
    9. ' course' → logprob: -7.834252834320068
    10. 'cours' → logprob: -8.084253311157227

Token 1094: ' quand' (ID: 18026)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1095: ' le' (ID: 505)
  Prédit: ' ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ships' → logprob: -0.9359914660453796
    2. ' all' → logprob: -1.5609915256500244
    3. 'ships' → logprob: -1.6859915256500244
    4. 'all' → logprob: -1.8109915256500244
    5. ' any' → logprob: -3.8109915256500244
    6. 'any' → logprob: -4.185991287231445
    7. 'tout' → logprob: -6.185991287231445
    8. 't' → logprob: -6.435991287231445
    9. ' tous' → logprob: -6.810991287231445
    10. ' True' → logprob: -6.935991287231445

Token 1096: ' dernier' (ID: 27982)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.5407098531723022
    2. ' ships' → logprob: -2.290709972381592
    3. 't' → logprob: -2.665709972381592
    4. 'last' → logprob: -2.790709972381592
    5. ' last' → logprob: -3.540709972381592
    6. 'first' → logprob: -3.665709972381592
    7. ' first' → logprob: -3.915709972381592
    8. 'temps' → logprob: -4.040709972381592
    9. 'ship' → logprob: -4.540709972381592
    10. 's' → logprob: -4.790709972381592

Token 1097: ' bateau' (ID: 123794)
  Prédit: 'bate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bate' → logprob: -0.314744770526886
    2. ' bateau' → logprob: -1.8147447109222412
    3. 'ship' → logprob: -2.939744710922241
    4. '_' → logprob: -3.689744710922241
    5. 'boat' → logprob: -5.31474494934082
    6. ' ship' → logprob: -5.43974494934082
    7. '_b' → logprob: -5.81474494934082
    8. ' bate' → logprob: -6.06474494934082
    9. 'nav' → logprob: -6.06474494934082
    10. 'b' → logprob: -6.43974494934082

Token 1098: ' dépasse' (ID: 165701)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2588655650615692
    2. '_sort' → logprob: -2.5088655948638916
    3. '_s' → logprob: -3.6338655948638916
    4. '_arr' → logprob: -3.7588655948638916
    5. '_out' → logprob: -4.1338653564453125
    6. 's' → logprob: -4.2588653564453125
    7. 'sort' → logprob: -4.3838653564453125
    8. 'est' → logprob: -4.7588653564453125
    9. ' est' → logprob: -4.7588653564453125
    10. ' _' → logprob: -5.1338653564453125

Token 1099: ' K' (ID: 658)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.336726576089859
    2. 'events' → logprob: -1.9617265462875366
    3. '#' → logprob: -2.211726665496826
    4. 'time' → logprob: -4.836726665496826
    5. '    
' → logprob: -4.961726665496826
    6. 'import' → logprob: -5.586726665496826
    7. 'pass' → logprob: -5.586726665496826
    8. '
' → logprob: -6.086726665496826
    9. 'event' → logprob: -6.211726665496826
    10. ' events' → logprob: -6.211726665496826

Token 1100: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8171042799949646
    2. '   ' → logprob: -0.9421042799949646
    3. 'import' → logprob: -3.1921043395996094
    4. 'def' → logprob: -3.3171043395996094
    5. ')' → logprob: -3.8171043395996094
    6. 'pass' → logprob: -3.9421043395996094
    7. '<|end|>' → logprob: -4.317104339599609
    8. '
' → logprob: -4.942104339599609
    9. '    
' → logprob: -4.942104339599609
    10. ':' → logprob: -5.942104339599609

Token 1101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.686638593673706
    2. '#' → logprob: -1.186638593673706
    3. 'def' → logprob: -2.936638593673706
    4. ' 
' → logprob: -3.061638593673706
    5. '    
' → logprob: -3.436638593673706
    6. '
' → logprob: -3.936638593673706
    7. 'import' → logprob: -4.311638832092285
    8. '\' → logprob: -4.936638832092285
    9. ':' → logprob: -5.436638832092285
    10. ')' → logprob: -6.186638832092285

Token 1102: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40015336871147156
    2. 'import' → logprob: -2.150153398513794
    3. 'events' → logprob: -2.275153398513794
    4. '#' (adapté à ' #') → logprob: -2.900153398513794
    5. '    
' → logprob: -3.650153398513794
    6. 'def' → logprob: -5.025153160095215
    7. '
' → logprob: -5.150153160095215
    8. '    ' → logprob: -5.775153160095215
    9. ' 
' → logprob: -6.025153160095215
    10. ' events' → logprob: -6.150153160095215

Token 1103: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3148399591445923
    2. 'import' → logprob: -1.9398399591445923
    3. 'events' → logprob: -2.4398398399353027
    4. '#' → logprob: -3.8148398399353027
    5. '    
' → logprob: -4.939839839935303
    6. ' events' → logprob: -6.189839839935303
    7. 'event' → logprob: -6.189839839935303
    8. 'def' → logprob: -6.564839839935303
    9. 'from' → logprob: -7.064839839935303
    10. ' #' → logprob: -7.189839839935303

Token 1104: ' mod' (ID: 1812)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.35141077637672424
    2. ' l' → logprob: -1.7264107465744019
    3. 'i' → logprob: -2.8514108657836914
    4. 'maint' → logprob: -3.8514108657836914
    5. '_' → logprob: -4.601410865783691
    6. 'le' → logprob: -5.601410865783691
    7. ' i' → logprob: -5.726410865783691
    8. '_now' → logprob: -5.976410865783691
    9. ' commencer' → logprob: -6.351410865783691
    10. 'cela' → logprob: -6.476410865783691

Token 1105: 'él' (ID: 6778)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -1.7232813835144043
    2. 'ule' → logprob: -1.9732813835144043
    3. 'er' → logprob: -2.2232813835144043
    4. 'u' → logprob: -2.5982813835144043
    5. 'é' → logprob: -2.5982813835144043
    6. 'él' → logprob: -2.8482813835144043
    7. 'uler' → logprob: -2.9732813835144043
    8. 'ifier' → logprob: -3.0982813835144043
    9. 'e' → logprob: -3.0982813835144043
    10. 't' → logprob: -3.3482813835144043

Token 1106: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.009274671785533428
    2. 'iser' → logprob: -5.009274482727051
    3. 'izer' → logprob: -7.259274482727051
    4. 'érer' → logprob: -8.00927448272705
    5. '#' → logprob: -8.25927448272705
    6. 'uer' → logprob: -8.38427448272705
    7. 'ier' → logprob: -8.75927448272705
    8. 'e' → logprob: -9.00927448272705
    9. '   ' → logprob: -9.00927448272705
    10. 'ifier' → logprob: -9.38427448272705

Token 1107: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1108: ' proc' (ID: 14550)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7983396649360657
    2. ' will' → logprob: -1.798339605331421
    3. ''ll' → logprob: -2.548339605331421
    4. ' use' → logprob: -2.548339605331421
    5. ' import' → logprob: -3.298339605331421
    6. ' vais' → logprob: -3.923339605331421
    7. ' initialize' → logprob: -3.923339605331421
    8. ' need' → logprob: -4.17333984375
    9. '   ' → logprob: -4.54833984375
    10. ' utiliser' → logprob: -4.54833984375

Token 1109: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.8038493990898132
    2. 'éder' → logprob: -0.9288493990898132
    3. 'ed' → logprob: -3.053849458694458
    4. 'ess' → logprob: -3.053849458694458
    5. 'éd' → logprob: -3.678849458694458
    6. 'è' → logprob: -4.428849220275879
    7. 'ede' → logprob: -4.428849220275879
    8. 'é' → logprob: -4.803849220275879
    9. 'édé' → logprob: -5.678849220275879
    10. 'eed' → logprob: -7.678849220275879

Token 1110: ' en' (ID: 469)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7475258708000183
    2. ' par' → logprob: -0.9975258708000183
    3. ' step' → logprob: -3.122525930404663
    4. '   ' → logprob: -3.372525930404663
    5. ' pas' → logprob: -4.622525691986084
    6. ' étape' → logprob: -4.622525691986084
    7. 'step' → logprob: -4.872525691986084
    8. 'pas' → logprob: -5.122525691986084
    9. ' à' → logprob: -5.247525691986084
    10. 'à' → logprob: -5.497525691986084

Token 1111: ' év' (ID: 23692)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.7898576855659485
    2. 'events' → logprob: -1.1648576259613037
    3. 'event' → logprob: -3.0398576259613037
    4. 'év' → logprob: -3.0398576259613037
    5. 'é' → logprob: -3.5398576259613037
    6. 'import' → logprob: -4.039857864379883
    7. 'while' → logprob: -4.164857864379883
    8. '#' → logprob: -4.289857864379883
    9. 'ev' → logprob: -5.164857864379883
    10. 'bou' → logprob: -5.289857864379883

Token 1112: 'ènements' (ID: 178488)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.07850291579961777
    2. 'ent' → logprob: -2.953502893447876
    3. 'en' → logprob: -4.578503131866455
    4. '#' → logprob: -5.203503131866455
    5. 'ènements' → logprob: -6.453503131866455
    6. '```' → logprob: -7.078503131866455
    7. 'al' → logprob: -7.203503131866455
    8. '=' → logprob: -7.578503131866455
    9. 'ente' → logprob: -7.828503131866455
    10. 'nts' → logprob: -7.953503131866455

Token 1113: ' chron' (ID: 30093)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9478856921195984
    2. '<|end|>' → logprob: -1.8228857517242432
    3. 'def' → logprob: -1.8228857517242432
    4. '_' → logprob: -2.572885751724243
    5. 'import' → logprob: -2.947885751724243
    6. '
' → logprob: -3.072885751724243
    7. '   ' → logprob: -3.572885751724243
    8. '<|end|>' → logprob: -3.697885751724243
    9. ' :' → logprob: -4.572885513305664
    10. '#' → logprob: -4.822885513305664

Token 1114: 'ologiques' (ID: 80834)
  Prédit: 'ologique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ologique' → logprob: -0.057266298681497574
    2. 'ologiques' → logprob: -3.0572662353515625
    3. 'on' → logprob: -5.6822662353515625
    4. 'ique' → logprob: -6.5572662353515625
    5. 'ologie' → logprob: -6.6822662353515625
    6. 'olog' → logprob: -7.9322662353515625
    7. 'om' → logprob: -7.9322662353515625
    8. 'ron' → logprob: -8.307266235351562
    9. 'o' → logprob: -8.432266235351562
    10. 'ona' → logprob: -8.682266235351562

Token 1115: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8944414258003235
    2. '
' → logprob: -1.2694413661956787
    3. 'def' → logprob: -2.3944413661956787
    4. 'import' → logprob: -2.7694413661956787
    5. '   ' → logprob: -3.1444413661956787
    6. '<|end|>' → logprob: -3.5194413661956787
    7. '#' → logprob: -3.7694413661956787
    8. ':
' → logprob: -4.394441604614258
    9. '_' → logprob: -4.769441604614258
    10. '<|end|>' → logprob: -4.894441604614258

Token 1116: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6230385303497314
    2. '
' → logprob: -1.7480385303497314
    3. '   ' → logprob: -1.8730385303497314
    4. 'import' → logprob: -1.8730385303497314
    5. ':' → logprob: -2.2480385303497314
    6. '#' → logprob: -2.8730385303497314
    7. ' 
' → logprob: -3.3730385303497314
    8. 'events' → logprob: -3.7480385303497314
    9. '    
' → logprob: -3.8730385303497314
    10. 'from' → logprob: -4.748038291931152

Token 1117: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5315138697624207
    2. 'events' → logprob: -1.4065139293670654
    3. 'import' → logprob: -3.2815139293670654
    4. 'event' → logprob: -3.6565139293670654
    5. '    
' → logprob: -3.7815139293670654
    6. '#' (adapté à ' #') → logprob: -3.7815139293670654
    7. ' events' → logprob: -4.281513690948486
    8. '
' → logprob: -4.406513690948486
    9. ' 
' → logprob: -4.531513690948486
    10. 'e' → logprob: -5.406513690948486

Token 1118: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7103961110115051
    2. 'events' → logprob: -0.9603961110115051
    3. 'import' → logprob: -2.8353960514068604
    4. '
' → logprob: -3.9603960514068604
    5. '    
' → logprob: -4.0853962898254395
    6. ' events' → logprob: -4.3353962898254395
    7. 'event' → logprob: -4.7103962898254395
    8. '#' → logprob: -5.8353962898254395
    9. 'from' → logprob: -6.8353962898254395
    10. ' 
' → logprob: -6.9603962898254395

Token 1119: ' év' (ID: 23692)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.8959108591079712
    2. '_event' → logprob: -1.8959108591079712
    3. '_' → logprob: -2.2709107398986816
    4. ' =' → logprob: -2.6459107398986816
    5. ' event' → logprob: -2.7709107398986816
    6. 'time' → logprob: -3.1459107398986816
    7. '.' → logprob: -3.6459107398986816
    8. '=' → logprob: -3.8959107398986816
    9. '_time' → logprob: -4.520910739898682
    10. ' evenement' → logprob: -4.895910739898682

Token 1120: 'ènement' (ID: 132303)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.11005008965730667
    2. 'ènement' → logprob: -2.6100502014160156
    3. 'énement' → logprob: -3.7350502014160156
    4. 'è' → logprob: -6.110050201416016
    5. 'é' → logprob: -6.360050201416016
    6. 'èn' → logprob: -7.735050201416016
    7. 'ént' → logprob: -7.860050201416016
    8. 'ênt' → logprob: -7.985050201416016
    9. 'en' → logprob: -8.735050201416016
    10. 'ент' → logprob: -8.735050201416016

Token 1121: ' a' (ID: 261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2962738573551178
    2. '_' → logprob: -2.546273946762085
    3. '=' → logprob: -3.171273946762085
    4. ')' → logprob: -3.546273946762085
    5. '[' → logprob: -3.921273946762085
    6. ',' → logprob: -4.046273708343506
    7. ' is' → logprob: -4.296273708343506
    8. 's' → logprob: -4.671273708343506
    9. ' ' → logprob: -4.796273708343506
    10. ':' → logprob: -4.796273708343506

Token 1122: ' un' (ID: 537)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.16942112147808075
    2. 'type' → logprob: -3.1694211959838867
    3. ' un' → logprob: -3.5444211959838867
    4. 'un' → logprob: -3.6694211959838867
    5. ' une' → logprob: -4.294421195983887
    6. 'une' → logprob: -4.669421195983887
    7. ' time' → logprob: -5.044421195983887
    8. 'a' → logprob: -5.169421195983887
    9. '
' → logprob: -5.169421195983887
    10. '#' → logprob: -5.419421195983887

Token 1123: ' temps' (ID: 11160)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2517978847026825
    2. 'temps' → logprob: -1.6267979145050049
    3. 'timestamp' → logprob: -4.501797676086426
    4. ' time' → logprob: -5.376797676086426
    5. 'type' → logprob: -5.501797676086426
    6. 't' → logprob: -6.376797676086426
    7. ' temps' → logprob: -6.626797676086426
    8. '
' → logprob: -6.751797676086426
    9. 'moment' → logprob: -7.751797676086426
    10. ' moment' → logprob: -8.126797676086426

Token 1124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04300399497151375
    2. '_' → logprob: -4.168004035949707
    3. '<|end|>' → logprob: -4.668004035949707
    4. ')' → logprob: -4.918004035949707
    5. ',
' → logprob: -6.043004035949707
    6. '=' → logprob: -6.293004035949707
    7. ' ,' → logprob: -6.543004035949707
    8. '.' → logprob: -6.918004035949707
    9. '<|end|>' → logprob: -7.668004035949707
    10. ':' → logprob: -7.668004035949707

Token 1125: ' on' (ID: 402)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.15591022372245789
    2. '#' → logprob: -2.6559102535247803
    3. ' type' → logprob: -3.4059102535247803
    4. 'event' → logprob: -3.9059102535247803
    5. ' une' → logprob: -5.155910015106201
    6. ' #' → logprob: -5.530910015106201
    7. 'position' → logprob: -6.405910015106201
    8. ' event' → logprob: -6.905910015106201
    9. 'action' → logprob: -6.905910015106201
    10. 'def' → logprob: -7.030910015106201

Token 1126: ' avance' (ID: 81376)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.022046849131584167
    2. ' import' → logprob: -5.64704704284668
    3. 'continue' → logprob: -5.64704704284668
    4. 'push' → logprob: -5.77204704284668
    5. ' continue' → logprob: -6.14704704284668
    6. '.append' → logprob: -6.64704704284668
    7. ' push' → logprob: -6.77204704284668
    8. 'append' → logprob: -7.02204704284668
    9. '   ' → logprob: -7.39704704284668
    10. 'def' → logprob: -7.64704704284668

Token 1127: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2110787630081177
    2. '_' → logprob: -1.3360787630081177
    3. '=' → logprob: -1.7110787630081177
    4. ')' → logprob: -2.711078643798828
    5. ' +=' → logprob: -3.336078643798828
    6. '<|end|>' → logprob: -3.461078643798828
    7. '.' → logprob: -3.586078643798828
    8. ' =' → logprob: -3.711078643798828
    9. ' ' → logprob: -4.086078643798828
    10. '+=' → logprob: -4.711078643798828

Token 1128: ' temps' (ID: 11160)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7112948894500732
    2. 'l' → logprob: -1.4612948894500732
    3. 'un' → logprob: -2.3362948894500732
    4. 'év' → logprob: -2.3362948894500732
    5. 'temps' → logprob: -3.7112948894500732
    6. 'event' → logprob: -3.9612948894500732
    7. 'plus' → logprob: -4.711295127868652
    8. 'é' → logprob: -5.086295127868652
    9. 'une' → logprob: -5.211295127868652
    10. '+' → logprob: -5.836295127868652

Token 1129: ' en' (ID: 469)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7792677879333496
    2. '+=' → logprob: -1.5292677879333496
    3. '+' → logprob: -1.6542677879333496
    4. '=' → logprob: -2.1542677879333496
    5. ' =' → logprob: -5.02926778793335
    6. ' +' → logprob: -5.40426778793335
    7. ',' → logprob: -6.15426778793335
    8. ')' → logprob: -6.65426778793335
    9. '_' → logprob: -6.65426778793335
    10. 'plus' → logprob: -7.65426778793335

Token 1130: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -1.0240478515625
    2. '1' → logprob: -1.7740478515625
    3. 'plus' → logprob: -2.0240478515625
    4. 'increment' → logprob: -2.5240478515625
    5. 'év' → logprob: -2.6490478515625
    6. 'event' → logprob: -3.1490478515625
    7. 'une' → logprob: -3.2740478515625
    8. 'queue' → logprob: -3.6490478515625
    9. 'avance' → logprob: -4.2740478515625
    10. 'heure' → logprob: -4.2740478515625

Token 1131: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8285884857177734
    2. ',' → logprob: -0.9535884857177734
    3. '<|end|>' → logprob: -3.2035884857177734
    4. '.' → logprob: -3.7035884857177734
    5. ')' → logprob: -3.9535884857177734
    6. ' ' → logprob: -4.078588485717773
    7. ' step' → logprob: -4.328588485717773
    8. '#' → logprob: -4.828588485717773
    9. '_step' → logprob: -4.828588485717773
    10. '<|end|>' → logprob: -4.828588485717773

Token 1132: ' on' (ID: 402)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.664021909236908
    2. ' traite' → logprob: -1.9140219688415527
    3. 'trait' → logprob: -2.1640219688415527
    4. 'process' → logprob: -2.6640219688415527
    5. 'tra' → logprob: -2.9140219688415527
    6. ' g' → logprob: -3.2890219688415527
    7. 'ex' → logprob: -5.164021968841553
    8. 'continue' → logprob: -5.164021968841553
    9. 'execute' → logprob: -5.289021968841553
    10. '#' → logprob: -5.289021968841553

Token 1133: ' met' (ID: 1421)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.9159765243530273
    2. 'import' → logprob: -1.0409765243530273
    3. 'pop' → logprob: -1.9159765243530273
    4. 'push' → logprob: -3.0409765243530273
    5. 'continue' → logprob: -3.6659765243530273
    6. 'heap' → logprob: -4.540976524353027
    7. 'yield' → logprob: -6.165976524353027
    8. 'handle' → logprob: -6.915976524353027
    9. 'pass' → logprob: -7.040976524353027
    10. 'g' → logprob: -7.040976524353027

Token 1134: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.017270293086767197
    2. ' à' → logprob: -4.642270088195801
    3. '#' → logprob: -5.892270088195801
    4. 'import' → logprob: -6.517270088195801
    5. '```' → logprob: -6.642270088195801
    6. 'en' → logprob: -7.267270088195801
    7. 'aj' → logprob: -7.767270088195801
    8. '-à' → logprob: -8.7672700881958
    9. 'À' → logprob: -9.0172700881958
    10. 'a' → logprob: -9.2672700881958

Token 1135: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0018097716383635998
    2. 'jou' → logprob: -6.501809597015381
    3. 'jours' → logprob: -9.126810073852539
    4. '```' → logprob: -9.376810073852539
    5. ' jour' → logprob: -10.001810073852539
    6. '
' → logprob: -10.376810073852539
    7. 'journ' → logprob: -11.001810073852539
    8. 'day' → logprob: -12.501810073852539
    9. 'la' → logprob: -12.876810073852539
    10. '``' → logprob: -13.001810073852539

Token 1136: ' vitesse' (ID: 71752)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15914559364318848
    2. 'le' → logprob: -3.2841455936431885
    3. '```' → logprob: -3.4091455936431885
    4. 'import' → logprob: -4.409145355224609
    5. 'l' → logprob: -5.034145355224609
    6. ')' → logprob: -5.159145355224609
    7. '#' → logprob: -5.284145355224609
    8. ' _' → logprob: -5.534145355224609
    9. ',' → logprob: -5.784145355224609
    10. 'event' → logprob: -6.034145355224609

Token 1137: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1138: ' position' (ID: 4010)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.4144822061061859
    2. 'position' → logprob: -1.1644822359085083
    3. 'pos' → logprob: -3.7894821166992188
    4. ' positions' → logprob: -5.914482116699219
    5. ' position' → logprob: -6.289482116699219
    6. '
' → logprob: -10.789482116699219
    7. 'events' → logprob: -11.539482116699219
    8. ' pos' → logprob: -12.289482116699219
    9. ' ' → logprob: -12.289482116699219
    10. '#' → logprob: -12.914482116699219

Token 1139: ' des' (ID: 731)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13926289975643158
    2. ')' → logprob: -3.3892629146575928
    3. '<|end|>' → logprob: -3.6392629146575928
    4. '_' → logprob: -4.389262676239014
    5. '.' → logprob: -4.514262676239014
    6. '   ' → logprob: -4.639262676239014
    7. 'def' → logprob: -4.639262676239014
    8. ',
' → logprob: -5.014262676239014
    9. 's' → logprob: -5.264262676239014
    10. '#' → logprob: -5.389262676239014

Token 1140: ' bate' (ID: 39378)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.03774283453822136
    2. ' ships' → logprob: -3.412742853164673
    3. 'boats' → logprob: -6.287742614746094
    4. 'b' → logprob: -7.787742614746094
    5. 'ship' → logprob: -8.287742614746094
    6. 's' → logprob: -8.662742614746094
    7. 'events' → logprob: -8.912742614746094
    8. 'v' → logprob: -9.037742614746094
    9. '\n' → logprob: -9.037742614746094
    10. 'nav' → logprob: -9.162742614746094

Token 1141: 'aux' (ID: 5454)
  Prédit: 'ux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.2558479309082031
    2. 'u' → logprob: -2.005847930908203
    3. 'aux' → logprob: -2.505847930908203
    4. 'au' → logprob: -5.005847930908203
    5. 'ut' → logprob: -7.255847930908203
    6. 'eux' → logprob: -8.255847930908203
    7. 't' → logprob: -8.380847930908203
    8. 'uts' → logprob: -8.880847930908203
    9. 'uves' → logprob: -8.880847930908203
    10. '```' → logprob: -8.880847930908203

Token 1142: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1143: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8967808485031128
    2. '   ' → logprob: -1.1467808485031128
    3. 'events' → logprob: -1.8967808485031128
    4. 'def' → logprob: -3.5217809677124023
    5. '
' → logprob: -3.6467809677124023
    6. '#' → logprob: -3.8967809677124023
    7. '    
' → logprob: -4.396780967712402
    8. ' 
' → logprob: -5.021780967712402
    9. '\' → logprob: -5.271780967712402
    10. 'event' → logprob: -5.396780967712402

Token 1144: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9406992793083191
    2. '   ' → logprob: -1.3156993389129639
    3. 'events' → logprob: -1.9406993389129639
    4. 'import' → logprob: -2.065699338912964
    5. '    
' → logprob: -4.690699100494385
    6. 'event' → logprob: -4.940699100494385
    7. '
' → logprob: -4.940699100494385
    8. ' 
' → logprob: -4.940699100494385
    9. ' events' → logprob: -5.065699100494385
    10. 'def' → logprob: -5.065699100494385

Token 1145: ' Ev' (ID: 16426)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.9909153580665588
    2. '   ' → logprob: -1.240915298461914
    3. 'import' → logprob: -1.240915298461914
    4. 'event' → logprob: -3.990915298461914
    5. ' events' → logprob: -4.365915298461914
    6. ' import' → logprob: -4.990915298461914
    7. '#' → logprob: -5.240915298461914
    8. 'time' → logprob: -6.365915298461914
    9. 'from' → logprob: -6.615915298461914
    10. ' event' → logprob: -6.865915298461914

Token 1146: 'ènements' (ID: 178488)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.0029816252645105124
    2. 'ent' → logprob: -5.877981662750244
    3. '   ' → logprob: -9.502981185913086
    4. 'nts' → logprob: -10.002981185913086
    5. '       ' → logprob: -11.377981185913086
    6. 'ENTS' → logprob: -11.877981185913086
    7. 'events' → logprob: -12.002981185913086
    8. 'ets' → logprob: -12.127981185913086
    9. ' ents' → logprob: -12.377981185913086
    10. 'vents' → logprob: -12.752981185913086

Token 1147: ' possibles' (ID: 97753)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029177779331803322
    2. '=' → logprob: -3.654177665710449
    3. 's' → logprob: -7.029177665710449
    4. '=[]' → logprob: -7.154177665710449
    5. '_events' → logprob: -7.404177665710449
    6. 'events' → logprob: -8.02917766571045
    7. ':' → logprob: -9.02917766571045
    8. '[]' → logprob: -10.65417766571045
    9. '_event' → logprob: -10.65417766571045
    10. '_queue' → logprob: -11.15417766571045

Token 1148: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03168049082159996
    2. ':' → logprob: -4.406680583953857
    3. '=' → logprob: -5.031680583953857
    4. ' :' → logprob: -6.031680583953857
    5. '[
' → logprob: -6.406680583953857
    6. ':
' → logprob: -6.406680583953857
    7. ' =
' → logprob: -6.656680583953857
    8. '=[
' → logprob: -7.156680583953857
    9. '#' → logprob: -7.281680583953857
    10. '_events' → logprob: -7.531680583953857

Token 1149: 'avec' (ID: 64065)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1501972675323486
    2. ''' → logprob: -1.4001972675323486
    3. '{' → logprob: -1.6501972675323486
    4. '[
' → logprob: -2.6501972675323486
    5. '[' → logprob: -3.1501972675323486
    6. ':' → logprob: -3.9001972675323486
    7. ''s' → logprob: -4.1501970291137695
    8. '#' → logprob: -4.5251970291137695
    9. '{
' → logprob: -4.5251970291137695
    10. ',' → logprob: -4.5251970291137695

Token 1150: ' leurs' (ID: 16348)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5531607270240784
    2. ' time' → logprob: -2.4281606674194336
    3. 'type' → logprob: -2.4281606674194336
    4. ' type' → logprob: -3.5531606674194336
    5. 'types' → logprob: -3.5531606674194336
    6. 'le' → logprob: -3.8031606674194336
    7. 'timestamps' → logprob: -3.9281606674194336
    8. ' le' → logprob: -4.428160667419434
    9. '_time' → logprob: -4.678160667419434
    10. ' types' → logprob: -4.803160667419434

Token 1151: ' traitements' (ID: 158417)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6984575986862183
    2. '_type' → logprob: -1.4484575986862183
    3. ' _' → logprob: -2.823457717895508
    4. '_types' → logprob: -2.948457717895508
    5. ' types' → logprob: -4.073457717895508
    6. ' noms' → logprob: -4.198457717895508
    7. '_
' → logprob: -4.323457717895508
    8. 'type' → logprob: -4.448457717895508
    9. '_time' → logprob: -4.823457717895508
    10. ',' → logprob: -4.823457717895508

Token 1152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6607722043991089
    2. '):
' → logprob: -1.1607722043991089
    3. ')' → logprob: -2.6607723236083984
    4. ':' → logprob: -3.0357723236083984
    5. ' =' → logprob: -3.9107723236083984
    6. ',' → logprob: -4.285772323608398
    7. ':
' → logprob: -5.035772323608398
    8. '=' → logprob: -5.160772323608398
    9. ',
' → logprob: -6.660772323608398
    10. '_' → logprob: -7.535772323608398

Token 1153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1161737442016602
    2. '[
' → logprob: -1.2411737442016602
    3. ''' → logprob: -2.74117374420166
    4. '#' → logprob: -2.74117374420166
    5. '[' → logprob: -2.74117374420166
    6. 'class' → logprob: -3.36617374420166
    7. 'events' → logprob: -3.49117374420166
    8. '"' → logprob: -3.99117374420166
    9. ' events' → logprob: -4.49117374420166
    10. '{
' → logprob: -4.86617374420166

Token 1154: ' #' (ID: 1069)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.7547438144683838
    2. '[
' → logprob: -1.1297438144683838
    3. '{
' → logprob: -2.504743814468384
    4. 'event' → logprob: -3.379743814468384
    5. ' events' → logprob: -3.879743814468384
    6. 'class' → logprob: -4.254743576049805
    7. '   ' → logprob: -4.504743576049805
    8. '{' → logprob: -4.629743576049805
    9. '[' → logprob: -5.504743576049805
    10. 'next' → logprob: -5.754743576049805

Token 1155: ' -' (ID: 533)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.9011721014976501
    2. 'events' → logprob: -2.151172161102295
    3. '#' → logprob: -2.651172161102295
    4. '[' → logprob: -2.651172161102295
    5. '   ' → logprob: -2.776172161102295
    6. '{' → logprob: -3.151172161102295
    7. '{
' → logprob: -3.151172161102295
    8. ' events' → logprob: -3.276172161102295
    9. 'class' → logprob: -3.526172161102295
    10. ' [
' → logprob: -4.151172161102295

Token 1156: ' bateau' (ID: 123794)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8441168069839478
    2. '('' → logprob: -1.9691168069839478
    3. ' '' → logprob: -2.219116687774658
    4. ''s' → logprob: -2.594116687774658
    5. 'time' → logprob: -3.344116687774658
    6. '(' → logprob: -3.344116687774658
    7. ''b' → logprob: -3.844116687774658
    8. '"' → logprob: -4.094116687774658
    9. '   ' → logprob: -4.219116687774658
    10. ''g' → logprob: -4.344116687774658

Token 1157: ' atteint' (ID: 104876)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43366739153862
    2. '_arr' → logprob: -1.1836674213409424
    3. '.' → logprob: -4.308667182922363
    4. '_position' → logprob: -4.683667182922363
    5. 'arr' → logprob: -5.308667182922363
    6. '_positions' → logprob: -5.808667182922363
    7. '_s' → logprob: -6.433667182922363
    8. '<|end|>' → logprob: -6.558667182922363
    9. '_pos' → logprob: -6.683667182922363
    10. '[' → logprob: -6.933667182922363

Token 1158: ' position' (ID: 4010)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.79574054479599
    2. ' gate' → logprob: -2.1707406044006348
    3. '<|end|>' → logprob: -2.4207406044006348
    4. '_gate' → logprob: -3.1707406044006348
    5. 'un' → logprob: -3.4207406044006348
    6. ' '' → logprob: -3.5457406044006348
    7. ' une' → logprob: -3.9207406044006348
    8. 'position' → logprob: -3.9207406044006348
    9. ' position' → logprob: -4.170740604400635
    10. ' ' → logprob: -4.295740604400635

Token 1159: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6415385007858276
    2. '_gate' → logprob: -1.7665385007858276
    3. ' _' → logprob: -2.516538619995117
    4. ''' → logprob: -2.516538619995117
    5. 'g' → logprob: -2.641538619995117
    6. ' '' → logprob: -2.766538619995117
    7. '<|end|>' → logprob: -2.891538619995117
    8. ')' → logprob: -3.141538619995117
    9. 's' → logprob: -3.391538619995117
    10. '_g' → logprob: -3.516538619995117

Token 1160: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.2626100480556488
    2. 'e' → logprob: -2.6376099586486816
    3. ''une' → logprob: -2.8876099586486816
    4. 'u' → logprob: -3.6376099586486816
    5. '_' → logprob: -3.7626099586486816
    6. ''' → logprob: -3.8876099586486816
    7. '_un' → logprob: -4.137609958648682
    8. 'un' → logprob: -4.637609958648682
    9. ''entrée' → logprob: -6.137609958648682
    10. 'une' → logprob: -7.262609958648682

Token 1161: ' gate' (ID: 27172)
  Prédit: '_gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gate' → logprob: -0.8436135649681091
    2. ' gate' → logprob: -2.218613624572754
    3. 'gate' → logprob: -2.218613624572754
    4. 'e' → logprob: -2.718613624572754
    5. '_' → logprob: -3.218613624572754
    6. 'se' → logprob: -3.343613624572754
    7. '_g' → logprob: -3.343613624572754
    8. 'g' → logprob: -3.468613624572754
    9. ' seuil' → logprob: -3.593613624572754
    10. 'es' → logprob: -3.718613624572754

Token 1162: ' depuis' (ID: 16277)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22936595976352692
    2. ':' → logprob: -2.2293660640716553
    3. ',' → logprob: -3.4793660640716553
    4. '   ' → logprob: -3.8543660640716553
    5. '.' → logprob: -4.729365825653076
    6. '_gate' → logprob: -5.229365825653076
    7. '_
' → logprob: -5.604365825653076
    8. ')' → logprob: -5.854365825653076
    9. 'def' → logprob: -6.104365825653076
    10. ''' → logprob: -6.229365825653076

Token 1163: ' ou' (ID: 2031)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.151593416929245
    2. 'le' → logprob: -2.9015934467315674
    3. 'la' → logprob: -3.4015934467315674
    4. 'un' → logprob: -4.026593208312988
    5. 'une' → logprob: -5.276593208312988
    6. '```' → logprob: -5.401593208312988
    7. 'O' → logprob: -5.651593208312988
    8. 'der' → logprob: -5.901593208312988
    9. 'ou' → logprob: -6.276593208312988
    10. 'en' → logprob: -6.401593208312988

Token 1164: ' vers' (ID: 3640)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.00011629798245849088
    2. 'e' → logprob: -10.750116348266602
    3. '```' → logprob: -10.750116348266602
    4. '`' → logprob: -11.250116348266602
    5. 'west' → logprob: -11.625116348266602
    6. 'es' → logprob: -12.000116348266602
    7. '
' → logprob: -12.500116348266602
    8. 'vest' → logprob: -12.625116348266602
    9. 'estion' → logprob: -12.875116348266602
    10. '<-' → logprob: -13.000116348266602

Token 1165: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.25761473178863525
    2. ' l' → logprob: -1.6326147317886353
    3. ''' → logprob: -5.507614612579346
    4. 'le' → logprob: -5.632614612579346
    5. 'e' → logprob: -5.757614612579346
    6. 'la' → logprob: -5.757614612579346
    7. '#' → logprob: -5.757614612579346
    8. '_' → logprob: -6.007614612579346
    9. ' la' → logprob: -6.257614612579346
    10. 'est' → logprob: -6.757614612579346

Token 1166: ' sas' (ID: 51515)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.037606798112392426
    2. ' est' → logprob: -4.662606716156006
    3. 'east' → logprob: -5.287606716156006
    4. 'ou' → logprob: -5.537606716156006
    5. '```' → logprob: -5.662606716156006
    6. 'e' → logprob: -6.162606716156006
    7. ' ' → logprob: -6.537606716156006
    8. ''est' → logprob: -6.912606716156006
    9. 'o' → logprob: -7.037606716156006
    10. '_' → logprob: -7.162606716156006

Token 1167: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15802296996116638
    2. '   ' → logprob: -3.158022880554199
    3. '_
' → logprob: -4.033022880554199
    4. ':' → logprob: -4.283022880554199
    5. 'def' → logprob: -4.283022880554199
    6. '#' → logprob: -4.283022880554199
    7. ',' → logprob: -4.783022880554199
    8. ')' → logprob: -4.908022880554199
    9. '_events' → logprob: -5.283022880554199
    10. ' _' → logprob: -5.658022880554199

Token 1168: 'entrée' (ID: 68707)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11970975995063782
    2. ' )' → logprob: -2.8697097301483154
    3. '_' → logprob: -3.4947097301483154
    4. ''' → logprob: -3.9947097301483154
    5. ',' → logprob: -6.2447099685668945
    6. ' ' → logprob: -7.4947099685668945
    7. '')' → logprob: -7.6197099685668945
    8. ':' → logprob: -7.9947099685668945
    9. ')_' → logprob: -7.9947099685668945
    10. '"' → logprob: -8.369709968566895

Token 1169: '/s' (ID: 5031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5225400328636169
    2. '_' → logprob: -1.1475400924682617
    3. '_gate' → logprob: -3.0225400924682617
    4. ')_' → logprob: -4.272540092468262
    5. '_)' → logprob: -5.272540092468262
    6. ',' → logprob: -5.647540092468262
    7. ' )' → logprob: -5.772540092468262
    8. ' ou' → logprob: -5.897540092468262
    9. ' _' → logprob: -6.522540092468262
    10. ' or' → logprob: -6.772540092468262

Token 1170: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.23672914505004883
    2. 'as' → logprob: -1.8617291450500488
    3. '```' → logprob: -4.611729145050049
    4. ')' → logprob: -4.861729145050049
    5. '_' → logprob: -5.111729145050049
    6. '}' → logprob: -5.236729145050049
    7. '
' → logprob: -5.986729145050049
    8. 'sort' → logprob: -6.236729145050049
    9. 'or' → logprob: -6.424229145050049
    10. 's' → logprob: -6.549229145050049

Token 1171: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06995755434036255
    2. ')' → logprob: -2.8199574947357178
    3. '_' → logprob: -5.819957733154297
    4. '_e' → logprob: -7.194957733154297
    5. 'é' → logprob: -7.194957733154297
    6. '#' → logprob: -7.819957733154297
    7. ' )' → logprob: -8.194957733154297
    8. ' e' → logprob: -8.444957733154297
    9. ')
' → logprob: -8.569957733154297
    10. 'u' → logprob: -8.819957733154297

Token 1172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1918460577726364
    2. '_' → logprob: -1.9418460130691528
    3. ' )' → logprob: -4.566845893859863
    4. '_gate' → logprob: -5.441845893859863
    5. ')_' → logprob: -5.441845893859863
    6. '_)' → logprob: -5.441845893859863
    7. ' _' → logprob: -6.316845893859863
    8. 's' → logprob: -7.066845893859863
    9. '_s' → logprob: -7.066845893859863
    10. '_g' → logprob: -7.441845893859863

Token 1173: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8321482539176941
    2. ',' → logprob: -1.7071483135223389
    3. ')' → logprob: -2.082148313522339
    4. '   ' → logprob: -2.207148313522339
    5. ':' → logprob: -2.957148313522339
    6. ''' → logprob: -3.957148313522339
    7. '<|end|>' → logprob: -4.45714807510376
    8. '_' → logprob: -4.58214807510376
    9. ',
' → logprob: -4.95714807510376
    10. '.' → logprob: -5.08214807510376

Token 1174: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1175: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40452614426612854
    2. '#' → logprob: -1.5295261144638062
    3. '<|end|>' → logprob: -3.5295262336730957
    4. '       ' → logprob: -4.779526233673096
    5. ' ' → logprob: -4.779526233673096
    6. ')' → logprob: -4.904526233673096
    7. '[
' → logprob: -5.154526233673096
    8. '[' → logprob: -5.154526233673096
    9. ' #' → logprob: -5.279526233673096
    10. ''' → logprob: -5.529526233673096

Token 1176: ' sas' (ID: 51515)
  Prédit: ' bateau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bateau' → logprob: -1.0523343086242676
    2. ' gate' → logprob: -1.3023343086242676
    3. '#' → logprob: -1.9273343086242676
    4. ' ship' → logprob: -3.0523343086242676
    5. ' #' → logprob: -3.4273343086242676
    6. ' passage' → logprob: -4.052334308624268
    7. '   ' → logprob: -4.177334308624268
    8. 'pass' → logprob: -4.177334308624268
    9. 'ship' → logprob: -4.302334308624268
    10. 'gate' → logprob: -4.302334308624268

Token 1177: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.295973539352417
    2. '_change' → logprob: -1.295973539352417
    3. 'level' → logprob: -2.295973539352417
    4. ' change' → logprob: -2.545973539352417
    5. 'switch' → logprob: -3.170973539352417
    6. '_level' → logprob: -3.545973539352417
    7. '_switch' → logprob: -3.545973539352417
    8. ' level' → logprob: -3.545973539352417
    9. 'state' → logprob: -4.045973777770996
    10. ' niveau' → logprob: -4.170973777770996

Token 1178: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6773132085800171
    2. '_level' → logprob: -0.9273132085800171
    3. '_de' → logprob: -3.1773133277893066
    4. ' de' → logprob: -3.5523133277893066
    5. 'de' → logprob: -5.052313327789307
    6. '_n' → logprob: -5.427313327789307
    7. 'niveau' → logprob: -5.552313327789307
    8. 's' → logprob: -6.677313327789307
    9. '_d' → logprob: -6.802313327789307
    10. '_levels' → logprob: -6.927313327789307

Token 1179: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.0657745972275734
    2. 'level' → logprob: -2.94077467918396
    3. ' niveau' → logprob: -4.565774440765381
    4. ' level' → logprob: -8.440774917602539
    5. 'state' → logprob: -8.815774917602539
    6. 'nivel' → logprob: -10.190774917602539
    7. '_level' → logprob: -11.565774917602539
    8. 'niv' → logprob: -12.190774917602539
    9. ' nivel' → logprob: -12.565774917602539
    10. 'n' → logprob: -12.940774917602539

Token 1180: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1181: 're' (ID: 264)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05172692611813545
    2. '')' → logprob: -4.551726818084717
    3. ''' → logprob: -4.926726818084717
    4. ' True' → logprob: -5.301726818084717
    5. ' )' → logprob: -5.426726818084717
    6. ' None' → logprob: -5.926726818084717
    7. 'niveau' → logprob: -5.926726818084717
    8. ')
' → logprob: -6.301726818084717
    9. 'None' → logprob: -6.551726818084717
    10. ' level' → logprob: -6.551726818084717

Token 1182: 'quis' (ID: 9867)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7223088145256042
    2. 'l' → logprob: -2.097308874130249
    3. 'quest' → logprob: -2.222308874130249
    4. 'quête' → logprob: -3.222308874130249
    5. 'ady' → logprob: -3.347308874130249
    6. 'lease' → logprob: -3.347308874130249
    7. 'main' → logprob: -3.972308874130249
    8. 'quired' → logprob: -4.09730863571167
    9. 'lay' → logprob: -4.22230863571167
    10. 'start' → logprob: -4.97230863571167

Token 1183: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00944474432617426
    2. ' )' → logprob: -5.384444713592529
    3. '_' → logprob: -6.259444713592529
    4. ')
' → logprob: -7.509444713592529
    5. '_)' → logprob: -7.759444713592529
    6. '_level' → logprob: -8.009445190429688
    7. ' de' → logprob: -8.134445190429688
    8. ',' → logprob: -8.509445190429688
    9. ')_' → logprob: -8.884445190429688
    10. '_s' → logprob: -9.134445190429688

Token 1184: ' que' (ID: 661)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.5278063416481018
    2. 'faire' → logprob: -1.777806282043457
    3. 'le' → logprob: -2.652806282043457
    4. 'la' → logprob: -3.527806282043457
    5. 'ouvrir' → logprob: -3.902806282043457
    6. 'contin' → logprob: -4.027806282043457
    7. 'p' → logprob: -4.152806282043457
    8. 'changer' → logprob: -4.527806282043457
    9. 'l' → logprob: -4.652806282043457
    10. 'un' → logprob: -4.777806282043457

Token 1185: ' bateau' (ID: 123794)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.006386399269104
    2. 'pass' → logprob: -1.256386399269104
    3. 'le' → logprob: -2.0063862800598145
    4. ' un' → logprob: -2.3813862800598145
    5. ' passer' → logprob: -2.7563862800598145
    6. ' passage' → logprob: -3.7563862800598145
    7. 'un' → logprob: -4.0063862800598145
    8. ' continuer' → logprob: -5.7563862800598145
    9. ' bateau' → logprob: -6.1313862800598145
    10. ' pouvoir' → logprob: -6.3813862800598145

Token 1186: ' entre' (ID: 3853)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05302653834223747
    2. ' puisse' → logprob: -3.1780264377593994
    3. 'so' → logprob: -6.0530266761779785
    4. 'pu' → logprob: -6.1780266761779785
    5. ' p' → logprob: -6.8030266761779785
    6. ' passe' → logprob: -7.1780266761779785
    7. 'pass' → logprob: -7.4280266761779785
    8. 'atte' → logprob: -7.4280266761779785
    9. ' arrive' → logprob: -7.9280266761779785
    10. '   ' → logprob: -8.05302619934082

Token 1187: ' ou' (ID: 2031)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.9013707041740417
    2. ')' → logprob: -1.1513707637786865
    3. '_' → logprob: -2.1513707637786865
    4. ' ou' → logprob: -2.5263707637786865
    5. '/s' → logprob: -3.0263707637786865
    6. '_s' → logprob: -4.776370525360107
    7. 'ou' → logprob: -5.026370525360107
    8. ' or' → logprob: -5.276370525360107
    9. ' /' → logprob: -5.776370525360107
    10. 's' → logprob: -6.026370525360107

Token 1188: ' sorte' (ID: 37800)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.5049814581871033
    2. 'qu' → logprob: -1.504981517791748
    3. 's' → logprob: -2.254981517791748
    4. '   ' → logprob: -3.379981517791748
    5. '
' → logprob: -4.879981517791748
    6. ' sorte' → logprob: -5.254981517791748
    7. '       ' → logprob: -5.879981517791748
    8. '\' → logprob: -6.004981517791748
    9. ' ' → logprob: -6.004981517791748
    10. 'ress' → logprob: -6.129981517791748

Token 1189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047567807137966156
    2. '_' → logprob: -3.547567844390869
    3. ' )' → logprob: -4.172567844390869
    4. '_)' → logprob: -7.672567844390869
    5. 's' → logprob: -8.172567367553711
    6. '/' → logprob: -8.297567367553711
    7. ' de' → logprob: -8.547567367553711
    8. 'e' → logprob: -8.547567367553711
    9. ')
' → logprob: -8.797567367553711
    10. ' du' → logprob: -9.047567367553711

Token 1190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32291674613952637
    2. '#' → logprob: -2.8229167461395264
    3. '<|end|>' → logprob: -3.1979167461395264
    4. ':' → logprob: -3.3229167461395264
    5. 'def' → logprob: -3.3229167461395264
    6. '
' → logprob: -3.3229167461395264
    7. 'import' → logprob: -4.5729169845581055
    8. ')' → logprob: -4.9479169845581055
    9. '\' → logprob: -5.0729169845581055
    10. ',' → logprob: -5.1979169845581055

Token 1191: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5216562151908875
    2. '#' (adapté à ' #') → logprob: -1.5216562747955322
    3. ' 
' → logprob: -3.6466562747955322
    4. 'import' → logprob: -3.7716562747955322
    5. 'def' → logprob: -3.8966562747955322
    6. '
' → logprob: -4.021656036376953
    7. ')' → logprob: -4.396656036376953
    8. '<|end|>' → logprob: -4.396656036376953
    9. 'events' → logprob: -4.646656036376953
    10. '    
' → logprob: -5.146656036376953

Token 1192: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33909451961517334
    2. 'events' → logprob: -2.089094638824463
    3. 'def' → logprob: -3.089094638824463
    4. 'import' → logprob: -3.589094638824463
    5. '#' → logprob: -3.714094638824463
    6. ' events' → logprob: -4.214094638824463
    7. 'class' → logprob: -4.214094638824463
    8. '    
' → logprob: -4.714094638824463
    9. '
' → logprob: -4.714094638824463
    10. 'event' → logprob: -5.339094638824463

Token 1193: ' bateau' (ID: 123794)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13592161238193512
    2. 'pass' → logprob: -2.7609217166900635
    3. 'import' → logprob: -4.385921478271484
    4. 'from' → logprob: -5.135921478271484
    5. 'gate' → logprob: -5.135921478271484
    6. 'g' → logprob: -5.385921478271484
    7. 'return' → logprob: -5.510921478271484
    8. 'def' → logprob: -5.635921478271484
    9. 'time' → logprob: -5.635921478271484
    10. 'continue' → logprob: -5.760921478271484

Token 1194: ' atteint' (ID: 104876)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5358383655548096
    2. 'atte' → logprob: -1.9108383655548096
    3. ' atteint' → logprob: -2.1608383655548096
    4. 'avance' → logprob: -3.4108383655548096
    5. '_arr' → logprob: -4.1608381271362305
    6. '_' → logprob: -4.4108381271362305
    7. '   ' → logprob: -4.5358381271362305
    8. 's' → logprob: -4.6608381271362305
    9. ' ' → logprob: -4.7858381271362305
    10. '_at' → logprob: -4.7858381271362305

Token 1195: ' position' (ID: 4010)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7496289610862732
    2. 'position' → logprob: -1.999629020690918
    3. 'un' → logprob: -2.374629020690918
    4. ' un' → logprob: -2.624629020690918
    5. 'gate' → logprob: -2.874629020690918
    6. 'une' → logprob: -3.499629020690918
    7. ' une' → logprob: -3.874629020690918
    8. 'le' → logprob: -4.249629020690918
    9. 'next' → logprob: -4.374629020690918
    10. ' g' → logprob: -4.499629020690918

Token 1196: ' du' (ID: 1462)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.59664386510849
    2. 'd' → logprob: -1.4716439247131348
    3. 'des' → logprob: -3.3466439247131348
    4. '<|end|>' → logprob: -3.4716439247131348
    5. ' d' → logprob: -3.8466439247131348
    6. '_des' → logprob: -4.096643924713135
    7. ' +' → logprob: -4.221643924713135
    8. '_' → logprob: -4.471643924713135
    9. '<|end|>' → logprob: -4.596643924713135
    10. 's' → logprob: -4.596643924713135

Token 1197: ' bateau' (ID: 123794)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.30786070227622986
    2. 'gate' → logprob: -1.5578607320785522
    3. 'ships' → logprob: -4.182860851287842
    4. 'ship' → logprob: -4.307860851287842
    5. ' gates' → logprob: -5.557860851287842
    6. 'b' → logprob: -5.682860851287842
    7. ' gate' → logprob: -6.057860851287842
    8. 'K' → logprob: -6.182860851287842
    9. 'next' → logprob: -6.557860851287842
    10. '```' → logprob: -6.682860851287842

Token 1198: ' devant' (ID: 37522)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9123666882514954
    2. 's' → logprob: -2.2873666286468506
    3. '<|end|>' → logprob: -2.5373666286468506
    4. '[' → logprob: -2.7873666286468506
    5. '_next' → logprob: -2.9123666286468506
    6. ' suivant' → logprob: -2.9123666286468506
    7. '_s' → logprob: -3.0373666286468506
    8. ' devant' → logprob: -3.7873666286468506
    9. '_front' → logprob: -3.9123666286468506
    10. ')' → logprob: -3.9123666286468506

Token 1199: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5444775223731995
    2. 'import' → logprob: -1.4194774627685547
    3. '<|end|>' → logprob: -2.6694774627685547
    4. '#' → logprob: -3.2944774627685547
    5. 'events' → logprob: -3.4194774627685547
    6. 'def' → logprob: -4.669477462768555
    7. '
' → logprob: -5.169477462768555
    8. '_events' → logprob: -5.794477462768555
    9. '<|end|>' → logprob: -5.794477462768555
    10. '    
' → logprob: -5.794477462768555

Token 1200: 'do' (ID: 2408)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006543543189764023
    2. ' )' → logprob: -5.1315436363220215
    3. ')
' → logprob: -8.381543159484863
    4. '')' → logprob: -9.131543159484863
    5. ' ' → logprob: -10.381543159484863
    6. '...)' → logprob: -10.381543159484863
    7. 'def' → logprob: -10.881543159484863
    8. '1' → logprob: -10.881543159484863
    9. '...' → logprob: -11.131543159484863
    10. ',' → logprob: -11.256543159484863

Token 1201: 'it' (ID: 278)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.3584134876728058
    2. 'nc' → logprob: -1.7334134578704834
    3. 'n' → logprob: -2.9834134578704834
    4. 'ne' → logprob: -3.2334134578704834
    5. 'n't' → logprob: -4.1084136962890625
    6. 'it' → logprob: -5.3584136962890625
    7. 'c' → logprob: -6.1084136962890625
    8. 'wn' → logprob: -6.1084136962890625
    9. 'nne' → logprob: -6.1084136962890625
    10. 'ns' → logprob: -6.9834136962890625

Token 1202: ' s' (ID: 265)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2814561128616333
    2. ')' → logprob: -1.5314561128616333
    3. 's' → logprob: -2.5314559936523438
    4. '    ' → logprob: -2.5314559936523438
    5. '```' → logprob: -3.0314559936523438
    6. '   ' → logprob: -3.2814559936523438
    7. '_' → logprob: -3.5314559936523438
    8. ' =' → logprob: -3.6564559936523438
    9. '  ' → logprob: -3.7814559936523438
    10. ' ' → logprob: -4.031455993652344

Token 1203: ''ad' (ID: 36162)
  Prédit: ''arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''arr' → logprob: -1.2699358463287354
    2. ''assurer' → logprob: -1.6449358463287354
    3. 'ur' → logprob: -2.0199358463287354
    4. 'u' → logprob: -3.1449358463287354
    5. '')' → logprob: -3.2699358463287354
    6. '_' → logprob: -3.2699358463287354
    7. 'e' → logprob: -3.7699358463287354
    8. 'peed' → logprob: -3.8949358463287354
    9. 'urtout' → logprob: -3.8949358463287354
    10. 'p' → logprob: -4.019935607910156

Token 1204: 'apter' (ID: 3884)
  Prédit: 'apter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apter' → logprob: -0.025183912366628647
    2. 'just' → logprob: -4.02518367767334
    3. 'p' → logprob: -6.02518367767334
    4. 'd' → logprob: -6.90018367767334
    5. 'apt' → logprob: -7.02518367767334
    6. 'opter' → logprob: -7.02518367767334
    7. '</' → logprob: -8.15018367767334
    8. '
' → logprob: -8.27518367767334
    9. '```' → logprob: -8.40018367767334
    10. 'dre' → logprob: -8.90018367767334

Token 1205: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033953070640563965
    2. '_' → logprob: -4.1589531898498535
    3. '_speed' → logprob: -5.4089531898498535
    4. '   ' → logprob: -6.1589531898498535
    5. ' )' → logprob: -6.1589531898498535
    6. '```' → logprob: -6.7839531898498535
    7. ' sa' → logprob: -6.9089531898498535
    8. '_s' → logprob: -7.0339531898498535
    9. ')_' → logprob: -7.6589531898498535
    10. 's' → logprob: -7.6589531898498535

Token 1206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5003243684768677
    2. '#' → logprob: -1.3753243684768677
    3. '<|end|>' → logprob: -2.750324249267578
    4. 'def' → logprob: -4.125324249267578
    5. 'import' → logprob: -4.250324249267578
    6. '    
' → logprob: -4.875324249267578
    7. ' 
' → logprob: -5.000324249267578
    8. '
' → logprob: -5.125324249267578
    9. '<|end|>' → logprob: -5.625324249267578
    10. ' #' → logprob: -5.625324249267578

Token 1207: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23096689581871033
    2. '#' (adapté à ' #') → logprob: -2.605966806411743
    3. '    
' → logprob: -3.105966806411743
    4. 'import' → logprob: -3.605966806411743
    5. 'events' → logprob: -3.605966806411743
    6. ' 
' → logprob: -4.730967044830322
    7. 'def' → logprob: -5.355967044830322
    8. '
' → logprob: -5.355967044830322
    9. 'class' → logprob: -5.980967044830322
    10. '<|end|>' → logprob: -6.355967044830322

Token 1208: ' Pour' (ID: 13931)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.9360694885253906
    2. 'import' → logprob: -1.1860694885253906
    3. '   ' → logprob: -1.4360694885253906
    4. '#' → logprob: -3.6860694885253906
    5. 'event' → logprob: -4.436069488525391
    6. ' events' → logprob: -4.811069488525391
    7. 'from' → logprob: -4.811069488525391
    8. 'pass' → logprob: -6.061069488525391
    9. ' #' → logprob: -6.561069488525391
    10. 'class' → logprob: -6.561069488525391

Token 1209: ' simpl' (ID: 15693)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1415337324142456
    2. 'i' → logprob: -1.7665337324142456
    3. 'event' → logprob: -1.7665337324142456
    4. '_event' → logprob: -2.641533851623535
    5. ' _' → logprob: -2.891533851623535
    6. 'import' → logprob: -3.141533851623535
    7. ' line' → logprob: -3.641533851623535
    8. ' i' → logprob: -3.766533851623535
    9. 'maint' → logprob: -4.266533851623535
    10. ' event' → logprob: -4.516533851623535

Token 1210: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.7650284767150879
    2. 'ify' → logprob: -1.890028476715088
    3. 'import' → logprob: -2.015028476715088
    4. 'ity' → logprob: -2.140028476715088
    5. 'ité' → logprob: -2.765028476715088
    6. 'iter' → logprob: -3.765028476715088
    7. 'def' → logprob: -4.390028476715088
    8. 'er' → logprob: -5.140028476715088
    9. 'if' → logprob: -5.390028476715088
    10. 'ificate' → logprob: -6.265028476715088

Token 1211: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7562180161476135
    2. ',' → logprob: -2.0062179565429688
    3. 'events' → logprob: -2.6312179565429688
    4. '#' → logprob: -2.7562179565429688
    5. '   ' → logprob: -2.8812179565429688
    6. 'def' → logprob: -3.3812179565429688
    7. 'from' → logprob: -3.7562179565429688
    8. ':' → logprob: -3.7562179565429688
    9. '
' → logprob: -4.006217956542969
    10. 'pass' → logprob: -4.006217956542969

Token 1212: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5084757804870605
    2. 'events' → logprob: -1.6334757804870605
    3. 'event' → logprob: -1.7584757804870605
    4. '#' → logprob: -4.5084757804870605
    5. ' event' → logprob: -5.1334757804870605
    6. ' import' → logprob: -5.3834757804870605
    7. ' events' → logprob: -5.6334757804870605
    8. 'pass' → logprob: -6.1334757804870605
    9. '   ' → logprob: -6.7584757804870605
    10. ' #' → logprob: -7.2584757804870605

Token 1213: ' utilis' (ID: 18688)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6764370799064636
    2. 'continue' → logprob: -1.1764371395111084
    3. ' continue' → logprob: -2.4264371395111084
    4. 'def' → logprob: -3.9264371395111084
    5. ' import' → logprob: -4.176436901092529
    6. '   ' → logprob: -4.301436901092529
    7. 'initialize' → logprob: -4.551436901092529
    8. 'contin' → logprob: -5.551436901092529
    9. '#' → logprob: -5.801436901092529
    10. 'return' → logprob: -6.176436901092529

Token 1214: 'era' (ID: 2060)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2232280671596527
    2. 'ze' → logprob: -2.5982279777526855
    3. '#' → logprob: -3.4732279777526855
    4. 'ng' → logprob: -3.5982279777526855
    5. 'ser' → logprob: -3.8482279777526855
    6. '```' → logprob: -4.9732279777526855
    7. 'import' → logprob: -5.4732279777526855
    8. 'ter' → logprob: -5.8482279777526855
    9. 'def' → logprob: -5.8482279777526855
    10. 'tle' → logprob: -5.9732279777526855

Token 1215: ' une' (ID: 2463)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.013814857229590416
    2. 'from' → logprob: -4.513814926147461
    3. 'heap' → logprob: -6.013814926147461
    4. '```' → logprob: -9.263814926147461
    5. '   ' → logprob: -9.763814926147461
    6. 'a' → logprob: -9.763814926147461
    7. '[]' → logprob: -9.888814926147461
    8. 'un' → logprob: -11.263814926147461
    9. ' import' → logprob: -11.763814926147461
    10. '[]
' → logprob: -11.763814926147461

Token 1216: ' approche' (ID: 102373)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.058898162096738815
    2. 'heap' → logprob: -3.6838982105255127
    3. 'from' → logprob: -3.6838982105255127
    4. 'priority' → logprob: -5.558897972106934
    5. 'list' → logprob: -6.808897972106934
    6. ' heap' → logprob: -8.058897972106934
    7. 'min' → logprob: -8.683897972106934
    8. ' from' → logprob: -8.683897972106934
    9. ' import' → logprob: -8.683897972106934
    10. 'class' → logprob: -8.808897972106934

Token 1217: ' par' (ID: 686)
  Prédit: ' priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' priority' → logprob: -1.1646747589111328
    2. 'priority' → logprob: -1.1646747589111328
    3. 'import' → logprob: -2.039674758911133
    4. ' heap' → logprob: -3.039674758911133
    5. 'heap' → logprob: -3.289674758911133
    6. '[]' → logprob: -3.664674758911133
    7. ' de' → logprob: -3.789674758911133
    8. '_priority' → logprob: -3.914674758911133
    9. 'deque' → logprob: -4.539674758911133
    10. 'event' → logprob: -4.914674758911133

Token 1218: ' pas' (ID: 2173)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2545051872730255
    2. 'event' → logprob: -2.129505157470703
    3. 'events' → logprob: -4.004505157470703
    4. 'heap' → logprob: -4.129505157470703
    5. 'priority' → logprob: -4.129505157470703
    6. ' event' → logprob: -4.629505157470703
    7. '
' → logprob: -4.754505157470703
    8. 'pas' → logprob: -4.879505157470703
    9. ' heap' → logprob: -5.504505157470703
    10. '#' → logprob: -5.504505157470703

Token 1219: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11468533426523209
    2. '    ' → logprob: -3.114685297012329
    3. ' 
' → logprob: -3.864685297012329
    4. '_' → logprob: -3.989685297012329
    5. '   ' → logprob: -4.739685535430908
    6. '  ' → logprob: -6.114685535430908
    7. ')' → logprob: -6.364685535430908
    8. '
' → logprob: -6.614685535430908
    9. '     
' → logprob: -6.614685535430908
    10. ' =' → logprob: -6.739685535430908

Token 1220: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.0016322131268680096
    2. 'pas' → logprob: -6.626632213592529
    3. 'time' → logprob: -10.251631736755371
    4. 't' → logprob: -10.376631736755371
    5. ' ' → logprob: -10.501631736755371
    6. 'le' → logprob: -10.751631736755371
    7. '   ' → logprob: -10.876631736755371
    8. 'tempo' → logprob: -11.001631736755371
    9. 'une' → logprob: -11.126631736755371
    10. 'tem' → logprob: -11.126631736755371

Token 1221: ' gl' (ID: 2000)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2026890069246292
    2. '   ' → logprob: -2.8276889324188232
    3. ' :' → logprob: -3.0776889324188232
    4. 'def' → logprob: -3.2026889324188232
    5. ',' → logprob: -3.8276889324188232
    6. '<|end|>' → logprob: -5.702689170837402
    7. ' ' → logprob: -6.202689170837402
    8. '_' → logprob: -6.452689170837402
    9. '.' → logprob: -6.452689170837402
    10. ')' → logprob: -7.077689170837402

Token 1222: 'issant' (ID: 31359)
  Prédit: 'obal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obal' → logprob: -1.0715681314468384
    2. 'issante' → logprob: -1.3215681314468384
    3. 'ace' → logprob: -2.071568012237549
    4. 'issant' → logprob: -2.821568012237549
    5. 'ob' → logprob: -2.821568012237549
    6. 'issement' → logprob: -4.446568012237549
    7. 'ocale' → logprob: -4.696568012237549
    8. 'ance' → logprob: -4.946568012237549
    9. 'ec' → logprob: -4.946568012237549
    10. '#' → logprob: -5.196568012237549

Token 1223: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055182065814733505
    2. ' :' → logprob: -3.3051819801330566
    3. '   ' → logprob: -5.055181980133057
    4. ',' → logprob: -6.180181980133057
    5. 'def' → logprob: -6.180181980133057
    6. '.' → logprob: -6.805181980133057
    7. ':
' → logprob: -7.055181980133057
    8. ' ' → logprob: -7.055181980133057
    9. '<|end|>' → logprob: -7.305181980133057
    10. '
' → logprob: -7.805181980133057

Token 1224: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3807413578033447
    2. 'small' → logprob: -1.5057413578033447
    3. 'une' → logprob: -1.7557413578033447
    4. 'pet' → logprob: -2.2557413578033447
    5. '1' → logprob: -2.7557413578033447
    6. 'pas' → logprob: -3.0057413578033447
    7. '10' → logprob: -3.8807413578033447
    8. '100' → logprob: -4.505741119384766
    9. 'min' → logprob: -4.630741119384766
    10. 'very' → logprob: -4.755741119384766

Token 1225: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7875127196311951
    2. ' de' → logprob: -0.9125127196311951
    3. 'd' → logprob: -2.28751277923584
    4. ' d' → logprob: -4.28751277923584
    5. 'def' → logprob: -4.53751277923584
    6. '   ' → logprob: -4.66251277923584
    7. '=' → logprob: -6.16251277923584
    8. 'import' → logprob: -6.16251277923584
    9. '    ' → logprob: -6.66251277923584
    10. ' du' → logprob: -7.78751277923584

Token 1226: ''év' (ID: 114425)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030566498637199402
    2. 'temps' → logprob: -4.905566692352295
    3. 'le' → logprob: -5.155566692352295
    4. ' ' → logprob: -5.905566692352295
    5. '=' → logprob: -6.155566692352295
    6. 'e' → logprob: -6.530566692352295
    7. 'l' → logprob: -6.780566692352295
    8. 'def' → logprob: -6.905566692352295
    9. 't' → logprob: -7.030566692352295
    10. '1' → logprob: -7.155566692352295

Token 1227: 'ènements' (ID: 178488)
  Prédit: 'obal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'obal' → logprob: -0.993714451789856
    2. 'ément' → logprob: -1.118714451789856
    3. 'import' → logprob: -2.6187143325805664
    4. 'ement' → logprob: -3.1187143325805664
    5. 'acement' → logprob: -3.3687143325805664
    6. 'ment' → logprob: -3.8687143325805664
    7. 'ace' → logprob: -3.9937143325805664
    8. 'issement' → logprob: -4.243714332580566
    9. '```' → logprob: -4.243714332580566
    10. 'ob' → logprob: -5.118714332580566

Token 1228: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6017836332321167
    2. 'def' → logprob: -1.3517836332321167
    3. '
' → logprob: -3.3517837524414062
    4. '<|end|>' → logprob: -3.4767837524414062
    5. '   ' → logprob: -3.6017837524414062
    6. '_' → logprob: -3.9767837524414062
    7. '#' → logprob: -4.351783752441406
    8. ' :' → logprob: -4.601783752441406
    9. ' =' → logprob: -4.851783752441406
    10. '<|end|>' → logprob: -4.976783752441406

Token 1229: ' gérer' (ID: 86786)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.1905488818883896
    2. 'venir' → logprob: -2.190548896789551
    3. 'sim' → logprob: -3.690548896789551
    4. 'tr' → logprob: -3.815548896789551
    5. 'g' → logprob: -5.065548896789551
    6. 'tra' → logprob: -5.315548896789551
    7. '```' → logprob: -7.190548896789551
    8. 'chercher' → logprob: -7.815548896789551
    9. 'su' → logprob: -8.44054889678955
    10. ' traiter' → logprob: -8.56554889678955

Token 1230: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1231: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4706311225891113
    2. '#' → logprob: -1.8456311225891113
    3. '   ' → logprob: -1.9706311225891113
    4. '<|end|>' → logprob: -1.9706311225891113
    5. 'import' → logprob: -2.2206311225891113
    6. 'events' → logprob: -2.8456311225891113
    7. '
' → logprob: -3.0956311225891113
    8. ':' → logprob: -3.9706311225891113
    9. '<|end|>' → logprob: -4.220631122589111
    10. ' 
' → logprob: -4.470631122589111

Token 1232: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.873664915561676
    2. '#' (adapté à ' #') → logprob: -1.9986648559570312
    3. '   ' → logprob: -2.2486648559570312
    4. ':' → logprob: -2.3736648559570312
    5. 'def' → logprob: -2.6236648559570312
    6. ',' → logprob: -3.2486648559570312
    7. 'import' → logprob: -3.6236648559570312
    8. '<|end|>' → logprob: -3.8736648559570312
    9. '\' → logprob: -4.248664855957031
    10. ')' → logprob: -4.498664855957031

Token 1233: ' Les' (ID: 7029)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5358473062515259
    2. 'import' → logprob: -1.6608473062515259
    3. 'events' → logprob: -1.6608473062515259
    4. '
' → logprob: -2.0358471870422363
    5. '   ' → logprob: -2.2858471870422363
    6. '#' → logprob: -3.2858471870422363
    7. ' events' → logprob: -4.035847187042236
    8. ' 
' → logprob: -4.410847187042236
    9. '\' → logprob: -4.785847187042236
    10. ',' → logprob: -5.035847187042236

Token 1234: ' év' (ID: 23692)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19090747833251953
    2. ' _' → logprob: -2.1909074783325195
    3. '_events' → logprob: -4.4409074783325195
    4. '_time' → logprob: -4.6909074783325195
    5. 'events' → logprob: -5.0659074783325195
    6. ' ' → logprob: -5.4409074783325195
    7. 't' → logprob: -5.4409074783325195
    8. 'time' → logprob: -5.8159074783325195
    9. ' events' → logprob: -5.8159074783325195
    10. ' current' → logprob: -6.0659074783325195

Token 1235: 'ènements' (ID: 178488)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.039671022444963455
    2. 'nts' → logprob: -4.164670944213867
    3. 'ènements' → logprob: -4.289670944213867
    4. 'ts' → logprob: -5.414670944213867
    5. 'ent' → logprob: -6.289670944213867
    6. 'nements' → logprob: -6.789670944213867
    7. 'en' → logprob: -8.039670944213867
    8. 'n' → logprob: -8.164670944213867
    9. 'ements' → logprob: -8.539670944213867
    10. 'ènement' → logprob: -8.789670944213867

Token 1236: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19043144583702087
    2. ' =' → logprob: -1.8154314756393433
    3. '=[]' → logprob: -5.190431594848633
    4. '<|end|>' → logprob: -6.440431594848633
    5. '.' → logprob: -6.690431594848633
    6. 's' → logprob: -7.440431594848633
    7. ',' → logprob: -8.190431594848633
    8. 'import' → logprob: -8.440431594848633
    9. ':' → logprob: -8.565431594848633
    10. '<|end|>' → logprob: -8.815431594848633

Token 1237: ' push' (ID: 9349)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0637010931968689
    2. ' []' → logprob: -2.8137011528015137
    3. '[' → logprob: -7.438701152801514
    4. '[]
' → logprob: -7.563701152801514
    5. '[
' → logprob: -8.688700675964355
    6. 'import' → logprob: -9.063700675964355
    7. '[(' → logprob: -9.438700675964355
    8. 'heap' → logprob: -9.938700675964355
    9. '[])' → logprob: -10.438700675964355
    10. '   ' → logprob: -10.563700675964355

Token 1238: 'és' (ID: 1756)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.08852505683898926
    2. '(' → logprob: -3.3385250568389893
    3. '_heap' → logprob: -3.8385250568389893
    4. '_' → logprob: -4.33852481842041
    5. '(ed' → logprob: -5.96352481842041
    6. '_ed' → logprob: -6.46352481842041
    7. 'es' → logprob: -6.58852481842041
    8. 'e' → logprob: -6.71352481842041
    9. '(
' → logprob: -7.08852481842041
    10. ',' → logprob: -7.21352481842041

Token 1239: ' dans' (ID: 2671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2679528295993805
    2. ',' → logprob: -2.6429529190063477
    3. '_' → logprob: -3.0179529190063477
    4. '<|end|>' → logprob: -3.2679529190063477
    5. '(
' → logprob: -3.8929529190063477
    6. ')' → logprob: -4.267952919006348
    7. '.' → logprob: -5.267952919006348
    8. ' =' → logprob: -6.017952919006348
    9. '(heap' → logprob: -6.017952919006348
    10. '_heap' → logprob: -6.142952919006348

Token 1240: ' une' (ID: 2463)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2085384130477905
    2. 'a' → logprob: -1.4585384130477905
    3. '[]' → logprob: -1.5835384130477905
    4. 'events' → logprob: -1.8335384130477905
    5. 'heap' → logprob: -3.58353853225708
    6. 'une' → logprob: -3.83353853225708
    7. 'event' → logprob: -4.20853853225708
    8. '[]
' → logprob: -4.45853853225708
    9. ' une' → logprob: -5.20853853225708
    10. ' a' → logprob: -5.33353853225708

Token 1241: ' file' (ID: 1974)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.2634028196334839
    2. 'import' → logprob: -1.5134028196334839
    3. 'priority' → logprob: -5.013402938842773
    4. 'list' → logprob: -6.263402938842773
    5. '[]' → logprob: -6.513402938842773
    6. ' heap' → logprob: -7.388402938842773
    7. 'queue' → logprob: -7.763402938842773
    8. '[]
' → logprob: -9.138402938842773
    9. '```' → logprob: -9.138402938842773
    10. ' priority' → logprob: -10.263402938842773

Token 1242: ' prior' (ID: 6217)
  Prédit: '_priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_priority' → logprob: -0.7575108408927917
    2. '_' → logprob: -1.1325109004974365
    3. '_queue' → logprob: -3.0075109004974365
    4. 'import' → logprob: -4.007510662078857
    5. '_events' → logprob: -4.007510662078857
    6. '_event' → logprob: -4.257510662078857
    7. ' =' → logprob: -4.257510662078857
    8. ')' → logprob: -4.257510662078857
    9. ',' → logprob: -4.757510662078857
    10. '_heap' → logprob: -4.757510662078857

Token 1243: 'itaire' (ID: 28335)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.5525174736976624
    2. 'ity' → logprob: -1.3025174140930176
    3. 'queue' → logprob: -2.6775174140930176
    4. 'ty' → logprob: -2.6775174140930176
    5. 'té' → logprob: -5.802517414093018
    6. 'é' → logprob: -6.052517414093018
    7. '_queue' → logprob: -6.302517414093018
    8. 'itaire' → logprob: -6.427517414093018
    9. '```' → logprob: -6.802517414093018
    10. '_' → logprob: -7.427517414093018

Token 1244: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2669006586074829
    2. '[' → logprob: -2.5169005393981934
    3. ',' → logprob: -3.3919005393981934
    4. '.' → logprob: -3.6419005393981934
    5. ')' → logprob: -3.8919005393981934
    6. '<|end|>' → logprob: -4.141900539398193
    7. '[
' → logprob: -4.391900539398193
    8. '(' → logprob: -5.516900539398193
    9. ' (' → logprob: -5.516900539398193
    10. 'from' → logprob: -5.516900539398193

Token 1245: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.04657861962914467
    2. 'from' → logprob: -3.9215786457061768
    3. ',' → logprob: -5.296578407287598
    4. '(' → logprob: -5.796578407287598
    5. '   ' → logprob: -5.921578407287598
    6. ')' → logprob: -6.171578407287598
    7. '
' → logprob: -6.296578407287598
    8. ' (' → logprob: -6.296578407287598
    9. '[
' → logprob: -6.671578407287598
    10. '(
' → logprob: -6.921578407287598

Token 1246: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.117232546210289
    2. 'from' → logprob: -3.24223256111145
    3. ' 
' → logprob: -4.367232322692871
    4. '   ' → logprob: -4.617232322692871
    5. '
' → logprob: -4.867232322692871
    6. '#' (adapté à ' #') → logprob: -4.992232322692871
    7. 'def' → logprob: -5.117232322692871
    8. '  
' → logprob: -5.867232322692871
    9. '[
' → logprob: -5.992232322692871
    10. '(' → logprob: -6.117232322692871

Token 1247: ' Initial' (ID: 9209)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16160447895526886
    2. 'from' → logprob: -2.411604404449463
    3. '   ' → logprob: -4.161604404449463
    4. ' from' → logprob: -5.161604404449463
    5. 'def' → logprob: -5.286604404449463
    6. '
' → logprob: -5.286604404449463
    7. ' 
' → logprob: -5.411604404449463
    8. ' import' → logprob: -5.536604404449463
    9. '(' → logprob: -5.661604404449463
    10. ' (' → logprob: -6.161604404449463

Token 1248: 'ement' (ID: 962)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.743804931640625
    2. ' =' → logprob: -1.993804931640625
    3. 'def' → logprob: -2.243804931640625
    4. 'import' → logprob: -2.493804931640625
    5. '_queue' → logprob: -2.493804931640625
    6. '_events' → logprob: -2.743804931640625
    7. '   ' → logprob: -2.868804931640625
    8. 'e' → logprob: -2.993804931640625
    9. 'ize' → logprob: -3.493804931640625
    10. ')' → logprob: -3.618804931640625

Token 1249: ',' (ID: 11)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.787624716758728
    2. ',' → logprob: -1.537624716758728
    3. 'import' → logprob: -2.0376248359680176
    4. ' events' → logprob: -2.9126248359680176
    5. ' =' → logprob: -3.5376248359680176
    6. 'event' → logprob: -3.6626248359680176
    7. '   ' → logprob: -4.037624835968018
    8. '
' → logprob: -4.287624835968018
    9. ',
' → logprob: -4.412624835968018
    10. ' ,' → logprob: -4.537624835968018

Token 1250: ' tous' (ID: 10688)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01664220169186592
    2. 'events' → logprob: -4.766642093658447
    3. 'event' → logprob: -5.016642093658447
    4. ' import' → logprob: -7.141642093658447
    5. 'from' → logprob: -8.516642570495605
    6. 'time' → logprob: -9.016642570495605
    7. '#' → logprob: -10.016642570495605
    8. ' events' → logprob: -10.016642570495605
    9. ' event' → logprob: -10.141642570495605
    10. 'heap' → logprob: -10.391642570495605

Token 1251: ' les' (ID: 1341)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6759395599365234
    2. 'ships' → logprob: -1.8009395599365234
    3. '_' → logprob: -2.3009395599365234
    4. '_events' → logprob: -3.1759395599365234
    5. '_sh' → logprob: -3.1759395599365234
    6. ' ships' → logprob: -3.5509395599365234
    7. '=' → logprob: -3.8009395599365234
    8. '_ship' → logprob: -4.175939559936523
    9. ' _' → logprob: -4.550939559936523
    10. '[' → logprob: -5.050939559936523

Token 1252: ' bate' (ID: 39378)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.6465123295783997
    2. ' ships' → logprob: -1.0215122699737549
    3. '_' → logprob: -2.521512269973755
    4. 'ship' → logprob: -4.396512508392334
    5. ')' → logprob: -5.271512508392334
    6. '_ship' → logprob: -5.521512508392334
    7. 'boats' → logprob: -6.271512508392334
    8. ' ship' → logprob: -6.646512508392334
    9. '.' → logprob: -6.771512508392334
    10. 'spaces' → logprob: -7.021512508392334

Token 1253: 'aux' (ID: 5454)
  Prédit: 'ck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ck' → logprob: -0.9746943712234497
    2. 'ts' → logprob: -2.22469425201416
    3. ')' → logprob: -2.72469425201416
    4. ',' → logprob: -2.84969425201416
    5. 'cket' → logprob: -3.22469425201416
    6. 'que' → logprob: -3.47469425201416
    7. 'quet' → logprob: -3.59969425201416
    8. 't' → logprob: -3.84969425201416
    9. 'quets' → logprob: -3.84969425201416
    10. '  ' → logprob: -3.97469425201416

Token 1254: ' dém' (ID: 34947)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.8270711302757263
    2. 's' → logprob: -1.952071189880371
    3. '[' → logprob: -2.452071189880371
    4. '_speed' → logprob: -2.577071189880371
    5. '_are' → logprob: -3.077071189880371
    6. ' are' → logprob: -3.452071189880371
    7. '_s' → logprob: -3.577071189880371
    8. '_' → logprob: -3.702071189880371
    9. 'ont' → logprob: -4.452071189880371
    10. '_positions' → logprob: -4.702071189880371

Token 1255: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0814111977815628
    2. 'mar' → logprob: -4.206411361694336
    3. 'm' → logprob: -5.081411361694336
    4. 'but' → logprob: -5.581411361694336
    5. '\' → logprob: -5.706411361694336
    6. '```' → logprob: -5.706411361694336
    7. '   ' → logprob: -5.831411361694336
    8. '``' → logprob: -5.956411361694336
    9. 'ar' → logprob: -6.081411361694336
    10. '       ' → logprob: -6.081411361694336

Token 1256: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.004051209893077612
    2. 'e' → logprob: -5.629051208496094
    3. 'èrent' → logprob: -9.129051208496094
    4. '```' → logprob: -9.754051208496094
    5. 'è' → logprob: -10.254051208496094
    6. 'et' → logprob: -10.379051208496094
    7. 'é' → logprob: -10.504051208496094
    8. 'aient' → logprob: -10.504051208496094
    9. '\' → logprob: -10.879051208496094
    10. 'ed' → logprob: -11.129051208496094

Token 1257: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7584118247032166
    2. '_speed' → logprob: -2.0084118843078613
    3. ' =' → logprob: -2.1334118843078613
    4. ' ' → logprob: -3.3834118843078613
    5. '=' → logprob: -3.5084118843078613
    6. ' with' → logprob: -3.6334118843078613
    7. ' at' → logprob: -3.7584118843078613
    8. ',' → logprob: -3.7584118843078613
    9. 'with' → logprob: -3.7584118843078613
    10. ' _' → logprob: -4.008411884307861

Token 1258: ' vitesse' (ID: 71752)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27860185503959656
    2. 'time' → logprob: -1.528601884841919
    3. 'temps' → logprob: -4.52860164642334
    4. 't' → logprob: -5.02860164642334
    5. 'speed' → logprob: -5.15360164642334
    6. 'v' → logprob: -6.65360164642334
    7. 'pos' → logprob: -7.27860164642334
    8. 'rest' → logprob: -7.52860164642334
    9. 'position' → logprob: -7.90360164642334
    10. 'temp' → logprob: -9.40360164642334

Token 1259: ' maximale' (ID: 76380)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4232260286808014
    2. 'max' → logprob: -1.548225998878479
    3. '=' → logprob: -2.4232261180877686
    4. ' max' → logprob: -3.7982261180877686
    5. ' =' → logprob: -4.4232258796691895
    6. ' ' → logprob: -4.9232258796691895
    7. '```' → logprob: -7.5482258796691895
    8. '1' → logprob: -7.6732258796691895
    9. ' maximale' → logprob: -7.9232258796691895
    10. '=max' → logprob: -8.673226356506348

Token 1260: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06966005265712738
    2. '
' → logprob: -2.944659948348999
    3. 'import' → logprob: -5.194660186767578
    4. 'ships' → logprob: -6.194660186767578
    5. '    
' → logprob: -6.444660186767578
    6. '#' → logprob: -6.694660186767578
    7. '```' → logprob: -7.069660186767578
    8. 'events' → logprob: -7.194660186767578
    9. ' ships' → logprob: -7.319660186767578
    10. 'def' → logprob: -7.569660186767578

Token 1261: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23508480191230774
    2. ' )' → logprob: -2.4850847721099854
    3. '0' → logprob: -2.6100847721099854
    4. '1' → logprob: -3.1100847721099854
    5. ' ' → logprob: -5.9850850105285645
    6. '=' → logprob: -6.1100850105285645
    7. '.' → logprob: -7.6100850105285645
    8. '),' → logprob: -7.7350850105285645
    9. ',' → logprob: -8.360084533691406
    10. ')
' → logprob: -8.485084533691406

Token 1262: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7536355257034302
    2. 'le' → logprob: -1.7536355257034302
    3. 'cha' → logprob: -1.7536355257034302
    4. 't' → logprob: -2.1286354064941406
    5. '0' → logprob: -2.3786354064941406
    6. 'tout' → logprob: -2.7536354064941406
    7. 'leur' → logprob: -2.8786354064941406
    8. 'ch' → logprob: -3.2536354064941406
    9. 'les' → logprob: -3.6286354064941406
    10. 'l' → logprob: -4.378635406494141

Token 1263: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.7321420907974243
    2. 'i' → logprob: -1.1071420907974243
    3. 'prem' → logprob: -2.4821419715881348
    4. 'first' → logprob: -3.2321419715881348
    5. ' i' → logprob: -3.3571419715881348
    6. 'b' → logprob: -4.482141971588135
    7. ' first' → logprob: -4.857141971588135
    8. 'ship' → logprob: -6.357141971588135
    9. '```' → logprob: -6.732141971588135
    10. ' ship' → logprob: -6.857141971588135

Token 1264: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04736180976033211
    2. ' )' → logprob: -3.6723618507385254
    3. ' bateau' → logprob: -4.297361850738525
    4. '),' → logprob: -6.547361850738525
    5. 'bate' → logprob: -6.672361850738525
    6. '_' → logprob: -6.922361850738525
    7. ',' → logprob: -7.047361850738525
    8. ')
' → logprob: -7.547361850738525
    9. ' ' → logprob: -7.922361850738525
    10. 'ship' → logprob: -7.922361850738525

Token 1265: '   ' (ID: 271)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.5590013265609741
    2. '#' → logprob: -2.0590014457702637
    3. ' et' → logprob: -2.8090014457702637
    4. ' #' → logprob: -2.8090014457702637
    5. 'et' → logprob: -3.3090014457702637
    6. ' sauf' → logprob: -3.3090014457702637
    7. ' mais' → logprob: -4.309001445770264
    8. ' les' → logprob: -4.434001445770264
    9. 'for' → logprob: -4.559001445770264
    10. '0' → logprob: -4.559001445770264

Token 1266: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.2136183977127075
    2. ' puis' → logprob: -1.4636183977127075
    3. ' et' → logprob: -2.213618278503418
    4. 'et' → logprob: -2.463618278503418
    5. ' #' → logprob: -2.588618278503418
    6. 'for' → logprob: -2.963618278503418
    7. 't' → logprob: -3.963618278503418
    8. ' mais' → logprob: -4.213618278503418
    9. 'mais' → logprob: -4.338618278503418
    10. ' les' → logprob: -4.463618278503418

Token 1267: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7797735333442688
    2. '#' → logprob: -1.154773473739624
    3. 'et' → logprob: -2.654773473739624
    4. 't' → logprob: -3.654773473739624
    5. 'for' → logprob: -3.654773473739624
    6. ' #' → logprob: -4.154773712158203
    7. ' et' → logprob: -4.404773712158203
    8. 'ship' → logprob: -4.779773712158203
    9. 'v' → logprob: -5.279773712158203
    10. '0' → logprob: -5.279773712158203

Token 1268: ' vitesse' (ID: 71752)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49149253964424133
    2. ' for' → logprob: -1.616492509841919
    3. ' les' → logprob: -3.241492509841919
    4. ' pour' → logprob: -3.241492509841919
    5. 'pour' → logprob: -3.491492509841919
    6. '   ' → logprob: -3.741492509841919
    7. 'les' → logprob: -4.241492748260498
    8. 'le' → logprob: -4.866492748260498
    9. ' ils' → logprob: -5.241492748260498
    10. '#' → logprob: -5.491492748260498

Token 1269: ' adaptées' (ID: 185901)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30958858132362366
    2. ' =' → logprob: -1.4345885515213013
    3. 'adjust' → logprob: -4.934588432312012
    4. 'max' → logprob: -5.059588432312012
    5. 's' → logprob: -6.184588432312012
    6. '_adjust' → logprob: -6.559588432312012
    7. '_' → logprob: -6.934588432312012
    8. '_max' → logprob: -7.059588432312012
    9. 'mod' → logprob: -7.184588432312012
    10. ' ajuste' → logprob: -7.184588432312012

Token 1270: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8096136450767517
    2. '<|end|>' → logprob: -1.5596137046813965
    3. '
' → logprob: -2.1846137046813965
    4. 'import' → logprob: -2.5596137046813965
    5. ',' → logprob: -3.3096137046813965
    6. 'def' → logprob: -3.4346137046813965
    7. '<|end|>' → logprob: -3.8096137046813965
    8. ')' → logprob: -3.9346137046813965
    9. ',
' → logprob: -5.0596137046813965
    10. '.' → logprob: -5.3096137046813965

Token 1271: ' espac' (ID: 195747)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6890370845794678
    2. 'l' → logprob: -1.6890370845794678
    3. 'les' → logprob: -2.0640370845794678
    4. ' la' → logprob: -2.4390370845794678
    5. 'le' → logprob: -3.3140370845794678
    6. 'leur' → logprob: -3.4390370845794678
    7. ' l' → logprob: -4.064037322998047
    8. ' les' → logprob: -5.439037322998047
    9. 'leurs' → logprob: -6.314037322998047
    10. ' ' → logprob: -6.439037322998047

Token 1272: 'ements' (ID: 4507)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.008371546864509583
    2. 'acement' → logprob: -5.133371353149414
    3. 'ements' → logprob: -6.883371353149414
    4. 'e' → logprob: -7.133371353149414
    5. 'cement' → logprob: -8.008371353149414
    6. '```' → logprob: -9.258371353149414
    7. 'ément' → logprob: -9.758371353149414
    8. 'ment' → logprob: -9.883371353149414
    9. 'ing' → logprob: -10.383371353149414
    10. 'ec' → logprob: -12.008371353149414

Token 1273: ' init' (ID: 6327)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6467174887657166
    2. '   ' → logprob: -1.0217175483703613
    3. 'events' → logprob: -3.0217175483703613
    4. 'from' → logprob: -3.5217175483703613
    5. '#' → logprob: -3.7717175483703613
    6. 'event' → logprob: -5.396717548370361
    7. 'def' → logprob: -6.521717548370361
    8. '
' → logprob: -6.521717548370361
    9. ':' → logprob: -7.021717548370361
    10. ')' → logprob: -7.021717548370361

Token 1274: 'iaux' (ID: 35231)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.8530668020248413
    2. 'ément' → logprob: -1.1030668020248413
    3. ')' → logprob: -2.728066921234131
    4. 'és' → logprob: -2.978066921234131
    5. 'é' → logprob: -2.978066921234131
    6. 'ment' → logprob: -4.353066921234131
    7. 'e' → logprob: -4.353066921234131
    8. '=' → logprob: -4.353066921234131
    9. '_' → logprob: -5.228066921234131
    10. 'ion' → logprob: -5.353066921234131

Token 1275: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5859039425849915
    2. 'import' → logprob: -2.4609038829803467
    3. '_events' → logprob: -2.4609038829803467
    4. '_' → logprob: -2.8359038829803467
    5. '
' → logprob: -2.9609038829803467
    6. 'def' → logprob: -3.3359038829803467
    7. 'events' → logprob: -3.4609038829803467
    8. ')' → logprob: -3.9609038829803467
    9. '#' → logprob: -4.210904121398926
    10. ' =' → logprob: -4.835904121398926

Token 1276: 'ships' (ID: 23847)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01437445543706417
    2. ' )' → logprob: -4.889374256134033
    3. '0' → logprob: -6.014374256134033
    4. '=' → logprob: -7.014374256134033
    5. 'max' → logprob: -7.139374256134033
    6. ',' → logprob: -7.264374256134033
    7. ').' → logprob: -7.764374256134033
    8. '.' → logprob: -8.514374732971191
    9. '1' → logprob: -8.639374732971191
    10. '   ' → logprob: -8.764374732971191

Token 1277: ' espac' (ID: 195747)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007328913547098637
    2. '[
' → logprob: -6.632328987121582
    3. '=' → logprob: -6.757328987121582
    4. ']' → logprob: -7.007328987121582
    5. '[i' → logprob: -7.007328987121582
    6. 's' → logprob: -7.507328987121582
    7. ')' → logprob: -7.882328987121582
    8. ' =' → logprob: -8.007328987121582
    9. '
' → logprob: -8.382328987121582
    10. '][' → logprob: -8.507328987121582

Token 1278: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.5666510462760925
    2. 'ed' → logprob: -2.1916511058807373
    3. 'é' → logprob: -2.5666511058807373
    4. 'e' → logprob: -2.6916511058807373
    5. 'es' → logprob: -2.9416511058807373
    6. 'ement' → logprob: -3.1916511058807373
    7. 'ées' → logprob: -3.6916511058807373
    8. '```' → logprob: -3.8166511058807373
    9. 'ément' → logprob: -4.066650867462158
    10. ')' → logprob: -5.441650867462158

Token 1279: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7471404671669006
    2. 'de' → logprob: -0.9971404671669006
    3. ' de' → logprob: -2.247140407562256
    4. ' =' → logprob: -4.372140407562256
    5. 'd' → logprob: -4.622140407562256
    6. '```' → logprob: -4.747140407562256
    7. ')' → logprob: -5.247140407562256
    8. '   ' → logprob: -5.747140407562256
    9. ',' → logprob: -5.997140407562256
    10. ' d' → logprob: -6.747140407562256

Token 1280: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00595072191208601
    2. ' ' → logprob: -5.130950927734375
    3. '0' → logprob: -11.255950927734375
    4. '```' → logprob: -13.005950927734375
    5. '100' → logprob: -13.130950927734375
    6. '
' → logprob: -14.130950927734375
    7. '-' → logprob: -14.318450927734375
    8. 'space' → logprob: -14.755950927734375
    9. ' ' → logprob: -14.943450927734375
    10. '  ' → logprob: -15.068450927734375

Token 1281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010607946896925569
    2. ' ' → logprob: -6.876060962677002
    3. '0' → logprob: -11.126060485839844
    4. '```' → logprob: -11.751060485839844
    5. '100' → logprob: -13.251060485839844
    6. 'space' → logprob: -13.251060485839844
    7. ''' → logprob: -15.126060485839844
    8. ' 
' → logprob: -15.251060485839844
    9. 'distance' → logprob: -15.376060485839844
    10. '`' → logprob: -15.751060485839844

Token 1282: ' km' (ID: 8571)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017553085461258888
    2. ' )' → logprob: -5.017552852630615
    3. '<|end|>' → logprob: -5.267552852630615
    4. ' ' → logprob: -6.017552852630615
    5. 'km' → logprob: -6.517552852630615
    6. '.' → logprob: -7.767552852630615
    7. '_' → logprob: -8.267553329467773
    8. '),' → logprob: -8.392553329467773
    9. ' ' → logprob: -8.767553329467773
    10. ' km' → logprob: -8.892553329467773

Token 1283: ' donc' (ID: 14206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1048002690076828
    2. ',' → logprob: -3.229800224304199
    3. ').' → logprob: -3.854800224304199
    4. '),' → logprob: -4.229800224304199
    5. ' )' → logprob: -4.979800224304199
    6. '<|end|>' → logprob: -4.979800224304199
    7. '.' → logprob: -5.104800224304199
    8. ' ,' → logprob: -6.854800224304199
    9. ' entre' → logprob: -7.604800224304199
    10. '```' → logprob: -7.729800224304199

Token 1284: ' vitesse' (ID: 71752)
  Prédit: ' ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ships' → logprob: -1.5073055028915405
    2. ' speed' → logprob: -1.8823055028915405
    3. ')' → logprob: -2.25730562210083
    4. '0' → logprob: -2.25730562210083
    5. ' vitesse' → logprob: -2.63230562210083
    6. ' initial' → logprob: -2.75730562210083
    7. ' ' → logprob: -2.88230562210083
    8. '```' → logprob: -2.88230562210083
    9. 'speed' → logprob: -3.13230562210083
    10. 'ships' → logprob: -3.63230562210083

Token 1285: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12164582312107086
    2. '_' → logprob: -2.746645927429199
    3. ' =' → logprob: -3.996645927429199
    4. '_max' → logprob: -4.621645927429199
    5. ')' → logprob: -4.746645927429199
    6. 'max' → logprob: -4.996645927429199
    7. '_=' → logprob: -6.746645927429199
    8. '=max' → logprob: -7.496645927429199
    9. '_limit' → logprob: -7.746645927429199
    10. '<' → logprob: -7.746645927429199

Token 1286: ' peut' (ID: 9216)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014670399948954582
    2. '<|end|>' → logprob: -5.389670372009277
    3. '),' → logprob: -5.639670372009277
    4. ',' → logprob: -6.264670372009277
    5. ').' → logprob: -7.264670372009277
    6. 'max' → logprob: -7.389670372009277
    7. '.' → logprob: -7.389670372009277
    8. ' )' → logprob: -7.389670372009277
    9. '')' → logprob: -8.639670372009277
    10. '_max' → logprob: -8.639670372009277

Token 1287: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.5890174508094788
    2. ' être' → logprob: -1.214017391204834
    3. ' rester' → logprob: -2.589017391204834
    4. '=' → logprob: -2.964017391204834
    5. '_' → logprob: -5.214017391204834
    6. ' etre' → logprob: -5.839017391204834
    7. ' =' → logprob: -5.964017391204834
    8. 'êtres' → logprob: -6.089017391204834
    9. ' continuer' → logprob: -6.589017391204834
    10. 'etre' → logprob: -6.839017391204834

Token 1288: ' initial' (ID: 4871)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maint' → logprob: -0.8256856203079224
    2. '0' → logprob: -1.3256856203079224
    3. 'ships' → logprob: -1.5756856203079224
    4. 'initial' → logprob: -3.325685501098633
    5. 'ship' → logprob: -4.200685501098633
    6. 'max' → logprob: -4.325685501098633
    7. 'v' → logprob: -5.325685501098633
    8. '1' → logprob: -5.950685501098633
    9. 'im' → logprob: -6.325685501098633
    10. 'ap' → logprob: -6.700685501098633

Token 1289: 'ement' (ID: 962)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5175058841705322
    2. 'e' → logprob: -1.6425058841705322
    3. '_' → logprob: -1.6425058841705322
    4. '0' → logprob: -6.267505645751953
    5. 'ité' → logprob: -6.392505645751953
    6. ''' → logprob: -6.517505645751953
    7. 'isé' → logprob: -6.767505645751953
    8. ' )' → logprob: -6.892505645751953
    9. '=' → logprob: -6.892505645751953
    10. 'isée' → logprob: -7.017505645751953

Token 1290: ' donnée' (ID: 130126)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48945263028144836
    2. 'maint' → logprob: -1.114452600479126
    3. ')' → logprob: -3.614452600479126
    4. '```' → logprob: -4.114452838897705
    5. '1' → logprob: -6.114452838897705
    6. 'assigned' → logprob: -6.239452838897705
    7. ']' → logprob: -6.739452838897705
    8. 'é' → logprob: -6.989452838897705
    9. 'accord' → logprob: -7.114452838897705
    10. 'assign' → logprob: -7.364452838897705

Token 1291: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03422347456216812
    2. ',' → logprob: -4.284223556518555
    3. '.' → logprob: -4.784223556518555
    4. ' )' → logprob: -5.909223556518555
    5. '),' → logprob: -6.284223556518555
    6. '<|end|>' → logprob: -6.409223556518555
    7. '```' → logprob: -6.659223556518555
    8. ').' → logprob: -7.409223556518555
    9. 'import' → logprob: -8.034223556518555
    10. ',
' → logprob: -8.284223556518555

Token 1292: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23803673684597015
    2. '#' → logprob: -2.863036632537842
    3. '<|end|>' → logprob: -3.238036632537842
    4. ' 
' → logprob: -3.488036632537842
    5. '   ' → logprob: -3.988036632537842
    6. 'def' → logprob: -4.113036632537842
    7. 'import' → logprob: -4.613036632537842
    8. '\' → logprob: -4.738036632537842
    9. ')' → logprob: -5.113036632537842
    10. '<|end|>' → logprob: -5.488036632537842

Token 1293: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04685961455106735
    2. '    
' → logprob: -4.6718597412109375
    3. 'events' → logprob: -4.6718597412109375
    4. ' 
' → logprob: -5.1718597412109375
    5. '
' → logprob: -5.4218597412109375
    6. '#' → logprob: -5.5468597412109375
    7. '```' → logprob: -5.9218597412109375
    8. ' ships' → logprob: -6.1718597412109375
    9. ' events' → logprob: -6.6718597412109375
    10. 'import' (adapté à ' import') → logprob: -6.7968597412109375

Token 1294: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -2.3557529857498594e-05
    2. ' heap' → logprob: -10.75002384185791
    3. 'bis' → logprob: -13.12502384185791
    4. 'math' → logprob: -18.250022888183594
    5. 'queue' → logprob: -18.875022888183594
    6. '_heap' → logprob: -18.875022888183594
    7. 'sys' → logprob: -19.375022888183594
    8. '   ' → logprob: -20.000022888183594
    9. 'he' → logprob: -20.250022888183594
    10. '
' → logprob: -20.250022888183594

Token 1295: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0206720617134124e-05
    2. 'queue' → logprob: -11.50001049041748
    3. '
' → logprob: -17.125009536743164
    4. '_queue' → logprob: -17.625009536743164
    5. ' queue' → logprob: -17.750009536743164
    6. 'que' → logprob: -18.000009536743164
    7. '```' → logprob: -18.375009536743164
    8. 'p' → logprob: -19.000009536743164
    9. 'dict' → logprob: -19.000009536743164
    10. '_' → logprob: -19.125009536743164

Token 1296: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016662368550896645
    2. '    
' → logprob: -5.01666259765625
    3. 'event' → logprob: -5.51666259765625
    4. 'class' → logprob: -6.14166259765625
    5. 'events' → logprob: -6.14166259765625
    6. '   ' → logprob: -7.39166259765625
    7. '

' → logprob: -7.51666259765625
    8. ' 
' → logprob: -9.76666259765625
    9. '	
' → logprob: -9.76666259765625
    10. '```' → logprob: -10.01666259765625

Token 1297: '   ' (ID: 271)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.8056075572967529
    2. '
' → logprob: -0.9306075572967529
    3. 'event' → logprob: -2.930607557296753
    4. '#' → logprob: -3.680607557296753
    5. 'class' → logprob: -3.930607557296753
    6. 'def' → logprob: -3.930607557296753
    7. '    
' → logprob: -4.305607795715332
    8. '   ' → logprob: -4.805607795715332
    9. 'heap' → logprob: -4.930607795715332
    10. '```' → logprob: -6.055607795715332

Token 1298: ' #' (ID: 1069)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.6071648001670837
    2. 'event' → logprob: -0.8571648001670837
    3. '#' (adapté à ' #') → logprob: -3.9821648597717285
    4. 'heap' → logprob: -4.7321648597717285
    5. 'class' → logprob: -6.8571648597717285
    6. 'time' → logprob: -7.1071648597717285
    7. 'queue' → logprob: -7.6071648597717285
    8. 'next' → logprob: -8.10716438293457
    9. '
' → logprob: -8.35716438293457
    10. '```' → logprob: -9.98216438293457

Token 1299: ' Position' (ID: 21829)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.1936982274055481
    2. 'event' → logprob: -1.8186981678009033
    3. '#' → logprob: -4.443698406219482
    4. 'time' → logprob: -6.568698406219482
    5. 'heap' → logprob: -8.568697929382324
    6. '   ' → logprob: -9.318697929382324
    7. 'queue' → logprob: -9.568697929382324
    8. 'times' → logprob: -9.818697929382324
    9. 'next' → logprob: -10.068697929382324
    10. 'ev' → logprob: -10.193697929382324

Token 1300: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1151748895645142
    2. '=' → logprob: -1.4901748895645142
    3. ' =' → logprob: -1.4901748895645142
    4. '_events' → logprob: -1.9901748895645142
    5. 'events' → logprob: -4.240174770355225
    6. '_to' → logprob: -4.240174770355225
    7. '_heap' → logprob: -4.615174770355225
    8. ',' → logprob: -4.990174770355225
    9. '_queue' → logprob: -5.115174770355225
    10. '_s' → logprob: -5.115174770355225

Token 1301: ' gates' (ID: 61915)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.6909686326980591
    2. 'g' → logprob: -1.565968632698059
    3. ' ships' → logprob: -1.815968632698059
    4. ' gates' → logprob: -3.0659685134887695
    5. 'events' → logprob: -3.5659685134887695
    6. 'boats' → logprob: -4.1909685134887695
    7. ' events' → logprob: -5.1909685134887695
    8. 's' → logprob: -5.5659685134887695
    9. 'first' → logprob: -5.5659685134887695
    10. ' g' → logprob: -5.6909685134887695

Token 1302: ' plus' (ID: 2932)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6219704151153564
    2. 'gate' → logprob: -0.9969704151153564
    3. 'g' → logprob: -2.4969704151153564
    4. '=' → logprob: -5.246970176696777
    5. 'pos' → logprob: -5.871970176696777
    6. ' =' → logprob: -6.496970176696777
    7. '_gate' → logprob: -7.371970176696777
    8. '_positions' → logprob: -7.496970176696777
    9. '   ' → logprob: -7.996970176696777
    10. '=
' → logprob: -9.246970176696777

Token 1303: ' une' (ID: 2463)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4244784414768219
    2. '_positions' → logprob: -1.6744784116744995
    3. '=' → logprob: -3.049478530883789
    4. 'positions' → logprob: -3.924478530883789
    5. '_' → logprob: -4.424478530883789
    6. ',' → logprob: -4.674478530883789
    7. '_pos' → logprob: -5.049478530883789
    8. '_keys' → logprob: -5.049478530883789
    9. '=[]' → logprob: -5.299478530883789
    10. ')' → logprob: -5.424478530883789

Token 1304: ' porte' (ID: 26433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33772385120391846
    2. '[-' → logprob: -2.837723731994629
    3. '=[' → logprob: -3.587723731994629
    4. 'g' → logprob: -3.587723731994629
    5. 'K' → logprob: -3.837723731994629
    6. 'position' → logprob: -3.962723731994629
    7. 's' → logprob: -3.962723731994629
    8. '0' → logprob: -4.337723731994629
    9. '[K' → logprob: -4.337723731994629
    10. '[]' → logprob: -4.462723731994629

Token 1305: ' virtuelle' (ID: 148533)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2808619737625122
    2. '_positions' → logprob: -1.6558619737625122
    3. '_position' → logprob: -4.155861854553223
    4. ' =' → logprob: -5.280861854553223
    5. ':' → logprob: -5.405861854553223
    6. '_pos' → logprob: -5.655861854553223
    7. '_' → logprob: -5.780861854553223
    8. '[' → logprob: -6.030861854553223
    9. 'position' → logprob: -6.030861854553223
    10. ',' → logprob: -6.030861854553223

Token 1306: ' finale' (ID: 37759)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.1655292510986328
    2. ' =' → logprob: -1.4155292510986328
    3. 's' → logprob: -1.6655292510986328
    4. '=' → logprob: -2.665529251098633
    5. 'positions' → logprob: -2.665529251098633
    6. ',' → logprob: -3.665529251098633
    7. 'g' → logprob: -3.915529251098633
    8. ':' → logprob: -4.665529251098633
    9. '_pos' → logprob: -4.665529251098633
    10. '_' → logprob: -4.915529251098633

Token 1307: ' après' (ID: 16460)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7029705047607422
    2. 'g' → logprob: -1.0779705047607422
    3. ' =' → logprob: -2.702970504760742
    4. '=' → logprob: -2.702970504760742
    5. 'gate' → logprob: -4.452970504760742
    6. ' gates' → logprob: -5.327970504760742
    7. ',' → logprob: -5.577970504760742
    8. '_positions' → logprob: -5.952970504760742
    9. ':' → logprob: -6.577970504760742
    10. 'pos' → logprob: -6.952970504760742

Token 1308: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.018461989238858223
    2. ' K' → logprob: -4.643462181091309
    3. '[' → logprob: -5.268462181091309
    4. '=' → logprob: -7.518462181091309
    5. 'g' → logprob: -7.518462181091309
    6. '0' → logprob: -7.518462181091309
    7. ' gates' → logprob: -7.643462181091309
    8. '[K' → logprob: -7.893462181091309
    9. '`' → logprob: -8.768462181091309
    10. ' =' → logprob: -8.893462181091309

Token 1309: ' (' (ID: 350)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5886385440826416
    2. 'g' → logprob: -1.8386385440826416
    3. 's' → logprob: -2.2136385440826416
    4. '_positions' → logprob: -2.5886385440826416
    5. '=' → logprob: -3.4636385440826416
    6. ' =' → logprob: -3.7136385440826416
    7. ',' → logprob: -3.8386385440826416
    8. ':' → logprob: -5.3386383056640625
    9. ',
' → logprob: -5.5886383056640625
    10. 'pos' → logprob: -6.3386383056640625

Token 1310: 'à' (ID: 708)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9050543308258057
    2. ',' → logprob: -1.6550543308258057
    3. '[' → logprob: -1.9050543308258057
    4. 'K' → logprob: -2.1550543308258057
    5. '0' → logprob: -3.0300543308258057
    6. 'g' → logprob: -3.1550543308258057
    7. ')
' → logprob: -3.7800543308258057
    8. '+' → logprob: -4.655054092407227
    9. ' )' → logprob: -6.280054092407227
    10. ',K' → logprob: -6.280054092407227

Token 1311: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8854777812957764
    2. 'g' → logprob: -0.8854777812957764
    3. 'la' → logprob: -2.8854777812957764
    4. 'aj' → logprob: -3.5104777812957764
    5. '+' → logprob: -3.7604777812957764
    6. 'distance' → logprob: -3.8854777812957764
    7. 'position' → logprob: -4.0104780197143555
    8. 'x' → logprob: -5.2604780197143555
    9. 'km' → logprob: -5.3854780197143555
    10. 'k' → logprob: -5.3854780197143555

Token 1312: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6125034093856812
    2. ')' → logprob: -0.8625034093856812
    3. '+)' → logprob: -4.112503528594971
    4. ' +' → logprob: -4.487503528594971
    5. ')
' → logprob: -5.862503528594971
    6. ' )' → logprob: -5.987503528594971
    7. ',' → logprob: -7.237503528594971
    8. '):' → logprob: -7.612503528594971
    9. '.' → logprob: -7.862503528594971
    10. '0' → logprob: -8.237503051757812

Token 1313: '   ' (ID: 271)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.15937890112400055
    2. ' gates' → logprob: -2.534379005432129
    3. 'positions' → logprob: -3.534379005432129
    4. 'for' → logprob: -4.284379005432129
    5. '   ' → logprob: -4.534379005432129
    6. 'gate' → logprob: -4.909379005432129
    7. ' for' → logprob: -6.534379005432129
    8. 'virtual' → logprob: -6.534379005432129
    9. ' positions' → logprob: -7.409379005432129
    10. '
' → logprob: -7.534379005432129

Token 1314: ' gate' (ID: 27172)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3696752190589905
    2. 'gate' (adapté à ' gate') → logprob: -1.6196751594543457
    3. 'positions' → logprob: -2.6196751594543457
    4. ' gates' → logprob: -3.7446751594543457
    5. ' gate' → logprob: -5.244675159454346
    6. 'for' → logprob: -5.369675159454346
    7. '   ' → logprob: -6.244675159454346
    8. 'pos' → logprob: -7.119675159454346
    9. ' positions' → logprob: -7.119675159454346
    10. 'position' → logprob: -8.619675636291504

Token 1315: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.31331852078437805
    2. 's' → logprob: -1.3133184909820557
    3. '_pos' → logprob: -10.063318252563477
    4. 'positions' → logprob: -11.438318252563477
    5. 'es' → logprob: -13.313318252563477
    6. 'Positions' → logprob: -14.188318252563477
    7. '_' → logprob: -14.938318252563477
    8. '
' → logprob: -15.813318252563477
    9. '_x' → logprob: -16.188318252563477
    10. '=' → logprob: -16.438318252563477

Token 1316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134336471557617
    2. '=' → logprob: -1.3134336471557617
    3. '.append' → logprob: -8.938433647155762
    4. ',' → logprob: -11.063433647155762
    5. '=[' → logprob: -12.313433647155762
    6. '.' → logprob: -12.438433647155762
    7. '[' → logprob: -12.563433647155762
    8. '=[]' → logprob: -12.938433647155762
    9. ' =[' → logprob: -13.313433647155762
    10. ')' → logprob: -13.563433647155762

Token 1317: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17925778031349182
    2. '[g' → logprob: -1.9292577505111694
    3. '[X' → logprob: -5.054257869720459
    4. '[x' → logprob: -5.054257869720459
    5. '[s' → logprob: -6.429257869720459
    6. 'sorted' → logprob: -6.679257869720459
    7. '[i' → logprob: -6.679257869720459
    8. '[t' → logprob: -7.429257869720459
    9. '[-' → logprob: -7.804257869720459
    10. ' [' → logprob: -8.0542573928833

Token 1318: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.02055228315293789
    2. 'gate' → logprob: -4.145552158355713
    3. 'data' → logprob: -6.145552158355713
    4. '0' → logprob: -6.270552158355713
    5. 'gd' → logprob: -8.520552635192871
    6. 'x' → logprob: -9.145552635192871
    7. ' g' → logprob: -9.395552635192871
    8. '(g' → logprob: -11.145552635192871
    9. ' gate' → logprob: -11.270552635192871
    10. 'float' → logprob: -11.520552635192871

Token 1319: '.X' (ID: 8869)
  Prédit: '.X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.X' → logprob: -1.771655115589965e-05
    2. ' .' → logprob: -12.500018119812012
    3. 'X' → logprob: -13.125018119812012
    4. '[' → logprob: -13.500018119812012
    5. '.' → logprob: -13.625018119812012
    6. 'pos' → logprob: -14.000018119812012
    7. 'osition' → logprob: -14.125018119812012
    8. '.x' → logprob: -14.125018119812012
    9. '.Pos' → logprob: -14.125018119812012
    10. '.K' → logprob: -14.250018119812012

Token 1320: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5923718214035034
    2. ']' → logprob: -1.2173718214035034
    3. ' for' → logprob: -2.467371940612793
    4. 'for' → logprob: -3.092371940612793
    5. ']+' → logprob: -4.842371940612793
    6. ',
' → logprob: -4.967371940612793
    7. '+' → logprob: -6.092371940612793
    8. ')' → logprob: -6.342371940612793
    9. ' ]' → logprob: -7.842371940612793
    10. ' +' → logprob: -8.092371940612793

Token 1321: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -9.17420256882906e-05
    2. 'gate' → logprob: -9.375091552734375
    3. ' g' → logprob: -12.125091552734375
    4. '	g' → logprob: -14.875091552734375
    5. '_g' → logprob: -15.375091552734375
    6. '_gate' → logprob: -16.437591552734375
    7. 'p' → logprob: -16.562591552734375
    8. '_' → logprob: -16.750091552734375
    9. 'gat' → logprob: -16.750091552734375
    10. '
' → logprob: -16.812591552734375

Token 1322: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.37370675802230835
    2. ' in' → logprob: -1.3737068176269531
    3. 'g' → logprob: -2.873706817626953
    4. ' gates' → logprob: -6.373706817626953
    5. ' g' → logprob: -7.873706817626953
    6. 'ates' → logprob: -10.373706817626953
    7. 'gate' → logprob: -11.123706817626953
    8. 'ate' → logprob: -11.748706817626953
    9. '_gate' → logprob: -12.498706817626953
    10. '.g' → logprob: -12.748706817626953

Token 1323: ' gates' (ID: 61915)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.0948158382670954e-05
    2. ' gates' → logprob: -10.500030517578125
    3. 'gate' → logprob: -12.750030517578125
    4. '   ' → logprob: -15.250030517578125
    5. 'gages' → logprob: -15.875030517578125
    6. '
' → logprob: -17.000030517578125
    7. ' g' → logprob: -17.250030517578125
    8. ']' → logprob: -17.625030517578125
    9. '	g' → logprob: -17.750030517578125
    10. ')' → logprob: -18.125030517578125

Token 1324: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00357702630572021
    2. ']+' → logprob: -6.00357723236084
    3. ']
' → logprob: -6.87857723236084
    4. ' ]' → logprob: -9.62857723236084
    5. '   ' → logprob: -13.37857723236084
    6. ',' → logprob: -14.00357723236084
    7. ')' → logprob: -14.62857723236084
    8. '+' → logprob: -14.87857723236084
    9. '
' → logprob: -15.00357723236084
    10. ' ]
' → logprob: -15.37857723236084

Token 1325: '   ' (ID: 271)
  Prédit: ' gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gate' → logprob: -1.0089292526245117
    2. 'gate' → logprob: -1.0089292526245117
    3. '   ' → logprob: -2.1339292526245117
    4. ' +' → logprob: -2.3839292526245117
    5. ',' → logprob: -3.6339292526245117
    6. '
' → logprob: -4.883929252624512
    7. '+' → logprob: -5.008929252624512
    8. '_gate' → logprob: -6.258929252624512
    9. 'g' → logprob: -6.383929252624512
    10. ' ,' → logprob: -6.508929252624512

Token 1326: ' gate' (ID: 27172)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' (adapté à ' gate') → logprob: -0.04760338366031647
    2. ' gate' → logprob: -3.1726033687591553
    3. '   ' → logprob: -7.047603607177734
    4. '
' → logprob: -7.172603607177734
    5. 'g' → logprob: -7.297603607177734
    6. '#' → logprob: -7.797603607177734
    7. ',' → logprob: -7.797603607177734
    8. ' gates' → logprob: -8.672603607177734
    9. 'for' → logprob: -8.922603607177734
    10. '```' → logprob: -9.172603607177734

Token 1327: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0015256908955052495
    2. 'positions' → logprob: -6.50152587890625
    3. '_times' → logprob: -12.37652587890625
    4. '_indices' → logprob: -13.00152587890625
    5. 'Positions' → logprob: -13.25152587890625
    6. '.append' → logprob: -13.25152587890625
    7. '
' → logprob: -13.25152587890625
    8. '+' → logprob: -13.50152587890625
    9. '_events' → logprob: -13.75152587890625
    10. '_pos' → logprob: -13.75152587890625

Token 1328: '_set' (ID: 5451)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.847109812544659e-05
    2. '.' → logprob: -10.125048637390137
    3. '.sort' → logprob: -12.125048637390137
    4. '.app' → logprob: -13.500048637390137
    5. '+' → logprob: -14.625048637390137
    6. '+=' → logprob: -15.125048637390137
    7. '.ap' → logprob: -15.375048637390137
    8. '.extend' → logprob: -15.750048637390137
    9. ' +=' → logprob: -16.12504768371582
    10. '+.' → logprob: -16.50004768371582

Token 1329: ' =' (ID: 314)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.4004029929637909
    2. '.' → logprob: -2.0254030227661133
    3. ' =' → logprob: -2.1504030227661133
    4. '=' → logprob: -2.5254030227661133
    5. '.append' → logprob: -6.775403022766113
    6. ' .' → logprob: -8.775403022766113
    7. 'add' → logprob: -9.525403022766113
    8. '=set' → logprob: -9.775403022766113
    9. '.update' → logprob: -10.275403022766113
    10. '.=' → logprob: -10.650403022766113

Token 1330: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0007376811117865145
    2. '{' → logprob: -7.25073766708374
    3. ' set' → logprob: -10.500738143920898
    4. ' {' → logprob: -16.2507381439209
    5. '=set' → logprob: -16.5007381439209
    6. '{s' → logprob: -16.8757381439209
    7. '	set' → logprob: -17.0007381439209
    8. '(set' → logprob: -17.3757381439209
    9. '{-' → logprob: -18.2507381439209
    10. '{
' → logprob: -19.1257381439209

Token 1331: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -7.100059156073257e-05
    2. '([' → logprob: -9.875070571899414
    3. '()
' → logprob: -11.875070571899414
    4. '(' → logprob: -12.000070571899414
    5. '()' → logprob: -12.750070571899414
    6. '(
' → logprob: -13.625070571899414
    7. 'gate' → logprob: -14.375070571899414
    8. '(range' → logprob: -14.875070571899414
    9. 'g' → logprob: -15.250070571899414
    10. '(pos' → logprob: -15.375070571899414

Token 1332: 'ate' (ID: 379)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.00649983948096633
    2. '(' → logprob: -6.381499767303467
    3. 'gate' → logprob: -6.381499767303467
    4. ')' → logprob: -6.381499767303467
    5. '(
' → logprob: -8.256500244140625
    6. '_positions' → logprob: -8.381500244140625
    7. ')
' → logprob: -8.631500244140625
    8. 'positions' → logprob: -8.756500244140625
    9. ' gate' → logprob: -8.881500244140625
    10. '([' → logprob: -9.631500244140625

Token 1333: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.024501195177435875
    2. 's' → logprob: -4.149501323699951
    3. '(g' → logprob: -5.149501323699951
    4. '(' → logprob: -7.024501323699951
    5. '(_' → logprob: -7.274501323699951
    6. ')' → logprob: -8.274500846862793
    7. 'positions' → logprob: -8.899500846862793
    8. '(s' → logprob: -9.024500846862793
    9. '_' → logprob: -9.774500846862793
    10. '(
' → logprob: -9.899500846862793

Token 1334: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02576962299644947
    2. ')
' → logprob: -3.7757697105407715
    3. ' )' → logprob: -7.6507697105407715
    4. ',' → logprob: -7.6507697105407715
    5. '   ' → logprob: -8.025769233703613
    6. '.union' → logprob: -8.150769233703613
    7. ' |' → logprob: -8.650769233703613
    8. '|' → logprob: -8.775769233703613
    9. ',
' → logprob: -9.400769233703613
    10. '.' → logprob: -9.400769233703613

Token 1335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7374095916748047
    2. '
' → logprob: -1.3624095916748047
    3. '#' → logprob: -2.8624095916748047
    4. '```' → logprob: -3.1124095916748047
    5. '    
' → logprob: -3.3624095916748047
    6. ')' → logprob: -3.4874095916748047
    7. 'heap' → logprob: -3.9874095916748047
    8. ')
' → logprob: -4.612409591674805
    9. ' 
' → logprob: -4.612409591674805
    10. 'events' → logprob: -4.737409591674805

Token 1336: ' #' (ID: 1069)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.3783007562160492
    2. 'event' → logprob: -1.5033007860183716
    3. '#' (adapté à ' #') → logprob: -3.378300666809082
    4. '   ' → logprob: -3.878300666809082
    5. 'time' → logprob: -4.503300666809082
    6. 'heap' → logprob: -5.003300666809082
    7. 'times' → logprob: -5.128300666809082
    8. 'next' → logprob: -5.628300666809082
    9. '
' → logprob: -6.003300666809082
    10. 'current' → logprob: -6.128300666809082

Token 1337: ' Ev' (ID: 16426)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.2704710364341736
    2. 'event' → logprob: -1.5204710960388184
    3. '#' → logprob: -4.645471096038818
    4. 'time' → logprob: -5.145471096038818
    5. 'next' → logprob: -7.020471096038818
    6. 'times' → logprob: -7.520471096038818
    7. 'current' → logprob: -7.770471096038818
    8. 'heap' → logprob: -8.02047061920166
    9. 'queue' → logprob: -9.02047061920166
    10. 'for' → logprob: -9.39547061920166

Token 1338: 'ènement' (ID: 132303)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.00761951832100749
    2. 'ent' → logprob: -4.882619380950928
    3. 'nts' → logprob: -11.882619857788086
    4. 'queue' → logprob: -13.132619857788086
    5. 'ts' → logprob: -14.257619857788086
    6. 't' → logprob: -14.382619857788086
    7. 'ENTS' → logprob: -14.507619857788086
    8. 'vents' → logprob: -14.632619857788086
    9. 'events' → logprob: -14.757619857788086
    10. 'e' → logprob: -15.007619857788086

Token 1339: ' contient' (ID: 89067)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.055975478142499924
    2. '_queue' → logprob: -3.0559754371643066
    3. '_heap' → logprob: -5.055975437164307
    4. '_p' → logprob: -8.055975914001465
    5. ' =' → logprob: -8.930975914001465
    6. '_' → logprob: -8.930975914001465
    7. '_events' → logprob: -9.055975914001465
    8. '_s' → logprob: -9.555975914001465
    9. 'heap' → logprob: -9.680975914001465
    10. '=' → logprob: -9.805975914001465

Token 1340: '
' (ID: 198)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6012532711029053
    2. '(time' → logprob: -1.3512532711029053
    3. '(' → logprob: -1.8512532711029053
    4. 'time' → logprob: -4.226253509521484
    5. '(t' → logprob: -4.601253509521484
    6. ' time' → logprob: -5.726253509521484
    7. '(
' → logprob: -6.226253509521484
    8. '('' → logprob: -6.351253509521484
    9. '_time' → logprob: -6.976253509521484
    10. ' (
' → logprob: -7.976253509521484

Token 1341: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0982736349105835
    2. ' =' → logprob: -1.2232736349105835
    3. '('' → logprob: -1.7232736349105835
    4. '(' → logprob: -2.848273754119873
    5. ' ('' → logprob: -3.598273754119873
    6. '[' → logprob: -4.098273754119873
    7. '('_' → logprob: -4.223273754119873
    8. 's' → logprob: -4.348273754119873
    9. ' '' → logprob: -4.598273754119873
    10. ',' → logprob: -4.848273754119873

Token 1342: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.699529767036438
    2. '('' → logprob: -0.949529767036438
    3. ' (' → logprob: -2.8245296478271484
    4. '[' → logprob: -3.9495296478271484
    5. '(
' → logprob: -5.074529647827148
    6. '[]' → logprob: -5.199529647827148
    7. '(None' → logprob: -5.199529647827148
    8. '(time' → logprob: -5.324529647827148
    9. ' ('' → logprob: -5.324529647827148
    10. '[
' → logprob: -5.949529647827148

Token 1343: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3342318534851074
    2. '('' → logprob: -1.3342318534851074
    3. 'time' → logprob: -1.3342318534851074
    4. '(time' → logprob: -1.9592318534851074
    5. ' (' → logprob: -3.9592318534851074
    6. '[' → logprob: -3.9592318534851074
    7. '[
' → logprob: -4.834231853485107
    8. '(
' → logprob: -4.959231853485107
    9. ' time' → logprob: -5.459231853485107
    10. 'heap' → logprob: -6.084231853485107

Token 1344: 'temps' (ID: 42511)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.018712051212787628
    2. 'temps' → logprob: -4.268712043762207
    3. '0' → logprob: -6.018712043762207
    4. ' time' → logprob: -6.768712043762207
    5. 'event' → logprob: -8.018712043762207
    6. 't' → logprob: -8.143712043762207
    7. ' temps' → logprob: -9.018712043762207
    8. 'temp' → logprob: -9.893712043762207
    9. 'next' → logprob: -10.018712043762207
    10. 'tempo' → logprob: -10.518712043762207

Token 1345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016420685278717428
    2. ' ,' → logprob: -9.375164031982422
    3. ')' → logprob: -10.125164031982422
    4. ',
' → logprob: -11.500164031982422
    5. '<|end|>' → logprob: -11.875164031982422
    6. '_,' → logprob: -12.750164031982422
    7. ',event' → logprob: -12.875164031982422
    8. 'import' → logprob: -13.500164031982422
    9. '```' → logprob: -13.500164031982422
    10. '   ' → logprob: -13.625164031982422

Token 1346: ' ev' (ID: 5332)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.451417088508606
    2. ''type' → logprob: -1.951417088508606
    3. 'event' → logprob: -2.2014169692993164
    4. 'type' → logprob: -2.2014169692993164
    5. ''év' → logprob: -2.3264169692993164
    6. ''s' → logprob: -2.4514169692993164
    7. ''action' → logprob: -2.4514169692993164
    8. ' '' → logprob: -2.8264169692993164
    9. ''t' → logprob: -4.326416969299316
    10. '"type' → logprob: -4.576416969299316

Token 1347: '_type' (ID: 3804)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.005916469730436802
    2. ',' → logprob: -6.505916595458984
    3. 'type' → logprob: -7.005916595458984
    4. 't' → logprob: -7.380916595458984
    5. '_type' → logprob: -7.505916595458984
    6. ')' → logprob: -7.505916595458984
    7. '_ent' → logprob: -8.130916595458984
    8. 'énement' → logprob: -8.130916595458984
    9. 'ènement' → logprob: -8.255916595458984
    10. 'ents' → logprob: -8.755916595458984

Token 1348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002581485779955983
    2. ')' → logprob: -6.002581596374512
    3. ',
' → logprob: -10.627581596374512
    4. '_,' → logprob: -10.877581596374512
    5. ' ,' → logprob: -11.127581596374512
    6. '<|end|>' → logprob: -11.252581596374512
    7. '   ' → logprob: -12.127581596374512
    8. '_' → logprob: -12.377581596374512
    9. '',' → logprob: -12.752581596374512
    10. '<|end|>' → logprob: -13.252581596374512

Token 1349: ' param' (ID: 3802)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.87822026014328
    2. 'entity' → logprob: -1.5032203197479248
    3. 'ship' → logprob: -2.253220319747925
    4. 'event' → logprob: -2.628220319747925
    5. 'ev' → logprob: -3.378220319747925
    6. 'idx' → logprob: -4.003220081329346
    7. 'index' → logprob: -4.003220081329346
    8. ' ship' → logprob: -4.753220081329346
    9. ' id' → logprob: -4.878220081329346
    10. ' entity' → logprob: -5.003220081329346

Token 1350: ')
' (ID: 446)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08342750370502472
    2. ')' → logprob: -2.7084274291992188
    3. ',' → logprob: -4.708427429199219
    4. '1' → logprob: -6.083427429199219
    5. ')s' → logprob: -7.208427429199219
    6. '0' → logprob: -7.333427429199219
    7. '[' → logprob: -8.833427429199219
    8. '),' → logprob: -8.958427429199219
    9. '_' → logprob: -9.833427429199219
    10. ' s' → logprob: -9.833427429199219

Token 1351: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15434594452381134
    2. ',
' → logprob: -3.154345989227295
    3. '(
' → logprob: -3.279345989227295
    4. ')' → logprob: -3.529345989227295
    5. '(' → logprob: -4.279345989227295
    6. '   ' → logprob: -5.154345989227295
    7. '('' → logprob: -5.654345989227295
    8. ' (' → logprob: -5.654345989227295
    9. '=' → logprob: -6.029345989227295
    10. ' =' → logprob: -6.654345989227295

Token 1352: ' #' (ID: 1069)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.5850538015365601
    2. 'event' → logprob: -1.08505380153656
    3. 'heap' → logprob: -3.3350539207458496
    4. '   ' → logprob: -3.3350539207458496
    5. ',' → logprob: -4.71005392074585
    6. ' events' → logprob: -5.46005392074585
    7. 'queue' → logprob: -5.46005392074585
    8. '(' → logprob: -5.46005392074585
    9. 'ev' → logprob: -6.08505392074585
    10. ' event' → logprob: -6.46005392074585

Token 1353: ' ev' (ID: 5332)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.7148799300193787
    2. 'event' → logprob: -1.0898799896240234
    3. 'heap' → logprob: -2.2148799896240234
    4. '(' → logprob: -3.7148799896240234
    5. 'queue' → logprob: -4.464879989624023
    6. 'ev' → logprob: -4.589879989624023
    7. '(
' → logprob: -5.339879989624023
    8. 'evt' → logprob: -6.089879989624023
    9. '   ' → logprob: -6.339879989624023
    10. 'time' → logprob: -6.714879989624023

Token 1354: '_type' (ID: 3804)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6299560070037842
    2. '_queue' → logprob: -1.7549560070037842
    3. 'ents' → logprob: -1.7549560070037842
    4. 'ent' → logprob: -1.8799560070037842
    5. 'q' → logprob: -2.129956007003784
    6. ')' → logprob: -2.504956007003784
    7. 't' → logprob: -4.254956245422363
    8. '_events' → logprob: -4.254956245422363
    9. ',' → logprob: -4.379956245422363
    10. ' =' → logprob: -5.129956245422363

Token 1355: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007490565534681082
    2. ',' → logprob: -5.257490634918213
    3. ' =' → logprob: -6.507490634918213
    4. '='' → logprob: -7.882490634918213
    5. ')' → logprob: -8.882490158081055
    6. '<|end|>' → logprob: -8.882490158081055
    7. '=
' → logprob: -10.132490158081055
    8. '=',' → logprob: -11.632490158081055
    9. '<|end|>' → logprob: -12.507490158081055
    10. 'import' → logprob: -12.632490158081055

Token 1356: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25896155834198
    2. ' '' → logprob: -1.50896155834198
    3. '"' → logprob: -6.5089616775512695
    4. ''s' → logprob: -6.6339616775512695
    5. '(' → logprob: -7.1339616775512695
    6. ' (' → logprob: -7.6339616775512695
    7. '('' → logprob: -7.7589616775512695
    8. '0' → logprob: -7.7589616775512695
    9. ')' → logprob: -7.8839616775512695
    10. ' ' → logprob: -8.00896167755127

Token 1357: ' #' (ID: 1069)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10566414892673492
    2. ' '' → logprob: -2.3556642532348633
    3. ''s' → logprob: -5.480664253234863
    4. ''int' → logprob: -7.480664253234863
    5. ''m' → logprob: -8.855664253234863
    6. '('' → logprob: -9.105664253234863
    7. ''import' → logprob: -9.730664253234863
    8. '0' → logprob: -9.980664253234863
    9. '"' → logprob: -10.230664253234863
    10. ''in' → logprob: -10.355664253234863

Token 1358: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08881349861621857
    2. ''s' → logprob: -3.213813543319702
    3. ' '' → logprob: -3.838813543319702
    4. ''m' → logprob: -4.838813304901123
    5. '0' → logprob: -5.963813304901123
    6. ''t' → logprob: -6.338813304901123
    7. '('' → logprob: -6.338813304901123
    8. ''action' → logprob: -6.838813304901123
    9. ''int' → logprob: -7.088813304901123
    10. '"' → logprob: -7.213813304901123

Token 1359: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6456794738769531
    2. ''m' → logprob: -1.3956794738769531
    3. ''t' → logprob: -2.395679473876953
    4. ''s' → logprob: -2.645679473876953
    5. '0' → logprob: -3.395679473876953
    6. ' '' → logprob: -4.520679473876953
    7. '"time' → logprob: -4.520679473876953
    8. '"' → logprob: -5.645679473876953
    9. ''int' → logprob: -6.895679473876953
    10. 'time' → logprob: -6.895679473876953

Token 1360: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03655571863055229
    2. ')' → logprob: -4.536555767059326
    3. '=' → logprob: -4.911555767059326
    4. ' ,' → logprob: -5.036555767059326
    5. '_' → logprob: -6.036555767059326
    6. ' =' → logprob: -6.286555767059326
    7. ',
' → logprob: -6.786555767059326
    8. '_ship' → logprob: -6.786555767059326
    9. ',_' → logprob: -7.536555767059326
    10. '_time' → logprob: -8.286555290222168

Token 1361: ' bateau' (ID: 123794)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.6628561019897461
    2. ''' → logprob: -1.037856101989746
    3. ''b' → logprob: -2.662856101989746
    4. 'ship' → logprob: -3.537856101989746
    5. ''S' → logprob: -4.412856101989746
    6. 'SHIP' → logprob: -4.912856101989746
    7. '"' → logprob: -6.037856101989746
    8. 'boat' → logprob: -6.412856101989746
    9. 'move' → logprob: -6.662856101989746
    10. ''arr' → logprob: -6.662856101989746

Token 1362: ' atteint' (ID: 104876)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.42949676513671875
    2. '_id' → logprob: -1.8044967651367188
    3. '_' → logprob: -1.9294967651367188
    4. ',' → logprob: -4.554496765136719
    5. '_position' → logprob: -4.554496765136719
    6. 'arr' → logprob: -5.929496765136719
    7. '_time' → logprob: -6.054496765136719
    8. '_index' → logprob: -6.554496765136719
    9. '_re' → logprob: -6.804496765136719
    10. '_idx' → logprob: -6.929496765136719

Token 1363: ' position' (ID: 4010)
  Prédit: ' gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gate' → logprob: -0.23247577250003815
    2. '_gate' → logprob: -2.232475757598877
    3. 'gate' → logprob: -3.482475757598877
    4. ''' → logprob: -3.982475757598877
    5. 'position' → logprob: -4.357475757598877
    6. ' '' → logprob: -4.357475757598877
    7. ' position' → logprob: -4.982475757598877
    8. 'pos' → logprob: -5.607475757598877
    9. ' g' → logprob: -5.732475757598877
    10. 'g' → logprob: -5.732475757598877

Token 1364: ' cible' (ID: 136857)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24877643585205078
    2. '_' → logprob: -2.373776435852051
    3. '<|end|>' → logprob: -3.373776435852051
    4. ')' → logprob: -3.748776435852051
    5. '_gate' → logprob: -3.873776435852051
    6. ' ,' → logprob: -4.248776435852051
    7. '_ship' → logprob: -5.123776435852051
    8. ',
' → logprob: -5.248776435852051
    9. '_g' → logprob: -5.373776435852051
    10. '_,' → logprob: -5.498776435852051

Token 1365: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05505368113517761
    2. ',
' → logprob: -3.5550537109375
    3. ')' → logprob: -3.9300537109375
    4. '(' → logprob: -5.8050537109375
    5. ' (' → logprob: -7.0550537109375
    6. '   ' → logprob: -7.9300537109375
    7. ' ,' → logprob: -8.8050537109375
    8. '1' → logprob: -9.0550537109375
    9. ',(' → logprob: -9.1800537109375
    10. '_' → logprob: -9.3050537109375

Token 1366: 'param' (ID: 1355)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6299824714660645
    2. ')' → logprob: -2.0049824714660645
    3. ''s' → logprob: -2.1299824714660645
    4. ''' → logprob: -2.2549824714660645
    5. '1' → logprob: -3.1299824714660645
    6. '0' → logprob: -4.2549824714660645
    7. ' '' → logprob: -4.3799824714660645
    8. ' ,' → logprob: -5.1299824714660645
    9. 'ship' → logprob: -5.3799824714660645
    10. ' )' → logprob: -5.7549824714660645

Token 1367: '=(' (ID: 9893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4411408305168152
    2. '=' → logprob: -1.19114089012146
    3. '[' → logprob: -3.19114089012146
    4. ')' → logprob: -5.066140651702881
    5. '=
' → logprob: -7.191140651702881
    6. '_ship' → logprob: -7.191140651702881
    7. 'ship' → logprob: -7.316140651702881
    8. '   ' → logprob: -8.191141128540039
    9. ' =' → logprob: -8.191141128540039
    10. ' ,' → logprob: -8.441141128540039

Token 1368: 'ship' (ID: 8238)
  Prédit: 'ship'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.012824994511902332
    2. 'time' → logprob: -5.012825012207031
    3. ''s' → logprob: -5.887825012207031
    4. '0' → logprob: -7.387825012207031
    5. ''' → logprob: -7.512825012207031
    6. '(ship' → logprob: -7.637825012207031
    7. 'boat' → logprob: -7.762825012207031
    8. 'idx' → logprob: -8.262825012207031
    9. 'param' → logprob: -8.512825012207031
    10. 'index' → logprob: -8.887825012207031

Token 1369: '_index' (ID: 7748)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.06638910621404648
    2. ',' → logprob: -3.0663890838623047
    3. '_idx' → logprob: -4.566389083862305
    4. '_index' → logprob: -5.191389083862305
    5. 'id' → logprob: -6.941389083862305
    6. '_i' → logprob: -8.441389083862305
    7. '[' → logprob: -8.691389083862305
    8. 'index' → logprob: -9.566389083862305
    9. 's' → logprob: -9.691389083862305
    10. 'idx' → logprob: -9.816389083862305

Token 1370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010759611177491024
    2. ' ,' → logprob: -10.375107765197754
    3. '<|end|>' → logprob: -10.375107765197754
    4. ',
' → logprob: -11.500107765197754
    5. ')' → logprob: -11.500107765197754
    6. '[' → logprob: -11.625107765197754
    7. ',)' → logprob: -12.625107765197754
    8. '),' → logprob: -12.750107765197754
    9. '‌,' → logprob: -13.000107765197754
    10. ',param' → logprob: -14.250107765197754

Token 1371: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.827098548412323
    2. 'target' → logprob: -0.827098548412323
    3. 'position' → logprob: -2.4520986080169678
    4. 'gate' → logprob: -3.4520986080169678
    5. ''' → logprob: -6.202098369598389
    6. ' pos' → logprob: -6.827098369598389
    7. ' target' → logprob: -6.952098369598389
    8. ' position' → logprob: -7.452098369598389
    9. 'dest' → logprob: -7.577098369598389
    10. ' gate' → logprob: -7.827098369598389

Token 1372: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4337347149848938
    2. ')' → logprob: -1.058734655380249
    3. ')))' → logprob: -5.808734893798828
    4. ',' → logprob: -6.933734893798828
    5. '))
' → logprob: -7.058734893798828
    6. ')),' → logprob: -9.808734893798828
    7. '),' → logprob: -10.558734893798828
    8. ')
' → logprob: -10.933734893798828
    9. '   ' → logprob: -11.058734893798828
    10. ')))
' → logprob: -11.933734893798828

Token 1373: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3578298091888428
    2. '   ' → logprob: -1.6078298091888428
    3. ',
' → logprob: -2.6078298091888428
    4. ')' → logprob: -3.8578298091888428
    5. '#' → logprob: -6.482830047607422
    6. '',' → logprob: -7.107830047607422
    7. ')
' → logprob: -7.482830047607422
    8. '),' → logprob: -8.107830047607422
    9. '    
' → logprob: -8.232830047607422
    10. ' ,' → logprob: -8.482830047607422

Token 1374: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1956898421049118
    2. ',
' → logprob: -1.8206897974014282
    3. ')' → logprob: -4.195689678192139
    4. '#' (adapté à ' #') → logprob: -8.695690155029297
    5. '',' → logprob: -9.320690155029297
    6. ',
' → logprob: -9.570690155029297
    7. '(' → logprob: -9.945690155029297
    8. ')
' → logprob: -10.195690155029297
    9. '1' → logprob: -10.320690155029297
    10. ',

' → logprob: -10.320690155029297

Token 1375: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02822897396981716
    2. '#' → logprob: -4.528228759765625
    3. ',' → logprob: -4.528228759765625
    4. '0' → logprob: -5.903228759765625
    5. '   ' → logprob: -6.778228759765625
    6. '1' → logprob: -7.278228759765625
    7. ' ' → logprob: -7.403228759765625
    8. ',
' → logprob: -8.153228759765625
    9. '(' → logprob: -8.278228759765625
    10. ' #' → logprob: -8.778228759765625

Token 1376: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01824219338595867
    2. '#' → logprob: -4.018242359161377
    3. '
' → logprob: -10.018241882324219
    4. '   ' → logprob: -11.643241882324219
    5. '0' → logprob: -11.768241882324219
    6. 'ev' → logprob: -12.393241882324219
    7. ' ' → logprob: -12.518241882324219
    8. '3' → logprob: -12.643241882324219
    9. '1' → logprob: -12.643241882324219
    10. 'ship' → logprob: -12.768241882324219

Token 1377: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04894500970840454
    2. ',' → logprob: -3.0489449501037598
    3. ' :' → logprob: -8.673945426940918
    4. ' ,' → logprob: -9.548945426940918
    5. '=' → logprob: -10.423945426940918
    6. ' =' → logprob: -10.548945426940918
    7. '   ' → logprob: -11.673945426940918
    8. '<|end|>' → logprob: -11.798945426940918
    9. ')' → logprob: -11.923945426940918
    10. ' ' → logprob: -12.048945426940918

Token 1378: ' gate' (ID: 27172)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.3209887444972992
    2. 'sas' → logprob: -2.195988655090332
    3. '1' → logprob: -3.320988655090332
    4. '2' → logprob: -3.695988655090332
    5. '0' → logprob: -3.945988655090332
    6. '3' → logprob: -4.070988655090332
    7. '"s' → logprob: -4.070988655090332
    8. 'level' → logprob: -4.195988655090332
    9. '"' → logprob: -4.445988655090332
    10. ''' → logprob: -5.070988655090332

Token 1379: ' sas' (ID: 51515)
  Prédit: '_change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.1058453842997551
    2. '_time' → logprob: -2.7308454513549805
    3. '_switch' → logprob: -4.3558454513549805
    4. 'change' → logprob: -5.2308454513549805
    5. '_ch' → logprob: -5.6058454513549805
    6. ',' → logprob: -5.6058454513549805
    7. '_level' → logprob: -6.3558454513549805
    8. '_' → logprob: -6.6058454513549805
    9. '_event' → logprob: -6.6058454513549805
    10. '_type' → logprob: -7.2308454513549805

Token 1380: ' niveau' (ID: 21708)
  Prédit: '_change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.06199143826961517
    2. '_level' → logprob: -3.4369914531707764
    3. 'change' → logprob: -4.686991214752197
    4. '_switch' → logprob: -4.811991214752197
    5. ',' → logprob: -5.686991214752197
    6. '_' → logprob: -5.936991214752197
    7. '_ch' → logprob: -6.936991214752197
    8. 'level' → logprob: -7.436991214752197
    9. '_state' → logprob: -7.561991214752197
    10. '_changed' → logprob: -8.061991691589355

Token 1381: ' changement' (ID: 61912)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2058774083852768
    2. 'change' → logprob: -2.2058773040771484
    3. '_change' → logprob: -2.7058773040771484
    4. ',
' → logprob: -6.205877304077148
    5. 'switch' → logprob: -6.580877304077148
    6. ' change' → logprob: -6.705877304077148
    7. ' ,' → logprob: -7.205877304077148
    8. '_changed' → logprob: -7.455877304077148
    9. '   ' → logprob: -7.580877304077148
    10. ' (' → logprob: -7.955877304077148

Token 1382: ' fini' (ID: 63561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02579645998775959
    2. '   ' → logprob: -4.150796413421631
    3. ',
' → logprob: -4.900796413421631
    4. '(' → logprob: -7.275796413421631
    5. ' ,' → logprob: -8.025796890258789
    6. ')' → logprob: -8.150796890258789
    7. ' (' → logprob: -8.525796890258789
    8. ' =' → logprob: -8.775796890258789
    9. '2' → logprob: -9.025796890258789
    10. '#' → logprob: -9.025796890258789

Token 1383: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06631703674793243
    2. '   ' → logprob: -3.816317081451416
    3. ')' → logprob: -4.316317081451416
    4. '(' → logprob: -4.816317081451416
    5. ',
' → logprob: -4.816317081451416
    6. '#' → logprob: -5.816317081451416
    7. '
' → logprob: -5.941317081451416
    8. '3' → logprob: -6.316317081451416
    9. ' (' → logprob: -6.941317081451416
    10. '<|end|>' → logprob: -7.066317081451416

Token 1384: 'param' (ID: 1355)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2634168267250061
    2. 'param' → logprob: -2.1384167671203613
    3. 'level' → logprob: -3.3884167671203613
    4. ''s' → logprob: -3.8884167671203613
    5. 'time' → logprob: -4.013416767120361
    6. '2' → logprob: -4.763416767120361
    7. 'change' → logprob: -4.888416767120361
    8. ''' → logprob: -5.263416767120361
    9. '"' → logprob: -6.263416767120361
    10. ')' → logprob: -6.388416767120361

Token 1385: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1446986198425293
    2. '=(' → logprob: -2.0196986198425293
    3. ',' → logprob: -6.519698619842529
    4. '=
' → logprob: -7.769698619842529
    5. ' =' → logprob: -10.144699096679688
    6. '=('' → logprob: -10.644699096679688
    7. '=(-' → logprob: -11.019699096679688
    8. '=int' → logprob: -11.644699096679688
    9. '=None' → logprob: -11.769699096679688
    10. ')' → logprob: -12.019699096679688

Token 1386: 'gate' (ID: 33990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5699924826622009
    2. '(None' → logprob: -1.1949925422668457
    3. '(g' → logprob: -2.8199925422668457
    4. 'None' → logprob: -3.4449925422668457
    5. '0' → logprob: -4.069992542266846
    6. '('' → logprob: -4.819992542266846
    7. '(True' → logprob: -5.069992542266846
    8. '())' → logprob: -5.694992542266846
    9. 'g' → logprob: -6.569992542266846
    10. '(False' → logprob: -6.694992542266846

Token 1387: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.005134135019034147
    2. ',' → logprob: -6.255134105682373
    3. '_id' → logprob: -6.755134105682373
    4. 'index' → logprob: -7.255134105682373
    5. ')' → logprob: -7.380134105682373
    6. '_idx' → logprob: -8.255134582519531
    7. '_i' → logprob: -9.130134582519531
    8. ',index' → logprob: -9.130134582519531
    9. ',_' → logprob: -10.005134582519531
    10. '_' → logprob: -10.130134582519531

Token 1388: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5764458775520325
    2. ')' → logprob: -0.8264458775520325
    3. ',)' → logprob: -8.076445579528809
    4. '<|end|>' → logprob: -10.201445579528809
    5. '   ' → logprob: -10.326445579528809
    6. '),' → logprob: -10.451445579528809
    7. '2' → logprob: -10.951445579528809
    8. '...' → logprob: -10.951445579528809
    9. '))' → logprob: -11.326445579528809
    10. '#' → logprob: -11.826445579528809

Token 1389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.52406245470047
    2. ',' → logprob: -1.0240623950958252
    3. '```' → logprob: -4.274062633514404
    4. '(' → logprob: -4.524062633514404
    5. ')' → logprob: -5.274062633514404
    6. '(
' → logprob: -5.399062633514404
    7. ',
' → logprob: -5.524062633514404
    8. '#' → logprob: -6.024062633514404
    9. ' ' → logprob: -6.774062633514404
    10. '3' → logprob: -6.774062633514404

Token 1390: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.359341561794281
    2. '   ' → logprob: -1.7343416213989258
    3. '3' → logprob: -3.109341621398926
    4. ',
' → logprob: -3.609341621398926
    5. '(' → logprob: -4.234341621398926
    6. '#' (adapté à ' #') → logprob: -4.359341621398926
    7. ')' → logprob: -4.734341621398926
    8. '(
' → logprob: -5.609341621398926
    9. '2' → logprob: -5.859341621398926
    10. ' (' → logprob: -6.234341621398926

Token 1391: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5440985560417175
    2. '#' → logprob: -1.7940986156463623
    3. 'event' → logprob: -1.9190986156463623
    4. '   ' → logprob: -2.9190986156463623
    5. 'events' → logprob: -4.294098377227783
    6. 'ev' → logprob: -4.669098377227783
    7. '
' → logprob: -4.669098377227783
    8. 'next' → logprob: -5.169098377227783
    9. 'def' → logprob: -5.294098377227783
    10. 'heap' → logprob: -5.669098377227783

Token 1392: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04266546666622162
    2. 'event' → logprob: -3.667665481567383
    3. '#' → logprob: -5.292665481567383
    4. 'heap' → logprob: -5.417665481567383
    5. 'queue' → logprob: -6.542665481567383
    6. 'events' → logprob: -6.667665481567383
    7. '
' → logprob: -7.042665481567383
    8. 'priority' → logprob: -7.542665481567383
    9. 'counter' → logprob: -7.667665481567383
    10. 'def' → logprob: -7.792665481567383

Token 1393: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023550475016236305
    2. ',' → logprob: -3.898550510406494
    3. '=' → logprob: -6.648550510406494
    4. '   ' → logprob: -7.273550510406494
    5. ' =' → logprob: -7.898550510406494
    6. '#' → logprob: -8.773550033569336
    7. '(' → logprob: -9.273550033569336
    8. 'def' → logprob: -9.273550033569336
    9. ' :' → logprob: -9.523550033569336
    10. ')' → logprob: -10.023550033569336

Token 1394: ' bateau' (ID: 123794)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10878438502550125
    2. '0' → logprob: -2.3587844371795654
    3. 'ship' → logprob: -5.733784198760986
    4. '4' → logprob: -5.858784198760986
    5. '1' → logprob: -6.858784198760986
    6. '2' → logprob: -7.983784198760986
    7. 'boat' → logprob: -8.358784675598145
    8. ''' → logprob: -8.858784675598145
    9. ''s' → logprob: -9.108784675598145
    10. '#' → logprob: -9.233784675598145

Token 1395: ' sort' (ID: 4506)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.2584335505962372
    2. 'arr' → logprob: -2.8834335803985596
    3. '_arr' → logprob: -2.8834335803985596
    4. '_re' → logprob: -3.5084335803985596
    5. ',' → logprob: -4.2584333419799805
    6. 're' → logprob: -4.5084333419799805
    7. '_indices' → logprob: -4.6334333419799805
    8. '_speed' → logprob: -5.1334333419799805
    9. '_wait' → logprob: -5.3834333419799805
    10. '_' → logprob: -5.3834333419799805

Token 1396: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8412477970123291
    2. '(' → logprob: -1.841247797012329
    3. '=' → logprob: -2.091247797012329
    4. ')' → logprob: -2.716247797012329
    5. ',' → logprob: -3.216247797012329
    6. '   ' → logprob: -3.466247797012329
    7. '_queue' → logprob: -3.841247797012329
    8. ' (' → logprob: -4.09124755859375
    9. '_index' → logprob: -4.21624755859375
    10. 'u' → logprob: -4.21624755859375

Token 1397: ' sas' (ID: 51515)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.950679361820221
    2. 'sas' → logprob: -1.5756793022155762
    3. 's' → logprob: -2.075679302215576
    4. 'port' → logprob: -2.325679302215576
    5. 'sim' → logprob: -2.825679302215576
    6. 'simulation' → logprob: -3.075679302215576
    7. ''' → logprob: -4.700679302215576
    8. 'simulate' → logprob: -4.825679302215576
    9. ' simulation' → logprob: -5.075679302215576
    10. 'p' → logprob: -5.075679302215576

Token 1398: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4728710949420929
    2. ',' → logprob: -1.9728710651397705
    3. '
' → logprob: -2.4728710651397705
    4. ')' → logprob: -2.5978710651397705
    5. '(' → logprob: -4.34787130355835
    6. ' =' → logprob: -4.72287130355835
    7. ' (' → logprob: -4.84787130355835
    8. ')
' → logprob: -4.84787130355835
    9. '<|end|>' → logprob: -4.97287130355835
    10. '#' → logprob: -5.22287130355835

Token 1399: 'param' (ID: 1355)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.03731939196586609
    2. ')' → logprob: -3.6623194217681885
    3. '(ship' → logprob: -5.037319183349609
    4. 'gate' → logprob: -7.037319183349609
    5. '(' → logprob: -7.162319183349609
    6. '0' → logprob: -7.412319183349609
    7. '3' → logprob: -7.412319183349609
    8. '1' → logprob: -7.787319183349609
    9. 'boat' → logprob: -8.28731918334961
    10. '2' → logprob: -8.28731918334961

Token 1400: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0915050134062767
    2. '=(' → logprob: -2.4665050506591797
    3. ',' → logprob: -7.09150505065918
    4. '=None' → logprob: -7.59150505065918
    5. '=
' → logprob: -7.84150505065918
    6. ')' → logprob: -8.71650505065918
    7. ' =' → logprob: -9.21650505065918
    8. '=('' → logprob: -9.46650505065918
    9. '=index' → logprob: -9.84150505065918
    10. '=lambda' → logprob: -9.84150505065918

Token 1401: 'ship' (ID: 8238)
  Prédit: 'ship'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.8721721768379211
    2. ''s' → logprob: -1.7471721172332764
    3. '(ship' → logprob: -2.2471721172332764
    4. '(' → logprob: -2.3721721172332764
    5. 'None' → logprob: -2.7471721172332764
    6. '0' → logprob: -2.8721721172332764
    7. '('' → logprob: -3.6221721172332764
    8. '(None' → logprob: -4.1221723556518555
    9. ''' → logprob: -4.2471723556518555
    10. 'param' → logprob: -5.6221723556518555

Token 1402: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00021605310030281544
    2. ')_' → logprob: -9.875216484069824
    3. '_' → logprob: -10.125216484069824
    4. ')' → logprob: -10.125216484069824
    5. '_ind' → logprob: -10.875216484069824
    6. 'index' → logprob: -11.000216484069824
    7. '_idx' → logprob: -11.250216484069824
    8. '_INDEX' → logprob: -12.500216484069824
    9. 'nd' → logprob: -12.625216484069824
    10. '_i' → logprob: -12.750216484069824

Token 1403: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002042009960860014
    2. ')
' → logprob: -6.252041816711426
    3. '   ' → logprob: -9.502041816711426
    4. ',' → logprob: -11.627041816711426
    5. '3' → logprob: -12.252041816711426
    6. ')
' → logprob: -12.502041816711426
    7. ')>
' → logprob: -12.502041816711426
    8. ')

' → logprob: -12.877041816711426
    9. '),' → logprob: -13.377041816711426
    10. '2' → logprob: -13.377041816711426

Token 1404: ' gate' (ID: 27172)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5487262606620789
    2. 'position' → logprob: -2.0487263202667236
    3. 'time' → logprob: -2.1737263202667236
    4. 'None' → logprob: -2.4237263202667236
    5. 'level' → logprob: -4.1737260818481445
    6. 'gate' → logprob: -4.2987260818481445
    7. 'False' → logprob: -4.4237260818481445
    8. 'speed' → logprob: -4.7987260818481445
    9. '0' → logprob: -4.9237260818481445
    10. ' None' → logprob: -5.2987260818481445

Token 1405: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0003079334564972669
    2. 'index' → logprob: -8.8753080368042
    3. ')' → logprob: -9.7503080368042
    4. '_position' → logprob: -10.3753080368042
    5. ')_' → logprob: -10.7503080368042
    6. '_indices' → logprob: -10.8753080368042
    7. '_idx' → logprob: -11.8753080368042
    8. 'Index' → logprob: -12.1253080368042
    9. '_id' → logprob: -12.3753080368042
    10. '3' → logprob: -12.6253080368042

Token 1406: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.301394023466855e-05
    2. ')
' → logprob: -10.625062942504883
    3. '3' → logprob: -10.750062942504883
    4. ',' → logprob: -12.625062942504883
    5. '   ' → logprob: -12.625062942504883
    6. '2' → logprob: -13.125062942504883
    7. ')`' → logprob: -13.375062942504883
    8. '))' → logprob: -13.625062942504883
    9. '),' → logprob: -14.000062942504883
    10. ' )' → logprob: -14.500062942504883

Token 1407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012822635471820831
    2. '```' → logprob: -5.51282262802124
    3. ',' → logprob: -5.76282262802124
    4. ')' → logprob: -6.76282262802124
    5. '    
' → logprob: -6.88782262802124
    6. '(
' → logprob: -7.51282262802124
    7. '#' → logprob: -7.63782262802124
    8. '(' → logprob: -8.387823104858398
    9. '<|end|>' → logprob: -8.387823104858398
    10. 'def' → logprob: -8.637823104858398

Token 1408: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7215620875358582
    2. 'events' → logprob: -0.9715620875358582
    3. 'event' → logprob: -2.846562147140503
    4. '
' → logprob: -4.346561908721924
    5. '(
' → logprob: -4.471561908721924
    6. '(' → logprob: -4.471561908721924
    7. 'heap' → logprob: -4.596561908721924
    8. 'ev' → logprob: -5.096561908721924
    9. 'def' → logprob: -5.596561908721924
    10. '```' → logprob: -5.596561908721924

Token 1409: ' ' (ID: 220)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.10382949560880661
    2. 'events' → logprob: -2.7288293838500977
    3. 'heap' → logprob: -4.478829383850098
    4. '   ' → logprob: -4.603829383850098
    5. 'queue' → logprob: -5.478829383850098
    6. 'def' → logprob: -6.103829383850098
    7. '
' → logprob: -6.353829383850098
    8. '#' → logprob: -6.478829383850098
    9. 'ev' → logprob: -6.853829383850098
    10. 'pq' → logprob: -7.728829383850098

Token 1410: '4' (ID: 19)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.45282652974128723
    2. 'event' → logprob: -2.452826499938965
    3. '4' → logprob: -2.577826499938965
    4. 'events' → logprob: -3.077826499938965
    5. '#' → logprob: -3.452826499938965
    6. 'queue' → logprob: -3.702826499938965
    7. '0' → logprob: -4.327826499938965
    8. 'def' → logprob: -4.452826499938965
    9. 'import' → logprob: -4.702826499938965
    10. 'counter' → logprob: -4.702826499938965

Token 1411: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08766809850931168
    2. '=' → logprob: -3.2126681804656982
    3. ',' → logprob: -3.3376681804656982
    4. ' =' → logprob: -5.087667942047119
    5. '#' → logprob: -7.087667942047119
    6. 'def' → logprob: -7.837667942047119
    7. '(' → logprob: -8.587668418884277
    8. ' :' → logprob: -8.962668418884277
    9. '   ' → logprob: -9.087668418884277
    10. ' (' → logprob: -9.462668418884277

Token 1412: ' bateau' (ID: 123794)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.9842158555984497
    2. ''' → logprob: -1.9842158555984497
    3. ''s' → logprob: -2.10921573638916
    4. '3' → logprob: -2.60921573638916
    5. '4' → logprob: -2.98421573638916
    6. '('' → logprob: -2.98421573638916
    7. '(' → logprob: -3.35921573638916
    8. 'boat' → logprob: -3.35921573638916
    9. ''b' → logprob: -3.85921573638916
    10. '"' → logprob: -3.85921573638916

Token 1413: ' commence' (ID: 44755)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.7204373478889465
    2. '_arr' → logprob: -1.3454372882843018
    3. '_' → logprob: -2.8454372882843018
    4. ',' → logprob: -3.3454372882843018
    5. '_speed' → logprob: -3.3454372882843018
    6. '_acc' → logprob: -3.8454372882843018
    7. 'arr' → logprob: -3.8454372882843018
    8. '_index' → logprob: -4.595437526702881
    9. '_moves' → logprob: -4.970437526702881
    10. ' ,' → logprob: -5.095437526702881

Token 1414: ' à' (ID: 1221)
  Prédit: '_move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.8531606197357178
    2. 'à' → logprob: -2.2281606197357178
    3. '_to' → logprob: -2.6031606197357178
    4. '_' → logprob: -2.7281606197357178
    5. '_pass' → logprob: -2.8531606197357178
    6. 'to' → logprob: -2.9781606197357178
    7. '_trip' → logprob: -3.6031606197357178
    8. '_m' → logprob: -3.6031606197357178
    9. '_wait' → logprob: -3.9781606197357178
    10. 'pass' → logprob: -4.103160858154297

Token 1415: ' bou' (ID: 17573)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.4703924059867859
    2. 'appro' → logprob: -2.4703924655914307
    3. 'acceler' → logprob: -2.4703924655914307
    4. 'av' → logprob: -2.7203924655914307
    5. 'pass' → logprob: -3.5953924655914307
    6. 'se' → logprob: -4.220392227172852
    7. 's' → logprob: -4.470392227172852
    8. 'att' → logprob: -4.595392227172852
    9. 'move' → logprob: -4.720392227172852
    10. 'entr' → logprob: -4.720392227172852

Token 1416: 'ger' (ID: 1281)
  Prédit: 'ger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ger' → logprob: -0.0007782964967191219
    2. 'g' → logprob: -7.5007781982421875
    3. 'gger' → logprob: -8.750778198242188
    4. 'ge' → logprob: -11.125778198242188
    5. 'cler' → logprob: -11.125778198242188
    6. 't' → logprob: -11.125778198242188
    7. 'ster' → logprob: -12.125778198242188
    8. 'ffer' → logprob: -12.500778198242188
    9. 'nger' → logprob: -13.000778198242188
    10. 'er' → logprob: -13.125778198242188

Token 1417: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8929849863052368
    2. 'events' → logprob: -1.5179849863052368
    3. '
' → logprob: -1.6429849863052368
    4. ')' → logprob: -2.5179848670959473
    5. 'event' → logprob: -3.3929848670959473
    6. 'def' → logprob: -3.6429848670959473
    7. ')
' → logprob: -5.017984867095947
    8. ' events' → logprob: -5.142984867095947
    9. 'heap' → logprob: -5.642984867095947
    10. '#' → logprob: -5.642984867095947

Token 1418: ' ralent' (ID: 173999)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7274904251098633
    2. 'stop' → logprob: -1.2274904251098633
    3. '5' → logprob: -2.7274904251098633
    4. '4' → logprob: -3.1024904251098633
    5. 'arr' → logprob: -3.3524904251098633
    6. 'acc' → logprob: -4.227490425109863
    7. 'contin' → logprob: -4.227490425109863
    8. 'acceler' → logprob: -4.727490425109863
    9. 'changer' → logprob: -4.727490425109863
    10. ' s' → logprob: -4.977490425109863

Token 1419: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.35013338923454285
    2. 'er' → logprob: -1.2251334190368652
    3. '_' → logprob: -7.350133419036865
    4. '_down' → logprob: -8.475132942199707
    5. 'down' → logprob: -8.600132942199707
    6. 'ier' → logprob: -9.475132942199707
    7. 'is' → logprob: -9.600132942199707
    8. 'e' → logprob: -9.600132942199707
    9. 'it' → logprob: -10.225132942199707
    10. 'ar' → logprob: -10.350132942199707

Token 1420: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6534901857376099
    2. '(' → logprob: -1.5284901857376099
    3. ',
' → logprob: -2.5284900665283203
    4. ')' → logprob: -2.9034900665283203
    5. '=' → logprob: -3.4034900665283203
    6. '<|end|>' → logprob: -3.9034900665283203
    7. '(
' → logprob: -4.15349006652832
    8. ' (' → logprob: -4.27849006652832
    9. '   ' → logprob: -4.65349006652832
    10. '#' → logprob: -5.02849006652832

Token 1421: 'param' (ID: 1355)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7272847890853882
    2. 'ship' → logprob: -1.1022847890853882
    3. 'param' → logprob: -2.1022849082946777
    4. '(ship' → logprob: -3.7272849082946777
    5. ',' → logprob: -3.8522849082946777
    6. ',param' → logprob: -5.727284908294678
    7. '=' → logprob: -6.102284908294678
    8. '4' → logprob: -6.352284908294678
    9. '(' → logprob: -6.477284908294678
    10. '(param' → logprob: -6.477284908294678

Token 1422: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03152364119887352
    2. ',' → logprob: -3.5315237045288086
    3. ')' → logprob: -6.781523704528809
    4. '=(' → logprob: -8.531523704528809
    5. '<|end|>' → logprob: -9.156523704528809
    6. ')=' → logprob: -9.406523704528809
    7. '=
' → logprob: -9.781523704528809
    8. '=None' → logprob: -10.031523704528809
    9. ' =' → logprob: -10.281523704528809
    10. '='' → logprob: -11.531523704528809

Token 1423: 'ship' (ID: 8238)
  Prédit: '(ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ship' → logprob: -0.39018791913986206
    2. 'ship' → logprob: -1.1401879787445068
    3. '(' → logprob: -5.765187740325928
    4. ' ship' → logprob: -9.140188217163086
    5. 'ships' → logprob: -10.890188217163086
    6. ' (' → logprob: -11.640188217163086
    7. '(sh' → logprob: -11.765188217163086
    8. '(shop' → logprob: -11.890188217163086
    9. '_ship' → logprob: -12.640188217163086
    10. 'param' → logprob: -13.140188217163086

Token 1424: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0004249547782819718
    2. '_id' → logprob: -9.125425338745117
    3. ')' → logprob: -9.375425338745117
    4. '_ind' → logprob: -9.500425338745117
    5. 'index' → logprob: -10.500425338745117
    6. ')_' → logprob: -10.750425338745117
    7. '_idx' → logprob: -10.875425338745117
    8. '_' → logprob: -11.000425338745117
    9. '_i' → logprob: -11.125425338745117
    10. 's' → logprob: -11.250425338745117

Token 1425: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056515488773584366
    2. ')' → logprob: -2.9315154552459717
    3. '   ' → logprob: -6.806515693664551
    4. ',)' → logprob: -8.43151569366455
    5. '4' → logprob: -9.43151569366455
    6. ',
' → logprob: -9.55651569366455
    7. ')
' → logprob: -10.55651569366455
    8. ' ,' → logprob: -10.68151569366455
    9. '<|end|>' → logprob: -10.80651569366455
    10. '),' → logprob: -11.30651569366455

Token 1426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006480884272605181
    2. 'events' → logprob: -5.256480693817139
    3. '    
' → logprob: -8.131481170654297
    4. 'def' → logprob: -8.131481170654297
    5. 'event' → logprob: -8.756481170654297
    6. '```' → logprob: -9.256481170654297
    7. ')' → logprob: -9.381481170654297
    8. ' events' → logprob: -9.631481170654297
    9. 'tokens' → logprob: -10.506481170654297
    10. 'while' → logprob: -10.506481170654297

Token 1427: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03382942080497742
    2. 'def' → logprob: -4.408829212188721
    3. 'events' → logprob: -4.408829212188721
    4. 'event' → logprob: -5.783829212188721
    5. '```' → logprob: -6.658829212188721
    6. '#' (adapté à ' #') → logprob: -7.033829212188721
    7. '
' → logprob: -7.033829212188721
    8. '    
' → logprob: -7.533829212188721
    9. ')' → logprob: -7.783829212188721
    10. 'heap' → logprob: -8.033829689025879

Token 1428: ' On' (ID: 2160)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.34125182032585144
    2. 'events' → logprob: -1.5912518501281738
    3. 'time' → logprob: -3.841251850128174
    4. '#' → logprob: -4.091251850128174
    5. 'def' → logprob: -4.216251850128174
    6. 'heap' → logprob: -4.591251850128174
    7. 'current' → logprob: -5.091251850128174
    8. '   ' → logprob: -5.216251850128174
    9. 'next' → logprob: -5.841251850128174
    10. 'ev' → logprob: -5.966251850128174

Token 1429: ' se' (ID: 458)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2946592569351196
    2. ' =' → logprob: -1.9196592569351196
    3. ')' → logprob: -2.04465913772583
    4. '=' → logprob: -2.16965913772583
    5. '.' → logprob: -2.16965913772583
    6. 'import' → logprob: -2.41965913772583
    7. 's' → logprob: -4.04465913772583
    8. 'n' → logprob: -4.29465913772583
    9. ',' → logprob: -4.54465913772583
    10. '[' → logprob: -4.54465913772583

Token 1430: ' limit' (ID: 5967)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3212441205978394
    2. '=' → logprob: -2.196244239807129
    3. 'ep' → logprob: -2.196244239807129
    4. 'e' → logprob: -2.571244239807129
    5. 'continue' → logprob: -2.946244239807129
    6. 'def' → logprob: -3.196244239807129
    7. 'lf' → logprob: -3.196244239807129
    8. '_' → logprob: -3.196244239807129
    9. '#' → logprob: -3.821244239807129
    10. 'n' → logprob: -3.946244239807129

Token 1431: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.805699348449707
    2. 'er' → logprob: -1.430699348449707
    3. 'r' → logprob: -1.930699348449707
    4. ')' → logprob: -2.930699348449707
    5. 'é' → logprob: -3.180699348449707
    6. 'ite' → logprob: -3.930699348449707
    7. '=' → logprob: -4.555699348449707
    8. 're' → logprob: -5.055699348449707
    9. ']' → logprob: -5.180699348449707
    10. 'def' → logprob: -5.680699348449707

Token 1432: ' a' (ID: 261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.133995532989502
    2. ' à' → logprob: -2.008995532989502
    3. ' to' → logprob: -2.008995532989502
    4. 'to' → logprob: -2.258995532989502
    5. '<|end|>' → logprob: -2.633995532989502
    6. '[' → logprob: -3.133995532989502
    7. ')' → logprob: -3.383995532989502
    8. 'à' → logprob: -3.758995532989502
    9. '(
' → logprob: -4.008995532989502
    10. ',' → logprob: -4.008995532989502

Token 1433: ' evenement' (ID: 77100)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.061983149498701096
    2. ' []' → logprob: -4.061983108520508
    3. '[' → logprob: -4.436983108520508
    4. 'simulate' → logprob: -4.686983108520508
    5. '4' → logprob: -5.436983108520508
    6. 'continue' → logprob: -5.811983108520508
    7. ' ' → logprob: -5.936983108520508
    8. '[
' → logprob: -6.686983108520508
    9. 'None' → logprob: -6.811983108520508
    10. 'heap' → logprob: -6.936983108520508

Token 1434: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009627992287278175
    2. ')' → logprob: -5.884627819061279
    3. '_' → logprob: -5.884627819061279
    4. '<|end|>' → logprob: -6.509627819061279
    5. ' s' → logprob: -6.759627819061279
    6. '[' → logprob: -8.634628295898438
    7. '(' → logprob: -8.634628295898438
    8. ']' → logprob: -9.259628295898438
    9. '_s' → logprob: -9.259628295898438
    10. '[
' → logprob: -9.509628295898438

Token 1435: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17943890392780304
    2. ')' → logprob: -2.679438829421997
    3. '[' → logprob: -4.054439067840576
    4. '(' → logprob: -4.054439067840576
    5. '_' → logprob: -4.179439067840576
    6. '=' → logprob: -4.304439067840576
    7. '<|end|>' → logprob: -5.179439067840576
    8. '.' → logprob: -5.429439067840576
    9. ':' → logprob: -6.054439067840576
    10. '4' → logprob: -6.304439067840576

Token 1436: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5286393165588379
    2. ',' → logprob: -1.403639316558838
    3. ':' → logprob: -2.278639316558838
    4. '[' → logprob: -4.153639316558838
    5. 'def' → logprob: -4.528639316558838
    6. '<|end|>' → logprob: -5.028639316558838
    7. '   ' → logprob: -5.278639316558838
    8. '(' → logprob: -5.278639316558838
    9. ']' → logprob: -5.903639316558838
    10. '_' → logprob: -6.028639316558838

Token 1437: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6637374758720398
    2. '2' → logprob: -0.7887374758720398
    3. ' ' → logprob: -3.5387375354766846
    4. '3' → logprob: -6.7887372970581055
    5. '#' → logprob: -9.413737297058105
    6. '(' → logprob: -9.788737297058105
    7. '0' → logprob: -10.038737297058105
    8. '```' → logprob: -10.038737297058105
    9. '<|end|>' → logprob: -10.163737297058105
    10. '   ' → logprob: -10.163737297058105

Token 1438: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008435378782451153
    2. '4' → logprob: -5.133435249328613
    3. '(' → logprob: -6.508435249328613
    4. '3' → logprob: -7.758435249328613
    5. ' ' → logprob: -8.883435249328613
    6. '5' → logprob: -9.133435249328613
    7. '#' → logprob: -9.133435249328613
    8. '0' → logprob: -9.258435249328613
    9. '1' → logprob: -10.633435249328613
    10. '```' → logprob: -10.758435249328613

Token 1439: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47949331998825073
    2. 'def' → logprob: -1.2294933795928955
    3. '
' → logprob: -3.3544933795928955
    4. ')' → logprob: -4.229493141174316
    5. 'events' → logprob: -4.479493141174316
    6. ':' → logprob: -5.354493141174316
    7. ',' → logprob: -5.479493141174316
    8. '    
' → logprob: -5.729493141174316
    9. '```' → logprob: -5.729493141174316
    10. ')
' → logprob: -5.979493141174316

Token 1440: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14754700660705566
    2. '   ' → logprob: -2.5225470066070557
    3. '<|end|>' → logprob: -4.147546768188477
    4. '#' → logprob: -5.022546768188477
    5. ' )' → logprob: -5.522546768188477
    6. ' 
' → logprob: -5.522546768188477
    7. ',' → logprob: -5.522546768188477
    8. '    ' → logprob: -5.772546768188477
    9. '    
' → logprob: -5.772546768188477
    10. ' ' → logprob: -5.772546768188477

Token 1441: ' prenant' (ID: 140375)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3811135292053223
    2. 'continue' → logprob: -1.8811135292053223
    3. 'heap' → logprob: -2.3811135292053223
    4. 'att' → logprob: -2.7561135292053223
    5. 'continu' → logprob: -2.8811135292053223
    6. 'suite' → logprob: -2.8811135292053223
    7. 't' → logprob: -3.2561135292053223
    8. ' effet' → logprob: -3.2561135292053223
    9. 'part' → logprob: -3.7561135292053223
    10. 'file' → logprob: -3.8811135292053223

Token 1442: ' soin' (ID: 74600)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.031483206897974014
    2. ' en' → logprob: -3.6564831733703613
    3. 'account' → logprob: -6.656483173370361
    4. 'care' → logprob: -6.781483173370361
    5. 'adv' → logprob: -7.781483173370361
    6. ' soin' → logprob: -7.781483173370361
    7. '```' → logprob: -7.906483173370361
    8. 'un' → logprob: -8.65648365020752
    9. '4' → logprob: -8.78148365020752
    10. 'import' → logprob: -8.78148365020752

Token 1443: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6868315935134888
    2. ' de' → logprob: -0.8118315935134888
    3. ' d' → logprob: -3.686831474304199
    4. 'de' → logprob: -4.936831474304199
    5. ' of' → logprob: -4.936831474304199
    6. 'd' → logprob: -5.811831474304199
    7. ')' → logprob: -5.936831474304199
    8. '_de' → logprob: -6.311831474304199
    9. ' ' → logprob: -6.686831474304199
    10. ',' → logprob: -7.186831474304199

Token 1444: ' gérer' (ID: 86786)
  Prédit: ' compte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compte' → logprob: -0.7705034017562866
    2. 'g' → logprob: -2.145503520965576
    3. 'consider' → logprob: -2.645503520965576
    4. '```' → logprob: -3.145503520965576
    5. 'comp' → logprob: -3.270503520965576
    6. ' ' → logprob: -3.395503520965576
    7. 't' → logprob: -3.645503520965576
    8. 'charge' → logprob: -3.770503520965576
    9. 'contin' → logprob: -3.895503520965576
    10. 'continue' → logprob: -4.145503520965576

Token 1445: ' tout' (ID: 5501)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.24239182472229
    2. ' correctement' → logprob: -1.24239182472229
    3. '_' → logprob: -2.36739182472229
    4. ' l' → logprob: -2.74239182472229
    5. ' ' → logprob: -2.86739182472229
    6. 'les' → logprob: -3.11739182472229
    7. '   ' → logprob: -3.24239182472229
    8. '    ' → logprob: -4.367391586303711
    9. ' la' → logprob: -4.617391586303711
    10. 'le' → logprob: -4.742391586303711

Token 1446: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09806563705205917
    2. ')' → logprob: -2.9730656147003174
    3. '<|end|>' → logprob: -4.5980658531188965
    4. 'def' → logprob: -5.4730658531188965
    5. '#' → logprob: -5.8480658531188965
    6. '   ' → logprob: -5.9730658531188965
    7. 'import' → logprob: -5.9730658531188965
    8. ' _' → logprob: -6.0980658531188965
    9. ',' → logprob: -6.3480658531188965
    10. '_token' → logprob: -6.4730658531188965

Token 1447: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.2062968760728836
    2. ' code' → logprob: -2.706296920776367
    3. ' flux' → logprob: -3.581296920776367
    4. 'reste' → logprob: -3.831296920776367
    5. '```' → logprob: -4.081296920776367
    6. 'es' → logprob: -4.581296920776367
    7. '_' → logprob: -4.581296920776367
    8. 'temps' → logprob: -5.706296920776367
    9. ' temps' → logprob: -5.956296920776367
    10. '_code' → logprob: -6.206296920776367

Token 1448: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05048568919301033
    2. '
' → logprob: -4.175485610961914
    3. 'def' → logprob: -4.175485610961914
    4. '    
' → logprob: -4.300485610961914
    5. ')' → logprob: -6.050485610961914
    6. ',' → logprob: -6.800485610961914
    7. 'events' → logprob: -8.300485610961914
    8. ')
' → logprob: -8.925485610961914
    9. 'import' → logprob: -9.300485610961914
    10. '  
' → logprob: -9.550485610961914

Token 1449: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7647244930267334
    2. 'l' → logprob: -1.1397244930267334
    3. 'la' → logprob: -2.2647244930267334
    4. 'simulate' → logprob: -2.8897244930267334
    5. 'les' → logprob: -3.1397244930267334
    6. 'ev' → logprob: -6.2647247314453125
    7. ' le' → logprob: -6.3897247314453125
    8. 'une' → logprob: -6.3897247314453125
    9. 'the' → logprob: -6.7647247314453125
    10. 'event' → logprob: -7.1397247314453125

Token 1450: ' simulation' (ID: 30937)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6619585156440735
    2. 'gestion' → logprob: -2.1619584560394287
    3. 'heap' → logprob: -2.2869584560394287
    4. 'he' → logprob: -2.2869584560394287
    5. 'code' → logprob: -2.9119584560394287
    6. 'def' → logprob: -3.5369584560394287
    7. 'simulate' → logprob: -4.161958694458008
    8. 'simulation' → logprob: -4.286958694458008
    9. 'sim' → logprob: -4.661958694458008
    10. 'processing' → logprob: -4.661958694458008

Token 1451: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08590611070394516
    2. 'def' → logprob: -3.0859060287475586
    3. '
' → logprob: -3.8359060287475586
    4. ')' → logprob: -5.210906028747559
    5. '    
' → logprob: -5.835906028747559
    6. '_events' → logprob: -6.335906028747559
    7. ')
' → logprob: -6.835906028747559
    8. 'events' → logprob: -7.085906028747559
    9. ',' → logprob: -7.710906028747559
    10. '#' → logprob: -7.835906028747559

Token 1452: ' év' (ID: 23692)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.7281956076622009
    2. 'ev' → logprob: -1.4781956672668457
    3. 'év' → logprob: -1.8531956672668457
    4. ' events' → logprob: -3.4781956672668457
    5. ' ev' → logprob: -3.7281956672668457
    6. 'event' → logprob: -3.7281956672668457
    7. 'm' → logprob: -5.103195667266846
    8. ' ships' → logprob: -5.603195667266846
    9. 'ship' → logprob: -5.728195667266846
    10. 'é' → logprob: -5.853195667266846

Token 1453: 'ènements' (ID: 178488)
  Prédit: 'ènement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ènement' → logprob: -0.7642772793769836
    2. 'ent' → logprob: -0.8892772793769836
    3. 'énement' → logprob: -2.264277219772339
    4. 'ents' → logprob: -4.889277458190918
    5. 'èn' → logprob: -5.639277458190918
    6. 'ène' → logprob: -6.014277458190918
    7. 'ènements' → logprob: -6.764277458190918
    8. 'è' → logprob: -6.764277458190918
    9. 'enment' → logprob: -7.764277458190918
    10. 'ént' → logprob: -7.764277458190918

Token 1454: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5104774832725525
    2. 'events' → logprob: -1.7604775428771973
    3. 'def' → logprob: -1.8854775428771973
    4. ')' → logprob: -3.7604775428771973
    5. 'heap' → logprob: -4.135477542877197
    6. '#' → logprob: -4.510477542877197
    7. 'event' → logprob: -4.885477542877197
    8. '
' → logprob: -5.760477542877197
    9. '```' → logprob: -5.885477542877197
    10. ')
' → logprob: -5.885477542877197

Token 1455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15870407223701477
    2. 'events' → logprob: -2.4087040424346924
    3. 'def' → logprob: -3.7837040424346924
    4. 'time' → logprob: -4.5337042808532715
    5. 'event' → logprob: -4.7837042808532715
    6. 'heap' → logprob: -5.2837042808532715
    7. '#' → logprob: -5.6587042808532715
    8. ')' → logprob: -6.2837042808532715
    9. '    
' → logprob: -6.7837042808532715
    10. '
' → logprob: -7.0337042808532715

Token 1456: ' #' (ID: 1069)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.24396254122257233
    2. 'event' → logprob: -1.7439625263214111
    3. '   ' → logprob: -3.368962526321411
    4. 'heap' → logprob: -5.36896276473999
    5. 'time' → logprob: -7.24396276473999
    6. '#' (adapté à ' #') → logprob: -7.49396276473999
    7. 'def' → logprob: -7.86896276473999
    8. 'queue' → logprob: -8.118962287902832
    9. 'pq' → logprob: -8.368962287902832
    10. 'ev' → logprob: -8.743962287902832

Token 1457: ' Etat' (ID: 197339)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.7224998474121094
    2. 'event' → logprob: -0.8474998474121094
    3. 'time' → logprob: -3.3474998474121094
    4. 'heap' → logprob: -3.8474998474121094
    5. '   ' → logprob: -3.9724998474121094
    6. '#' → logprob: -5.347499847412109
    7. 'pq' → logprob: -5.847499847412109
    8. 'queue' → logprob: -7.222499847412109
    9. '
' → logprob: -7.222499847412109
    10. 'ev' → logprob: -7.597499847412109

Token 1458: ' des' (ID: 731)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.21986790001392365
    2. 'event' → logprob: -2.8448679447174072
    3. ' =' → logprob: -2.9698679447174072
    4. '{
' → logprob: -3.0948679447174072
    5. '=' → logprob: -4.094867706298828
    6. '{' → logprob: -4.844867706298828
    7. 'state' → logprob: -5.469867706298828
    8. 'ev' → logprob: -6.219867706298828
    9. '   ' → logprob: -6.469867706298828
    10. '=
' → logprob: -6.469867706298828

Token 1459: ' sas' (ID: 51515)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.5002393126487732
    2. 'ships' → logprob: -1.625239372253418
    3. ' ships' → logprob: -3.125239372253418
    4. 'positions' → logprob: -3.625239372253418
    5. 'v' → logprob: -3.750239372253418
    6. 'ev' → logprob: -4.250239372253418
    7. 'heap' → logprob: -4.250239372253418
    8. 'event' → logprob: -4.375239372253418
    9. ' events' → logprob: -4.500239372253418
    10. 'boats' → logprob: -4.625239372253418

Token 1460: ':' (ID: 25)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -1.032341480255127
    2. '=' → logprob: -1.657341480255127
    3. ' =' → logprob: -1.657341480255127
    4. 'states' → logprob: -2.532341480255127
    5. 's' → logprob: -2.657341480255127
    6. 'level' → logprob: -3.782341480255127
    7. '_levels' → logprob: -3.782341480255127
    8. 'state' → logprob: -4.032341480255127
    9. '_states' → logprob: -4.157341480255127
    10. '_level' → logprob: -4.657341480255127

Token 1461: ' pour' (ID: 1930)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.974271297454834
    2. 'sas' → logprob: -1.099271297454834
    3. '#' → logprob: -2.474271297454834
    4. 'level' → logprob: -2.849271297454834
    5. 's' → logprob: -2.974271297454834
    6. 'gate' → logprob: -3.224271297454834
    7. '[s' → logprob: -3.974271297454834
    8. 'states' → logprob: -4.849271297454834
    9. 'state' → logprob: -5.099271297454834
    10. '[' → logprob: -5.474271297454834

Token 1462: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08859717100858688
    2. ' i' → logprob: -3.463597059249878
    3. 'g' → logprob: -3.588597059249878
    4. 'each' → logprob: -4.463597297668457
    5. 'gate' → logprob: -5.213597297668457
    6. '_gate' → logprob: -6.213597297668457
    7. ' gate' → logprob: -6.463597297668457
    8. '_' → logprob: -6.963597297668457
    9. ' chaque' → logprob: -7.213597297668457
    10. ' g' → logprob: -7.338597297668457

Token 1463: ' sas' (ID: 51515)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.08256129175424576
    2. ' gate' → logprob: -2.7075612545013428
    3. 'g' → logprob: -4.457561492919922
    4. '_gate' → logprob: -7.457561492919922
    5. ' g' → logprob: -9.207561492919922
    6. 'i' → logprob: -10.207561492919922
    7. '```' → logprob: -10.582561492919922
    8. 'Gate' → logprob: -10.582561492919922
    9. 'gateway' → logprob: -10.707561492919922
    10. '`' → logprob: -10.770061492919922

Token 1464: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9856732487678528
    2. 'level' → logprob: -1.485673189163208
    3. ':
' → logprob: -1.860673189163208
    4. ':' → logprob: -1.985673189163208
    5. '#' → logprob: -3.860673189163208
    6. ',
' → logprob: -4.610673427581787
    7. 'state' → logprob: -4.735673427581787
    8. '   ' → logprob: -4.860673427581787
    9. '[level' → logprob: -4.860673427581787
    10. ' level' → logprob: -5.110673427581787

Token 1465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06621775031089783
    2. 'levels' → logprob: -4.06621789932251
    3. 'state' → logprob: -4.69121789932251
    4. 's' → logprob: -4.81621789932251
    5. 'states' → logprob: -4.94121789932251
    6. 'level' → logprob: -4.94121789932251
    7. 'sas' → logprob: -5.19121789932251
    8. '#' → logprob: -5.81621789932251
    9. 'status' → logprob: -6.69121789932251
    10. ' sas' → logprob: -7.19121789932251

Token 1466: ' #' (ID: 1069)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.6973069906234741
    2. 'level' → logprob: -2.1973071098327637
    3. 'states' → logprob: -2.4473071098327637
    4. 'state' → logprob: -2.4473071098327637
    5. '   ' → logprob: -2.6973071098327637
    6. 'sas' → logprob: -3.3223071098327637
    7. '#' (adapté à ' #') → logprob: -3.3223071098327637
    8. 'gate' → logprob: -3.9473071098327637
    9. 'g' → logprob: -3.9473071098327637
    10. 's' → logprob: -4.822307109832764

Token 1467: ' level' (ID: 3211)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8273003697395325
    2. 'level' → logprob: -1.0773003101348877
    3. 'levels' → logprob: -1.8273003101348877
    4. 'state' → logprob: -3.8273003101348877
    5. 'current' → logprob: -4.327300548553467
    6. 'states' → logprob: -4.827300548553467
    7. 'sas' → logprob: -6.202300548553467
    8. 'status' → logprob: -6.327300548553467
    9. '[s' → logprob: -6.327300548553467
    10. '   ' → logprob: -6.327300548553467

Token 1468: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25028669834136963
    2. 's' → logprob: -3.12528657913208
    3. '_is' → logprob: -3.12528657913208
    4. '_changes' → logprob: -3.12528657913208
    5. '_change' → logprob: -3.50028657913208
    6. '=' → logprob: -4.25028657913208
    7. '_switch' → logprob: -4.50028657913208
    8. '_ch' → logprob: -4.50028657913208
    9. '_changed' → logprob: -5.62528657913208
    10. '_current' → logprob: -5.87528657913208

Token 1469: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03410400077700615
    2. 'g' → logprob: -3.909104108810425
    3. ' False' → logprob: -4.909103870391846
    4. ' gates' → logprob: -5.784103870391846
    5. 'gate' → logprob: -6.534103870391846
    6. 'self' → logprob: -7.284103870391846
    7. '0' → logprob: -7.659103870391846
    8. 'false' → logprob: -9.034104347229004
    9. '(False' → logprob: -9.534104347229004
    10. 'True' → logprob: -9.659104347229004

Token 1470: ' ou' (ID: 2031)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1471: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0003416607796680182
    2. ' True' → logprob: -8.000341415405273
    3. 'False' → logprob: -12.000341415405273
    4. '   ' → logprob: -16.750341415405273
    5. '(True' → logprob: -18.500341415405273
    6. '=True' → logprob: -19.625341415405273
    7. '0' → logprob: -19.625341415405273
    8. 'true' → logprob: -21.500341415405273
    9. ' False' → logprob: -22.375341415405273
    10. ' ' → logprob: -22.375341415405273

Token 1472: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8297703266143799
    2. '<|end|>' → logprob: -0.8297703266143799
    3. '       ' → logprob: -2.95477032661438
    4. ',' → logprob: -3.70477032661438
    5. '
' → logprob: -3.70477032661438
    6. '#' → logprob: -4.454770088195801
    7. '<|end|>' → logprob: -4.829770088195801
    8. ' (' → logprob: -6.829770088195801
    9. ',
' → logprob: -7.079770088195801
    10. '    
' → logprob: -7.079770088195801

Token 1473: 'bas' (ID: 15207)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9613152146339417
    2. 'False' → logprob: -0.9613152146339417
    3. 'bas' → logprob: -1.7113151550292969
    4. 'initial' → logprob: -4.586315155029297
    5. 'current' → logprob: -4.711315155029297
    6. 'niveau' → logprob: -4.836315155029297
    7. ' bas' → logprob: -4.961315155029297
    8. '0' → logprob: -5.711315155029297
    9. ')' → logprob: -5.836315155029297
    10. ' False' → logprob: -5.836315155029297

Token 1474: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19490006566047668
    2. ' ou' → logprob: -2.3199000358581543
    3. ')
' → logprob: -3.3199000358581543
    4. 'ou' → logprob: -4.069900035858154
    5. ',' → logprob: -4.319900035858154
    6. '),' → logprob: -5.069900035858154
    7. 'or' → logprob: -5.944900035858154
    8. ' or' → logprob: -6.194900035858154
    9. ')#' → logprob: -8.444900512695312
    10. '#' → logprob: -8.819900512695312

Token 1475: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.04823630675673485
    2. 'True' → logprob: -3.29823637008667
    3. ' haut' → logprob: -5.04823637008667
    4. ' True' → logprob: -6.29823637008667
    5. 'ha' → logprob: -6.42323637008667
    6. 'high' → logprob: -8.548235893249512
    7. 'bas' → logprob: -9.923235893249512
    8. '   ' → logprob: -12.423235893249512
    9. 'true' → logprob: -12.548235893249512
    10. '#' → logprob: -12.673235893249512

Token 1476: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22592714428901672
    2. ')
' → logprob: -1.6009271144866943
    3. '),' → logprob: -8.600927352905273
    4. ')

' → logprob: -9.225927352905273
    5. '   ' → logprob: -9.350927352905273
    6. ',' → logprob: -9.975927352905273
    7. ')
' → logprob: -10.350927352905273
    8. '),
' → logprob: -10.975927352905273
    9. '#' → logprob: -11.725927352905273
    10. ')#' → logprob: -11.850927352905273

Token 1477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020977992098778486
    2. '#' → logprob: -6.3770976066589355
    3. '
' → logprob: -9.002098083496094
    4. 'level' → logprob: -9.127098083496094
    5. 'state' → logprob: -9.752098083496094
    6. 'levels' → logprob: -10.377098083496094
    7. '    
' → logprob: -11.252098083496094
    8. 'status' → logprob: -11.377098083496094
    9. '       ' → logprob: -11.502098083496094
    10. 'current' → logprob: -11.877098083496094

Token 1478: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13134053349494934
    2. '#' (adapté à ' #') → logprob: -2.881340503692627
    3. 'levels' → logprob: -3.381340503692627
    4. 'level' → logprob: -4.131340503692627
    5. 'state' → logprob: -5.256340503692627
    6. 'states' → logprob: -5.506340503692627
    7. 'events' → logprob: -6.256340503692627
    8. 'current' → logprob: -7.506340503692627
    9. '
' → logprob: -7.506340503692627
    10. 's' → logprob: -7.631340503692627

Token 1479: ' target' (ID: 3783)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9526823163032532
    2. 'time' → logprob: -2.3276822566986084
    3. 'target' → logprob: -2.4526822566986084
    4. 'volume' → logprob: -2.9526822566986084
    5. 'waiting' → logprob: -2.9526822566986084
    6. 'current' → logprob: -3.0776822566986084
    7. 'state' → logprob: -3.4526822566986084
    8. 'timer' → logprob: -3.7026822566986084
    9. 'next' → logprob: -3.8276822566986084
    10. 'remaining' → logprob: -3.8276822566986084

Token 1480: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.0015387886669486761
    2. ' =' → logprob: -6.7515387535095215
    3. 'level' → logprob: -8.37653923034668
    4. '_levels' → logprob: -9.87653923034668
    5. '=' → logprob: -10.25153923034668
    6. ',' → logprob: -11.00153923034668
    7. '_state' → logprob: -11.25153923034668
    8. '_' → logprob: -11.87653923034668
    9. 'Level' → logprob: -11.87653923034668
    10. ' level' → logprob: -13.62653923034668

Token 1481: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47417035698890686
    2. ' =' → logprob: -0.9741703271865845
    3. 's' → logprob: -9.724170684814453
    4. '=None' → logprob: -11.224170684814453
    5. ':' → logprob: -11.849170684814453
    6. ',' → logprob: -11.849170684814453
    7. '   ' → logprob: -13.224170684814453
    8. '=False' → logprob: -13.599170684814453
    9. ' ' → logprob: -14.849170684814453
    10. '=[]' → logprob: -14.849170684814453

Token 1482: ' si' (ID: 1784)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.39465659856796265
    2. 'None' → logprob: -1.1446566581726074
    3. ' None' → logprob: -5.769656658172607
    4. ' gates' → logprob: -6.269656658172607
    5. ' False' → logprob: -6.644656658172607
    6. 'g' → logprob: -6.769656658172607
    7. 'self' → logprob: -8.64465618133545
    8. 'gate' → logprob: -10.14465618133545
    9. '[' → logprob: -10.51965618133545
    10. ' g' → logprob: -12.01965618133545

Token 1483: ' sas' (ID: 51515)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12985609471797943
    2. ' self' → logprob: -2.7548561096191406
    3. 'level' → logprob: -3.6298561096191406
    4. 'None' → logprob: -4.379856109619141
    5. 'g' → logprob: -4.879856109619141
    6. 'target' → logprob: -5.629856109619141
    7. ' level' → logprob: -5.879856109619141
    8. ' g' → logprob: -6.629856109619141
    9. 'not' → logprob: -6.754856109619141
    10. ' None' → logprob: -7.129856109619141

Token 1484: ' doit' (ID: 21822)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.09942363947629929
    2. '!=' → logprob: -3.47442364692688
    3. ' is' → logprob: -3.59942364692688
    4. '_level' → logprob: -4.724423408508301
    5. '_target' → logprob: -4.849423408508301
    6. ' ==' → logprob: -5.099423408508301
    7. 'level' → logprob: -5.599423408508301
    8. '.level' → logprob: -5.974423408508301
    9. '_change' → logprob: -6.724423408508301
    10. '   ' → logprob: -6.849423408508301

Token 1485: ' changer' (ID: 47099)
  Prédit: 'changer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changer' → logprob: -0.14185836911201477
    2. ' changer' → logprob: -2.2668583393096924
    3. '_ch' → logprob: -4.8918585777282715
    4. 'pass' → logprob: -5.0168585777282715
    5. 'ch' → logprob: -5.5168585777282715
    6. 'être' → logprob: -6.0168585777282715
    7. '_change' → logprob: -6.5168585777282715
    8. ' évoluer' → logprob: -6.6418585777282715
    9. 'switch' → logprob: -6.7668585777282715
    10. 'change' → logprob: -7.0168585777282715

Token 1486: ' d' (ID: 272)
  Prédit: '_level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.40709298849105835
    2. ' =' → logprob: -1.5320930480957031
    3. 'level' → logprob: -2.907093048095703
    4. '=' → logprob: -3.532093048095703
    5. 'niveau' → logprob: -4.282093048095703
    6. 'd' → logprob: -5.282093048095703
    7. 'de' → logprob: -5.532093048095703
    8. '=True' → logprob: -5.657093048095703
    9. '=False' → logprob: -5.782093048095703
    10. '=None' → logprob: -6.657093048095703

Token 1487: ''et' (ID: 88821)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.03127572685480118
    2. 'level' → logprob: -4.406275749206543
    3. ''état' → logprob: -4.531275749206543
    4. 'ét' → logprob: -5.656275749206543
    5. 'etat' → logprob: -6.656275749206543
    6. 'state' → logprob: -7.281275749206543
    7. '_n' → logprob: -7.531275749206543
    8. 'e' → logprob: -7.906275749206543
    9. '_' → logprob: -8.031275749206543
    10. '_level' → logprob: -8.406275749206543

Token 1488: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -4.4894986785948277e-05
    2. '
' → logprob: -11.125044822692871
    3. 'tat' → logprob: -11.500044822692871
    4. '_' → logprob: -12.125044822692871
    5. '#' → logprob: -12.250044822692871
    6. 'ât' → logprob: -12.625044822692871
    7. 'a' → logprob: -13.375044822692871
    8. '_at' → logprob: -13.625044822692871
    9. 'ate' → logprob: -14.500044822692871
    10. '_level' → logprob: -14.625044822692871

Token 1489: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2635622024536133
    2. '=' → logprob: -1.6385622024536133
    3. '   ' → logprob: -3.6385622024536133
    4. '=None' → logprob: -4.763562202453613
    5. '       ' → logprob: -7.638562202453613
    6. '
' → logprob: -7.638562202453613
    7. 's' → logprob: -7.888562202453613
    8. ',' → logprob: -8.263562202453613
    9. '#' → logprob: -8.388562202453613
    10. 'None' → logprob: -8.388562202453613

Token 1490: 'True' (ID: 4710)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03376233950257301
    2. ' None' → logprob: -3.6587624549865723
    3. 'False' → logprob: -5.658762454986572
    4. 'True' → logprob: -6.408762454986572
    5. 'not' → logprob: -6.533762454986572
    6. ' not' → logprob: -7.158762454986572
    7. ' False' → logprob: -10.658761978149414
    8. ' True' → logprob: -10.908761978149414
    9. 'level' → logprob: -11.533761978149414
    10. 'self' → logprob: -12.783761978149414

Token 1491: '/' (ID: 14)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.389536052942276
    2. ' or' → logprob: -1.5145360231399536
    3. ',' → logprob: -2.389536142349243
    4. ')' → logprob: -5.639535903930664
    5. '),' → logprob: -6.014535903930664
    6. 'or' → logprob: -6.139535903930664
    7. '/' → logprob: -6.264535903930664
    8. 'ou' → logprob: -7.389535903930664
    9. ' ' → logprob: -10.014535903930664
    10. ' /' → logprob: -10.139535903930664

Token 1492: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.493430894101039e-05
    2. ' False' → logprob: -9.500075340270996
    3. '(False' → logprob: -17.25007438659668
    4. 'True' → logprob: -20.00007438659668
    5. 'false' → logprob: -20.00007438659668
    6. '.False' → logprob: -20.12507438659668
    7. '=False' → logprob: -20.25007438659668
    8. '_false' → logprob: -20.87507438659668
    9. 'None' → logprob: -22.12507438659668
    10. '_FALSE' → logprob: -22.25007438659668

Token 1493: '/' (ID: 14)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8293808102607727
    2. '),' → logprob: -1.329380750656128
    3. ')
' → logprob: -1.829380750656128
    4. ',' → logprob: -2.079380750656128
    5. ' or' → logprob: -5.204380989074707
    6. '),
' → logprob: -6.079380989074707
    7. '=None' → logprob: -6.454380989074707
    8. 'None' → logprob: -6.579380989074707
    9. '):
' → logprob: -7.204380989074707
    10. '   ' → logprob: -7.954380989074707

Token 1494: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.961759259458631e-06
    2. ' None' → logprob: -12.250004768371582
    3. '(None' → logprob: -17.7500057220459
    4. 'none' → logprob: -17.8750057220459
    5. '_None' → logprob: -18.2500057220459
    6. '
' → logprob: -18.8750057220459
    7. '=None' → logprob: -19.2500057220459
    8. 'False' → logprob: -19.5000057220459
    9. ',None' → logprob: -19.5000057220459
    10. '   ' → logprob: -21.0000057220459

Token 1495: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2747736871242523
    2. ')
' → logprob: -1.6497737169265747
    3. '),' → logprob: -4.149773597717285
    4. 'None' → logprob: -4.399773597717285
    5. '),
' → logprob: -4.524773597717285
    6. '=None' → logprob: -5.649773597717285
    7. ',' → logprob: -6.274773597717285
    8. '):
' → logprob: -6.274773597717285
    9. ' or' → logprob: -7.524773597717285
    10. ' None' → logprob: -7.774773597717285

Token 1496: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007918820483610034
    2. '#' → logprob: -7.750792026519775
    3. 'target' → logprob: -8.500791549682617
    4. '
' → logprob: -9.750791549682617
    5. ' =' → logprob: -10.000791549682617
    6. '=' → logprob: -11.500791549682617
    7. '    
' → logprob: -11.750791549682617
    8. '       ' → logprob: -11.875791549682617
    9. ',' → logprob: -12.000791549682617
    10. '```' → logprob: -12.125791549682617

Token 1497: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8747593760490417
    2. ' =' → logprob: -0.9997593760490417
    3. '=' → logprob: -2.1247594356536865
    4. 'target' → logprob: -2.6247594356536865
    5. '
' → logprob: -4.624759197235107
    6. '#' (adapté à ' #') → logprob: -5.374759197235107
    7. '=
' → logprob: -5.999759197235107
    8. '=None' → logprob: -6.499759197235107
    9. '_target' → logprob: -6.874759197235107
    10. 'None' → logprob: -6.999759197235107

Token 1498: ' boat' (ID: 19736)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.011098755523562431
    2. ' target' → logprob: -5.386098861694336
    3. '   ' → logprob: -5.761098861694336
    4. '#' → logprob: -6.261098861694336
    5. 'for' → logprob: -7.511098861694336
    6. '
' → logprob: -7.761098861694336
    7. 'level' → logprob: -9.136098861694336
    8. 'targets' → logprob: -9.761098861694336
    9. ' for' → logprob: -10.136098861694336
    10. '_target' → logprob: -10.511098861694336

Token 1499: '_inside' (ID: 191028)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.5610679984092712
    2. 's' → logprob: -1.311068058013916
    3. '_wait' → logprob: -2.686068058013916
    4. '_inside' → logprob: -3.186068058013916
    5. '_at' → logprob: -4.186068058013916
    6. '_states' → logprob: -4.561068058013916
    7. '_positions' → logprob: -4.811068058013916
    8. '_queue' → logprob: -5.311068058013916
    9. '_present' → logprob: -5.811068058013916
    10. '_levels' → logprob: -5.936068058013916

Token 1500: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06309545040130615
    2. ' =' → logprob: -3.0630955696105957
    3. '=' → logprob: -5.063095569610596
    4. '_inside' → logprob: -5.063095569610596
    5. '_s' → logprob: -7.313095569610596
    6. 'es' → logprob: -8.313095092773438
    7. '_levels' → logprob: -9.063095092773438
    8. '=False' → logprob: -9.188095092773438
    9. '=True' → logprob: -9.313095092773438
    10. '_' → logprob: -9.563095092773438

Token 1501: ' None' (ID: 4662)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.42455723881721497
    2. '[]' → logprob: -1.2995572090148926
    3. ' set' → logprob: -3.1745572090148926
    4. '0' → logprob: -4.299557209014893
    5. 'False' → logprob: -4.674557209014893
    6. ' []' → logprob: -5.174557209014893
    7. '[' → logprob: -6.674557209014893
    8. 'None' → logprob: -6.924557209014893
    9. ' False' → logprob: -8.42455768585205
    10. '[]
' → logprob: -8.79955768585205

Token 1502: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3201802968978882
    2. 'or' → logprob: -2.0701804161071777
    3. ',' → logprob: -2.5701804161071777
    4. '<|end|>' → logprob: -3.8201804161071777
    5. ' =' → logprob: -4.195180416107178
    6. '=' → logprob: -4.945180416107178
    7. ',
' → logprob: -5.320180416107178
    8. '   ' → logprob: -5.445180416107178
    9. '=None' → logprob: -5.570180416107178
    10. '
' → logprob: -5.820180416107178

Token 1503: ' index' (ID: 3472)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5034961700439453
    2. '[]' → logprob: -1.2534961700439453
    3. '0' → logprob: -2.5034961700439453
    4. '-' → logprob: -3.8784961700439453
    5. 'False' → logprob: -6.128496170043945
    6. ' set' → logprob: -6.253496170043945
    7. '[]
' → logprob: -6.253496170043945
    8. 'True' → logprob: -7.378496170043945
    9. '[' → logprob: -7.878496170043945
    10. ' []' → logprob: -8.253496170043945

Token 1504: ' bateau' (ID: 123794)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.335187166929245
    2. '   ' → logprob: -1.3351871967315674
    3. '       ' → logprob: -4.960186958312988
    4. '
' → logprob: -5.460186958312988
    5. '=' → logprob: -5.960186958312988
    6. '=None' → logprob: -6.460186958312988
    7. 'def' → logprob: -6.460186958312988
    8. 's' → logprob: -7.210186958312988
    9. 'None' → logprob: -7.335186958312988
    10. '[' → logprob: -8.210186958312988

Token 1505: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008983373641967773
    2. '
' → logprob: -5.383983612060547
    3. 'None' → logprob: -6.883983612060547
    4. ' =' → logprob: -7.133983612060547
    5. '#' → logprob: -7.383983612060547
    6. 'target' → logprob: -7.758983612060547
    7. ' for' → logprob: -8.133983612060547
    8. ' None' → logprob: -8.758983612060547
    9. '[target' → logprob: -8.758983612060547
    10. 'for' → logprob: -8.883983612060547

Token 1506: 'on' (ID: 263)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.22758835554122925
    2. '0' → logprob: -2.352588415145874
    3. ')' → logprob: -2.977588415145874
    4. 'ship' → logprob: -4.102588176727295
    5. ' None' → logprob: -4.227588176727295
    6. '-' → logprob: -4.602588176727295
    7. '   ' → logprob: -5.352588176727295
    8. ')
' → logprob: -5.602588176727295
    9. '
' → logprob: -6.727588176727295
    10. '[' → logprob: -6.977588176727295

Token 1507: ' peut' (ID: 9216)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.26718297600746155
    2. ' None' → logprob: -1.8921829462051392
    3. ')' → logprob: -4.26718282699585
    4. ' continue' → logprob: -4.51718282699585
    5. 'continue' → logprob: -4.64218282699585
    6. '=None' → logprob: -4.64218282699585
    7. '[]' → logprob: -4.89218282699585
    8. 's' → logprob: -5.14218282699585
    9. 'contin' → logprob: -5.76718282699585
    10. '   ' → logprob: -6.01718282699585

Token 1508: ' gérer' (ID: 86786)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.000325322151184
    2. ' continuer' → logprob: -1.625325322151184
    3. ')' → logprob: -2.6253252029418945
    4. ' None' → logprob: -2.7503252029418945
    5. 'mettre' → logprob: -3.0003252029418945
    6. 'avoir' → logprob: -3.6253252029418945
    7. 'not' → logprob: -3.7503252029418945
    8. 'contin' → logprob: -3.8753252029418945
    9. '[' → logprob: -4.0003252029418945
    10. '   ' → logprob: -4.3753252029418945

Token 1509: ' l' (ID: 305)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.08637464046478271
    2. 'le' → logprob: -3.4613747596740723
    3. ' None' → logprob: -3.8363747596740723
    4. ')' → logprob: -4.586374759674072
    5. '```' → logprob: -5.336374759674072
    6. 'un' → logprob: -5.711374759674072
    7. '=None' → logprob: -5.961374759674072
    8. 'l' → logprob: -6.211374759674072
    9. '   ' → logprob: -6.961374759674072
    10. 'la' → logprob: -7.711374759674072

Token 1510: ''état' (ID: 116357)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1884482353925705
    2. ''intérieur' → logprob: -2.813448190689087
    3. 'e' → logprob: -3.063448190689087
    4. '[' → logprob: -4.813448429107666
    5. ''ensemble' → logprob: -4.938448429107666
    6. '[]' → logprob: -5.313448429107666
    7. ''état' → logprob: -5.438448429107666
    8. 'a' → logprob: -5.563448429107666
    9. ''' → logprob: -5.813448429107666
    10. 'inside' → logprob: -5.813448429107666

Token 1511: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1955655813217163
    2. '=' → logprob: -1.1955655813217163
    3. '_' → logprob: -2.070565700531006
    4. '=None' → logprob: -2.320565700531006
    5. ' =' → logprob: -3.445565700531006
    6. '```' → logprob: -3.820565700531006
    7. ' complet' → logprob: -4.445565700531006
    8. 'd' → logprob: -4.945565700531006
    9. 'de' → logprob: -4.945565700531006
    10. 'inside' → logprob: -5.070565700531006

Token 1512: ' une' (ID: 2463)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.05988892540335655
    2. '-' → logprob: -3.6848888397216797
    3. '[' → logprob: -4.43488883972168
    4. 'False' → logprob: -5.43488883972168
    5. ' None' → logprob: -5.43488883972168
    6. '[]' → logprob: -5.68488883972168
    7. '   ' → logprob: -5.80988883972168
    8. 'set' → logprob: -6.43488883972168
    9. 'True' → logprob: -7.18488883972168
    10. 'boat' → logprob: -7.80988883972168

Token 1513: ' variable' (ID: 11076)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.1816991567611694
    2. 'bool' → logprob: -1.4316991567611694
    3. 'queue' → logprob: -2.181699275970459
    4. 'set' → logprob: -2.306699275970459
    5. 'None' → logprob: -2.681699275970459
    6. 'boat' → logprob: -3.306699275970459
    7. 'liste' → logprob: -3.556699275970459
    8. 'int' → logprob: -3.681699275970459
    9. 'flag' → logprob: -4.306699275970459
    10. 'index' → logprob: -4.431699275970459

Token 1514: ' supplémentaire' (ID: 111252)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49357274174690247
    2. '_inside' → logprob: -1.61857271194458
    3. ')' → logprob: -2.49357271194458
    4. '=' → logprob: -3.49357271194458
    5. ' =' → logprob: -3.86857271194458
    6. '=None' → logprob: -4.11857271194458
    7. '=True' → logprob: -4.74357271194458
    8. 'inside' → logprob: -5.11857271194458
    9. '_=' → logprob: -5.61857271194458
    10. '_d' → logprob: -5.86857271194458

Token 1515: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9349513649940491
    2. ')
' → logprob: -1.1849513053894043
    3. ')' → logprob: -1.5599513053894043
    4. ',' → logprob: -3.3099513053894043
    5. '#' → logprob: -4.059951305389404
    6. '=' → logprob: -4.934951305389404
    7. '=None' → logprob: -4.934951305389404
    8. '):
' → logprob: -5.684951305389404
    9. '       ' → logprob: -5.684951305389404
    10. '
' → logprob: -5.809951305389404

Token 1516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00269787828437984
    2. '
' → logprob: -6.752697944641113
    3. 'target' → logprob: -7.127697944641113
    4. '    
' → logprob: -7.877697944641113
    5. '#' → logprob: -9.627697944641113
    6. '       ' → logprob: -9.877697944641113
    7. '```' → logprob: -9.877697944641113
    8. 'for' → logprob: -10.252697944641113
    9. 'class' → logprob: -10.627697944641113
    10. 'def' → logprob: -10.627697944641113

Token 1517: ' sas' (ID: 51515)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.118721604347229
    2. 'target' → logprob: -2.6187214851379395
    3. '
' → logprob: -3.3687214851379395
    4. '    
' → logprob: -6.2437214851379395
    5. '#' → logprob: -7.2437214851379395
    6. 'for' → logprob: -7.6187214851379395
    7. ' target' → logprob: -8.118721961975098
    8. 'gate' → logprob: -8.493721961975098
    9. '```' → logprob: -8.618721961975098
    10. ' for' → logprob: -9.368721961975098

Token 1518: '_inside' (ID: 191028)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.7751535773277283
    2. '_targets' → logprob: -0.7751535773277283
    3. 's' → logprob: -3.400153636932373
    4. '_target' → logprob: -3.775153636932373
    5. '_state' → logprob: -4.025153636932373
    6. '_levels' → logprob: -6.025153636932373
    7. '_status' → logprob: -6.650153636932373
    8. ' =' → logprob: -7.275153636932373
    9. '_level' → logprob: -10.025153160095215
    10. '_s' → logprob: -10.400153160095215

Token 1519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016079064458608627
    2. ' =' → logprob: -4.141078948974609
    3. 's' → logprob: -10.51607894897461
    4. '=[]' → logprob: -12.26607894897461
    5. '   ' → logprob: -12.51607894897461
    6. '=[' → logprob: -12.64107894897461
    7. '=None' → logprob: -12.89107894897461
    8. '[' → logprob: -13.26607894897461
    9. '=
' → logprob: -14.89107894897461
    10. '=[]
' → logprob: -15.26607894897461

Token 1520: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001843485952122137
    2. '[-' → logprob: -8.750184059143066
    3. ' [' → logprob: -11.375184059143066
    4. '[N' → logprob: -11.875184059143066
    5. '[n' → logprob: -12.250184059143066
    6. '   ' → logprob: -13.750184059143066
    7. '[len' → logprob: -14.250184059143066
    8. '{' → logprob: -14.750184059143066
    9. '[num' → logprob: -16.500185012817383
    10. '[class' → logprob: -17.375185012817383

Token 1521: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.579495235811919e-05
    2. '[' → logprob: -9.50009536743164
    3. ' None' → logprob: -11.25009536743164
    4. '   ' → logprob: -12.25009536743164
    5. '-' → logprob: -12.87509536743164
    6. 'False' → logprob: -15.37509536743164
    7. ' ' → logprob: -16.12509536743164
    8. '(None' → logprob: -16.37509536743164
    9. '       ' → logprob: -16.75009536743164
    10. '
' → logprob: -17.37509536743164

Token 1522: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23905125260353088
    2. ']' → logprob: -1.6140512228012085
    3. 'for' → logprob: -4.739051342010498
    4. ',' → logprob: -6.489051342010498
    5. ' ]' → logprob: -6.489051342010498
    6. '   ' → logprob: -6.739051342010498
    7. ']*' → logprob: -7.864051342010498
    8. ')' → logprob: -9.61405086517334
    9. ',
' → logprob: -10.61405086517334
    10. '	for' → logprob: -10.86405086517334

Token 1523: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15535478293895721
    2. '   ' → logprob: -2.2803547382354736
    3. '<|end|>' → logprob: -3.5303547382354736
    4. '    
' → logprob: -5.155354976654053
    5. 'target' → logprob: -5.530354976654053
    6. '[target' → logprob: -7.530354976654053
    7. 'for' → logprob: -7.905354976654053
    8. '#' → logprob: -8.030354499816895
    9. ' for' → logprob: -8.530354499816895
    10. ',target' → logprob: -8.780354499816895

Token 1524: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04862608388066292
    2. 'len' → logprob: -3.048626184463501
    3. 'M' → logprob: -10.298625946044922
    4. '(len' → logprob: -13.298625946044922
    5. ' N' → logprob: -13.423625946044922
    6. ' len' → logprob: -14.548625946044922
    7. '(N' → logprob: -14.548625946044922
    8. 'K' → logprob: -14.548625946044922
    9. 'Len' → logprob: -15.923625946044922
    10. 'n' → logprob: -16.673625946044922

Token 1525: ' ' (ID: 220)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.6982060670852661
    2. '   ' → logprob: -1.3232060670852661
    3. 'events' → logprob: -1.9482060670852661
    4. '#' → logprob: -4.198205947875977
    5. 'target' → logprob: -4.448205947875977
    6. 'current' → logprob: -4.573205947875977
    7. 'time' → logprob: -4.698205947875977
    8. 'next' → logprob: -5.323205947875977
    9. ',' → logprob: -5.448205947875977
    10. '_event' → logprob: -5.698205947875977

Token 1526: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7301079034805298
    2. 'event' → logprob: -1.1051079034805298
    3. 'events' → logprob: -2.1051077842712402
    4. '
' → logprob: -3.2301077842712402
    5. '    
' → logprob: -4.60510778427124
    6. 'target' → logprob: -5.35510778427124
    7. ',
' → logprob: -6.23010778427124
    8. '#' → logprob: -6.48010778427124
    9. 'time' → logprob: -6.60510778427124
    10. ',' → logprob: -7.10510778427124

Token 1527: ' None' (ID: 4662)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.0268045663833618
    2. 'time' → logprob: -1.5268045663833618
    3. 'event' → logprob: -2.0268044471740723
    4. 'times' → logprob: -2.1518044471740723
    5. 'events' → logprob: -2.1518044471740723
    6. '#' → logprob: -3.4018044471740723
    7. 'level' → logprob: -5.026804447174072
    8. 'heap' → logprob: -5.526804447174072
    9. 'current' → logprob: -5.651804447174072
    10. 'targets' → logprob: -5.776804447174072

Token 1528: ' ou' (ID: 2031)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1529: ' i' (ID: 575)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8403258323669434
    2. 'index' → logprob: -1.0903258323669434
    3. '-' → logprob: -1.5903258323669434
    4. 'ship' → logprob: -3.9653258323669434
    5. 'indice' → logprob: -6.465325832366943
    6. ' index' → logprob: -6.590325832366943
    7. 'integer' → logprob: -6.840325832366943
    8. '-index' → logprob: -6.965325832366943
    9. ' int' → logprob: -7.465325832366943
    10. ' -' → logprob: -7.715325832366943

Token 1530: ' bateau' (ID: 123794)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4891309142112732
    2. '<|end|>' → logprob: -1.489130973815918
    3. 'ship' → logprob: -3.489130973815918
    4. '
' → logprob: -3.489130973815918
    5. '<|end|>' → logprob: -4.239130973815918
    6. '#' → logprob: -4.239130973815918
    7. ']' → logprob: -4.364130973815918
    8. ' for' → logprob: -4.364130973815918
    9. '```' → logprob: -4.989130973815918
    10. 'ships' → logprob: -5.114130973815918

Token 1531: '
' (ID: 198)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.3602714240550995
    2. '   ' → logprob: -1.4852714538574219
    3. 'sas' → logprob: -2.735271453857422
    4. '
' → logprob: -5.360271453857422
    5. '    
' → logprob: -6.485271453857422
    6. 's' → logprob: -6.485271453857422
    7. ' sas' → logprob: -6.860271453857422
    8. '#' → logprob: -8.110271453857422
    9. 'level' → logprob: -8.235271453857422
    10. 'targets' → logprob: -8.360271453857422

Token 1532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2884342074394226
    2. 'target' → logprob: -1.5384342670440674
    3. 'events' → logprob: -4.163434028625488
    4. 'event' → logprob: -4.788434028625488
    5. 'sas' → logprob: -4.913434028625488
    6. '#' → logprob: -6.538434028625488
    7. '    
' → logprob: -6.663434028625488
    8. 'targets' → logprob: -7.538434028625488
    9. 'level' → logprob: -8.163434028625488
    10. '
' → logprob: -8.413434028625488

Token 1533: ' sas' (ID: 51515)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.09634241461753845
    2. 'events' → logprob: -3.2213423252105713
    3. 'event' → logprob: -3.4713423252105713
    4. 'sas' (adapté à ' sas') → logprob: -4.84634256362915
    5. '#' → logprob: -5.47134256362915
    6. '   ' → logprob: -5.72134256362915
    7. 'targets' → logprob: -6.47134256362915
    8. 'level' → logprob: -7.09634256362915
    9. 'time' → logprob: -7.59634256362915
    10. 'current' → logprob: -7.97134256362915

Token 1534: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.3911159634590149
    2. '_targets' → logprob: -1.1411159038543701
    3. '_levels' → logprob: -6.641116142272949
    4. '_states' → logprob: -7.141116142272949
    5. '_wait' → logprob: -7.766116142272949
    6. '_change' → logprob: -8.14111614227295
    7. '_state' → logprob: -8.26611614227295
    8. '_level' → logprob: -8.64111614227295
    9. '_queue' → logprob: -8.89111614227295
    10. '_status' → logprob: -9.26611614227295

Token 1535: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.16150528192520142
    2. '_levels' → logprob: -1.9115052223205566
    3. '=' → logprob: -7.161505222320557
    4. ' =' → logprob: -8.161505699157715
    5. '_' → logprob: -8.911505699157715
    6. 's' → logprob: -9.786505699157715
    7. '_lvl' → logprob: -11.786505699157715
    8. '=_' → logprob: -12.161505699157715
    9. 'Level' → logprob: -12.661505699157715
    10. 'level' → logprob: -12.661505699157715

Token 1536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006718332413583994
    2. ' =' → logprob: -5.006718158721924
    3. 's' → logprob: -13.006718635559082
    4. '=None' → logprob: -14.381718635559082
    5. '=[]' → logprob: -16.381717681884766
    6. '[' → logprob: -18.131717681884766
    7. '   ' → logprob: -18.381717681884766
    8. ' ' → logprob: -18.506717681884766
    9. '=[' → logprob: -18.631717681884766
    10. '＝' → logprob: -19.381717681884766

Token 1537: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003155625017825514
    2. '[N' → logprob: -8.50031566619873
    3. '   ' → logprob: -9.87531566619873
    4. ' [' → logprob: -10.25031566619873
    5. '[n' → logprob: -10.62531566619873
    6. '=[' → logprob: -15.25031566619873
    7. ' ' → logprob: -15.75031566619873
    8. '       ' → logprob: -16.250314712524414
    9. '[self' → logprob: -16.250314712524414
    10. '[len' → logprob: -16.375314712524414

Token 1538: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00027111053350381553
    2. '[' → logprob: -8.25027084350586
    3. ' None' → logprob: -11.75027084350586
    4. '   ' → logprob: -13.25027084350586
    5. '(None' → logprob: -15.87527084350586
    6. '_None' → logprob: -16.50027084350586
    7. '
' → logprob: -18.37527084350586
    8. ',None' → logprob: -18.50027084350586
    9. '.None' → logprob: -18.75027084350586
    10. '       ' → logprob: -19.12527084350586

Token 1539: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010823521297425032
    2. ']*' → logprob: -7.251082420349121
    3. ' ]' → logprob: -8.001082420349121
    4. 'for' → logprob: -11.626082420349121
    5. ' for' → logprob: -11.751082420349121
    6. '   ' → logprob: -11.751082420349121
    7. 'None' → logprob: -12.126082420349121
    8. ',' → logprob: -13.126082420349121
    9. ')' → logprob: -13.501082420349121
    10. ']+' → logprob: -13.876082420349121

Token 1540: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9230952262878418
    2. ' *' → logprob: -1.1730952262878418
    3. ']' → logprob: -1.9230952262878418
    4. ')' → logprob: -2.173095226287842
    5. '   ' → logprob: -4.173095226287842
    6. ']*' → logprob: -5.548095226287842
    7. '[' → logprob: -6.298095226287842
    8. ',' → logprob: -6.423095226287842
    9. '*[' → logprob: -6.423095226287842
    10. '+' → logprob: -6.673095226287842

Token 1541: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.3856492842023727e-06
    2. ' N' → logprob: -13.625000953674316
    3. '(N' → logprob: -17.000001907348633
    4. '
' → logprob: -17.250001907348633
    5. '   ' → logprob: -17.750001907348633
    6. ' ' → logprob: -18.625001907348633
    7. '	N' → logprob: -18.875001907348633
    8. 'len' → logprob: -19.125001907348633
    9. '  ' → logprob: -20.125001907348633
    10. '```' → logprob: -20.125001907348633

Token 1542: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20345057547092438
    2. '
' → logprob: -2.9534506797790527
    3. 'events' → logprob: -3.7034506797790527
    4. '<|end|>' → logprob: -3.9534506797790527
    5. '```' → logprob: -4.078450679779053
    6. ')' → logprob: -4.203450679779053
    7. '    
' → logprob: -4.203450679779053
    8. 'event' → logprob: -4.453450679779053
    9. '#' → logprob: -4.703450679779053
    10. 'time' → logprob: -5.828450679779053

Token 1543: ' #' (ID: 1069)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.7318119406700134
    2. '
' → logprob: -1.2318120002746582
    3. 'event' → logprob: -1.7318120002746582
    4. '   ' → logprob: -3.981812000274658
    5. 'import' → logprob: -4.481812000274658
    6. 'heap' → logprob: -4.481812000274658
    7. '

' → logprob: -6.106812000274658
    8. '
' → logprob: -6.731812000274658
    9. 'times' → logprob: -6.856812000274658
    10. ',
' → logprob: -7.356812000274658

Token 1544: ' None' (ID: 4662)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018165044486522675
    2. 'None' → logprob: -4.018165111541748
    3. ' [' → logprob: -11.89316463470459
    4. 'False' → logprob: -12.39316463470459
    5. '(None' → logprob: -13.39316463470459
    6. ' None' → logprob: -13.76816463470459
    7. '[N' → logprob: -14.51816463470459
    8. '[s' → logprob: -15.39316463470459
    9. '[
' → logprob: -15.39316463470459
    10. '   ' → logprob: -15.76816463470459

Token 1545: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1546: ' pas' (ID: 2173)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.33280065655708313
    2. 'pas' → logprob: -1.5828006267547607
    3. 'None' → logprob: -3.7078006267547607
    4. ' sas' → logprob: -3.7078006267547607
    5. 'not' → logprob: -4.58280086517334
    6. 'no' → logprob: -4.70780086517334
    7. 's' → logprob: -5.95780086517334
    8. 'No' → logprob: -6.08280086517334
    9. ' no' → logprob: -6.95780086517334
    10. ' pas' → logprob: -6.95780086517334

Token 1547: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1924208402633667
    2. 'à' → logprob: -1.3174208402633667
    3. 'de' → logprob: -1.4424208402633667
    4. 'en' → logprob: -2.0674209594726562
    5. ' de' → logprob: -3.9424209594726562
    6. ' en' → logprob: -4.567420959472656
    7. ' à' → logprob: -4.692420959472656
    8. ' d' → logprob: -5.192420959472656
    9. 'None' → logprob: -5.692420959472656
    10. '   ' → logprob: -5.817420959472656

Token 1548: ' changement' (ID: 61912)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.02405603602528572
    2. ' changement' → logprob: -3.8990559577941895
    3. 'change' → logprob: -6.6490559577941895
    4. 'mod' → logprob: -7.0240559577941895
    5. 'target' → logprob: -7.6490559577941895
    6. 'chang' → logprob: -8.649056434631348
    7. 'c' → logprob: -9.149056434631348
    8. 'changer' → logprob: -9.399056434631348
    9. 'transition' → logprob: -9.524056434631348
    10. 'None' → logprob: -9.649056434631348

Token 1549: ' en' (ID: 469)
  Prédit: '_level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_level' → logprob: -1.3681700229644775
    2. 'level' → logprob: -1.4931700229644775
    3. '_levels' → logprob: -1.9931700229644775
    4. '```' → logprob: -2.3681700229644775
    5. '   ' → logprob: -2.9931700229644775
    6. 's' → logprob: -3.2431700229644775
    7. 'levels' → logprob: -3.4931700229644775
    8. 'niveau' → logprob: -4.118169784545898
    9. '_possible' → logprob: -4.118169784545898
    10. 'desired' → logprob: -4.243169784545898

Token 1550: ' cours' (ID: 10138)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cours' → logprob: -9.722539834911004e-05
    2. 'course' → logprob: -10.000097274780273
    3. 'cour' → logprob: -10.375097274780273
    4. 'court' → logprob: -11.000097274780273
    5. 'progress' → logprob: -14.000097274780273
    6. 'cause' → logprob: -14.000097274780273
    7. '
' → logprob: -14.875097274780273
    8. ' cours' → logprob: -15.000097274780273
    9. '   ' → logprob: -15.000097274780273
    10. 'c' → logprob: -15.250097274780273

Token 1551: '
' (ID: 198)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.7062877416610718
    2. '   ' → logprob: -1.5812877416610718
    3. 'events' → logprob: -1.5812877416610718
    4. '#' → logprob: -3.4562878608703613
    5. 'time' → logprob: -4.081287860870361
    6. 'sas' → logprob: -4.456287860870361
    7. 'current' → logprob: -4.956287860870361
    8. '
' → logprob: -5.206287860870361
    9. 'times' → logprob: -5.456287860870361
    10. 'ev' → logprob: -5.706287860870361

Token 1552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46734192967414856
    2. 'sas' → logprob: -1.5923418998718262
    3. 'events' → logprob: -2.342341899871826
    4. 'event' → logprob: -3.217341899871826
    5. 'time' → logprob: -4.342341899871826
    6. '    
' → logprob: -5.592341899871826
    7. '
' → logprob: -5.717341899871826
    8. 'def' → logprob: -5.717341899871826
    9. 'current' → logprob: -6.342341899871826
    10. 'times' → logprob: -6.717341899871826

Token 1553: ' sas' (ID: 51515)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.4851559102535248
    2. 'event' → logprob: -1.1101559400558472
    3. 'sas' (adapté à ' sas') → logprob: -2.9851558208465576
    4. 'heap' → logprob: -6.860156059265137
    5. '#' → logprob: -6.985156059265137
    6. 'time' → logprob: -7.110156059265137
    7. 'queue' → logprob: -7.985156059265137
    8. 'ev' → logprob: -8.485156059265137
    9. 'current' → logprob: -8.735156059265137
    10. 'ship' → logprob: -9.235156059265137

Token 1554: '_level' (ID: 18404)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.31536412239074707
    2. '_level' → logprob: -1.690364122390747
    3. '_levels' → logprob: -3.190364122390747
    4. '_time' → logprob: -4.190363883972168
    5. '_wait' → logprob: -5.190363883972168
    6. '_state' → logprob: -5.190363883972168
    7. '_timer' → logprob: -5.440363883972168
    8. '_times' → logprob: -5.940363883972168
    9. '_inside' → logprob: -6.190363883972168
    10. '_change' → logprob: -6.315363883972168

Token 1555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5425707697868347
    2. ' =' → logprob: -0.9175707697868347
    3. '[:]' → logprob: -4.5425705909729
    4. '   ' → logprob: -5.1675705909729
    5. ']' → logprob: -7.6675705909729
    6. 's' → logprob: -7.6675705909729
    7. '<|end|>' → logprob: -7.6675705909729
    8. '[' → logprob: -7.9175705909729
    9. '=[]' → logprob: -8.292571067810059
    10. '=[' → logprob: -8.542571067810059

Token 1556: ' [' (ID: 723)
  Prédit: '[g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.3419634699821472
    2. '[' → logprob: -1.341963529586792
    3. ' [' → logprob: -3.591963529586792
    4. '[i' → logprob: -8.466963768005371
    5. '[self' → logprob: -9.341963768005371
    6. '   ' → logprob: -9.341963768005371
    7. '[class' → logprob: -9.591963768005371
    8. '[event' → logprob: -9.966963768005371
    9. '[level' → logprob: -10.091963768005371
    10. '[obj' → logprob: -10.091963768005371

Token 1557: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.019599674269557
    2. 'gate' → logprob: -4.144599437713623
    3. 'False' → logprob: -5.644599437713623
    4. ' g' → logprob: -12.269599914550781
    5. 'Gate' → logprob: -12.769599914550781
    6. 'not' → logprob: -13.019599914550781
    7. 'gat' → logprob: -13.144599914550781
    8. ' gates' → logprob: -13.269599914550781
    9. ' False' → logprob: -13.394599914550781
    10. ' gate' → logprob: -13.519599914550781

Token 1558: '.level' (ID: 36989)
  Prédit: '.level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.level' → logprob: -4.36574100604048e-06
    2. 'level' → logprob: -13.000004768371582
    3. '(level' → logprob: -13.750004768371582
    4. '[level' → logprob: -14.250004768371582
    5. '.' → logprob: -16.250003814697266
    6. ' .' → logprob: -16.250003814697266
    7. '.Level' → logprob: -17.125003814697266
    8. '	level' → logprob: -17.875003814697266
    9. '[' → logprob: -18.250003814697266
    10. '   ' → logprob: -18.500003814697266

Token 1559: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02670164220035076
    2. 'for' → logprob: -3.6517016887664795
    3. ']' → logprob: -8.526701927185059
    4. '   ' → logprob: -9.526701927185059
    5. ' ' → logprob: -9.651701927185059
    6. '	for' → logprob: -10.901701927185059
    7. '       ' → logprob: -11.151701927185059
    8. '()' → logprob: -11.776701927185059
    9. '  ' → logprob: -12.401701927185059
    10. '           ' → logprob: -12.401701927185059

Token 1560: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.004385609645396471
    2. ' gates' → logprob: -5.629385471343994
    3. ' g' → logprob: -7.629385471343994
    4. 'gate' → logprob: -8.129385948181152
    5. ' gate' → logprob: -13.379385948181152
    6. '	g' → logprob: -13.754385948181152
    7. 'gat' → logprob: -14.254385948181152
    8. 'gages' → logprob: -15.754385948181152
    9. '
' → logprob: -15.879385948181152
    10. 'guns' → logprob: -16.004384994506836

Token 1561: ' in' (ID: 306)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.42549020051956177
    2. 'in' → logprob: -1.550490140914917
    3. ' in' → logprob: -2.425490140914917
    4. ' gates' → logprob: -4.175490379333496
    5. ' g' → logprob: -4.300490379333496
    6. 'range' → logprob: -5.300490379333496
    7. 'ate' → logprob: -5.550490379333496
    8. 's' → logprob: -5.675490379333496
    9. 'ates' → logprob: -6.050490379333496
    10. 'e' → logprob: -7.800490379333496

Token 1562: ' gates' (ID: 61915)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -6.749814019713085e-06
    2. ' gates' → logprob: -12.000006675720215
    3. 'gages' → logprob: -15.250006675720215
    4. 'gate' → logprob: -15.375006675720215
    5. ' g' → logprob: -18.37500762939453
    6. 'guns' → logprob: -18.62500762939453
    7. '   ' → logprob: -18.75000762939453
    8. '	g' → logprob: -19.37500762939453
    9. '
' → logprob: -20.12500762939453
    10. 'gs' → logprob: -20.25000762939453

Token 1563: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002514455991331488
    2. ' ]' → logprob: -8.875251770019531
    3. ']
' → logprob: -10.125251770019531
    4. 's' → logprob: -10.375251770019531
    5. ')]' → logprob: -11.000251770019531
    6. '()]' → logprob: -11.750251770019531
    7. '   ' → logprob: -12.000251770019531
    8. '])' → logprob: -13.125251770019531
    9. '];' → logprob: -13.625251770019531
    10. ']

' → logprob: -13.625251770019531

Token 1564: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17413319647312164
    2. '    
' → logprob: -2.42413330078125
    3. '
' → logprob: -3.17413330078125
    4. 'events' → logprob: -4.29913330078125
    5. 'for' → logprob: -5.92413330078125
    6. '  
' → logprob: -6.04913330078125
    7. '   
' → logprob: -6.04913330078125
    8. ' 
' → logprob: -6.42413330078125
    9. '```' → logprob: -6.42413330078125
    10. 'event' → logprob: -7.17413330078125

Token 1565: ' #' (ID: 1069)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.4699978828430176
    2. 'events' → logprob: -1.3449978828430176
    3. 'time' → logprob: -2.4699978828430176
    4. 'current' → logprob: -4.219997882843018
    5. '#' (adapté à ' #') → logprob: -4.344997882843018
    6. 'heap' → logprob: -6.844997882843018
    7. 'next' → logprob: -8.21999740600586
    8. '   ' → logprob: -8.34499740600586
    9. 'times' → logprob: -8.96999740600586
    10. 'queue' → logprob: -9.46999740600586

Token 1566: ' Etat' (ID: 197339)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.642494797706604
    2. 'time' → logprob: -1.517494797706604
    3. 'events' → logprob: -1.517494797706604
    4. '#' → logprob: -4.0174946784973145
    5. 'current' → logprob: -4.3924946784973145
    6. 'heap' → logprob: -6.0174946784973145
    7. 'def' → logprob: -7.6424946784973145
    8. 'queue' → logprob: -7.6424946784973145
    9. 'times' → logprob: -8.017495155334473
    10. 'next' → logprob: -8.142495155334473

Token 1567: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3455640077590942
    2. 'time' → logprob: -1.8455640077590942
    3. 'events' → logprob: -1.8455640077590942
    4. 'ships' → logprob: -1.9705640077590942
    5. 'event' → logprob: -2.3455638885498047
    6. '#' → logprob: -2.5955638885498047
    7. 'times' → logprob: -2.5955638885498047
    8. 'ship' → logprob: -4.595563888549805
    9. 'positions' → logprob: -4.595563888549805
    10. 'current' → logprob: -5.470563888549805

Token 1568: ' bate' (ID: 39378)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.058337416499853134
    2. ' ships' → logprob: -3.808337450027466
    3. 'v' → logprob: -4.308337211608887
    4. 'events' → logprob: -4.558337211608887
    5. 'ship' → logprob: -5.933337211608887
    6. 'boats' → logprob: -6.183337211608887
    7. 'temps' → logprob: -7.183337211608887
    8. 'positions' → logprob: -7.433337211608887
    9. 'bate' → logprob: -7.683337211608887
    10. '#' → logprob: -8.183337211608887

Token 1569: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -7.226628895296017e-06
    2. '```' → logprob: -13.000007629394531
    3. 'au' → logprob: -13.500007629394531
    4. 'e' → logprob: -13.750007629394531
    5. 'a' → logprob: -13.875007629394531
    6. 'ux' → logprob: -14.375007629394531
    7. '``' → logprob: -15.375007629394531
    8. 'eux' → logprob: -15.625007629394531
    9. '
' → logprob: -15.750007629394531
    10. '_aux' → logprob: -16.12500762939453

Token 1570: ':
' (ID: 734)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.44311270117759705
    2. 'ship' → logprob: -1.0681127309799194
    3. 'for' → logprob: -5.318112850189209
    4. 'positions' → logprob: -5.818112850189209
    5. 'speed' → logprob: -6.693112850189209
    6. 'boats' → logprob: -6.943112850189209
    7. ' ships' → logprob: -7.443112850189209
    8. '#' → logprob: -7.443112850189209
    9. 'spe' → logprob: -7.443112850189209
    10. '   ' → logprob: -7.568112850189209

Token 1571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7495999336242676
    2. 'ships' → logprob: -0.9995999336242676
    3. 'ship' → logprob: -1.8745999336242676
    4. ' ship' → logprob: -6.374599933624268
    5. ' ships' → logprob: -6.749599933624268
    6. '#' → logprob: -6.874599933624268
    7. 'positions' → logprob: -7.374599933624268
    8. 'for' → logprob: -7.749599933624268
    9. '    
' → logprob: -8.62459945678711
    10. 'speed' → logprob: -8.74959945678711

Token 1572: ' #' (ID: 1069)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.44034379720687866
    2. 'ships' → logprob: -1.1903438568115234
    3. '   ' → logprob: -3.8153438568115234
    4. '#' (adapté à ' #') → logprob: -4.815343856811523
    5. 'speed' → logprob: -5.065343856811523
    6. 'spe' → logprob: -5.315343856811523
    7. 'positions' → logprob: -5.690343856811523
    8. 'for' → logprob: -6.315343856811523
    9. ' ship' → logprob: -6.440343856811523
    10. 'waiting' → logprob: -6.690343856811523

Token 1573: ' position' (ID: 4010)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8144826889038086
    2. 'ship' → logprob: -1.8144826889038086
    3. 'speed' → logprob: -2.1894826889038086
    4. 'spe' → logprob: -2.3144826889038086
    5. 'waiting' → logprob: -2.8144826889038086
    6. '   ' → logprob: -2.9394826889038086
    7. 'ships' → logprob: -3.5644826889038086
    8. 'positions' → logprob: -3.5644826889038086
    9. 'for' → logprob: -5.314482688903809
    10. 'pos' → logprob: -6.939482688903809

Token 1574: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7665159702301025
    2. ' =' → logprob: -1.0165159702301025
    3. 's' → logprob: -1.7665159702301025
    4. 'ships' → logprob: -7.516515731811523
    5. 'es' → logprob: -7.891515731811523
    6. '=[]' → logprob: -8.141515731811523
    7. '[' → logprob: -8.391515731811523
    8. '=[' → logprob: -8.641515731811523
    9. '[:]' → logprob: -9.016515731811523
    10. '=[
' → logprob: -9.016515731811523

Token 1575: ' float' (ID: 4428)
  Prédit: 'km'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'km' → logprob: -0.5963289141654968
    2. '[' → logprob: -1.9713289737701416
    3. 'flo' → logprob: -2.0963289737701416
    4. 'float' → logprob: -2.2213289737701416
    5. ' km' → logprob: -4.0963287353515625
    6. 'f' → logprob: -4.3463287353515625
    7. 'temps' → logprob: -4.3463287353515625
    8. '[]' → logprob: -4.7213287353515625
    9. '#' → logprob: -5.4713287353515625
    10. '[k' → logprob: -5.7213287353515625

Token 1576: '
' (ID: 198)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.03413557633757591
    2. 'ships' → logprob: -4.409135341644287
    3. '   ' → logprob: -4.784135341644287
    4. 'pos' → logprob: -5.034135341644287
    5. 'ship' → logprob: -5.909135341644287
    6. 'position' → logprob: -6.409135341644287
    7. ' positions' → logprob: -7.534135341644287
    8. '#' → logprob: -7.909135341644287
    9. ' =' → logprob: -8.034135818481445
    10. '=' → logprob: -8.034135818481445

Token 1577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07289469987154007
    2. 'positions' → logprob: -3.197894811630249
    3. ',' → logprob: -4.44789457321167
    4. '#' → logprob: -4.94789457321167
    5. 'ships' → logprob: -5.82289457321167
    6. 'position' → logprob: -6.19789457321167
    7. 'ship' → logprob: -6.94789457321167
    8. ',
' → logprob: -6.94789457321167
    9. 'speed' → logprob: -7.19789457321167
    10. '```' → logprob: -7.19789457321167

Token 1578: ' #' (ID: 1069)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.6306689977645874
    2. '   ' → logprob: -1.0056689977645874
    3. 'spe' → logprob: -2.630669116973877
    4. ' speeds' → logprob: -4.505669116973877
    5. '#' (adapté à ' #') → logprob: -5.005669116973877
    6. ' speed' → logprob: -5.130669116973877
    7. 'ships' → logprob: -6.005669116973877
    8. 'ship' → logprob: -6.630669116973877
    9. 'positions' → logprob: -8.005668640136719
    10. '    
' → logprob: -8.130668640136719

Token 1579: ' vitesse' (ID: 71752)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.0019354235846549273
    2. 'spe' → logprob: -7.0019354820251465
    3. ' speed' → logprob: -7.2519354820251465
    4. '#' → logprob: -9.376935005187988
    5. 'velocity' → logprob: -10.251935005187988
    6. '   ' → logprob: -10.376935005187988
    7. 'for' → logprob: -10.626935005187988
    8. '
' → logprob: -10.751935005187988
    9. 'waiting' → logprob: -10.751935005187988
    10. 'current' → logprob: -11.376935005187988

Token 1580: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24226686358451843
    2. '=' → logprob: -1.7422668933868408
    3. 's' → logprob: -3.492266893386841
    4. ',' → logprob: -5.992266654968262
    5. '#' → logprob: -6.867266654968262
    6. '[' → logprob: -7.617266654968262
    7. '=
' → logprob: -7.617266654968262
    8. '=[]' → logprob: -7.742266654968262
    9. '   ' → logprob: -7.992266654968262
    10. 'en' → logprob: -7.992266654968262

Token 1581: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00015240935317706317
    2. ' float' → logprob: -9.000152587890625
    3. 'flo' → logprob: -11.375152587890625
    4. '0' → logprob: -12.250152587890625
    5. 'fl' → logprob: -12.625152587890625
    6. 'f' → logprob: -12.750152587890625
    7. '   ' → logprob: -13.500152587890625
    8. '
' → logprob: -13.750152587890625
    9. '=float' → logprob: -14.000152587890625
    10. 'double' → logprob: -14.375152587890625

Token 1582: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16570493578910828
    2. 'speed' → logprob: -2.7907049655914307
    3. '
' → logprob: -3.7907049655914307
    4. '#' → logprob: -4.040704727172852
    5. ',' → logprob: -4.165704727172852
    6. 'ships' → logprob: -4.290704727172852
    7. ',
' → logprob: -5.540704727172852
    8. 'ship' → logprob: -5.665704727172852
    9. 's' → logprob: -6.040704727172852
    10. '    
' → logprob: -6.415704727172852

Token 1583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02284718118607998
    2. '#' → logprob: -4.2728471755981445
    3. '
' → logprob: -6.2728471755981445
    4. ',' → logprob: -6.2728471755981445
    5. '    
' → logprob: -6.5228471755981445
    6. '```' → logprob: -7.2728471755981445
    7. '<|end|>' → logprob: -7.6478471755981445
    8. 'speed' → logprob: -8.397847175598145
    9. 'v' → logprob: -8.522847175598145
    10. 'ships' → logprob: -8.522847175598145

Token 1584: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6245930194854736
    2. '#' (adapté à ' #') → logprob: -0.9995930194854736
    3. 'speed' → logprob: -2.8745930194854736
    4. 'ship' → logprob: -4.4995927810668945
    5. 'vel' → logprob: -5.2495927810668945
    6. 'ships' → logprob: -5.3745927810668945
    7. 'positions' → logprob: -5.7495927810668945
    8. 'spe' → logprob: -5.9995927810668945
    9. 'waiting' → logprob: -6.1245927810668945
    10. '```' → logprob: -6.6245927810668945

Token 1585: ' done' (ID: 4167)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.13782824575901031
    2. 'done' → logprob: -2.1378283500671387
    3. 'wait' → logprob: -5.137828350067139
    4. 'for' → logprob: -7.262828350067139
    5. 'time' → logprob: -7.512828350067139
    6. '#' → logprob: -7.762828350067139
    7. 'times' → logprob: -7.762828350067139
    8. 'finished' → logprob: -7.887828350067139
    9. 'dist' → logprob: -8.26282787322998
    10. 'max' → logprob: -8.26282787322998

Token 1586: ' bool' (ID: 3792)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19514009356498718
    2. ' =' → logprob: -1.8201401233673096
    3. 's' → logprob: -4.6951398849487305
    4. 'ships' → logprob: -6.5701398849487305
    5. '=
' → logprob: -7.3201398849487305
    6. '#' → logprob: -7.4451398849487305
    7. '_positions' → logprob: -7.4451398849487305
    8. '_states' → logprob: -7.8201398849487305
    9. 'positions' → logprob: -8.07013988494873
    10. '[' → logprob: -8.19513988494873

Token 1587: 'é' (ID: 377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6475850939750671
    2. 'positions' → logprob: -1.147585153579712
    3. 'ships' → logprob: -2.022585153579712
    4. 'ship' → logprob: -5.022584915161133
    5. '```' → logprob: -5.397584915161133
    6. 'states' → logprob: -5.647584915161133
    7. 'position' → logprob: -5.772584915161133
    8. '#' → logprob: -6.147584915161133
    9. ' positions' → logprob: -6.647584915161133
    10. 'state' → logprob: -7.022584915161133

Token 1588: 'en' (ID: 262)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.0035632499493658543
    2. 'ol' → logprob: -6.628563404083252
    3. 'l' → logprob: -8.128562927246094
    4. '[' → logprob: -8.253562927246094
    5. 'a' → logprob: -8.503562927246094
    6. 'n' → logprob: -8.628562927246094
    7. '()' → logprob: -8.628562927246094
    8. '#' → logprob: -8.753562927246094
    9. '=' → logprob: -8.753562927246094
    10. 'al' → logprob: -9.378562927246094

Token 1589: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1251228004693985
    2. 'ships' → logprob: -3.3751227855682373
    3. '#' → logprob: -4.000123023986816
    4. '    
' → logprob: -4.125123023986816
    5. 'positions' → logprob: -4.250123023986816
    6. '```' → logprob: -4.375123023986816
    7. 'ship' → logprob: -5.125123023986816
    8. 'position' → logprob: -5.875123023986816
    9. '
' → logprob: -6.000123023986816
    10. ',' → logprob: -6.000123023986816

Token 1590: ' sortie' (ID: 52761)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.8706696629524231
    2. 'True' → logprob: -0.9956696629524231
    3. 'not' → logprob: -3.3706696033477783
    4. ' ship' → logprob: -3.4956696033477783
    5. 'le' → logprob: -3.7456696033477783
    6. ' True' → logprob: -3.8706696033477783
    7. 'b' → logprob: -4.120669841766357
    8. 'bate' → logprob: -4.370669841766357
    9. ' bateau' → logprob: -4.995669841766357
    10. 'bat' → logprob: -5.120669841766357

Token 1591: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03881834074854851
    2. 'positions' → logprob: -4.288818359375
    3. 'ships' → logprob: -4.413818359375
    4. '#' → logprob: -5.163818359375
    5. 'ship' → logprob: -5.288818359375
    6. 'position' → logprob: -7.538818359375
    7. '    
' → logprob: -8.163818359375
    8. 'pos' → logprob: -9.163818359375
    9. '```' → logprob: -9.288818359375
    10. 'speed' → logprob: -9.538818359375

Token 1592: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015505515038967133
    2. '#' → logprob: -5.140505313873291
    3. '    
' → logprob: -6.140505313873291
    4. 'ships' → logprob: -6.265505313873291
    5. 'positions' → logprob: -6.640505313873291
    6. '```' → logprob: -6.890505313873291
    7. 'events' → logprob: -7.015505313873291
    8. 'for' → logprob: -7.390505313873291
    9. '
' → logprob: -7.515505313873291
    10. 'ship' → logprob: -7.765505313873291

Token 1593: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6725389361381531
    2. 'positions' → logprob: -2.297538995742798
    3. 'time' → logprob: -2.672538995742798
    4. '#' (adapté à ' #') → logprob: -2.672538995742798
    5. 'events' → logprob: -2.797538995742798
    6. 'ships' → logprob: -3.047538995742798
    7. 'ship' → logprob: -3.172538995742798
    8. 'times' → logprob: -3.672538995742798
    9. 'speed' → logprob: -3.797538995742798
    10. 'event' → logprob: -4.422538757324219

Token 1594: ' on' (ID: 402)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -1.066832423210144
    2. 'time' → logprob: -2.3168325424194336
    3. 'events' → logprob: -2.5668325424194336
    4. 'ship' → logprob: -2.5668325424194336
    5. 'times' → logprob: -2.5668325424194336
    6. 'speed' → logprob: -2.6918325424194336
    7. 'spe' → logprob: -2.6918325424194336
    8. '#' → logprob: -2.8168325424194336
    9. 'event' → logprob: -3.3168325424194336
    10. 'for' → logprob: -3.4418325424194336

Token 1595: ' ajoute' (ID: 91611)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.8017425537109375
    2. 'def' → logprob: -2.3017425537109375
    3. '   ' → logprob: -2.4267425537109375
    4. ' =' → logprob: -2.5517425537109375
    5. '       ' → logprob: -2.5517425537109375
    6. 't' → logprob: -3.1767425537109375
    7. 'for' → logprob: -3.1767425537109375
    8. '.append' → logprob: -3.3017425537109375
    9. '#' → logprob: -3.4267425537109375
    10. ' continue' → logprob: -3.4267425537109375

Token 1596: ' index' (ID: 3472)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.809204638004303
    2. '   ' → logprob: -1.9342045783996582
    3. 'ship' → logprob: -2.184204578399658
    4. ' waiting' → logprob: -2.309204578399658
    5. '[' → logprob: -3.434204578399658
    6. ' ship' → logprob: -3.809204578399658
    7. 'last' → logprob: -3.934204578399658
    8. 'a' → logprob: -4.184204578399658
    9. '[]' → logprob: -4.184204578399658
    10. 'ships' → logprob: -4.559204578399658

Token 1597: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8141462206840515
    2. 'ships' → logprob: -1.1891462802886963
    3. '#' → logprob: -3.3141462802886963
    4. ']' → logprob: -3.5641462802886963
    5. ')
' → logprob: -3.6891462802886963
    6. ')' → logprob: -4.064146041870117
    7. 's' → logprob: -4.064146041870117
    8. ' =' → logprob: -4.189146041870117
    9. '
' → logprob: -4.314146041870117
    10. '[
' → logprob: -4.689146041870117

Token 1598: ' gate' (ID: 27172)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.140695333480835
    2. 'l' → logprob: -2.015695333480835
    3. 'ship' → logprob: -2.265695333480835
    4. 'dern' → logprob: -2.765695333480835
    5. 'bate' → logprob: -3.265695333480835
    6. 'front' → logprob: -3.515695333480835
    7. 'der' → logprob: -3.640695333480835
    8. 'la' → logprob: -3.890695333480835
    9. 'g' → logprob: -3.890695333480835
    10. 'pass' → logprob: -4.140695571899414

Token 1599: ' où' (ID: 15113)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6550737619400024
    2. 'ships' → logprob: -2.155073642730713
    3. '   ' → logprob: -2.780073642730713
    4. 'ship' → logprob: -3.030073642730713
    5. '_s' → logprob: -3.530073642730713
    6. '#' → logprob: -3.655073642730713
    7. ']' → logprob: -3.780073642730713
    8. ')' → logprob: -3.905073642730713
    9. '_ship' → logprob: -3.905073642730713
    10. ',' → logprob: -4.030073642730713

Token 1600: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2351093888282776
    2. 'il' → logprob: -1.8601093292236328
    3. 'se' → logprob: -3.985109329223633
    4. 'ils' → logprob: -3.985109329223633
    5. 'ch' → logprob: -5.735109329223633
    6. 'est' → logprob: -5.985109329223633
    7. ' le' → logprob: -5.985109329223633
    8. 's' → logprob: -6.735109329223633
    9. 'cha' → logprob: -6.735109329223633
    10. ' ils' → logprob: -6.985109329223633

Token 1601: ' bateau' (ID: 123794)
  Prédit: 'bate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bate' → logprob: -0.1338513046503067
    2. 'ship' → logprob: -3.1338512897491455
    3. ' bateau' → logprob: -3.2588512897491455
    4. 'b' → logprob: -4.133851528167725
    5. 'boat' → logprob: -4.633851528167725
    6. 'nav' → logprob: -4.883851528167725
    7. 'bat' → logprob: -5.258851528167725
    8. ' ship' → logprob: -6.758851528167725
    9. '#' → logprob: -7.133851528167725
    10. ' bate' → logprob: -8.258851051330566

Token 1602: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.054032884538173676
    2. 'se' → logprob: -3.054032802581787
    3. ' est' → logprob: -6.554032802581787
    4. 'arr' → logprob: -6.804032802581787
    5. ' se' → logprob: -7.054032802581787
    6. 'att' → logprob: -7.554032802581787
    7. 'pass' → logprob: -7.554032802581787
    8. 's' → logprob: -7.679032802581787
    9. 'p' → logprob: -9.429033279418945
    10. 'act' → logprob: -9.554033279418945

Token 1603: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10113680362701416
    2. 'ship' → logprob: -2.4761366844177246
    3. 'ships' → logprob: -5.976136684417725
    4. ' ship' → logprob: -5.976136684417725
    5. 'current' → logprob: -6.351136684417725
    6. '(ship' → logprob: -6.851136684417725
    7. '#' → logprob: -7.351136684417725
    8. 'state' → logprob: -7.476136684417725
    9. 'gate' → logprob: -7.476136684417725
    10. 'position' → logprob: -8.601137161254883

Token 1604: 'si' (ID: 4778)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.0349637269973755
    2. ' None' → logprob: -1.4099637269973755
    3. ')' → logprob: -1.7849637269973755
    4. 'current' → logprob: -3.034963607788086
    5. '=None' → logprob: -3.284963607788086
    6. '0' → logprob: -3.409963607788086
    7. '-' → logprob: -4.159963607788086
    8. ')
' → logprob: -4.409963607788086
    9. '[' → logprob: -4.784963607788086
    10. 'position' → logprob: -4.909963607788086

Token 1605: ' dans' (ID: 2671)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.38940510153770447
    2. 'not' → logprob: -1.8894051313400269
    3. ' None' → logprob: -2.5144050121307373
    4. 'dans' → logprob: -3.2644050121307373
    5. 'inside' → logprob: -4.139405250549316
    6. 'pas' → logprob: -4.514405250549316
    7. ' not' → logprob: -5.139405250549316
    8. 'in' → logprob: -5.264405250549316
    9. ' inside' → logprob: -6.389405250549316
    10. 'à' → logprob: -6.514405250549316

Token 1606: ' sas' (ID: 51515)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.19657684862613678
    2. 'sas' → logprob: -2.4465768337249756
    3. ' None' → logprob: -3.1965768337249756
    4. '-' → logprob: -3.5715768337249756
    5. 'un' → logprob: -5.321577072143555
    6. 'le' → logprob: -5.821577072143555
    7. 's' → logprob: -6.071577072143555
    8. '```' → logprob: -6.571577072143555
    9. 'une' → logprob: -6.696577072143555
    10. '0' → logprob: -6.821577072143555

Token 1607: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9759747982025146
    2. '_' → logprob: -1.4759747982025146
    3. ')
' → logprob: -1.7259747982025146
    4. '_inside' → logprob: -2.3509747982025146
    5. '_level' → logprob: -3.8509747982025146
    6. '_gate' → logprob: -3.9759747982025146
    7. ',' → logprob: -4.600975036621094
    8. '=None' → logprob: -4.975975036621094
    9. '_position' → logprob: -5.100975036621094
    10. '_index' → logprob: -5.350975036621094

Token 1608: ' sinon' (ID: 52915)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7669631838798523
    2. 'ship' → logprob: -2.016963243484497
    3. 'gate' → logprob: -2.641963243484497
    4. ' gate' → logprob: -3.266963243484497
    5. 'current' → logprob: -3.391963243484497
    6. '   ' → logprob: -3.391963243484497
    7. '[' → logprob: -3.766963243484497
    8. 'sas' → logprob: -3.766963243484497
    9. ' #' → logprob: -3.891963243484497
    10. ' current' → logprob: -4.516963005065918

Token 1609: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5495871901512146
    2. 'None' → logprob: -0.9245871901512146
    3. ' None' → logprob: -3.7995872497558594
    4. ' -' → logprob: -5.674587249755859
    5. '-none' → logprob: -9.04958724975586
    6. '   ' → logprob: -9.29958724975586
    7. ' ' → logprob: -11.42458724975586
    8. '[-' → logprob: -11.42458724975586
    9. '
' → logprob: -11.54958724975586
    10. '  ' → logprob: -11.67458724975586

Token 1610: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5809211134910583
    2. 'ship' → logprob: -1.2059211730957031
    3. 'ships' → logprob: -2.455921173095703
    4. '#' → logprob: -4.205921173095703
    5. 'state' → logprob: -4.705921173095703
    6. '
' → logprob: -4.830921173095703
    7. 'position' → logprob: -5.580921173095703
    8. 'positions' → logprob: -5.830921173095703
    9. 'boat' → logprob: -6.455921173095703
    10. 'status' → logprob: -6.455921173095703

Token 1611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2701040208339691
    2. '```' → logprob: -2.270103931427002
    3. 'ships' → logprob: -2.645103931427002
    4. 'ship' → logprob: -4.020103931427002
    5. 'positions' → logprob: -4.270103931427002
    6. '#' → logprob: -5.270103931427002
    7. 'position' → logprob: -5.270103931427002
    8. 'state' → logprob: -5.770103931427002
    9. '    
' → logprob: -5.770103931427002
    10. ' ships' → logprob: -6.020103931427002

Token 1612: ' ship' (ID: 12407)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ship' (adapté à ' ship') → logprob: -0.4782267212867737
    2. '   ' → logprob: -1.353226661682129
    3. 'ships' → logprob: -2.728226661682129
    4. 'gate' → logprob: -4.228226661682129
    5. 'for' → logprob: -4.353226661682129
    6. 'current' → logprob: -4.728226661682129
    7. '#' → logprob: -5.353226661682129
    8. 'boat' → logprob: -5.603226661682129
    9. 'positions' → logprob: -5.728226661682129
    10. '```' → logprob: -6.103226661682129

Token 1613: '_in' (ID: 2267)
  Prédit: '_gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gate' → logprob: -0.34740564227104187
    2. '_states' → logprob: -2.0974056720733643
    3. '_positions' → logprob: -3.0974056720733643
    4. '_s' → logprob: -3.4724056720733643
    5. '_in' → logprob: -3.4724056720733643
    6. 's' → logprob: -3.9724056720733643
    7. '_inside' → logprob: -4.472405433654785
    8. '_state' → logprob: -4.597405433654785
    9. '_indices' → logprob: -4.722405433654785
    10. '_pos' → logprob: -5.972405433654785

Token 1614: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.01125341933220625
    2. '_gate' → logprob: -4.511253356933594
    3. 's' → logprob: -9.886253356933594
    4. '_g' → logprob: -10.011253356933594
    5. '_side' → logprob: -10.136253356933594
    6. '_' → logprob: -10.886253356933594
    7. 'sas' → logprob: -11.261253356933594
    8. 'gate' → logprob: -11.386253356933594
    9. 'side' → logprob: -11.511253356933594
    10. '_ship' → logprob: -12.011253356933594

Token 1615: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.013350214809179306
    2. '_as' → logprob: -5.388350009918213
    3. '_' → logprob: -6.013350009918213
    4. '_s' → logprob: -6.138350009918213
    5. 'sas' → logprob: -7.013350009918213
    6. 'ide' → logprob: -7.263350009918213
    7. 'a' → logprob: -7.388350009918213
    8. 's' → logprob: -7.763350009918213
    9. '[' → logprob: -8.888350486755371
    10. '_a' → logprob: -9.513350486755371

Token 1616: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12953297793865204
    2. ' =' → logprob: -2.129533052444458
    3. 's' → logprob: -6.379532814025879
    4. '=[' → logprob: -8.004532814025879
    5. '=[]' → logprob: -8.379532814025879
    6. '   ' → logprob: -9.504532814025879
    7. '=None' → logprob: -10.004532814025879
    8. '_' → logprob: -10.254532814025879
    9. '_indices' → logprob: -10.754532814025879
    10. '=[]
' → logprob: -10.879532814025879

Token 1617: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005857991054654121
    2. '[N' → logprob: -7.500586032867432
    3. '   ' → logprob: -11.000585556030273
    4. ' [' → logprob: -11.375585556030273
    5. '[n' → logprob: -12.500585556030273
    6. '[-' → logprob: -14.625585556030273
    7. '[len' → logprob: -15.125585556030273
    8. '[num' → logprob: -16.750585556030273
    9. '=[' → logprob: -16.875585556030273
    10. '       ' → logprob: -17.000585556030273

Token 1618: 'None' (ID: 8505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.386900931596756
    2. 'None' → logprob: -1.1369009017944336
    3. '   ' → logprob: -11.136900901794434
    4. ' None' → logprob: -11.636900901794434
    5. ' [' → logprob: -12.386900901794434
    6. '(None' → logprob: -13.511900901794434
    7. '[N' → logprob: -15.261900901794434
    8. '_None' → logprob: -15.636900901794434
    9. '[-' → logprob: -16.26190185546875
    10. 'False' → logprob: -16.51190185546875

Token 1619: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02043946087360382
    2. ' for' → logprob: -4.270439624786377
    3. ']*' → logprob: -5.645439624786377
    4. 'for' → logprob: -6.895439624786377
    5. '   ' → logprob: -6.895439624786377
    6. ' ]' → logprob: -7.770439624786377
    7. ',' → logprob: -8.895439147949219
    8. 'None' → logprob: -10.145439147949219
    9. ')' → logprob: -10.770439147949219
    10. ' ' → logprob: -11.520439147949219

Token 1620: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1621: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.869017852295656e-06
    2. ' M' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.375006675720215
    4. '(M' → logprob: -15.500006675720215
    5. '	M' → logprob: -16.87500762939453
    6. '[M' → logprob: -17.12500762939453
    7. 'М' → logprob: -17.37500762939453
    8. '```' → logprob: -18.25000762939453
    9. '  ' → logprob: -18.62500762939453
    10. 'Ｍ' → logprob: -18.62500762939453

Token 1622: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10241247713565826
    2. 'ship' → logprob: -2.727412462234497
    3. '    
' → logprob: -4.602412700653076
    4. '
' → logprob: -4.852412700653076
    5. '```' → logprob: -5.852412700653076
    6. ' ship' → logprob: -6.102412700653076
    7. 'events' → logprob: -6.352412700653076
    8. 'ships' → logprob: -6.602412700653076
    9. 'positions' → logprob: -7.227412700653076
    10. 'current' → logprob: -7.352412700653076

Token 1623: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5420008301734924
    2. 'time' → logprob: -1.5420007705688477
    3. 'event' → logprob: -2.5420007705688477
    4. 'events' → logprob: -3.2920007705688477
    5. 'current' → logprob: -3.5420007705688477
    6. '#' → logprob: -4.167000770568848
    7. '
' → logprob: -4.292000770568848
    8. 'next' → logprob: -4.292000770568848
    9. 'def' → logprob: -5.167000770568848
    10. 'heap' → logprob: -6.042000770568848

Token 1624: ' #' (ID: 1069)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.7035571932792664
    2. 'time' → logprob: -1.4535572528839111
    3. 'events' → logprob: -1.8285572528839111
    4. '#' (adapté à ' #') → logprob: -2.828557252883911
    5. 'current' → logprob: -3.703557252883911
    6. '   ' → logprob: -3.828557252883911
    7. 'next' → logprob: -6.703557014465332
    8. 'heap' → logprob: -7.078557014465332
    9. 'times' → logprob: -7.578557014465332
    10. 'def' → logprob: -7.578557014465332

Token 1625: ' On' (ID: 2160)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.7762671709060669
    2. 'time' → logprob: -1.401267170906067
    3. 'events' → logprob: -1.526267170906067
    4. 'current' → logprob: -3.5262670516967773
    5. '   ' → logprob: -3.9012670516967773
    6. '#' → logprob: -4.276267051696777
    7. 'heap' → logprob: -4.651267051696777
    8. 'pq' → logprob: -7.151267051696777
    9. 'def' → logprob: -7.651267051696777
    10. 'queue' → logprob: -7.651267051696777

Token 1626: ' définit' (ID: 89835)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7813090682029724
    2. 'def' → logprob: -1.4063091278076172
    3. 'time' → logprob: -2.406309127807617
    4. 'import' → logprob: -2.406309127807617
    5. '
' → logprob: -3.781309127807617
    6. '   ' → logprob: -4.156309127807617
    7. 'pos' → logprob: -4.156309127807617
    8. 'continue' → logprob: -4.531309127807617
    9. 'current' → logprob: -5.031309127807617
    10. 'for' → logprob: -5.406309127807617

Token 1627: ' un' (ID: 537)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.48216721415519714
    2. 'time' → logprob: -1.6071672439575195
    3. 'current' → logprob: -2.8571672439575195
    4. 'import' → logprob: -3.2321672439575195
    5. 'events' → logprob: -3.7321672439575195
    6. 'def' → logprob: -3.9821672439575195
    7. '   ' → logprob: -4.1071672439575195
    8. 't' → logprob: -4.9821672439575195
    9. 'eps' → logprob: -5.6071672439575195
    10. '
' → logprob: -5.7321672439575195

Token 1628: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.2067091017961502
    2. 'event' → logprob: -2.456709146499634
    3. 'import' → logprob: -3.206709146499634
    4. 'queue' → logprob: -3.831709146499634
    5. 'def' → logprob: -4.081708908081055
    6. 'events' → logprob: -4.831708908081055
    7. 'priority' → logprob: -4.956708908081055
    8. '
' → logprob: -6.081708908081055
    9. 'pq' → logprob: -6.081708908081055
    10. 'time' → logprob: -6.831708908081055

Token 1629: ' d' (ID: 272)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.3445839285850525
    2. 'events' → logprob: -2.0945839881896973
    3. '   ' → logprob: -2.4695839881896973
    4. 'heap' → logprob: -3.3445839881896973
    5. ' =' → logprob: -4.094583988189697
    6. ' event' → logprob: -4.594583988189697
    7. '=' → logprob: -5.344583988189697
    8. 'ev' → logprob: -6.094583988189697
    9. 'q' → logprob: -6.219583988189697
    10. '(event' → logprob: -6.344583988189697

Token 1630: ''év' (ID: 114425)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.26871833205223083
    2. '[]' → logprob: -2.8937182426452637
    3. '=[]' → logprob: -3.1437182426452637
    4. 'import' → logprob: -3.2687182426452637
    5. '[]
' → logprob: -3.5187182426452637
    6. '_events' → logprob: -3.8937182426452637
    7. '(events' → logprob: -4.393718242645264
    8. '=[]
' → logprob: -5.018718242645264
    9. '=' → logprob: -5.393718242645264
    10. '_' → logprob: -5.518718242645264

Token 1631: 'ènements' (ID: 178488)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.020968656986951828
    2. 'ent' → logprob: -4.145968437194824
    3. 'events' → logprob: -5.645968437194824
    4. 'priority' → logprob: -8.270968437194824
    5. '   ' → logprob: -8.520968437194824
    6. 'nts' → logprob: -8.645968437194824
    7. 'ènements' → logprob: -8.895968437194824
    8. 'en' → logprob: -9.020968437194824
    9. 'vents' → logprob: -9.145968437194824
    10. 'ts' → logprob: -9.645968437194824

Token 1632: '
' (ID: 198)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.5063671469688416
    2. 'event' → logprob: -1.1313672065734863
    3. '   ' → logprob: -3.3813672065734863
    4. 'heap' → logprob: -3.8813672065734863
    5. '
' → logprob: -4.631367206573486
    6. 'import' → logprob: -5.756367206573486
    7. '```' → logprob: -6.256367206573486
    8. ' events' → logprob: -6.381367206573486
    9. ' event' → logprob: -6.756367206573486
    10. '[]
' → logprob: -7.506367206573486

Token 1633: '   ' (ID: 271)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.6076959371566772
    2. 'events' → logprob: -1.2326959371566772
    3. '
' → logprob: -2.357696056365967
    4. '   ' → logprob: -3.357696056365967
    5. 'heap' → logprob: -4.482696056365967
    6. ' =' → logprob: -4.857696056365967
    7. 'ev' → logprob: -6.357696056365967
    8. ' event' → logprob: -6.482696056365967
    9. ',' → logprob: -6.482696056365967
    10. '```' → logprob: -6.732696056365967

Token 1634: ' event' (ID: 2104)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.25513458251953125
    2. 'event' (adapté à ' event') → logprob: -1.5051345825195312
    3. '   ' → logprob: -6.380134582519531
    4. 'import' → logprob: -6.880134582519531
    5. 'heap' → logprob: -8.005134582519531
    6. ' events' → logprob: -9.755134582519531
    7. ' event' → logprob: -10.130134582519531
    8. '
' → logprob: -10.255134582519531
    9. '```' → logprob: -12.380134582519531
    10. 'queue' → logprob: -13.505134582519531

Token 1635: '_queue' (ID: 25622)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0074790907092392445
    2. '_queue' → logprob: -5.007479190826416
    3. ' =' → logprob: -8.382478713989258
    4. '_heap' → logprob: -8.632478713989258
    5. '=' → logprob: -8.757478713989258
    6. 'q' → logprob: -9.132478713989258
    7. '_s' → logprob: -10.007478713989258
    8. '_p' → logprob: -10.632478713989258
    9. 'queue' → logprob: -12.382478713989258
    10. '_' → logprob: -12.507478713989258

Token 1636: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576956570148468
    2. ' =' → logprob: -0.826956570148468
    3. '=[]' → logprob: -6.951956748962402
    4. '=[]
' → logprob: -10.201956748962402
    5. '   ' → logprob: -10.826956748962402
    6. '  ' → logprob: -14.576956748962402
    7. 'import' → logprob: -14.826956748962402
    8. ' ' → logprob: -15.076956748962402
    9. ' =
' → logprob: -15.201956748962402
    10. '    ' → logprob: -15.201956748962402

Token 1637: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.038077183067798615
    2. ' []' → logprob: -3.2880771160125732
    3. '[]
' → logprob: -10.288077354431152
    4. '[]

' → logprob: -14.538077354431152
    5. ' []
' → logprob: -14.663077354431152
    6. '[' → logprob: -15.288077354431152
    7. '[],' → logprob: -15.788077354431152
    8. '[]}' → logprob: -15.913077354431152
    9. '[]"' → logprob: -16.288076400756836
    10. '[(' → logprob: -16.413076400756836

Token 1638: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7113494277000427
    2. '   ' → logprob: -1.2113494873046875
    3. '#' → logprob: -1.5863494873046875
    4. 'def' → logprob: -6.2113494873046875
    5. ' for' → logprob: -6.5863494873046875
    6. '    
' → logprob: -7.0863494873046875
    7. 'if' → logprob: -7.4613494873046875
    8. 'heap' → logprob: -7.7113494873046875
    9. 'time' → logprob: -7.8363494873046875
    10. '```' → logprob: -7.9613494873046875

Token 1639: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.48412516713142395
    2. 'for' → logprob: -0.9841251373291016
    3. '   ' → logprob: -5.109125137329102
    4. 'def' → logprob: -5.609125137329102
    5. '
' → logprob: -8.984125137329102
    6. '    
' → logprob: -9.984125137329102
    7. ' for' → logprob: -9.984125137329102
    8. 'time' → logprob: -10.609125137329102
    9. 'current' → logprob: -10.734125137329102
    10. ' #' → logprob: -12.234125137329102

Token 1640: ' Certains' (ID: 115500)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6378811001777649
    2. 'for' → logprob: -0.8878811001777649
    3. '   ' → logprob: -2.88788104057312
    4. 'def' → logprob: -5.762881278991699
    5. ' for' → logprob: -6.887881278991699
    6. ' #' → logprob: -9.3878812789917
    7. '
' → logprob: -9.7628812789917
    8. '    
' → logprob: -11.1378812789917
    9. 'current' → logprob: -11.6378812789917
    10. 'initial' → logprob: -11.7628812789917

Token 1641: ' outils' (ID: 63365)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5520676374435425
    2. 'for' → logprob: -1.1770676374435425
    3. 'ships' → logprob: -2.677067756652832
    4. 'def' → logprob: -3.677067756652832
    5. 'spaces' → logprob: -5.552067756652832
    6. 'boats' → logprob: -5.677067756652832
    7. ' for' → logprob: -5.802067756652832
    8. 'initial' → logprob: -6.427067756652832
    9. 'events' → logprob: -6.552067756652832
    10. 'ship' → logprob: -6.552067756652832

Token 1642: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003615870140492916
    2. '#' → logprob: -7.128615856170654
    3. 'for' → logprob: -7.128615856170654
    4. 'import' → logprob: -7.628615856170654
    5. '
' → logprob: -7.878615856170654
    6. ' =' → logprob: -8.253616333007812
    7. '=' → logprob: -8.378616333007812
    8. ' def' → logprob: -8.753616333007812
    9. ')' → logprob: -9.503616333007812
    10. ':' → logprob: -10.128616333007812

Token 1643: ' avancer' (ID: 151163)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005703381262719631
    2. 'i' → logprob: -5.755703449249268
    3. 'pos' → logprob: -7.630703449249268
    4. ' def' → logprob: -7.630703449249268
    5. 'dist' → logprob: -8.25570297241211
    6. 'lambda' → logprob: -8.25570297241211
    7. 'distance' → logprob: -8.50570297241211
    8. '#' → logprob: -8.63070297241211
    9. 'initial' → logprob: -9.00570297241211
    10. 'abs' → logprob: -9.25570297241211

Token 1644: ' un' (ID: 537)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36624079942703247
    2. 'time' → logprob: -1.3662407398223877
    3. 'current' → logprob: -3.4912407398223877
    4. 't' → logprob: -5.616240978240967
    5. '_time' → logprob: -5.616240978240967
    6. '#' → logprob: -6.116240978240967
    7. 'last' → logprob: -6.366240978240967
    8. 'position' → logprob: -6.491240978240967
    9. 'pos' → logprob: -6.616240978240967
    10. 'temps' → logprob: -6.616240978240967

Token 1645: ' bateau' (ID: 123794)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6992812156677246
    2. 'temps' → logprob: -1.5742812156677246
    3. 'pe' → logprob: -2.0742812156677246
    4. 'pas' → logprob: -3.0742812156677246
    5. 'def' → logprob: -3.4492812156677246
    6. 'ep' → logprob: -4.699281215667725
    7. 'u' → logprob: -4.949281215667725
    8. ' peut' → logprob: -5.074281215667725
    9. '#' → logprob: -5.199281215667725
    10. ' peu' → logprob: -5.199281215667725

Token 1646: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016737529076635838
    2. ' def' → logprob: -6.876673698425293
    3. '   ' → logprob: -8.501673698425293
    4. '
' → logprob: -8.876673698425293
    5. '```' → logprob: -9.001673698425293
    6. ':' → logprob: -10.501673698425293
    7. '#' → logprob: -11.001673698425293
    8. 'class' → logprob: -11.001673698425293
    9. '_def' → logprob: -11.251673698425293
    10. ',' → logprob: -11.376673698425293

Token 1647: ' une' (ID: 2463)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.5241034626960754
    2. 'une' → logprob: -1.1491034030914307
    3. 'un' → logprob: -2.7741034030914307
    4. 'la' → logprob: -5.14910364151001
    5. 'l' → logprob: -5.52410364151001
    6. 'time' → logprob: -5.52410364151001
    7. 'son' → logprob: -5.64910364151001
    8. 't' → logprob: -5.64910364151001
    9. 'v' → logprob: -6.14910364151001
    10. 'temp' → logprob: -6.89910364151001

Token 1648: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.14017920196056366
    2. 'certain' → logprob: -3.76517915725708
    3. 'pos' → logprob: -3.89017915725708
    4. 'pas' → logprob: -4.14017915725708
    5. 'distance' → logprob: -4.39017915725708
    6. 'instant' → logprob: -4.39017915725708
    7. 'v' → logprob: -4.76517915725708
    8. 'temps' → logprob: -4.76517915725708
    9. 'step' → logprob: -5.76517915725708
    10. 'place' → logprob: -6.14017915725708

Token 1649: ' donnée' (ID: 130126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006093388888984919
    2. '
' → logprob: -5.506093502044678
    3. ' def' → logprob: -7.756093502044678
    4. '   ' → logprob: -7.881093502044678
    5. '_def' → logprob: -7.881093502044678
    6. '```' → logprob: -8.25609302520752
    7. '_' → logprob: -8.75609302520752
    8. 'class' → logprob: -9.63109302520752
    9. '#' → logprob: -9.63109302520752
    10. '_
' → logprob: -9.75609302520752

Token 1650: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006635877070948482
    2. ' def' → logprob: -7.875663757324219
    3. '
' → logprob: -8.375663757324219
    4. '   ' → logprob: -11.000663757324219
    5. 'class' → logprob: -11.750663757324219
    6. '```' → logprob: -11.875663757324219
    7. 'next' → logprob: -12.500663757324219
    8. 'pos' → logprob: -12.500663757324219
    9. '#' → logprob: -12.625663757324219
    10. 'position' → logprob: -13.125663757324219

Token 1651: ' vitesse' (ID: 71752)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.049958180636167526
    2. 'def' → logprob: -3.9249582290649414
    3. 'fonction' → logprob: -3.9249582290649414
    4. 'temp' → logprob: -5.549958229064941
    5. 'float' → logprob: -6.424958229064941
    6. '#' → logprob: -6.799958229064941
    7. 't' → logprob: -6.924958229064941
    8. 'time' → logprob: -7.924958229064941
    9. 'distance' → logprob: -9.174958229064941
    10. 'fon' → logprob: -9.424958229064941

Token 1652: ' donnée' (ID: 130126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15600579977035522
    2. '_' → logprob: -2.031005859375
    3. ' def' → logprob: -4.656005859375
    4. ')' → logprob: -6.406005859375
    5. ' =' → logprob: -7.531005859375
    6. ' _' → logprob: -7.781005859375
    7. '=' → logprob: -8.531005859375
    8. ' )' → logprob: -8.906005859375
    9. '_def' → logprob: -9.156005859375
    10. '_current' → logprob: -9.406005859375

Token 1653: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002162752440199256
    2. '
' → logprob: -6.502162933349609
    3. ' def' → logprob: -7.502162933349609
    4. '   ' → logprob: -9.87716293334961
    5. '#' → logprob: -11.62716293334961
    6. ')' → logprob: -12.00216293334961
    7. '```' → logprob: -12.00216293334961
    8. ')
' → logprob: -12.37716293334961
    9. '_def' → logprob: -12.50216293334961
    10. ':' → logprob: -12.62716293334961

Token 1654: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008190065622329712
    2. ' def' → logprob: -5.633190155029297
    3. '   ' → logprob: -6.008190155029297
    4. '
' → logprob: -6.383190155029297
    5. '```' → logprob: -8.758190155029297
    6. 'for' → logprob: -9.758190155029297
    7. ' 
' → logprob: -10.008190155029297
    8. '    
' → logprob: -10.383190155029297
    9. '#' → logprob: -10.633190155029297
    10. ')' → logprob: -11.008190155029297

Token 1655: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001375089050270617
    2. '
' → logprob: -9.000137329101562
    3. ' def' → logprob: -11.875137329101562
    4. '   ' → logprob: -12.000137329101562
    5. 'class' → logprob: -14.375137329101562
    6. '    
' → logprob: -16.375137329101562
    7. '#' → logprob: -16.375137329101562
    8. '	def' → logprob: -17.000137329101562
    9. '```' → logprob: -17.500137329101562
    10. '
' → logprob: -18.000137329101562

Token 1656: ' schedule' (ID: 12262)
  Prédit: 'advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'advance' → logprob: -0.21255968511104584
    2. 'schedule' → logprob: -2.087559700012207
    3. 'time' → logprob: -3.337559700012207
    4. ' advance' → logprob: -4.462559700012207
    5. ' schedule' → logprob: -4.962559700012207
    6. 'move' → logprob: -5.462559700012207
    7. 'push' → logprob: -5.587559700012207
    8. 'enqueue' → logprob: -6.587559700012207
    9. 'compute' → logprob: -6.712559700012207
    10. 'estimate' → logprob: -7.212559700012207

Token 1657: '_ship' (ID: 150280)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38558346033096313
    2. '_event' → logprob: -1.6355834007263184
    3. '_' → logprob: -2.6355834007263184
    4. '('' → logprob: -4.385583400726318
    5. '_ship' → logprob: -4.385583400726318
    6. '('_' → logprob: -4.510583400726318
    7. '(event' → logprob: -5.385583400726318
    8. '(_' → logprob: -5.760583400726318
    9. '(
' → logprob: -6.385583400726318
    10. '_move' → logprob: -6.635583400726318

Token 1658: '_arr' (ID: 25121)
  Prédit: '_move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.0900205448269844
    2. '_position' → logprob: -3.3400206565856934
    3. '_' → logprob: -3.8400206565856934
    4. '_event' → logprob: -4.215020656585693
    5. '_pos' → logprob: -5.340020656585693
    6. '_m' → logprob: -5.840020656585693
    7. '_step' → logprob: -5.965020656585693
    8. '_arr' → logprob: -7.090020656585693
    9. '(' → logprob: -7.090020656585693
    10. '_time' → logprob: -7.340020656585693

Token 1659: 'ival' (ID: 4552)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.47504234313964844
    2. 'ival' → logprob: -0.9750423431396484
    3. '_' → logprob: -7.975042343139648
    4. 'iv' → logprob: -8.725042343139648
    5. 'iver' → logprob: -9.100042343139648
    6. '```' → logprob: -9.600042343139648
    7. 'ivée' → logprob: -10.475042343139648
    8. '__' → logprob: -10.975042343139648
    9. '   ' → logprob: -10.975042343139648
    10. 'ibe' → logprob: -10.975042343139648

Token 1660: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010507570579648018
    2. '(ship' → logprob: -4.760507583618164
    3. ' (' → logprob: -7.010507583618164
    4. '(event' → logprob: -7.635507583618164
    5. '(
' → logprob: -7.760507583618164
    6. '(space' → logprob: -11.010507583618164
    7. '(s' → logprob: -11.385507583618164
    8. '_' → logprob: -11.510507583618164
    9. '('' → logprob: -11.510507583618164
    10. '(_' → logprob: -12.260507583618164

Token 1661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8206473871250637e-05
    2. ' ,' → logprob: -10.625028610229492
    3. 'ship' → logprob: -14.000028610229492
    4. '_,' → logprob: -14.375028610229492
    5. '(ship' → logprob: -14.375028610229492
    6. ',
' → logprob: -14.875028610229492
    7. ',pos' → logprob: -15.125028610229492
    8. '_ship' → logprob: -15.125028610229492
    9. '   ' → logprob: -15.250028610229492
    10. ' ' → logprob: -16.875028610229492

Token 1662: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12550266087055206
    2. 'target' → logprob: -3.125502586364746
    3. 'position' → logprob: -3.250502586364746
    4. 'event' → logprob: -4.625502586364746
    5. 'ship' → logprob: -4.750502586364746
    6. 'time' → logprob: -5.250502586364746
    7. 'ships' → logprob: -5.750502586364746
    8. 'dest' → logprob: -6.000502586364746
    9. 'arrival' → logprob: -6.375502586364746
    10. 'gate' → logprob: -6.750502586364746

Token 1663: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18988557159900665
    2. '):' → logprob: -1.8148856163024902
    3. ',' → logprob: -5.06488561630249
    4. ')' → logprob: -5.93988561630249
    5. '   ' → logprob: -7.93988561630249
    6. ' ):
' → logprob: -8.689885139465332
    7. '):
' → logprob: -8.689885139465332
    8. '):

' → logprob: -9.064885139465332
    9. ' ):' → logprob: -9.564885139465332
    10. '=' → logprob: -9.564885139465332

Token 1664: ' current' (ID: 2208)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.034149397164583206
    2. 't' → logprob: -3.534149408340454
    3. ' time' → logprob: -6.409149169921875
    4. 'current' → logprob: -6.784149169921875
    5. ' t' → logprob: -7.159149169921875
    6. 'curr' → logprob: -8.409149169921875
    7. 'speed' → logprob: -8.534149169921875
    8. 'cur' → logprob: -8.909149169921875
    9. ')' → logprob: -9.409149169921875
    10. ' current' → logprob: -10.034149169921875

Token 1665: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0029990968760102987
    2. 'time' → logprob: -6.502999305725098
    3. '_' → logprob: -6.877999305725098
    4. '_t' → logprob: -8.252999305725098
    5. 't' → logprob: -10.252999305725098
    6. ',' → logprob: -10.252999305725098
    7. '_speed' → logprob: -10.377999305725098
    8. ')' → logprob: -10.627999305725098
    9. '_pos' → logprob: -10.752999305725098
    10. '
' → logprob: -11.127999305725098

Token 1666: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4133860468864441
    2. '):
' → logprob: -1.1633861064910889
    3. ',' → logprob: -3.663386106491089
    4. '):
' → logprob: -8.288386344909668
    5. '   ' → logprob: -9.163386344909668
    6. ')' → logprob: -9.413386344909668
    7. ' ):' → logprob: -10.288386344909668
    8. '):

' → logprob: -10.663386344909668
    9. ' ):
' → logprob: -12.288386344909668
    10. ' ,' → logprob: -12.288386344909668

Token 1667: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04657156020402908
    2. ':' → logprob: -3.7965714931488037
    3. '   ' → logprob: -4.796571731567383
    4. '    ' → logprob: -5.546571731567383
    5. '```' → logprob: -6.046571731567383
    6. ':
' → logprob: -6.421571731567383
    7. ',' → logprob: -6.546571731567383
    8. '):
' → logprob: -6.671571731567383
    9. ' :' → logprob: -7.796571731567383
    10. ' 
' → logprob: -7.796571731567383

Token 1668: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2375008463859558
    2. 'dist' → logprob: -2.9875009059906006
    3. 'time' → logprob: -3.1125009059906006
    4. '       ' → logprob: -3.3625009059906006
    5. 'distance' → logprob: -3.9875009059906006
    6. '
' → logprob: -4.1125006675720215
    7. 'speed' → logprob: -4.7375006675720215
    8. 'if' → logprob: -4.8625006675720215
    9. 'vel' → logprob: -5.1125006675720215
    10. 'velocity' → logprob: -5.6125006675720215

Token 1669: ' Cal' (ID: 4453)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9264650940895081
    2. 'if' → logprob: -1.4264650344848633
    3. 'distance' → logprob: -1.6764650344848633
    4. '   ' → logprob: -2.8014650344848633
    5. 'time' → logprob: -3.0514650344848633
    6. 'speed' → logprob: -4.176465034484863
    7. 'non' → logprob: -4.551465034484863
    8. 'dt' → logprob: -4.801465034484863
    9. '       ' → logprob: -4.801465034484863
    10. 'delta' → logprob: -5.051465034484863

Token 1670: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5707565546035767
    2. 'l' → logprob: -1.0707565546035767
    3. 'cul' → logprob: -3.320756435394287
    4. 'cule' → logprob: -3.445756435394287
    5. 'culate' → logprob: -3.820756435394287
    6. 'culated' → logprob: -7.195756435394287
    7. 'ct' → logprob: -8.195756912231445
    8. 'end' → logprob: -9.195756912231445
    9. 'culator' → logprob: -9.320756912231445
    10. 'cular' → logprob: -9.445756912231445

Token 1671: ' temps' (ID: 11160)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7766249775886536
    2. ' time' → logprob: -1.9016249179840088
    3. '       ' → logprob: -2.276624917984009
    4. 'time' → logprob: -2.651624917984009
    5. ' t' → logprob: -2.901624917984009
    6. ' l' → logprob: -3.151624917984009
    7. '_time' → logprob: -3.151624917984009
    8. ' la' → logprob: -3.651624917984009
    9. 't' → logprob: -4.526625156402588
    10. '   ' → logprob: -4.776625156402588

Token 1672: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.748478353023529
    2. '=' → logprob: -0.873478353023529
    3. '_' → logprob: -3.123478412628174
    4. '       ' → logprob: -4.123478412628174
    5. ' +=' → logprob: -4.248478412628174
    6. '+=' → logprob: -4.748478412628174
    7. '_=' → logprob: -5.498478412628174
    8. '+' → logprob: -5.748478412628174
    9. 's' → logprob: -5.873478412628174
    10. '_next' → logprob: -6.248478412628174

Token 1673: ' que' (ID: 661)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1786880493164062
    2. 'arr' → logprob: -1.3036880493164062
    3. 'schedule' → logprob: -1.6786880493164062
    4. 'arrival' → logprob: -2.6786880493164062
    5. '(i' → logprob: -2.8036880493164062
    6. '   ' → logprob: -3.6786880493164062
    7. '       ' → logprob: -4.803688049316406
    8. 'return' → logprob: -5.053688049316406
    9. '(pos' → logprob: -5.053688049316406
    10. 'position' → logprob: -5.053688049316406

Token 1674: ' bateau' (ID: 123794)
  Prédit: ' ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ship' → logprob: -1.3714216947555542
    2. 'ship' → logprob: -1.6214216947555542
    3. 'arrival' → logprob: -1.9964216947555542
    4. ' arrival' → logprob: -2.6214218139648438
    5. 'next' → logprob: -3.2464218139648438
    6. 'heap' → logprob: -3.2464218139648438
    7. 'distance' → logprob: -3.6214218139648438
    8. 'pos' → logprob: -3.6214218139648438
    9. 'speed' → logprob: -3.7464218139648438
    10. ' next' → logprob: -3.8714218139648438

Token 1675: ' i' (ID: 575)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6395907998085022
    2. '=' → logprob: -1.7645907402038574
    3. '_arr' → logprob: -2.5145907402038574
    4. '       ' → logprob: -2.5145907402038574
    5. '   ' → logprob: -3.1395907402038574
    6. ' arrives' → logprob: -4.264590740203857
    7. ' arrive' → logprob: -4.514590740203857
    8. ' =' → logprob: -4.889590740203857
    9. '_schedule' → logprob: -4.889590740203857
    10. '=i' → logprob: -5.139590740203857

Token 1676: ' atte' (ID: 43312)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5472924709320068
    2. 'arr' → logprob: -1.5472924709320068
    3. '       ' → logprob: -1.7972924709320068
    4. ' arrive' → logprob: -2.422292470932007
    5. '=' → logprob: -2.797292470932007
    6. '   ' → logprob: -3.047292470932007
    7. ''arrive' → logprob: -3.047292470932007
    8. ' atte' → logprob: -3.172292470932007
    9. '           ' → logprob: -4.297292709350586
    10. ' arrives' → logprob: -4.547292709350586

Token 1677: 'igne' (ID: 24120)
  Prédit: 'indre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.2640931010246277
    2. 'igne' → logprob: -1.6390931606292725
    3. 'inte' → logprob: -4.389092922210693
    4. 'int' → logprob: -4.389092922210693
    5. 'ive' → logprob: -5.514092922210693
    6. 'ind' → logprob: -5.639092922210693
    7. 'nd' → logprob: -5.764092922210693
    8. 'ing' → logprob: -7.889092922210693
    9. 'ins' → logprob: -8.139093399047852
    10. '   ' → logprob: -8.264093399047852

Token 1678: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.17980945110321045
    2. ' pos' → logprob: -1.8048094511032104
    3. '(pos' → logprob: -10.4298095703125
    4. 'position' → logprob: -10.9298095703125
    5. ' position' → logprob: -12.3048095703125
    6. '_pos' → logprob: -12.3048095703125
    7. '	pos' → logprob: -12.9298095703125
    8. ' (' → logprob: -13.3048095703125
    9. ''' → logprob: -14.0548095703125
    10. '   ' → logprob: -14.4298095703125

Token 1679: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8166032433509827
    2. '=' → logprob: -0.9416032433509827
    3. '       ' → logprob: -2.816603183746338
    4. ' if' → logprob: -3.316603183746338
    5. '
' → logprob: -4.191603183746338
    6. ',' → logprob: -4.191603183746338
    7. ':' → logprob: -4.691603183746338
    8. ' (' → logprob: -5.316603183746338
    9. 'if' → logprob: -5.316603183746338
    10. '           ' → logprob: -5.441603183746338

Token 1680: ' vitesse' (ID: 71752)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.20263585448265076
    2. ' current' → logprob: -1.8276358842849731
    3. 'speed' → logprob: -4.577635765075684
    4. 'max' → logprob: -5.702635765075684
    5. 'v' → logprob: -5.952635765075684
    6. ' vitesse' → logprob: -6.202635765075684
    7. ' speed' → logprob: -6.827635765075684
    8. '(current' → logprob: -7.452635765075684
    9. ' max' → logprob: -7.452635765075684
    10. 'time' → logprob: -7.952635765075684

Token 1681: ' cour' (ID: 2871)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.38606318831443787
    2. ' ships' → logprob: -2.0110630989074707
    3. '(i' → logprob: -3.3860630989074707
    4. ' (' → logprob: -3.5110630989074707
    5. ' i' → logprob: -3.6360630989074707
    6. '[i' → logprob: -4.136063098907471
    7. ' ' → logprob: -4.261063098907471
    8. 'ship' → logprob: -4.386063098907471
    9. '(ship' → logprob: -4.761063098907471
    10. ' ship' → logprob: -5.511063098907471

Token 1682: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.1187797263264656
    2. 'ant' → logprob: -2.9937796592712402
    3. '   ' → logprob: -3.9937796592712402
    4. 'ent' → logprob: -4.49377965927124
    5. '=' → logprob: -4.99377965927124
    6. ')' → logprob: -5.49377965927124
    7. 'ente' → logprob: -5.61877965927124
    8. '       ' → logprob: -5.74377965927124
    9. 'r' → logprob: -6.24377965927124
    10. '```' → logprob: -6.49377965927124

Token 1683: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.6423085927963257
    2. '(' → logprob: -1.8923085927963257
    3. '   ' → logprob: -2.1423087120056152
    4. '       ' → logprob: -2.5173087120056152
    5. ':' → logprob: -2.8923087120056152
    6. ')' → logprob: -3.1423087120056152
    7. ',' → logprob: -3.1423087120056152
    8. 'return' → logprob: -3.3923087120056152
    9. ''' → logprob: -3.6423087120056152
    10. 'if' → logprob: -3.7673087120056152

Token 1684: ' si' (ID: 1784)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -1.188726544380188
    2. 'time' → logprob: -1.188726544380188
    3. ' heap' → logprob: -2.5637264251708984
    4. 't' → logprob: -3.3137264251708984
    5. ' t' → logprob: -3.3137264251708984
    6. ' if' → logprob: -3.4387264251708984
    7. ' temps' → logprob: -3.4387264251708984
    8. 'delay' → logprob: -3.5637264251708984
    9. 'if' → logprob: -3.6887264251708984
    10. 'temps' → logprob: -3.9387264251708984

Token 1685: ' possible' (ID: 4149)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.0778755322098732
    2. 'abs' → logprob: -2.8278756141662598
    3. 'pos' → logprob: -4.57787561416626
    4. 'ship' → logprob: -6.20287561416626
    5. ' ships' → logprob: -6.32787561416626
    6. 'speed' → logprob: -6.95287561416626
    7. ' abs' → logprob: -8.577875137329102
    8. 'schedule' → logprob: -8.952875137329102
    9. 'v' → logprob: -9.577875137329102
    10. 'math' → logprob: -9.827875137329102

Token 1686: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0691797211766243
    2. 'if' → logprob: -3.6941797733306885
    3. '   ' → logprob: -4.694179534912109
    4. ' if' → logprob: -4.944179534912109
    5. '
' → logprob: -5.194179534912109
    6. ',' → logprob: -5.319179534912109
    7. ':' → logprob: -5.819179534912109
    8. '        
' → logprob: -6.194179534912109
    9. 'return' → logprob: -6.319179534912109
    10. '```' → logprob: -6.444179534912109

Token 1687: 'pos' (ID: 1103)
  Prédit: ' speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' speed' → logprob: -1.2121809720993042
    2. 'speed' → logprob: -1.5871809720993042
    3. ' pos' → logprob: -1.8371809720993042
    4. ' return' → logprob: -2.5871810913085938
    5. ' ship' → logprob: -2.8371810913085938
    6. 'pos' → logprob: -2.8371810913085938
    7. 'ship' → logprob: -3.2121810913085938
    8. ' current' → logprob: -3.8371810913085938
    9. 'return' → logprob: -4.087181091308594
    10. ')' → logprob: -4.337181091308594

Token 1688: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.240021213889122
    2. '>' → logprob: -2.365021228790283
    3. ' -' → logprob: -2.615021228790283
    4. ' >=' → logprob: -3.615021228790283
    5. '>=' → logprob: -4.990021228790283
    6. '-' → logprob: -5.740021228790283
    7. ' !=' → logprob: -5.990021228790283
    8. ')' → logprob: -6.240021228790283
    9. ' <=' → logprob: -6.365021228790283
    10. ' <' → logprob: -7.490021228790283

Token 1689: ' pos' (ID: 1253)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.016621800139546394
    2. ' ships' → logprob: -4.1416215896606445
    3. 'ship' → logprob: -7.8916215896606445
    4. '   ' → logprob: -9.891621589660645
    5. '=' → logprob: -10.016621589660645
    6. ' ship' → logprob: -11.391621589660645
    7. '```' → logprob: -11.391621589660645
    8. 'Ships' → logprob: -11.516621589660645
    9. 'self' → logprob: -11.641621589660645
    10. ' ' → logprob: -11.766621589660645

Token 1690: ' cour' (ID: 2871)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.033368226140737534
    2. '[' → logprob: -4.158368110656738
    3. 's' → logprob: -5.158368110656738
    4. '[
' → logprob: -5.408368110656738
    5. ')' → logprob: -5.533368110656738
    6. '):
' → logprob: -7.908368110656738
    7. '_' → logprob: -7.908368110656738
    8. ')
' → logprob: -7.908368110656738
    9. ']' → logprob: -8.158368110656738
    10. '_[' → logprob: -8.908368110656738

Token 1691: 'ante' (ID: 2116)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15610258281230927
    2. ' )' → logprob: -3.0311026573181152
    3. '+' → logprob: -3.5311026573181152
    4. ' +' → logprob: -4.406102657318115
    5. '   ' → logprob: -4.531102657318115
    6. '       ' → logprob: -4.781102657318115
    7. 'u' → logprob: -5.406102657318115
    8. '):
' → logprob: -5.781102657318115
    9. '    ' → logprob: -6.156102657318115
    10. '  ' → logprob: -6.156102657318115

Token 1692: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.714910089969635
    2. '):
' → logprob: -1.3399100303649902
    3. ')
' → logprob: -1.7149100303649902
    4. ' and' → logprob: -3.9649100303649902
    5. '):' → logprob: -4.21491003036499
    6. '       ' → logprob: -4.96491003036499
    7. '+' → logprob: -4.96491003036499
    8. ' )
' → logprob: -5.96491003036499
    9. ' )' → logprob: -6.21491003036499
    10. '           ' → logprob: -6.21491003036499

Token 1693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21180608868598938
    2. ':' → logprob: -2.586806058883667
    3. '):
' → logprob: -2.961806058883667
    4. ':
' → logprob: -4.086806297302246
    5. '):' → logprob: -4.086806297302246
    6. '
' → logprob: -4.711806297302246
    7. ')' → logprob: -5.336806297302246
    8. '```' → logprob: -5.586806297302246
    9. '   ' → logprob: -5.711806297302246
    10. ')
' → logprob: -6.586806297302246

Token 1694: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5892742872238159
    2. 'if' → logprob: -1.214274287223816
    3. '
' → logprob: -2.4642744064331055
    4. '   ' → logprob: -3.8392744064331055
    5. ' if' → logprob: -3.8392744064331055
    6. '        
' → logprob: -5.4642744064331055
    7. '```' → logprob: -5.5892744064331055
    8. ' 
' → logprob: -6.4642744064331055
    9. 'current' → logprob: -6.7142744064331055
    10. 'ship' → logprob: -6.9642744064331055

Token 1695: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36806169152259827
    2. ' if' → logprob: -2.2430617809295654
    3. '       ' → logprob: -2.3680617809295654
    4. '
' → logprob: -3.6180617809295654
    5. '   ' → logprob: -3.6180617809295654
    6. '```' → logprob: -3.9930617809295654
    7. 'speed' → logprob: -4.868061542510986
    8. 'time' → logprob: -5.243061542510986
    9. 'pos' → logprob: -5.243061542510986
    10. 'current' → logprob: -5.368061542510986

Token 1696: ' vitesse' (ID: 71752)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.1762153059244156
    2. ' ships' → logprob: -2.051215410232544
    3. 'pos' → logprob: -3.801215410232544
    4. ' pos' → logprob: -5.176215171813965
    5. 'ship' → logprob: -5.676215171813965
    6. ' ship' → logprob: -7.551215171813965
    7. 'abs' → logprob: -7.676215171813965
    8. ' abs' → logprob: -8.551215171813965
    9. 'speed' → logprob: -9.801215171813965
    10. '   ' → logprob: -10.176215171813965

Token 1697: '=' (ID: 28)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15593236684799194
    2. ' >' → logprob: -2.2809324264526367
    3. '[i' → logprob: -4.280932426452637
    4. '==' → logprob: -4.530932426452637
    5. '<=' → logprob: -5.280932426452637
    6. ' <=' → logprob: -5.780932426452637
    7. '=' → logprob: -6.030932426452637
    8. '   ' → logprob: -6.280932426452637
    9. ' ==' → logprob: -6.655932426452637
    10. '_' → logprob: -6.905932426452637

Token 1698: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001825642102630809
    2. ' ' → logprob: -8.625182151794434
    3. '>' → logprob: -13.000182151794434
    4. '   ' → logprob: -14.750182151794434
    5. ' >' → logprob: -16.75018310546875
    6. '=' → logprob: -17.12518310546875
    7. '1' → logprob: -17.37518310546875
    8. '  ' → logprob: -17.50018310546875
    9. 'None' → logprob: -17.50018310546875
    10. '       ' → logprob: -18.12518310546875

Token 1699: ' ou' (ID: 2031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14606696367263794
    2. ':
' → logprob: -2.646066904067993
    3. '           ' → logprob: -3.896066904067993
    4. ' ==' → logprob: -4.521067142486572
    5. '==' → logprob: -5.021067142486572
    6. ' and' → logprob: -5.146067142486572
    7. '       ' → logprob: -5.396067142486572
    8. ' :' → logprob: -5.646067142486572
    9. ':return' → logprob: -5.771067142486572
    10. ' or' → logprob: -5.771067142486572

Token 1700: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03129756450653076
    2. ' pos' → logprob: -3.5312976837158203
    3. 'abs' → logprob: -7.28129768371582
    4. 'ship' → logprob: -8.53129768371582
    5. 'ships' → logprob: -9.03129768371582
    6. '(pos' → logprob: -9.03129768371582
    7. ' ship' → logprob: -9.40629768371582
    8. '   ' → logprob: -9.65629768371582
    9. 'position' → logprob: -9.90629768371582
    10. 'current' → logprob: -10.15629768371582

Token 1701: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2958284914493561
    2. '<=' → logprob: -2.2958285808563232
    3. ' <' → logprob: -2.6708285808563232
    4. ' >' → logprob: -2.7958285808563232
    5. '>' → logprob: -4.045828342437744
    6. '<' → logprob: -5.295828342437744
    7. '_' → logprob: -7.170828342437744
    8. ' >=' → logprob: -7.670828342437744
    9. ' ==' → logprob: -8.045828819274902
    10. '==' → logprob: -8.420828819274902

Token 1702: ' position' (ID: 4010)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.010786871425807476
    2. ' ships' → logprob: -4.635787010192871
    3. 'ship' → logprob: -7.010787010192871
    4. '   ' → logprob: -10.385787010192871
    5. 'self' → logprob: -10.385787010192871
    6. 'positions' → logprob: -10.885787010192871
    7. 'pos' → logprob: -11.260787010192871
    8. ' ship' → logprob: -11.510787010192871
    9. 'current' → logprob: -12.385787010192871
    10. ' ' → logprob: -12.885787010192871

Token 1703: ' actuelle' (ID: 104951)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00884217582643032
    2. ':' → logprob: -5.1338419914245605
    3. ',' → logprob: -6.7588419914245605
    4. '[' → logprob: -7.5088419914245605
    5. '_' → logprob: -7.6338419914245605
    6. '_i' → logprob: -9.008842468261719
    7. '(i' → logprob: -9.258842468261719
    8. '```' → logprob: -9.383842468261719
    9. '   ' → logprob: -9.633842468261719
    10. 'i' → logprob: -9.758842468261719

Token 1704: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3293997049331665
    2. ':' → logprob: -1.3293997049331665
    3. '           ' → logprob: -4.829399585723877
    4. '       ' → logprob: -5.829399585723877
    5. ',' → logprob: -6.454399585723877
    6. ':return' → logprob: -6.579399585723877
    7. '):
' → logprob: -6.829399585723877
    8. ')' → logprob: -8.454400062561035
    9. '   ' → logprob: -8.579400062561035
    10. ' or' → logprob: -9.204400062561035

Token 1705: ' pas' (ID: 2173)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6549680233001709
    2. 'return' → logprob: -0.9049680233001709
    3. '           ' → logprob: -3.279968023300171
    4. '       ' → logprob: -3.779968023300171
    5. '	return' → logprob: -4.90496826171875
    6. '   ' → logprob: -4.90496826171875
    7. '    ' → logprob: -7.77996826171875
    8. '
' → logprob: -9.90496826171875
    9. '	' → logprob: -10.15496826171875
    10. '	   ' → logprob: -10.40496826171875

Token 1706: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9318167567253113
    2. '       ' → logprob: -1.806816816329956
    3. '   ' → logprob: -2.431816816329956
    4. '_' → logprob: -2.556816816329956
    5. ' de' → logprob: -3.306816816329956
    6. '    ' → logprob: -3.681816816329956
    7. ' return' → logprob: -3.681816816329956
    8. ' _' → logprob: -3.806816816329956
    9. ' )' → logprob: -3.931816816329956
    10. ' ' → logprob: -4.431816577911377

Token 1707: ''év' (ID: 114425)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7399400472640991
    2. 'ef' → logprob: -1.2399400472640991
    3. 'éf' → logprob: -2.4899401664733887
    4. 'return' → logprob: -3.3649401664733887
    5. ' schedule' → logprob: -3.9899401664733887
    6. 'é' → logprob: -4.239940166473389
    7. 'elay' → logprob: -4.489940166473389
    8. ' ' → logprob: -4.739940166473389
    9. 'efined' → logprob: -4.989940166473389
    10. 'e' → logprob: -4.989940166473389

Token 1708: 'ènement' (ID: 132303)
  Prédit: 'énement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'énement' → logprob: -0.4169999361038208
    2. 'ènement' → logprob: -1.5419999361038208
    3. 'ent' → logprob: -2.1669998168945312
    4. 'al' → logprob: -5.541999816894531
    5. 'ément' → logprob: -6.541999816894531
    6. 'ement' → logprob: -6.791999816894531
    7. 'en' → logprob: -7.416999816894531
    8. 'el' → logprob: -7.541999816894531
    9. 'nt' → logprob: -7.666999816894531
    10. 'alent' → logprob: -7.666999816894531

Token 1709: ' génér' (ID: 18939)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2585562467575073
    2. '   ' → logprob: -1.8835562467575073
    3. 'if' → logprob: -3.883556365966797
    4. ':' → logprob: -4.133556365966797
    5. ' if' → logprob: -4.883556365966797
    6. ':
' → logprob: -5.008556365966797
    7. '    
' → logprob: -5.633556365966797
    8. '\n' → logprob: -5.633556365966797
    9. ')
' → logprob: -5.758556365966797
    10. '        
' → logprob: -5.883556365966797

Token 1710: 'é' (ID: 377)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.1822296679019928
    2. '''' → logprob: -2.55722975730896
    3. ')' → logprob: -2.93222975730896
    4. 't' → logprob: -4.182229518890381
    5. '')' → logprob: -5.432229518890381
    6. 'é' → logprob: -5.807229518890381
    7. '()' → logprob: -6.182229518890381
    8. 'te' → logprob: -6.307229518890381
    9. 'ated' → logprob: -6.682229518890381
    10. 'er' → logprob: -6.682229518890381

Token 1711: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24659711122512817
    2. '
' → logprob: -2.8715970516204834
    3. '   ' → logprob: -2.8715970516204834
    4. '\n' → logprob: -3.6215970516204834
    5. '        
' → logprob: -3.9965970516204834
    6. '    
' → logprob: -4.2465972900390625
    7. ':
' → logprob: -4.6215972900390625
    8. 'if' → logprob: -4.7465972900390625
    9. ' 
' → logprob: -5.2465972900390625
    10. ':' → logprob: -5.6215972900390625

Token 1712: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08045491576194763
    2. '   ' → logprob: -2.5804548263549805
    3. '        
' → logprob: -7.7054548263549805
    4. '    
' → logprob: -7.9554548263549805
    5. '
' → logprob: -8.33045482635498
    6. '```' → logprob: -9.20545482635498
    7. '           ' → logprob: -9.58045482635498
    8. ')' → logprob: -9.70545482635498
    9. '):
' → logprob: -10.45545482635498
    10. 'if' → logprob: -10.45545482635498

Token 1713: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2807270288467407
    2. '
' → logprob: -1.9057270288467407
    3. '   ' → logprob: -2.405726909637451
    4. '    
' → logprob: -6.280726909637451
    5. '        
' → logprob: -6.655726909637451
    6. 'if' → logprob: -7.155726909637451
    7. '\n' → logprob: -8.15572738647461
    8. ' 
' → logprob: -8.28072738647461
    9. ' if' → logprob: -8.40572738647461
    10. '           ' → logprob: -8.65572738647461

Token 1714: ' =' (ID: 314)
  Prédit: 'peed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peed' → logprob: -0.05689304322004318
    2. ' =' → logprob: -3.3068931102752686
    3. 'pace' → logprob: -5.4318928718566895
    4. '_' → logprob: -5.5568928718566895
    5. '=' → logprob: -6.0568928718566895
    6. '.' → logprob: -6.1818928718566895
    7. 'p' → logprob: -6.5568928718566895
    8. '   ' → logprob: -7.5568928718566895
    9. 'chedule' → logprob: -7.6818928718566895
    10. ',' → logprob: -7.8068928718566895

Token 1715: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.0003442832676228136
    2. ' ships' → logprob: -8.000344276428223
    3. 'ship' → logprob: -12.125344276428223
    4. 'speed' → logprob: -13.625344276428223
    5. '   ' → logprob: -14.125344276428223
    6. 'hips' → logprob: -14.500344276428223
    7. 'sh' → logprob: -15.500344276428223
    8. 's' → logprob: -15.875344276428223
    9. 'spaces' → logprob: -16.00034523010254
    10. ' ' → logprob: -16.75034523010254

Token 1716: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010654398938640952
    2. '[s' → logprob: -7.001065254211426
    3. 's' → logprob: -9.376065254211426
    4. '[' → logprob: -10.126065254211426
    5. 'peed' → logprob: -12.001065254211426
    6. '```' → logprob: -12.626065254211426
    7. ' [' → logprob: -13.126065254211426
    8. '[id' → logprob: -13.251065254211426
    9. '[
' → logprob: -13.251065254211426
    10. 'paces' → logprob: -13.376065254211426

Token 1717: ']
' (ID: 1592)
  Prédit: '.speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.040850430727005005
    2. '.pos' → logprob: -3.7908504009246826
    3. '].' → logprob: -4.790850639343262
    4. 'peed' → logprob: -5.415850639343262
    5. '.' → logprob: -6.290850639343262
    6. ' .' → logprob: -6.665850639343262
    7. ').' → logprob: -7.415850639343262
    8. 'speed' → logprob: -8.290850639343262
    9. '.position' → logprob: -8.915850639343262
    10. '
' → logprob: -9.415850639343262

Token 1718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012438016710802913
    2. 'if' → logprob: -7.501243591308594
    3. ' if' → logprob: -7.751243591308594
    4. '   ' → logprob: -8.626243591308594
    5. '        
' → logprob: -10.376243591308594
    6. '```' → logprob: -11.376243591308594
    7. '           ' → logprob: -11.501243591308594
    8. '
' → logprob: -11.626243591308594
    9. ')' → logprob: -12.751243591308594
    10. '    
' → logprob: -13.126243591308594

Token 1719: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0817084014415741
    2. '       ' → logprob: -2.8317084312438965
    3. ' if' → logprob: -4.0817084312438965
    4. '   ' → logprob: -6.4567084312438965
    5. '        
' → logprob: -7.8317084312438965
    6. '
' → logprob: -8.581707954406738
    7. '	if' → logprob: -8.831707954406738
    8. 'return' → logprob: -8.956707954406738
    9. 'speed' → logprob: -9.456707954406738
    10. '```' → logprob: -10.581707954406738

Token 1720: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33161047101020813
    2. 'pos' → logprob: -1.8316104412078857
    3. 'abs' → logprob: -2.2066104412078857
    4. ' s' → logprob: -4.831610679626465
    5. ' abs' → logprob: -6.081610679626465
    6. 'speed' → logprob: -7.456610679626465
    7. ' pos' → logprob: -7.581610679626465
    8. 'math' → logprob: -8.581610679626465
    9. 'ships' → logprob: -8.956610679626465
    10. '(abs' → logprob: -9.331610679626465

Token 1721: '.done' (ID: 64548)
  Prédit: '.speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.0035949565935879946
    2. '.pos' → logprob: -5.753594875335693
    3. 'speed' → logprob: -8.503595352172852
    4. '.velocity' → logprob: -9.378595352172852
    5. '.position' → logprob: -9.753595352172852
    6. '.' → logprob: -10.503595352172852
    7. 'pos' → logprob: -11.128595352172852
    8. '.vel' → logprob: -11.503595352172852
    9. '.s' → logprob: -12.628595352172852
    10. ' .' → logprob: -12.628595352172852

Token 1722: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4081503450870514
    2. '==' → logprob: -2.1581504344940186
    3. ' and' → logprob: -2.6581504344940186
    4. '           ' → logprob: -3.0331504344940186
    5. ' is' → logprob: -3.7831504344940186
    6. '       ' → logprob: -3.9081504344940186
    7. ' ==' → logprob: -4.2831501960754395
    8. 'and' → logprob: -4.5331501960754395
    9. '.position' → logprob: -4.5331501960754395
    10. '.pos' → logprob: -5.0331501960754395

Token 1723: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037574995309114456
    2. ' or' → logprob: -3.6625750064849854
    3. '       ' → logprob: -4.537574768066406
    4. 'return' → logprob: -8.537574768066406
    5. ' and' → logprob: -9.537574768066406
    6. 'or' → logprob: -10.037574768066406
    7. '          ' → logprob: -10.037574768066406
    8. ':' → logprob: -10.412574768066406
    9. ' return' → logprob: -10.412574768066406
    10. '               ' → logprob: -10.537574768066406

Token 1724: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9207544326782227
    2. 'return' (adapté à ' return') → logprob: -1.0457544326782227
    3. ' return' → logprob: -1.9207544326782227
    4. '       ' → logprob: -2.2957544326782227
    5. '
' → logprob: -6.295754432678223
    6. '               ' → logprob: -7.545754432678223
    7. '   ' → logprob: -7.670754432678223
    8. '	return' → logprob: -8.670754432678223
    9. ':return' → logprob: -10.670754432678223
    10. '        ' → logprob: -10.920754432678223

Token 1725: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011977504007518291
    2. '       ' → logprob: -4.761977672576904
    3. '        
' → logprob: -6.761977672576904
    4. 'if' → logprob: -7.011977672576904
    5. ' 
' → logprob: -8.261977195739746
    6. '    
' → logprob: -8.386977195739746
    7. '\n' → logprob: -8.511977195739746
    8. '   ' → logprob: -8.761977195739746
    9. '
' → logprob: -8.761977195739746
    10. ' if' → logprob: -8.761977195739746

Token 1726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008875848725438118
    2. '
' → logprob: -4.883875846862793
    3. 'if' → logprob: -7.633875846862793
    4. '   ' → logprob: -8.133875846862793
    5. '        
' → logprob: -8.133875846862793
    6. '    
' → logprob: -9.883875846862793
    7. ' if' → logprob: -10.508875846862793
    8. ' 
' → logprob: -10.633875846862793
    9. '```' → logprob: -10.883875846862793
    10. '           ' → logprob: -11.008875846862793

Token 1727: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3091064989566803
    2. 'if' (adapté à ' if') → logprob: -1.559106469154358
    3. '
' → logprob: -3.8091065883636475
    4. ' if' → logprob: -4.434106349945068
    5. 'time' → logprob: -4.559106349945068
    6. '   ' → logprob: -5.934106349945068
    7. 'distance' → logprob: -5.934106349945068
    8. 't' → logprob: -6.184106349945068
    9. '        
' → logprob: -7.559106349945068
    10. 'pos' → logprob: -7.684106349945068

Token 1728: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.048972588032484055
    2. ' pos' → logprob: -3.9239726066589355
    3. 'abs' → logprob: -4.1739726066589355
    4. 's' → logprob: -4.7989726066589355
    5. ' s' → logprob: -5.9239726066589355
    6. ' abs' → logprob: -6.5489726066589355
    7. 'ships' → logprob: -8.923972129821777
    8. '(pos' → logprob: -10.548972129821777
    9. '   ' → logprob: -11.048972129821777
    10. 'positions' → logprob: -11.173972129821777

Token 1729: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5262145400047302
    2. ' >' → logprob: -1.151214599609375
    3. '<=' → logprob: -3.151214599609375
    4. '>' → logprob: -3.401214599609375
    5. ' -' → logprob: -4.651214599609375
    6. ' <' → logprob: -5.776214599609375
    7. ' >
' → logprob: -7.026214599609375
    8. '-' → logprob: -7.276214599609375
    9. ' ' → logprob: -7.276214599609375
    10. '   ' → logprob: -7.901214599609375

Token 1730: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004167083650827408
    2. 'ships' → logprob: -6.129167079925537
    3. ' s' → logprob: -6.629167079925537
    4. '=' → logprob: -7.379167079925537
    5. '=s' → logprob: -11.504167556762695
    6. ' ships' → logprob: -11.629167556762695
    7. '   ' → logprob: -11.629167556762695
    8. '	s' → logprob: -13.629167556762695
    9. '  ' → logprob: -14.379167556762695
    10. ' ' → logprob: -14.504167556762695

Token 1731: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -1.6240566083070007e-06
    2. 'pos' → logprob: -13.750001907348633
    3. '.' → logprob: -15.125001907348633
    4. ' .' → logprob: -15.625001907348633
    5. '.position' → logprob: -17.000001907348633
    6. '.p' → logprob: -18.500001907348633
    7. '	pos' → logprob: -19.000001907348633
    8. '
' → logprob: -19.000001907348633
    9. '.
' → logprob: -19.125001907348633
    10. '.ps' → logprob: -19.500001907348633

Token 1732: ' +' (ID: 659)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0245747566223145
    2. ':' → logprob: -1.3995747566223145
    3. ' -' → logprob: -1.3995747566223145
    4. ' or' → logprob: -2.6495747566223145
    5. '       ' → logprob: -3.7745747566223145
    6. ' +' → logprob: -4.0245747566223145
    7. '+' → logprob: -4.0245747566223145
    8. '-' → logprob: -4.2745747566223145
    9. '           ' → logprob: -5.8995747566223145
    10. '        ' → logprob: -7.3995747566223145

Token 1733: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -8.256334695033729e-05
    2. ' EPS' → logprob: -10.000082969665527
    3. '-' → logprob: -10.750082969665527
    4. '1' → logprob: -12.000082969665527
    5. '-E' → logprob: -12.000082969665527
    6. 'ESP' → logprob: -13.125082969665527
    7. 'eps' → logprob: -14.625082969665527
    8. ' ' → logprob: -15.500082969665527
    9. ' -' → logprob: -15.750082969665527
    10. 'EP' → logprob: -15.875082969665527

Token 1734: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7613664865493774
    2. ':' → logprob: -1.7613664865493774
    3. '-' → logprob: -2.261366367340088
    4. '       ' → logprob: -2.636366367340088
    5. ' or' → logprob: -2.761366367340088
    6. ' -' → logprob: -2.761366367340088
    7. '+' → logprob: -3.511366367340088
    8. ' +' → logprob: -4.511366367340088
    9. ' and' → logprob: -4.761366367340088
    10. '   ' → logprob: -5.886366367340088

Token 1735: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029456768184900284
    2. '       ' → logprob: -3.654456853866577
    3. ':
' → logprob: -6.904456615447998
    4. ':return' → logprob: -7.154456615447998
    5. ':' → logprob: -7.654456615447998
    6. '               ' → logprob: -7.904456615447998
    7. 'return' → logprob: -8.529457092285156
    8. ' return' → logprob: -9.654457092285156
    9. '		' → logprob: -9.904457092285156
    10. '```' → logprob: -10.154457092285156

Token 1736: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06003599613904953
    2. 'return' (adapté à ' return') → logprob: -3.3100359439849854
    3. '       ' → logprob: -3.9350359439849854
    4. ' return' → logprob: -6.4350361824035645
    5. '
' → logprob: -8.435035705566406
    6. '	return' → logprob: -8.935035705566406
    7. '               ' → logprob: -8.935035705566406
    8. '   ' → logprob: -10.060035705566406
    9. '	       ' → logprob: -10.685035705566406
    10. '		' → logprob: -10.935035705566406

Token 1737: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2657585144042969
    2. '
' → logprob: -1.5157585144042969
    3. '        
' → logprob: -5.265758514404297
    4. ' 
' → logprob: -6.015758514404297
    5. '    
' → logprob: -6.015758514404297
    6. '  
' → logprob: -6.140758514404297
    7. '   ' → logprob: -8.015758514404297
    8. '
' → logprob: -8.640758514404297
    9. '\n' → logprob: -8.640758514404297
    10. '   
' → logprob: -8.640758514404297

Token 1738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022186655551195145
    2. '
' → logprob: -3.897186756134033
    3. '        
' → logprob: -6.772186756134033
    4. '    
' → logprob: -8.897186279296875
    5. ' 
' → logprob: -9.522186279296875
    6. '  
' → logprob: -9.897186279296875
    7. '   ' → logprob: -9.897186279296875
    8. ' s' → logprob: -10.147186279296875
    9. 'return' → logprob: -10.272186279296875
    10. 's' → logprob: -10.772186279296875

Token 1739: ' dist' (ID: 3601)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.18760289251804352
    2. '       ' → logprob: -2.312602996826172
    3. 'delta' → logprob: -3.812602996826172
    4. 'dt' → logprob: -4.062602996826172
    5. '   ' → logprob: -4.187602996826172
    6. 't' → logprob: -4.562602996826172
    7. 'if' → logprob: -5.937602996826172
    8. 'delay' → logprob: -6.937602996826172
    9. 'speed' → logprob: -7.437602996826172
    10. '
' → logprob: -7.437602996826172

Token 1740: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1818777173757553
    2. '=' → logprob: -1.8068777322769165
    3. 'ance' → logprob: -7.056877613067627
    4. '_' → logprob: -7.306877613067627
    5. ' ' → logprob: -7.931877613067627
    6. ',' → logprob: -9.431878089904785
    7. '   ' → logprob: -10.556878089904785
    8. 'ances' → logprob: -10.556878089904785
    9. '/' → logprob: -11.181878089904785
    10. '  ' → logprob: -11.181878089904785

Token 1741: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.31568560004234314
    2. 'pos' → logprob: -1.3156856298446655
    3. '(pos' → logprob: -6.190685749053955
    4. ' (' → logprob: -8.065685272216797
    5. '(' → logprob: -9.815685272216797
    6. '_pos' → logprob: -13.565685272216797
    7. '	pos' → logprob: -14.440685272216797
    8. 'abs' → logprob: -14.690685272216797
    9. ' ' → logprob: -14.815685272216797
    10. ' abs' → logprob: -15.565685272216797

Token 1742: ' -' (ID: 533)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5759438276290894
    2. ' /' → logprob: -0.8259438276290894
    3. ' /
' → logprob: -13.575943946838379
    4. '/
' → logprob: -13.825943946838379
    5. '/s' → logprob: -13.950943946838379
    6. ' ' → logprob: -14.450943946838379
    7. 's' → logprob: -15.575943946838379
    8. '       ' → logprob: -16.200942993164062
    9. ')' → logprob: -16.700942993164062
    10. '        ' → logprob: -16.825942993164062

Token 1743: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0788901224732399
    2. ' s' → logprob: -2.578890085220337
    3. '(s' → logprob: -15.953889846801758
    4. '_s' → logprob: -16.203889846801758
    5. 'ships' → logprob: -16.328889846801758
    6. '{s' → logprob: -17.328889846801758
    7. '	s' → logprob: -17.703889846801758
    8. '.s' → logprob: -18.328889846801758
    9. ' (' → logprob: -18.953889846801758
    10. 'ship' → logprob: -19.328889846801758

Token 1744: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.000903480569832027
    2. '.s' → logprob: -7.625903606414795
    3. 'pos' → logprob: -7.875903606414795
    4. 's' → logprob: -10.375903129577637
    5. ' .' → logprob: -12.750903129577637
    6. '	pos' → logprob: -14.250903129577637
    7. '.' → logprob: -15.500903129577637
    8. '.position' → logprob: -15.500903129577637
    9. '[pos' → logprob: -16.125904083251953
    10. 'Pos' → logprob: -16.500904083251953

Token 1745: '
' (ID: 198)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.10897181183099747
    2. '/' → logprob: -2.3589718341827393
    3. '       ' → logprob: -4.85897159576416
    4. ' /
' → logprob: -8.23397159576416
    5. '/
' → logprob: -8.73397159576416
    6. '
' → logprob: -8.85897159576416
    7. ')' → logprob: -8.98397159576416
    8. '/s' → logprob: -8.98397159576416
    9. '/usr' → logprob: -10.98397159576416
    10. '/
/' → logprob: -11.23397159576416

Token 1746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033645043149590492
    2. 'time' → logprob: -6.003364562988281
    3. '
' → logprob: -8.128364562988281
    4. ' time' → logprob: -8.503364562988281
    5. 't' → logprob: -9.003364562988281
    6. 'if' → logprob: -9.753364562988281
    7. '   ' → logprob: -9.753364562988281
    8. '        
' → logprob: -10.253364562988281
    9. '```' → logprob: -10.378364562988281
    10. '           ' → logprob: -10.753364562988281

Token 1747: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5159338116645813
    2. 'time' → logprob: -1.0159337520599365
    3. 'speed' → logprob: -4.015933990478516
    4. 't' → logprob: -4.390933990478516
    5. '       ' → logprob: -5.390933990478516
    6. '   ' → logprob: -5.890933990478516
    7. 'v' → logprob: -6.765933990478516
    8. ' if' → logprob: -6.890933990478516
    9. 'vel' → logprob: -7.640933990478516
    10. 'duration' → logprob: -9.140933990478516

Token 1748: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.062029752880334854
    2. 'abs' → logprob: -2.8120298385620117
    3. 'math' → logprob: -9.937029838562012
    4. ' s' → logprob: -12.062029838562012
    5. '(abs' → logprob: -13.312029838562012
    6. 'float' → logprob: -13.437029838562012
    7. '(s' → logprob: -13.562029838562012
    8. ' abs' → logprob: -13.812029838562012
    9. 'fabs' → logprob: -13.937029838562012
    10. 'dist' → logprob: -15.437029838562012

Token 1749: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -8.184812031686306e-05
    2. '.velocity' → logprob: -10.250082015991211
    3. 'speed' → logprob: -10.375082015991211
    4. '.' → logprob: -11.625082015991211
    5. ' .' → logprob: -12.625082015991211
    6. '	speed' → logprob: -13.250082015991211
    7. '.s' → logprob: -14.000082015991211
    8. '.vel' → logprob: -16.00008201599121
    9. ' speed' → logprob: -16.75008201599121
    10. '(speed' → logprob: -16.87508201599121

Token 1750: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.29326245188713074
    2. ' <' → logprob: -1.7932624816894531
    3. '<=' → logprob: -3.293262481689453
    4. ' <=' → logprob: -3.418262481689453
    5. '>' → logprob: -4.418262481689453
    6. '==' → logprob: -6.043262481689453
    7. ' >' → logprob: -6.293262481689453
    8. ' ==' → logprob: -7.168262481689453
    9. '<E' → logprob: -7.418262481689453
    10. ' ' → logprob: -10.168262481689453

Token 1751: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -1.1472419600977446e-06
    2. ' EPS' → logprob: -14.000000953674316
    3. '1' → logprob: -15.875000953674316
    4. 'ESP' → logprob: -17.125001907348633
    5. 'eps' → logprob: -17.500001907348633
    6. '=' → logprob: -18.500001907348633
    7. '   ' → logprob: -18.750001907348633
    8. '
' → logprob: -19.875001907348633
    9. '0' → logprob: -20.625001907348633
    10. 'EP' → logprob: -20.875001907348633

Token 1752: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2772904932498932
    2. ':
' → logprob: -1.5272904634475708
    3. '           ' → logprob: -4.027290344238281
    4. ':return' → logprob: -5.277290344238281
    5. '       ' → logprob: -7.277290344238281
    6. ' or' → logprob: -7.402290344238281
    7. ' :' → logprob: -9.402290344238281
    8. '.' → logprob: -9.777290344238281
    9. '          ' → logprob: -9.777290344238281
    10. '):
' → logprob: -9.902290344238281

Token 1753: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035878336057066917
    2. 'return' → logprob: -7.12858772277832
    3. ' return' → logprob: -7.12858772277832
    4. '       ' → logprob: -7.25358772277832
    5. ':' → logprob: -8.00358772277832
    6. ':
' → logprob: -8.00358772277832
    7. ':return' → logprob: -8.00358772277832
    8. '               ' → logprob: -9.25358772277832
    9. '	       ' → logprob: -9.50358772277832
    10. '```' → logprob: -10.62858772277832

Token 1754: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08635550737380981
    2. '           ' → logprob: -3.086355447769165
    3. ' return' → logprob: -3.336355447769165
    4. '       ' → logprob: -6.586355686187744
    5. '	return' → logprob: -9.586355209350586
    6. '
' → logprob: -10.961355209350586
    7. '               ' → logprob: -10.961355209350586
    8. '   ' → logprob: -11.961355209350586
    9. '```' → logprob: -12.961355209350586
    10. '{return' → logprob: -14.086355209350586

Token 1755: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4327129125595093
    2. '
' → logprob: -1.3077129125595093
    3. '        
' → logprob: -3.057713031768799
    4. ' 
' → logprob: -4.557713031768799
    5. '    
' → logprob: -5.182713031768799
    6. '  
' → logprob: -5.432713031768799
    7. '\n' → logprob: -5.557713031768799
    8. 'return' → logprob: -6.307713031768799
    9. '```' → logprob: -6.807713031768799
    10. '   ' → logprob: -6.932713031768799

Token 1756: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08012575656175613
    2. '
' → logprob: -2.5801258087158203
    3. '        
' → logprob: -7.08012580871582
    4. '  
' → logprob: -9.20512580871582
    5. '    
' → logprob: -9.45512580871582
    6. ')
' → logprob: -9.83012580871582
    7. ' 
' → logprob: -9.95512580871582
    8. '
' → logprob: -9.95512580871582
    9. '   ' → logprob: -11.20512580871582
    10. '\n' → logprob: -11.95512580871582

Token 1757: ' t' (ID: 260)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.21291758120059967
    2. '       ' → logprob: -2.0879175662994385
    3. 't' (adapté à ' t') → logprob: -2.9629175662994385
    4. 'heap' → logprob: -4.337917804718018
    5. '   ' → logprob: -6.337917804718018
    6. 'event' → logprob: -7.837917804718018
    7. 'temps' → logprob: -8.33791732788086
    8. '
' → logprob: -8.33791732788086
    9. 'tempo' → logprob: -8.83791732788086
    10. ' time' → logprob: -10.21291732788086

Token 1758: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6883585453033447
    2. ' =' → logprob: -0.8133585453033447
    3. '_event' → logprob: -3.4383585453033447
    4. '_new' → logprob: -4.563358306884766
    5. '_next' → logprob: -5.188358306884766
    6. 'ime' → logprob: -6.063358306884766
    7. '_' → logprob: -6.688358306884766
    8. '_arr' → logprob: -7.563358306884766
    9. '_=' → logprob: -7.938358306884766
    10. 'new' → logprob: -8.188358306884766

Token 1759: ' dist' (ID: 3601)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.018150178715586662
    2. ' current' → logprob: -4.018150329589844
    3. '	current' → logprob: -15.768150329589844
    4. '   ' → logprob: -17.268150329589844
    5. '(current' → logprob: -17.518150329589844
    6. '$current' → logprob: -17.643150329589844
    7. '=current' → logprob: -17.893150329589844
    8. '       ' → logprob: -18.393150329589844
    9. '_current' → logprob: -18.768150329589844
    10. '[current' → logprob: -18.893150329589844

Token 1760: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.02601519785821438
    2. ' /' → logprob: -3.776015281677246
    3. '/current' → logprob: -6.276015281677246
    4. '/s' → logprob: -7.276015281677246
    5. '/c' → logprob: -10.026015281677246
    6. '+' → logprob: -10.401015281677246
    7. '/
' → logprob: -10.401015281677246
    8. '
' → logprob: -10.776015281677246
    9. '       ' → logprob: -11.526015281677246
    10. '/events' → logprob: -11.901015281677246

Token 1761: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.627176768844947e-05
    2. ' s' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.50009536743164
    4. '(s' → logprob: -17.37509536743164
    5. '{s' → logprob: -18.25009536743164
    6. '       ' → logprob: -18.50009536743164
    7. '```' → logprob: -19.37509536743164
    8. '	s' → logprob: -20.00009536743164
    9. 'ships' → logprob: -20.25009536743164
    10. '`s' → logprob: -20.50009536743164

Token 1762: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.0002622894535306841
    2. 'speed' → logprob: -8.250262260437012
    3. 'peed' → logprob: -15.000262260437012
    4. '	speed' → logprob: -15.125262260437012
    5. '.' → logprob: -15.250262260437012
    6. ' .' → logprob: -16.500263214111328
    7. '.s' → logprob: -16.750263214111328
    8. '.velocity' → logprob: -17.000263214111328
    9. ' speed' → logprob: -17.875263214111328
    10. '(speed' → logprob: -18.500263214111328

Token 1763: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013076704926788807
    2. '
' → logprob: -5.2630767822265625
    3. ',
' → logprob: -5.6380767822265625
    4. ',' → logprob: -5.8880767822265625
    5. ')
' → logprob: -7.3880767822265625
    6. ')' → logprob: -7.8880767822265625
    7. '        
' → logprob: -9.263076782226562
    8. 'heap' → logprob: -9.513076782226562
    9. '<|end|>' → logprob: -10.013076782226562
    10. '   ' → logprob: -10.138076782226562

Token 1764: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026574179530143738
    2. '
' → logprob: -3.90157413482666
    3. '        
' → logprob: -6.02657413482666
    4. ')
' → logprob: -7.40157413482666
    5. ',
' → logprob: -7.77657413482666
    6. '    
' → logprob: -7.90157413482666
    7. ')' → logprob: -7.90157413482666
    8. '   ' → logprob: -8.15157413482666
    9. '\n' → logprob: -8.40157413482666
    10. '	' → logprob: -8.77657413482666

Token 1765: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.1032470092177391
    2. '       ' → logprob: -2.3532469272613525
    3. '   ' → logprob: -6.353247165679932
    4. ' heap' → logprob: -7.228247165679932
    5. 'event' → logprob: -7.978247165679932
    6. '
' → logprob: -9.603246688842773
    7. 'import' → logprob: -9.853246688842773
    8. 'if' → logprob: -9.853246688842773
    9. 'time' → logprob: -11.103246688842773
    10. 'he' → logprob: -11.478246688842773

Token 1766: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.629921436891891e-05
    2. '       ' → logprob: -11.37502670288086
    3. 'queue' → logprob: -13.12502670288086
    4. '   ' → logprob: -13.12502670288086
    5. '.push' → logprob: -13.25002670288086
    6. '```' → logprob: -13.37502670288086
    7. 'ify' → logprob: -13.62502670288086
    8. '.' → logprob: -13.62502670288086
    9. '_push' → logprob: -14.00002670288086
    10. '[' → logprob: -14.25002670288086

Token 1767: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -8.828512363834307e-05
    2. '.heap' → logprob: -9.875088691711426
    3. '.' → logprob: -10.250088691711426
    4. ' .' → logprob: -14.625088691711426
    5. '   ' → logprob: -15.250088691711426
    6. '.He' → logprob: -15.375088691711426
    7. ').' → logprob: -16.12508773803711
    8. '.push' → logprob: -16.50008773803711
    9. '_he' → logprob: -17.12508773803711
    10. ' he' → logprob: -17.12508773803711

Token 1768: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00044401636114344
    2. 'pp' → logprob: -7.750443935394287
    3. 'push' → logprob: -12.000444412231445
    4. 'p' → logprob: -12.250444412231445
    5. 'q' → logprob: -13.375444412231445
    6. 'ap' → logprob: -14.125444412231445
    7. 'appen' → logprob: -16.750444412231445
    8. 'append' → logprob: -17.000444412231445
    9. 'op' → logprob: -18.250444412231445
    10. '```' → logprob: -18.500444412231445

Token 1769: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.7385154428193346e-05
    2. 'push' → logprob: -10.37503719329834
    3. 'pp' → logprob: -12.50003719329834
    4. 'app' → logprob: -13.12503719329834
    5. 'op' → logprob: -16.250038146972656
    6. 'p' → logprob: -16.500038146972656
    7. 'sh' → logprob: -16.750038146972656
    8. '_push' → logprob: -16.750038146972656
    9. 'us' → logprob: -17.500038146972656
    10. 'USH' → logprob: -18.125038146972656

Token 1770: '(event' (ID: 11536)
  Prédit: '(event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(event' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.87500286102295
    3. '   ' → logprob: -14.00000286102295
    4. ' (' → logprob: -14.12500286102295
    5. 'event' → logprob: -14.50000286102295
    6. '       ' → logprob: -17.500003814697266
    7. '(
' → logprob: -18.000003814697266
    8. ',event' → logprob: -18.375003814697266
    9. '```' → logprob: -18.875003814697266
    10. '	event' → logprob: -19.125003814697266

Token 1771: '_queue' (ID: 25622)
  Prédit: '(event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(event' → logprob: -0.06143028289079666
    2. '(
' → logprob: -3.1864302158355713
    3. '(' → logprob: -4.31143045425415
    4. 'event' → logprob: -6.56143045425415
    5. '(queue' → logprob: -6.81143045425415
    6. '_queue' → logprob: -7.31143045425415
    7. '(_' → logprob: -7.93643045425415
    8. '```' → logprob: -8.061429977416992
    9. '       ' → logprob: -8.311429977416992
    10. '   ' → logprob: -9.311429977416992

Token 1772: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19602139294147491
    2. '((' → logprob: -1.9460214376449585
    3. ' (' → logprob: -4.071021556854248
    4. '(
' → logprob: -4.696021556854248
    5. '       ' → logprob: -5.446021556854248
    6. '   ' → logprob: -6.821021556854248
    7. '           ' → logprob: -6.946021556854248
    8. ',' → logprob: -7.321021556854248
    9. '               ' → logprob: -7.696021556854248
    10. '	' → logprob: -7.946021556854248

Token 1773: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7455787062644958
    2. ' (' → logprob: -0.7455787062644958
    3. '(t' → logprob: -3.2455787658691406
    4. '       ' → logprob: -4.870578765869141
    5. '(current' → logprob: -6.245578765869141
    6. '   ' → logprob: -6.495578765869141
    7. '(s' → logprob: -7.995578765869141
    8. '(c' → logprob: -8.62057876586914
    9. '(time' → logprob: -8.74557876586914
    10. '           ' → logprob: -8.74557876586914

Token 1774: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0005530327325686812
    2. ' current' → logprob: -7.500553131103516
    3. '	current' → logprob: -17.375553131103516
    4. '(current' → logprob: -17.750553131103516
    5. '   ' → logprob: -18.000553131103516
    6. '$current' → logprob: -18.875553131103516
    7. 'round' → logprob: -20.000553131103516
    8. '           ' → logprob: -20.375553131103516
    9. '[current' → logprob: -20.375553131103516
    10. '       ' → logprob: -20.375553131103516

Token 1775: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.03885916620492935
    2. '_' → logprob: -3.4138591289520264
    3. 't' → logprob: -6.0388593673706055
    4. 'time' → logprob: -6.9138593673706055
    5. '_t' → logprob: -7.0388593673706055
    6. '+' → logprob: -8.413859367370605
    7. ' _' → logprob: -8.538859367370605
    8. '_,' → logprob: -9.038859367370605
    9. ',' → logprob: -9.288859367370605
    10. 'Time' → logprob: -9.913859367370605

Token 1776: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1799861192703247
    2. ' +' → logprob: -1.8049861192703247
    3. '+t' → logprob: -8.554986000061035
    4. ',' → logprob: -10.304986000061035
    5. '+,' → logprob: -11.929986000061035
    6. '+
' → logprob: -12.054986000061035
    7. ' ,' → logprob: -14.179986000061035
    8. ' +
' → logprob: -15.179986000061035
    9. '＋' → logprob: -15.304986000061035
    10. ' ' → logprob: -15.554986000061035

Token 1777: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00033546582562848926
    2. ' t' → logprob: -8.000335693359375
    3. '	t' → logprob: -17.375335693359375
    4. '`t' → logprob: -18.375335693359375
    5. ' ' → logprob: -19.625335693359375
    6. '(t' → logprob: -20.250335693359375
    7. '```' → logprob: -20.625335693359375
    8. '   ' → logprob: -20.875335693359375
    9. '
' → logprob: -20.875335693359375
    10. ')t' → logprob: -20.875335693359375

Token 1778: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048417699872516096
    2. ' ,' → logprob: -7.750483989715576
    3. ')' → logprob: -10.125484466552734
    4. ',
' → logprob: -12.125484466552734
    5. '))' → logprob: -13.750484466552734
    6. ' )' → logprob: -14.250484466552734
    7. '<|end|>' → logprob: -14.250484466552734
    8. ',)' → logprob: -14.375484466552734
    9. '‌,' → logprob: -14.375484466552734
    10. '   ' → logprob: -14.500484466552734

Token 1779: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.000004768371582
    4. ''' → logprob: -16.750003814697266
    5. '       ' → logprob: -17.000003814697266
    6. '(' → logprob: -18.125003814697266
    7. '           ' → logprob: -18.875003814697266
    8. '  ' → logprob: -18.875003814697266
    9. '    ' → logprob: -19.125003814697266
    10. '     ' → logprob: -19.125003814697266

Token 1780: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.250001907348633
    4. '(' → logprob: -17.125001907348633
    5. ''' → logprob: -17.875001907348633
    6. '
' → logprob: -18.875001907348633
    7. '       ' → logprob: -19.250001907348633
    8. '  ' → logprob: -19.500001907348633
    9. '`' → logprob: -19.875001907348633
    10. '           ' → logprob: -19.875001907348633

Token 1781: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001083302078768611
    2. ' ,' → logprob: -7.0010833740234375
    3. ',(' → logprob: -8.751083374023438
    4. '(' → logprob: -12.376083374023438
    5. '(i' → logprob: -12.376083374023438
    6. ' (' → logprob: -13.126083374023438
    7. ',i' → logprob: -13.376083374023438
    8. ',
' → logprob: -14.501083374023438
    9. '   ' → logprob: -14.626083374023438
    10. '```' → logprob: -15.876083374023438

Token 1782: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006751851178705692
    2. ' (' → logprob: -5.006752014160156
    3. 'i' → logprob: -10.506752014160156
    4. '(' → logprob: -11.881752014160156
    5. ' i' → logprob: -13.756752014160156
    6. '   ' → logprob: -14.506752014160156
    7. '[i' → logprob: -15.131752014160156
    8. ' ' → logprob: -16.381752014160156
    9. '       ' → logprob: -16.381752014160156
    10. '{i' → logprob: -16.631752014160156

Token 1783: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.60414821645827e-06
    2. ' i' → logprob: -12.500004768371582
    3. '   ' → logprob: -15.625004768371582
    4. ')i' → logprob: -15.875004768371582
    5. '	i' → logprob: -16.125003814697266
    6. ''i' → logprob: -16.375003814697266
    7. '(i' → logprob: -16.500003814697266
    8. ')' → logprob: -16.750003814697266
    9. '
' → logprob: -17.000003814697266
    10. '```' → logprob: -17.500003814697266

Token 1784: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.44574936106801e-05
    2. ' ,' → logprob: -10.37507438659668
    3. '<|end|>' → logprob: -10.75007438659668
    4. ',
' → logprob: -11.25007438659668
    5. '‌,' → logprob: -13.00007438659668
    6. ',None' → logprob: -14.25007438659668
    7. ',pos' → logprob: -14.37507438659668
    8. ',p' → logprob: -14.75007438659668
    9. ',n' → logprob: -15.12507438659668
    10. ',s' → logprob: -15.25007438659668

Token 1785: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0003368926409166306
    2. ' pos' → logprob: -8.000336647033691
    3. 'round' → logprob: -14.625336647033691
    4. 'int' → logprob: -14.625336647033691
    5. 'float' → logprob: -15.625336647033691
    6. '   ' → logprob: -15.875336647033691
    7. '	pos' → logprob: -16.250337600708008
    8. '(pos' → logprob: -17.000337600708008
    9. 'position' → logprob: -17.000337600708008
    10. '
' → logprob: -17.250337600708008

Token 1786: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.005264829844236374
    2. ')' → logprob: -5.255264759063721
    3. ')))
' → logprob: -11.630265235900879
    4. ')));' → logprob: -12.130265235900879
    5. '))))' → logprob: -12.255265235900879
    6. '))' → logprob: -12.255265235900879
    7. '')))' → logprob: -12.505265235900879
    8. '   ' → logprob: -13.880265235900879
    9. '       ' → logprob: -14.380265235900879
    10. ' ' → logprob: -14.505265235900879

Token 1787: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9641387462615967
    2. '<|end|>' → logprob: -1.7141387462615967
    3. '```' → logprob: -1.8391387462615967
    4. 'def' → logprob: -1.8391387462615967
    5. '   ' → logprob: -2.2141387462615967
    6. '#' → logprob: -6.089138984680176
    7. '<|end|>' → logprob: -6.714138984680176
    8. '       ' → logprob: -6.839138984680176
    9. '    ' → logprob: -7.339138984680176
    10. '    
' → logprob: -7.464138984680176

Token 1788: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5511108040809631
    2. '   ' → logprob: -1.1761107444763184
    3. '
' → logprob: -2.3011107444763184
    4. '    
' → logprob: -4.426110744476318
    5. '

' → logprob: -7.551110744476318
    6. '#' (adapté à ' #') → logprob: -7.801110744476318
    7. '```' → logprob: -7.801110744476318
    8. '  
' → logprob: -7.926110744476318
    9. '<|end|>' → logprob: -8.176111221313477
    10. '        
' → logprob: -8.801111221313477

Token 1789: ' Ajust' (ID: 197708)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1317226141691208
    2. '#' → logprob: -2.1317226886749268
    3. 'for' → logprob: -5.881722450256348
    4. 'current' → logprob: -7.381722450256348
    5. '
' → logprob: -7.631722450256348
    6. '   ' → logprob: -7.756722450256348
    7. 'last' → logprob: -8.756722450256348
    8. 'next' → logprob: -9.131722450256348
    9. 'while' → logprob: -9.131722450256348
    10. 'initial' → logprob: -11.006722450256348

Token 1790: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.08975064009428024
    2. 'ement' → logprob: -2.9647505283355713
    3. '   ' → logprob: -4.58975076675415
    4. 'ements' → logprob: -4.96475076675415
    5. 'e' → logprob: -5.21475076675415
    6. 'def' → logprob: -5.33975076675415
    7. '#' → logprob: -5.83975076675415
    8. 'ment' → logprob: -5.83975076675415
    9. '       ' → logprob: -7.83975076675415
    10. 'ent' → logprob: -8.214750289916992

Token 1791: ' les' (ID: 1341)
  Prédit: '_speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_speed' → logprob: -1.118379831314087
    2. '_s' → logprob: -1.743379831314087
    3. '_v' → logprob: -2.493379831314087
    4. '_' → logprob: -2.493379831314087
    5. 'v' → logprob: -2.743379831314087
    6. '_ship' → logprob: -3.118379831314087
    7. 'des' → logprob: -3.243379831314087
    8. 'ship' → logprob: -3.493379831314087
    9. 'les' → logprob: -3.493379831314087
    10. 'speed' → logprob: -3.868379831314087

Token 1792: ' vit' (ID: 9281)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.8031903505325317
    2. 'speed' → logprob: -0.9281903505325317
    3. 'def' → logprob: -2.303190231323242
    4. 'v' → logprob: -4.053190231323242
    5. '_speed' → logprob: -4.303190231323242
    6. ' speeds' → logprob: -4.803190231323242
    7. 'ships' → logprob: -5.428190231323242
    8. '#' → logprob: -5.678190231323242
    9. '   ' → logprob: -6.053190231323242
    10. 'ship' → logprob: -6.553190231323242

Token 1793: 'esses' (ID: 38380)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.479666143655777
    2. 'esses' → logprob: -1.3546661138534546
    3. 'esse' → logprob: -2.479666233062744
    4. 'ess' → logprob: -3.979666233062744
    5. 'e' → logprob: -4.229666233062744
    6. 'eurs' → logprob: -6.604666233062744
    7. 'eur' → logprob: -6.979666233062744
    8. 'é' → logprob: -7.604666233062744
    9. 'escence' → logprob: -7.729666233062744
    10. 'ees' → logprob: -7.979666233062744

Token 1794: ' des' (ID: 731)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006583464564755559
    2. '   ' → logprob: -7.5006585121154785
    3. ' def' → logprob: -9.50065803527832
    4. 'for' → logprob: -11.62565803527832
    5. '
' → logprob: -12.37565803527832
    6. '    
' → logprob: -12.50065803527832
    7. '	def' → logprob: -12.62565803527832
    8. '(
' → logprob: -13.25065803527832
    9. '<|end|>' → logprob: -13.62565803527832
    10. '(' → logprob: -13.87565803527832

Token 1795: ' bate' (ID: 39378)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.14028209447860718
    2. 'i' → logprob: -3.640282154083252
    3. 'def' → logprob: -3.765282154083252
    4. ']' → logprob: -4.140282154083252
    5. 'b' → logprob: -4.640282154083252
    6. ')' → logprob: -4.765282154083252
    7. 'boats' → logprob: -4.890282154083252
    8. 'ship' → logprob: -5.265282154083252
    9. '[
' → logprob: -5.515282154083252
    10. '[' → logprob: -5.640282154083252

Token 1796: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.004020933993160725
    2. 'ux' → logprob: -5.879021167755127
    3. 'te' → logprob: -6.879021167755127
    4. 'tes' → logprob: -10.004020690917969
    5. 'teurs' → logprob: -10.254020690917969
    6. 'illes' → logprob: -10.379020690917969
    7. 'e' → logprob: -11.254020690917969
    8. 'uves' → logprob: -11.379020690917969
    9. 'ate' → logprob: -12.004020690917969
    10. 'au' → logprob: -12.129020690917969

Token 1797: ' selon' (ID: 27571)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25275519490242004
    2. '   ' → logprob: -1.5027551651000977
    3. '
' → logprob: -7.502755165100098
    4. ' def' → logprob: -8.377755165100098
    5. '    
' → logprob: -10.627755165100098
    6. 'for' → logprob: -11.877755165100098
    7. '	def' → logprob: -12.377755165100098
    8. '```' → logprob: -12.752755165100098
    9. '(def' → logprob: -13.877755165100098
    10. '(' → logprob: -14.127755165100098

Token 1798: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7925686836242676
    2. 'la' → logprob: -1.0425686836242676
    3. 'l' → logprob: -1.9175686836242676
    4. 'leur' → logprob: -4.542568683624268
    5. '   ' → logprob: -4.917568683624268
    6. 'le' → logprob: -5.167568683624268
    7. '#' → logprob: -5.167568683624268
    8. ' la' → logprob: -5.167568683624268
    9. 'def' → logprob: -5.542568683624268
    10. 'leurs' → logprob: -6.417568683624268

Token 1799: ' contr' (ID: 6030)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.8092454075813293
    2. 'spacing' → logprob: -1.4342453479766846
    3. 'position' → logprob: -2.3092453479766846
    4. 'pro' → logprob: -2.4342453479766846
    5. 'dist' → logprob: -2.8092453479766846
    6. 'esp' → logprob: -3.9342453479766846
    7. 'positions' → logprob: -4.309245586395264
    8. 'prox' → logprob: -4.809245586395264
    9. '#' → logprob: -5.059245586395264
    10. 'def' → logprob: -5.934245586395264

Token 1800: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.0009355206857435405
    2. 'aint' → logprob: -7.3759355545043945
    3. 'a' → logprob: -8.375935554504395
    4. 'aints' → logprob: -10.000935554504395
    5. 'ain' → logprob: -10.875935554504395
    6. '
' → logprob: -12.000935554504395
    7. '```' → logprob: -12.875935554504395
    8. '#' → logprob: -13.875935554504395
    9. '``' → logprob: -14.000935554504395
    10. 'aiste' → logprob: -14.125935554504395

Token 1801: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017086135921999812
    2. '   ' → logprob: -6.501708507537842
    3. 'for' → logprob: -9.001708984375
    4. 'i' → logprob: -11.126708984375
    5. '```' → logprob: -11.126708984375
    6. ' def' → logprob: -11.251708984375
    7. '#' → logprob: -12.251708984375
    8. '	def' → logprob: -12.376708984375
    9. 'dé' → logprob: -12.376708984375
    10. '
' → logprob: -12.376708984375

Token 1802: ''esp' (ID: 73244)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.4774685502052307
    2. ''esp' → logprob: -1.227468490600586
    3. ''espace' → logprob: -2.602468490600586
    4. ''éc' → logprob: -5.352468490600586
    5. 'éc' → logprob: -5.977468490600586
    6. 'es' → logprob: -6.227468490600586
    7. 'e' → logprob: -7.227468490600586
    8. ''inter' → logprob: -7.352468490600586
    9. 'spacing' → logprob: -7.477468490600586
    10. 'istance' → logprob: -7.977468490600586

Token 1803: 'acement' (ID: 27929)
  Prédit: 'acement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acement' → logprob: -1.0206720617134124e-05
    2. 'ac' → logprob: -12.00001049041748
    3. 'ace' → logprob: -13.50001049041748
    4. 'ec' → logprob: -13.87501049041748
    5. 'acing' → logprob: -14.37501049041748
    6. 'ancement' → logprob: -15.12501049041748
    7. 'acem' → logprob: -15.37501049041748
    8. 'a' → logprob: -16.000009536743164
    9. 'acer' → logprob: -16.000009536743164
    10. 'acé' → logprob: -16.500009536743164

Token 1804: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012497170828282833
    2. '   ' → logprob: -4.5124969482421875
    3. 'for' → logprob: -6.8874969482421875
    4. 'i' → logprob: -8.262496948242188
    5. '```' → logprob: -9.012496948242188
    6. ' def' → logprob: -11.387496948242188
    7. '(i' → logprob: -11.387496948242188
    8. '
' → logprob: -12.387496948242188
    9. ' for' → logprob: -12.637496948242188
    10. '(' → logprob: -13.137496948242188

Token 1805: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47434529662132263
    2. 'def' → logprob: -0.974345326423645
    3. ' def' → logprob: -8.849345207214355
    4. '
' → logprob: -9.599345207214355
    5. '```' → logprob: -10.599345207214355
    6. '    
' → logprob: -11.224345207214355
    7. 'for' → logprob: -11.974345207214355
    8. '	def' → logprob: -12.599345207214355
    9. '       ' → logprob: -13.599345207214355
    10. '(' → logprob: -13.974345207214355

Token 1806: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008628997951745987
    2. '   ' → logprob: -4.758628845214844
    3. ' def' → logprob: -11.758628845214844
    4. '
' → logprob: -12.008628845214844
    5. '```' → logprob: -15.383628845214844
    6. '    
' → logprob: -15.758628845214844
    7. '	def' → logprob: -15.758628845214844
    8. 'for' → logprob: -18.008628845214844
    9. '\' → logprob: -18.633628845214844
    10. '       ' → logprob: -19.258628845214844

Token 1807: ' adjust' (ID: 10266)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.12966585159301758
    2. ' adjust' → logprob: -2.5046658515930176
    3. 'update' → logprob: -3.3796658515930176
    4. ' update' → logprob: -5.379665851593018
    5. 'def' → logprob: -7.129665851593018
    6. ' ajust' → logprob: -8.87966537475586
    7. ' def' → logprob: -9.12966537475586
    8. '   ' → logprob: -10.12966537475586
    9. 'aj' → logprob: -10.25466537475586
    10. 'apply' → logprob: -10.37966537475586

Token 1808: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.8488724827766418
    2. '_speed' → logprob: -1.473872423171997
    3. '_' → logprob: -1.848872423171997
    4. '_sh' → logprob: -1.973872423171997
    5. '_ship' → logprob: -3.223872423171997
    6. '_vel' → logprob: -5.723872661590576
    7. '_velocity' → logprob: -6.098872661590576
    8. '_all' → logprob: -7.973872661590576
    9. '_b' → logprob: -8.723872184753418
    10. '_bo' → logprob: -9.098872184753418

Token 1809: 'pe' (ID: 424)
  Prédit: 'peed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peed' → logprob: -0.22641491889953613
    2. 'pe' → logprob: -1.6014149188995361
    3. 'hips' → logprob: -7.351414680480957
    4. 'hip' → logprob: -8.601414680480957
    5. '
' → logprob: -10.101414680480957
    6. 'paces' → logprob: -10.601414680480957
    7. 'pee' → logprob: -10.726414680480957
    8. 'p' → logprob: -10.726414680480957
    9. ' pe' → logprob: -11.601414680480957
    10. '_pe' → logprob: -11.726414680480957

Token 1810: 'eds' (ID: 5575)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.004729161038994789
    2. 'eds' → logprob: -5.379729270935059
    3. 'ep' → logprob: -10.629729270935059
    4. 'e' → logprob: -11.129729270935059
    5. 'eed' → logprob: -11.254729270935059
    6. '```' → logprob: -11.754729270935059
    7. 'edig' → logprob: -12.004729270935059
    8. 'edom' → logprob: -12.129729270935059
    9. '_ed' → logprob: -12.254729270935059
    10. 'ct' → logprob: -12.504729270935059

Token 1811: '(current' (ID: 15023)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.524988055229187
    2. '():
' → logprob: -0.899988055229187
    3. '(' → logprob: -7.149988174438477
    4. '(i' → logprob: -7.274988174438477
    5. '()' → logprob: -8.774988174438477
    6. '   ' → logprob: -9.524988174438477
    7. '():
' → logprob: -10.399988174438477
    8. ' ():' → logprob: -11.024988174438477
    9. '(index' → logprob: -11.024988174438477
    10. '(indent' → logprob: -11.149988174438477

Token 1812: '_time' (ID: 6425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5135816335678101
    2. '_s' → logprob: -1.01358163356781
    3. '_time' → logprob: -4.0135817527771
    4. '_vel' → logprob: -5.5135817527771
    5. ')' → logprob: -5.7635817527771
    6. '_speed' → logprob: -5.8885817527771
    7. '_sh' → logprob: -6.7635817527771
    8. '_)' → logprob: -6.8885817527771
    9. '(i' → logprob: -6.8885817527771
    10. '_v' → logprob: -7.1385817527771

Token 1813: '):
' (ID: 1883)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7854832410812378
    2. '):
' → logprob: -1.0354832410812378
    3. '):' → logprob: -1.7854832410812378
    4. '   ' → logprob: -4.785483360290527
    5. '():
' → logprob: -5.535483360290527
    6. '(' → logprob: -5.660483360290527
    7. '       ' → logprob: -6.410483360290527
    8. '):
' → logprob: -7.160483360290527
    9. '():' → logprob: -7.285483360290527
    10. '()):
' → logprob: -7.410483360290527

Token 1814: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14499491453170776
    2. '       ' → logprob: -2.0199949741363525
    3. '    
' → logprob: -7.019994735717773
    4. '
' → logprob: -7.394994735717773
    5. '	for' → logprob: -8.394994735717773
    6. ' for' → logprob: -8.769994735717773
    7. '    ' → logprob: -8.894994735717773
    8. 'for' → logprob: -9.394994735717773
    9. '        
' → logprob: -9.519994735717773
    10. '	   ' → logprob: -9.769994735717773

Token 1815: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8241620063781738
    2. ' for' → logprob: -1.3241620063781738
    3. 'for' → logprob: -1.4491620063781738
    4. '       ' → logprob: -2.824162006378174
    5. ' changed' → logprob: -8.324161529541016
    6. 'changed' → logprob: -8.324161529541016
    7. '
' → logprob: -8.449161529541016
    8. '	for' → logprob: -9.199161529541016
    9. '    
' → logprob: -9.574161529541016
    10. 'prev' → logprob: -9.824161529541016

Token 1816: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41814902424812317
    2. '       ' → logprob: -1.1681489944458008
    3. ' for' → logprob: -4.168148994445801
    4. '   ' → logprob: -4.543148994445801
    5. 'prev' → logprob: -5.668148994445801
    6. 'changed' → logprob: -7.668148994445801
    7. 'i' → logprob: -8.1681489944458
    8. 'last' → logprob: -8.5431489944458
    9. 'n' → logprob: -9.6681489944458
    10. '#' → logprob: -9.9181489944458

Token 1817: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7367519736289978
    2. '   ' → logprob: -0.9867519736289978
    3. ' for' → logprob: -3.1117520332336426
    4. '       ' → logprob: -3.2367520332336426
    5. 'import' → logprob: -3.3617520332336426
    6. 'def' → logprob: -4.111752033233643
    7. ' ' → logprob: -6.736752033233643
    8. '  ' → logprob: -6.861752033233643
    9. '    ' → logprob: -6.861752033233643
    10. 'n' → logprob: -6.986752033233643

Token 1818: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.2616211771965027
    2. 'ourt' → logprob: -1.5116212368011475
    3. 'oure' → logprob: -5.511620998382568
    4. '_' → logprob: -5.761620998382568
    5. 'court' → logprob: -7.136620998382568
    6. 'our' → logprob: -7.261620998382568
    7. 'c' → logprob: -7.511620998382568
    8. '
' → logprob: -8.761621475219727
    9. 'cours' → logprob: -9.511621475219727
    10. 'ourse' → logprob: -10.261621475219727

Token 1819: ' les' (ID: 1341)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5266327261924744
    2. 'range' → logprob: -0.9016327261924744
    3. '(range' → logprob: -6.151632785797119
    4. '   ' → logprob: -7.526632785797119
    5. '(M' → logprob: -8.526632308959961
    6. '
' → logprob: -8.901632308959961
    7. '	range' → logprob: -9.401632308959961
    8. 'M' → logprob: -9.776632308959961
    9. 's' → logprob: -9.901632308959961
    10. ' reversed' → logprob: -9.901632308959961

Token 1820: ' bate' (ID: 39378)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03866398707032204
    2. ' range' → logprob: -3.2886641025543213
    3. 're' → logprob: -7.913663864135742
    4. 'i' → logprob: -9.413663864135742
    5. 'M' → logprob: -9.538663864135742
    6. ' reversed' → logprob: -10.913663864135742
    7. '   ' → logprob: -11.163663864135742
    8. 'ships' → logprob: -11.163663864135742
    9. ' ' → logprob: -11.413663864135742
    10. '  ' → logprob: -11.413663864135742

Token 1821: 'aux' (ID: 5454)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8271431922912598
    2. 'aux' → logprob: -1.0771431922912598
    3. '``' → logprob: -2.7021431922912598
    4. 'te' → logprob: -3.3271431922912598
    5. 'ts' → logprob: -3.3271431922912598
    6. 't' → logprob: -4.45214319229126
    7. '
' → logprob: -4.57714319229126
    8. 'ateau' → logprob: -4.70214319229126
    9. 'ate' → logprob: -4.95214319229126
    10. 'au' → logprob: -5.07714319229126

Token 1822: ' dans' (ID: 2671)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9598890542984009
    2. '(i' → logprob: -2.0848889350891113
    3. '       ' → logprob: -2.3348889350891113
    4. ' for' → logprob: -2.5848889350891113
    5. '[i' → logprob: -3.0848889350891113
    6. '   ' → logprob: -3.0848889350891113
    7. 'for' → logprob: -3.5848889350891113
    8. ',' → logprob: -3.5848889350891113
    9. 'i' → logprob: -3.7098889350891113
    10. ':' → logprob: -4.209888935089111

Token 1823: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004028533585369587
    2. ' range' → logprob: -5.8790283203125
    3. 're' → logprob: -7.0040283203125
    4. 'reverse' → logprob: -8.6290283203125
    5. 'order' → logprob: -9.2540283203125
    6. 'ordre' → logprob: -11.3790283203125
    7. '	range' → logprob: -11.8790283203125
    8. '   ' → logprob: -12.3790283203125
    9. 'enumer' → logprob: -13.0040283203125
    10. ' ' → logprob: -13.1290283203125

Token 1824: ''ordre' (ID: 124753)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012124145403504372
    2. 'for' → logprob: -5.012124061584473
    3. 're' → logprob: -6.012124061584473
    4. 'reverse' → logprob: -6.512124061584473
    5. ' range' → logprob: -7.262124061584473
    6. '   ' → logprob: -8.387124061584473
    7. 'def' → logprob: -9.387124061584473
    8. 'ange' → logprob: -9.387124061584473
    9. 'sorted' → logprob: -10.137124061584473
    10. 'M' → logprob: -10.512124061584473

Token 1825: ',' (ID: 11)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8120096921920776
    2. '       ' → logprob: -1.8120096921920776
    3. ' range' → logprob: -1.8120096921920776
    4. 'for' → logprob: -2.437009811401367
    5. '(M' → logprob: -2.937009811401367
    6. '(range' → logprob: -3.937009811401367
    7. ' for' → logprob: -4.062009811401367
    8. 'def' → logprob: -4.312009811401367
    9. '   ' → logprob: -5.062009811401367
    10. 'de' → logprob: -5.187009811401367

Token 1826: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4582415521144867
    2. ' for' → logprob: -1.083241581916809
    3. '       ' → logprob: -4.2082414627075195
    4. '   ' → logprob: -4.8332414627075195
    5. 'def' → logprob: -6.3332414627075195
    6. 'range' → logprob: -6.8332414627075195
    7. ' range' → logprob: -7.2082414627075195
    8. '
' → logprob: -7.3332414627075195
    9. '	for' → logprob: -7.8332414627075195
    10. 'pour' → logprob: -7.9582414627075195

Token 1827: ' premier' (ID: 15506)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.531917929649353
    2. 'dern' → logprob: -1.406917929649353
    3. 'M' → logprob: -2.0319180488586426
    4. 'prem' → logprob: -4.781918048858643
    5. 'der' → logprob: -4.906918048858643
    6. '1' → logprob: -4.906918048858643
    7. 'i' → logprob: -5.281918048858643
    8. 'len' → logprob: -5.406918048858643
    9. ' premier' → logprob: -7.156918048858643
    10. 'moins' → logprob: -7.406918048858643

Token 1828: ' (' (ID: 350)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.4021919965744019
    2. ' à' → logprob: -1.4021919965744019
    3. 'for' → logprob: -1.5271919965744019
    4. '=' → logprob: -2.5271921157836914
    5. ' for' → logprob: -3.1521921157836914
    6. 'def' → logprob: -3.5271921157836914
    7. 'au' → logprob: -3.7771921157836914
    8. ' =' → logprob: -4.152192115783691
    9. '0' → logprob: -4.402192115783691
    10. '   ' → logprob: -4.402192115783691

Token 1829: 'plus' (ID: 11601)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.7482485771179199
    2. '0' → logprob: -0.8732485771179199
    3. ' M' → logprob: -2.87324857711792
    4. 'i' → logprob: -3.24824857711792
    5. ' i' → logprob: -5.62324857711792
    6. 'j' → logprob: -6.12324857711792
    7. '1' → logprob: -6.24824857711792
    8. ' ' → logprob: -6.24824857711792
    9. 'range' → logprob: -7.12324857711792
    10. ' j' → logprob: -7.37324857711792

Token 1830: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.40954989194869995
    2. 'pro' → logprob: -1.2845499515533447
    3. ' à' → logprob: -3.9095499515533447
    4. 'près' → logprob: -4.284549713134766
    5. 'avant' → logprob: -4.409549713134766
    6. '```' → logprob: -5.409549713134766
    7. ' proche' → logprob: -6.284549713134766
    8. 'au' → logprob: -6.784549713134766
    9. 'avance' → logprob: -7.034549713134766
    10. '   ' → logprob: -7.034549713134766

Token 1831: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00010998018842656165
    2. 'est' → logprob: -9.250109672546387
    3. 'lest' → logprob: -12.625109672546387
    4. '_l' → logprob: -13.500109672546387
    5. '```' → logprob: -13.500109672546387
    6. '
' → logprob: -13.875109672546387
    7. 'la' → logprob: -14.000109672546387
    8. ' l' → logprob: -14.000109672546387
    9. '	l' → logprob: -14.250109672546387
    10. '$l' → logprob: -14.625109672546387

Token 1832: ''est' (ID: 6616)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.1300571858882904
    2. 'l' → logprob: -2.6300570964813232
    3. 'o' → logprob: -3.8800570964813232
    4. 'n' → logprob: -4.130057334899902
    5. '```' → logprob: -5.505057334899902
    6. 'avant' → logprob: -5.880057334899902
    7. 'c' → logprob: -6.630057334899902
    8. 'ou' → logprob: -7.380057334899902
    9. '   ' → logprob: -7.755057334899902
    10. '  ' → logprob: -8.005057334899902

Token 1833: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012225771322846413
    2. ' vers' → logprob: -5.76222562789917
    3. 'au' → logprob: -6.01222562789917
    4. ' à' → logprob: -6.01222562789917
    5. 'à' → logprob: -6.51222562789917
    6. ' au' → logprob: -7.01222562789917
    7. ' )' → logprob: -7.13722562789917
    8. ',' → logprob: -8.387226104736328
    9. '   ' → logprob: -8.512226104736328
    10. 'vers' → logprob: -9.262226104736328

Token 1834: ' au' (ID: 2791)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.3079396486282349
    2. ' for' → logprob: -1.8079396486282349
    3. ' to' → logprob: -2.3079395294189453
    4. 'for' → logprob: -2.3079395294189453
    5. '       ' → logprob: -2.4329395294189453
    6. '=' → logprob: -2.8079395294189453
    7. ' =' → logprob: -3.1829395294189453
    8. '(' → logprob: -3.4329395294189453
    9. ',' → logprob: -3.6829395294189453
    10. '   ' → logprob: -3.8079395294189453

Token 1835: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.15548132359981537
    2. 'M' → logprob: -2.1554813385009766
    3. 'der' → logprob: -3.9054813385009766
    4. 'second' → logprob: -5.780481338500977
    5. 'last' → logprob: -6.905481338500977
    6. 'su' → logprob: -7.155481338500977
    7. 'prem' → logprob: -7.655481338500977
    8. '```' → logprob: -7.905481338500977
    9. 'plus' → logprob: -8.155481338500977
    10. 'reste' → logprob: -8.155481338500977

Token 1836: ' (' (ID: 350)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.5936546325683594
    2. ' for' → logprob: -1.7186546325683594
    3. '       ' → logprob: -1.9686546325683594
    4. 'for' → logprob: -2.2186546325683594
    5. 'range' → logprob: -2.4686546325683594
    6. '(' → logprob: -2.4686546325683594
    7. ' range' → logprob: -2.9686546325683594
    8. ' (' → logprob: -2.9686546325683594
    9. '(i' → logprob: -3.9686546325683594
    10. ':' → logprob: -4.218654632568359

Token 1837: 'plus' (ID: 11601)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6325390338897705
    2. 'M' → logprob: -1.1325390338897705
    3. 'current' → logprob: -2.7575390338897705
    4. 'last' → logprob: -3.7575390338897705
    5. '   ' → logprob: -4.132538795471191
    6. ' M' → logprob: -4.757538795471191
    7. 'dern' → logprob: -4.757538795471191
    8. '       ' → logprob: -5.132538795471191
    9. ' current' → logprob: -5.882538795471191
    10. ' dernier' → logprob: -5.882538795471191

Token 1838: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.017572298645973206
    2. ' à' → logprob: -4.767572402954102
    3. 'au' → logprob: -5.267572402954102
    4. '   ' → logprob: -6.392572402954102
    5. '```' → logprob: -7.017572402954102
    6. 'loin' → logprob: -7.142572402954102
    7. 'lo' → logprob: -8.767572402954102
    8. '  ' → logprob: -10.017572402954102
    9. 'ou' → logprob: -10.267572402954102
    10. ' ' → logprob: -10.392572402954102

Token 1839: ' l' (ID: 305)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6376056671142578
    2. 'ou' → logprob: -1.3876056671142578
    3. '   ' → logprob: -3.262605667114258
    4. '
' → logprob: -3.262605667114258
    5. 'west' → logprob: -3.512605667114258
    6. '#' → logprob: -3.762605667114258
    7. 'l' → logprob: -4.012605667114258
    8. 'g' → logprob: -4.012605667114258
    9. '``' → logprob: -4.012605667114258
    10. ' ' → logprob: -4.887605667114258

Token 1840: ''ou' (ID: 68966)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.14371253550052643
    2. 'west' → logprob: -2.6437125205993652
    3. '```' → logprob: -3.2687125205993652
    4. '   ' → logprob: -5.268712520599365
    5. 'o' → logprob: -5.768712520599365
    6. '``' → logprob: -6.393712520599365
    7. '__' → logprob: -6.643712520599365
    8. '#' → logprob: -6.643712520599365
    9. ' ' → logprob: -6.643712520599365
    10. '	' → logprob: -6.893712520599365

Token 1841: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -3.726595241460018e-05
    2. 'uest' → logprob: -11.50003719329834
    3. '   ' → logprob: -11.87503719329834
    4. 'e' → logprob: -11.87503719329834
    5. '
' → logprob: -12.37503719329834
    6. 'es' → logprob: -13.75003719329834
    7. '```' → logprob: -14.00003719329834
    8. 'vest' → logprob: -14.00003719329834
    9. 'ест' → logprob: -14.37503719329834
    10. 'ests' → logprob: -14.37503719329834

Token 1842: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03553587198257446
    2. ')' → logprob: -3.7855358123779297
    3. '):' → logprob: -5.16053581237793
    4. '       ' → logprob: -6.16053581237793
    5. ' ):
' → logprob: -6.41053581237793
    6. '   ' → logprob: -7.03553581237793
    7. ':
' → logprob: -7.53553581237793
    8. ')
' → logprob: -8.03553581237793
    9. '):

' → logprob: -8.78553581237793
    10. ',' → logprob: -8.78553581237793

Token 1843: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016532108187675476
    2. '   ' → logprob: -5.016531944274902
    3. ':
' → logprob: -5.516531944274902
    4. ':' → logprob: -5.891531944274902
    5. '
' → logprob: -6.141531944274902
    6. '	' → logprob: -8.516531944274902
    7. '        
' → logprob: -9.266531944274902
    8. ' for' → logprob: -9.641531944274902
    9. '):
' → logprob: -9.641531944274902
    10. ',' → logprob: -9.766531944274902

Token 1844: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3014914393424988
    2. ' for' → logprob: -1.6764914989471436
    3. 'for' → logprob: -2.8014914989471436
    4. '   ' → logprob: -4.4264912605285645
    5. '
' → logprob: -9.051491737365723
    6. '	for' → logprob: -9.426491737365723
    7. ' ' → logprob: -9.426491737365723
    8. '        
' → logprob: -9.676491737365723
    9. ' i' → logprob: -10.176491737365723
    10. 'j' → logprob: -10.426491737365723

Token 1845: ' R' (ID: 460)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8594031929969788
    2. ' for' → logprob: -0.9844031929969788
    3. 'for' → logprob: -1.734403133392334
    4. '   ' → logprob: -3.984403133392334
    5. '
' → logprob: -5.359403133392334
    6. 'prev' → logprob: -7.484403133392334
    7. 'n' → logprob: -7.859403133392334
    8. 'i' → logprob: -7.859403133392334
    9. ' i' → logprob: -8.234403610229492
    10. '        
' → logprob: -8.234403610229492

Token 1846: 'appel' (ID: 100200)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0958961248397827
    2. '   ' → logprob: -1.4708961248397827
    3. 'e' → logprob: -1.9708961248397827
    4. 'eturn' → logprob: -2.5958962440490723
    5. ' for' → logprob: -2.9708962440490723
    6. 'def' → logprob: -3.4708962440490723
    7. ' ' → logprob: -3.4708962440490723
    8. '       ' → logprob: -3.7208962440490723
    9. 'prev' → logprob: -3.9708962440490723
    10. 'em' → logprob: -4.470896244049072

Token 1847: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3369898498058319
    2. ':' → logprob: -2.0869898796081543
    3. '       ' → logprob: -2.7119898796081543
    4. 'def' → logprob: -3.2119898796081543
    5. 'for' → logprob: -4.336989879608154
    6. ' for' → logprob: -4.336989879608154
    7. ' =' → logprob: -5.211989879608154
    8. ' des' → logprob: -5.336989879608154
    9. 'd' → logprob: -5.461989879608154
    10. ' est' → logprob: -6.711989879608154

Token 1848: ' bateau' (ID: 123794)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07725436985492706
    2. ' for' → logprob: -2.702254295349121
    3. '   ' → logprob: -5.327254295349121
    4. '
' → logprob: -6.827254295349121
    5. 'ships' → logprob: -7.827254295349121
    6. '       ' → logprob: -8.077254295349121
    7. ' ships' → logprob: -8.452254295349121
    8. 'prev' → logprob: -9.327254295349121
    9. '```' → logprob: -9.327254295349121
    10. 'M' → logprob: -9.702254295349121

Token 1849: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9011726379394531
    2. '0' → logprob: -1.4011726379394531
    3. 's' → logprob: -1.9011726379394531
    4. '[i' → logprob: -3.526172637939453
    5. ' ' → logprob: -3.651172637939453
    6. ' =' → logprob: -3.651172637939453
    7. '_index' → logprob: -3.651172637939453
    8. '_' → logprob: -3.651172637939453
    9. '   ' → logprob: -4.776172637939453
    10. ' i' → logprob: -5.026172637939453

Token 1850: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0093340873718262
    2. '=' → logprob: -1.5093340873718262
    3. 'i' → logprob: -1.8843340873718262
    4. '[' → logprob: -2.134334087371826
    5. ' =' → logprob: -3.134334087371826
    6. '[i' → logprob: -3.759334087371826
    7. 's' → logprob: -4.384334087371826
    8. '   ' → logprob: -4.759334087371826
    9. '_index' → logprob: -4.884334087371826
    10. 'index' → logprob: -5.384334087371826

Token 1851: ' plus' (ID: 2932)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.14329686760902405
    2. ' is' → logprob: -2.643296957015991
    3. 'est' → logprob: -4.268296718597412
    4. ' avance' → logprob: -4.393296718597412
    5. ' a' → logprob: -4.768296718597412
    6. ' ' → logprob: -6.018296718597412
    7. ' à' → logprob: -6.143296718597412
    8. ' étant' → logprob: -6.268296718597412
    9. ' n' → logprob: -6.518296718597412
    10. ' =' → logprob: -6.643296718597412

Token 1852: ' en' (ID: 469)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6998014450073242
    2. ' à' → logprob: -0.8248014450073242
    3. ' ' → logprob: -3.449801445007324
    4. 'pro' → logprob: -4.699801445007324
    5. '  ' → logprob: -4.824801445007324
    6. ' ' → logprob: -5.199801445007324
    7. '   ' → logprob: -5.324801445007324
    8. 'au' → logprob: -6.199801445007324
    9. 'en' → logprob: -7.449801445007324
    10. ' proche' → logprob: -7.449801445007324

Token 1853: ' am' (ID: 939)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.04587463289499283
    2. 'avant' → logprob: -3.17087459564209
    3. 'avance' → logprob: -6.79587459564209
    4. '```' → logprob: -7.42087459564209
    5. 'aval' → logprob: -8.04587459564209
    6. 'av' → logprob: -8.67087459564209
    7. 'east' → logprob: -8.79587459564209
    8. '_est' → logprob: -9.67087459564209
    9. 'à' → logprob: -9.92087459564209
    10. 'e' → logprob: -10.17087459564209

Token 1854: 'ont' (ID: 645)
  Prédit: 'ont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.0008328551193699241
    2. 'onts' → logprob: -8.000832557678223
    3. 'est' → logprob: -9.000832557678223
    4. 'o' → logprob: -9.500832557678223
    5. '```' → logprob: -10.125832557678223
    6. '_' → logprob: -10.250832557678223
    7. 'ov' → logprob: -10.250832557678223
    8. 'er' → logprob: -10.625832557678223
    9. 'ha' → logprob: -10.750832557678223
    10. '_est' → logprob: -11.375832557678223

Token 1855: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5239365696907043
    2. '   ' → logprob: -2.1489365100860596
    3. ',' → logprob: -2.3989365100860596
    4. '
' → logprob: -2.5239365100860596
    5. ':' → logprob: -4.023936748504639
    6. ':
' → logprob: -4.273936748504639
    7. ' (' → logprob: -4.273936748504639
    8. ' =' → logprob: -4.898936748504639
    9. '<|end|>' → logprob: -4.898936748504639
    10. ' for' → logprob: -5.023936748504639

Token 1856: 'position' (ID: 4504)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18934080004692078
    2. ')' → logprob: -2.939340829849243
    3. '0' → logprob: -3.564340829849243
    4. ' ' → logprob: -3.939340829849243
    5. ' M' → logprob: -4.314340591430664
    6. 'i' → logprob: -4.314340591430664
    7. ' i' → logprob: -4.439340591430664
    8. 'M' → logprob: -5.439340591430664
    9. ' à' → logprob: -5.564340591430664
    10. ' vers' → logprob: -5.814340591430664

Token 1857: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.168358564376831
    2. '=' → logprob: -1.793358564376831
    3. ' <' → logprob: -1.918358564376831
    4. '+' → logprob: -2.293358564376831
    5. ' +' → logprob: -2.918358564376831
    6. ' >=' → logprob: -3.418358564376831
    7. '[' → logprob: -3.543358564376831
    8. ' =' → logprob: -3.668358564376831
    9. '>=' → logprob: -3.918358564376831
    10. ' >' → logprob: -3.918358564376831

Token 1858: ' plus' (ID: 2932)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.6107592582702637
    2. 'j' → logprob: -2.3607592582702637
    3. '   ' → logprob: -2.3607592582702637
    4. '+' → logprob: -2.4857592582702637
    5. 'p' → logprob: -2.7357592582702637
    6. ' ' → logprob: -2.8607592582702637
    7. '       ' → logprob: -3.1107592582702637
    8. 'ss' → logprob: -3.3607592582702637
    9. '```' → logprob: -3.6107592582702637
    10. 't' → logprob: -3.8607592582702637

Token 1859: ' élevée' (ID: 150678)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.5698436498641968
    2. 'est' → logprob: -1.5698436498641968
    3. 'à' → logprob: -1.8198436498641968
    4. 'é' → logprob: -3.5698437690734863
    5. 'pro' → logprob: -4.569843769073486
    6. 'import' → logprob: -4.569843769073486
    7. ' ' → logprob: -4.819843769073486
    8. '  ' → logprob: -6.444843769073486
    9. '```' → logprob: -6.569843769073486
    10. 'grand' → logprob: -7.194843769073486

Token 1860: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2721271216869354
    2. ' )' → logprob: -2.022127151489258
    3. '),' → logprob: -2.772127151489258
    4. ' ),' → logprob: -4.147127151489258
    5. '+' → logprob: -4.397127151489258
    6. ' +' → logprob: -5.272127151489258
    7. ',' → logprob: -5.897127151489258
    8. ')
' → logprob: -7.272127151489258
    9. 'des' → logprob: -7.272127151489258
    10. '0' → logprob: -7.647127151489258

Token 1861: ' au' (ID: 2791)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2718160152435303
    2. '   ' → logprob: -1.7718160152435303
    3. ':
' → logprob: -2.0218160152435303
    4. '
' → logprob: -2.1468160152435303
    5. '<|end|>' → logprob: -2.5218160152435303
    6. 'for' → logprob: -3.1468160152435303
    7. '       ' → logprob: -3.1468160152435303
    8. ' for' → logprob: -3.6468160152435303
    9. ',' → logprob: -3.8968160152435303
    10. ' =' → logprob: -4.146816253662109

Token 1862: ' départ' (ID: 32693)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.4699771404266357
    2. 'i' → logprob: -1.7199771404266357
    3. 'j' → logprob: -2.3449771404266357
    4. 'moins' → logprob: -2.3449771404266357
    5. '#' → logprob: -2.4699771404266357
    6. 'def' → logprob: -2.7199771404266357
    7. '-' → logprob: -3.2199771404266357
    8. 'jourd' → logprob: -3.4699771404266357
    9. '   ' → logprob: -3.9699771404266357
    10. '       ' → logprob: -4.344977378845215

Token 1863: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0162272453308105
    2. '       ' → logprob: -1.5162272453308105
    3. '
' → logprob: -2.0162272453308105
    4. '   ' → logprob: -2.5162272453308105
    5. ':' → logprob: -2.8912272453308105
    6. 'for' → logprob: -3.2662272453308105
    7. ':
' → logprob: -3.2662272453308105
    8. ',' → logprob: -4.3912272453308105
    9. '):
' → logprob: -4.3912272453308105
    10. ' range' → logprob: -4.8912272453308105

Token 1864: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010886993259191513
    2. '
' → logprob: -4.885887145996094
    3. '   ' → logprob: -6.260887145996094
    4. ' for' → logprob: -7.885887145996094
    5. ':' → logprob: -8.635887145996094
    6. '```' → logprob: -8.760887145996094
    7. '        
' → logprob: -8.885887145996094
    8. '):
' → logprob: -9.260887145996094
    9. ':
' → logprob: -9.260887145996094
    10. 'for' → logprob: -9.635887145996094

Token 1865: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48274603486061096
    2. 'for' → logprob: -1.6077460050582886
    3. ' for' → logprob: -1.7327460050582886
    4. '   ' → logprob: -5.607746124267578
    5. '
' → logprob: -6.982746124267578
    6. 'prev' → logprob: -7.732746124267578
    7. '        
' → logprob: -8.857746124267578
    8. ' ' → logprob: -8.982746124267578
    9. 'n' → logprob: -9.607746124267578
    10. '	for' → logprob: -9.857746124267578

Token 1866: ' les' (ID: 1341)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2318861186504364
    2. 'for' → logprob: -1.9818861484527588
    3. ' for' → logprob: -3.106886148452759
    4. '
' → logprob: -4.48188591003418
    5. '   ' → logprob: -4.48188591003418
    6. '        
' → logprob: -7.35688591003418
    7. 'def' → logprob: -8.48188591003418
    8. 'n' → logprob: -8.48188591003418
    9. '	for' → logprob: -8.85688591003418
    10. '           ' → logprob: -9.23188591003418

Token 1867: ' bate' (ID: 39378)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5544939637184143
    2. ' for' → logprob: -1.4294939041137695
    3. 'i' → logprob: -3.5544939041137695
    4. 'def' → logprob: -3.6794939041137695
    5. 'n' → logprob: -4.0544939041137695
    6. '   ' → logprob: -4.4294939041137695
    7. 'prev' → logprob: -4.5544939041137695
    8. '#' → logprob: -4.6794939041137695
    9. 'last' → logprob: -4.9294939041137695
    10. 'j' → logprob: -4.9294939041137695

Token 1868: 'aux' (ID: 5454)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5120429396629333
    2. 'ts' → logprob: -1.5120429992675781
    3. 'aux' → logprob: -2.762042999267578
    4. 'te' → logprob: -3.262042999267578
    5. 'ux' → logprob: -3.387042999267578
    6. 'to' → logprob: -3.512042999267578
    7. 'tos' → logprob: -5.137042999267578
    8. 'tons' → logprob: -5.512042999267578
    9. '#' → logprob: -7.387042999267578
    10. '```' → logprob: -7.512042999267578

Token 1869: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3914930820465088
    2. '   ' → logprob: -2.016493082046509
    3. 's' → logprob: -2.141493082046509
    4. '=' → logprob: -2.266493082046509
    5. '[i' → logprob: -2.391493082046509
    6. '[' → logprob: -3.016493082046509
    7. ' sont' → logprob: -3.266493082046509
    8. '0' → logprob: -3.266493082046509
    9. 'range' → logprob: -3.766493082046509
    10. ' ' → logprob: -4.01649284362793

Token 1870: ' en' (ID: 469)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5050475001335144
    2. '   ' → logprob: -1.3800475597381592
    3. 'sorted' → logprob: -2.630047559738159
    4. 're' → logprob: -3.630047559738159
    5. ' range' → logprob: -4.13004732131958
    6. '
' → logprob: -5.25504732131958
    7. 'rang' → logprob: -5.38004732131958
    8. 'for' → logprob: -5.50504732131958
    9. 'reverse' → logprob: -5.75504732131958
    10. 'len' → logprob: -5.75504732131958

Token 1871: ' positions' (ID: 15897)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3596978485584259
    2. 'pos' → logprob: -1.7346978187561035
    3. 'position' → logprob: -2.9846978187561035
    4. 'ordre' → logprob: -3.3596978187561035
    5. 'sorted' → logprob: -4.1096978187561035
    6. '#' → logprob: -4.4846978187561035
    7. 'ord' → logprob: -5.9846978187561035
    8. 'reverse' → logprob: -6.1096978187561035
    9. ' ordre' → logprob: -6.6096978187561035
    10. '```' → logprob: -6.7346978187561035

Token 1872: ' cro' (ID: 11270)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2519179582595825
    2. '[' → logprob: -1.8769179582595825
    3. 'sorted' → logprob: -2.251917839050293
    4. 'range' → logprob: -2.501917839050293
    5. '```' → logprob: -3.251917839050293
    6. '[]' → logprob: -3.251917839050293
    7. 'tr' → logprob: -3.251917839050293
    8. '  ' → logprob: -3.376917839050293
    9. ' ' → logprob: -4.001917839050293
    10. '[:]' → logprob: -4.001917839050293

Token 1873: 'iss' (ID: 1009)
  Prédit: 'issante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.01233021728694439
    2. 'issant' → logprob: -5.637330055236816
    3. 'iss' → logprob: -6.137330055236816
    4. 'issance' → logprob: -6.512330055236816
    5. 'ss' → logprob: -6.512330055236816
    6. 'issement' → logprob: -6.762330055236816
    7. 'ment' → logprob: -6.887330055236816
    8. 'i' → logprob: -8.262330055236816
    9. 'issants' → logprob: -8.387330055236816
    10. 'is' → logprob: -9.012330055236816

Token 1874: 'antes' (ID: 5193)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08092723041772842
    2. 'ante' → logprob: -3.4559271335601807
    3. 'ant' → logprob: -3.9559271335601807
    4. 'ss' → logprob: -4.95592737197876
    5. 'sent' → logprob: -5.20592737197876
    6. 'antes' → logprob: -5.33092737197876
    7. 'issante' → logprob: -6.08092737197876
    8. 'ment' → logprob: -6.58092737197876
    9. '#' → logprob: -7.33092737197876
    10. 'issant' → logprob: -7.83092737197876

Token 1875: ' (' (ID: 350)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6711575984954834
    2. '[::-' → logprob: -1.4211575984954834
    3. ':' → logprob: -2.4211575984954834
    4. '[i' → logprob: -3.0461575984954834
    5. '   ' → logprob: -3.5461575984954834
    6. '[' → logprob: -3.9211575984954834
    7. '       ' → logprob: -4.0461578369140625
    8. ' :
' → logprob: -4.6711578369140625
    9. ',' → logprob: -4.9211578369140625
    10. '
' → logprob: -5.0461578369140625

Token 1876: 'position' (ID: 4504)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7485500574111938
    2. ' range' → logprob: -1.1235500574111938
    3. '0' → logprob: -3.3735499382019043
    4. ')' → logprob: -3.3735499382019043
    5. '1' → logprob: -3.7485499382019043
    6. ' i' → logprob: -4.123549938201904
    7. ' reverse' → logprob: -4.248549938201904
    8. ' ' → logprob: -4.248549938201904
    9. 'reverse' → logprob: -4.248549938201904
    10. 'i' → logprob: -4.873549938201904

Token 1877: ' -' (ID: 533)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.1860400438308716
    2. ' <' → logprob: -1.3110400438308716
    3. ' >=' → logprob: -2.311039924621582
    4. ')' → logprob: -2.811039924621582
    5. 's' → logprob: -3.186039924621582
    6. '   ' → logprob: -3.686039924621582
    7. '[' → logprob: -3.811039924621582
    8. '<=' → logprob: -3.811039924621582
    9. '>=' → logprob: -3.936039924621582
    10. '[i' → logprob: -3.936039924621582

Token 1878: 'i' (ID: 72)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8496522307395935
    2. '=' → logprob: -0.9746522307395935
    3. 'i' → logprob: -2.3496522903442383
    4. ' i' → logprob: -3.8496522903442383
    5. ' ' → logprob: -4.224652290344238
    6. '+' → logprob: -4.474652290344238
    7. 'def' → logprob: -4.974652290344238
    8. ' =' → logprob: -5.474652290344238
    9. 's' → logprob: -5.724652290344238
    10. 'for' → logprob: -5.724652290344238

Token 1879: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5298413038253784
    2. '))' → logprob: -1.5298413038253784
    3. '+' → logprob: -2.279841423034668
    4. '])' → logprob: -4.404841423034668
    5. ' +' → logprob: -4.654841423034668
    6. '),' → logprob: -4.779841423034668
    7. '-' → logprob: -4.779841423034668
    8. ',' → logprob: -5.154841423034668
    9. ']' → logprob: -5.154841423034668
    10. ']))' → logprob: -5.279841423034668

Token 1880: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08888743817806244
    2. '
' → logprob: -2.9638874530792236
    3. '   ' → logprob: -3.5888874530792236
    4. ' for' → logprob: -5.7138872146606445
    5. '        
' → logprob: -7.5888872146606445
    6. 'for' → logprob: -7.7138872146606445
    7. ':
' → logprob: -8.338887214660645
    8. ':' → logprob: -8.588887214660645
    9. '```' → logprob: -8.588887214660645
    10. ' 
' → logprob: -8.963887214660645

Token 1881: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4105060398578644
    2. ' for' → logprob: -1.285506010055542
    3. 'for' → logprob: -3.035506010055542
    4. '   ' → logprob: -5.160506248474121
    5. '
' → logprob: -5.285506248474121
    6. '        
' → logprob: -7.535506248474121
    7. '```' → logprob: -9.035506248474121
    8. ' ' → logprob: -9.535506248474121
    9. ' ' → logprob: -9.535506248474121
    10. '	for' → logprob: -9.660506248474121

Token 1882: ' Il' (ID: 5329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6549944877624512
    2. '       ' → logprob: -1.0299944877624512
    3. ' for' → logprob: -2.279994487762451
    4. '   ' → logprob: -4.154994487762451
    5. '
' → logprob: -5.779994487762451
    6. 'def' → logprob: -6.529994487762451
    7. 'n' → logprob: -8.02999496459961
    8. 'prev' → logprob: -8.77999496459961
    9. 'i' → logprob: -9.40499496459961
    10. '        
' → logprob: -9.52999496459961

Token 1883: ' faut' (ID: 17821)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18111662566661835
    2. '       ' → logprob: -3.4311165809631348
    3. 'def' → logprob: -3.8061165809631348
    4. ' n' → logprob: -3.9311165809631348
    5. 's' → logprob: -4.306116580963135
    6. 'n' → logprob: -4.306116580963135
    7. ' ' → logprob: -4.806116580963135
    8. 'for' → logprob: -4.931116580963135
    9. '    ' → logprob: -5.181116580963135
    10. ' est' → logprob: -5.181116580963135

Token 1884: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28428271412849426
    2. '   ' → logprob: -1.5342826843261719
    3. ' for' → logprob: -3.909282684326172
    4. '
' → logprob: -5.284282684326172
    5. '       ' → logprob: -6.659282684326172
    6. 'forcer' → logprob: -6.784282684326172
    7. '	for' → logprob: -7.159282684326172
    8. ' ' → logprob: -7.284282684326172
    9. '  ' → logprob: -7.409282684326172
    10. '    
' → logprob: -7.534282684326172

Token 1885: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022046612575650215
    2. ' for' → logprob: -4.7720465660095215
    3. '   ' → logprob: -4.8970465660095215
    4. 'M' → logprob: -6.1470465660095215
    5. 'True' → logprob: -6.5220465660095215
    6. ' M' → logprob: -7.2720465660095215
    7. '
' → logprob: -7.3970465660095215
    8. 'range' → logprob: -8.39704704284668
    9. 'i' → logprob: -8.52204704284668
    10. '  ' → logprob: -9.27204704284668

Token 1886: ' bateau' (ID: 123794)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21222509443759918
    2. ' for' → logprob: -2.0872251987457275
    3. 'last' → logprob: -3.7122251987457275
    4. 'i' → logprob: -4.587224960327148
    5. ' last' → logprob: -5.087224960327148
    6. 'M' → logprob: -5.462224960327148
    7. 'prev' → logprob: -5.712224960327148
    8. ' M' → logprob: -6.212224960327148
    9. 'n' → logprob: -6.212224960327148
    10. '```' → logprob: -6.587224960327148

Token 1887: ' suivant' (ID: 68705)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3593046963214874
    2. '0' → logprob: -1.484304666519165
    3. 'i' → logprob: -4.359304904937744
    4. '[' → logprob: -4.609304904937744
    5. 'so' → logprob: -4.609304904937744
    6. ' i' → logprob: -4.859304904937744
    7. ' soit' → logprob: -5.234304904937744
    8. 'for' → logprob: -5.609304904937744
    9. '[i' → logprob: -5.734304904937744
    10. ' ' → logprob: -5.859304904937744

Token 1888: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.6687199473381042
    2. 'ne' → logprob: -1.793720006942749
    3. ' soit' → logprob: -2.168720006942749
    4. 'so' → logprob: -2.293720006942749
    5. 'n' → logprob: -3.043720006942749
    6. 's' → logprob: -4.16871976852417
    7. ' respecte' → logprob: -4.16871976852417
    8. '   ' → logprob: -5.16871976852417
    9. ' n' → logprob: -5.16871976852417
    10. 'i' → logprob: -5.91871976852417

Token 1889: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -1.4753739833831787
    2. ' be' → logprob: -1.6003739833831787
    3. ' dépasse' → logprob: -2.3503739833831787
    4. '_' → logprob: -2.4753739833831787
    5. ' s' → logprob: -2.7253739833831787
    6. ' ' → logprob: -3.1003739833831787
    7. 's' → logprob: -3.3503739833831787
    8. ' <=' → logprob: -3.4753739833831787
    9. ' puisse' → logprob: -3.9753739833831787
    10. ' n' → logprob: -4.100374221801758

Token 1890: ' jamais' (ID: 23077)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.33719533681869507
    2. 'plus' → logprob: -2.21219539642334
    3. ' jamais' → logprob: -2.46219539642334
    4. 'jam' → logprob: -2.46219539642334
    5. 'à' → logprob: -5.58719539642334
    6. '>' → logprob: -6.71219539642334
    7. ' pas' → logprob: -7.21219539642334
    8. ' plus' → logprob: -8.96219539642334
    9. 'strict' → logprob: -8.96219539642334
    10. 't' → logprob: -9.71219539642334

Token 1891: ' a' (ID: 261)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.18900996446609497
    2. 'à' → logprob: -1.8140099048614502
    3. 'au' → logprob: -5.439010143280029
    4. '>' → logprob: -6.314010143280029
    5. ' plus' → logprob: -7.064010143280029
    6. 'sup' → logprob: -7.689010143280029
    7. '+' → logprob: -7.939010143280029
    8. ' à' → logprob: -8.064009666442871
    9. 'strict' → logprob: -8.189009666442871
    10. 'loin' → logprob: -8.689009666442871

Token 1892: ' moins' (ID: 15924)
  Prédit: ' moins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moins' → logprob: -0.6188836097717285
    2. 'moins' → logprob: -1.6188836097717285
    3. 'u' → logprob: -1.8688836097717285
    4. ' less' → logprob: -3.9938836097717285
    5. ']' → logprob: -4.2438836097717285
    6. 'ccess' → logprob: -4.4938836097717285
    7. ' ' → logprob: -4.8688836097717285
    8. '+' → logprob: -5.3688836097717285
    9. ' plus' → logprob: -5.4938836097717285
    10. ' max' → logprob: -5.6188836097717285

Token 1893: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.666156530380249
    2. 'd' → logprob: -0.916156530380249
    3. ' de' → logprob: -2.666156530380249
    4. 'de' → logprob: -4.291156768798828
    5. '1' → logprob: -6.791156768798828
    6. '   ' → logprob: -7.041156768798828
    7. '       ' → logprob: -7.666156768798828
    8. '    ' → logprob: -9.041156768798828
    9. '        ' → logprob: -9.041156768798828
    10. '_' → logprob: -9.041156768798828

Token 1894: ''' (ID: 6)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007745274808257818
    2. ' ' → logprob: -4.882745265960693
    3. '  ' → logprob: -9.882745742797852
    4. '   ' → logprob: -10.007745742797852
    5. '0' → logprob: -11.382745742797852
    6. '```' → logprob: -11.382745742797852
    7. 'EPS' → logprob: -11.882745742797852
    8. '=' → logprob: -12.757745742797852
    9. ' EPS' → logprob: -13.007745742797852
    10. '    ' → logprob: -13.257745742797852

Token 1895: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.750096321105957
    3. 'EPS' → logprob: -10.375096321105957
    4. '0' → logprob: -12.875096321105957
    5. '```' → logprob: -13.625096321105957
    6. '-' → logprob: -14.375096321105957
    7. '  ' → logprob: -14.750096321105957
    8. '   ' → logprob: -14.875096321105957
    9. '100' → logprob: -15.000096321105957
    10. ' EPS' → logprob: -15.000096321105957

Token 1896: ' km' (ID: 8571)
  Prédit: ' km'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' km' → logprob: -0.31828802824020386
    2. 'km' → logprob: -1.3182880878448486
    3. '.' → logprob: -5.5682878494262695
    4. '_' → logprob: -7.9432878494262695
    5. ' ' → logprob: -8.44328784942627
    6. '000' → logprob: -8.69328784942627
    7. ' ' → logprob: -8.81828784942627
    8. 'm' → logprob: -9.44328784942627
    9. ' *' → logprob: -10.56828784942627
    10. '0' → logprob: -10.56828784942627

Token 1897: ' derrière' (ID: 70948)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.2431269884109497
    2. 'entre' → logprob: -1.2431269884109497
    3. 'du' → logprob: -1.9931269884109497
    4. ' entre' → logprob: -1.9931269884109497
    5. '.' → logprob: -3.86812686920166
    6. ' de' → logprob: -3.99312686920166
    7. '   ' → logprob: -4.11812686920166
    8. 'au' → logprob: -4.24312686920166
    9. '```' → logprob: -4.36812686920166
    10. ' du' → logprob: -4.36812686920166

Token 1898: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3778802752494812
    2. '   ' → logprob: -1.502880334854126
    3. '
' → logprob: -3.252880334854126
    4. 'def' → logprob: -4.002880096435547
    5. 'for' → logprob: -4.127880096435547
    6. ',' → logprob: -5.502880096435547
    7. ' for' → logprob: -5.877880096435547
    8. '        
' → logprob: -6.377880096435547
    9. ':
' → logprob: -6.752880096435547
    10. ' ' → logprob: -7.252880096435547

Token 1899: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012061846209689975
    2. '
' → logprob: -7.751206398010254
    3. '   ' → logprob: -8.001206398010254
    4. ' for' → logprob: -9.251206398010254
    5. '        
' → logprob: -9.876206398010254
    6. ',' → logprob: -9.876206398010254
    7. 'for' → logprob: -10.001206398010254
    8. '           ' → logprob: -10.376206398010254
    9. '```' → logprob: -10.876206398010254
    10. 'def' → logprob: -11.001206398010254

Token 1900: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34871554374694824
    2. ' for' → logprob: -1.9737155437469482
    3. 'for' → logprob: -2.2237155437469482
    4. '
' → logprob: -3.5987155437469482
    5. '   ' → logprob: -3.9737155437469482
    6. '        
' → logprob: -7.598715782165527
    7. '           ' → logprob: -9.473715782165527
    8. '    
' → logprob: -9.598715782165527
    9. 'def' → logprob: -9.723715782165527
    10. ' ' → logprob: -9.723715782165527

Token 1901: ' règle' (ID: 115826)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7865846157073975
    2. '       ' → logprob: -1.1615846157073975
    3. 'for' → logprob: -1.5365846157073975
    4. '   ' → logprob: -4.411584854125977
    5. '
' → logprob: -6.411584854125977
    6. ' i' → logprob: -7.286584854125977
    7. 'i' → logprob: -7.411584854125977
    8. 'n' → logprob: -8.161584854125977
    9. 'def' → logprob: -8.161584854125977
    10. 'prev' → logprob: -8.536584854125977

Token 1902: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8455680012702942
    2. ' =' → logprob: -1.4705679416656494
    3. '   ' → logprob: -2.2205679416656494
    4. ':' → logprob: -2.2205679416656494
    5. ' for' → logprob: -3.2205679416656494
    6. '=' → logprob: -3.2205679416656494
    7. ':
' → logprob: -4.5955681800842285
    8. 'for' → logprob: -4.7205681800842285
    9. ' :' → logprob: -5.2205681800842285
    10. 'def' → logprob: -5.3455681800842285

Token 1903: ' si' (ID: 1784)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05551333725452423
    2. ' for' → logprob: -2.930513381958008
    3. '   ' → logprob: -8.430513381958008
    4. 'prev' → logprob: -8.555513381958008
    5. '       ' → logprob: -8.680513381958008
    6. '
' → logprob: -10.805513381958008
    7. '	for' → logprob: -11.805513381958008
    8. ' prev' → logprob: -12.180513381958008
    9. 'i' → logprob: -12.555513381958008
    10. 'n' → logprob: -12.680513381958008

Token 1904: ' bateau' (ID: 123794)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.6575517058372498
    2. ' ships' → logprob: -1.2825517654418945
    3. 'i' → logprob: -1.7825517654418945
    4. ' i' → logprob: -3.5325517654418945
    5. 'ship' → logprob: -5.6575517654418945
    6. '   ' → logprob: -7.4075517654418945
    7. 's' → logprob: -7.4075517654418945
    8. 'j' → logprob: -7.5325517654418945
    9. ' ship' → logprob: -8.407551765441895
    10. ' s' → logprob: -8.532551765441895

Token 1905: ' j' (ID: 441)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.6252378821372986
    2. ' suivant' → logprob: -1.6252379417419434
    3. 's' → logprob: -2.6252379417419434
    4. 'i' → logprob: -2.7502379417419434
    5. '_s' → logprob: -3.0002379417419434
    6. ' i' → logprob: -3.6252379417419434
    7. '   ' → logprob: -4.000237941741943
    8. ' su' → logprob: -4.875237941741943
    9. ' suivante' → logprob: -4.875237941741943
    10. ' following' → logprob: -5.375237941741943

Token 1906: ' r' (ID: 428)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2058662623167038
    2. ' <' → logprob: -2.9558663368225098
    3. 's' → logprob: -3.5808663368225098
    4. ' ==' → logprob: -3.9558663368225098
    5. '=' → logprob: -4.20586633682251
    6. '==' → logprob: -4.20586633682251
    7. '_' → logprob: -4.58086633682251
    8. '0' → logprob: -4.95586633682251
    9. ' est' → logprob: -5.45586633682251
    10. '   ' → logprob: -5.45586633682251

Token 1907: 'attr' (ID: 6035)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.27625158429145813
    2. 'este' → logprob: -2.2762515544891357
    3. 'e' → logprob: -2.4012515544891357
    4. 'é' → logprob: -3.7762515544891357
    5. 'è' → logprob: -5.401251792907715
    6. '>=' → logprob: -5.901251792907715
    7. '<' → logprob: -6.151251792907715
    8. 'és' → logprob: -6.401251792907715
    9. 'es' → logprob: -6.526251792907715
    10. '>' → logprob: -6.901251792907715

Token 1908: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.07364436239004135
    2. 'ope' → logprob: -2.9486443996429443
    3. 'ouve' → logprob: -4.698644161224365
    4. 'oupe' → logprob: -5.448644161224365
    5. 'eve' → logprob: -6.448644161224365
    6. 'ove' → logprob: -6.698644161224365
    7. 'upe' → logprob: -7.323644161224365
    8. 'ap' → logprob: -7.573644161224365
    9. 'apé' → logprob: -8.448644638061523
    10. 'ait' → logprob: -8.823644638061523

Token 1909: ' bateau' (ID: 123794)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39747291803359985
    2. 'j' → logprob: -2.272472858428955
    3. ' j' → logprob: -2.397472858428955
    4. 'le' → logprob: -3.772472858428955
    5. '   ' → logprob: -4.272472858428955
    6. 'son' → logprob: -4.397472858428955
    7. ' i' → logprob: -4.397472858428955
    8. ' ' → logprob: -4.522472858428955
    9. ' le' → logprob: -4.522472858428955
    10. '=' → logprob: -4.772472858428955

Token 1910: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1391793042421341
    2. ' j' → logprob: -2.264179229736328
    3. 'i' → logprob: -3.764179229736328
    4. ' i' → logprob: -6.014179229736328
    5. ' ' → logprob: -9.014179229736328
    6. ' devant' → logprob: -9.639179229736328
    7. '
' → logprob: -10.014179229736328
    8. '   ' → logprob: -10.514179229736328
    9. '(j' → logprob: -11.139179229736328
    10. '_' → logprob: -11.139179229736328

Token 1911: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5867488384246826
    2. ' ' → logprob: -2.4617488384246826
    3. ' ,' → logprob: -2.4617488384246826
    4. '+' → logprob: -2.7117488384246826
    5. '   ' → logprob: -3.0867488384246826
    6. ' j' → logprob: -3.4617488384246826
    7. 's' → logprob: -4.086749076843262
    8. '_' → logprob: -4.086749076843262
    9. '=' → logprob: -4.461749076843262
    10. ' =' → logprob: -4.711749076843262

Token 1912: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.44903695583343506
    2. ' j' → logprob: -1.074036955833435
    3. '=' → logprob: -5.449037075042725
    4. ' i' → logprob: -5.574037075042725
    5. '+' → logprob: -5.824037075042725
    6. 'i' → logprob: -6.074037075042725
    7. ')' → logprob: -6.449037075042725
    8. ' =' → logprob: -6.449037075042725
    9. '=j' → logprob: -7.074037075042725
    10. ' ' → logprob: -7.699037075042725

Token 1913: '>' (ID: 29)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5401453971862793
    2. '+' → logprob: -1.2901453971862793
    3. ' <=' → logprob: -2.9151453971862793
    4. ' +' → logprob: -3.1651453971862793
    5. ' >' → logprob: -4.790145397186279
    6. '<' → logprob: -4.915145397186279
    7. ' >=' → logprob: -4.915145397186279
    8. '<=' → logprob: -5.290145397186279
    9. ' -' → logprob: -5.540145397186279
    10. ')' → logprob: -5.915145397186279

Token 1914: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0028223509434610605
    2. ' i' → logprob: -5.877822399139404
    3. 'j' → logprob: -11.752821922302246
    4. ' ' → logprob: -13.377821922302246
    5. '   ' → logprob: -13.377821922302246
    6. '0' → logprob: -13.502821922302246
    7. '
' → logprob: -13.877821922302246
    8. ' ' → logprob: -14.502821922302246
    9. '_i' → logprob: -14.502821922302246
    10. '  ' → logprob: -14.627821922302246

Token 1915: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2003687620162964
    2. '):
' → logprob: -2.575368881225586
    3. '+' → logprob: -3.450368881225586
    4. ' ),' → logprob: -3.825368881225586
    5. ')' → logprob: -4.200368881225586
    6. '):' → logprob: -4.450368881225586
    7. '=' → logprob: -5.075368881225586
    8. ':' → logprob: -5.700368881225586
    9. ',' → logprob: -6.325368881225586
    10. ' +' → logprob: -6.450368881225586

Token 1916: ' alors' (ID: 17971)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.27127543091773987
    2. '           ' → logprob: -2.646275520324707
    3. ' j' → logprob: -3.396275520324707
    4. ' if' → logprob: -3.896275520324707
    5. '#' → logprob: -3.896275520324707
    6. 'il' → logprob: -4.146275520324707
    7. '       ' → logprob: -4.396275520324707
    8. ' alors' → logprob: -4.521275520324707
    9. '   ' → logprob: -4.896275520324707
    10. ' #' → logprob: -5.271275520324707

Token 1917: ' V' (ID: 631)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.11693299561738968
    2. 'if' → logprob: -2.7419331073760986
    3. '           ' → logprob: -3.2419331073760986
    4. '       ' → logprob: -6.3669328689575195
    5. ' ships' → logprob: -6.6169328689575195
    6. '   ' → logprob: -6.9919328689575195
    7. '
' → logprob: -7.2419328689575195
    8. 's' → logprob: -7.9919328689575195
    9. 'boats' → logprob: -8.11693286895752
    10. ' if' → logprob: -8.24193286895752

Token 1918: '_j' (ID: 12021)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.26343297958374023
    2. '=' → logprob: -2.0134329795837402
    3. '=j' → logprob: -3.5134329795837402
    4. 'j' → logprob: -3.7634329795837402
    5. ' =' → logprob: -4.13843297958374
    6. '[i' → logprob: -4.26343297958374
    7. 'max' → logprob: -5.13843297958374
    8. 's' → logprob: -6.63843297958374
    9. '_j' → logprob: -6.63843297958374
    10. 'i' → logprob: -6.63843297958374

Token 1919: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0034937579184770584
    2. ' =' → logprob: -6.253493785858154
    3. '<=' → logprob: -6.628493785858154
    4. ' <=' → logprob: -9.503493309020996
    5. '≤' → logprob: -9.503493309020996
    6. '=max' → logprob: -10.253493309020996
    7. ' ≤' → logprob: -12.003493309020996
    8. '=j' → logprob: -12.003493309020996
    9. ')' → logprob: -12.253493309020996
    10. '=min' → logprob: -12.253493309020996

Token 1920: ' V' (ID: 631)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.0008808538550511003
    2. 'min' → logprob: -7.250880718231201
    3. ' ships' → logprob: -8.87588119506836
    4. 's' → logprob: -11.12588119506836
    5. '   ' → logprob: -12.12588119506836
    6. 'ship' → logprob: -12.50088119506836
    7. 'boats' → logprob: -13.00088119506836
    8. ' min' → logprob: -13.62588119506836
    9. '```' → logprob: -14.00088119506836
    10. '       ' → logprob: -14.62588119506836

Token 1921: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.06037865951657295
    2. 'i' → logprob: -3.1853785514831543
    3. '[i' → logprob: -4.310378551483154
    4. 's' → logprob: -6.560378551483154
    5. '_j' → logprob: -7.185378551483154
    6. 'j' → logprob: -7.435378551483154
    7. 'g' → logprob: -8.310379028320312
    8. '{i' → logprob: -8.935379028320312
    9. '[' → logprob: -9.185379028320312
    10. '```' → logprob: -9.435379028320312

Token 1922: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4326784014701843
    2. '
' → logprob: -1.057678461074829
    3. '   ' → logprob: -6.93267822265625
    4. '\n' → logprob: -7.80767822265625
    5. '
' → logprob: -7.80767822265625
    6. ' for' → logprob: -7.80767822265625
    7. '        
' → logprob: -8.05767822265625
    8. 'for' → logprob: -8.43267822265625
    9. '  
' → logprob: -8.55767822265625
    10. '```' → logprob: -8.55767822265625

Token 1923: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029771067202091217
    2. '           ' → logprob: -7.502976894378662
    3. '               ' → logprob: -8.00297737121582
    4. '<|end|>' → logprob: -8.00297737121582
    5. '
' → logprob: -8.12797737121582
    6. ' ' → logprob: -8.25297737121582
    7. '   ' → logprob: -8.50297737121582
    8. '                       ' → logprob: -9.25297737121582
    9. '\n' → logprob: -9.62797737121582
    10. '	' → logprob: -9.75297737121582

Token 1924: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05155778303742409
    2. '
' → logprob: -3.426557779312134
    3. ' for' → logprob: -4.426558017730713
    4. 'for' → logprob: -5.926558017730713
    5. 'j' → logprob: -6.551558017730713
    6. '   ' → logprob: -7.301558017730713
    7. ' j' → logprob: -7.801558017730713
    8. '        
' → logprob: -8.426557540893555
    9. ' i' → logprob: -9.676557540893555
    10. '
' → logprob: -10.051557540893555

Token 1925: ' sinon' (ID: 52915)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019772673025727272
    2. ' for' → logprob: -4.894772529602051
    3. 'for' → logprob: -5.019772529602051
    4. '   ' → logprob: -6.019772529602051
    5. '
' → logprob: -6.144772529602051
    6. 'def' → logprob: -7.394772529602051
    7. '```' → logprob: -9.26977252960205
    8. 'j' → logprob: -10.14477252960205
    9. '        
' → logprob: -10.39477252960205
    10. 'i' → logprob: -10.51977252960205

Token 1926: ' V' (ID: 631)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.91457200050354
    2. ':
' → logprob: -1.78957200050354
    3. '
' → logprob: -2.41457200050354
    4. '   ' → logprob: -2.53957200050354
    5. 'for' → logprob: -2.66457200050354
    6. ':' → logprob: -2.78957200050354
    7. '           ' → logprob: -3.16457200050354
    8. ' for' → logprob: -4.039571762084961
    9. '#' → logprob: -4.414571762084961
    10. 'return' → logprob: -4.664571762084961

Token 1927: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.7660834789276123
    2. '=' → logprob: -2.0160834789276123
    3. '   ' → logprob: -2.1410834789276123
    4. '[j' → logprob: -2.3910834789276123
    5. ' =' → logprob: -2.6410834789276123
    6. '[' → logprob: -3.8910834789276123
    7. 'j' → logprob: -4.016083717346191
    8. '       ' → logprob: -4.141083717346191
    9. 'max' → logprob: -4.266083717346191
    10. '[i' → logprob: -4.391083717346191

Token 1928: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11292442679405212
    2. ' =' → logprob: -2.237924337387085
    3. 'max' → logprob: -10.487924575805664
    4. '   ' → logprob: -11.112924575805664
    5. '=max' → logprob: -11.487924575805664
    6. '=
' → logprob: -11.862924575805664
    7. 'def' → logprob: -12.237924575805664
    8. '+=' → logprob: -12.737924575805664
    9. ' ' → logprob: -12.737924575805664
    10. 'import' → logprob: -12.987924575805664

Token 1929: ' V' (ID: 631)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.0007804421475157142
    2. 'ship' → logprob: -7.3757805824279785
    3. ' ships' → logprob: -9.12578010559082
    4. 'min' → logprob: -10.37578010559082
    5. 'max' → logprob: -12.37578010559082
    6. '   ' → logprob: -12.75078010559082
    7. 'boats' → logprob: -12.75078010559082
    8. '```' → logprob: -14.12578010559082
    9. '0' → logprob: -14.62578010559082
    10. 'Ships' → logprob: -15.00078010559082

Token 1930: 'max' (ID: 3228)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.31763795018196106
    2. 'max' → logprob: -2.5676379203796387
    3. '[' → logprob: -2.6926379203796387
    4. '   ' → logprob: -3.6926379203796387
    5. '       ' → logprob: -4.442637920379639
    6. 'ips' → logprob: -4.442637920379639
    7. '[i' → logprob: -5.067637920379639
    8. 's' → logprob: -5.067637920379639
    9. '[j' → logprob: -5.067637920379639
    10. 'hips' → logprob: -5.192637920379639

Token 1931: '_j' (ID: 12021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013677054084837437
    2. '
' → logprob: -4.51367712020874
    3. 'def' → logprob: -6.88867712020874
    4. '   ' → logprob: -7.38867712020874
    5. 'for' → logprob: -7.63867712020874
    6. ' for' → logprob: -8.013676643371582
    7. '        
' → logprob: -9.263676643371582
    8. '```' → logprob: -10.638676643371582
    9. '           ' → logprob: -11.013676643371582
    10. '
' → logprob: -11.388676643371582

Token 1932: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007958762347698212
    2. '   ' → logprob: -5.632958889007568
    3. '
' → logprob: -6.632958889007568
    4. 'for' → logprob: -6.632958889007568
    5. 'def' → logprob: -6.632958889007568
    6. ' for' → logprob: -8.13295841217041
    7. '```' → logprob: -9.88295841217041
    8. '        
' → logprob: -11.13295841217041
    9. 'j' → logprob: -11.50795841217041
    10. ',' → logprob: -12.13295841217041

Token 1933: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8130931854248047
    2. '       ' → logprob: -1.1880931854248047
    3. '   ' → logprob: -1.6880931854248047
    4. '\n' → logprob: -3.4380931854248047
    5. ' 
' → logprob: -4.813093185424805
    6. '\' → logprob: -5.438093185424805
    7. '    
' → logprob: -5.563093185424805
    8. '[' → logprob: -5.688093185424805
    9. '  
' → logprob: -5.688093185424805
    10. '        
' → logprob: -6.188093185424805

Token 1934: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26833245158195496
    2. 'for' → logprob: -1.6433324813842773
    3. '   ' → logprob: -3.3933324813842773
    4. ' for' → logprob: -5.018332481384277
    5. 'j' → logprob: -7.643332481384277
    6. 'def' → logprob: -7.768332481384277
    7. 'prev' → logprob: -7.768332481384277
    8. 'i' → logprob: -8.518332481384277
    9. '
' → logprob: -9.268332481384277
    10. 'n' → logprob: -9.518332481384277

Token 1935: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.323307067155838
    2. '       ' → logprob: -1.3233070373535156
    3. 'prev' → logprob: -5.323307037353516
    4. '   ' → logprob: -6.073307037353516
    5. ' for' → logprob: -6.323307037353516
    6. 'i' → logprob: -7.823307037353516
    7. 'j' → logprob: -8.448307037353516
    8. 'def' → logprob: -8.823307037353516
    9. 'last' → logprob: -9.198307037353516
    10. 'n' → logprob: -9.573307037353516

Token 1936: ' commence' (ID: 44755)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8239514827728271
    2. 'for' → logprob: -0.9489514827728271
    3. 'range' → logprob: -2.198951482772827
    4. ' for' → logprob: -3.323951482772827
    5. 'n' → logprob: -5.323951721191406
    6. 'ranges' → logprob: -5.448951721191406
    7. '   ' → logprob: -5.698951721191406
    8. '=' → logprob: -6.448951721191406
    9. ' range' → logprob: -6.698951721191406
    10. 'len' → logprob: -6.698951721191406

Token 1937: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2865794897079468
    2. 'par' → logprob: -1.6615794897079468
    3. 'from' → logprob: -1.7865794897079468
    4. '   ' → logprob: -2.0365796089172363
    5. '=' → logprob: -2.4115796089172363
    6. ' par' → logprob: -2.6615796089172363
    7. 'with' → logprob: -3.4115796089172363
    8. ' from' → logprob: -5.036579608917236
    9. 'for' → logprob: -5.161579608917236
    10. ' by' → logprob: -5.411579608917236

Token 1938: ' le' (ID: 505)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.04977819323539734
    2. '#' → logprob: -3.9247782230377197
    3. '0' → logprob: -4.049777984619141
    4. 's' → logprob: -6.049777984619141
    5. 'i' → logprob: -6.299777984619141
    6. 'max' → logprob: -6.424777984619141
    7. 'adjust' → logprob: -7.174777984619141
    8. 'set' → logprob: -7.424777984619141
    9. '   ' → logprob: -7.549777984619141
    10. ' ships' → logprob: -7.674777984619141

Token 1939: ' premier' (ID: 15506)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5251609683036804
    2. 'M' → logprob: -1.6501610279083252
    3. 'ships' → logprob: -1.7751610279083252
    4. '#' → logprob: -3.650161027908325
    5. 'N' → logprob: -4.650160789489746
    6. 'max' → logprob: -5.400160789489746
    7. 'for' → logprob: -6.525160789489746
    8. 'if' → logprob: -7.025160789489746
    9. 'min' → logprob: -7.150160789489746
    10. 'range' → logprob: -7.400160789489746

Token 1940: ' bateau' (ID: 123794)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7565553784370422
    2. 'ships' → logprob: -1.3815553188323975
    3. 'for' → logprob: -2.7565553188323975
    4. 'def' → logprob: -2.8815553188323975
    5. ' ships' → logprob: -2.8815553188323975
    6. ' for' → logprob: -3.8815553188323975
    7. 'if' → logprob: -4.006555557250977
    8. 'i' → logprob: -4.256555557250977
    9. '
' → logprob: -4.381555557250977
    10. '0' → logprob: -5.256555557250977

Token 1941: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5799970626831055
    2. '   ' → logprob: -1.4549970626831055
    3. 'ships' → logprob: -3.2049970626831055
    4. 'for' → logprob: -3.4549970626831055
    5. ' for' → logprob: -3.4549970626831055
    6. ' if' → logprob: -3.7049970626831055
    7. ' ships' → logprob: -3.9549970626831055
    8. 'if' → logprob: -3.9549970626831055
    9. '0' → logprob: -4.0799970626831055
    10. '
' → logprob: -5.5799970626831055

Token 1942: ' vitesse' (ID: 71752)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9334322214126587
    2. ' ships' → logprob: -1.9334322214126587
    3. '   ' → logprob: -2.308432102203369
    4. 'if' → logprob: -2.308432102203369
    5. 'for' → logprob: -2.683432102203369
    6. 'ships' → logprob: -2.808432102203369
    7. ' for' → logprob: -3.308432102203369
    8. ' if' → logprob: -3.433432102203369
    9. 'j' → logprob: -3.808432102203369
    10. 'i' → logprob: -4.433432102203369

Token 1943: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021322302520275116
    2. 's' → logprob: -4.396322250366211
    3. ' =' → logprob: -5.521322250366211
    4. 'ships' → logprob: -5.646322250366211
    5. '       ' → logprob: -7.271322250366211
    6. '   ' → logprob: -8.021322250366211
    7. '[' → logprob: -10.271322250366211
    8. ' ships' → logprob: -11.146322250366211
    9. '=s' → logprob: -11.396322250366211
    10. 'i' → logprob: -11.396322250366211

Token 1944: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4491003453731537
    2. 'ships' → logprob: -1.199100375175476
    3. '0' → logprob: -4.199100494384766
    4. '
' → logprob: -4.824100494384766
    5. '=' → logprob: -5.199100494384766
    6. 'if' → logprob: -5.324100494384766
    7. 's' → logprob: -5.324100494384766
    8. 'for' → logprob: -5.574100494384766
    9. '   ' → logprob: -5.699100494384766
    10. '(' → logprob: -5.824100494384766

Token 1945: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036694202572107315
    2. 'ships' → logprob: -3.786694288253784
    3. ' ships' → logprob: -4.661694049835205
    4. '   ' → logprob: -5.911694049835205
    5. 'for' → logprob: -7.411694049835205
    6. ' for' → logprob: -8.536694526672363
    7. '
' → logprob: -9.161694526672363
    8. '0' → logprob: -9.786694526672363
    9. 'j' → logprob: -9.786694526672363
    10. 'ship' → logprob: -10.786694526672363

Token 1946: ' #' (ID: 1069)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.27763909101486206
    2. '   ' → logprob: -2.027639150619507
    3. ' ships' → logprob: -2.652639150619507
    4. 'if' → logprob: -4.027638912200928
    5. '       ' → logprob: -4.402638912200928
    6. 'for' → logprob: -5.652638912200928
    7. 'j' → logprob: -6.027638912200928
    8. 'v' → logprob: -7.152638912200928
    9. 'prev' → logprob: -7.652638912200928
    10. ' if' → logprob: -7.652638912200928

Token 1947: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.60478675365448
    2. 'ships' → logprob: -1.22978675365448
    3. '       ' → logprob: -2.4797868728637695
    4. 'for' → logprob: -3.1047868728637695
    5. 'if' → logprob: -3.6047868728637695
    6. ' ships' → logprob: -5.6047868728637695
    7. ' for' → logprob: -8.10478687286377
    8. 's' → logprob: -8.10478687286377
    9. 'def' → logprob: -8.60478687286377
    10. 'j' → logprob: -8.72978687286377

Token 1948: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0638635978102684
    2. ' for' → logprob: -3.313863515853882
    3. '   ' → logprob: -4.188863754272461
    4. 'pour' → logprob: -5.813863754272461
    5. '       ' → logprob: -5.938863754272461
    6. 'if' → logprob: -6.438863754272461
    7. 'i' → logprob: -6.688863754272461
    8. 'j' → logprob: -8.313863754272461
    9. ' M' → logprob: -8.688863754272461
    10. 'n' → logprob: -8.688863754272461

Token 1949: ''il' (ID: 14683)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8788562417030334
    2. 'for' → logprob: -1.8788561820983887
    3. 'i' → logprob: -2.2538561820983887
    4. 't' → logprob: -2.6288561820983887
    5. 'u' → logprob: -3.5038561820983887
    6. ' =' → logprob: -3.5038561820983887
    7. ''il' → logprob: -3.6288561820983887
    8. 'hips' → logprob: -3.8788561820983887
    9. 'peed' → logprob: -4.253856182098389
    10. 'ont' → logprob: -4.378856182098389

Token 1950: ' est' (ID: 893)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8545148968696594
    2. 'peed' → logprob: -1.4795148372650146
    3. 'y' → logprob: -1.9795148372650146
    4. 'n' → logprob: -2.7295148372650146
    5. 'est' → logprob: -3.1045148372650146
    6. ' i' → logprob: -4.229515075683594
    7. '0' → logprob: -4.479515075683594
    8. ' est' → logprob: -4.479515075683594
    9. 'pos' → logprob: -4.604515075683594
    10. ' y' → logprob: -4.729515075683594

Token 1951: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.619785487651825
    2. 'arr' → logprob: -2.3697855472564697
    3. 'blocked' → logprob: -2.4947855472564697
    4. 'à' → logprob: -2.6197855472564697
    5. 'blo' → logprob: -2.6197855472564697
    6. 'en' → logprob: -3.2447855472564697
    7. '0' → logprob: -4.244785308837891
    8. 'au' → logprob: -4.369785308837891
    9. ' blo' → logprob: -4.494785308837891
    10. ' dans' → logprob: -4.619785308837891

Token 1952: ' sas' (ID: 51515)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.08368618041276932
    2. '0' → logprob: -3.083686113357544
    3. 'un' → logprob: -4.208686351776123
    4. '1' → logprob: -5.958686351776123
    5. 'le' → logprob: -6.271186351776123
    6. 'une' → logprob: -6.646186351776123
    7. ' sas' → logprob: -6.708686351776123
    8. 'None' → logprob: -6.896186351776123
    9. '#' → logprob: -6.896186351776123
    10. '   ' → logprob: -7.271186351776123

Token 1953: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6839083433151245
    2. ':' → logprob: -1.3089083433151245
    3. ' and' → logprob: -2.808908462524414
    4. '   ' → logprob: -2.933908462524414
    5. ',' → logprob: -3.433908462524414
    6. '==' → logprob: -3.933908462524414
    7. 'and' → logprob: -4.058908462524414
    8. '       ' → logprob: -4.308908462524414
    9. ' or' → logprob: -5.058908462524414
    10. ' et' → logprob: -5.183908462524414

Token 1954: ' vitesse' (ID: 71752)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3269294798374176
    2. '       ' → logprob: -2.0769295692443848
    3. '#' → logprob: -2.7019295692443848
    4. ' if' → logprob: -3.4519295692443848
    5. 'pass' → logprob: -3.8269295692443848
    6. '           ' → logprob: -4.576929569244385
    7. 's' → logprob: -5.076929569244385
    8. '   ' → logprob: -5.576929569244385
    9. ' s' → logprob: -6.076929569244385
    10. 'for' → logprob: -6.326929569244385

Token 1955: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41583576798439026
    2. ' =' → logprob: -1.1658357381820679
    3. 'max' → logprob: -4.040835857391357
    4. '       ' → logprob: -5.665835857391357
    5. '   ' → logprob: -6.040835857391357
    6. '=max' → logprob: -6.415835857391357
    7. '_max' → logprob: -7.040835857391357
    8. '           ' → logprob: -7.165835857391357
    9. '#' → logprob: -8.1658353805542
    10. 'import' → logprob: -8.4158353805542

Token 1956: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10801703482866287
    2. 'ships' → logprob: -2.9830169677734375
    3. 'g' → logprob: -3.1080169677734375
    4. 'EPS' → logprob: -6.3580169677734375
    5. 'float' → logprob: -6.7330169677734375
    6. 'math' → logprob: -6.9830169677734375
    7. 's' → logprob: -7.6080169677734375
    8. 'sas' → logprob: -7.9830169677734375
    9. '   ' → logprob: -8.358016967773438
    10. 'gate' → logprob: -8.358016967773438

Token 1957: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0868002250790596
    2. 'ships' → logprob: -2.7118003368377686
    3. 'g' → logprob: -4.4618000984191895
    4. 'math' → logprob: -6.4618000984191895
    5. 'float' → logprob: -7.3368000984191895
    6. '(' → logprob: -7.7118000984191895
    7. 'sas' → logprob: -7.8368000984191895
    8. 'min' → logprob: -7.9618000984191895
    9. 'ship' → logprob: -8.524300575256348
    10. ' ' → logprob: -8.586800575256348

Token 1958: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11592499911785126
    2. '   ' → logprob: -2.8659250736236572
    3. '
' → logprob: -3.3659250736236572
    4. 'if' → logprob: -5.240924835205078
    5. ' if' → logprob: -6.115924835205078
    6. '        
' → logprob: -6.240924835205078
    7. 'def' → logprob: -6.365924835205078
    8. 'for' → logprob: -6.365924835205078
    9. 's' → logprob: -6.865924835205078
    10. '    
' → logprob: -7.240924835205078

Token 1959: ' il' (ID: 1793)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.1735251396894455
    2. 'not' → logprob: -2.048525094985962
    3. ' sas' → logprob: -4.798525333404541
    4. ' not' → logprob: -4.923525333404541
    5. 'le' → logprob: -5.048525333404541
    6. 'pas' → logprob: -6.173525333404541
    7. 'il' → logprob: -6.548525333404541
    8. 'True' → logprob: -7.173525333404541
    9. '   ' → logprob: -7.298525333404541
    10. 'g' → logprob: -8.048524856567383

Token 1960: ' doit' (ID: 21822)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.0731757879257202
    2. 'level' → logprob: -1.8231757879257202
    3. 'n' → logprob: -2.4481759071350098
    4. '   ' → logprob: -2.5731759071350098
    5. ' is' → logprob: -2.5731759071350098
    6. 'est' → logprob: -2.9481759071350098
    7. 's' → logprob: -3.3231759071350098
    8. 'must' → logprob: -3.5731759071350098
    9. '.' → logprob: -3.6981759071350098
    10. ' est' → logprob: -3.8231759071350098

Token 1961: ' attendre' (ID: 91756)
  Prédit: 'att'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'att' → logprob: -0.2681880593299866
    2. 'respect' → logprob: -2.268187999725342
    3. 'pass' → logprob: -2.893187999725342
    4. 're' → logprob: -3.643187999725342
    5. 'wait' → logprob: -4.393187999725342
    6. 'stop' → logprob: -4.643187999725342
    7. 's' → logprob: -5.393187999725342
    8. 'être' → logprob: -5.518187999725342
    9. ' attendre' → logprob: -6.143187999725342
    10. 'arr' → logprob: -6.268187999725342

Token 1962: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.065185785293579
    2. '       ' → logprob: -1.315185785293579
    3. '
' → logprob: -1.940185785293579
    4. 'if' → logprob: -2.065185785293579
    5. ' if' → logprob: -2.440185785293579
    6. 's' → logprob: -4.940185546875
    7. 'for' → logprob: -4.940185546875
    8. '.
' → logprob: -6.065185546875
    9. ' for' → logprob: -6.190185546875
    10. '    
' → logprob: -6.690185546875

Token 1963: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015429075807332993
    2. '
' → logprob: -4.7654290199279785
    3. '   ' → logprob: -5.0154290199279785
    4. '        
' → logprob: -9.390429496765137
    5. '    
' → logprob: -10.515429496765137
    6. 'for' → logprob: -12.015429496765137
    7. 'import' → logprob: -12.015429496765137
    8. '           ' → logprob: -12.015429496765137
    9. 'def' → logprob: -12.140429496765137
    10. ' for' → logprob: -12.515429496765137

Token 1964: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03263998031616211
    2. '   ' → logprob: -4.032639980316162
    3. 'if' → logprob: -4.407639980316162
    4. '
' → logprob: -7.282639980316162
    5. 'for' → logprob: -7.282639980316162
    6. ' if' → logprob: -7.782639980316162
    7. 'def' → logprob: -8.03264045715332
    8. '        
' → logprob: -10.78264045715332
    9. ' for' → logprob: -11.40764045715332
    10. 's' → logprob: -11.53264045715332

Token 1965: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44037172198295593
    2. '   ' → logprob: -1.5653717517852783
    3. 'for' → logprob: -2.4403717517852783
    4. '
' → logprob: -3.0653717517852783
    5. ' for' → logprob: -4.815371513366699
    6. 'j' → logprob: -6.565371513366699
    7. '    
' → logprob: -7.065371513366699
    8. '        
' → logprob: -7.565371513366699
    9. 'i' → logprob: -7.815371513366699
    10. 'def' → logprob: -7.940371513366699

Token 1966: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9397706389427185
    2. 'if' → logprob: -1.1897706985473633
    3. 'for' → logprob: -2.0647706985473633
    4. ' if' → logprob: -2.9397706985473633
    5. ' for' → logprob: -3.6897706985473633
    6. '       ' → logprob: -3.8147706985473633
    7. '#' → logprob: -4.314770698547363
    8. 's' → logprob: -4.439770698547363
    9. ' s' → logprob: -4.814770698547363
    10. 'True' → logprob: -5.564770698547363

Token 1967: ''il' (ID: 14683)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8468034863471985
    2. 'hips' → logprob: -1.3468034267425537
    3. ''il' → logprob: -2.7218034267425537
    4. 'elf' → logprob: -2.8468034267425537
    5. 'if' → logprob: -3.3468034267425537
    6. 'elif' → logprob: -3.9718034267425537
    7. 'hip' → logprob: -4.096803665161133
    8. 'chedule' → logprob: -4.221803665161133
    9. 'ships' → logprob: -4.346803665161133
    10. 'ips' → logprob: -4.596803665161133

Token 1968: ' est' (ID: 893)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7224005460739136
    2. 'sas' → logprob: -1.0974005460739136
    3. 'est' → logprob: -3.222400665283203
    4. 'ship' → logprob: -3.347400665283203
    5. 's' → logprob: -3.597400665283203
    6. 'is' → logprob: -4.597400665283203
    7. '.pos' → logprob: -4.847400665283203
    8. 'a' → logprob: -4.847400665283203
    9. 'in' → logprob: -4.972400665283203
    10. '#' → logprob: -5.222400665283203

Token 1969: ' "' (ID: 392)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.2816457152366638
    2. 'sas' → logprob: -1.6566457748413086
    3. 'in' → logprob: -3.5316457748413086
    4. 'en' → logprob: -5.781645774841309
    5. 'not' → logprob: -5.781645774841309
    6. ' dans' → logprob: -5.906645774841309
    7. 'à' → logprob: -6.031645774841309
    8. 'sur' → logprob: -6.281645774841309
    9. 'ship' → logprob: -6.781645774841309
    10. 'pas' → logprob: -7.156645774841309

Token 1970: 'blo' (ID: 82456)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.03475946560502052
    2. 'in' → logprob: -3.909759521484375
    3. ' dans' → logprob: -5.409759521484375
    4. 'en' → logprob: -6.159759521484375
    5. 'à' → logprob: -6.409759521484375
    6. 'sur' → logprob: -6.784759521484375
    7. 'inside' → logprob: -7.409759521484375
    8. 'sas' → logprob: -7.409759521484375
    9. 'arr' → logprob: -7.784759521484375
    10. ' in' → logprob: -7.784759521484375

Token 1971: 'qué' (ID: 23535)
  Prédit: 'ck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ck' → logprob: -0.32114240527153015
    2. 'qué' → logprob: -1.3211424350738525
    3. 'cé' → logprob: -6.196142196655273
    4. 'c' → logprob: -6.571142196655273
    5. 'clé' → logprob: -7.446142196655273
    6. '#' → logprob: -8.071142196655273
    7. 'té' → logprob: -8.071142196655273
    8. 'ué' → logprob: -8.196142196655273
    9. 'cc' → logprob: -8.196142196655273
    10. '...' → logprob: -8.446142196655273

Token 1972: '"' (ID: 1)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.5758464932441711
    2. '"' → logprob: -1.8258464336395264
    3. 'par' → logprob: -2.5758464336395264
    4. '=' → logprob: -2.9508464336395264
    5. ',' → logprob: -3.4508464336395264
    6. ' par' → logprob: -3.5758464336395264
    7. '_par' → logprob: -4.0758466720581055
    8. 'sur' → logprob: -4.2008466720581055
    9. '_' → logprob: -4.4508466720581055
    10. ' =' → logprob: -5.3258466720581055

Token 1973: ' devant' (ID: 37522)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.8185209631919861
    2. '   ' → logprob: -2.318521022796631
    3. '=' → logprob: -2.443521022796631
    4. ':' → logprob: -2.568521022796631
    5. 'par' → logprob: -2.943521022796631
    6. ' =' → logprob: -3.443521022796631
    7. ',' → logprob: -3.443521022796631
    8. '       ' → logprob: -3.568521022796631
    9. 'def' → logprob: -3.943521022796631
    10. '.' → logprob: -4.318521022796631

Token 1974: ' un' (ID: 537)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.514690101146698
    2. '   ' → logprob: -1.6396901607513428
    3. ':' → logprob: -2.5146901607513428
    4. 'def' → logprob: -3.0146901607513428
    5. ',' → logprob: -3.5146901607513428
    6. 'for' → logprob: -4.764689922332764
    7. ':
' → logprob: -5.139689922332764
    8. '           ' → logprob: -5.264689922332764
    9. '=' → logprob: -5.389689922332764
    10. 'if' → logprob: -5.514689922332764

Token 1975: ' bateau' (ID: 123794)
  Prédit: 'bate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bate' → logprob: -0.3678503930568695
    2. 'gate' → logprob: -2.1178503036499023
    3. 'b' → logprob: -2.7428503036499023
    4. 'aut' → logprob: -3.1178503036499023
    5. ' bateau' → logprob: -3.6178503036499023
    6. ' autre' → logprob: -4.742850303649902
    7. 'sas' → logprob: -4.742850303649902
    8. 'ob' → logprob: -4.992850303649902
    9. 'nav' → logprob: -5.617850303649902
    10. 'port' → logprob: -5.992850303649902

Token 1976: ' arrêté' (ID: 143709)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6265267729759216
    2. 'def' → logprob: -1.2515268325805664
    3. '       ' → logprob: -3.2515268325805664
    4. ')' → logprob: -3.3765268325805664
    5. '
' → logprob: -3.8765268325805664
    6. ')
' → logprob: -4.376526832580566
    7. '<|end|>' → logprob: -4.626526832580566
    8. '.' → logprob: -4.751526832580566
    9. ':' → logprob: -4.876526832580566
    10. ',' → logprob: -4.876526832580566

Token 1977: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6330745816230774
    2. '       ' → logprob: -0.8830745816230774
    3. 'def' → logprob: -3.6330745220184326
    4. '
' → logprob: -5.008074760437012
    5. ':' → logprob: -5.633074760437012
    6. ',' → logprob: -5.758074760437012
    7. ':
' → logprob: -5.883074760437012
    8. '<|end|>' → logprob: -6.008074760437012
    9. '        
' → logprob: -6.508074760437012
    10. ')' → logprob: -6.508074760437012

Token 1978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6959948539733887
    2. '   ' → logprob: -0.8209948539733887
    3. '
' → logprob: -2.8209948539733887
    4. '        
' → logprob: -7.195994853973389
    5. '    
' → logprob: -7.445994853973389
    6. 'def' → logprob: -8.320995330810547
    7. 'for' → logprob: -9.570995330810547
    8. ' for' → logprob: -9.570995330810547
    9. '```' → logprob: -9.945995330810547
    10. '
' → logprob: -10.320995330810547

Token 1979: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20907288789749146
    2. 'for' → logprob: -1.8340728282928467
    3. '   ' → logprob: -4.084073066711426
    4. 'def' → logprob: -5.334073066711426
    5. '#' (adapté à ' #') → logprob: -6.209073066711426
    6. 'prev' → logprob: -6.709073066711426
    7. 'i' → logprob: -7.084073066711426
    8. 'n' → logprob: -7.209073066711426
    9. 'first' → logprob: -7.209073066711426
    10. 'if' → logprob: -7.834073066711426

Token 1980: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5687277913093567
    2. '   ' → logprob: -1.193727731704712
    3. 'for' → logprob: -2.568727731704712
    4. 'def' → logprob: -3.318727731704712
    5. '#' → logprob: -4.943727970123291
    6. ' for' → logprob: -5.568727970123291
    7. 'i' → logprob: -6.068727970123291
    8. '
' → logprob: -6.443727970123291
    9. 'prev' → logprob: -7.443727970123291
    10. '```' → logprob: -7.943727970123291

Token 1981: ' recom' (ID: 19119)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7269225120544434
    2. 'def' → logprob: -0.9769225120544434
    3. '   ' → logprob: -3.2269225120544434
    4. ' for' → logprob: -3.6019225120544434
    5. 'n' → logprob: -3.7269225120544434
    6. '       ' → logprob: -4.101922512054443
    7. '#' → logprob: -4.726922512054443
    8. 'continue' → logprob: -5.226922512054443
    9. '...' → logprob: -6.226922512054443
    10. '=' → logprob: -6.351922512054443

Token 1982: 'pute' (ID: 13605)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5101501941680908
    2. 'turn' → logprob: -2.760150194168091
    3. '       ' → logprob: -2.885150194168091
    4. 'cup' → logprob: -3.260150194168091
    5. 'tour' → logprob: -3.385150194168091
    6. '   ' → logprob: -3.510150194168091
    7. 'd' → logprob: -3.635150194168091
    8. 'for' → logprob: -3.885150194168091
    9. 'c' → logprob: -4.635149955749512
    10. 'pile' → logprob: -4.760149955749512

Token 1983: ' aussi' (ID: 9894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4973011016845703
    2. ' for' → logprob: -1.6223011016845703
    3. '   ' → logprob: -1.9973011016845703
    4. '       ' → logprob: -3.6223011016845703
    5. 'def' → logprob: -4.74730110168457
    6. 'n' → logprob: -5.24730110168457
    7. 'i' → logprob: -5.74730110168457
    8. 'range' → logprob: -6.12230110168457
    9. 'M' → logprob: -6.74730110168457
    10. '#' → logprob: -6.87230110168457

Token 1984: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6470815539360046
    2. '   ' → logprob: -1.6470816135406494
    3. 'def' → logprob: -2.3970816135406494
    4. ' for' → logprob: -3.1470816135406494
    5. '       ' → logprob: -3.1470816135406494
    6. 'les' → logprob: -3.1470816135406494
    7. ' les' → logprob: -4.39708137512207
    8. ' la' → logprob: -4.89708137512207
    9. 'positions' → logprob: -4.89708137512207
    10. 'la' → logprob: -5.02208137512207

Token 1985: ' év' (ID: 23692)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.33555883169174194
    2. 'pos' → logprob: -2.4605588912963867
    3. 'spe' → logprob: -2.5855588912963867
    4. ' positions' → logprob: -2.8355588912963867
    5. 'v' → logprob: -4.460558891296387
    6. 'dist' → logprob: -4.585558891296387
    7. 'for' → logprob: -4.960558891296387
    8. ' speeds' → logprob: -5.085558891296387
    9. 'ships' → logprob: -5.460558891296387
    10. ' pos' → logprob: -5.710558891296387

Token 1986: 'ènements' (ID: 178488)
  Prédit: 'ènements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ènements' → logprob: -0.003353566862642765
    2. 'én' → logprob: -6.003353595733643
    3. 'èn' → logprob: -8.378353118896484
    4. 'è' → logprob: -8.503353118896484
    5. 'ènement' → logprob: -8.628353118896484
    6. 'éments' → logprob: -9.503353118896484
    7. 'ements' → logprob: -9.878353118896484
    8. 'nements' → logprob: -10.128353118896484
    9. 'énement' → logprob: -10.753353118896484
    10. 'ents' → logprob: -11.003353118896484

Token 1987: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6152358055114746
    2. '   ' → logprob: -1.4902358055114746
    3. '<|end|>' → logprob: -2.7402358055114746
    4. 'def' → logprob: -2.8652358055114746
    5. '        
' → logprob: -3.8652358055114746
    6. '
' → logprob: -3.9902358055114746
    7. 'for' → logprob: -4.115235805511475
    8. '    
' → logprob: -4.240235805511475
    9. ' for' → logprob: -4.490235805511475
    10. ')' → logprob: -4.615235805511475

Token 1988: ''arr' (ID: 49695)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.9518998265266418
    2. 'placement' → logprob: -1.451899766921997
    3. 'itesse' → logprob: -1.576899766921997
    4. 'arr' → logprob: -2.951899766921997
    5. 'v' → logprob: -4.326900005340576
    6. 'arrival' → logprob: -4.576900005340576
    7. 'pos' → logprob: -4.826900005340576
    8. 'is' → logprob: -4.826900005340576
    9. 'dé' → logprob: -4.951900005340576
    10. 'el' → logprob: -4.951900005340576

Token 1989: 'ivé' (ID: 136240)
  Prédit: 'ivée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivée' → logprob: -0.08555696159601212
    2. 'iv' → logprob: -2.585556983947754
    3. 'ive' → logprob: -5.335556983947754
    4. 'êt' → logprob: -7.585556983947754
    5. 'ival' → logprob: -7.835556983947754
    6. 'ivant' → logprob: -8.085556983947754
    7. 'et' → logprob: -8.960556983947754
    8. 'angement' → logprob: -9.460556983947754
    9. 'ivation' → logprob: -9.710556983947754
    10. 'ivé' → logprob: -9.960556983947754

Token 1990: ' après' (ID: 16460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7467730641365051
    2. '       ' → logprob: -0.7467730641365051
    3. 's' → logprob: -3.9967730045318604
    4. 'def' → logprob: -5.1217732429504395
    5. ')' → logprob: -5.3717732429504395
    6. '    
' → logprob: -5.7467732429504395
    7. '
' → logprob: -5.8717732429504395
    8. '        
' → logprob: -5.9967732429504395
    9. 'for' → logprob: -6.7467732429504395
    10. '[' → logprob: -6.8717732429504395

Token 1991: ' changement' (ID: 61912)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23994863033294678
    2. '   ' → logprob: -2.2399487495422363
    3. '       ' → logprob: -3.1149487495422363
    4. 'def' → logprob: -3.6149487495422363
    5. '#' → logprob: -3.7399487495422363
    6. ' for' → logprob: -4.989948749542236
    7. '```' → logprob: -7.114948749542236
    8. '
' → logprob: -7.489948749542236
    9. '        
' → logprob: -7.489948749542236
    10. '...' → logprob: -8.114948272705078

Token 1992: ' vitesse' (ID: 71752)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18196634948253632
    2. '       ' → logprob: -2.3069663047790527
    3. 'def' → logprob: -3.4319663047790527
    4. 'for' → logprob: -4.431966304779053
    5. '
' → logprob: -5.056966304779053
    6. '    
' → logprob: -5.056966304779053
    7. '	for' → logprob: -5.806966304779053
    8. '        
' → logprob: -5.931966304779053
    9. ' for' → logprob: -7.056966304779053
    10. '#' → logprob: -8.181966781616211

Token 1993: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13131208717823029
    2. '   ' → logprob: -2.256312131881714
    3. '
' → logprob: -4.631311893463135
    4. 'def' → logprob: -5.006311893463135
    5. '        
' → logprob: -7.381311893463135
    6. 'for' → logprob: -7.381311893463135
    7. '    
' → logprob: -8.006312370300293
    8. ' for' → logprob: -9.631312370300293
    9. '```' → logprob: -9.631312370300293
    10. ')' → logprob: -10.506312370300293

Token 1994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46227404475212097
    2. '   ' → logprob: -1.2122740745544434
    3. '
' → logprob: -2.7122740745544434
    4. '    
' → logprob: -6.087274074554443
    5. '        
' → logprob: -6.337274074554443
    6. 'for' → logprob: -6.962274074554443
    7. 'def' → logprob: -7.462274074554443
    8. '```' → logprob: -7.837274074554443
    9. ' for' → logprob: -9.337273597717285
    10. '  
' → logprob: -10.212273597717285

Token 1995: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2845059931278229
    2. '       ' → logprob: -1.6595059633255005
    3. 'for' → logprob: -3.65950608253479
    4. '
' → logprob: -4.159505844116211
    5. ' for' → logprob: -4.784505844116211
    6. 'i' → logprob: -6.534505844116211
    7. 'def' → logprob: -6.659505844116211
    8. '    
' → logprob: -6.909505844116211
    9. '        
' → logprob: -6.909505844116211
    10. 'j' → logprob: -7.159505844116211

Token 1996: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056057196110486984
    2. '   ' → logprob: -3.5560572147369385
    3. 'for' → logprob: -3.9310572147369385
    4. 'def' → logprob: -6.056056976318359
    5. ' for' → logprob: -6.556056976318359
    6. '
' → logprob: -6.681056976318359
    7. '#' → logprob: -7.931056976318359
    8. 'i' → logprob: -8.18105697631836
    9. '        
' → logprob: -8.68105697631836
    10. 'prev' → logprob: -9.30605697631836

Token 1997: ' traite' (ID: 180696)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0434843301773071
    2. 'for' → logprob: -1.4184843301773071
    3. '   ' → logprob: -2.0434842109680176
    4. '       ' → logprob: -2.2934842109680176
    5. 'n' → logprob: -2.4184842109680176
    6. ' for' → logprob: -3.2934842109680176
    7. 'range' → logprob: -4.418484210968018
    8. '    ' → logprob: -5.543484210968018
    9. '#' → logprob: -5.793484210968018
    10. '```' → logprob: -5.918484210968018

Token 1998: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8288689255714417
    2. ' for' → logprob: -1.5788688659667969
    3. 'for' → logprob: -2.078868865966797
    4. '       ' → logprob: -2.203868865966797
    5. ' i' → logprob: -3.703868865966797
    6. 'range' → logprob: -3.828868865966797
    7. 'i' → logprob: -3.953868865966797
    8. 'def' → logprob: -4.453868865966797
    9. '0' → logprob: -4.828868865966797
    10. 's' → logprob: -5.203868865966797

Token 1999: ' bate' (ID: 39378)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46673643589019775
    2. 'i' → logprob: -1.8417364358901978
    3. 'range' → logprob: -2.716736316680908
    4. 'M' → logprob: -2.966736316680908
    5. 'ships' → logprob: -3.591736316680908
    6. 'b' → logprob: -4.216736316680908
    7. ' for' → logprob: -4.341736316680908
    8. 'def' → logprob: -4.841736316680908
    9. 'boats' → logprob: -4.841736316680908
    10. 'v' → logprob: -5.341736316680908

Token 2000: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.0012463049497455359
    2. 'te' → logprob: -7.251246452331543
    3. 'ux' → logprob: -8.251246452331543
    4. 'tes' → logprob: -8.501246452331543
    5. '```' → logprob: -11.001246452331543
    6. 'teurs' → logprob: -11.376246452331543
    7. 'ate' → logprob: -11.626246452331543
    8. 'u' → logprob: -12.376246452331543
    9. 'au' → logprob: -12.501246452331543
    10. '_aux' → logprob: -12.751246452331543

Token 2001: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1199119091033936
    2. 'def' → logprob: -1.6199119091033936
    3. 'range' → logprob: -2.2449119091033936
    4. ' =' → logprob: -2.8699119091033936
    5. '   ' → logprob: -2.9949119091033936
    6. '=' → logprob: -2.9949119091033936
    7. ' range' → logprob: -2.9949119091033936
    8. '       ' → logprob: -3.2449119091033936
    9. ' for' → logprob: -3.2449119091033936
    10. ':' → logprob: -4.244912147521973

Token 2002: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011029450688511133
    2. 're' → logprob: -7.376102924346924
    3. ' range' → logprob: -8.876103401184082
    4. 'order' → logprob: -9.501103401184082
    5. 'ordre' → logprob: -9.501103401184082
    6. 'enumer' → logprob: -9.626103401184082
    7. 'reverse' → logprob: -9.626103401184082
    8. 'l' → logprob: -10.626103401184082
    9. '   ' → logprob: -12.001103401184082
    10. 'lambda' → logprob: -12.126103401184082

Token 2003: ''ordre' (ID: 124753)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007068329723551869
    2. 'for' → logprob: -8.250706672668457
    3. ' range' → logprob: -9.250706672668457
    4. 'def' → logprob: -9.500706672668457
    5. 'reverse' → logprob: -9.625706672668457
    6. 're' → logprob: -9.875706672668457
    7. 'ordre' → logprob: -10.375706672668457
    8. 'rang' → logprob: -10.625706672668457
    9. 'ange' → logprob: -10.875706672668457
    10. ')' → logprob: -11.375706672668457

Token 2004: ' cro' (ID: 11270)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.560213565826416
    2. 'for' → logprob: -1.935213565826416
    3. ' for' → logprob: -2.560213565826416
    4. ' =' → logprob: -2.935213565826416
    5. ':' → logprob: -3.185213565826416
    6. '0' → logprob: -3.185213565826416
    7. '       ' → logprob: -3.560213565826416
    8. '
' → logprob: -4.310213565826416
    9. '[' → logprob: -5.435213565826416
    10. 'def' → logprob: -5.435213565826416

Token 2005: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.717292308807373
    2. 'issante' → logprob: -0.842292308807373
    3. 'ss' → logprob: -3.217292308807373
    4. 'nt' → logprob: -4.592292308807373
    5. 'up' → logprob: -5.342292308807373
    6. 'd' → logprob: -5.717292308807373
    7. 'p' → logprob: -5.842292308807373
    8. 'mp' → logprob: -6.217292308807373
    9. 'iss' → logprob: -6.467292308807373
    10. 'rt' → logprob: -6.592292308807373

Token 2006: ' des' (ID: 731)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0751404762268066
    2. 'for' → logprob: -1.4501404762268066
    3. '(range' → logprob: -1.8251404762268066
    4. '(i' → logprob: -2.2001404762268066
    5. '(' → logprob: -2.7001404762268066
    6. 'def' → logprob: -3.7001404762268066
    7. '   ' → logprob: -4.200140476226807
    8. 'i' → logprob: -4.700140476226807
    9. 'in' → logprob: -5.075140476226807
    10. 'of' → logprob: -5.200140476226807

Token 2007: ' positions' (ID: 15897)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.578362762928009
    2. 'positions' → logprob: -1.7033627033233643
    3. 'ships' → logprob: -2.2033627033233643
    4. 'range' → logprob: -2.8283627033233643
    5. 'i' → logprob: -2.8283627033233643
    6. 'position' → logprob: -4.828362941741943
    7. 'ship' → logprob: -5.328362941741943
    8. ' positions' → logprob: -5.828362941741943
    9. 'indices' → logprob: -6.078362941741943
    10. 'index' → logprob: -6.328362941741943

Token 2008: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4744790196418762
    2. 'for' → logprob: -1.9744789600372314
    3. '   ' → logprob: -2.4744789600372314
    4. ' for' → logprob: -2.7244789600372314
    5. '
' → logprob: -4.0994791984558105
    6. ':' → logprob: -4.0994791984558105
    7. ':
' → logprob: -4.9744791984558105
    8. ' =' → logprob: -5.0994791984558105
    9. 'def' → logprob: -5.2244791984558105
    10. 'i' → logprob: -5.3494791984558105

Token 2009: 'don' (ID: 22130)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.42738834023475647
    2. ' range' → logprob: -1.802388310432434
    3. '0' → logprob: -2.4273884296417236
    4. ')' → logprob: -3.8023884296417236
    5. 'reverse' → logprob: -3.9273884296417236
    6. '   ' → logprob: -4.1773881912231445
    7. 'i' → logprob: -4.3023881912231445
    8. 'M' → logprob: -5.3023881912231445
    9. ' i' → logprob: -5.5523881912231445
    10. ' reverse' → logprob: -5.6773881912231445

Token 2010: 'c' (ID: 66)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25883862376213074
    2. 'nées' → logprob: -1.8838386535644531
    3. 'es' → logprob: -3.758838653564453
    4. 't' → logprob: -4.508838653564453
    5. 'és' → logprob: -4.508838653564453
    6. 'c' → logprob: -4.758838653564453
    7. '```' → logprob: -4.883838653564453
    8. 'é' → logprob: -6.008838653564453
    9. 'ner' → logprob: -6.508838653564453
    10. 'ées' → logprob: -6.633838653564453

Token 2011: ' ordre' (ID: 103061)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05376799777150154
    2. ' range' → logprob: -4.053768157958984
    3. 'reverse' → logprob: -4.553768157958984
    4. '   ' → logprob: -4.803768157958984
    5. 're' → logprob: -5.303768157958984
    6. '0' → logprob: -5.678768157958984
    7. 'i' → logprob: -6.053768157958984
    8. 'for' → logprob: -6.053768157958984
    9. ')' → logprob: -7.428768157958984
    10. ' for' → logprob: -7.803768157958984

Token 2012: ' index' (ID: 3472)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7358132004737854
    2. '=' → logprob: -1.3608131408691406
    3. 'def' → logprob: -2.4858131408691406
    4. ' =' → logprob: -2.6108131408691406
    5. ' range' → logprob: -3.6108131408691406
    6. 'for' → logprob: -3.8608131408691406
    7. '=i' → logprob: -4.610813140869141
    8. 'des' → logprob: -4.735813140869141
    9. 'de' → logprob: -4.985813140869141
    10. '0' → logprob: -5.360813140869141

Token 2013: ')
' (ID: 446)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8075825572013855
    2. ')' → logprob: -1.6825826168060303
    3. '0' → logprob: -1.9325826168060303
    4. '=' → logprob: -3.0575826168060303
    5. ' des' → logprob: -3.1825826168060303
    6. 'des' → logprob: -3.1825826168060303
    7. ' =' → logprob: -3.5575826168060303
    8. 'def' → logprob: -4.432582378387451
    9. 'i' → logprob: -4.557582378387451
    10. ' i' → logprob: -4.682582378387451

Token 2014: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28647634387016296
    2. '       ' → logprob: -1.4114763736724854
    3. '
' → logprob: -5.661476135253906
    4. '    
' → logprob: -6.661476135253906
    5. '        
' → logprob: -8.161476135253906
    6. ' for' → logprob: -9.161476135253906
    7. '```' → logprob: -10.286476135253906
    8. 'for' → logprob: -10.536476135253906
    9. ':' → logprob: -10.661476135253906
    10. ' 
' → logprob: -11.786476135253906

Token 2015: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1713695377111435
    2. 'for' → logprob: -2.7963695526123047
    3. '   ' → logprob: -3.0463695526123047
    4. ' for' → logprob: -3.2963695526123047
    5. '
' → logprob: -4.671369552612305
    6. '        
' → logprob: -7.296369552612305
    7. 'i' → logprob: -7.796369552612305
    8. 'prev' → logprob: -7.796369552612305
    9. '    
' → logprob: -8.546369552612305
    10. 'def' → logprob: -8.546369552612305

Token 2016: ' important' (ID: 3378)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39246031641960144
    2. '   ' → logprob: -1.7674603462219238
    3. 'for' → logprob: -2.267460346221924
    4. ' for' → logprob: -3.142460346221924
    5. 'def' → logprob: -5.517460346221924
    6. 'i' → logprob: -6.767460346221924
    7. ' i' → logprob: -8.017459869384766
    8. 'prev' → logprob: -8.017459869384766
    9. '
' → logprob: -8.267459869384766
    10. '```' → logprob: -8.267459869384766

Token 2017: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2654910683631897
    2. 'for' → logprob: -1.890491008758545
    3. ' for' → logprob: -2.890491008758545
    4. '       ' → logprob: -4.765491008758545
    5. 'def' → logprob: -5.140491008758545
    6. '
' → logprob: -5.265491008758545
    7. 'prev' → logprob: -5.390491008758545
    8. ' =' → logprob: -7.890491008758545
    9. 'current' → logprob: -8.265491485595703
    10. '=' → logprob: -8.265491485595703

Token 2018: ' bateau' (ID: 123794)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12740899622440338
    2. ' for' → logprob: -2.252408981323242
    3. '       ' → logprob: -5.127408981323242
    4. 'prev' → logprob: -5.627408981323242
    5. '   ' → logprob: -6.002408981323242
    6. 'current' → logprob: -6.627408981323242
    7. ' current' → logprob: -8.502408981323242
    8. 'last' → logprob: -8.627408981323242
    9. ' prev' → logprob: -8.877408981323242
    10. '#' → logprob: -9.252408981323242

Token 2019: ' avec' (ID: 3937)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6853477358818054
    2. 's' → logprob: -1.9353477954864502
    3. 'i' → logprob: -2.18534779548645
    4. '=' → logprob: -2.43534779548645
    5. ' =' → logprob: -3.06034779548645
    6. '   ' → logprob: -3.81034779548645
    7. 'def' → logprob: -4.060347557067871
    8. ' i' → logprob: -4.435347557067871
    9. ' ' → logprob: -4.935347557067871
    10. 'index' → logprob: -5.185347557067871

Token 2020: ' plus' (ID: 2932)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5542102456092834
    2. '0' → logprob: -1.1792101860046387
    3. 'M' → logprob: -3.1792101860046387
    4. 'index' → logprob: -3.1792101860046387
    5. 'range' → logprob: -5.179210186004639
    6. ' i' → logprob: -5.429210186004639
    7. 'pos' → logprob: -5.554210186004639
    8. 'N' → logprob: -6.054210186004639
    9. 'def' → logprob: -6.554210186004639
    10. ' M' → logprob: -6.679210186004639

Token 2021: ' haut' (ID: 28223)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5245431661605835
    2. ' +' → logprob: -1.5245431661605835
    3. ')' → logprob: -3.149543285369873
    4. '   ' → logprob: -3.899543285369873
    5. '>' → logprob: -4.524543285369873
    6. ' +=' → logprob: -4.524543285369873
    7. ']' → logprob: -4.649543285369873
    8. ' de' → logprob: -4.774543285369873
    9. '+=' → logprob: -4.774543285369873
    10. ' -' → logprob: -4.899543285369873

Token 2022: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.7165066599845886
    2. 'i' → logprob: -2.3415067195892334
    3. 'pos' → logprob: -2.4665067195892334
    4. 'idx' → logprob: -2.7165067195892334
    5. ')' → logprob: -2.8415067195892334
    6. '_index' → logprob: -2.9665067195892334
    7. '<|end|>' → logprob: -3.4665067195892334
    8. ']' → logprob: -4.091506481170654
    9. 'indice' → logprob: -4.091506481170654
    10. '_idx' → logprob: -4.341506481170654

Token 2023: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2548519372940063
    2. ' =' → logprob: -1.7548519372940063
    3. ']' → logprob: -2.129851818084717
    4. ')' → logprob: -2.129851818084717
    5. ':' → logprob: -2.754851818084717
    6. '=' → logprob: -3.129851818084717
    7. ' ]' → logprob: -3.754851818084717
    8. '   ' → logprob: -4.254851818084717
    9. ' ' → logprob: -4.379851818084717
    10. '<|end|>' → logprob: -4.379851818084717

Token 2024: ' position' (ID: 4010)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2585064470767975
    2. 'len' → logprob: -2.6335065364837646
    3. ' range' → logprob: -2.7585065364837646
    4. 'M' → logprob: -4.0085062980651855
    5. '   ' → logprob: -4.0085062980651855
    6. 'reverse' → logprob: -5.0085062980651855
    7. 's' → logprob: -5.0085062980651855
    8. 'i' → logprob: -5.2585062980651855
    9. 'max' → logprob: -5.3835062980651855
    10. '0' → logprob: -5.5085062980651855

Token 2025: ' initial' (ID: 4871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40293580293655396
    2. '+' → logprob: -2.777935743331909
    3. ' =' → logprob: -2.902935743331909
    4. 'plus' → logprob: -3.652935743331909
    5. ' +' → logprob: -3.777935743331909
    6. ')' → logprob: -4.027935981750488
    7. '   ' → logprob: -4.027935981750488
    8. ' plus' → logprob: -4.152935981750488
    9. ' supérieure' → logprob: -4.402935981750488
    10. '>' → logprob: -4.527935981750488

Token 2026: 'e' (ID: 68)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3509715795516968
    2. '=' → logprob: -1.4759715795516968
    3. 's' → logprob: -1.9759715795516968
    4. ')' → logprob: -2.9759716987609863
    5. '   ' → logprob: -3.2259716987609863
    6. ':' → logprob: -3.3509716987609863
    7. '):
' → logprob: -3.4759716987609863
    8. ']' → logprob: -3.6009716987609863
    9. ' +' → logprob: -3.8509716987609863
    10. '       ' → logprob: -3.9759716987609863

Token 2027: ' plus' (ID: 2932)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.340010404586792
    2. '=' → logprob: -1.590010404586792
    3. ' =' → logprob: -1.840010404586792
    4. ' +' → logprob: -2.215010404586792
    5. ')' → logprob: -3.215010404586792
    6. 's' → logprob: -3.215010404586792
    7. ']' → logprob: -3.965010404586792
    8. '...' → logprob: -4.090010643005371
    9. ',' → logprob: -4.215010643005371
    10. ':' → logprob: -4.340010643005371

Token 2028: ' faible' (ID: 75786)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.6832900643348694
    2. 'gr' → logprob: -1.4332900047302246
    3. 'à' → logprob: -2.3082900047302246
    4. 'est' → logprob: -3.3082900047302246
    5. 'grand' → logprob: -3.5582900047302246
    6. 'import' → logprob: -3.6832900047302246
    7. 'e' → logprob: -4.058290004730225
    8. '```' → logprob: -4.433290004730225
    9. 'positive' → logprob: -5.308290004730225
    10. 'pet' → logprob: -5.308290004730225

Token 2029: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9172329902648926
    2. ':' → logprob: -1.4172329902648926
    3. 'for' → logprob: -2.7922329902648926
    4. '       ' → logprob: -3.1672329902648926
    5. ':
' → logprob: -3.2922329902648926
    6. '.' → logprob: -3.2922329902648926
    7. 'def' → logprob: -3.4172329902648926
    8. '=' → logprob: -3.9172329902648926
    9. ',' → logprob: -3.9172329902648926
    10. ' =' → logprob: -4.292232990264893

Token 2030: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10824160277843475
    2. '
' → logprob: -3.108241558074951
    3. '       ' → logprob: -3.108241558074951
    4. '	for' → logprob: -4.983241558074951
    5. '    
' → logprob: -5.983241558074951
    6. ' for' → logprob: -6.358241558074951
    7. 'for' → logprob: -7.233241558074951
    8. '```' → logprob: -7.483241558074951
    9. '        
' → logprob: -8.35824203491211
    10. ' 
' → logprob: -8.85824203491211

Token 2031: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7691754698753357
    2. '   ' → logprob: -1.5191755294799805
    3. ' for' → logprob: -1.8941755294799805
    4. '       ' → logprob: -2.1441755294799805
    5. '
' → logprob: -3.8941755294799805
    6. 'prev' → logprob: -4.0191755294799805
    7. 'i' → logprob: -5.7691755294799805
    8. 'j' → logprob: -6.1441755294799805
    9. '```' → logprob: -6.1441755294799805
    10. ' prev' → logprob: -7.2691755294799805

Token 2032: ' Rien' (ID: 136457)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07113532721996307
    2. '       ' → logprob: -2.8211352825164795
    3. ' for' → logprob: -5.696135520935059
    4. 'def' → logprob: -5.821135520935059
    5. 'for' → logprob: -6.196135520935059
    6. 'i' → logprob: -8.696135520935059
    7. ' i' → logprob: -8.696135520935059
    8. '    
' → logprob: -9.196135520935059
    9. '
' → logprob: -9.446135520935059
    10. 'n' → logprob: -9.946135520935059

Token 2033: ' ne' (ID: 453)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2034: ' nous' (ID: 6176)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6462987661361694
    2. '   ' → logprob: -1.1462987661361694
    3. 'def' → logprob: -2.521298885345459
    4. ' =' → logprob: -3.396298885345459
    5. 'for' → logprob: -4.271298885345459
    6. '=' → logprob: -4.396298885345459
    7. ' for' → logprob: -5.521298885345459
    8. 'import' → logprob: -6.146298885345459
    9. '           ' → logprob: -6.271298885345459
    10. '    ' → logprob: -6.521298885345459

Token 2035: ' dit' (ID: 4758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0851389169692993
    2. '   ' → logprob: -1.5851389169692993
    3. '       ' → logprob: -1.9601389169692993
    4. 'for' → logprob: -2.4601387977600098
    5. 'return' → logprob: -2.9601387977600098
    6. ' for' → logprob: -3.7101387977600098
    7. 'change' → logprob: -3.8351387977600098
    8. 'ind' → logprob: -4.46013879776001
    9. ' return' → logprob: -4.46013879776001
    10. 'stop' → logprob: -4.46013879776001

Token 2036: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19178171455860138
    2. '   ' → logprob: -2.441781759262085
    3. '  ' → logprob: -3.816781759262085
    4. '    ' → logprob: -4.566781520843506
    5. '       ' → logprob: -4.691781520843506
    6. ' pas' → logprob: -4.941781520843506
    7. ' de' → logprob: -5.316781520843506
    8. ''' → logprob: -5.316781520843506
    9. ' que' → logprob: -5.816781520843506
    10. '_' → logprob: -5.941781520843506

Token 2037: ' index' (ID: 3472)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5776513814926147
    2. 'M' → logprob: -1.3276513814926147
    3. 'len' → logprob: -2.7026515007019043
    4. '   ' → logprob: -3.4526515007019043
    5. ' len' → logprob: -4.202651500701904
    6. ' ships' → logprob: -4.327651500701904
    7. ')' → logprob: -5.202651500701904
    8. ' ' → logprob: -5.202651500701904
    9. 'ships' → logprob: -5.327651500701904
    10. ' True' → logprob: -5.452651500701904

Token 2038: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44106319546699524
    2. 's' → logprob: -1.6910631656646729
    3. '=' → logprob: -3.066063165664673
    4. ')' → logprob: -3.566063165664673
    5. ' =' → logprob: -3.691063165664673
    6. ' ' → logprob: -4.316063404083252
    7. '_' → logprob: -4.441063404083252
    8. ']' → logprob: -5.316063404083252
    9. 'es' → logprob: -5.441063404083252
    10. ' s' → logprob: -5.566063404083252

Token 2039: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9266824126243591
    2. 's' → logprob: -1.801682472229004
    3. '==' → logprob: -2.176682472229004
    4. ')' → logprob: -2.926682472229004
    5. '+' → logprob: -3.051682472229004
    6. '=' → logprob: -3.176682472229004
    7. ']' → logprob: -3.426682472229004
    8. ' >=' → logprob: -3.676682472229004
    9. '0' → logprob: -4.176682472229004
    10. '<|end|>' → logprob: -4.551682472229004

Token 2040: ' j' (ID: 441)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.003453125711530447
    2. 'len' → logprob: -6.128453254699707
    3. ' M' → logprob: -7.253453254699707
    4. 'N' → logprob: -7.753453254699707
    5. '=' → logprob: -11.003453254699707
    6. '   ' → logprob: -11.628453254699707
    7. 'ships' → logprob: -11.878453254699707
    8. ' len' → logprob: -12.003453254699707
    9. ' ' → logprob: -12.003453254699707
    10. 'i' → logprob: -12.128453254699707

Token 2041: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18677060306072235
    2. '   ' → logprob: -2.9367706775665283
    3. ':
' → logprob: -3.1867706775665283
    4. ',' → logprob: -4.561770439147949
    5. '<|end|>' → logprob: -4.561770439147949
    6. '.' → logprob: -4.936770439147949
    7. ')' → logprob: -4.936770439147949
    8. ' or' → logprob: -5.686770439147949
    9. '       ' → logprob: -5.686770439147949
    10. 'def' → logprob: -5.936770439147949

Token 2042: ' vi' (ID: 2640)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.08534813672304153
    2. ' ships' → logprob: -2.710348129272461
    3. 'positions' → logprob: -4.585348129272461
    4. 'pos' → logprob: -6.960348129272461
    5. 'ship' → logprob: -6.960348129272461
    6. 's' → logprob: -7.335348129272461
    7. 'True' → logprob: -7.585348129272461
    8. 'position' → logprob: -7.585348129272461
    9. 'boats' → logprob: -7.960348129272461
    10. ' positions' → logprob: -7.960348129272461

Token 2043: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0273540019989014
    2. '=' → logprob: -1.2773540019989014
    3. ' <=' → logprob: -1.9023540019989014
    4. '<=' → logprob: -2.6523540019989014
    5. ' =' → logprob: -3.5273540019989014
    6. ' >=' → logprob: -3.9023540019989014
    7. '>=' → logprob: -4.0273542404174805
    8. 's' → logprob: -4.5273542404174805
    9. '>' → logprob: -4.7773542404174805
    10. ' ' → logprob: -5.1523542404174805

Token 2044: ' devant' (ID: 37522)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -1.3315366506576538
    2. 'True' → logprob: -2.0815367698669434
    3. '>=' → logprob: -2.0815367698669434
    4. 'max' → logprob: -2.3315367698669434
    5. 'always' → logprob: -2.3315367698669434
    6. 'gate' → logprob: -2.9565367698669434
    7. 'greater' → logprob: -3.3315367698669434
    8. 'higher' → logprob: -3.7065367698669434
    9. 'ship' → logprob: -3.8315367698669434
    10. 'v' → logprob: -3.9565367698669434

Token 2045: ' v' (ID: 323)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.062468409538269
    2. '
' → logprob: -1.437468409538269
    3. '   ' → logprob: -2.4374685287475586
    4. ':' → logprob: -2.6874685287475586
    5. ':
' → logprob: -3.5624685287475586
    6. ')' → logprob: -3.6874685287475586
    7. '[' → logprob: -3.8124685287475586
    8. '```' → logprob: -4.187468528747559
    9. 'for' → logprob: -4.187468528747559
    10. '       ' → logprob: -4.312468528747559

Token 2046: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5241530537605286
    2. 'i' → logprob: -0.8991530537605286
    3. '_j' → logprob: -8.024152755737305
    4. 'itesse' → logprob: -8.399152755737305
    5. '_i' → logprob: -8.774152755737305
    6. 'aj' → logprob: -9.524152755737305
    7. 'jou' → logprob: -10.524152755737305
    8. 'ariable' → logprob: -11.024152755737305
    9. 'ai' → logprob: -11.149152755737305
    10. 'a' → logprob: -11.399152755737305

Token 2047: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3442455530166626
    2. '       ' → logprob: -1.4692455530166626
    3. '
' → logprob: -1.8442455530166626
    4. 'def' → logprob: -2.469245433807373
    5. ':' → logprob: -3.594245433807373
    6. ')
' → logprob: -3.719245433807373
    7. '.' → logprob: -3.719245433807373
    8. ':
' → logprob: -3.969245433807373
    9. ')' → logprob: -4.219245433807373
    10. '#' → logprob: -4.219245433807373

Token 2048: ' car' (ID: 1669)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5093247890472412
    2. ' mais' → logprob: -1.3843247890472412
    3. ' donc' → logprob: -3.134324789047241
    4. ' but' → logprob: -3.134324789047241
    5. '...' → logprob: -5.00932502746582
    6. '       ' → logprob: -5.25932502746582
    7. 'for' → logprob: -5.38432502746582
    8. 'mais' → logprob: -5.38432502746582
    9. 'but' → logprob: -5.50932502746582
    10. ' so' → logprob: -5.63432502746582

Token 2049: ' position' (ID: 4010)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5880793333053589
    2. 'positions' → logprob: -1.9630793333053589
    3. 'ships' → logprob: -2.0880794525146484
    4. 'la' → logprob: -3.2130794525146484
    5. 'pos' → logprob: -3.2130794525146484
    6. ' les' → logprob: -3.9630794525146484
    7. 'le' → logprob: -4.588079452514648
    8. '#' → logprob: -4.838079452514648
    9. ' la' → logprob: -5.088079452514648
    10. 'the' → logprob: -5.088079452514648

Token 2050: ' peuvent' (ID: 21321)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14858068525791168
    2. '[' → logprob: -3.52358078956604
    3. ' =' → logprob: -3.64858078956604
    4. '[i' → logprob: -3.64858078956604
    5. '=' → logprob: -4.648580551147461
    6. ']' → logprob: -4.773580551147461
    7. '_' → logprob: -4.773580551147461
    8. ' s' → logprob: -5.398580551147461
    9. ')' → logprob: -5.648580551147461
    10. '[]' → logprob: -6.148580551147461

Token 2051: ' bou' (ID: 17573)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2052: 'ger' (ID: 1281)
  Prédit: 'ger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ger' → logprob: -0.004407332744449377
    2. 'g' → logprob: -5.8794074058532715
    3. 'gger' → logprob: -7.2544074058532715
    4. 'ge' → logprob: -8.129406929016113
    5. 'yer' → logprob: -9.004406929016113
    6. 'uger' → logprob: -9.004406929016113
    7. 'e' → logprob: -10.004406929016113
    8. 'ker' → logprob: -10.254406929016113
    9. 'jou' → logprob: -10.504406929016113
    10. 'gent' → logprob: -10.504406929016113

Token 2053: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.40425443649292
    2. '   ' → logprob: -1.40425443649292
    3. '.' → logprob: -2.02925443649292
    4. '       ' → logprob: -2.27925443649292
    5. ',' → logprob: -3.27925443649292
    6. ')' → logprob: -3.65425443649292
    7. '<|end|>' → logprob: -3.65425443649292
    8. '[' → logprob: -3.90425443649292
    9. '[i' → logprob: -4.02925443649292
    10. 'def' → logprob: -4.40425443649292

Token 2054: '       ' (ID: 309)
  Prédit: ' mais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -1.085746169090271
    2. '#' → logprob: -1.335746169090271
    3. '       ' → logprob: -1.460746169090271
    4. ' but' → logprob: -2.9607462882995605
    5. ' donc' → logprob: -3.0857462882995605
    6. '   ' → logprob: -3.8357462882995605
    7. '        
' → logprob: -4.8357462882995605
    8. ' so' → logprob: -5.3357462882995605
    9. 'but' → logprob: -5.3357462882995605
    10. '<|end|>' → logprob: -5.8357462882995605

Token 2055: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06141459196805954
    2. '       ' → logprob: -3.9364144802093506
    3. '#' (adapté à ' #') → logprob: -4.68641471862793
    4. ' )' → logprob: -4.68641471862793
    5. ')
' → logprob: -5.31141471862793
    6. '):
' → logprob: -5.43641471862793
    7. '0' → logprob: -6.43641471862793
    8. '   ' → logprob: -6.56141471862793
    9. '...' → logprob: -6.81141471862793
    10. '    ' → logprob: -6.93641471862793

Token 2056: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11720339208841324
    2. '       ' → logprob: -2.6172034740448
    3. 'mais' → logprob: -4.617203235626221
    4. ' #' → logprob: -4.867203235626221
    5. 'for' → logprob: -5.117203235626221
    6. ' mais' → logprob: -5.992203235626221
    7. '   ' → logprob: -6.117203235626221
    8. 'il' → logprob: -6.242203235626221
    9. ' but' → logprob: -6.617203235626221
    10. 'but' → logprob: -6.867203235626221

Token 2057: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1384735107421875
    2. 'for' → logprob: -1.6384735107421875
    3. 'range' → logprob: -2.0134735107421875
    4. '   ' → logprob: -2.0134735107421875
    5. '
' → logprob: -3.0134735107421875
    6. ' for' → logprob: -3.2634735107421875
    7. ' M' → logprob: -3.3884735107421875
    8. 'M' → logprob: -3.8884735107421875
    9. 'pass' → logprob: -4.6384735107421875
    10. 'ships' → logprob: -4.6384735107421875

Token 2058: ' trie' (ID: 139428)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32037603855133057
    2. 'tr' → logprob: -2.820375919342041
    3. '#' → logprob: -3.070375919342041
    4. '       ' → logprob: -3.445375919342041
    5. 'range' → logprob: -3.445375919342041
    6. '   ' → logprob: -3.570375919342041
    7. 'do' → logprob: -3.695375919342041
    8. 'continue' → logprob: -4.945375919342041
    9. 'sort' → logprob: -5.070375919342041
    10. '    ' → logprob: -5.445375919342041

Token 2059: ' par' (ID: 686)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.5281012654304504
    2. '(' → logprob: -1.9031012058258057
    3. '=' → logprob: -2.1531012058258057
    4. '   ' → logprob: -2.7781012058258057
    5. 'by' → logprob: -3.7781012058258057
    6. ' =' → logprob: -4.403101444244385
    7. 'key' → logprob: -4.903101444244385
    8. 's' → logprob: -4.903101444244385
    9. 'indices' → logprob: -5.153101444244385
    10. '       ' → logprob: -5.278101444244385

Token 2060: ' position' (ID: 4010)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.42891809344291687
    2. 'key' → logprob: -1.5539181232452393
    3. 'pos' → logprob: -2.1789181232452393
    4. 'sorted' → logprob: -5.17891788482666
    5. '-s' → logprob: -5.42891788482666
    6. 'ship' → logprob: -6.05391788482666
    7. 'reverse' → logprob: -6.17891788482666
    8. 'ships' → logprob: -6.17891788482666
    9. '-key' → logprob: -6.42891788482666
    10. ' lambda' → logprob: -6.67891788482666

Token 2061: ' actuelle' (ID: 104951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.936680018901825
    2. '=' → logprob: -2.1866800785064697
    3. '       ' → logprob: -2.4366800785064697
    4. '   ' → logprob: -2.5616800785064697
    5. 'ships' → logprob: -2.8116800785064697
    6. 's' → logprob: -2.9366800785064697
    7. '_sorted' → logprob: -3.3116800785064697
    8. '.sort' → logprob: -3.3116800785064697
    9. ',' → logprob: -3.4366800785064697
    10. ')' → logprob: -3.9366800785064697

Token 2062: ' décro' (ID: 176854)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40020063519477844
    2. 'ships' → logprob: -1.400200605392456
    3. '       ' → logprob: -2.775200605392456
    4. ' ships' → logprob: -4.150200843811035
    5. 'positions' → logprob: -7.025200843811035
    6. '    
' → logprob: -7.275200843811035
    7. '        
' → logprob: -7.275200843811035
    8. ',' → logprob: -7.400200843811035
    9. '
' → logprob: -7.900200843811035
    10. 'sorted' → logprob: -8.025200843811035

Token 2063: 'issante' (ID: 80061)
  Prédit: 'issante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.18486060202121735
    2. 'r' → logprob: -2.5598607063293457
    3. '}' → logprob: -3.6848607063293457
    4. ']' → logprob: -4.684860706329346
    5. 'ante' → logprob: -4.684860706329346
    6. 'issant' → logprob: -4.809860706329346
    7. 's' → logprob: -5.184860706329346
    8. ')' → logprob: -5.184860706329346
    9. 'nante' → logprob: -5.809860706329346
    10. 'd' → logprob: -6.059860706329346

Token 2064: ' (' (ID: 350)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.4234679341316223
    2. '   ' → logprob: -1.6734678745269775
    3. '       ' → logprob: -2.2984678745269775
    4. ' ships' → logprob: -3.2984678745269775
    5. '        
' → logprob: -5.548468112945557
    6. ',' → logprob: -5.673468112945557
    7. 'positions' → logprob: -6.173468112945557
    8. '
' → logprob: -6.423468112945557
    9. '(ship' → logprob: -6.548468112945557
    10. '    
' → logprob: -6.923468112945557

Token 2065: 'plus' (ID: 11601)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.037221528589725494
    2. 'reverse' → logprob: -4.287221431732178
    3. 'key' → logprob: -5.037221431732178
    4. '),' → logprob: -5.912221431732178
    5. '):
' → logprob: -6.162221431732178
    6. ' ,' → logprob: -6.162221431732178
    7. ',
' → logprob: -6.537221431732178
    8. ')' → logprob: -6.662221431732178
    9. ' key' → logprob: -6.662221431732178
    10. 'sorted' → logprob: -6.912221431732178

Token 2066: ' grand' (ID: 6363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.675875723361969
    2. ')' → logprob: -2.175875663757324
    3. '```' → logprob: -2.425875663757324
    4. 'import' → logprob: -2.800875663757324
    5. '  ' → logprob: -3.550875663757324
    6. '    ' → logprob: -3.800875663757324
    7. 'grand' → logprob: -3.925875663757324
    8. 'près' → logprob: -4.050875663757324
    9. '...' → logprob: -4.050875663757324
    10. 'à' → logprob: -4.425875663757324

Token 2067: ' pos' (ID: 1253)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7716801762580872
    2. 'pos' → logprob: -1.1466801166534424
    3. '_pos' → logprob: -3.1466801166534424
    4. 's' → logprob: -3.6466801166534424
    5. ']' → logprob: -3.8966801166534424
    6. '.pos' → logprob: -4.3966803550720215
    7. 'i' → logprob: -4.3966803550720215
    8. '.' → logprob: -4.3966803550720215
    9. '[pos' → logprob: -4.6466803550720215
    10. '#' → logprob: -4.7716803550720215

Token 2068: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14544205367565155
    2. ',' → logprob: -3.395442008972168
    3. '),' → logprob: -3.395442008972168
    4. '):
' → logprob: -4.395442008972168
    5. ' )' → logprob: -4.395442008972168
    6. 's' → logprob: -4.520442008972168
    7. 'e' → logprob: -4.645442008972168
    8. '):' → logprob: -5.395442008972168
    9. '])' → logprob: -5.520442008972168
    10. ' =' → logprob: -5.645442008972168

Token 2069: ' devant' (ID: 37522)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.8973110914230347
    2. 'le' → logprob: -1.0223110914230347
    3. '0' → logprob: -2.647311210632324
    4. '```' → logprob: -3.647311210632324
    5. '>' → logprob: -4.022311210632324
    6. 'i' → logprob: -4.272311210632324
    7. 'for' → logprob: -4.522311210632324
    8. ' celui' → logprob: -4.647311210632324
    9. 'boats' → logprob: -4.647311210632324
    10. 'the' → logprob: -4.772311210632324

Token 2070: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043208032846450806
    2. '):' → logprob: -4.168208122253418
    3. ' )' → logprob: -4.793208122253418
    4. ',' → logprob: -5.543208122253418
    5. '),' → logprob: -5.668208122253418
    6. 'i' → logprob: -5.793208122253418
    7. '):
' → logprob: -6.168208122253418
    8. ').' → logprob: -6.418208122253418
    9. ')
' → logprob: -6.668208122253418
    10. ' i' → logprob: -8.168208122253418

Token 2071: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03790698200464249
    2. '   ' → logprob: -3.5379068851470947
    3. '
' → logprob: -5.412907123565674
    4. '        
' → logprob: -7.037907123565674
    5. 'def' → logprob: -7.037907123565674
    6. '```' → logprob: -7.287907123565674
    7. ' ships' → logprob: -7.787907123565674
    8. 'ships' → logprob: -8.412906646728516
    9. '    
' → logprob: -8.662906646728516
    10. '<|end|>' → logprob: -8.787906646728516

Token 2072: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8730279207229614
    2. ' ships' → logprob: -1.6230279207229614
    3. 'ships' → logprob: -1.9980279207229614
    4. '       ' → logprob: -2.123027801513672
    5. 'positions' → logprob: -2.873027801513672
    6. ' positions' → logprob: -3.248027801513672
    7. 'sorted' → logprob: -4.998027801513672
    8. '        
' → logprob: -4.998027801513672
    9. '
' → logprob: -5.373027801513672
    10. ' sorted' → logprob: -5.373027801513672

Token 2073: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8170374631881714
    2. 'ships' → logprob: -1.6920374631881714
    3. ' ships' → logprob: -1.9420374631881714
    4. '       ' → logprob: -2.317037582397461
    5. 'positions' → logprob: -2.817037582397461
    6. ' positions' → logprob: -3.942037582397461
    7. 'sorted' → logprob: -4.192037582397461
    8. 'def' → logprob: -5.067037582397461
    9. ' sorted' → logprob: -5.067037582397461
    10. '    
' → logprob: -5.442037582397461

Token 2074: ' positions' (ID: 15897)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.6782242655754089
    2. '   ' → logprob: -1.3032243251800537
    3. '#' → logprob: -2.5532243251800537
    4. '
' → logprob: -3.4282243251800537
    5. '       ' → logprob: -3.6782243251800537
    6. ' ships' → logprob: -3.9282243251800537
    7. 'def' → logprob: -4.053224086761475
    8. '```' → logprob: -4.803224086761475
    9. 'True' → logprob: -4.928224086761475
    10. 'positions' → logprob: -5.053224086761475

Token 2075: ' peuvent' (ID: 21321)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45904600620269775
    2. '.sort' → logprob: -1.7090460062026978
    3. ' =' → logprob: -1.9590460062026978
    4. '_sorted' → logprob: -4.084045886993408
    5. '.' → logprob: -5.209045886993408
    6. 'sort' → logprob: -5.584045886993408
    7. 's' → logprob: -5.584045886993408
    8. 'sorted' → logprob: -6.584045886993408
    9. '=current' → logprob: -6.584045886993408
    10. ')' → logprob: -6.834045886993408

Token 2076: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4171324074268341
    2. ' =' → logprob: -2.1671323776245117
    3. ' be' → logprob: -3.0421323776245117
    4. ')' → logprob: -3.6671323776245117
    5. ' not' → logprob: -3.6671323776245117
    6. 'not' → logprob: -3.6671323776245117
    7. 'import' → logprob: -4.292132377624512
    8. 'être' → logprob: -4.542132377624512
    9. '=None' → logprob: -5.042132377624512
    10. '
' → logprob: -5.292132377624512

Token 2077: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.24182580411434174
    2. 'ident' → logprob: -1.741825819015503
    3. 'tr' → logprob: -4.366825580596924
    4. 'eg' → logprob: -4.616825580596924
    5. 'égal' → logprob: -5.491825580596924
    6. ' ég' → logprob: -6.241825580596924
    7. 'mod' → logprob: -6.366825580596924
    8. 'm' → logprob: -6.616825580596924
    9. 'à' → logprob: -7.241825580596924
    10. 'strict' → logprob: -7.616825580596924

Token 2078: 'ales' (ID: 3459)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.2773875296115875
    2. 'ales' → logprob: -1.5273874998092651
    3. 'ale' → logprob: -4.777387619018555
    4. 'alis' → logprob: -5.277387619018555
    5. 'aux' → logprob: -6.027387619018555
    6. '``' → logprob: -6.652387619018555
    7. '```' → logprob: -6.777387619018555
    8. 'a' → logprob: -7.152387619018555
    9. '[' → logprob: -7.152387619018555
    10. '
' → logprob: -8.027387619018555

Token 2079: ' ou' (ID: 2031)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.4357421100139618
    2. '       ' → logprob: -2.185742139816284
    3. '   ' → logprob: -2.560742139816284
    4. '
' → logprob: -3.060742139816284
    5. ',' → logprob: -3.810742139816284
    6. ' ships' → logprob: -3.935742139816284
    7. ')
' → logprob: -4.685741901397705
    8. '[' → logprob: -5.185741901397705
    9. '.
' → logprob: -5.310741901397705
    10. ')' → logprob: -5.310741901397705

Token 2080: ' proches' (ID: 91241)
  Prédit: 'close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'close' → logprob: -1.2457926273345947
    2. 'very' → logprob: -1.7457926273345947
    3. 'import' → logprob: -1.8707926273345947
    4. ' proches' → logprob: -2.1207926273345947
    5. ' proche' → logprob: -2.9957926273345947
    6. 'près' → logprob: -3.3707926273345947
    7. 'moins' → logprob: -3.7457926273345947
    8. 'tr' → logprob: -3.7457926273345947
    9. 't' → logprob: -3.8707926273345947
    10. 'pres' → logprob: -4.370792388916016

Token 2081: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8175016641616821
    2. ':
' → logprob: -2.0675015449523926
    3. '.' → logprob: -2.1925015449523926
    4. '.
' → logprob: -2.5675015449523926
    5. '   ' → logprob: -2.8175015449523926
    6. ':' → logprob: -3.0675015449523926
    7. 'ships' → logprob: -3.0675015449523926
    8. '
' → logprob: -3.1925015449523926
    9. '       ' → logprob: -3.3175015449523926
    10. '#' → logprob: -3.3175015449523926

Token 2082: ' on' (ID: 402)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.6608720421791077
    2. '       ' → logprob: -1.785871982574463
    3. ' ships' → logprob: -1.910871982574463
    4. '   ' → logprob: -3.160871982574463
    5. 'positions' → logprob: -3.410871982574463
    6. '#' → logprob: -3.410871982574463
    7. '        
' → logprob: -4.785871982574463
    8. '```' → logprob: -4.785871982574463
    9. 'def' → logprob: -5.410871982574463
    10. '    
' → logprob: -5.410871982574463

Token 2083: ' g' (ID: 329)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3588746786117554
    2. ')' → logprob: -1.6088746786117554
    3. '   ' → logprob: -1.6088746786117554
    4. '    ' → logprob: -2.483874797821045
    5. 'sort' → logprob: -3.233874797821045
    6. 'def' → logprob: -3.733874797821045
    7. '=' → logprob: -3.858874797821045
    8. ']' → logprob: -3.983874797821045
    9. 'continue' → logprob: -4.233874797821045
    10. '        ' → logprob: -4.233874797821045

Token 2084: 'ère' (ID: 4346)
  Prédit: 'enerate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enerate' → logprob: -0.5244386196136475
    2. 'def' → logprob: -2.0244386196136475
    3. '=' → logprob: -2.6494386196136475
    4. '#' → logprob: -2.8994386196136475
    5. 'ère' → logprob: -3.8994386196136475
    6. 'arder' → logprob: -3.8994386196136475
    7. 'continue' → logprob: -4.274438858032227
    8. 'ard' → logprob: -4.274438858032227
    9. 'enerated' → logprob: -4.649438858032227
    10. 'arde' → logprob: -4.774438858032227

Token 2085: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5730421543121338
    2. '       ' → logprob: -1.8230421543121338
    3. '()
' → logprob: -2.073042154312134
    4. '```' → logprob: -2.698042154312134
    5. ')
' → logprob: -3.323042154312134
    6. '   ' → logprob: -3.573042154312134
    7. ' =' → logprob: -3.573042154312134
    8. ']' → logprob: -3.573042154312134
    9. '()' → logprob: -3.823042154312134
    10. '(
' → logprob: -3.823042154312134

Token 2086: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7574233412742615
    2. '       ' → logprob: -0.8824233412742615
    3. '
' → logprob: -2.2574234008789062
    4. 'def' → logprob: -5.132423400878906
    5. '    
' → logprob: -5.882423400878906
    6. '        
' → logprob: -6.132423400878906
    7. ' 
' → logprob: -7.132423400878906
    8. '```' → logprob: -7.507423400878906
    9. '  
' → logprob: -9.007423400878906
    10. '   
' → logprob: -9.757423400878906

Token 2087: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21832618117332458
    2. 'ships' → logprob: -2.2183260917663574
    3. 'positions' → logprob: -3.3433260917663574
    4. ' ships' → logprob: -3.7183260917663574
    5. '       ' → logprob: -5.093326091766357
    6. '#' (adapté à ' #') → logprob: -5.343326091766357
    7. ' positions' → logprob: -5.343326091766357
    8. 'def' → logprob: -5.343326091766357
    9. 'sorted' → logprob: -6.218326091766357
    10. 'pos' → logprob: -6.968326091766357

Token 2088: ' Nous' (ID: 20193)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12274879962205887
    2. 'ships' → logprob: -2.747748851776123
    3. '       ' → logprob: -3.997748851776123
    4. 'def' → logprob: -4.372748851776123
    5. 'positions' → logprob: -4.747748851776123
    6. ' ships' → logprob: -5.122748851776123
    7. '#' → logprob: -6.372748851776123
    8. '
' → logprob: -6.622748851776123
    9. '    
' → logprob: -7.497748851776123
    10. 'pos' → logprob: -7.622748851776123

Token 2089: ' allons' (ID: 97647)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7240071296691895
    2. '       ' → logprob: -1.2240071296691895
    3. 'def' → logprob: -2.4740071296691895
    4. '    ' → logprob: -3.9740071296691895
    5. 'for' → logprob: -4.2240071296691895
    6. 'n' → logprob: -4.5990071296691895
    7. ' n' → logprob: -4.5990071296691895
    8. 'pos' → logprob: -4.9740071296691895
    9. '.sort' → logprob: -5.0990071296691895
    10. ' =' → logprob: -5.0990071296691895

Token 2090: ' tr' (ID: 498)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.471187561750412
    2. '   ' → logprob: -1.2211875915527344
    3. '#' → logprob: -3.0961875915527344
    4. '       ' → logprob: -3.9711875915527344
    5. 'positions' → logprob: -4.971187591552734
    6. ' ships' → logprob: -5.596187591552734
    7. '
' → logprob: -6.846187591552734
    8. 'def' → logprob: -7.096187591552734
    9. 'sorted' → logprob: -7.096187591552734
    10. 'ship' → logprob: -7.221187591552734

Token 2091: 'ier' (ID: 905)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37923765182495117
    2. 'y' → logprob: -1.7542376518249512
    3. 'ier' → logprob: -2.004237651824951
    4. 'ies' → logprob: -6.254237651824951
    5. '#' → logprob: -7.004237651824951
    6. 'ie' → logprob: -7.629237651824951
    7. 'avers' → logprob: -7.629237651824951
    8. 'ans' → logprob: -7.754237651824951
    9. 'ait' → logprob: -7.754237651824951
    10. 'iers' → logprob: -8.00423812866211

Token 2092: ' les' (ID: 1341)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.46925485134124756
    2. '(' → logprob: -1.0942548513412476
    3. '=' → logprob: -4.469254970550537
    4. '(
' → logprob: -5.219254970550537
    5. '   ' → logprob: -5.344254970550537
    6. 's' → logprob: -5.844254970550537
    7. ' =' → logprob: -6.219254970550537
    8. 'by' → logprob: -6.344254970550537
    9. ' ships' → logprob: -6.719254970550537
    10. '_sh' → logprob: -6.969254970550537

Token 2093: ' bate' (ID: 39378)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.008829296566545963
    2. 'range' → logprob: -5.508829116821289
    3. '[(' → logprob: -6.258829116821289
    4. 'sorted' → logprob: -6.883829116821289
    5. 'enumer' → logprob: -7.508829116821289
    6. '[
' → logprob: -7.758829116821289
    7. 'indices' → logprob: -8.883829116821289
    8. 'positions' → logprob: -9.008829116821289
    9. '   ' → logprob: -9.508829116821289
    10. 'key' → logprob: -9.508829116821289

Token 2094: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.002799414098262787
    2. 'ux' → logprob: -6.0027995109558105
    3. 'ts' → logprob: -8.752799034118652
    4. 'ats' → logprob: -9.877799034118652
    5. 'te' → logprob: -10.627799034118652
    6. '```' → logprob: -10.627799034118652
    7. 'tes' → logprob: -11.127799034118652
    8. 'Aux' → logprob: -11.877799034118652
    9. '``' → logprob: -12.127799034118652
    10. 'to' → logprob: -12.502799034118652

Token 2095: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2778079509735107
    2. '   ' → logprob: -1.5278079509735107
    3. '=' → logprob: -1.9028079509735107
    4. 's' → logprob: -2.6528079509735107
    5. '_by' → logprob: -2.7778079509735107
    6. '       ' → logprob: -2.9028079509735107
    7. 'ships' → logprob: -3.1528079509735107
    8. '(' → logprob: -3.5278079509735107
    9. '_sorted' → logprob: -4.27780818939209
    10. ')' → logprob: -4.27780818939209

Token 2096: ' position' (ID: 4010)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.13124331831932068
    2. 'pos' → logprob: -2.1312432289123535
    3. 'key' → logprob: -5.8812432289123535
    4. ' lambda' → logprob: -7.3812432289123535
    5. '=lambda' → logprob: -8.131243705749512
    6. '-pos' → logprob: -8.756243705749512
    7. '   ' → logprob: -9.131243705749512
    8. 'reverse' → logprob: -9.506243705749512
    9. 'position' → logprob: -9.506243705749512
    10. '(lambda' → logprob: -10.131243705749512

Token 2097: ' décro' (ID: 176854)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5542981624603271
    2. '_sorted' → logprob: -1.5542981624603271
    3. '=' → logprob: -2.054298162460327
    4. '_positions' → logprob: -2.179298162460327
    5. '_' → logprob: -2.304298162460327
    6. 's' → logprob: -2.804298162460327
    7. '(' → logprob: -3.054298162460327
    8. ',' → logprob: -3.554298162460327
    9. '(
' → logprob: -3.929298162460327
    10. '   ' → logprob: -4.054298400878906

Token 2098: 'issante' (ID: 80061)
  Prédit: 'issante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.1169605627655983
    2. 'issant' → logprob: -2.9919605255126953
    3. '=' → logprob: -3.4919605255126953
    4. 'ress' → logprob: -5.116960525512695
    5. '=-' → logprob: -5.616960525512695
    6. ']' → logprob: -6.116960525512695
    7. ']
' → logprob: -6.366960525512695
    8. 'r' → logprob: -6.491960525512695
    9. '=True' → logprob: -6.491960525512695
    10. 'is' → logprob: -6.866960525512695

Token 2099: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6390854120254517
    2. 'ships' → logprob: -1.7640854120254517
    3. ',' → logprob: -2.014085292816162
    4. '   ' → logprob: -3.514085292816162
    5. '(sorted' → logprob: -3.764085292816162
    6. 'sorted' → logprob: -3.889085292816162
    7. 'positions' → logprob: -4.264085292816162
    8. '(' → logprob: -4.264085292816162
    9. ' =' → logprob: -4.764085292816162
    10. ',
' → logprob: -4.764085292816162

Token 2100: 'b' (ID: 65)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.10850635915994644
    2. 'reverse' → logprob: -2.608506441116333
    3. 'lambda' → logprob: -3.858506441116333
    4. ' key' → logprob: -5.108506202697754
    5. ',' → logprob: -6.983506202697754
    6. '=lambda' → logprob: -8.608506202697754
    7. ' reverse' → logprob: -8.733506202697754
    8. ',key' → logprob: -8.733506202697754
    9. '   ' → logprob: -9.108506202697754
    10. ' lambda' → logprob: -9.108506202697754

Token 2101: 'ords' (ID: 9142)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.2790007591247559
    2. 'ased' → logprob: -1.2790007591247559
    3. 'key' → logprob: -2.154000759124756
    4. '=' → logprob: -3.029000759124756
    5. 'reverse' → logprob: -3.404000759124756
    6. 'sort' → logprob: -3.529000759124756
    7. 'ase' → logprob: -3.654000759124756
    8. 'r' → logprob: -3.904000759124756
    9. '=-' → logprob: -4.029000759124756
    10. '_key' → logprob: -4.154000759124756

Token 2102: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0928785800933838
    2. 'e' → logprob: -1.5928785800933838
    3. ')' → logprob: -1.7178785800933838
    4. ' =' → logprob: -2.467878580093384
    5. ',' → logprob: -2.717878580093384
    6. 'est' → logprob: -3.467878580093384
    7. '=-' → logprob: -3.717878580093384
    8. '+' → logprob: -4.467878341674805
    9. '),' → logprob: -4.717878341674805
    10. 'es' → logprob: -4.842878341674805

Token 2103: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036082442849874496
    2. 'e' → logprob: -3.7860825061798096
    3. ',' → logprob: -5.4110822677612305
    4. '),' → logprob: -5.7860822677612305
    5. ' to' → logprob: -7.6610822677612305
    6. '>' → logprob: -8.16108226776123
    7. ' à' → logprob: -8.16108226776123
    8. '+' → logprob: -8.41108226776123
    9. ').' → logprob: -8.41108226776123
    10. 'to' → logprob: -8.53608226776123

Token 2104: ' l' (ID: 305)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0813020467758179
    2. '>' → logprob: -2.0813021659851074
    3. ' -' → logprob: -2.0813021659851074
    4. 'l' → logprob: -2.2063021659851074
    5. ']' → logprob: -2.9563021659851074
    6. 'la' → logprob: -3.4563021659851074
    7. 'i' → logprob: -3.4563021659851074
    8. ')' → logprob: -4.331302165985107
    9. 'reverse' → logprob: -4.331302165985107
    10. 'ile' → logprob: -4.456302165985107

Token 2105: ''ou' (ID: 68966)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2425543069839478
    2. 'é' → logprob: -1.6175543069839478
    3. 'max' → logprob: -2.492554187774658
    4. 'dé' → logprob: -2.867554187774658
    5. 'reverse' → logprob: -3.242554187774658
    6. '```' → logprob: -3.367554187774658
    7. 'ep' → logprob: -3.742554187774658
    8. 'u' → logprob: -4.117554187774658
    9. '0' → logprob: -4.242554187774658
    10. 'éf' → logprob: -4.367554187774658

Token 2106: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -7.350386295001954e-05
    2. 't' → logprob: -10.250073432922363
    3. 'uest' → logprob: -11.625073432922363
    4. 'e' → logprob: -11.750073432922363
    5. '```' → logprob: -12.500073432922363
    6. 'et' → logprob: -13.000073432922363
    7. 'ést' → logprob: -13.250073432922363
    8. 'ests' → logprob: -13.500073432922363
    9. 'st' → logprob: -13.625073432922363
    10. 'r' → logprob: -13.875073432922363

Token 2107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7253239750862122
    2. ')
' → logprob: -0.9753239750862122
    3. '):
' → logprob: -2.7253239154815674
    4. ',' → logprob: -3.8503239154815674
    5. '):' → logprob: -3.8503239154815674
    6. '       ' → logprob: -4.3503241539001465
    7. '),' → logprob: -4.9753241539001465
    8. ').' → logprob: -6.2253241539001465
    9. '   ' → logprob: -6.4753241539001465
    10. '=' → logprob: -6.8503241539001465

Token 2108: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13368883728981018
    2. 'ships' → logprob: -2.5086889266967773
    3. '       ' → logprob: -3.3836889266967773
    4. ' ships' → logprob: -5.133688926696777
    5. ',' → logprob: -6.883688926696777
    6. '```' → logprob: -7.383688926696777
    7. ')' → logprob: -7.508688926696777
    8. '    
' → logprob: -8.258688926696777
    9. '[' → logprob: -8.383688926696777
    10. '        
' → logprob: -8.508688926696777

Token 2109: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7138417363166809
    2. '       ' → logprob: -0.9638417363166809
    3. 'ships' → logprob: -2.463841676712036
    4. ' ships' → logprob: -3.463841676712036
    5. 'positions' → logprob: -5.463841915130615
    6. 'sorted' → logprob: -6.088841915130615
    7. '```' → logprob: -6.588841915130615
    8. '        
' → logprob: -6.963841915130615
    9. ' sorted' → logprob: -7.088841915130615
    10. ' positions' → logprob: -7.213841915130615

Token 2110: '_order' (ID: 17446)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07239673286676407
    2. '=' → logprob: -3.072396755218506
    3. ' =' → logprob: -3.947396755218506
    4. '_sorted' → logprob: -6.072396755218506
    5. 'es' → logprob: -7.197396755218506
    6. '_s' → logprob: -8.447396278381348
    7. '_positions' → logprob: -8.447396278381348
    8. '_' → logprob: -8.822396278381348
    9. '_list' → logprob: -8.822396278381348
    10. 'sorted' → logprob: -8.822396278381348

Token 2111: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020544691011309624
    2. ' =' → logprob: -3.8955447673797607
    3. '   ' → logprob: -14.14554500579834
    4. '_sorted' → logprob: -14.64554500579834
    5. 'sorted' → logprob: -15.39554500579834
    6. '=
' → logprob: -15.52054500579834
    7. '=[' → logprob: -15.64554500579834
    8. '=s' → logprob: -15.64554500579834
    9. ' ' → logprob: -15.89554500579834
    10. '=[]' → logprob: -16.020544052124023

Token 2112: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0001238004770129919
    2. 'list' → logprob: -9.000123977661133
    3. ' sorted' → logprob: -15.000123977661133
    4. '[' → logprob: -18.125123977661133
    5. '(sorted' → logprob: -18.250123977661133
    6. '   ' → logprob: -18.625123977661133
    7. 'range' → logprob: -21.125123977661133
    8. '.sorted' → logprob: -21.250123977661133
    9. '[list' → logprob: -22.500123977661133
    10. 'Sorted' → logprob: -23.625123977661133

Token 2113: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0014186843764036894
    2. '([(' → logprob: -6.751418590545654
    3. '(' → logprob: -8.626419067382812
    4. '(((' → logprob: -9.876419067382812
    5. 'range' → logprob: -11.251419067382812
    6. '(
' → logprob: -13.376419067382812
    7. '((' → logprob: -13.501419067382812
    8. '(en' → logprob: -13.876419067382812
    9. '([' → logprob: -14.876419067382812
    10. '(zip' → logprob: -15.251419067382812

Token 2114: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0026946745347231627
    2. 'M' → logprob: -6.627694606781006
    3. 'len' → logprob: -7.752694606781006
    4. '(len' → logprob: -7.877694606781006
    5. '(' → logprob: -8.377695083618164
    6. '(
' → logprob: -8.752695083618164
    7. 'range' → logprob: -9.377695083618164
    8. ')' → logprob: -10.252695083618164
    9. '[M' → logprob: -11.752695083618164
    10. 'def' → logprob: -12.127695083618164

Token 2115: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.301394023466855e-05
    2. ',key' → logprob: -10.625062942504883
    3. '),' → logprob: -11.125062942504883
    4. '   ' → logprob: -11.375062942504883
    5. 'key' → logprob: -12.625062942504883
    6. ',
' → logprob: -13.000062942504883
    7. ' ,' → logprob: -13.000062942504883
    8. '(),' → logprob: -13.750062942504883
    9. 'reverse' → logprob: -14.000062942504883
    10. 's' → logprob: -15.000062942504883

Token 2116: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.735893965815194e-05
    2. ' key' → logprob: -11.000017166137695
    3. 'reverse' → logprob: -14.500017166137695
    4. '   ' → logprob: -16.250017166137695
    5. '       ' → logprob: -16.875017166137695
    6. '           ' → logprob: -18.625017166137695
    7. '(key' → logprob: -18.750017166137695
    8. '	key' → logprob: -18.875017166137695
    9. '               ' → logprob: -19.125017166137695
    10. '                   ' → logprob: -20.125017166137695

Token 2117: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -6.24179228907451e-05
    2. 'lambda' → logprob: -10.250061988830566
    3. '=' → logprob: -10.625061988830566
    4. '(lambda' → logprob: -12.875061988830566
    5. '=
' → logprob: -17.000062942504883
    6. ' =' → logprob: -17.750062942504883
    7. ' lambda' → logprob: -19.375062942504883
    8. '=(' → logprob: -20.000062942504883
    9. '=\' → logprob: -20.250062942504883
    10. '_lambda' → logprob: -20.375062942504883

Token 2118: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.014935730956494808
    2. 'ships' → logprob: -4.389935493469238
    3. ' lambda' → logprob: -6.139935493469238
    4. '=lambda' → logprob: -9.014935493469238
    5. '   ' → logprob: -9.764935493469238
    6. '(lambda' → logprob: -9.889935493469238
    7. 'ship' → logprob: -11.014935493469238
    8. ' ships' → logprob: -11.389935493469238
    9. 'boats' → logprob: -13.639935493469238
    10. 'Ships' → logprob: -13.639935493469238

Token 2119: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4793560206890106
    2. '=lambda' → logprob: -0.979356050491333
    3. 'lambda' → logprob: -5.479355812072754
    4. '=' → logprob: -6.854355812072754
    5. ' :' → logprob: -10.729355812072754
    6. 's' → logprob: -12.354355812072754
    7. ' lambda' → logprob: -12.479355812072754
    8. ',' → logprob: -13.354355812072754
    9. '(lambda' → logprob: -13.604355812072754
    10. ':
' → logprob: -13.854355812072754

Token 2120: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.27713915705680847
    2. '-' → logprob: -2.152139186859131
    3. 'lambda' → logprob: -2.402139186859131
    4. '-sh' → logprob: -3.402139186859131
    5. ' -' → logprob: -8.027138710021973
    6. '-(' → logprob: -8.402138710021973
    7. '-l' → logprob: -8.402138710021973
    8. ' lambda' → logprob: -8.527138710021973
    9. ' ships' → logprob: -8.527138710021973
    10. 'shops' → logprob: -8.902138710021973

Token 2121: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0043557025492191315
    2. 'x' → logprob: -5.6293559074401855
    3. '[' → logprob: -7.6293559074401855
    4. 's' → logprob: -9.504355430603027
    5. '(x' → logprob: -10.129355430603027
    6. 'lambda' → logprob: -10.629355430603027
    7. '[
' → logprob: -11.379355430603027
    8. ' x' → logprob: -11.379355430603027
    9. '   ' → logprob: -11.879355430603027
    10. ':' → logprob: -11.879355430603027

Token 2122: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5068151950836182
    2. '.pos' → logprob: -1.5068151950836182
    3. ').' → logprob: -1.7568151950836182
    4. ')' → logprob: -7.381814956665039
    5. '.' → logprob: -7.631814956665039
    6. ':' → logprob: -8.006814956665039
    7. ' .' → logprob: -8.256814956665039
    8. '.s' → logprob: -8.381814956665039
    9. '}.' → logprob: -9.006814956665039
    10. ']' → logprob: -9.131814956665039

Token 2123: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: 0.0
    2. ' pos' → logprob: -18.375
    3. '.pos' → logprob: -19.375
    4. 'position' → logprob: -20.5
    5. '	pos' → logprob: -21.25
    6. '_pos' → logprob: -22.125
    7. '-pos' → logprob: -23.0
    8. '```' → logprob: -23.375
    9. '(pos' → logprob: -24.375
    10. ',pos' → logprob: -24.75

Token 2124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.158350151963532e-05
    2. 'reverse' → logprob: -10.000061988830566
    3. ' ,' → logprob: -12.125061988830566
    4. '[::-' → logprob: -12.375061988830566
    5. ',
' → logprob: -12.875061988830566
    6. '),' → logprob: -13.500061988830566
    7. '_reverse' → logprob: -14.375061988830566
    8. '   ' → logprob: -15.000061988830566
    9. ' reverse' → logprob: -15.250061988830566
    10. '(reverse' → logprob: -15.250061988830566

Token 2125: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -2.081584716506768e-05
    2. 'lambda' → logprob: -11.500020980834961
    3. ' reverse' → logprob: -11.500020980834961
    4. '   ' → logprob: -14.750020980834961
    5. '       ' → logprob: -17.25002098083496
    6. 'Reverse' → logprob: -17.75002098083496
    7. '           ' → logprob: -18.12502098083496
    8. '_reverse' → logprob: -18.37502098083496
    9. '(reverse' → logprob: -19.37502098083496
    10. '.reverse' → logprob: -19.50002098083496

Token 2126: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0005709059187211096
    2. '=' → logprob: -7.500570774078369
    3. 'True' → logprob: -11.375571250915527
    4. '(True' → logprob: -12.500571250915527
    5. '=lambda' → logprob: -13.000571250915527
    6. ' =' → logprob: -15.625571250915527
    7. '   ' → logprob: -15.875571250915527
    8. '=False' → logprob: -16.87557029724121
    9. ')' → logprob: -16.87557029724121
    10. '1' → logprob: -17.37557029724121

Token 2127: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02278309315443039
    2. ')
' → logprob: -4.022783279418945
    3. '       ' → logprob: -5.397783279418945
    4. '   ' → logprob: -9.647783279418945
    5. ')

' → logprob: -11.272783279418945
    6. ')
' → logprob: -12.147783279418945
    7. '):' → logprob: -12.272783279418945
    8. '):
' → logprob: -12.647783279418945
    9. ' )' → logprob: -12.647783279418945
    10. ',' → logprob: -15.272783279418945

Token 2128: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3193805515766144
    2. '   ' → logprob: -1.819380521774292
    3. '       ' → logprob: -2.694380521774292
    4. ' for' → logprob: -3.194380521774292
    5. '```' → logprob: -6.569380760192871
    6. '<|end|>' → logprob: -7.819380760192871
    7. '	for' → logprob: -8.194380760192871
    8. '    
' → logprob: -8.569380760192871
    9. 'def' → logprob: -8.944380760192871
    10. '        
' → logprob: -9.069380760192871

Token 2129: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025447409600019455
    2. '       ' → logprob: -4.025447368621826
    3. 'prev' → logprob: -5.025447368621826
    4. 'current' → logprob: -8.775447845458984
    5. 'last' → logprob: -8.900447845458984
    6. 'i' → logprob: -9.275447845458984
    7. ' for' → logprob: -9.525447845458984
    8. 'previous' → logprob: -9.650447845458984
    9. '   ' → logprob: -9.775447845458984
    10. '```' → logprob: -10.025447845458984

Token 2130: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15587811172008514
    2. '       ' → logprob: -2.0308780670166016
    3. 'prev' → logprob: -4.780878067016602
    4. 'i' → logprob: -6.280878067016602
    5. ' for' → logprob: -7.155878067016602
    6. 'def' → logprob: -7.405878067016602
    7. '```' → logprob: -7.405878067016602
    8. '   ' → logprob: -8.405878067016602
    9. 'previous' → logprob: -8.530878067016602
    10. 'j' → logprob: -9.030878067016602

Token 2131: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09905748814344406
    2. 'j' → logprob: -2.97405743598938
    3. 'idx' → logprob: -3.59905743598938
    4. 'pos' → logprob: -5.224057674407959
    5. 'x' → logprob: -6.099057674407959
    6. 'prev' → logprob: -6.349057674407959
    7. '_prev' → logprob: -6.974057674407959
    8. '_idx' → logprob: -7.224057674407959
    9. '_i' → logprob: -7.349057674407959
    10. '_j' → logprob: -7.599057674407959

Token 2132: ' vitesse' (ID: 71752)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0793902575969696
    2. 'idx' → logprob: -3.204390287399292
    3. 'j' → logprob: -3.704390287399292
    4. 'x' → logprob: -4.579390048980713
    5. 'prev' → logprob: -8.079390525817871
    6. 'ship' → logprob: -8.704390525817871
    7. 'pos' → logprob: -9.329390525817871
    8. 'for' → logprob: -10.329390525817871
    9. ' idx' → logprob: -10.454390525817871
    10. 'index' → logprob: -10.454390525817871

Token 2133: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4865340292453766
    2. 'prev' → logprob: -1.8615339994430542
    3. '=' → logprob: -2.9865341186523438
    4. 'idx' → logprob: -3.2365341186523438
    5. 'max' → logprob: -3.3615341186523438
    6. 'i' → logprob: -3.7365341186523438
    7. ' for' → logprob: -4.486534118652344
    8. '       ' → logprob: -4.736534118652344
    9. ' =' → logprob: -4.861534118652344
    10. 'last' → logprob: -4.986534118652344

Token 2134: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039264313876628876
    2. 'prev' → logprob: -3.53926420211792
    3. 'v' → logprob: -6.16426420211792
    4. 'last' → logprob: -6.16426420211792
    5. 'max' → logprob: -6.66426420211792
    6. 'previous' → logprob: -6.91426420211792
    7. '       ' → logprob: -7.16426420211792
    8. '   ' → logprob: -7.53926420211792
    9. '#' → logprob: -7.53926420211792
    10. 'spe' → logprob: -7.91426420211792

Token 2135: ' parc' (ID: 22138)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.8509132266044617
    2. 'for' → logprob: -0.9759132266044617
    3. 'def' → logprob: -3.3509132862091064
    4. 'previous' → logprob: -3.4759132862091064
    5. 'continue' → logprob: -3.9759132862091064
    6. '#' → logprob: -3.9759132862091064
    7. 'n' → logprob: -4.350913047790527
    8. ' for' → logprob: -4.850913047790527
    9. 'len' → logprob: -4.850913047790527
    10. 'max' → logprob: -4.975913047790527

Token 2136: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.4765166640281677
    2. 'ourt' → logprob: -1.2265167236328125
    3. 'ours' → logprob: -2.4765167236328125
    4. 'oure' → logprob: -6.8515167236328125
    5. 'ou' → logprob: -7.6015167236328125
    6. '#' → logprob: -9.726516723632812
    7. '```' → logprob: -10.226516723632812
    8. 'ourse' → logprob: -11.226516723632812
    9. 'OUR' → logprob: -11.726516723632812
    10. '##' → logprob: -12.476516723632812

Token 2137: ' de' (ID: 334)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.057004414498806
    2. 'idx' → logprob: -2.932004451751709
    3. '(idx' → logprob: -6.557004451751709
    4. 're' → logprob: -8.05700397491455
    5. '(range' → logprob: -8.05700397491455
    6. ' range' → logprob: -10.55700397491455
    7. 'reverse' → logprob: -11.30700397491455
    8. '[idx' → logprob: -11.93200397491455
    9. 'for' → logprob: -12.18200397491455
    10. ' idx' → logprob: -12.43200397491455

Token 2138: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24469071626663208
    2. 'idx' → logprob: -1.9946906566619873
    3. 'range' → logprob: -2.6196906566619873
    4. 'len' → logprob: -5.494690895080566
    5. '1' → logprob: -5.744690895080566
    6. 'M' → logprob: -7.619690895080566
    7. ' idx' → logprob: -9.744690895080566
    8. '[idx' → logprob: -9.994690895080566
    9. 'i' → logprob: -10.244690895080566
    10. '(idx' → logprob: -10.369690895080566

Token 2139: ''avant' (ID: 161711)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.040715157985687256
    2. 'range' → logprob: -3.665715217590332
    3. 'idx' → logprob: -4.415715217590332
    4. 'en' → logprob: -8.165715217590332
    5. '1' → logprob: -8.290715217590332
    6. 'ange' → logprob: -8.415715217590332
    7. 'i' → logprob: -8.915715217590332
    8. 'eft' → logprob: -8.915715217590332
    9. '```' → logprob: -9.540715217590332
    10. '-' → logprob: -9.540715217590332

Token 2140: ' à' (ID: 1221)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.66367107629776
    2. 'i' → logprob: -1.1636710166931152
    3. 'à' → logprob: -2.7886710166931152
    4. 'en' → logprob: -3.5386710166931152
    5. 'for' → logprob: -3.7886710166931152
    6. '0' → logprob: -4.163671016693115
    7. 'range' → logprob: -4.788671016693115
    8. '(idx' → logprob: -5.288671016693115
    9. 'to' → logprob: -5.538671016693115
    10. 'j' → logprob: -5.538671016693115

Token 2141: ' l' (ID: 305)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.09396151453256607
    2. 'l' → logprob: -2.468961477279663
    3. 'la' → logprob: -5.718961715698242
    4. 'ar' → logprob: -6.468961715698242
    5. 'lar' → logprob: -9.468961715698242
    6. '```' → logprob: -11.218961715698242
    7. 'M' → logprob: -11.343961715698242
    8. 'lap' → logprob: -11.468961715698242
    9. '(len' → logprob: -11.718961715698242
    10. '#' → logprob: -11.718961715698242

Token 2142: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.003732141572982073
    2. ''ar' → logprob: -5.878732204437256
    3. 'arri' → logprob: -7.253732204437256
    4. 'idx' → logprob: -9.378731727600098
    5. '```' → logprob: -10.128731727600098
    6. 'arr' → logprob: -11.503731727600098
    7. 'index' → logprob: -11.628731727600098
    8. 'indice' → logprob: -11.753731727600098
    9. 'arre' → logprob: -11.878731727600098
    10. '’ar' → logprob: -11.878731727600098

Token 2143: 'rière' (ID: 34908)
  Prédit: 'rière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rière' → logprob: -0.0016692342469468713
    2. 'riere' → logprob: -7.501669406890869
    3. 'ière' → logprob: -7.626669406890869
    4. 'ri' → logprob: -7.751669406890869
    5. 'r' → logprob: -8.626668930053711
    6. 'rier' → logprob: -12.001668930053711
    7. 'rive' → logprob: -13.126668930053711
    8. '[' → logprob: -13.251668930053711
    9. 'rée' → logprob: -13.751668930053711
    10. 'd' → logprob: -13.876668930053711

Token 2144: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2891339361667633
    2. 'for' → logprob: -1.914133906364441
    3. ' for' → logprob: -2.4141340255737305
    4. ',' → logprob: -5.7891340255737305
    5. 'prev' → logprob: -5.7891340255737305
    6. '<|end|>' → logprob: -6.4141340255737305
    7. 'i' → logprob: -6.6641340255737305
    8. ' i' → logprob: -6.6641340255737305
    9. 'j' → logprob: -7.2891340255737305
    10. '```' → logprob: -7.5391340255737305

Token 2145: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13613063097000122
    2. 'prev' → logprob: -2.7611305713653564
    3. ' for' → logprob: -3.0111305713653564
    4. '       ' → logprob: -4.5111308097839355
    5. 'j' → logprob: -6.3861308097839355
    6. '```' → logprob: -7.8861308097839355
    7. 'previous' → logprob: -8.261130332946777
    8. 'i' → logprob: -8.386130332946777
    9. 'current' → logprob: -8.636130332946777
    10. 'last' → logprob: -8.636130332946777

Token 2146: ' fixe' (ID: 111690)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.7098818421363831
    2. 'for' → logprob: -1.3348817825317383
    3. '   ' → logprob: -2.0848817825317383
    4. '       ' → logprob: -3.2098817825317383
    5. ' for' → logprob: -3.7098817825317383
    6. 'def' → logprob: -4.584881782531738
    7. 'contin' → logprob: -4.709881782531738
    8. 'continue' → logprob: -5.209881782531738
    9. 'previous' → logprob: -5.459881782531738
    10. '=' → logprob: -5.459881782531738

Token 2147: ' vite' (ID: 38682)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.973376989364624
    2. 'v' → logprob: -2.098376989364624
    3. 'ships' → logprob: -2.223376989364624
    4. '0' → logprob: -2.473376989364624
    5. 'les' → logprob: -2.473376989364624
    6. 'le' → logprob: -2.973376989364624
    7. 'idx' → logprob: -3.348376989364624
    8. 'l' → logprob: -3.473376989364624
    9. '```' → logprob: -4.098377227783203
    10. '   ' → logprob: -4.223377227783203

Token 2148: 'esses' (ID: 38380)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34513717889785767
    2. 'loc' → logprob: -1.345137119293213
    3. 'city' → logprob: -4.845137119293213
    4. 'lo' → logprob: -5.595137119293213
    5. 'oc' → logprob: -5.720137119293213
    6. '=' → logprob: -5.720137119293213
    7. 'x' → logprob: -6.220137119293213
    8. 'l' → logprob: -6.345137119293213
    9. 'idx' → logprob: -6.720137119293213
    10. '[idx' → logprob: -6.720137119293213

Token 2149: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4172873795032501
    2. '       ' → logprob: -1.6672873497009277
    3. '[i' → logprob: -3.1672873497009277
    4. ' for' → logprob: -3.2922873497009277
    5. '[' → logprob: -4.042287349700928
    6. '=' → logprob: -4.292287349700928
    7. '[j' → logprob: -4.667287349700928
    8. 'prev' → logprob: -5.167287349700928
    9. ' =' → logprob: -5.542287349700928
    10. '```' → logprob: -5.792287349700928

Token 2150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44395846128463745
    2. 'for' → logprob: -1.3189585208892822
    3. ' for' → logprob: -2.9439585208892822
    4. '```' → logprob: -4.318958282470703
    5. '<|end|>' → logprob: -4.443958282470703
    6. '	for' → logprob: -5.318958282470703
    7. '   ' → logprob: -6.068958282470703
    8. 'ind' → logprob: -6.818958282470703
    9. '[' → logprob: -7.193958282470703
    10. '        
' → logprob: -7.318958282470703

Token 2151: ' speeds' (ID: 40472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6470082998275757
    2. 'prev' → logprob: -0.8970082998275757
    3. '       ' → logprob: -3.5220084190368652
    4. 'last' → logprob: -3.7720084190368652
    5. 'i' → logprob: -5.522008419036865
    6. 'current' → logprob: -5.647008419036865
    7. '   ' → logprob: -5.897008419036865
    8. 'j' → logprob: -6.147008419036865
    9. 'previous' → logprob: -6.272008419036865
    10. 'v' → logprob: -7.647008419036865

Token 2152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43003708124160767
    2. '=' → logprob: -1.055037021636963
    3. '_' → logprob: -7.305037021636963
    4. '   ' → logprob: -7.680037021636963
    5. '[' → logprob: -9.305037498474121
    6. ' ' → logprob: -10.430037498474121
    7. '=[]' → logprob: -11.055037498474121
    8. '=[' → logprob: -11.555037498474121
    9. '       ' → logprob: -11.805037498474121
    10. 's' → logprob: -11.930037498474121

Token 2153: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0728706493973732
    2. '[s' → logprob: -2.8228707313537598
    3. '[M' → logprob: -4.57287073135376
    4. '[m' → logprob: -9.572870254516602
    5. '[i' → logprob: -9.572870254516602
    6. '{' → logprob: -9.697870254516602
    7. '[n' → logprob: -10.072870254516602
    8. '[max' → logprob: -10.072870254516602
    9. '[len' → logprob: -10.447870254516602
    10. '[num' → logprob: -11.072870254516602

Token 2154: '0' (ID: 15)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.002568760421127081
    2. '0' → logprob: -6.50256872177124
    3. 'ship' → logprob: -7.00256872177124
    4. 's' → logprob: -9.002569198608398
    5. ' ships' → logprob: -10.752569198608398
    6. 'sh' → logprob: -12.127569198608398
    7. 'boats' → logprob: -13.627569198608398
    8. 'float' → logprob: -13.752569198608398
    9. 'None' → logprob: -14.002569198608398
    10. 'shops' → logprob: -14.127569198608398

Token 2155: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.247792050242424
    2. ']' → logprob: -1.6227920055389404
    3. ']*' → logprob: -4.4977922439575195
    4. '.]' → logprob: -5.4977922439575195
    5. '0' → logprob: -5.8727922439575195
    6. 'for' → logprob: -6.6227922439575195
    7. '=' → logprob: -7.2477922439575195
    8. '()]' → logprob: -7.4977922439575195
    9. '   ' → logprob: -7.9977922439575195
    10. ' for' → logprob: -8.74779224395752

Token 2156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024144190829247236
    2. '.' → logprob: -6.502414226531982
    3. ']' → logprob: -7.502414226531982
    4. 'float' → logprob: -8.75241470336914
    5. 'ships' → logprob: -9.25241470336914
    6. '```' → logprob: -10.50241470336914
    7. 'for' → logprob: -10.62741470336914
    8. ')' → logprob: -11.37741470336914
    9. ']*' → logprob: -11.87741470336914
    10. 'ship' → logprob: -12.00241470336914

Token 2157: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024180082604289055
    2. ']*' → logprob: -4.024179935455322
    3. ' for' → logprob: -5.274179935455322
    4. 'for' → logprob: -7.524179935455322
    5. '.' → logprob: -8.52418041229248
    6. ' ]' → logprob: -8.89918041229248
    7. ']*(' → logprob: -12.02418041229248
    8. '   ' → logprob: -12.77418041229248
    9. ']+' → logprob: -13.27418041229248
    10. ',' → logprob: -14.14918041229248

Token 2158: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -4.320199877838604e-07
    2. ' M' → logprob: -14.875
    3. '(M' → logprob: -17.0
    4. 'len' → logprob: -18.5
    5. '   ' → logprob: -19.375
    6. '	M' → logprob: -19.625
    7. 'm' → logprob: -20.0
    8. ' ' → logprob: -21.25
    9. 'М' → logprob: -21.5
    10. 'Ｍ' → logprob: -21.75

Token 2159: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08137547224760056
    2. 'for' → logprob: -3.3313753604888916
    3. ' 
' → logprob: -3.9563753604888916
    4. ' for' → logprob: -4.706375598907471
    5. '    
' → logprob: -4.956375598907471
    6. '        
' → logprob: -6.456375598907471
    7. '   ' → logprob: -6.956375598907471
    8. '       ' → logprob: -7.206375598907471
    9. '
' → logprob: -7.206375598907471
    10. '<|end|>' → logprob: -7.206375598907471

Token 2160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8504555821418762
    2. 'for' → logprob: -0.8504555821418762
    3. ' for' → logprob: -2.3504555225372314
    4. '<|end|>' → logprob: -3.6004555225372314
    5. '   ' → logprob: -4.8504557609558105
    6. '        
' → logprob: -5.6004557609558105
    7. '```' → logprob: -5.7254557609558105
    8. 'i' → logprob: -6.2254557609558105
    9. '	for' → logprob: -6.6004557609558105
    10. 'current' → logprob: -7.1004557609558105

Token 2161: ' #' (ID: 1069)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.46681082248687744
    2. 'for' → logprob: -1.0918108224868774
    3. '#' (adapté à ' #') → logprob: -3.591810703277588
    4. 'max' → logprob: -5.716810703277588
    5. 'idx' → logprob: -6.341810703277588
    6. '   ' → logprob: -6.716810703277588
    7. 'prev' → logprob: -7.216810703277588
    8. 'current' → logprob: -7.591810703277588
    9. '```' → logprob: -7.591810703277588
    10. 'v' → logprob: -7.591810703277588

Token 2162: ' Premier' (ID: 27686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9873731136322021
    2. 'spe' → logprob: -1.2373731136322021
    3. '#' → logprob: -2.112373113632202
    4. 'idx' → logprob: -2.487373113632202
    5. '       ' → logprob: -2.862373113632202
    6. 'j' → logprob: -3.862373113632202
    7. '   ' → logprob: -3.987373113632202
    8. 'i' → logprob: -4.362373352050781
    9. 'prev' → logprob: -4.862373352050781
    10. '```' → logprob: -5.112373352050781

Token 2163: ' bateau' (ID: 123794)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6162070035934448
    2. 'i' → logprob: -1.3662070035934448
    3. '=' → logprob: -2.2412071228027344
    4. ' =' → logprob: -3.1162071228027344
    5. 'for' → logprob: -3.6162071228027344
    6. 'ship' → logprob: -4.366207122802734
    7. '_idx' → logprob: -5.991207122802734
    8. ' idx' → logprob: -6.116207122802734
    9. ' i' → logprob: -6.366207122802734
    10. 's' → logprob: -6.366207122802734

Token 2164: ' devant' (ID: 37522)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.3446084260940552
    2. 'idx' → logprob: -1.7196084260940552
    3. 'for' → logprob: -3.9696083068847656
    4. 'i' → logprob: -4.094608306884766
    5. '[s' → logprob: -4.219608306884766
    6. '=' → logprob: -4.469608306884766
    7. ' speeds' → logprob: -4.969608306884766
    8. '       ' → logprob: -5.094608306884766
    9. ' =' → logprob: -5.219608306884766
    10. 'curr' → logprob: -5.344608306884766

Token 2165: ' à' (ID: 1221)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.2051846832036972
    2. 'for' → logprob: -2.3301846981048584
    3. 'idx' → logprob: -3.2051846981048584
    4. 'i' → logprob: -4.455184459686279
    5. ' speeds' → logprob: -4.705184459686279
    6. 'if' → logprob: -5.205184459686279
    7. ' for' → logprob: -5.205184459686279
    8. '=' → logprob: -5.330184459686279
    9. '0' → logprob: -5.580184459686279
    10. ' =' → logprob: -6.205184459686279

Token 2166: ' sa' (ID: 880)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.05887771025300026
    2. '0' → logprob: -3.43387770652771
    3. 'max' → logprob: -4.183877944946289
    4. 'M' → logprob: -5.433877944946289
    5. 'ships' → logprob: -6.308877944946289
    6. 'pos' → logprob: -7.433877944946289
    7. 'float' → logprob: -7.558877944946289
    8. 'len' → logprob: -8.183877944946289
    9. '100' → logprob: -8.433877944946289
    10. '1' → logprob: -8.558877944946289

Token 2167: ' vitesse' (ID: 71752)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0227036215364933
    2. 'max' → logprob: -4.397703647613525
    3. 'v' → logprob: -4.647703647613525
    4. '```' → logprob: -8.772703170776367
    5. 'pos' → logprob: -9.272703170776367
    6. '[V' → logprob: -10.272703170776367
    7. ' vitesse' → logprob: -10.522703170776367
    8. 'speed' → logprob: -10.647703170776367
    9. 'X' → logprob: -10.897703170776367
    10. 'maximum' → logprob: -11.022703170776367

Token 2168: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24103501439094543
    2. 'ships' → logprob: -1.991034984588623
    3. 's' → logprob: -3.866034984588623
    4. '[' → logprob: -3.991034984588623
    5. 'max' → logprob: -4.366034984588623
    6. 'idx' → logprob: -4.616034984588623
    7. ' =' → logprob: -5.616034984588623
    8. 'ship' → logprob: -6.491034984588623
    9. '[max' → logprob: -6.491034984588623
    10. '[idx' → logprob: -6.616034984588623

Token 2169: ' ou' (ID: 2031)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.051550086587667465
    2. 'for' → logprob: -3.3015501499176025
    3. ' speeds' → logprob: -5.176549911499023
    4. 'if' → logprob: -5.801549911499023
    5. ' for' → logprob: -7.051549911499023
    6. '
' → logprob: -7.176549911499023
    7. '       ' → logprob: -7.551549911499023
    8. 'i' → logprob: -7.551549911499023
    9. '[i' → logprob: -8.301549911499023
    10. 'speed' → logprob: -8.426549911499023

Token 2170: ' ' (ID: 220)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.46757376194000244
    2. '(' → logprob: -1.4675737619400024
    3. '(s' → logprob: -2.592573642730713
    4. '(g' → logprob: -3.842573642730713
    5. 'g' → logprob: -3.967573642730713
    6. '0' → logprob: -4.217573642730713
    7. '(ship' → logprob: -5.467573642730713
    8. '(E' → logprob: -6.592573642730713
    9. 'gate' → logprob: -6.967573642730713
    10. '(sh' → logprob: -6.967573642730713

Token 2171: '0' (ID: 15)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.021059121936559677
    2. '(' → logprob: -4.146059036254883
    3. 'ship' → logprob: -5.771059036254883
    4. '(ship' → logprob: -7.396059036254883
    5. '(s' → logprob: -7.771059036254883
    6. '0' → logprob: -7.896059036254883
    7. 'g' → logprob: -8.896059036254883
    8. '(
' → logprob: -9.396059036254883
    9. ' ships' → logprob: -9.396059036254883
    10. '(g' → logprob: -9.896059036254883

Token 2172: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8869349360466003
    2. '=' → logprob: -1.5119349956512451
    3. ' if' → logprob: -1.7619349956512451
    4. ' =' → logprob: -2.386934995651245
    5. '
' → logprob: -2.886934995651245
    6. 's' → logprob: -4.761934757232666
    7. 'ships' → logprob: -4.886934757232666
    8. 'idx' → logprob: -5.136934757232666
    9. 'for' → logprob: -5.261934757232666
    10. '       ' → logprob: -5.636934757232666

Token 2173: '’il' (ID: 14828)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.06371138244867325
    2. 'sas' → logprob: -3.563711404800415
    3. '(s' → logprob: -4.563711166381836
    4. 'ship' → logprob: -5.438711166381836
    5. '[' → logprob: -5.938711166381836
    6. 'hip' → logprob: -6.188711166381836
    7. '[s' → logprob: -6.313711166381836
    8. '(ship' → logprob: -6.313711166381836
    9. 'not' → logprob: -6.813711166381836
    10. 'ships' → logprob: -6.938711166381836

Token 2174: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.3362216055393219
    2. ' est' → logprob: -1.8362215757369995
    3. 'ship' → logprob: -3.461221694946289
    4. 'sas' → logprob: -3.586221694946289
    5. 's' → logprob: -3.961221694946289
    6. 'dans' → logprob: -4.336221694946289
    7. ' ship' → logprob: -5.086221694946289
    8. 'in' → logprob: -5.211221694946289
    9. 'is' → logprob: -6.336221694946289
    10. ' is' → logprob: -6.336221694946289

Token 2175: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.01683562807738781
    2. 'in' → logprob: -4.266835689544678
    3. ' dans' → logprob: -6.641835689544678
    4. 'inside' → logprob: -7.766835689544678
    5. 'None' → logprob: -8.01683521270752
    6. 's' → logprob: -8.64183521270752
    7. ' in' → logprob: -9.51683521270752
    8. 'False' → logprob: -9.64183521270752
    9. 'Dans' → logprob: -10.01683521270752
    10. '_in' → logprob: -10.14183521270752

Token 2176: ' sas' (ID: 51515)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.010129662230610847
    2. 'None' → logprob: -5.510129451751709
    3. '0' → logprob: -6.260129451751709
    4. '```' → logprob: -7.010129451751709
    5. '   ' → logprob: -7.135129451751709
    6. 'True' → logprob: -8.260129928588867
    7. ' sas' → logprob: -8.385129928588867
    8. '1' → logprob: -8.885129928588867
    9. '[s' → logprob: -9.010129928588867
    10. 'sar' → logprob: -9.135129928588867

Token 2177: ' ou' (ID: 2031)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37311631441116333
    2. '       ' → logprob: -2.2481162548065186
    3. ' if' → logprob: -2.2481162548065186
    4. '
' → logprob: -3.1231162548065186
    5. '=' → logprob: -4.123116493225098
    6. ' =' → logprob: -4.373116493225098
    7. 'for' → logprob: -4.748116493225098
    8. 's' → logprob: -5.123116493225098
    9. '[' → logprob: -6.248116493225098
    10. '   ' → logprob: -6.498116493225098

Token 2178: ' fini' (ID: 63561)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.417086660861969
    2. 'sas' → logprob: -1.5420866012573242
    3. '(ship' → logprob: -2.917086601257324
    4. 'ship' → logprob: -3.417086601257324
    5. 'ships' → logprob: -3.792086601257324
    6. 'any' → logprob: -5.292086601257324
    7. '(any' → logprob: -6.167086601257324
    8. '(' → logprob: -6.292086601257324
    9. 'not' → logprob: -6.542086601257324
    10. '(not' → logprob: -6.667086601257324

Token 2179: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3696795105934143
    2. '
' → logprob: -2.2446794509887695
    3. '       ' → logprob: -2.4946794509887695
    4. ' if' → logprob: -2.7446794509887695
    5. 'ships' → logprob: -4.2446794509887695
    6. 'for' → logprob: -4.2446794509887695
    7. '```' → logprob: -4.9946794509887695
    8. 'idx' → logprob: -5.3696794509887695
    9. '   ' → logprob: -5.4946794509887695
    10. 's' → logprob: -5.6196794509887695

Token 2180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00640922412276268
    2. '
' → logprob: -5.756409168243408
    3. 'for' → logprob: -7.006409168243408
    4. '        
' → logprob: -7.131409168243408
    5. '<|end|>' → logprob: -7.756409168243408
    6. '```' → logprob: -8.131409645080566
    7. ' for' → logprob: -8.256409645080566
    8. '   ' → logprob: -8.881409645080566
    9. 'if' → logprob: -9.381409645080566
    10. '  
' → logprob: -10.381409645080566

Token 2181: ' front' (ID: 5567)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24101319909095764
    2. 'first' → logprob: -2.116013288497925
    3. 'for' → logprob: -2.491013288497925
    4. 'front' (adapté à ' front') → logprob: -5.616013050079346
    5. 'i' → logprob: -5.741013050079346
    6. '       ' → logprob: -6.241013050079346
    7. 's' → logprob: -6.491013050079346
    8. 'f' → logprob: -8.366013526916504
    9. 'ships' → logprob: -9.616013526916504
    10. '   ' → logprob: -9.616013526916504

Token 2182: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.752110481262207
    2. '_ship' → logprob: -1.377110481262207
    3. '_idx' → logprob: -2.377110481262207
    4. 'ship' → logprob: -2.627110481262207
    5. '=' → logprob: -2.752110481262207
    6. '_i' → logprob: -3.377110481262207
    7. 'i' → logprob: -5.377110481262207
    8. 'idx' → logprob: -5.377110481262207
    9. '_index' → logprob: -6.377110481262207
    10. '_s' → logprob: -7.752110481262207

Token 2183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06997355818748474
    2. ' =' → logprob: -2.6949734687805176
    3. '   ' → logprob: -11.319973945617676
    4. 'idx' → logprob: -12.069973945617676
    5. '=s' → logprob: -12.194973945617676
    6. '_idx' → logprob: -13.194973945617676
    7. 'd' → logprob: -13.444973945617676
    8. 's' → logprob: -13.569973945617676
    9. '=i' → logprob: -13.569973945617676
    10. ' ' → logprob: -13.944973945617676

Token 2184: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.14783938229084015
    2. 'None' → logprob: -2.647839307785034
    3. '0' → logprob: -2.772839307785034
    4. '-' → logprob: -5.647839546203613
    5. 'float' → logprob: -8.522839546203613
    6. 'next' → logprob: -8.897839546203613
    7. ' idx' → logprob: -9.522839546203613
    8. ' None' → logprob: -10.397839546203613
    9. '   ' → logprob: -10.772839546203613
    10. 'max' → logprob: -10.897839546203613

Token 2185: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.001710997661575675
    2. '=' → logprob: -7.001710891723633
    3. '0' → logprob: -7.501710891723633
    4. 'order' → logprob: -8.876710891723633
    5. ' =' → logprob: -10.001710891723633
    6. '[' → logprob: -11.251710891723633
    7. '_' → logprob: -11.751710891723633
    8. '   ' → logprob: -12.376710891723633
    9. 's' → logprob: -12.626710891723633
    10. 'ordre' → logprob: -12.876710891723633

Token 2186: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06573675572872162
    2. '=' → logprob: -2.940736770629883
    3. ' =' → logprob: -4.940736770629883
    4. '0' → logprob: -5.815736770629883
    5. '       ' → logprob: -8.190736770629883
    6. 's' → logprob: -9.190736770629883
    7. '][' → logprob: -9.815736770629883
    8. ']' → logprob: -10.065736770629883
    9. '   ' → logprob: -10.315736770629883
    10. '
' → logprob: -10.440736770629883

Token 2187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.750004768371582
    3. '[' → logprob: -13.750004768371582
    4. '   ' → logprob: -15.500004768371582
    5. '#' → logprob: -16.437503814697266
    6. '1' → logprob: -16.625003814697266
    7. '```' → logprob: -16.812503814697266
    8. '=' → logprob: -16.937503814697266
    9. '
' → logprob: -17.812503814697266
    10. ']' → logprob: -18.125003814697266

Token 2188: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.10063998401165009
    2. ']' → logprob: -2.350640058517456
    3. ']

' → logprob: -8.600640296936035
    4. ']
' → logprob: -9.100640296936035
    5. '       ' → logprob: -9.600640296936035
    6. '   ' → logprob: -10.975640296936035
    7. ' ]
' → logprob: -10.975640296936035
    8. ']=' → logprob: -12.225640296936035
    9. ')
' → logprob: -12.350640296936035
    10. ']:
' → logprob: -12.725640296936035

Token 2189: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3413471579551697
    2. '       ' → logprob: -1.7163472175598145
    3. '
' → logprob: -2.7163472175598145
    4. 'spe' → logprob: -4.0913472175598145
    5. ' if' → logprob: -4.5913472175598145
    6. 'ships' → logprob: -5.2163472175598145
    7. '   ' → logprob: -5.5913472175598145
    8. '        
' → logprob: -6.0913472175598145
    9. 's' → logprob: -6.5913472175598145
    10. ')
' → logprob: -7.2163472175598145

Token 2190: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1440589874982834
    2. 'spe' → logprob: -2.0190589427948
    3. 'ships' → logprob: -7.019059181213379
    4. '       ' → logprob: -8.019059181213379
    5. 'speed' → logprob: -9.769059181213379
    6. 'ship' → logprob: -10.769059181213379
    7. '   ' → logprob: -11.144059181213379
    8. 'front' → logprob: -11.144059181213379
    9. 's' → logprob: -11.269059181213379
    10. 'for' → logprob: -11.519059181213379

Token 2191: ' ships' (ID: 33610)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.189184308052063
    2. 'ships' → logprob: -1.939184308052063
    3. 'sas' → logprob: -3.6891841888427734
    4. 'not' → logprob: -6.439184188842773
    5. '(ship' → logprob: -7.064184188842773
    6. ' ship' → logprob: -8.314184188842773
    7. '(s' → logprob: -8.939184188842773
    8. 's' → logprob: -9.189184188842773
    9. ' ships' → logprob: -9.314184188842773
    10. '(' → logprob: -9.314184188842773

Token 2192: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00027206414961256087
    2. '[in' → logprob: -9.000271797180176
    3. '_in' → logprob: -9.125271797180176
    4. 'in' → logprob: -10.875271797180176
    5. 'front' → logprob: -11.875271797180176
    6. '[first' → logprob: -12.375271797180176
    7. '(front' → logprob: -13.000271797180176
    8. '_front' → logprob: -14.000271797180176
    9. '[
' → logprob: -14.125271797180176
    10. '[i' → logprob: -14.250271797180176

Token 2193: 'front' (ID: 10313)
  Prédit: 'front'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -9.088346359931165e-07
    2. ' front' → logprob: -14.000000953674316
    3. '(front' → logprob: -17.625
    4. '_front' → logprob: -18.375
    5. '.front' → logprob: -19.375
    6. 'frontend' → logprob: -21.375
    7. '/front' → logprob: -21.875
    8. '-front' → logprob: -22.75
    9. ' фрон' → logprob: -23.25
    10. '
' → logprob: -23.25

Token 2194: '_i' (ID: 10853)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.3750474154949188
    2. '_i' → logprob: -1.2500474452972412
    3. 'i' → logprob: -4.000047206878662
    4. '(front' → logprob: -5.375047206878662
    5. ' front' → logprob: -7.125047206878662
    6. 'order' → logprob: -8.12504768371582
    7. '.front' → logprob: -8.12504768371582
    8. '[' → logprob: -8.12504768371582
    9. '   ' → logprob: -8.50004768371582
    10. '][' → logprob: -8.87504768371582

Token 2195: '].' (ID: 1651)
  Prédit: '.done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.done' → logprob: -7.505351095460355e-05
    2. '].' → logprob: -11.000075340270996
    3. '.level' → logprob: -11.250075340270996
    4. '.speed' → logprob: -11.875075340270996
    5. ').' → logprob: -12.000075340270996
    6. 'done' → logprob: -12.125075340270996
    7. '.s' → logprob: -12.250075340270996
    8. '.finished' → logprob: -12.250075340270996
    9. '.' → logprob: -12.375075340270996
    10. '.completed' → logprob: -13.125075340270996

Token 2196: 'done' (ID: 21715)
  Prédit: 'done'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' → logprob: -7.896309739408025e-07
    2. ' done' → logprob: -14.125000953674316
    3. 'speed' → logprob: -18.0
    4. '.done' → logprob: -18.0
    5. 'wait' → logprob: -18.125
    6. '	done' → logprob: -18.5
    7. 'Done' → logprob: -19.375
    8. 'waiting' → logprob: -19.375
    9. '(done' → logprob: -19.5
    10. 'pos' → logprob: -19.625

Token 2197: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.35676541924476624
    2. ' or' → logprob: -1.3567653894424438
    3. ':' → logprob: -3.9817655086517334
    4. 'or' → logprob: -4.481765270233154
    5. ' ==' → logprob: -4.981765270233154
    6. ':
' → logprob: -5.231765270233154
    7. '       ' → logprob: -8.856765747070312
    8. '=' → logprob: -9.731765747070312
    9. '   ' → logprob: -10.106765747070312
    10. '	or' → logprob: -10.356765747070312

Token 2198: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10734492540359497
    2. ':
' → logprob: -2.35734486579895
    3. ' or' → logprob: -5.482345104217529
    4. '       ' → logprob: -6.232345104217529
    5. '=' → logprob: -8.607344627380371
    6. ':' → logprob: -8.732344627380371
    7. ' speeds' → logprob: -8.982344627380371
    8. '):
' → logprob: -9.107344627380371
    9. '   ' → logprob: -9.607344627380371
    10. '
' → logprob: -9.732344627380371

Token 2199: ' speeds' (ID: 40472)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.03385869041085243
    2. 'for' → logprob: -4.658858776092529
    3. 'front' → logprob: -5.158858776092529
    4. '0' → logprob: -5.283858776092529
    5. ' speeds' → logprob: -5.283858776092529
    6. 'speed' → logprob: -6.283858776092529
    7. 'pass' → logprob: -6.408858776092529
    8. '   ' → logprob: -6.658858776092529
    9. 'return' → logprob: -7.033858776092529
    10. '```' → logprob: -7.408858776092529

Token 2200: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22762054204940796
    2. '=' → logprob: -1.6026206016540527
    3. ' =' → logprob: -6.477620601654053
    4. '=[' → logprob: -7.477620601654053
    5. '[:]' → logprob: -9.477620124816895
    6. '=[]' → logprob: -12.352620124816895
    7. '0' → logprob: -12.977620124816895
    8. '```' → logprob: -13.102620124816895
    9. ' =[' → logprob: -13.102620124816895
    10. '[...]' → logprob: -13.352620124816895

Token 2201: 'front' (ID: 10313)
  Prédit: 'front'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.07399878650903702
    2. '0' → logprob: -2.6989986896514893
    3. 'M' → logprob: -6.448998928070068
    4. '[' → logprob: -7.198998928070068
    5. '(front' → logprob: -7.823998928070068
    6. ' front' → logprob: -8.44899845123291
    7. ']' → logprob: -8.57399845123291
    8. 'idx' → logprob: -8.82399845123291
    9. '[M' → logprob: -8.82399845123291
    10. '   ' → logprob: -9.32399845123291

Token 2202: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -13.000005722045898
    3. 'i' → logprob: -13.375005722045898
    4. 'I' → logprob: -14.000005722045898
    5. '[i' → logprob: -15.375005722045898
    6. '(front' → logprob: -15.375005722045898
    7. '(' → logprob: -15.625005722045898
    8. 'front' → logprob: -16.2500057220459
    9. ']' → logprob: -16.5000057220459
    10. '=' → logprob: -16.8750057220459

Token 2203: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0076198759488761425
    2. ' =' → logprob: -4.882619857788086
    3. ']=' → logprob: -11.507619857788086
    4. ']' → logprob: -13.007619857788086
    5. '=
' → logprob: -14.132619857788086
    6. '[' → logprob: -14.632619857788086
    7. '.=' → logprob: -15.632619857788086
    8. ')' → logprob: -16.882619857788086
    9. ')=' → logprob: -17.007619857788086
    10. '   ' → logprob: -17.257619857788086

Token 2204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.2524021157296374e-05
    2. ' =' → logprob: -9.875052452087402
    3. '[' → logprob: -14.750052452087402
    4. '.=' → logprob: -15.000052452087402
    5. ']=' → logprob: -15.625052452087402
    6. '0' → logprob: -17.12505340576172
    7. '.' → logprob: -17.25005340576172
    8. '   ' → logprob: -17.87505340576172
    9. '=
' → logprob: -18.12505340576172
    10. ']' → logprob: -18.50005340576172

Token 2205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007672291249036789
    2. 'ships' → logprob: -4.882672309875488
    3. 'ship' → logprob: -10.132672309875488
    4. ' ships' → logprob: -11.882672309875488
    5. ' ' → logprob: -12.007672309875488
    6. 'float' → logprob: -12.757672309875488
    7. '   ' → logprob: -13.382672309875488
    8. '```' → logprob: -13.507672309875488
    9. 'sh' → logprob: -13.820172309875488
    10. 'Ships' → logprob: -14.570172309875488

Token 2206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015298592625185847
    2. 'ships' → logprob: -6.501529693603516
    3. 'float' → logprob: -11.376529693603516
    4. 'ship' → logprob: -11.626529693603516
    5. ' ships' → logprob: -13.376529693603516
    6. ' ' → logprob: -13.376529693603516
    7. '   ' → logprob: -14.939029693603516
    8. 'math' → logprob: -15.001529693603516
    9. 'sh' → logprob: -15.064029693603516
    10. '```' → logprob: -15.126529693603516

Token 2207: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.896309739408025e-07
    2. '<|end|>' → logprob: -14.375000953674316
    3. '0' → logprob: -16.125
    4. '.
' → logprob: -17.75
    5. '[' → logprob: -18.0
    6. '<|end|>' → logprob: -18.25
    7. '#' → logprob: -18.875
    8. 'e' → logprob: -19.375
    9. 'else' → logprob: -19.5
    10. ')' → logprob: -19.5

Token 2208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '       ' → logprob: -19.875
    3. '   ' → logprob: -20.625
    4. '           ' → logprob: -21.875
    5. '000' → logprob: -22.0
    6. '```' → logprob: -22.625
    7. '.' → logprob: -22.75
    8. ' ' → logprob: -22.75
    9. '00' → logprob: -23.0
    10. '        ' → logprob: -23.25

Token 2209: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4752155840396881
    2. '       ' → logprob: -1.1002155542373657
    3. ' else' → logprob: -3.1002156734466553
    4. '
' → logprob: -8.725215911865234
    5. 'elif' → logprob: -8.725215911865234
    6. '   ' → logprob: -10.975215911865234
    7. '	else' → logprob: -11.350215911865234
    8. '        
' → logprob: -11.975215911865234
    9. '	' → logprob: -12.100215911865234
    10. ' elif' → logprob: -12.100215911865234

Token 2210: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.614616334438324
    2. '       ' → logprob: -0.864616334438324
    3. ' else' → logprob: -3.3646163940429688
    4. 'elif' → logprob: -6.739616394042969
    5. '```' → logprob: -6.989616394042969
    6. '   ' → logprob: -7.739616394042969
    7. '
' → logprob: -8.364616394042969
    8. ')' → logprob: -8.864616394042969
    9. '[' → logprob: -9.739616394042969
    10. ' 
' → logprob: -9.739616394042969

Token 2211: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2140544205904007
    2. '       ' → logprob: -1.9640544652938843
    3. 'elif' (adapté à ' elif') → logprob: -2.9640543460845947
    4. ' else' → logprob: -7.214054584503174
    5. ' elif' → logprob: -9.839054107666016
    6. '   ' → logprob: -12.089054107666016
    7. '
' → logprob: -13.964054107666016
    8. '	else' → logprob: -14.714054107666016
    9. '	elif' → logprob: -14.964054107666016
    10. 'import' → logprob: -15.589054107666016

Token 2212: ' ship' (ID: 12407)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.005052898544818163
    2. 'sas' → logprob: -5.7550530433654785
    3. 'ships' → logprob: -6.6300530433654785
    4. '   ' → logprob: -8.13005256652832
    5. ' ship' → logprob: -9.13005256652832
    6. '(ship' → logprob: -9.50505256652832
    7. '  ' → logprob: -11.38005256652832
    8. '(s' → logprob: -12.00505256652832
    9. 'sap' → logprob: -12.13005256652832
    10. 'sis' → logprob: -12.25505256652832

Token 2213: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.747814349073451e-05
    2. 'In' → logprob: -11.875017166137695
    3. 'in' → logprob: -12.250017166137695
    4. '_inside' → logprob: -13.750017166137695
    5. '_front' → logprob: -13.875017166137695
    6. '_' → logprob: -13.875017166137695
    7. 's' → logprob: -14.125017166137695
    8. '
' → logprob: -15.500017166137695
    9. '[' → logprob: -15.875017166137695
    10. '   ' → logprob: -15.875017166137695

Token 2214: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.008408073335886002
    2. 'sas' → logprob: -4.883408069610596
    3. 's' → logprob: -7.758408069610596
    4. '_front' → logprob: -8.508408546447754
    5. 'front' → logprob: -9.008408546447754
    6. '_' → logprob: -10.508408546447754
    7. '[s' → logprob: -11.508408546447754
    8. '[' → logprob: -13.008408546447754
    9. '```' → logprob: -13.758408546447754
    10. 'a' → logprob: -14.133408546447754

Token 2215: 'as' (ID: 288)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.09626230597496033
    2. 'sas' → logprob: -2.596262216567993
    3. 's' → logprob: -4.221262454986572
    4. 'as' → logprob: -6.221262454986572
    5. '_as' → logprob: -8.596261978149414
    6. '_' → logprob: -8.846261978149414
    7. '[s' → logprob: -9.346261978149414
    8. '[' → logprob: -10.596261978149414
    9. '_in' → logprob: -11.221261978149414
    10. '_f' → logprob: -12.096261978149414

Token 2216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.576873758807778e-05
    2. '[s' → logprob: -9.750075340270996
    3. '[first' → logprob: -12.750075340270996
    4. '[in' → logprob: -13.000075340270996
    5. '[parent' → logprob: -13.250075340270996
    6. '(front' → logprob: -13.875075340270996
    7. '```' → logprob: -13.875075340270996
    8. '[current' → logprob: -14.000075340270996
    9. '[src' → logprob: -14.250075340270996
    10. '[start' → logprob: -14.375075340270996

Token 2217: 'front' (ID: 10313)
  Prédit: 'front'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -5.288163083605468e-05
    2. ' front' → logprob: -10.375052452087402
    3. '[' → logprob: -11.500052452087402
    4. '(front' → logprob: -11.625052452087402
    5. '.front' → logprob: -14.125052452087402
    6. '_front' → logprob: -14.375052452087402
    7. 'frontend' → logprob: -14.500052452087402
    8. '/front' → logprob: -15.625052452087402
    9. '   ' → logprob: -15.875052452087402
    10. 'fr' → logprob: -16.50005340576172

Token 2218: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6364650130271912
    2. 'front' → logprob: -0.7614650130271912
    3. '(front' → logprob: -6.136465072631836
    4. 'i' → logprob: -6.636465072631836
    5. '[' → logprob: -8.761465072631836
    6. ' front' → logprob: -10.011465072631836
    7. '_front' → logprob: -10.261465072631836
    8. '.front' → logprob: -10.636465072631836
    9. 's' → logprob: -10.761465072631836
    10. '   ' → logprob: -10.886465072631836

Token 2219: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1878184825181961
    2. ' is' → logprob: -1.9378185272216797
    3. 'is' → logprob: -4.06281852722168
    4. ']!=' → logprob: -5.68781852722168
    5. '[' → logprob: -6.18781852722168
    6. ' ]' → logprob: -6.56281852722168
    7. ']:
' → logprob: -6.68781852722168
    8. ']==' → logprob: -6.68781852722168
    9. '[i' → logprob: -9.06281852722168
    10. '==' → logprob: -9.31281852722168

Token 2220: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0911257192492485
    2. ' is' → logprob: -2.966125726699829
    3. 'is' → logprob: -3.966125726699829
    4. '==' → logprob: -4.71612548828125
    5. '!=' → logprob: -4.96612548828125
    6. ':' → logprob: -8.59112548828125
    7. ' !=' → logprob: -8.84112548828125
    8. ':
' → logprob: -8.84112548828125
    9. ' ==' → logprob: -9.46612548828125
    10. '(front' → logprob: -10.09112548828125

Token 2221: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0008486981969326735
    2. ' not' → logprob: -7.125848770141602
    3. 'None' → logprob: -10.125848770141602
    4. '   ' → logprob: -13.250848770141602
    5. '	not' → logprob: -14.000848770141602
    6. 'Not' → logprob: -14.375848770141602
    7. '       ' → logprob: -14.500848770141602
    8. '           ' → logprob: -15.125848770141602
    9. '    ' → logprob: -17.0008487701416
    10. '[' → logprob: -17.0008487701416

Token 2222: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.4868770196917467e-05
    2. ' None' → logprob: -10.625024795532227
    3. 'none' → logprob: -15.250024795532227
    4. '_None' → logprob: -16.125024795532227
    5. 'not' → logprob: -16.875024795532227
    6. '=None' → logprob: -17.000024795532227
    7. '0' → logprob: -17.875024795532227
    8. '(None' → logprob: -17.875024795532227
    9. '_none' → logprob: -17.875024795532227
    10. ',None' → logprob: -20.000024795532227

Token 2223: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02143094502389431
    2. '           ' → logprob: -4.271430969238281
    3. ':' → logprob: -5.021430969238281
    4. '=' → logprob: -8.521430969238281
    5. '==' → logprob: -8.521430969238281
    6. '       ' → logprob: -9.271430969238281
    7. ' and' → logprob: -10.146430969238281
    8. ' or' → logprob: -10.271430969238281
    9. 'and' → logprob: -11.021430969238281
    10. '          ' → logprob: -11.396430969238281

Token 2224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3194066286087036
    2. ':
' → logprob: -1.3194066286087036
    3. ' or' → logprob: -6.194406509399414
    4. '=' → logprob: -6.694406509399414
    5. ' =' → logprob: -6.694406509399414
    6. ':' → logprob: -7.069406509399414
    7. '       ' → logprob: -8.194406509399414
    8. ' and' → logprob: -8.444406509399414
    9. '0' → logprob: -9.694406509399414
    10. '):
' → logprob: -10.069406509399414

Token 2225: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005452174227684736
    2. '           ' → logprob: -5.8804521560668945
    3. ' ' → logprob: -6.2554521560668945
    4. 'spe' → logprob: -8.255452156066895
    5. ' speeds' → logprob: -8.380452156066895
    6. '       ' → logprob: -9.130452156066895
    7. '               ' → logprob: -9.380452156066895
    8. '   ' → logprob: -10.755452156066895
    9. '                       ' → logprob: -12.130452156066895
    10. '                   ' → logprob: -12.505452156066895

Token 2226: ' dans' (ID: 2671)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.01956753432750702
    2. '0' → logprob: -4.019567489624023
    3. ' speeds' → logprob: -6.644567489624023
    4. '           ' → logprob: -10.269567489624023
    5. '   ' → logprob: -10.394567489624023
    6. 'speed' → logprob: -10.769567489624023
    7. '       ' → logprob: -11.269567489624023
    8. 's' → logprob: -12.394567489624023
    9. 'Spe' → logprob: -12.894567489624023
    10. ' ' → logprob: -13.269567489624023

Token 2227: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606389466673136
    2. 's' → logprob: -5.257606506347656
    3. 'sas' → logprob: -6.757606506347656
    4. 'ship' → logprob: -8.257606506347656
    5. 'ships' → logprob: -8.382606506347656
    6. ' ' → logprob: -9.007606506347656
    7. 'event' → logprob: -9.632606506347656
    8. 'spe' → logprob: -9.882606506347656
    9. '```' → logprob: -9.882606506347656
    10. 'speed' → logprob: -9.882606506347656

Token 2228: ' sas' (ID: 51515)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.011098162271082401
    2. 'gate' → logprob: -5.511098384857178
    3. 's' → logprob: -6.011098384857178
    4. '0' → logprob: -7.511098384857178
    5. 'sap' → logprob: -7.511098384857178
    6. '```' → logprob: -8.01109790802002
    7. 'sar' → logprob: -8.13609790802002
    8. '#' → logprob: -8.13609790802002
    9. 'ship' → logprob: -8.26109790802002
    10. 'def' → logprob: -8.38609790802002

Token 2229: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.353957861661911
    2. '           ' → logprob: -1.6039578914642334
    3. '
' → logprob: -3.7289578914642334
    4. '=' → logprob: -3.8539578914642334
    5. ' =' → logprob: -3.8539578914642334
    6. '               ' → logprob: -4.728957653045654
    7. '       ' → logprob: -5.478957653045654
    8. ':' → logprob: -5.478957653045654
    9. '                   ' → logprob: -6.478957653045654
    10. '   ' → logprob: -6.603957653045654

Token 2230: ' bateau' (ID: 123794)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030386827886104584
    2. 'spe' → logprob: -3.5303869247436523
    3. ' speeds' → logprob: -8.030386924743652
    4. '           ' → logprob: -8.905386924743652
    5. ' ' → logprob: -9.280386924743652
    6. 'speed' → logprob: -10.905386924743652
    7. '       ' → logprob: -11.030386924743652
    8. '               ' → logprob: -11.655386924743652
    9. 's' → logprob: -11.780386924743652
    10. '   ' → logprob: -11.780386924743652

Token 2231: ' doit' (ID: 21822)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.222352147102356
    2. 's' → logprob: -1.347352147102356
    3. ' =' → logprob: -2.4723520278930664
    4. 'speed' → logprob: -2.4723520278930664
    5. 'spe' → logprob: -2.7223520278930664
    6. '_in' → logprob: -2.9723520278930664
    7. '[i' → logprob: -3.0973520278930664
    8. '[' → logprob: -3.3473520278930664
    9. '           ' → logprob: -4.597352027893066
    10. '_speed' → logprob: -4.722352027893066

Token 2232: ' attendre' (ID: 91756)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8045122027397156
    2. 'rest' → logprob: -1.1795122623443604
    3. 'att' → logprob: -2.0545122623443604
    4. 'reste' → logprob: -3.1795122623443604
    5. 'wait' → logprob: -3.8045122623443604
    6. 'stop' → logprob: -4.429512023925781
    7. 's' → logprob: -4.554512023925781
    8. 'être' → logprob: -4.804512023925781
    9. '0' → logprob: -5.054512023925781
    10. ' rester' → logprob: -6.179512023925781

Token 2233: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018421327695250511
    2. ' ' → logprob: -6.376842021942139
    3. '           ' → logprob: -9.001842498779297
    4. '=' → logprob: -12.251842498779297
    5. ' =' → logprob: -12.501842498779297
    6. '
' → logprob: -13.126842498779297
    7. '               ' → logprob: -13.501842498779297
    8. '   ' → logprob: -13.751842498779297
    9. 'False' → logprob: -14.376842498779297
    10. '       ' → logprob: -14.501842498779297

Token 2234: ' vitesse' (ID: 71752)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019803799223154783
    2. ' ' → logprob: -6.626980304718018
    3. '           ' → logprob: -7.376980304718018
    4. ' speeds' → logprob: -11.751980781555176
    5. '               ' → logprob: -12.251980781555176
    6. '                       ' → logprob: -12.626980781555176
    7. ' ' → logprob: -13.251980781555176
    8. '                   ' → logprob: -13.376980781555176
    9. '=' → logprob: -13.501980781555176
    10. '       ' → logprob: -13.501980781555176

Token 2235: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016734348610043526
    2. ' =' → logprob: -4.1417341232299805
    3. '0' → logprob: -7.2667341232299805
    4. ' ' → logprob: -14.01673412322998
    5. '           ' → logprob: -15.51673412322998
    6. '   ' → logprob: -15.76673412322998
    7. '=
' → logprob: -16.141735076904297
    8. '       ' → logprob: -17.141735076904297
    9. '```' → logprob: -17.266735076904297
    10. ':' → logprob: -17.641735076904297

Token 2236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.000001907348633
    4. '۰' → logprob: -19.750001907348633
    5. '```' → logprob: -20.375001907348633
    6. '=' → logprob: -21.125001907348633
    7. '  ' → logprob: -21.125001907348633
    8. '.' → logprob: -21.750001907348633
    9. '       ' → logprob: -21.875001907348633
    10. ' ' → logprob: -22.000001907348633

Token 2237: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3993036150932312
    2. '           ' → logprob: -1.774303674697876
    3. '
' → logprob: -1.899303674697876
    4. '            
' → logprob: -6.274303436279297
    5. '               ' → logprob: -6.524303436279297
    6. 'else' → logprob: -6.899303436279297
    7. ' 
' → logprob: -7.149303436279297
    8. '        
' → logprob: -7.274303436279297
    9. ')
' → logprob: -7.399303436279297
    10. ' else' → logprob: -7.774303436279297

Token 2238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6027911901473999
    2. '       ' → logprob: -0.8527911901473999
    3. '
' → logprob: -4.2277913093566895
    4. 'else' → logprob: -5.9777913093566895
    5. ':
' → logprob: -5.9777913093566895
    6. '```' → logprob: -5.9777913093566895
    7. '               ' → logprob: -6.3527913093566895
    8. ' else' → logprob: -7.1027913093566895
    9. '                       ' → logprob: -7.7277913093566895
    10. '   ' → logprob: -7.9777913093566895

Token 2239: ' speeds' (ID: 40472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47294360399246216
    2. 'spe' → logprob: -1.0979435443878174
    3. '0' → logprob: -3.4729435443878174
    4. ' speeds' → logprob: -4.5979437828063965
    5. 's' → logprob: -7.2229437828063965
    6. '               ' → logprob: -7.4729437828063965
    7. 'speed' → logprob: -7.9729437828063965
    8. '       ' → logprob: -8.847943305969238
    9. '   ' → logprob: -8.972943305969238
    10. '                   ' → logprob: -9.972943305969238

Token 2240: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002827223390340805
    2. '=' → logprob: -5.877827167510986
    3. ' =' → logprob: -11.752827644348145
    4. '```' → logprob: -12.377827644348145
    5. '   ' → logprob: -12.752827644348145
    6. 's' → logprob: -13.627827644348145
    7. ' [' → logprob: -13.627827644348145
    8. 'front' → logprob: -13.877827644348145
    9. '=[' → logprob: -14.002827644348145
    10. '           ' → logprob: -14.127827644348145

Token 2241: 'front' (ID: 10313)
  Prédit: 'front'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.00010330478107789531
    2. ' front' → logprob: -9.500102996826172
    3. '0' → logprob: -11.250102996826172
    4. '[' → logprob: -11.625102996826172
    5. '(front' → logprob: -12.375102996826172
    6. '.front' → logprob: -14.500102996826172
    7. '   ' → logprob: -14.625102996826172
    8. '```' → logprob: -15.000102996826172
    9. '_front' → logprob: -15.375102996826172
    10. 'frontend' → logprob: -15.750102996826172

Token 2242: '_i' (ID: 10853)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.018636461347341537
    2. '_i' → logprob: -4.268636226654053
    3. 'i' → logprob: -5.643636226654053
    4. '(front' → logprob: -7.518636226654053
    5. '[' → logprob: -9.018636703491211
    6. '_in' → logprob: -9.393636703491211
    7. ' front' → logprob: -9.393636703491211
    8. 'in' → logprob: -10.018636703491211
    9. '0' → logprob: -10.768636703491211
    10. '_front' → logprob: -11.393636703491211

Token 2243: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02976194955408573
    2. ' =' → logprob: -3.529762029647827
    3. ']=' → logprob: -12.154762268066406
    4. ']' → logprob: -12.154762268066406
    5. '[' → logprob: -14.904762268066406
    6. ')' → logprob: -15.529762268066406
    7. '   ' → logprob: -16.029762268066406
    8. ')=' → logprob: -16.154762268066406
    9. '           ' → logprob: -16.654762268066406
    10. '=
' → logprob: -16.779762268066406

Token 2244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009115827269852161
    2. ' =' → logprob: -7.000911712646484
    3. '=
' → logprob: -19.125911712646484
    4. '.=' → logprob: -19.625911712646484
    5. '=False' → logprob: -20.000911712646484
    6. '   ' → logprob: -20.000911712646484
    7. '＝' → logprob: -20.000911712646484
    8. '           ' → logprob: -20.250911712646484
    9. '=

' → logprob: -20.750911712646484
    10. '       ' → logprob: -21.250911712646484

Token 2245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.0000057220459
    4. '```' → logprob: -17.8750057220459
    5. '۰' → logprob: -18.2500057220459
    6. '.' → logprob: -18.8750057220459
    7. '       ' → logprob: -19.0625057220459
    8. '  ' → logprob: -19.0625057220459
    9. '           ' → logprob: -19.3750057220459
    10. ' ' → logprob: -19.6250057220459

Token 2246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '```' → logprob: -17.375001907348633
    5. '۰' → logprob: -18.375001907348633
    6. '.' → logprob: -19.250001907348633
    7. '  ' → logprob: -19.375001907348633
    8. '       ' → logprob: -19.812501907348633
    9. '``' → logprob: -19.937501907348633
    10. '           ' → logprob: -20.000001907348633

Token 2247: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1994775377388578e-05
    2. '0' → logprob: -11.375012397766113
    3. '<|end|>' → logprob: -15.625012397766113
    4. '       ' → logprob: -16.625011444091797
    5. '[' → logprob: -16.875011444091797
    6. ')' → logprob: -17.125011444091797
    7. ' .' → logprob: -17.250011444091797
    8. '.
' → logprob: -17.375011444091797
    9. '```' → logprob: -17.625011444091797
    10. '<|end|>' → logprob: -18.000011444091797

Token 2248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '       ' → logprob: -18.5
    3. '   ' → logprob: -19.25
    4. ' ' → logprob: -19.25
    5. '```' → logprob: -19.25
    6. '000' → logprob: -19.625
    7. '           ' → logprob: -19.625
    8. '00' → logprob: -20.375
    9. '۰' → logprob: -21.6875
    10. '０' → logprob: -22.3125

Token 2249: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2564579248428345
    2. 'else' → logprob: -1.6314579248428345
    3. ' else' → logprob: -4.131457805633545
    4. '   ' → logprob: -4.756457805633545
    5. '<|end|>' → logprob: -6.256457805633545
    6. '	else' → logprob: -7.131457805633545
    7. ' for' → logprob: -7.256457805633545
    8. '        
' → logprob: -7.756457805633545
    9. 'for' → logprob: -7.756457805633545
    10. '
' → logprob: -8.006458282470703

Token 2250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10539575666189194
    2. 'else' → logprob: -2.355395793914795
    3. '
' → logprob: -5.980395793914795
    4. ' else' → logprob: -6.355395793914795
    5. '   ' → logprob: -7.480395793914795
    6. '        
' → logprob: -9.105395317077637
    7. 'for' → logprob: -9.730395317077637
    8. '    
' → logprob: -10.480395317077637
    9. 'elif' → logprob: -10.730395317077637
    10. ' for' → logprob: -10.855395317077637

Token 2251: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2127610146999359
    2. '       ' → logprob: -1.7127610445022583
    3. ' else' → logprob: -4.587760925292969
    4. '   ' → logprob: -7.712760925292969
    5. 'for' → logprob: -8.462760925292969
    6. '	else' → logprob: -8.712760925292969
    7. 'elif' → logprob: -8.962760925292969
    8. '
' → logprob: -9.962760925292969
    9. ' for' → logprob: -10.462760925292969
    10. '	' → logprob: -10.962760925292969

Token 2252: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6063134074211121
    2. ':
' → logprob: -1.2313134670257568
    3. ':' → logprob: -1.8563134670257568
    4. '       ' → logprob: -5.106313228607178
    5. '               ' → logprob: -9.106313705444336
    6. '   ' → logprob: -10.231313705444336
    7. ' :
' → logprob: -10.231313705444336
    8. '          ' → logprob: -10.731313705444336
    9. '         ' → logprob: -11.106313705444336
    10. ' :' → logprob: -11.106313705444336

Token 2253: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3871877193450928
    2. '           ' → logprob: -1.1371877193450928
    3. 'spe' → logprob: -9.137187957763672
    4. '```' → logprob: -9.387187957763672
    5. 's' → logprob: -9.637187957763672
    6. '   ' → logprob: -10.637187957763672
    7. 'for' → logprob: -11.012187957763672
    8. '               ' → logprob: -11.762187957763672
    9. '
' → logprob: -13.262187957763672
    10. '          ' → logprob: -13.512187957763672

Token 2254: ' speeds' (ID: 40472)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.005874752067029476
    2. '           ' → logprob: -5.5058746337890625
    3. ' ships' → logprob: -6.8808746337890625
    4. 'spe' → logprob: -7.5058746337890625
    5. '       ' → logprob: -9.630874633789062
    6. '   ' → logprob: -10.130874633789062
    7. ' speeds' → logprob: -10.630874633789062
    8. 'ship' → logprob: -10.630874633789062
    9. '               ' → logprob: -11.130874633789062
    10. 'speed' → logprob: -11.255874633789062

Token 2255: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025782637298107147
    2. '=' → logprob: -3.900782585144043
    3. 's' → logprob: -5.650782585144043
    4. ' =' → logprob: -6.650782585144043
    5. 'spe' → logprob: -8.025782585144043
    6. '=s' → logprob: -10.400782585144043
    7. ' speeds' → logprob: -11.150782585144043
    8. '           ' → logprob: -11.400782585144043
    9. '```' → logprob: -11.900782585144043
    10. '[s' → logprob: -12.400782585144043

Token 2256: 'front' (ID: 10313)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.0011292597046121955
    2. ' ships' → logprob: -7.251129150390625
    3. '           ' → logprob: -8.376129150390625
    4. '   ' → logprob: -9.251129150390625
    5. '       ' → logprob: -10.751129150390625
    6. 'hips' → logprob: -10.876129150390625
    7. '               ' → logprob: -11.501129150390625
    8. 'float' → logprob: -12.001129150390625
    9. 's' → logprob: -12.376129150390625
    10. 'ship' → logprob: -12.501129150390625

Token 2257: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00010330478107789531
    2. '_order' → logprob: -9.750102996826172
    3. 'i' → logprob: -10.250102996826172
    4. '[' → logprob: -13.375102996826172
    5. '[i' → logprob: -13.375102996826172
    6. 'order' → logprob: -13.375102996826172
    7. 'spe' → logprob: -14.000102996826172
    8. '(front' → logprob: -14.375102996826172
    9. 'front' → logprob: -14.750102996826172
    10. '_j' → logprob: -14.875102996826172

Token 2258: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06742022186517715
    2. ' =' → logprob: -2.817420244216919
    3. ']' → logprob: -5.44242000579834
    4. ']=' → logprob: -7.06742000579834
    5. 's' → logprob: -9.31742000579834
    6. '=s' → logprob: -9.31742000579834
    7. '           ' → logprob: -10.94242000579834
    8. ')' → logprob: -11.44242000579834
    9. '[' → logprob: -11.81742000579834
    10. '   ' → logprob: -12.06742000579834

Token 2259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028091557323932648
    2. ' =' → logprob: -5.877809047698975
    3. '=s' → logprob: -12.502809524536133
    4. '=
' → logprob: -15.377809524536133
    5. 's' → logprob: -15.752809524536133
    6. '   ' → logprob: -15.877809524536133
    7. ']' → logprob: -16.877809524536133
    8. ']=' → logprob: -17.002809524536133
    9. '           ' → logprob: -17.752809524536133
    10. '=

' → logprob: -17.877809524536133

Token 2260: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.0007196996593847871
    2. ' ships' → logprob: -7.2507195472717285
    3. '   ' → logprob: -12.375720024108887
    4. 'ship' → logprob: -13.125720024108887
    5. '       ' → logprob: -13.750720024108887
    6. '           ' → logprob: -13.750720024108887
    7. 'shops' → logprob: -15.125720024108887
    8. 'Ships' → logprob: -15.625720024108887
    9. '               ' → logprob: -15.750720024108887
    10. 'boats' → logprob: -16.00071907043457

Token 2261: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. 'front' → logprob: -15.375000953674316
    3. 'speed' → logprob: -15.625000953674316
    4. '```' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '(front' → logprob: -16.750001907348633
    7. ' ' → logprob: -17.250001907348633
    8. '[first' → logprob: -17.250001907348633
    9. '	' → logprob: -17.250001907348633
    10. '\[' → logprob: -17.375001907348633

Token 2262: 'front' (ID: 10313)
  Prédit: 'front'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -4.4060561776859686e-05
    2. '[' → logprob: -10.125043869018555
    3. '(front' → logprob: -13.125043869018555
    4. ' front' → logprob: -13.250043869018555
    5. '.front' → logprob: -16.250043869018555
    6. '   ' → logprob: -17.875043869018555
    7. '_front' → logprob: -18.250043869018555
    8. '/front' → logprob: -18.750043869018555
    9. 'frontend' → logprob: -19.250043869018555
    10. 'fr' → logprob: -19.625043869018555

Token 2263: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0006141475751064718
    2. 'i' → logprob: -7.750614166259766
    3. '[' → logprob: -9.250614166259766
    4. 'front' → logprob: -9.500614166259766
    5. 'I' → logprob: -11.750614166259766
    6. '(front' → logprob: -13.375614166259766
    7. '_j' → logprob: -15.000614166259766
    8. '_k' → logprob: -15.125614166259766
    9. '   ' → logprob: -15.250614166259766
    10. 's' → logprob: -15.375614166259766

Token 2264: '].' (ID: 1651)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02953721210360527
    2. '.front' → logprob: -4.404537200927734
    3. '.V' → logprob: -4.654537200927734
    4. '.' → logprob: -5.404537200927734
    5. '].' → logprob: -6.404537200927734
    6. ' .' → logprob: -7.529537200927734
    7. '   ' → logprob: -8.404537200927734
    8. '[].' → logprob: -8.654537200927734
    9. '(front' → logprob: -10.154537200927734
    10. ').' → logprob: -10.154537200927734

Token 2265: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -5.512236498361744e-07
    2. 'speed' → logprob: -14.625000953674316
    3. ' V' → logprob: -18.375
    4. '	V' → logprob: -19.125
    5. 'max' → logprob: -19.625
    6. '.V' → logprob: -19.875
    7. '_V' → logprob: -20.125
    8. '   ' → logprob: -20.375
    9. 'v' → logprob: -20.75
    10. '`' → logprob: -20.875

Token 2266: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: 0.0
    2. ' max' → logprob: -17.5
    3. '_max' → logprob: -18.875
    4. '.max' → logprob: -21.125
    5. ')' → logprob: -21.375
    6. '	max' → logprob: -21.375
    7. '[max' → logprob: -21.875
    8. '   ' → logprob: -22.0
    9. 'min' → logprob: -22.25
    10. 'ma' → logprob: -22.25

Token 2267: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2268: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8949160575866699
    2. ' for' → logprob: -1.76991605758667
    3. '       ' → logprob: -1.76991605758667
    4. '	for' → logprob: -2.14491605758667
    5. 'for' → logprob: -2.14491605758667
    6. '
' → logprob: -5.51991605758667
    7. '```' → logprob: -5.64491605758667
    8. '        
' → logprob: -6.26991605758667
    9. '    
' → logprob: -6.26991605758667
    10. '<|end|>' → logprob: -6.39491605758667

Token 2269: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014498754171654582
    2. '       ' → logprob: -7.001450061798096
    3. 'i' → logprob: -7.751450061798096
    4. '```' → logprob: -10.251449584960938
    5. 'prev' → logprob: -10.251449584960938
    6. 'j' → logprob: -11.126449584960938
    7. '   ' → logprob: -11.251449584960938
    8. ' for' → logprob: -11.876449584960938
    9. '``' → logprob: -13.876449584960938
    10. '
' → logprob: -14.376449584960938

Token 2270: ' Puis' (ID: 87717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001604367163963616
    2. '       ' → logprob: -7.0016045570373535
    3. 'i' → logprob: -7.5016045570373535
    4. 'j' → logprob: -9.751604080200195
    5. 'prev' → logprob: -10.376604080200195
    6. '```' → logprob: -10.626604080200195
    7. '   ' → logprob: -11.126604080200195
    8. ' for' → logprob: -11.626604080200195
    9. '``' → logprob: -13.501604080200195
    10. '	for' → logprob: -14.751604080200195

Token 2271: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013414084911346436
    2. ' for' → logprob: -4.388413906097412
    3. '       ' → logprob: -7.638413906097412
    4. '   ' → logprob: -8.51341438293457
    5. 'range' → logprob: -9.38841438293457
    6. 'i' → logprob: -9.51341438293457
    7. ' i' → logprob: -10.88841438293457
    8. ' ' → logprob: -11.26341438293457
    9. ' range' → logprob: -12.01341438293457
    10. '	for' → logprob: -12.26341438293457

Token 2272: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.46190035343170166
    2. 'j' → logprob: -1.0869003534317017
    3. 'idx' → logprob: -4.086900234222412
    4. 'k' → logprob: -4.586900234222412
    5. 'pos' → logprob: -5.836900234222412
    6. 'l' → logprob: -7.336900234222412
    7. 'rest' → logprob: -7.461900234222412
    8. 'ii' → logprob: -8.21190071105957
    9. 'd' → logprob: -9.21190071105957
    10. 'p' → logprob: -9.46190071105957

Token 2273: ' autres' (ID: 18701)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.36119237542152405
    2. 'i' → logprob: -1.2361923456192017
    3. 'k' → logprob: -4.611192226409912
    4. 'idx' → logprob: -6.861192226409912
    5. '_j' → logprob: -7.611192226409912
    6. 'next' → logprob: -7.611192226409912
    7. ' j' → logprob: -7.861192226409912
    8. 'rest' → logprob: -9.73619270324707
    9. '_i' → logprob: -10.48619270324707
    10. ' i' → logprob: -10.61119270324707

Token 2274: ':
' (ID: 734)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8258441686630249
    2. ':' → logprob: -1.450844168663025
    3. 'i' → logprob: -1.950844168663025
    4. '   ' → logprob: -2.8258442878723145
    5. ',' → logprob: -3.2008442878723145
    6. ' j' → logprob: -4.0758442878723145
    7. 'for' → logprob: -4.2008442878723145
    8. ' for' → logprob: -4.4508442878723145
    9. '_j' → logprob: -5.3258442878723145
    10. ':
' → logprob: -5.4508442878723145

Token 2275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037879545241594315
    2. '```' → logprob: -3.912879467010498
    3. ' for' → logprob: -4.412879467010498
    4. 'for' → logprob: -6.287879467010498
    5. '	for' → logprob: -6.412879467010498
    6. '   ' → logprob: -6.787879467010498
    7. ' i' → logprob: -9.037879943847656
    8. '``' → logprob: -9.787879943847656
    9. '	   ' → logprob: -9.912879943847656
    10. 'i' → logprob: -10.162879943847656

Token 2276: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7048972845077515
    2. 'for' (adapté à ' for') → logprob: -0.8298972845077515
    3. '       ' → logprob: -3.079897403717041
    4. '```' → logprob: -4.329897403717041
    5. '   ' → logprob: -5.454897403717041
    6. '	for' → logprob: -6.204897403717041
    7. '
' → logprob: -7.079897403717041
    8. ' i' → logprob: -7.079897403717041
    9. ' j' → logprob: -7.454897403717041
    10. 'i' → logprob: -7.829897403717041

Token 2277: ' pos' (ID: 1253)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.34112122654914856
    2. 'i' → logprob: -1.4661211967468262
    3. 'idx' → logprob: -3.466121196746826
    4. 'k' → logprob: -3.966121196746826
    5. ' j' → logprob: -5.466121196746826
    6. 'oi' → logprob: -6.716121196746826
    7. ' idx' → logprob: -7.216121196746826
    8. 'pos' → logprob: -7.341121196746826
    9. ' i' → logprob: -7.841121196746826
    10. 'prev' → logprob: -8.716121673583984

Token 2278: 'i' (ID: 72)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7655040621757507
    2. 'i' → logprob: -1.7655041217803955
    3. '_idx' → logprob: -2.3905041217803955
    4. '_i' → logprob: -2.6405041217803955
    5. '_index' → logprob: -2.8905041217803955
    6. '   ' → logprob: -3.1405041217803955
    7. 'in' → logprob: -3.7655041217803955
    8. 'idx' → logprob: -4.140503883361816
    9. '_in' → logprob: -4.515503883361816
    10. '       ' → logprob: -5.140503883361816

Token 2279: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3302334547042847
    2. ',' → logprob: -1.9552334547042847
    3. 'i' → logprob: -1.9552334547042847
    4. 's' → logprob: -1.9552334547042847
    5. '   ' → logprob: -2.580233573913574
    6. 'x' → logprob: -2.955233573913574
    7. '=' → logprob: -3.205233573913574
    8. ' =' → logprob: -3.580233573913574
    9. ' in' → logprob: -3.580233573913574
    10. 'in' → logprob: -4.080233573913574

Token 2280: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6326718926429749
    2. 'idx' → logprob: -0.7576718926429749
    3. ' range' → logprob: -10.882672309875488
    4. 'index' → logprob: -10.882672309875488
    5. ' idx' → logprob: -11.382672309875488
    6. 're' → logprob: -11.882672309875488
    7. '[idx' → logprob: -12.507672309875488
    8. '   ' → logprob: -12.757672309875488
    9. '[' → logprob: -13.007672309875488
    10. '1' → logprob: -13.257672309875488

Token 2281: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002494191285222769
    2. '(' → logprob: -8.375249862670898
    3. '   ' → logprob: -11.375249862670898
    4. '       ' → logprob: -12.125249862670898
    5. '           ' → logprob: -14.500249862670898
    6. ' ' → logprob: -14.625249862670898
    7. '    ' → logprob: -15.625249862670898
    8. '     ' → logprob: -16.0002498626709
    9. 'len' → logprob: -16.0002498626709
    10. '        ' → logprob: -16.2502498626709

Token 2282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.62500286102295
    4. '(' → logprob: -15.25000286102295
    5. 'M' → logprob: -15.75000286102295
    6. '       ' → logprob: -16.500001907348633
    7. '    ' → logprob: -17.375001907348633
    8. '           ' → logprob: -17.625001907348633
    9. '  ' → logprob: -17.750001907348633
    10. '
' → logprob: -18.375001907348633

Token 2283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006915230304002762
    2. ',M' → logprob: -5.006915092468262
    3. ',len' → logprob: -9.256915092468262
    4. ' ,' → logprob: -9.631915092468262
    5. 'M' → logprob: -10.381915092468262
    6. 'len' → logprob: -13.006915092468262
    7. '   ' → logprob: -13.381915092468262
    8. '       ' → logprob: -13.756915092468262
    9. ',m' → logprob: -14.006915092468262
    10. ',
' → logprob: -14.506915092468262

Token 2284: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0009449340868741274
    2. 'len' → logprob: -7.000945091247559
    3. ' M' → logprob: -10.625945091247559
    4. '   ' → logprob: -11.750945091247559
    5. ' len' → logprob: -14.875945091247559
    6. '       ' → logprob: -15.750945091247559
    7. '	M' → logprob: -16.125944137573242
    8. '  ' → logprob: -16.375944137573242
    9. '           ' → logprob: -16.500944137573242
    10. ' ' → logprob: -16.625944137573242

Token 2285: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009989929385483265
    2. ',M' → logprob: -5.3849897384643555
    3. '       ' → logprob: -6.3849897384643555
    4. '   ' → logprob: -6.7599897384643555
    5. '):
' → logprob: -7.1349897384643555
    6. 'M' → logprob: -7.5099897384643555
    7. ' ,' → logprob: -7.6349897384643555
    8. '           ' → logprob: -7.8849897384643555
    9. ',len' → logprob: -9.009989738464355
    10. ':
' → logprob: -9.759989738464355

Token 2286: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3792470097541809
    2. '           ' → logprob: -2.129246950149536
    3. '```' → logprob: -2.379246950149536
    4. ' i' → logprob: -3.254246950149536
    5. ' idx' → logprob: -3.254246950149536
    6. 'idx' → logprob: -5.254247188568115
    7. ' j' → logprob: -5.629247188568115
    8. '   ' → logprob: -5.879247188568115
    9. 'i' → logprob: -6.254247188568115
    10. ' ind' → logprob: -6.379247188568115

Token 2287: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3266508877277374
    2. 'i' (adapté à ' i') → logprob: -2.201650857925415
    3. 'cur' → logprob: -2.451650857925415
    4. 'curr' → logprob: -3.451650857925415
    5. 'current' → logprob: -4.326651096343994
    6. 'prev' → logprob: -4.576651096343994
    7. '           ' → logprob: -4.576651096343994
    8. '       ' → logprob: -4.951651096343994
    9. '   ' → logprob: -5.451651096343994
    10. 'idx' → logprob: -5.826651096343994

Token 2288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2827186584472656
    2. ' =' → logprob: -1.4077186584472656
    3. 'idx' → logprob: -7.407718658447266
    4. '_idx' → logprob: -8.657718658447266
    5. 'current' → logprob: -9.032718658447266
    6. '           ' → logprob: -9.157718658447266
    7. '   ' → logprob: -9.657718658447266
    8. '_=' → logprob: -9.657718658447266
    9. 'prev' → logprob: -9.782718658447266
    10. '       ' → logprob: -10.157718658447266

Token 2289: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0005902059492655098
    2. ' idx' → logprob: -7.5005903244018555
    3. 'pos' → logprob: -10.375590324401855
    4. '	idx' → logprob: -12.625590324401855
    5. 'i' → logprob: -13.875590324401855
    6. '           ' → logprob: -14.125590324401855
    7. '   ' → logprob: -15.250590324401855
    8. '[idx' → logprob: -15.250590324401855
    9. 'index' → logprob: -15.750590324401855
    10. '       ' → logprob: -16.37558937072754

Token 2290: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -2.3438327843905427e-05
    2. 'order' → logprob: -10.87502384185791
    3. 'idx' → logprob: -13.12502384185791
    4. 'i' → logprob: -14.37502384185791
    5. '=' → logprob: -14.50002384185791
    6. '_ORDER' → logprob: -14.87502384185791
    7. '   ' → logprob: -15.87502384185791
    8. 'Order' → logprob: -15.87502384185791
    9. '           ' → logprob: -16.375022888183594
    10. ' =' → logprob: -16.375022888183594

Token 2291: '[pos' (ID: 48272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22331836819648743
    2. 'pos' → logprob: -1.848318338394165
    3. ' =' → logprob: -3.723318338394165
    4. '[pos' → logprob: -4.473318576812744
    5. '           ' → logprob: -5.848318576812744
    6. ' pos' → logprob: -6.598318576812744
    7. '-' → logprob: -7.348318576812744
    8. '   ' → logprob: -7.848318576812744
    9. ']' → logprob: -7.973318576812744
    10. '=
' → logprob: -8.098318099975586

Token 2292: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004251131322234869
    2. 'os' → logprob: -5.629251003265381
    3. ')' → logprob: -8.629251480102539
    4. 'pos' → logprob: -8.879251480102539
    5. '   ' → logprob: -9.129251480102539
    6. 's' → logprob: -9.379251480102539
    7. '       ' → logprob: -10.504251480102539
    8. ']' → logprob: -10.754251480102539
    9. 'is' → logprob: -11.004251480102539
    10. '=' → logprob: -11.254251480102539

Token 2293: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.09728071838617325
    2. ']' → logprob: -2.597280740737915
    3. '           ' → logprob: -4.347280502319336
    4. '-' → logprob: -6.097280502319336
    5. '       ' → logprob: -6.222280502319336
    6. '   ' → logprob: -7.847280502319336
    7. '=' → logprob: -8.222280502319336
    8. ' -' → logprob: -9.347280502319336
    9. ']:
' → logprob: -9.597280502319336
    10. '               ' → logprob: -10.347280502319336

Token 2294: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0920841246843338
    2. 'prev' → logprob: -2.8420841693878174
    3. ' prev' → logprob: -4.217083930969238
    4. 'j' → logprob: -4.967083930969238
    5. ' j' → logprob: -6.217083930969238
    6. '
' → logprob: -6.592083930969238
    7. '```' → logprob: -6.717083930969238
    8. ' front' → logprob: -7.217083930969238
    9. 'front' → logprob: -7.342083930969238
    10. '            
' → logprob: -8.217083930969238

Token 2295: ' #' (ID: 1069)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.5559098124504089
    2. 'j' → logprob: -0.9309098124504089
    3. '           ' → logprob: -4.430909633636475
    4. 'pred' → logprob: -4.555909633636475
    5. 'pr' → logprob: -6.180909633636475
    6. 'front' → logprob: -6.180909633636475
    7. '   ' → logprob: -6.555909633636475
    8. 'preced' → logprob: -7.055909633636475
    9. 'p' → logprob: -7.680909633636475
    10. 'prec' → logprob: -7.805909633636475

Token 2296: ' On' (ID: 2160)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8450006246566772
    2. 'prev' → logprob: -0.8450006246566772
    3. 'pred' → logprob: -2.720000743865967
    4. 'front' → logprob: -3.345000743865967
    5. '           ' → logprob: -4.220000743865967
    6. '   ' → logprob: -4.720000743865967
    7. 'leader' → logprob: -5.845000743865967
    8. 'preced' → logprob: -6.095000743865967
    9. 'pr' → logprob: -6.345000743865967
    10. 'p' → logprob: -6.595000743865967

Token 2297: ' cherche' (ID: 52345)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.13278862833976746
    2. 'j' → logprob: -3.63278865814209
    3. '#' → logprob: -4.00778865814209
    4. 'previous' → logprob: -4.50778865814209
    5. 'contin' → logprob: -4.63278865814209
    6. '=' → logprob: -4.63278865814209
    7. 'continue' → logprob: -4.88278865814209
    8. 'pr' → logprob: -5.13278865814209
    9. 'pos' → logprob: -5.50778865814209
    10. 'prec' → logprob: -5.50778865814209

Token 2298: ' le' (ID: 505)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.781435489654541
    2. 'idx' → logprob: -1.156435489654541
    3. '           ' → logprob: -2.531435489654541
    4. 'le' → logprob: -3.656435489654541
    5. ' j' → logprob: -3.781435489654541
    6. '   ' → logprob: -4.156435489654541
    7. 'prev' → logprob: -4.156435489654541
    8. ' idx' → logprob: -4.531435489654541
    9. 'front' → logprob: -4.656435489654541
    10. 'l' → logprob: -4.906435489654541

Token 2299: ' bateau' (ID: 123794)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.08363398909568787
    2. 'j' → logprob: -3.9586338996887207
    3. 'front' → logprob: -3.9586338996887207
    4. 'pr' → logprob: -4.583633899688721
    5. 'dev' → logprob: -4.833633899688721
    6. 'preced' → logprob: -4.958633899688721
    7. 'i' → logprob: -5.583633899688721
    8. 'prev' → logprob: -5.583633899688721
    9. '```' → logprob: -6.333633899688721
    10. 'pos' → logprob: -6.958633899688721

Token 2300: ' suppos' (ID: 167611)
  Prédit: 'dev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dev' → logprob: -0.09139828383922577
    2. 'avant' → logprob: -3.466398239135742
    3. 'idx' → logprob: -4.216398239135742
    4. 'i' → logprob: -5.091398239135742
    5. 'pr' → logprob: -5.091398239135742
    6. 'just' → logprob: -5.466398239135742
    7. 'en' → logprob: -5.716398239135742
    8. 'preced' → logprob: -5.966398239135742
    9. 'su' → logprob: -6.091398239135742
    10. 'à' → logprob: -6.091398239135742

Token 2301: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.02391846291720867
    2. 'ément' → logprob: -4.148918628692627
    3. 'éd' → logprob: -5.273918628692627
    4. 'ed' → logprob: -6.523918628692627
    5. 'édé' → logprob: -7.023918628692627
    6. 'u' → logprob: -9.148918151855469
    7. 'umé' → logprob: -10.148918151855469
    8. 'e' → logprob: -10.273918151855469
    9. 'd' → logprob: -10.773918151855469
    10. 'édit' → logprob: -10.773918151855469

Token 2302: ' devant' (ID: 37522)
  Prédit: 'dev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dev' → logprob: -0.0902361124753952
    2. 'pr' → logprob: -2.965236186981201
    3. 'avant' → logprob: -4.715236186981201
    4. 'preced' → logprob: -4.965236186981201
    5. 'i' → logprob: -5.340236186981201
    6. 'su' → logprob: -6.090236186981201
    7. 'd' → logprob: -6.465236186981201
    8. 'prec' → logprob: -6.715236186981201
    9. 'dav' → logprob: -6.715236186981201
    10. 'just' → logprob: -6.840236186981201

Token 2303: '
' (ID: 198)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8132843375205994
    2. 'j' → logprob: -1.3132843971252441
    3. '           ' → logprob: -2.313284397125244
    4. ' =' → logprob: -2.813284397125244
    5. ' j' → logprob: -3.188284397125244
    6. '=' → logprob: -3.313284397125244
    7. ' idx' → logprob: -3.938284397125244
    8. 'prev' → logprob: -4.313284397125244
    9. '   ' → logprob: -5.563284397125244
    10. 'i' → logprob: -6.313284397125244

Token 2304: '           ' (ID: 352)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9636377692222595
    2. ' =' → logprob: -1.3386378288269043
    3. '           ' → logprob: -1.5886378288269043
    4. 'j' → logprob: -3.3386378288269043
    5. '=' → logprob: -3.4636378288269043
    6. '   ' → logprob: -4.088637828826904
    7. '_j' → logprob: -4.213637828826904
    8. '```' → logprob: -4.463637828826904
    9. '       ' → logprob: -4.963637828826904
    10. ' idx' → logprob: -5.088637828826904

Token 2305: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007268683053553104
    2. 'prev' → logprob: -5.757268905639648
    3. 'for' → logprob: -6.382268905639648
    4. 'found' → logprob: -7.132268905639648
    5. 'front' → logprob: -7.132268905639648
    6. '   ' → logprob: -7.757268905639648
    7. '#' (adapté à ' #') → logprob: -9.632268905639648
    8. 'pred' → logprob: -10.007268905639648
    9. 'ahead' → logprob: -10.132268905639648
    10. '       ' → logprob: -10.132268905639648

Token 2306: ' On' (ID: 2160)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07230514287948608
    2. '           ' → logprob: -3.447305202484131
    3. 'prev' → logprob: -3.697305202484131
    4. 'for' → logprob: -5.197305202484131
    5. 'front' → logprob: -5.572305202484131
    6. '   ' → logprob: -6.697305202484131
    7. ' j' → logprob: -7.197305202484131
    8. 'found' → logprob: -7.572305202484131
    9. 'preced' → logprob: -8.697304725646973
    10. '#' → logprob: -9.072304725646973

Token 2307: ' calc' (ID: 25691)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5577455759048462
    2. 'for' → logprob: -1.4327455759048462
    3. 'prev' → logprob: -2.8077454566955566
    4. 'continue' → logprob: -3.4327454566955566
    5. '=' → logprob: -3.5577454566955566
    6. 'contin' → logprob: -4.432745456695557
    7. ' for' → logprob: -4.807745456695557
    8. '       ' → logprob: -5.307745456695557
    9. ' =' → logprob: -5.557745456695557
    10. 'tr' → logprob: -5.807745456695557

Token 2308: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0015747331781312823
    2. 'ul' → logprob: -6.501574516296387
    3. 'ulé' → logprob: -11.376574516296387
    4. 'u' → logprob: -11.501574516296387
    5. 'cule' → logprob: -11.626574516296387
    6. 'le' → logprob: -11.876574516296387
    7. 'ulate' → logprob: -12.376574516296387
    8. 'e' → logprob: -12.626574516296387
    9. 'ulte' → logprob: -12.876574516296387
    10. 'r' → logprob: -13.001574516296387

Token 2309: ' position' (ID: 4010)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.23301759362220764
    2. 'dist' → logprob: -2.358017683029175
    3. '   ' → logprob: -3.983017683029175
    4. 'for' → logprob: -4.233017444610596
    5. 'front' → logprob: -4.233017444610596
    6. 'prev' → logprob: -4.608017444610596
    7. ' j' → logprob: -4.858017444610596
    8. 'best' → logprob: -4.983017444610596
    9. 'the' → logprob: -5.358017444610596
    10. 'distance' → logprob: -5.483017444610596

Token 2310: ' du' (ID: 1462)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.2276626825332642
    2. 'diff' → logprob: -2.1026625633239746
    3. '_' → logprob: -2.4776625633239746
    4. 'dev' → logprob: -2.7276625633239746
    5. '_diff' → logprob: -3.2276625633239746
    6. '_s' → logprob: -3.2276625633239746
    7. 'du' → logprob: -3.3526625633239746
    8. '_i' → logprob: -3.6026625633239746
    9. 'su' → logprob: -3.6026625633239746
    10. 'i' → logprob: -3.8526625633239746

Token 2311: ' bateau' (ID: 123794)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.23778021335601807
    2. 'i' → logprob: -1.862780213356018
    3. 'ships' → logprob: -3.4877800941467285
    4. 'front' → logprob: -5.1127800941467285
    5. 'j' → logprob: -5.2377800941467285
    6. 'prev' → logprob: -5.3627800941467285
    7. 'ship' → logprob: -5.9877800941467285
    8. ' idx' → logprob: -6.4877800941467285
    9. '   ' → logprob: -7.6127800941467285
    10. 'previous' → logprob: -7.9877800941467285

Token 2312: ' devant' (ID: 37522)
  Prédit: 'dev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dev' → logprob: -0.02763427421450615
    2. 'su' → logprob: -5.027634143829346
    3. '[' → logprob: -5.652634143829346
    4. 'j' → logprob: -5.902634143829346
    5. 'd' → logprob: -6.527634143829346
    6. '   ' → logprob: -6.652634143829346
    7. 'avant' → logprob: -6.777634143829346
    8. 'del' → logprob: -6.902634143829346
    9. '[j' → logprob: -6.902634143829346
    10. 'i' → logprob: -7.152634143829346

Token 2313: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.630902111530304
    2. 'j' → logprob: -1.1309020519256592
    3. 'prev' → logprob: -2.380902051925659
    4. 'front' → logprob: -4.130902290344238
    5. ' j' → logprob: -5.005902290344238
    6. '
' → logprob: -5.505902290344238
    7. '```' → logprob: -5.630902290344238
    8. '=' → logprob: -5.630902290344238
    9. '   ' → logprob: -5.755902290344238
    10. ' =' → logprob: -6.130902290344238

Token 2314: ' order' (ID: 2569)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03943394497036934
    2. 'pos' → logprob: -4.91443395614624
    3. 'l' → logprob: -5.03943395614624
    4. 'la' → logprob: -5.53943395614624
    5. 'front' → logprob: -5.53943395614624
    6. '   ' → logprob: -5.91443395614624
    7. 'range' → logprob: -6.53943395614624
    8. 'the' → logprob: -6.78943395614624
    9. 'code' → logprob: -6.91443395614624
    10. 'temps' → logprob: -6.91443395614624

Token 2315: '
' (ID: 198)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7584194540977478
    2. ' j' → logprob: -1.7584195137023926
    3. '```' → logprob: -2.2584195137023926
    4. 'prev' → logprob: -2.6334195137023926
    5. ' =' → logprob: -2.8834195137023926
    6. '[' → logprob: -3.7584195137023926
    7. '=' → logprob: -4.008419513702393
    8. '_j' → logprob: -4.508419513702393
    9. '[j' → logprob: -4.633419513702393
    10. ',' → logprob: -4.633419513702393

Token 2316: '           ' (ID: 352)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.46628254652023315
    2. '           ' → logprob: -1.966282606124878
    3. 'j' → logprob: -2.966282606124878
    4. '```' → logprob: -3.591282606124878
    5. 'prev' → logprob: -3.841282606124878
    6. ' =' → logprob: -3.966282606124878
    7. '[' → logprob: -4.091282367706299
    8. ' for' → logprob: -4.216282367706299
    9. ' prev' → logprob: -4.341282367706299
    10. ' front' → logprob: -4.841282367706299

Token 2317: ' front' (ID: 5567)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.476134330034256
    2. ' j' → logprob: -1.7261343002319336
    3. '           ' → logprob: -1.7261343002319336
    4. 'prev' → logprob: -4.601134300231934
    5. 'front' (adapté à ' front') → logprob: -5.601134300231934
    6. ' front' → logprob: -5.976134300231934
    7. '```' → logprob: -6.226134300231934
    8. 'for' → logprob: -6.726134300231934
    9. ' prev' → logprob: -7.226134300231934
    10. ' for' → logprob: -7.351134300231934

Token 2318: ' =' (ID: 314)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.4245603382587433
    2. '_j' → logprob: -1.174560308456421
    3. '_idx' → logprob: -4.174560546875
    4. ' =' → logprob: -4.549560546875
    5. 'i' → logprob: -6.049560546875
    6. '=' → logprob: -6.174560546875
    7. '_ship' → logprob: -6.174560546875
    8. '_front' → logprob: -6.799560546875
    9. 'ship' → logprob: -7.049560546875
    10. '_index' → logprob: -7.049560546875

Token 2319: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0002614550176076591
    2. ' idx' → logprob: -8.750261306762695
    3. 'pos' → logprob: -9.625261306762695
    4. '   ' → logprob: -10.750261306762695
    5. 'None' → logprob: -12.750261306762695
    6. '	idx' → logprob: -13.000261306762695
    7. '  ' → logprob: -13.250261306762695
    8. 'index' → logprob: -13.375261306762695
    9. '[idx' → logprob: -13.625261306762695
    10. '       ' → logprob: -13.875261306762695

Token 2320: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -4.68022444692906e-05
    2. 'order' → logprob: -10.750046730041504
    3. 'pos' → logprob: -11.000046730041504
    4. 'idx' → logprob: -12.250046730041504
    5. '[pos' → logprob: -13.875046730041504
    6. '_pos' → logprob: -14.750046730041504
    7. '_ORDER' → logprob: -14.750046730041504
    8. 'Order' → logprob: -15.125046730041504
    9. 'ord' → logprob: -15.250046730041504
    10. '[' → logprob: -15.750046730041504

Token 2321: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -2.9160102712921798e-05
    2. 'pos' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.625029563903809
    4. '[' → logprob: -16.250028610229492
    5. '```' → logprob: -17.000028610229492
    6. 's' → logprob: -17.125028610229492
    7. '[
' → logprob: -17.250028610229492
    8. '       ' → logprob: -17.375028610229492
    9. '(pos' → logprob: -18.125028610229492
    10. '0' → logprob: -18.250028610229492

Token 2322: 'i' (ID: 72)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.5491004129871726e-05
    2. '[pos' → logprob: -10.750045776367188
    3. 'i' → logprob: -11.750045776367188
    4. 'os' → logprob: -11.875045776367188
    5. ' pos' → logprob: -13.000045776367188
    6. '(pos' → logprob: -13.000045776367188
    7. '           ' → logprob: -14.000045776367188
    8. '=' → logprob: -14.125045776367188
    9. '_pos' → logprob: -14.375045776367188
    10. '   ' → logprob: -14.375045776367188

Token 2323: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004934602184221148
    2. ' -' → logprob: -7.62549352645874
    3. '   ' → logprob: -13.250493049621582
    4. '[' → logprob: -13.750493049621582
    5. '[pos' → logprob: -13.750493049621582
    6. 'pos' → logprob: -14.375493049621582
    7. '-pos' → logprob: -15.375493049621582
    8. ' ' → logprob: -15.500493049621582
    9. ']' → logprob: -15.625493049621582
    10. '–' → logprob: -16.2504940032959

Token 2324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.75000286102295
    4. '```' → logprob: -17.062503814697266
    5. '0' → logprob: -18.187503814697266
    6. '  ' → logprob: -18.625003814697266
    7. '১' → logprob: -19.312503814697266
    8. '१' → logprob: -19.312503814697266
    9. '' → logprob: -19.312503814697266
    10. '    ' → logprob: -19.562503814697266

Token 2325: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4742544889450073
    2. ']
' → logprob: -0.9742544889450073
    3. '           ' → logprob: -9.099254608154297
    4. ']
' → logprob: -10.849254608154297
    5. '       ' → logprob: -11.099254608154297
    6. ']

' → logprob: -11.474254608154297
    7. '][' → logprob: -11.974254608154297
    8. '   ' → logprob: -12.474254608154297
    9. ' ]' → logprob: -13.224254608154297
    10. '],' → logprob: -13.974254608154297

Token 2326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03728228807449341
    2. 'if' → logprob: -4.537282466888428
    3. '```' → logprob: -4.662282466888428
    4. ' if' → logprob: -4.912282466888428
    5. '   ' → logprob: -5.662282466888428
    6. '
' → logprob: -6.412282466888428
    7. '       ' → logprob: -6.537282466888428
    8. '            
' → logprob: -6.662282466888428
    9. ',' → logprob: -9.03728199005127
    10. '    
' → logprob: -9.28728199005127

Token 2327: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23346006870269775
    2. 'if' → logprob: -2.233459949493408
    3. 'dist' → logprob: -2.733459949493408
    4. 'front' → logprob: -4.358459949493408
    5. '#' (adapté à ' #') → logprob: -4.483459949493408
    6. 'pos' → logprob: -5.608459949493408
    7. 'distance' → logprob: -5.608459949493408
    8. 'delta' → logprob: -6.608459949493408
    9. 'prev' → logprob: -6.983459949493408
    10. 'diff' → logprob: -7.108459949493408

Token 2328: ' Con' (ID: 1532)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9028542041778564
    2. '           ' → logprob: -1.0278542041778564
    3. 'dist' → logprob: -1.7778542041778564
    4. 'distance' → logprob: -3.7778542041778564
    5. '#' → logprob: -4.402853965759277
    6. 'front' → logprob: -4.527853965759277
    7. 'delta' → logprob: -4.777853965759277
    8. 'pos' → logprob: -5.527853965759277
    9. 'dx' → logprob: -6.152853965759277
    10. 'diff' → logprob: -6.652853965759277

Token 2329: 'train' (ID: 21362)
  Prédit: 'train'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.5190157890319824
    2. 'd' → logprob: -1.6440157890319824
    3. 'st' → logprob: -2.0190157890319824
    4. 'tra' → logprob: -2.7690157890319824
    5. 't' → logprob: -5.394015789031982
    6. 'tin' → logprob: -5.644015789031982
    7. 's' → logprob: -6.019015789031982
    8. 'dist' → logprob: -6.644015789031982
    9. 'strain' → logprob: -7.019015789031982
    10. 'str' → logprob: -7.019015789031982

Token 2330: 'te' (ID: 411)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8072105646133423
    2. 't' → logprob: -1.3072105646133423
    3. 'te' → logprob: -1.3072105646133423
    4. 'ts' → logprob: -5.057210445404053
    5. 'ainte' → logprob: -6.432210445404053
    6. 'é' → logprob: -7.182210445404053
    7. ' t' → logprob: -7.307210445404053
    8. 's' → logprob: -7.557210445404053
    9. 'int' → logprob: -7.682210445404053
    10. ' e' → logprob: -8.182210922241211

Token 2331: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4077885150909424
    2. ' =' → logprob: -1.5327885150909424
    3. 'if' → logprob: -3.6577885150909424
    4. '=' → logprob: -3.7827885150909424
    5. ' if' → logprob: -3.7827885150909424
    6. ' de' → logprob: -4.532788276672363
    7. '   ' → logprob: -5.282788276672363
    8. 'd' → logprob: -5.532788276672363
    9. 'de' → logprob: -5.532788276672363
    10. 'distance' → logprob: -5.532788276672363

Token 2332: ' bateau' (ID: 123794)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2857253849506378
    2. '           ' → logprob: -2.2857253551483154
    3. 'dist' → logprob: -2.6607253551483154
    4. ' if' → logprob: -2.9107253551483154
    5. 'distance' → logprob: -4.6607255935668945
    6. 'pos' → logprob: -5.0357255935668945
    7. ' dist' → logprob: -6.1607255935668945
    8. 'front' → logprob: -7.1607255935668945
    9. ' pos' → logprob: -7.6607255935668945
    10. 'diff' → logprob: -8.160725593566895

Token 2333: ' i' (ID: 575)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.4232800304889679
    2. '_distance' → logprob: -2.6732800006866455
    3. '_dist' → logprob: -2.7982800006866455
    4. '_pos' → logprob: -3.5482800006866455
    5. 's' → logprob: -3.6732800006866455
    6. '_front' → logprob: -3.7982800006866455
    7. 'dist' → logprob: -4.048280239105225
    8. '_' → logprob: -4.548280239105225
    9. 'dev' → logprob: -4.798280239105225
    10. '_der' → logprob: -4.798280239105225

Token 2334: ' doit' (ID: 21822)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -1.0075093507766724
    2. ' doit' → logprob: -2.007509231567383
    3. 'ne' → logprob: -2.132509231567383
    4. 'dev' → logprob: -2.632509231567383
    5. 'do' → logprob: -2.882509231567383
    6. '_ne' → logprob: -2.882509231567383
    7. '=' → logprob: -3.882509231567383
    8. '           ' → logprob: -4.257509231567383
    9. ' must' → logprob: -4.257509231567383
    10. 'must' → logprob: -4.507509231567383

Token 2335: ' garder' (ID: 63069)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -1.1985093355178833
    2. 'not' → logprob: -1.3235093355178833
    3. 'avoir' → logprob: -1.5735093355178833
    4. 'pos' → logprob: -2.9485092163085938
    5. '   ' → logprob: -3.0735092163085938
    6. 'etre' → logprob: -3.4485092163085938
    7. '  ' → logprob: -3.8235092163085938
    8. 'max' → logprob: -4.823509216308594
    9. 'distance' → logprob: -4.948509216308594
    10. 'pas' → logprob: -5.323509216308594

Token 2336: ' distance' (ID: 9324)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.37016040086746216
    2. ' une' → logprob: -2.1201603412628174
    3. 'v' → logprob: -2.9951603412628174
    4. 'au' → logprob: -3.3701603412628174
    5. 'distance' → logprob: -3.6201603412628174
    6. ' au' → logprob: -4.2451605796813965
    7. '```' → logprob: -4.3701605796813965
    8. 'un' → logprob: -4.4951605796813965
    9. 'la' → logprob: -5.2451605796813965
    10. 'à' → logprob: -5.2451605796813965

Token 2337: ' >=' (ID: 5064)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9080732464790344
    2. '>=' → logprob: -1.0330731868743896
    3. 'd' → logprob: -2.0330731868743896
    4. ' >=' → logprob: -2.9080731868743896
    5. '=' → logprob: -3.6580731868743896
    6. '<=' → logprob: -4.783073425292969
    7. ' =' → logprob: -5.283073425292969
    8. 'au' → logprob: -6.033073425292969
    9. '>' → logprob: -6.158073425292969
    10. '1' → logprob: -6.408073425292969

Token 2338: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005937328562140465
    2. ' ' → logprob: -5.130937099456787
    3. '   ' → logprob: -12.755937576293945
    4. ' ' → logprob: -12.880937576293945
    5. '  ' → logprob: -13.255937576293945
    6. '```' → logprob: -14.380937576293945
    7. '           ' → logprob: -15.630937576293945
    8. '
' → logprob: -16.005937576293945
    9. '       ' → logprob: -16.380937576293945
    10. '100' → logprob: -16.630937576293945

Token 2339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006305903079919517
    2. ' ' → logprob: -7.3756303787231445
    3. '```' → logprob: -13.375630378723145
    4. '   ' → logprob: -13.875630378723145
    5. '  ' → logprob: -15.000630378723145
    6. '0' → logprob: -15.000630378723145
    7. '100' → logprob: -15.625630378723145
    8. '
' → logprob: -15.875630378723145
    9. 'EPS' → logprob: -15.875630378723145
    10. ' ' → logprob: -16.56313133239746

Token 2340: 'km' (ID: 15284)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003144920105114579
    2. 'km' → logprob: -7.12814474105835
    3. ' km' → logprob: -7.25314474105835
    4. '_' → logprob: -7.25314474105835
    5. '0' → logprob: -8.128145217895508
    6. 'e' → logprob: -8.753145217895508
    7. ')' → logprob: -9.753145217895508
    8. '000' → logprob: -9.878145217895508
    9. '
' → logprob: -10.128145217895508
    10. '<|end|>' → logprob: -10.253145217895508

Token 2341: ' du' (ID: 1462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17507413029670715
    2. ' if' → logprob: -2.3000741004943848
    3. 'if' → logprob: -3.4250741004943848
    4. '
' → logprob: -5.675074100494385
    5. '            
' → logprob: -5.925074100494385
    6. '               ' → logprob: -6.050074100494385
    7. ',' → logprob: -6.175074100494385
    8. '```' → logprob: -6.175074100494385
    9. '=' → logprob: -6.300074100494385
    10. 's' → logprob: -6.300074100494385

Token 2342: ' bateau' (ID: 123794)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.03038959763944149
    2. ' front' → logprob: -3.5303895473480225
    3. 'dev' → logprob: -8.780389785766602
    4. '```' → logprob: -9.030389785766602
    5. '(front' → logprob: -9.905389785766602
    6. 'preced' → logprob: -10.030389785766602
    7. ' devant' → logprob: -10.030389785766602
    8. '_front' → logprob: -10.280389785766602
    9. 'frontend' → logprob: -10.405389785766602
    10. 'fr' → logprob: -10.780389785766602

Token 2343: ' devant' (ID: 37522)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.09510824084281921
    2. 'dev' → logprob: -2.4701082706451416
    3. 'i' → logprob: -6.2201080322265625
    4. '_front' → logprob: -6.8451080322265625
    5. ' devant' → logprob: -6.9701080322265625
    6. 'avant' → logprob: -7.9701080322265625
    7. 'dav' → logprob: -8.345108032226562
    8. ' front' → logprob: -8.345108032226562
    9. '   ' → logprob: -8.470108032226562
    10. '(front' → logprob: -8.595108032226562

Token 2344: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004760834388434887
    2. 'if' → logprob: -6.0047607421875
    3. ' if' → logprob: -6.5047607421875
    4. '            
' → logprob: -7.6297607421875
    5. '
' → logprob: -9.0047607421875
    6. ',' → logprob: -9.7547607421875
    7. 's' → logprob: -10.8797607421875
    8. '               ' → logprob: -11.1297607421875
    9. '            ' → logprob: -11.7547607421875
    10. ' ' → logprob: -11.8797607421875

Token 2345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003233070601709187
    2. ' if' → logprob: -8.875323295593262
    3. 'if' → logprob: -9.250323295593262
    4. '            
' → logprob: -10.000323295593262
    5. '               ' → logprob: -11.750323295593262
    6. '```' → logprob: -11.875323295593262
    7. '       ' → logprob: -12.125323295593262
    8. '          ' → logprob: -12.125323295593262
    9. '            ' → logprob: -12.250323295593262
    10. '           
' → logprob: -13.125323295593262

Token 2346: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34086304903030396
    2. 'if' → logprob: -1.8408629894256592
    3. '
' → logprob: -2.215862989425659
    4. 'distance' → logprob: -5.090863227844238
    5. ' if' → logprob: -5.215863227844238
    6. 'front' → logprob: -5.965863227844238
    7. 'dist' → logprob: -6.090863227844238
    8. '            
' → logprob: -6.590863227844238
    9. 'prev' → logprob: -7.090863227844238
    10. 'diff' → logprob: -7.840863227844238

Token 2347: ' Cas' (ID: 8066)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6621076464653015
    2. '           ' → logprob: -0.9121076464653015
    3. 'dist' → logprob: -3.2871077060699463
    4. 'distance' → logprob: -3.9121077060699463
    5. 'front' → logprob: -4.412107467651367
    6. 'pos' → logprob: -5.787107467651367
    7. 'delta' → logprob: -6.037107467651367
    8. ' if' → logprob: -6.287107467651367
    9. 'diff' → logprob: -6.662107467651367
    10. 'prev' → logprob: -6.912107467651367

Token 2348: ' vitesse' (ID: 71752)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2082147598266602
    2. '           ' → logprob: -1.5832147598266602
    3. ' where' → logprob: -1.8332147598266602
    4. ' if' → logprob: -1.9582147598266602
    5. ' où' → logprob: -2.33321475982666
    6. 'où' → logprob: -3.95821475982666
    7. ':' → logprob: -4.08321475982666
    8. 'if' → logprob: -4.33321475982666
    9. '                       ' → logprob: -4.33321475982666
    10. ' ' → logprob: -4.58321475982666

Token 2349: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22388076782226562
    2. ' =' → logprob: -1.7238807678222656
    3. ':' → logprob: -4.848880767822266
    4. '   ' → logprob: -5.348880767822266
    5. '[i' → logprob: -5.598880767822266
    6. 's' → logprob: -6.973880767822266
    7. '[' → logprob: -7.098880767822266
    8. 'max' → logprob: -7.348880767822266
    9. '[j' → logprob: -7.598880767822266
    10. 'i' → logprob: -7.848880767822266

Token 2350: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9075444340705872
    2. '[i' → logprob: -1.4075443744659424
    3. '=' → logprob: -1.9075443744659424
    4. '           ' → logprob: -2.9075443744659424
    5. 's' → logprob: -3.2825443744659424
    6. '_' → logprob: -3.5325443744659424
    7. ' if' → logprob: -4.2825446128845215
    8. '[' → logprob: -4.6575446128845215
    9. '_i' → logprob: -4.7825446128845215
    10. '       ' → logprob: -5.0325446128845215

Token 2351: ' i' (ID: 575)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.025955375283956528
    2. 'i' → logprob: -3.7759554386138916
    3. 'ships' → logprob: -7.0259552001953125
    4. 'dev' → logprob: -7.4009552001953125
    5. '```' → logprob: -7.6509552001953125
    6. 'ship' → logprob: -9.525955200195312
    7. 'boats' → logprob: -9.775955200195312
    8. 'avant' → logprob: -10.025955200195312
    9. ' front' → logprob: -10.025955200195312
    10. 'b' → logprob: -10.150955200195312

Token 2352: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6634783148765564
    2. '=' → logprob: -0.7884783148765564
    3. 'i' → logprob: -4.163478374481201
    4. '   ' → logprob: -5.413478374481201
    5. '_j' → logprob: -5.913478374481201
    6. 'j' → logprob: -6.663478374481201
    7. ':' → logprob: -6.913478374481201
    8. '_i' → logprob: -7.038478374481201
    9. ' i' → logprob: -7.538478374481201
    10. '=i' → logprob: -7.663478374481201

Token 2353: ' vitesse' (ID: 71752)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.05263347923755646
    2. ' front' → logprob: -3.80263352394104
    3. 'v' → logprob: -4.677633285522461
    4. '(front' → logprob: -5.302633285522461
    5. 'speed' → logprob: -5.927633285522461
    6. '```' → logprob: -6.677633285522461
    7. 'du' → logprob: -6.927633285522461
    8. 'de' → logprob: -7.052633285522461
    9. 'ships' → logprob: -7.177633285522461
    10. ' vitesse' → logprob: -7.177633285522461

Token 2354: ' du' (ID: 1462)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.29041942954063416
    2. 'front' → logprob: -2.415419340133667
    3. '[' → logprob: -2.665419340133667
    4. '=' → logprob: -2.915419340133667
    5. ' =' → logprob: -4.415419578552246
    6. '[max' → logprob: -4.665419578552246
    7. '_max' → logprob: -5.665419578552246
    8. ' max' → logprob: -5.665419578552246
    9. ' front' → logprob: -6.165419578552246
    10. '_front' → logprob: -6.290419578552246

Token 2355: ' devant' (ID: 37522)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'front' → logprob: -2.546478935983032e-05
    2. ' front' → logprob: -10.625025749206543
    3. '(front' → logprob: -14.250025749206543
    4. '```' → logprob: -15.750025749206543
    5. '
' → logprob: -16.500024795532227
    6. '   ' → logprob: -16.875024795532227
    7. 'frontend' → logprob: -17.000024795532227
    8. '.front' → logprob: -17.250024795532227
    9. '  ' → logprob: -17.250024795532227
    10. ' ' → logprob: -17.875024795532227

Token 2356: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7966636419296265
    2. 'if' → logprob: -2.296663761138916
    3. ' <=' → logprob: -2.421663761138916
    4. '=' → logprob: -2.546663761138916
    5. ':' → logprob: -2.921663761138916
    6. ' =' → logprob: -3.296663761138916
    7. '           ' → logprob: -3.796663761138916
    8. 'i' → logprob: -3.921663761138916
    9. ' >=' → logprob: -3.921663761138916
    10. 'max' → logprob: -3.921663761138916

Token 2357: ' i' (ID: 575)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.3838094472885132
    2. ' ships' → logprob: -1.6338094472885132
    3. 'front' → logprob: -3.3838095664978027
    4. 'i' → logprob: -3.7588095664978027
    5. 'v' → logprob: -4.633809566497803
    6. 'ship' → logprob: -4.758809566497803
    7. 'pos' → logprob: -4.758809566497803
    8. ' front' → logprob: -5.133809566497803
    9. '(front' → logprob: -5.133809566497803
    10. ' i' → logprob: -5.258809566497803

Token 2358: ' r' (ID: 428)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0086798667907715
    2. 's' → logprob: -1.0086798667907715
    3. ' >' → logprob: -2.6336798667907715
    4. 'V' → logprob: -3.1336798667907715
    5. 'pos' → logprob: -4.1336798667907715
    6. '_V' → logprob: -4.2586798667907715
    7. '<V' → logprob: -4.3836798667907715
    8. '>=' → logprob: -4.5086798667907715
    9. 'speed' → logprob: -4.5086798667907715
    10. 'max' → logprob: -4.7586798667907715

Token 2359: 'attr' (ID: 6035)
  Prédit: 'attr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.7282446026802063
    2. 'este' → logprob: -1.2282445430755615
    3. 'est' → logprob: -1.9782445430755615
    4. '>=' → logprob: -4.103244781494141
    5. '>' → logprob: -4.353244781494141
    6. 'e' → logprob: -4.603244781494141
    7. '<' → logprob: -4.603244781494141
    8. '<=' → logprob: -5.103244781494141
    9. 'app' → logprob: -5.853244781494141
    10. 'et' → logprob: -6.103244781494141

Token 2360: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.03015192784368992
    2. 'ap' → logprob: -4.280151844024658
    3. 'ope' → logprob: -5.405151844024658
    4. 'apte' → logprob: -5.655151844024658
    5. 'apé' → logprob: -5.905151844024658
    6. 'appe' → logprob: -6.405151844024658
    7. 'ace' → logprob: -6.780151844024658
    8. 'ait' → logprob: -7.655151844024658
    9. 'aper' → logprob: -7.780151844024658
    10. 'e' → logprob: -8.530152320861816

Token 2361: ' ->' (ID: 2747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1191511154174805
    2. ' i' → logprob: -1.7441511154174805
    3. ' front' → logprob: -2.7441511154174805
    4. '_' → logprob: -2.7441511154174805
    5. 'i' → logprob: -2.8691511154174805
    6. '=' → logprob: -3.1191511154174805
    7. ')' → logprob: -3.2441511154174805
    8. ' )' → logprob: -3.3691511154174805
    9. '(front' → logprob: -3.4941511154174805
    10. '_front' → logprob: -3.4941511154174805

Token 2362: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3785039186477661
    2. 'ships' → logprob: -1.3785039186477661
    3. ' speeds' → logprob: -1.5035039186477661
    4. 'spe' → logprob: -2.5035037994384766
    5. ' ships' → logprob: -2.6285037994384766
    6. ' if' → logprob: -3.3785037994384766
    7. 'True' → logprob: -4.003503799438477
    8. ' True' → logprob: -4.253503799438477
    9. 'min' → logprob: -4.253503799438477
    10. '   ' → logprob: -4.878503799438477

Token 2363: ' réduit' (ID: 120775)
  Prédit: '_speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.7614673972129822
    2. 's' → logprob: -2.136467456817627
    3. 'speed' → logprob: -2.511467456817627
    4. '=' → logprob: -2.511467456817627
    5. '_s' → logprob: -3.011467456817627
    6. ' =' → logprob: -3.261467456817627
    7. '_' → logprob: -3.261467456817627
    8. '_v' → logprob: -3.886467456817627
    9. ''s' → logprob: -4.136467456817627
    10. 'spe' → logprob: -4.136467456817627

Token 2364: ' sa' (ID: 880)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.9920700192451477
    2. '_' → logprob: -1.992069959640503
    3. '_speed' → logprob: -2.242069959640503
    4. ' sa' → logprob: -2.367069959640503
    5. ' vitesse' → logprob: -2.742069959640503
    6. ' la' → logprob: -2.867069959640503
    7. 's' → logprob: -4.117070198059082
    8. '```' → logprob: -4.117070198059082
    9. ' i' → logprob: -4.242070198059082
    10. 'i' → logprob: -4.367070198059082

Token 2365: ' vitesse' (ID: 71752)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03285813704133034
    2. ' vitesse' → logprob: -4.157858371734619
    3. 'speed' → logprob: -4.782858371734619
    4. '_v' → logprob: -5.407858371734619
    5. 'vit' → logprob: -5.782858371734619
    6. ' speed' → logprob: -8.407857894897461
    7. 'vite' → logprob: -8.532857894897461
    8. '```' → logprob: -9.157857894897461
    9. ' vit' → logprob: -9.657857894897461
    10. ' v' → logprob: -9.657857894897461

Token 2366: '

' (ID: 279)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.573448121547699
    2. '=' → logprob: -1.1984481811523438
    3. '           ' → logprob: -3.0734481811523438
    4. '<|end|>' → logprob: -3.8234481811523438
    5. '            
' → logprob: -4.698448181152344
    6. ' if' → logprob: -4.948448181152344
    7. ':' → logprob: -5.073448181152344
    8. '
' → logprob: -5.198448181152344
    9. '               ' → logprob: -5.323448181152344
    10. ' 
' → logprob: -5.448448181152344

Token 2367: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36234164237976074
    2. ' 
' → logprob: -2.1123416423797607
    3. ' ' → logprob: -3.6123416423797607
    4. '             
' → logprob: -3.8623416423797607
    5. ' ' → logprob: -3.9873416423797607
    6. '       ' → logprob: -4.23734188079834
    7. '         
' → logprob: -4.23734188079834
    8. '           
' → logprob: -4.36234188079834
    9. '     
' → logprob: -4.36234188079834
    10. '               ' → logprob: -4.86234188079834

Token 2368: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1678914576768875
    2. '
' → logprob: -2.792891502380371
    3. 'if' → logprob: -3.167891502380371
    4. 'front' → logprob: -3.542891502380371
    5. 'max' → logprob: -4.667891502380371
    6. '#' (adapté à ' #') → logprob: -5.292891502380371
    7. ' if' → logprob: -6.542891502380371
    8. 'v' → logprob: -6.917891502380371
    9. 'distance' → logprob: -6.917891502380371
    10. '   ' → logprob: -7.167891502380371

Token 2369: ' distance' (ID: 9324)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.21295110881328583
    2. 'dist' → logprob: -2.587951183319092
    3. 'if' → logprob: -2.712951183319092
    4. 'pos' → logprob: -4.837951183319092
    5. 'distance' → logprob: -4.837951183319092
    6. 'd' → logprob: -4.962951183319092
    7. '   ' → logprob: -5.212951183319092
    8. '#' → logprob: -5.337951183319092
    9. '       ' → logprob: -5.587951183319092
    10. 'v' → logprob: -5.587951183319092

Token 2370: ' actuelle' (ID: 104951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8620218634605408
    2. '_front' → logprob: -1.4870219230651855
    3. '=' → logprob: -1.6120219230651855
    4. '_av' → logprob: -2.8620219230651855
    5. '_' → logprob: -3.7370219230651855
    6. '_dev' → logprob: -4.2370219230651855
    7. '_between' → logprob: -4.4870219230651855
    8. 'dev' → logprob: -4.7370219230651855
    9. 'front' → logprob: -4.8620219230651855
    10. '_der' → logprob: -5.3620219230651855

Token 2371: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7072651982307434
    2. ' =' → logprob: -0.7072651982307434
    3. 'front' → logprob: -5.332265377044678
    4. '_front' → logprob: -5.832265377044678
    5. '   ' → logprob: -6.707265377044678
    6. 'dev' → logprob: -6.832265377044678
    7. '_av' → logprob: -7.082265377044678
    8. 'between' → logprob: -7.207265377044678
    9. '_between' → logprob: -8.33226490020752
    10. '_' → logprob: -8.33226490020752

Token 2372: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33033862709999084
    2. '=' → logprob: -1.3303385972976685
    3. '_between' → logprob: -5.205338478088379
    4. '_' → logprob: -5.330338478088379
    5. '_act' → logprob: -5.830338478088379
    6. '_front' → logprob: -6.580338478088379
    7. '_av' → logprob: -7.580338478088379
    8. '   ' → logprob: -8.080338478088379
    9. 'between' → logprob: -8.205338478088379
    10. '_der' → logprob: -8.705338478088379

Token 2373: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.011170546524226665
    2. 'distance' → logprob: -5.136170387268066
    3. 'gap' → logprob: -6.136170387268066
    4. ' dist' → logprob: -6.886170387268066
    5. 'd' → logprob: -7.136170387268066
    6. 'front' → logprob: -7.386170387268066
    7. 'delta' → logprob: -8.011170387268066
    8. '   ' → logprob: -9.011170387268066
    9. 'ahead' → logprob: -10.386170387268066
    10. ' ' → logprob: -10.761170387268066

Token 2374: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25343194603919983
    2. ' =' → logprob: -1.5034319162368774
    3. '_front' → logprob: -7.003431797027588
    4. '_' → logprob: -7.628431797027588
    5. ' ' → logprob: -11.003432273864746
    6. '_=' → logprob: -11.128432273864746
    7. '_between' → logprob: -11.253432273864746
    8. '   ' → logprob: -11.503432273864746
    9. '_act' → logprob: -12.128432273864746
    10. 'front' → logprob: -12.378432273864746

Token 2375: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -6.754368223482743e-05
    2. ' ships' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.375067710876465
    4. 'shops' → logprob: -15.250067710876465
    5. 'boats' → logprob: -16.12506675720215
    6. 'ship' → logprob: -16.25006675720215
    7. '(' → logprob: -16.25006675720215
    8. 'sh' → logprob: -17.12506675720215
    9. 'hips' → logprob: -17.25006675720215
    10. '  ' → logprob: -17.25006675720215

Token 2376: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04307112470269203
    2. '[i' → logprob: -3.1680710315704346
    3. 'front' → logprob: -10.418070793151855
    4. '[ind' → logprob: -12.168070793151855
    5. 'i' → logprob: -12.293070793151855
    6. '[idx' → logprob: -12.418070793151855
    7. 'dist' → logprob: -12.543070793151855
    8. '   ' → logprob: -12.543070793151855
    9. '(front' → logprob: -12.543070793151855
    10. '[
' → logprob: -13.293070793151855

Token 2377: 'front' (ID: 10313)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5778599381446838
    2. 'front' → logprob: -0.8278599381446838
    3. 'ships' → logprob: -7.202859878540039
    4. ' i' → logprob: -7.577859878540039
    5. ' front' → logprob: -7.952859878540039
    6. 'idx' → logprob: -9.077859878540039
    7. '   ' → logprob: -10.577859878540039
    8. '[i' → logprob: -10.827859878540039
    9. '(front' → logprob: -10.827859878540039
    10. '  ' → logprob: -11.265359878540039

Token 2378: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.06523073464632034
    2. '.pos' → logprob: -2.8152308464050293
    3. '[i' → logprob: -6.815230846405029
    4. '.idx' → logprob: -7.065230846405029
    5. '.i' → logprob: -7.815230846405029
    6. '[pos' → logprob: -8.440230369567871
    7. 'i' → logprob: -8.690230369567871
    8. '.index' → logprob: -8.940230369567871
    9. ']' → logprob: -9.315230369567871
    10. '[' → logprob: -9.565230369567871

Token 2379: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.128163257315464e-07
    2. ' pos' → logprob: -15.125
    3. '.pos' → logprob: -18.75
    4. '	pos' → logprob: -18.875
    5. 'position' → logprob: -19.375
    6. '(pos' → logprob: -20.125
    7. '_pos' → logprob: -20.375
    8. 'poss' → logprob: -20.625
    9. '```' → logprob: -20.75
    10. '   ' → logprob: -21.25

Token 2380: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023257825523614883
    2. '-' → logprob: -3.7732577323913574
    3. ' ' → logprob: -11.773258209228516
    4. '           ' → logprob: -13.773258209228516
    5. '   ' → logprob: -13.898258209228516
    6. ' ' → logprob: -14.398258209228516
    7. '  ' → logprob: -14.648258209228516
    8. '```' → logprob: -15.023258209228516
    9. ')' → logprob: -15.273258209228516
    10. '          ' → logprob: -15.398258209228516

Token 2381: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.002477796748280525
    2. ' ships' → logprob: -6.002477645874023
    3. 'ship' → logprob: -14.127477645874023
    4. '   ' → logprob: -14.752477645874023
    5. 'shops' → logprob: -15.627477645874023
    6. 'boats' → logprob: -15.627477645874023
    7. 'Ships' → logprob: -16.002477645874023
    8. '  ' → logprob: -16.002477645874023
    9. ' ' → logprob: -16.752477645874023
    10. 's' → logprob: -16.877477645874023

Token 2382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002614550176076591
    2. '[' → logprob: -8.250261306762695
    3. '[pos' → logprob: -16.375261306762695
    4. 'ships' → logprob: -17.375261306762695
    5. 'i' → logprob: -17.500261306762695
    6. ' ships' → logprob: -19.250261306762695
    7. '[x' → logprob: -19.375261306762695
    8. '[
' → logprob: -19.500261306762695
    9. 's' → logprob: -19.500261306762695
    10. 'pos' → logprob: -19.875261306762695

Token 2383: '].' (ID: 1651)
  Prédit: '.pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.005659048445522785
    2. '.' → logprob: -5.755659103393555
    3. '].' → logprob: -6.505659103393555
    4. ' .' → logprob: -7.505659103393555
    5. ').' → logprob: -8.630659103393555
    6. '[pos' → logprob: -9.380659103393555
    7. '>.' → logprob: -9.505659103393555
    8. '[' → logprob: -11.130659103393555
    9. '.user' → logprob: -11.380659103393555
    10. '}.' → logprob: -11.380659103393555

Token 2384: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.128163257315464e-07
    2. ' pos' → logprob: -15.75
    3. '1' → logprob: -16.0
    4. '0' → logprob: -18.375
    5. '_pos' → logprob: -18.625
    6. '	pos' → logprob: -18.875
    7. ' ' → logprob: -19.5
    8. 'Pos' → logprob: -19.625
    9. 'position' → logprob: -19.75
    10. '.pos' → logprob: -19.875

Token 2385: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1997424066066742
    2. ' if' → logprob: -1.9497424364089966
    3. 'if' → logprob: -4.199742317199707
    4. '       ' → logprob: -4.699742317199707
    5. '<|end|>' → logprob: -4.824742317199707
    6. ')' → logprob: -6.699742317199707
    7. ' ' → logprob: -7.574742317199707
    8. ' >=' → logprob: -7.699742317199707
    9. '>' → logprob: -7.824742317199707
    10. '               ' → logprob: -7.824742317199707

Token 2386: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00042768914136104286
    2. '       ' → logprob: -8.12542724609375
    3. ' if' → logprob: -10.25042724609375
    4. '   ' → logprob: -10.37542724609375
    5. ' ' → logprob: -11.37542724609375
    6. '
' → logprob: -11.37542724609375
    7. ' 
' → logprob: -11.62542724609375
    8. '               ' → logprob: -12.00042724609375
    9. '            
' → logprob: -12.00042724609375
    10. 'if' → logprob: -12.37542724609375

Token 2387: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034609194844961166
    2. 'if' → logprob: -3.409609079360962
    3. ' if' → logprob: -7.159609317779541
    4. '       ' → logprob: -8.909608840942383
    5. '
' → logprob: -11.034608840942383
    6. '   ' → logprob: -11.159608840942383
    7. '            
' → logprob: -11.534608840942383
    8. '               ' → logprob: -12.784608840942383
    9. ' ' → logprob: -12.909608840942383
    10. '          ' → logprob: -13.784608840942383

Token 2388: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003570343542378396
    2. ' if' → logprob: -8.375356674194336
    3. '           ' → logprob: -9.000356674194336
    4. 'If' → logprob: -13.000356674194336
    5. 'si' → logprob: -15.125356674194336
    6. '#' → logprob: -15.750356674194336
    7. '       ' → logprob: -16.125356674194336
    8. 'max' → logprob: -16.250356674194336
    9. 's' → logprob: -16.500356674194336
    10. 'Si' → logprob: -16.625356674194336

Token 2389: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.014167149551212788
    2. ' dist' → logprob: -4.264167308807373
    3. '	dist' → logprob: -13.639166831970215
    4. '(dist' → logprob: -13.764166831970215
    5. '   ' → logprob: -14.139166831970215
    6. ' ' → logprob: -15.389166831970215
    7. '  ' → logprob: -15.514166831970215
    8. ' ' → logprob: -15.889166831970215
    9. 'distance' → logprob: -16.01416778564453
    10. 'abs' → logprob: -17.26416778564453

Token 2390: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.863480806350708
    2. ' <' → logprob: -1.113480806350708
    3. '<=' → logprob: -1.613480806350708
    4. '<' → logprob: -2.988480806350708
    5. ' >=' → logprob: -9.113480567932129
    6. '>=' → logprob: -9.738480567932129
    7. ' ' → logprob: -10.238480567932129
    8. '   ' → logprob: -10.363480567932129
    9. 's' → logprob: -10.988480567932129
    10. ' >' → logprob: -11.613480567932129

Token 2391: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02324780821800232
    2. ' ' → logprob: -3.773247718811035
    3. '   ' → logprob: -14.148247718811035
    4. 'EPS' → logprob: -14.773247718811035
    5. ' ' → logprob: -14.898247718811035
    6. '=' → logprob: -15.273247718811035
    7. '  ' → logprob: -15.648247718811035
    8. '0' → logprob: -16.14824867248535
    9. ' EPS' → logprob: -16.14824867248535
    10. '+' → logprob: -16.77324867248535

Token 2392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012141639599576592
    2. ' ' → logprob: -6.751214027404785
    3. 'EPS' → logprob: -10.126214027404785
    4. ' EPS' → logprob: -13.626214027404785
    5. '(' → logprob: -14.001214027404785
    6. '0' → logprob: -14.376214027404785
    7. '   ' → logprob: -14.751214027404785
    8. '+' → logprob: -15.376214027404785
    9. '-' → logprob: -16.4387149810791
    10. ' ' → logprob: -16.4387149810791

Token 2393: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5832032561302185
    2. ' -' → logprob: -0.9582032561302185
    3. ':
' → logprob: -3.7082033157348633
    4. '-' → logprob: -4.208203315734863
    5. ':' → logprob: -4.333203315734863
    6. 'e' → logprob: -6.083203315734863
    7. '           ' → logprob: -6.333203315734863
    8. '+' → logprob: -7.708203315734863
    9. ' +' → logprob: -7.958203315734863
    10. '               ' → logprob: -8.833203315734863

Token 2394: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18777641654014587
    2. ' speeds' → logprob: -2.0627763271331787
    3. '           ' → logprob: -3.8127763271331787
    4. ' ' → logprob: -4.562776565551758
    5. 'spe' → logprob: -6.062776565551758
    6. 'vel' → logprob: -6.312776565551758
    7. '#' → logprob: -6.812776565551758
    8. ' #' → logprob: -7.187776565551758
    9. '                   ' → logprob: -7.312776565551758
    10. '        ' → logprob: -7.437776565551758

Token 2395: ' doit' (ID: 21822)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5311588644981384
    2. ' doit' → logprob: -1.7811589241027832
    3. '           ' → logprob: -2.156158924102783
    4. '=' → logprob: -3.281158924102783
    5. '   ' → logprob: -4.281158924102783
    6. ' must' → logprob: -4.531158924102783
    7. '#' → logprob: -4.781158924102783
    8. ' speeds' → logprob: -4.906158924102783
    9. ' =' → logprob: -4.906158924102783
    10. ' ' → logprob: -5.656158924102783

Token 2396: ' rou' (ID: 15191)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -1.1340397596359253
    2. 's' → logprob: -2.134039878845215
    3. '=' → logprob: -2.759039878845215
    4. 'redu' → logprob: -2.884039878845215
    5. 'mettre' → logprob: -3.134039878845215
    6. '_speed' → logprob: -3.134039878845215
    7. 're' → logprob: -3.259039878845215
    8. 'aller' → logprob: -3.384039878845215
    9. 'ré' → logprob: -3.759039878845215
    10. 'avoir' → logprob: -3.884039878845215

Token 2397: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.0403236486017704
    2. 'd' → logprob: -4.790323734283447
    3. 'l' → logprob: -5.165323734283447
    4. 'le' → logprob: -5.290323734283447
    5. 'ter' → logprob: -5.290323734283447
    6. 'dre' → logprob: -6.040323734283447
    7. 'er' → logprob: -6.790323734283447
    8. 'p' → logprob: -6.790323734283447
    9. 'ller' → logprob: -7.040323734283447
    10. 'e' → logprob: -7.165323734283447

Token 2398: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38052642345428467
    2. 's' → logprob: -2.130526542663574
    3. ' =' → logprob: -3.380526542663574
    4. '=s' → logprob: -3.380526542663574
    5. ' à' → logprob: -3.505526542663574
    6. '```' → logprob: -4.130526542663574
    7. ' at' → logprob: -4.255526542663574
    8. 'spe' → logprob: -4.505526542663574
    9. '<|end|>' → logprob: -5.130526542663574
    10. 'à' → logprob: -5.255526542663574

Token 2399: ' vitesse' (ID: 71752)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.684071958065033
    2. 'spe' → logprob: -0.934071958065033
    3. 'speed' → logprob: -2.4340720176696777
    4. 'v' → logprob: -5.309072017669678
    5. ' speeds' → logprob: -5.309072017669678
    6. ' ships' → logprob: -5.934072017669678
    7. 'min' → logprob: -7.434072017669678
    8. ' speed' → logprob: -7.934072017669678
    9. 'vel' → logprob: -8.05907154083252
    10. '```' → logprob: -8.18407154083252

Token 2400: ' du' (ID: 1462)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.13297680020332336
    2. ' ships' → logprob: -2.632976770401001
    3. '=' → logprob: -3.007976770401001
    4. ' =' → logprob: -6.75797700881958
    5. '```' → logprob: -7.88297700881958
    6. ' equal' → logprob: -8.632976531982422
    7. 'equal' → logprob: -8.632976531982422
    8. '`' → logprob: -8.882976531982422
    9. 'min' → logprob: -9.007976531982422
    10. 'boats' → logprob: -9.382976531982422

Token 2401: ' devant' (ID: 37522)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'front' → logprob: -3.2020991056924686e-05
    2. ' front' → logprob: -11.125032424926758
    3. 'ships' → logprob: -11.750032424926758
    4. '[' → logprob: -13.000032424926758
    5. '(front' → logprob: -13.000032424926758
    6. 'boats' → logprob: -13.250032424926758
    7. '```' → logprob: -13.375032424926758
    8. 'dev' → logprob: -15.125032424926758
    9. 'frontend' → logprob: -15.250032424926758
    10. 'fr' → logprob: -15.375032424926758

Token 2402: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07904236018657684
    2. '               ' → logprob: -3.329042434692383
    3. 's' → logprob: -4.829042434692383
    4. '                       ' → logprob: -5.329042434692383
    5. ' if' → logprob: -5.329042434692383
    6. '            
' → logprob: -5.454042434692383
    7. '                   ' → logprob: -5.954042434692383
    8. '
' → logprob: -6.204042434692383
    9. ',' → logprob: -6.204042434692383
    10. '       ' → logprob: -6.704042434692383

Token 2403: ' V' (ID: 631)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.012456557713449001
    2. 'ships' → logprob: -5.38745641708374
    3. 'i' → logprob: -6.26245641708374
    4. '(dist' → logprob: -6.38745641708374
    5. 'front' → logprob: -6.51245641708374
    6. ' dist' → logprob: -6.51245641708374
    7. 'v' → logprob: -8.387456893920898
    8. 'spe' → logprob: -8.387456893920898
    9. 'not' → logprob: -8.512456893920898
    10. ' ships' → logprob: -9.637456893920898

Token 2404: 'max' (ID: 3228)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.27108243107795715
    2. 'max' → logprob: -1.7710824012756348
    3. 'front' → logprob: -3.7710824012756348
    4. 'i' → logprob: -4.021082401275635
    5. '[i' → logprob: -4.271082401275635
    6. 's' → logprob: -5.896082401275635
    7. '_max' → logprob: -6.396082401275635
    8. 'speed' → logprob: -6.646082401275635
    9. 'itesse' → logprob: -6.771082401275635
    10. '_front' → logprob: -6.896082401275635

Token 2405: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1272149235010147
    2. '_' → logprob: -3.7522149085998535
    3. '>' → logprob: -3.8772149085998535
    4. '+' → logprob: -4.7522149085998535
    5. 'i' → logprob: -4.7522149085998535
    6. ' else' → logprob: -5.0022149085998535
    7. ' >' → logprob: -5.1272149085998535
    8. '>=' → logprob: -5.2522149085998535
    9. '[pos' → logprob: -5.6272149085998535
    10. '.' → logprob: -5.6272149085998535

Token 2406: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6827173233032227
    2. ' >=' → logprob: -1.0577173233032227
    3. '>' → logprob: -2.6827173233032227
    4. ' <' → logprob: -3.5577173233032227
    5. ' >' → logprob: -3.6827173233032227
    6. ' else' → logprob: -5.182717323303223
    7. '<' → logprob: -5.307717323303223
    8. 'else' → logprob: -5.682717323303223
    9. '_' → logprob: -6.182717323303223
    10. '<=' → logprob: -6.557717323303223

Token 2407: ' speed' (ID: 7733)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.03531887009739876
    2. 'spe' → logprob: -3.4103188514709473
    3. ' ships' → logprob: -7.035318851470947
    4. ' speeds' → logprob: -7.660318851470947
    5. '```' → logprob: -9.160319328308105
    6. 'speed' → logprob: -10.035319328308105
    7. 'ship' → logprob: -10.410319328308105
    8. 'dist' → logprob: -10.535319328308105
    9. '=' → logprob: -10.660319328308105
    10. '0' → logprob: -11.035319328308105

Token 2408: '_front' (ID: 56078)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.33775022625923157
    2. 's' → logprob: -1.3377501964569092
    3. '[' → logprob: -4.712750434875488
    4. 'es' → logprob: -5.212750434875488
    5. '_' → logprob: -5.337750434875488
    6. '[pos' → logprob: -6.587750434875488
    7. '_front' → logprob: -6.962750434875488
    8. 'i' → logprob: -7.837750434875488
    9. 'front' → logprob: -8.087750434875488
    10. ' front' → logprob: -8.712750434875488

Token 2409: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10054554790258408
    2. ' or' → logprob: -2.975545644760132
    3. ' else' → logprob: -3.725545644760132
    4. '               ' → logprob: -4.850545406341553
    5. ' and' → logprob: -5.475545406341553
    6. ',' → logprob: -6.225545406341553
    7. ':
' → logprob: -6.475545406341553
    8. 'else' → logprob: -6.850545406341553
    9. ':' → logprob: -7.350545406341553
    10. '```' → logprob: -7.475545406341553

Token 2410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5879825949668884
    2. ' else' → logprob: -0.9629825949668884
    3. '               ' → logprob: -3.337982654571533
    4. 'else' → logprob: -4.087982654571533
    5. '                       ' → logprob: -5.962982654571533
    6. '```' → logprob: -6.212982654571533
    7. ' if' → logprob: -6.337982654571533
    8. '                   ' → logprob: -6.712982654571533
    9. '                           ' → logprob: -7.587982654571533
    10. ' or' → logprob: -7.587982654571533

Token 2411: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4202471077442169
    2. 'if' (adapté à ' if') → logprob: -1.1702470779418945
    3. ' if' → logprob: -3.4202470779418945
    4. '               ' → logprob: -9.545247077941895
    5. '       ' → logprob: -11.670247077941895
    6. ' ' → logprob: -12.295247077941895
    7. '                   ' → logprob: -12.420247077941895
    8. 'If' → logprob: -12.420247077941895
    9. '```' → logprob: -12.420247077941895
    10. '   ' → logprob: -12.420247077941895

Token 2412: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.014176673255860806
    2. ' dist' → logprob: -4.264176845550537
    3. '(dist' → logprob: -12.514176368713379
    4. '   ' → logprob: -12.889176368713379
    5. '	dist' → logprob: -13.014176368713379
    6. 'spe' → logprob: -13.764176368713379
    7. 'd' → logprob: -13.764176368713379
    8. 'abs' → logprob: -14.139176368713379
    9. ' speeds' → logprob: -14.514176368713379
    10. '  ' → logprob: -14.639176368713379

Token 2413: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09163402020931244
    2. '<' → logprob: -2.5916340351104736
    3. ' <=' → logprob: -4.4666337966918945
    4. '<=' → logprob: -6.9666337966918945
    5. ' ' → logprob: -8.591633796691895
    6. '[' → logprob: -11.966633796691895
    7. ' ' → logprob: -12.091633796691895
    8. '   ' → logprob: -12.341633796691895
    9. '<E' → logprob: -12.341633796691895
    10. '<|end|>' → logprob: -12.591633796691895

Token 2414: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005948117468506098
    2. ' ' → logprob: -5.130948066711426
    3. 'EPS' → logprob: -11.130948066711426
    4. '   ' → logprob: -13.255948066711426
    5. ' EPS' → logprob: -13.630948066711426
    6. '(' → logprob: -14.380948066711426
    7. '0' → logprob: -14.755948066711426
    8. '  ' → logprob: -15.755948066711426
    9. '+' → logprob: -16.380949020385742
    10. '       ' → logprob: -16.505949020385742

Token 2415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001136881415732205
    2. ' ' → logprob: -7.501136779785156
    3. 'EPS' → logprob: -7.501136779785156
    4. '(' → logprob: -10.876136779785156
    5. '0' → logprob: -12.001136779785156
    6. ' EPS' → logprob: -12.376136779785156
    7. '   ' → logprob: -14.001136779785156
    8. ' (' → logprob: -14.751136779785156
    9. '  ' → logprob: -15.751136779785156
    10. '-' → logprob: -16.188636779785156

Token 2416: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6145471334457397
    2. '-' → logprob: -1.1145471334457397
    3. '-E' → logprob: -2.6145472526550293
    4. '.' → logprob: -2.8645472526550293
    5. 'e' → logprob: -8.739546775817871
    6. ':
' → logprob: -8.864546775817871
    7. '           ' → logprob: -8.864546775817871
    8. ':' → logprob: -8.989546775817871
    9. '   ' → logprob: -9.489546775817871
    10. ' ' → logprob: -9.614546775817871

Token 2417: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -1.1041145626222715e-05
    2. ' EPS' → logprob: -11.500011444091797
    3. '1' → logprob: -14.000011444091797
    4. '   ' → logprob: -18.875011444091797
    5. 'EP' → logprob: -19.250011444091797
    6. 'ESP' → logprob: -19.250011444091797
    7. 'eps' → logprob: -19.375011444091797
    8. ' ' → logprob: -21.000011444091797
    9. 'EOS' → logprob: -21.250011444091797
    10. '10' → logprob: -21.625011444091797

Token 2418: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.037497878074646
    2. ' and' → logprob: -1.287497878074646
    3. '           ' → logprob: -1.787497878074646
    4. ':' → logprob: -2.2874979972839355
    5. '               ' → logprob: -2.4124979972839355
    6. 'and' → logprob: -4.6624979972839355
    7. '       ' → logprob: -7.4124979972839355
    8. ',' → logprob: -8.412497520446777
    9. ' or' → logprob: -8.537497520446777
    10. '   ' → logprob: -8.912497520446777

Token 2419: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005928283790126443
    2. '           ' → logprob: -8.000593185424805
    3. '
' → logprob: -8.875593185424805
    4. '                   ' → logprob: -9.750593185424805
    5. '                
' → logprob: -11.125593185424805
    6. '```' → logprob: -11.625593185424805
    7. '                       ' → logprob: -11.875593185424805
    8. ' speeds' → logprob: -12.250593185424805
    9. '            
' → logprob: -12.750593185424805
    10. '			' → logprob: -12.875593185424805

Token 2420: ' #' (ID: 1069)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.3557778596878052
    2. '               ' → logprob: -1.3557778596878052
    3. ' speeds' → logprob: -3.3557777404785156
    4. '           ' → logprob: -5.480777740478516
    5. '                   ' → logprob: -7.105777740478516
    6. 'if' → logprob: -7.355777740478516
    7. 'speed' → logprob: -7.730777740478516
    8. '   ' → logprob: -8.355777740478516
    9. '                       ' → logprob: -9.480777740478516
    10. '              ' → logprob: -9.480777740478516

Token 2421: ' on' (ID: 402)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.0037529326509684324
    2. 'if' → logprob: -6.253752708435059
    3. '               ' → logprob: -7.128752708435059
    4. '           ' → logprob: -7.253752708435059
    5. ' speeds' → logprob: -8.878752708435059
    6. '#' → logprob: -9.628752708435059
    7. '                   ' → logprob: -9.753752708435059
    8. 'speed' → logprob: -10.628752708435059
    9. '                       ' → logprob: -12.253752708435059
    10. '   ' → logprob: -12.253752708435059

Token 2422: ' force' (ID: 9578)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.792944073677063
    2. '               ' → logprob: -1.792944073677063
    3. 's' → logprob: -1.917944073677063
    4. '                   ' → logprob: -2.7929439544677734
    5. '=' → logprob: -3.5429439544677734
    6. '           ' → logprob: -3.7929439544677734
    7. 'vel' → logprob: -4.542943954467773
    8. '
' → logprob: -4.792943954467773
    9. 've' → logprob: -4.917943954467773
    10. 'est' → logprob: -5.042943954467773

Token 2423: ' vitesse' (ID: 71752)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.20169350504875183
    2. ' speeds' → logprob: -1.7016935348510742
    3. '               ' → logprob: -9.201693534851074
    4. '           ' → logprob: -9.951693534851074
    5. 'speed' → logprob: -10.326693534851074
    6. 's' → logprob: -10.326693534851074
    7. '```' → logprob: -10.451693534851074
    8. '                   ' → logprob: -11.451693534851074
    9. 'vel' → logprob: -12.076693534851074
    10. '=s' → logprob: -12.076693534851074

Token 2424: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05351695045828819
    2. '=s' → logprob: -3.4285168647766113
    3. ' =' → logprob: -4.428516864776611
    4. 's' → logprob: -5.803516864776611
    5. '[s' → logprob: -6.428516864776611
    6. '               ' → logprob: -7.428516864776611
    7. ' speeds' → logprob: -7.428516864776611
    8. '           ' → logprob: -7.428516864776611
    9. '                   ' → logprob: -7.928516864776611
    10. '[' → logprob: -8.17851734161377

Token 2425: ' vitesse' (ID: 71752)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.0009295677882619202
    2. ' speeds' → logprob: -7.000929355621338
    3. 'speed' → logprob: -11.000929832458496
    4. '```' → logprob: -14.000929832458496
    5. '   ' → logprob: -15.500929832458496
    6. 'scores' → logprob: -16.12592887878418
    7. 'Spe' → logprob: -16.25092887878418
    8. '	s' → logprob: -17.12592887878418
    9. 'vel' → logprob: -17.87592887878418
    10. 's' → logprob: -18.00092887878418

Token 2426: ' du' (ID: 1462)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0031407589558511972
    2. 's' → logprob: -6.378140926361084
    3. '_front' → logprob: -7.503140926361084
    4. 'front' → logprob: -8.128140449523926
    5. '_' → logprob: -9.128140449523926
    6. '[s' → logprob: -9.628140449523926
    7. ' [' → logprob: -9.878140449523926
    8. '=' → logprob: -10.003140449523926
    9. '[i' → logprob: -10.003140449523926
    10. '[pos' → logprob: -10.253140449523926

Token 2427: ' devant' (ID: 37522)
  Prédit: 'front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.0019061435014009476
    2. 'ships' → logprob: -6.876905918121338
    3. ' front' → logprob: -7.376905918121338
    4. 'dev' → logprob: -8.876906394958496
    5. '(front' → logprob: -10.751906394958496
    6. 'boats' → logprob: -11.376906394958496
    7. ' ships' → logprob: -11.626906394958496
    8. 'fr' → logprob: -11.751906394958496
    9. 'preced' → logprob: -12.001906394958496
    10. '[' → logprob: -12.251906394958496

Token 2428: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7499921917915344
    2. '=' → logprob: -2.2499921321868896
    3. ' speeds' → logprob: -2.2499921321868896
    4. '                   ' → logprob: -2.6249921321868896
    5. ' =' → logprob: -2.6249921321868896
    6. '           ' → logprob: -2.8749921321868896
    7. 'spe' → logprob: -3.1249921321868896
    8. ' if' → logprob: -4.499992370605469
    9. 's' → logprob: -5.124992370605469
    10. '=s' → logprob: -5.124992370605469

Token 2429: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1361563354730606
    2. '                   ' → logprob: -2.8861563205718994
    3. '=' → logprob: -3.1361563205718994
    4. ' =' → logprob: -4.1361565589904785
    5. '                       ' → logprob: -5.3861565589904785
    6. ':
' → logprob: -6.1361565589904785
    7. '           ' → logprob: -6.8861565589904785
    8. '```' → logprob: -7.5111565589904785
    9. '=s' → logprob: -7.6361565589904785
    10. '.' → logprob: -7.7611565589904785

Token 2430: ' speeds' (ID: 40472)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.5507095456123352
    2. ' speeds' → logprob: -1.5507094860076904
    3. '               ' → logprob: -1.8007094860076904
    4. 'if' → logprob: -3.5507094860076904
    5. 'speed' → logprob: -4.5507097244262695
    6. ' if' → logprob: -5.8007097244262695
    7. '                   ' → logprob: -6.6757097244262695
    8. '           ' → logprob: -7.3007097244262695
    9. '```' → logprob: -7.5507097244262695
    10. 'vel' → logprob: -7.5507097244262695

Token 2431: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03297705948352814
    2. '[' → logprob: -3.7829771041870117
    3. '[pos' → logprob: -4.657977104187012
    4. '[s' → logprob: -8.907977104187012
    5. '=' → logprob: -10.782977104187012
    6. ' [' → logprob: -10.907977104187012
    7. '```' → logprob: -11.782977104187012
    8. ' =' → logprob: -13.282977104187012
    9. '[
' → logprob: -13.407977104187012
    10. '   ' → logprob: -13.407977104187012

Token 2432: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193408131599426
    2. ' =' → logprob: -1.5019340515136719
    3. '=s' → logprob: -12.626934051513672
    4. '[' → logprob: -14.251934051513672
    5. ')' → logprob: -14.751934051513672
    6. ']' → logprob: -15.876934051513672
    7. 's' → logprob: -16.126934051513672
    8. ']=' → logprob: -16.251934051513672
    9. '.' → logprob: -16.626934051513672
    10. '.=' → logprob: -16.626934051513672

Token 2433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005241937469691038
    2. ' =' → logprob: -5.255241870880127
    3. '=s' → logprob: -11.755242347717285
    4. '=

' → logprob: -16.63024139404297
    5. '=min' → logprob: -16.75524139404297
    6. '.=' → logprob: -16.75524139404297
    7. '=
' → logprob: -17.13024139404297
    8. '＝' → logprob: -17.63024139404297
    9. '[' → logprob: -18.25524139404297
    10. '.' → logprob: -18.38024139404297

Token 2434: ' min' (ID: 1349)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.0001979378139367327
    2. 'min' → logprob: -8.625198364257812
    3. ' speeds' → logprob: -11.000198364257812
    4. 'speed' → logprob: -14.125198364257812
    5. 'ships' → logprob: -14.250198364257812
    6. '   ' → logprob: -15.500198364257812
    7. 'Spe' → logprob: -16.625198364257812
    8. ' min' → logprob: -17.750198364257812
    9. '	s' → logprob: -18.500198364257812
    10. '```' → logprob: -18.625198364257812

Token 2435: '(' (ID: 7)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2524222731590271
    2. '(' → logprob: -1.5024223327636719
    3. 'spe' → logprob: -7.752422332763672
    4. 'ships' → logprob: -9.877422332763672
    5. '(speed' → logprob: -12.502422332763672
    6. 's' → logprob: -12.752422332763672
    7. '(ship' → logprob: -13.127422332763672
    8. ' speeds' → logprob: -13.877422332763672
    9. '(sp' → logprob: -14.002422332763672
    10. '(sh' → logprob: -14.752422332763672

Token 2436: 'ships' (ID: 23847)
  Prédit: 'ships'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.38700300455093384
    2. 'spe' → logprob: -1.137002944946289
    3. 's' → logprob: -10.637002944946289
    4. 'sh' → logprob: -11.137002944946289
    5. '   ' → logprob: -11.262002944946289
    6. '(s' → logprob: -11.387002944946289
    7. 'speed' → logprob: -11.512002944946289
    8. ' speeds' → logprob: -11.637002944946289
    9. ' ships' → logprob: -11.762002944946289
    10. '(' → logprob: -12.137002944946289

Token 2437: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.026662519201636314
    2. '[' → logprob: -3.651662588119507
    3. '[s' → logprob: -8.026662826538086
    4. '```' → logprob: -11.276662826538086
    5. 's' → logprob: -12.901662826538086
    6. '[left' → logprob: -13.151662826538086
    7. '   ' → logprob: -13.151662826538086
    8. '[right' → logprob: -13.401662826538086
    9. 'i' → logprob: -13.526662826538086
    10. '[max' → logprob: -13.526662826538086

Token 2438: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009701206348836422
    2. '.V' → logprob: -5.009701251983643
    3. '[' → logprob: -7.134701251983643
    4. '.' → logprob: -7.259701251983643
    5. '].' → logprob: -7.384701251983643
    6. ' .' → logprob: -7.759701251983643
    7. '[V' → logprob: -9.134700775146484
    8. '   ' → logprob: -9.634700775146484
    9. '[].' → logprob: -10.134700775146484
    10. '```' → logprob: -10.384700775146484

Token 2439: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.001967650605365634
    2. 'speed' → logprob: -6.251967430114746
    3. ' V' → logprob: -10.751967430114746
    4. '.V' → logprob: -13.001967430114746
    5. 'max' → logprob: -13.251967430114746
    6. '
' → logprob: -13.376967430114746
    7. '```' → logprob: -13.626967430114746
    8. ' ' → logprob: -13.626967430114746
    9. ' speed' → logprob: -13.751967430114746
    10. 'spe' → logprob: -13.876967430114746

Token 2440: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00012880703434348106
    2. 'ax' → logprob: -9.000128746032715
    3. '[max' → logprob: -13.250128746032715
    4. '[i' → logprob: -13.875128746032715
    5. 'Max' → logprob: -14.500128746032715
    6. ' max' → logprob: -14.625128746032715
    7. '[' → logprob: -15.250128746032715
    8. '_max' → logprob: -15.375128746032715
    9. '```' → logprob: -15.625128746032715
    10. 'ma' → logprob: -15.750128746032715

Token 2441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007521916180849075
    2. ',s' → logprob: -5.257522106170654
    3. ' ,' → logprob: -6.132522106170654
    4. 's' → logprob: -9.757521629333496
    5. ',
' → logprob: -9.882521629333496
    6. ' ,
' → logprob: -13.882521629333496
    7. '_,' → logprob: -14.132521629333496
    8. '           ' → logprob: -14.382521629333496
    9. '```' → logprob: -14.507521629333496
    10. '                   ' → logprob: -15.382521629333496

Token 2442: ' speeds' (ID: 40472)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.00020568605395965278
    2. ' speeds' → logprob: -8.500205993652344
    3. 'speed' → logprob: -13.375205993652344
    4. '   ' → logprob: -14.875205993652344
    5. 'ships' → logprob: -16.375205993652344
    6. 'scores' → logprob: -17.125205993652344
    7. 'Spe' → logprob: -17.500205993652344
    8. '```' → logprob: -18.250205993652344
    9. '           ' → logprob: -18.375205993652344
    10. '	s' → logprob: -18.750205993652344

Token 2443: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '[i' → logprob: -14.875000953674316
    3. ')[' → logprob: -15.500000953674316
    4. '```' → logprob: -15.500000953674316
    5. '   ' → logprob: -16.125001907348633
    6. ')' → logprob: -16.125001907348633
    7. '[in' → logprob: -16.750001907348633
    8. '.front' → logprob: -16.750001907348633
    9. ' [' → logprob: -17.000001907348633
    10. 'front' → logprob: -17.250001907348633

Token 2444: 'front' (ID: 10313)
  Prédit: 'front'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'front' → logprob: -0.12693671882152557
    2. '[' → logprob: -2.126936674118042
    3. '(front' → logprob: -12.876936912536621
    4. ' front' → logprob: -13.251936912536621
    5. '.front' → logprob: -13.501936912536621
    6. '[idx' → logprob: -13.626936912536621
    7. 'frontend' → logprob: -14.376936912536621
    8. '[i' → logprob: -15.126936912536621
    9. 'idx' → logprob: -15.376936912536621
    10. '_front' → logprob: -16.001935958862305

Token 2445: '])
' (ID: 5169)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029891647398471832
    2. '[i' → logprob: -3.6548917293548584
    3. '])' → logprob: -5.654891490936279
    4. ']' → logprob: -10.279891967773438
    5. 'i' → logprob: -11.654891967773438
    6. 'front' → logprob: -11.904891967773438
    7. '])
' → logprob: -11.904891967773438
    8. '.front' → logprob: -11.904891967773438
    9. '_front' → logprob: -12.529891967773438
    10. '   ' → logprob: -12.779891967773438

Token 2446: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4867720305919647
    2. 'else' → logprob: -1.986772060394287
    3. '           ' → logprob: -2.361772060394287
    4. '```' → logprob: -2.861772060394287
    5. ' else' → logprob: -3.361772060394287
    6. ')' → logprob: -4.611772060394287
    7. '<|end|>' → logprob: -4.611772060394287
    8. '=' → logprob: -4.736772060394287
    9. '                   ' → logprob: -4.861772060394287
    10. '                               ' → logprob: -5.861772060394287

Token 2447: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.18774567544460297
    2. '           ' → logprob: -1.8127456903457642
    3. ' else' → logprob: -4.937745571136475
    4. 'elif' → logprob: -7.687745571136475
    5. '               ' → logprob: -8.437746047973633
    6. '       ' → logprob: -9.312746047973633
    7. '```' → logprob: -11.312746047973633
    8. '	else' → logprob: -12.312746047973633
    9. ' elif' → logprob: -12.437746047973633
    10. '		' → logprob: -12.937746047973633

Token 2448: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15068967640399933
    2. '               ' → logprob: -2.1506896018981934
    3. ':' → logprob: -3.9006896018981934
    4. '           ' → logprob: -6.025689601898193
    5. '                   ' → logprob: -8.900690078735352
    6. ' :
' → logprob: -8.900690078735352
    7. 'if' → logprob: -9.275690078735352
    8. ' if' → logprob: -9.400690078735352
    9. '=' → logprob: -9.775690078735352
    10. '                       ' → logprob: -10.025690078735352

Token 2449: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006283254479058087
    2. '```' → logprob: -7.750628471374512
    3. '           ' → logprob: -8.750628471374512
    4. '                       ' → logprob: -11.250628471374512
    5. '                   ' → logprob: -11.500628471374512
    6. ' speeds' → logprob: -12.000628471374512
    7. '#' → logprob: -13.000628471374512
    8. '       ' → logprob: -13.625628471374512
    9. '                               ' → logprob: -14.000628471374512
    10. '``' → logprob: -14.000628471374512

Token 2450: ' #' (ID: 1069)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.31560221314430237
    2. '               ' → logprob: -1.31560218334198
    3. '           ' → logprob: -6.3156023025512695
    4. ' speeds' → logprob: -8.19060230255127
    5. '#' (adapté à ' #') → logprob: -9.56560230255127
    6. '       ' → logprob: -9.69060230255127
    7. '   ' → logprob: -9.94060230255127
    8. '```' → logprob: -10.69060230255127
    9. '                   ' → logprob: -10.94060230255127
    10. 'speed' → logprob: -11.44060230255127

Token 2451: ' distance' (ID: 9324)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.011376004666090012
    2. '               ' → logprob: -5.011375904083252
    3. ' speeds' → logprob: -5.886375904083252
    4. '           ' → logprob: -6.386375904083252
    5. '       ' → logprob: -9.88637638092041
    6. '   ' → logprob: -9.88637638092041
    7. '                   ' → logprob: -10.88637638092041
    8. 'speed' → logprob: -11.38637638092041
    9. '              ' → logprob: -11.51137638092041
    10. '#' → logprob: -11.51137638092041

Token 2452: ' ok' (ID: 4763)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20499786734580994
    2. '=' → logprob: -2.3299977779388428
    3. ' =' → logprob: -2.7049977779388428
    4. 's' → logprob: -3.9549977779388428
    5. 'spe' → logprob: -7.829998016357422
    6. '           ' → logprob: -7.954998016357422
    7. '   ' → logprob: -8.079998016357422
    8. '               ' → logprob: -8.329998016357422
    9. '=i' → logprob: -8.704998016357422
    10. 'i' → logprob: -8.829998016357422

Token 2453: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6231927275657654
    2. '               ' → logprob: -1.3731927871704102
    3. '=' → logprob: -2.74819278717041
    4. 's' → logprob: -2.99819278717041
    5. '=s' → logprob: -2.99819278717041
    6. 'spe' → logprob: -3.62319278717041
    7. '           ' → logprob: -5.37319278717041
    8. '```' → logprob: -5.62319278717041
    9. ' speeds' → logprob: -5.87319278717041
    10. '                   ' → logprob: -6.24819278717041

Token 2454: ' peut' (ID: 9216)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.07109712809324265
    2. ' speeds' → logprob: -2.6960971355438232
    3. '               ' → logprob: -7.196096897125244
    4. '           ' → logprob: -7.946096897125244
    5. 'speed' → logprob: -11.446097373962402
    6. '                   ' → logprob: -11.446097373962402
    7. '       ' → logprob: -12.196097373962402
    8. 's' → logprob: -12.196097373962402
    9. '```' → logprob: -12.321097373962402
    10. '   ' → logprob: -12.696097373962402

Token 2455: ' aller' (ID: 18383)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.24083136022090912
    2. ' speeds' → logprob: -1.7408313751220703
    3. 's' → logprob: -3.4908313751220703
    4. 'speed' → logprob: -5.86583137512207
    5. 'aller' → logprob: -6.74083137512207
    6. '   ' → logprob: -7.11583137512207
    7. '_speed' → logprob: -7.99083137512207
    8. '           ' → logprob: -8.11583137512207
    9. 'mettre' → logprob: -8.36583137512207
    10. '	speed' → logprob: -8.61583137512207

Token 2456: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.496502161026001
    2. ' à' → logprob: -1.371502161026001
    3. '   ' → logprob: -3.246502161026001
    4. '               ' → logprob: -3.246502161026001
    5. '           ' → logprob: -3.496502161026001
    6. 'jus' → logprob: -5.496501922607422
    7. ' full' → logprob: -5.746501922607422
    8. 'full' → logprob: -6.121501922607422
    9. ' speeds' → logprob: -6.121501922607422
    10. 'v' → logprob: -6.246501922607422

Token 2457: ' sa' (ID: 880)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.22805280983448029
    2. ' ships' → logprob: -1.6030528545379639
    3. ' speeds' → logprob: -6.478052616119385
    4. 'spe' → logprob: -7.103052616119385
    5. 'ship' → logprob: -8.728053092956543
    6. 'speed' → logprob: -10.478053092956543
    7. ' ' → logprob: -11.228053092956543
    8. 's' → logprob: -11.353053092956543
    9. '   ' → logprob: -11.603053092956543
    10. ' ' → logprob: -11.853053092956543

Token 2458: ' vitesse' (ID: 71752)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.389667272567749
    2. ' V' → logprob: -1.139667272567749
    3. 'max' → logprob: -6.639667510986328
    4. 's' → logprob: -7.764667510986328
    5. ' vitesse' → logprob: -8.389667510986328
    6. ' ' → logprob: -9.014667510986328
    7. 'speed' → logprob: -9.264667510986328
    8. '_V' → logprob: -9.264667510986328
    9. 'v' → logprob: -9.639667510986328
    10. '  ' → logprob: -9.639667510986328

Token 2459: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.48841938376426697
    2. ' max' → logprob: -0.9884194135665894
    3. ' maximale' → logprob: -5.488419532775879
    4. '[i' → logprob: -5.613419532775879
    5. ' i' → logprob: -6.113419532775879
    6. '_max' → logprob: -6.863419532775879
    7. ' maximal' → logprob: -6.988419532775879
    8. ' maximum' → logprob: -7.238419532775879
    9. 'i' → logprob: -7.738419532775879
    10. ' maxi' → logprob: -7.863419532775879

Token 2460: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0838627815246582
    2. '=' → logprob: -1.8338627815246582
    3. ' =' → logprob: -1.9588627815246582
    4. 'spe' → logprob: -2.208862781524658
    5. '           ' → logprob: -2.833862781524658
    6. '=s' → logprob: -2.958862781524658
    7. 's' → logprob: -3.083862781524658
    8. '```' → logprob: -3.333862781524658
    9. '
' → logprob: -4.083862781524658
    10. ' speeds' → logprob: -4.208862781524658

Token 2461: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006060097366571426
    2. '```' → logprob: -5.2560601234436035
    3. ' speeds' → logprob: -7.8810601234436035
    4. '                   ' → logprob: -8.381059646606445
    5. '                       ' → logprob: -10.256059646606445
    6. '``' → logprob: -10.631059646606445
    7. '           ' → logprob: -10.756059646606445
    8. 'spe' → logprob: -10.881059646606445
    9. 's' → logprob: -11.006059646606445
    10. '                
' → logprob: -11.381059646606445

Token 2462: ' speeds' (ID: 40472)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.06840328872203827
    2. ' speeds' → logprob: -2.8184032440185547
    3. '               ' → logprob: -5.318403244018555
    4. '                   ' → logprob: -6.943403244018555
    5. '```' → logprob: -8.068403244018555
    6. '           ' → logprob: -9.068403244018555
    7. '                       ' → logprob: -9.443403244018555
    8. '``' → logprob: -11.068403244018555
    9. 'scores' → logprob: -11.693403244018555
    10. 'speed' → logprob: -12.693403244018555

Token 2463: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.236549335066229e-05
    2. 's' → logprob: -11.250021934509277
    3. '=' → logprob: -12.125021934509277
    4. 'i' → logprob: -13.625021934509277
    5. '[' → logprob: -13.875021934509277
    6. ' =' → logprob: -14.625021934509277
    7. '```' → logprob: -14.750021934509277
    8. '   ' → logprob: -15.250021934509277
    9. '[
' → logprob: -15.875021934509277
    10. ' [' → logprob: -16.000022888183594

Token 2464: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2559337615966797
    2. ' =' → logprob: -1.5059337615966797
    3. '[i' → logprob: -5.63093376159668
    4. ']' → logprob: -8.13093376159668
    5. '   ' → logprob: -10.25593376159668
    6. ']=' → logprob: -10.50593376159668
    7. 's' → logprob: -10.88093376159668
    8. '=i' → logprob: -11.25593376159668
    9. ')' → logprob: -11.88093376159668
    10. '[' → logprob: -12.13093376159668

Token 2465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008315438753925264
    2. ' =' → logprob: -7.125831604003906
    3. '[i' → logprob: -10.875831604003906
    4. '   ' → logprob: -13.125831604003906
    5. '           ' → logprob: -13.125831604003906
    6. 's' → logprob: -13.375831604003906
    7. '               ' → logprob: -13.500831604003906
    8. '=s' → logprob: -14.250831604003906
    9. '=
' → logprob: -15.875831604003906
    10. '                   ' → logprob: -15.875831604003906

Token 2466: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.00020401719666551799
    2. ' ships' → logprob: -8.500204086303711
    3. 'ship' → logprob: -15.500204086303711
    4. 'float' → logprob: -16.00020408630371
    5. '   ' → logprob: -16.75020408630371
    6. 'shops' → logprob: -18.75020408630371
    7. 'boats' → logprob: -18.87520408630371
    8. 'Ships' → logprob: -19.37520408630371
    9. '           ' → logprob: -19.75020408630371
    10. 'hips' → logprob: -20.00020408630371

Token 2467: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. 'i' → logprob: -14.250001907348633
    3. '[' → logprob: -14.625001907348633
    4. '```' → logprob: -16.000001907348633
    5. '[I' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.750001907348633
    7. 's' → logprob: -16.750001907348633
    8. '_[' → logprob: -16.875001907348633
    9. '(i' → logprob: -17.125001907348633
    10. '_i' → logprob: -17.250001907348633

Token 2468: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0021709592547267675
    2. '.i' → logprob: -6.877171039581299
    3. '].' → logprob: -7.127171039581299
    4. ' .' → logprob: -9.00217056274414
    5. 'i' → logprob: -9.12717056274414
    6. '.' → logprob: -10.00217056274414
    7. '`.' → logprob: -11.37717056274414
    8. '][' → logprob: -11.87717056274414
    9. '[' → logprob: -12.00217056274414
    10. '   ' → logprob: -12.25217056274414

Token 2469: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.282920129597187e-05
    2. 'max' → logprob: -11.375012397766113
    3. 'speed' → logprob: -14.000012397766113
    4. ' V' → logprob: -15.500012397766113
    5. '```' → logprob: -16.87501335144043
    6. '`' → logprob: -17.25001335144043
    7. '.V' → logprob: -17.25001335144043
    8. '   ' → logprob: -17.25001335144043
    9. '  ' → logprob: -17.50001335144043
    10. '	V' → logprob: -17.75001335144043

Token 2470: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00014001218369230628
    2. 'ax' → logprob: -8.875140190124512
    3. ' max' → logprob: -17.000139236450195
    4. 'ma' → logprob: -17.875139236450195
    5. '_max' → logprob: -17.875139236450195
    6. '.max' → logprob: -18.750139236450195
    7. 'm' → logprob: -19.250139236450195
    8. 'Max' → logprob: -19.500139236450195
    9. 'mx' → logprob: -19.625139236450195
    10. 'spe' → logprob: -20.000139236450195

Token 2471: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2472: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016608551144599915
    2. '<|end|>' → logprob: -4.891608715057373
    3. '
' → logprob: -5.141608715057373
    4. '   ' → logprob: -6.391608715057373
    5. ' for' → logprob: -7.891608715057373
    6. 'for' → logprob: -8.391608238220215
    7. 'def' → logprob: -8.391608238220215
    8. '        
' → logprob: -8.516608238220215
    9. '           ' → logprob: -9.016608238220215
    10. '```' → logprob: -9.391608238220215

Token 2473: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.384525865316391
    2. '       ' → logprob: -1.2595258951187134
    3. 'if' → logprob: -3.759525775909424
    4. ' if' → logprob: -5.509525775909424
    5. '
' → logprob: -5.884525775909424
    6. '   ' → logprob: -6.384525775909424
    7. 'for' → logprob: -6.634525775909424
    8. '```' → logprob: -7.009525775909424
    9. '#' (adapté à ' #') → logprob: -7.634525775909424
    10. ' for' → logprob: -8.384526252746582

Token 2474: ' Mais' (ID: 13880)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11963774263858795
    2. '       ' → logprob: -3.1196377277374268
    3. '           ' → logprob: -3.3696377277374268
    4. '#' → logprob: -3.6196377277374268
    5. '   ' → logprob: -5.494637966156006
    6. 'for' → logprob: -6.619637966156006
    7. '
' → logprob: -7.244637966156006
    8. ' if' → logprob: -7.619637966156006
    9. 'schedule' → logprob: -8.744637489318848
    10. 'ships' → logprob: -9.119637489318848

Token 2475: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17836374044418335
    2. '           ' → logprob: -2.428363800048828
    3. '#' → logprob: -2.803363800048828
    4. ' if' → logprob: -4.678363800048828
    5. 'si' → logprob: -5.553363800048828
    6. ' si' → logprob: -7.428363800048828
    7. ' #' → logprob: -8.053363800048828
    8. '       ' → logprob: -8.928363800048828
    9. 's' → logprob: -9.178363800048828
    10. '               ' → logprob: -9.553363800048828

Token 2476: ' devant' (ID: 37522)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8690108060836792
    2. 'spe' → logprob: -0.8690108060836792
    3. ' speeds' → logprob: -2.6190109252929688
    4. 'ships' → logprob: -3.1190109252929688
    5. 'ship' → logprob: -3.4940109252929688
    6. ' dist' → logprob: -5.244010925292969
    7. ' ships' → logprob: -6.244010925292969
    8. 'speed' → logprob: -6.619010925292969
    9. ' ship' → logprob: -6.994010925292969
    10. 'abs' → logprob: -7.369010925292969

Token 2477: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4538809061050415
    2. 'spe' → logprob: -1.9538809061050415
    3. 'ships' → logprob: -2.078880786895752
    4. 'speed' → logprob: -3.953880786895752
    5. '   ' → logprob: -5.328880786895752
    6. 'positions' → logprob: -5.453880786895752
    7. ' s' → logprob: -5.578880786895752
    8. 'les' → logprob: -5.703880786895752
    9. '_' → logprob: -5.703880786895752
    10. 'pos' → logprob: -5.828880786895752

Token 2478: ' arrêté' (ID: 143709)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.03421979025006294
    2. 'dans' → logprob: -4.534219741821289
    3. 'None' → logprob: -5.409219741821289
    4. 'arr' → logprob: -5.409219741821289
    5. 'in' → logprob: -5.784219741821289
    6. 'ship' → logprob: -6.159219741821289
    7. 'stop' → logprob: -6.534219741821289
    8. '   ' → logprob: -7.034219741821289
    9. 'not' → logprob: -7.159219741821289
    10. '0' → logprob: -7.159219741821289

Token 2479: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.49228325486183167
    2. 'and' → logprob: -1.4922832250595093
    3. '           ' → logprob: -1.9922832250595093
    4. '               ' → logprob: -4.242283344268799
    5. ':
' → logprob: -4.742283344268799
    6. ' or' → logprob: -6.742283344268799
    7. ':' → logprob: -7.117283344268799
    8. ',' → logprob: -7.867283344268799
    9. 'et' → logprob: -8.11728286743164
    10. '==' → logprob: -8.24228286743164

Token 2480: 'v' (ID: 85)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.07101330161094666
    2. '0' → logprob: -3.9460132122039795
    3. 'ships' → logprob: -4.071013450622559
    4. 'dist' → logprob: -4.321013450622559
    5. ' speeds' → logprob: -4.571013450622559
    6. 'abs' → logprob: -5.446013450622559
    7. '   ' → logprob: -6.321013450622559
    8. 'eps' → logprob: -7.821013450622559
    9. 'speed' → logprob: -7.821013450622559
    10. 'EPS' → logprob: -8.321013450622559

Token 2481: 'itesse' (ID: 58831)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.08711210638284683
    2. 'ites' → logprob: -3.2121121883392334
    3. 'it' → logprob: -3.5871121883392334
    4. 'itesse' → logprob: -4.962111949920654
    5. '0' → logprob: -5.337111949920654
    6. 's' → logprob: -6.837111949920654
    7. 'Spe' → logprob: -7.712111949920654
    8. 'ides' → logprob: -7.712111949920654
    9. 'its' → logprob: -7.712111949920654
    10. 'ess' → logprob: -8.712112426757812

Token 2482: '=' (ID: 28)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09970325231552124
    2. '==' → logprob: -2.974703311920166
    3. '=' → logprob: -3.224703311920166
    4. ' ==' → logprob: -6.099703311920166
    5. '<' → logprob: -7.349703311920166
    6. '[' → logprob: -8.474702835083008
    7. ' <' → logprob: -8.724702835083008
    8. ' =' → logprob: -8.849702835083008
    9. '[j' → logprob: -9.474702835083008
    10. '           ' → logprob: -9.599702835083008

Token 2483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005450497264973819
    2. 'spe' → logprob: -7.625545024871826
    3. ' ' → logprob: -10.250545501708984
    4. '   ' → logprob: -11.750545501708984
    5. 'EPS' → logprob: -13.250545501708984
    6. 'eps' → logprob: -13.500545501708984
    7. ' speeds' → logprob: -13.625545501708984
    8. 's' → logprob: -14.000545501708984
    9. '```' → logprob: -14.063045501708984
    10. '  ' → logprob: -14.188045501708984

Token 2484: ')' (ID: 8)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3234833478927612
    2. '),' → logprob: -1.6984833478927612
    3. ' and' → logprob: -1.9484833478927612
    4. 'and' → logprob: -1.9484833478927612
    5. ',' → logprob: -2.448483467102051
    6. '):
' → logprob: -2.948483467102051
    7. ')' → logprob: -3.073483467102051
    8. ' or' → logprob: -3.198483467102051
    9. '               ' → logprob: -3.948483467102051
    10. ':
' → logprob: -4.573483467102051

Token 2485: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8473559617996216
    2. '           ' → logprob: -1.0973559617996216
    3. 'and' → logprob: -1.9723559617996216
    4. '               ' → logprob: -2.722355842590332
    5. ':
' → logprob: -3.597355842590332
    6. ':' → logprob: -5.472355842590332
    7. ' or' → logprob: -7.597355842590332
    8. ',' → logprob: -8.222355842590332
    9. 'et' → logprob: -8.972355842590332
    10. '```' → logprob: -9.347355842590332

Token 2486: ' distance' (ID: 9324)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.21924014389514923
    2. 'dist' → logprob: -1.9692401885986328
    3. ' speeds' → logprob: -3.344240188598633
    4. 'ships' → logprob: -4.094240188598633
    5. ' dist' → logprob: -6.219240188598633
    6. 'positions' → logprob: -7.344240188598633
    7. ' ships' → logprob: -7.469240188598633
    8. '(dist' → logprob: -7.594240188598633
    9. ' distances' → logprob: -8.344240188598633
    10. '#' → logprob: -8.719240188598633

Token 2487: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4347389340400696
    2. ' <' → logprob: -1.1847388744354248
    3. '[i' → logprob: -3.684738874435425
    4. '<i' → logprob: -4.059739112854004
    5. '<=' → logprob: -5.934739112854004
    6. ' <=' → logprob: -7.434739112854004
    7. 'i' → logprob: -8.559739112854004
    8. '>' → logprob: -8.809739112854004
    9. 's' → logprob: -9.059739112854004
    10. '   ' → logprob: -9.309739112854004

Token 2488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023529279977083206
    2. 'EPS' → logprob: -3.773529291152954
    3. ' ' → logprob: -9.023529052734375
    4. '0' → logprob: -9.398529052734375
    5. ' EPS' → logprob: -9.773529052734375
    6. '```' → logprob: -12.898529052734375
    7. '+' → logprob: -13.086029052734375
    8. '(E' → logprob: -13.148529052734375
    9. '(' → logprob: -13.148529052734375
    10. '<E' → logprob: -13.461029052734375

Token 2489: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2552742958068848
    2. ' -' → logprob: -1.2552742958068848
    3. '           ' → logprob: -1.6302742958068848
    4. '               ' → logprob: -2.5052742958068848
    5. ' and' → logprob: -2.8802742958068848
    6. '+' → logprob: -3.3802742958068848
    7. 'and' → logprob: -4.130274295806885
    8. ':
' → logprob: -4.130274295806885
    9. '-E' → logprob: -4.130274295806885
    10. ' +' → logprob: -5.255274295806885

Token 2490: ' vitesse' (ID: 71752)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09390617907047272
    2. ' speeds' → logprob: -2.7189061641693115
    3. 'spe' → logprob: -4.218906402587891
    4. '           ' → logprob: -4.968906402587891
    5. '#' → logprob: -7.968906402587891
    6. ' if' → logprob: -8.21890640258789
    7. 'if' → logprob: -8.34390640258789
    8. '              ' → logprob: -8.46890640258789
    9. 'vel' → logprob: -8.96890640258789
    10. '                   ' → logprob: -9.21890640258789

Token 2491: '=' (ID: 28)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.031243043020367622
    2. 's' → logprob: -3.531243085861206
    3. '=' → logprob: -6.531242847442627
    4. 'es' → logprob: -11.406243324279785
    5. ' =' → logprob: -12.406243324279785
    6. '[' → logprob: -12.656243324279785
    7. '=i' → logprob: -12.906243324279785
    8. '```' → logprob: -12.906243324279785
    9. '           ' → logprob: -13.031243324279785
    10. 'i' → logprob: -13.281243324279785

Token 2492: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027433646842837334
    2. 'spe' → logprob: -4.1524338722229
    3. 'min' → logprob: -4.6524338722229
    4. ' min' → logprob: -7.1524338722229
    5. ' ' → logprob: -7.4024338722229
    6. ' speeds' → logprob: -8.277433395385742
    7. 'dist' → logprob: -10.027433395385742
    8. 'max' → logprob: -11.027433395385742
    9. '```' → logprob: -11.152433395385742
    10. 'speed' → logprob: -11.277433395385742

Token 2493: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012926316820085049
    2. '               ' → logprob: -4.38792610168457
    3. '```' → logprob: -8.51292610168457
    4. ' =' → logprob: -9.51292610168457
    5. '=' → logprob: -10.13792610168457
    6. '       ' → logprob: -10.51292610168457
    7. 's' → logprob: -11.26292610168457
    8. ':
' → logprob: -12.13792610168457
    9. '[i' → logprob: -12.13792610168457
    10. ',' → logprob: -12.38792610168457

Token 2494: ' sinon' (ID: 52915)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9262979626655579
    2. '               ' → logprob: -1.176297903060913
    3. 'continue' → logprob: -1.801297903060913
    4. '#' → logprob: -3.301297903060913
    5. 'spe' → logprob: -3.676297903060913
    6. ' continue' → logprob: -4.176298141479492
    7. '```' → logprob: -4.676298141479492
    8. 'else' → logprob: -5.051298141479492
    9. 'contin' → logprob: -5.051298141479492
    10. 'pass' → logprob: -5.426298141479492

Token 2495: ' vitesse' (ID: 71752)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.39383548498153687
    2. ' speeds' → logprob: -1.1438355445861816
    3. '           ' → logprob: -5.393835544586182
    4. 'pass' → logprob: -7.518835544586182
    5. '               ' → logprob: -7.768835544586182
    6. ' continue' → logprob: -8.143835067749023
    7. ' pass' → logprob: -8.393835067749023
    8. 'continue' → logprob: -8.393835067749023
    9. 'break' → logprob: -8.518835067749023
    10. '0' → logprob: -9.143835067749023

Token 2496: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026022402569651604
    2. '[i' → logprob: -4.151022434234619
    3. ' =' → logprob: -5.651022434234619
    4. '=s' → logprob: -5.776022434234619
    5. 's' → logprob: -6.401022434234619
    6. '=i' → logprob: -6.526022434234619
    7. '           ' → logprob: -8.901021957397461
    8. '```' → logprob: -10.401021957397461
    9. '=max' → logprob: -12.276021957397461
    10. 'spe' → logprob: -12.526021957397461

Token 2497: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000660015270113945
    2. '               ' → logprob: -8.250659942626953
    3. '       ' → logprob: -8.500659942626953
    4. '
' → logprob: -9.500659942626953
    5. ' if' → logprob: -10.500659942626953
    6. '<|end|>' → logprob: -10.625659942626953
    7. '```' → logprob: -10.875659942626953
    8. '            
' → logprob: -10.875659942626953
    9. 'if' → logprob: -11.500659942626953
    10. '            

' → logprob: -12.875659942626953

Token 2498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048445411026477814
    2. '<|end|>' → logprob: -3.173445463180542
    3. '```' → logprob: -5.548445224761963
    4. '       ' → logprob: -7.173445224761963
    5. '
' → logprob: -8.798445701599121
    6. '<|end|>' → logprob: -8.798445701599121
    7. '            
' → logprob: -9.048445701599121
    8. '               ' → logprob: -9.173445701599121
    9. '          ' → logprob: -10.798445701599121
    10. '  
' → logprob: -10.923445701599121

Token 2499: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016978738829493523
    2. ' if' → logprob: -4.141978740692139
    3. 'if' (adapté à ' if') → logprob: -8.14197826385498
    4. '       ' → logprob: -8.64197826385498
    5. '               ' → logprob: -8.89197826385498
    6. ' 
' → logprob: -9.26697826385498
    7. '
' → logprob: -10.14197826385498
    8. ' ' → logprob: -10.26697826385498
    9. '```' → logprob: -10.51697826385498
    10. '   ' → logprob: -10.51697826385498

Token 2500: ' speeds' (ID: 40472)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.7987895011901855
    2. 'dist' → logprob: -1.0487895011901855
    3. ' speeds' → logprob: -1.7987895011901855
    4. ' dist' → logprob: -3.5487895011901855
    5. ' abs' → logprob: -6.1737895011901855
    6. 'abs' → logprob: -6.4237895011901855
    7. 'ships' → logprob: -7.7987895011901855
    8. '(dist' → logprob: -7.9237895011901855
    9. ' distances' → logprob: -8.673789978027344
    10. ' ' → logprob: -8.673789978027344

Token 2501: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0036047017201781273
    2. '[' → logprob: -5.628604888916016
    3. 'i' → logprob: -13.753604888916016
    4. '   ' → logprob: -14.128604888916016
    5. '==' → logprob: -14.753604888916016
    6. '```' → logprob: -14.878604888916016
    7. '=' → logprob: -15.753604888916016
    8. '[j' → logprob: -15.878604888916016
    9. ' [' → logprob: -16.003604888916016
    10. '[in' → logprob: -16.128604888916016

Token 2502: 'front' (ID: 10313)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017326531931757927
    2. '[i' → logprob: -4.142326354980469
    3. 'front' → logprob: -7.142326354980469
    4. ' i' → logprob: -8.267326354980469
    5. '   ' → logprob: -9.017326354980469
    6. '[' → logprob: -9.767326354980469
    7. '           ' → logprob: -11.017326354980469
    8. ' ' → logprob: -11.642326354980469
    9. '  ' → logprob: -11.892326354980469
    10. '       ' → logprob: -12.392326354980469

Token 2503: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016514752060174942
    2. '[' → logprob: -4.141514778137207
    3. '==' → logprob: -7.891514778137207
    4. '[pos' → logprob: -10.016514778137207
    5. ' ==' → logprob: -11.016514778137207
    6. ']' → logprob: -11.641514778137207
    7. '   ' → logprob: -11.891514778137207
    8. ' [' → logprob: -12.391514778137207
    9. ']==' → logprob: -12.766514778137207
    10. '=' → logprob: -12.766514778137207

Token 2504: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1837131232023239
    2. '[i' → logprob: -2.55871319770813
    3. ' ==' → logprob: -3.05871319770813
    4. '<' → logprob: -3.30871319770813
    5. ' <' → logprob: -5.308712959289551
    6. '[' → logprob: -6.808712959289551
    7. '<=' → logprob: -7.558712959289551
    8. '   ' → logprob: -8.80871295928955
    9. '<i' → logprob: -9.68371295928955
    10. ' <=' → logprob: -10.43371295928955

Token 2505: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0005171707598492503
    2. ' EPS' → logprob: -7.62551736831665
    3. '=' → logprob: -11.125516891479492
    4. '1' → logprob: -11.250516891479492
    5. '   ' → logprob: -14.500516891479492
    6. ' ' → logprob: -14.875516891479492
    7. 'eps' → logprob: -15.250516891479492
    8. 'ESP' → logprob: -15.750516891479492
    9. 'EP' → logprob: -16.500516891479492
    10. ' =' → logprob: -16.875516891479492

Token 2506: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6501917243003845
    2. '               ' → logprob: -0.9001917243003845
    3. '           ' → logprob: -3.2751917839050293
    4. ' and' → logprob: -4.025191783905029
    5. ':' → logprob: -4.650191783905029
    6. '==' → logprob: -6.150191783905029
    7. 'and' → logprob: -6.150191783905029
    8. '-' → logprob: -7.775191783905029
    9. '=' → logprob: -8.025191307067871
    10. '                   ' → logprob: -8.525191307067871

Token 2507: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09382294118404388
    2. ' dist' → logprob: -2.468822956085205
    3. 'spe' → logprob: -6.468822956085205
    4. '(dist' → logprob: -6.843822956085205
    5. '           ' → logprob: -7.093822956085205
    6. ' speeds' → logprob: -8.093822479248047
    7. '   ' → logprob: -8.218822479248047
    8. ' (' → logprob: -9.093822479248047
    9. 'd' → logprob: -9.218822479248047
    10. '(' → logprob: -9.343822479248047

Token 2508: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.8857490420341492
    2. ' <=' → logprob: -1.510749101638794
    3. '<' → logprob: -1.635749101638794
    4. ' <' → logprob: -1.760749101638794
    5. ' ' → logprob: -10.010748863220215
    6. '>' → logprob: -10.385748863220215
    7. '   ' → logprob: -10.885748863220215
    8. ' >' → logprob: -11.385748863220215
    9. '  ' → logprob: -12.760748863220215
    10. '>=' → logprob: -12.760748863220215

Token 2509: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04370509460568428
    2. ' ' → logprob: -3.1687049865722656
    3. '=' → logprob: -7.293704986572266
    4. ' =' → logprob: -11.668704986572266
    5. '   ' → logprob: -11.918704986572266
    6. '0' → logprob: -12.668704986572266
    7. '+' → logprob: -12.793704986572266
    8. '(' → logprob: -13.668704986572266
    9. '  ' → logprob: -14.668704986572266
    10. '    ' → logprob: -14.668704986572266

Token 2510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004833425919059664
    2. ' ' → logprob: -7.875483512878418
    3. '(' → logprob: -9.375483512878418
    4. '0' → logprob: -12.000483512878418
    5. '=' → logprob: -12.250483512878418
    6. '   ' → logprob: -12.625483512878418
    7. '2' → logprob: -14.125483512878418
    8. '+' → logprob: -14.375483512878418
    9. ' (' → logprob: -14.375483512878418
    10. 'EPS' → logprob: -14.375483512878418

Token 2511: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20081473886966705
    2. ' +' → logprob: -2.450814723968506
    3. '-' → logprob: -2.700814723968506
    4. ' -' → logprob: -3.575814723968506
    5. '   ' → logprob: -8.200815200805664
    6. '       ' → logprob: -9.325815200805664
    7. '-E' → logprob: -9.450815200805664
    8. ' ' → logprob: -9.575815200805664
    9. '           ' → logprob: -11.200815200805664
    10. '    ' → logprob: -11.325815200805664

Token 2512: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.004622968845069408
    2. ' EPS' → logprob: -5.379622936248779
    3. '0' → logprob: -14.379623413085938
    4. '1' → logprob: -14.504623413085938
    5. '   ' → logprob: -14.629623413085938
    6. ' ' → logprob: -14.629623413085938
    7. 'ESP' → logprob: -15.004623413085938
    8. 'EOS' → logprob: -16.004623413085938
    9. 'EP' → logprob: -16.254623413085938
    10. 'eps' → logprob: -16.504623413085938

Token 2513: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09308744966983795
    2. '               ' → logprob: -2.5930874347686768
    3. '           ' → logprob: -4.593087673187256
    4. ':' → logprob: -5.593087673187256
    5. ' and' → logprob: -9.718087196350098
    6. ' :
' → logprob: -9.968087196350098
    7. '                   ' → logprob: -10.718087196350098
    8. '       ' → logprob: -10.968087196350098
    9. '):
' → logprob: -10.968087196350098
    10. '   ' → logprob: -11.093087196350098

Token 2514: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.6656825866666622e-05
    2. '                
' → logprob: -11.87502670288086
    3. '			' → logprob: -12.62502670288086
    4. '```' → logprob: -12.62502670288086
    5. '           ' → logprob: -13.25002670288086
    6. 's' → logprob: -13.37502670288086
    7. '                   ' → logprob: -13.37502670288086
    8. '              ' → logprob: -13.75002670288086
    9. '	           ' → logprob: -13.75002670288086
    10. ' speeds' → logprob: -13.87502670288086

Token 2515: ' speeds' (ID: 40472)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23206715285778046
    2. ' speeds' → logprob: -1.9820671081542969
    3. 'spe' → logprob: -2.732067108154297
    4. '                   ' → logprob: -5.982067108154297
    5. '           ' → logprob: -7.232067108154297
    6. '                       ' → logprob: -8.232067108154297
    7. '```' → logprob: -8.607067108154297
    8. '   ' → logprob: -9.107067108154297
    9. 's' → logprob: -9.607067108154297
    10. '``' → logprob: -10.107067108154297

Token 2516: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0564331205387134e-05
    2. '=' → logprob: -12.00001049041748
    3. '           ' → logprob: -13.37501049041748
    4. '               ' → logprob: -14.00001049041748
    5. '                   ' → logprob: -14.50001049041748
    6. '[' → logprob: -14.62501049041748
    7. ' =' → logprob: -15.25001049041748
    8. ' [' → logprob: -15.37501049041748
    9. 'i' → logprob: -15.62501049041748
    10. '   ' → logprob: -15.62501049041748

Token 2517: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023477911949158
    2. ' =' → logprob: -1.910234808921814
    3. '   ' → logprob: -12.910234451293945
    4. '           ' → logprob: -13.285234451293945
    5. ']=' → logprob: -13.410234451293945
    6. ']' → logprob: -13.535234451293945
    7. '[' → logprob: -14.035234451293945
    8. ' ' → logprob: -14.285234451293945
    9. ')' → logprob: -14.410234451293945
    10. '       ' → logprob: -14.410234451293945

Token 2518: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008616345934569836
    2. ' =' → logprob: -4.7586164474487305
    3. '           ' → logprob: -13.88361644744873
    4. '       ' → logprob: -15.00861644744873
    5. '               ' → logprob: -15.38361644744873
    6. '                   ' → logprob: -15.75861644744873
    7. '   ' → logprob: -16.133615493774414
    8. '=
' → logprob: -17.258615493774414
    9. '	' → logprob: -17.633615493774414
    10. '*=' → logprob: -17.758615493774414

Token 2519: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.250004768371582
    4. 'min' → logprob: -16.7500057220459
    5. '```' → logprob: -18.0000057220459
    6. ' ' → logprob: -18.5000057220459
    7. '  ' → logprob: -18.5000057220459
    8. '۰' → logprob: -18.8750057220459
    9. '           ' → logprob: -19.2500057220459
    10. '               ' → logprob: -19.2500057220459

Token 2520: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. 'min' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.62500286102295
    4. '   ' → logprob: -16.000001907348633
    5. 'max' → logprob: -16.875001907348633
    6. '```' → logprob: -17.312501907348633
    7. ' ' → logprob: -18.062501907348633
    8. 'float' → logprob: -18.312501907348633
    9. '
' → logprob: -18.437501907348633
    10. '۰' → logprob: -18.500001907348633

Token 2521: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.842555426876061e-06
    2. '<|end|>' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -14.750004768371582
    4. '#' → logprob: -17.3750057220459
    5. ')' → logprob: -17.6250057220459
    6. '0' → logprob: -18.0000057220459
    7. '           ' → logprob: -18.1250057220459
    8. '```' → logprob: -18.1250057220459
    9. '[' → logprob: -18.2500057220459
    10. ' .' → logprob: -18.6250057220459

Token 2522: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '000' → logprob: -15.375
    3. ' ' → logprob: -17.125
    4. '       ' → logprob: -17.375
    5. '00' → logprob: -17.875
    6. '   ' → logprob: -18.375
    7. '```' → logprob: -18.75
    8. '        ' → logprob: -19.25
    9. '  ' → logprob: -19.25
    10. '.' → logprob: -19.25

Token 2523: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2524: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15471141040325165
    2. '       ' → logprob: -2.1547114849090576
    3. '           ' → logprob: -4.0297112464904785
    4. ' 
' → logprob: -6.2797112464904785
    5. '        
' → logprob: -6.4047112464904785
    6. '  
' → logprob: -6.4047112464904785
    7. '   ' → logprob: -6.9047112464904785
    8. '
' → logprob: -7.5297112464904785
    9. '    
' → logprob: -7.7797112464904785
    10. ' for' → logprob: -7.7797112464904785

Token 2525: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6259655952453613
    2. 'for' → logprob: -0.8759655952453613
    3. '
' → logprob: -3.3759655952453613
    4. '   ' → logprob: -4.750965595245361
    5. ' for' → logprob: -5.500965595245361
    6. '#' (adapté à ' #') → logprob: -7.000965595245361
    7. '        
' → logprob: -7.250965595245361
    8. '    
' → logprob: -9.375965118408203
    9. '  
' → logprob: -10.375965118408203
    10. '
' → logprob: -10.500965118408203

Token 2526: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005044196150265634
    2. '   ' → logprob: -7.875504493713379
    3. ' for' → logprob: -9.375504493713379
    4. 'def' → logprob: -11.250504493713379
    5. '       ' → logprob: -11.500504493713379
    6. 'changed' → logprob: -11.750504493713379
    7. '#' → logprob: -12.125504493713379
    8. '	for' → logprob: -13.500504493713379
    9. '
' → logprob: -13.750504493713379
    10. 'i' → logprob: -15.875504493713379

Token 2527: ' applique' (ID: 180579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18562856316566467
    2. '   ' → logprob: -2.310628652572632
    3. ' for' → logprob: -2.810628652572632
    4. '
' → logprob: -5.185628414154053
    5. 'def' → logprob: -6.685628414154053
    6. '  ' → logprob: -6.810628414154053
    7. ' ' → logprob: -7.560628414154053
    8. '       ' → logprob: -7.685628414154053
    9. '    
' → logprob: -8.310628890991211
    10. '    ' → logprob: -8.560628890991211

Token 2528: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5620726943016052
    2. '   ' → logprob: -2.18707275390625
    3. 'for' → logprob: -2.18707275390625
    4. '
' → logprob: -2.43707275390625
    5. '[i' → logprob: -3.31207275390625
    6. '_s' → logprob: -4.43707275390625
    7. ' for' → logprob: -4.43707275390625
    8. '[s' → logprob: -4.68707275390625
    9. '           ' → logprob: -4.93707275390625
    10. ' =' → logprob: -4.93707275390625

Token 2529: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01706920936703682
    2. 'for' → logprob: -4.892069339752197
    3. 'ships' → logprob: -4.892069339752197
    4. 'enumer' → logprob: -7.642069339752197
    5. '
' → logprob: -7.892069339752197
    6. ' range' → logprob: -8.392068862915039
    7. '#' → logprob: -9.267068862915039
    8. 'zip' → logprob: -9.267068862915039
    9. '```' → logprob: -9.392068862915039
    10. 'la' → logprob: -9.392068862915039

Token 2530: ''ordre' (ID: 124753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2599128484725952
    2. 'range' → logprob: -1.5099128484725952
    3. 'def' → logprob: -6.134912967681885
    4. 'ships' → logprob: -6.384912967681885
    5. 'ranges' → logprob: -7.384912967681885
    6. ' for' → logprob: -7.759912967681885
    7. ' range' → logprob: -7.884912967681885
    8. '
' → logprob: -7.884912967681885
    9. 'e' → logprob: -8.634912490844727
    10. 'temps' → logprob: -8.884912490844727

Token 2531: ' original' (ID: 4756)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6627836227416992
    2. '       ' → logprob: -0.7877836227416992
    3. '   ' → logprob: -5.037783622741699
    4. ' for' → logprob: -5.537783622741699
    5. '[idx' → logprob: -5.537783622741699
    6. '(idx' → logprob: -5.662783622741699
    7. 'idx' → logprob: -6.162783622741699
    8. '[i' → logprob: -6.537783622741699
    9. '(' → logprob: -6.787783622741699
    10. '```' → logprob: -6.912783622741699

Token 2532: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28538385033607483
    2. '[i' → logprob: -2.285383939743042
    3. '       ' → logprob: -2.660383939743042
    4. '(i' → logprob: -3.660383939743042
    5. '   ' → logprob: -4.160383701324463
    6. ' for' → logprob: -4.285383701324463
    7. '```' → logprob: -5.035383701324463
    8. '(' → logprob: -5.785383701324463
    9. '[' → logprob: -6.035383701324463
    10. '
' → logprob: -6.285383701324463

Token 2533: ' boats' (ID: 48347)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.019169529899954796
    2. 'ships' → logprob: -4.019169330596924
    3. 'spe' → logprob: -7.894169330596924
    4. 'idx' → logprob: -8.144169807434082
    5. 'for' → logprob: -8.519169807434082
    6. 'ranges' → logprob: -9.144169807434082
    7. '   ' → logprob: -11.269169807434082
    8. '
' → logprob: -12.019169807434082
    9. ' range' → logprob: -12.144169807434082
    10. '  ' → logprob: -12.144169807434082

Token 2534: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005413581384345889
    2. ' for' → logprob: -7.8755412101745605
    3. 'for' → logprob: -9.000541687011719
    4. '
' → logprob: -10.875541687011719
    5. '   ' → logprob: -11.875541687011719
    6. '<|end|>' → logprob: -13.000541687011719
    7. '        
' → logprob: -13.000541687011719
    8. '           ' → logprob: -13.500541687011719
    9. ',' → logprob: -13.875541687011719
    10. ' and' → logprob: -14.000541687011719

Token 2535: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1579960584640503
    2. ' for' → logprob: -1.1579960584640503
    3. '
' → logprob: -1.7829960584640503
    4. 'for' → logprob: -2.40799617767334
    5. '       ' → logprob: -2.90799617767334
    6. '    
' → logprob: -3.90799617767334
    7. ' 
' → logprob: -4.28299617767334
    8. '  
' → logprob: -4.65799617767334
    9. '        
' → logprob: -5.40799617767334
    10. '   
' → logprob: -5.90799617767334

Token 2536: ' changed' (ID: 9180)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020066337659955025
    2. '       ' → logprob: -4.020066261291504
    3. ' for' → logprob: -6.520066261291504
    4. '   ' → logprob: -7.770066261291504
    5. '	for' → logprob: -11.145066261291504
    6. '
' → logprob: -12.895066261291504
    7. '```' → logprob: -14.020066261291504
    8. ' ' → logprob: -14.270066261291504
    9. '        
' → logprob: -16.02006721496582
    10. '           ' → logprob: -16.14506721496582

Token 2537: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18434284627437592
    2. '=' → logprob: -2.059342861175537
    3. '_s' → logprob: -3.809342861175537
    4. 's' → logprob: -4.934342861175537
    5. '   ' → logprob: -5.809342861175537
    6. '_' → logprob: -6.059342861175537
    7. '_indices' → logprob: -7.059342861175537
    8. '[' → logprob: -7.184342861175537
    9. '=[]
' → logprob: -7.184342861175537
    10. '=[' → logprob: -7.434342861175537

Token 2538: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.008686667308211327
    2. ' False' → logprob: -4.758686542510986
    3. '[' → logprob: -9.758687019348145
    4. '   ' → logprob: -11.383687019348145
    5. ' [' → logprob: -14.383687019348145
    6. '       ' → logprob: -14.508687019348145
    7. '(False' → logprob: -14.883687019348145
    8. '0' → logprob: -14.883687019348145
    9. '[]' → logprob: -15.008687019348145
    10. 'any' → logprob: -15.258687019348145

Token 2539: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4195875823497772
    2. ' for' → logprob: -1.7945876121520996
    3. '       ' → logprob: -2.2945876121520996
    4. '
' → logprob: -3.1695876121520996
    5. '   ' → logprob: -3.5445876121520996
    6. '	for' → logprob: -6.4195876121521
    7. '        
' → logprob: -7.2945876121521
    8. '```' → logprob: -7.4195876121521
    9. ' 
' → logprob: -7.9195876121521
    10. '<|end|>' → logprob: -7.9195876121521

Token 2540: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8438430428504944
    2. 'for' → logprob: -0.8438430428504944
    3. '
' → logprob: -2.0938429832458496
    4. '   ' → logprob: -4.96884298324585
    5. '	for' → logprob: -5.46884298324585
    6. ' 
' → logprob: -5.96884298324585
    7. '    
' → logprob: -7.09384298324585
    8. '```' → logprob: -7.09384298324585
    9. '       ' → logprob: -7.34384298324585
    10. '  
' → logprob: -8.843843460083008

Token 2541: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005103797884657979
    2. '       ' → logprob: -8.250510215759277
    3. ' for' → logprob: -8.500510215759277
    4. '   ' → logprob: -10.000510215759277
    5. '
' → logprob: -15.375510215759277
    6. '	for' → logprob: -16.000511169433594
    7. '           ' → logprob: -18.375511169433594
    8. ' ' → logprob: -18.625511169433594
    9. '  ' → logprob: -20.125511169433594
    10. '```' → logprob: -20.500511169433594

Token 2542: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016638736706227064
    2. ' i' → logprob: -6.501663684844971
    3. 'j' → logprob: -9.376664161682129
    4. 'idx' → logprob: -10.001664161682129
    5. '   ' → logprob: -10.626664161682129
    6. '       ' → logprob: -13.376664161682129
    7. ' j' → logprob: -13.876664161682129
    8. '	i' → logprob: -14.126664161682129
    9. ' ' → logprob: -14.376664161682129
    10. ' idx' → logprob: -14.501664161682129

Token 2543: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995777040719986
    2. 'in' → logprob: -2.694957733154297
    3. ' ' → logprob: -11.944957733154297
    4. ',' → logprob: -12.069957733154297
    5. '	in' → logprob: -12.319957733154297
    6. '  ' → logprob: -13.569957733154297
    7. '   ' → logprob: -14.069957733154297
    8. ' ,' → logprob: -14.194957733154297
    9. '<|end|>' → logprob: -14.944957733154297
    10. 's' → logprob: -14.944957733154297

Token 2544: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. 'idx' → logprob: -17.000036239624023
    4. '   ' → logprob: -18.750036239624023
    5. '(range' → logprob: -19.750036239624023
    6. 'M' → logprob: -19.875036239624023
    7. '	range' → logprob: -20.500036239624023
    8. '```' → logprob: -21.250036239624023
    9. 'ranges' → logprob: -21.375036239624023
    10. '  ' → logprob: -21.375036239624023

Token 2545: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00046332005877047777
    2. ' M' → logprob: -8.125463485717773
    3. '(M' → logprob: -8.750463485717773
    4. '   ' → logprob: -11.875463485717773
    5. '0' → logprob: -13.625463485717773
    6. '	M' → logprob: -15.375463485717773
    7. '       ' → logprob: -15.500463485717773
    8. '           ' → logprob: -16.250463485717773
    9. ' ' → logprob: -16.750463485717773
    10. 'range' → logprob: -17.250463485717773

Token 2546: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08668118715286255
    2. '       ' → logprob: -3.0866811275482178
    3. '):' → logprob: -4.461681365966797
    4. '   ' → logprob: -4.586681365966797
    5. ':
' → logprob: -5.461681365966797
    6. ',' → logprob: -5.586681365966797
    7. ':' → logprob: -6.086681365966797
    8. '           ' → logprob: -6.336681365966797
    9. ' ):
' → logprob: -6.711681365966797
    10. '<|end|>' → logprob: -8.336681365966797

Token 2547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06276994198560715
    2. ' if' → logprob: -2.937769889831543
    3. 'if' → logprob: -5.437769889831543
    4. '```' → logprob: -7.062769889831543
    5. '	       ' → logprob: -7.562769889831543
    6. '            
' → logprob: -7.687769889831543
    7. '<|end|>' → logprob: -7.687769889831543
    8. '               ' → logprob: -8.437769889831543
    9. '       ' → logprob: -9.187769889831543
    10. '    
' → logprob: -9.312769889831543

Token 2548: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09255684912204742
    2. ' if' → logprob: -2.467556953430176
    3. '           ' → logprob: -6.342556953430176
    4. '       ' → logprob: -7.092556953430176
    5. 'old' → logprob: -7.967556953430176
    6. 'new' → logprob: -8.717556953430176
    7. '   ' → logprob: -8.717556953430176
    8. 's' → logprob: -9.342556953430176
    9. 'prev' → logprob: -9.592556953430176
    10. 'ships' → logprob: -9.717556953430176

Token 2549: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.3816685378551483
    2. 'abs' → logprob: -1.2566685676574707
    3. ' speeds' → logprob: -3.7566685676574707
    4. 'ships' → logprob: -5.131668567657471
    5. ' ships' → logprob: -6.256668567657471
    6. 'spe' → logprob: -6.631668567657471
    7. '(abs' → logprob: -9.256668090820312
    8. ' ' → logprob: -11.256668090820312
    9. ' ' → logprob: -11.381668090820312
    10. ' not' → logprob: -11.381668090820312

Token 2550: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038307130336761475
    2. '(s' → logprob: -3.2883071899414062
    3. 'ships' → logprob: -8.788307189941406
    4. '(ship' → logprob: -9.288307189941406
    5. 'spe' → logprob: -11.663307189941406
    6. '(sh' → logprob: -12.913307189941406
    7. '(sp' → logprob: -13.163307189941406
    8. '((' → logprob: -13.413307189941406
    9. 's' → logprob: -13.413307189941406
    10. '(scores' → logprob: -13.538307189941406

Token 2551: 'pe' (ID: 424)
  Prédit: 'hips'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hips' → logprob: -0.06767214834690094
    2. 'ships' → logprob: -3.3176722526550293
    3. 'pe' → logprob: -4.317672252655029
    4. 'peed' → logprob: -5.692672252655029
    5. '(' → logprob: -5.942672252655029
    6. 's' → logprob: -6.317672252655029
    7. '[' → logprob: -6.942672252655029
    8. 'h' → logprob: -7.192672252655029
    9. '(s' → logprob: -7.192672252655029
    10. ' ships' → logprob: -7.442672252655029

Token 2552: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -0.3132866322994232
    2. 'ed' → logprob: -1.3132866621017456
    3. 'd' → logprob: -11.813286781311035
    4. 'ds' → logprob: -12.438286781311035
    5. 'eps' → logprob: -12.938286781311035
    6. 'cs' → logprob: -13.188286781311035
    7. '   ' → logprob: -13.188286781311035
    8. 'e' → logprob: -13.438286781311035
    9. 'ech' → logprob: -13.438286781311035
    10. '```' → logprob: -14.313286781311035

Token 2553: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. ' [' → logprob: -16.75
    4. '[
' → logprob: -18.5
    5. '   ' → logprob: -18.625
    6. '(i' → logprob: -18.875
    7. '
' → logprob: -19.0
    8. '```' → logprob: -19.0
    9. ' ' → logprob: -19.375
    10. 'i' → logprob: -19.5

Token 2554: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6596350073814392
    2. '[i' → logprob: -0.7846350073814392
    3. '-' → logprob: -3.659635066986084
    4. '[' → logprob: -7.284635066986084
    5. ' ' → logprob: -9.659634590148926
    6. ']' → logprob: -10.784634590148926
    7. ')' → logprob: -10.909634590148926
    8. 'speed' → logprob: -10.909634590148926
    9. '```' → logprob: -11.034634590148926
    10. '           ' → logprob: -11.034634590148926

Token 2555: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38690075278282166
    2. ' -' → logprob: -1.136900782585144
    3. '[i' → logprob: -11.261900901794434
    4. ' ' → logprob: -11.761900901794434
    5. '   ' → logprob: -13.136900901794434
    6. '-
' → logprob: -13.261900901794434
    7. '-s' → logprob: -13.261900901794434
    8. '[' → logprob: -14.136900901794434
    9. ' -
' → logprob: -14.136900901794434
    10. '-i' → logprob: -14.261900901794434

Token 2556: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -1.1472419600977446e-06
    2. ' ships' → logprob: -13.750000953674316
    3. '   ' → logprob: -20.375001907348633
    4. 'ship' → logprob: -21.000001907348633
    5. 'hips' → logprob: -21.250001907348633
    6. 'Ships' → logprob: -21.500001907348633
    7. 's' → logprob: -22.000001907348633
    8. 'shops' → logprob: -22.250001907348633
    9. 'sh' → logprob: -22.875001907348633
    10. 'boats' → logprob: -23.500001907348633

Token 2557: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. 's' → logprob: -12.250005722045898
    3. 'i' → logprob: -15.125005722045898
    4. '[' → logprob: -15.125005722045898
    5. '```' → logprob: -15.375005722045898
    6. '[
' → logprob: -16.3750057220459
    7. '
' → logprob: -17.3750057220459
    8. '[s' → logprob: -17.6250057220459
    9. ' ' → logprob: -18.0000057220459
    10. ' [' → logprob: -18.2500057220459

Token 2558: '].' (ID: 1651)
  Prédit: '.speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.007295670453459024
    2. '.' → logprob: -5.257295608520508
    3. ' .' → logprob: -6.257295608520508
    4. '.velocity' → logprob: -9.757295608520508
    5. '.space' → logprob: -10.507295608520508
    6. '].' → logprob: -10.882295608520508
    7. ').' → logprob: -11.757295608520508
    8. '.s' → logprob: -12.257295608520508
    9. '.score' → logprob: -12.382295608520508
    10. '​.' → logprob: -12.382295608520508

Token 2559: 'speed' (ID: 42880)
  Prédit: 'speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -3.531315314830863e-06
    2. ' speed' → logprob: -12.750003814697266
    3. '.speed' → logprob: -15.000003814697266
    4. '	speed' → logprob: -15.625003814697266
    5. 'velocity' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.375003814697266
    7. 'spe' → logprob: -17.625003814697266
    8. '(speed' → logprob: -18.125003814697266
    9. '```' → logprob: -18.500003814697266
    10. '_speed' → logprob: -18.625003814697266

Token 2560: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008638797327876091
    2. ')>' → logprob: -4.758638858795166
    3. '>' → logprob: -11.508638381958008
    4. ' )' → logprob: -12.008638381958008
    5. ' >' → logprob: -12.258638381958008
    6. '           ' → logprob: -13.758638381958008
    7. '>)' → logprob: -14.258638381958008
    8. '[' → logprob: -14.758638381958008
    9. '）' → logprob: -15.383638381958008
    10. ')>=' → logprob: -15.383638381958008

Token 2561: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6932058334350586
    2. ' >' → logprob: -0.6932058334350586
    3. ')>' → logprob: -10.693205833435059
    4. '           ' → logprob: -11.693205833435059
    5. ')' → logprob: -12.068205833435059
    6. '()>' → logprob: -12.068205833435059
    7. ' ' → logprob: -12.568205833435059
    8. '   ' → logprob: -13.193205833435059
    9. ' >
' → logprob: -13.443205833435059
    10. '[' → logprob: -13.443205833435059

Token 2562: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.018173474818468094
    2. ' EPS' → logprob: -4.018173694610596
    3. '1' → logprob: -11.018173217773438
    4. ' ' → logprob: -12.643173217773438
    5. 'EP' → logprob: -13.393173217773438
    6. 'ESP' → logprob: -13.768173217773438
    7. '   ' → logprob: -14.143173217773438
    8. 'EPT' → logprob: -16.143173217773438
    9. 'eps' → logprob: -16.518173217773438
    10. '       ' → logprob: -16.518173217773438

Token 2563: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.49258890748023987
    2. ':' → logprob: -1.2425888776779175
    3. '           ' → logprob: -2.867588996887207
    4. '               ' → logprob: -3.867588996887207
    5. '=' → logprob: -4.492588996887207
    6. ' and' → logprob: -5.617588996887207
    7. '       ' → logprob: -5.742588996887207
    8. '):
' → logprob: -6.617588996887207
    9. ' =' → logprob: -8.117588996887207
    10. ' :
' → logprob: -8.117588996887207

Token 2564: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6080230474472046
    2. '           ' → logprob: -0.8580230474472046
    3. '=' → logprob: -5.358023166656494
    4. ' ships' → logprob: -5.358023166656494
    5. ' =' → logprob: -5.608023166656494
    6. '                               ' → logprob: -5.733023166656494
    7. '```' → logprob: -5.733023166656494
    8. '                       ' → logprob: -6.108023166656494
    9. '<|end|>' → logprob: -6.233023166656494
    10. '            
' → logprob: -6.858023166656494

Token 2565: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' (adapté à ' ships') → logprob: -0.5808393359184265
    2. '               ' → logprob: -0.8308393359184265
    3. ' ships' → logprob: -5.580839157104492
    4. '           ' → logprob: -7.330839157104492
    5. '   ' → logprob: -8.455839157104492
    6. '       ' → logprob: -8.955839157104492
    7. '                   ' → logprob: -9.455839157104492
    8. 'ship' → logprob: -11.455839157104492
    9. '```' → logprob: -11.580839157104492
    10. '              ' → logprob: -12.455839157104492

Token 2566: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001266613689949736
    2. '[' → logprob: -9.000126838684082
    3. '```' → logprob: -14.125126838684082
    4. 'i' → logprob: -14.125126838684082
    5. '[
' → logprob: -14.625126838684082
    6. ' [' → logprob: -14.750126838684082
    7. '<|end|>' → logprob: -15.375126838684082
    8. ' ' → logprob: -15.875126838684082
    9. '   ' → logprob: -16.500125885009766
    10. 's' → logprob: -16.500125885009766

Token 2567: '].' (ID: 1651)
  Prédit: '.speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.261528342962265
    2. '.' → logprob: -1.5115283727645874
    3. '].' → logprob: -5.011528491973877
    4. ' .' → logprob: -6.511528491973877
    5. ').' → logprob: -7.636528491973877
    6. '[i' → logprob: -8.261528015136719
    7. '.velocity' → logprob: -9.011528015136719
    8. '           ' → logprob: -9.261528015136719
    9. '   ' → logprob: -9.636528015136719
    10. '.space' → logprob: -10.011528015136719

Token 2568: 'speed' (ID: 42880)
  Prédit: 'speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -1.2664456789934775e-06
    2. ' speed' → logprob: -13.750000953674316
    3. '.speed' → logprob: -16.250001907348633
    4. 'velocity' → logprob: -16.875001907348633
    5. '	speed' → logprob: -17.500001907348633
    6. '(speed' → logprob: -18.875001907348633
    7. '_speed' → logprob: -19.500001907348633
    8. '速度' → logprob: -20.750001907348633
    9. 'set' → logprob: -21.500001907348633
    10. '```' → logprob: -22.000001907348633

Token 2569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740773141384125
    2. ' =' → logprob: -0.9740773439407349
    3. '=s' → logprob: -15.224077224731445
    4. '＝' → logprob: -16.349077224731445
    5. ' ' → logprob: -17.849077224731445
    6. '.=' → logprob: -17.849077224731445
    7. ',' → logprob: -18.224077224731445
    8. '=

' → logprob: -19.599077224731445
    9. ' =)' → logprob: -19.724077224731445
    10. ' =
' → logprob: -19.724077224731445

Token 2570: ' speeds' (ID: 40472)
  Prédit: 'spe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spe' → logprob: -0.00409419322386384
    2. ' speeds' → logprob: -5.504094123840332
    3. 'speed' → logprob: -11.754094123840332
    4. 'scores' → logprob: -13.629094123840332
    5. '               ' → logprob: -13.754094123840332
    6. '           ' → logprob: -14.004094123840332
    7. 'Spe' → logprob: -14.379094123840332
    8. '          ' → logprob: -14.504094123840332
    9. '              ' → logprob: -14.504094123840332
    10. '```' → logprob: -14.629094123840332

Token 2571: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5213274309644476e-05
    2. '[' → logprob: -11.625015258789062
    3. ' [' → logprob: -12.875015258789062
    4. 'i' → logprob: -12.875015258789062
    5. '(i' → logprob: -14.625015258789062
    6. ' i' → logprob: -15.500015258789062
    7. '```' → logprob: -15.875015258789062
    8. '[
' → logprob: -16.125015258789062
    9. '   ' → logprob: -17.625015258789062
    10. '	i' → logprob: -17.625015258789062

Token 2572: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11223568022251129
    2. '<|end|>' → logprob: -2.3622357845306396
    3. '           ' → logprob: -5.2372355461120605
    4. '<|end|>' → logprob: -6.1122355461120605
    5. ')' → logprob: -6.6122355461120605
    6. '       ' → logprob: -7.1122355461120605
    7. '                   ' → logprob: -7.1122355461120605
    8. '                
' → logprob: -7.6122355461120605
    9. ',' → logprob: -8.362236022949219
    10. '   ' → logprob: -9.612236022949219

Token 2573: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003384422743692994
    2. '<|end|>' → logprob: -8.125338554382324
    3. '                
' → logprob: -11.000338554382324
    4. '```' → logprob: -11.500338554382324
    5. '           ' → logprob: -12.750338554382324
    6. '                   ' → logprob: -13.125338554382324
    7. '       ' → logprob: -13.250338554382324
    8. '		       ' → logprob: -13.625338554382324
    9. '<|end|>' → logprob: -13.625338554382324
    10. '              ' → logprob: -13.875338554382324

Token 2574: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' (adapté à ' changed') → logprob: -0.03937561437487602
    2. '               ' → logprob: -3.2893755435943604
    3. 'adjust' → logprob: -7.1643757820129395
    4. 'schedule' → logprob: -8.414375305175781
    5. ' changed' → logprob: -8.539375305175781
    6. 'change' → logprob: -9.789375305175781
    7. 'for' → logprob: -10.164375305175781
    8. '           ' → logprob: -11.539375305175781
    9. '#' → logprob: -12.039375305175781
    10. '       ' → logprob: -12.164375305175781

Token 2575: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04762100428342819
    2. ' =' → logprob: -3.797621011734009
    3. '               ' → logprob: -4.17262077331543
    4. '           ' → logprob: -5.54762077331543
    5. '=True' → logprob: -6.54762077331543
    6. '                   ' → logprob: -6.92262077331543
    7. '       ' → logprob: -7.29762077331543
    8. '   ' → logprob: -8.04762077331543
    9. '              ' → logprob: -8.79762077331543
    10. 'if' → logprob: -8.79762077331543

Token 2576: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00015860427811276168
    2. ' True' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.125158309936523
    4. '(True' → logprob: -19.500158309936523
    5. '           ' → logprob: -20.125158309936523
    6. '       ' → logprob: -20.250158309936523
    7. 'true' → logprob: -20.375158309936523
    8. 'False' → logprob: -20.625158309936523
    9. '               ' → logprob: -20.750158309936523
    10. '    ' → logprob: -21.750158309936523

Token 2577: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2578: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21380598843097687
    2. '<|end|>' → logprob: -2.088805913925171
    3. '
' → logprob: -3.588805913925171
    4. '       ' → logprob: -4.33880615234375
    5. '	if' → logprob: -4.46380615234375
    6. 'if' → logprob: -5.58880615234375
    7. ' if' → logprob: -5.58880615234375
    8. '	return' → logprob: -5.83880615234375
    9. '    
' → logprob: -5.96380615234375
    10. '```' → logprob: -7.33880615234375

Token 2579: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22604556381702423
    2. 'if' → logprob: -1.7260456085205078
    3. '       ' → logprob: -4.476045608520508
    4. 'return' (adapté à ' return') → logprob: -5.226045608520508
    5. ' if' → logprob: -5.476045608520508
    6. '
' → logprob: -6.351045608520508
    7. '	if' → logprob: -6.976045608520508
    8. '    
' → logprob: -7.726045608520508
    9. '	return' → logprob: -9.101045608520508
    10. '        
' → logprob: -10.476045608520508

Token 2580: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' → logprob: -0.0020734101999551058
    2. ' changed' → logprob: -6.252073287963867
    3. 'current' → logprob: -9.127073287963867
    4. 'None' → logprob: -10.627073287963867
    5. 'adjust' → logprob: -12.002073287963867
    6. ' current' → logprob: -13.127073287963867
    7. '   ' → logprob: -13.502073287963867
    8. ' None' → logprob: -14.127073287963867
    9. 'change' → logprob: -14.252073287963867
    10. 'True' → logprob: -15.127073287963867

Token 2581: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2582: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.433711975812912
    2. 'def' → logprob: -2.1837120056152344
    3. '<|end|>' → logprob: -2.3087120056152344
    4. '
' → logprob: -2.8087120056152344
    5. '#' → logprob: -3.4337120056152344
    6. '    
' → logprob: -4.558712005615234
    7. ' 
' → logprob: -4.808712005615234
    8. ':' → logprob: -5.183712005615234
    9. ')' → logprob: -5.308712005615234
    10. '<|end|>' → logprob: -5.808712005615234

Token 2583: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2176206260919571
    2. '   ' → logprob: -1.967620611190796
    3. 'def' → logprob: -3.217620611190796
    4. '#' (adapté à ' #') → logprob: -4.717620849609375
    5. 'current' → logprob: -5.467620849609375
    6. '
' → logprob: -6.842620849609375
    7. ' while' → logprob: -7.092620849609375
    8. 'next' → logprob: -8.217620849609375
    9. '    
' → logprob: -8.592620849609375
    10. '```' → logprob: -9.592620849609375

Token 2584: ' On' (ID: 2160)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.017006754875183
    2. 'while' → logprob: -1.517006754875183
    3. '#' → logprob: -1.642006754875183
    4. 'time' → logprob: -2.2670068740844727
    5. 'def' → logprob: -2.7670068740844727
    6. '   ' → logprob: -2.8920068740844727
    7. 'for' → logprob: -6.642006874084473
    8. 'cur' → logprob: -7.517006874084473
    9. 'next' → logprob: -7.767006874084473
    10. '
' → logprob: -7.892006874084473

Token 2585: ' doit' (ID: 21822)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08656947314739227
    2. '#' → logprob: -2.9615695476531982
    3. '   ' → logprob: -4.336569309234619
    4. 'for' → logprob: -4.961569309234619
    5. '=' → logprob: -6.211569309234619
    6. '       ' → logprob: -6.336569309234619
    7. ' =' → logprob: -7.336569309234619
    8. 'adjust' → logprob: -7.336569309234619
    9. 'while' → logprob: -7.586569309234619
    10. ' def' → logprob: -7.586569309234619

Token 2586: ' gérer' (ID: 86786)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.3280813694000244
    2. '   ' → logprob: -1.8280813694000244
    3. 'initial' → logprob: -3.3280813694000244
    4. '#' → logprob: -3.5780813694000244
    5. 'def' → logprob: -3.8280813694000244
    6. 'continue' → logprob: -4.453081130981445
    7. ' continuer' → logprob: -4.828081130981445
    8. 'init' → logprob: -5.953081130981445
    9. 'repr' → logprob: -6.453081130981445
    10. '       ' → logprob: -6.453081130981445

Token 2587: ' aussi' (ID: 9894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029735224321484566
    2. 'def' → logprob: -4.404735088348389
    3. '<|end|>' → logprob: -5.529735088348389
    4. '#' → logprob: -6.029735088348389
    5. '```' → logprob: -6.654735088348389
    6. '...' → logprob: -6.654735088348389
    7. 'le' → logprob: -7.029735088348389
    8. 'the' → logprob: -7.154735088348389
    9. '  ' → logprob: -7.279735088348389
    10. 'l' → logprob: -7.279735088348389

Token 2588: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7360998392105103
    2. '#' → logprob: -1.4860998392105103
    3. 'la' → logprob: -2.3610997200012207
    4. 'def' → logprob: -2.6110997200012207
    5. 'les' → logprob: -3.1110997200012207
    6. 'le' → logprob: -3.1110997200012207
    7. 'l' → logprob: -3.3610997200012207
    8. ' la' → logprob: -6.986099720001221
    9. '  ' → logprob: -7.986099720001221
    10. ' les' → logprob: -8.236100196838379

Token 2589: ' appels' (ID: 133870)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.549605131149292
    2. 'positions' → logprob: -1.799605131149292
    3. 'def' → logprob: -2.174605131149292
    4. 'pass' → logprob: -3.424605131149292
    5. 'pos' → logprob: -3.924605131149292
    6. 'for' → logprob: -4.049605369567871
    7. 'dé' → logprob: -4.799605369567871
    8. 'position' → logprob: -4.924605369567871
    9. 'g' → logprob: -5.049605369567871
    10. 'events' → logprob: -5.299605369567871

Token 2590: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35636284947395325
    2. 'de' → logprob: -2.106362819671631
    3. '   ' → logprob: -2.856362819671631
    4. 'schedule' → logprob: -3.231362819671631
    5. 'à' → logprob: -3.356362819671631
    6. '_schedule' → logprob: -4.231362819671631
    7. 'simulate' → logprob: -5.231362819671631
    8. '_de' → logprob: -5.481362819671631
    9. 'to' → logprob: -5.731362819671631
    10. 's' → logprob: -5.731362819671631

Token 2591: ' rec' (ID: 1369)
  Prédit: 'schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'schedule' → logprob: -1.5470807552337646
    2. 'aj' → logprob: -2.4220807552337646
    3. ' schedule' → logprob: -2.4220807552337646
    4. ' ' → logprob: -2.5470807552337646
    5. 'advance' → logprob: -2.5470807552337646
    6. 'adjust' → logprob: -2.6720807552337646
    7. '#' → logprob: -2.6720807552337646
    8. 'l' → logprob: -3.0470807552337646
    9. 'update' → logprob: -3.0470807552337646
    10. '   ' → logprob: -3.2970807552337646

Token 2592: 'aler' (ID: 13534)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.08969888836145401
    2. 'aler' → logprob: -3.2146987915039062
    3. 'ale' → logprob: -4.089698791503906
    4. 'alc' → logprob: -4.089698791503906
    5. 'alculate' → logprob: -5.464698791503906
    6. 'he' → logprob: -6.464698791503906
    7. 'her' → logprob: -6.589698791503906
    8. 'uler' → logprob: -6.839698791503906
    9. 'on' → logprob: -7.089698791503906
    10. 'alu' → logprob: -8.589698791503906

Token 2593: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7709020376205444
    2. '   ' → logprob: -2.145902156829834
    3. '_s' → logprob: -2.395902156829834
    4. 'def' → logprob: -2.645902156829834
    5. 'l' → logprob: -3.020902156829834
    6. '_' → logprob: -3.020902156829834
    7. 's' → logprob: -3.145902156829834
    8. 'positions' → logprob: -4.270902156829834
    9. 'v' → logprob: -4.395902156829834
    10. 'le' → logprob: -4.770902156829834

Token 2594: ' év' (ID: 23692)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.9869582056999207
    2. 'positions' → logprob: -1.3619582653045654
    3. 'v' → logprob: -1.6119582653045654
    4. 'vit' → logprob: -2.7369582653045654
    5. 'ships' → logprob: -2.9869582653045654
    6. 'events' → logprob: -3.7369582653045654
    7. 'ev' → logprob: -4.736958026885986
    8. 'spe' → logprob: -5.111958026885986
    9. 'pos' → logprob: -6.111958026885986
    10. 'temps' → logprob: -6.236958026885986

Token 2595: 'ènements' (ID: 178488)
  Prédit: 'ènements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ènements' → logprob: -0.030576448887586594
    2. 'ents' → logprob: -4.030576229095459
    3. 'è' → logprob: -5.780576229095459
    4. 'én' → logprob: -6.030576229095459
    5. 'èn' → logprob: -6.030576229095459
    6. 'ènement' → logprob: -6.405576229095459
    7. 'éments' → logprob: -7.405576229095459
    8. 'ên' → logprob: -7.655576229095459
    9. 'ements' → logprob: -7.780576229095459
    10. 'énement' → logprob: -8.280576705932617

Token 2596: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02629217319190502
    2. '   ' → logprob: -3.901292085647583
    3. '
' → logprob: -5.901292324066162
    4. ' def' → logprob: -6.526292324066162
    5. '<|end|>' → logprob: -7.026292324066162
    6. '    
' → logprob: -8.151291847229004
    7. '<|end|>' → logprob: -9.026291847229004
    8. '#' → logprob: -9.276291847229004
    9. '	def' → logprob: -10.901291847229004
    10. '...' → logprob: -11.151291847229004

Token 2597: ' arrivée' (ID: 117487)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10482441633939743
    2. 'position' → logprob: -3.4798243045806885
    3. 'temps' → logprob: -3.9798243045806885
    4. 'bate' → logprob: -4.479824542999268
    5. 'm' → logprob: -4.729824542999268
    6. 'dé' → logprob: -4.729824542999268
    7. 'positions' → logprob: -5.479824542999268
    8. 'pos' → logprob: -5.979824542999268
    9. 'movement' → logprob: -6.229824542999268
    10. 'vit' → logprob: -6.479824542999268

Token 2598: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5461761355400085
    2. '<|end|>' → logprob: -1.1711761951446533
    3. '
' → logprob: -3.0461761951446533
    4. '<|end|>' → logprob: -3.1711761951446533
    5. 'def' → logprob: -4.546175956726074
    6. '    
' → logprob: -4.671175956726074
    7. '...' → logprob: -8.046175956726074
    8. '#' → logprob: -8.546175956726074
    9. '

' → logprob: -8.796175956726074
    10. ')' → logprob: -9.171175956726074

Token 2599: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03277173265814781
    2. '
' → logprob: -4.157771587371826
    3. '    
' → logprob: -4.657771587371826
    4. 'def' → logprob: -5.407771587371826
    5. 'for' → logprob: -6.282771587371826
    6. '<|end|>' → logprob: -7.657771587371826
    7. ' for' → logprob: -9.657772064208984
    8. '<|end|>' → logprob: -9.782772064208984
    9. '#' → logprob: -10.032772064208984
    10. '```' → logprob: -10.157772064208984

Token 2600: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4193163514137268
    2. '
' → logprob: -1.419316291809082
    3. 'def' (adapté à ' def') → logprob: -2.919316291809082
    4. 'for' → logprob: -3.294316291809082
    5. '    
' → logprob: -4.919316291809082
    6. ' for' → logprob: -6.544316291809082
    7. '#' → logprob: -7.919316291809082
    8. '
' → logprob: -8.794316291809082
    9. ' def' → logprob: -8.919316291809082
    10. ' 
' → logprob: -10.169316291809082

Token 2601: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.692477285861969
    2. 'res' → logprob: -1.5674772262573242
    3. 're' → logprob: -2.192477226257324
    4. ' rec' → logprob: -2.192477226257324
    5. ' update' → logprob: -4.192477226257324
    6. 'update' → logprob: -4.442477226257324
    7. 'adjust' → logprob: -4.442477226257324
    8. ' adjust' → logprob: -4.567477226257324
    9. 'reset' → logprob: -5.067477226257324
    10. ' recal' → logprob: -5.317477226257324

Token 2602: 'chedule' (ID: 11973)
  Prédit: 'chedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chedule' → logprob: -0.00011391390580683947
    2. 'et' → logprob: -9.125113487243652
    3. 't' → logprob: -13.250113487243652
    4. 'ched' → logprob: -14.125113487243652
    5. '
' → logprob: -14.375113487243652
    6. 'che' → logprob: -14.875113487243652
    7. 'ch' → logprob: -15.500113487243652
    8. 'e' → logprob: -15.625113487243652
    9. 'ync' → logprob: -15.750113487243652
    10. 'cheduler' → logprob: -15.750113487243652

Token 2603: '_all' (ID: 13305)
  Prédit: '_ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ship' → logprob: -0.01940467394888401
    2. '_sh' → logprob: -4.394404888153076
    3. '_' → logprob: -5.269404888153076
    4. '_all' → logprob: -7.144404888153076
    5. '_arr' → logprob: -7.269404888153076
    6. 'ship' → logprob: -9.894404411315918
    7. '_events' → logprob: -10.144404411315918
    8. '_s' → logprob: -10.269404411315918
    9. '(ship' → logprob: -11.144404411315918
    10. '_event' → logprob: -11.144404411315918

Token 2604: '_arr' (ID: 25121)
  Prédit: '_sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -1.3073190450668335
    2. '_arr' → logprob: -1.3073190450668335
    3. '():' → logprob: -1.3073190450668335
    4. '_ship' → logprob: -2.557319164276123
    5. '_' → logprob: -3.182319164276123
    6. '_events' → logprob: -3.307319164276123
    7. '()' → logprob: -3.932319164276123
    8. '_times' → logprob: -5.682319164276123
    9. '(' → logprob: -6.182319164276123
    10. '(event' → logprob: -6.432319164276123

Token 2605: 'ivals' (ID: 80357)
  Prédit: 'ival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.3883208632469177
    2. 'ivals' → logprob: -1.1383209228515625
    3. 'iv' → logprob: -6.6383209228515625
    4. 'ive' → logprob: -9.513320922851562
    5. 'val' → logprob: -11.388320922851562
    6. '   ' → logprob: -11.888320922851562
    7. 'ivial' → logprob: -12.138320922851562
    8. 'al' → logprob: -12.388320922851562
    9. '```' → logprob: -12.638320922851562
    10. 'ivate' → logprob: -12.763320922851562

Token 2606: '(current' (ID: 15023)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3875649571418762
    2. '():
' → logprob: -1.1375648975372314
    3. '(' → logprob: -8.262564659118652
    4. '()' → logprob: -8.387564659118652
    5. '   ' → logprob: -9.262564659118652
    6. '():
' → logprob: -10.012564659118652
    7. ' ():' → logprob: -10.262564659118652
    8. ':' → logprob: -11.387564659118652
    9. '():

' → logprob: -12.262564659118652
    10. '       ' → logprob: -12.262564659118652

Token 2607: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -9.138441237155348e-05
    2. '   ' → logprob: -10.375091552734375
    3. 'time' → logprob: -10.500091552734375
    4. '_' → logprob: -11.250091552734375
    5. '_times' → logprob: -12.875091552734375
    6. ')' → logprob: -13.000091552734375
    7. 'Time' → logprob: -13.375091552734375
    8. '       ' → logprob: -13.500091552734375
    9. '_TIME' → logprob: -13.750091552734375
    10. '):
' → logprob: -13.750091552734375

Token 2608: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04428311437368393
    2. '):' → logprob: -3.169283151626587
    3. '   ' → logprob: -7.044282913208008
    4. '):
' → logprob: -8.669282913208008
    5. '():
' → logprob: -9.044282913208008
    6. '       ' → logprob: -9.294282913208008
    7. ')' → logprob: -11.419282913208008
    8. '):

' → logprob: -11.794282913208008
    9. '():' → logprob: -12.544282913208008
    10. '()):
' → logprob: -12.544282913208008

Token 2609: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023726774379611015
    2. '       ' → logprob: -6.127372741699219
    3. 'for' → logprob: -9.002372741699219
    4. ' for' → logprob: -10.502372741699219
    5. '	for' → logprob: -10.752372741699219
    6. '
' → logprob: -11.627372741699219
    7. '    
' → logprob: -12.252372741699219
    8. '```' → logprob: -14.877372741699219
    9. '    ' → logprob: -15.377372741699219
    10. '        
' → logprob: -15.502372741699219

Token 2610: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6849744319915771
    2. 'for' → logprob: -0.8099744319915771
    3. '   ' → logprob: -3.309974431991577
    4. 'event' → logprob: -4.809974670410156
    5. 'heap' → logprob: -5.809974670410156
    6. ' for' → logprob: -6.309974670410156
    7. 'while' → logprob: -6.809974670410156
    8. 'global' → logprob: -8.184974670410156
    9. '#' (adapté à ' #') → logprob: -9.559974670410156
    10. '           ' → logprob: -10.809974670410156

Token 2611: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04499572142958641
    2. '       ' → logprob: -3.1699957847595215
    3. '   ' → logprob: -6.4199957847595215
    4. 'event' → logprob: -8.294995307922363
    5. ' for' → logprob: -9.294995307922363
    6. '
' → logprob: -11.294995307922363
    7. '#' → logprob: -13.044995307922363
    8. '	for' → logprob: -13.294995307922363
    9. 'global' → logprob: -13.419995307922363
    10. 'non' → logprob: -13.544995307922363

Token 2612: ' enl' (ID: 116494)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10995728522539139
    2. '   ' → logprob: -2.359957218170166
    3. ' for' → logprob: -4.859957218170166
    4. 'event' → logprob: -7.234957218170166
    5. 'def' → logprob: -7.984957218170166
    6. '       ' → logprob: -8.109957695007324
    7. 'import' → logprob: -8.609957695007324
    8. '#' → logprob: -8.859957695007324
    9. 'heap' → logprob: -9.859957695007324
    10. 'clear' → logprob: -9.984957695007324

Token 2613: 'ève' (ID: 41151)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.14981909096240997
    2. 'e' → logprob: -3.1498191356658936
    3. 'eve' → logprob: -3.3998191356658936
    4. 'queue' → logprob: -3.8998191356658936
    5. 'ève' → logprob: -4.3998188972473145
    6. 'ev' → logprob: -4.3998188972473145
    7. 'ement' → logprob: -5.5248188972473145
    8. 't' → logprob: -6.1498188972473145
    9. 'ette' → logprob: -6.2748188972473145
    10. '   ' → logprob: -6.3998188972473145

Token 2614: ' tous' (ID: 10688)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5955649614334106
    2. 'while' → logprob: -1.7205649614334106
    3. 'event' → logprob: -1.9705649614334106
    4. '#' → logprob: -4.095564842224121
    5. 'for' → logprob: -4.470564842224121
    6. ' all' → logprob: -4.595564842224121
    7. 'e' → logprob: -4.595564842224121
    8. 't' → logprob: -4.595564842224121
    9. '[]' → logprob: -4.845564842224121
    10. '[event' → logprob: -4.845564842224121

Token 2615: ' les' (ID: 1341)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.6010017395019531
    2. '(event' → logprob: -2.726001739501953
    3. 'events' → logprob: -2.851001739501953
    4. '_' → logprob: -2.976001739501953
    5. '_event' → logprob: -3.226001739501953
    6. ',' → logprob: -3.351001739501953
    7. '()' → logprob: -3.726001739501953
    8. '_events' → logprob: -3.726001739501953
    9. '#' → logprob: -3.976001739501953
    10. '   ' → logprob: -4.226001739501953

Token 2616: ' événements' (ID: 92142)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.08167906850576401
    2. 'events' → logprob: -3.706679105758667
    3. '#' → logprob: -4.331678867340088
    4. 'e' → logprob: -5.206678867340088
    5. 'ev' → logprob: -5.956678867340088
    6. '
' → logprob: -5.956678867340088
    7. '[
' → logprob: -5.956678867340088
    8. '(event' → logprob: -6.081678867340088
    9. 'evt' → logprob: -6.081678867340088
    10. 't' → logprob: -6.206678867340088

Token 2617: ' exist' (ID: 4310)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8147864937782288
    2. 'event' → logprob: -1.189786434173584
    3. '   ' → logprob: -3.189786434173584
    4. '_queue' → logprob: -3.189786434173584
    5. '#' → logprob: -3.814786434173584
    6. '<|end|>' → logprob: -3.814786434173584
    7. '       ' → logprob: -4.189786434173584
    8. 'import' → logprob: -4.314786434173584
    9. '[event' → logprob: -4.439786434173584
    10. '_event' → logprob: -4.564786434173584

Token 2618: 'ants' (ID: 2027)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.2789202928543091
    2. 'u' → logprob: -2.9039201736450195
    3. 'event' → logprob: -3.1539201736450195
    4. 'ue' → logprob: -3.6539201736450195
    5. ',' → logprob: -4.1539201736450195
    6. 'ues' → logprob: -4.2789201736450195
    7. '(event' → logprob: -4.2789201736450195
    8. '_heap' → logprob: -4.4039201736450195
    9. '#' → logprob: -4.6539201736450195
    10. '_' → logprob: -4.9039201736450195

Token 2619: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2620: ' ici' (ID: 27994)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.06492389738559723
    2. '   ' → logprob: -3.6899240016937256
    3. 'while' → logprob: -4.0649237632751465
    4. '#' → logprob: -4.8149237632751465
    5. ' event' → logprob: -5.3149237632751465
    6. '       ' → logprob: -6.0649237632751465
    7. '	event' → logprob: -6.0649237632751465
    8. 'import' → logprob: -7.0649237632751465
    9. ' while' → logprob: -7.6899237632751465
    10. 'heap' → logprob: -8.189924240112305

Token 2621: ' on' (ID: 402)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.5010128617286682
    2. '   ' → logprob: -1.0010128021240234
    3. 'while' → logprob: -4.751012802124023
    4. ' event' → logprob: -4.876012802124023
    5. '	event' → logprob: -5.001012802124023
    6. '       ' → logprob: -7.251012802124023
    7. 'import' → logprob: -7.626012802124023
    8. ' while' → logprob: -7.751012802124023
    9. '
' → logprob: -7.876012802124023
    10. '#' → logprob: -8.251012802124023

Token 2622: ' recon' (ID: 11011)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.529373049736023
    2. 'event' → logprob: -2.0293731689453125
    3. 'def' → logprob: -2.1543731689453125
    4. '       ' → logprob: -2.7793731689453125
    5. '   ' → logprob: -4.2793731689453125
    6. 'import' → logprob: -4.6543731689453125
    7. 'does' → logprob: -4.6543731689453125
    8. '=' → logprob: -4.9043731689453125
    9. 'pass' → logprob: -5.1543731689453125
    10. 'heap' → logprob: -5.5293731689453125

Token 2623: 'str' (ID: 689)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.6944321393966675
    2. 'struct' → logprob: -1.8194321393966675
    3. 'heap' → logprob: -2.069432258605957
    4. 'queue' → logprob: -2.194432258605957
    5. 'schedule' → logprob: -2.319432258605957
    6. 'verts' → logprob: -3.069432258605957
    7. 't' → logprob: -3.194432258605957
    8. 'vert' → logprob: -3.319432258605957
    9. 'str' → logprob: -3.444432258605957
    10. 'def' → logprob: -3.694432258605957

Token 2624: 'uit' (ID: 2136)
  Prédit: 'uit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uit' → logprob: -0.03819813206791878
    2. 'ruit' → logprob: -3.288198232650757
    3. 'uct' → logprob: -8.913198471069336
    4. 'duit' → logprob: -12.038198471069336
    5. 'uits' → logprob: -12.538198471069336
    6. 'u' → logprob: -12.538198471069336
    7. 'cut' → logprob: -12.663198471069336
    8. 'ui' → logprob: -13.538198471069336
    9. 'it' → logprob: -14.038198471069336
    10. 'uire' → logprob: -14.288198471069336

Token 2625: ' event' (ID: 2104)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.011705131269991398
    2. '[]' → logprob: -4.761704921722412
    3. '(event' → logprob: -6.636704921722412
    4. ' event' → logprob: -7.011704921722412
    5. '[]
' → logprob: -7.261704921722412
    6. '   ' → logprob: -9.88670539855957
    7. '[event' → logprob: -10.38670539855957
    8. 'heap' → logprob: -11.01170539855957
    9. '[],' → logprob: -11.13670539855957
    10. '[
' → logprob: -11.26170539855957

Token 2626: ' queue' (ID: 13661)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.0004473540757317096
    2. 'queue' → logprob: -8.625447273254395
    3. '_' → logprob: -8.750447273254395
    4. '_heap' → logprob: -10.250447273254395
    5. '_q' → logprob: -10.750447273254395
    6. 's' → logprob: -11.750447273254395
    7. '_QUEUE' → logprob: -11.750447273254395
    8. '[' → logprob: -12.875447273254395
    9. 'q' → logprob: -12.875447273254395
    10. ' _' → logprob: -13.000447273254395

Token 2627: ' à' (ID: 1221)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -1.2125002145767212
    2. ' =' → logprob: -1.3375002145767212
    3. '=' → logprob: -1.8375002145767212
    4. '<|end|>' → logprob: -2.0875000953674316
    5. '[
' → logprob: -3.3375000953674316
    6. '[' → logprob: -3.7125000953674316
    7. '       ' → logprob: -3.9625000953674316
    8. '<|end|>' → logprob: -4.212500095367432
    9. '   ' → logprob: -4.462500095367432
    10. '[]' → logprob: -4.587500095367432

Token 2628: ' partir' (ID: 12100)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06610695272684097
    2. '[]
' → logprob: -3.1911070346832275
    3. '[(' → logprob: -4.566106796264648
    4. 'heap' → logprob: -5.566106796264648
    5. '[]

' → logprob: -6.566106796264648
    6. '[])' → logprob: -6.941106796264648
    7. '=[]' → logprob: -6.941106796264648
    8. 'this' → logprob: -7.066106796264648
    9. '[:]' → logprob: -7.566106796264648
    10. '0' → logprob: -7.566106796264648

Token 2629: ' des' (ID: 731)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5492936968803406
    2. '[event' → logprob: -1.2992937564849854
    3. '[]
' → logprob: -2.6742937564849854
    4. '[(' → logprob: -3.1742937564849854
    5. '[
' → logprob: -3.9242937564849854
    6. '[' → logprob: -4.799293518066406
    7. 'event' → logprob: -5.424293518066406
    8. '[current' → logprob: -6.549293518066406
    9. '[i' → logprob: -6.674293518066406
    10. 'current' → logprob: -6.674293518066406

Token 2630: ' bate' (ID: 39378)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.7797948122024536
    2. 'events' → logprob: -2.029794692993164
    3. '[(' → logprob: -2.279794692993164
    4. '[
' → logprob: -2.279794692993164
    5. 'ships' → logprob: -2.654794692993164
    6. '[]' → logprob: -2.779794692993164
    7. 'ship' → logprob: -3.904794692993164
    8. '[' → logprob: -4.279794692993164
    9. 'év' → logprob: -5.029794692993164
    10. 'event' → logprob: -5.154794692993164

Token 2631: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.2854546308517456
    2. 'uts' → logprob: -2.535454750061035
    3. 'nts' → logprob: -2.535454750061035
    4. 'ts' → logprob: -3.410454750061035
    5. 'ats' → logprob: -4.785454750061035
    6. 'ues' → logprob: -4.785454750061035
    7. 'ents' → logprob: -5.160454750061035
    8. 'tons' → logprob: -5.660454750061035
    9. 'ques' → logprob: -5.660454750061035
    10. 'u' → logprob: -5.785454750061035

Token 2632: '+' (ID: 10)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11894717812538147
    2. '   ' → logprob: -2.6189472675323486
    3. '<|end|>' → logprob: -3.4939472675323486
    4. '<|end|>' → logprob: -5.4939470291137695
    5. '
' → logprob: -6.9939470291137695
    6. '[' → logprob: -7.1189470291137695
    7. '        
' → logprob: -7.3689470291137695
    8. '[
' → logprob: -7.6189470291137695
    9. ',' → logprob: -7.9939470291137695
    10. '[]' → logprob: -8.24394702911377

Token 2633: 'é' (ID: 377)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1287393718957901
    2. 'current' → logprob: -2.753739356994629
    3. 'ships' → logprob: -4.128739356994629
    4. '[]
' → logprob: -4.378739356994629
    5. 'positions' → logprob: -4.878739356994629
    6. 'event' → logprob: -5.628739356994629
    7. '[event' → logprob: -5.628739356994629
    8. '[])' → logprob: -5.878739356994629
    9. '[(' → logprob: -6.253739356994629
    10. 'ship' → logprob: -6.253739356994629

Token 2634: 'quipements' (ID: 175373)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.22407934069633484
    2. 'vent' → logprob: -2.2240793704986572
    3. 'vents' → logprob: -2.4740793704986572
    4. 'positions' → logprob: -6.474079132080078
    5. 'event' → logprob: -6.724079132080078
    6. 'current' → logprob: -6.849079132080078
    7. 'pos' → logprob: -6.974079132080078
    8. 'ships' → logprob: -7.849079132080078
    9. 'events' → logprob: -7.849079132080078
    10. 'vel' → logprob: -8.349079132080078

Token 2635: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6113736629486084
    2. '<|end|>' → logprob: -1.2363736629486084
    3. '   ' → logprob: -1.8613736629486084
    4. '<|end|>' → logprob: -5.2363739013671875
    5. '
' → logprob: -6.4863739013671875
    6. ')' → logprob: -7.2363739013671875
    7. '        
' → logprob: -7.3613739013671875
    8. '[' → logprob: -7.4863739013671875
    9. '[
' → logprob: -8.111373901367188
    10. 'import' → logprob: -8.236373901367188

Token 2636: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027497189585119486
    2. 'event' → logprob: -6.252749919891357
    3. '```' → logprob: -8.1277494430542
    4. '
' → logprob: -8.8777494430542
    5. '       ' → logprob: -9.2527494430542
    6. '    
' → logprob: -9.5027494430542
    7. '[
' → logprob: -9.8777494430542
    8. '(event' → logprob: -10.2527494430542
    9. '#' → logprob: -10.8777494430542
    10. '[' → logprob: -11.2527494430542

Token 2637: ' #' (ID: 1069)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.6484470367431641
    2. '   ' → logprob: -0.7734470367431641
    3. 'non' → logprob: -4.898447036743164
    4. ' event' → logprob: -6.648447036743164
    5. 'global' → logprob: -6.648447036743164
    6. '       ' → logprob: -6.773447036743164
    7. '#' (adapté à ' #') → logprob: -6.773447036743164
    8. '```' → logprob: -7.148447036743164
    9. 'del' → logprob: -7.398447036743164
    10. '	event' → logprob: -7.398447036743164

Token 2638: ' mais' (ID: 2899)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.3945733606815338
    2. '   ' → logprob: -1.1445733308792114
    3. 'non' → logprob: -5.769573211669922
    4. 'while' → logprob: -6.519573211669922
    5. '#' → logprob: -6.644573211669922
    6. 'global' → logprob: -7.269573211669922
    7. '       ' → logprob: -8.269573211669922
    8. '```' → logprob: -8.769573211669922
    9. '
' → logprob: -9.019573211669922
    10. 'for' → logprob: -9.144573211669922

Token 2639: ' ce' (ID: 2357)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08267028629779816
    2. 'event' → logprob: -3.332670211791992
    3. '   ' → logprob: -4.582670211791992
    4. ' #' → logprob: -4.832670211791992
    5. 'pass' → logprob: -4.832670211791992
    6. ' event' → logprob: -5.582670211791992
    7. 'il' → logprob: -6.457670211791992
    8. 'for' → logprob: -6.457670211791992
    9. 'def' → logprob: -6.582670211791992
    10. '       ' → logprob: -6.707670211791992

Token 2640: ' n' (ID: 297)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06334691494703293
    2. 'event' → logprob: -3.6883468627929688
    3. 'n' → logprob: -4.188346862792969
    4. 'def' → logprob: -5.063346862792969
    5. ' #' → logprob: -5.938346862792969
    6. '```' → logprob: -5.938346862792969
    7. 'vent' → logprob: -6.688346862792969
    8. '   ' → logprob: -6.813346862792969
    9. '_queue' → logprob: -7.188346862792969
    10. 's' → logprob: -7.563346862792969

Token 2641: '’est' (ID: 6838)
  Prédit: ''est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6684297919273376
    2. '#' → logprob: -0.7934297919273376
    3. 'est' → logprob: -4.918429851531982
    4. 'import' → logprob: -5.293429851531982
    5. 'ont' → logprob: -5.918429851531982
    6. '=' → logprob: -6.043429851531982
    7. ''' → logprob: -6.293429851531982
    8. ''était' → logprob: -6.418429851531982
    9. '’est' → logprob: -6.543429851531982
    10. 'n' → logprob: -6.793429851531982

Token 2642: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.275870680809021
    2. ' pas' → logprob: -1.525870680809021
    3. 'not' → logprob: -5.2758708000183105
    4. '#' → logprob: -5.4008708000183105
    5. 'd' → logprob: -5.9008708000183105
    6. 'too' → logprob: -6.7758708000183105
    7. ' impossible' → logprob: -7.0258708000183105
    8. 'complex' → logprob: -7.0258708000183105
    9. 'possible' → logprob: -7.0258708000183105
    10. ' not' → logprob: -7.4008708000183105

Token 2643: ' trivial' (ID: 86130)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.04400651901960373
    2. 'pr' → logprob: -4.41900634765625
    3. 'efficient' → logprob: -5.41900634765625
    4. ' possible' → logprob: -5.91900634765625
    5. 'optimal' → logprob: -6.04400634765625
    6. 'tr' → logprob: -6.04400634765625
    7. '#' → logprob: -6.41900634765625
    8. 'fait' → logprob: -6.41900634765625
    9. 'f' → logprob: -6.41900634765625
    10. 'poss' → logprob: -6.54400634765625

Token 2644: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09365685284137726
    2. '       ' → logprob: -3.4686567783355713
    3. '#' → logprob: -3.5936567783355713
    4. '<|end|>' → logprob: -4.09365701675415
    5. 'event' → logprob: -5.84365701675415
    6. '<|end|>' → logprob: -6.09365701675415
    7. 'pass' → logprob: -6.34365701675415
    8. '    
' → logprob: -6.59365701675415
    9. 'while' → logprob: -7.09365701675415
    10. '
' → logprob: -7.21865701675415

Token 2645: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39208006858825684
    2. '#' → logprob: -1.6420800685882568
    3. 'pass' → logprob: -2.517080068588257
    4. '       ' → logprob: -3.517080068588257
    5. 'event' → logprob: -4.517080307006836
    6. ' pass' → logprob: -5.892080307006836
    7. '        
' → logprob: -6.892080307006836
    8. '    
' → logprob: -6.892080307006836
    9. 'return' → logprob: -6.892080307006836
    10. 'continue' → logprob: -7.142080307006836

Token 2646: ' év' (ID: 23692)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7935630083084106
    2. 'event' → logprob: -1.0435630083084106
    3. 'True' → logprob: -3.043562889099121
    4. 'len' → logprob: -3.293562889099121
    5. '   ' → logprob: -3.543562889099121
    6. 'for' → logprob: -4.043562889099121
    7. 'False' → logprob: -4.543562889099121
    8. ' True' → logprob: -4.668562889099121
    9. 'pass' → logprob: -4.668562889099121
    10. ' event' → logprob: -5.043562889099121

Token 2647: 'ènements' (ID: 178488)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.007811504416167736
    2. 'ents' → logprob: -4.882811546325684
    3. 'ент' → logprob: -10.257811546325684
    4. 'e' → logprob: -10.382811546325684
    5. 'nt' → logprob: -10.507811546325684
    6. '```' → logprob: -10.882811546325684
    7. 'entu' → logprob: -10.882811546325684
    8. 't' → logprob: -11.382811546325684
    9. '_queue' → logprob: -12.132811546325684
    10. 'en' → logprob: -12.257811546325684

Token 2648: ' gates' (ID: 61915)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9049508571624756
    2. '<|end|>' → logprob: -1.0299508571624756
    3. ' =' → logprob: -2.5299508571624756
    4. '_queue' → logprob: -3.0299508571624756
    5. '=[]' → logprob: -3.4049508571624756
    6. '#' → logprob: -4.279951095581055
    7. 's' → logprob: -4.654951095581055
    8. '...' → logprob: -5.154951095581055
    9. '<|end|>' → logprob: -5.279951095581055
    10. '.' → logprob: -5.404951095581055

Token 2649: ' doivent' (ID: 44722)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2687047719955444
    2. '<|end|>' → logprob: -1.2687047719955444
    3. '#' → logprob: -2.018704891204834
    4. '_' → logprob: -2.768704891204834
    5. '   ' → logprob: -3.018704891204834
    6. '
' → logprob: -3.518704891204834
    7. '_heap' → logprob: -3.643704891204834
    8. ']' → logprob: -3.768704891204834
    9. '<|end|>' → logprob: -3.768704891204834
    10. '_queue' → logprob: -3.893704891204834

Token 2650: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.06554407626390457
    2. 'rest' → logprob: -4.315544128417969
    3. 'reste' → logprob: -4.440544128417969
    4. 'contin' → logprob: -4.565544128417969
    5. 're' → logprob: -4.815544128417969
    6. ' être' → logprob: -5.565544128417969
    7. 'êtres' → logprob: -5.565544128417969
    8. ' rester' → logprob: -5.940544128417969
    9. 'égal' → logprob: -6.440544128417969
    10. 'a' → logprob: -6.690544128417969

Token 2651: ' conserv' (ID: 13953)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.5493103265762329
    2. 'pré' → logprob: -2.0493102073669434
    3. 'pres' → logprob: -2.4243102073669434
    4. 'g' → logprob: -2.4243102073669434
    5. 'maint' → logprob: -3.1743102073669434
    6. 'gard' → logprob: -3.2993102073669434
    7. 're' → logprob: -4.299310207366943
    8. ' conserv' → logprob: -5.424310207366943
    9. 'prés' → logprob: -5.549310207366943
    10. 'ré' → logprob: -5.674310207366943

Token 2652: 'és' (ID: 1756)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7786723375320435
    2. 'ue' → logprob: -1.0286723375320435
    3. 'u' → logprob: -2.153672218322754
    4. 'é' → logprob: -3.653672218322754
    5. 'er' → logprob: -4.653672218322754
    6. '#' → logprob: -4.903672218322754
    7. '[' → logprob: -5.653672218322754
    8. 'ed' → logprob: -5.903672218322754
    9. 'uer' → logprob: -6.403672218322754
    10. 'heap' → logprob: -6.403672218322754

Token 2653: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42921409010887146
    2. '<|end|>' → logprob: -1.9292141199111938
    3. '       ' → logprob: -2.3042140007019043
    4. '#' → logprob: -4.054214000701904
    5. '
' → logprob: -4.054214000701904
    6. 'event' → logprob: -4.179214000701904
    7. '    
' → logprob: -5.179214000701904
    8. ')' → logprob: -5.304214000701904
    9. '<|end|>' → logprob: -5.429214000701904
    10. ' 
' → logprob: -5.554214000701904

Token 2654: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003232136834412813
    2. '
' → logprob: -6.378232002258301
    3. '       ' → logprob: -7.378232002258301
    4. '    
' → logprob: -7.503232002258301
    5. '[
' → logprob: -9.0032320022583
    6. 'event' → logprob: -9.6282320022583
    7. '```' → logprob: -10.2532320022583
    8. '        
' → logprob: -10.3782320022583
    9. 'heap' → logprob: -11.1282320022583
    10. '[' → logprob: -11.1282320022583

Token 2655: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08929384499788284
    2. 'event' → logprob: -3.464293956756592
    3. '#' (adapté à ' #') → logprob: -3.839293956756592
    4. '       ' → logprob: -4.589293956756592
    5. 'new' → logprob: -5.214293956756592
    6. 'while' → logprob: -5.589293956756592
    7. 'def' → logprob: -5.714293956756592
    8. 'temp' → logprob: -6.089293956756592
    9. 'filtered' → logprob: -6.089293956756592
    10. 'non' → logprob: -6.339293956756592

Token 2656: ' On' (ID: 2160)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.689292848110199
    2. 'event' → logprob: -1.3142929077148438
    3. '#' → logprob: -1.8142929077148438
    4. 'filtered' → logprob: -3.1892929077148438
    5. '   ' → logprob: -4.314292907714844
    6. 'def' → logprob: -5.939292907714844
    7. 'temp' → logprob: -6.314292907714844
    8. '       ' → logprob: -6.439292907714844
    9. 'pass' → logprob: -6.439292907714844
    10. 'tmp' → logprob: -7.314292907714844

Token 2657: ' va' (ID: 3423)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1295820474624634
    2. 'event' → logprob: -1.1295820474624634
    3. 'def' → logprob: -1.7545820474624634
    4. '   ' → logprob: -2.754581928253174
    5. '       ' → logprob: -3.379581928253174
    6. '=' → logprob: -4.129581928253174
    7. 'import' → logprob: -4.129581928253174
    8. ' #' → logprob: -5.004581928253174
    9. 'filtered' → logprob: -5.254581928253174
    10. ' event' → logprob: -5.379581928253174

Token 2658: ' juste' (ID: 31553)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -1.104210376739502
    2. '#' → logprob: -1.604210376739502
    3. 'filtered' → logprob: -1.604210376739502
    4. 'import' → logprob: -2.229210376739502
    5. 'new' → logprob: -2.854210376739502
    6. 'pass' → logprob: -3.729210376739502
    7. 'def' → logprob: -3.854210376739502
    8. '       ' → logprob: -4.229210376739502
    9. '   ' → logprob: -4.604210376739502
    10. 'temp' → logprob: -4.854210376739502

Token 2659: ' ajouter' (ID: 78457)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -1.0744516849517822
    2. 'filter' → logprob: -1.1994516849517822
    3. 'pass' → logprob: -2.6994516849517822
    4. 'event' → logprob: -2.9494516849517822
    5. 'temp' → logprob: -3.3244516849517822
    6. '#' → logprob: -3.3244516849517822
    7. 'import' → logprob: -3.4494516849517822
    8. '   ' → logprob: -3.6994516849517822
    9. 'keep' → logprob: -3.9494516849517822
    10. '       ' → logprob: -4.324451446533203

Token 2660: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.107491135597229
    2. 'pass' → logprob: -1.857491135597229
    3. '#' → logprob: -2.4824910163879395
    4. '   ' → logprob: -2.9824910163879395
    5. 'tokens' → logprob: -3.1074910163879395
    6. ' for' → logprob: -3.1074910163879395
    7. 'event' → logprob: -3.7324910163879395
    8. '
' → logprob: -3.8574910163879395
    9. 'code' → logprob: -4.1074910163879395
    10. '[]' → logprob: -4.2324910163879395

Token 2661: ' év' (ID: 23692)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.304979681968689
    2. 'new' → logprob: -1.429979681968689
    3. 'events' → logprob: -1.554979681968689
    4. 'for' → logprob: -2.6799798011779785
    5. 'pass' → logprob: -3.0549798011779785
    6. 'év' → logprob: -3.3049798011779785
    7. 'ship' → logprob: -3.9299798011779785
    8. 'ships' → logprob: -4.1799798011779785
    9. 'ev' → logprob: -4.4299798011779785
    10. 'n' → logprob: -4.4299798011779785

Token 2662: 'ènements' (ID: 178488)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.0029297994915395975
    2. 'ent' → logprob: -6.2529296875
    3. 'ènements' → logprob: -7.3779296875
    4. 'nts' → logprob: -8.8779296875
    5. 'ENTS' → logprob: -9.5029296875
    6. '```' → logprob: -10.3779296875
    7. 'è' → logprob: -10.5029296875
    8. 'ts' → logprob: -11.2529296875
    9. 'events' → logprob: -11.8779296875
    10. 'entions' → logprob: -12.0029296875

Token 2663: ' arriv' (ID: 32213)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2664: 'és' (ID: 1756)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.8024806380271912
    2. 'ée' → logprob: -1.427480697631836
    3. 'er' → logprob: -2.177480697631836
    4. 'als' → logprob: -2.427480697631836
    5. 'al' → logprob: -3.302480697631836
    6. 'ee' → logprob: -4.302480697631836
    7. 'ees' → logprob: -4.677480697631836
    8. 'es' → logprob: -4.802480697631836
    9. '__' → logprob: -4.927480697631836
    10. 'e' → logprob: -5.427480697631836

Token 2665: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4634567201137543
    2. '<|end|>' → logprob: -2.088456630706787
    3. ',' → logprob: -2.838456630706787
    4. '       ' → logprob: -2.963456630706787
    5. ')' → logprob: -3.213456630706787
    6. '.' → logprob: -4.463456630706787
    7. '<|end|>' → logprob: -4.713456630706787
    8. '    ' → logprob: -4.713456630706787
    9. '(' → logprob: -4.838456630706787
    10. 'for' → logprob: -4.963456630706787

Token 2666: ' partir' (ID: 12100)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.5520703196525574
    2. 'la' → logprob: -1.5520703792572021
    3. 'l' → logprob: -2.677070379257202
    4. 'heap' → logprob: -2.802070379257202
    5. '```' → logprob: -3.552070379257202
    6. 'aj' → logprob: -4.177070140838623
    7. 'év' → logprob: -4.927070140838623
    8. 'part' → logprob: -5.052070140838623
    9. 'trait' → logprob: -6.052070140838623
    10. 'sim' → logprob: -6.677070140838623

Token 2667: ' d' (ID: 272)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.6908758878707886
    2. '   ' → logprob: -2.315876007080078
    3. 'd' → logprob: -2.440876007080078
    4. '       ' → logprob: -2.565876007080078
    5. 'de' → logprob: -2.690876007080078
    6. '[' → logprob: -3.690876007080078
    7. ' des' → logprob: -3.815876007080078
    8. ' de' → logprob: -4.065876007080078
    9. 'du' → logprob: -4.065876007080078
    10. '[]' → logprob: -4.315876007080078

Token 2668: ''au' (ID: 63689)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.11071345955133438
    2. 'now' → logprob: -3.235713481903076
    3. 'scratch' → logprob: -3.610713481903076
    4. 'event' → logprob: -4.860713481903076
    5. 'ships' → logprob: -5.360713481903076
    6. 'len' → logprob: -5.360713481903076
    7. '0' → logprob: -5.360713481903076
    8. 'heap' → logprob: -5.735713481903076
    9. 'l' → logprob: -6.485713481903076
    10. '#' → logprob: -6.860713481903076

Token 2669: 'jourd' (ID: 29366)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.40522637963294983
    2. 'jourd' → logprob: -1.1552263498306274
    3. 'g' → logprob: -4.905226230621338
    4. 'gment' → logprob: -6.030226230621338
    5. 'current' → logprob: -6.405226230621338
    6. 'x' → logprob: -6.905226230621338
    7. '
' → logprob: -7.030226230621338
    8. '   ' → logprob: -7.530226230621338
    9. 'j' → logprob: -8.030226707458496
    10. 't' → logprob: -8.030226707458496

Token 2670: ''hui' (ID: 43820)
  Prédit: 'ui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.7061929106712341
    2. ''hui' → logprob: -0.8311929106712341
    3. 'i' → logprob: -3.331192970275879
    4. ''' → logprob: -4.081192970275879
    5. 'hui' → logprob: -5.581192970275879
    6. '`' → logprob: -5.581192970275879
    7. '’hui' → logprob: -6.081192970275879
    8. 'j' → logprob: -6.331192970275879
    9. 't' → logprob: -6.956192970275879
    10. 'r' → logprob: -7.581192970275879

Token 2671: ' afin' (ID: 22217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8894384503364563
    2. '<|end|>' → logprob: -1.3894383907318115
    3. '       ' → logprob: -2.0144383907318115
    4. '
' → logprob: -2.3894383907318115
    5. ')' → logprob: -3.2644383907318115
    6. '    
' → logprob: -3.6394383907318115
    7. '        
' → logprob: -4.389438629150391
    8. '<|end|>' → logprob: -5.014438629150391
    9. ' 
' → logprob: -5.514438629150391
    10. '    ' → logprob: -5.764438629150391

Token 2672: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30188995599746704
    2. '#' → logprob: -2.5518898963928223
    3. 'd' → logprob: -3.3018898963928223
    4. 'contin' → logprob: -3.4268898963928223
    5. 'de' → logprob: -3.5518898963928223
    6. '   ' → logprob: -3.6768898963928223
    7. 'que' → logprob: -4.676889896392822
    8. 'continue' → logprob: -5.176889896392822
    9. 'import' → logprob: -5.676889896392822
    10. 'le' → logprob: -5.801889896392822

Token 2673: '’éviter' (ID: 199691)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maint' → logprob: -1.5379892587661743
    2. 'pres' → logprob: -1.9129892587661743
    3. 'event' → logprob: -1.9129892587661743
    4. '#' → logprob: -3.0379891395568848
    5. 'g' → logprob: -3.0379891395568848
    6. '   ' → logprob: -3.1629891395568848
    7. 'for' → logprob: -3.2879891395568848
    8. 'len' → logprob: -3.4129891395568848
    9. 'con' → logprob: -3.7879891395568848
    10. '       ' → logprob: -3.9129891395568848

Token 2674: ' des' (ID: 731)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0875639915466309
    2. 'les' → logprob: -1.0875639915466309
    3. 'de' → logprob: -1.5875639915466309
    4. '   ' → logprob: -3.962563991546631
    5. 'la' → logprob: -3.962563991546631
    6. 'dup' → logprob: -4.587563991546631
    7. ' les' → logprob: -4.587563991546631
    8. 'des' → logprob: -4.712563991546631
    9. ' de' → logprob: -4.837563991546631
    10. 'duplicates' → logprob: -4.837563991546631

Token 2675: ' conflits' (ID: 196422)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.1800106167793274
    2. 'duplicates' → logprob: -2.8050105571746826
    3. 'd' → logprob: -2.9300105571746826
    4. 'dup' → logprob: -3.4300105571746826
    5. ' doubl' → logprob: -4.555010795593262
    6. 'import' → logprob: -6.180010795593262
    7. 'duplic' → logprob: -6.430010795593262
    8. 'double' → logprob: -7.055010795593262
    9. 'aj' → logprob: -7.430010795593262
    10. 'in' → logprob: -8.055010795593262

Token 2676: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21499277651309967
    2. '<|end|>' → logprob: -1.9649927616119385
    3. '    
' → logprob: -4.089993000030518
    4. '
' → logprob: -4.214993000030518
    5. '<|end|>' → logprob: -4.964993000030518
    6. '       ' → logprob: -4.964993000030518
    7. '        
' → logprob: -6.339993000030518
    8. ')' → logprob: -6.714993000030518
    9. '  
' → logprob: -6.964993000030518
    10. '[' → logprob: -7.589993000030518

Token 2677: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06715573370456696
    2. '
' → logprob: -3.5671558380126953
    3. '    
' → logprob: -4.442155838012695
    4. '#' → logprob: -5.317155838012695
    5. ' 
' → logprob: -5.817155838012695
    6. '```' → logprob: -5.817155838012695
    7. '       ' → logprob: -6.317155838012695
    8. '	
' → logprob: -6.942155838012695
    9. '<|end|>' → logprob: -6.942155838012695
    10. 'def' → logprob: -7.192155838012695

Token 2678: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09684418141841888
    2. '#' (adapté à ' #') → logprob: -3.09684419631958
    3. 'pass' → logprob: -4.47184419631958
    4. 'event' → logprob: -4.59684419631958
    5. 'for' → logprob: -4.97184419631958
    6. '       ' → logprob: -5.09684419631958
    7. '    
' → logprob: -5.97184419631958
    8. 'while' → logprob: -6.47184419631958
    9. 'heap' → logprob: -6.97184419631958
    10. '
' → logprob: -6.97184419631958

Token 2679: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1795265674591064
    2. 'event' → logprob: -1.4295265674591064
    3. '       ' → logprob: -1.5545265674591064
    4. '#' → logprob: -2.1795265674591064
    5. 'non' → logprob: -2.9295265674591064
    6. 'pass' → logprob: -3.1795265674591064
    7. 'new' → logprob: -4.804526329040527
    8. 'for' → logprob: -5.054526329040527
    9. 'while' → logprob: -5.054526329040527
    10. 'filtered' → logprob: -5.304526329040527

Token 2680: ' simpl' (ID: 15693)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07575752586126328
    2. 'ev' → logprob: -3.8257575035095215
    3. 'event' → logprob: -3.8257575035095215
    4. 'e' → logprob: -4.8257575035095215
    5. 'evt' → logprob: -5.2007575035095215
    6. 'év' → logprob: -5.3257575035095215
    7. 's' → logprob: -6.3257575035095215
    8. 'ship' → logprob: -6.4507575035095215
    9. '_' → logprob: -6.8257575035095215
    10. 'g' → logprob: -7.0757575035095215

Token 2681: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.8800531625747681
    2. 'iter' → logprob: -1.130053162574768
    3. 'ité' → logprob: -1.880053162574768
    4. 'ic' → logprob: -2.5050530433654785
    5. 'ity' → logprob: -5.5050530433654785
    6. '#' → logprob: -5.5050530433654785
    7. 'idité' → logprob: -6.5050530433654785
    8. 'plic' → logprob: -6.6300530433654785
    9. 'icity' → logprob: -6.6300530433654785
    10. 'imité' → logprob: -6.6300530433654785

Token 2682: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19760021567344666
    2. 'pass' → logprob: -3.0726001262664795
    3. '   ' → logprob: -3.5726001262664795
    4. 'for' → logprob: -3.9476001262664795
    5. 'event' → logprob: -3.9476001262664795
    6. ' pass' → logprob: -4.447600364685059
    7. ' for' → logprob: -4.447600364685059
    8. 'return' → logprob: -4.447600364685059
    9. '
' → logprob: -4.697600364685059
    10. 'while' → logprob: -4.947600364685059

Token 2683: ' on' (ID: 402)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.06063896417617798
    2. '   ' → logprob: -3.560638904571533
    3. ' pass' → logprob: -4.310638904571533
    4. '#' → logprob: -4.685638904571533
    5. 'for' → logprob: -5.810638904571533
    6. '       ' → logprob: -5.935638904571533
    7. 'while' → logprob: -7.310638904571533
    8. 'return' → logprob: -7.560638904571533
    9. ' for' → logprob: -8.060639381408691
    10. 'event' → logprob: -9.060639381408691

Token 2684: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9941344261169434
    2. '#' → logprob: -1.7441344261169434
    3. '   ' → logprob: -1.7441344261169434
    4. 'def' → logprob: -3.1191344261169434
    5. 'contin' → logprob: -3.1191344261169434
    6. '       ' → logprob: -3.3691344261169434
    7. 'pass' → logprob: -3.3691344261169434
    8. 'for' → logprob: -4.119134426116943
    9. 'import' → logprob: -4.369134426116943
    10. 'ignore' → logprob: -4.619134426116943

Token 2685: ' sup' (ID: 1982)
  Prédit: 'clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clear' → logprob: -0.3196866810321808
    2. 'sup' → logprob: -2.6946866512298584
    3. 'pur' → logprob: -3.4446866512298584
    4. 'fil' → logprob: -3.4446866512298584
    5. 'flush' → logprob: -3.5696866512298584
    6. 'pas' → logprob: -3.9446866512298584
    7. 'vide' → logprob: -4.0696868896484375
    8. '#' → logprob: -4.5696868896484375
    9. ' clear' → logprob: -4.8196868896484375
    10. 're' → logprob: -5.1946868896484375

Token 2686: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.006496992893517017
    2. 'port' → logprob: -6.006496906280518
    3. 'prim' → logprob: -6.256496906280518
    4. 'pr' → logprob: -6.881496906280518
    5. 'primer' → logprob: -8.506497383117676
    6. 'pl' → logprob: -8.506497383117676
    7. 'p' → logprob: -8.631497383117676
    8. 'plement' → logprob: -8.756497383117676
    9. 'press' → logprob: -9.256497383117676
    10. 'prima' → logprob: -9.756497383117676

Token 2687: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.9205039143562317
    2. 'r' → logprob: -1.170503854751587
    3. 'les' → logprob: -1.795503854751587
    4. ' rien' → logprob: -3.045503854751587
    5. ' pas' → logprob: -3.295503854751587
    6. '_pas' → logprob: -4.545504093170166
    7. ' aucun' → logprob: -5.045504093170166
    8. 'l' → logprob: -5.670504093170166
    9. ' les' → logprob: -5.920504093170166
    10. '_r' → logprob: -5.920504093170166

Token 2688: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.757039487361908
    2. '_' → logprob: -1.6320395469665527
    3. '#' → logprob: -2.8820395469665527
    4. '       ' → logprob: -3.1320395469665527
    5. '<|end|>' → logprob: -3.1320395469665527
    6. 'r' → logprob: -3.8820395469665527
    7. ' les' → logprob: -4.382039546966553
    8. 'l' → logprob: -4.507039546966553
    9. '        ' → logprob: -4.507039546966553
    10. ' ' → logprob: -4.507039546966553

Token 2689: ' év' (ID: 23692)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.7439048290252686
    2. 'event' → logprob: -1.2439048290252686
    3. '#' → logprob: -1.9939048290252686
    4. 'events' → logprob: -3.2439048290252686
    5. ' duplicates' → logprob: -3.6189048290252686
    6. 'ev' → logprob: -5.118905067443848
    7. ' event' → logprob: -5.243905067443848
    8. 'duplicate' → logprob: -5.368905067443848
    9. 'pass' → logprob: -5.993905067443848
    10. 'None' → logprob: -5.993905067443848

Token 2690: 'ènements' (ID: 178488)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.20612896978855133
    2. 'ent' → logprob: -1.7061289548873901
    3. '_queue' → logprob: -6.58112907409668
    4. 'ènements' → logprob: -6.58112907409668
    5. 'queue' → logprob: -6.95612907409668
    6. 'é' → logprob: -8.20612907409668
    7. 'events' → logprob: -9.08112907409668
    8. 'e' → logprob: -9.20612907409668
    9. 'è' → logprob: -9.70612907409668
    10. 'енти' → logprob: -10.33112907409668

Token 2691: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2692: ' mais' (ID: 2899)
  Prédit: ' mais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.6942455768585205
    2. '#' → logprob: -2.0692455768585205
    3. 'mais' → logprob: -2.1942455768585205
    4. ' but' → logprob: -2.6942455768585205
    5. 'but' → logprob: -2.8192455768585205
    6. 'on' → logprob: -3.3192455768585205
    7. ' on' → logprob: -3.3192455768585205
    8. '       ' → logprob: -4.444245338439941
    9. '    ' → logprob: -5.069245338439941
    10. 'continue' → logprob: -5.319245338439941

Token 2693: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6360522508621216
    2. 'on' → logprob: -1.2610522508621216
    3. ' on' → logprob: -3.261052131652832
    4. 'def' → logprob: -3.386052131652832
    5. '   ' → logprob: -3.886052131652832
    6. 'continue' → logprob: -4.011052131652832
    7. 'contin' → logprob: -4.386052131652832
    8. 'for' → logprob: -4.511052131652832
    9. 'continu' → logprob: -5.011052131652832
    10. '    ' → logprob: -5.136052131652832

Token 2694: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6253319382667542
    2. ' continue' → logprob: -1.1253318786621094
    3. 'ignore' → logprob: -3.3753318786621094
    4. 'contin' → logprob: -3.7503318786621094
    5. 'aj' → logprob: -3.8753318786621094
    6. ' ignore' → logprob: -4.250331878662109
    7. ' ajoute' → logprob: -5.000331878662109
    8. 'push' → logprob: -5.500331878662109
    9. 'avance' → logprob: -5.500331878662109
    10. 'continu' → logprob: -5.875331878662109

Token 2695: ' programme' (ID: 18190)
  Prédit: 'schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'schedule' → logprob: -0.5610462427139282
    2. 'push' → logprob: -1.4360462427139282
    3. ' schedule' → logprob: -2.6860461235046387
    4. 'aj' → logprob: -2.9360461235046387
    5. 'pas' → logprob: -4.186046123504639
    6. 'p' → logprob: -4.686046123504639
    7. 'flush' → logprob: -5.686046123504639
    8. 's' → logprob: -5.686046123504639
    9. 'for' → logprob: -5.811046123504639
    10. '_schedule' → logprob: -5.936046123504639

Token 2696: ' que' (ID: 661)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39478883147239685
    2. 'ra' → logprob: -2.1447887420654297
    3. 'pas' → logprob: -2.8947887420654297
    4. '       ' → logprob: -3.2697887420654297
    5. '        ' → logprob: -3.3947887420654297
    6. 'plus' → logprob: -3.5197887420654297
    7. ' pas' → logprob: -3.8947887420654297
    8. ' rien' → logprob: -4.76978874206543
    9. ' que' → logprob: -5.01978874206543
    10. ' plus' → logprob: -5.39478874206543

Token 2697: ' les' (ID: 1341)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6823660731315613
    2. 'les' → logprob: -1.307366132736206
    3. 'que' → logprob: -1.932366132736206
    4. 'new' → logprob: -3.557366132736206
    5. 'plus' → logprob: -3.932366132736206
    6. 'des' → logprob: -4.057365894317627
    7. 'pas' → logprob: -6.057365894317627
    8. 'le' → logprob: -6.557365894317627
    9. 'à' → logprob: -6.557365894317627
    10. ' de' → logprob: -6.557365894317627

Token 2698: ' prochains' (ID: 188913)
  Prédit: 'nou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nou' → logprob: -0.32440385222435
    2. 'new' → logprob: -1.8244038820266724
    3. 'n' → logprob: -2.949403762817383
    4. 'f' → logprob: -3.949403762817383
    5. ' nouveaux' → logprob: -4.324403762817383
    6. 'events' → logprob: -4.949403762817383
    7. 'év' → logprob: -5.324403762817383
    8. 'next' → logprob: -5.699403762817383
    9. ' futurs' → logprob: -6.199403762817383
    10. 'future' → logprob: -6.324403762817383

Token 2699: ' év' (ID: 23692)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.40601491928100586
    2. 'ships' → logprob: -2.406014919281006
    3. '<|end|>' → logprob: -2.406014919281006
    4. '_token' → logprob: -3.656014919281006
    5. '_tokens' → logprob: -3.656014919281006
    6. 'token' → logprob: -4.031014919281006
    7. 'ship' → logprob: -4.531014919281006
    8. ' tokens' → logprob: -4.531014919281006
    9. ' ' → logprob: -4.656014919281006
    10. 'def' → logprob: -5.031014919281006

Token 2700: 'ènements' (ID: 178488)
  Prédit: 'ènements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ènements' → logprob: -0.19882725179195404
    2. 'ents' → logprob: -2.0738272666931152
    3. 'ènement' → logprob: -3.8238272666931152
    4. 'én' → logprob: -4.323827266693115
    5. 'énement' → logprob: -5.073827266693115
    6. 'ent' → logprob: -5.823827266693115
    7. 'nements' → logprob: -5.948827266693115
    8. 'èn' → logprob: -6.073827266693115
    9. 'è' → logprob: -6.198827266693115
    10. 'é' → logprob: -7.198827266693115

Token 2701: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2702: ''arrivée' (ID: 156076)
  Prédit: ''arrivée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arrivée' → logprob: -0.17135849595069885
    2. 'arr' → logprob: -3.421358585357666
    3. ''arr' → logprob: -3.546358585357666
    4. 'e' → logprob: -3.546358585357666
    5. ''arrive' → logprob: -3.796358585357666
    6. 'arrival' → logprob: -4.171358585357666
    7. 'é' → logprob: -4.796358585357666
    8. '’arrivée' → logprob: -5.171358585357666
    9. ' arrivée' → logprob: -5.796358585357666
    10. '_arr' → logprob: -5.796358585357666

Token 2703: ' bate' (ID: 39378)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2704: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.6512564420700073
    2. 'au' → logprob: -0.7762564420700073
    3. 'ateau' → logprob: -5.401256561279297
    4. 'te' → logprob: -6.026256561279297
    5. '```' → logprob: -6.151256561279297
    6. 'ate' → logprob: -6.401256561279297
    7. 'a' → logprob: -6.526256561279297
    8. '   ' → logprob: -7.151256561279297
    9. '
' → logprob: -7.151256561279297
    10. '  ' → logprob: -7.526256561279297

Token 2705: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2706: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002569356467574835
    2. '   ' → logprob: -6.252569198608398
    3. '<|end|>' → logprob: -8.502569198608398
    4. 'for' → logprob: -9.377569198608398
    5. '        
' → logprob: -9.377569198608398
    6. '
' → logprob: -9.502569198608398
    7. ')' → logprob: -10.252569198608398
    8. '    
' → logprob: -10.627569198608398
    9. '```' → logprob: -10.627569198608398
    10. '[' → logprob: -10.752569198608398

Token 2707: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01499187108129263
    2. '   ' → logprob: -4.889991760253906
    3. '
' → logprob: -5.139991760253906
    4. '        
' → logprob: -6.889991760253906
    5. '    
' → logprob: -8.764991760253906
    6. '<|end|>' → logprob: -9.514991760253906
    7. '	' → logprob: -9.764991760253906
    8. 'for' → logprob: -10.139991760253906
    9. ' for' → logprob: -10.889991760253906
    10. 'return' → logprob: -11.014991760253906

Token 2708: ' Ils' (ID: 31199)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08605267852544785
    2. '   ' → logprob: -3.461052656173706
    3. '        
' → logprob: -3.961052656173706
    4. '
' → logprob: -4.086052894592285
    5. ' 
' → logprob: -5.211052894592285
    6. '    
' → logprob: -5.711052894592285
    7. '<|end|>' → logprob: -6.711052894592285
    8. 'for' → logprob: -7.086052894592285
    9. '    ' → logprob: -7.336052894592285
    10. '  ' → logprob: -7.461052894592285

Token 2709: ' seront' (ID: 35024)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.47249698638916016
    2. 'continue' → logprob: -1.9724969863891602
    3. '       ' → logprob: -2.72249698638916
    4. '   ' → logprob: -3.34749698638916
    5. '#' → logprob: -3.47249698638916
    6. '    ' → logprob: -3.84749698638916
    7. ' #' → logprob: -4.59749698638916
    8. 'for' → logprob: -4.97249698638916
    9. 'contin' → logprob: -4.97249698638916
    10. ' will' → logprob: -5.22249698638916

Token 2710: ' ajout' (ID: 64605)
  Prédit: 'ignor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ignor' → logprob: -1.226791262626648
    2. 'trait' → logprob: -2.1017913818359375
    3. 'ignored' → logprob: -2.2267913818359375
    4. 'valid' → logprob: -2.2267913818359375
    5. 'g' → logprob: -2.4767913818359375
    6. 'invalid' → logprob: -2.6017913818359375
    7. ' ignor' → logprob: -2.8517913818359375
    8. 'fil' → logprob: -3.4767913818359375
    9. 'ign' → logprob: -4.2267913818359375
    10. ' filtr' → logprob: -4.8517913818359375

Token 2711: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -1.008210301399231
    2. '_' → logprob: -1.383210301399231
    3. 's' → logprob: -1.508210301399231
    4. ')' → logprob: -3.8832101821899414
    5. ' ' → logprob: -3.8832101821899414
    6. '(' → logprob: -4.008210182189941
    7. 'ed' → logprob: -4.133210182189941
    8. 'es' → logprob: -4.133210182189941
    9. '_s' → logprob: -4.258210182189941
    10. 'é' → logprob: -4.633210182189941

Token 2712: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9621068239212036
    2. '<|end|>' → logprob: -2.087106704711914
    3. ' uniquement' → logprob: -2.337106704711914
    4. '       ' → logprob: -2.712106704711914
    5. ',' → logprob: -3.587106704711914
    6. 'tokens' → logprob: -3.837106704711914
    7. ' à' → logprob: -3.837106704711914
    8. '   ' → logprob: -3.962106704711914
    9. ' seulement' → logprob: -3.962106704711914
    10. ' au' → logprob: -4.212106704711914

Token 2713: ' on' (ID: 402)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.530393123626709
    2. 'True' → logprob: -2.030393123626709
    3. 'not' → logprob: -2.655393123626709
    4. ' True' → logprob: -3.780393123626709
    5. 'necessary' → logprob: -3.905393123626709
    6. 'v' → logprob: -3.905393123626709
    7. 'needed' → logprob: -4.280393123626709
    8. 's' → logprob: -4.405393123626709
    9. 'possible' → logprob: -4.655393123626709
    10. 'valid' → logprob: -4.780393123626709

Token 2714: ' detect' (ID: 11839)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4435136616230011
    2. ' continue' → logprob: -2.9435136318206787
    3. 'schedule' → logprob: -3.4435136318206787
    4. 'detect' → logprob: -3.4435136318206787
    5. 'a' → logprob: -4.068513870239258
    6. 're' → logprob: -4.193513870239258
    7. 'd' → logprob: -4.443513870239258
    8. 'g' → logprob: -4.443513870239258
    9. 'aj' → logprob: -4.568513870239258
    10. 'p' → logprob: -4.568513870239258

Token 2715: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00014942926645744592
    2. 'é' → logprob: -9.125149726867676
    3. 'ed' → logprob: -11.000149726867676
    4. '   ' → logprob: -12.500149726867676
    5. 'és' → logprob: -12.750149726867676
    6. '       ' → logprob: -12.750149726867676
    7. 'es' → logprob: -12.875149726867676
    8. 'ected' → logprob: -12.875149726867676
    9. '(e' → logprob: -13.125149726867676
    10. 'ent' → logprob: -13.500149726867676

Token 2716: ' que' (ID: 661)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.36436936259269714
    2. ' que' → logprob: -2.1143693923950195
    3. ' des' → logprob: -2.4893693923950195
    4. ' une' → logprob: -3.3643693923950195
    5. 'un' → logprob: -4.1143693923950195
    6. 'd' → logprob: -5.1143693923950195
    7. 'des' → logprob: -5.3643693923950195
    8. ' a' → logprob: -5.3643693923950195
    9. 'que' → logprob: -5.6143693923950195
    10. 'une' → logprob: -5.7393693923950195

Token 2717: ' la' (ID: 557)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.8032098412513733
    2. 'True' → logprob: -1.4282097816467285
    3. ' True' → logprob: -1.6782097816467285
    4. ' ships' → logprob: -2.6782097816467285
    5. 'False' → logprob: -3.6782097816467285
    6. ' False' → logprob: -4.9282097816467285
    7. 's' → logprob: -5.6782097816467285
    8. 'not' → logprob: -5.9282097816467285
    9. 'ship' → logprob: -6.0532097816467285
    10. 'len' → logprob: -6.0532097816467285

Token 2718: ' position' (ID: 4010)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -1.1186121702194214
    2. 'speed' → logprob: -1.7436121702194214
    3. 'pos' → logprob: -1.8686121702194214
    4. 'ships' → logprob: -2.243612289428711
    5. 'v' → logprob: -2.993612289428711
    6. ' ship' → logprob: -3.493612289428711
    7. ' ships' → logprob: -3.868612289428711
    8. 'position' → logprob: -3.993612289428711
    9. ' speed' → logprob: -4.118612289428711
    10. 's' → logprob: -4.118612289428711

Token 2719: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2865639925003052
    2. ' des' → logprob: -1.9115639925003052
    3. '<|end|>' → logprob: -2.0365638732910156
    4. ' ' → logprob: -2.6615638732910156
    5. ' actuelle' → logprob: -2.7865638732910156
    6. ' s' → logprob: -3.1615638732910156
    7. 'des' → logprob: -3.4115638732910156
    8. '_' → logprob: -3.6615638732910156
    9. ' suivante' → logprob: -4.036563873291016
    10. 'n' → logprob: -4.286563873291016

Token 2720: ' été' (ID: 9799)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'changed' → logprob: -0.226068377494812
    2. ' changé' → logprob: -2.3510684967041016
    3. 'b' → logprob: -3.3510684967041016
    4. 'change' → logprob: -4.476068496704102
    5. 'not' → logprob: -5.476068496704102
    6. 'avance' → logprob: -5.476068496704102
    7. '+' → logprob: -5.601068496704102
    8. 'chang' → logprob: -5.726068496704102
    9. 'ch' → logprob: -5.726068496704102
    10. 'n' → logprob: -5.976068496704102

Token 2721: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.19202041625976562
    2. 'atte' → logprob: -2.6920204162597656
    3. ' dépass' → logprob: -3.5670204162597656
    4. 'chang' → logprob: -3.5670204162597656
    5. ' atte' → logprob: -3.6920204162597656
    6. ' mod' → logprob: -4.317020416259766
    7. 'ch' → logprob: -5.067020416259766
    8. 'mise' → logprob: -6.692020416259766
    9. 'avance' → logprob: -7.567020416259766
    10. 'updated' → logprob: -7.692020416259766

Token 2722: 'ifiés' (ID: 95753)
  Prédit: 'ifiée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiée' → logprob: -0.17802497744560242
    2. 'ifié' → logprob: -1.9280250072479248
    3. 'if' → logprob: -4.678024768829346
    4. 'ifi' → logprob: -5.678024768829346
    5. 'ifiés' → logprob: -6.053024768829346
    6. 'ifiées' → logprob: -6.053024768829346
    7. 'ifie' → logprob: -9.178025245666504
    8. 'fi' → logprob: -10.178025245666504
    9. 'ified' → logprob: -11.178025245666504
    10. '
' → logprob: -11.678025245666504

Token 2723: ' ou' (ID: 2031)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2724: ' vitesse' (ID: 71752)
  Prédit: ' recal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recal' → logprob: -0.5611645579338074
    2. 'l' → logprob: -2.686164617538452
    3. 'la' → logprob: -3.061164617538452
    4. 'v' → logprob: -3.061164617538452
    5. '#' → logprob: -3.936164617538452
    6. ' ' → logprob: -3.936164617538452
    7. ' la' → logprob: -4.186164379119873
    8. 'leur' → logprob: -4.186164379119873
    9. ' vitesse' → logprob: -4.186164379119873
    10. 'le' → logprob: -4.311164379119873

Token 2725: ' a' (ID: 261)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1643741130828857
    2. '<|end|>' → logprob: -1.4143741130828857
    3. '_' → logprob: -2.1643741130828857
    4. ')' → logprob: -2.6643741130828857
    5. ',' → logprob: -2.6643741130828857
    6. '       ' → logprob: -3.0393741130828857
    7. ' ' → logprob: -3.9143741130828857
    8. '#' → logprob: -4.039374351501465
    9. '...' → logprob: -4.039374351501465
    10. '   ' → logprob: -4.164374351501465

Token 2726: ' changé' (ID: 115706)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.1562703251838684
    2. ' changé' → logprob: -2.7812702655792236
    3. 'chang' → logprob: -4.031270503997803
    4. 'changed' → logprob: -4.156270503997803
    5. 'change' → logprob: -4.156270503997803
    6. 'changer' → logprob: -4.281270503997803
    7. 'b' → logprob: -4.656270503997803
    8. 'augment' → logprob: -5.156270503997803
    9. 'd' → logprob: -7.406270503997803
    10. 'vari' → logprob: -8.031270027160645

Token 2727: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19529671967029572
    2. '       ' → logprob: -2.5702967643737793
    3. '    
' → logprob: -3.4452967643737793
    4. '<|end|>' → logprob: -3.4452967643737793
    5. '
' → logprob: -4.320296764373779
    6. '  
' → logprob: -5.195296764373779
    7. ' 
' → logprob: -5.195296764373779
    8. '\n' → logprob: -5.945296764373779
    9. '        
' → logprob: -5.945296764373779
    10. '<|end|>' → logprob: -6.695296764373779

Token 2728: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022896595299243927
    2. '       ' → logprob: -4.397896766662598
    3. '<|end|>' → logprob: -5.397896766662598
    4. '
' → logprob: -5.522896766662598
    5. '    
' → logprob: -6.647896766662598
    6. '<|end|>' → logprob: -8.397896766662598
    7. '	' → logprob: -9.522896766662598
    8. '        
' → logprob: -9.647896766662598
    9. 'for' → logprob: -10.397896766662598
    10. '	for' → logprob: -10.397896766662598

Token 2729: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047436170279979706
    2. '   ' → logprob: -3.922436237335205
    3. ' for' → logprob: -5.047436237335205
    4. 'for' → logprob: -5.047436237335205
    5. '        
' → logprob: -5.047436237335205
    6. '
' → logprob: -5.672436237335205
    7. '    
' → logprob: -6.797436237335205
    8. ' 
' → logprob: -6.922436237335205
    9. '<|end|>' → logprob: -7.672436237335205
    10. '    ' → logprob: -8.422435760498047

Token 2730: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29321300983428955
    2. '       ' → logprob: -1.9182130098342896
    3. 'pass' → logprob: -2.918212890625
    4. '   ' → logprob: -3.418212890625
    5. '#' → logprob: -4.043212890625
    6. ' for' → logprob: -6.293212890625
    7. 'return' → logprob: -8.543212890625
    8. '
' → logprob: -8.543212890625
    9. 'non' → logprob: -8.668212890625
    10. ' pass' → logprob: -9.418212890625

Token 2731: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05164439231157303
    2. ' def' → logprob: -3.9266443252563477
    3. '   ' → logprob: -4.676644325256348
    4. '#' → logprob: -5.426644325256348
    5. 'fonction' → logprob: -5.551644325256348
    6. 'function' → logprob: -5.926644325256348
    7. '
' → logprob: -6.176644325256348
    8. ' function' → logprob: -6.301644325256348
    9. 'for' → logprob: -6.926644325256348
    10. ' #' → logprob: -7.426644325256348

Token 2732: ' sera' (ID: 15511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4824487268924713
    2. '   ' → logprob: -0.9824486970901489
    3. 'def' → logprob: -5.732448577880859
    4. '<|end|>' → logprob: -7.232448577880859
    5. '        
' → logprob: -7.357448577880859
    6. ':' → logprob: -7.857448577880859
    7. '    ' → logprob: -7.857448577880859
    8. '    
' → logprob: -7.857448577880859
    9. '#' → logprob: -7.982448577880859
    10. '
' → logprob: -8.60744857788086

Token 2733: ' appelée' (ID: 179130)
  Prédit: 'appel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appel' → logprob: -0.4695986211299896
    2. 'compl' → logprob: -2.0945985317230225
    3. 'called' → logprob: -2.2195985317230225
    4. 'app' → logprob: -2.9695985317230225
    5. 'util' → logprob: -3.5945985317230225
    6. ' appelée' → logprob: -3.8445985317230225
    7. ' called' → logprob: -4.219598770141602
    8. 'com' → logprob: -4.719598770141602
    9. 'continue' → logprob: -4.844598770141602
    10. 'termin' → logprob: -5.719598770141602

Token 2734: ' seulement' (ID: 32072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7750312685966492
    2. 'for' → logprob: -1.400031328201294
    3. '       ' → logprob: -1.775031328201294
    4. ' for' → logprob: -3.025031328201294
    5. ' uniquement' → logprob: -3.775031328201294
    6. ' only' → logprob: -4.150031089782715
    7. ' seulement' → logprob: -4.150031089782715
    8. 'only' → logprob: -4.900031089782715
    9. 'pass' → logprob: -6.150031089782715
    10. 'def' → logprob: -6.525031089782715

Token 2735: ' après' (ID: 16460)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pour' → logprob: -0.5181021690368652
    2. ' pour' → logprob: -2.0181021690368652
    3. 'for' → logprob: -2.0181021690368652
    4. ' lorsque' → logprob: -3.2681021690368652
    5. 'when' → logprob: -3.7681021690368652
    6. ' ici' → logprob: -4.518102169036865
    7. ' lorsqu' → logprob: -4.518102169036865
    8. ' for' → logprob: -4.768102169036865
    9. 'sur' → logprob: -4.893102169036865
    10. 'dans' → logprob: -4.893102169036865

Token 2736: ' ajust' (ID: 32650)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.5618606805801392
    2. 'speed' → logprob: -1.8118606805801392
    3. 'une' → logprob: -2.6868605613708496
    4. 'v' → logprob: -3.3118605613708496
    5. 'les' → logprob: -3.4368605613708496
    6. 'la' → logprob: -3.9368605613708496
    7. 'changes' → logprob: -4.06186056137085
    8. 'velocity' → logprob: -4.56186056137085
    9. 'un' → logprob: -4.56186056137085
    10. 'def' → logprob: -4.93686056137085

Token 2737: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.759505033493042
    2. 'ements' → logprob: -1.134505033493042
    3. '_s' → logprob: -2.759505033493042
    4. 'er' → logprob: -3.134505033493042
    5. 'ment' → logprob: -3.759505033493042
    6. '   ' → logprob: -4.009505271911621
    7. '_speed' → logprob: -4.009505271911621
    8. 'e' → logprob: -4.259505271911621
    9. '_' → logprob: -5.134505271911621
    10. 'ments' → logprob: -5.259505271911621

Token 2738: ' vitesse' (ID: 71752)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.635945737361908
    2. 'des' → logprob: -1.5109457969665527
    3. '   ' → logprob: -2.0109457969665527
    4. '_des' → logprob: -3.2609457969665527
    5. 's' → logprob: -3.5109457969665527
    6. '_' → logprob: -3.8859457969665527
    7. ' des' → logprob: -4.885945796966553
    8. 'def' → logprob: -5.385945796966553
    9. 'de' → logprob: -6.135945796966553
    10. 'spe' → logprob: -6.385945796966553

Token 2739: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18884921073913574
    2. '<|end|>' → logprob: -1.9388492107391357
    3. '       ' → logprob: -4.188849449157715
    4. '<|end|>' → logprob: -4.938849449157715
    5. '    
' → logprob: -6.188849449157715
    6. '
' → logprob: -6.313849449157715
    7. ')' → logprob: -7.563849449157715
    8. '	return' → logprob: -8.563849449157715
    9. 'tokens' → logprob: -9.063849449157715
    10. '	' → logprob: -9.188849449157715

Token 2740: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4933406710624695
    2. '       ' → logprob: -0.9933406710624695
    3. 'for' → logprob: -3.9933407306671143
    4. '
' → logprob: -7.993340492248535
    5. '	for' → logprob: -9.243340492248535
    6. '    
' → logprob: -9.493340492248535
    7. ' for' → logprob: -9.493340492248535
    8. '        
' → logprob: -10.743340492248535
    9. '```' → logprob: -11.618340492248535
    10. 'def' → logprob: -12.118340492248535

Token 2741: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43455076217651367
    2. 'for' → logprob: -1.4345507621765137
    3. '   ' → logprob: -2.1845507621765137
    4. ' for' → logprob: -6.434550762176514
    5. '	for' → logprob: -9.809551239013672
    6. '
' → logprob: -10.684551239013672
    7. '    
' → logprob: -12.934551239013672
    8. '        
' → logprob: -12.934551239013672
    9. '           ' → logprob: -13.684551239013672
    10. '```' → logprob: -13.684551239013672

Token 2742: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7547990083694458
    2. 'for' → logprob: -1.1297990083694458
    3. '   ' → logprob: -1.7547990083694458
    4. 'event' → logprob: -4.129798889160156
    5. '#' → logprob: -4.254798889160156
    6. 'def' → logprob: -7.004798889160156
    7. '
' → logprob: -7.379798889160156
    8. 'non' → logprob: -7.754798889160156
    9. ' for' → logprob: -7.879798889160156
    10. 'heap' → logprob: -8.379798889160156

Token 2743: ' programme' (ID: 18190)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03753342479467392
    2. ' for' → logprob: -3.7875335216522217
    3. '   ' → logprob: -4.412533283233643
    4. '
' → logprob: -7.537533283233643
    5. 'import' → logprob: -7.787533283233643
    6. '#' → logprob: -8.1625337600708
    7. 'def' → logprob: -8.5375337600708
    8. '  ' → logprob: -8.7875337600708
    9. 'pour' → logprob: -8.7875337600708
    10. '	for' → logprob: -9.0375337600708

Token 2744: ' l' (ID: 305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20239003002643585
    2. 'for' → logprob: -1.7023900747299194
    3. '   ' → logprob: -7.577390193939209
    4. ' for' → logprob: -7.702390193939209
    5. '           ' → logprob: -12.82738971710205
    6. '
' → logprob: -13.07738971710205
    7. '	for' → logprob: -13.20238971710205
    8. 'def' → logprob: -13.45238971710205
    9. ' ' → logprob: -13.95238971710205
    10. '  ' → logprob: -14.45238971710205

Token 2745: ''arrivée' (ID: 156076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02495894767343998
    2. '   ' → logprob: -4.149959087371826
    3. 'e' → logprob: -5.774959087371826
    4. ' for' → logprob: -6.149959087371826
    5. 'im' → logprob: -7.774959087371826
    6. '       ' → logprob: -7.774959087371826
    7. 'def' → logprob: -7.899959087371826
    8. '#' → logprob: -7.899959087371826
    9. 'en' → logprob: -8.149958610534668
    10. 'i' → logprob: -8.524958610534668

Token 2746: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2409969568252563
    2. 'des' → logprob: -1.6159969568252563
    3. '   ' → logprob: -1.8659969568252563
    4. 's' → logprob: -1.8659969568252563
    5. ' des' → logprob: -2.490996837615967
    6. '(i' → logprob: -3.240996837615967
    7. 'de' → logprob: -3.490996837615967
    8. ' de' → logprob: -4.240996837615967
    9. 'i' → logprob: -4.490996837615967
    10. 'for' → logprob: -4.865996837615967

Token 2747: ' bateau' (ID: 123794)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17252206802368164
    2. 'next' → logprob: -3.0475220680236816
    3. '   ' → logprob: -3.7975220680236816
    4. 'for' → logprob: -4.047522068023682
    5. 'pro' → logprob: -4.297522068023682
    6. 'ships' → logprob: -4.422522068023682
    7. '```' → logprob: -4.797522068023682
    8. 'M' → logprob: -4.922522068023682
    9. 'dern' → logprob: -5.422522068023682
    10. 'prem' → logprob: -5.672522068023682

Token 2748: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6507098078727722
    2. 'for' → logprob: -2.025709867477417
    3. '(i' → logprob: -2.150709867477417
    4. '       ' → logprob: -2.650709867477417
    5. 's' → logprob: -2.650709867477417
    6. 'à' → logprob: -3.150709867477417
    7. '[i' → logprob: -4.150709629058838
    8. '   ' → logprob: -4.525709629058838
    9. 'pour' → logprob: -5.275709629058838
    10. ' for' → logprob: -5.400709629058838

Token 2749: ' la' (ID: 557)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6815477609634399
    2. 'K' → logprob: -1.80654776096344
    3. 'gate' → logprob: -1.80654776096344
    4. 'ships' → logprob: -1.93154776096344
    5. '   ' → logprob: -5.68154764175415
    6. 'k' → logprob: -6.18154764175415
    7. 'positions' → logprob: -6.30654764175415
    8. 'ship' → logprob: -6.30654764175415
    9. '0' → logprob: -6.93154764175415
    10. '(K' → logprob: -6.93154764175415

Token 2750: ' prochaine' (ID: 78876)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.3922554850578308
    2. 'K' → logprob: -1.3922555446624756
    3. 'b' → logprob: -4.3922553062438965
    4. 'g' → logprob: -4.5172553062438965
    5. 'next' → logprob: -4.7672553062438965
    6. 'gate' → logprob: -4.8922553062438965
    7. 'port' → logprob: -5.5172553062438965
    8. 'plus' → logprob: -5.6422553062438965
    9. 'bord' → logprob: -5.6422553062438965
    10. 'prox' → logprob: -5.6422553062438965

Token 2751: ' position' (ID: 4010)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.7269111275672913
    2. 'position' → logprob: -0.8519111275672913
    3. 'pos' → logprob: -2.8519110679626465
    4. 'porte' → logprob: -5.1019110679626465
    5. '1' → logprob: -5.3519110679626465
    6. 'port' → logprob: -5.3519110679626465
    7. 'distance' → logprob: -5.9769110679626465
    8. '   ' → logprob: -6.4769110679626465
    9. 'pass' → logprob: -6.6019110679626465
    10. '#' → logprob: -7.1019110679626465

Token 2752: ' importante' (ID: 13431)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9399129748344421
    2. '<|end|>' → logprob: -1.439913034439087
    3. '<|end|>' → logprob: -2.814913034439087
    4. '   ' → logprob: -2.939913034439087
    5. '(ship' → logprob: -3.064913034439087
    6. '(s' → logprob: -3.314913034439087
    7. '(next' → logprob: -3.314913034439087
    8. '(i' → logprob: -3.564913034439087
    9. '_next' → logprob: -4.064912796020508
    10. '[i' → logprob: -4.564912796020508

Token 2753: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03980586677789688
    2. '<|end|>' → logprob: -3.6648058891296387
    3. '<|end|>' → logprob: -5.664805889129639
    4. '   ' → logprob: -6.289805889129639
    5. ' for' → logprob: -6.789805889129639
    6. ' (' → logprob: -7.039805889129639
    7. 'for' → logprob: -7.039805889129639
    8. '        
' → logprob: -7.164805889129639
    9. ',' → logprob: -7.414805889129639
    10. '(' → logprob: -7.414805889129639

Token 2754: ' gate' (ID: 27172)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3331533670425415
    2. 'for' → logprob: -2.083153247833252
    3. 'next' → logprob: -3.083153247833252
    4. ' for' → logprob: -3.333153247833252
    5. 'pos' → logprob: -3.708153247833252
    6. 'positions' → logprob: -3.958153247833252
    7. '<|end|>' → logprob: -4.083153247833252
    8. '#' → logprob: -5.583153247833252
    9. ' next' → logprob: -6.083153247833252
    10. 'pass' → logprob: -6.708153247833252

Token 2755: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010244477540254593
    2. 'for' → logprob: -5.635244369506836
    3. '   ' → logprob: -6.260244369506836
    4. '<|end|>' → logprob: -6.635244369506836
    5. 's' → logprob: -7.260244369506836
    6. '        
' → logprob: -7.385244369506836
    7. 'def' → logprob: -8.010244369506836
    8. '#' → logprob: -8.260244369506836
    9. ' for' → logprob: -8.260244369506836
    10. ',' → logprob: -8.635244369506836

Token 2756: ' fin' (ID: 2131)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8083096146583557
    2. '(' → logprob: -1.308309555053711
    3. 'ships' → logprob: -2.058309555053711
    4. '(K' → logprob: -2.933309555053711
    5. '(ship' → logprob: -3.058309555053711
    6. '(s' → logprob: -3.683309555053711
    7. 'max' → logprob: -5.308309555053711
    8. 'ship' → logprob: -5.308309555053711
    9. 'g' → logprob: -5.433309555053711
    10. 'gate' → logprob: -6.183309555053711

Token 2757: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1460927128791809
    2. '   ' → logprob: -2.396092653274536
    3. '_' → logprob: -4.771092891693115
    4. '<|end|>' → logprob: -5.396092891693115
    5. '        
' → logprob: -5.396092891693115
    6. 's' → logprob: -5.646092891693115
    7. ',' → logprob: -5.771092891693115
    8. '[' → logprob: -6.021092891693115
    9. '.' → logprob: -6.396092891693115
    10. '(s' → logprob: -6.396092891693115

Token 2758: ' K' (ID: 658)
  Prédit: 'simulation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simulation' → logprob: -0.5456836819648743
    2. 'p' → logprob: -1.0456836223602295
    3. 'course' → logprob: -3.5456836223602295
    4. 'territ' → logprob: -4.170683860778809
    5. 'K' → logprob: -4.545683860778809
    6. 'zone' → logprob: -5.045683860778809
    7. 'sim' → logprob: -5.920683860778809
    8. ' simulation' → logprob: -7.045683860778809
    9. 'cours' → logprob: -7.295683860778809
    10. 'la' → logprob: -7.670683860778809

Token 2759: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12576109170913696
    2. '   ' → logprob: -3.000761032104492
    3. '
' → logprob: -3.750761032104492
    4. '<|end|>' → logprob: -4.500761032104492
    5. 'def' → logprob: -4.625761032104492
    6. '    
' → logprob: -5.500761032104492
    7. ')' → logprob: -5.625761032104492
    8. '        
' → logprob: -5.625761032104492
    9. 'for' → logprob: -5.750761032104492
    10. ',' → logprob: -6.250761032104492

Token 2760: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6657675504684448
    2. 'EPS' → logprob: -1.5407675504684448
    3. '100' → logprob: -2.1657676696777344
    4. 'K' → logprob: -2.1657676696777344
    5. '0' → logprob: -3.6657676696777344
    6. '+' → logprob: -5.915767669677734
    7. '#' → logprob: -5.915767669677734
    8. ' EPS' → logprob: -6.165767669677734
    9. 'N' → logprob: -6.665767669677734
    10. '10' → logprob: -6.790767669677734

Token 2761: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16804423928260803
    2. '
' → logprob: -3.168044328689575
    3. '<|end|>' → logprob: -3.168044328689575
    4. '   ' → logprob: -4.168044090270996
    5. 'def' → logprob: -4.293044090270996
    6. 'for' → logprob: -4.418044090270996
    7. '        
' → logprob: -4.543044090270996
    8. '<|end|>' → logprob: -6.043044090270996
    9. ',' → logprob: -6.168044090270996
    10. ' for' → logprob: -6.293044090270996

Token 2762: 'au' (ID: 753)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6261245012283325
    2. ')' → logprob: -1.7511245012283325
    3. ')
' → logprob: -1.7511245012283325
    4. '0' → logprob: -2.376124382019043
    5. ' ' → logprob: -5.001124382019043
    6. 'EPS' → logprob: -5.251124382019043
    7. '   ' → logprob: -6.001124382019043
    8. ' )
' → logprob: -6.376124382019043
    9. ')

' → logprob: -6.626124382019043
    10. '
' → logprob: -6.751124382019043

Token 2763: ' del' (ID: 1083)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.15705423057079315
    2. '+' → logprob: -3.1570541858673096
    3. 'g' → logprob: -3.7820541858673096
    4. 'least' → logprob: -4.282054424285889
    5. ')' → logprob: -4.907054424285889
    6. 'max' → logprob: -5.157054424285889
    7. 'moins' → logprob: -5.532054424285889
    8. '+)' → logprob: -5.532054424285889
    9. ' moins' → logprob: -5.657054424285889
    10. ' K' → logprob: -5.657054424285889

Token 2764: 'à' (ID: 708)
  Prédit: 'à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.2944686710834503
    2. 'ant' → logprob: -2.294468641281128
    3. 'de' → logprob: -3.544468641281128
    4. 'a' → logprob: -3.919468641281128
    5. 'ent' → logprob: -4.169468879699707
    6. 'del' → logprob: -4.294468879699707
    7. 'la' → logprob: -4.794468879699707
    8. '-' → logprob: -5.044468879699707
    9. '```' → logprob: -5.294468879699707
    10. 'd' → logprob: -5.294468879699707

Token 2765: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9635267853736877
    2. '+' → logprob: -0.9635267853736877
    3. 'K' → logprob: -2.463526725769043
    4. ' +' → logprob: -3.338526725769043
    5. ' de' → logprob: -3.588526725769043
    6. '=' → logprob: -3.963526725769043
    7. 'de' → logprob: -4.213526725769043
    8. ')
' → logprob: -4.588526725769043
    9. ' )' → logprob: -4.588526725769043
    10. '   ' → logprob: -5.463526725769043

Token 2766: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0005722135538235307
    2. ' K' → logprob: -7.625572204589844
    3. '   ' → logprob: -10.250572204589844
    4. ')' → logprob: -11.250572204589844
    5. 'gate' → logprob: -12.375572204589844
    6. '  ' → logprob: -12.750572204589844
    7. ' ' → logprob: -12.750572204589844
    8. '       ' → logprob: -13.000572204589844
    9. 'the' → logprob: -13.125572204589844
    10. '
' → logprob: -13.250572204589844

Token 2767: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31654471158981323
    2. ')' → logprob: -1.941544771194458
    3. ')
' → logprob: -2.566544771194458
    4. ' +' → logprob: -3.191544771194458
    5. '   ' → logprob: -5.316544532775879
    6. ')

' → logprob: -6.816544532775879
    7. '       ' → logprob: -7.066544532775879
    8. ')
' → logprob: -7.191544532775879
    9. ' )' → logprob: -7.816544532775879
    10. '+)' → logprob: -8.066544532775879

Token 2768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00987484585493803
    2. '   ' → logprob: -5.1348748207092285
    3. '
' → logprob: -6.1348748207092285
    4. '        
' → logprob: -7.3848748207092285
    5. 'def' → logprob: -7.6348748207092285
    6. 'for' → logprob: -8.259875297546387
    7. '    
' → logprob: -9.259875297546387
    8. '```' → logprob: -10.009875297546387
    9. 'next' → logprob: -10.134875297546387
    10. '  
' → logprob: -10.384875297546387

Token 2769: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08007888495922089
    2. '
' → logprob: -2.8300788402557373
    3. '   ' → logprob: -4.330079078674316
    4. 'for' → logprob: -6.455079078674316
    5. '    
' → logprob: -7.080079078674316
    6. '        
' → logprob: -7.205079078674316
    7. ' for' → logprob: -7.955079078674316
    8. ' 
' → logprob: -8.330079078674316
    9. '  
' → logprob: -8.955079078674316
    10. '\n' → logprob: -9.080079078674316

Token 2770: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023503785952925682
    2. 'for' → logprob: -4.39850378036499
    3. '
' → logprob: -5.02350378036499
    4. '   ' → logprob: -6.27350378036499
    5. '        
' → logprob: -7.02350378036499
    6. ' for' → logprob: -7.52350378036499
    7. 'def' → logprob: -8.148504257202148
    8. 'next' → logprob: -8.523504257202148
    9. '    
' → logprob: -9.023504257202148
    10. 'positions' → logprob: -9.273504257202148

Token 2771: ' position' (ID: 4010)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03625939041376114
    2. '   ' → logprob: -4.536259174346924
    3. ' for' → logprob: -4.786259174346924
    4. '#' → logprob: -5.411259174346924
    5. '       ' → logprob: -6.286259174346924
    6. '
' → logprob: -6.661259174346924
    7. 'pos' → logprob: -6.661259174346924
    8. 'next' → logprob: -6.786259174346924
    9. 'max' → logprob: -7.161259174346924
    10. 'pour' → logprob: -7.411259174346924

Token 2772: ' du' (ID: 1462)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7275501489639282
    2. '+' → logprob: -1.1025501489639282
    3. '_' → logprob: -3.6025500297546387
    4. '=' → logprob: -3.8525500297546387
    5. 's' → logprob: -4.102550029754639
    6. ')' → logprob: -4.102550029754639
    7. ' =' → logprob: -4.227550029754639
    8. '   ' → logprob: -4.352550029754639
    9. '       ' → logprob: -5.102550029754639
    10. 'for' → logprob: -5.102550029754639

Token 2773: ' bateau' (ID: 123794)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.8309282064437866
    2. 'bate' → logprob: -2.205928325653076
    3. 'front' → logprob: -2.330928325653076
    4. 'b' → logprob: -2.705928325653076
    5. 'dern' → logprob: -3.080928325653076
    6. ' ship' → logprob: -3.580928325653076
    7. 'su' → logprob: -3.580928325653076
    8. 'dev' → logprob: -3.580928325653076
    9. 'ships' → logprob: -3.580928325653076
    10. '```' → logprob: -4.080928325653076

Token 2774: ' devant' (ID: 37522)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0770847797393799
    2. '       ' → logprob: -1.9520847797393799
    3. ')' → logprob: -2.20208477973938
    4. '
' → logprob: -2.32708477973938
    5. 's' → logprob: -2.57708477973938
    6. 'def' → logprob: -3.45208477973938
    7. ' +' → logprob: -3.57708477973938
    8. ')
' → logprob: -3.70208477973938
    9. '_' → logprob: -3.82708477973938
    10. '+' → logprob: -4.202084541320801

Token 2775: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026871200650930405
    2. '       ' → logprob: -4.276871204376221
    3. '<|end|>' → logprob: -5.276871204376221
    4. '    
' → logprob: -5.526871204376221
    5. '
' → logprob: -6.026871204376221
    6. '        
' → logprob: -8.151870727539062
    7. '<|end|>' → logprob: -8.526870727539062
    8. ')' → logprob: -8.901870727539062
    9. '  
' → logprob: -9.026870727539062
    10. '...' → logprob: -9.776870727539062

Token 2776: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007281114812940359
    2. ' ' → logprob: -5.132281303405762
    3. '0' → logprob: -7.257281303405762
    4. 'EPS' → logprob: -7.882281303405762
    5. '   ' → logprob: -9.257281303405762
    6. '  ' → logprob: -10.444781303405762
    7. ' EPS' → logprob: -10.507281303405762
    8. '```' → logprob: -10.757281303405762
    9. '#' → logprob: -11.757281303405762
    10. '    ' → logprob: -11.757281303405762

Token 2777: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2778: ' respecter' (ID: 107203)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maint' → logprob: -0.43278512358665466
    2. 'respect' → logprob: -1.682785153388977
    3. 'le' → logprob: -3.3077850341796875
    4. 'év' → logprob: -3.8077850341796875
    5. 'l' → logprob: -4.1827850341796875
    6. 's' → logprob: -4.3077850341796875
    7. 'gestion' → logprob: -4.4327850341796875
    8. 'la' → logprob: -4.8077850341796875
    9. 'sé' → logprob: -5.3077850341796875
    10. 'distance' → logprob: -5.4327850341796875

Token 2779: ' distance' (ID: 9324)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -1.1073004007339478
    2. '1' → logprob: -1.7323004007339478
    3. 'distance' → logprob: -1.9823004007339478
    4. ' EPS' → logprob: -2.232300281524658
    5. 'l' → logprob: -2.357300281524658
    6. ' la' → logprob: -3.232300281524658
    7. ' distance' → logprob: -3.357300281524658
    8. 'la' → logprob: -4.232300281524658
    9. ' l' → logprob: -4.357300281524658
    10. ' ' → logprob: -4.607300281524658

Token 2780: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1484716683626175
    2. '   ' → logprob: -2.7734715938568115
    3. '
' → logprob: -3.8984715938568115
    4. 'def' → logprob: -4.398471832275391
    5. ')' → logprob: -4.648471832275391
    6. '        
' → logprob: -5.648471832275391
    7. ')
' → logprob: -5.898471832275391
    8. '(' → logprob: -6.023471832275391
    9. '<|end|>' → logprob: -6.023471832275391
    10. 'for' → logprob: -6.273471832275391

Token 2781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022469358518719673
    2. '   ' → logprob: -4.022469520568848
    3. '<|end|>' → logprob: -5.897469520568848
    4. 'def' → logprob: -7.647469520568848
    5. '<|end|>' → logprob: -8.147469520568848
    6. '
' → logprob: -8.897469520568848
    7. '        
' → logprob: -8.897469520568848
    8. 'for' → logprob: -9.147469520568848
    9. ')' → logprob: -9.147469520568848
    10. '    
' → logprob: -9.647469520568848

Token 2782: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13757136464118958
    2. 'for' → logprob: -2.262571334838867
    3. '
' → logprob: -4.387571334838867
    4. '   ' → logprob: -4.637571334838867
    5. ' for' → logprob: -7.137571334838867
    6. '        
' → logprob: -7.512571334838867
    7. 'def' → logprob: -8.262571334838867
    8. '#' (adapté à ' #') → logprob: -8.762571334838867
    9. '    
' → logprob: -8.887571334838867
    10. '  
' → logprob: -9.512571334838867

Token 2783: ' Pour' (ID: 13931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019757594913244247
    2. '
' → logprob: -5.2697577476501465
    3. '   ' → logprob: -5.2697577476501465
    4. 'def' → logprob: -5.5197577476501465
    5. 'for' → logprob: -6.1447577476501465
    6. '        
' → logprob: -6.5197577476501465
    7. ' for' → logprob: -7.2697577476501465
    8. '#' → logprob: -8.519757270812988
    9. '    
' → logprob: -8.769757270812988
    10. 'next' → logprob: -9.019757270812988

Token 2784: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012094692647224292
    2. 'each' → logprob: -9.625121116638184
    3. '```' → logprob: -11.250121116638184
    4. ' i' → logprob: -11.500121116638184
    5. '#' → logprob: -11.625121116638184
    6. '...' → logprob: -12.250121116638184
    7. 'for' → logprob: -12.875121116638184
    8. ' chaque' → logprob: -13.375121116638184
    9. 'continue' → logprob: -13.500121116638184
    10. '   ' → logprob: -13.625121116638184

Token 2785: ' bateau' (ID: 123794)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08950293064117432
    2. ' i' → logprob: -2.4645028114318848
    3. '   ' → logprob: -8.714503288269043
    4. ' ship' → logprob: -8.714503288269043
    5. 'ship' → logprob: -9.839503288269043
    6. ' ' → logprob: -9.964503288269043
    7. '```' → logprob: -11.152003288269043
    8. ' ' → logprob: -11.214503288269043
    9. '  ' → logprob: -11.339503288269043
    10. ')' → logprob: -11.339503288269043

Token 2786: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01997355744242668
    2. 'for' → logprob: -5.0199737548828125
    3. '   ' → logprob: -5.1449737548828125
    4. ' for' → logprob: -5.3949737548828125
    5. ':' → logprob: -7.3949737548828125
    6. ',' → logprob: -7.5199737548828125
    7. ':
' → logprob: -7.8949737548828125
    8. '        
' → logprob: -8.144973754882812
    9. '
' → logprob: -8.519973754882812
    10. '#' → logprob: -8.769973754882812

Token 2787: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8439998626708984
    2. ' for' → logprob: -1.5939998626708984
    3. 'for' → logprob: -1.9689998626708984
    4. 'pos' → logprob: -2.3439998626708984
    5. 'i' → logprob: -3.7189998626708984
    6. ' i' → logprob: -3.7189998626708984
    7. ' current' → logprob: -3.9689998626708984
    8. 'current' → logprob: -4.218999862670898
    9. ' pos' → logprob: -4.468999862670898
    10. 'next' → logprob: -4.843999862670898

Token 2788: ' calc' (ID: 25691)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6650614142417908
    2. 'continue' → logprob: -1.6650614738464355
    3. '       ' → logprob: -1.9150614738464355
    4. '#' → logprob: -3.2900614738464355
    5. '   ' → logprob: -3.2900614738464355
    6. 'def' → logprob: -3.2900614738464355
    7. 'contin' → logprob: -4.4150614738464355
    8. ' for' → logprob: -4.6650614738464355
    9. ':' → logprob: -5.7900614738464355
    10. ' continue' → logprob: -6.6650614738464355

Token 2789: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.000217006730963476
    2. 'cule' → logprob: -9.37521743774414
    3. 'ul' → logprob: -9.50021743774414
    4. 'ulate' → logprob: -10.87521743774414
    5. '```' → logprob: -11.75021743774414
    6. 'ulé' → logprob: -12.12521743774414
    7. '       ' → logprob: -12.50021743774414
    8. 'ure' → logprob: -12.75021743774414
    9. '#' → logprob: -13.12521743774414
    10. 'uler' → logprob: -13.12521743774414

Token 2790: ' sa' (ID: 880)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2131154537200928
    2. '   ' → logprob: -1.7131154537200928
    3. 'next' → logprob: -1.7131154537200928
    4. '#' → logprob: -2.3381154537200928
    5. 'la' → logprob: -3.0881154537200928
    6. ' la' → logprob: -3.0881154537200928
    7. ' next' → logprob: -3.3381154537200928
    8. 'pos' → logprob: -3.5881154537200928
    9. 'les' → logprob: -3.8381154537200928
    10. 'le' → logprob: -4.213115692138672

Token 2791: ' prochaine' (ID: 78876)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.20408804714679718
    2. 'pro' → logprob: -1.9540880918502808
    3. ' prochaine' → logprob: -4.32908821105957
    4. '#' → logprob: -4.95408821105957
    5. 'position' → logprob: -5.45408821105957
    6. '   ' → logprob: -5.70408821105957
    7. 'prox' → logprob: -5.70408821105957
    8. 'target' → logprob: -5.82908821105957
    9. '_next' → logprob: -5.95408821105957
    10. 'pos' → logprob: -6.20408821105957

Token 2792: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.9071410298347473
    2. '_position' → logprob: -1.1571409702301025
    3. '_target' → logprob: -1.5321409702301025
    4. 'target' → logprob: -4.032141208648682
    5. '_destination' → logprob: -4.157141208648682
    6. ' cible' → logprob: -4.657141208648682
    7. 'destination' → logprob: -4.907141208648682
    8. '_pos' → logprob: -5.282141208648682
    9. '_c' → logprob: -5.907141208648682
    10. '_' → logprob: -6.032141208648682

Token 2793: ' cible' (ID: 136857)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.144980788230896
    2. '       ' → logprob: -3.3949809074401855
    3. 'c' → logprob: -3.7699809074401855
    4. '   ' → logprob: -4.2699809074401855
    5. 'important' → logprob: -4.8949809074401855
    6. ' =' → logprob: -5.0199809074401855
    7. '_import' → logprob: -5.0199809074401855
    8. 's' → logprob: -5.2699809074401855
    9. '_possible' → logprob: -5.3949809074401855
    10. '_c' → logprob: -5.3949809074401855

Token 2794: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05137243494391441
    2. '<|end|>' → logprob: -4.176372528076172
    3. ',' → logprob: -4.426372528076172
    4. ':' → logprob: -5.426372528076172
    5. '.' → logprob: -5.801372528076172
    6. '<|end|>' → logprob: -5.926372528076172
    7. ':
' → logprob: -6.676372528076172
    8. '        
' → logprob: -6.676372528076172
    9. '...' → logprob: -6.926372528076172
    10. '#' → logprob: -7.051372528076172

Token 2795: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22904953360557556
    2. '       ' → logprob: -2.2290494441986084
    3. 'for' → logprob: -3.8540494441986084
    4. '#' → logprob: -4.1040496826171875
    5. ' for' → logprob: -4.8540496826171875
    6. '(i' → logprob: -4.8540496826171875
    7. '\' → logprob: -5.3540496826171875
    8. '    
' → logprob: -5.4790496826171875
    9. '```' → logprob: -5.4790496826171875
    10. ')' → logprob: -5.4790496826171875

Token 2796: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41438978910446167
    2. 'for' (adapté à ' for') → logprob: -1.1643898487091064
    3. '   ' → logprob: -4.164389610290527
    4. ' for' → logprob: -4.789389610290527
    5. '
' → logprob: -6.164389610290527
    6. 'def' → logprob: -7.289389610290527
    7. '        
' → logprob: -8.664389610290527
    8. '    
' → logprob: -9.164389610290527
    9. ' ' → logprob: -10.289389610290527
    10. '```' → logprob: -10.289389610290527

Token 2797: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02986769936978817
    2. ' i' → logprob: -3.529867649078369
    3. '   ' → logprob: -9.279868125915527
    4. ' ' → logprob: -11.654868125915527
    5. '	i' → logprob: -11.904868125915527
    6. '  ' → logprob: -13.029868125915527
    7. '       ' → logprob: -13.404868125915527
    8. '    ' → logprob: -13.904868125915527
    9. '```' → logprob: -14.404868125915527
    10. 'j' → logprob: -14.404868125915527

Token 2798: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009908962063491344
    2. 'in' → logprob: -4.634909152984619
    3. ',' → logprob: -9.634908676147461
    4. '   ' → logprob: -9.759908676147461
    5. '_' → logprob: -12.384908676147461
    6. ' ' → logprob: -12.759908676147461
    7. 's' → logprob: -13.134908676147461
    8. '
' → logprob: -13.259908676147461
    9. '       ' → logprob: -13.259908676147461
    10. '=' → logprob: -13.384908676147461

Token 2799: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.5649528298527e-05
    2. ' range' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.375075340270996
    4. '  ' → logprob: -16.750076293945312
    5. ' ' → logprob: -17.000076293945312
    6. '    ' → logprob: -17.500076293945312
    7. '(range' → logprob: -18.250076293945312
    8. '       ' → logprob: -18.625076293945312
    9. '     ' → logprob: -19.000076293945312
    10. '
' → logprob: -19.250076293945312

Token 2800: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6768622398376465
    2. 'range' → logprob: -0.8018622398376465
    3. '(M' → logprob: -3.1768622398376465
    4. '   ' → logprob: -7.4268622398376465
    5. ' range' → logprob: -7.6768622398376465
    6. '       ' → logprob: -8.301862716674805
    7. '(range' → logprob: -9.176862716674805
    8. ')' → logprob: -9.926862716674805
    9. '           ' → logprob: -10.301862716674805
    10. '[M' → logprob: -11.176862716674805

Token 2801: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00687189819291234
    2. '       ' → logprob: -5.756871700286865
    3. '):' → logprob: -5.881871700286865
    4. '   ' → logprob: -7.506871700286865
    5. '):
' → logprob: -9.006872177124023
    6. '           ' → logprob: -9.131872177124023
    7. '+' → logprob: -10.131872177124023
    8. ' ):
' → logprob: -10.256872177124023
    9. ':
' → logprob: -11.506872177124023
    10. '):

' → logprob: -12.131872177124023

Token 2802: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008341663633473217
    2. '```' → logprob: -7.750833988189697
    3. '#' → logprob: -8.750834465026855
    4. '           ' → logprob: -9.250834465026855
    5. ' ship' → logprob: -9.875834465026855
    6. '   ' → logprob: -10.500834465026855
    7. '        
' → logprob: -11.750834465026855
    8. '(ship' → logprob: -11.875834465026855
    9. ' #' → logprob: -12.000834465026855
    10. ',' → logprob: -12.125834465026855

Token 2803: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9486121535301208
    2. 'pos' → logprob: -1.6986122131347656
    3. '#' → logprob: -2.4486122131347656
    4. 'next' → logprob: -2.4486122131347656
    5. '       ' → logprob: -2.5736122131347656
    6. ' next' → logprob: -3.0736122131347656
    7. 'if' (adapté à ' if') → logprob: -3.3236122131347656
    8. ' if' → logprob: -3.8236122131347656
    9. ' #' → logprob: -4.073612213134766
    10. '   ' → logprob: -4.448612213134766

Token 2804: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.2177509367465973
    2. 'ship' → logprob: -2.2177510261535645
    3. 'not' → logprob: -2.9677510261535645
    4. ' ships' → logprob: -3.9677510261535645
    5. ' not' → logprob: -4.3427510261535645
    6. ' ship' → logprob: -5.9677510261535645
    7. '   ' → logprob: -8.092750549316406
    8. '(ship' → logprob: -9.405250549316406
    9. ' ' → logprob: -9.467750549316406
    10. '  ' → logprob: -9.592750549316406

Token 2805: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -13.000005722045898
    3. 'i' → logprob: -13.750005722045898
    4. '   ' → logprob: -14.500005722045898
    5. '```' → logprob: -14.750005722045898
    6. 's' → logprob: -15.125005722045898
    7. ' [' → logprob: -15.250005722045898
    8. '[
' → logprob: -15.375005722045898
    9. '           ' → logprob: -15.875005722045898
    10. ' i' → logprob: -16.3750057220459

Token 2806: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07492869347333908
    2. '.speed' → logprob: -2.9499287605285645
    3. '.pos' → logprob: -5.0749287605285645
    4. ').' → logprob: -5.3249287605285645
    5. '.' → logprob: -5.9499287605285645
    6. '.i' → logprob: -6.1999287605285645
    7. ' .' → logprob: -6.5749287605285645
    8. '[i' → logprob: -7.8249287605285645
    9. ' ].' → logprob: -8.074928283691406
    10. '
' → logprob: -8.449928283691406

Token 2807: 'done' (ID: 21715)
  Prédit: 'done'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.029318099841475487
    2. 'speed' → logprob: -3.77931809425354
    3. 'pos' → logprob: -5.154318332672119
    4. '.done' → logprob: -9.154317855834961
    5. ' done' → logprob: -10.279317855834961
    6. 'position' → logprob: -10.779317855834961
    7. '.speed' → logprob: -11.029317855834961
    8. ' speed' → logprob: -11.279317855834961
    9. '```' → logprob: -11.279317855834961
    10. '  ' → logprob: -11.404317855834961

Token 2808: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8875518441200256
    2. '               ' → logprob: -1.1375517845153809
    3. '==' → logprob: -2.137551784515381
    4. '           ' → logprob: -2.637551784515381
    5. ':
' → logprob: -3.762551784515381
    6. ':' → logprob: -3.887551784515381
    7. '):
' → logprob: -4.262551784515381
    8. ',' → logprob: -5.387551784515381
    9. ' or' → logprob: -6.137551784515381
    10. ')' → logprob: -6.262551784515381

Token 2809: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009849347174167633
    2. '           ' → logprob: -4.634849548339844
    3. ':
' → logprob: -10.259849548339844
    4. ':' → logprob: -10.884849548339844
    5. ' continue' → logprob: -11.009849548339844
    6. 'continue' → logprob: -12.259849548339844
    7. '       ' → logprob: -12.509849548339844
    8. '```' → logprob: -13.134849548339844
    9. '                   ' → logprob: -13.259849548339844
    10. '              ' → logprob: -13.759849548339844

Token 2810: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4811630845069885
    2. '               ' → logprob: -0.9811630845069885
    3. ' continue' → logprob: -4.981163024902344
    4. '	continue' → logprob: -9.231163024902344
    5. '           ' → logprob: -9.856163024902344
    6. '   ' → logprob: -11.106163024902344
    7. 'return' → logprob: -11.606163024902344
    8. '       ' → logprob: -11.606163024902344
    9. 'contin' → logprob: -12.731163024902344
    10. '_continue' → logprob: -13.106163024902344

Token 2811: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15903325378894806
    2. '
' → logprob: -2.0340332984924316
    3. '        
' → logprob: -5.284033298492432
    4. '            
' → logprob: -5.284033298492432
    5. '       ' → logprob: -5.409033298492432
    6. '    
' → logprob: -7.909033298492432
    7. '
' → logprob: -8.409032821655273
    8. ' 
' → logprob: -8.534032821655273
    9. '<|end|>' → logprob: -8.784032821655273
    10. '  
' → logprob: -8.909032821655273

Token 2812: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007202170789241791
    2. '
' → logprob: -5.8822021484375
    3. '       ' → logprob: -6.1322021484375
    4. '            
' → logprob: -6.8822021484375
    5. '        
' → logprob: -7.3822021484375
    6. ' 
' → logprob: -9.1322021484375
    7. '    
' → logprob: -9.2572021484375
    8. '```' → logprob: -10.0072021484375
    9. 'continue' → logprob: -10.3822021484375
    10. '           
' → logprob: -10.5072021484375

Token 2813: ' s' (ID: 265)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6149673461914062
    2. 'pos' → logprob: -1.2399673461914062
    3. '           ' → logprob: -2.2399673461914062
    4. '#' → logprob: -3.4899673461914062
    5. 'positions' → logprob: -4.239967346191406
    6. 'current' → logprob: -5.489967346191406
    7. 'target' → logprob: -5.989967346191406
    8. 'targets' → logprob: -6.114967346191406
    9. 'possible' → logprob: -6.239967346191406
    10. 'if' → logprob: -6.364967346191406

Token 2814: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0787215530872345
    2. '=' → logprob: -2.953721523284912
    3. 'peed' → logprob: -3.828721523284912
    4. '   ' → logprob: -7.328721523284912
    5. '.speed' → logprob: -8.45372200012207
    6. '_pos' → logprob: -8.82872200012207
    7. '       ' → logprob: -8.95372200012207
    8. '.pos' → logprob: -9.32872200012207
    9. 'p' → logprob: -9.57872200012207
    10. '.' → logprob: -9.82872200012207

Token 2815: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.0004953675088472664
    2. ' ships' → logprob: -7.625495433807373
    3. 'hips' → logprob: -12.500494956970215
    4. 's' → logprob: -13.875494956970215
    5. '           ' → logprob: -13.875494956970215
    6. '   ' → logprob: -14.000494956970215
    7. 'ship' → logprob: -15.000494956970215
    8. 'Ships' → logprob: -15.625494956970215
    9. 'shops' → logprob: -16.37549591064453
    10. '       ' → logprob: -16.75049591064453

Token 2816: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.5491004129871726e-05
    2. 'hips' → logprob: -10.375045776367188
    3. '[' → logprob: -12.375045776367188
    4. 'i' → logprob: -12.500045776367188
    5. 's' → logprob: -12.750045776367188
    6. 'ships' → logprob: -13.375045776367188
    7. '```' → logprob: -14.625045776367188
    8. '(i' → logprob: -14.875045776367188
    9. '   ' → logprob: -15.500045776367188
    10. '[
' → logprob: -15.500045776367188

Token 2817: ']
' (ID: 1592)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.082916758954525
    2. '           ' → logprob: -3.332916736602783
    3. ']' → logprob: -4.207916736602783
    4. '.i' → logprob: -4.332916736602783
    5. '[i' → logprob: -5.332916736602783
    6. ']
' → logprob: -5.707916736602783
    7. '.' → logprob: -6.082916736602783
    8. ').' → logprob: -7.082916736602783
    9. '       ' → logprob: -7.332916736602783
    10. '               ' → logprob: -7.332916736602783

Token 2818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001530693843960762
    2. '
' → logprob: -6.876530647277832
    3. '            
' → logprob: -8.251530647277832
    4. 'pos' → logprob: -9.501530647277832
    5. '#' → logprob: -10.376530647277832
    6. '       ' → logprob: -10.376530647277832
    7. '```' → logprob: -10.876530647277832
    8. ' 
' → logprob: -11.376530647277832
    9. 'next' → logprob: -11.626530647277832
    10. '    
' → logprob: -11.876530647277832

Token 2819: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6218534708023071
    2. '           ' → logprob: -1.2468534708023071
    3. 'pos' → logprob: -2.4968533515930176
    4. '#' (adapté à ' #') → logprob: -3.1218533515930176
    5. 'if' → logprob: -3.6218533515930176
    6. 'front' → logprob: -4.746853351593018
    7. '   ' → logprob: -4.996853351593018
    8. ' next' → logprob: -6.371853351593018
    9. 'for' → logprob: -6.746853351593018
    10. 'target' → logprob: -6.746853351593018

Token 2820: ' Position' (ID: 21829)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.16685231029987335
    2. '#' → logprob: -2.5418522357940674
    3. '           ' → logprob: -3.0418522357940674
    4. 'pos' → logprob: -4.4168524742126465
    5. 'if' → logprob: -4.9168524742126465
    6. 'target' → logprob: -6.0418524742126465
    7. '   ' → logprob: -6.2918524742126465
    8. 'for' → logprob: -7.0418524742126465
    9. 'positions' → logprob: -7.1668524742126465
    10. 'targets' → logprob: -7.2918524742126465

Token 2821: ' suivante' (ID: 107439)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.5520913004875183
    2. '_c' → logprob: -1.802091360092163
    3. '_next' → logprob: -1.802091360092163
    4. 'c' → logprob: -4.052091121673584
    5. '_s' → logprob: -4.177091121673584
    6. ' =' → logprob: -4.427091121673584
    7. 'target' → logprob: -5.177091121673584
    8. '_future' → logprob: -5.177091121673584
    9. '_act' → logprob: -5.427091121673584
    10. 'su' → logprob: -5.552091121673584

Token 2822: ' possible' (ID: 4149)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7123363614082336
    2. 'target' → logprob: -1.0873363018035889
    3. '           ' → logprob: -2.212336301803589
    4. '=' → logprob: -4.087336540222168
    5. '_target' → logprob: -4.712336540222168
    6. 'targets' → logprob: -4.962336540222168
    7. '_next' → logprob: -5.337336540222168
    8. 'c' → logprob: -5.837336540222168
    9. 'possible' → logprob: -5.837336540222168
    10. ' =' → logprob: -5.962336540222168

Token 2823: ':' (ID: 25)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.4804869890213013
    2. '           ' → logprob: -1.7304869890213013
    3. 'target' → logprob: -1.7304869890213013
    4. '_target' → logprob: -2.4804868698120117
    5. '_next' → logprob: -2.6054868698120117
    6. ' =' → logprob: -2.6054868698120117
    7. '_gate' → logprob: -3.1054868698120117
    8. '=' → logprob: -3.3554868698120117
    9. 'gate' → logprob: -3.9804868698120117
    10. ' next' → logprob: -4.355486869812012

Token 2824: ' gate' (ID: 27172)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.1292980909347534
    2. '           ' → logprob: -1.5042980909347534
    3. 'pos' → logprob: -1.7542980909347534
    4. 'if' → logprob: -1.8792980909347534
    5. 'K' → logprob: -2.879298210144043
    6. 'gate' → logprob: -4.004298210144043
    7. 's' → logprob: -4.879298210144043
    8. 'g' → logprob: -5.004298210144043
    9. 'ships' → logprob: -5.004298210144043
    10. 'target' → logprob: -5.254298210144043

Token 2825: ' la' (ID: 557)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.15693329274654388
    2. 's' → logprob: -2.781933307647705
    3. 'pos' → logprob: -3.781933307647705
    4. '_pos' → logprob: -4.031933307647705
    5. 'positions' → logprob: -4.406933307647705
    6. 'X' → logprob: -5.031933307647705
    7. '_next' → logprob: -5.281933307647705
    8. 'next' → logprob: -6.031933307647705
    9. ' =' → logprob: -6.156933307647705
    10. 'for' → logprob: -6.281933307647705

Token 2826: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.4078442454338074
    2. 'r' → logprob: -1.9078443050384521
    3. 'ter' → logprob: -2.907844305038452
    4. 'rg' → logprob: -3.782844305038452
    5. 'test' → logprob: -3.907844305038452
    6. 'ss' → logprob: -4.282844066619873
    7. 'st' → logprob: -4.407844066619873
    8. '[' → logprob: -5.032844066619873
    9. 's' → logprob: -5.032844066619873
    10. '+' → logprob: -5.157844066619873

Token 2827: ' proche' (ID: 61089)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.0011966594029217958
    2. 'prox' → logprob: -7.75119686126709
    3. '>' → logprob: -7.87619686126709
    4. 'import' → logprob: -8.25119686126709
    5. 'gr' → logprob: -9.62619686126709
    6. '```' → logprob: -11.62619686126709
    7. '   ' → logprob: -11.75119686126709
    8. 'é' → logprob: -12.00119686126709
    9. 'près' → logprob: -12.50119686126709
    10. 'à' → logprob: -12.62619686126709

Token 2828: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.109584927558899
    2. '=' → logprob: -2.1095848083496094
    3. ',' → logprob: -2.4845848083496094
    4. 's' → logprob: -3.1095848083496094
    5. 'def' → logprob: -3.4845848083496094
    6. ')' → logprob: -3.4845848083496094
    7. '[i' → logprob: -3.7345848083496094
    8. 'à' → logprob: -3.7345848083496094
    9. '[' → logprob: -3.8595848083496094
    10. 'pos' → logprob: -3.8595848083496094

Token 2829: ' l' (ID: 305)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8629909157752991
    2. 'sup' → logprob: -1.6129908561706543
    3. 'x' → logprob: -1.7379908561706543
    4. '>' → logprob: -2.7379908561706543
    5. 'g' → logprob: -3.2379908561706543
    6. '>x' → logprob: -4.237990856170654
    7. 's' → logprob: -4.487990856170654
    8. 'right' → logprob: -4.487990856170654
    9. 'i' → logprob: -4.862990856170654
    10. 'l' → logprob: -4.987990856170654

Token 2830: ''est' (ID: 6616)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.05189240723848343
    2. 'd' → logprob: -4.051892280578613
    3. 'sup' → logprob: -4.176892280578613
    4. '>' → logprob: -5.051892280578613
    5. '```' → logprob: -5.551892280578613
    6. '+' → logprob: -6.426892280578613
    7. 'right' → logprob: -7.051892280578613
    8. 'plus' → logprob: -7.176892280578613
    9. '...' → logprob: -7.301892280578613
    10. '+
' → logprob: -7.426892280578613

Token 2831: ' >' (ID: 1424)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3899892568588257
    2. ' =' → logprob: -1.5149892568588257
    3. ',' → logprob: -2.1399893760681152
    4. '<|end|>' → logprob: -2.6399893760681152
    5. '+' → logprob: -3.1399893760681152
    6. '=' → logprob: -3.2649893760681152
    7. '_next' → logprob: -3.6399893760681152
    8. '_possible' → logprob: -3.7649893760681152
    9. '<|end|>' → logprob: -3.8899893760681152
    10. 'next' → logprob: -4.264989376068115

Token 2832: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003047581762075424
    2. ' s' → logprob: -5.878047466278076
    3. '(s' → logprob: -9.128047943115234
    4. 'ships' → logprob: -9.878047943115234
    5. '   ' → logprob: -11.128047943115234
    6. '`s' → logprob: -11.128047943115234
    7. '```' → logprob: -11.378047943115234
    8. '	s' → logprob: -12.003047943115234
    9. ' ships' → logprob: -12.940547943115234
    10. '`' → logprob: -12.940547943115234

Token 2833: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0031923281494528055
    2. 'pos' → logprob: -5.75319242477417
    3. 'os' → logprob: -12.128191947937012
    4. '       ' → logprob: -12.878191947937012
    5. '	pos' → logprob: -13.503191947937012
    6. '   ' → logprob: -13.503191947937012
    7. ' .' → logprob: -14.253191947937012
    8. '[pos' → logprob: -14.378191947937012
    9. '           ' → logprob: -14.628191947937012
    10. 's' → logprob: -14.753191947937012

Token 2834: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07896238565444946
    2. '+' → logprob: -3.5789623260498047
    3. ',' → logprob: -4.703962326049805
    4. '<|end|>' → logprob: -4.703962326049805
    5. ' +' → logprob: -5.203962326049805
    6. '<|end|>' → logprob: -5.328962326049805
    7. '[' → logprob: -6.328962326049805
    8. ' for' → logprob: -6.453962326049805
    9. 'for' → logprob: -6.953962326049805
    10. ' =' → logprob: -7.078962326049805

Token 2835: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03048533760011196
    2. ' =' → logprob: -4.030485153198242
    3. '=' → logprob: -5.780485153198242
    4. ',' → logprob: -6.155485153198242
    5. '
' → logprob: -6.405485153198242
    6. '```' → logprob: -7.030485153198242
    7. '[' → logprob: -7.530485153198242
    8. ':' → logprob: -7.530485153198242
    9. '_' → logprob: -8.030485153198242
    10. '#' → logprob: -8.155485153198242

Token 2836: ' next' (ID: 2613)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17194828391075134
    2. 'next' (adapté à ' next') → logprob: -2.171948194503784
    3. 'pos' → logprob: -4.171948432922363
    4. 'possible' → logprob: -4.796948432922363
    5. ' next' → logprob: -5.046948432922363
    6. 'positions' → logprob: -5.296948432922363
    7. 'for' → logprob: -6.046948432922363
    8. '#' → logprob: -7.546948432922363
    9. '
' → logprob: -7.921948432922363
    10. 'targets' → logprob: -7.921948432922363

Token 2837: '_pos' (ID: 14692)
  Prédit: '_gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gate' → logprob: -0.10046232491731644
    2. '_pos' → logprob: -2.4754624366760254
    3. '_' → logprob: -4.600462436676025
    4. '_g' → logprob: -7.350462436676025
    5. '_x' → logprob: -8.975461959838867
    6. '_idx' → logprob: -9.350461959838867
    7. '_gp' → logprob: -9.600461959838867
    8. '_index' → logprob: -9.725461959838867
    9. 'pos' → logprob: -9.725461959838867
    10. '_p' → logprob: -9.725461959838867

Token 2838: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30210596323013306
    2. ' =' → logprob: -1.6771059036254883
    3. '_idx' → logprob: -3.3021059036254883
    4. '_index' → logprob: -4.302105903625488
    5. 's' → logprob: -4.552105903625488
    6. '_candidates' → logprob: -4.927105903625488
    7. 'idx' → logprob: -5.802105903625488
    8. '=
' → logprob: -7.677105903625488
    9. '       ' → logprob: -8.427105903625488
    10. 'index' → logprob: -8.552105903625488

Token 2839: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.23197007179260254
    2. 'float' → logprob: -2.4819700717926025
    3. 'None' → logprob: -2.7319700717926025
    4. 'math' → logprob: -2.9819700717926025
    5. 'g' → logprob: -5.981969833374023
    6. 'max' → logprob: -6.231969833374023
    7. 's' → logprob: -6.731969833374023
    8. 'min' → logprob: -7.606969833374023
    9. '1' → logprob: -7.606969833374023
    10. 'sys' → logprob: -7.731969833374023

Token 2840: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3587450087070465
    2. '<|end|>' → logprob: -1.7337449789047241
    3. '+' → logprob: -2.8587450981140137
    4. 'import' → logprob: -3.9837450981140137
    5. '<|end|>' → logprob: -3.9837450981140137
    6. ' +' → logprob: -5.108745098114014
    7. '[' → logprob: -5.358745098114014
    8. '+
' → logprob: -5.483745098114014
    9. '   ' → logprob: -5.733745098114014
    10. 'for' → logprob: -6.108745098114014

Token 2841: ' ' (ID: 220)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.23890085518360138
    2. '1' → logprob: -1.613900899887085
    3. ' EPS' → logprob: -4.738900661468506
    4. ' ' → logprob: -5.863900661468506
    5. '100' → logprob: -7.738900661468506
    6. '0' → logprob: -7.988900661468506
    7. '10' → logprob: -8.238901138305664
    8. 'eps' → logprob: -8.363901138305664
    9. '   ' → logprob: -8.363901138305664
    10. '+' → logprob: -9.613901138305664

Token 2842: '10' (ID: 702)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.08106816560029984
    2. '1' → logprob: -2.831068277359009
    3. ' EPS' → logprob: -4.20606803894043
    4. ' ' → logprob: -6.08106803894043
    5. '100' → logprob: -7.45606803894043
    6. '10' → logprob: -7.45606803894043
    7. '0' → logprob: -8.20606803894043
    8. 'eps' → logprob: -9.08106803894043
    9. '   ' → logprob: -9.70606803894043
    10. '  ' → logprob: -10.70606803894043

Token 2843: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009542630054056644
    2. '.' → logprob: -5.759542465209961
    3. '0' → logprob: -5.759542465209961
    4. '   ' → logprob: -7.134542465209961
    5. '**' → logprob: -7.634542465209961
    6. '<|end|>' → logprob: -8.134542465209961
    7. ' ' → logprob: -8.384542465209961
    8. '```' → logprob: -8.634542465209961
    9. ')
' → logprob: -8.884542465209961
    10. '000' → logprob: -9.134542465209961

Token 2844: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10288334637880325
    2. '           ' → logprob: -2.6028833389282227
    3. '   ' → logprob: -4.977883338928223
    4. '<|end|>' → logprob: -4.977883338928223
    5. '       ' → logprob: -5.477883338928223
    6. '#' → logprob: -6.727883338928223
    7. 'for' → logprob: -6.977883338928223
    8. ' ' → logprob: -7.352883338928223
    9. '<|end|>' → logprob: -7.727883338928223
    10. ' if' → logprob: -7.852883338928223

Token 2845: ' quelques' (ID: 17687)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8886672854423523
    2. 'max' → logprob: -1.513667345046997
    3. '1' → logprob: -2.013667345046997
    4. 'float' → logprob: -2.638667345046997
    5. 'for' → logprob: -2.638667345046997
    6. '10' → logprob: -3.388667345046997
    7. '   ' → logprob: -4.263667106628418
    8. ' max' → logprob: -4.888667106628418
    9. '100' → logprob: -4.888667106628418
    10. '       ' → logprob: -5.138667106628418

Token 2846: ' km' (ID: 8571)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.007452368736267
    2. '.' → logprob: -1.257452368736267
    3. '+' → logprob: -2.3824524879455566
    4. '**' → logprob: -2.6324524879455566
    5. '_' → logprob: -3.0074524879455566
    6. '```' → logprob: -4.132452487945557
    7. '1' → logprob: -4.257452487945557
    8. 'e' → logprob: -4.257452487945557
    9. '   ' → logprob: -4.507452487945557
    10. '-' → logprob: -4.882452487945557

Token 2847: ' après' (ID: 16460)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09098228067159653
    2. '
' → logprob: -2.84098219871521
    3. '<|end|>' → logprob: -4.465982437133789
    4. 'for' → logprob: -4.965982437133789
    5. '<|end|>' → logprob: -6.465982437133789
    6. '+' → logprob: -6.590982437133789
    7. ' for' → logprob: -7.090982437133789
    8. '       ' → logprob: -7.090982437133789
    9. '000' → logprob: -7.215982437133789
    10. '```' → logprob: -7.215982437133789

Token 2848: ' fin' (ID: 2131)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5399215221405029
    2. '0' → logprob: -1.164921522140503
    3. 'K' → logprob: -3.664921522140503
    4. ' s' → logprob: -4.039921760559082
    5. ''' → logprob: -4.289921760559082
    6. '1' → logprob: -4.664921760559082
    7. 'max' → logprob: -4.664921760559082
    8. ' K' → logprob: -5.164921760559082
    9. ' ' → logprob: -6.164921760559082
    10. ')' → logprob: -6.164921760559082

Token 2849: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2850: ' sortir' (ID: 55515)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.37899479269981384
    2. 'sim' → logprob: -2.5039947032928467
    3. 'simulate' → logprob: -2.6289947032928467
    4. 'g' → logprob: -2.7539947032928467
    5. 'le' → logprob: -3.7539947032928467
    6. 'simulation' → logprob: -3.8789947032928467
    7. 's' → logprob: -4.378994941711426
    8. 'maint' → logprob: -5.253994941711426
    9. 'each' → logprob: -5.878994941711426
    10. 'fin' → logprob: -5.878994941711426

Token 2851: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009632720611989498
    2. '
' → logprob: -4.759632587432861
    3. '            
' → logprob: -8.25963306427002
    4. '<|end|>' → logprob: -8.63463306427002
    5. ',' → logprob: -9.38463306427002
    6. ')' → logprob: -9.38463306427002
    7. ')
' → logprob: -9.88463306427002
    8. '<|end|>' → logprob: -9.88463306427002
    9. '		' → logprob: -10.38463306427002
    10. ' 
' → logprob: -10.88463306427002

Token 2852: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5335458517074585
    2. '           ' → logprob: -2.033545970916748
    3. 'for' → logprob: -2.158545970916748
    4. '       ' → logprob: -3.533545970916748
    5. '
' → logprob: -3.908545970916748
    6. '_gate' → logprob: -4.533545970916748
    7. ' =' → logprob: -4.658545970916748
    8. '   ' → logprob: -4.658545970916748
    9. ' for' → logprob: -4.658545970916748
    10. '_possible' → logprob: -4.658545970916748

Token 2853: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.38700973987579346
    2. '           ' → logprob: -1.2620097398757935
    3. 'while' → logprob: -4.012009620666504
    4. ' for' → logprob: -4.887009620666504
    5. 'if' → logprob: -5.637009620666504
    6. 'pos' → logprob: -5.762009620666504
    7. 'idx' → logprob: -6.262009620666504
    8. '#' → logprob: -6.887009620666504
    9. '
' → logprob: -7.762009620666504
    10. '   ' → logprob: -7.887009620666504

Token 2854: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7738426327705383
    2. 'gp' → logprob: -0.8988426327705383
    3. 'pos' → logprob: -2.7738425731658936
    4. 'gate' → logprob: -2.8988425731658936
    5. 'gx' → logprob: -5.273842811584473
    6. 'x' → logprob: -5.523842811584473
    7. 'p' → logprob: -5.648842811584473
    8. 'xp' → logprob: -6.898842811584473
    9. 'px' → logprob: -8.523842811584473
    10. 'idx' → logprob: -9.273842811584473

Token 2855: ' in' (ID: 306)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.46724623441696167
    2. '_pos' → logprob: -1.7172462940216064
    3. 'in' → logprob: -2.7172462940216064
    4. ' in' → logprob: -2.7172462940216064
    5. 'X' → logprob: -3.3422462940216064
    6. 'x' → logprob: -4.467246055603027
    7. '_x' → logprob: -5.342246055603027
    8. 'os' → logprob: -5.842246055603027
    9. 'p' → logprob: -5.842246055603027
    10. '_position' → logprob: -6.967246055603027

Token 2856: ' gates' (ID: 61915)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.29498136043548584
    2. 'gate' → logprob: -1.4199813604354858
    3. 'range' → logprob: -4.419981479644775
    4. ' gates' → logprob: -6.669981479644775
    5. '[g' → logprob: -8.794981002807617
    6. ' gate' → logprob: -9.169981002807617
    7. ' range' → logprob: -9.544981002807617
    8. '[' → logprob: -11.044981002807617
    9. 'ranges' → logprob: -11.044981002807617
    10. '   ' → logprob: -11.419981002807617

Token 2857: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5284920334815979
    2. '_positions' → logprob: -1.4034919738769531
    3. ' in' → logprob: -3.278491973876953
    4. ':' → logprob: -3.278491973876953
    5. 'in' → logprob: -3.653491973876953
    6. ' if' → logprob: -4.278491973876953
    7. 'g' → logprob: -4.653491973876953
    8. 'if' → logprob: -4.653491973876953
    9. '):
' → logprob: -4.778491973876953
    10. 'positions' → logprob: -5.278491973876953

Token 2858: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06936013698577881
    2. 'if' → logprob: -3.3193602561950684
    3. ' if' → logprob: -3.8193602561950684
    4. '	           ' → logprob: -5.694360256195068
    5. ':' → logprob: -6.069360256195068
    6. ':
' → logprob: -6.319360256195068
    7. '           ' → logprob: -8.06935977935791
    8. '		       ' → logprob: -8.06935977935791
    9. '	       ' → logprob: -9.06935977935791
    10. '			' → logprob: -9.31935977935791

Token 2859: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011145210824906826
    2. ' if' → logprob: -4.761145114898682
    3. '               ' → logprob: -7.011145114898682
    4. '                   ' → logprob: -7.386145114898682
    5. '	if' → logprob: -7.761145114898682
    6. 'g' → logprob: -8.13614559173584
    7. '	               ' → logprob: -8.88614559173584
    8. '		           ' → logprob: -10.01114559173584
    9. 'pos' → logprob: -11.13614559173584
    10. '	           ' → logprob: -11.26114559173584

Token 2860: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.5358694731257856e-05
    2. ' g' → logprob: -10.500035285949707
    3. '   ' → logprob: -12.000035285949707
    4. 's' → logprob: -14.625035285949707
    5. '    ' → logprob: -14.750035285949707
    6. '  ' → logprob: -15.125035285949707
    7. '	g' → logprob: -15.875035285949707
    8. ' ' → logprob: -16.250036239624023
    9. '                   ' → logprob: -16.500036239624023
    10. '     ' → logprob: -17.000036239624023

Token 2861: '.X' (ID: 8869)
  Prédit: '.X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.X' → logprob: -0.008987747132778168
    2. 'X' → logprob: -4.883987903594971
    3. '.' → logprob: -7.383987903594971
    4. '   ' → logprob: -8.633987426757812
    5. '.x' → logprob: -8.883987426757812
    6. '<|end|>' → logprob: -9.633987426757812
    7. ' .' → logprob: -9.758987426757812
    8. '	X' → logprob: -10.133987426757812
    9. 'import' → logprob: -10.383987426757812
    10. ').' → logprob: -10.633987426757812

Token 2862: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08072403818368912
    2. ' >' → logprob: -2.580724000930786
    3. '>
' → logprob: -6.955724239349365
    4. '[' → logprob: -9.080723762512207
    5. ' >
' → logprob: -9.330723762512207
    6. '<|end|>' → logprob: -9.455723762512207
    7. '   ' → logprob: -9.580723762512207
    8. '>x' → logprob: -9.955723762512207
    9. ' ' → logprob: -10.205723762512207
    10. '>X' → logprob: -10.205723762512207

Token 2863: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016036128625273705
    2. ' s' → logprob: -4.141036033630371
    3. '   ' → logprob: -13.766036033630371
    4. 'ships' → logprob: -14.766036033630371
    5. '	s' → logprob: -15.641036033630371
    6. ' ' → logprob: -16.016036987304688
    7. '  ' → logprob: -16.641036987304688
    8. '    ' → logprob: -17.516036987304688
    9. '`s' → logprob: -17.641036987304688
    10. '(s' → logprob: -17.641036987304688

Token 2864: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.20145153999328613
    2. 'pos' → logprob: -1.7014515399932861
    3. '	pos' → logprob: -11.326451301574707
    4. '   ' → logprob: -11.701451301574707
    5. '_pos' → logprob: -11.951451301574707
    6. ' pos' → logprob: -12.576451301574707
    7. 'Pos' → logprob: -13.701451301574707
    8. 'os' → logprob: -13.826451301574707
    9. '       ' → logprob: -14.201451301574707
    10. '[pos' → logprob: -14.451451301574707

Token 2865: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6318415403366089
    2. ' +' → logprob: -0.8818415403366089
    3. ' and' → logprob: -3.2568416595458984
    4. 'and' → logprob: -5.131841659545898
    5. ':' → logprob: -5.631841659545898
    6. ':
' → logprob: -5.756841659545898
    7. ' -' → logprob: -6.381841659545898
    8. '           ' → logprob: -7.506841659545898
    9. '-' → logprob: -7.631841659545898
    10. '               ' → logprob: -8.881841659545898

Token 2866: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -2.2007883671903983e-05
    2. '1' → logprob: -11.125021934509277
    3. ' EPS' → logprob: -12.000021934509277
    4. 'ESP' → logprob: -14.500021934509277
    5. 'EP' → logprob: -15.875021934509277
    6. ' ' → logprob: -16.000022888183594
    7. '   ' → logprob: -16.250022888183594
    8. 'eps' → logprob: -16.250022888183594
    9. '10' → logprob: -18.125022888183594
    10. '-' → logprob: -18.250022888183594

Token 2867: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2688148319721222
    2. ':' → logprob: -2.5188148021698
    3. 'and' → logprob: -2.5188148021698
    4. ':
' → logprob: -3.0188148021698
    5. '               ' → logprob: -4.768815040588379
    6. '+' → logprob: -5.018815040588379
    7. '                   ' → logprob: -5.018815040588379
    8. '           ' → logprob: -6.018815040588379
    9. ' +' → logprob: -7.643815040588379
    10. '                       ' → logprob: -7.768815040588379

Token 2868: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8202497959136963
    2. 'True' → logprob: -0.9452497959136963
    3. '(True' → logprob: -2.5702497959136963
    4. 'abs' → logprob: -3.4452497959136963
    5. ' True' → logprob: -3.5702497959136963
    6. ' g' → logprob: -5.320249557495117
    7. '(abs' → logprob: -5.445249557495117
    8. '(g' → logprob: -5.570249557495117
    9. ' (' → logprob: -5.570249557495117
    10. 'next' → logprob: -5.570249557495117

Token 2869: '.X' (ID: 8869)
  Prédit: '.X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.X' → logprob: -0.0015875815879553556
    2. '.' → logprob: -7.501587390899658
    3. 'X' → logprob: -7.876587390899658
    4. 'pos' → logprob: -9.501587867736816
    5. '<|end|>' → logprob: -10.251587867736816
    6. ' .' → logprob: -10.376587867736816
    7. '>' → logprob: -10.501587867736816
    8. '<|end|>' → logprob: -10.501587867736816
    9. '>X' → logprob: -10.751587867736816
    10. '0' → logprob: -10.751587867736816

Token 2870: ' <' (ID: 464)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8437029123306274
    2. '-' → logprob: -1.2187029123306274
    3. '+' → logprob: -2.093702793121338
    4. '<|end|>' → logprob: -3.093702793121338
    5. ' <' → logprob: -3.343702793121338
    6. ' +' → logprob: -3.468702793121338
    7. '<' → logprob: -4.468702793121338
    8. ':' → logprob: -4.718702793121338
    9. '<|end|>' → logprob: -5.593702793121338
    10. '-E' → logprob: -5.718702793121338

Token 2871: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2250698208808899
    2. 'K' → logprob: -2.100069761276245
    3. ' next' → logprob: -2.600069761276245
    4. ' K' → logprob: -5.475069999694824
    5. '(next' → logprob: -7.850069999694824
    6. '   ' → logprob: -9.975069999694824
    7. '=' → logprob: -10.225069999694824
    8. ' ' → logprob: -10.600069999694824
    9. ' (' → logprob: -11.100069999694824
    10. 'max' → logprob: -11.100069999694824

Token 2872: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.0312416553497314
    2. '_POS' → logprob: -1.0312416553497314
    3. '+' → logprob: -1.7812416553497314
    4. '_X' → logprob: -2.9062416553497314
    5. 'Pos' → logprob: -4.281241416931152
    6. ' -' → logprob: -4.406241416931152
    7. 'g' → logprob: -5.031241416931152
    8. ' +' → logprob: -5.031241416931152
    9. '_Pos' → logprob: -5.156241416931152
    10. 'pos' → logprob: -5.281241416931152

Token 2873: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9591121673583984
    2. ' -' → logprob: -1.2091121673583984
    3. '-' → logprob: -1.8341121673583984
    4. ':' → logprob: -2.3341121673583984
    5. '               ' → logprob: -3.3341121673583984
    6. '+' → logprob: -4.959112167358398
    7. '           ' → logprob: -4.959112167358398
    8. '                       ' → logprob: -5.459112167358398
    9. '                   ' → logprob: -5.459112167358398
    10. ' +' → logprob: -6.959112167358398

Token 2874: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5529547929763794
    2. 'next' → logprob: -1.0529547929763794
    3. ' next' → logprob: -3.55295467376709
    4. '                   ' → logprob: -4.42795467376709
    5. '(next' → logprob: -4.55295467376709
    6. '[next' → logprob: -4.67795467376709
    7. '                       ' → logprob: -4.80295467376709
    8. '	next' → logprob: -5.30295467376709
    9. '           ' → logprob: -7.55295467376709
    10. '_next' → logprob: -8.17795467376709

Token 2875: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.0355098731815815
    2. '                   ' → logprob: -4.035510063171387
    3. ' next' → logprob: -4.285510063171387
    4. '                       ' → logprob: -5.785510063171387
    5. '	next' → logprob: -8.910510063171387
    6. '               ' → logprob: -9.660510063171387
    7. '[next' → logprob: -9.660510063171387
    8. '(next' → logprob: -10.285510063171387
    9. '_next' → logprob: -10.660510063171387
    10. '
' → logprob: -11.535510063171387

Token 2876: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.292907877039397e-06
    2. 'pos' → logprob: -13.37500286102295
    3. 'Pos' → logprob: -14.50000286102295
    4. '_' → logprob: -14.50000286102295
    5. '_token' → logprob: -15.37500286102295
    6. '_POS' → logprob: -15.75000286102295
    7. '_positions' → logprob: -15.75000286102295
    8. '_position' → logprob: -16.125003814697266
    9. '	pos' → logprob: -17.250003814697266
    10. '_tokens' → logprob: -17.750003814697266

Token 2877: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889176905155182
    2. ' =' → logprob: -2.5788917541503906
    3. '=
' → logprob: -14.82889175415039
    4. '=g' → logprob: -15.07889175415039
    5. '＝' → logprob: -15.45389175415039
    6. '                       ' → logprob: -15.45389175415039
    7. '                   ' → logprob: -15.82889175415039
    8. ',' → logprob: -15.95389175415039
    9. ' ' → logprob: -16.45389175415039
    10. '    ' → logprob: -16.57889175415039

Token 2878: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0036055364180356264
    2. ' g' → logprob: -5.628605365753174
    3. '                   ' → logprob: -12.253605842590332
    4. '                       ' → logprob: -15.003605842590332
    5. '	g' → logprob: -16.253604888916016
    6. '   ' → logprob: -16.378604888916016
    7. '                    ' → logprob: -17.003604888916016
    8. ' ' → logprob: -17.128604888916016
    9. '               ' → logprob: -17.128604888916016
    10. '    ' → logprob: -17.878604888916016

Token 2879: '.X' (ID: 8869)
  Prédit: '.X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.X' → logprob: -7.85104202805087e-05
    2. '.' → logprob: -9.500078201293945
    3. ' .' → logprob: -12.875078201293945
    4. '	X' → logprob: -14.500078201293945
    5. 'X' → logprob: -15.875078201293945
    6. '   ' → logprob: -16.625078201293945
    7. '>X' → logprob: -16.875078201293945
    8. '(X' → logprob: -17.000078201293945
    9. '	' → logprob: -17.375078201293945
    10. ').' → logprob: -17.500078201293945

Token 2880: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16127602756023407
    2. '<|end|>' → logprob: -2.53627610206604
    3. '                   ' → logprob: -2.91127610206604
    4. '               ' → logprob: -4.786275863647461
    5. '<|end|>' → logprob: -6.036275863647461
    6. '       ' → logprob: -6.661275863647461
    7. '            
' → logprob: -7.786275863647461
    8. '
' → logprob: -7.786275863647461
    9. ')' → logprob: -7.911275863647461
    10. '[' → logprob: -8.036275863647461

Token 2881: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3089131712913513
    2. '<|end|>' → logprob: -1.933913230895996
    3. '                   ' → logprob: -2.558913230895996
    4. '               ' → logprob: -3.808913230895996
    5. '<|end|>' → logprob: -5.308913230895996
    6. '
' → logprob: -5.558913230895996
    7. '       ' → logprob: -6.058913230895996
    8. '            
' → logprob: -6.183913230895996
    9. '                        
' → logprob: -6.683913230895996
    10. ')' → logprob: -6.933913230895996

Token 2882: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05865256488323212
    2. '
' → logprob: -2.933652639389038
    3. 'if' → logprob: -6.683652400970459
    4. '       ' → logprob: -6.808652400970459
    5. ' if' → logprob: -7.433652400970459
    6. 'for' → logprob: -8.433652877807617
    7. '            
' → logprob: -8.808652877807617
    8. '   ' → logprob: -9.683652877807617
    9. '#' (adapté à ' #') → logprob: -9.683652877807617
    10. '               ' → logprob: -10.058652877807617

Token 2883: ' Ensuite' (ID: 113884)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08614444732666016
    2. '
' → logprob: -3.83614444732666
    3. '   ' → logprob: -4.08614444732666
    4. 'if' → logprob: -4.33614444732666
    5. 'for' → logprob: -4.33614444732666
    6. '#' → logprob: -4.58614444732666
    7. '       ' → logprob: -5.08614444732666
    8. ' if' → logprob: -7.71114444732666
    9. ' for' → logprob: -7.83614444732666
    10. '               ' → logprob: -8.96114444732666

Token 2884: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011103475466370583
    2. '#' → logprob: -5.261103630065918
    3. 'for' → logprob: -5.386103630065918
    4. '       ' → logprob: -7.511103630065918
    5. '   ' → logprob: -8.261103630065918
    6. ' for' → logprob: -8.886103630065918
    7. 'if' → logprob: -9.386103630065918
    8. 'next' → logprob: -9.761103630065918
    9. 'pos' → logprob: -9.886103630065918
    10. ' #' → logprob: -10.511103630065918

Token 2885: ' si' (ID: 1784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3741118013858795
    2. 'if' → logprob: -1.6241117715835571
    3. 'for' → logprob: -2.9991118907928467
    4. '           ' → logprob: -3.1241118907928467
    5. 'front' → logprob: -4.624111652374268
    6. 'pos' → logprob: -4.624111652374268
    7. 'dist' → logprob: -8.124112129211426
    8. 'next' → logprob: -8.124112129211426
    9. ' #' → logprob: -8.499112129211426
    10. ' if' → logprob: -8.999112129211426

Token 2886: ' ce' (ID: 2357)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.38283005356788635
    2. 'i' → logprob: -1.757830023765564
    3. ' ship' → logprob: -3.1328301429748535
    4. 'next' → logprob: -3.5078301429748535
    5. 'ships' → logprob: -3.6328301429748535
    6. ' ships' → logprob: -4.5078301429748535
    7. ' i' → logprob: -4.6328301429748535
    8. 'front' → logprob: -5.1328301429748535
    9. ' next' → logprob: -5.2578301429748535
    10. 'len' → logprob: -5.2578301429748535

Token 2887: ' n' (ID: 297)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7396758198738098
    2. 'next' → logprob: -1.364675760269165
    3. ' next' → logprob: -1.864675760269165
    4. 'n' → logprob: -3.364675760269165
    5. '_pos' → logprob: -4.239675998687744
    6. 'i' → logprob: -4.864675998687744
    7. ' pos' → logprob: -4.864675998687744
    8. 'for' → logprob: -5.114675998687744
    9. '   ' → logprob: -5.114675998687744
    10. ' n' → logprob: -5.239675998687744

Token 2888: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.9670974016189575
    2. 'n' → logprob: -1.3420974016189575
    3. ' n' → logprob: -1.5920974016189575
    4. 'est' → logprob: -3.467097282409668
    5. '<' → logprob: -3.717097282409668
    6. 'x' → logprob: -3.842097282409668
    7. ''' → logprob: -4.967097282409668
    8. '           ' → logprob: -4.967097282409668
    9. '<=' → logprob: -5.092097282409668
    10. '=' → logprob: -5.217097282409668

Token 2889: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5509292483329773
    2. ' pas' → logprob: -1.800929307937622
    3. 'not' → logprob: -1.800929307937622
    4. ' not' → logprob: -3.175929307937622
    5. 'None' → logprob: -3.800929307937622
    6. ' None' → logprob: -4.925929069519043
    7. 'possible' → logprob: -4.925929069519043
    8. 'next' → logprob: -5.425929069519043
    9. ' possible' → logprob: -6.175929069519043
    10. ' next' → logprob: -6.675929069519043

Token 2890: ' le' (ID: 505)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7687315344810486
    2. 'le' → logprob: -2.1437315940856934
    3. 'dans' → logprob: -2.1437315940856934
    4. 'pas' → logprob: -2.7687315940856934
    5. ' None' → logprob: -2.7687315940856934
    6. 'ships' → logprob: -3.5187315940856934
    7. 'done' → logprob: -3.7687315940856934
    8. 'possible' → logprob: -4.143731594085693
    9. 'K' → logprob: -4.643731594085693
    10. ' pas' → logprob: -4.893731594085693

Token 2891: ' premier' (ID: 15506)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dern' → logprob: -1.0280745029449463
    2. 'K' → logprob: -1.5280745029449463
    3. 'last' → logprob: -1.5280745029449463
    4. 'der' → logprob: -3.0280745029449463
    5. 'plus' → logprob: -3.9030745029449463
    6. 'done' → logprob: -4.278074264526367
    7. 'final' → logprob: -4.403074264526367
    8. 'end' → logprob: -4.528074264526367
    9. 'gate' → logprob: -4.778074264526367
    10. ' K' → logprob: -5.028074264526367

Token 2892: ' bateau' (ID: 123794)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1805752515792847
    2. ' bateau' → logprob: -1.3055752515792847
    3. '           ' → logprob: -1.8055752515792847
    4. ' ,' → logprob: -2.555575370788574
    5. 'bate' → logprob: -3.180575370788574
    6. '               ' → logprob: -3.180575370788574
    7. ':
' → logprob: -3.930575370788574
    8. 'b' → logprob: -4.055575370788574
    9. 'ship' → logprob: -4.805575370788574
    10. 'boat' → logprob: -5.180575370788574

Token 2893: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5109094977378845
    2. '               ' → logprob: -1.5109095573425293
    3. ',' → logprob: -1.8859095573425293
    4. ':
' → logprob: -4.010909557342529
    5. ' and' → logprob: -5.510909557342529
    6. ':' → logprob: -5.635909557342529
    7. 'and' → logprob: -7.260909557342529
    8. '#' → logprob: -8.510909080505371
    9. ',
' → logprob: -9.010909080505371
    10. '                   ' → logprob: -9.135909080505371

Token 2894: ' on' (ID: 402)
  Prédit: ' front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' front' → logprob: -0.37395328283309937
    2. '               ' → logprob: -1.7489533424377441
    3. 'front' → logprob: -2.998953342437744
    4. ' j' → logprob: -3.373953342437744
    5. '#' → logprob: -4.248953342437744
    6. 'j' → logprob: -4.498953342437744
    7. ' devant' → logprob: -4.998953342437744
    8. '           ' → logprob: -5.623953342437744
    9. ' #' → logprob: -5.623953342437744
    10. '                   ' → logprob: -5.998953342437744

Token 2895: ' doit' (ID: 21822)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.131491780281067
    2. 'continue' → logprob: -1.506491780281067
    3. '           ' → logprob: -1.881491780281067
    4. ' for' → logprob: -2.1314916610717773
    5. ' continue' → logprob: -2.1314916610717773
    6. '#' → logprob: -4.006491661071777
    7. 'contin' → logprob: -4.256491661071777
    8. '       ' → logprob: -5.006491661071777
    9. ' #' → logprob: -5.881491661071777
    10. '   ' → logprob: -6.131491661071777

Token 2896: ' s' (ID: 265)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.9895641803741455
    2. 'v' → logprob: -1.8645641803741455
    3. 'for' → logprob: -1.9895641803741455
    4. '           ' → logprob: -2.3645641803741455
    5. '       ' → logprob: -2.4895641803741455
    6. 'check' → logprob: -3.7395641803741455
    7. '   ' → logprob: -3.7395641803741455
    8. 'prendre' → logprob: -3.9895641803741455
    9. '#' → logprob: -4.239563941955566
    10. 'chercher' → logprob: -4.364563941955566

Token 2897: ''ar' (ID: 54307)
  Prédit: ''assurer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''assurer' → logprob: -0.025373373180627823
    2. '’assurer' → logprob: -3.9003734588623047
    3. ' assurer' → logprob: -6.400373458862305
    4. 'cheduler' → logprob: -7.025373458862305
    5. 'chedule' → logprob: -7.400373458862305
    6. ''ass' → logprob: -8.525373458862305
    7. 'for' → logprob: -8.650373458862305
    8. 'urer' → logprob: -8.775373458862305
    9. 'ur' → logprob: -9.150373458862305
    10. 'ass' → logprob: -9.275373458862305

Token 2898: 'reter' (ID: 69430)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06487518548965454
    2. 'river' → logprob: -3.4398751258850098
    3. 'reter' → logprob: -3.9398751258850098
    4. 'rr' → logprob: -5.43987512588501
    5. 'p' → logprob: -7.06487512588501
    6. 'j' → logprob: -7.43987512588501
    7. 'rive' → logprob: -7.56487512588501
    8. 'êter' → logprob: -7.56487512588501
    9. 'pp' → logprob: -7.81487512588501
    10. 'rà' → logprob: -8.064875602722168

Token 2899: ' avant' (ID: 13339)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.936721682548523
    2. ' avant' → logprob: -1.686721682548523
    3. ' au' → logprob: -1.811721682548523
    4. '           ' → logprob: -2.3117218017578125
    5. 'avant' → logprob: -3.1867218017578125
    6. 'à' → logprob: -3.3117218017578125
    7. ' devant' → logprob: -3.6867218017578125
    8. ' if' → logprob: -3.9367218017578125
    9. 'au' → logprob: -4.4367218017578125
    10. ' at' → logprob: -5.6867218017578125

Token 2900: ' bateau' (ID: 123794)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7824492454528809
    2. 'le' → logprob: -1.2824492454528809
    3. ' le' → logprob: -1.7824492454528809
    4. 'ships' → logprob: -3.782449245452881
    5. ' de' → logprob: -4.782449245452881
    6. 'for' → logprob: -5.282449245452881
    7. '            ' → logprob: -5.657449245452881
    8. 'la' → logprob: -5.657449245452881
    9. '          ' → logprob: -5.657449245452881
    10. ' la' → logprob: -5.782449245452881

Token 2901: ' devant' (ID: 37522)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5669496655464172
    2. 's' → logprob: -1.6919496059417725
    3. 'dev' → logprob: -2.6919496059417725
    4. '_s' → logprob: -3.1919496059417725
    5. '[' → logprob: -3.3169496059417725
    6. 'su' → logprob: -3.3169496059417725
    7. '_' → logprob: -3.8169496059417725
    8. '[s' → logprob: -5.066949844360352
    9. '           ' → logprob: -5.441949844360352
    10. '_front' → logprob: -5.566949844360352

Token 2902: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015893694944679737
    2. '                   ' → logprob: -7.626589298248291
    3. '<|end|>' → logprob: -8.62658977508545
    4. ' if' → logprob: -8.75158977508545
    5. ' for' → logprob: -9.12658977508545
    6. 'for' → logprob: -9.25158977508545
    7. '<|end|>' → logprob: -9.50158977508545
    8. ',' → logprob: -9.50158977508545
    9. 'if' → logprob: -9.62658977508545
    10. '		' → logprob: -9.62658977508545

Token 2903: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07161204516887665
    2. '                   ' → logprob: -2.6966121196746826
    3. ',' → logprob: -7.6966118812561035
    4. '               ' → logprob: -8.321612358093262
    5. ' (' → logprob: -8.571612358093262
    6. '(' → logprob: -8.571612358093262
    7. '(i' → logprob: -8.821612358093262
    8. '+' → logprob: -9.696612358093262
    9. ':' → logprob: -10.196612358093262
    10. '
' → logprob: -10.696612358093262

Token 2904: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009976790752261877
    2. 'for' → logprob: -8.125997543334961
    3. '
' → logprob: -8.375997543334961
    4. '                   ' → logprob: -8.625997543334961
    5. '               ' → logprob: -9.875997543334961
    6. 'if' → logprob: -10.000997543334961
    7. ' for' → logprob: -10.000997543334961
    8. '   ' → logprob: -10.500997543334961
    9. '       ' → logprob: -10.750997543334961
    10. '		' → logprob: -11.000997543334961

Token 2905: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002879414474591613
    2. 'if' → logprob: -7.002879619598389
    3. 'front' → logprob: -7.752879619598389
    4. '
' → logprob: -8.00287914276123
    5. '   ' → logprob: -8.00287914276123
    6. 'for' → logprob: -8.37787914276123
    7. '#' → logprob: -9.12787914276123
    8. '       ' → logprob: -9.50287914276123
    9. '            
' → logprob: -9.62787914276123
    10. '		' → logprob: -9.87787914276123

Token 2906: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3577127754688263
    2. 'le' → logprob: -3.107712745666504
    3. 'év' → logprob: -3.357712745666504
    4. 'prevent' → logprob: -3.732712745666504
    5. 'l' → logprob: -3.857712745666504
    6. 'respect' → logprob: -3.857712745666504
    7. 'maint' → logprob: -3.857712745666504
    8. ' éviter' → logprob: -4.107712745666504
    9. '   ' → logprob: -4.107712745666504
    10. 's' → logprob: -4.232712745666504

Token 2907: ' garde' (ID: 65309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37926676869392395
    2. 'e' → logprob: -2.6292667388916016
    3. ' i' → logprob: -2.8792667388916016
    4. 'es' → logprob: -3.6292667388916016
    5. 'l' → logprob: -4.254266738891602
    6. 'n' → logprob: -4.379266738891602
    7. 'b' → logprob: -4.504266738891602
    8. ' ' → logprob: -4.754266738891602
    9. ' espace' → logprob: -4.754266738891602
    10. 's' → logprob: -4.879266738891602

Token 2908: ' fou' (ID: 40581)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06598486751317978
    2. '-f' → logprob: -3.5659849643707275
    3. '-' → logprob: -4.440984725952148
    4. '   ' → logprob: -4.565984725952148
    5. ' ' → logprob: -5.815984725952148
    6. '       ' → logprob: -6.315984725952148
    7. '_f' → logprob: -6.440984725952148
    8. '```' → logprob: -6.565984725952148
    9. 'n' → logprob: -6.690984725952148
    10. '1' → logprob: -6.815984725952148

Token 2909: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034589387476444244
    2. ' if' → logprob: -3.6595892906188965
    3. ' ' → logprob: -6.2845892906188965
    4. '               ' → logprob: -6.5345892906188965
    5. '                   ' → logprob: -6.7845892906188965
    6. 'if' → logprob: -7.1595892906188965
    7. ' for' → logprob: -7.7845892906188965
    8. '		' → logprob: -7.7845892906188965
    9. '       ' → logprob: -8.409589767456055
    10. ',' → logprob: -8.409589767456055

Token 2910: ' position' (ID: 4010)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24086949229240417
    2. 'if' → logprob: -2.2408695220947266
    3. '1' → logprob: -3.3658695220947266
    4. '           ' → logprob: -3.3658695220947266
    5. '               ' → logprob: -4.740869522094727
    6. '                   ' → logprob: -5.240869522094727
    7. ' for' → logprob: -5.490869522094727
    8. 'for' → logprob: -5.740869522094727
    9. '#' → logprob: -6.115869522094727
    10. ' continue' → logprob: -6.115869522094727

Token 2911: ' bateau' (ID: 123794)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6650320887565613
    2. '=' → logprob: -1.665032148361206
    3. '_' → logprob: -1.665032148361206
    4. 's' → logprob: -3.665032148361206
    5. '[i' → logprob: -3.790032148361206
    6. '_next' → logprob: -4.790031909942627
    7. '_s' → logprob: -5.040031909942627
    8. ' _' → logprob: -5.290031909942627
    9. ' ' → logprob: -5.665031909942627
    10. '[' → logprob: -5.665031909942627

Token 2912: ' devant' (ID: 37522)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.046294927597046
    2. 'dev' → logprob: -1.796294927597046
    3. '[i' → logprob: -2.046294927597046
    4. '_' → logprob: -2.546294927597046
    5. 'su' → logprob: -2.546294927597046
    6. ' devant' → logprob: -3.296294927597046
    7. 's' → logprob: -3.421294927597046
    8. '_front' → logprob: -4.171295166015625
    9. '_dev' → logprob: -4.421295166015625
    10. '_s' → logprob: -4.546295166015625

Token 2913: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.037460170686244965
    2. '-' → logprob: -4.1624603271484375
    3. '[i' → logprob: -4.7874603271484375
    4. ' +' → logprob: -5.4124603271484375
    5. '[' → logprob: -6.4124603271484375
    6. '+' → logprob: -6.7874603271484375
    7. ' =' → logprob: -6.7874603271484375
    8. '=' → logprob: -7.4124603271484375
    9. ' ' → logprob: -7.5374603271484375
    10. '           ' → logprob: -7.6624603271484375

Token 2914: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04302236810326576
    2. ' ' → logprob: -3.168022394180298
    3. '0' → logprob: -11.168022155761719
    4. '   ' → logprob: -13.355522155761719
    5. '  ' → logprob: -13.668022155761719
    6. ' ' → logprob: -13.730522155761719
    7. ' EPS' → logprob: -13.855522155761719
    8. 'EPS' → logprob: -13.918022155761719
    9. '```' → logprob: -14.168022155761719
    10. '(' → logprob: -15.230522155761719

Token 2915: '

' (ID: 279)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6946572661399841
    2. '           ' → logprob: -0.9446572661399841
    3. ' if' → logprob: -2.444657325744629
    4. '-' → logprob: -5.069657325744629
    5. 'if' → logprob: -5.444657325744629
    6. '               ' → logprob: -5.944657325744629
    7. '
' → logprob: -6.069657325744629
    8. ',' → logprob: -6.694657325744629
    9. '                   ' → logprob: -6.694657325744629
    10. '       ' → logprob: -7.194657325744629

Token 2916: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008807787671685219
    2. ' ' → logprob: -6.88380765914917
    3. '            
' → logprob: -7.00880765914917
    4. '               ' → logprob: -7.00880765914917
    5. '       ' → logprob: -7.25880765914917
    6. ' 
' → logprob: -7.38380765914917
    7. '                   ' → logprob: -7.50880765914917
    8. '```' → logprob: -7.63380765914917
    9. ',' → logprob: -8.133808135986328
    10. '          ' → logprob: -8.258808135986328

Token 2917: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6835485696792603
    2. ' if' → logprob: -1.3085485696792603
    3. 'if' → logprob: -1.6835485696792603
    4. 'j' → logprob: -4.808548450469971
    5. ' front' → logprob: -4.933548450469971
    6. 'front' → logprob: -5.308548450469971
    7. '   ' → logprob: -5.683548450469971
    8. ' j' → logprob: -5.808548450469971
    9. '
' → logprob: -6.183548450469971
    10. 'for' → logprob: -6.433548450469971

Token 2918: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11181864142417908
    2. 'front' → logprob: -2.861818552017212
    3. '           ' → logprob: -3.361818552017212
    4. 'for' → logprob: -5.361818790435791
    5. 'j' → logprob: -5.611818790435791
    6. '   ' → logprob: -6.236818790435791
    7. '#' → logprob: -7.111818790435791
    8. 'idx' → logprob: -7.361818790435791
    9. 'prev' → logprob: -7.486818790435791
    10. ' if' → logprob: -7.611818790435791

Token 2919: ' trouve' (ID: 30913)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.6107052564620972
    2. '           ' → logprob: -1.9857052564620972
    3. 'dev' → logprob: -2.6107053756713867
    4. 'for' → logprob: -2.7357053756713867
    5. 'est' → logprob: -2.7357053756713867
    6. 'n' → logprob: -3.2357053756713867
    7. '#' → logprob: -3.3607053756713867
    8. ' continue' → logprob: -3.4857053756713867
    9. 'front' → logprob: -3.6107053756713867
    10. '_front' → logprob: -3.6107053756713867

Token 2920: ' bateau' (ID: 123794)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.7317308187484741
    2. '           ' → logprob: -1.9817308187484741
    3. '   ' → logprob: -2.6067309379577637
    4. 'front' → logprob: -2.9817309379577637
    5. 'idx' → logprob: -3.3567309379577637
    6. '#' → logprob: -3.7317309379577637
    7. 'i' → logprob: -3.7317309379577637
    8. 'if' → logprob: -3.8567309379577637
    9. 'the' → logprob: -3.8567309379577637
    10. ' ships' → logprob: -3.9817309379577637

Token 2921: ' devant' (ID: 37522)
  Prédit: 'dev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dev' → logprob: -0.025865117087960243
    2. 'front' → logprob: -4.650865077972412
    3. ' devant' → logprob: -5.400865077972412
    4. 'avant' → logprob: -5.650865077972412
    5. 'd' → logprob: -6.150865077972412
    6. '   ' → logprob: -7.150865077972412
    7. '#' → logprob: -7.400865077972412
    8. 'del' → logprob: -7.400865077972412
    9. 'i' → logprob: -7.525865077972412
    10. 'der' → logprob: -8.15086555480957

Token 2922: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18082983791828156
    2. 'if' → logprob: -2.6808297634124756
    3. 'front' → logprob: -3.5558297634124756
    4. 'for' → logprob: -3.6808297634124756
    5. 'j' → logprob: -3.9308297634124756
    6. ' if' → logprob: -5.305830001831055
    7. 'prev' → logprob: -5.555830001831055
    8. ' for' → logprob: -5.930830001831055
    9. 'idx' → logprob: -6.055830001831055
    10. ' front' → logprob: -6.555830001831055

Token 2923: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2741350531578064
    2. ' =' → logprob: -1.7741351127624512
    3. '=' → logprob: -3.399135112762451
    4. 'j' → logprob: -5.149135112762451
    5. '_j' → logprob: -5.274135112762451
    6. '[j' → logprob: -5.274135112762451
    7. '_front' → logprob: -5.524135112762451
    8. '[' → logprob: -6.149135112762451
    9. 'for' → logprob: -6.274135112762451
    10. ':' → logprob: -6.774135112762451

Token 2924: ' candidates' (ID: 18116)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4581807851791382
    2. 'for' → logprob: -1.8331807851791382
    3. ' for' → logprob: -2.8331809043884277
    4. 'j' → logprob: -2.8331809043884277
    5. 'front' → logprob: -3.5831809043884277
    6. 'if' → logprob: -3.5831809043884277
    7. ' j' → logprob: -4.583180904388428
    8. ' front' → logprob: -4.958180904388428
    9. ' if' → logprob: -5.083180904388428
    10. 'idx' → logprob: -5.708180904388428

Token 2925: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0076437825337052345
    2. ' =' → logprob: -4.882643699645996
    3. '=[]' → logprob: -10.882643699645996
    4. 's' → logprob: -11.507643699645996
    5. '=[]
' → logprob: -12.757643699645996
    6. '=
' → logprob: -12.757643699645996
    7. '=[' → logprob: -13.882643699645996
    8. '=s' → logprob: -14.882643699645996
    9. '=[
' → logprob: -15.632643699645996
    10. 'for' → logprob: -15.882643699645996

Token 2926: ' []
' (ID: 8911)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.054330095648765564
    2. '[' → logprob: -4.054329872131348
    3. '[(' → logprob: -4.054329872131348
    4. '[x' → logprob: -4.304329872131348
    5. '[idx' → logprob: -6.054329872131348
    6. '[j' → logprob: -6.554329872131348
    7. '[s' → logprob: -8.179329872131348
    8. '[pos' → logprob: -8.554329872131348
    9. '[index' → logprob: -8.679329872131348
    10. '[k' → logprob: -9.429329872131348

Token 2927: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13026535511016846
    2. ' for' → logprob: -2.505265235900879
    3. 'for' → logprob: -3.255265235900879
    4. '[' → logprob: -6.755265235900879
    5. '
' → logprob: -8.630265235900879
    6. '[i' → logprob: -9.130265235900879
    7. '               ' → logprob: -9.880265235900879
    8. ' [' → logprob: -10.005265235900879
    9. ' if' → logprob: -10.005265235900879
    10. '                   ' → logprob: -10.505265235900879

Token 2928: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1137010008096695
    2. '           ' → logprob: -2.863701105117798
    3. ' for' → logprob: -2.988701105117798
    4. '		' → logprob: -11.238700866699219
    5. '	for' → logprob: -11.238700866699219
    6. '   ' → logprob: -11.738700866699219
    7. '[' → logprob: -11.988700866699219
    8. '       ' → logprob: -12.238700866699219
    9. ' ' → logprob: -12.613700866699219
    10. ' ' → logprob: -12.988700866699219

Token 2929: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0020240433514118195
    2. ' j' → logprob: -6.502024173736572
    3. 'idx' → logprob: -7.877024173736572
    4. 'x' → logprob: -10.377023696899414
    5. '_j' → logprob: -10.752023696899414
    6. 'front' → logprob: -11.252023696899414
    7. 'c' → logprob: -11.252023696899414
    8. 'ship' → logprob: -11.502023696899414
    9. 'prev' → logprob: -11.627023696899414
    10. '   ' → logprob: -12.002023696899414

Token 2930: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002499086782336235
    2. 'in' → logprob: -6.002499103546143
    3. ' ' → logprob: -11.627498626708984
    4. '   ' → logprob: -12.627498626708984
    5. '  ' → logprob: -12.752498626708984
    6. ',' → logprob: -12.877498626708984
    7. '	in' → logprob: -13.252498626708984
    8. '    ' → logprob: -14.502498626708984
    9. ' ' → logprob: -14.502498626708984
    10. ' i' → logprob: -14.627498626708984

Token 2931: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.022525547072291374
    2. 'ships' → logprob: -4.522525310516357
    3. 'idx' → logprob: -5.147525310516357
    4. ' range' → logprob: -5.897525310516357
    5. '[' → logprob: -6.397525310516357
    6. '[s' → logprob: -7.772525310516357
    7. 'ship' → logprob: -8.772525787353516
    8. '[idx' → logprob: -9.397525787353516
    9. '[i' → logprob: -9.647525787353516
    10. '(range' → logprob: -9.897525787353516

Token 2932: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.11855877190828323
    2. 'range' → logprob: -2.368558883666992
    3. '(M' → logprob: -4.368558883666992
    4. 'i' → logprob: -5.993558883666992
    5. '0' → logprob: -7.243558883666992
    6. '[M' → logprob: -7.368558883666992
    7. '(i' → logprob: -7.493558883666992
    8. '   ' → logprob: -8.118558883666992
    9. ' range' → logprob: -8.493558883666992
    10. '(range' → logprob: -8.618558883666992

Token 2933: '):
' (ID: 1883)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1686059683561325
    2. ',' → logprob: -2.6686060428619385
    3. '):
' → logprob: -3.0436060428619385
    4. 'in' → logprob: -4.418605804443359
    5. ' if' → logprob: -5.293605804443359
    6. '           ' → logprob: -5.293605804443359
    7. ':
' → logprob: -5.293605804443359
    8. ':' → logprob: -5.793605804443359
    9. 'if' → logprob: -6.168605804443359
    10. '               ' → logprob: -6.543605804443359

Token 2934: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028255043551325798
    2. ' if' → logprob: -3.778254985809326
    3. 'if' → logprob: -6.403254985809326
    4. ':
' → logprob: -7.403254985809326
    5. '                       ' → logprob: -7.778254985809326
    6. '	           ' → logprob: -7.778254985809326
    7. '           ' → logprob: -8.028255462646484
    8. '                   ' → logprob: -8.403255462646484
    9. '			' → logprob: -8.653255462646484
    10. ':' → logprob: -8.653255462646484

Token 2935: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6381618976593018
    2. '               ' → logprob: -1.2631618976593018
    3. ' if' → logprob: -1.7631618976593018
    4. '   ' → logprob: -5.138161659240723
    5. '                   ' → logprob: -5.138161659240723
    6. ' j' → logprob: -5.763161659240723
    7. ' ' → logprob: -6.763161659240723
    8. 'j' → logprob: -7.638161659240723
    9. ' ' → logprob: -8.513161659240723
    10. '           ' → logprob: -8.763161659240723

Token 2936: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.009276091121137142
    2. ' ships' → logprob: -5.134275913238525
    3. 'j' → logprob: -6.009275913238525
    4. '   ' → logprob: -7.634275913238525
    5. '(' → logprob: -9.009276390075684
    6. '    ' → logprob: -9.759276390075684
    7. ' j' → logprob: -10.259276390075684
    8. 'ship' → logprob: -10.384276390075684
    9. '  ' → logprob: -10.509276390075684
    10. '     ' → logprob: -10.759276390075684

Token 2937: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.7610454708337784e-05
    2. '[i' → logprob: -11.125027656555176
    3. '   ' → logprob: -12.375027656555176
    4. '[' → logprob: -13.750027656555176
    5. ' [' → logprob: -13.750027656555176
    6. '[
' → logprob: -13.875027656555176
    7. '][' → logprob: -14.375027656555176
    8. '[pos' → logprob: -14.500027656555176
    9. '	j' → logprob: -14.625027656555176
    10. ']' → logprob: -14.750027656555176

Token 2938: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.01718124747276306
    2. '[j' → logprob: -4.642181396484375
    3. '.' → logprob: -5.892181396484375
    4. '.j' → logprob: -6.892181396484375
    5. '[i' → logprob: -7.267181396484375
    6. '>.' → logprob: -7.267181396484375
    7. '[' → logprob: -7.517181396484375
    8. ').' → logprob: -7.892181396484375
    9. '<|end|>' → logprob: -8.142181396484375
    10. ']' → logprob: -8.392181396484375

Token 2939: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -8.423219696851447e-05
    2. 'done' → logprob: -10.125083923339844
    3. 'j' → logprob: -10.375083923339844
    4. 'speed' → logprob: -11.875083923339844
    5. 'index' → logprob: -13.250083923339844
    6. 'position' → logprob: -13.500083923339844
    7. ' pos' → logprob: -13.875083923339844
    8. '   ' → logprob: -14.625083923339844
    9. 'idx' → logprob: -15.750083923339844
    10. '.pos' → logprob: -15.750083923339844

Token 2940: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20252205431461334
    2. '>' → logprob: -1.7025220394134521
    3. ' <' → logprob: -7.077522277832031
    4. '<' → logprob: -9.577522277832031
    5. ' -' → logprob: -10.327522277832031
    6. ' ' → logprob: -10.702522277832031
    7. '                   ' → logprob: -11.077522277832031
    8. '   ' → logprob: -11.327522277832031
    9. '               ' → logprob: -11.577522277832031
    10. '-' → logprob: -11.702522277832031

Token 2941: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10942946374416351
    2. 'ships' → logprob: -2.484429359436035
    3. ' s' → logprob: -3.984429359436035
    4. ' ships' → logprob: -6.609429359436035
    5. '   ' → logprob: -8.859429359436035
    6. 'i' → logprob: -9.234429359436035
    7. '	s' → logprob: -11.421929359436035
    8. '       ' → logprob: -11.546929359436035
    9. '    ' → logprob: -11.984429359436035
    10. 'ship' → logprob: -12.234429359436035

Token 2942: '.pos' (ID: 25321)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013532528653740883
    2. 'i' → logprob: -4.388532638549805
    3. '[j' → logprob: -7.388532638549805
    4. '.i' → logprob: -8.138532638549805
    5. '.' → logprob: -9.888532638549805
    6. '(i' → logprob: -11.138532638549805
    7. 'j' → logprob: -11.888532638549805
    8. '[' → logprob: -12.013532638549805
    9. '.j' → logprob: -12.513532638549805
    10. '   ' → logprob: -12.763532638549805

Token 2943: ' +' (ID: 659)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9738966226577759
    2. ' +' → logprob: -1.0988966226577759
    3. '+' → logprob: -1.4738966226577759
    4. 'and' → logprob: -2.8488965034484863
    5. '                   ' → logprob: -7.223896503448486
    6. ':
' → logprob: -7.473896503448486
    7. '               ' → logprob: -7.973896503448486
    8. '           ' → logprob: -9.223896980285645
    9. '                ' → logprob: -9.473896980285645
    10. ':' → logprob: -9.723896980285645

Token 2944: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -6.0629870858974755e-05
    2. '1' → logprob: -10.25006103515625
    3. ' EPS' → logprob: -10.62506103515625
    4. 'ESP' → logprob: -15.12506103515625
    5. ' ' → logprob: -15.25006103515625
    6. 'EP' → logprob: -15.50006103515625
    7. 'eps' → logprob: -16.50006103515625
    8. '   ' → logprob: -17.12506103515625
    9. '+' → logprob: -17.25006103515625
    10. 'EPT' → logprob: -17.75006103515625

Token 2945: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06310228258371353
    2. 'and' → logprob: -3.0631022453308105
    3. '                   ' → logprob: -4.4381022453308105
    4. ':
' → logprob: -6.4381022453308105
    5. '               ' → logprob: -7.4381022453308105
    6. '                       ' → logprob: -9.188102722167969
    7. '           ' → logprob: -9.313102722167969
    8. ',' → logprob: -9.813102722167969
    9. ':' → logprob: -9.813102722167969
    10. '                  ' → logprob: -11.188102722167969

Token 2946: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011075903894379735
    2. '               ' → logprob: -7.876107692718506
    3. '                       ' → logprob: -8.251107215881348
    4. ' candidates' → logprob: -9.001107215881348
    5. '_candidates' → logprob: -9.751107215881348
    6. ',' → logprob: -9.876107215881348
    7. 'c' → logprob: -10.501107215881348
    8. '                  ' → logprob: -10.501107215881348
    9. '                    ' → logprob: -10.751107215881348
    10. ' and' → logprob: -11.001107215881348

Token 2947: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.1272638440132141
    2. 'c' → logprob: -2.1272637844085693
    3. ' c' → logprob: -9.502264022827148
    4. '_candidates' → logprob: -9.752264022827148
    5. '                   ' → logprob: -10.127264022827148
    6. ' candidats' → logprob: -10.252264022827148
    7. '               ' → logprob: -10.377264022827148
    8. 'andidates' → logprob: -10.502264022827148
    9. ' candidatos' → logprob: -11.377264022827148
    10. '	c' → logprob: -11.377264022827148

Token 2948: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001171652227640152
    2. '.' → logprob: -7.751171588897705
    3. '.sort' → logprob: -7.751171588897705
    4. ' .' → logprob: -8.501172065734863
    5. ' =' → logprob: -11.126172065734863
    6. ':' → logprob: -11.251172065734863
    7. '.insert' → logprob: -11.501172065734863
    8. '.extend' → logprob: -11.626172065734863
    9. '.clear' → logprob: -11.751172065734863
    10. '=' → logprob: -12.251172065734863

Token 2949: '((' (ID: 2054)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.70303875207901
    2. '(j' → logprob: -0.70303875207901
    3. '(' → logprob: -4.828038692474365
    4. ' (' → logprob: -6.828038692474365
    5. ' j' → logprob: -7.703038692474365
    6. 'ships' → logprob: -9.203039169311523
    7. '(s' → logprob: -9.703039169311523
    8. '   ' → logprob: -9.703039169311523
    9. '(
' → logprob: -11.078039169311523
    10. '(ship' → logprob: -11.078039169311523

Token 2950: 'ships' (ID: 23847)
  Prédit: 'ships'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -4.286852345103398e-05
    2. ' ships' → logprob: -10.125042915344238
    3. 'ship' → logprob: -14.000042915344238
    4. '   ' → logprob: -14.625042915344238
    5. 'jets' → logprob: -15.250042915344238
    6. 'shops' → logprob: -15.625042915344238
    7. '           ' → logprob: -15.875042915344238
    8. '(' → logprob: -16.125041961669922
    9. 'j' → logprob: -16.125041961669922
    10. '       ' → logprob: -16.375041961669922

Token 2951: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.6087021473795176e-05
    2. 'j' → logprob: -10.750045776367188
    3. '[i' → logprob: -11.375045776367188
    4. '   ' → logprob: -12.250045776367188
    5. '[' → logprob: -13.375045776367188
    6. '[
' → logprob: -13.500045776367188
    7. 'pos' → logprob: -13.750045776367188
    8. '[pos' → logprob: -13.875045776367188
    9. '
' → logprob: -14.500045776367188
    10. ' [' → logprob: -14.750045776367188

Token 2952: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03601781651377678
    2. '][' → logprob: -3.661017894744873
    3. '[' → logprob: -5.786017894744873
    4. '],' → logprob: -6.036017894744873
    5. ').' → logprob: -6.911017894744873
    6. ' ].' → logprob: -7.286017894744873
    7. '.pos' → logprob: -7.661017894744873
    8. '[j' → logprob: -8.161017417907715
    9. ',j' → logprob: -8.161017417907715
    10. '.index' → logprob: -8.661017417907715

Token 2953: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -7.465036105713807e-06
    2. ' pos' → logprob: -12.625007629394531
    3. '0' → logprob: -14.125007629394531
    4. 'position' → logprob: -14.250007629394531
    5. '.pos' → logprob: -14.500007629394531
    6. '   ' → logprob: -15.125007629394531
    7. '	pos' → logprob: -15.250007629394531
    8. ' ' → logprob: -15.625007629394531
    9. '1' → logprob: -15.625007629394531
    10. '-' → logprob: -15.750007629394531

Token 2954: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3808109164237976
    2. ',' → logprob: -1.3808109760284424
    3. '-' → logprob: -2.7558109760284424
    4. ' ,' → logprob: -6.880810737609863
    5. ',j' → logprob: -8.255810737609863
    6. '           ' → logprob: -9.005810737609863
    7. ' ' → logprob: -9.755810737609863
    8. '   ' → logprob: -9.880810737609863
    9. '                   ' → logprob: -10.130810737609863
    10. '               ' → logprob: -10.380810737609863

Token 2955: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0022752697113901377
    2. ' j' → logprob: -6.127275466918945
    3. '   ' → logprob: -10.752275466918945
    4. '    ' → logprob: -10.752275466918945
    5. '	j' → logprob: -11.252275466918945
    6. ')' → logprob: -11.752275466918945
    7. 'ships' → logprob: -11.877275466918945
    8. ' ships' → logprob: -12.877275466918945
    9. '  ' → logprob: -13.252275466918945
    10. '                   ' → logprob: -13.377275466918945

Token 2956: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.007613963447511196
    2. '))' → logprob: -5.0076141357421875
    3. '))

' → logprob: -8.257614135742188
    4. ' ))
' → logprob: -8.257614135742188
    5. '               ' → logprob: -9.132614135742188
    6. '           ' → logprob: -9.132614135742188
    7. '                   ' → logprob: -9.382614135742188
    8. ',' → logprob: -9.882614135742188
    9. '))
' → logprob: -11.507614135742188
    10. ',))
' → logprob: -12.757614135742188

Token 2957: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012309459270909429
    2. '
' → logprob: -6.751230716705322
    3. '                   ' → logprob: -10.12623119354248
    4. '               ' → logprob: -11.12623119354248
    5. '       ' → logprob: -13.62623119354248
    6. '```' → logprob: -14.00123119354248
    7. '[' → logprob: -14.12623119354248
    8. '            
' → logprob: -14.75123119354248
    9. '          ' → logprob: -15.00123119354248
    10. '   ' → logprob: -15.00123119354248

Token 2958: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10239741206169128
    2. '           ' → logprob: -2.6023974418640137
    3. 'if' (adapté à ' if') → logprob: -3.8523974418640137
    4. '               ' → logprob: -7.727397441864014
    5. '
' → logprob: -7.977397441864014
    6. '   ' → logprob: -8.477396965026855
    7. '#' → logprob: -8.727396965026855
    8. ' if' → logprob: -8.727396965026855
    9. '                   ' → logprob: -8.852396965026855
    10. ' candidates' → logprob: -8.977396965026855

Token 2959: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014181484468281269
    2. ' candidates' → logprob: -4.389181613922119
    3. 'len' → logprob: -6.514181613922119
    4. ' len' → logprob: -9.514181137084961
    5. ' c' → logprob: -9.639181137084961
    6. '   ' → logprob: -10.639181137084961
    7. '           ' → logprob: -12.389181137084961
    8. 'cand' → logprob: -12.764181137084961
    9. '     ' → logprob: -13.014181137084961
    10. '  ' → logprob: -13.014181137084961

Token 2960: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04973362013697624
    2. ':' → logprob: -3.6747336387634277
    3. '.sort' → logprob: -3.7997336387634277
    4. '=' → logprob: -7.799733638763428
    5. '):
' → logprob: -9.17473316192627
    6. '_sorted' → logprob: -9.17473316192627
    7. 'sort' → logprob: -10.29973316192627
    8. ' =' → logprob: -10.42473316192627
    9. '       ' → logprob: -10.92473316192627
    10. 'sorted' → logprob: -11.04973316192627

Token 2961: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003598402487114072
    2. '           ' → logprob: -6.378598213195801
    3. ' candidates' → logprob: -7.003598213195801
    4. 'c' → logprob: -8.0035982131958
    5. '                   ' → logprob: -9.0035982131958
    6. ' c' → logprob: -9.0035982131958
    7. '#' → logprob: -9.3785982131958
    8. ' candidats' → logprob: -10.1285982131958
    9. '_candidates' → logprob: -10.5035982131958
    10. '[c' → logprob: -10.6285982131958

Token 2962: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7697820663452148
    2. '               ' → logprob: -1.3947820663452148
    3. ' candidates' → logprob: -1.3947820663452148
    4. '#' → logprob: -3.519782066345215
    5. 'cand' → logprob: -5.769782066345215
    6. ' c' → logprob: -6.144782066345215
    7. ' #' → logprob: -6.644782066345215
    8. 'next' → logprob: -7.019782066345215
    9. ' candidats' → logprob: -7.019782066345215
    10. '   ' → logprob: -7.644782066345215

Token 2963: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.010474183596670628
    2. '=' → logprob: -4.76047420501709
    3. 'sort' → logprob: -7.26047420501709
    4. ' =' → logprob: -7.26047420501709
    5. '_sorted' → logprob: -8.26047420501709
    6. '=c' → logprob: -9.63547420501709
    7. '               ' → logprob: -10.13547420501709
    8. '           ' → logprob: -10.76047420501709
    9. '                   ' → logprob: -10.76047420501709
    10. '_candidates' → logprob: -11.51047420501709

Token 2964: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6694093942642212
    2. '=' → logprob: -2.0444092750549316
    3. '               ' → logprob: -2.0444092750549316
    4. '(key' → logprob: -2.1694092750549316
    5. '=lambda' → logprob: -2.2944092750549316
    6. '()[' → logprob: -3.0444092750549316
    7. '           ' → logprob: -3.2944092750549316
    8. ' =' → logprob: -3.2944092750549316
    9. '(lambda' → logprob: -3.2944092750549316
    10. '()' → logprob: -3.4194092750549316

Token 2965: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28113487362861633
    2. '                   ' → logprob: -1.906134843826294
    3. '(pos' → logprob: -3.781134843826294
    4. ',' → logprob: -4.156135082244873
    5. ' (' → logprob: -4.156135082244873
    6. '[' → logprob: -4.406135082244873
    7. '(' → logprob: -4.531135082244873
    8. '(next' → logprob: -5.281135082244873
    9. '#' → logprob: -6.031135082244873
    10. '           ' → logprob: -6.031135082244873

Token 2966: ' pos' (ID: 1253)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.9940922260284424
    2. 'next' → logprob: -1.1190922260284424
    3. 'front' → logprob: -1.9940922260284424
    4. '               ' → logprob: -2.8690922260284424
    5. 'pos' (adapté à ' pos') → logprob: -2.9940922260284424
    6. ' front' → logprob: -3.7440922260284424
    7. ' pos' → logprob: -4.369091987609863
    8. 'target' → logprob: -5.869091987609863
    9. ' _,' → logprob: -5.994091987609863
    10. ' dist' → logprob: -6.244091987609863

Token 2967: '_front' (ID: 56078)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3515947759151459
    2. ' =' → logprob: -2.4765946865081787
    3. 'c' → logprob: -2.6015946865081787
    4. '_,' → logprob: -3.3515946865081787
    5. '_c' → logprob: -3.3515946865081787
    6. '=' → logprob: -3.8515946865081787
    7. '_' → logprob: -4.226594924926758
    8. '_next' → logprob: -4.726594924926758
    9. '_candidate' → logprob: -5.226594924926758
    10. '_front' → logprob: -5.476594924926758

Token 2968: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2081010788679123
    2. '=' → logprob: -1.8331010341644287
    3. ' =' → logprob: -3.9581010341644287
    4. '_front' → logprob: -5.958101272583008
    5. '_,' → logprob: -6.333101272583008
    6. 'c' → logprob: -6.333101272583008
    7. ',c' → logprob: -7.333101272583008
    8. ' ,' → logprob: -7.583101272583008
    9. '   ' → logprob: -8.333101272583008
    10. '                   ' → logprob: -8.458101272583008

Token 2969: ' idx' (ID: 14016)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001116404077038169
    2. ' candidates' → logprob: -7.0011162757873535
    3. ' c' → logprob: -9.126116752624512
    4. 'candidate' → logprob: -10.001116752624512
    5. 'cand' → logprob: -11.501116752624512
    6. 'j' → logprob: -11.626116752624512
    7. '_candidates' → logprob: -11.626116752624512
    8. 'ship' → logprob: -12.501116752624512
    9. ' candidats' → logprob: -13.001116752624512
    10. '	c' → logprob: -13.376116752624512

Token 2970: '_front' (ID: 56078)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23326221108436584
    2. 'c' → logprob: -2.608262300491333
    3. '_front' → logprob: -2.608262300491333
    4. '=c' → logprob: -3.233262300491333
    5. 'front' → logprob: -4.483262062072754
    6. ' =' → logprob: -4.858262062072754
    7. 'candidate' → logprob: -7.483262062072754
    8. '_candidates' → logprob: -7.858262062072754
    9. 'cand' → logprob: -8.608262062072754
    10. '_=' → logprob: -8.858262062072754

Token 2971: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03382204473018646
    2. ' =' → logprob: -3.4088220596313477
    3. '=c' → logprob: -8.658822059631348
    4. ',' → logprob: -13.783822059631348
    5. 'c' → logprob: -14.283822059631348
    6. ',c' → logprob: -15.283822059631348
    7. '=_' → logprob: -15.783822059631348
    8. '=user' → logprob: -15.908822059631348
    9. ' ' → logprob: -16.15882110595703
    10. ')=' → logprob: -16.15882110595703

Token 2972: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006719640456140041
    2. ' candidates' → logprob: -5.006719589233398
    3. 'candidate' → logprob: -13.131719589233398
    4. '_candidates' → logprob: -14.381719589233398
    5. '   ' → logprob: -14.506719589233398
    6. ' c' → logprob: -15.006719589233398
    7. '(c' → logprob: -15.256719589233398
    8. '           ' → logprob: -15.631719589233398
    9. '	c' → logprob: -16.2567195892334
    10. ' candidats' → logprob: -16.3817195892334

Token 2973: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007630874402821064
    2. ' =' → logprob: -4.882630825042725
    3. '=c' → logprob: -11.757631301879883
    4. ',' → logprob: -12.132631301879883
    5. '=
' → logprob: -12.757631301879883
    6. '               ' → logprob: -13.007631301879883
    7. '                   ' → logprob: -13.132631301879883
    8. 'c' → logprob: -13.507631301879883
    9. ')' → logprob: -14.382631301879883
    10. '           ' → logprob: -14.757631301879883

Token 2974: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010035126470029354
    2. 'c' → logprob: -7.376003742218018
    3. '-' → logprob: -8.50100326538086
    4. ' ' → logprob: -10.12600326538086
    5. ':' → logprob: -11.12600326538086
    6. 'pos' → logprob: -11.25100326538086
    7. '#' → logprob: -11.25100326538086
    8. '1' → logprob: -11.37600326538086
    9. 'idx' → logprob: -11.37600326538086
    10. '[' → logprob: -11.62600326538086

Token 2975: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042019762098789215
    2. '               ' → logprob: -3.917019844055176
    3. ')' → logprob: -4.792019844055176
    4. ']' → logprob: -5.417019844055176
    5. '                   ' → logprob: -5.417019844055176
    6. ',
' → logprob: -6.917019844055176
    7. ' ,' → logprob: -7.042019844055176
    8. ')
' → logprob: -7.417019844055176
    9. '           ' → logprob: -8.167019844055176
    10. '
' → logprob: -8.792019844055176

Token 2976: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00026073982007801533
    2. ',' → logprob: -9.375260353088379
    3. '
' → logprob: -9.375260353088379
    4. '                   ' → logprob: -10.375260353088379
    5. '                
' → logprob: -11.000260353088379
    6. '#' → logprob: -11.625260353088379
    7. ' if' → logprob: -12.250260353088379
    8. '                       ' → logprob: -12.250260353088379
    9. '```' → logprob: -12.250260353088379
    10. ',
' → logprob: -12.875260353088379

Token 2977: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1879229098558426
    2. ' next' → logprob: -2.062922954559326
    3. 'if' → logprob: -3.812922954559326
    4. ' if' → logprob: -4.812922954559326
    5. '               ' → logprob: -4.937922954559326
    6. 'pos' → logprob: -5.312922954559326
    7. 'new' → logprob: -7.562922954559326
    8. '#' (adapté à ' #') → logprob: -8.562922477722168
    9. '           ' → logprob: -8.937922477722168
    10. 'max' → logprob: -8.937922477722168

Token 2978: ' distance' (ID: 9324)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.20115649700164795
    2. 'if' → logprob: -2.4511566162109375
    3. 'pos' → logprob: -3.0761566162109375
    4. ' next' → logprob: -4.0761566162109375
    5. '#' → logprob: -5.0761566162109375
    6. ' if' → logprob: -5.2011566162109375
    7. 'possible' → logprob: -5.2011566162109375
    8. 'max' → logprob: -5.3261566162109375
    9. '               ' → logprob: -5.4511566162109375
    10. 'new' → logprob: -6.3261566162109375

Token 2979: ' doit' (ID: 21822)
  Prédit: '_front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_front' → logprob: -0.752242922782898
    2. ' =' → logprob: -0.877242922782898
    3. '_' → logprob: -3.8772430419921875
    4. '_target' → logprob: -4.0022430419921875
    5. '_av' → logprob: -4.3772430419921875
    6. '_req' → logprob: -4.7522430419921875
    7. '_s' → logprob: -5.0022430419921875
    8. '=' → logprob: -5.1272430419921875
    9. '_min' → logprob: -5.5022430419921875
    10. '_c' → logprob: -5.6272430419921875

Token 2980: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04090341180562973
    2. '<=' → logprob: -3.665903329849243
    3. ' be' → logprob: -4.665903568267822
    4. '>=' → logprob: -6.415903568267822
    5. 'be' → logprob: -6.790903568267822
    6. ' =' → logprob: -7.040903568267822
    7. '>' → logprob: -7.790903568267822
    8. ' <=' → logprob: -8.165903091430664
    9. 'max' → logprob: -9.415903091430664
    10. '-' → logprob: -9.790903091430664

Token 2981: ' au' (ID: 2791)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.248177170753479
    2. ' pos' → logprob: -2.3731770515441895
    3. '>=' → logprob: -2.8731770515441895
    4. 'max' → logprob: -3.6231770515441895
    5. '<=' → logprob: -4.3731770515441895
    6. ' au' → logprob: -4.7481770515441895
    7. '>' → logprob: -5.1231770515441895
    8. 'au' → logprob: -5.6231770515441895
    9. ' >=' → logprob: -5.6231770515441895
    10. 'min' → logprob: -5.9981770515441895

Token 2982: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0013701190473511815
    2. 'minimum' → logprob: -7.376369953155518
    3. 'mo' → logprob: -7.626369953155518
    4. 'plus' → logprob: -8.876370429992676
    5. '```' → logprob: -10.376370429992676
    6. 'menos' → logprob: -11.001370429992676
    7. 'maximum' → logprob: -11.001370429992676
    8. 'most' → logprob: -11.001370429992676
    9. '-' → logprob: -12.001370429992676
    10. 'min' → logprob: -12.126370429992676

Token 2983: ' ' (ID: 220)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4517059326171875
    2. '1' → logprob: -1.2017059326171875
    3. ' pos' → logprob: -2.8267059326171875
    4. ' ' → logprob: -5.8267059326171875
    5. '(pos' → logprob: -7.9517059326171875
    6. ' ' → logprob: -10.326705932617188
    7. '   ' → logprob: -10.326705932617188
    8. '           ' → logprob: -10.326705932617188
    9. '	pos' → logprob: -10.826705932617188
    10. '               ' → logprob: -11.201705932617188

Token 2984: '1' (ID: 16)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.08022753149271011
    2. '1' → logprob: -2.5802276134490967
    3. ' pos' → logprob: -7.330227375030518
    4. '(pos' → logprob: -7.455227375030518
    5. ' ' → logprob: -10.580227851867676
    6. '   ' → logprob: -11.080227851867676
    7. '[pos' → logprob: -11.455227851867676
    8. '```' → logprob: -11.830227851867676
    9. '  ' → logprob: -12.205227851867676
    10. '0' → logprob: -12.330227851867676

Token 2985: 'km' (ID: 15284)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02249150723218918
    2. '-' → logprob: -4.522491455078125
    3. '.' → logprob: -5.522491455078125
    4. '               ' → logprob: -6.272491455078125
    5. ' =' → logprob: -6.897491455078125
    6. '                   ' → logprob: -7.272491455078125
    7. '=' → logprob: -7.522491455078125
    8. ',' → logprob: -7.522491455078125
    9. ':
' → logprob: -7.897491455078125
    10. '
' → logprob: -8.022491455078125

Token 2986: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37633946537971497
    2. 'pos' → logprob: -1.3763394355773926
    3. 'if' → logprob: -3.7513394355773926
    4. ' =' → logprob: -4.126339435577393
    5. ' if' → logprob: -4.376339435577393
    6. '=' → logprob: -5.876339435577393
    7. ' pos' → logprob: -6.126339435577393
    8. ',' → logprob: -6.501339435577393
    9. 's' → logprob: -7.626339435577393
    10. '
' → logprob: -8.37633991241455

Token 2987: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031973462319001555
    2. '                   ' → logprob: -9.125319480895996
    3. ' if' → logprob: -9.500319480895996
    4. '
' → logprob: -10.250319480895996
    5. 'if' → logprob: -10.875319480895996
    6. '```' → logprob: -11.125319480895996
    7. '              ' → logprob: -11.125319480895996
    8. '                       ' → logprob: -11.250319480895996
    9. ',' → logprob: -11.500319480895996
    10. '                
' → logprob: -12.000319480895996

Token 2988: ' pos' (ID: 1253)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9971485137939453
    2. 'next' → logprob: -1.6221485137939453
    3. ' if' → logprob: -1.7471485137939453
    4. 'if' → logprob: -2.2471485137939453
    5. ' next' → logprob: -2.2471485137939453
    6. 'pos' (adapté à ' pos') → logprob: -3.3721485137939453
    7. 'new' → logprob: -5.622148513793945
    8. ' new' → logprob: -5.997148513793945
    9. ' pos' → logprob: -6.122148513793945
    10. 'possible' → logprob: -7.122148513793945

Token 2989: '_limit' (ID: 34361)
  Prédit: '_front'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_front' → logprob: -0.041304074227809906
    2. '_' → logprob: -3.541304111480713
    3. ' =' → logprob: -4.916304111480713
    4. '=' → logprob: -5.666304111480713
    5. '_new' → logprob: -9.041303634643555
    6. '_next' → logprob: -9.291303634643555
    7. '_=' → logprob: -9.291303634643555
    8. ' _' → logprob: -9.541303634643555
    9. '=_' → logprob: -9.666303634643555
    10. '_f' → logprob: -10.166303634643555

Token 2990: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575950026512146
    2. '=' → logprob: -0.825950026512146
    3. '   ' → logprob: -12.575949668884277
    4. '           ' → logprob: -13.450949668884277
    5. ' ' → logprob: -13.575949668884277
    6. '                   ' → logprob: -13.825949668884277
    7. '               ' → logprob: -14.325949668884277
    8. '```' → logprob: -14.825949668884277
    9. '       ' → logprob: -15.200949668884277
    10. 'pos' → logprob: -15.700949668884277

Token 2991: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.061983373016119
    2. ' pos' → logprob: -2.811983346939087
    3. '(pos' → logprob: -11.436983108520508
    4. '               ' → logprob: -12.811983108520508
    5. '                   ' → logprob: -13.686983108520508
    6. '[pos' → logprob: -14.686983108520508
    7. 'positions' → logprob: -14.936983108520508
    8. '	pos' → logprob: -16.186983108520508
    9. '_pos' → logprob: -16.936983108520508
    10. '                       ' → logprob: -17.436983108520508

Token 2992: '_front' (ID: 56078)
  Prédit: '_front'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_front' → logprob: -0.00043233807082287967
    2. 'pos' → logprob: -8.125432014465332
    3. 'front' → logprob: -9.625432014465332
    4. '_pos' → logprob: -11.000432014465332
    5. 'idx' → logprob: -11.000432014465332
    6. '=' → logprob: -11.625432014465332
    7. '   ' → logprob: -11.875432014465332
    8. '_' → logprob: -11.875432014465332
    9. 'Front' → logprob: -13.375432014465332
    10. '           ' → logprob: -13.375432014465332

Token 2993: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00465119956061244
    2. '-' → logprob: -5.379651069641113
    3. ' ' → logprob: -11.129651069641113
    4. '```' → logprob: -12.754651069641113
    5. '<|end|>' → logprob: -12.879651069641113
    6. '           ' → logprob: -13.504651069641113
    7. ')' → logprob: -13.504651069641113
    8. '                   ' → logprob: -13.629651069641113
    9. '[' → logprob: -14.004651069641113
    10. '               ' → logprob: -14.004651069641113

Token 2994: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -16.3767032623291
    4. '  ' → logprob: -18.0017032623291
    5. 'EPS' → logprob: -18.5017032623291
    6. '0' → logprob: -18.7517032623291
    7. ' EPS' → logprob: -18.8767032623291
    8. '       ' → logprob: -18.8767032623291
    9. '```' → logprob: -19.1267032623291
    10. '(' → logprob: -19.2517032623291

Token 2995: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.625
    4. '```' → logprob: -18.875
    5. 'EPS' → logprob: -19.125
    6. '  ' → logprob: -20.0
    7. '       ' → logprob: -20.0
    8. '
' → logprob: -20.25
    9. '(' → logprob: -20.5
    10. '           ' → logprob: -21.125

Token 2996: '.' (ID: 13)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23318170011043549
    2. '
' → logprob: -2.4831817150115967
    3. ' if' → logprob: -2.6081817150115967
    4. '<|end|>' → logprob: -4.483181476593018
    5. '-' → logprob: -4.733181476593018
    6. '           ' → logprob: -4.983181476593018
    7. ' -' → logprob: -4.983181476593018
    8. 'if' → logprob: -5.983181476593018
    9. '+' → logprob: -5.983181476593018
    10. ' +' → logprob: -6.108181476593018

Token 2997: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03400595858693123
    2. 'EPS' → logprob: -3.409005880355835
    3. '000' → logprob: -8.534006118774414
    4. ' EPS' → logprob: -9.534006118774414
    5. 'eps' → logprob: -10.034006118774414
    6. 'epsilon' → logprob: -10.784006118774414
    7. '       ' → logprob: -12.159006118774414
    8. '```' → logprob: -12.409006118774414
    9. ' ' → logprob: -12.659006118774414
    10. 'e' → logprob: -12.784006118774414

Token 2998: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22470501065254211
    2. '           ' → logprob: -1.8497049808502197
    3. ' if' → logprob: -3.2247049808502197
    4. 'if' → logprob: -5.724705219268799
    5. '```' → logprob: -7.974705219268799
    6. '<|end|>' → logprob: -8.34970474243164
    7. '
' → logprob: -9.22470474243164
    8. '	           ' → logprob: -10.34970474243164
    9. '<|end|>' → logprob: -10.59970474243164
    10. '                   ' → logprob: -10.59970474243164

Token 2999: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012301838025450706
    2. '               ' → logprob: -4.512301921844482
    3. ' if' → logprob: -7.387301921844482
    4. '
' → logprob: -7.637301921844482
    5. 'if' → logprob: -9.637301445007324
    6. '                   ' → logprob: -10.262301445007324
    7. '```' → logprob: -10.887301445007324
    8. '            
' → logprob: -11.637301445007324
    9. '       ' → logprob: -12.012301445007324
    10. '                       ' → logprob: -12.387301445007324

Token 3000: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13703420758247375
    2. '           ' → logprob: -2.3870341777801514
    3. '               ' → logprob: -3.6370341777801514
    4. ' if' → logprob: -4.6370344161987305
    5. '
' → logprob: -9.63703441619873
    6. 'pos' → logprob: -10.76203441619873
    7. 'next' → logprob: -10.88703441619873
    8. '                   ' → logprob: -11.01203441619873
    9. '```' → logprob: -11.76203441619873
    10. '#' → logprob: -13.26203441619873

Token 3001: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0066626775078475475
    2. ' pos' → logprob: -5.131662845611572
    3. 'next' → logprob: -7.256662845611572
    4. ' next' → logprob: -11.006662368774414
    5. '(pos' → logprob: -12.506662368774414
    6. '	pos' → logprob: -12.881662368774414
    7. '   ' → logprob: -13.131662368774414
    8. '           ' → logprob: -14.131662368774414
    9. 'poss' → logprob: -14.506662368774414
    10. ' ' → logprob: -14.631662368774414

Token 3002: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -1.6405310816480778e-05
    2. 'limit' → logprob: -11.375016212463379
    3. 'Limit' → logprob: -13.500016212463379
    4. '_front' → logprob: -14.125016212463379
    5. '_LIMIT' → logprob: -14.250016212463379
    6. '_lim' → logprob: -14.375016212463379
    7. '_limits' → logprob: -15.000016212463379
    8. 'i' → logprob: -15.000016212463379
    9. '               ' → logprob: -15.875016212463379
    10. '           ' → logprob: -15.875016212463379

Token 3003: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2754160463809967
    2. '<' → logprob: -1.7754160165786743
    3. '>' → logprob: -3.275416135787964
    4. ' >' → logprob: -3.525416135787964
    5. '-' → logprob: -6.775415897369385
    6. ' -' → logprob: -7.025415897369385
    7. '+' → logprob: -7.650415897369385
    8. ')' → logprob: -8.275416374206543
    9. ' +' → logprob: -8.275416374206543
    10. '<|end|>' → logprob: -8.900416374206543

Token 3004: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0341491661965847
    2. ' next' → logprob: -3.534149169921875
    3. 'pos' → logprob: -6.034149169921875
    4. 's' → logprob: -6.409149169921875
    5. '(next' → logprob: -9.034149169921875
    6. ' s' → logprob: -9.159149169921875
    7. '=' → logprob: -10.534149169921875
    8. 'ships' → logprob: -10.659149169921875
    9. ' pos' → logprob: -11.034149169921875
    10. '   ' → logprob: -11.284149169921875

Token 3005: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.282920129597187e-05
    2. 'pos' → logprob: -11.500012397766113
    3. '_' → logprob: -14.250012397766113
    4. '_position' → logprob: -15.000012397766113
    5. '_limit' → logprob: -15.000012397766113
    6. '_positions' → logprob: -15.125012397766113
    7. '```' → logprob: -15.375012397766113
    8. 'Pos' → logprob: -15.625012397766113
    9. '   ' → logprob: -15.875012397766113
    10. '_p' → logprob: -16.62501335144043

Token 3006: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31653469800949097
    2. ' -' → logprob: -1.5665347576141357
    3. ':' → logprob: -3.4415347576141357
    4. '                   ' → logprob: -4.316534519195557
    5. '-' → logprob: -5.191534519195557
    6. '               ' → logprob: -5.316534519195557
    7. '                       ' → logprob: -5.816534519195557
    8. '):
' → logprob: -7.066534519195557
    9. '           ' → logprob: -7.441534519195557
    10. ' +' → logprob: -7.691534519195557

Token 3007: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04194626584649086
    2. ' next' → logprob: -3.4169461727142334
    3. 'next' → logprob: -5.0419464111328125
    4. ':
' → logprob: -7.5419464111328125
    5. '[next' → logprob: -7.7919464111328125
    6. '(next' → logprob: -8.291946411132812
    7. '_next' → logprob: -9.041946411132812
    8. '                       ' → logprob: -9.166946411132812
    9. ' =' → logprob: -9.291946411132812
    10. '               ' → logprob: -10.041946411132812

Token 3008: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.4770110845565796
    2. ' next' → logprob: -0.9770110845565796
    3. '                   ' → logprob: -5.977011203765869
    4. '	next' → logprob: -8.602010726928711
    5. '                       ' → logprob: -9.727010726928711
    6. '(next' → logprob: -9.977010726928711
    7. '[next' → logprob: -10.227010726928711
    8. '               ' → logprob: -10.852010726928711
    9. '_next' → logprob: -11.102010726928711
    10. '   ' → logprob: -11.477010726928711

Token 3009: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.3676733690081164e-05
    2. 'pos' → logprob: -11.00002384185791
    3. '_position' → logprob: -13.12502384185791
    4. '_' → logprob: -13.12502384185791
    5. '_token' → logprob: -13.87502384185791
    6. 'Pos' → logprob: -14.75002384185791
    7. '                   ' → logprob: -14.87502384185791
    8. '_positions' → logprob: -15.12502384185791
    9. '```' → logprob: -15.87502384185791
    10. '   ' → logprob: -16.000022888183594

Token 3010: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2522301971912384
    2. '=' → logprob: -1.502230167388916
    3. '                   ' → logprob: -8.252230644226074
    4. '                       ' → logprob: -10.502230644226074
    5. '   ' → logprob: -13.002230644226074
    6. '               ' → logprob: -13.002230644226074
    7. '				' → logprob: -13.377230644226074
    8. '                    ' → logprob: -13.752230644226074
    9. '           ' → logprob: -14.502230644226074
    10. '    ' → logprob: -14.502230644226074

Token 3011: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.20145933330059052
    2. 'pos' → logprob: -1.701459288597107
    3. '                   ' → logprob: -10.076458930969238
    4. '                    ' → logprob: -13.076458930969238
    5. '(pos' → logprob: -14.076458930969238
    6. '	pos' → logprob: -14.326458930969238
    7. '                       ' → logprob: -16.076459884643555
    8. '[pos' → logprob: -16.076459884643555
    9. ' max' → logprob: -16.701459884643555
    10. '    ' → logprob: -17.076459884643555

Token 3012: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.02846408635377884
    2. '_front' → logprob: -3.9034640789031982
    3. 'pos' → logprob: -5.528464317321777
    4. 'limit' → logprob: -6.403464317321777
    5. '_pos' → logprob: -6.403464317321777
    6. ' pos' → logprob: -8.403464317321777
    7. 'imit' → logprob: -8.528464317321777
    8. '                ' → logprob: -10.153464317321777
    9. 'Limit' → logprob: -10.653464317321777
    10. '               ' → logprob: -11.028464317321777

Token 3013: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016687574097886682
    2. '
' → logprob: -7.126668930053711
    3. '                   ' → logprob: -8.501668930053711
    4. '            
' → logprob: -8.501668930053711
    5. '<|end|>' → logprob: -8.876668930053711
    6. '               ' → logprob: -9.126668930053711
    7. '		' → logprob: -9.626668930053711
    8. '                    
' → logprob: -10.376668930053711
    9. ' 
' → logprob: -10.751668930053711
    10. '  
' → logprob: -11.251668930053711

Token 3014: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004484119825065136
    2. '
' → logprob: -5.879484176635742
    3. '                   ' → logprob: -7.504484176635742
    4. '               ' → logprob: -7.754484176635742
    5. '       ' → logprob: -8.629484176635742
    6. 'for' → logprob: -9.004484176635742
    7. '            
' → logprob: -9.504484176635742
    8. ')
' → logprob: -9.504484176635742
    9. '   ' → logprob: -9.879484176635742
    10. ')' → logprob: -9.879484176635742

Token 3015: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003329925937578082
    2. 'schedule' → logprob: -6.128329753875732
    3. '
' → logprob: -7.753329753875732
    4. 'if' → logprob: -7.878329753875732
    5. '       ' → logprob: -8.62833023071289
    6. '   ' → logprob: -9.62833023071289
    7. '            
' → logprob: -10.00333023071289
    8. 'for' → logprob: -10.75333023071289
    9. ' schedule' → logprob: -12.12833023071289
    10. '               ' → logprob: -12.62833023071289

Token 3016: ' Enfin' (ID: 85274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22611267864704132
    2. 'schedule' → logprob: -1.601112723350525
    3. 'if' → logprob: -7.9761128425598145
    4. ' schedule' → logprob: -8.601112365722656
    5. '       ' → logprob: -9.226112365722656
    6. '   ' → logprob: -10.351112365722656
    7. '
' → logprob: -11.226112365722656
    8. '               ' → logprob: -11.476112365722656
    9. '#' → logprob: -12.726112365722656
    10. '(schedule' → logprob: -12.726112365722656

Token 3017: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07195311039686203
    2. 'schedule' → logprob: -2.821953058242798
    3. ' schedule' → logprob: -5.071953296661377
    4. 'if' → logprob: -6.071953296661377
    5. ' if' → logprob: -6.696953296661377
    6. '       ' → logprob: -10.571952819824219
    7. '   ' → logprob: -10.571952819824219
    8. '(schedule' → logprob: -10.696952819824219
    9. '               ' → logprob: -11.696952819824219
    10. 's' → logprob: -11.821952819824219

Token 3018: ' la' (ID: 557)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5050703287124634
    2. 'next' → logprob: -1.1300703287124634
    3. 'ships' → logprob: -3.130070209503174
    4. ' ships' → logprob: -4.005070209503174
    5. ' not' → logprob: -5.630070209503174
    6. 'not' → logprob: -5.880070209503174
    7. ' abs' → logprob: -6.380070209503174
    8. 'abs' → logprob: -6.755070209503174
    9. ' s' → logprob: -7.130070209503174
    10. 's' → logprob: -7.380070209503174

Token 3019: ' vitesse' (ID: 71752)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.273054838180542
    2. 'pos' → logprob: -2.148054838180542
    3. ' next' → logprob: -2.398054838180542
    4. 'ships' → logprob: -4.148055076599121
    5. 's' → logprob: -6.023055076599121
    6. ' pos' → logprob: -6.148055076599121
    7. ' ships' → logprob: -6.273055076599121
    8. 'speed' → logprob: -6.273055076599121
    9. '_next' → logprob: -6.898055076599121
    10. 'ship' → logprob: -7.148055076599121

Token 3020: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.045208126306533813
    2. '>' → logprob: -3.170208215713501
    3. 's' → logprob: -6.920207977294922
    4. 'i' → logprob: -8.170207977294922
    5. ' >' → logprob: -8.170207977294922
    6. '   ' → logprob: -8.795207977294922
    7. '<' → logprob: -8.795207977294922
    8. '[' → logprob: -8.920207977294922
    9. 'ships' → logprob: -10.545207977294922
    10. '[s' → logprob: -10.670207977294922

Token 3021: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8599606156349182
    2. '0' → logprob: -1.2349605560302734
    3. '>' → logprob: -1.3599605560302734
    4. '<E' → logprob: -3.9849605560302734
    5. 'EPS' → logprob: -5.234960556030273
    6. 'greater' → logprob: -6.234960556030273
    7. ' <' → logprob: -7.109960556030273
    8. ' >' → logprob: -8.109960556030273
    9. '   ' → logprob: -8.234960556030273
    10. ' EPS' → logprob: -8.359960556030273

Token 3022: ' ' (ID: 220)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.00433979881927371
    2. '0' → logprob: -5.879339694976807
    3. ' EPS' → logprob: -6.504339694976807
    4. ' ' → logprob: -11.379340171813965
    5. '   ' → logprob: -11.379340171813965
    6. 'eps' → logprob: -12.879340171813965
    7. 'ESP' → logprob: -12.879340171813965
    8. 'EP' → logprob: -13.254340171813965
    9. '>' → logprob: -13.379340171813965
    10. '       ' → logprob: -13.629340171813965

Token 3023: '0' (ID: 15)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0011233105324208736
    2. '0' → logprob: -6.876123428344727
    3. ' EPS' → logprob: -9.376123428344727
    4. 'ESP' → logprob: -12.876123428344727
    5. 'EP' → logprob: -13.751123428344727
    6. 'eps' → logprob: -13.876123428344727
    7. '1' → logprob: -14.251123428344727
    8. ' ' → logprob: -15.876123428344727
    9. '   ' → logprob: -15.876123428344727
    10. '```' → logprob: -17.001123428344727

Token 3024: ' on' (ID: 402)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7388550043106079
    2. ':
' → logprob: -1.238855004310608
    3. '               ' → logprob: -2.1138548851013184
    4. '           ' → logprob: -2.3638548851013184
    5. ':' → logprob: -4.863854885101318
    6. 'and' → logprob: -5.238854885101318
    7. ',' → logprob: -5.863854885101318
    8. ' :
' → logprob: -7.488854885101318
    9. '            ' → logprob: -8.113855361938477
    10. ' >' → logprob: -8.863855361938477

Token 3025: ' programme' (ID: 18190)
  Prédit: 'schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'schedule' → logprob: -0.9176581501960754
    2. '               ' → logprob: -1.0426580905914307
    3. ' schedule' → logprob: -1.5426580905914307
    4. '           ' → logprob: -4.16765832901001
    5. ' if' → logprob: -5.16765832901001
    6. '(schedule' → logprob: -5.79265832901001
    7. '                   ' → logprob: -6.41765832901001
    8. 'if' → logprob: -6.41765832901001
    9. '                       ' → logprob: -6.54265832901001
    10. ':
' → logprob: -7.04265832901001

Token 3026: ' arrivée' (ID: 117487)
  Prédit: 'schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'schedule' → logprob: -0.4644922912120819
    2. '(schedule' → logprob: -1.0894923210144043
    3. ' schedule' → logprob: -3.8394923210144043
    4. 'heap' → logprob: -5.214492321014404
    5. ' (' → logprob: -6.089492321014404
    6. '(' → logprob: -6.714492321014404
    7. '           ' → logprob: -6.964492321014404
    8. '(s' → logprob: -6.964492321014404
    9. '                       ' → logprob: -7.339492321014404
    10. '_schedule' → logprob: -7.464492321014404

Token 3027: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5132661461830139
    2. '(i' → logprob: -1.2632660865783691
    3. '           ' → logprob: -3.388266086578369
    4. '       ' → logprob: -4.013266086578369
    5. '(' → logprob: -4.013266086578369
    6. '(event' → logprob: -4.138266086578369
    7. '                   ' → logprob: -5.513266086578369
    8. ' à' → logprob: -5.513266086578369
    9. '               ' → logprob: -5.763266086578369
    10. '   ' → logprob: -5.888266086578369

Token 3028: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.014183837920427322
    2. ' next' → logprob: -4.26418399810791
    3. '(next' → logprob: -11.26418399810791
    4. '       ' → logprob: -12.51418399810791
    5. '   ' → logprob: -13.26418399810791
    6. '[next' → logprob: -14.01418399810791
    7. '           ' → logprob: -15.38918399810791
    8. 'pos' → logprob: -15.63918399810791
    9. '	next' → logprob: -15.76418399810791
    10. 'position' → logprob: -16.014183044433594

Token 3029: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.723352049040841e-06
    2. '_position' → logprob: -13.375004768371582
    3. '_' → logprob: -13.500004768371582
    4. '```' → logprob: -14.500004768371582
    5. 'pos' → logprob: -14.625004768371582
    6. ' _' → logprob: -15.375004768371582
    7. '_positions' → logprob: -15.625004768371582
    8. '   ' → logprob: -16.375003814697266
    9. 'Pos' → logprob: -16.500003814697266
    10. ')' → logprob: -16.750003814697266

Token 3030: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017803447553887963
    2. '               ' → logprob: -9.875178337097168
    3. ',' → logprob: -10.250178337097168
    4. '       ' → logprob: -10.375178337097168
    5. '            
' → logprob: -11.250178337097168
    6. '   ' → logprob: -11.500178337097168
    7. '
' → logprob: -12.250178337097168
    8. '(' → logprob: -12.625178337097168
    9. '```' → logprob: -12.625178337097168
    10. ':
' → logprob: -12.750178337097168

Token 3031: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008102210704237223
    2. '               ' → logprob: -8.125810623168945
    3. '       ' → logprob: -8.250810623168945
    4. '   ' → logprob: -9.500810623168945
    5. ':
' → logprob: -10.500810623168945
    6. '```' → logprob: -10.625810623168945
    7. ',' → logprob: -10.875810623168945
    8. '
' → logprob: -11.250810623168945
    9. '()
' → logprob: -11.375810623168945
    10. '                   ' → logprob: -11.500810623168945

Token 3032: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034180156886577606
    2. '               ' → logprob: -3.659180164337158
    3. ' if' → logprob: -5.534180164337158
    4. 'if' (adapté à ' if') → logprob: -6.784180164337158
    5. ' 
' → logprob: -6.784180164337158
    6. ' ' → logprob: -8.1591796875
    7. '       ' → logprob: -8.4091796875
    8. '            
' → logprob: -8.4091796875
    9. '
' → logprob: -8.6591796875
    10. '            ' → logprob: -8.7841796875

Token 3033: ' s' (ID: 265)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.04863641783595085
    2. ' ships' → logprob: -3.0486364364624023
    3. 'abs' → logprob: -11.173636436462402
    4. '   ' → logprob: -11.298636436462402
    5. 's' → logprob: -11.923636436462402
    6. '           ' → logprob: -12.298636436462402
    7. ' abs' → logprob: -12.923636436462402
    8. 'spe' → logprob: -13.173636436462402
    9. ' s' → logprob: -13.423636436462402
    10. '       ' → logprob: -14.048636436462402

Token 3034: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.000111768240458332
    2. '.' → logprob: -9.50011157989502
    3. ' .' → logprob: -10.50011157989502
    4. '.velocity' → logprob: -12.50011157989502
    5. '.position' → logprob: -13.12511157989502
    6. 'speed' → logprob: -13.37511157989502
    7. '	speed' → logprob: -14.37511157989502
    8. '.s' → logprob: -14.50011157989502
    9. '.pos' → logprob: -15.62511157989502
    10. '.score' → logprob: -16.125112533569336

Token 3035: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2255580872297287
    2. ' >' → logprob: -1.6005580425262451
    3. '   ' → logprob: -8.975558280944824
    4. ' ' → logprob: -12.100558280944824
    5. '           ' → logprob: -12.350558280944824
    6. '       ' → logprob: -12.725558280944824
    7. '[' → logprob: -13.600558280944824
    8. '  ' → logprob: -14.225558280944824
    9. '                   ' → logprob: -14.225558280944824
    10. '               ' → logprob: -14.350558280944824

Token 3036: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.016655333340168
    2. ' EPS' → logprob: -4.141655445098877
    3. '0' → logprob: -7.516655445098877
    4. ' ' → logprob: -9.641654968261719
    5. '   ' → logprob: -12.141654968261719
    6. 'EP' → logprob: -13.141654968261719
    7. '1' → logprob: -13.891654968261719
    8. 'ESP' → logprob: -14.141654968261719
    9. 'EPT' → logprob: -14.266654968261719
    10. 'eps' → logprob: -14.391654968261719

Token 3037: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6828606128692627
    2. ':
' → logprob: -0.9328606128692627
    3. '           ' → logprob: -2.8078606128692627
    4. ':' → logprob: -3.9328606128692627
    5. '):
' → logprob: -4.057860374450684
    6. ',' → logprob: -6.182860374450684
    7. '                   ' → logprob: -8.057860374450684
    8. ',
' → logprob: -8.432860374450684
    9. '                       ' → logprob: -8.432860374450684
    10. '       ' → logprob: -8.682860374450684

Token 3038: ' next' (ID: 2613)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2559068202972412
    2. 'next' → logprob: -2.005906820297241
    3. 's' → logprob: -3.755906820297241
    4. 'schedule' → logprob: -3.880906820297241
    5. ' current' → logprob: -4.13090705871582
    6. 'abs' → logprob: -5.13090705871582
    7. ' next' → logprob: -5.25590705871582
    8. 'ships' → logprob: -5.50590705871582
    9. '           ' → logprob: -5.75590705871582
    10. '(current' → logprob: -6.00590705871582

Token 3039: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.869639476761222e-05
    2. 'pos' → logprob: -10.250039100646973
    3. 'Pos' → logprob: -14.000039100646973
    4. '```' → logprob: -14.750039100646973
    5. '_' → logprob: -15.125039100646973
    6. '   ' → logprob: -15.125039100646973
    7. '+' → logprob: -15.125039100646973
    8. '(' → logprob: -15.500039100646973
    9. '(_' → logprob: -16.125038146972656
    10. '#' → logprob: -16.375038146972656

Token 3040: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.558842122554779
    2. ' <' → logprob: -1.9338421821594238
    3. '>' → logprob: -2.183842182159424
    4. ' -' → logprob: -2.433842182159424
    5. ' +' → logprob: -3.558842182159424
    6. '+' → logprob: -3.933842182159424
    7. '-' → logprob: -4.183842182159424
    8. '<' → logprob: -4.558842182159424
    9. ')' → logprob: -5.558842182159424
    10. '   ' → logprob: -6.183842182159424

Token 3041: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002212704159319401
    2. ' s' → logprob: -6.1272125244140625
    3. '   ' → logprob: -10.752212524414062
    4. '           ' → logprob: -12.627212524414062
    5. '       ' → logprob: -14.502212524414062
    6. '  ' → logprob: -14.752212524414062
    7. '	s' → logprob: -15.002212524414062
    8. '               ' → logprob: -15.127212524414062
    9. '                   ' → logprob: -15.127212524414062
    10. ' ' → logprob: -15.252212524414062

Token 3042: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0005348019185476005
    2. 'pos' → logprob: -7.875535011291504
    3. 's' → logprob: -9.500535011291504
    4. '.s' → logprob: -9.625535011291504
    5. '_pos' → logprob: -11.750535011291504
    6. '   ' → logprob: -13.625535011291504
    7. '       ' → logprob: -13.750535011291504
    8. ' .' → logprob: -14.375535011291504
    9. '[pos' → logprob: -14.500535011291504
    10. '	pos' → logprob: -14.500535011291504

Token 3043: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6148358583450317
    2. '+' → logprob: -0.8648358583450317
    3. ':
' → logprob: -3.739835739135742
    4. '           ' → logprob: -5.239835739135742
    5. ' -' → logprob: -5.864835739135742
    6. ':' → logprob: -6.239835739135742
    7. '               ' → logprob: -6.614835739135742
    8. '-' → logprob: -6.614835739135742
    9. '):
' → logprob: -7.364835739135742
    10. '                   ' → logprob: -8.614835739135742

Token 3044: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -6.694766489090398e-05
    2. ' EPS' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.000066757202148
    4. 'ESP' → logprob: -15.625066757202148
    5. '1' → logprob: -15.750066757202148
    6. ' ' → logprob: -16.37506675720215
    7. 'EP' → logprob: -16.87506675720215
    8. '0' → logprob: -16.87506675720215
    9. 'eps' → logprob: -17.12506675720215
    10. '       ' → logprob: -17.62506675720215

Token 3045: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17287151515483856
    2. '               ' → logprob: -2.0478715896606445
    3. '):
' → logprob: -4.1728715896606445
    4. ':' → logprob: -4.7978715896606445
    5. '           ' → logprob: -5.1728715896606445
    6. ' :
' → logprob: -8.547871589660645
    7. '):' → logprob: -9.797871589660645
    8. ',' → logprob: -10.547871589660645
    9. '       ' → logprob: -10.922871589660645
    10. '():
' → logprob: -11.047871589660645

Token 3046: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000157293034135364
    2. 'schedule' → logprob: -9.250157356262207
    3. 'heap' → logprob: -10.625157356262207
    4. ' schedule' → logprob: -11.000157356262207
    5. '           ' → logprob: -11.875157356262207
    6. '```' → logprob: -12.750157356262207
    7. '(schedule' → logprob: -13.250157356262207
    8. '                   ' → logprob: -13.375157356262207
    9. '              ' → logprob: -13.500157356262207
    10. '(heap' → logprob: -13.875157356262207

Token 3047: ' schedule' (ID: 12262)
  Prédit: 'schedule'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'schedule' (adapté à ' schedule') → logprob: -0.04437502846121788
    2. ' schedule' → logprob: -3.419374942779541
    3. '               ' → logprob: -5.044374942779541
    4. '                   ' → logprob: -5.669374942779541
    5. 'heap' → logprob: -8.4193754196167
    6. '(schedule' → logprob: -8.4193754196167
    7. '                       ' → logprob: -8.6693754196167
    8. 'scheduler' → logprob: -9.6693754196167
    9. '   ' → logprob: -10.2943754196167
    10. ' ' → logprob: -11.5443754196167

Token 3048: '_ship' (ID: 150280)
  Prédit: '_ship'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ship' → logprob: -0.005924650933593512
    2. 'ship' → logprob: -5.505924701690674
    3. '_sh' → logprob: -6.880924701690674
    4. '_' → logprob: -8.005924224853516
    5. 'ships' → logprob: -8.630924224853516
    6. '(i' → logprob: -8.880924224853516
    7. 's' → logprob: -9.380924224853516
    8. 'd' → logprob: -11.005924224853516
    9. 'Ship' → logprob: -11.255924224853516
    10. '(ship' → logprob: -11.630924224853516

Token 3049: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.2528195381164551
    2. '_ship' → logprob: -1.502819538116455
    3. 'arrival' → logprob: -7.877819538116455
    4. 'd' → logprob: -8.627819061279297
    5. 'ship' → logprob: -9.502819061279297
    6. 'arr' → logprob: -9.627819061279297
    7. '_' → logprob: -9.627819061279297
    8. '_schedule' → logprob: -10.002819061279297
    9. 's' → logprob: -11.252819061279297
    10. 'ment' → logprob: -11.627819061279297

Token 3050: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.12632417678833008
    2. 'al' → logprob: -2.75132417678833
    3. 'val' → logprob: -3.25132417678833
    4. 'iv' → logprob: -4.25132417678833
    5. 'ial' → logprob: -8.001323699951172
    6. 'ive' → logprob: -8.126323699951172
    7. '_val' → logprob: -8.626323699951172
    8. '   ' → logprob: -9.001323699951172
    9. 'ivals' → logprob: -9.501323699951172
    10. '#' → logprob: -9.626323699951172

Token 3051: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -11.625009536743164
    3. ' (' → logprob: -14.625009536743164
    4. '```' → logprob: -15.500009536743164
    5. '(
' → logprob: -15.750009536743164
    6. '   ' → logprob: -17.125009536743164
    7. '[i' → logprob: -17.500009536743164
    8. '(I' → logprob: -18.500009536743164
    9. '               ' → logprob: -18.875009536743164
    10. ',i' → logprob: -19.000009536743164

Token 3052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05600569024682045
    2. '(next' → logprob: -3.0560057163238525
    3. '(' → logprob: -5.056005477905273
    4. ',next' → logprob: -7.681005477905273
    5. ' ,' → logprob: -8.181005477905273
    6. ')' → logprob: -8.806005477905273
    7. ' (' → logprob: -10.556005477905273
    8. '(i' → logprob: -11.181005477905273
    9. ')(' → logprob: -11.681005477905273
    10. '               ' → logprob: -11.806005477905273

Token 3053: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5759410858154297
    2. 'next' → logprob: -0.8259410858154297
    3. '(next' → logprob: -13.70094108581543
    4. '	next' → logprob: -15.20094108581543
    5. '[next' → logprob: -15.70094108581543
    6. '.next' → logprob: -17.70094108581543
    7. '_next' → logprob: -17.70094108581543
    8. ',next' → logprob: -18.70094108581543
    9. 'Next' → logprob: -19.07594108581543
    10. ' nex' → logprob: -19.70094108581543

Token 3054: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.1689596148207784e-05
    2. 'pos' → logprob: -9.875051498413086
    3. 'Pos' → logprob: -16.125051498413086
    4. 'ship' → logprob: -17.250051498413086
    5. 'o' → logprob: -18.125051498413086
    6. 'os' → logprob: -18.625051498413086
    7. '__' → logprob: -18.625051498413086
    8. '_' → logprob: -18.750051498413086
    9. '	pos' → logprob: -18.750051498413086
    10. 'next' → logprob: -19.500051498413086

Token 3055: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12795311212539673
    2. ',' → logprob: -2.127953052520752
    3. ')
' → logprob: -7.752953052520752
    4. ' )' → logprob: -9.12795352935791
    5. '       ' → logprob: -9.37795352935791
    6. '+' → logprob: -9.37795352935791
    7. ' ,' → logprob: -9.62795352935791
    8. '   ' → logprob: -9.62795352935791
    9. '           ' → logprob: -10.12795352935791
    10. '               ' → logprob: -10.37795352935791

Token 3056: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5760964751243591
    2. 'current' → logprob: -0.8260964751243591
    3. '                   ' → logprob: -9.701096534729004
    4. '_current' → logprob: -11.201096534729004
    5. '	current' → logprob: -11.451096534729004
    6. '               ' → logprob: -11.576096534729004
    7. '                    ' → logprob: -11.576096534729004
    8. ')' → logprob: -12.076096534729004
    9. '                       ' → logprob: -12.201096534729004
    10. '(current' → logprob: -12.576096534729004

Token 3057: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0002165299083571881
    2. 'time' → logprob: -8.875216484069824
    3. ')' → logprob: -10.250216484069824
    4. '_' → logprob: -10.750216484069824
    5. 'Time' → logprob: -11.375216484069824
    6. '_t' → logprob: -13.500216484069824
    7. ' time' → logprob: -13.625216484069824
    8. '_TIME' → logprob: -13.750216484069824
    9. ')_' → logprob: -14.375216484069824
    10. '"time' → logprob: -14.500216484069824

Token 3058: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. ')
' → logprob: -10.750027656555176
    3. '   ' → logprob: -13.125027656555176
    4. ' )' → logprob: -13.250027656555176
    5. '       ' → logprob: -13.375027656555176
    6. '           ' → logprob: -15.750027656555176
    7. '))' → logprob: -16.37502670288086
    8. '               ' → logprob: -16.75002670288086
    9. '())' → logprob: -17.75002670288086
    10. ')}' → logprob: -17.75002670288086

Token 3059: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12449377775192261
    2. '<|end|>' → logprob: -2.3744938373565674
    3. '   ' → logprob: -4.124493598937988
    4. '```' → logprob: -6.374493598937988
    5. '
' → logprob: -6.499493598937988
    6. '<|end|>' → logprob: -6.874493598937988
    7. ')
' → logprob: -7.499493598937988
    8. '#' → logprob: -7.749493598937988
    9. '    
' → logprob: -7.999493598937988
    10. '\n' → logprob: -7.999493598937988

Token 3060: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10035429149866104
    2. '
' → logprob: -2.4753541946411133
    3. '    
' → logprob: -4.850354194641113
    4. '<|end|>' → logprob: -6.475354194641113
    5. 'def' → logprob: -7.475354194641113
    6. ')' → logprob: -7.600354194641113
    7. '
' → logprob: -8.600354194641113
    8. '```' → logprob: -8.725354194641113
    9. '#' (adapté à ' #') → logprob: -9.100354194641113
    10. ' 
' → logprob: -9.725354194641113

Token 3061: ' Mé' (ID: 23435)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028142167255282402
    2. '
' → logprob: -4.528141975402832
    3. '    
' → logprob: -4.653141975402832
    4. 'def' → logprob: -5.528141975402832
    5. 'current' → logprob: -6.278141975402832
    6. 'while' → logprob: -7.403141975402832
    7. '#' → logprob: -7.778141975402832
    8. '<|end|>' → logprob: -8.403141975402832
    9. '```' → logprob: -9.403141975402832
    10. 'simulate' → logprob: -9.903141975402832

Token 3062: 'th' (ID: 404)
  Prédit: 'th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.03006632998585701
    2. 'def' → logprob: -4.03006649017334
    3. 'moire' → logprob: -5.15506649017334
    4. 'm' → logprob: -6.03006649017334
    5. 't' → logprob: -6.28006649017334
    6. 'mo' → logprob: -7.78006649017334
    7. 'thane' → logprob: -7.90506649017334
    8. 'mor' → logprob: -8.40506649017334
    9. 'tho' → logprob: -9.15506649017334
    10. '   ' → logprob: -9.15506649017334

Token 3063: 'ode' (ID: 676)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02677440457046032
    2. 'ode' → logprob: -3.9017744064331055
    3. '   ' → logprob: -5.7767744064331055
    4. '#' → logprob: -6.1517744064331055
    5. 'od' → logprob: -8.026774406433105
    6. 'th' → logprob: -8.651774406433105
    7. '       ' → logprob: -9.026774406433105
    8. 'd' → logprob: -9.151774406433105
    9. 'de' → logprob: -10.526774406433105
    10. '```' → logprob: -10.776774406433105

Token 3064: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023893089964985847
    2. '   ' → logprob: -3.898893117904663
    3. 'simulate' → logprob: -6.273892879486084
    4. ' def' → logprob: -7.898892879486084
    5. '=' → logprob: -8.023893356323242
    6. 'return' → logprob: -9.148893356323242
    7. '```' → logprob: -9.398893356323242
    8. '#' → logprob: -9.398893356323242
    9. 'continue' → logprob: -9.648893356323242
    10. 's' → logprob: -9.648893356323242

Token 3065: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3400951325893402
    2. '   ' → logprob: -1.3400951623916626
    3. 'current' → logprob: -4.840095043182373
    4. '#' → logprob: -4.840095043182373
    5. ' def' → logprob: -5.590095043182373
    6. '
' → logprob: -6.215095043182373
    7. '```' → logprob: -6.340095043182373
    8. '    
' → logprob: -7.340095043182373
    9. 'while' → logprob: -7.465095043182373
    10. ' current' → logprob: -7.965095043182373

Token 3066: ' proc' (ID: 14550)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.061659619212150574
    2. '   ' → logprob: -3.936659574508667
    3. '#' → logprob: -4.561659812927246
    4. 'while' → logprob: -4.936659812927246
    5. '=' → logprob: -5.561659812927246
    6. 'continue' → logprob: -5.811659812927246
    7. ' =' → logprob: -6.061659812927246
    8. ' def' → logprob: -6.186659812927246
    9. '       ' → logprob: -6.561659812927246
    10. '    ' → logprob: -6.811659812927246

Token 3067: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.00953778624534607
    2. 'ceeds' → logprob: -6.009537696838379
    3. 'éder' → logprob: -6.259537696838379
    4. 'édé' → logprob: -6.384537696838379
    5. 'ede' → logprob: -7.009537696838379
    6. 'ceed' → logprob: -7.384537696838379
    7. 'éd' → logprob: -7.634537696838379
    8. 'ed' → logprob: -7.884537696838379
    9. 'é' → logprob: -8.009537696838379
    10. 'eed' → logprob: -8.134537696838379

Token 3068: ' par' (ID: 686)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009043383412063122
    2. '   ' → logprob: -5.384043216705322
    3. '<|end|>' → logprob: -6.509043216705322
    4. '#' → logprob: -7.634043216705322
    5. 'with' → logprob: -7.884043216705322
    6. ' def' → logprob: -7.884043216705322
    7. 'to' → logprob: -8.25904369354248
    8. 'par' → logprob: -8.75904369354248
    9. ' to' → logprob: -8.88404369354248
    10. '```' → logprob: -8.88404369354248

Token 3069: ' it' (ID: 480)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.3423408269882202
    2. 'while' → logprob: -1.5923408269882202
    3. '#' → logprob: -2.9673409461975098
    4. 'import' → logprob: -4.96734094619751
    5. 'steps' → logprob: -4.96734094619751
    6. 'continue' → logprob: -5.96734094619751
    7. 'év' → logprob: -5.96734094619751
    8. '
' → logprob: -6.09234094619751
    9. 'increment' → logprob: -6.21734094619751
    10. 'bou' → logprob: -6.34234094619751

Token 3070: 'érations' (ID: 152860)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.038492392748594284
    2. 'érations' → logprob: -4.288492202758789
    3. 'er' → logprob: -4.413492202758789
    4. 'ér' → logprob: -4.913492202758789
    5. 'érateur' → logprob: -6.288492202758789
    6. 'érer' → logprob: -7.038492202758789
    7. 'éré' → logprob: -7.663492202758789
    8. 'érant' → logprob: -7.788492202758789
    9. 'érés' → logprob: -8.288492202758789
    10. 'é' → logprob: -8.538492202758789

Token 3071: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33401134610176086
    2. ':' → logprob: -2.5840113162994385
    3. 'def' → logprob: -2.8340113162994385
    4. '#' → logprob: -2.8340113162994385
    5. '(' → logprob: -3.8340113162994385
    6. '<|end|>' → logprob: -3.8340113162994385
    7. ')' → logprob: -4.959011554718018
    8. ',' → logprob: -5.209011554718018
    9. '<|end|>' → logprob: -5.334011554718018
    10. '...' → logprob: -5.459011554718018

Token 3072: ''év' (ID: 114425)
  Prédit: 'empo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'empo' → logprob: -0.8569164276123047
    2. 'emps' → logprob: -1.7319164276123047
    3. 'temps' → logprob: -2.1069164276123047
    4. '   ' → logprob: -2.2319164276123047
    5. 'e' → logprob: -3.3569164276123047
    6. 'em' → logprob: -3.7319164276123047
    7. 'é' → logprob: -3.9819164276123047
    8. 'me' → logprob: -4.231916427612305
    9. 'ép' → logprob: -4.856916427612305
    10. 'er' → logprob: -4.981916427612305

Token 3073: 'ènements' (ID: 178488)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2856307029724121
    2. 'ents' → logprob: -1.910630702972412
    3. 'ènement' → logprob: -2.785630702972412
    4. 'énement' → logprob: -3.660630702972412
    5. 'ènements' → logprob: -5.285630702972412
    6. 'en' → logprob: -6.410630702972412
    7. 'ène' → logprob: -6.660630702972412
    8. 'nts' → logprob: -6.785630702972412
    9. 'nt' → logprob: -6.910630702972412
    10. 'èn' → logprob: -7.035630702972412

Token 3074: ':

' (ID: 1402)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5435835719108582
    2. '   ' → logprob: -1.293583631515503
    3. 'time' → logprob: -2.418583631515503
    4. 'def' → logprob: -3.043583631515503
    5. '
' → logprob: -5.793583393096924
    6. '    
' → logprob: -6.043583393096924
    7. '```' → logprob: -7.168583393096924
    8. '#' → logprob: -7.418583393096924
    9. 'event' → logprob: -7.793583393096924
    10. ' current' → logprob: -8.293583869934082

Token 3075: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2163621485233307
    2. 'current' → logprob: -1.9663621187210083
    3. 'time' → logprob: -2.966362237930298
    4. '
' → logprob: -7.091361999511719
    5. 'def' → logprob: -7.091361999511719
    6. '    
' → logprob: -7.341361999511719
    7. '```' → logprob: -7.466361999511719
    8. 'while' → logprob: -9.466361999511719
    9. ' current' → logprob: -10.091361999511719
    10. 'cur' → logprob: -10.341361999511719

Token 3076: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3476090133190155
    2. 'time' → logprob: -1.597609043121338
    3. '   ' → logprob: -2.472609043121338
    4. 't' → logprob: -6.097609043121338
    5. 'cur' → logprob: -6.597609043121338
    6. '
' → logprob: -6.972609043121338
    7. 'def' → logprob: -6.972609043121338
    8. '#' (adapté à ' #') → logprob: -7.722609043121338
    9. 'while' → logprob: -7.722609043121338
    10. '    
' → logprob: -8.22260856628418

Token 3077: ' Initial' (ID: 9209)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4110218584537506
    2. 'time' → logprob: -1.4110218286514282
    3. '   ' → logprob: -2.4110219478607178
    4. '
' → logprob: -6.161021709442139
    5. 't' → logprob: -7.786021709442139
    6. '#' → logprob: -8.036022186279297
    7. '    
' → logprob: -8.411022186279297
    8. 'cur' → logprob: -8.661022186279297
    9. 'def' → logprob: -9.536022186279297
    10. '```' → logprob: -9.911022186279297

Token 3078: 'isation' (ID: 6993)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.07967959344387054
    2. 'ly' → logprob: -4.204679489135742
    3. 'ize' → logprob: -4.329679489135742
    4. '_' → logprob: -4.704679489135742
    5. '_event' → logprob: -4.704679489135742
    6. '_queue' → logprob: -4.704679489135742
    7. '_position' → logprob: -5.329679489135742
    8. '_state' → logprob: -5.829679489135742
    9. '_heap' → logprob: -5.954679489135742
    10. '_pos' → logprob: -5.954679489135742

Token 3079: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4748193323612213
    2. 'current' → logprob: -1.599819302558899
    3. 'for' → logprob: -1.974819302558899
    4. '#' → logprob: -3.9748194217681885
    5. 'adjust' → logprob: -4.599819183349609
    6. 'time' → logprob: -5.974819183349609
    7. 'ships' → logprob: -6.349819183349609
    8. 'heap' → logprob: -6.474819183349609
    9. 'initial' → logprob: -6.849819183349609
    10. 'event' → logprob: -7.974819183349609

Token 3080: '   ' (ID: 271)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6341762542724609
    2. '   ' → logprob: -1.009176254272461
    3. 'ships' → logprob: -3.259176254272461
    4. 'for' → logprob: -3.384176254272461
    5. 'time' → logprob: -3.884176254272461
    6. 'heap' → logprob: -5.509176254272461
    7. '#' → logprob: -5.634176254272461
    8. '```' → logprob: -6.759176254272461
    9. 't' → logprob: -7.009176254272461
    10. 'cur' → logprob: -7.384176254272461

Token 3081: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.2826903462409973
    2. 'for' → logprob: -1.9076902866363525
    3. '#' → logprob: -3.4076902866363525
    4. 'adjust' → logprob: -3.6576902866363525
    5. 'heap' → logprob: -4.157690525054932
    6. 'time' → logprob: -4.157690525054932
    7. '   ' → logprob: -6.157690525054932
    8. 'curr' → logprob: -6.657690525054932
    9. 'initial' → logprob: -6.907690525054932
    10. 'ships' → logprob: -6.907690525054932

Token 3082: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.847109812544659e-05
    2. '_' → logprob: -11.000048637390137
    3. '_t' → logprob: -11.125048637390137
    4. '_token' → logprob: -11.500048637390137
    5. 'time' → logprob: -13.250048637390137
    6. 'Time' → logprob: -13.500048637390137
    7. '_tokens' → logprob: -13.875048637390137
    8. ' _' → logprob: -14.625048637390137
    9. '_TIME' → logprob: -15.000048637390137
    10. '=' → logprob: -15.000048637390137

Token 3083: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740840196609497
    2. ' =' → logprob: -0.9740840196609497
    3. '<|end|>' → logprob: -13.34908390045166
    4. ' =
' → logprob: -13.72408390045166
    5. ',' → logprob: -13.72408390045166
    6. ')' → logprob: -13.97408390045166
    7. '=
' → logprob: -14.09908390045166
    8. ' ' → logprob: -15.22408390045166
    9. ' ' → logprob: -15.97408390045166
    10. '_' → logprob: -15.97408390045166

Token 3084: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.375008583068848
    4. '  ' → logprob: -18.37500762939453
    5. '    
' → logprob: -18.87500762939453
    6. '    ' → logprob: -19.62500762939453
    7. '۰' → logprob: -19.75000762939453
    8. '00' → logprob: -19.87500762939453
    9. '```' → logprob: -19.87500762939453
    10. '
' → logprob: -20.00000762939453

Token 3085: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '
' → logprob: -18.500001907348633
    5. '```' → logprob: -18.875001907348633
    6. '    
' → logprob: -19.125001907348633
    7. '=' → logprob: -19.625001907348633
    8. '1' → logprob: -19.750001907348633
    9. '-' → logprob: -19.875001907348633
    10. '  ' → logprob: -19.875001907348633

Token 3086: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3087: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.630610641877865e-06
    2. '.' → logprob: -12.125006675720215
    3. '```' → logprob: -14.375006675720215
    4. ' ' → logprob: -14.875006675720215
    5. '000' → logprob: -16.2500057220459
    6. '   ' → logprob: -16.8750057220459
    7. '    
' → logprob: -17.2500057220459
    8. '
' → logprob: -17.7500057220459
    9. '  
' → logprob: -18.1250057220459
    10. '00' → logprob: -18.2500057220459

Token 3088: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22208692133426666
    2. 'for' → logprob: -2.5970869064331055
    3. 'adjust' → logprob: -2.7220869064331055
    4. '#' → logprob: -3.4720869064331055
    5. '
' → logprob: -4.5970869064331055
    6. 'while' → logprob: -5.2220869064331055
    7. '    
' → logprob: -5.4720869064331055
    8. ' for' → logprob: -6.0970869064331055
    9. 'ships' → logprob: -6.2220869064331055
    10. '```' → logprob: -7.2220869064331055

Token 3089: '   ' (ID: 271)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.14224962890148163
    2. '   ' → logprob: -2.392249584197998
    3. 'for' → logprob: -4.392249584197998
    4. '#' → logprob: -4.392249584197998
    5. 'while' → logprob: -4.392249584197998
    6. 'def' → logprob: -7.017249584197998
    7. 'import' → logprob: -7.267249584197998
    8. 'change' → logprob: -7.517249584197998
    9. 'event' → logprob: -8.142250061035156
    10. 'current' → logprob: -8.267250061035156

Token 3090: ' #' (ID: 1069)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.09040340781211853
    2. '#' (adapté à ' #') → logprob: -3.3404033184051514
    3. 'while' → logprob: -3.3404033184051514
    4. '   ' → logprob: -4.7154035568237305
    5. 'for' → logprob: -5.2154035568237305
    6. 'def' → logprob: -8.21540355682373
    7. 'heap' → logprob: -8.46540355682373
    8. 'event' → logprob: -8.59040355682373
    9. 'change' → logprob: -9.21540355682373
    10. '
' → logprob: -9.46540355682373

Token 3091: ' Tous' (ID: 64900)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.08233164250850677
    2. '#' → logprob: -3.457331657409668
    3. 'for' → logprob: -3.957331657409668
    4. 'while' → logprob: -4.582331657409668
    5. '   ' → logprob: -4.832331657409668
    6. 'changed' → logprob: -5.207331657409668
    7. 'heap' → logprob: -6.582331657409668
    8. 'if' → logprob: -6.832331657409668
    9. 'change' → logprob: -7.207331657409668
    10. 'event' → logprob: -7.832331657409668

Token 3092: ' les' (ID: 1341)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.08570895344018936
    2. '   ' → logprob: -3.3357088565826416
    3. '#' → logprob: -4.585709095001221
    4. ' ships' → logprob: -4.710709095001221
    5. 'for' → logprob: -5.210709095001221
    6. '.append' → logprob: -5.710709095001221
    7. '[' → logprob: -5.835709095001221
    8. ':' → logprob: -6.460709095001221
    9. '=' → logprob: -6.710709095001221
    10. '[i' → logprob: -6.835709095001221

Token 3093: ' bate' (ID: 39378)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.007374834734946489
    2. 'for' → logprob: -5.6323747634887695
    3. 'spe' → logprob: -5.8823747634887695
    4. '#' → logprob: -8.25737476348877
    5. 'v' → logprob: -8.50737476348877
    6. ' ships' → logprob: -8.63237476348877
    7. 'speed' → logprob: -9.13237476348877
    8. 's' → logprob: -10.00737476348877
    9. 'ship' → logprob: -10.13237476348877
    10. 'boats' → logprob: -10.25737476348877

Token 3094: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -5.097437315271236e-05
    2. 'au' → logprob: -10.87505054473877
    3. 'ux' → logprob: -12.00005054473877
    4. 'ats' → logprob: -12.25005054473877
    5. 's' → logprob: -12.50005054473877
    6. '```' → logprob: -12.75005054473877
    7. '_aux' → logprob: -13.25005054473877
    8. 'aus' → logprob: -13.50005054473877
    9. 'a' → logprob: -13.50005054473877
    10. 'boats' → logprob: -14.25005054473877

Token 3095: ' dém' (ID: 34947)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8764752149581909
    2. '[i' → logprob: -1.626475214958191
    3. '   ' → logprob: -1.876475214958191
    4. 'ont' → logprob: -2.5014753341674805
    5. 'for' → logprob: -3.3764753341674805
    6. 's' → logprob: -3.7514753341674805
    7. '#' → logprob: -4.3764753341674805
    8. 'speed' → logprob: -4.3764753341674805
    9. '[n' → logprob: -4.6264753341674805
    10. '
' → logprob: -5.0014753341674805

Token 3096: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00011164903844473884
    2. '_arr' → logprob: -10.00011157989502
    3. 'arrant' → logprob: -10.25011157989502
    4. 'arrer' → logprob: -11.75011157989502
    5. '(arr' → logprob: -12.00011157989502
    6. 'arrage' → logprob: -12.00011157989502
    7. 'Arr' → logprob: -12.62511157989502
    8. '\' → logprob: -13.62511157989502
    9. '$arr' → logprob: -14.12511157989502
    10. '```' → logprob: -14.37511157989502

Token 3097: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0038024536333978176
    2. 'ont' → logprob: -6.253802299499512
    3. 'arr' → logprob: -7.253802299499512
    4. '   ' → logprob: -7.753802299499512
    5. 'rent' → logprob: -8.253802299499512
    6. 'er' → logprob: -9.003802299499512
    7. 'e' → logprob: -9.378802299499512
    8. '       ' → logprob: -9.878802299499512
    9. 'aient' → logprob: -10.378802299499512
    10. 'nt' → logprob: -10.378802299499512

Token 3098: ' imm' (ID: 7240)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.821194052696228
    2. '=' → logprob: -1.196194052696228
    3. 'with' → logprob: -2.0711941719055176
    4. ' at' → logprob: -3.5711941719055176
    5. ' =' → logprob: -3.9461941719055176
    6. 'at' → logprob: -4.196194171905518
    7. '[' → logprob: -4.196194171905518
    8. ' with' → logprob: -4.321194171905518
    9. 'ships' → logprob: -4.446194171905518
    10. 'speed' → logprob: -4.446194171905518

Token 3099: 'obiles' (ID: 77240)
  Prédit: 'édi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'édi' → logprob: -0.012136027216911316
    2. 'edi' → logprob: -5.012135982513428
    3. '\' → logprob: -6.387135982513428
    4. 'é' → logprob: -6.887135982513428
    5. '\x' → logprob: -7.262135982513428
    6. '```' → logprob: -8.012136459350586
    7. '=' → logprob: -8.137136459350586
    8. 'édit' → logprob: -8.512136459350586
    9. '\u' → logprob: -8.637136459350586
    10. 'mé' → logprob: -8.887136459350586

Token 3100: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6246312856674194
    2. 'for' → logprob: -2.374631404876709
    3. '   ' → logprob: -2.374631404876709
    4. ',' → logprob: -2.999631404876709
    5. ',
' → logprob: -2.999631404876709
    6. 'ships' → logprob: -3.624631404876709
    7. '#' → logprob: -3.749631404876709
    8. '.
' → logprob: -3.749631404876709
    9. '.' → logprob: -3.874631404876709
    10. '    
' → logprob: -4.249631404876709

Token 3101: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01547991018742323
    2. '   ' → logprob: -4.890480041503906
    3. 'adjust' → logprob: -5.515480041503906
    4. '#' → logprob: -6.390480041503906
    5. 'ships' → logprob: -7.140480041503906
    6. ' for' → logprob: -7.140480041503906
    7. '
' → logprob: -7.765480041503906
    8. '    
' → logprob: -10.515480041503906
    9. 'while' → logprob: -11.140480041503906
    10. 'def' → logprob: -11.515480041503906

Token 3102: ' met' (ID: 1421)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41252925992012024
    2. 'adjust' → logprob: -2.412529230117798
    3. '#' → logprob: -2.537529230117798
    4. '   ' → logprob: -2.662529230117798
    5. 'def' → logprob: -3.287529230117798
    6. 'speed' → logprob: -4.037529468536377
    7. 'continue' → logprob: -4.537529468536377
    8. '       ' → logprob: -4.912529468536377
    9. ' for' → logprob: -5.037529468536377
    10. 'vel' → logprob: -6.412529468536377

Token 3103: ' vitesse' (ID: 71752)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.2576152086257935
    2. 'le' → logprob: -2.132615089416504
    3. 'à' → logprob: -2.382615089416504
    4. 'leurs' → logprob: -2.382615089416504
    5. 'for' → logprob: -2.507615089416504
    6. 'ships' → logprob: -2.632615089416504
    7. 'tout' → logprob: -2.757615089416504
    8. '#' → logprob: -2.882615089416504
    9. 'leur' → logprob: -3.007615089416504
    10. 'la' → logprob: -3.882615089416504

Token 3104: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07201112806797028
    2. ' =' → logprob: -2.6970112323760986
    3. '   ' → logprob: -6.6970109939575195
    4. 's' → logprob: -8.32201099395752
    5. '[' → logprob: -8.32201099395752
    6. '0' → logprob: -8.69701099395752
    7. 'for' → logprob: -9.57201099395752
    8. '
' → logprob: -11.07201099395752
    9. '=[' → logprob: -11.19701099395752
    10. '       ' → logprob: -11.32201099395752

Token 3105: ' possible' (ID: 4149)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7370012402534485
    2. ' =' → logprob: -1.2370011806488037
    3. '   ' → logprob: -2.2370011806488037
    4. 'for' → logprob: -2.3620011806488037
    5. ' for' → logprob: -4.987001419067383
    6. ',' → logprob: -5.112001419067383
    7. '.' → logprob: -5.237001419067383
    8. '=True' → logprob: -6.237001419067383
    9. 'ships' → logprob: -6.237001419067383
    10. '[' → logprob: -6.612001419067383

Token 3106: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4648350477218628
    2. '=' → logprob: -1.8398350477218628
    3. '   ' → logprob: -2.9648351669311523
    4. ' =' → logprob: -3.0898351669311523
    5. ',' → logprob: -3.3398351669311523
    6. ' for' → logprob: -3.4648351669311523
    7. 'ships' → logprob: -4.464835166931152
    8. '.' → logprob: -4.589835166931152
    9. ',
' → logprob: -5.089835166931152
    10. '.
' → logprob: -5.339835166931152

Token 3107: ' ajust' (ID: 32650)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.8322358131408691
    2. 'for' → logprob: -1.4572358131408691
    3. '0' → logprob: -2.207235813140869
    4. 'sim' → logprob: -2.832235813140869
    5. '1' → logprob: -3.582235813140869
    6. 'adjust' → logprob: -3.707235813140869
    7. 'ap' → logprob: -4.332235813140869
    8. '#' → logprob: -4.457235813140869
    9. 'avance' → logprob: -4.957235813140869
    10. 'part' → logprob: -5.082235813140869

Token 3108: 'ant' (ID: 493)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.9734777808189392
    2. 'ements' → logprob: -1.723477840423584
    3. '   ' → logprob: -1.848477840423584
    4. 'ant' → logprob: -2.473477840423584
    5. '_s' → logprob: -3.098477840423584
    6. '       ' → logprob: -3.223477840423584
    7. 'é' → logprob: -3.723477840423584
    8. 'e' → logprob: -3.848477840423584
    9. 'ée' → logprob: -4.348477840423584
    10. 'ées' → logprob: -4.723477840423584

Token 3109: ' constraints' (ID: 31060)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.7468538284301758
    2. 'changed' → logprob: -1.2468538284301758
    3. 'for' → logprob: -1.9968538284301758
    4. '   ' → logprob: -3.246853828430176
    5. '_' → logprob: -3.871853828430176
    6. ' for' → logprob: -5.121853828430176
    7. '_changed' → logprob: -5.246853828430176
    8. 'spe' → logprob: -5.246853828430176
    9. '
' → logprob: -5.371853828430176
    10. 's' → logprob: -5.621853828430176

Token 3110: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0598672516644001
    2. '
' → logprob: -3.1848671436309814
    3. 'adjust' → logprob: -4.1848673820495605
    4. 'for' → logprob: -7.8098673820495605
    5. '```' → logprob: -8.059866905212402
    6. '    
' → logprob: -8.809866905212402
    7. 'changed' → logprob: -9.434866905212402
    8. ',' → logprob: -9.684866905212402
    9. ' adjust' → logprob: -9.684866905212402
    10. ' for' → logprob: -9.809866905212402

Token 3111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16159901022911072
    2. 'adjust' → logprob: -2.0365989208221436
    3. '
' → logprob: -4.411599159240723
    4. 'for' → logprob: -6.286599159240723
    5. 'ships' → logprob: -6.286599159240723
    6. 'changed' → logprob: -6.911599159240723
    7. '    
' → logprob: -7.786599159240723
    8. '```' → logprob: -8.286599159240723
    9. '#' → logprob: -8.411599159240723
    10. 'spe' → logprob: -8.411599159240723

Token 3112: ' #' (ID: 1069)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.9060497283935547
    2. 'changed' → logprob: -1.1560497283935547
    3. '   ' → logprob: -1.2810497283935547
    4. 'change' → logprob: -6.531049728393555
    5. 'for' → logprob: -7.281049728393555
    6. '_changed' → logprob: -7.531049728393555
    7. '_' → logprob: -8.156049728393555
    8. 'ships' → logprob: -8.906049728393555
    9. ' changed' → logprob: -9.531049728393555
    10. '```' → logprob: -9.781049728393555

Token 3113: ' Ils' (ID: 31199)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2648511230945587
    2. 'adjust' → logprob: -1.5148510932922363
    3. 'changed' → logprob: -4.389851093292236
    4. 'change' → logprob: -8.889851570129395
    5. '```' → logprob: -9.264851570129395
    6. '
' → logprob: -10.014851570129395
    7. ' adjust' → logprob: -10.014851570129395
    8. '    
' → logprob: -10.639851570129395
    9. 'ships' → logprob: -10.889851570129395
    10. ' changed' → logprob: -11.014851570129395

Token 3114: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27787503600120544
    2. ' =' → logprob: -1.9028750658035278
    3. 'speed' → logprob: -3.1528749465942383
    4. '   ' → logprob: -3.5278749465942383
    5. '#' → logprob: -5.402874946594238
    6. 'def' → logprob: -5.652874946594238
    7. 'for' → logprob: -5.902874946594238
    8. '[' → logprob: -6.402874946594238
    9. '
' → logprob: -7.027874946594238
    10. '.' → logprob: -7.152874946594238

Token 3115: ' espac' (ID: 195747)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4284833669662476
    2. '   ' → logprob: -1.8034833669662476
    3. '[' → logprob: -2.428483486175537
    4. 'à' → logprob: -2.428483486175537
    5. 'all' → logprob: -2.678483486175537
    6. 'initial' → logprob: -2.928483486175537
    7. 'import' → logprob: -3.053483486175537
    8. '#' → logprob: -3.678483486175537
    9. '[]' → logprob: -3.803483486175537
    10. 'for' → logprob: -4.053483486175537

Token 3116: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.015334236435592175
    2. 'ées' → logprob: -4.640334129333496
    3. 'es' → logprob: -5.765334129333496
    4. 'é' → logprob: -6.390334129333496
    5. '```' → logprob: -8.515334129333496
    6. 'ée' → logprob: -8.515334129333496
    7. 'ement' → logprob: -8.890334129333496
    8. 'ément' → logprob: -9.640334129333496
    9. 'e' → logprob: -9.765334129333496
    10. 'ès' → logprob: -10.640334129333496

Token 3117: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4876652956008911
    2. ' de' → logprob: -1.1126652956008911
    3. '   ' → logprob: -3.7376651763916016
    4. ',' → logprob: -5.362665176391602
    5. '    ' → logprob: -5.737665176391602
    6. '=' → logprob: -5.737665176391602
    7. 'd' → logprob: -5.737665176391602
    8. ' ' → logprob: -5.862665176391602
    9. ' =' → logprob: -6.237665176391602
    10. '```' → logprob: -6.737665176391602

Token 3118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.045746784657239914
    2. '0' → logprob: -3.1707468032836914
    3. ' ' → logprob: -7.170746803283691
    4. '```' → logprob: -7.420746803283691
    5. 'un' → logprob: -7.670746803283691
    6. 'distance' → logprob: -8.920746803283691
    7. 'une' → logprob: -9.295746803283691
    8. 'EPS' → logprob: -9.295746803283691
    9. 'l' → logprob: -9.545746803283691
    10. 'initial' → logprob: -9.795746803283691

Token 3119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006534627173095942
    2. '0' → logprob: -7.500653266906738
    3. ' ' → logprob: -10.625653266906738
    4. 'un' → logprob: -11.125653266906738
    5. '```' → logprob: -11.375653266906738
    6. 'EPS' → logprob: -11.750653266906738
    7. 'distance' → logprob: -12.000653266906738
    8. '10' → logprob: -12.125653266906738
    9. '100' → logprob: -12.625653266906738
    10. '-' → logprob: -12.750653266906738

Token 3120: 'km' (ID: 15284)
  Prédit: 'km'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'km' → logprob: -0.2118535339832306
    2. ' km' → logprob: -1.9618535041809082
    3. '.' → logprob: -3.836853504180908
    4. '0' → logprob: -4.586853504180908
    5. 'e' → logprob: -5.461853504180908
    6. '_' → logprob: -5.836853504180908
    7. '
' → logprob: -5.961853504180908
    8. '000' → logprob: -6.461853504180908
    9. ')' → logprob: -6.586853504180908
    10. ' ' → logprob: -7.086853504180908

Token 3121: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4857912063598633
    2. 'for' → logprob: -1.6107912063598633
    3. ',' → logprob: -2.7357912063598633
    4. ',
' → logprob: -2.8607912063598633
    5. '
' → logprob: -3.6107912063598633
    6. '.
' → logprob: -4.610791206359863
    7. '#' → logprob: -4.860791206359863
    8. ' for' → logprob: -5.235791206359863
    9. 'ships' → logprob: -5.985791206359863
    10. '.' → logprob: -6.860791206359863

Token 3122: ' plus' (ID: 2932)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.4414407014846802
    2. '   ' → logprob: -1.0664407014846802
    3. 'for' → logprob: -5.191440582275391
    4. '#' → logprob: -6.191440582275391
    5. 'changed' → logprob: -6.441440582275391
    6. '
' → logprob: -6.441440582275391
    7. 'change' → logprob: -8.31644058227539
    8. ' adjust' → logprob: -8.44144058227539
    9. 'while' → logprob: -8.94144058227539
    10. '    
' → logprob: -9.06644058227539

Token 3123: ' lentes' (ID: 176272)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4349648952484131
    2. '#' → logprob: -2.559964895248413
    3. 'pro' → logprob: -3.184964895248413
    4. 'ou' → logprob: -3.809964895248413
    5. 'ieurs' → logprob: -4.434965133666992
    6. 'près' → logprob: -4.434965133666992
    7. 'avant' → logprob: -4.434965133666992
    8. 'grand' → logprob: -4.434965133666992
    9. 'le' → logprob: -4.559965133666992
    10. 'prec' → logprob: -4.559965133666992

Token 3124: ' propag' (ID: 26611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13092617690563202
    2. '=' → logprob: -3.2559261322021484
    3. 'for' → logprob: -3.6309261322021484
    4. ' =' → logprob: -4.505926132202148
    5. '#' → logprob: -4.755926132202148
    6. '.' → logprob: -4.880926132202148
    7. ',' → logprob: -4.880926132202148
    8. '
' → logprob: -5.630926132202148
    9. 'import' → logprob: -5.755926132202148
    10. '    
' → logprob: -6.005926132202148

Token 3125: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.16881321370601654
    2. 'ée' → logprob: -2.7938132286071777
    3. 'ation' → logprob: -3.5438132286071777
    4. 'és' → logprob: -4.043813228607178
    5. 'é' → logprob: -4.293813228607178
    6. 'ent' → logprob: -4.293813228607178
    7. 'es' → logprob: -5.168813228607178
    8. 'tion' → logprob: -6.418813228607178
    9. 'e' → logprob: -6.543813228607178
    10. 'ate' → logprob: -6.543813228607178

Token 3126: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4460088014602661
    2. '
' → logprob: -2.0710086822509766
    3. 'for' → logprob: -2.4460086822509766
    4. '=' → logprob: -3.1960086822509766
    5. ',' → logprob: -4.071008682250977
    6. '#' → logprob: -4.196008682250977
    7. ' =' → logprob: -4.321008682250977
    8. '.
' → logprob: -4.321008682250977
    9. ',
' → logprob: -4.821008682250977
    10. '.' → logprob: -5.321008682250977

Token 3127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03426493704319
    2. 'adjust' → logprob: -3.4092650413513184
    3. '
' → logprob: -8.28426456451416
    4. '```' → logprob: -8.53426456451416
    5. '    
' → logprob: -9.65926456451416
    6. 'for' → logprob: -10.28426456451416
    7. '#' → logprob: -10.40926456451416
    8. ' adjust' → logprob: -11.53426456451416
    9. 'changed' → logprob: -11.78426456451416
    10. 'while' → logprob: -11.78426456451416

Token 3128: ' #' (ID: 1069)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.4600297808647156
    2. '   ' → logprob: -1.2100298404693604
    3. 'changed' → logprob: -2.7100298404693604
    4. 'while' → logprob: -6.585029602050781
    5. 'for' → logprob: -6.835029602050781
    6. 'change' → logprob: -6.835029602050781
    7. '#' (adapté à ' #') → logprob: -8.460029602050781
    8. '
' → logprob: -9.460029602050781
    9. 'ships' → logprob: -10.210029602050781
    10. '    
' → logprob: -10.460029602050781

Token 3129: ' mets' (ID: 87155)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.46373671293258667
    2. '   ' → logprob: -1.0887367725372314
    3. 'changed' → logprob: -3.8387367725372314
    4. '#' → logprob: -5.213736534118652
    5. 'for' → logprob: -6.088736534118652
    6. 'spe' → logprob: -6.463736534118652
    7. 'while' → logprob: -6.713736534118652
    8. 'change' → logprob: -6.838736534118652
    9. 'ships' → logprob: -7.463736534118652
    10. '
' → logprob: -8.463736534118652

Token 3130: ' vitesse' (ID: 71752)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6621891856193542
    2. 'for' → logprob: -1.787189245223999
    3. '#' → logprob: -2.412189245223999
    4. '  ' → logprob: -3.787189245223999
    5. ' for' → logprob: -4.03718900680542
    6. 'tle' → logprob: -4.28718900680542
    7. '_speed' → logprob: -4.41218900680542
    8. 's' → logprob: -4.53718900680542
    9. 'hips' → logprob: -4.66218900680542
    10. '    ' → logprob: -4.78718900680542

Token 3131: ' max' (ID: 2999)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7385051846504211
    2. '=' → logprob: -0.8635051846504211
    3. 's' → logprob: -2.6135051250457764
    4. '   ' → logprob: -4.6135053634643555
    5. 'max' → logprob: -4.6135053634643555
    6. 'es' → logprob: -6.1135053634643555
    7. 'for' → logprob: -6.7385053634643555
    8. '_max' → logprob: -7.1135053634643555
    9. '       ' → logprob: -7.8635053634643555
    10. '[' → logprob: -7.8635053634643555

Token 3132: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1839457750320435
    2. 's' → logprob: -1.4339457750320435
    3. '   ' → logprob: -1.6839457750320435
    4. 'for' → logprob: -2.058945655822754
    5. '=' → logprob: -2.433945655822754
    6. '       ' → logprob: -3.683945655822754
    7. '
' → logprob: -5.308945655822754
    8. ' for' → logprob: -5.433945655822754
    9. 'es' → logprob: -5.808945655822754
    10. 'max' → logprob: -6.308945655822754

Token 3133: ' tous' (ID: 10688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21172921359539032
    2. 'ships' → logprob: -1.7117291688919067
    3. 'ship' → logprob: -5.336729049682617
    4. 's' → logprob: -6.711729049682617
    5. '0' → logprob: -6.836729049682617
    6. ' ships' → logprob: -7.461729049682617
    7. ' i' → logprob: -7.586729049682617
    8. 'all' → logprob: -7.586729049682617
    9. 'each' → logprob: -7.586729049682617
    10. 'for' → logprob: -8.336729049682617

Token 3134: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04880230873823166
    2. '   ' → logprob: -3.048802375793457
    3. ' for' → logprob: -9.298802375793457
    4. 'adjust' → logprob: -10.173802375793457
    5. '```' → logprob: -10.548802375793457
    6. 'ships' → logprob: -10.673802375793457
    7. 'spe' → logprob: -10.923802375793457
    8. 'changed' → logprob: -12.048802375793457
    9. '       ' → logprob: -13.173802375793457
    10. '	for' → logprob: -13.423802375793457

Token 3135: 'le' (ID: 282)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09806185960769653
    2. 'i' → logprob: -3.4730618000030518
    3. ')
' → logprob: -3.8480618000030518
    4. ')' → logprob: -3.8480618000030518
    5. '   ' → logprob: -4.723062038421631
    6. '
' → logprob: -5.723062038421631
    7. 'True' → logprob: -6.223062038421631
    8. 'ships' → logprob: -6.473062038421631
    9. ' for' → logprob: -6.598062038421631
    10. '#' → logprob: -8.598061561584473

Token 3136: ' premier' (ID: 15506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2214786261320114
    2. 'def' → logprob: -2.8464787006378174
    3. 'ships' → logprob: -3.4714787006378174
    4. 'first' → logprob: -3.5964787006378174
    5. 's' → logprob: -4.471478462219238
    6. 'v' → logprob: -4.596478462219238
    7. 'spe' → logprob: -4.596478462219238
    8. '#' → logprob: -4.846478462219238
    9. 'prem' → logprob: -5.596478462219238
    10. 'i' → logprob: -5.721478462219238

Token 3137: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9525496959686279
    2. ')' → logprob: -1.452549695968628
    3. '[i' → logprob: -2.077549695968628
    4. 'ships' → logprob: -3.077549695968628
    5. 's' → logprob: -3.577549695968628
    6. ',' → logprob: -3.577549695968628
    7. ')
' → logprob: -3.827549695968628
    8. ']' → logprob: -3.952549695968628
    9. '   ' → logprob: -4.327549934387207
    10. ').' → logprob: -4.327549934387207

Token 3138: ' max' (ID: 2999)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.2828215956687927
    2. '=' → logprob: -1.9078216552734375
    3. '0' → logprob: -3.1578216552734375
    4. '+' → logprob: -4.2828216552734375
    5. 's' → logprob: -4.6578216552734375
    6. 'vel' → logprob: -4.7828216552734375
    7. '```' → logprob: -5.9078216552734375
    8. 'u' → logprob: -6.2828216552734375
    9. 'first' → logprob: -6.2828216552734375
    10. ' =' → logprob: -6.2828216552734375

Token 3139: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2560787498950958
    2. ',' → logprob: -2.1310787200927734
    3. ')
' → logprob: -2.8810787200927734
    4. '   ' → logprob: -3.7560787200927734
    5. '),' → logprob: -5.006078720092773
    6. '=' → logprob: -5.256078720092773
    7. ' )' → logprob: -5.631078720092773
    8. ' =' → logprob: -6.131078720092773
    9. ',
' → logprob: -7.131078720092773
    10. ' ,' → logprob: -7.131078720092773

Token 3140: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6424800157546997
    2. ' les' → logprob: -1.7674800157546997
    3. '   ' → logprob: -2.01747989654541
    4. 'le' → logprob: -2.64247989654541
    5. '#' → logprob: -3.14247989654541
    6. 'et' → logprob: -4.14247989654541
    7. 'tout' → logprob: -4.89247989654541
    8. ' le' → logprob: -5.26747989654541
    9. 'mais' → logprob: -5.39247989654541
    10. ' puis' → logprob: -5.89247989654541

Token 3141: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.010162824764847755
    2. 'others' → logprob: -4.885162830352783
    3. ' autres' → logprob: -6.635162830352783
    4. 'other' → logprob: -6.760162830352783
    5. '[' → logprob: -10.385162353515625
    6. 'su' → logprob: -11.135162353515625
    7. ' others' → logprob: -12.260162353515625
    8. 'otros' → logprob: -12.760162353515625
    9. 'second' → logprob: -12.760162353515625
    10. ' suivants' → logprob: -12.760162353515625

Token 3142: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27479830384254456
    2. ')' → logprob: -3.0247983932495117
    3. ' =' → logprob: -3.0247983932495117
    4. 'pe' → logprob: -3.8997983932495117
    5. '...' → logprob: -4.524798393249512
    6. 'ont' → logprob: -4.774798393249512
    7. 's' → logprob: -4.899798393249512
    8. 'met' → logprob: -4.899798393249512
    9. 'les' → logprob: -5.024798393249512
    10. 'le' → logprob: -5.149798393249512

Token 3143: ' plus' (ID: 2932)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.15847620368003845
    2. '0' → logprob: -2.7834761142730713
    3. 'max' → logprob: -3.4084761142730713
    4. 'aj' → logprob: -4.78347635269165
    5. 'adjust' → logprob: -4.90847635269165
    6. 'v' → logprob: -5.15847635269165
    7. 'allowed' → logprob: -5.28347635269165
    8. '```' → logprob: -5.78347635269165
    9. '   ' → logprob: -6.28347635269165
    10. ' ' → logprob: -6.53347635269165

Token 3144: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07732785493135452
    2. 'ou' → logprob: -3.9523279666900635
    3. 'limit' → logprob: -4.452327728271484
    4. '0' → logprob: -4.702327728271484
    5. 'bas' → logprob: -4.827327728271484
    6. 'lent' → logprob: -5.202327728271484
    7. 'mod' → logprob: -5.452327728271484
    8. 'lim' → logprob: -5.452327728271484
    9. 'fa' → logprob: -5.952327728271484
    10. 'strict' → logprob: -6.827327728271484

Token 3145: 'ents' (ID: 1094)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2335349321365356
    2. 'ents' → logprob: -1.2335349321365356
    3. 'é' → logprob: -1.3585349321365356
    4. 'imit' → logprob: -3.733534812927246
    5. 'imité' → logprob: -3.858534812927246
    6. 'eft' → logprob: -4.108534812927246
    7. 'ég' → logprob: -4.358534812927246
    8. 'ev' → logprob: -4.483534812927246
    9. 'arge' → logprob: -4.483534812927246
    10. 'eger' → logprob: -5.108534812927246

Token 3146: ' donc' (ID: 14206)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8339299559593201
    2. '   ' → logprob: -1.2089300155639648
    3. ')' → logprob: -2.583930015563965
    4. ' =' → logprob: -2.833930015563965
    5. ')
' → logprob: -3.083930015563965
    6. ',' → logprob: -3.083930015563965
    7. '=True' → logprob: -4.083930015563965
    8. 'for' → logprob: -5.333930015563965
    9. ',
' → logprob: -5.458930015563965
    10. 'import' → logprob: -6.083930015563965

Token 3147: ' peuvent' (ID: 21321)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.1864029169082642
    2. 'ships' → logprob: -1.4364029169082642
    3. 'adjust' → logprob: -1.5614029169082642
    4. '0' → logprob: -2.3114027976989746
    5. 'for' → logprob: -2.9364027976989746
    6. '   ' → logprob: -4.436402797698975
    7. 'pass' → logprob: -4.686402797698975
    8. 'False' → logprob: -4.686402797698975
    9. 'max' → logprob: -5.311402797698975
    10. 'v' → logprob: -5.311402797698975

Token 3148: ' aller' (ID: 18383)
  Prédit: 'aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aller' → logprob: -0.8111212253570557
    2. 'mettre' → logprob: -1.3111212253570557
    3. 'atte' → logprob: -2.5611212253570557
    4. 'v' → logprob: -2.9361212253570557
    5. 'être' → logprob: -4.061120986938477
    6. 'acc' → logprob: -4.061120986938477
    7. 'augment' → logprob: -4.061120986938477
    8. 'all' → logprob: -4.186120986938477
    9. 'avoir' → logprob: -4.436120986938477
    10. 'acceler' → logprob: -4.811120986938477

Token 3149: ' direct' (ID: 2823)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.3696557879447937
    2. 'jus' → logprob: -1.8696558475494385
    3. 'au' → logprob: -2.8696558475494385
    4. 'max' → logprob: -3.4946558475494385
    5. 'vite' → logprob: -3.4946558475494385
    6. 'v' → logprob: -4.369655609130859
    7. 'plus' → logprob: -4.994655609130859
    8. 'a' → logprob: -5.244655609130859
    9. '   ' → logprob: -6.119655609130859
    10. 'full' → logprob: -6.369655609130859

Token 3150: ' a' (ID: 261)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.0345513820648193
    2. ')' → logprob: -1.1595513820648193
    3. '=' → logprob: -2.4095513820648193
    4. 'au' → logprob: -3.0345513820648193
    5. ',' → logprob: -3.2845513820648193
    6. '   ' → logprob: -4.159551620483398
    7. '),' → logprob: -4.159551620483398
    8. ' à' → logprob: -4.159551620483398
    9. '=True' → logprob: -4.284551620483398
    10. '```' → logprob: -4.284551620483398

Token 3151: ' leur' (ID: 9853)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.5816985964775085
    2. 'leur' → logprob: -1.5816986560821533
    3. 'their' → logprob: -2.7066986560821533
    4. 'leurs' → logprob: -2.8316986560821533
    5. 's' → logprob: -3.2066986560821533
    6. 'self' → logprob: -3.5816986560821533
    7. 'v' → logprob: -3.8316986560821533
    8. 'max' → logprob: -5.831698417663574
    9. 'la' → logprob: -5.956698417663574
    10. 'ship' → logprob: -6.331698417663574

Token 3152: ' vitesse' (ID: 71752)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.020216938108205795
    2. 'v' → logprob: -4.645216941833496
    3. 'max' → logprob: -4.895216941833496
    4. '```' → logprob: -6.270216941833496
    5. 'speed' → logprob: -7.020216941833496
    6. 'maximum' → logprob: -9.645216941833496
    7. ' V' → logprob: -11.020216941833496
    8. '
' → logprob: -11.770216941833496
    9. ' vmax' → logprob: -11.770216941833496
    10. 'spe' → logprob: -11.770216941833496

Token 3153: ' max' (ID: 2999)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4916013181209564
    2. ' =' → logprob: -1.8666013479232788
    3. 'max' → logprob: -2.2416012287139893
    4. '_max' → logprob: -2.3666012287139893
    5. ')' → logprob: -3.9916012287139893
    6. ')
' → logprob: -5.491601467132568
    7. 's' → logprob: -5.991601467132568
    8. '=True' → logprob: -6.116601467132568
    9. '_' → logprob: -6.241601467132568
    10. '.' → logprob: -6.866601467132568

Token 3154: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15444310009479523
    2. 'for' → logprob: -2.5294430255889893
    3. '
' → logprob: -3.0294430255889893
    4. ')
' → logprob: -5.529443264007568
    5. 'ships' → logprob: -6.154443264007568
    6. ' for' → logprob: -6.154443264007568
    7. '=' → logprob: -6.904443264007568
    8. 's' → logprob: -7.029443264007568
    9. ',' → logprob: -7.154443264007568
    10. ')' → logprob: -7.529443264007568

Token 3155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13123171031475067
    2. 'adjust' → logprob: -2.3812317848205566
    3. 'for' → logprob: -3.5062317848205566
    4. '
' → logprob: -8.006231307983398
    5. '```' → logprob: -9.506231307983398
    6. ' for' → logprob: -10.256231307983398
    7. 'ships' → logprob: -10.506231307983398
    8. '    
' → logprob: -11.006231307983398
    9. ' adjust' → logprob: -11.381231307983398
    10. 'spe' → logprob: -11.756231307983398

Token 3156: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.33289533853530884
    2. '   ' → logprob: -1.332895278930664
    3. 'adjust' → logprob: -3.957895278930664
    4. '```' → logprob: -8.832895278930664
    5. ' for' → logprob: -9.832895278930664
    6. '
' → logprob: -10.082895278930664
    7. 'spe' → logprob: -10.332895278930664
    8. 'change' → logprob: -11.082895278930664
    9. '    
' → logprob: -11.207895278930664
    10. 'ships' → logprob: -11.332895278930664

Token 3157: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010239973198622465
    2. 'ship' → logprob: -7.126023769378662
    3. ' i' → logprob: -8.62602424621582
    4. 's' → logprob: -10.62602424621582
    5. ' ship' → logprob: -12.12602424621582
    6. '   ' → logprob: -12.50102424621582
    7. 'ships' → logprob: -13.62602424621582
    8. 'speed' → logprob: -14.00102424621582
    9. '	i' → logprob: -14.12602424621582
    10. 'j' → logprob: -14.25102424621582

Token 3158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6326888203620911
    2. 'in' → logprob: -0.7576888203620911
    3. '   ' → logprob: -10.132688522338867
    4. 'import' → logprob: -10.507688522338867
    5. ',' → logprob: -12.382688522338867
    6. '0' → logprob: -12.507688522338867
    7. '```' → logprob: -12.757688522338867
    8. ' ' → logprob: -13.007688522338867
    9. '  ' → logprob: -13.257688522338867
    10. 'i' → logprob: -13.382688522338867

Token 3159: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010334034450352192
    2. ' range' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.001033782958984
    4. 'in' → logprob: -16.376033782958984
    5. '
' → logprob: -17.126033782958984
    6. '0' → logprob: -17.376033782958984
    7. '  ' → logprob: -17.376033782958984
    8. ' ' → logprob: -17.376033782958984
    9. '```' → logprob: -17.376033782958984
    10. '(range' → logprob: -17.376033782958984

Token 3160: '(M' (ID: 6103)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6390079855918884
    2. '(M' → logprob: -1.1390080451965332
    3. 'M' → logprob: -1.8890080451965332
    4. '   ' → logprob: -7.639008045196533
    5. '(range' → logprob: -8.639007568359375
    6. ' range' → logprob: -9.764007568359375
    7. 'ships' → logprob: -10.139007568359375
    8. '       ' → logprob: -11.389007568359375
    9. 'in' → logprob: -11.389007568359375
    10. '(' → logprob: -11.389007568359375

Token 3161: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008446142077445984
    2. '):' → logprob: -5.383446216583252
    3. '   ' → logprob: -5.633446216583252
    4. ':
' → logprob: -9.383445739746094
    5. '       ' → logprob: -9.883445739746094
    6. ':' → logprob: -10.383445739746094
    7. '+' → logprob: -11.008445739746094
    8. ' ):
' → logprob: -11.508445739746094
    9. '):
' → logprob: -11.508445739746094
    10. ')' → logprob: -11.633445739746094

Token 3162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37483593821525574
    2. '   ' → logprob: -1.3748359680175781
    3. 'ships' → logprob: -2.999835968017578
    4. ' ships' → logprob: -4.624835968017578
    5. '   ' → logprob: -10.249835968017578
    6. '```' → logprob: -11.124835968017578
    7. '           ' → logprob: -11.749835968017578
    8. '	   ' → logprob: -11.874835968017578
    9. '	' → logprob: -12.124835968017578
    10. ':' → logprob: -12.249835968017578

Token 3163: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' (adapté à ' ships') → logprob: -0.027019724249839783
    2. '   ' → logprob: -3.652019739151001
    3. '       ' → logprob: -7.277019500732422
    4. ' ships' → logprob: -10.652019500732422
    5. 'ship' → logprob: -13.902019500732422
    6. '           ' → logprob: -14.277019500732422
    7. 'Ships' → logprob: -14.777019500732422
    8. '	' → logprob: -14.777019500732422
    9. 'shops' → logprob: -15.027019500732422
    10. '```' → logprob: -15.277019500732422

Token 3164: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.703443770878948e-06
    2. '```' → logprob: -12.625007629394531
    3. 's' → logprob: -13.000007629394531
    4. 'i' → logprob: -14.375007629394531
    5. '[' → logprob: -14.500007629394531
    6. '[I' → logprob: -15.625007629394531
    7. '\[' → logprob: -16.00000762939453
    8. 'ships' → logprob: -16.12500762939453
    9. '[s' → logprob: -16.25000762939453
    10. ' [' → logprob: -16.37500762939453

Token 3165: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.2724505364894867
    2. '[i' → logprob: -1.647450566291809
    3. '.' → logprob: -3.3974504470825195
    4. '.speed' → logprob: -4.6474504470825195
    5. '[' → logprob: -6.7724504470825195
    6. ' .' → logprob: -7.7724504470825195
    7. ').' → logprob: -7.8974504470825195
    8. ']' → logprob: -8.39745044708252
    9. '.s' → logprob: -8.77245044708252
    10. '.i' → logprob: -9.52245044708252

Token 3166: 'speed' (ID: 42880)
  Prédit: 'speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -1.6047699318733066e-05
    2. '.speed' → logprob: -11.250016212463379
    3. ' speed' → logprob: -13.250016212463379
    4. '	speed' → logprob: -14.625016212463379
    5. '_speed' → logprob: -15.625016212463379
    6. 'V' → logprob: -16.125015258789062
    7. '(speed' → logprob: -16.125015258789062
    8. 'velocity' → logprob: -16.375015258789062
    9. 'set' → logprob: -16.625015258789062
    10. 'done' → logprob: -17.000015258789062

Token 3167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019288709154352546
    2. ' =' → logprob: -6.251928806304932
    3. '=
' → logprob: -16.251928329467773
    4. '   ' → logprob: -16.876928329467773
    5. '.=' → logprob: -17.251928329467773
    6. '+=' → logprob: -17.501928329467773
    7. '=

' → logprob: -17.501928329467773
    8. '=s' → logprob: -17.751928329467773
    9. '＝' → logprob: -18.501928329467773
    10. '=i' → logprob: -18.876928329467773

Token 3168: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.0077249291352927685
    2. 'ship' → logprob: -4.882724761962891
    3. '0' → logprob: -9.75772476196289
    4. ' ships' → logprob: -9.75772476196289
    5. 'float' → logprob: -14.00772476196289
    6. 'sh' → logprob: -14.25772476196289
    7. ' ship' → logprob: -14.75772476196289
    8. 'Ships' → logprob: -15.00772476196289
    9. '   ' → logprob: -15.13272476196289
    10. 'boats' → logprob: -15.25772476196289

Token 3169: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8193366486229934e-05
    2. '_s' → logprob: -11.875018119812012
    3. 's' → logprob: -12.500018119812012
    4. '[' → logprob: -12.625018119812012
    5. 'i' → logprob: -13.500018119812012
    6. '[s' → logprob: -14.125018119812012
    7. '```' → logprob: -14.375018119812012
    8. '[I' → logprob: -14.500018119812012
    9. '[M' → logprob: -15.625018119812012
    10. '_i' → logprob: -16.250019073486328

Token 3170: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5907585024833679
    2. '[i' → logprob: -0.8407585024833679
    3. '.V' → logprob: -4.965758323669434
    4. 'i' → logprob: -5.840758323669434
    5. '(i' → logprob: -6.090758323669434
    6. '.i' → logprob: -7.215758323669434
    7. '[' → logprob: -7.465758323669434
    8. ' .' → logprob: -7.715758323669434
    9. '.' → logprob: -7.965758323669434
    10. '   ' → logprob: -9.340758323669434

Token 3171: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0006380964769050479
    2. 'speed' → logprob: -7.375638008117676
    3. 'max' → logprob: -12.375638008117676
    4. '0' → logprob: -12.375638008117676
    5. 'spe' → logprob: -14.125638008117676
    6. ' V' → logprob: -14.625638008117676
    7. 'ship' → logprob: -15.250638008117676
    8. 'ships' → logprob: -15.500638008117676
    9. '   ' → logprob: -15.500638008117676
    10. '.V' → logprob: -15.625638008117676

Token 3172: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.204720582696609e-05
    2. 'ax' → logprob: -9.875052452087402
    3. '[max' → logprob: -16.000051498413086
    4. ' max' → logprob: -16.250051498413086
    5. '[' → logprob: -16.750051498413086
    6. '0' → logprob: -17.125051498413086
    7. '_max' → logprob: -17.125051498413086
    8. '[i' → logprob: -17.250051498413086
    9. '   ' → logprob: -17.250051498413086
    10. 'min' → logprob: -17.375051498413086

Token 3173: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32713782787323
    2. '
' → logprob: -1.32713782787323
    3. 'for' → logprob: -5.2021379470825195
    4. 'adjust' → logprob: -6.3271379470825195
    5. 'schedule' → logprob: -6.5771379470825195
    6. '    
' → logprob: -6.7021379470825195
    7. '<|end|>' → logprob: -7.2021379470825195
    8. '```' → logprob: -7.5771379470825195
    9. '       ' → logprob: -7.7021379470825195
    10. ' for' → logprob: -7.9521379470825195

Token 3174: '   ' (ID: 271)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.3886455297470093
    2. '   ' → logprob: -1.1386455297470093
    3. '#' → logprob: -7.138645648956299
    4. 'for' → logprob: -7.513645648956299
    5. '```' → logprob: -8.26364517211914
    6. '
' → logprob: -8.88864517211914
    7. '    
' → logprob: -11.38864517211914
    8. ' adjust' → logprob: -11.63864517211914
    9. 'res' → logprob: -11.76364517211914
    10. 'current' → logprob: -13.01364517211914

Token 3175: ' #' (ID: 1069)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.003617647336795926
    2. '   ' → logprob: -5.878617763519287
    3. '#' (adapté à ' #') → logprob: -8.128617286682129
    4. 'changed' → logprob: -8.253617286682129
    5. 'while' → logprob: -9.378617286682129
    6. 'for' → logprob: -9.378617286682129
    7. 'current' → logprob: -10.128617286682129
    8. 'change' → logprob: -10.253617286682129
    9. '```' → logprob: -12.753617286682129
    10. 'res' → logprob: -13.128617286682129

Token 3176: ' Adjust' (ID: 43076)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.008017189800739288
    2. '   ' → logprob: -5.258017063140869
    3. 'res' → logprob: -6.758017063140869
    4. '#' → logprob: -7.008017063140869
    5. 'for' → logprob: -7.508017063140869
    6. 'while' → logprob: -9.133017539978027
    7. 'current' → logprob: -11.508017539978027
    8. 'def' → logprob: -11.508017539978027
    9. ' adjust' → logprob: -12.258017539978027
    10. '
' → logprob: -12.258017539978027

Token 3177: 'e' (ID: 68)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -6.706686690449715e-05
    2. '   ' → logprob: -10.375066757202148
    3. 'e' → logprob: -11.000066757202148
    4. 'ed' → logprob: -11.875066757202148
    5. 'ment' → logprob: -12.375066757202148
    6. 'Spe' → logprob: -12.750066757202148
    7. 'spe' → logprob: -13.500066757202148
    8. 's' → logprob: -14.375066757202148
    9. '#' → logprob: -14.375066757202148
    10. '_e' → logprob: -14.750066757202148

Token 3178: ' vit' (ID: 9281)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.005332896951586008
    2. 's' → logprob: -5.755332946777344
    3. 'spe' → logprob: -7.255332946777344
    4. 'ment' → logprob: -7.380332946777344
    5. 'e' → logprob: -8.005332946777344
    6. '   ' → logprob: -8.255332946777344
    7. 'd' → logprob: -9.255332946777344
    8. 'ments' → logprob: -9.880332946777344
    9. '_speed' → logprob: -11.380332946777344
    10. 'ed' → logprob: -11.505332946777344

Token 3179: 'esses' (ID: 38380)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.41909298300743103
    2. 'esses' → logprob: -1.2940930128097534
    3. 'e' → logprob: -3.419092893600464
    4. 'eurs' → logprob: -4.169093132019043
    5. 'ess' → logprob: -4.669093132019043
    6. 'spe' → logprob: -5.294093132019043
    7. 'ees' → logprob: -6.419093132019043
    8. 'els' → logprob: -6.544093132019043
    9. 'el' → logprob: -7.794093132019043
    10. 'esp' → logprob: -8.044093132019043

Token 3180: ' pour' (ID: 1930)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.015717819333076477
    2. '   ' → logprob: -4.26571798324585
    3. 'current' → logprob: -7.01571798324585
    4. '(' → logprob: -7.51571798324585
    5. 'for' → logprob: -10.640717506408691
    6. ' =' → logprob: -10.765717506408691
    7. 'def' → logprob: -11.265717506408691
    8. '()' → logprob: -11.390717506408691
    9. '_' → logprob: -12.265717506408691
    10. '(True' → logprob: -12.390717506408691

Token 3181: ' respecter' (ID: 107203)
  Prédit: 'respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'respect' → logprob: -0.04638676717877388
    2. 'res' → logprob: -3.67138671875
    3. 'current' → logprob: -4.54638671875
    4. 'maint' → logprob: -6.17138671875
    5. 'que' → logprob: -6.92138671875
    6. 's' → logprob: -7.17138671875
    7. ' respecter' → logprob: -7.29638671875
    8. 'aj' → logprob: -7.67138671875
    9. 'tenir' → logprob: -7.79638671875
    10. 'l' → logprob: -8.17138671875

Token 3182: ' distances' (ID: 48294)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.2122230529785156
    2. 'l' → logprob: -1.3372230529785156
    3. 'esp' → logprob: -1.3372230529785156
    4. 'la' → logprob: -2.0872230529785156
    5. 'dist' → logprob: -3.9622230529785156
    6. 'contr' → logprob: -4.962223052978516
    7. 'le' → logprob: -5.087223052978516
    8. 'constraints' → logprob: -5.337223052978516
    9. 'spacing' → logprob: -5.462223052978516
    10. 'con' → logprob: -5.462223052978516

Token 3183: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11676425486803055
    2. 'adjust' → logprob: -2.2417643070220947
    3. 'changed' → logprob: -5.866764068603516
    4. 'for' → logprob: -7.491764068603516
    5. 'current' → logprob: -8.241764068603516
    6. '```' → logprob: -9.116764068603516
    7. '
' → logprob: -9.491764068603516
    8. 'change' → logprob: -9.991764068603516
    9. ' adjust' → logprob: -11.241764068603516
    10. '    
' → logprob: -12.116764068603516

Token 3184: 'es' (ID: 268)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.709922730922699
    2. '   ' → logprob: -1.2099227905273438
    3. 's' → logprob: -2.9599227905273438
    4. 'es' → logprob: -3.0849227905273438
    5. 'ements' → logprob: -3.4599227905273438
    6. '(' → logprob: -4.334922790527344
    7. 'e' → logprob: -4.459922790527344
    8. 'ations' → logprob: -4.834922790527344
    9. 'ation' → logprob: -4.959922790527344
    10. 'ments' → logprob: -5.209922790527344

Token 3185: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.228597491979599
    2. 'adjust' → logprob: -1.6035975217819214
    3. 'changed' → logprob: -5.853597640991211
    4. 'for' → logprob: -8.728597640991211
    5. '```' → logprob: -9.728597640991211
    6. 'change' → logprob: -10.353597640991211
    7. ' adjust' → logprob: -10.978597640991211
    8. '
' → logprob: -11.353597640991211
    9. 'current' → logprob: -12.103597640991211
    10. ' changed' → logprob: -12.228597640991211

Token 3186: '   ' (ID: 271)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.09522432833909988
    2. 'changed' → logprob: -2.470224380493164
    3. '   ' → logprob: -5.220224380493164
    4. 'change' → logprob: -8.095224380493164
    5. '_' → logprob: -8.345224380493164
    6. '_changed' → logprob: -8.720224380493164
    7. '```' → logprob: -9.720224380493164
    8. 'for' → logprob: -10.220224380493164
    9. '_adjust' → logprob: -10.845224380493164
    10. ' changed' → logprob: -11.595224380493164

Token 3187: ' adjust' (ID: 10266)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' (adapté à ' adjust') → logprob: -0.20272375643253326
    2. 'changed' → logprob: -1.702723741531372
    3. '_changed' → logprob: -7.577723979949951
    4. 'change' → logprob: -7.952723979949951
    5. '_' → logprob: -8.577723503112793
    6. '   ' → logprob: -8.827723503112793
    7. '_adjust' → logprob: -9.452723503112793
    8. 'while' → logprob: -10.952723503112793
    9. 'for' → logprob: -12.452723503112793
    10. 'changes' → logprob: -13.202723503112793

Token 3188: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -17.125
    3. '_' → logprob: -17.5
    4. 'spe' → logprob: -20.375
    5. '\' → logprob: -21.0
    6. '_spaces' → logprob: -21.125
    7. '_sp' → logprob: -22.375
    8. '_scores' → logprob: -22.375
    9. '_S' → logprob: -22.5
    10. '```' → logprob: -23.0

Token 3189: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0011790355201810598
    2. 'spe' → logprob: -6.751179218292236
    3. 'peed' → logprob: -12.501178741455078
    4. '_s' → logprob: -13.001178741455078
    5. 'p' → logprob: -13.876178741455078
    6. '_pe' → logprob: -14.376178741455078
    7. 'Spe' → logprob: -14.751178741455078
    8. 'paces' → logprob: -15.001178741455078
    9. 'e' → logprob: -15.501178741455078
    10. 's' → logprob: -16.376178741455078

Token 3190: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -0.0008126051397994161
    2. 'ed' → logprob: -7.125812530517578
    3. '```' → logprob: -12.750812530517578
    4. 'e' → logprob: -13.625812530517578
    5. 'eps' → logprob: -13.875812530517578
    6. 'ds' → logprob: -14.000812530517578
    7. '   ' → logprob: -14.750812530517578
    8. '_' → logprob: -14.875812530517578
    9. '[' → logprob: -15.000812530517578
    10. '`' → logprob: -15.375812530517578

Token 3191: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0029312260448932648
    2. '(' → logprob: -6.377931118011475
    3. '()' → logprob: -6.752931118011475
    4. '   ' → logprob: -10.252931594848633
    5. 'current' → logprob: -11.377931594848633
    6. '(
' → logprob: -12.002931594848633
    7. '()
' → logprob: -12.002931594848633
    8. '(cur' → logprob: -15.377931594848633
    9. ' (' → logprob: -15.502931594848633
    10. ',current' → logprob: -15.502931594848633

Token 3192: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00044151677866466343
    2. '_' → logprob: -8.000441551208496
    3. '_times' → logprob: -9.500441551208496
    4. ')' → logprob: -11.375441551208496
    5. ')_' → logprob: -11.750441551208496
    6. 'time' → logprob: -12.250441551208496
    7. '   ' → logprob: -13.375441551208496
    8. '_t' → logprob: -13.875441551208496
    9. ' _' → logprob: -14.000441551208496
    10. '_)' → logprob: -14.500441551208496

Token 3193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13253775238990784
    2. '   ' → logprob: -2.132537841796875
    3. '()' → logprob: -5.882537841796875
    4. ')
' → logprob: -6.132537841796875
    5. '()
' → logprob: -7.882537841796875
    6. '())' → logprob: -8.382537841796875
    7. ' )' → logprob: -11.632537841796875
    8. '(' → logprob: -12.257537841796875
    9. '
' → logprob: -12.882537841796875
    10. '#' → logprob: -13.132537841796875

Token 3194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07927386462688446
    2. 'res' → logprob: -2.5792739391326904
    3. ' res' → logprob: -8.57927417755127
    4. '
' → logprob: -9.20427417755127
    5. '```' → logprob: -9.57927417755127
    6. '    
' → logprob: -10.82927417755127
    7. 'schedule' → logprob: -12.57927417755127
    8. 'for' → logprob: -13.95427417755127
    9. '	res' → logprob: -14.70427417755127
    10. '#' → logprob: -14.82927417755127

Token 3195: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.10031341761350632
    2. '   ' → logprob: -2.350313425064087
    3. 'for' → logprob: -9.350313186645508
    4. '#' → logprob: -11.475313186645508
    5. ' res' → logprob: -12.475313186645508
    6. '```' → logprob: -12.475313186645508
    7. '
' → logprob: -13.725313186645508
    8. '    
' → logprob: -14.850313186645508
    9. 'import' → logprob: -15.975313186645508
    10. '  ' → logprob: -15.975313186645508

Token 3196: 'chedule' (ID: 11973)
  Prédit: 'chedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chedule' → logprob: -3.5716304410016164e-05
    2. 'schedule' → logprob: -10.250035285949707
    3. 'ch' → logprob: -16.750036239624023
    4. 'CHEDULE' → logprob: -17.000036239624023
    5. 'cheduler' → logprob: -17.375036239624023
    6. 'he' → logprob: -17.750036239624023
    7. '_schedule' → logprob: -17.875036239624023
    8. 'che' → logprob: -18.250036239624023
    9. 'chedules' → logprob: -18.250036239624023
    10. 'ched' → logprob: -19.000036239624023

Token 3197: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -6.704273118884885e-07
    2. 'all' → logprob: -14.625000953674316
    3. '_arr' → logprob: -16.625
    4. 'All' → logprob: -17.75
    5. '_ALL' → logprob: -17.75
    6. '```' → logprob: -17.75
    7. '_' → logprob: -17.875
    8. 's' → logprob: -18.125
    9. ' _' → logprob: -18.375
    10. '__' → logprob: -18.375

Token 3198: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -5.621933451038785e-05
    2. 'arr' → logprob: -10.375056266784668
    3. '_events' → logprob: -12.125056266784668
    4. '_' → logprob: -12.125056266784668
    5. '(event' → logprob: -12.750056266784668
    6. 'arrival' → logprob: -12.750056266784668
    7. 'event' → logprob: -13.250056266784668
    8. '_event' → logprob: -13.375056266784668
    9. '(arr' → logprob: -13.875056266784668
    10. '_all' → logprob: -14.000056266784668

Token 3199: 'ivals' (ID: 80357)
  Prédit: 'ivals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivals' → logprob: -0.000969583576079458
    2. 'ival' → logprob: -7.375969409942627
    3. 'iv' → logprob: -8.125969886779785
    4. 'vals' → logprob: -10.375969886779785
    5. 'als' → logprob: -12.000969886779785
    6. 'ivs' → logprob: -12.625969886779785
    7. 'ials' → logprob: -14.125969886779785
    8. 'ive' → logprob: -14.625969886779785
    9. '```' → logprob: -14.750969886779785
    10. '[' → logprob: -14.750969886779785

Token 3200: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -2.1054253011243418e-05
    2. 'current' → logprob: -11.750020980834961
    3. '(' → logprob: -11.875020980834961
    4. '   ' → logprob: -12.750020980834961
    5. '()' → logprob: -12.875020980834961
    6. '(cur' → logprob: -15.375020980834961
    7. ',current' → logprob: -15.875020980834961
    8. '[current' → logprob: -16.37502098083496
    9. '```' → logprob: -16.75002098083496
    10. '()
' → logprob: -16.87502098083496

Token 3201: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.309382373117842e-05
    2. 'time' → logprob: -11.125033378601074
    3. '_' → logprob: -11.375033378601074
    4. ')' → logprob: -12.875033378601074
    5. ')_' → logprob: -13.250033378601074
    6. '_t' → logprob: -13.875033378601074
    7. '```' → logprob: -14.500033378601074
    8. '   ' → logprob: -14.750033378601074
    9. '_times' → logprob: -15.750033378601074
    10. ' _' → logprob: -16.500032424926758

Token 3202: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14963577687740326
    2. '   ' → logprob: -2.0246357917785645
    3. '<|end|>' → logprob: -5.1496357917785645
    4. '()' → logprob: -7.5246357917785645
    5. '<|end|>' → logprob: -7.8996357917785645
    6. ' )' → logprob: -10.149635314941406
    7. '    
' → logprob: -10.274635314941406
    8. ')
' → logprob: -10.274635314941406
    9. '())' → logprob: -10.399635314941406
    10. '(' → logprob: -11.399635314941406

Token 3203: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.003623831318691373
    2. '   ' → logprob: -5.878623962402344
    3. '```' → logprob: -8.003623962402344
    4. '
' → logprob: -8.253623962402344
    5. ' while' → logprob: -8.878623962402344
    6. '#' → logprob: -9.878623962402344
    7. '    
' → logprob: -10.753623962402344
    8. 'def' → logprob: -12.753623962402344
    9. '	while' → logprob: -12.878623962402344
    10. 'While' → logprob: -12.878623962402344

Token 3204: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0026946745347231627
    2. '   ' → logprob: -6.002694606781006
    3. ' while' → logprob: -8.627695083618164
    4. '```' → logprob: -10.377695083618164
    5. '	while' → logprob: -12.627695083618164
    6. '    
' → logprob: -12.877695083618164
    7. '
' → logprob: -13.377695083618164
    8. 'def' → logprob: -14.627695083618164
    9. '#' (adapté à ' #') → logprob: -14.627695083618164
    10. 'While' → logprob: -16.002695083618164

Token 3205: ' On' (ID: 2160)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00029160623671486974
    2. '   ' → logprob: -8.25029182434082
    3. ' while' → logprob: -10.75029182434082
    4. '
' → logprob: -12.75029182434082
    5. '    
' → logprob: -13.00029182434082
    6. 'def' → logprob: -13.00029182434082
    7. '	while' → logprob: -14.37529182434082
    8. '```' → logprob: -14.37529182434082
    9. 'While' → logprob: -16.87529182434082
    10. '#' → logprob: -17.37529182434082

Token 3206: ' garde' (ID: 65309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.003756851889193058
    2. ' while' → logprob: -5.878756999969482
    3. 'def' → logprob: -7.878756999969482
    4. '
' → logprob: -8.753756523132324
    5. '#' → logprob: -9.128756523132324
    6. '   ' → logprob: -9.253756523132324
    7. 'hile' → logprob: -9.753756523132324
    8. 'continue' → logprob: -10.503756523132324
    9. '    
' → logprob: -10.753756523132324
    10. ')' → logprob: -10.753756523132324

Token 3207: ' l' (ID: 305)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4005678594112396
    2. '   ' → logprob: -2.2755677700042725
    3. '#' → logprob: -2.5255677700042725
    4. 'True' → logprob: -3.0255677700042725
    5. 'going' → logprob: -3.4005677700042725
    6. 'running' → logprob: -3.9005677700042725
    7. '```' → logprob: -4.400568008422852
    8. 'continu' → logprob: -4.900568008422852
    9. 'la' → logprob: -5.525568008422852
    10. 'import' → logprob: -6.025568008422852

Token 3208: ''et' (ID: 88821)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.010953021235764027
    2. 'event' → logprob: -5.260952949523926
    3. '#' → logprob: -5.885952949523926
    4. 'import' → logprob: -7.135952949523926
    5. ' while' → logprob: -7.510952949523926
    6. 'current' → logprob: -7.635952949523926
    7. 'def' → logprob: -7.885952949523926
    8. 'e' → logprob: -9.135952949523926
    9. '```' → logprob: -9.510952949523926
    10. '[' → logprob: -9.760952949523926

Token 3209: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -7.584239938296378e-06
    2. 'ape' → logprob: -13.500007629394531
    3. 'endue' → logprob: -13.500007629394531
    4. 'e' → logprob: -14.000007629394531
    5. '
' → logprob: -14.375007629394531
    6. 'a' → logprob: -14.625007629394531
    7. 'ат' → logprob: -14.750007629394531
    8. 'ât' → logprob: -15.250007629394531
    9. 'AT' → logprob: -15.500007629394531
    10. '...' → logprob: -15.625007629394531

Token 3210: ' d' (ID: 272)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16828091442584991
    2. '   ' → logprob: -2.168280839920044
    3. '#' → logprob: -3.918280839920044
    4. 'def' → logprob: -4.918281078338623
    5. '```' → logprob: -5.168281078338623
    6. 'current' → logprob: -7.043281078338623
    7. ' while' → logprob: -7.293281078338623
    8. 'prev' → logprob: -7.543281078338623
    9. ')' → logprob: -7.793281078338623
    10. 'initial' → logprob: -7.918281078338623

Token 3211: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07420346140861511
    2. 'é' → logprob: -4.3242034912109375
    3. '#' → logprob: -4.9492034912109375
    4. ''' → logprob: -4.9492034912109375
    5. ''é' → logprob: -5.1992034912109375
    6. ''év' → logprob: -5.5742034912109375
    7. ''une' → logprob: -5.6992034912109375
    8. 'continu' → logprob: -6.3242034912109375
    9. '_' → logprob: -6.4492034912109375
    10. 'ef' → logprob: -6.4492034912109375

Token 3212: 'ev' (ID: 6923)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6650493144989014
    2. 'avance' → logprob: -1.9150493144989014
    3. 'é' → logprob: -2.0400493144989014
    4. ''arrivée' → logprob: -3.4150493144989014
    5. 'arr' → logprob: -3.6650493144989014
    6. 'es' → logprob: -3.9150493144989014
    7. ''avance' → logprob: -4.0400495529174805
    8. 'év' → logprob: -4.4150495529174805
    9. 'av' → logprob: -4.5400495529174805
    10. 'arrival' → logprob: -4.6650495529174805

Token 3213: 'ènements' (ID: 178488)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.027731910347938538
    2. 'ents' → logprob: -3.6527318954467773
    3. 'e' → logprob: -6.902731895446777
    4. '_queue' → logprob: -9.027731895446777
    5. '#' → logprob: -9.902731895446777
    6. 'ènement' → logprob: -10.402731895446777
    7. '```' → logprob: -10.527731895446777
    8. 'enue' → logprob: -10.652731895446777
    9. 'en' → logprob: -10.902731895446777
    10. 'queue' → logprob: -11.027731895446777

Token 3214: ' de' (ID: 334)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22144068777561188
    2. '#' → logprob: -3.2214407920837402
    3. '_queue' → logprob: -3.3464407920837402
    4. ')' → logprob: -3.3464407920837402
    5. ',' → logprob: -4.22144079208374
    6. '<|end|>' → logprob: -4.34644079208374
    7. '   ' → logprob: -4.84644079208374
    8. 'event' → logprob: -4.84644079208374
    9. ']' → logprob: -5.22144079208374
    10. '_' → logprob: -5.47144079208374

Token 3215: ' sas' (ID: 51515)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6411995887756348
    2. 'placement' → logprob: -2.0161995887756348
    3. 'arr' → logprob: -2.1411995887756348
    4. 'part' → logprob: -2.7661995887756348
    5. 'temps' → logprob: -2.8911995887756348
    6. 'arrival' → logprob: -3.8911995887756348
    7. 'jà' → logprob: -4.516199588775635
    8. 'l' → logprob: -4.766199588775635
    9. 'file' → logprob: -5.016199588775635
    10. 'f' → logprob: -5.516199588775635

Token 3216: ':
' (ID: 734)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'level' → logprob: -1.6030194759368896
    2. '   ' → logprob: -1.7280194759368896
    3. 'while' → logprob: -2.1030194759368896
    4. ')' → logprob: -2.2280194759368896
    5. '#' → logprob: -2.6030194759368896
    6. 'event' → logprob: -2.6030194759368896
    7. 'ongo' → logprob: -3.4780194759368896
    8. 'gate' → logprob: -3.4780194759368896
    9. 'current' → logprob: -3.7280194759368896
    10. 'last' → logprob: -3.9780194759368896

Token 3217: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5079120993614197
    2. '#' → logprob: -1.2579121589660645
    3. '   ' → logprob: -2.5079121589660645
    4. 'pass' → logprob: -4.8829121589660645
    5. '```' → logprob: -4.8829121589660645
    6. '<|end|>' → logprob: -5.0079121589660645
    7. 'def' → logprob: -5.5079121589660645
    8. ' while' → logprob: -6.5079121589660645
    9. '...' → logprob: -6.5079121589660645
    10. 'continue' → logprob: -6.5079121589660645

Token 3218: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14056697487831116
    2. '#' (adapté à ' #') → logprob: -2.5155670642852783
    3. 'def' → logprob: -3.7655670642852783
    4. 'pass' → logprob: -4.765566825866699
    5. 'level' → logprob: -5.265566825866699
    6. '   ' → logprob: -5.890566825866699
    7. 'continue' → logprob: -6.765566825866699
    8. ' while' → logprob: -6.765566825866699
    9. 'event' → logprob: -6.890566825866699
    10. 'gate' → logprob: -6.890566825866699

Token 3219: ' sas' (ID: 51515)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01764901913702488
    2. '#' → logprob: -4.517649173736572
    3. 'def' → logprob: -5.767649173736572
    4. '   ' → logprob: -6.267649173736572
    5. ' while' → logprob: -7.767649173736572
    6. '```' → logprob: -8.142648696899414
    7. 'continue' → logprob: -8.642648696899414
    8. 'current' → logprob: -9.392648696899414
    9. 'pass' → logprob: -9.517648696899414
    10. '
' → logprob: -9.642648696899414

Token 3220: '_target' (ID: 24705)
  Prédit: '_level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -1.291690468788147
    2. '_levels' → logprob: -1.416690468788147
    3. '_target' → logprob: -2.2916903495788574
    4. '_state' → logprob: -2.4166903495788574
    5. '_states' → logprob: -2.4166903495788574
    6. '_inside' → logprob: -2.7916903495788574
    7. '_change' → logprob: -3.0416903495788574
    8. '_events' → logprob: -4.041690349578857
    9. '_busy' → logprob: -4.166690349578857
    10. '_changes' → logprob: -4.416690349578857

Token 3221: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.00013643606507685035
    2. ' =' → logprob: -10.000136375427246
    3. '_levels' → logprob: -10.625136375427246
    4. '[level' → logprob: -10.875136375427246
    5. 'level' → logprob: -11.375136375427246
    6. 'niveau' → logprob: -11.875136375427246
    7. 's' → logprob: -12.250136375427246
    8. '=' → logprob: -12.250136375427246
    9. '[' → logprob: -12.500136375427246
    10. ']' → logprob: -13.000136375427246

Token 3222: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5501214265823364
    2. '=' → logprob: -0.9251214265823364
    3. '[' → logprob: -4.050121307373047
    4. '=[' → logprob: -5.675121307373047
    5. '[s' → logprob: -6.050121307373047
    6. '=None' → logprob: -6.675121307373047
    7. '[:]' → logprob: -7.050121307373047
    8. '=[]' → logprob: -8.050121307373047
    9. '[i' → logprob: -8.550121307373047
    10. 's' → logprob: -9.425121307373047

Token 3223: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.045673564076423645
    2. '[i' → logprob: -3.1706736087799072
    3. ']=' → logprob: -6.795673370361328
    4. ' =' → logprob: -7.670673370361328
    5. '=' → logprob: -8.170673370361328
    6. 'None' → logprob: -8.295673370361328
    7. ' ]' → logprob: -8.920673370361328
    8. '[' → logprob: -9.170673370361328
    9. '[s' → logprob: -9.420673370361328
    10. '=None' → logprob: -9.795673370361328

Token 3224: ' None' (ID: 4662)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.044046107679605484
    2. 'None' → logprob: -3.79404616355896
    3. '#' → logprob: -4.669045925140381
    4. 'current' → logprob: -5.669045925140381
    5. 'event' → logprob: -6.544045925140381
    6. 'time' → logprob: -6.919045925140381
    7. 'heap' → logprob: -7.169045925140381
    8. ' sas' → logprob: -7.169045925140381
    9. 'level' → logprob: -7.294045925140381
    10. 'for' → logprob: -7.794045925140381

Token 3225: ' si' (ID: 1784)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13784433901309967
    2. ' =' → logprob: -2.5128443241119385
    3. '<|end|>' → logprob: -3.6378443241119385
    4. '=None' → logprob: -4.512844562530518
    5. ',' → logprob: -5.262844562530518
    6. '#' → logprob: -6.762844562530518
    7. '[i' → logprob: -6.762844562530518
    8. ')' → logprob: -7.387844562530518
    9. 'for' → logprob: -7.512844562530518
    10. ']' → logprob: -8.51284408569336

Token 3226: ' pas' (ID: 2173)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.03786278888583183
    2. 'None' → logprob: -3.537862777709961
    3. 'pas' → logprob: -5.287862777709961
    4. 'not' → logprob: -5.912862777709961
    5. 'auc' → logprob: -9.662862777709961
    6. ' sas' → logprob: -10.037862777709961
    7. 'none' → logprob: -10.162862777709961
    8. 'no' → logprob: -10.537862777709961
    9. 'False' → logprob: -10.662862777709961
    10. ' None' → logprob: -10.787862777709961

Token 3227: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1753042936325073
    2. 'None' → logprob: -1.3003042936325073
    3. 'en' → logprob: -1.4253042936325073
    4. 'de' → logprob: -1.8003042936325073
    5. 'change' → logprob: -5.175304412841797
    6. 'chang' → logprob: -6.550304412841797
    7. 'changer' → logprob: -6.925304412841797
    8. 'not' → logprob: -6.925304412841797
    9. ' None' → logprob: -7.425304412841797
    10. 'enc' → logprob: -7.425304412841797

Token 3228: ' changement' (ID: 61912)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.35170355439186096
    2. 'None' → logprob: -1.3517035245895386
    3. 'change' → logprob: -3.476703643798828
    4. ' changement' → logprob: -5.726703643798828
    5. ' None' → logprob: -6.476703643798828
    6. 'chang' → logprob: -7.351703643798828
    7. 'changer' → logprob: -7.976703643798828
    8. 'continu' → logprob: -8.101703643798828
    9. 'mod' → logprob: -8.226703643798828
    10. 'c' → logprob: -9.851703643798828

Token 3229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.058237910270691
    2. '   ' → logprob: -1.308237910270691
    3. ')' → logprob: -2.0582380294799805
    4. '=' → logprob: -2.8082380294799805
    5. '#' → logprob: -3.5582380294799805
    6. ' =' → logprob: -3.5582380294799805
    7. ']' → logprob: -3.8082380294799805
    8. '=True' → logprob: -4.0582380294799805
    9. 'None' → logprob: -4.1832380294799805
    10. '```' → logprob: -4.1832380294799805

Token 3230: ' sinon' (ID: 52915)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.050192441791296005
    2. '#' → logprob: -3.675192356109619
    3. 'True' → logprob: -4.175192356109619
    4. ' False' → logprob: -5.425192356109619
    5. 'None' → logprob: -6.675192356109619
    6. 'sas' → logprob: -6.800192356109619
    7. '0' → logprob: -8.300192832946777
    8. ' True' → logprob: -8.800192832946777
    9. '   ' → logprob: -8.925192832946777
    10. 'def' → logprob: -9.050192832946777

Token 3231: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.08333823829889297
    2. 'False' → logprob: -2.7083382606506348
    3. '(True' → logprob: -4.708338260650635
    4. ' True' → logprob: -6.333338260650635
    5. 'sas' → logprob: -6.708338260650635
    6. '(False' → logprob: -7.708338260650635
    7. 'g' → logprob: -8.583337783813477
    8. 'bool' → logprob: -8.833337783813477
    9. '0' → logprob: -9.458337783813477
    10. ' False' → logprob: -9.833337783813477

Token 3232: '/' (ID: 14)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.1399095058441162
    2. ')' → logprob: -1.5149095058441162
    3. ' or' → logprob: -1.6399095058441162
    4. ',' → logprob: -2.014909505844116
    5. '<|end|>' → logprob: -2.389909505844116
    6. ']' → logprob: -3.889909505844116
    7. '   ' → logprob: -4.764909744262695
    8. '[i' → logprob: -5.514909744262695
    9. '<|end|>' → logprob: -5.889909744262695
    10. '),' → logprob: -7.014909744262695

Token 3233: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.2729995988775045e-06
    2. ' False' → logprob: -12.000006675720215
    3. '(False' → logprob: -19.5000057220459
    4. 'false' → logprob: -20.8750057220459
    5. '.False' → logprob: -22.5000057220459
    6. '_false' → logprob: -22.6250057220459
    7. '=False' → logprob: -23.8750057220459
    8. 'or' → logprob: -24.1250057220459
    9. '_FALSE' → logprob: -24.2500057220459
    10. 'FALSE' → logprob: -25.0000057220459

Token 3234: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17673912644386292
    2. '#' → logprob: -2.80173921585083
    3. '<|end|>' → logprob: -3.42673921585083
    4. 'while' → logprob: -4.17673921585083
    5. 'def' → logprob: -4.30173921585083
    6. ')' → logprob: -4.42673921585083
    7. '
' → logprob: -4.67673921585083
    8. '```' → logprob: -5.17673921585083
    9. ',' → logprob: -5.92673921585083
    10. '    
' → logprob: -6.17673921585083

Token 3235: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4575495719909668
    2. 'def' → logprob: -1.4575495719909668
    3. '   ' → logprob: -2.207549571990967
    4. '
' → logprob: -4.457549571990967
    5. '    
' → logprob: -5.207549571990967
    6. ' while' → logprob: -6.207549571990967
    7. '```' → logprob: -6.457549571990967
    8. '#' → logprob: -6.582549571990967
    9. ')' → logprob: -7.207549571990967
    10. '<|end|>' → logprob: -7.332549571990967

Token 3236: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.009242895059287548
    2. '   ' → logprob: -4.759243011474609
    3. '
' → logprob: -8.25924301147461
    4. ' while' → logprob: -8.75924301147461
    5. '#' (adapté à ' #') → logprob: -9.63424301147461
    6. '```' → logprob: -9.88424301147461
    7. '    
' → logprob: -10.13424301147461
    8. 'def' → logprob: -10.25924301147461
    9. ')' → logprob: -11.75924301147461
    10. '	while' → logprob: -12.38424301147461

Token 3237: ' Proc' (ID: 61817)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0023718432057648897
    2. '   ' → logprob: -6.127371788024902
    3. '
' → logprob: -9.377371788024902
    4. ' while' → logprob: -10.252371788024902
    5. '    
' → logprob: -10.377371788024902
    6. 'def' → logprob: -11.002371788024902
    7. '#' → logprob: -11.752371788024902
    8. '```' → logprob: -11.752371788024902
    9. '	while' → logprob: -13.502371788024902
    10. 'return' → logprob: -14.752371788024902

Token 3238: 'éder' (ID: 56640)
  Prédit: 'ess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ess' → logprob: -0.39031296968460083
    2. 'eed' → logprob: -1.640312910079956
    3. 'ed' → logprob: -3.265312910079956
    4. 'def' → logprob: -3.390312910079956
    5. 'édé' → logprob: -3.515312910079956
    6. 'ceed' → logprob: -4.265313148498535
    7. 'ede' → logprob: -5.265313148498535
    8. 'e' → logprob: -5.515313148498535
    9. 'éder' → logprob: -6.765313148498535
    10. '   ' → logprob: -6.890313148498535

Token 3239: ' par' (ID: 686)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05239775776863098
    2. '   ' → logprob: -3.1773977279663086
    3. ' while' → logprob: -4.802397727966309
    4. ':' → logprob: -7.802397727966309
    5. 'def' → logprob: -8.552397727966309
    6. '```' → logprob: -8.802397727966309
    7. '#' → logprob: -9.427397727966309
    8. '       ' → logprob: -9.677397727966309
    9. 'to' → logprob: -9.927397727966309
    10. '	while' → logprob: -9.927397727966309

Token 3240: ' boucle' (ID: 174211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.026477128267288208
    2. '   ' → logprob: -4.401477336883545
    3. '
' → logprob: -5.151477336883545
    4. 'heap' → logprob: -5.776477336883545
    5. 'event' → logprob: -5.901477336883545
    6. ' while' → logprob: -7.401477336883545
    7. '```' → logprob: -7.526477336883545
    8. 'import' → logprob: -8.151476860046387
    9. 'continue' → logprob: -8.651476860046387
    10. '    
' → logprob: -8.901476860046387

Token 3241: ' d' (ID: 272)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2291494756937027
    2. '   ' → logprob: -1.6041494607925415
    3. ' while' → logprob: -5.854149341583252
    4. '```' → logprob: -7.979149341583252
    5. '
' → logprob: -8.35414981842041
    6. ':' → logprob: -8.47914981842041
    7. '	while' → logprob: -10.72914981842041
    8. '    
' → logprob: -10.85414981842041
    9. ':
' → logprob: -11.22914981842041
    10. '(
' → logprob: -12.72914981842041

Token 3242: ''év' (ID: 114425)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.04408488795161247
    2. 'while' → logprob: -4.4190850257873535
    3. 'even' → logprob: -4.4190850257873535
    4. 'event' → logprob: -5.0440850257873535
    5. 'é' → logprob: -5.6690850257873535
    6. 'events' → logprob: -5.6690850257873535
    7. 'temps' → logprob: -6.4190850257873535
    8. ''év' → logprob: -7.1690850257873535
    9. '#' → logprob: -7.4190850257873535
    10. 'jeu' → logprob: -7.5440850257873535

Token 3243: 'ènements' (ID: 178488)
  Prédit: 'ènements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ènements' → logprob: -0.9727998971939087
    2. 'ents' → logprob: -1.0977998971939087
    3. 'ènement' → logprob: -1.9727998971939087
    4. 'énement' → logprob: -2.472799777984619
    5. 'ent' → logprob: -3.222799777984619
    6. 'én' → logprob: -4.597799777984619
    7. 'en' → logprob: -5.347799777984619
    8. 'enment' → logprob: -6.222799777984619
    9. 'nement' → logprob: -6.472799777984619
    10. 'ements' → logprob: -6.472799777984619

Token 3244: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3796618580818176
    2. 'while' → logprob: -1.2546617984771729
    3. '```' → logprob: -4.129662036895752
    4. '
' → logprob: -4.629662036895752
    5. ' while' → logprob: -5.629662036895752
    6. '    
' → logprob: -6.879662036895752
    7. '	while' → logprob: -9.379661560058594
    8. '``' → logprob: -9.629661560058594
    9. 'While' → logprob: -10.754661560058594
    10. '(
' → logprob: -11.254661560058594

Token 3245: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5559699535369873
    2. '   ' → logprob: -0.9309699535369873
    3. '
' → logprob: -4.305970191955566
    4. '```' → logprob: -4.430970191955566
    5. ' while' → logprob: -5.305970191955566
    6. '    
' → logprob: -6.430970191955566
    7. '``' → logprob: -8.930970191955566
    8. '	while' → logprob: -9.930970191955566
    9. 'def' → logprob: -10.305970191955566
    10. 'While' → logprob: -10.805970191955566

Token 3246: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.03108103759586811
    2. '   ' → logprob: -3.531080961227417
    3. '```' → logprob: -7.281081199645996
    4. '
' → logprob: -7.656081199645996
    5. ' while' → logprob: -9.156081199645996
    6. '    
' → logprob: -9.781081199645996
    7. '``' → logprob: -12.531081199645996
    8. '	while' → logprob: -13.281081199645996
    9. 'While' → logprob: -15.781081199645996
    10. 'indent' → logprob: -16.15608024597168

Token 3247: ' True' (ID: 6432)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.004343240987509489
    2. ' event' → logprob: -5.504343032836914
    3. 'len' → logprob: -8.254343032836914
    4. ' len' → logprob: -12.879343032836914
    5. '   ' → logprob: -13.629343032836914
    6. 'True' → logprob: -14.129343032836914
    7. ' True' → logprob: -16.629343032836914
    8. '	event' → logprob: -16.629343032836914
    9. '(event' → logprob: -18.129343032836914
    10. ' ' → logprob: -18.504343032836914

Token 3248: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11013498902320862
    2. '       ' → logprob: -2.735135078430176
    3. '```' → logprob: -4.110135078430176
    4. ',' → logprob: -5.235135078430176
    5. 'if' → logprob: -5.485135078430176
    6. ',
' → logprob: -5.735135078430176
    7. ':
' → logprob: -5.985135078430176
    8. ' if' → logprob: -5.985135078430176
    9. '``' → logprob: -6.985135078430176
    10. 'heap' → logprob: -7.485135078430176

Token 3249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08583247661590576
    2. '   ' → logprob: -3.4608325958251953
    3. '```' → logprob: -3.8358325958251953
    4. 'if' → logprob: -3.9608325958251953
    5. ' if' → logprob: -4.960832595825195
    6. '_,' → logprob: -7.335832595825195
    7. 't' → logprob: -7.585832595825195
    8. '``' → logprob: -7.710832595825195
    9. ',' → logprob: -8.210832595825195
    10. '(' → logprob: -8.335832595825195

Token 3250: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06939706206321716
    2. '   ' → logprob: -3.56939697265625
    3. ' if' → logprob: -3.56939697265625
    4. '       ' → logprob: -4.56939697265625
    5. '
' → logprob: -8.94439697265625
    6. '```' → logprob: -8.94439697265625
    7. '        
' → logprob: -10.81939697265625
    8. '	if' → logprob: -11.56939697265625
    9. '    
' → logprob: -11.69439697265625
    10. '#' (adapté à ' #') → logprob: -11.69439697265625

Token 3251: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00115617411211133
    2. '       ' → logprob: -7.126156330108643
    3. ' if' → logprob: -8.001155853271484
    4. '   ' → logprob: -11.376155853271484
    5. '```' → logprob: -13.126155853271484
    6. '
' → logprob: -13.626155853271484
    7. '        
' → logprob: -14.251155853271484
    8. '           ' → logprob: -14.876155853271484
    9. '#' → logprob: -15.001155853271484
    10. 'while' → logprob: -15.376155853271484

Token 3252: ' aucun' (ID: 41678)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0003637097543105483
    2. ' not' → logprob: -8.25036334991455
    3. 'len' → logprob: -9.25036334991455
    4. 'event' → logprob: -12.00036334991455
    5. '   ' → logprob: -16.375364303588867
    6. '(not' → logprob: -16.875364303588867
    7. '!' → logprob: -17.250364303588867
    8. '	not' → logprob: -17.750364303588867
    9. 'non' → logprob: -18.375364303588867
    10. 'Not' → logprob: -18.875364303588867

Token 3253: ' bateau' (ID: 123794)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5442395806312561
    2. 'event' → logprob: -0.9192395806312561
    3. 'if' → logprob: -4.294239521026611
    4. ' not' → logprob: -5.669239521026611
    5. 'len' → logprob: -5.669239521026611
    6. ' event' → logprob: -8.66923999786377
    7. '(event' → logprob: -10.66923999786377
    8. '```' → logprob: -10.66923999786377
    9. '   ' → logprob: -10.91923999786377
    10. '(not' → logprob: -11.04423999786377

Token 3254: ' n' (ID: 297)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4498475193977356
    2. ' and' → logprob: -2.199847459793091
    3. 'and' → logprob: -2.199847459793091
    4. 'not' → logprob: -2.449847459793091
    5. ' or' → logprob: -4.32484769821167
    6. ' ==' → logprob: -4.82484769821167
    7. 'event' → logprob: -4.82484769821167
    8. 'or' → logprob: -5.44984769821167
    9. ' not' → logprob: -5.57484769821167
    10. 'if' → logprob: -5.82484769821167

Token 3255: ''a' (ID: 10443)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1701415777206421
    2. '_queue' → logprob: -2.6701416969299316
    3. ' ==' → logprob: -3.1701416969299316
    4. 'not' → logprob: -5.045141696929932
    5. 'len' → logprob: -5.170141696929932
    6. '=' → logprob: -5.170141696929932
    7. 'event' → logprob: -5.420141696929932
    8. ' and' → logprob: -5.420141696929932
    9. 'and' → logprob: -5.670141696929932
    10. ' not' → logprob: -6.295141696929932

Token 3256: ' fini' (ID: 63561)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3700530230998993
    2. 'event' → logprob: -1.2450530529022217
    3. 'not' → logprob: -4.245052814483643
    4. ' event' → logprob: -5.620052814483643
    5. ' len' → logprob: -6.370052814483643
    6. ' not' → logprob: -7.620052814483643
    7. '```' → logprob: -7.870052814483643
    8. '(len' → logprob: -8.6200532913208
    9. '(event' → logprob: -9.2450532913208
    10. '   ' → logprob: -10.1200532913208

Token 3257: ' on' (ID: 402)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5733911991119385
    2. 'and' → logprob: -1.8233911991119385
    3. ' or' → logprob: -2.0733911991119385
    4. ':' → logprob: -2.3233911991119385
    5. ':
' → logprob: -3.4483911991119385
    6. '       ' → logprob: -4.823390960693359
    7. '           ' → logprob: -5.698390960693359
    8. 'or' → logprob: -5.698390960693359
    9. ',' → logprob: -6.198390960693359
    10. '   ' → logprob: -6.823390960693359

Token 3258: ' break' (ID: 2338)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2009565234184265
    2. ' if' → logprob: -1.8259565830230713
    3. '       ' → logprob: -4.450956344604492
    4. '   ' → logprob: -6.075956344604492
    5. '           ' → logprob: -6.325956344604492
    6. '=' → logprob: -6.325956344604492
    7. '==' → logprob: -7.200956344604492
    8. ':
' → logprob: -7.450956344604492
    9. ':' → logprob: -8.075956344604492
    10. 's' → logprob: -8.075956344604492

Token 3259: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03335600346326828
    2. ':
' → logprob: -4.158356189727783
    3. ':' → logprob: -4.533356189727783
    4. ' if' → logprob: -6.283356189727783
    5. ' and' → logprob: -6.658356189727783
    6. '   ' → logprob: -7.033356189727783
    7. 'if' → logprob: -7.533356189727783
    8. '           ' → logprob: -7.658356189727783
    9. '=' → logprob: -8.158355712890625
    10. ',' → logprob: -8.658355712890625

Token 3260: ' pas' (ID: 2173)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.05252524092793465
    2. ' not' → logprob: -3.052525281906128
    3. 'len' → logprob: -5.552525043487549
    4. '   ' → logprob: -10.302525520324707
    5. ' len' → logprob: -11.052525520324707
    6. 'event' → logprob: -13.427525520324707
    7. '       ' → logprob: -14.427525520324707
    8. '!' → logprob: -15.052525520324707
    9. '	not' → logprob: -15.802525520324707
    10. '```' → logprob: -16.05252456665039

Token 3261: ' d' (ID: 272)
  Prédit: ' event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.5763262510299683
    2. 'event' → logprob: -0.8263262510299683
    3. 'len' → logprob: -8.076326370239258
    4. ' len' → logprob: -9.701326370239258
    5. '   ' → logprob: -12.201326370239258
    6. '(event' → logprob: -12.701326370239258
    7. ' ' → logprob: -13.076326370239258
    8. '	event' → logprob: -13.201326370239258
    9. 'e' → logprob: -14.201326370239258
    10. '```' → logprob: -14.701326370239258

Token 3262: ''év' (ID: 114425)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.08901537209749222
    2. ' event' → logprob: -2.464015483856201
    3. '(event' → logprob: -9.964015007019043
    4. '_event' → logprob: -11.339015007019043
    5. 'len' → logprob: -11.964015007019043
    6. '	event' → logprob: -12.964015007019043
    7. 'e' → logprob: -13.214015007019043
    8. ' len' → logprob: -13.339015007019043
    9. ' ' → logprob: -13.589015007019043
    10. '   ' → logprob: -13.589015007019043

Token 3263: 'ènements' (ID: 178488)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.00015991552209015936
    2. 't' → logprob: -10.000160217285156
    3. '_' → logprob: -10.375160217285156
    4. 'ents' → logprob: -10.375160217285156
    5. '__' → logprob: -11.250160217285156
    6. 'nt' → logprob: -11.375160217285156
    7. '_ent' → logprob: -11.875160217285156
    8. '_queue' → logprob: -12.500160217285156
    9. '_
' → logprob: -13.500160217285156
    10. 'ент' → logprob: -13.625160217285156

Token 3264: ' ?

' (ID: 13570)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023487482219934464
    2. ' or' → logprob: -4.648487567901611
    3. ':' → logprob: -4.898487567901611
    4. ' and' → logprob: -5.898487567901611
    5. ':
' → logprob: -6.648487567901611
    6. '           ' → logprob: -7.648487567901611
    7. '```' → logprob: -7.773487567901611
    8. ',' → logprob: -8.023487091064453
    9. '   ' → logprob: -8.398487091064453
    10. ' if' → logprob: -8.523487091064453

Token 3265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2999570369720459
    2. 'if' → logprob: -1.424957036972046
    3. ' if' → logprob: -4.049957275390625
    4. '```' → logprob: -7.174957275390625
    5. '   ' → logprob: -8.299957275390625
    6. '        
' → logprob: -9.799957275390625
    7. 'try' → logprob: -10.549957275390625
    8. '
' → logprob: -10.924957275390625
    9. 'while' → logprob: -11.174957275390625
    10. '``' → logprob: -11.424957275390625

Token 3266: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2645854651927948
    2. '       ' → logprob: -1.6395854949951172
    3. ' if' → logprob: -3.264585494995117
    4. '   ' → logprob: -9.889585494995117
    5. '        
' → logprob: -9.889585494995117
    6. '
' → logprob: -10.139585494995117
    7. 'try' → logprob: -11.014585494995117
    8. 'while' → logprob: -11.139585494995117
    9. ' 
' → logprob: -11.889585494995117
    10. '           ' → logprob: -12.139585494995117

Token 3267: ' Condition' (ID: 30255)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002426194492727518
    2. '       ' → logprob: -6.3774261474609375
    3. ' if' → logprob: -7.6274261474609375
    4. 'while' → logprob: -8.627426147460938
    5. '   ' → logprob: -11.002426147460938
    6. '
' → logprob: -11.002426147460938
    7. '        
' → logprob: -11.127426147460938
    8. '#' → logprob: -12.502426147460938
    9. '```' → logprob: -13.002426147460938
    10. 'current' → logprob: -13.752426147460938

Token 3268: ' finale' (ID: 37759)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2674344778060913
    2. ' =' → logprob: -1.3924344778060913
    3. 'if' → logprob: -1.6424344778060913
    4. '=' → logprob: -1.8924344778060913
    5. ' if' → logprob: -2.267434597015381
    6. ':' → logprob: -4.517434597015381
    7. ' ==' → logprob: -6.267434597015381
    8. '==' → logprob: -6.517434597015381
    9. '   ' → logprob: -6.767434597015381
    10. 'not' → logprob: -6.767434597015381

Token 3269: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037500813603401184
    2. 'if' → logprob: -3.6625008583068848
    3. ' if' → logprob: -4.537500858306885
    4. '
' → logprob: -9.037500381469727
    5. ':' → logprob: -9.412500381469727
    6. '        
' → logprob: -9.912500381469727
    7. '   ' → logprob: -10.162500381469727
    8. '```' → logprob: -10.162500381469727
    9. '           ' → logprob: -10.912500381469727
    10. '#' → logprob: -11.037500381469727

Token 3270: ' tous' (ID: 10688)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3382364511489868
    2. 'done' → logprob: -2.0882363319396973
    3. '       ' → logprob: -2.4632363319396973
    4. 'all' → logprob: -2.9632363319396973
    5. ' if' → logprob: -3.8382363319396973
    6. ' done' → logprob: -6.588236331939697
    7. ' all' → logprob: -6.838236331939697
    8. '   ' → logprob: -6.963236331939697
    9. 'any' → logprob: -7.838236331939697
    10. '
' → logprob: -8.338236808776855

Token 3271: ' les' (ID: 1341)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.16001296043395996
    2. '_done' → logprob: -2.78501296043396
    3. 'ships' → logprob: -3.16001296043396
    4. ' done' → logprob: -4.285013198852539
    5. 'all' → logprob: -4.660013198852539
    6. 'ship' → logprob: -4.910013198852539
    7. ' ships' → logprob: -6.160013198852539
    8. '(ship' → logprob: -6.285013198852539
    9. 's' → logprob: -6.785013198852539
    10. '   ' → logprob: -7.035013198852539

Token 3272: ' bate' (ID: 39378)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.3749144375324249
    2. 'done' → logprob: -1.3749144077301025
    3. 's' → logprob: -4.249914646148682
    4. 'ship' → logprob: -4.374914646148682
    5. 'b' → logprob: -4.624914646148682
    6. 'all' → logprob: -4.874914646148682
    7. 'boats' → logprob: -4.874914646148682
    8. ' ships' → logprob: -5.999914646148682
    9. 'bate' → logprob: -6.124914646148682
    10. ' done' → logprob: -6.874914646148682

Token 3273: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.01242193765938282
    2. 'au' → logprob: -4.51242208480835
    3. 'ats' → logprob: -7.76242208480835
    4. '^' → logprob: -9.387421607971191
    5. 'ton' → logprob: -9.637421607971191
    6. '
' → logprob: -9.762421607971191
    7. 's' → logprob: -9.762421607971191
    8. 'â' → logprob: -9.887421607971191
    9. 'ts' → logprob: -10.012421607971191
    10. '_aux' → logprob: -10.012421607971191

Token 3274: ' sont' (ID: 5242)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.6352306604385376
    2. '_done' → logprob: -0.8852306604385376
    3. 'finished' → logprob: -4.010230541229248
    4. '_finished' → logprob: -4.385230541229248
    5. 'ont' → logprob: -5.385230541229248
    6. '       ' → logprob: -5.760230541229248
    7. '   ' → logprob: -5.760230541229248
    8. 'fait' → logprob: -5.885230541229248
    9. 's' → logprob: -6.760230541229248
    10. 'f' → logprob: -6.885230541229248

Token 3275: ' au' (ID: 2791)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.003692716360092163
    2. 'finished' → logprob: -6.378692626953125
    3. 'fait' → logprob: -7.503692626953125
    4. ' done' → logprob: -7.878692626953125
    5. 'f' → logprob: -8.003692626953125
    6. 'termin' → logprob: -8.378692626953125
    7. 'faits' → logprob: -8.753692626953125
    8. 'fin' → logprob: -9.628692626953125
    9. 'faite' → logprob: -9.753692626953125
    10. 'term' → logprob: -10.003692626953125

Token 3276: '-delà' (ID: 94644)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.2644656002521515
    2. 'del' → logprob: -2.139465570449829
    3. 'dess' → logprob: -2.264465570449829
    4. 'mo' → logprob: -5.139465808868408
    5. '-dessus' → logprob: -6.389465808868408
    6. '-' → logprob: -7.014465808868408
    7. 'd' → logprob: -7.639465808868408
    8. 'less' → logprob: -8.01446533203125
    9. '-delà' → logprob: -8.26446533203125
    10. 'plus' → logprob: -8.88946533203125

Token 3277: ' de' (ID: 334)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.1942218691110611
    2. ' K' → logprob: -1.9442218542099
    3. '       ' → logprob: -3.4442219734191895
    4. '0' → logprob: -7.8192219734191895
    5. '        ' → logprob: -8.194221496582031
    6. '=' → logprob: -9.319221496582031
    7. 'current' → logprob: -9.319221496582031
    8. '(' → logprob: -9.319221496582031
    9. '   ' → logprob: -9.444221496582031
    10. '(K' → logprob: -9.694221496582031

Token 3278: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00038038729690015316
    2. ' K' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.375380516052246
    4. ' ' → logprob: -17.12537956237793
    5. '       ' → logprob: -17.50037956237793
    6. '  ' → logprob: -18.50037956237793
    7. '	K' → logprob: -18.50037956237793
    8. ' ' → logprob: -19.00037956237793
    9. '    ' → logprob: -19.00037956237793
    10. 'k' → logprob: -19.25037956237793

Token 3279: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022558939235750586
    2. ' if' → logprob: -9.875226020812988
    3. ')' → logprob: -10.375226020812988
    4. '
' → logprob: -10.375226020812988
    5. ',' → logprob: -10.625226020812988
    6. 'if' → logprob: -10.750226020812988
    7. '        
' → logprob: -11.000226020812988
    8. '   ' → logprob: -11.375226020812988
    9. ':' → logprob: -11.750226020812988
    10. '```' → logprob: -12.000226020812988

Token 3280: 'fin' (ID: 6994)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.22747564315795898
    2. ' current' → logprob: -1.852475643157959
    3. 'EPS' → logprob: -3.852475643157959
    4. '       ' → logprob: -4.477475643157959
    5. 'if' → logprob: -5.977475643157959
    6. ')' → logprob: -5.977475643157959
    7. 'K' → logprob: -6.352475643157959
    8. ' EPS' → logprob: -6.352475643157959
    9. '   ' → logprob: -6.977475643157959
    10. '+' → logprob: -7.352475643157959

Token 3281: ' du' (ID: 1462)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3302789032459259
    2. ')' → logprob: -1.9552788734436035
    3. '       ' → logprob: -2.8302788734436035
    4. '):
' → logprob: -3.5802788734436035
    5. ' ou' → logprob: -3.7052788734436035
    6. 'or' → logprob: -4.2052788734436035
    7. '):' → logprob: -5.8302788734436035
    8. ')
' → logprob: -6.2052788734436035
    9. 'ou' → logprob: -6.5802788734436035
    10. ':
' → logprob: -6.9552788734436035

Token 3282: ' pays' (ID: 15236)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07303465157747269
    2. 'territ' → logprob: -2.8230347633361816
    3. 'terrain' → logprob: -5.823034763336182
    4. ' pays' → logprob: -6.198034763336182
    5. ' territoire' → logprob: -6.573034763336182
    6. 'code' → logprob: -6.948034763336182
    7. '```' → logprob: -6.948034763336182
    8. 'country' → logprob: -7.823034763336182
    9. ')' → logprob: -8.323034286499023
    10. 'Pays' → logprob: -8.448034286499023

Token 3283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4168970286846161
    2. '       ' → logprob: -1.9168970584869385
    3. ')
' → logprob: -1.9168970584869385
    4. ' or' → logprob: -3.2918970584869385
    5. '):
' → logprob: -5.166896820068359
    6. '):' → logprob: -7.041896820068359
    7. ':
' → logprob: -7.666896820068359
    8. '   ' → logprob: -7.916896820068359
    9. ' ou' → logprob: -7.916896820068359
    10. 'or' → logprob: -8.16689682006836

Token 3284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009498104336671531
    2. ' if' → logprob: -7.750949859619141
    3. 'if' → logprob: -8.25094985961914
    4. '   ' → logprob: -9.62594985961914
    5. '```' → logprob: -9.62594985961914
    6. '        
' → logprob: -10.37594985961914
    7. '           ' → logprob: -10.37594985961914
    8. '
' → logprob: -11.75094985961914
    9. ':
' → logprob: -12.00094985961914
    10. ')' → logprob: -12.12594985961914

Token 3285: ' done' (ID: 4167)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32664746046066284
    2. 'if' → logprob: -1.3266475200653076
    3. 'done' (adapté à ' done') → logprob: -4.4516472816467285
    4. 'all' → logprob: -6.8266472816467285
    5. '   ' → logprob: -8.576647758483887
    6. ' if' → logprob: -8.576647758483887
    7. 'finished' → logprob: -10.326647758483887
    8. 'found' → logprob: -10.326647758483887
    9. 'completed' → logprob: -10.576647758483887
    10. 'for' → logprob: -10.826647758483887

Token 3286: '_all' (ID: 13305)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22776883840560913
    2. '=' → logprob: -1.602768898010254
    3. '   ' → logprob: -6.977768898010254
    4. 's' → logprob: -7.102768898010254
    5. '_' → logprob: -9.227768898010254
    6. '_count' → logprob: -9.352768898010254
    7. '_all' → logprob: -9.477768898010254
    8. '       ' → logprob: -9.852768898010254
    9. 'and' → logprob: -9.852768898010254
    10. ' ' → logprob: -9.977768898010254

Token 3287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6331251263618469
    2. ' =' → logprob: -0.7581251263618469
    3. '   ' → logprob: -8.258125305175781
    4. '==' → logprob: -9.383125305175781
    5. '       ' → logprob: -10.008125305175781
    6. '=True' → logprob: -10.133125305175781
    7. ' ==' → logprob: -10.883125305175781
    8. '  ' → logprob: -11.008125305175781
    9. ' ' → logprob: -11.508125305175781
    10. ')' → logprob: -11.758125305175781

Token 3288: ' True' (ID: 6432)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00020687808864749968
    2. '   ' → logprob: -9.25020694732666
    3. 'True' → logprob: -9.50020694732666
    4. ' all' → logprob: -10.25020694732666
    5. '       ' → logprob: -14.87520694732666
    6. ' True' → logprob: -16.875205993652344
    7. 'All' → logprob: -17.500205993652344
    8. '(all' → logprob: -17.875205993652344
    9. '	all' → logprob: -18.000205993652344
    10. '  ' → logprob: -18.250205993652344

Token 3289: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13368923962116241
    2. 'for' → logprob: -2.1336891651153564
    3. ' for' → logprob: -5.0086894035339355
    4. '	for' → logprob: -10.633688926696777
    5. '   ' → logprob: -11.133688926696777
    6. '           ' → logprob: -12.383688926696777
    7. '<|end|>' → logprob: -12.633688926696777
    8. ',' → logprob: -13.133688926696777
    9. '```' → logprob: -13.508688926696777
    10. '	' → logprob: -13.633688926696777

Token 3290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3652615249156952
    2. 'for' → logprob: -1.3652615547180176
    3. ' for' → logprob: -2.9902615547180176
    4. '<|end|>' → logprob: -8.74026107788086
    5. '	for' → logprob: -8.86526107788086
    6. '   ' → logprob: -9.99026107788086
    7. ',' → logprob: -11.49026107788086
    8. '           ' → logprob: -11.61526107788086
    9. '[' → logprob: -12.86526107788086
    10. '	' → logprob: -12.99026107788086

Token 3291: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.107425062713446e-06
    2. ' for' → logprob: -12.000006675720215
    3. '       ' → logprob: -14.000006675720215
    4. '	for' → logprob: -17.12500762939453
    5. '   ' → logprob: -20.12500762939453
    6. '#' → logprob: -21.37500762939453
    7. '
' → logprob: -22.50000762939453
    8. '```' → logprob: -22.62500762939453
    9. 'For' → logprob: -22.87500762939453
    10. ' ' → logprob: -23.37500762939453

Token 3292: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.776887059211731
    2. 's' → logprob: -0.776887059211731
    3. 'ship' → logprob: -2.5268869400024414
    4. ' s' → logprob: -8.651886940002441
    5. ' ship' → logprob: -8.901886940002441
    6. ' i' → logprob: -9.276886940002441
    7. 'sh' → logprob: -12.401886940002441
    8. 'b' → logprob: -12.901886940002441
    9. 'j' → logprob: -13.026886940002441
    10. '   ' → logprob: -13.151886940002441

Token 3293: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806260600686073
    2. 'in' → logprob: -3.288062572479248
    3. 'i' → logprob: -12.538063049316406
    4. '_' → logprob: -12.788063049316406
    5. ' i' → logprob: -12.913063049316406
    6. '_in' → logprob: -13.163063049316406
    7. ')' → logprob: -13.288063049316406
    8. '   ' → logprob: -13.413063049316406
    9. '```' → logprob: -13.663063049316406
    10. ' ' → logprob: -13.788063049316406

Token 3294: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001242772996192798
    2. ' range' → logprob: -9.000123977661133
    3. 'ships' → logprob: -14.000123977661133
    4. '   ' → logprob: -17.625123977661133
    5. '	range' → logprob: -20.375123977661133
    6. '  ' → logprob: -20.875123977661133
    7. '(range' → logprob: -21.250123977661133
    8. 'ranges' → logprob: -21.250123977661133
    9. '    ' → logprob: -21.500123977661133
    10. '0' → logprob: -21.875123977661133

Token 3295: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.06226668879389763
    2. 'range' → logprob: -2.8122665882110596
    3. '(M' → logprob: -8.81226634979248
    4. ' range' → logprob: -9.93726634979248
    5. '       ' → logprob: -10.18726634979248
    6. '   ' → logprob: -10.31226634979248
    7. '           ' → logprob: -11.06226634979248
    8. '(range' → logprob: -12.56226634979248
    9. ' M' → logprob: -12.93726634979248
    10. 'ships' → logprob: -13.18726634979248

Token 3296: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009433519095182419
    2. '       ' → logprob: -5.009433746337891
    3. '           ' → logprob: -7.259433746337891
    4. ')' → logprob: -7.634433746337891
    5. '):' → logprob: -7.759433746337891
    6. ':
' → logprob: -7.759433746337891
    7. 'if' → logprob: -8.38443374633789
    8. '=' → logprob: -8.75943374633789
    9. ' if' → logprob: -9.00943374633789
    10. '   ' → logprob: -10.13443374633789

Token 3297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003571535926312208
    2. ' if' → logprob: -8.375357627868652
    3. 'if' → logprob: -9.500357627868652
    4. '       ' → logprob: -10.875357627868652
    5. '   ' → logprob: -11.000357627868652
    6. '```' → logprob: -12.125357627868652
    7. '	       ' → logprob: -12.750357627868652
    8. '	   ' → logprob: -13.250357627868652
    9. '               ' → logprob: -14.125357627868652
    10. '         ' → logprob: -14.250357627868652

Token 3298: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011465576477348804
    2. ' if' → logprob: -5.011465549468994
    3. '           ' → logprob: -5.636465549468994
    4. '       ' → logprob: -6.761465549468994
    5. 'ships' → logprob: -12.136466026306152
    6. 'not' → logprob: -12.886466026306152
    7. 'done' → logprob: -13.011466026306152
    8. '   ' → logprob: -13.011466026306152
    9. 'ship' → logprob: -13.386466026306152
    10. '	if' → logprob: -14.136466026306152

Token 3299: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.09265725314617157
    2. 'ships' → logprob: -2.4676573276519775
    3. ' not' → logprob: -5.842657089233398
    4. '           ' → logprob: -7.967657089233398
    5. '   ' → logprob: -8.217657089233398
    6. '       ' → logprob: -9.967657089233398
    7. ' ships' → logprob: -9.967657089233398
    8. '(not' → logprob: -9.967657089233398
    9. '!' → logprob: -11.717657089233398
    10. 'ship' → logprob: -11.842657089233398

Token 3300: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.00010914575977949426
    2. ' ships' → logprob: -9.12510871887207
    3. '(' → logprob: -16.75010871887207
    4. '   ' → logprob: -17.50010871887207
    5. 'ship' → logprob: -18.25010871887207
    6. 's' → logprob: -18.75010871887207
    7. 'shops' → logprob: -19.00010871887207
    8. 'boats' → logprob: -19.12510871887207
    9. ' ' → logprob: -19.50010871887207
    10. '       ' → logprob: -20.00010871887207

Token 3301: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -11.875009536743164
    3. '[
' → logprob: -14.125009536743164
    4. 'i' → logprob: -14.500009536743164
    5. '
' → logprob: -14.500009536743164
    6. ' [' → logprob: -16.500009536743164
    7. 's' → logprob: -16.750009536743164
    8. '```' → logprob: -16.750009536743164
    9. '[I' → logprob: -17.500009536743164
    10. '[j' → logprob: -17.500009536743164

Token 3302: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5990210771560669
    2. '].' → logprob: -0.8490210771560669
    3. '.i' → logprob: -3.9740209579467773
    4. ').' → logprob: -6.599020957946777
    5. '[' → logprob: -7.349020957946777
    6. '.' → logprob: -7.974020957946777
    7. ' .' → logprob: -8.099020957946777
    8. '.done' → logprob: -8.224020957946777
    9. '   ' → logprob: -8.724020957946777
    10. 'i' → logprob: -8.724020957946777

Token 3303: 'done' (ID: 21715)
  Prédit: 'done'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' → logprob: -2.339278580620885e-06
    2. ' done' → logprob: -13.000001907348633
    3. '.done' → logprob: -16.750001907348633
    4. '
' → logprob: -16.875001907348633
    5. '	done' → logprob: -18.375001907348633
    6. '  ' → logprob: -18.750001907348633
    7. '   ' → logprob: -19.125001907348633
    8. ' ' → logprob: -19.125001907348633
    9. '_done' → logprob: -19.250001907348633
    10. '(done' → logprob: -20.250001907348633

Token 3304: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.645809531211853
    2. ':
' → logprob: -1.270809531211853
    3. '               ' → logprob: -2.2708096504211426
    4. ' or' → logprob: -2.7708096504211426
    5. ':' → logprob: -3.6458096504211426
    6. 'or' → logprob: -6.270809650421143
    7. '       ' → logprob: -7.520809650421143
    8. ' and' → logprob: -8.520809173583984
    9. '          ' → logprob: -9.270809173583984
    10. '              ' → logprob: -9.270809173583984

Token 3305: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021487072110176086
    2. '           ' → logprob: -4.021487236022949
    3. ' or' → logprob: -6.396487236022949
    4. ':' → logprob: -7.771487236022949
    5. '=True' → logprob: -8.14648723602295
    6. ' and' → logprob: -8.27148723602295
    7. ':
' → logprob: -8.27148723602295
    8. 'and' → logprob: -8.89648723602295
    9. 'or' → logprob: -8.89648723602295
    10. '=' → logprob: -10.14648723602295

Token 3306: ' done' (ID: 4167)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' (adapté à ' done') → logprob: -0.016566112637519836
    2. '               ' → logprob: -4.766566276550293
    3. 'break' → logprob: -4.891566276550293
    4. '           ' → logprob: -8.516566276550293
    5. ' done' → logprob: -8.641566276550293
    6. '(done' → logprob: -11.516566276550293
    7. '#' → logprob: -12.016566276550293
    8. '                   ' → logprob: -12.016566276550293
    9. '	done' → logprob: -12.391566276550293
    10. '```' → logprob: -13.266566276550293

Token 3307: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.023173606023192406
    2. '=' → logprob: -4.773173809051514
    3. ' =' → logprob: -4.773173809051514
    4. '               ' → logprob: -5.898173809051514
    5. '           ' → logprob: -6.773173809051514
    6. '                   ' → logprob: -6.898173809051514
    7. '=True' → logprob: -7.523173809051514
    8. '       ' → logprob: -9.023173332214355
    9. 'All' → logprob: -9.148173332214355
    10. '=False' → logprob: -9.148173332214355

Token 3308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24550949037075043
    2. '               ' → logprob: -2.495509386062622
    3. ' =' → logprob: -2.620509386062622
    4. '                   ' → logprob: -3.120509386062622
    5. '=True' → logprob: -4.495509624481201
    6. '           ' → logprob: -5.620509624481201
    7. '=False' → logprob: -5.995509624481201
    8. ':
' → logprob: -7.745509624481201
    9. '=
' → logprob: -8.495509147644043
    10. '                       ' → logprob: -9.370509147644043

Token 3309: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. 'True' → logprob: -17.500009536743164
    4. '   ' → logprob: -19.500009536743164
    5. '(False' → logprob: -20.500009536743164
    6. '=False' → logprob: -20.875009536743164
    7. 'false' → logprob: -22.500009536743164
    8. '       ' → logprob: -23.250009536743164
    9. '_false' → logprob: -23.625009536743164
    10. '.False' → logprob: -23.625009536743164

Token 3310: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04303675517439842
    2. '           ' → logprob: -3.293036699295044
    3. '                   ' → logprob: -6.293036937713623
    4. '       ' → logprob: -6.293036937713623
    5. ' and' → logprob: -7.418036937713623
    6. ':
' → logprob: -8.168036460876465
    7. '                       ' → logprob: -8.543036460876465
    8. ':' → logprob: -10.668036460876465
    9. ',' → logprob: -10.918036460876465
    10. '		' → logprob: -10.918036460876465

Token 3311: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6965916156768799
    2. '               ' → logprob: -0.6965916156768799
    3. '       ' → logprob: -6.321591377258301
    4. '                   ' → logprob: -6.821591377258301
    5. ' and' → logprob: -8.3215913772583
    6. '                       ' → logprob: -9.3215913772583
    7. '		' → logprob: -9.6965913772583
    8. ':
' → logprob: -10.3215913772583
    9. ' if' → logprob: -10.8215913772583
    10. 'and' → logprob: -10.9465913772583

Token 3312: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5292032957077026
    2. '               ' → logprob: -1.2792032957077026
    3. '           ' → logprob: -2.029203414916992
    4. '                   ' → logprob: -7.154203414916992
    5. ' break' → logprob: -9.029203414916992
    6. '       ' → logprob: -9.279203414916992
    7. '                       ' → logprob: -9.404203414916992
    8. '		' → logprob: -9.529203414916992
    9. '	break' → logprob: -10.404203414916992
    10. '			' → logprob: -11.529203414916992

Token 3313: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005504102446138859
    2. '
' → logprob: -8.000550270080566
    3. '           ' → logprob: -9.375550270080566
    4. '        
' → logprob: -10.125550270080566
    5. '```' → logprob: -10.750550270080566
    6. ' if' → logprob: -11.125550270080566
    7. 'if' → logprob: -11.250550270080566
    8. '   ' → logprob: -11.750550270080566
    9. '<|end|>' → logprob: -11.875550270080566
    10. '               ' → logprob: -12.500550270080566

Token 3314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006878530140966177
    2. ' if' → logprob: -5.75687837600708
    3. 'if' → logprob: -5.88187837600708
    4. '```' → logprob: -7.38187837600708
    5. '
' → logprob: -9.256878852844238
    6. '<|end|>' → logprob: -9.881878852844238
    7. ',' → logprob: -10.756878852844238
    8. '   ' → logprob: -10.756878852844238
    9. '           ' → logprob: -10.881878852844238
    10. ')' → logprob: -11.256878852844238

Token 3315: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31513193249702454
    2. 'if' (adapté à ' if') → logprob: -1.3151319026947021
    3. ' if' → logprob: -6.315132141113281
    4. '```' → logprob: -10.065132141113281
    5. 'If' → logprob: -12.190132141113281
    6. '   ' → logprob: -12.440132141113281
    7. '	if' → logprob: -13.190132141113281
    8. '        
' → logprob: -13.315132141113281
    9. '           ' → logprob: -13.440132141113281
    10. '
' → logprob: -14.190132141113281

Token 3316: ' done' (ID: 4167)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.77009117603302
    2. ' not' → logprob: -0.89509117603302
    3. 'done' → logprob: -2.3950910568237305
    4. ' done' → logprob: -3.3950910568237305
    5. '       ' → logprob: -5.8950910568237305
    6. '   ' → logprob: -7.1450910568237305
    7. '           ' → logprob: -9.02009105682373
    8. '    ' → logprob: -10.27009105682373
    9. '        ' → logprob: -11.52009105682373
    10. '               ' → logprob: -11.52009105682373

Token 3317: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -7.421908958349377e-05
    2. 'all' → logprob: -10.50007438659668
    3. '   ' → logprob: -11.37507438659668
    4. '==' → logprob: -11.37507438659668
    5. '       ' → logprob: -11.87507438659668
    6. ':' → logprob: -12.12507438659668
    7. 'All' → logprob: -12.62507438659668
    8. '           ' → logprob: -13.00007438659668
    9. '_not' → logprob: -14.00007438659668
    10. '```' → logprob: -14.12507438659668

Token 3318: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5581182837486267
    2. ':' → logprob: -1.0581183433532715
    3. '           ' → logprob: -2.5581183433532715
    4. '       ' → logprob: -5.9331183433532715
    5. '==' → logprob: -8.058117866516113
    6. ' ==' → logprob: -10.308117866516113
    7. ':return' → logprob: -10.308117866516113
    8. '=' → logprob: -10.558117866516113
    9. ' or' → logprob: -10.808117866516113
    10. '   ' → logprob: -10.808117866516113

Token 3319: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010549608850851655
    2. '       ' → logprob: -6.876054763793945
    3. '		' → logprob: -11.751054763793945
    4. '               ' → logprob: -11.876054763793945
    5. 'break' → logprob: -13.376054763793945
    6. '	       ' → logprob: -13.751054763793945
    7. '          ' → logprob: -14.001054763793945
    8. '                   ' → logprob: -14.376054763793945
    9. ':' → logprob: -14.376054763793945
    10. '```' → logprob: -14.501054763793945

Token 3320: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5809877514839172
    2. '       ' → logprob: -1.4559876918792725
    3. 'break' → logprob: -1.5809876918792725
    4. ' break' → logprob: -7.080987930297852
    5. '   ' → logprob: -7.955987930297852
    6. '	break' → logprob: -8.330987930297852
    7. '               ' → logprob: -9.580987930297852
    8. 'return' → logprob: -9.580987930297852
    9. '		' → logprob: -9.955987930297852
    10. '	       ' → logprob: -10.705987930297852

Token 3321: ' Fin' (ID: 7772)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6955195665359497
    2. 'return' → logprob: -1.1955195665359497
    3. '           ' → logprob: -1.6955195665359497
    4. '       ' → logprob: -4.19551944732666
    5. ' break' → logprob: -10.32051944732666
    6. ' return' → logprob: -11.07051944732666
    7. '   ' → logprob: -11.32051944732666
    8. '```' → logprob: -12.69551944732666
    9. '               ' → logprob: -12.82051944732666
    10. '	break' → logprob: -13.57051944732666

Token 3322: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4243241548538208
    2. '       ' → logprob: -1.2993241548538208
    3. 'break' → logprob: -3.4243240356445312
    4. '               ' → logprob: -3.6743240356445312
    5. ')' → logprob: -5.799324035644531
    6. '<|end|>' → logprob: -6.549324035644531
    7. '_break' → logprob: -6.549324035644531
    8. ' break' → logprob: -6.924324035644531
    9. '        ' → logprob: -6.924324035644531
    10. '   ' → logprob: -7.049324035644531

Token 3323: ' simulation' (ID: 30937)
  Prédit: 'simulation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simulation' → logprob: -0.017771286889910698
    2. 'program' → logprob: -5.392771244049072
    3. 'True' → logprob: -5.892771244049072
    4. 'return' → logprob: -6.017771244049072
    5. 'while' → logprob: -6.267771244049072
    6. 'la' → logprob: -6.642771244049072
    7. 'simulate' → logprob: -6.642771244049072
    8. ' simulation' → logprob: -6.892771244049072
    9. 'sim' → logprob: -7.642771244049072
    10. ' True' → logprob: -7.767771244049072

Token 3324: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05549224093556404
    2. '       ' → logprob: -2.9304921627044678
    3. ':
' → logprob: -8.055492401123047
    4. ':' → logprob: -8.805492401123047
    5. '               ' → logprob: -9.680492401123047
    6. '		' → logprob: -10.430492401123047
    7. ',' → logprob: -10.930492401123047
    8. 'break' → logprob: -11.305492401123047
    9. '          ' → logprob: -12.930492401123047
    10. ' break' → logprob: -13.055492401123047

Token 3325: ' afficher' (ID: 146524)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7960125207901001
    2. '           ' → logprob: -1.2960125207901
    3. 'break' → logprob: -1.2960125207901
    4. '       ' → logprob: -6.9210124015808105
    5. ' return' → logprob: -7.9210124015808105
    6. ' break' → logprob: -8.296012878417969
    7. '		' → logprob: -11.921012878417969
    8. '#' → logprob: -11.921012878417969
    9. '   ' → logprob: -12.296012878417969
    10. '               ' → logprob: -12.296012878417969

Token 3326: ' temps' (ID: 11160)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.046577367931604385
    2. ' current' → logprob: -3.5465774536132812
    3. 'round' → logprob: -4.921577453613281
    4. 'return' → logprob: -5.296577453613281
    5. '[current' → logprob: -5.921577453613281
    6. '   ' → logprob: -8.296577453613281
    7. '(current' → logprob: -8.421577453613281
    8. '
' → logprob: -8.421577453613281
    9. 'break' → logprob: -8.546577453613281
    10. '[' → logprob: -8.546577453613281

Token 3327: ' actuel' (ID: 113646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0803019106388092
    2. '           ' → logprob: -2.5803020000457764
    3. 'return' → logprob: -7.830301761627197
    4. '
' → logprob: -8.205302238464355
    5. 'break' → logprob: -8.830302238464355
    6. '=' → logprob: -9.580302238464355
    7. ':
' → logprob: -9.580302238464355
    8. '               ' → logprob: -9.705302238464355
    9. ',' → logprob: -9.705302238464355
    10. '        
' → logprob: -9.705302238464355

Token 3328: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06379840523004532
    2. '           ' → logprob: -2.813798427581787
    3. 'return' → logprob: -7.063798427581787
    4. '
' → logprob: -7.813798427581787
    5. ',' → logprob: -8.938797950744629
    6. ':
' → logprob: -9.188797950744629
    7. ',
' → logprob: -9.938797950744629
    8. ' return' → logprob: -9.938797950744629
    9. ')
' → logprob: -10.063797950744629
    10. 'break' → logprob: -10.313797950744629

Token 3329: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.1186566047836095e-05
    2. '```' → logprob: -11.500031471252441
    3. '       ' → logprob: -12.000031471252441
    4. '               ' → logprob: -12.625031471252441
    5. 'return' → logprob: -12.625031471252441
    6. ':
' → logprob: -13.250031471252441
    7. '
' → logprob: -13.250031471252441
    8. ',' → logprob: -13.500031471252441
    9. '		' → logprob: -13.875031471252441
    10. 'break' → logprob: -14.250031471252441

Token 3330: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.029695993289351463
    2. '           ' → logprob: -4.029695987701416
    3. 'break' → logprob: -4.529695987701416
    4. '       ' → logprob: -7.654695987701416
    5. ' return' → logprob: -8.904696464538574
    6. 'print' → logprob: -9.529696464538574
    7. '```' → logprob: -11.779696464538574
    8. '   ' → logprob: -13.029696464538574
    9. '               ' → logprob: -14.154696464538574
    10. ' break' → logprob: -14.404696464538574

Token 3331: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.008618712425231934
    2. ' current' → logprob: -4.7586188316345215
    3. 'round' → logprob: -12.758618354797363
    4. '   ' → logprob: -14.008618354797363
    5. 'float' → logprob: -14.883618354797363
    6. 'f' → logprob: -17.13361930847168
    7. '	current' → logprob: -17.38361930847168
    8. '(current' → logprob: -17.63361930847168
    9. 'int' → logprob: -18.13361930847168
    10. ' round' → logprob: -18.25861930847168

Token 3332: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0002383441897109151
    2. '_' → logprob: -9.000238418579102
    3. '_current' → logprob: -10.000238418579102
    4. '_t' → logprob: -10.750238418579102
    5. '_times' → logprob: -11.000238418579102
    6. '\' → logprob: -12.125238418579102
    7. ' _' → logprob: -12.375238418579102
    8. '_token' → logprob: -12.625238418579102
    9. '_timestamp' → logprob: -12.875238418579102
    10. ')_' → logprob: -12.875238418579102

Token 3333: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15212750434875488
    2. '
' → logprob: -2.027127504348755
    3. '        
' → logprob: -5.277127265930176
    4. '   ' → logprob: -6.902127265930176
    5. '    
' → logprob: -7.152127265930176
    6. ' if' → logprob: -7.652127265930176
    7. ')' → logprob: -8.027127265930176
    8. 'if' → logprob: -8.277127265930176
    9. '```' → logprob: -8.402127265930176
    10. '
' → logprob: -8.652127265930176

Token 3334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011688868515193462
    2. 'if' → logprob: -5.136688709259033
    3. ' if' → logprob: -5.511688709259033
    4. '        
' → logprob: -6.636688709259033
    5. '```' → logprob: -9.261689186096191
    6. ',' → logprob: -9.636689186096191
    7. '<|end|>' → logprob: -9.636689186096191
    8. 'try' → logprob: -10.136689186096191
    9. '   ' → logprob: -10.386689186096191
    10. '
' → logprob: -10.636689186096191

Token 3335: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11957301199436188
    2. '       ' → logprob: -2.2445731163024902
    3. ' if' → logprob: -5.11957311630249
    4. '        
' → logprob: -8.369572639465332
    5. 'while' → logprob: -8.869572639465332
    6. '```' → logprob: -8.869572639465332
    7. '#' → logprob: -9.244572639465332
    8. '   ' → logprob: -10.244572639465332
    9. 'try' → logprob: -10.619572639465332
    10. ',' → logprob: -11.369572639465332

Token 3336: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0005389740690588951
    2. ' not' → logprob: -8.00053882598877
    3. 'len' → logprob: -8.50053882598877
    4. '   ' → logprob: -15.75053882598877
    5. 'event' → logprob: -17.375539779663086
    6. '       ' → logprob: -17.625539779663086
    7. '(not' → logprob: -18.375539779663086
    8. '	not' → logprob: -19.000539779663086
    9. ' len' → logprob: -19.750539779663086
    10. 'Not' → logprob: -20.000539779663086

Token 3337: ' event' (ID: 2104)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -1.0445127372804563e-05
    2. ' event' → logprob: -11.50001049041748
    3. 'len' → logprob: -15.25001049041748
    4. '(event' → logprob: -18.875009536743164
    5. '   ' → logprob: -20.000009536743164
    6. '	event' → logprob: -20.750009536743164
    7. '```' → logprob: -21.250009536743164
    8. '#' → logprob: -22.125009536743164
    9. '
' → logprob: -22.750009536743164
    10. 'queue' → logprob: -22.750009536743164

Token 3338: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.875000953674316
    3. 's' → logprob: -15.875000953674316
    4. 'queue' → logprob: -16.375
    5. '_QUEUE' → logprob: -16.875
    6. 'Queue' → logprob: -17.25
    7. '_q' → logprob: -17.625
    8. '\' → logprob: -19.0
    9. 'e' → logprob: -19.375
    10. '```' → logprob: -19.5

Token 3339: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6943012475967407
    2. ':
' → logprob: -0.6943012475967407
    3. ' or' → logprob: -8.44430160522461
    4. '       ' → logprob: -8.56930160522461
    5. '.pop' → logprob: -8.56930160522461
    6. '[' → logprob: -8.81930160522461
    7. '.empty' → logprob: -9.19430160522461
    8. '.' → logprob: -9.19430160522461
    9. '.heap' → logprob: -9.81930160522461
    10. '   ' → logprob: -10.06930160522461

Token 3340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029538830742239952
    2. '       ' → logprob: -3.779538869857788
    3. '   ' → logprob: -5.529538631439209
    4. '```' → logprob: -7.029538631439209
    5. ':
' → logprob: -7.154538631439209
    6. 'break' → logprob: -8.404539108276367
    7. ':' → logprob: -9.654539108276367
    8. '#' → logprob: -9.779539108276367
    9. '               ' → logprob: -10.279539108276367
    10. '		' → logprob: -10.404539108276367

Token 3341: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.03186663240194321
    2. '           ' → logprob: -3.5318665504455566
    3. '       ' → logprob: -6.281866550445557
    4. ' break' → logprob: -9.156867027282715
    5. '	break' → logprob: -9.531867027282715
    6. '#' (adapté à ' #') → logprob: -10.156867027282715
    7. '```' → logprob: -10.906867027282715
    8. 'return' → logprob: -13.156867027282715
    9. '		' → logprob: -13.281867027282715
    10. '   ' → logprob: -13.406867027282715

Token 3342: ' Plus' (ID: 11899)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0014121392741799355
    2. '#' → logprob: -6.7514119148254395
    3. '           ' → logprob: -8.501412391662598
    4. 'return' → logprob: -10.501412391662598
    5. ' break' → logprob: -12.126412391662598
    6. '       ' → logprob: -12.126412391662598
    7. '	break' → logprob: -15.376412391662598
    8. '```' → logprob: -16.00141143798828
    9. 'raise' → logprob: -17.12641143798828
    10. 'BREAK' → logprob: -17.50141143798828

Token 3343: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.021974189206957817
    2. ' d' → logprob: -3.8969740867614746
    3. '#' → logprob: -7.521974086761475
    4. 'de' → logprob: -8.021974563598633
    5. ' de' → logprob: -8.021974563598633
    6. '```' → logprob: -9.146974563598633
    7. 'import' → logprob: -10.396974563598633
    8. '_d' → logprob: -10.771974563598633
    9. 'ieurs' → logprob: -10.896974563598633
    10. ' ' → logprob: -11.521974563598633

Token 3344: ''év' (ID: 114425)
  Prédit: ' event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -1.7573223114013672
    2. 'events' → logprob: -1.7573223114013672
    3. 'event' → logprob: -1.7573223114013672
    4. ' events' → logprob: -2.007322311401367
    5. '_' → logprob: -2.132322311401367
    6. 'e' → logprob: -2.882322311401367
    7. 'év' → logprob: -3.132322311401367
    8. ' ' → logprob: -3.257322311401367
    9. 'é' → logprob: -3.507322311401367
    10. ''év' → logprob: -3.632322311401367

Token 3345: 'ènements' (ID: 178488)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.0075193643569946
    2. 'ents' → logprob: -1.1325193643569946
    3. 'ent' → logprob: -2.257519245147705
    4. 'énement' → logprob: -2.257519245147705
    5. 'ènement' → logprob: -2.882519245147705
    6. 'ènements' → logprob: -3.632519245147705
    7. 'è' → logprob: -5.382519245147705
    8. 'év' → logprob: -5.757519245147705
    9. 'én' → logprob: -5.882519245147705
    10. 'ène' → logprob: -6.132519245147705

Token 3346: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003323388285934925
    2. 'break' → logprob: -6.253323554992676
    3. ':
' → logprob: -7.628323554992676
    4. '       ' → logprob: -7.628323554992676
    5. '		' → logprob: -9.128323554992676
    6. ':' → logprob: -9.378323554992676
    7. '               ' → logprob: -9.628323554992676
    8. ' break' → logprob: -10.253323554992676
    9. ',' → logprob: -10.503323554992676
    10. 'return' → logprob: -10.753323554992676

Token 3347: ' on' (ID: 402)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0002319071936653927
    2. ' break' → logprob: -8.500231742858887
    3. '#' → logprob: -11.250231742858887
    4. '           ' → logprob: -11.375231742858887
    5. 'return' → logprob: -12.875231742858887
    6. '```' → logprob: -14.500231742858887
    7. '       ' → logprob: -14.625231742858887
    8. '	break' → logprob: -14.875231742858887
    9. '
' → logprob: -16.625232696533203
    10. '_break' → logprob: -16.875232696533203

Token 3348: ' peut' (ID: 9216)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0538492277264595
    2. 'reak' → logprob: -3.428849220275879
    3. '           ' → logprob: -4.803849220275879
    4. 'raise' → logprob: -5.303849220275879
    5. 'return' → logprob: -5.553849220275879
    6. ' break' → logprob: -7.178849220275879
    7. 'continue' → logprob: -7.678849220275879
    8. '_break' → logprob: -7.803849220275879
    9. '#' → logprob: -8.178849220275879
    10. '-break' → logprob: -8.428849220275879

Token 3349: ' avancer' (ID: 151163)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.14570248126983643
    2. 'return' → logprob: -2.270702362060547
    3. '           ' → logprob: -3.520702362060547
    4. '#' → logprob: -7.270702362060547
    5. 'import' → logprob: -7.270702362060547
    6. ' break' → logprob: -7.520702362060547
    7. '```' → logprob: -8.145702362060547
    8. '       ' → logprob: -9.020702362060547
    9. '               ' → logprob: -9.520702362060547
    10. ' return' → logprob: -9.520702362060547

Token 3350: ' le' (ID: 505)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5493911504745483
    2. '           ' → logprob: -1.0493911504745483
    3. 'current' → logprob: -3.549391269683838
    4. '               ' → logprob: -4.299391269683838
    5. 'continue' → logprob: -4.799391269683838
    6. '       ' → logprob: -4.924391269683838
    7. ' break' → logprob: -5.549391269683838
    8. 'pass' → logprob: -6.174391269683838
    9. 'return' → logprob: -6.174391269683838
    10. '
' → logprob: -6.549391269683838

Token 3351: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.08116522431373596
    2. 'time' → logprob: -2.581165313720703
    3. 'current' → logprob: -6.456165313720703
    4. 'temp' → logprob: -8.081165313720703
    5. 'tempo' → logprob: -8.456165313720703
    6. 'tem' → logprob: -10.206165313720703
    7. 'break' → logprob: -10.206165313720703
    8. 't' → logprob: -10.581165313720703
    9. 'ti' → logprob: -11.081165313720703
    10. '
' → logprob: -11.081165313720703

Token 3352: ' au' (ID: 2791)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.23276609182357788
    2. '           ' → logprob: -2.3577661514282227
    3. ' +=' → logprob: -2.7327661514282227
    4. 'break' → logprob: -4.232766151428223
    5. '=' → logprob: -4.232766151428223
    6. '               ' → logprob: -4.482766151428223
    7. ':
' → logprob: -6.232766151428223
    8. 'import' → logprob: -6.482766151428223
    9. '+' → logprob: -6.732766151428223
    10. ',' → logprob: -7.482766151428223

Token 3353: ' prochain' (ID: 52413)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.7154633402824402
    2. 'inf' → logprob: -1.715463399887085
    3. 'pro' → logprob: -1.840463399887085
    4. 'event' → logprob: -2.465463399887085
    5. 'next' → logprob: -3.965463399887085
    6. 'current' → logprob: -4.340463161468506
    7. 'minimum' → logprob: -4.590463161468506
    8. '+' → logprob: -4.715463161468506
    9. 'plus' → logprob: -4.840463161468506
    10. 'min' → logprob: -5.340463161468506

Token 3354: ' changement' (ID: 61912)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.47009408473968506
    2. 'heap' → logprob: -1.845094084739685
    3. '(
' → logprob: -2.5950942039489746
    4. '(' → logprob: -3.2200942039489746
    5. '0' → logprob: -4.095094203948975
    6. 'ship' → logprob: -4.220094203948975
    7. 'min' → logprob: -4.220094203948975
    8. 't' → logprob: -5.095094203948975
    9. 'for' → logprob: -5.095094203948975
    10. '(event' → logprob: -5.470094203948975

Token 3355: ' imag' (ID: 7883)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2943967282772064
    2. '       ' → logprob: -3.1693966388702393
    3. '=' → logprob: -3.6693966388702393
    4. ',' → logprob: -3.6693966388702393
    5. '_time' → logprob: -3.6693966388702393
    6. '_possible' → logprob: -3.7943966388702393
    7. '+' → logprob: -4.044396877288818
    8. '_event' → logprob: -4.169396877288818
    9. '```' → logprob: -4.169396877288818
    10. 'possible' → logprob: -4.669396877288818

Token 3356: 'inaire' (ID: 41465)
  Prédit: 'iné'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iné' → logprob: -0.011582823470234871
    2. 'in' → logprob: -5.261582851409912
    3. 'é' → logprob: -5.636582851409912
    4. 'ine' → logprob: -6.636582851409912
    5. 'inaire' → logprob: -7.136582851409912
    6. 'e' → logprob: -7.636582851409912
    7. 'ined' → logprob: -10.136582374572754
    8. '(in' → logprob: -10.386582374572754
    9. '(' → logprob: -10.886582374572754
    10. 'iner' → logprob: -11.386582374572754

Token 3357: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4241573810577393
    2. '           ' → logprob: -1.4241573810577393
    3. ',' → logprob: -1.7991573810577393
    4. ':
' → logprob: -1.7991573810577393
    5. ':' → logprob: -2.2991573810577393
    6. ',
' → logprob: -4.29915714263916
    7. ')' → logprob: -4.42415714263916
    8. '#' → logprob: -4.79915714263916
    9. ' or' → logprob: -4.92415714263916
    10. '   ' → logprob: -5.17415714263916

Token 3358: 'on' (ID: 263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44599923491477966
    2. 'float' → logprob: -2.3209991455078125
    3. '1' → logprob: -2.9459991455078125
    4. 'None' → logprob: -3.0709991455078125
    5. ')
' → logprob: -3.1959991455078125
    6. '):
' → logprob: -3.1959991455078125
    7. '#' → logprob: -3.6959991455078125
    8. '0' → logprob: -4.0709991455078125
    9. '+' → logprob: -5.0709991455078125
    10. 'continue' → logprob: -5.3209991455078125

Token 3359: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5037972331047058
    2. 'break' → logprob: -2.1287972927093506
    3. 'continue' → logprob: -2.2537972927093506
    4. '```' → logprob: -3.5037972927093506
    5. '       ' → logprob: -3.6287972927093506
    6. 'n' → logprob: -3.8787972927093506
    7. '=' → logprob: -4.2537970542907715
    8. ')' → logprob: -4.3787970542907715
    9. '           ' → logprob: -4.3787970542907715
    10. 'cannot' → logprob: -5.1287970542907715

Token 3360: ' bou' (ID: 17573)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9195549488067627
    2. 'continue' → logprob: -1.2945549488067627
    3. '           ' → logprob: -2.1695549488067627
    4. 'pass' → logprob: -2.7945549488067627
    5. 'break' → logprob: -3.0445549488067627
    6. ' return' → logprob: -3.4195549488067627
    7. ' continue' → logprob: -3.6695549488067627
    8. 'None' → logprob: -4.044554710388184
    9. '```' → logprob: -5.419554710388184
    10. '   ' → logprob: -5.419554710388184

Token 3361: 'clé' (ID: 103916)
  Prédit: 'gé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gé' → logprob: -0.8442085385322571
    2. 'g' → logprob: -1.7192084789276123
    3. 'ge' → logprob: -2.3442084789276123
    4. 'cle' → logprob: -2.4692084789276123
    5. 'clé' → logprob: -2.8442084789276123
    6. 'st' → logprob: -3.7192084789276123
    7. 'dge' → logprob: -4.094208717346191
    8. 'lé' → logprob: -4.469208717346191
    9. 'dé' → logprob: -4.469208717346191
    10. 'rg' → logprob: -4.719208717346191

Token 3362: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1312098652124405
    2. ')
' → logprob: -2.1312098503112793
    3. ',' → logprob: -5.881209850311279
    4. '       ' → logprob: -7.881209850311279
    5. '')' → logprob: -9.006210327148438
    6. '),' → logprob: -9.131210327148438
    7. ' )' → logprob: -9.256210327148438
    8. '           ' → logprob: -9.256210327148438
    9. '):
' → logprob: -9.381210327148438
    10. '   ' → logprob: -9.506210327148438

Token 3363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07100441306829453
    2. '       ' → logprob: -2.6960043907165527
    3. '   ' → logprob: -8.321004867553711
    4. '        
' → logprob: -8.571004867553711
    5. '```' → logprob: -8.571004867553711
    6. '		' → logprob: -9.571004867553711
    7. '            
' → logprob: -9.571004867553711
    8. '               ' → logprob: -9.946004867553711
    9. 'continue' → logprob: -10.071004867553711
    10. '	       ' → logprob: -10.071004867553711

Token 3364: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1643410325050354
    2. 'break' → logprob: -3.6643409729003906
    3. 'continue' → logprob: -3.7893409729003906
    4. ' continue' → logprob: -4.039340972900391
    5. '```' → logprob: -4.539340972900391
    6. ' break' → logprob: -4.664340972900391
    7. ' 
' → logprob: -4.664340972900391
    8. '       ' → logprob: -4.664340972900391
    9. ' (' → logprob: -4.789340972900391
    10. '            
' → logprob: -5.164340972900391

Token 3365: ' Cela' (ID: 44403)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3793809711933136
    2. '           ' → logprob: -1.3793809413909912
    3. '       ' → logprob: -3.254380941390991
    4. '#' → logprob: -4.50438117980957
    5. 'current' → logprob: -5.12938117980957
    6. 'continue' → logprob: -5.25438117980957
    7. '```' → logprob: -7.12938117980957
    8. 'return' → logprob: -7.25438117980957
    9. 'heap' → logprob: -7.50438117980957
    10. '
' → logprob: -8.87938117980957

Token 3366: ' ne' (ID: 453)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10812553018331528
    2. '       ' → logprob: -2.6081254482269287
    3. 'break' → logprob: -3.8581254482269287
    4. '   ' → logprob: -6.108125686645508
    5. '#' → logprob: -6.733125686645508
    6. '```' → logprob: -7.108125686645508
    7. 'continue' → logprob: -7.233125686645508
    8. '=' → logprob: -7.358125686645508
    9. 'return' → logprob: -7.608125686645508
    10. '               ' → logprob: -7.858125686645508

Token 3367: ' devrait' (ID: 52773)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.0540814399719238
    2. '#' → logprob: -1.3040814399719238
    3. 'continue' → logprob: -1.4290814399719238
    4. 'return' → logprob: -3.054081439971924
    5. ' continue' → logprob: -4.054081439971924
    6. ' break' → logprob: -4.304081439971924
    7. '       ' → logprob: -4.804081439971924
    8. '   ' → logprob: -5.179081439971924
    9. ' return' → logprob: -5.179081439971924
    10. '=' → logprob: -5.304081439971924

Token 3368: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.1491785049438477
    2. 'pas' → logprob: -1.3991785049438477
    3. 'continue' → logprob: -2.1491785049438477
    4. ')' → logprob: -2.2741785049438477
    5. 'break' → logprob: -3.0241785049438477
    6. 'return' → logprob: -3.1491785049438477
    7. 'not' → logprob: -4.149178504943848
    8. ' break' → logprob: -4.149178504943848
    9. ' continue' → logprob: -4.399178504943848
    10. '```' → logprob: -4.399178504943848

Token 3369: ' arriver' (ID: 78302)
  Prédit: ' happen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' happen' → logprob: -1.0139673948287964
    2. 'continue' → logprob: -1.2639673948287964
    3. 'break' → logprob: -1.6389673948287964
    4. 'raise' → logprob: -3.013967514038086
    5. 'occur' → logprob: -3.638967514038086
    6. ' break' → logprob: -4.138967514038086
    7. '```' → logprob: -4.388967514038086
    8. 'return' → logprob: -4.513967514038086
    9. '       ' → logprob: -5.138967514038086
    10. 'import' → logprob: -5.263967514038086

Token 3370: ' car' (ID: 1669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6589909791946411
    2. '       ' → logprob: -1.2839909791946411
    3. ':
' → logprob: -2.0339908599853516
    4. ',' → logprob: -4.033990859985352
    5. ':' → logprob: -4.158990859985352
    6. ')' → logprob: -4.533990859985352
    7. '.' → logprob: -5.283990859985352
    8. 'continue' → logprob: -5.533990859985352
    9. '               ' → logprob: -5.658990859985352
    10. '   ' → logprob: -5.908990859985352

Token 3371: ' on' (ID: 402)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.16182129085063934
    2. ' break' → logprob: -2.5368213653564453
    3. 'True' → logprob: -4.036821365356445
    4. '           ' → logprob: -4.161821365356445
    5. '       ' → logprob: -4.411821365356445
    6. '#' → logprob: -4.911821365356445
    7. ' True' → logprob: -5.286821365356445
    8. '   ' → logprob: -5.661821365356445
    9. '```' → logprob: -5.911821365356445
    10. 'False' → logprob: -6.161821365356445

Token 3372: ' a' (ID: 261)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7537936568260193
    2. '.' → logprob: -1.753793716430664
    3. ' continue' → logprob: -2.128793716430664
    4. ')' → logprob: -2.503793716430664
    5. '#' → logprob: -3.378793716430664
    6. '.append' → logprob: -4.253793716430664
    7. '[' → logprob: -4.253793716430664
    8. '   ' → logprob: -4.378793716430664
    9. ' continues' → logprob: -5.253793716430664
    10. '.pop' → logprob: -5.378793716430664

Token 3373: ' toujours' (ID: 16867)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5042333602905273
    2. 'pass' → logprob: -2.2542333602905273
    3. 'break' → logprob: -2.5042333602905273
    4. '#' → logprob: -3.1292333602905273
    5. 'import' → logprob: -3.3792333602905273
    6. 'raise' → logprob: -3.6292333602905273
    7. ' continue' → logprob: -3.6292333602905273
    8. 'return' → logprob: -4.254233360290527
    9. 'heap' → logprob: -4.254233360290527
    10. '```' → logprob: -4.254233360290527

Token 3374: ' des' (ID: 731)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.3570089638233185
    2. ' event' → logprob: -1.482008934020996
    3. 'len' → logprob: -3.482008934020996
    4. 'heap' → logprob: -4.732008934020996
    5. ' des' → logprob: -5.107008934020996
    6. 'events' → logprob: -5.482008934020996
    7. ' True' → logprob: -5.732008934020996
    8. 'év' → logprob: -5.732008934020996
    9. 'ev' → logprob: -6.357008934020996
    10. ' events' → logprob: -6.482008934020996

Token 3375: ' év' (ID: 23692)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -1.0464892387390137
    2. 'év' → logprob: -1.1714892387390137
    3. 'ev' → logprob: -2.9214892387390137
    4. '#' → logprob: -3.0464892387390137
    5. 'event' → logprob: -3.0464892387390137
    6. ' events' → logprob: -3.7964892387390137
    7. '```' → logprob: -3.7964892387390137
    8. 'pass' → logprob: -3.9214892387390137
    9. ')' → logprob: -4.046489238739014
    10. 'ships' → logprob: -4.546489238739014

Token 3376: 'ènements' (ID: 178488)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.004211243707686663
    2. 'ent' → logprob: -5.75421142578125
    3. 'nts' → logprob: -7.37921142578125
    4. 'e' → logprob: -8.00421142578125
    5. '```' → logprob: -11.50421142578125
    6. 'ènements' → logprob: -11.62921142578125
    7. 't' → logprob: -11.62921142578125
    8. 'è' → logprob: -12.25421142578125
    9. 'ts' → logprob: -12.50421142578125
    10. 'ets' → logprob: -12.62921142578125

Token 3377: ' pour' (ID: 1930)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.245479941368103
    2. '   ' → logprob: -2.1204800605773926
    3. ':
' → logprob: -2.3704800605773926
    4. ':' → logprob: -2.6204800605773926
    5. ',' → logprob: -2.6204800605773926
    6. '       ' → logprob: -2.7454800605773926
    7. '.append' → logprob: -2.8704800605773926
    8. 'continue' → logprob: -3.1204800605773926
    9. 'pass' → logprob: -3.6204800605773926
    10. '=' → logprob: -3.6204800605773926

Token 3378: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.561597466468811
    2. 'le' → logprob: -2.3115973472595215
    3. 'la' → logprob: -2.5615973472595215
    4. 'contin' → logprob: -2.9365973472595215
    5. 'av' → logprob: -3.1865973472595215
    6. 'sim' → logprob: -3.3115973472595215
    7. 'simulate' → logprob: -3.3115973472595215
    8. 'l' → logprob: -4.1865973472595215
    9. 'avance' → logprob: -4.5615973472595215
    10. 'faire' → logprob: -4.5615973472595215

Token 3379: ' bate' (ID: 39378)
  Prédit: 'bate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bate' → logprob: -0.011421139352023602
    2. 'ships' → logprob: -5.136421203613281
    3. 'b' → logprob: -5.511421203613281
    4. ' bate' → logprob: -7.636421203613281
    5. 'nav' → logprob: -8.011421203613281
    6. 'boats' → logprob: -8.011421203613281
    7. 'bat' → logprob: -9.886421203613281
    8. 'ship' → logprob: -10.136421203613281
    9. '```' → logprob: -10.136421203613281
    10. 'm' → logprob: -11.011421203613281

Token 3380: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.003178071230649948
    2. 'au' → logprob: -6.128178119659424
    3. 'uts' → logprob: -8.003177642822266
    4. 'ats' → logprob: -9.003177642822266
    5. 'u' → logprob: -9.128177642822266
    6. 'ts' → logprob: -9.253177642822266
    7. '```' → logprob: -9.253177642822266
    8. 'ux' → logprob: -9.878177642822266
    9. 'â' → logprob: -10.128177642822266
    10. 'aus' → logprob: -10.753177642822266

Token 3381: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25235819816589355
    2. ':
' → logprob: -2.5023581981658936
    3. '           ' → logprob: -2.5023581981658936
    4. '.' → logprob: -4.002358436584473
    5. ',' → logprob: -4.377358436584473
    6. ' or' → logprob: -5.752358436584473
    7. ':' → logprob: -5.877358436584473
    8. '[' → logprob: -6.002358436584473
    9. ',
' → logprob: -6.002358436584473
    10. '   ' → logprob: -6.127358436584473

Token 3382: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04869433119893074
    2. ':
' → logprob: -3.423694372177124
    3. '           ' → logprob: -5.298694133758545
    4. '
' → logprob: -5.673694133758545
    5. ',' → logprob: -6.798694133758545
    6. '.' → logprob: -7.173694133758545
    7. '.
' → logprob: -7.298694133758545
    8. ':' → logprob: -7.423694133758545
    9. ',
' → logprob: -7.548694133758545
    10. '```' → logprob: -7.548694133758545

Token 3383: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6365877985954285
    2. '       ' → logprob: -0.8865877985954285
    3. 'break' → logprob: -3.1365878582000732
    4. 'continue' → logprob: -5.261587619781494
    5. 'heap' → logprob: -6.136587619781494
    6. '```' → logprob: -6.136587619781494
    7. '#' (adapté à ' #') → logprob: -6.386587619781494
    8. ' break' → logprob: -7.011587619781494
    9. '   ' → logprob: -7.261587619781494
    10. 'raise' → logprob: -7.761587619781494

Token 3384: ' ou' (ID: 2031)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8746082782745361
    2. 'break' → logprob: -1.2496082782745361
    3. '       ' → logprob: -1.7496082782745361
    4. 'continue' → logprob: -2.874608278274536
    5. '#' → logprob: -3.249608278274536
    6. 'return' → logprob: -4.624608039855957
    7. ' break' → logprob: -5.374608039855957
    8. '
' → logprob: -5.499608039855957
    9. ' continue' → logprob: -6.499608039855957
    10. 'pass' → logprob: -6.874608039855957

Token 3385: ' sas' (ID: 51515)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.011595440097153187
    2. ' break' → logprob: -4.636595249176025
    3. 'continue' → logprob: -7.386595249176025
    4. 'pass' → logprob: -7.511595249176025
    5. '#' → logprob: -8.136595726013184
    6. '   ' → logprob: -8.761595726013184
    7. 'import' → logprob: -10.136595726013184
    8. 'raise' → logprob: -10.511595726013184
    9. 'heap' → logprob: -10.761595726013184
    10. '```' → logprob: -10.761595726013184

Token 3386: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8170261383056641
    2. ':
' → logprob: -0.9420261383056641
    3. '       ' → logprob: -2.692026138305664
    4. ':' → logprob: -3.067026138305664
    5. 'continue' → logprob: -3.692026138305664
    6. '#' → logprob: -5.192026138305664
    7. '=' → logprob: -5.692026138305664
    8. '```' → logprob: -5.942026138305664
    9. '   ' → logprob: -6.067026138305664
    10. ',' → logprob: -6.067026138305664

Token 3387: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13040556013584137
    2. '           ' → logprob: -2.1304056644439697
    3. '```' → logprob: -6.630405426025391
    4. '        
' → logprob: -7.005405426025391
    5. '
' → logprob: -7.130405426025391
    6. 'continue' → logprob: -9.00540542602539
    7. '   ' → logprob: -9.13040542602539
    8. '               ' → logprob: -10.00540542602539
    9. '            
' → logprob: -10.63040542602539
    10. '\n' → logprob: -10.75540542602539

Token 3388: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4867604076862335
    2. '           ' → logprob: -1.3617603778839111
    3. '       ' → logprob: -2.111760377883911
    4. ' break' → logprob: -5.36176061630249
    5. 'return' → logprob: -6.23676061630249
    6. '               ' → logprob: -7.86176061630249
    7. '   ' → logprob: -7.98676061630249
    8. '```' → logprob: -8.361760139465332
    9. 'continue' → logprob: -8.486760139465332
    10. '#' (adapté à ' #') → logprob: -9.736760139465332

Token 3389: ' Pour' (ID: 13931)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.9070201516151428
    2. '           ' → logprob: -1.032020092010498
    3. '       ' → logprob: -2.032020092010498
    4. 'continue' → logprob: -3.032020092010498
    5. 'heap' → logprob: -3.782020092010498
    6. '#' → logprob: -4.157020092010498
    7. 'return' → logprob: -4.532020092010498
    8. '
' → logprob: -5.532020092010498
    9. '```' → logprob: -6.782020092010498
    10. 't' → logprob: -6.907020092010498

Token 3390: ' éviter' (ID: 64013)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0646647214889526
    2. '_' → logprob: -1.1896647214889526
    3. 'continue' → logprob: -2.064664840698242
    4. 'None' → logprob: -2.939664840698242
    5. 'break' → logprob: -3.689664840698242
    6. '_continue' → logprob: -3.939664840698242
    7. ' _' → logprob: -4.189664840698242
    8. '_now' → logprob: -4.564664840698242
    9. 'pass' → logprob: -4.689664840698242
    10. '#' → logprob: -4.689664840698242

Token 3391: ' un' (ID: 537)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.04717022180557251
    2. 'continue' → logprob: -4.297170162200928
    3. '           ' → logprob: -4.422170162200928
    4. '       ' → logprob: -4.672170162200928
    5. ' break' → logprob: -5.297170162200928
    6. '#' → logprob: -6.922170162200928
    7. 'import' → logprob: -7.047170162200928
    8. '   ' → logprob: -7.172170162200928
    9. '               ' → logprob: -7.297170162200928
    10. 'while' → logprob: -7.672170162200928

Token 3392: ' bloc' (ID: 51218)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.8635924458503723
    2. ' break' → logprob: -2.1135923862457275
    3. 'while' → logprob: -2.2385923862457275
    4. 'e' → logprob: -2.4885923862457275
    5. ' while' → logprob: -2.6135923862457275
    6. 'continue' → logprob: -3.2385923862457275
    7. '#' → logprob: -3.8635923862457275
    8. ' continue' → logprob: -3.9885923862457275
    9. '
' → logprob: -4.238592624664307
    10. ')' → logprob: -4.488592624664307

Token 3393: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.009236163459718227
    2. '       ' → logprob: -6.1342363357543945
    3. '           ' → logprob: -6.5092363357543945
    4. '   ' → logprob: -6.5092363357543945
    5. 'é' → logprob: -6.7592363357543945
    6. '```' → logprob: -6.8842363357543945
    7. ' ' → logprob: -8.134236335754395
    8. 'e' → logprob: -8.259236335754395
    9. '_' → logprob: -8.259236335754395
    10. '#' → logprob: -8.509236335754395

Token 3394: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16452226042747498
    2. ':
' → logprob: -2.289522171020508
    3. ':' → logprob: -3.914522171020508
    4. '               ' → logprob: -4.289522171020508
    5. ',' → logprob: -4.664522171020508
    6. '       ' → logprob: -6.664522171020508
    7. '                   ' → logprob: -6.914522171020508
    8. '                       ' → logprob: -7.039522171020508
    9. 'continue' → logprob: -7.414522171020508
    10. '
' → logprob: -7.539522171020508

Token 3395: ' on' (ID: 402)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.01670176163315773
    2. ' break' → logprob: -4.266701698303223
    3. '       ' → logprob: -6.266701698303223
    4. '           ' → logprob: -7.891701698303223
    5. 'current' → logprob: -8.516701698303223
    6. '#' → logprob: -10.016701698303223
    7. '	break' → logprob: -12.016701698303223
    8. 'return' → logprob: -12.141701698303223
    9. ' current' → logprob: -12.891701698303223
    10. '   ' → logprob: -13.141701698303223

Token 3396: ' avance' (ID: 81376)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.04916985332965851
    2. '           ' → logprob: -3.4241697788238525
    3. ' break' → logprob: -4.799170017242432
    4. '       ' → logprob: -5.799170017242432
    5. '   ' → logprob: -6.924170017242432
    6. '#' → logprob: -6.924170017242432
    7. '	break' → logprob: -8.299169540405273
    8. '               ' → logprob: -8.549169540405273
    9. 'raise' → logprob: -8.549169540405273
    10. 'heap' → logprob: -8.674169540405273

Token 3397: ' un' (ID: 537)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2568677067756653
    2. '           ' → logprob: -2.1318676471710205
    3. ' current' → logprob: -2.7568676471710205
    4. '       ' → logprob: -3.6318676471710205
    5. '               ' → logprob: -4.8818678855896
    6. '1' → logprob: -5.3818678855896
    7. '
' → logprob: -6.1318678855896
    8. '   ' → logprob: -7.1318678855896
    9. '```' → logprob: -7.8818678855896
    10. 'time' → logprob: -7.8818678855896

Token 3398: ' petit' (ID: 20577)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1598627120256424
    2. '       ' → logprob: -3.784862756729126
    3. '
' → logprob: -4.284862518310547
    4. 'break' → logprob: -4.534862518310547
    5. ' break' → logprob: -4.909862518310547
    6. 't' → logprob: -4.909862518310547
    7. ' peu' → logprob: -5.034862518310547
    8. '=' → logprob: -5.159862518310547
    9. ' +=' → logprob: -5.159862518310547
    10. '0' → logprob: -5.284862518310547

Token 3399: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.7275317907333374
    2. 'e' → logprob: -2.602531909942627
    3. ' ' → logprob: -2.602531909942627
    4. '+' → logprob: -2.727531909942627
    5. '```' → logprob: -2.852531909942627
    6. 'continue' → logprob: -2.977531909942627
    7. 't' → logprob: -3.227531909942627
    8. ' step' → logprob: -3.352531909942627
    9. 'step' → logprob: -3.477531909942627
    10. '   ' → logprob: -3.477531909942627

Token 3400: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5903354287147522
    2. ' +=' → logprob: -1.8403353691101074
    3. '=' → logprob: -2.2153353691101074
    4. ',' → logprob: -2.7153353691101074
    5. ' =' → logprob: -3.7153353691101074
    6. '+=' → logprob: -4.090335369110107
    7. ' de' → logprob: -4.465335369110107
    8. '1' → logprob: -4.590335369110107
    9. ',
' → logprob: -4.840335369110107
    10. '.' → logprob: -4.840335369110107

Token 3401: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11970902979373932
    2. '       ' → logprob: -2.494709014892578
    3. '
' → logprob: -3.744709014892578
    4. '            
' → logprob: -6.494709014892578
    5. '\n' → logprob: -6.619709014892578
    6. '        
' → logprob: -7.369709014892578
    7. '   ' → logprob: -7.494709014892578
    8. '               ' → logprob: -7.619709014892578
    9. '    
' → logprob: -7.744709014892578
    10. '  
' → logprob: -7.869709014892578

Token 3402: ' dt' (ID: 14008)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5704216957092285
    2. '           ' → logprob: -1.4454216957092285
    3. '
' → logprob: -1.9454216957092285
    4. ' current' → logprob: -3.0704216957092285
    5. '       ' → logprob: -5.0704216957092285
    6. '            
' → logprob: -6.8204216957092285
    7. '\n' → logprob: -7.6954216957092285
    8. '
' → logprob: -8.07042121887207
    9. '               ' → logprob: -8.44542121887207
    10. 'time' → logprob: -8.57042121887207

Token 3403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25200366973876953
    2. ' =' → logprob: -1.5020036697387695
    3. ' +=' → logprob: -10.00200366973877
    4. '+=' → logprob: -11.25200366973877
    5. '   ' → logprob: -12.12700366973877
    6. '           ' → logprob: -12.87700366973877
    7. '    ' → logprob: -13.00200366973877
    8. '       ' → logprob: -13.12700366973877
    9. '        ' → logprob: -13.75200366973877
    10. ' ' → logprob: -14.12700366973877

Token 3404: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06832768768072128
    2. '0' → logprob: -3.1933276653289795
    3. 'EPS' → logprob: -3.6933276653289795
    4. ' ' → logprob: -9.693327903747559
    5. ' EPS' → logprob: -9.818327903747559
    6. '   ' → logprob: -13.068327903747559
    7. 'eps' → logprob: -13.568327903747559
    8. '10' → logprob: -13.818327903747559
    9. 'min' → logprob: -15.693327903747559
    10. '=' → logprob: -15.693327903747559

Token 3405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08224347978830338
    2. '0' → logprob: -2.5822434425354004
    3. 'EPS' → logprob: -5.7072434425354
    4. ' ' → logprob: -11.207243919372559
    5. ' EPS' → logprob: -11.707243919372559
    6. '   ' → logprob: -12.582243919372559
    7. '10' → logprob: -14.707243919372559
    8. 'eps' → logprob: -15.207243919372559
    9. 'min' → logprob: -16.707242965698242
    10. '=' → logprob: -16.957242965698242

Token 3406: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.026597753167152405
    2. '.' → logprob: -3.651597738265991
    3. 'E' → logprob: -9.15159797668457
    4. ')' → logprob: -9.15159797668457
    5. '0' → logprob: -9.77659797668457
    6. '```' → logprob: -11.90159797668457
    7. '
' → logprob: -12.65159797668457
    8. '#' → logprob: -12.77659797668457
    9. '.e' → logprob: -13.02659797668457
    10. '*' → logprob: -13.40159797668457

Token 3407: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -16.25
    3. '   ' → logprob: -16.75
    4. '
' → logprob: -17.625
    5. '       ' → logprob: -18.625
    6. '−' → logprob: -18.75
    7. '^-' → logprob: -18.75
    8. '```' → logprob: -19.25
    9. '3' → logprob: -19.5
    10. '-
' → logprob: -19.625

Token 3408: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7307338118553162
    2. '6' → logprob: -1.105733871459961
    3. '4' → logprob: -2.480733871459961
    4. '5' → logprob: -2.855733871459961
    5. '2' → logprob: -4.355733871459961
    6. '9' → logprob: -4.480733871459961
    7. '7' → logprob: -4.605733871459961
    8. '8' → logprob: -4.730733871459961
    9. '06' → logprob: -6.730733871459961
    10. '1' → logprob: -7.480733871459961

Token 3409: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13466982543468475
    2. '       ' → logprob: -2.884669780731201
    3. ')
' → logprob: -3.134669780731201
    4. '           ' → logprob: -4.134669780731201
    5. ')' → logprob: -5.134669780731201
    6. '
' → logprob: -7.134669780731201
    7. ';
' → logprob: -7.384669780731201
    8. ';' → logprob: -7.384669780731201
    9. '#' → logprob: -7.634669780731201
    10. '\n' → logprob: -8.25967025756836

Token 3410: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43091824650764465
    2. '           ' → logprob: -1.0559182167053223
    3. '
' → logprob: -6.555918216705322
    4. 'current' → logprob: -7.305918216705322
    5. '   ' → logprob: -10.55591869354248
    6. '               ' → logprob: -10.68091869354248
    7. '        
' → logprob: -10.68091869354248
    8. ' current' → logprob: -10.68091869354248
    9. '                   ' → logprob: -12.05591869354248
    10. '            
' → logprob: -12.18091869354248

Token 3411: ' for' (ID: 395)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.010222883895039558
    2. ' current' → logprob: -4.885222911834717
    3. '           ' → logprob: -6.385222911834717
    4. '       ' → logprob: -7.010222911834717
    5. '   ' → logprob: -11.635222434997559
    6. 'while' → logprob: -12.135222434997559
    7. '
' → logprob: -12.510222434997559
    8. '```' → logprob: -13.010222434997559
    9. '	current' → logprob: -13.385222434997559
    10. '               ' → logprob: -14.635222434997559

Token 3412: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0882081612944603
    2. 'i' → logprob: -2.9632081985473633
    3. 'ship' → logprob: -3.5882081985473633
    4. ' s' → logprob: -5.713208198547363
    5. '_' → logprob: -7.588208198547363
    6. '_s' → logprob: -8.088208198547363
    7. ' ship' → logprob: -8.338208198547363
    8. '_ship' → logprob: -8.713208198547363
    9. 'j' → logprob: -8.838208198547363
    10. '_i' → logprob: -9.338208198547363

Token 3413: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003214665222913027
    2. 'in' → logprob: -5.7532148361206055
    3. '   ' → logprob: -11.628214836120605
    4. ',' → logprob: -12.003214836120605
    5. '    ' → logprob: -12.253214836120605
    6. 's' → logprob: -12.378214836120605
    7. '_' → logprob: -13.003214836120605
    8. '	in' → logprob: -13.378214836120605
    9. '       ' → logprob: -13.628214836120605
    10. ' i' → logprob: -13.878214836120605

Token 3414: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.431207682704553e-05
    2. ' range' → logprob: -10.250054359436035
    3. 'ships' → logprob: -11.000054359436035
    4. '[' → logprob: -14.000054359436035
    5. '   ' → logprob: -14.875054359436035
    6. '0' → logprob: -16.00005340576172
    7. '  ' → logprob: -16.25005340576172
    8. 'ship' → logprob: -16.62505340576172
    9. '	range' → logprob: -16.62505340576172
    10. 'event' → logprob: -16.75005340576172

Token 3415: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.035448554903268814
    2. '(M' → logprob: -3.4104485511779785
    3. 'range' → logprob: -6.7854485511779785
    4. '   ' → logprob: -7.6604485511779785
    5. '           ' → logprob: -9.285449028015137
    6. 'len' → logprob: -10.285449028015137
    7. '       ' → logprob: -10.785449028015137
    8. ' M' → logprob: -11.785449028015137
    9. ')' → logprob: -11.785449028015137
    10. '          ' → logprob: -12.410449028015137

Token 3416: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0022658745292574167
    2. '       ' → logprob: -7.002265930175781
    3. '):' → logprob: -7.252265930175781
    4. '           ' → logprob: -7.627265930175781
    5. '   ' → logprob: -9.877265930175781
    6. '               ' → logprob: -10.502265930175781
    7. '):
' → logprob: -10.752265930175781
    8. ':
' → logprob: -10.877265930175781
    9. ']:
' → logprob: -11.502265930175781
    10. ' ):
' → logprob: -11.627265930175781

Token 3417: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5381521582603455
    2. '               ' → logprob: -1.2881522178649902
    3. '           ' → logprob: -2.6631522178649902
    4. ' ships' → logprob: -3.4131522178649902
    5. '   ' → logprob: -4.16315221786499
    6. 'ships' → logprob: -4.66315221786499
    7. '```' → logprob: -4.91315221786499
    8. ' if' → logprob: -6.53815221786499
    9. '	       ' → logprob: -7.28815221786499
    10. '<|end|>' → logprob: -7.28815221786499

Token 3418: ' s' (ID: 265)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.9902558326721191
    2. ' ships' → logprob: -1.1152558326721191
    3. '               ' → logprob: -1.4902558326721191
    4. '           ' → logprob: -3.490255832672119
    5. '   ' → logprob: -3.865255832672119
    6. ' if' → logprob: -4.990255832672119
    7. 'if' → logprob: -5.115255832672119
    8. '       ' → logprob: -5.365255832672119
    9. '                   ' → logprob: -5.490255832672119
    10. '```' → logprob: -7.240255832672119

Token 3419: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1678515523672104
    2. '.' → logprob: -2.542851448059082
    3. 's' → logprob: -3.542851448059082
    4. '               ' → logprob: -4.417851448059082
    5. '       ' → logprob: -4.792851448059082
    6. '                   ' → logprob: -4.792851448059082
    7. '           ' → logprob: -5.417851448059082
    8. '.s' → logprob: -5.792851448059082
    9. '   ' → logprob: -5.917851448059082
    10. ' .' → logprob: -6.542851448059082

Token 3420: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.0029022356029599905
    2. ' ships' → logprob: -5.877902030944824
    3. 's' → logprob: -9.377902030944824
    4. '   ' → logprob: -11.627902030944824
    5. ' s' → logprob: -13.502902030944824
    6. '           ' → logprob: -14.502902030944824
    7. 'ship' → logprob: -14.752902030944824
    8. '       ' → logprob: -14.877902030944824
    9. 'shops' → logprob: -15.502902030944824
    10. 'hips' → logprob: -15.627902030944824

Token 3421: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.41866585687967e-06
    2. '[' → logprob: -11.875008583068848
    3. 's' → logprob: -14.375008583068848
    4. '[
' → logprob: -15.625008583068848
    5. 'i' → logprob: -15.875008583068848
    6. ' [' → logprob: -16.25000762939453
    7. '[s' → logprob: -16.62500762939453
    8. '   ' → logprob: -16.62500762939453
    9. '[j' → logprob: -16.87500762939453
    10. '               ' → logprob: -17.12500762939453

Token 3422: ']
' (ID: 1592)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00464076129719615
    2. '.' → logprob: -6.754640579223633
    3. '               ' → logprob: -6.754640579223633
    4. ']' → logprob: -7.754640579223633
    5. ').' → logprob: -8.129640579223633
    6. '                   ' → logprob: -8.129640579223633
    7. '           ' → logprob: -8.129640579223633
    8. ']
' → logprob: -8.379640579223633
    9. '       ' → logprob: -8.629640579223633
    10. 's' → logprob: -8.879640579223633

Token 3423: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7463191747665405
    2. '           ' → logprob: -0.9963191747665405
    3. '                   ' → logprob: -1.9963191747665405
    4. '       ' → logprob: -4.87131929397583
    5. '
' → logprob: -5.62131929397583
    6. ' if' → logprob: -5.74631929397583
    7. '   ' → logprob: -6.49631929397583
    8. '```' → logprob: -6.49631929397583
    9. '                       ' → logprob: -7.12131929397583
    10. ':
' → logprob: -8.121318817138672

Token 3424: ' if' (ID: 538)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9525117874145508
    2. ' if' → logprob: -1.4525117874145508
    3. 'if' (adapté à ' if') → logprob: -1.7025117874145508
    4. '               ' → logprob: -2.452511787414551
    5. ' s' → logprob: -2.577511787414551
    6. '                   ' → logprob: -3.702511787414551
    7. '           ' → logprob: -5.452511787414551
    8. '   ' → logprob: -5.952511787414551
    9. '```' → logprob: -6.327511787414551
    10. '                       ' → logprob: -7.327511787414551

Token 3425: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026434296742081642
    2. ' s' → logprob: -3.6514341831207275
    3. '   ' → logprob: -9.901433944702148
    4. 'not' → logprob: -10.526433944702148
    5. 'abs' → logprob: -10.901433944702148
    6. '           ' → logprob: -11.276433944702148
    7. ' not' → logprob: -11.776433944702148
    8. '       ' → logprob: -12.526433944702148
    9. '               ' → logprob: -12.526433944702148
    10. '	s' → logprob: -13.526433944702148

Token 3426: '.done' (ID: 64548)
  Prédit: '.speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.005499599035829306
    2. '.' → logprob: -5.630499362945557
    3. '.s' → logprob: -7.005499362945557
    4. ' .' → logprob: -7.380499362945557
    5. '.velocity' → logprob: -9.130499839782715
    6. '.position' → logprob: -10.505499839782715
    7. '.pos' → logprob: -10.880499839782715
    8. '.v' → logprob: -10.880499839782715
    9. '.score' → logprob: -11.130499839782715
    10. '.has' → logprob: -11.255499839782715

Token 3427: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12791849672794342
    2. ' and' → logprob: -3.1279184818267822
    3. ':
' → logprob: -4.002918720245361
    4. '.pos' → logprob: -4.127918720245361
    5. 'and' → logprob: -4.377918720245361
    6. ' or' → logprob: -4.877918720245361
    7. '.' → logprob: -5.002918720245361
    8. '               ' → logprob: -5.252918720245361
    9. '                  ' → logprob: -5.877918720245361
    10. '                       ' → logprob: -6.002918720245361

Token 3428: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009941774420440197
    2. ' and' → logprob: -6.009941577911377
    3. ':
' → logprob: -6.009941577911377
    4. '               ' → logprob: -6.134941577911377
    5. ' or' → logprob: -6.759941577911377
    6. '                       ' → logprob: -7.759941577911377
    7. '           ' → logprob: -7.884941577911377
    8. ':' → logprob: -8.134942054748535
    9. '```' → logprob: -8.634942054748535
    10. '                  ' → logprob: -8.884942054748535

Token 3429: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.9685019254684448
    2. '                   ' → logprob: -1.0935019254684448
    3. 's' → logprob: -2.2185020446777344
    4. ' continue' → logprob: -2.7185020446777344
    5. '               ' → logprob: -2.8435020446777344
    6. ' s' → logprob: -3.8435020446777344
    7. '                       ' → logprob: -3.9685020446777344
    8. '   ' → logprob: -5.468502044677734
    9. '           ' → logprob: -5.968502044677734
    10. ' ' → logprob: -7.093502044677734

Token 3430: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024833492934703827
    2. '
' → logprob: -4.649833679199219
    3. '                   ' → logprob: -4.649833679199219
    4. '           ' → logprob: -5.524833679199219
    5. ' if' → logprob: -8.024833679199219
    6. '                       ' → logprob: -8.399833679199219
    7. '   ' → logprob: -9.024833679199219
    8. 's' → logprob: -9.149833679199219
    9. 'if' → logprob: -9.149833679199219
    10. '                
' → logprob: -9.524833679199219

Token 3431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020013993605971336
    2. '                   ' → logprob: -4.270013809204102
    3. '           ' → logprob: -6.270013809204102
    4. '```' → logprob: -6.270013809204102
    5. '
' → logprob: -7.770013809204102
    6. '                       ' → logprob: -8.020013809204102
    7. '``' → logprob: -8.145013809204102
    8. 's' → logprob: -8.395013809204102
    9. ' if' → logprob: -8.770013809204102
    10. ' s' → logprob: -8.895013809204102

Token 3432: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.6395083069801331
    2. '               ' → logprob: -1.1395082473754883
    3. 'if' → logprob: -2.7645082473754883
    4. '                   ' → logprob: -3.0145082473754883
    5. ' s' → logprob: -3.8895082473754883
    6. ' if' → logprob: -4.264508247375488
    7. '           ' → logprob: -5.889508247375488
    8. '                       ' → logprob: -6.889508247375488
    9. '   ' → logprob: -7.264508247375488
    10. '       ' → logprob: -8.389508247375488

Token 3433: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0035935405176132917
    2. '.speed' → logprob: -6.128593444824219
    3. '.' → logprob: -6.878593444824219
    4. '.position' → logprob: -8.878593444824219
    5. '               ' → logprob: -9.378593444824219
    6. 'pos' → logprob: -10.003593444824219
    7. '.s' → logprob: -10.128593444824219
    8. ' .' → logprob: -10.878593444824219
    9. '                   ' → logprob: -11.003593444824219
    10. ').' → logprob: -11.878593444824219

Token 3434: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.020603785291314125
    2. ' +=' → logprob: -3.895603895187378
    3. '+' → logprob: -10.270604133605957
    4. '=' → logprob: -10.770604133605957
    5. ']+=' → logprob: -13.020604133605957
    6. '+=(' → logprob: -13.145604133605957
    7. '   ' → logprob: -14.520604133605957
    8. '+="' → logprob: -15.270604133605957
    9. '+='' → logprob: -15.395604133605957
    10. '       ' → logprob: -15.645604133605957

Token 3435: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0380745455622673
    2. ' s' → logprob: -3.288074493408203
    3. 'dt' → logprob: -10.788074493408203
    4. '0' → logprob: -12.163074493408203
    5. '1' → logprob: -12.413074493408203
    6. '(s' → logprob: -13.538074493408203
    7. ' dt' → logprob: -14.038074493408203
    8. '   ' → logprob: -15.038074493408203
    9. ' ' → logprob: -15.163074493408203
    10. '	s' → logprob: -15.788074493408203

Token 3436: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.007916774600744247
    2. 'peed' → logprob: -5.6329169273376465
    3. 'speed' → logprob: -6.0079169273376465
    4. 's' → logprob: -6.6329169273376465
    5. '[i' → logprob: -7.7579169273376465
    6. '.s' → logprob: -9.632916450500488
    7. '	speed' → logprob: -10.882916450500488
    8. '.time' → logprob: -12.132916450500488
    9. 'i' → logprob: -12.382916450500488
    10. '_speed' → logprob: -13.007916450500488

Token 3437: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.126929372549057
    2. ' *' → logprob: -2.12692928314209
    3. '   ' → logprob: -14.37692928314209
    4. ' ' → logprob: -14.75192928314209
    5. ' ' → logprob: -16.126930236816406
    6. '*
' → logprob: -16.376930236816406
    7. '	' → logprob: -17.126930236816406
    8. '       ' → logprob: -17.376930236816406
    9. '```' → logprob: -17.376930236816406
    10. '**' → logprob: -17.626930236816406

Token 3438: ' dt' (ID: 14008)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.023247575387358665
    2. ' dt' → logprob: -3.773247480392456
    3. '(dt' → logprob: -14.273247718811035
    4. '1' → logprob: -14.523247718811035
    5. ' ' → logprob: -14.898247718811035
    6. '   ' → logprob: -15.023247718811035
    7. 'd' → logprob: -15.898247718811035
    8. '_dt' → logprob: -16.27324676513672
    9. '  ' → logprob: -17.14824676513672
    10. '.dt' → logprob: -17.14824676513672

Token 3439: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5954384207725525
    2. '<|end|>' → logprob: -1.2204384803771973
    3. '
' → logprob: -2.4704384803771973
    4. '\n' → logprob: -3.3454384803771973
    5. '```' → logprob: -4.470438480377197
    6. '               ' → logprob: -4.470438480377197
    7. '            
' → logprob: -5.720438480377197
    8. '       ' → logprob: -6.595438480377197
    9. '<|end|>' → logprob: -6.720438480377197
    10. '                   ' → logprob: -6.970438480377197

Token 3441: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.028117362409830093
    2. '
' → logprob: -3.9031174182891846
    3. 'continue' → logprob: -5.6531171798706055
    4. '           ' → logprob: -6.5281171798706055
    5. '       ' → logprob: -6.6531171798706055
    6. ' current' → logprob: -6.9031171798706055
    7. '
' → logprob: -8.653117179870605
    8. '\n' → logprob: -10.903117179870605
    9. 'for' → logprob: -10.903117179870605
    10. 'dt' → logprob: -11.403117179870605

Token 3442: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.1756367712223437e-05
    2. '_' → logprob: -11.875011444091797
    3. ' _' → logprob: -13.250011444091797
    4. '_line' → logprob: -13.375011444091797
    5. 'time' → logprob: -15.125011444091797
    6. '_times' → logprob: -15.375011444091797
    7. 'Time' → logprob: -15.500011444091797
    8. '_t' → logprob: -15.750011444091797
    9. '_TIME' → logprob: -16.250011444091797
    10. '```' → logprob: -16.500011444091797

Token 3443: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1269725263118744
    2. ' +=' → logprob: -2.1269724369049072
    3. '+' → logprob: -10.376972198486328
    4. ']+=' → logprob: -11.876972198486328
    5. '   ' → logprob: -13.751972198486328
    6. '=' → logprob: -13.751972198486328
    7. '+='' → logprob: -14.001972198486328
    8. '+=(' → logprob: -14.126972198486328
    9. '    ' → logprob: -14.376972198486328
    10. '+="' → logprob: -14.876972198486328

Token 3444: ' dt' (ID: 14008)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.0019287518225610256
    2. ' dt' → logprob: -6.251928806304932
    3. '1' → logprob: -16.126928329467773
    4. '0' → logprob: -17.876928329467773
    5. '(dt' → logprob: -19.001928329467773
    6. ' ' → logprob: -19.126928329467773
    7. 'd' → logprob: -19.501928329467773
    8. '_dt' → logprob: -19.876928329467773
    9. '.dt' → logprob: -20.001928329467773
    10. '   ' → logprob: -20.626928329467773

Token 3445: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10348231345415115
    2. 'continue' → logprob: -2.478482246398926
    3. '<|end|>' → logprob: -5.103482246398926
    4. ' continue' → logprob: -5.228482246398926
    5. '           ' → logprob: -6.853482246398926
    6. '	continue' → logprob: -7.353482246398926
    7. '	' → logprob: -7.728482246398926
    8. '   ' → logprob: -8.728482246398926
    9. 'Continue' → logprob: -9.228482246398926
    10. ')' → logprob: -9.353482246398926

Token 3446: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11221586167812347
    2. 'continue' → logprob: -2.612215757369995
    3. '           ' → logprob: -4.237215995788574
    4. '<|end|>' → logprob: -4.737215995788574
    5. '
' → logprob: -5.737215995788574
    6. ' continue' → logprob: -6.112215995788574
    7. '```' → logprob: -6.862215995788574
    8. '        
' → logprob: -6.862215995788574
    9. '   ' → logprob: -7.487215995788574
    10. '	continue' → logprob: -8.362215995788574

Token 3447: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.06340821832418442
    2. '           ' → logprob: -3.563408136367798
    3. 'adjust' → logprob: -4.063408374786377
    4. '       ' → logprob: -4.188408374786377
    5. 'for' → logprob: -8.063407897949219
    6. ' continue' → logprob: -8.563407897949219
    7. '   ' → logprob: -9.063407897949219
    8. '#' → logprob: -10.188407897949219
    9. '```' → logprob: -10.813407897949219
    10. 'import' → logprob: -10.938407897949219

Token 3448: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1630527228116989
    2. '(' → logprob: -2.913052797317505
    3. ')' → logprob: -3.163052797317505
    4. '```' → logprob: -4.413052558898926
    5. '_' → logprob: -4.913052558898926
    6. '(
' → logprob: -5.163052558898926
    7. '   ' → logprob: -5.288052558898926
    8. '
' → logprob: -5.663052558898926
    9. ',' → logprob: -5.788052558898926
    10. ')
' → logprob: -5.913052558898926

Token 3449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22410878539085388
    2. 't' → logprob: -2.5991086959838867
    3. '_,' → logprob: -3.0991086959838867
    4. '(' → logprob: -3.4741086959838867
    5. 'time' → logprob: -3.5991086959838867
    6. ',' → logprob: -5.474108695983887
    7. '   ' → logprob: -5.849108695983887
    8. 'event' → logprob: -5.849108695983887
    9. '```' → logprob: -5.849108695983887
    10. '(_,' → logprob: -6.099108695983887

Token 3450: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.39841794967651367
    2. 't' → logprob: -1.5234179496765137
    3. '(time' → logprob: -2.7734179496765137
    4. '       ' → logprob: -3.8984179496765137
    5. '(' → logprob: -4.523417949676514
    6. '(t' → logprob: -4.773417949676514
    7. '   ' → logprob: -5.773417949676514
    8. '```' → logprob: -6.898417949676514
    9. 'current' → logprob: -7.148417949676514
    10. 'next' → logprob: -7.148417949676514

Token 3451: ' Pr' (ID: 2284)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.14718252420425415
    2. 't' → logprob: -2.1471824645996094
    3. 'current' → logprob: -4.272182464599609
    4. '(time' → logprob: -6.397182464599609
    5. 'next' → logprob: -6.897182464599609
    6. '   ' → logprob: -7.272182464599609
    7. 'cur' → logprob: -7.647182464599609
    8. '(current' → logprob: -7.772182464599609
    9. '       ' → logprob: -7.897182464599609
    10. 'curr' → logprob: -7.897182464599609

Token 3452: 'endre' (ID: 9574)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éc' → logprob: -1.0505858659744263
    2. 'ec' → logprob: -1.9255858659744263
    3. 'e' → logprob: -2.1755857467651367
    4. 'esent' → logprob: -2.6755857467651367
    5. 'oc' → logprob: -2.8005857467651367
    6. 'ev' → logprob: -2.9255857467651367
    7. 'event' → logprob: -3.0505857467651367
    8. 'é' → logprob: -3.0505857467651367
    9. 'int' → logprob: -3.6755857467651367
    10. 'end' → logprob: -5.050585746765137

Token 3453: ' év' (ID: 23692)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.48218944668769836
    2. 'event' → logprob: -1.357189416885376
    3. 'next' → logprob: -2.607189416885376
    4. 't' → logprob: -4.107189655303955
    5. 'current' → logprob: -4.607189655303955
    6. 'heap' → logprob: -5.232189655303955
    7. '   ' → logprob: -5.357189655303955
    8. '```' → logprob: -5.732189655303955
    9. 'he' → logprob: -6.107189655303955
    10. 'temps' → logprob: -6.607189655303955

Token 3454: 'ènement' (ID: 132303)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.05345536395907402
    2. '_queue' → logprob: -3.678455352783203
    3. 'e' → logprob: -4.553455352783203
    4. 't' → logprob: -5.803455352783203
    5. 'u' → logprob: -6.178455352783203
    6. 'que' → logprob: -6.553455352783203
    7. 'ue' → logprob: -6.678455352783203
    8. 'en' → logprob: -6.678455352783203
    9. 'queue' → logprob: -6.928455352783203
    10. 'nt' → logprob: -7.053455352783203

Token 3455: ' suivant' (ID: 68705)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6160398125648499
    2. 'time' → logprob: -1.616039752960205
    3. 'event' → logprob: -1.866039752960205
    4. '=' → logprob: -3.241039752960205
    5. 'heap' → logprob: -4.366039752960205
    6. '_time' → logprob: -4.616039752960205
    7. ',event' → logprob: -4.616039752960205
    8. ' =' → logprob: -4.741039752960205
    9. '_,' → logprob: -5.116039752960205
    10. 't' → logprob: -5.241039752960205

Token 3456: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8327012658119202
    2. ',' → logprob: -1.5827012062072754
    3. 'event' → logprob: -2.2077012062072754
    4. '_,' → logprob: -2.4577012062072754
    5. 'time' → logprob: -2.8327012062072754
    6. '=' → logprob: -3.4577012062072754
    7. 't' → logprob: -3.7077012062072754
    8. '_time' → logprob: -4.207701206207275
    9. ' =' → logprob: -5.082701206207275
    10. '```' → logprob: -5.457701206207275

Token 3457: '       ' (ID: 309)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.143823266029358
    2. 'event' → logprob: -1.143823266029358
    3. ',' → logprob: -1.518823266029358
    4. '```' → logprob: -3.0188231468200684
    5. 'heap' → logprob: -3.6438231468200684
    6. 't' → logprob: -4.268823146820068
    7. 'evt' → logprob: -4.393823146820068
    8. 'next' → logprob: -4.393823146820068
    9. ',event' → logprob: -5.143823146820068
    10. '_,' → logprob: -5.518823146820068

Token 3458: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.11124860495328903
    2. 't' → logprob: -2.48624849319458
    3. 'event' → logprob: -4.61124849319458
    4. 'next' → logprob: -5.48624849319458
    5. '```' → logprob: -5.73624849319458
    6. 'heap' → logprob: -6.86124849319458
    7. 'evt' → logprob: -6.98624849319458
    8. '(time' → logprob: -7.98624849319458
    9. 'ev' → logprob: -8.111248970031738
    10. 'et' → logprob: -8.111248970031738

Token 3459: '_ev' (ID: 120966)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006114717107266188
    2. ',event' → logprob: -5.506114482879639
    3. '_,' → logprob: -7.006114482879639
    4. ',next' → logprob: -7.256114482879639
    5. '=' → logprob: -8.631114959716797
    6. '_next' → logprob: -9.006114959716797
    7. 'event' → logprob: -10.881114959716797
    8. 'next' → logprob: -10.881114959716797
    9. ' ,' → logprob: -11.006114959716797
    10. '_event' → logprob: -11.256114959716797

Token 3460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04087229073047638
    2. '_,' → logprob: -3.66587233543396
    3. '_' → logprob: -5.165872097015381
    4. ',
' → logprob: -5.290872097015381
    5. '=' → logprob: -6.290872097015381
    6. ' ,' → logprob: -7.290872097015381
    7. ',_' → logprob: -8.415872573852539
    8. ' =' → logprob: -8.665872573852539
    9. '   ' → logprob: -8.915872573852539
    10. 'u' → logprob: -9.165872573852539

Token 3461: ' ev' (ID: 5332)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.004684545565396547
    2. 'etype' → logprob: -5.7546844482421875
    3. ' ev' → logprob: -6.6296844482421875
    4. 'et' → logprob: -9.504684448242188
    5. 'event' → logprob: -9.504684448242188
    6. 'evt' → logprob: -11.129684448242188
    7. '	ev' → logprob: -11.504684448242188
    8. '_ev' → logprob: -11.754684448242188
    9. 'e' → logprob: -13.879684448242188
    10. 'type' → logprob: -14.004684448242188

Token 3462: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.00655633257701993
    2. '_' → logprob: -5.256556510925293
    3. 'type' → logprob: -7.631556510925293
    4. ',' → logprob: -8.006556510925293
    5. ',_' → logprob: -9.006556510925293
    6. '_,' → logprob: -9.631556510925293
    7. 'ype' → logprob: -9.631556510925293
    8. 'Type' → logprob: -9.631556510925293
    9. '_t' → logprob: -10.506556510925293
    10. ' _' → logprob: -10.756556510925293

Token 3463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00707787973806262
    2. '=' → logprob: -5.132077693939209
    3. ' =' → logprob: -7.007077693939209
    4. ' ,' → logprob: -8.507078170776367
    5. '<|end|>' → logprob: -11.007078170776367
    6. ',
' → logprob: -11.757078170776367
    7. ')' → logprob: -12.507078170776367
    8. '       ' → logprob: -13.132078170776367
    9. '_,' → logprob: -13.257078170776367
    10. ',user' → logprob: -13.882078170776367

Token 3464: ' param' (ID: 3802)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.3138527572154999
    2. 'params' → logprob: -1.3138527870178223
    3. ' param' → logprob: -7.813852787017822
    4. 'ev' → logprob: -9.063852310180664
    5. ' params' → logprob: -9.688852310180664
    6. 'parameters' → logprob: -12.563852310180664
    7. '(param' → logprob: -13.938852310180664
    8. 'data' → logprob: -14.063852310180664
    9. 'details' → logprob: -14.313852310180664
    10. 'payload' → logprob: -14.313852310180664

Token 3465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07894377410411835
    2. ' =' → logprob: -2.5789437294006348
    3. '       ' → logprob: -10.453944206237793
    4. '=
' → logprob: -11.078944206237793
    5. '   ' → logprob: -12.453944206237793
    6. ',' → logprob: -13.703944206237793
    7. ' ' → logprob: -14.453944206237793
    8. '        ' → logprob: -14.453944206237793
    9. ' =
' → logprob: -14.453944206237793
    10. '	' → logprob: -14.703944206237793

Token 3466: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -3.4881879400927573e-05
    2. 'event' → logprob: -10.750035285949707
    3. 'he' → logprob: -11.875035285949707
    4. ' heap' → logprob: -12.000035285949707
    5. '   ' → logprob: -15.125035285949707
    6. '
' → logprob: -18.25003433227539
    7. 'queue' → logprob: -19.37503433227539
    8. '```' → logprob: -19.75003433227539
    9. '(heap' → logprob: -20.25003433227539
    10. '.heap' → logprob: -20.37503433227539

Token 3467: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0001354824344161898
    2. '[' → logprob: -9.12513542175293
    3. 'replace' → logprob: -11.37513542175293
    4. '[
' → logprob: -12.50013542175293
    5. 'queue' → logprob: -12.50013542175293
    6. 'ify' → logprob: -12.62513542175293
    7. 't' → logprob: -14.25013542175293
    8. '```' → logprob: -14.37513542175293
    9. '   ' → logprob: -14.62513542175293
    10. '       ' → logprob: -14.87513542175293

Token 3468: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -6.098748053773306e-05
    2. 'he' → logprob: -11.00006103515625
    3. 'q' → logprob: -11.12506103515625
    4. '.heap' → logprob: -11.25006103515625
    5. '.' → logprob: -12.62506103515625
    6. ' .' → logprob: -12.87506103515625
    7. ' he' → logprob: -13.00006103515625
    8. '```' → logprob: -13.25006103515625
    9. '   ' → logprob: -13.37506103515625
    10. 'app' → logprob: -13.62506103515625

Token 3469: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.872261317563243e-05
    2. 'pp' → logprob: -10.000059127807617
    3. 'ap' → logprob: -12.375059127807617
    4. 'pop' → logprob: -13.375059127807617
    5. 'op' → logprob: -13.500059127807617
    6. '[' → logprob: -13.625059127807617
    7. 'p' → logprob: -13.625059127807617
    8. '_app' → logprob: -14.000059127807617
    9. 'q' → logprob: -14.250059127807617
    10. '...' → logprob: -14.500059127807617

Token 3470: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.08888798952102661
    2. 'ush' → logprob: -2.588887929916382
    3. 'app' → logprob: -5.463888168334961
    4. 'e' → logprob: -6.338888168334961
    5. 'q' → logprob: -6.713888168334961
    6. 'ap' → logprob: -6.838888168334961
    7. '       ' → logprob: -7.463888168334961
    8. 'pop' → logprob: -8.213888168334961
    9. 'u' → logprob: -8.713888168334961
    10. 'push' → logprob: -8.713888168334961

Token 3471: '(event' (ID: 11536)
  Prédit: '(event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(event' → logprob: -0.002239708323031664
    2. 'event' → logprob: -6.25223970413208
    3. '(' → logprob: -8.127240180969238
    4. ' (' → logprob: -12.252240180969238
    5. ',event' → logprob: -12.252240180969238
    6. ' event' → logprob: -12.502240180969238
    7. '(
' → logprob: -14.127240180969238
    8. ',' → logprob: -14.252240180969238
    9. '   ' → logprob: -15.002240180969238
    10. '[event' → logprob: -15.127240180969238

Token 3472: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.027687275782227516
    2. '_event' → logprob: -3.9026873111724854
    3. 'event' → logprob: -5.027687072753906
    4. '(event' → logprob: -7.902687072753906
    5. 'queue' → logprob: -9.402687072753906
    6. ')' → logprob: -10.027687072753906
    7. '_' → logprob: -11.027687072753906
    8. ')_' → logprob: -11.152687072753906
    9. '[event' → logprob: -11.402687072753906
    10. ')
' → logprob: -12.277687072753906

Token 3473: ')

' (ID: 1029)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1047126054763794
    2. '        
' → logprob: -1.2297126054763794
    3. ')' → logprob: -1.3547126054763794
    4. '
' → logprob: -3.22971248626709
    5. '<|end|>' → logprob: -4.10471248626709
    6. '    
' → logprob: -4.47971248626709
    7. '[' → logprob: -4.60471248626709
    8. ' 
' → logprob: -4.72971248626709
    9. '  
' → logprob: -5.35471248626709
    10. ')
' → logprob: -5.35471248626709

Token 3474: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29929763078689575
    2. '       ' → logprob: -2.299297571182251
    3. ' if' → logprob: -2.674297571182251
    4. '
' → logprob: -2.924297571182251
    5. '        
' → logprob: -4.17429780960083
    6. '   ' → logprob: -5.04929780960083
    7. '```' → logprob: -5.42429780960083
    8. ':
' → logprob: -5.54929780960083
    9. ' 
' → logprob: -5.92429780960083
    10. '    
' → logprob: -6.92429780960083

Token 3475: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023508328944444656
    2. 'current' → logprob: -4.273508548736572
    3. '#' (adapté à ' #') → logprob: -4.773508548736572
    4. '       ' → logprob: -7.523508548736572
    5. 'dt' → logprob: -8.648508071899414
    6. '   ' → logprob: -9.773508071899414
    7. 'delta' → logprob: -10.648508071899414
    8. 'while' → logprob: -10.773508071899414
    9. ' if' → logprob: -11.023508071899414
    10. '```' → logprob: -11.523508071899414

Token 3476: ' Av' (ID: 7541)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07131804525852203
    2. 'current' → logprob: -2.8213181495666504
    3. '#' → logprob: -5.07131814956665
    4. '   ' → logprob: -6.94631814956665
    5. 'dt' → logprob: -6.94631814956665
    6. 'while' → logprob: -7.57131814956665
    7. ' if' → logprob: -8.446317672729492
    8. '       ' → logprob: -9.196317672729492
    9. 'delta' → logprob: -9.196317672729492
    10. 'time' → logprob: -9.446317672729492

Token 3477: 'ancer' (ID: 13358)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.4311143457889557
    2. 'ancer' → logprob: -1.1811143159866333
    3. 'a' → logprob: -3.181114435195923
    4. '_' → logprob: -7.181114196777344
    5. 'anc' → logprob: -8.056114196777344
    6. 'ancé' → logprob: -8.306114196777344
    7. 'anç' → logprob: -8.806114196777344
    8. 'e' → logprob: -9.431114196777344
    9. 'ancée' → logprob: -10.431114196777344
    10. 'an' → logprob: -10.556114196777344

Token 3478: ' le' (ID: 505)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03999017924070358
    2. 'time' → logprob: -4.039989948272705
    3. '       ' → logprob: -4.664989948272705
    4. 'to' → logprob: -5.289989948272705
    5. ' current' → logprob: -5.664989948272705
    6. '   ' → logprob: -6.414989948272705
    7. 'if' → logprob: -7.789989948272705
    8. '```' → logprob: -8.164990425109863
    9. ' to' → logprob: -8.289990425109863
    10. '
' → logprob: -8.539990425109863

Token 3479: ' temps' (ID: 11160)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0019188835285604
    2. ' current' → logprob: -6.751918792724609
    3. '_current' → logprob: -7.376918792724609
    4. 'time' → logprob: -9.37691879272461
    5. '_' → logprob: -11.00191879272461
    6. '_time' → logprob: -11.12691879272461
    7. '   ' → logprob: -13.25191879272461
    8. '
' → logprob: -13.87691879272461
    9. 'curr' → logprob: -14.12691879272461
    10. 'for' → logprob: -14.12691879272461

Token 3480: '...
' (ID: 4908)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7464742660522461
    2. '=' → logprob: -1.496474266052246
    3. 'current' → logprob: -1.871474266052246
    4. 'dt' → logprob: -3.121474266052246
    5. 'if' → logprob: -3.621474266052246
    6. '
' → logprob: -3.871474266052246
    7. '```' → logprob: -4.121474266052246
    8. 'while' → logprob: -4.371474266052246
    9. '+=' → logprob: -4.621474266052246
    10. '        
' → logprob: -5.121474266052246

Token 3481: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3975602686405182
    2. '       ' → logprob: -1.8975602388381958
    3. '
' → logprob: -2.2725603580474854
    4. '        
' → logprob: -3.3975603580474854
    5. '```' → logprob: -4.397560119628906
    6. ' current' → logprob: -4.522560119628906
    7. ' 
' → logprob: -5.147560119628906
    8. 'if' → logprob: -5.147560119628906
    9. '   ' → logprob: -6.022560119628906
    10. '    
' → logprob: -6.647560119628906

Token 3482: ' dt' (ID: 14008)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0517110750079155
    2. 'dt' (adapté à ' dt') → logprob: -3.801711082458496
    3. 'for' → logprob: -4.301711082458496
    4. 'if' → logprob: -4.801711082458496
    5. 'while' → logprob: -5.551711082458496
    6. '       ' → logprob: -7.051711082458496
    7. 'delta' → logprob: -7.551711082458496
    8. '#' → logprob: -8.051711082458496
    9. '   ' → logprob: -8.051711082458496
    10. ' current' → logprob: -8.551711082458496

Token 3483: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759875178337097
    2. ' =' → logprob: -0.8259875178337097
    3. '       ' → logprob: -10.450987815856934
    4. '   ' → logprob: -11.700987815856934
    5. '        ' → logprob: -12.075987815856934
    6. '    ' → logprob: -13.575987815856934
    7. '           ' → logprob: -14.075987815856934
    8. ',' → logprob: -14.200987815856934
    9. ' =
' → logprob: -14.450987815856934
    10. '=
' → logprob: -14.450987815856934

Token 3484: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.06197250634431839
    2. ' time' → logprob: -2.8119726181030273
    3. '(time' → logprob: -12.436972618103027
    4. 'max' → logprob: -14.311972618103027
    5. '   ' → logprob: -15.811972618103027
    6. '	time' → logprob: -16.18697166442871
    7. ' max' → logprob: -17.31197166442871
    8. '=time' → logprob: -18.43697166442871
    9. '    ' → logprob: -18.56197166442871
    10. '"time' → logprob: -18.56197166442871

Token 3485: '_ev' (ID: 120966)
  Prédit: '_ev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ev' → logprob: -1.1279553291387856e-05
    2. '=' → logprob: -12.625011444091797
    3. 'ev' → logprob: -12.625011444091797
    4. ' =' → logprob: -13.500011444091797
    5. 'Ev' → logprob: -14.125011444091797
    6. '	ev' → logprob: -14.750011444091797
    7. '_et' → logprob: -15.125011444091797
    8. '_e' → logprob: -15.250011444091797
    9. '_EV' → logprob: -15.750011444091797
    10. '_' → logprob: -15.750011444091797

Token 3486: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3484731912612915
    2. ' -' → logprob: -1.2234731912612915
    3. '   ' → logprob: -10.84847354888916
    4. '```' → logprob: -12.72347354888916
    5. '=' → logprob: -13.72347354888916
    6. ' ' → logprob: -13.97347354888916
    7. '-
' → logprob: -14.59847354888916
    8. '       ' → logprob: -14.72347354888916
    9. '<|end|>' → logprob: -14.72347354888916
    10. '[' → logprob: -14.97347354888916

Token 3487: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0001234428636962548
    2. ' current' → logprob: -9.000123023986816
    3. '       ' → logprob: -19.000123977661133
    4. '   ' → logprob: -19.250123977661133
    5. '           ' → logprob: -20.875123977661133
    6. '	current' → logprob: -21.875123977661133
    7. '$current' → logprob: -21.875123977661133
    8. '
' → logprob: -22.250123977661133
    9. '_current' → logprob: -22.375123977661133
    10. '(current' → logprob: -22.750123977661133

Token 3488: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.25
    3. 'time' → logprob: -16.5
    4. '_t' → logprob: -19.375
    5. ' _' → logprob: -20.375
    6. 'Time' → logprob: -20.875
    7. ' time' → logprob: -21.125
    8. '_TIME' → logprob: -21.625
    9. '_token' → logprob: -23.25
    10. '_Time' → logprob: -23.375

Token 3489: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5305874943733215
    2. '
' → logprob: -1.2805874347686768
    3. '=' → logprob: -2.7805874347686768
    4. 'current' → logprob: -3.9055874347686768
    5. '        
' → logprob: -4.405587673187256
    6. '<|end|>' → logprob: -4.780587673187256
    7. '```' → logprob: -5.155587673187256
    8. ')
' → logprob: -5.530587673187256
    9. '    
' → logprob: -6.030587673187256
    10. ' 
' → logprob: -6.155587673187256

Token 3490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44309428334236145
    2. '```' → logprob: -2.193094253540039
    3. 'current' → logprob: -2.443094253540039
    4. '
' → logprob: -2.443094253540039
    5. 'if' → logprob: -3.193094253540039
    6. 'for' → logprob: -4.693094253540039
    7. ' if' → logprob: -4.943094253540039
    8. '        
' → logprob: -5.693094253540039
    9. ' current' → logprob: -5.818094253540039
    10. '   ' → logprob: -5.943094253540039

Token 3491: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11614492535591125
    2. 'if' (adapté à ' if') → logprob: -2.366144895553589
    3. 'current' → logprob: -4.866145133972168
    4. '
' → logprob: -5.866145133972168
    5. '       ' → logprob: -5.866145133972168
    6. ' for' → logprob: -6.366145133972168
    7. '   ' → logprob: -8.366145133972168
    8. '```' → logprob: -8.491145133972168
    9. ' if' → logprob: -8.866145133972168
    10. ' current' → logprob: -9.491145133972168

Token 3492: ' dt' (ID: 14008)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -8.721228368813172e-05
    2. ' dt' → logprob: -9.375086784362793
    3. 'abs' → logprob: -13.375086784362793
    4. '   ' → logprob: -14.500086784362793
    5. '           ' → logprob: -16.75008773803711
    6. 'd' → logprob: -16.75008773803711
    7. '       ' → logprob: -16.87508773803711
    8. '
' → logprob: -16.87508773803711
    9. '(dt' → logprob: -17.37508773803711
    10. '               ' → logprob: -18.37508773803711

Token 3493: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.02057458832859993
    2. ' >' → logprob: -3.8955745697021484
    3. '>=' → logprob: -11.270574569702148
    4. '<' → logprob: -11.520574569702148
    5. '   ' → logprob: -13.020574569702148
    6. '=' → logprob: -13.020574569702148
    7. ' >=' → logprob: -13.395574569702148
    8. '       ' → logprob: -13.645574569702148
    9. '>
' → logprob: -13.770574569702148
    10. ')' → logprob: -14.895574569702148

Token 3494: ' -' (ID: 533)
  Prédit: '-E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-E' → logprob: -0.16649378836154938
    2. '-' → logprob: -2.4164938926696777
    3. 'EPS' → logprob: -2.7914938926696777
    4. '0' → logprob: -5.916493892669678
    5. ' -' → logprob: -9.79149341583252
    6. ' EPS' → logprob: -10.29149341583252
    7. '-e' → logprob: -12.04149341583252
    8. '-T' → logprob: -13.41649341583252
    9. 'ESP' → logprob: -13.41649341583252
    10. '1' → logprob: -13.79149341583252

Token 3495: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -2.7372048862162046e-05
    2. ' EPS' → logprob: -10.750027656555176
    3. '1' → logprob: -12.125027656555176
    4. 'ESP' → logprob: -15.750027656555176
    5. '   ' → logprob: -16.25002670288086
    6. 'eps' → logprob: -17.25002670288086
    7. 'EP' → logprob: -17.25002670288086
    8. ' ' → logprob: -18.00002670288086
    9. 'EPT' → logprob: -18.00002670288086
    10. '0' → logprob: -18.25002670288086

Token 3496: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45773839950561523
    2. ':
' → logprob: -1.7077383995056152
    3. '           ' → logprob: -1.8327383995056152
    4. ' or' → logprob: -4.207738399505615
    5. '       ' → logprob: -4.707738399505615
    6. '               ' → logprob: -7.832738399505615
    7. ' :' → logprob: -7.957738399505615
    8. ':return' → logprob: -8.332738876342773
    9. ' :
' → logprob: -8.332738876342773
    10. '        ' → logprob: -8.457738876342773

Token 3497: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039569392800331116
    2. ' continue' → logprob: -3.78956937789917
    3. 'continue' → logprob: -4.41456937789917
    4. '       ' → logprob: -5.91456937789917
    5. '```' → logprob: -7.66456937789917
    6. '               ' → logprob: -8.539569854736328
    7. ' current' → logprob: -8.539569854736328
    8. '{
' → logprob: -8.789569854736328
    9. 'current' → logprob: -8.789569854736328
    10. ':
' → logprob: -9.914569854736328

Token 3498: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.44990402460098267
    2. ' continue' → logprob: -1.199903964996338
    3. 'time' → logprob: -3.449903964996338
    4. 'raise' → logprob: -5.074903964996338
    5. '           ' → logprob: -5.199903964996338
    6. 'dt' → logprob: -5.574903964996338
    7. 'current' → logprob: -5.574903964996338
    8. ' time' → logprob: -5.949903964996338
    9. 'heap' → logprob: -6.324903964996338
    10. '#' (adapté à ' #') → logprob: -6.449903964996338

Token 3499: ' Ev' (ID: 16426)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.16500116884708405
    2. 'time' → logprob: -2.290001153945923
    3. 'continue' → logprob: -3.415001153945923
    4. '#' → logprob: -4.415001392364502
    5. 'current' → logprob: -5.790001392364502
    6. '           ' → logprob: -6.665001392364502
    7. 'raise' → logprob: -7.165001392364502
    8. '       ' → logprob: -7.915001392364502
    9. 'pass' → logprob: -9.165000915527344
    10. ' dt' → logprob: -9.665000915527344

Token 3500: 'ènement' (ID: 132303)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.15174317359924316
    2. '_' → logprob: -3.026743173599243
    3. 't' → logprob: -3.776743173599243
    4. 'nt' → logprob: -4.401742935180664
    5. '   ' → logprob: -4.776742935180664
    6. 'al' → logprob: -5.026742935180664
    7. ')' → logprob: -5.026742935180664
    8. '_time' → logprob: -5.026742935180664
    9. '=' → logprob: -5.151742935180664
    10. 'ents' → logprob: -5.276742935180664

Token 3501: ' ant' (ID: 4624)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28504854440689087
    2. ' =' → logprob: -2.535048484802246
    3. 'ignored' → logprob: -3.160048484802246
    4. ' ignored' → logprob: -3.660048484802246
    5. '#' → logprob: -4.035048484802246
    6. ',' → logprob: -4.285048484802246
    7. '_queue' → logprob: -5.160048484802246
    8. ')' → logprob: -5.410048484802246
    9. 'continue' → logprob: -5.410048484802246
    10. 's' → logprob: -5.535048484802246

Token 3502: 'érieur' (ID: 24251)
  Prédit: 'érieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieur' → logprob: -0.9773223996162415
    2. 'i' → logprob: -1.1023223400115967
    3. 'é' → logprob: -1.9773223400115967
    4. 'icip' → logprob: -3.2273223400115967
    5. 'éc' → logprob: -3.3523223400115967
    6. '_' → logprob: -3.7273223400115967
    7. 'e' → logprob: -4.477322578430176
    8. 'ici' → logprob: -4.602322578430176
    9. 'ié' → logprob: -5.227322578430176
    10. 'ép' → logprob: -5.352322578430176

Token 3503: ' au' (ID: 2791)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.157616138458252
    2. ')' → logprob: -1.657616138458252
    3. ':
' → logprob: -2.157616138458252
    4. ' continue' → logprob: -2.657616138458252
    5. '           ' → logprob: -3.032616138458252
    6. '#' → logprob: -3.407616138458252
    7. ':' → logprob: -3.407616138458252
    8. ')
' → logprob: -3.657616138458252
    9. ',' → logprob: -3.657616138458252
    10. '+' → logprob: -4.032616138458252

Token 3504: ' temps' (ID: 11160)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2563309967517853
    2. ' time' → logprob: -1.506330966949463
    3. 'temps' → logprob: -6.256330966949463
    4. 'current' → logprob: -6.881330966949463
    5. ' current' → logprob: -6.881330966949463
    6. ' temps' → logprob: -8.256331443786621
    7. '_time' → logprob: -10.006331443786621
    8. 'év' → logprob: -10.631331443786621
    9. 'event' → logprob: -10.756331443786621
    10. ' event' → logprob: -11.506331443786621

Token 3505: ' actuel' (ID: 113646)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.5747129321098328
    2. '_' → logprob: -1.3247129917144775
    3. '_ev' → logprob: -2.8247129917144775
    4. 'time' → logprob: -3.4497129917144775
    5. '=' → logprob: -4.449712753295898
    6. '_
' → logprob: -4.449712753295898
    7. '+' → logprob: -4.449712753295898
    8. '
' → logprob: -4.949712753295898
    9. '_event' → logprob: -5.199712753295898
    10. ' time' → logprob: -5.199712753295898

Token 3506: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4976617395877838
    2. 'continue' → logprob: -1.2476617097854614
    3. ':
' → logprob: -3.247661828994751
    4. ' continue' → logprob: -4.247661590576172
    5. '       ' → logprob: -4.247661590576172
    6. '
' → logprob: -4.997661590576172
    7. '               ' → logprob: -5.122661590576172
    8. '```' → logprob: -5.372661590576172
    9. ')' → logprob: -5.997661590576172
    10. '#' → logprob: -6.247661590576172

Token 3507: ' bug' (ID: 19154)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.16836917400360107
    2. 'current' → logprob: -2.6683692932128906
    3. 'dt' → logprob: -3.4183692932128906
    4. ' continue' → logprob: -3.7933692932128906
    5. '           ' → logprob: -3.9183692932128906
    6. 'time' → logprob: -5.293369293212891
    7. ' current' → logprob: -6.543369293212891
    8. '#' → logprob: -6.543369293212891
    9. 'pass' → logprob: -6.668369293212891
    10. '       ' → logprob: -8.29336929321289

Token 3508: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5286442637443542
    2. 'continue' → logprob: -1.403644323348999
    3. ' continue' → logprob: -2.778644323348999
    4. '       ' → logprob: -3.528644323348999
    5. 'raise' → logprob: -4.27864408493042
    6. ')' → logprob: -4.27864408493042
    7. '#' → logprob: -4.40364408493042
    8. '               ' → logprob: -4.90364408493042
    9. '
' → logprob: -5.52864408493042
    10. '=' → logprob: -5.90364408493042

Token 3509: ' la' (ID: 557)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1922115534543991
    2. 'time' → logprob: -2.567211627960205
    3. 'event' → logprob: -2.817211627960205
    4. 'heap' → logprob: -4.067211627960205
    5. ' current' → logprob: -4.692211627960205
    6. '0' → logprob: -6.192211627960205
    7. 'continue' → logprob: -6.317211627960205
    8. '#' → logprob: -6.442211627960205
    9. '```' → logprob: -7.067211627960205
    10. '1' → logprob: -7.192211627960205

Token 3510: ' file' (ID: 1974)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.2492419481277466
    2. 'simulation' → logprob: -1.4992419481277466
    3. 'heap' → logprob: -2.124241828918457
    4. 'event' → logprob: -2.124241828918457
    5. 'time' → logprob: -2.874241828918457
    6. '#' → logprob: -2.999241828918457
    7. 'code' → logprob: -3.374241828918457
    8. '
' → logprob: -4.124241828918457
    9. 'dt' → logprob: -4.374241828918457
    10. 'import' → logprob: -4.749241828918457

Token 3511: ',' (ID: 11)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.3330097198486328
    2. 'raise' → logprob: -1.8330097198486328
    3. '       ' → logprob: -2.083009719848633
    4. ':
' → logprob: -2.208009719848633
    5. '           ' → logprob: -2.458009719848633
    6. ',
' → logprob: -2.958009719848633
    7. ')
' → logprob: -3.208009719848633
    8. ' continue' → logprob: -3.958009719848633
    9. ')' → logprob: -4.208009719848633
    10. '
' → logprob: -4.333009719848633

Token 3512: ' on' (ID: 402)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.49939095973968506
    2. 'continue' → logprob: -1.624390959739685
    3. '           ' → logprob: -2.4993910789489746
    4. ' current' → logprob: -2.7493910789489746
    5. ' continue' → logprob: -3.2493910789489746
    6. 'dt' → logprob: -5.249391078948975
    7. '       ' → logprob: -5.499391078948975
    8. '               ' → logprob: -7.374391078948975
    9. ' dt' → logprob: -8.499390602111816
    10. '#' → logprob: -8.499390602111816

Token 3513: ' ignore' (ID: 17887)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.43584904074668884
    2. ' continue' → logprob: -1.0608490705490112
    3. '           ' → logprob: -5.560849189758301
    4. '#' → logprob: -7.685849189758301
    5. 'raise' → logprob: -7.810849189758301
    6. '=' → logprob: -7.935849189758301
    7. ')' → logprob: -7.935849189758301
    8. '_continue' → logprob: -8.4358491897583
    9. '       ' → logprob: -8.5608491897583
    10. 'import' → logprob: -8.5608491897583

Token 3514: '
' (ID: 198)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.29219889640808105
    2. ' continue' → logprob: -1.417198896408081
    3. '       ' → logprob: -5.54219913482666
    4. '           ' → logprob: -5.66719913482666
    5. '
' → logprob: -7.04219913482666
    6. '\n' → logprob: -7.91719913482666
    7. 'heap' → logprob: -8.16719913482666
    8. ')
' → logprob: -8.16719913482666
    9. '               ' → logprob: -8.29219913482666
    10. 'if' → logprob: -8.54219913482666

Token 3515: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8288852572441101
    2. '       ' → logprob: -0.9538852572441101
    3. 'continue' → logprob: -1.9538853168487549
    4. ' continue' → logprob: -4.203885078430176
    5. '```' → logprob: -4.328885078430176
    6. '
' → logprob: -5.703885078430176
    7. '               ' → logprob: -6.203885078430176
    8. '   ' → logprob: -7.703885078430176
    9. '\n' → logprob: -7.703885078430176
    10. 'if' → logprob: -7.828885078430176

Token 3516: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.01990414597094059
    2. '           ' → logprob: -4.769904136657715
    3. ' continue' → logprob: -4.769904136657715
    4. 'current' → logprob: -6.019904136657715
    5. '               ' → logprob: -8.894904136657715
    6. '       ' → logprob: -9.644904136657715
    7. 'if' → logprob: -10.269904136657715
    8. '```' → logprob: -10.519904136657715
    9. '                   ' → logprob: -11.144904136657715
    10. ' current' → logprob: -11.269904136657715

Token 3517: '
' (ID: 198)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00492241233587265
    2. '
' → logprob: -6.379922389984131
    3. 'if' → logprob: -6.504922389984131
    4. '       ' → logprob: -7.629922389984131
    5. ' current' → logprob: -7.754922389984131
    6. '#' → logprob: -7.879922389984131
    7. '```' → logprob: -9.004922866821289
    8. ' 
' → logprob: -9.754922866821289
    9. '        
' → logprob: -9.879922866821289
    10. 'for' → logprob: -9.879922866821289

Token 3518: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.015087566338479519
    2. 'for' → logprob: -5.015087604522705
    3. '       ' → logprob: -5.515087604522705
    4. 'if' → logprob: -5.765087604522705
    5. '   ' → logprob: -7.015087604522705
    6. '#' → logprob: -8.515087127685547
    7. '
' → logprob: -10.140087127685547
    8. '```' → logprob: -11.265087127685547
    9. ' current' → logprob: -11.390087127685547
    10. '        
' → logprob: -11.640087127685547

Token 3519: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.002507762983441353
    2. 'for' → logprob: -6.37750768661499
    3. '       ' → logprob: -7.50250768661499
    4. '#' (adapté à ' #') → logprob: -8.877508163452148
    5. 'if' → logprob: -9.127508163452148
    6. '   ' → logprob: -12.502508163452148
    7. ' current' → logprob: -14.127508163452148
    8. 'while' → logprob: -14.502508163452148
    9. '
' → logprob: -15.502508163452148
    10. '        
' → logprob: -16.75250816345215

Token 3520: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32449907064437866
    2. 'current' → logprob: -1.3244991302490234
    3. '#' → logprob: -4.699499130249023
    4. 'if' → logprob: -6.449499130249023
    5. '       ' → logprob: -7.824499130249023
    6. '   ' → logprob: -9.949499130249023
    7. 'while' → logprob: -10.199499130249023
    8. '
' → logprob: -12.699499130249023
    9. ' for' → logprob: -13.074499130249023
    10. '        
' → logprob: -13.699499130249023

Token 3521: 'placer' (ID: 58807)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.147114098072052
    2. 'f' → logprob: -2.2721140384674072
    3. 'for' → logprob: -4.022114276885986
    4. '#' → logprob: -5.272114276885986
    5. ' current' → logprob: -5.397114276885986
    6. '   ' → logprob: -6.022114276885986
    7. 't' → logprob: -6.397114276885986
    8. '       ' → logprob: -7.522114276885986
    9. 'place' → logprob: -7.647114276885986
    10. ' #' → logprob: -7.897114276885986

Token 3522: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004343598615378141
    2. ' for' → logprob: -5.504343509674072
    3. '   ' → logprob: -8.62934398651123
    4. '       ' → logprob: -9.87934398651123
    5. 'current' → logprob: -10.75434398651123
    6. '```' → logprob: -12.12934398651123
    7. '	for' → logprob: -12.75434398651123
    8. '
' → logprob: -13.37934398651123
    9. '           ' → logprob: -14.12934398651123
    10. 's' → logprob: -14.12934398651123

Token 3523: ' bate' (ID: 39378)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001447141170501709
    2. 'ships' → logprob: -6.7514472007751465
    3. 'positions' → logprob: -9.001446723937988
    4. '#' → logprob: -9.251446723937988
    5. 's' → logprob: -10.501446723937988
    6. ' for' → logprob: -10.751446723937988
    7. '   ' → logprob: -12.126446723937988
    8. '
' → logprob: -14.251446723937988
    9. '	for' → logprob: -14.751446723937988
    10. '       ' → logprob: -14.751446723937988

Token 3524: 'aux' (ID: 5454)
  Prédit: 'ux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.44710907340049744
    2. 'aux' → logprob: -2.0721089839935303
    3. 'u' → logprob: -2.8221089839935303
    4. 'ts' → logprob: -2.9471089839935303
    5. 'uts' → logprob: -2.9471089839935303
    6. 'te' → logprob: -3.4471089839935303
    7. 'nts' → logprob: -3.8221089839935303
    8. 'tes' → logprob: -4.947109222412109
    9. 't' → logprob: -5.822109222412109
    10. 'ut' → logprob: -6.322109222412109

Token 3525: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08733999729156494
    2. 'for' → logprob: -2.5873398780822754
    3. ' for' → logprob: -4.837339878082275
    4. '```' → logprob: -8.962340354919434
    5. '
' → logprob: -9.087340354919434
    6. '   ' → logprob: -9.462340354919434
    7. 'while' → logprob: -10.462340354919434
    8. '+=' → logprob: -10.462340354919434
    9. '	for' → logprob: -10.712340354919434
    10. '           ' → logprob: -11.087340354919434

Token 3526: ' fonction' (ID: 17610)
  Prédit: 'avance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avance' → logprob: -0.25890856981277466
    2. 'avant' → logprob: -2.38390851020813
    3. 'pos' → logprob: -2.75890851020813
    4. ' masse' → logprob: -3.88390851020813
    5. 'av' → logprob: -4.258908748626709
    6. 'position' → logprob: -4.883908748626709
    7. '   ' → logprob: -5.133908748626709
    8. ' avance' → logprob: -5.383908748626709
    9. 'for' → logprob: -5.758908748626709
    10. 's' → logprob: -6.258908748626709

Token 3527: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1898462772369385
    2. '```' → logprob: -1.4398462772369385
    3. '        
' → logprob: -2.4398462772369385
    4. ' of' → logprob: -2.5648462772369385
    5. '=' → logprob: -2.8148462772369385
    6. 'for' → logprob: -3.8148462772369385
    7. '`' → logprob: -3.8148462772369385
    8. ' =' → logprob: -4.064846038818359
    9. 'dt' → logprob: -4.064846038818359
    10. ' dt' → logprob: -4.314846038818359

Token 3528: ' leur' (ID: 9853)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.9817975163459778
    2. 'v' → logprob: -1.481797456741333
    3. 'leur' → logprob: -1.731797456741333
    4. 'la' → logprob: -1.981797456741333
    5. 'current' → logprob: -3.856797456741333
    6. 'leurs' → logprob: -4.106797695159912
    7. 'le' → logprob: -4.106797695159912
    8. 'temps' → logprob: -4.231797695159912
    9. 'their' → logprob: -5.606797695159912
    10. 'speed' → logprob: -6.231797695159912

Token 3529: ' vitesse' (ID: 71752)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.016383185982704163
    2. 'v' → logprob: -4.266383171081543
    3. ' speed' → logprob: -6.641383171081543
    4. 'spe' → logprob: -7.891383171081543
    5. ' vitesse' → logprob: -8.016383171081543
    6. 'vit' → logprob: -9.141383171081543
    7. ' ' → logprob: -10.891383171081543
    8. '```' → logprob: -11.141383171081543
    9. '_speed' → logprob: -11.516383171081543
    10. ' vit' → logprob: -11.516383171081543

Token 3530: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45876961946487427
    2. '       ' → logprob: -1.3337695598602295
    3. ' for' → logprob: -2.7087695598602295
    4. '```' → logprob: -3.4587695598602295
    5. '+=' → logprob: -6.708769798278809
    6. '        
' → logprob: -7.333769798278809
    7. 'while' → logprob: -7.333769798278809
    8. '
' → logprob: -7.333769798278809
    9. '   ' → logprob: -7.833769798278809
    10. ',' → logprob: -7.833769798278809

Token 3531: ' dt' (ID: 14008)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.349879652261734
    2. 'dt' → logprob: -1.3498796224594116
    3. 'current' → logprob: -4.599879741668701
    4. 'position' → logprob: -4.599879741668701
    5. ' temps' → logprob: -5.849879741668701
    6. 'le' → logprob: -5.849879741668701
    7. ' dt' → logprob: -6.224879741668701
    8. 'positions' → logprob: -6.349879741668701
    9. 'direction' → logprob: -6.349879741668701
    10. 'leur' → logprob: -7.349879741668701

Token 3532: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12370762974023819
    2. 'for' → logprob: -2.3737075328826904
    3. ' for' → logprob: -4.2487077713012695
    4. '
' → logprob: -5.6237077713012695
    5. '```' → logprob: -5.9987077713012695
    6. '        
' → logprob: -6.3737077713012695
    7. '           ' → logprob: -7.6237077713012695
    8. '   ' → logprob: -8.49870777130127
    9. '	for' → logprob: -9.37370777130127
    10. '               ' → logprob: -9.74870777130127

Token 3533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21201691031455994
    2. 'for' → logprob: -2.0870168209075928
    3. '```' → logprob: -3.9620168209075928
    4. '   ' → logprob: -4.087017059326172
    5. '
' → logprob: -4.212017059326172
    6. ' for' → logprob: -4.587017059326172
    7. 'current' → logprob: -5.337017059326172
    8. '``' → logprob: -7.837017059326172
    9. '        
' → logprob: -7.962017059326172
    10. ' current' → logprob: -8.462017059326172

Token 3534: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004162214230746031
    2. '       ' → logprob: -5.504162311553955
    3. '   ' → logprob: -10.129161834716797
    4. ' for' → logprob: -10.879161834716797
    5. 'current' → logprob: -11.379161834716797
    6. 'if' → logprob: -11.629161834716797
    7. '```' → logprob: -12.504161834716797
    8. '
' → logprob: -14.879161834716797
    9. 'while' → logprob: -15.379161834716797
    10. '	for' → logprob: -15.504161834716797

Token 3535: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07825624942779541
    2. 's' → logprob: -2.703256130218506
    3. ' i' → logprob: -5.578256130218506
    4. 'ship' → logprob: -5.953256130218506
    5. 'j' → logprob: -6.953256130218506
    6. ' s' → logprob: -7.078256130218506
    7. ' ship' → logprob: -9.828256607055664
    8. '   ' → logprob: -10.453256607055664
    9. ' j' → logprob: -11.078256607055664
    10. 'idx' → logprob: -12.953256607055664

Token 3536: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000918008794542402
    2. 'in' → logprob: -7.000917911529541
    3. '   ' → logprob: -12.7509183883667
    4. 's' → logprob: -13.8759183883667
    5. ',' → logprob: -14.1259183883667
    6. '	in' → logprob: -15.0009183883667
    7. ' ' → logprob: -15.1259183883667
    8. 'import' → logprob: -15.7509183883667
    9. '  ' → logprob: -15.8759183883667
    10. '    ' → logprob: -15.8759183883667

Token 3537: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.2729995988775045e-06
    2. ' range' → logprob: -12.000006675720215
    3. '(range' → logprob: -19.6250057220459
    4. '   ' → logprob: -19.8750057220459
    5. '0' → logprob: -20.3750057220459
    6. '
' → logprob: -20.7500057220459
    7. 'ships' → logprob: -21.2500057220459
    8. '	range' → logprob: -21.6250057220459
    9. 'M' → logprob: -21.8750057220459
    10. 'rang' → logprob: -22.0000057220459

Token 3538: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.014721032232046127
    2. 'range' → logprob: -4.514720916748047
    3. '(M' → logprob: -5.639720916748047
    4. ' range' → logprob: -10.139720916748047
    5. '   ' → logprob: -10.514720916748047
    6. '           ' → logprob: -11.139720916748047
    7. 'len' → logprob: -11.514720916748047
    8. ' M' → logprob: -11.639720916748047
    9. '       ' → logprob: -12.014720916748047
    10. '                   ' → logprob: -13.639720916748047

Token 3539: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06982893496751785
    2. '       ' → logprob: -3.069828987121582
    3. '           ' → logprob: -4.444828987121582
    4. ':
' → logprob: -5.069828987121582
    5. '   ' → logprob: -6.444828987121582
    6. '):' → logprob: -7.194828987121582
    7. ':' → logprob: -8.194828987121582
    8. '               ' → logprob: -9.569828987121582
    9. '          ' → logprob: -9.694828987121582
    10. ',' → logprob: -10.319828987121582

Token 3540: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019408921943977475
    2. '```' → logprob: -6.501940727233887
    3. '           ' → logprob: -8.376940727233887
    4. ' if' → logprob: -9.626940727233887
    5. ' s' → logprob: -10.001940727233887
    6. '   ' → logprob: -10.751940727233887
    7. 's' → logprob: -11.501940727233887
    8. ',' → logprob: -11.501940727233887
    9. '#' → logprob: -11.626940727233887
    10. '        
' → logprob: -11.751940727233887

Token 3541: ' if' (ID: 538)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.3206109404563904
    2. ' ships' → logprob: -1.5706110000610352
    3. ' s' → logprob: -3.695611000061035
    4. ' if' → logprob: -4.070611000061035
    5. 'if' (adapté à ' if') → logprob: -4.445611000061035
    6. 's' → logprob: -4.445611000061035
    7. '```' → logprob: -8.445611000061035
    8. '   ' → logprob: -8.445611000061035
    9. '       ' → logprob: -8.570611000061035
    10. 'ship' → logprob: -8.570611000061035

Token 3542: ' ships' (ID: 33610)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.026387959718704224
    2. ' not' → logprob: -4.026388168334961
    3. 'ships' → logprob: -4.901388168334961
    4. '   ' → logprob: -7.526388168334961
    5. '!' → logprob: -10.026388168334961
    6. '           ' → logprob: -10.151388168334961
    7. '(not' → logprob: -10.526388168334961
    8. ' ships' → logprob: -10.776388168334961
    9. '	not' → logprob: -10.776388168334961
    10. 'abs' → logprob: -11.026388168334961

Token 3543: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. 'i' → logprob: -14.250001907348633
    3. '```' → logprob: -14.875001907348633
    4. '[' → logprob: -15.375001907348633
    5. '           ' → logprob: -16.500001907348633
    6. '[j' → logprob: -16.625001907348633
    7. '   ' → logprob: -16.625001907348633
    8. ' [' → logprob: -16.750001907348633
    9. '
' → logprob: -17.250001907348633
    10. '       ' → logprob: -17.625001907348633

Token 3544: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05691579729318619
    2. '.' → logprob: -3.431915760040283
    3. '[i' → logprob: -4.431915760040283
    4. '           ' → logprob: -6.056915760040283
    5. ').' → logprob: -6.431915760040283
    6. ' .' → logprob: -6.431915760040283
    7. '.i' → logprob: -6.931915760040283
    8. '[' → logprob: -7.181915760040283
    9. '.s' → logprob: -7.681915760040283
    10. '               ' → logprob: -7.806915760040283

Token 3545: 'done' (ID: 21715)
  Prédit: 'done'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.002865973860025406
    2. 'speed' → logprob: -5.877865791320801
    3. ' done' → logprob: -10.1278657913208
    4. 'pos' → logprob: -11.2528657913208
    5. '.done' → logprob: -12.8778657913208
    6. ' speed' → logprob: -13.2528657913208
    7. '   ' → logprob: -14.5028657913208
    8. '
' → logprob: -14.6278657913208
    9. '```' → logprob: -14.6278657913208
    10. '	done' → logprob: -14.6278657913208

Token 3546: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.573718249797821
    2. ':
' → logprob: -1.6987183094024658
    3. ' and' → logprob: -2.073718309402466
    4. 'and' → logprob: -2.948718309402466
    5. '==' → logprob: -3.323718309402466
    6. '           ' → logprob: -4.073718070983887
    7. ' ==' → logprob: -4.323718070983887
    8. '```' → logprob: -5.198718070983887
    9. ':' → logprob: -6.073718070983887
    10. '       ' → logprob: -7.823718070983887

Token 3547: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02522866241633892
    2. ' and' → logprob: -4.775228500366211
    3. ':
' → logprob: -5.275228500366211
    4. '           ' → logprob: -5.275228500366211
    5. '```' → logprob: -5.525228500366211
    6. 'and' → logprob: -6.525228500366211
    7. ':' → logprob: -8.025228500366211
    8. '==' → logprob: -8.900228500366211
    9. '       ' → logprob: -9.275228500366211
    10. ' or' → logprob: -9.525228500366211

Token 3548: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02265864610671997
    2. ' continue' → logprob: -4.647658824920654
    3. 'continue' (adapté à ' continue') → logprob: -4.772658824920654
    4. '           ' → logprob: -5.647658824920654
    5. '                   ' → logprob: -8.022658348083496
    6. '```' → logprob: -8.772658348083496
    7. '   ' → logprob: -8.897658348083496
    8. ' ' → logprob: -10.147658348083496
    9. ' ' → logprob: -10.272658348083496
    10. '
' → logprob: -10.522658348083496

Token 3549: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06859241425991058
    2. 'ships' → logprob: -3.1935923099517822
    3. ' ships' → logprob: -4.318592548370361
    4. '               ' → logprob: -4.693592548370361
    5. '       ' → logprob: -6.568592548370361
    6. '```' → logprob: -6.693592548370361
    7. '   ' → logprob: -9.693592071533203
    8. 'ship' → logprob: -10.943592071533203
    9. '                   ' → logprob: -11.193592071533203
    10. 'Ships' → logprob: -11.318592071533203

Token 3550: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32907944917678833
    2. 'ships' → logprob: -2.0790793895721436
    3. '               ' → logprob: -2.5790793895721436
    4. '       ' → logprob: -3.0790793895721436
    5. '```' → logprob: -3.5790793895721436
    6. ' ships' → logprob: -5.454079627990723
    7. '   ' → logprob: -7.204079627990723
    8. '``' → logprob: -8.204079627990723
    9. '                       ' → logprob: -8.829079627990723
    10. '                   ' → logprob: -9.454079627990723

Token 3551: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' (adapté à ' ships') → logprob: -0.0009581510093994439
    2. '           ' → logprob: -8.000958442687988
    3. ' ships' → logprob: -8.125958442687988
    4. '   ' → logprob: -8.375958442687988
    5. '```' → logprob: -10.000958442687988
    6. '       ' → logprob: -10.875958442687988
    7. 's' → logprob: -11.125958442687988
    8. 'ship' → logprob: -11.625958442687988
    9. '               ' → logprob: -12.750958442687988
    10. 'if' → logprob: -13.625958442687988

Token 3552: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.500000953674316
    3. 'i' → logprob: -15.000000953674316
    4. '           ' → logprob: -16.125001907348633
    5. '```' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '[
' → logprob: -17.750001907348633
    8. '[I' → logprob: -17.875001907348633
    9. '       ' → logprob: -18.125001907348633
    10. '            
' → logprob: -18.375001907348633

Token 3553: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.6370725631713867
    2. '.pos' → logprob: -0.7620725631713867
    3. '.' → logprob: -6.262072563171387
    4. ').' → logprob: -7.137072563171387
    5. '}.' → logprob: -8.387072563171387
    6. '   ' → logprob: -8.637072563171387
    7. '#.' → logprob: -8.762072563171387
    8. '           ' → logprob: -8.887072563171387
    9. '#' → logprob: -8.887072563171387
    10. ' .' → logprob: -9.137072563171387

Token 3554: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.747814349073451e-05
    2. 'speed' → logprob: -11.125017166137695
    3. ' pos' → logprob: -13.625017166137695
    4. 'position' → logprob: -14.125017166137695
    5. '
' → logprob: -16.000017166137695
    6. '	pos' → logprob: -16.125017166137695
    7. '.pos' → logprob: -16.250017166137695
    8. '```' → logprob: -16.500017166137695
    9. '#' → logprob: -17.000017166137695
    10. '_pos' → logprob: -17.125017166137695

Token 3555: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0013336940901353955
    2. ' +=' → logprob: -6.626333713531494
    3. '           ' → logprob: -12.876333236694336
    4. ']+=' → logprob: -13.126333236694336
    5. '```' → logprob: -14.001333236694336
    6. '+' → logprob: -14.376333236694336
    7. '+=(' → logprob: -14.501333236694336
    8. '=' → logprob: -14.626333236694336
    9. '   ' → logprob: -15.126333236694336
    10. '       ' → logprob: -15.251333236694336

Token 3556: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.023248042911291122
    2. ' ships' → logprob: -3.7732479572296143
    3. '   ' → logprob: -13.273247718811035
    4. 'ship' → logprob: -15.023247718811035
    5. 's' → logprob: -16.14824867248535
    6. '```' → logprob: -16.89824867248535
    7. 'spaces' → logprob: -17.02324867248535
    8. 'dt' → logprob: -17.14824867248535
    9. '       ' → logprob: -17.27324867248535
    10. 'boats' → logprob: -17.39824867248535

Token 3557: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.375000953674316
    3. 'i' → logprob: -15.750000953674316
    4. '```' → logprob: -16.5
    5. '{i' → logprob: -19.0
    6. '(i' → logprob: -19.125
    7. '[
' → logprob: -19.75
    8. '[j' → logprob: -19.875
    9. '[I' → logprob: -19.875
    10. '_i' → logprob: -20.375

Token 3558: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.875003814697266
    3. '```' → logprob: -13.875003814697266
    4. '][' → logprob: -14.125003814697266
    5. 'i' → logprob: -14.375003814697266
    6. 'import' → logprob: -16.500003814697266
    7. '
' → logprob: -16.625003814697266
    8. ']' → logprob: -16.875003814697266
    9. '[I' → logprob: -16.875003814697266
    10. '#' → logprob: -16.875003814697266

Token 3559: 'speed' (ID: 42880)
  Prédit: 'speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -1.8624639324116288e-06
    2. ' speed' → logprob: -13.625001907348633
    3. '	speed' → logprob: -15.250001907348633
    4. '.speed' → logprob: -16.000001907348633
    5. '
' → logprob: -16.250001907348633
    6. '(speed' → logprob: -16.750001907348633
    7. '_speed' → logprob: -17.250001907348633
    8. 'pos' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.875001907348633
    10. 'velocity' → logprob: -18.250001907348633

Token 3560: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931737065315247
    2. ' *' → logprob: -0.6931737065315247
    3. '```' → logprob: -11.6931734085083
    4. '       ' → logprob: -11.9431734085083
    5. '   ' → logprob: -12.0681734085083
    6. ' ' → logprob: -13.0681734085083
    7. '           ' → logprob: -13.3181734085083
    8. ' ' → logprob: -14.4431734085083
    9. '    ' → logprob: -15.0681734085083
    10. '               ' → logprob: -15.4431734085083

Token 3561: ' dt' (ID: 14008)
  Prédit: 'dt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.018150877207517624
    2. ' dt' → logprob: -4.018150806427002
    3. '(dt' → logprob: -14.64315128326416
    4. '_dt' → logprob: -15.51815128326416
    5. '   ' → logprob: -16.393150329589844
    6. 'd' → logprob: -17.143150329589844
    7. '
' → logprob: -17.268150329589844
    8. ' ' → logprob: -18.268150329589844
    9. '.dt' → logprob: -18.393150329589844
    10. '```' → logprob: -18.893150329589844

Token 3562: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09659746289253235
    2. 'current' → logprob: -2.47159743309021
    3. '
' → logprob: -5.221597671508789
    4. ' current' → logprob: -6.846597671508789
    5. '        
' → logprob: -7.971597671508789
    6. '           ' → logprob: -8.221597671508789
    7. '   ' → logprob: -8.471597671508789
    8. '```' → logprob: -9.096597671508789
    9. '<|end|>' → logprob: -9.471597671508789
    10. '            
' → logprob: -10.471597671508789

Token 3563: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.20329368114471436
    2. '       ' → logprob: -1.7032936811447144
    3. '   ' → logprob: -7.078293800354004
    4. ' current' → logprob: -7.828293800354004
    5. 'Current' → logprob: -8.328293800354004
    6. '```' → logprob: -8.578293800354004
    7. '           ' → logprob: -9.328293800354004
    8. '
' → logprob: -9.328293800354004
    9. '_current' → logprob: -10.953293800354004
    10. '``' → logprob: -13.078293800354004

Token 3564: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -1.9981420336989686e-05
    2. ' current' → logprob: -11.500020027160645
    3. '       ' → logprob: -12.125020027160645
    4. '   ' → logprob: -12.375020027160645
    5. '```' → logprob: -16.250019073486328
    6. '	current' → logprob: -17.375019073486328
    7. '_current' → logprob: -17.750019073486328
    8. '           ' → logprob: -18.375019073486328
    9. 'Current' → logprob: -18.500019073486328
    10. '$current' → logprob: -19.000019073486328

Token 3565: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.2664456789934775e-06
    2. 'time' → logprob: -13.625000953674316
    3. '_' → logprob: -18.625001907348633
    4. '_TIME' → logprob: -20.500001907348633
    5. 'Time' → logprob: -20.875001907348633
    6. '"time' → logprob: -20.875001907348633
    7. '_t' → logprob: -21.750001907348633
    8. ' time' → logprob: -22.250001907348633
    9. 'ime' → logprob: -22.625001907348633
    10. 't' → logprob: -23.125001907348633

Token 3566: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004913145676255226
    2. ' =' → logprob: -7.625491142272949
    3. '=
' → logprob: -13.12549114227295
    4. '+=' → logprob: -15.00049114227295
    5. '   ' → logprob: -15.25049114227295
    6. '       ' → logprob: -16.000492095947266
    7. '<|end|>' → logprob: -16.125492095947266
    8. '    ' → logprob: -16.500492095947266
    9. ',' → logprob: -16.750492095947266
    10. '=int' → logprob: -17.000492095947266

Token 3567: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0004306692280806601
    2. ' time' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.750431060791016
    4. '	time' → logprob: -19.125431060791016
    5. '
' → logprob: -21.125431060791016
    6. '"time' → logprob: -21.750431060791016
    7. '    ' → logprob: -22.125431060791016
    8. '=time' → logprob: -22.250431060791016
    9. 'Time' → logprob: -22.500431060791016
    10. '(time' → logprob: -22.625431060791016

Token 3568: '_ev' (ID: 120966)
  Prédit: '_ev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ev' → logprob: -2.339278580620885e-06
    2. 'ev' → logprob: -13.125001907348633
    3. '	ev' → logprob: -16.125001907348633
    4. 'Ev' → logprob: -16.625001907348633
    5. '.ev' → logprob: -19.000001907348633
    6. '_event' → logprob: -19.500001907348633
    7. '_EV' → logprob: -20.000001907348633
    8. '_evt' → logprob: -20.125001907348633
    9. '_e' → logprob: -20.250001907348633
    10. '(ev' → logprob: -20.625001907348633

Token 3569: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44089362025260925
    2. 'if' → logprob: -1.0658936500549316
    3. ' if' → logprob: -4.940893650054932
    4. '   ' → logprob: -5.565893650054932
    5. '```' → logprob: -7.315893650054932
    6. '	if' → logprob: -8.815893173217773
    7. '<|end|>' → logprob: -8.815893173217773
    8. '        
' → logprob: -9.315893173217773
    9. '#' → logprob: -10.315893173217773
    10. '           ' → logprob: -10.815893173217773

Token 3570: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05251721292734146
    2. '       ' → logprob: -3.0525171756744385
    3. '   ' → logprob: -6.427517414093018
    4. '```' → logprob: -6.927517414093018
    5. ' if' → logprob: -7.427517414093018
    6. '#' → logprob: -7.802517414093018
    7. '        
' → logprob: -8.42751693725586
    8. '    
' → logprob: -10.42751693725586
    9. '
' → logprob: -10.80251693725586
    10. '	if' → logprob: -11.05251693725586

Token 3571: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0012034466490149498
    2. '       ' → logprob: -6.751203536987305
    3. ' if' → logprob: -11.251203536987305
    4. '#' → logprob: -11.876203536987305
    5. '        
' → logprob: -11.876203536987305
    6. '   ' → logprob: -12.626203536987305
    7. '```' → logprob: -13.376203536987305
    8. '
' → logprob: -14.126203536987305
    9. '	if' → logprob: -15.501203536987305
    10. '{
' → logprob: -15.626203536987305

Token 3572: ' ev' (ID: 5332)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.029763801023364067
    2. ' ev' → logprob: -3.529763698577881
    3. '	ev' → logprob: -12.154764175415039
    4. '(ev' → logprob: -12.279764175415039
    5. '   ' → logprob: -12.779764175415039
    6. '    ' → logprob: -15.029764175415039
    7. '_ev' → logprob: -16.27976417541504
    8. '       ' → logprob: -16.65476417541504
    9. '  ' → logprob: -16.90476417541504
    10. '     ' → logprob: -17.15476417541504

Token 3573: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -3.750436007976532e-05
    2. 'type' → logprob: -10.75003719329834
    3. '_' → logprob: -11.37503719329834
    4. 'ype' → logprob: -13.37503719329834
    5. '_ty' → logprob: -13.75003719329834
    6. '_typ' → logprob: -13.87503719329834
    7. 'Type' → logprob: -15.25003719329834
    8. '_TYPE' → logprob: -15.50003719329834
    9. ' _' → logprob: -15.87503719329834
    10. 't' → logprob: -16.250038146972656

Token 3574: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5232454538345337
    2. ' ==' → logprob: -0.8982454538345337
    3. '==
' → logprob: -10.148245811462402
    4. '=' → logprob: -10.398245811462402
    5. ')==' → logprob: -10.648245811462402
    6. ']==' → logprob: -12.273245811462402
    7. ',' → logprob: -12.273245811462402
    8. ')' → logprob: -12.273245811462402
    9. '()==' → logprob: -12.523245811462402
    10. '[' → logprob: -12.898245811462402

Token 3575: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.375001907348633
    4. '       ' → logprob: -14.625001907348633
    5. '           ' → logprob: -17.375001907348633
    6. '```' → logprob: -19.750001907348633
    7. '#' → logprob: -20.125001907348633
    8. '  ' → logprob: -20.500001907348633
    9. '        ' → logprob: -20.875001907348633
    10. '     ' → logprob: -21.125001907348633

Token 3576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '   ' → logprob: -16.375
    4. '       ' → logprob: -19.0
    5. '```' → logprob: -19.0
    6. '#' → logprob: -19.25
    7. '
' → logprob: -19.5
    8. '           ' → logprob: -20.0
    9. '  ' → logprob: -20.6875
    10. '[' → logprob: -20.8125

Token 3577: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3724624812602997
    2. ':' → logprob: -1.372462511062622
    3. ',' → logprob: -2.872462511062622
    4. '       ' → logprob: -7.622462272644043
    5. ':
' → logprob: -9.122462272644043
    6. ',
' → logprob: -9.747462272644043
    7. '):
' → logprob: -9.872462272644043
    8. ' and' → logprob: -9.872462272644043
    9. '           ' → logprob: -10.622462272644043
    10. '   ' → logprob: -10.997462272644043

Token 3578: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3852381110191345
    2. 'ship' → logprob: -2.1352381706237793
    3. '(i' → logprob: -2.6352381706237793
    4. '       ' → logprob: -2.6352381706237793
    5. '           ' → logprob: -3.1352381706237793
    6. '(ship' → logprob: -4.510238170623779
    7. '#' → logprob: -7.260238170623779
    8. ' i' → logprob: -7.385238170623779
    9. ',' → logprob: -8.135237693786621
    10. '(' → logprob: -8.260237693786621

Token 3579: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061831872910261154
    2. '(i' → logprob: -2.9368319511413574
    3. '           ' → logprob: -5.811831951141357
    4. 'ship' → logprob: -6.186831951141357
    5. '       ' → logprob: -6.686831951141357
    6. '(ship' → logprob: -8.3118314743042
    7. ' i' → logprob: -8.9368314743042
    8. '#' (adapté à ' #') → logprob: -9.3118314743042
    9. '   ' → logprob: -10.0618314743042
    10. '(' → logprob: -10.5618314743042

Token 3580: ' B' (ID: 418)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02396700158715248
    2. 'ship' → logprob: -3.8989670276641846
    3. '(i' → logprob: -6.0239667892456055
    4. '#' → logprob: -7.8989667892456055
    5. '       ' → logprob: -8.023966789245605
    6. '(ship' → logprob: -8.898966789245605
    7. '   ' → logprob: -9.273966789245605
    8. '           ' → logprob: -10.023966789245605
    9. ' i' → logprob: -12.773966789245605
    10. ' ship' → logprob: -13.023966789245605

Token 3581: 'ateau' (ID: 107442)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.19266097247600555
    2. 'i' → logprob: -1.942660927772522
    3. 'o' → logprob: -3.9426610469818115
    4. 'ship' → logprob: -5.942660808563232
    5. '_,' → logprob: -6.317660808563232
    6. '#' → logprob: -6.442660808563232
    7. '(i' → logprob: -6.817660808563232
    8. '_' → logprob: -6.942660808563232
    9. '       ' → logprob: -7.192660808563232
    10. '_ship' → logprob: -7.192660808563232

Token 3582: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12166408449411392
    2. '_index' → logprob: -2.621664047241211
    3. 'index' → logprob: -3.621664047241211
    4. 'idx' → logprob: -4.871664047241211
    5. '           ' → logprob: -5.496664047241211
    6. 'arr' → logprob: -7.121664047241211
    7. '_i' → logprob: -7.246664047241211
    8. ',' → logprob: -7.371664047241211
    9. '_idx' → logprob: -7.371664047241211
    10. ' =' → logprob: -8.871664047241211

Token 3583: ' arrive' (ID: 18338)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028056738898158073
    2. '=' → logprob: -3.9030566215515137
    3. '           ' → logprob: -5.153056621551514
    4. 'idx' → logprob: -7.903056621551514
    5. 'arr' → logprob: -7.903056621551514
    6. ' =' → logprob: -8.653057098388672
    7. ',index' → logprob: -8.778057098388672
    8. 'i' → logprob: -9.153057098388672
    9. '               ' → logprob: -9.153057098388672
    10. ',i' → logprob: -9.903057098388672

Token 3584: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2383834719657898
    2. 'param' → logprob: -2.3633835315704346
    3. '           ' → logprob: -3.2383835315704346
    4. ',param' → logprob: -3.4883835315704346
    5. 'à' → logprob: -4.3633832931518555
    6. 'i' → logprob: -4.7383832931518555
    7. '=' → logprob: -4.7383832931518555
    8. 'at' → logprob: -4.8633832931518555
    9. ',i' → logprob: -6.3633832931518555
    10. '(param' → logprob: -6.4883832931518555

Token 3585: ' position' (ID: 4010)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.08250937610864639
    2. 'pos' → logprob: -2.5825092792510986
    3. 'position' → logprob: -5.707509517669678
    4. ' param' → logprob: -8.95750904083252
    5. ',param' → logprob: -9.45750904083252
    6. '(param' → logprob: -10.70750904083252
    7. ',' → logprob: -10.83250904083252
    8. 'gate' → logprob: -11.33250904083252
    9. '```' → logprob: -12.20750904083252
    10. '[param' → logprob: -12.70750904083252

Token 3586: ' pos' (ID: 1253)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.8104774951934814
    2. ',' → logprob: -1.1854774951934814
    3. 'i' → logprob: -1.5604774951934814
    4. ',param' → logprob: -3.6854774951934814
    5. 'ship' → logprob: -5.935477256774902
    6. 'idx' → logprob: -6.435477256774902
    7. '=' → logprob: -6.810477256774902
    8. ' =' → logprob: -6.935477256774902
    9. ',i' → logprob: -7.060477256774902
    10. '(param' → logprob: -7.185477256774902

Token 3587: ' cible' (ID: 136857)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6802747249603271
    2. ',' → logprob: -1.6802747249603271
    3. '           ' → logprob: -2.180274724960327
    4. '(i' → logprob: -2.805274724960327
    5. ',i' → logprob: -3.055274724960327
    6. '               ' → logprob: -3.430274724960327
    7. '=i' → logprob: -4.555274963378906
    8. '=' → logprob: -4.680274963378906
    9. ' =' → logprob: -4.805274963378906
    10. ' i' → logprob: -5.680274963378906

Token 3588: '
' (ID: 198)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06861389428377151
    2. 'i' → logprob: -2.8186140060424805
    3. '           ' → logprob: -5.8186140060424805
    4. '               ' → logprob: -6.5686140060424805
    5. ',i' → logprob: -7.4436140060424805
    6. ',' → logprob: -7.4436140060424805
    7. ' (' → logprob: -7.8186140060424805
    8. ' i' → logprob: -7.9436140060424805
    9. '(ship' → logprob: -8.94361400604248
    10. '(' → logprob: -10.06861400604248

Token 3589: '           ' (ID: 352)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0923151969909668
    2. ':' → logprob: -1.8423151969909668
    3. ':
' → logprob: -1.9673151969909668
    4. 'i' → logprob: -1.9673151969909668
    5. ',' → logprob: -2.717315196990967
    6. ',i' → logprob: -2.967315196990967
    7. '           ' → logprob: -3.592315196990967
    8. ':i' → logprob: -4.092315196990967
    9. '_i' → logprob: -4.217315196990967
    10. '```' → logprob: -4.342315196990967

Token 3590: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00568121112883091
    2. '(i' → logprob: -5.255681037902832
    3. '           ' → logprob: -8.755681037902832
    4. ' i' → logprob: -9.255681037902832
    5. '       ' → logprob: -9.505681037902832
    6. 'ship' → logprob: -9.505681037902832
    7. '(ship' → logprob: -11.255681037902832
    8. '```' → logprob: -11.630681037902832
    9. '               ' → logprob: -11.755681037902832
    10. '_i' → logprob: -12.380681037902832

Token 3591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00121428316924721
    2. '=' → logprob: -7.501214504241943
    3. '_,' → logprob: -7.626214504241943
    4. ' ,' → logprob: -9.376214027404785
    5. '_ship' → logprob: -10.626214027404785
    6. ',
' → logprob: -10.876214027404785
    7. 'n' → logprob: -11.251214027404785
    8. ' =' → logprob: -11.501214027404785
    9. 'ship' → logprob: -12.626214027404785
    10. 's' → logprob: -12.626214027404785

Token 3592: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -6.704273118884885e-07
    2. ' pos' → logprob: -14.625000953674316
    3. 'position' → logprob: -16.125
    4. '_pos' → logprob: -18.25
    5. '	pos' → logprob: -18.375
    6. '   ' → logprob: -18.5
    7. 'p' → logprob: -19.125
    8. 'param' → logprob: -19.5
    9. 'ship' → logprob: -20.25
    10. 'posit' → logprob: -20.5

Token 3593: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004449347034096718
    2. ' =' → logprob: -5.504449367523193
    3. ')' → logprob: -8.629448890686035
    4. '           ' → logprob: -10.004448890686035
    5. ',' → logprob: -10.129448890686035
    6. '_=' → logprob: -10.754448890686035
    7. '=
' → logprob: -11.004448890686035
    8. ')=' → logprob: -11.504448890686035
    9. '               ' → logprob: -11.754448890686035
    10. '                   ' → logprob: -11.879448890686035

Token 3594: ' param' (ID: 3802)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.1660243719816208
    2. 'pos' → logprob: -1.9160243272781372
    3. ' param' → logprob: -5.541024208068848
    4. 'i' → logprob: -6.791024208068848
    5. ' pos' → logprob: -7.291024208068848
    6. ' i' → logprob: -9.916024208068848
    7. 'position' → logprob: -13.791024208068848
    8. '	param' → logprob: -13.916024208068848
    9. 'int' → logprob: -14.041024208068848
    10. '(param' → logprob: -14.166024208068848

Token 3595: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19281770288944244
    2. '       ' → logprob: -2.4428176879882812
    3. '
' → logprob: -3.4428176879882812
    4. 'if' → logprob: -3.4428176879882812
    5. '#' → logprob: -4.317817687988281
    6. 'ship' → logprob: -5.567817687988281
    7. 's' → logprob: -6.067817687988281
    8. '            
' → logprob: -6.317817687988281
    9. ' if' → logprob: -6.692817687988281
    10. '        
' → logprob: -7.442817687988281

Token 3596: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014187720604240894
    2. 'if' → logprob: -4.889187812805176
    3. ' if' → logprob: -5.639187812805176
    4. '        
' → logprob: -7.014187812805176
    5. '
' → logprob: -7.264187812805176
    6. '           ' → logprob: -7.639187812805176
    7. '#' → logprob: -8.639187812805176
    8. '```' → logprob: -8.639187812805176
    9. '  
' → logprob: -9.139187812805176
    10. ' 
' → logprob: -9.514187812805176

Token 3597: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.31122493743896484
    2. 'ship' → logprob: -2.061224937438965
    3. 'if' → logprob: -2.186224937438965
    4. '#' → logprob: -3.811224937438965
    5. '       ' → logprob: -5.811224937438965
    6. '           ' → logprob: -6.436224937438965
    7. 'ships' → logprob: -7.686224937438965
    8. 'b' → logprob: -7.811224937438965
    9. '   ' → logprob: -9.311224937438965
    10. 'boat' → logprob: -10.186224937438965

Token 3598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.283711701631546
    2. '=' → logprob: -1.4087116718292236
    3. '=i' → logprob: -6.408711910247803
    4. '=s' → logprob: -8.033711433410645
    5. '.' → logprob: -8.908711433410645
    6. '   ' → logprob: -9.158711433410645
    7. 'hips' → logprob: -9.408711433410645
    8. 's' → logprob: -9.783711433410645
    9. '.=' → logprob: -10.533711433410645
    10. '           ' → logprob: -10.533711433410645

Token 3599: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -1.0445127372804563e-05
    2. ' ships' → logprob: -11.50001049041748
    3. 'hips' → logprob: -16.000009536743164
    4. 's' → logprob: -16.875009536743164
    5. '   ' → logprob: -17.500009536743164
    6. '           ' → logprob: -18.125009536743164
    7. 'ship' → logprob: -18.250009536743164
    8. 'Ships' → logprob: -18.500009536743164
    9. 'shops' → logprob: -19.125009536743164
    10. '       ' → logprob: -19.875009536743164

Token 3600: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. 's' → logprob: -12.750007629394531
    3. '[' → logprob: -13.000007629394531
    4. '[s' → logprob: -13.875007629394531
    5. 'i' → logprob: -14.125007629394531
    6. '[I' → logprob: -15.875007629394531
    7. '[
' → logprob: -17.00000762939453
    8. '```' → logprob: -17.25000762939453
    9. '[j' → logprob: -17.62500762939453
    10. '[]' → logprob: -18.25000762939453

Token 3601: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.2952892780303955
    2. ']' → logprob: -1.9202892780303955
    3. '           ' → logprob: -2.9202892780303955
    4. '].' → logprob: -3.0452892780303955
    5. ')
' → logprob: -6.045289039611816
    6. '            
' → logprob: -6.420289039611816
    7. '       ' → logprob: -7.045289039611816
    8. '
' → logprob: -7.545289039611816
    9. ')' → logprob: -8.045289039611816
    10. '               ' → logprob: -8.170289039611816

Token 3602: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.394707590341568
    2. '           ' → logprob: -1.1447075605392456
    3. '       ' → logprob: -5.144707679748535
    4. ' if' → logprob: -6.394707679748535
    5. '#' → logprob: -8.644707679748535
    6. '```' → logprob: -9.519707679748535
    7. '   ' → logprob: -10.019707679748535
    8. '               ' → logprob: -12.269707679748535
    9. '
' → logprob: -12.894707679748535
    10. '            
' → logprob: -13.894707679748535

Token 3603: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04501704126596451
    2. 's' → logprob: -3.4200170040130615
    3. '#' (adapté à ' #') → logprob: -4.920017242431641
    4. '           ' → logprob: -5.545017242431641
    5. '```' → logprob: -9.42001724243164
    6. '       ' → logprob: -12.29501724243164
    7. ' if' → logprob: -12.67001724243164
    8. 'ships' → logprob: -13.04501724243164
    9. '``' → logprob: -13.04501724243164
    10. 'ship' → logprob: -13.29501724243164

Token 3604: ' Corr' (ID: 60847)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0806853249669075
    2. '#' → logprob: -2.7056853771209717
    3. '           ' → logprob: -4.830685138702393
    4. 's' → logprob: -5.955685138702393
    5. '```' → logprob: -9.58068561553955
    6. '       ' → logprob: -10.70568561553955
    7. '``' → logprob: -12.58068561553955
    8. ' if' → logprob: -12.83068561553955
    9. '            
' → logprob: -12.83068561553955
    10. 'pos' → logprob: -12.95568561553955

Token 3605: 'iger' (ID: 5873)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.019574550911784172
    2. 'iger' → logprob: -4.5195746421813965
    3. 'ige' → logprob: -5.3945746421813965
    4. 'e' → logprob: -6.1445746421813965
    5. 'é' → logprob: -6.7695746421813965
    6. 'er' → logprob: -9.144574165344238
    7. '       ' → logprob: -9.269574165344238
    8. 'ec' → logprob: -9.519574165344238
    9. '   ' → logprob: -9.894574165344238
    10. '_' → logprob: -9.894574165344238

Token 3606: ' position' (ID: 4010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2835717499256134
    2. 'if' → logprob: -1.408571720123291
    3. '           ' → logprob: -6.658571720123291
    4. '#' → logprob: -7.533571720123291
    5. ' if' → logprob: -8.28357219696045
    6. 'pos' → logprob: -9.15857219696045
    7. ' s' → logprob: -9.28357219696045
    8. 'ships' → logprob: -9.78357219696045
    9. 'for' → logprob: -10.78357219696045
    10. 'abs' → logprob: -11.65857219696045

Token 3607: ' exacte' (ID: 188756)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011756736785173416
    2. ' =' → logprob: -4.511756896972656
    3. '           ' → logprob: -7.261756896972656
    4. '               ' → logprob: -12.761756896972656
    5. '=
' → logprob: -13.136756896972656
    6. '                   ' → logprob: -14.761756896972656
    7. '            ' → logprob: -14.886756896972656
    8. '       ' → logprob: -15.636756896972656
    9. 's' → logprob: -15.636756896972656
    10. '=s' → logprob: -15.636756896972656

Token 3608: ' possible' (ID: 4149)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010809217346832156
    2. ' =' → logprob: -7.3760809898376465
    3. 's' → logprob: -8.376080513000488
    4. '           ' → logprob: -8.626080513000488
    5. '=
' → logprob: -11.126080513000488
    6. '=s' → logprob: -11.251080513000488
    7. '```' → logprob: -12.376080513000488
    8. '                   ' → logprob: -12.626080513000488
    9. '               ' → logprob: -12.876080513000488
    10. ' s' → logprob: -13.376080513000488

Token 3609: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027934443205595016
    2. 's' → logprob: -4.152934551239014
    3. ' s' → logprob: -4.652934551239014
    4. ' =' → logprob: -6.902934551239014
    5. '=' → logprob: -7.527934551239014
    6. '               ' → logprob: -8.402934074401855
    7. '            
' → logprob: -8.902934074401855
    8. '       ' → logprob: -9.402934074401855
    9. ' if' → logprob: -9.902934074401855
    10. ',' → logprob: -9.902934074401855

Token 3610: ' cause' (ID: 7075)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -7.822646693966817e-06
    2. ' pos' → logprob: -12.250007629394531
    3. 's' → logprob: -13.250007629394531
    4. 'position' → logprob: -14.500007629394531
    5. '=' → logprob: -15.000007629394531
    6. '	pos' → logprob: -16.00000762939453
    7. '   ' → logprob: -16.25000762939453
    8. 'pass' → logprob: -18.12500762939453
    9. 'p' → logprob: -18.12500762939453
    10. 'posit' → logprob: -18.25000762939453

Token 3611: ' erreurs' (ID: 139891)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8485379815101624
    2. 'abs' → logprob: -0.9735379815101624
    3. 'EPS' → logprob: -1.8485379219055176
    4. ' EPS' → logprob: -4.223537921905518
    5. ' abs' → logprob: -4.973537921905518
    6. ' pos' → logprob: -5.598537921905518
    7. '+' → logprob: -5.848537921905518
    8. 'float' → logprob: -6.098537921905518
    9. '(pos' → logprob: -7.348537921905518
    10. 'dist' → logprob: -7.723537921905518

Token 3612: ' flott' (ID: 108700)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40297484397888184
    2. ' =' → logprob: -1.6529748439788818
    3. 'if' → logprob: -2.777974843978882
    4. '           ' → logprob: -3.027974843978882
    5. 's' → logprob: -4.277975082397461
    6. ' if' → logprob: -5.527975082397461
    7. '=
' → logprob: -5.777975082397461
    8. 'i' → logprob: -6.277975082397461
    9. 'pos' → logprob: -6.777975082397461
    10. ',' → logprob: -7.527975082397461

Token 3613: 'antes' (ID: 5193)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -1.0142408609390259
    2. 'ant' → logprob: -1.2642408609390259
    3. 'ement' → logprob: -2.3892407417297363
    4. '       ' → logprob: -3.0142407417297363
    5. 'uation' → logprob: -3.2642407417297363
    6. 'u' → logprob: -3.6392407417297363
    7. '+' → logprob: -3.8892407417297363
    8. '   ' → logprob: -4.014240741729736
    9. ')' → logprob: -4.264240741729736
    10. '-point' → logprob: -4.514240741729736

Token 3614: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1629554033279419
    2. 's' → logprob: -1.912955403327942
    3. 'if' → logprob: -6.412955284118652
    4. ' s' → logprob: -7.162955284118652
    5. ' if' → logprob: -8.412955284118652
    6. '       ' → logprob: -9.912955284118652
    7. '               ' → logprob: -10.662955284118652
    8. '   ' → logprob: -12.537955284118652
    9. '```' → logprob: -12.537955284118652
    10. '	s' → logprob: -13.287955284118652

Token 3615: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25637391209602356
    2. 's' → logprob: -2.256373882293701
    3. ' s' → logprob: -2.256373882293701
    4. ' if' → logprob: -4.256373882293701
    5. 'if' → logprob: -7.131373882293701
    6. '       ' → logprob: -7.381373882293701
    7. '               ' → logprob: -7.881373882293701
    8. '```' → logprob: -7.881373882293701
    9. '`s' → logprob: -9.88137435913086
    10. '   ' → logprob: -9.88137435913086

Token 3616: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.14420482516288757
    2. '           ' → logprob: -2.14420485496521
    3. ' s' → logprob: -4.269204616546631
    4. 'if' → logprob: -5.894204616546631
    5. ' if' → logprob: -8.269205093383789
    6. '               ' → logprob: -10.519205093383789
    7. '   ' → logprob: -10.644205093383789
    8. '`s' → logprob: -10.644205093383789
    9. '       ' → logprob: -11.019205093383789
    10. '```' → logprob: -11.144205093383789

Token 3617: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -2.8802491215174086e-05
    2. '.' → logprob: -11.000028610229492
    3. ' .' → logprob: -13.125028610229492
    4. ').' → logprob: -13.125028610229492
    5. '.position' → logprob: -13.250028610229492
    6. '`.' → logprob: -13.375028610229492
    7. '}.' → logprob: -14.125028610229492
    8. 'pos' → logprob: -14.125028610229492
    9. '           ' → logprob: -14.625028610229492
    10. '>.' → logprob: -14.625028610229492

Token 3618: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003600544296205044
    2. ' =' → logprob: -5.628600597381592
    3. '=
' → logprob: -15.128600120544434
    4. '.=' → logprob: -15.878600120544434
    5. '==' → logprob: -17.50360107421875
    6. '＝' → logprob: -17.75360107421875
    7. '   ' → logprob: -17.75360107421875
    8. '           ' → logprob: -17.87860107421875
    9. '=

' → logprob: -18.00360107421875
    10. ')=' → logprob: -18.62860107421875

Token 3619: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0004306692280806601
    2. ' pos' → logprob: -7.750430583953857
    3. 'float' → logprob: -18.250431060791016
    4. '	pos' → logprob: -19.000431060791016
    5. 'position' → logprob: -19.125431060791016
    6. '_pos' → logprob: -20.000431060791016
    7. '   ' → logprob: -20.750431060791016
    8. 'Pos' → logprob: -21.500431060791016
    9. '(pos' → logprob: -21.750431060791016
    10. 'posit' → logprob: -22.750431060791016

Token 3620: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009548653848469257
    2. '            
' → logprob: -5.259548664093018
    3. '<|end|>' → logprob: -5.884548664093018
    4. '
' → logprob: -6.884548664093018
    5. 'if' → logprob: -9.25954818725586
    6. '<|end|>' → logprob: -9.63454818725586
    7. ' if' → logprob: -9.75954818725586
    8. ' 
' → logprob: -10.00954818725586
    9. '           
' → logprob: -10.50954818725586
    10. '```' → logprob: -10.50954818725586

Token 3621: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2082192748785019
    2. 'if' → logprob: -1.708219289779663
    3. '       ' → logprob: -5.958219051361084
    4. '#' → logprob: -6.333219051361084
    5. ' if' → logprob: -6.833219051361084
    6. '<|end|>' → logprob: -7.333219051361084
    7. '```' → logprob: -7.583219051361084
    8. '   ' → logprob: -9.083219528198242
    9. '            
' → logprob: -10.583219528198242
    10. '               ' → logprob: -11.708219528198242

Token 3622: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25391876697540283
    2. '#' (adapté à ' #') → logprob: -1.7539187669754028
    3. '           ' → logprob: -3.0039186477661133
    4. '```' → logprob: -7.128918647766113
    5. 'gate' → logprob: -7.378918647766113
    6. 'next' → logprob: -10.253918647766113
    7. '       ' → logprob: -10.628918647766113
    8. 'found' → logprob: -11.253918647766113
    9. '``' → logprob: -11.378918647766113
    10. 'front' → logprob: -12.003918647766113

Token 3623: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.716528058052063
    2. 'if' → logprob: -0.716528058052063
    3. 'gate' → logprob: -4.216527938842773
    4. '           ' → logprob: -4.841527938842773
    5. 'found' → logprob: -8.341527938842773
    6. 'passed' → logprob: -9.216527938842773
    7. 'idx' → logprob: -9.716527938842773
    8. 'entered' → logprob: -11.216527938842773
    9. 'index' → logprob: -11.591527938842773
    10. '       ' → logprob: -12.091527938842773

Token 3624: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36013588309288025
    2. 'ifier' → logprob: -1.2351359128952026
    3. 'ification' → logprob: -4.735136032104492
    4. 'ifie' → logprob: -6.985136032104492
    5. '   ' → logprob: -7.485136032104492
    6. '#' → logprob: -8.360136032104492
    7. ' if' → logprob: -8.860136032104492
    8. 'ifications' → logprob: -9.110136032104492
    9. 'ifiez' → logprob: -9.110136032104492
    10. 'ify' → logprob: -9.110136032104492

Token 3625: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07991370558738708
    2. 'pos' → logprob: -2.70491361618042
    3. '#' → logprob: -5.07991361618042
    4. 'gate' → logprob: -5.95491361618042
    5. ' if' → logprob: -7.70491361618042
    6. '           ' → logprob: -8.204914093017578
    7. 'g' → logprob: -8.829914093017578
    8. 's' → logprob: -9.204914093017578
    9. 'any' → logprob: -10.204914093017578
    10. 'for' → logprob: -10.579914093017578

Token 3626: ' fin' (ID: 2131)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0006421420839615166
    2. 's' → logprob: -7.5006422996521
    3. ' pos' → logprob: -9.625641822814941
    4. 'abs' → logprob: -11.000641822814941
    5. 'position' → logprob: -13.000641822814941
    6. 'any' → logprob: -13.500641822814941
    7. ' s' → logprob: -13.750641822814941
    8. '	pos' → logprob: -14.625641822814941
    9. '(pos' → logprob: -15.250641822814941
    10. '#' → logprob: -15.250641822814941

Token 3627: ' atteint' (ID: 104876)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6189689636230469
    2. '           ' → logprob: -1.2439689636230469
    3. 's' → logprob: -2.493968963623047
    4. 'pos' → logprob: -3.118968963623047
    5. '(s' → logprob: -4.118968963623047
    6. '               ' → logprob: -4.618968963623047
    7. '       ' → logprob: -5.243968963623047
    8. '                   ' → logprob: -6.368968963623047
    9. ' if' → logprob: -6.618968963623047
    10. '   ' → logprob: -6.618968963623047

Token 3628: ' -->' (ID: 9307)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15263523161411285
    2. '           ' → logprob: -2.027635335922241
    3. ' if' → logprob: -4.652635097503662
    4. '       ' → logprob: -8.02763557434082
    5. '```' → logprob: -10.77763557434082
    6. '               ' → logprob: -11.15263557434082
    7. '   ' → logprob: -12.52763557434082
    8. '
' → logprob: -12.77763557434082
    9. 'import' → logprob: -12.90263557434082
    10. '``' → logprob: -14.02763557434082

Token 3629: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015328718349337578
    2. '           ' → logprob: -4.265328884124756
    3. ' if' → logprob: -6.765328884124756
    4. '```' → logprob: -11.515328407287598
    5. '               ' → logprob: -14.140328407287598
    6. '       ' → logprob: -14.890328407287598
    7. 'If' → logprob: -16.015329360961914
    8. '#' → logprob: -16.390329360961914
    9. '``' → logprob: -16.390329360961914
    10. '   ' → logprob: -16.515329360961914

Token 3630: '.pos' (ID: 25321)
  Prédit: '.done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.done' → logprob: -0.013870817609131336
    2. 'if' → logprob: -4.388870716094971
    3. 'done' → logprob: -6.638870716094971
    4. '.if' → logprob: -11.513871192932129
    5. '	done' → logprob: -11.638871192932129
    6. '.Done' → logprob: -11.763871192932129
    7. '_done' → logprob: -12.263871192932129
    8. 'i' → logprob: -12.513871192932129
    9. '(done' → logprob: -12.638871192932129
    10. '.finished' → logprob: -13.138871192932129

Token 3631: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0057808998972177505
    2. ' >=' → logprob: -5.5057806968688965
    3. '>' → logprob: -6.3807806968688965
    4. '```' → logprob: -13.005781173706055
    5. ' >' → logprob: -13.380781173706055
    6. ' ' → logprob: -13.630781173706055
    7. '   ' → logprob: -13.755781173706055
    8. '≥' → logprob: -14.505781173706055
    9. '+' → logprob: -15.880781173706055
    10. '``' → logprob: -16.005781173706055

Token 3632: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00010926496179308742
    2. ' K' → logprob: -9.125109672546387
    3. '   ' → logprob: -16.00010871887207
    4. ' ' → logprob: -16.87510871887207
    5. '	K' → logprob: -17.12510871887207
    6. '           ' → logprob: -17.62510871887207
    7. '       ' → logprob: -18.00010871887207
    8. ' ' → logprob: -18.37510871887207
    9. '```' → logprob: -18.50010871887207
    10. '>K' → logprob: -19.25010871887207

Token 3633: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0049424623139202595
    2. 'if' → logprob: -5.629942417144775
    3. ' if' → logprob: -6.754942417144775
    4. '               ' → logprob: -9.004942893981934
    5. '```' → logprob: -10.879942893981934
    6. ' and' → logprob: -11.129942893981934
    7. 'and' → logprob: -11.379942893981934
    8. '       ' → logprob: -12.129942893981934
    9. '``' → logprob: -14.629942893981934
    10. '   ' → logprob: -14.754942893981934

Token 3634: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08757297694683075
    2. '               ' → logprob: -2.8375730514526367
    3. ' if' → logprob: -4.087573051452637
    4. 'if' → logprob: -5.462573051452637
    5. '```' → logprob: -5.962573051452637
    6. ':
' → logprob: -7.212573051452637
    7. ' and' → logprob: -7.962573051452637
    8. '
' → logprob: -8.587573051452637
    9. '``' → logprob: -9.712573051452637
    10. 'and' → logprob: -9.962573051452637

Token 3635: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10108582675457001
    2. '           ' → logprob: -2.351085901260376
    3. ' if' → logprob: -7.101085662841797
    4. '```' → logprob: -9.851085662841797
    5. '       ' → logprob: -13.976085662841797
    6. '               ' → logprob: -14.476085662841797
    7. '``' → logprob: -15.101085662841797
    8. '	if' → logprob: -16.476085662841797
    9. '		' → logprob: -16.851085662841797
    10. '   ' → logprob: -16.976085662841797

Token 3636: ' s' (ID: 265)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2861116826534271
    2. 's' → logprob: -1.4111117124557495
    3. ' s' → logprob: -5.786111831665039
    4. ' pos' → logprob: -6.286111831665039
    5. 'K' → logprob: -12.036111831665039
    6. '(pos' → logprob: -12.536111831665039
    7. '	pos' → logprob: -13.036111831665039
    8. '   ' → logprob: -13.036111831665039
    9. ' K' → logprob: -14.411111831665039
    10. 'position' → logprob: -14.661111831665039

Token 3637: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.02948118932545185
    2. '>=' → logprob: -3.6544811725616455
    3. ' >=' → logprob: -5.779481410980225
    4. 'pos' → logprob: -9.904480934143066
    5. '.' → logprob: -11.404480934143066
    6. '>' → logprob: -11.904480934143066
    7. ' .' → logprob: -11.904480934143066
    8. '   ' → logprob: -12.654480934143066
    9. '[pos' → logprob: -12.779480934143066
    10. ' ' → logprob: -13.279480934143066

Token 3638: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6931807398796082
    2. '>=' → logprob: -0.6931807398796082
    3. '>' → logprob: -10.693181037902832
    4. ' ' → logprob: -12.318181037902832
    5. '   ' → logprob: -12.693181037902832
    6. '+' → logprob: -13.818181037902832
    7. ' >' → logprob: -14.568181037902832
    8. ')>=' → logprob: -14.943181037902832
    9. '```' → logprob: -15.318181037902832
    10. ' ' → logprob: -15.318181037902832

Token 3639: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0019288709154352546
    2. ' K' → logprob: -6.251928806304932
    3. '           ' → logprob: -16.251928329467773
    4. '   ' → logprob: -16.376928329467773
    5. '       ' → logprob: -18.376928329467773
    6. '	K' → logprob: -18.751928329467773
    7. '    ' → logprob: -19.126928329467773
    8. '  ' → logprob: -19.126928329467773
    9. ' ' → logprob: -19.251928329467773
    10. '               ' → logprob: -19.626928329467773

Token 3640: ' -' (ID: 533)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7824732065200806
    2. ':' → logprob: -1.0324732065200806
    3. '           ' → logprob: -1.9074732065200806
    4. '               ' → logprob: -3.407473087310791
    5. ' and' → logprob: -6.782473087310791
    6. 'and' → logprob: -7.157473087310791
    7. ' -' → logprob: -7.157473087310791
    8. '-' → logprob: -7.157473087310791
    9. '       ' → logprob: -7.407473087310791
    10. '          ' → logprob: -8.53247356414795

Token 3641: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0003010233340319246
    2. '1' → logprob: -8.125301361083984
    3. ' EPS' → logprob: -12.500301361083984
    4. '0' → logprob: -15.000301361083984
    5. 'EP' → logprob: -15.250301361083984
    6. 'sys' → logprob: -15.500301361083984
    7. 'ESP' → logprob: -15.625301361083984
    8. '10' → logprob: -16.625301361083984
    9. 'EPT' → logprob: -16.875301361083984
    10. 'eps' → logprob: -17.375301361083984

Token 3642: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07501871138811111
    2. '               ' → logprob: -2.9500186443328857
    3. ':' → logprob: -4.450018882751465
    4. '           ' → logprob: -4.825018882751465
    5. ' and' → logprob: -9.575018882751465
    6. '):
' → logprob: -9.700018882751465
    7. 'and' → logprob: -11.200018882751465
    8. 's' → logprob: -11.200018882751465
    9. ' :
' → logprob: -11.325018882751465
    10. '       ' → logprob: -11.575018882751465

Token 3643: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008930678479373455
    2. 's' → logprob: -4.758930683135986
    3. '           ' → logprob: -9.133930206298828
    4. '```' → logprob: -9.133930206298828
    5. ' s' → logprob: -9.758930206298828
    6. '                   ' → logprob: -11.133930206298828
    7. '``' → logprob: -11.508930206298828
    8. '       ' → logprob: -11.758930206298828
    9. '   ' → logprob: -12.508930206298828
    10. '                       ' → logprob: -13.508930206298828

Token 3644: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.05069500952959061
    2. '               ' → logprob: -3.0506949424743652
    3. '           ' → logprob: -6.425694942474365
    4. ' s' → logprob: -7.800694942474365
    5. '```' → logprob: -9.800695419311523
    6. '``' → logprob: -12.050695419311523
    7. '                   ' → logprob: -12.175695419311523
    8. '   ' → logprob: -12.175695419311523
    9. '`s' → logprob: -13.050695419311523
    10. '       ' → logprob: -13.425695419311523

Token 3645: '.done' (ID: 64548)
  Prédit: '.done'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.done' → logprob: -0.0005691178957931697
    2. '.pos' → logprob: -7.5005693435668945
    3. 'done' → logprob: -11.625569343566895
    4. '.one' → logprob: -12.750569343566895
    5. '           ' → logprob: -13.500569343566895
    6. '.Done' → logprob: -14.250569343566895
    7. '.completed' → logprob: -15.000569343566895
    8. '   ' → logprob: -15.125569343566895
    9. '.s' → logprob: -15.125569343566895
    10. '.finished' → logprob: -15.125569343566895

Token 3646: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018156379461288452
    2. ' =' → logprob: -4.0181565284729
    3. '=True' → logprob: -12.268156051635742
    4. '           ' → logprob: -13.768156051635742
    5. '               ' → logprob: -15.143156051635742
    6. '       ' → logprob: -15.393156051635742
    7. '   ' → logprob: -16.768156051635742
    8. '                   ' → logprob: -16.893156051635742
    9. '=
' → logprob: -18.018156051635742
    10. '=False' → logprob: -18.143156051635742

Token 3647: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.034592388459714e-06
    2. ' True' → logprob: -12.375005722045898
    3. '               ' → logprob: -14.000005722045898
    4. '           ' → logprob: -14.875005722045898
    5. '                   ' → logprob: -15.375005722045898
    6. '=True' → logprob: -16.1250057220459
    7. '(True' → logprob: -16.3750057220459
    8. '   ' → logprob: -16.8750057220459
    9. 'true' → logprob: -17.5000057220459
    10. '                       ' → logprob: -17.6250057220459

Token 3648: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23550763726234436
    2. '           ' → logprob: -1.610507607460022
    3. 'continue' → logprob: -5.485507488250732
    4. '<|end|>' → logprob: -5.985507488250732
    5. ' continue' → logprob: -7.235507488250732
    6. '       ' → logprob: -7.360507488250732
    7. ' ships' → logprob: -7.735507488250732
    8. '                   ' → logprob: -7.985507488250732
    9. 'ships' → logprob: -8.36050796508789
    10. '```' → logprob: -8.48550796508789

Token 3649: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11440829932689667
    2. 'continue' → logprob: -2.864408254623413
    3. 'ships' → logprob: -3.739408254623413
    4. '               ' → logprob: -3.739408254623413
    5. ' ships' → logprob: -6.364408493041992
    6. '```' → logprob: -7.489408493041992
    7. '       ' → logprob: -8.114408493041992
    8. 'for' → logprob: -8.239408493041992
    9. ' continue' → logprob: -8.364408493041992
    10. 's' → logprob: -8.864408493041992

Token 3650: ' s' (ID: 265)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.4800550639629364
    2. 's' (adapté à ' s') → logprob: -1.2300550937652588
    3. 'for' → logprob: -2.730055093765259
    4. '           ' → logprob: -4.73005485534668
    5. 'adjust' → logprob: -5.23005485534668
    6. 'continue' → logprob: -5.60505485534668
    7. 'ship' → logprob: -5.73005485534668
    8. '#' → logprob: -6.85505485534668
    9. '               ' → logprob: -7.85505485534668
    10. '   ' → logprob: -8.23005485534668

Token 3651: '.speed' (ID: 54856)
  Prédit: '.speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.014392667450010777
    2. 'peed' → logprob: -5.139392852783203
    3. '.pos' → logprob: -5.264392852783203
    4. 'speed' → logprob: -5.889392852783203
    5. 'pos' → logprob: -8.639392852783203
    6. '.s' → logprob: -9.014392852783203
    7. 's' → logprob: -10.014392852783203
    8. '.ship' → logprob: -10.889392852783203
    9. '	speed' → logprob: -11.389392852783203
    10. 'e' → logprob: -11.389392852783203

Token 3652: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715370807796717
    2. ' =' → logprob: -5.006715297698975
    3. '＝' → logprob: -17.631715774536133
    4. '.=' → logprob: -18.881715774536133
    5. '	' → logprob: -19.631715774536133
    6. '0' → logprob: -19.756715774536133
    7. ' ' → logprob: -19.756715774536133
    8. '=
' → logprob: -19.881715774536133
    9. '[' → logprob: -20.006715774536133
    10. 's' → logprob: -20.506715774536133

Token 3653: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.000001907348633
    4. 's' → logprob: -17.750001907348633
    5. '```' → logprob: -18.000001907348633
    6. '           ' → logprob: -19.000001907348633
    7. '۰' → logprob: -19.250001907348633
    8. '       ' → logprob: -19.875001907348633
    9. '               ' → logprob: -19.937501907348633
    10. '                   ' → logprob: -20.062501907348633

Token 3654: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. 's' → logprob: -15.000000953674316
    4. '   ' → logprob: -18.25
    5. '```' → logprob: -18.5625
    6. 'float' → logprob: -18.75
    7. 'ships' → logprob: -18.75
    8. '000' → logprob: -19.0
    9. '00' → logprob: -19.0
    10. '1' → logprob: -19.125

Token 3655: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: 0.0
    2. '0' → logprob: -17.75
    3. '<|end|>' → logprob: -18.5
    4. '.
' → logprob: -18.875
    5. ' .' → logprob: -20.125
    6. '‌.' → logprob: -20.375
    7. '[' → logprob: -20.75
    8. '\.' → logprob: -21.125
    9. 'e' → logprob: -21.125
    10. ' ' → logprob: -21.75

Token 3656: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -23.25
    3. '```' → logprob: -23.25
    4. '000' → logprob: -23.5
    5. '   ' → logprob: -23.875
    6. '00' → logprob: -24.0
    7. '       ' → logprob: -24.25
    8. '.' → logprob: -24.5
    9. 'def' → logprob: -24.875
    10. '           ' → logprob: -25.125

Token 3657: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13391084969043732
    2. '               ' → logprob: -2.133910894393921
    3. 'continue' → logprob: -5.133910655975342
    4. '       ' → logprob: -7.383910655975342
    5. ' continue' → logprob: -8.6339111328125
    6. '```' → logprob: -9.1339111328125
    7. '<|end|>' → logprob: -10.3839111328125
    8. '            
' → logprob: -10.7589111328125
    9. 'for' → logprob: -11.0089111328125
    10. '
' → logprob: -11.0089111328125

Token 3658: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23988035321235657
    2. '               ' → logprob: -1.6148803234100342
    3. '            
' → logprob: -5.489880561828613
    4. 'continue' → logprob: -5.864880561828613
    5. '       ' → logprob: -5.989880561828613
    6. '```' → logprob: -6.614880561828613
    7. ' continue' → logprob: -6.739880561828613
    8. '<|end|>' → logprob: -7.489880561828613
    9. '                
' → logprob: -7.864880561828613
    10. '                   ' → logprob: -7.989880561828613

Token 3659: ' ship' (ID: 12407)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.3323293924331665
    2. 'continue' → logprob: -1.8323293924331665
    3. 'for' → logprob: -2.832329273223877
    4. 'res' → logprob: -2.832329273223877
    5. 'ship' (adapté à ' ship') → logprob: -6.332329273223877
    6. '#' → logprob: -7.332329273223877
    7. 'if' → logprob: -7.457329273223877
    8. 'ships' → logprob: -7.582329273223877
    9. '   ' → logprob: -7.582329273223877
    10. '           ' → logprob: -7.957329273223877

Token 3660: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.00022356293629854918
    2. '_done' → logprob: -8.500223159790039
    3. 's' → logprob: -11.375223159790039
    4. 'done' → logprob: -11.875223159790039
    5. '_inside' → logprob: -14.250223159790039
    6. '_completed' → logprob: -15.500223159790039
    7. 'In' → logprob: -15.625223159790039
    8. '_finished' → logprob: -15.750223159790039
    9. 'in' → logprob: -16.62522315979004
    10. '_out' → logprob: -16.75022315979004

Token 3661: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.004376005381345749
    2. 'sas' → logprob: -5.50437593460083
    3. 's' → logprob: -8.379376411437988
    4. '[s' → logprob: -9.879376411437988
    5. '_' → logprob: -11.629376411437988
    6. '[' → logprob: -13.004376411437988
    7. '_in' → logprob: -13.754376411437988
    8. '[_' → logprob: -14.629376411437988
    9. '```' → logprob: -15.004376411437988
    10. '__' → logprob: -15.129376411437988

Token 3662: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0031225793063640594
    2. 'sas' → logprob: -6.503122806549072
    3. 's' → logprob: -6.628122806549072
    4. '_s' → logprob: -8.628122329711914
    5. '[' → logprob: -9.878122329711914
    6. '_as' → logprob: -10.378122329711914
    7. '[s' → logprob: -10.753122329711914
    8. '```' → logprob: -13.003122329711914
    9. 'ass' → logprob: -13.253122329711914
    10. 'ас' → logprob: -13.503122329711914

Token 3663: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.318681188422488e-05
    2. '[' → logprob: -12.00001335144043
    3. '[s' → logprob: -12.00001335144043
    4. ' [' → logprob: -15.12501335144043
    5. '=' → logprob: -15.25001335144043
    6. '```' → logprob: -16.12501335144043
    7. ' =' → logprob: -16.37501335144043
    8. '\[' → logprob: -16.62501335144043
    9. '=[' → logprob: -17.25001335144043
    10. 'i' → logprob: -17.75001335144043

Token 3664: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0037833312526345253
    2. ' =' → logprob: -5.753783226013184
    3. ']' → logprob: -7.753783226013184
    4. ']=' → logprob: -9.253783226013184
    5. '[' → logprob: -10.003783226013184
    6. '[i' → logprob: -10.753783226013184
    7. '=None' → logprob: -11.378783226013184
    8. '   ' → logprob: -14.503783226013184
    9. 'None' → logprob: -14.628783226013184
    10. '=
' → logprob: -15.128783226013184

Token 3665: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00043126524542458355
    2. ' =' → logprob: -7.750431060791016
    3. '=None' → logprob: -14.500431060791016
    4. '[' → logprob: -19.000431060791016
    5. '=
' → logprob: -19.000431060791016
    6. ']=' → logprob: -19.250431060791016
    7. '[i' → logprob: -19.625431060791016
    8. '＝' → logprob: -19.875431060791016
    9. '   ' → logprob: -20.250431060791016
    10. ')=' → logprob: -20.750431060791016

Token 3666: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.8624639324116288e-06
    2. ' None' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.375001907348633
    4. '_None' → logprob: -17.875001907348633
    5. '(None' → logprob: -18.375001907348633
    6. '[' → logprob: -18.875001907348633
    7. '=None' → logprob: -19.500001907348633
    8. 'none' → logprob: -20.875001907348633
    9. ',None' → logprob: -20.875001907348633
    10. '                   ' → logprob: -21.750001907348633

Token 3667: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012759549543261528
    2. '           ' → logprob: -4.887759685516357
    3. 'continue' → logprob: -5.637759685516357
    4. ' continue' → logprob: -6.637759685516357
    5. '<|end|>' → logprob: -8.7627592086792
    6. '
' → logprob: -10.1377592086792
    7. '                   ' → logprob: -10.8877592086792
    8. '_continue' → logprob: -11.7627592086792
    9. '```' → logprob: -12.1377592086792
    10. '	continue' → logprob: -12.2627592086792

Token 3668: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30049917101860046
    2. 'continue' → logprob: -2.050499200820923
    3. '               ' → logprob: -2.300499200820923
    4. ' continue' → logprob: -4.050498962402344
    5. '```' → logprob: -5.300498962402344
    6. '            
' → logprob: -6.175498962402344
    7. '                   ' → logprob: -6.300498962402344
    8. '       ' → logprob: -6.800498962402344
    9. '
' → logprob: -7.300498962402344
    10. '<|end|>' → logprob: -7.925498962402344

Token 3669: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.021260103210806847
    2. 'for' → logprob: -4.1462602615356445
    3. 'adjust' → logprob: -6.0212602615356445
    4. '           ' → logprob: -6.2712602615356445
    5. '               ' → logprob: -8.021260261535645
    6. '```' → logprob: -8.521260261535645
    7. '                   ' → logprob: -9.021260261535645
    8. ' continue' → logprob: -9.521260261535645
    9. 'heap' → logprob: -9.771260261535645
    10. '       ' → logprob: -10.646260261535645

Token 3670: ' Quand' (ID: 67052)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.06409183144569397
    2. 'continue' → logprob: -3.314091920852661
    3. 'for' → logprob: -3.939091920852661
    4. 'res' → logprob: -5.439091682434082
    5. 'if' → logprob: -7.064091682434082
    6. '#' → logprob: -7.439091682434082
    7. '   ' → logprob: -8.439091682434082
    8. '           ' → logprob: -10.064091682434082
    9. 'heap' → logprob: -10.189091682434082
    10. '       ' → logprob: -10.189091682434082

Token 3671: ' bateau' (ID: 123794)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0343647003173828
    2. 's' → logprob: -1.2843647003173828
    3. 'i' → logprob: -1.4093647003173828
    4. 'all' → logprob: -2.784364700317383
    5. 'len' → logprob: -3.784364700317383
    6. 'ships' → logprob: -4.659364700317383
    7. 'True' → logprob: -4.909364700317383
    8. 'le' → logprob: -5.659364700317383
    9. 'not' → logprob: -5.784364700317383
    10. ' s' → logprob: -5.909364700317383

Token 3672: ' fini' (ID: 63561)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4649425745010376
    2. 'sort' → logprob: -1.4649425745010376
    3. 'arr' → logprob: -2.214942455291748
    4. 'i' → logprob: -2.964942455291748
    5. ' dépasse' → logprob: -3.089942455291748
    6. 'est' → logprob: -3.339942455291748
    7. '.' → logprob: -3.589942455291748
    8. 'dé' → logprob: -3.839942455291748
    9. 'pos' → logprob: -3.964942455291748
    10. ' sort' → logprob: -3.964942455291748

Token 3673: ',' (ID: 11)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.645812451839447
    2. '               ' → logprob: -1.0208125114440918
    3. '#' → logprob: -2.770812511444092
    4. '                   ' → logprob: -3.645812511444092
    5. '           ' → logprob: -5.020812511444092
    6. ',' → logprob: -5.270812511444092
    7. ':
' → logprob: -6.020812511444092
    8. 'if' → logprob: -6.020812511444092
    9. ' continue' → logprob: -6.270812511444092
    10. '                       ' → logprob: -6.395812511444092

Token 3674: ' on' (ID: 402)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.4982176721096039
    2. '#' → logprob: -1.2482177019119263
    3. 'for' → logprob: -2.7482175827026367
    4. '               ' → logprob: -3.6232175827026367
    5. '           ' → logprob: -4.623217582702637
    6. 'if' → logprob: -5.998217582702637
    7. 'res' → logprob: -7.248217582702637
    8. '                   ' → logprob: -8.373217582702637
    9. '   ' → logprob: -8.373217582702637
    10. 'continue' → logprob: -8.498217582702637

Token 3675: ' doit' (ID: 21822)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.44256263971328735
    2. 'for' → logprob: -1.8175625801086426
    3. 'continue' → logprob: -2.3175625801086426
    4. '#' → logprob: -3.0675625801086426
    5. '       ' → logprob: -3.6925625801086426
    6. '           ' → logprob: -4.067562580108643
    7. 'res' → logprob: -5.942562580108643
    8. 'contin' → logprob: -6.442562580108643
    9. '   ' → logprob: -6.692562580108643
    10. ' for' → logprob: -7.817562580108643

Token 3676: ' laisser' (ID: 50626)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.5791656970977783
    2. '#' → logprob: -1.3291656970977783
    3. 'aj' → logprob: -2.2041656970977783
    4. 'for' → logprob: -4.204165458679199
    5. '   ' → logprob: -4.329165458679199
    6. 're' → logprob: -4.704165458679199
    7. '           ' → logprob: -4.704165458679199
    8. '       ' → logprob: -4.829165458679199
    9. 'ré' → logprob: -5.829165458679199
    10. 'forcer' → logprob: -6.079165458679199

Token 3677: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.051519621163606644
    2. 'pass' → logprob: -4.051519393920898
    3. 'contin' → logprob: -4.551519393920898
    4. '#' → logprob: -5.176519393920898
    5. 'place' → logprob: -5.426519393920898
    6. 'la' → logprob: -5.926519393920898
    7. 'les' → logprob: -6.176519393920898
    8. 'tour' → logprob: -6.301519393920898
    9. 'l' → logprob: -6.676519393920898
    10. '```' → logprob: -6.801519393920898

Token 3678: ' suivant' (ID: 68705)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.8563129901885986
    2. 'temps' → logprob: -1.4813129901885986
    3. 'rest' → logprob: -2.3563129901885986
    4. 'port' → logprob: -3.2313129901885986
    5. 'reste' → logprob: -3.6063129901885986
    6. 'ship' → logprob: -3.8563129901885986
    7. '#' → logprob: -3.8563129901885986
    8. 'v' → logprob: -3.9813129901885986
    9. 's' → logprob: -3.9813129901885986
    10. 'i' → logprob: -4.1063127517700195

Token 3679: ' accél' (ID: 152966)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9258989095687866
    2. 'continue' → logprob: -1.5508989095687866
    3. 'pass' → logprob: -1.8008989095687866
    4. 'faire' → logprob: -2.425899028778076
    5. 'contin' → logprob: -3.300899028778076
    6. 's' → logprob: -4.175899028778076
    7. ' continuer' → logprob: -4.300899028778076
    8. 'à' → logprob: -4.425899028778076
    9. '```' → logprob: -4.800899028778076
    10. 'for' → logprob: -5.175899028778076

Token 3680: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.13317538797855377
    2. 'él' → logprob: -2.7581753730773926
    3. 'er' → logprob: -3.6331753730773926
    4. 'eler' → logprob: -3.7581753730773926
    5. 'éder' → logprob: -5.383175373077393
    6. 'erer' → logprob: -5.508175373077393
    7. 'é' → logprob: -6.383175373077393
    8. 'el' → logprob: -7.758175373077393
    9. 'è' → logprob: -8.00817584991455
    10. 'éer' → logprob: -8.25817584991455

Token 3681: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0435020737349987
    2. '               ' → logprob: -3.29350209236145
    3. 'continue' → logprob: -6.293501853942871
    4. 'for' → logprob: -6.668501853942871
    5. ' for' → logprob: -7.418501853942871
    6. ',' → logprob: -7.543501853942871
    7. '```' → logprob: -7.918501853942871
    8. '<|end|>' → logprob: -8.543501853942871
    9. '       ' → logprob: -8.668501853942871
    10. ' continue' → logprob: -8.918501853942871

Token 3682: ''il' (ID: 14683)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -1.0516040325164795
    2. 'ans' → logprob: -1.4266040325164795
    3. 'u' → logprob: -2.0516040325164795
    4. 'i' → logprob: -2.1766040325164795
    5. 'peed' → logprob: -2.5516040325164795
    6. 'urtout' → logprob: -3.0516040325164795
    7. ''il' → logprob: -5.051604270935059
    8. 'uite' → logprob: -5.551604270935059
    9. 'paces' → logprob: -5.676604270935059
    10. 'v' → logprob: -5.676604270935059

Token 3683: ' peut' (ID: 9216)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6664671897888184
    2. 'est' → logprob: -1.5414671897888184
    3. '#' → logprob: -2.0414671897888184
    4. '```' → logprob: -3.7914671897888184
    5. 'possible' → logprob: -3.9164671897888184
    6. 'reste' → logprob: -4.166467189788818
    7. 'a' → logprob: -4.416467189788818
    8. ''agit' → logprob: -4.666467189788818
    9. ''est' → logprob: -4.916467189788818
    10. 'exists' → logprob: -4.916467189788818

Token 3684: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01065914798527956
    2. '           ' → logprob: -4.760659217834473
    3. ',' → logprob: -7.260659217834473
    4. 'continue' → logprob: -7.885659217834473
    5. '       ' → logprob: -8.260659217834473
    6. ' for' → logprob: -8.635659217834473
    7. '```' → logprob: -9.385659217834473
    8. 'for' → logprob: -9.510659217834473
    9. ' continue' → logprob: -9.510659217834473
    10. ',
' → logprob: -9.635659217834473

Token 3685: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004860734101384878
    2. '           ' → logprob: -5.504860877990723
    3. 'continue' → logprob: -8.629860877990723
    4. '                
' → logprob: -9.129860877990723
    5. ' continue' → logprob: -9.254860877990723
    6. '       ' → logprob: -9.379860877990723
    7. '                   ' → logprob: -9.379860877990723
    8. '
' → logprob: -9.629860877990723
    9. '```' → logprob: -10.129860877990723
    10. '<|end|>' → logprob: -10.379860877990723

Token 3686: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47642531991004944
    2. ' adjust' → logprob: -1.976425290107727
    3. 'adjust' → logprob: -2.3514254093170166
    4. ' for' → logprob: -2.6014254093170166
    5. '           ' → logprob: -3.4764254093170166
    6. 'for' → logprob: -3.7264254093170166
    7. ' continue' → logprob: -4.9764251708984375
    8. 'continue' → logprob: -5.8514251708984375
    9. '
' → logprob: -6.1014251708984375
    10. '```' → logprob: -7.1014251708984375

Token 3687: ' Re' (ID: 907)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.021572938188910484
    2. 'for' → logprob: -4.396573066711426
    3. 'changed' → logprob: -5.521573066711426
    4. '   ' → logprob: -6.021573066711426
    5. 'change' → logprob: -7.021573066711426
    6. '           ' → logprob: -7.646573066711426
    7. '       ' → logprob: -7.896573066711426
    8. 'if' → logprob: -8.021573066711426
    9. '#' → logprob: -8.646573066711426
    10. 'adj' → logprob: -9.146573066711426

Token 3688: '-aj' (ID: 167553)
  Prédit: 'schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'schedule' → logprob: -0.15521955490112305
    2. 'adjust' → logprob: -2.030219554901123
    3. 's' → logprob: -4.780219554901123
    4. 'for' → logprob: -6.655219554901123
    5. '#' → logprob: -7.155219554901123
    6. 'aj' → logprob: -8.030220031738281
    7. '   ' → logprob: -8.280220031738281
    8. 'arr' → logprob: -8.530220031738281
    9. 'res' → logprob: -8.655220031738281
    10. '       ' → logprob: -8.780220031738281

Token 3689: 'uster' (ID: 7282)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5678088665008545
    2. 'just' → logprob: -1.3178088665008545
    3. 'dj' → logprob: -1.8178088665008545
    4. 'j' → logprob: -7.317809104919434
    5. 'du' → logprob: -7.567809104919434
    6. '       ' → logprob: -8.442809104919434
    7. 'dy' → logprob: -8.442809104919434
    8. 'l' → logprob: -8.442809104919434
    9. '   ' → logprob: -8.692809104919434
    10. 'jus' → logprob: -8.942809104919434

Token 3690: ' vit' (ID: 9281)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.006825128570199013
    2. '   ' → logprob: -6.006824970245361
    3. '       ' → logprob: -6.131824970245361
    4. 'spe' → logprob: -6.381824970245361
    5. 'for' → logprob: -8.25682544708252
    6. ' adjust' → logprob: -9.50682544708252
    7. '           ' → logprob: -10.38182544708252
    8. '```' → logprob: -10.75682544708252
    9. 'speed' → logprob: -11.00682544708252
    10. 's' → logprob: -11.38182544708252

Token 3691: 'esses' (ID: 38380)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.42005491256713867
    2. 'es' → logprob: -1.7950549125671387
    3. 'e' → logprob: -2.4200549125671387
    4. '_speed' → logprob: -4.420054912567139
    5. 'ités' → logprob: -4.670054912567139
    6. 'els' → logprob: -4.670054912567139
    7. 'esses' → logprob: -4.670054912567139
    8. '_s' → logprob: -4.795054912567139
    9. 's' → logprob: -5.170054912567139
    10. 'itesse' → logprob: -5.545054912567139

Token 3692: ' et' (ID: 859)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008465525694191456
    2. 'adjust' → logprob: -5.75846529006958
    3. '           ' → logprob: -6.38346529006958
    4. '                   ' → logprob: -6.63346529006958
    5. ',' → logprob: -7.25846529006958
    6. '
' → logprob: -8.133465766906738
    7. '```' → logprob: -8.633465766906738
    8. '()
' → logprob: -8.633465766906738
    9. ' and' → logprob: -8.883465766906738
    10. ':
' → logprob: -9.008465766906738

Token 3693: ' ré' (ID: 3146)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0004665385349653661
    2. ' res' → logprob: -7.750466346740723
    3. '   ' → logprob: -11.500466346740723
    4. 're' → logprob: -11.625466346740723
    5. 'for' → logprob: -12.125466346740723
    6. '#' → logprob: -13.000466346740723
    7. 'schedule' → logprob: -13.250466346740723
    8. '       ' → logprob: -13.750466346740723
    9. '```' → logprob: -13.750466346740723
    10. 'continue' → logprob: -13.875466346740723

Token 3694: 'ordon' (ID: 39916)
  Prédit: 'schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'schedule' → logprob: -0.0027698094490915537
    2. 's' → logprob: -6.877769947052002
    3. 'scheduler' → logprob: -7.127769947052002
    4. 'es' → logprob: -7.252769947052002
    5. 'aj' → logprob: -9.502769470214844
    6. 'chedule' → logprob: -10.002769470214844
    7. 'program' → logprob: -10.877769470214844
    8. 'arr' → logprob: -11.002769470214844
    9. 'sched' → logprob: -11.252769470214844
    10. 'plan' → logprob: -11.252769470214844

Token 3695: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.06309959292411804
    2. 'der' → logprob: -2.9380996227264404
    3. 'er' → logprob: -4.938099384307861
    4. 'rer' → logprob: -8.18809986114502
    5. 'gan' → logprob: -8.43809986114502
    6. 't' → logprob: -9.06309986114502
    7. 'n' → logprob: -9.06309986114502
    8. 'nner' → logprob: -9.18809986114502
    9. 'ger' → logprob: -9.81309986114502
    10. 'r' → logprob: -10.56309986114502

Token 3696: ' ev' (ID: 5332)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.02213290147483349
    2. 'changed' → logprob: -4.147132873535156
    3. '   ' → logprob: -5.272132873535156
    4. '       ' → logprob: -8.147132873535156
    5. 'change' → logprob: -8.272132873535156
    6. 'for' → logprob: -9.022132873535156
    7. '```' → logprob: -9.272132873535156
    8. '           ' → logprob: -9.772132873535156
    9. ' adjust' → logprob: -9.772132873535156
    10. '               ' → logprob: -10.647132873535156

Token 3697: 'ènements' (ID: 178488)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.31392017006874084
    2. 'ent' → logprob: -1.3139201402664185
    3. 'nts' → logprob: -8.938920021057129
    4. '   ' → logprob: -9.063920021057129
    5. 'queue' → logprob: -9.688920021057129
    6. '       ' → logprob: -9.813920021057129
    7. 'e' → logprob: -9.813920021057129
    8. 'enue' → logprob: -10.188920021057129
    9. 'nt' → logprob: -10.313920021057129
    10. 'en' → logprob: -10.813920021057129

Token 3698: '
' (ID: 198)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.5227358937263489
    2. '               ' → logprob: -1.897735834121704
    3. ' adjust' → logprob: -1.897735834121704
    4. '           ' → logprob: -3.147735834121704
    5. '       ' → logprob: -3.272735834121704
    6. '   ' → logprob: -4.022736072540283
    7. '```' → logprob: -6.022736072540283
    8. ',' → logprob: -6.647736072540283
    9. '
' → logprob: -6.772736072540283
    10. '                   ' → logprob: -7.022736072540283

Token 3699: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8165534734725952
    2. 'adjust' → logprob: -1.3165534734725952
    3. '   ' → logprob: -2.1915535926818848
    4. '```' → logprob: -2.4415535926818848
    5. ' adjust' → logprob: -3.5665535926818848
    6. '               ' → logprob: -3.6915535926818848
    7. '           ' → logprob: -3.9415535926818848
    8. '``' → logprob: -5.191553592681885
    9. '
' → logprob: -5.316553592681885
    10. '\' → logprob: -6.316553592681885

Token 3700: ' adjust' (ID: 10266)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' (adapté à ' adjust') → logprob: -0.07653742283582687
    2. 'changed' → logprob: -3.2015373706817627
    3. '               ' → logprob: -4.326537609100342
    4. ' adjust' → logprob: -4.951537609100342
    5. '       ' → logprob: -5.076537609100342
    6. '           ' → logprob: -5.826537609100342
    7. 'change' → logprob: -6.701537609100342
    8. ' changed' → logprob: -7.076537609100342
    9. '   ' → logprob: -7.201537609100342
    10. 'if' → logprob: -8.201537132263184

Token 3701: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.0
    3. 's' → logprob: -17.75
    4. '(s' → logprob: -21.125
    5. 'spe' → logprob: -22.125
    6. '_S' → logprob: -22.25
    7. '_v' → logprob: -22.625
    8. '\' → logprob: -22.75
    9. '_sp' → logprob: -23.0
    10. '_speed' → logprob: -23.125

Token 3702: 'pe' (ID: 424)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -5.32392441527918e-05
    2. 's' → logprob: -10.625053405761719
    3. 'spe' → logprob: -10.625053405761719
    4. '_p' → logprob: -13.750053405761719
    5. 'pe' → logprob: -13.750053405761719
    6. 'e' → logprob: -14.000053405761719
    7. ' speeds' → logprob: -14.750053405761719
    8. 'Spe' → logprob: -14.875053405761719
    9. 'peed' → logprob: -15.750053405761719
    10. 'p' → logprob: -16.37505340576172

Token 3703: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -3.047134305234067e-05
    2. 'ds' → logprob: -11.250030517578125
    3. 'ed' → logprob: -11.250030517578125
    4. '_' → logprob: -14.250030517578125
    5. '`' → logprob: -14.250030517578125
    6. '```' → logprob: -14.375030517578125
    7. '[' → logprob: -14.750030517578125
    8. '   ' → logprob: -15.125030517578125
    9. 'eps' → logprob: -15.750030517578125
    10. '#' → logprob: -15.875030517578125

Token 3704: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.00013762809976469725
    2. 'current' → logprob: -9.000137329101562
    3. '(' → logprob: -12.625137329101562
    4. ' (' → logprob: -12.875137329101562
    5. ' current' → logprob: -12.875137329101562
    6. '```' → logprob: -12.875137329101562
    7. '(True' → logprob: -14.000137329101562
    8. ',current' → logprob: -14.125137329101562
    9. '[current' → logprob: -14.875137329101562
    10. '`' → logprob: -15.000137329101562

Token 3705: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.4868770196917467e-05
    2. 'time' → logprob: -10.750024795532227
    3. 'current' → logprob: -13.125024795532227
    4. '_current' → logprob: -14.875024795532227
    5. ')' → logprob: -15.500024795532227
    6. '_times' → logprob: -15.500024795532227
    7. '   ' → logprob: -15.625024795532227
    8. '_' → logprob: -15.750024795532227
    9. 'Time' → logprob: -16.750024795532227
    10. '_t' → logprob: -16.750024795532227

Token 3706: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6944449543952942
    2. ')
' → logprob: -0.6944449543952942
    3. '       ' → logprob: -7.4444451332092285
    4. ',' → logprob: -8.44444465637207
    5. '           ' → logprob: -8.44444465637207
    6. '               ' → logprob: -9.31944465637207
    7. '<|end|>' → logprob: -9.69444465637207
    8. ')
' → logprob: -10.56944465637207
    9. '   ' → logprob: -11.19444465637207
    10. '()
' → logprob: -11.31944465637207

Token 3707: '               ' (ID: 506)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.007875972427427769
    2. '           ' → logprob: -5.132875919342041
    3. '               ' → logprob: -6.757875919342041
    4. '                   ' → logprob: -8.2578763961792
    5. ' res' → logprob: -8.3828763961792
    6. '```' → logprob: -8.8828763961792
    7. '       ' → logprob: -9.1328763961792
    8. '   ' → logprob: -10.1328763961792
    9. '	res' → logprob: -12.8828763961792
    10. '                       ' → logprob: -13.0078763961792

Token 3708: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -1.1875571544806007e-05
    2. '               ' → logprob: -11.750011444091797
    3. ' res' → logprob: -13.125011444091797
    4. '           ' → logprob: -13.625011444091797
    5. 'if' → logprob: -15.000011444091797
    6. '                   ' → logprob: -15.125011444091797
    7. '```' → logprob: -15.875011444091797
    8. '   ' → logprob: -17.875011444091797
    9. '       ' → logprob: -18.625011444091797
    10. '                       ' → logprob: -18.875011444091797

Token 3709: 'chedule' (ID: 11973)
  Prédit: 'chedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chedule' → logprob: -0.0015052208909764886
    2. 'schedule' → logprob: -6.501505374908447
    3. '_schedule' → logprob: -13.126504898071289
    4. 'cheduler' → logprob: -14.626504898071289
    5. 'CHEDULE' → logprob: -15.126504898071289
    6. 'chedules' → logprob: -16.37650489807129
    7. 'ch' → logprob: -16.87650489807129
    8. 'cheduled' → logprob: -17.62650489807129
    9. 'ched' → logprob: -17.62650489807129
    10. 'Schedule' → logprob: -17.87650489807129

Token 3710: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.6240566083070007e-06
    2. 'all' → logprob: -14.125001907348633
    3. 'All' → logprob: -14.625001907348633
    4. '\' → logprob: -17.000001907348633
    5. '```' → logprob: -17.000001907348633
    6. 's' → logprob: -17.250001907348633
    7. '_ALL' → logprob: -17.250001907348633
    8. '_a' → logprob: -17.375001907348633
    9. ' _' → logprob: -17.625001907348633
    10. 'd' → logprob: -17.875001907348633

Token 3711: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.003622404532507062
    2. 'arr' → logprob: -5.628622531890869
    3. 'arrival' → logprob: -11.003622055053711
    4. '_all' → logprob: -12.753622055053711
    5. 's' → logprob: -13.628622055053711
    6. 'all' → logprob: -14.753622055053711
    7. 'Arr' → logprob: -15.753622055053711
    8. 'ships' → logprob: -15.878622055053711
    9. ' arrivals' → logprob: -15.878622055053711
    10. '(arr' → logprob: -16.00362205505371

Token 3712: 'ivals' (ID: 80357)
  Prédit: 'ivals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivals' → logprob: -0.0006766928127035499
    2. 'ival' → logprob: -8.000677108764648
    3. 'iv' → logprob: -8.125677108764648
    4. 'vals' → logprob: -10.250677108764648
    5. 'val' → logprob: -13.500677108764648
    6. 'r' → logprob: -13.625677108764648
    7. '```' → logprob: -13.750677108764648
    8. 'als' → logprob: -14.000677108764648
    9. '[' → logprob: -14.375677108764648
    10. 'ov' → logprob: -14.500677108764648

Token 3713: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -3.309382373117842e-05
    2. '(' → logprob: -10.875033378601074
    3. 'current' → logprob: -12.000033378601074
    4. '```' → logprob: -12.500033378601074
    5. '[current' → logprob: -12.875033378601074
    6. ',current' → logprob: -14.000033378601074
    7. '(
' → logprob: -15.375033378601074
    8. '$current' → logprob: -15.625033378601074
    9. ' current' → logprob: -16.125032424926758
    10. '(Current' → logprob: -16.125032424926758

Token 3714: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0016161426901817322
    2. 'time' → logprob: -7.50161600112915
    3. '(current' → logprob: -8.001616477966309
    4. ')' → logprob: -8.376616477966309
    5. 'current' → logprob: -8.501616477966309
    6. '_current' → logprob: -8.501616477966309
    7. ')_' → logprob: -10.126616477966309
    8. '_' → logprob: -11.126616477966309
    9. '[current' → logprob: -11.876616477966309
    10. '_times' → logprob: -12.001616477966309

Token 3715: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032644576858729124
    2. '()' → logprob: -6.378264427185059
    3. '())' → logprob: -6.878264427185059
    4. '<|end|>' → logprob: -8.503264427185059
    5. '       ' → logprob: -8.628264427185059
    6. ')
' → logprob: -9.628264427185059
    7. '           ' → logprob: -10.378264427185059
    8. '               ' → logprob: -11.503264427185059
    9. '<|end|>' → logprob: -11.753264427185059
    10. ')}' → logprob: -12.628264427185059

Token 3716: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013118463568389416
    2. 'continue' → logprob: -4.513118267059326
    3. '```' → logprob: -6.638118267059326
    4. ' continue' → logprob: -8.513118743896484
    5. '       ' → logprob: -8.513118743896484
    6. '<|end|>' → logprob: -8.763118743896484
    7. '               ' → logprob: -9.013118743896484
    8. 'if' → logprob: -11.013118743896484
    9. '            
' → logprob: -11.263118743896484
    10. '_continue' → logprob: -11.388118743896484

Token 3717: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5052885413169861
    2. '           ' → logprob: -1.0052886009216309
    3. '               ' → logprob: -3.505288600921631
    4. ' continue' → logprob: -7.880288600921631
    5. '```' → logprob: -8.755288124084473
    6. '       ' → logprob: -9.880288124084473
    7. '                   ' → logprob: -10.505288124084473
    8. 'if' → logprob: -11.005288124084473
    9. '#' → logprob: -11.130288124084473
    10. 'for' → logprob: -11.255288124084473

Token 3718: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26964178681373596
    2. '```' → logprob: -2.019641876220703
    3. '       ' → logprob: -2.519641876220703
    4. '           ' → logprob: -4.269641876220703
    5. '#' → logprob: -5.269641876220703
    6. 'elif' → logprob: -6.519641876220703
    7. ' if' → logprob: -7.269641876220703
    8. '
' → logprob: -7.769641876220703
    9. '            
' → logprob: -7.894641876220703
    10. '   ' → logprob: -8.269641876220703

Token 3719: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4038647413253784
    2. '       ' → logprob: -1.1538647413253784
    3. '#' → logprob: -5.028864860534668
    4. '```' → logprob: -5.153864860534668
    5. '           ' → logprob: -6.278864860534668
    6. '   ' → logprob: -6.778864860534668
    7. ' if' → logprob: -7.403864860534668
    8. '
' → logprob: -8.153864860534668
    9. '        
' → logprob: -8.278864860534668
    10. 'elif' → logprob: -8.903864860534668

Token 3720: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46926426887512207
    2. '           ' → logprob: -1.469264268875122
    3. '#' (adapté à ' #') → logprob: -1.969264268875122
    4. '
' → logprob: -6.094264030456543
    5. '            
' → logprob: -6.969264030456543
    6. '```' → logprob: -6.969264030456543
    7. '       ' → logprob: -7.594264030456543
    8. 'gate' → logprob: -9.594264030456543
    9. '   ' → logprob: -10.094264030456543
    10. ' if' → logprob: -10.219264030456543

Token 3721: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9164950251579285
    2. '           ' → logprob: -0.9164950251579285
    3. 'if' → logprob: -1.7914950847625732
    4. 'gate' → logprob: -3.5414950847625732
    5. 'g' → logprob: -5.666494846343994
    6. '            
' → logprob: -7.916494846343994
    7. '
' → logprob: -8.666495323181152
    8. 'for' → logprob: -8.791495323181152
    9. 'pos' → logprob: -10.041495323181152
    10. '#g' → logprob: -10.166495323181152

Token 3722: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.011255304329097271
    2. 'if' → logprob: -4.636255264282227
    3. 'ify' → logprob: -7.386255264282227
    4. 'ifer' → logprob: -7.886255264282227
    5. '   ' → logprob: -8.761255264282227
    6. '#' → logprob: -9.386255264282227
    7. 'ifie' → logprob: -9.636255264282227
    8. 'ier' → logprob: -10.261255264282227
    9. '       ' → logprob: -10.636255264282227
    10. '_' → logprob: -10.761255264282227

Token 3723: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00692186551168561
    2. ' if' → logprob: -5.506921768188477
    3. 'pos' → logprob: -6.256921768188477
    4. '           ' → logprob: -7.506921768188477
    5. 's' → logprob: -9.006921768188477
    6. '   ' → logprob: -9.381921768188477
    7. '#' → logprob: -10.381921768188477
    8. '               ' → logprob: -10.506921768188477
    9. 'si' → logprob: -10.631921768188477
    10. '       ' → logprob: -10.756921768188477

Token 3724: ''il' (ID: 14683)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8745562434196472
    2. 'pos' → logprob: -1.374556303024292
    3. 'if' → logprob: -2.374556303024292
    4. ' if' → logprob: -2.749556303024292
    5. ' pos' → logprob: -2.874556303024292
    6. '_pos' → logprob: -3.124556303024292
    7. '           ' → logprob: -3.624556303024292
    8. 's' → logprob: -3.874556303024292
    9. '   ' → logprob: -5.124556064605713
    10. '#' → logprob: -5.249556064605713

Token 3725: ' a' (ID: 261)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.007994010113179684
    2. '.pos' → logprob: -4.882994174957275
    3. 's' → logprob: -8.382993698120117
    4. 'est' → logprob: -9.632993698120117
    5. '_pos' → logprob: -9.757993698120117
    6. 'in' → logprob: -11.882993698120117
    7. '[pos' → logprob: -12.007993698120117
    8. ' pos' → logprob: -12.007993698120117
    9. '(pos' → logprob: -12.882993698120117
    10. '	pos' → logprob: -12.882993698120117

Token 3726: ' atteint' (ID: 104876)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4390206038951874
    2. 'pos' → logprob: -1.4390206336975098
    3. 'été' → logprob: -4.06402063369751
    4. '>=' → logprob: -4.06402063369751
    5. '==' → logprob: -4.68902063369751
    6. ' in' → logprob: -4.93902063369751
    7. 'abs' → logprob: -4.93902063369751
    8. 'près' → logprob: -4.93902063369751
    9. 'posé' → logprob: -5.18902063369751
    10. 'position' → logprob: -5.18902063369751

Token 3727: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.20575077831745148
    2. 'un' → logprob: -1.705750823020935
    3. ' une' → logprob: -7.080750942230225
    4. 'la' → logprob: -7.205750942230225
    5. '       ' → logprob: -7.705750942230225
    6. '           ' → logprob: -7.830750942230225
    7. '   ' → logprob: -7.955750942230225
    8. 'g' → logprob: -7.955750942230225
    9. ' un' → logprob: -8.205750465393066
    10. 'a' → logprob: -8.455750465393066

Token 3728: ' gate' (ID: 27172)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.02864099107682705
    2. 'port' → logprob: -4.403641223907471
    3. ' gate' → logprob: -5.278641223907471
    4. 'g' → logprob: -5.903641223907471
    5. 'b' → logprob: -6.403641223907471
    6. '_gate' → logprob: -6.528641223907471
    7. 'sas' → logprob: -6.653641223907471
    8. 'pass' → logprob: -6.778641223907471
    9. '```' → logprob: -7.528641223907471
    10. 'se' → logprob: -8.028640747070312

Token 3729: ' X' (ID: 2127)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.4274044036865234
    2. '_pos' → logprob: -1.4274044036865234
    3. '_index' → logprob: -1.9274044036865234
    4. 'idx' → logprob: -1.9274044036865234
    5. '_idx' → logprob: -2.0524044036865234
    6. 'if' → logprob: -3.0524044036865234
    7. 'index' → logprob: -3.5524044036865234
    8. '_positions' → logprob: -5.677404403686523
    9. '=' → logprob: -5.802404403686523
    10. ' =' → logprob: -6.052404403686523

Token 3730: '

' (ID: 279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10117127001285553
    2. ' =' → logprob: -3.1011712551116943
    3. 'if' → logprob: -3.2261712551116943
    4. 'pos' → logprob: -5.226171493530273
    5. '           ' → logprob: -6.226171493530273
    6. '               ' → logprob: -7.351171493530273
    7. 'idx' → logprob: -7.351171493530273
    8. '=
' → logprob: -7.351171493530273
    9. '_pos' → logprob: -7.726171493530273
    10. '=i' → logprob: -7.976171493530273

Token 3731: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6372804045677185
    2. ':
' → logprob: -1.5122804641723633
    3. '=' → logprob: -2.6372804641723633
    4. ' =' → logprob: -2.6372804641723633
    5. '           ' → logprob: -4.012280464172363
    6. ':' → logprob: -4.137280464172363
    7. 'idx' → logprob: -4.387280464172363
    8. '_idx' → logprob: -4.512280464172363
    9. ' if' → logprob: -4.637280464172363
    10. 'and' → logprob: -5.012280464172363

Token 3732: ' if' (ID: 538)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.4714049994945526
    2. 'if' (adapté à ' if') → logprob: -1.096405029296875
    3. '           ' → logprob: -3.596405029296875
    4. 'g' → logprob: -4.846405029296875
    5. 'for' → logprob: -6.096405029296875
    6. 'idx' → logprob: -6.221405029296875
    7. 'found' → logprob: -6.971405029296875
    8. '_gate' → logprob: -7.721405029296875
    9. '#' → logprob: -7.846405029296875
    10. 'index' → logprob: -9.221405029296875

Token 3733: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0011741555063053966
    2. 's' → logprob: -6.876173973083496
    3. '(pos' → logprob: -9.751173973083496
    4. ' pos' → logprob: -10.376173973083496
    5. 'abs' → logprob: -10.501173973083496
    6. 'any' → logprob: -10.876173973083496
    7. 'round' → logprob: -13.251173973083496
    8. '(' → logprob: -13.376173973083496
    9. '(s' → logprob: -13.876173973083496
    10. ' s' → logprob: -14.751173973083496

Token 3734: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10045122355222702
    2. 'in' → logprob: -2.3504512310028076
    3. ' ' → logprob: -9.475451469421387
    4. ' ==' → logprob: -10.600451469421387
    5. '==' → logprob: -10.725451469421387
    6. '_in' → logprob: -10.850451469421387
    7. ')' → logprob: -10.975451469421387
    8. '   ' → logprob: -11.600451469421387
    9. ' ' → logprob: -11.600451469421387
    10. '	in' → logprob: -11.600451469421387

Token 3735: ' gate' (ID: 27172)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -1.3544423381972592e-05
    2. ' gate' → logprob: -11.25001335144043
    3. '   ' → logprob: -14.87501335144043
    4. 'set' → logprob: -16.37501335144043
    5. '```' → logprob: -17.00001335144043
    6. ' ' → logprob: -18.50001335144043
    7. 'gateway' → logprob: -18.50001335144043
    8. '       ' → logprob: -18.62501335144043
    9. '
' → logprob: -18.75001335144043
    10. '_gate' → logprob: -19.12501335144043

Token 3736: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -2.935296834039036e-06
    2. 'positions' → logprob: -13.00000286102295
    3. 's' → logprob: -14.75000286102295
    4. '_set' → logprob: -16.500003814697266
    5. '_' → logprob: -17.000003814697266
    6. '_locations' → logprob: -17.125003814697266
    7. '
' → logprob: -18.375003814697266
    8. '   ' → logprob: -18.500003814697266
    9. 'Positions' → logprob: -18.500003814697266
    10. '_position' → logprob: -18.625003814697266

Token 3737: '_set' (ID: 5451)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4620804488658905
    2. ':' → logprob: -1.087080478668213
    3. '_set' → logprob: -3.962080478668213
    4. '           ' → logprob: -4.712080478668213
    5. '       ' → logprob: -6.837080478668213
    6. '               ' → logprob: -7.212080478668213
    7. '_index' → logprob: -7.712080478668213
    8. '   ' → logprob: -7.837080478668213
    9. '_positions' → logprob: -7.962080478668213
    10. '):
' → logprob: -8.462080001831055

Token 3738: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6489209532737732
    2. ':' → logprob: -0.7739209532737732
    3. ' and' → logprob: -5.148921012878418
    4. '           ' → logprob: -5.148921012878418
    5. '               ' → logprob: -5.523921012878418
    6. ':

' → logprob: -8.898921012878418
    7. '):
' → logprob: -9.148921012878418
    8. 'and' → logprob: -9.148921012878418
    9. '<|end|>' → logprob: -10.273921012878418
    10. ',' → logprob: -10.523921012878418

Token 3739: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35860809683799744
    2. '           ' → logprob: -1.8586081266403198
    3. ':
' → logprob: -2.4836080074310303
    4. ':' → logprob: -3.1086080074310303
    5. '_gate' → logprob: -5.233608245849609
    6. 'gate' → logprob: -5.858608245849609
    7. '#' → logprob: -5.983608245849609
    8. 'g' → logprob: -6.608608245849609
    9. ' gate' → logprob: -6.858608245849609
    10. 'idx' → logprob: -6.983608245849609

Token 3740: ' #' (ID: 1069)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.013281640596687794
    2. 'g' → logprob: -5.01328182220459
    3. 'idx' → logprob: -5.26328182220459
    4. 'index' → logprob: -7.63828182220459
    5. '               ' → logprob: -7.76328182220459
    6. '#' (adapté à ' #') → logprob: -7.88828182220459
    7. '                   ' → logprob: -9.63828182220459
    8. 'j' → logprob: -11.76328182220459
    9. ' gate' → logprob: -12.63828182220459
    10. '_gate' → logprob: -13.13828182220459

Token 3741: ' C' (ID: 363)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.029721908271312714
    2. 'idx' → logprob: -4.029721736907959
    3. '#' → logprob: -5.654721736907959
    4. 'g' → logprob: -5.654721736907959
    5. '               ' → logprob: -5.904721736907959
    6. 'index' → logprob: -6.404721736907959
    7. '                   ' → logprob: -10.029722213745117
    8. 'j' → logprob: -10.529722213745117
    9. '           ' → logprob: -10.904722213745117
    10. 'ind' → logprob: -12.279722213745117

Token 3742: ''est' (ID: 6616)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.309028685092926
    2. 'urrent' → logprob: -1.6840286254882812
    3. '#' → logprob: -2.9340286254882812
    4. '_gate' → logprob: -5.059028625488281
    5. 'g' → logprob: -5.559028625488281
    6. '       ' → logprob: -5.934028625488281
    7. '           ' → logprob: -5.934028625488281
    8. 'ont' → logprob: -6.184028625488281
    9. 'ode' → logprob: -6.809028625488281
    10. '   ' → logprob: -6.809028625488281

Token 3743: ' une' (ID: 2463)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5722771286964417
    2. 'une' → logprob: -2.072277069091797
    3. 'un' → logprob: -2.572277069091797
    4. 'le' → logprob: -2.697277069091797
    5. '               ' → logprob: -3.322277069091797
    6. ' un' → logprob: -3.572277069091797
    7. 'l' → logprob: -3.947277069091797
    8. 'la' → logprob: -4.322277069091797
    9. ' une' → logprob: -4.447277069091797
    10. 'gate' → logprob: -4.447277069091797

Token 3744: ' position' (ID: 4010)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.030611244961619377
    2. ' gate' → logprob: -3.780611276626587
    3. '#' → logprob: -5.530611038208008
    4. '_gate' → logprob: -6.655611038208008
    5. 'g' → logprob: -7.155611038208008
    6. 'pass' → logprob: -8.280611038208008
    7. 'porte' → logprob: -8.280611038208008
    8. '   ' → logprob: -8.655611038208008
    9. ' #' → logprob: -8.780611038208008
    10. 'gateway' → logprob: -9.405611038208008

Token 3745: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8295711278915405
    2. 'de' → logprob: -1.5795711278915405
    3. ' =' → logprob: -2.95457124710083
    4. '=' → logprob: -3.07957124710083
    5. 'd' → logprob: -3.70457124710083
    6. ' de' → logprob: -3.95457124710083
    7. 'du' → logprob: -4.07957124710083
    8. '#' → logprob: -4.07957124710083
    9. 'i' → logprob: -4.20457124710083
    10. '                   ' → logprob: -4.20457124710083

Token 3746: ' sas' (ID: 51515)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.11778440326452255
    2. 'porte' → logprob: -2.4927845001220703
    3. 'g' → logprob: -4.36778450012207
    4. 'pass' → logprob: -5.11778450012207
    5. 'port' → logprob: -5.49278450012207
    6. 'bar' → logprob: -6.36778450012207
    7. 'p' → logprob: -6.99278450012207
    8. ' gate' → logprob: -7.49278450012207
    9. '```' → logprob: -8.24278450012207
    10. 'b' → logprob: -8.49278450012207

Token 3747: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26822715997695923
    2. '
' → logprob: -2.5182271003723145
    3. 'idx' → logprob: -3.1432271003723145
    4. '_gate' → logprob: -3.3932271003723145
    5. 'gate' → logprob: -3.8932271003723145
    6. '                   ' → logprob: -4.0182271003723145
    7. '#' → logprob: -4.3932271003723145
    8. 'index' → logprob: -4.7682271003723145
    9. '_index' → logprob: -5.3932271003723145
    10. ':
' → logprob: -6.0182271003723145

Token 3748: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2684400975704193
    2. ':
' → logprob: -2.143440008163452
    3. '_gate' → logprob: -2.643440008163452
    4. '                   ' → logprob: -3.643440008163452
    5. ':' → logprob: -4.643440246582031
    6. '#' → logprob: -6.268440246582031
    7. 'gate' → logprob: -6.768440246582031
    8. ' =' → logprob: -6.893440246582031
    9. '_index' → logprob: -7.018440246582031
    10. '=' → logprob: -7.143440246582031

Token 3749: ' gate' (ID: 27172)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' (adapté à ' gate') → logprob: -0.07448066771030426
    2. 'idx' → logprob: -2.8244807720184326
    3. 'index' → logprob: -5.0744805335998535
    4. 'g' → logprob: -5.3244805335998535
    5. '               ' → logprob: -7.4494805335998535
    6. '#' → logprob: -7.6994805335998535
    7. '                   ' → logprob: -8.949481010437012
    8. 'j' → logprob: -9.824481010437012
    9. ' idx' → logprob: -10.949481010437012
    10. ' gate' → logprob: -11.324481010437012

Token 3750: '_i' (ID: 10853)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0022386356722563505
    2. '_idx' → logprob: -6.252238750457764
    3. '_i' → logprob: -8.377238273620605
    4. ' =' → logprob: -10.627238273620605
    5. 'index' → logprob: -11.377238273620605
    6. '_id' → logprob: -11.502238273620605
    7. '_pos' → logprob: -11.752238273620605
    8. '_indices' → logprob: -11.877238273620605
    9. 'Index' → logprob: -12.502238273620605
    10. '=' → logprob: -12.502238273620605

Token 3751: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9102920889854431
    2. 'nd' → logprob: -1.160292148590088
    3. 'x' → logprob: -1.785292148590088
    4. 'dx' → logprob: -2.910292148590088
    5. '_index' → logprob: -3.160292148590088
    6. '=' → logprob: -4.410292148590088
    7. '_idx' → logprob: -5.035292148590088
    8. 'index' → logprob: -8.53529167175293
    9. '_nd' → logprob: -8.91029167175293
    10. '       ' → logprob: -9.66029167175293

Token 3752: ' gate' (ID: 27172)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.0012767844600602984
    2. ' gate' → logprob: -6.751276969909668
    3. '[' → logprob: -9.376276969909668
    4. 'g' → logprob: -12.001276969909668
    5. '[g' → logprob: -12.501276969909668
    6. 'next' → logprob: -12.876276969909668
    7. ' [' → logprob: -13.126276969909668
    8. 'None' → logprob: -13.251276969909668
    9. '0' → logprob: -13.626276969909668
    10. '   ' → logprob: -13.626276969909668

Token 3753: '_positions' (ID: 93193)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.01600046269595623
    2. '[' → logprob: -5.016000270843506
    3. '_positions' → logprob: -5.391000270843506
    4. 'g' → logprob: -6.141000270843506
    5. '[g' → logprob: -7.391000270843506
    6. 'positions' → logprob: -7.391000270843506
    7. '   ' → logprob: -8.641000747680664
    8. '           ' → logprob: -8.891000747680664
    9. ' gate' → logprob: -9.016000747680664
    10. '_gate' → logprob: -9.141000747680664

Token 3754: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0006943239714019
    2. 'index' → logprob: -7.625694274902344
    3. '_set' → logprob: -9.000694274902344
    4. 'gate' → logprob: -10.250694274902344
    5. 'set' → logprob: -11.125694274902344
    6. '[' → logprob: -11.250694274902344
    7. 'Set' → logprob: -12.125694274902344
    8. '_positions' → logprob: -12.250694274902344
    9. '       ' → logprob: -13.375694274902344
    10. '_gate' → logprob: -13.625694274902344

Token 3755: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.02326062321662903
    2. 'pos' → logprob: -3.7732605934143066
    3. '(' → logprob: -11.398261070251465
    4. '[pos' → logprob: -13.648261070251465
    5. '(g' → logprob: -14.273261070251465
    6. 'Pos' → logprob: -14.273261070251465
    7. '(
' → logprob: -14.398261070251465
    8. ' pos' → logprob: -15.023261070251465
    9. '	pos' → logprob: -15.523261070251465
    10. '(position' → logprob: -15.648261070251465

Token 3756: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7111925482749939
    2. ')
' → logprob: -0.7111925482749939
    3. '               ' → logprob: -4.086192607879639
    4. ')

' → logprob: -7.461192607879639
    5. '                
' → logprob: -8.33619213104248
    6. '                   ' → logprob: -9.33619213104248
    7. ')
' → logprob: -9.58619213104248
    8. '                ' → logprob: -10.96119213104248
    9. '           ' → logprob: -11.08619213104248
    10. '#' → logprob: -11.33619213104248

Token 3757: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06690490990877151
    2. 'if' → logprob: -2.9419050216674805
    3. '                
' → logprob: -5.6919050216674805
    4. '
' → logprob: -5.8169050216674805
    5. '#' → logprob: -6.0669050216674805
    6. ' if' → logprob: -6.4419050216674805
    7. '```' → logprob: -7.4419050216674805
    8. '           ' → logprob: -8.31690502166748
    9. '                   ' → logprob: -8.31690502166748
    10. 's' → logprob: -9.44190502166748

Token 3758: ' g' (ID: 329)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2162064015865326
    2. 'gate' → logprob: -2.4662063121795654
    3. '#' → logprob: -3.0912063121795654
    4. 'g' (adapté à ' g') → logprob: -3.2162063121795654
    5. 's' → logprob: -4.5912065505981445
    6. 'inside' → logprob: -5.2162065505981445
    7. '               ' → logprob: -5.9662065505981445
    8. 'sas' → logprob: -6.0912065505981445
    9. 'level' → logprob: -7.5912065505981445
    10. '                   ' → logprob: -7.5912065505981445

Token 3759: ' =' (ID: 314)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.1430836319923401
    2. '=' → logprob: -2.3930835723876953
    3. ' =' → logprob: -3.2680835723876953
    4. 'ates' → logprob: -6.018083572387695
    5. '#' → logprob: -7.393083572387695
    6. '_gate' → logprob: -8.768083572387695
    7. '=
' → logprob: -9.018083572387695
    8. '=g' → logprob: -9.393083572387695
    9. '   ' → logprob: -9.518083572387695
    10. 'if' → logprob: -9.893083572387695

Token 3760: ' gates' (ID: 61915)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0008077251841314137
    2. ' gates' → logprob: -7.125807762145996
    3. 'gate' → logprob: -13.625807762145996
    4. '   ' → logprob: -14.000807762145996
    5. 'gages' → logprob: -14.125807762145996
    6. ' g' → logprob: -16.25080680847168
    7. '```' → logprob: -16.87580680847168
    8. '       ' → logprob: -17.12580680847168
    9. '	g' → logprob: -17.37580680847168
    10. 'gat' → logprob: -17.37580680847168

Token 3761: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.76759916334413e-05
    2. '               ' → logprob: -9.625077247619629
    3. '[g' → logprob: -12.375077247619629
    4. '=' → logprob: -13.125077247619629
    5. ' =' → logprob: -13.500077247619629
    6. '[
' → logprob: -14.000077247619629
    7. '                
' → logprob: -14.625077247619629
    8. '                   ' → logprob: -14.750077247619629
    9. '#' → logprob: -14.875077247619629
    10. '```' → logprob: -15.000077247619629

Token 3762: 'gate' (ID: 33990)
  Prédit: 'gate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -3.8889261304575484e-06
    2. ' gate' → logprob: -12.625003814697266
    3. '[' → logprob: -15.000003814697266
    4. '
' → logprob: -16.500003814697266
    5. '_gate' → logprob: -16.500003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '               ' → logprob: -18.125003814697266
    8. 'gateway' → logprob: -18.500003814697266
    9. '           ' → logprob: -18.750003814697266
    10. '```' → logprob: -19.500003814697266

Token 3763: '_i' (ID: 10853)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.003426754381507635
    2. '_i' → logprob: -5.878426551818848
    3. 'i' → logprob: -7.503426551818848
    4. '_gate' → logprob: -10.003426551818848
    5. ' gate' → logprob: -11.378426551818848
    6. '   ' → logprob: -12.253426551818848
    7. '           ' → logprob: -13.378426551818848
    8. '               ' → logprob: -13.503426551818848
    9. '```' → logprob: -13.628426551818848
    10. '
' → logprob: -14.503426551818848

Token 3764: ']

' (ID: 3144)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.617436408996582
    2. ')
' → logprob: -0.867436408996582
    3. ']
' → logprob: -3.742436408996582
    4. ')' → logprob: -5.117436408996582
    5. '
' → logprob: -5.617436408996582
    6. '           ' → logprob: -5.992436408996582
    7. ']' → logprob: -6.242436408996582
    8. '                   ' → logprob: -6.867436408996582
    9. '                
' → logprob: -7.117436408996582
    10. '#' → logprob: -7.742436408996582

Token 3765: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1647934466600418
    2. 'if' → logprob: -2.5397934913635254
    3. '           ' → logprob: -2.6647934913635254
    4. '                
' → logprob: -6.789793491363525
    5. '
' → logprob: -6.914793491363525
    6. ' if' → logprob: -7.289793491363525
    7. '#' → logprob: -8.414793014526367
    8. '            
' → logprob: -8.539793014526367
    9. '```' → logprob: -8.789793014526367
    10. '                   ' → logprob: -11.414793014526367

Token 3766: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01743805594742298
    2. '#' (adapté à ' #') → logprob: -4.767437934875488
    3. '               ' → logprob: -4.767437934875488
    4. '           ' → logprob: -8.267437934875488
    5. ' if' → logprob: -10.892437934875488
    6. '                
' → logprob: -13.267437934875488
    7. '```' → logprob: -13.392437934875488
    8. '``' → logprob: -13.517437934875488
    9. '
' → logprob: -13.767437934875488
    10. '   ' → logprob: -15.142437934875488

Token 3767: ' Sc' (ID: 3380)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16821734607219696
    2. '#' → logprob: -1.9182173013687134
    3. '               ' → logprob: -4.918217182159424
    4. 'inside' → logprob: -8.043217658996582
    5. '           ' → logprob: -8.293217658996582
    6. ' if' → logprob: -10.668217658996582
    7. '```' → logprob: -11.668217658996582
    8. 'in' → logprob: -11.668217658996582
    9. 'can' → logprob: -11.793217658996582
    10. ' #' → logprob: -12.168217658996582

Token 3768: 'én' (ID: 3289)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -1.154199242591858
    2. '           ' → logprob: -1.154199242591858
    3. '#' → logprob: -1.529199242591858
    4. 'if' → logprob: -2.5291991233825684
    5. '               ' → logprob: -2.7791991233825684
    6. 'hed' → logprob: -5.404199123382568
    7. 'é' → logprob: -6.529199123382568
    8. 'reen' → logprob: -7.279199123382568
    9. 'enario' → logprob: -7.904199123382568
    10. '                   ' → logprob: -8.529199600219727

Token 3769: 'arios' (ID: 8368)
  Prédit: 'enario'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enario' → logprob: -0.07114387303590775
    2. 'e' → logprob: -4.446144104003906
    3. 'ario' → logprob: -4.571144104003906
    4. 'ène' → logprob: -4.571144104003906
    5. 'én' → logprob: -4.946144104003906
    6. '           ' → logprob: -4.946144104003906
    7. 'é' → logprob: -5.071144104003906
    8. 'enaire' → logprob: -5.446144104003906
    9. '#' → logprob: -5.696144104003906
    10. 'enar' → logprob: -6.821144104003906

Token 3770: ':

' (ID: 1402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39807966351509094
    2. 'if' → logprob: -1.1480796337127686
    3. ' if' → logprob: -5.273079872131348
    4. '#' → logprob: -5.273079872131348
    5. '                   ' → logprob: -8.148079872131348
    6. '```' → logprob: -8.523079872131348
    7. '           ' → logprob: -8.648079872131348
    8. '                
' → logprob: -9.523079872131348
    9. ':' → logprob: -9.773079872131348
    10. '
' → logprob: -10.523079872131348

Token 3771: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25366082787513733
    2. 'if' → logprob: -1.503660798072815
    3. '#' → logprob: -6.753660678863525
    4. ' if' → logprob: -7.753660678863525
    5. '           ' → logprob: -9.253661155700684
    6. '```' → logprob: -11.128661155700684
    7. '                
' → logprob: -11.503661155700684
    8. '                   ' → logprob: -11.753661155700684
    9. 'If' → logprob: -13.753661155700684
    10. '   ' → logprob: -13.753661155700684

Token 3772: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2704453766345978
    2. '               ' → logprob: -1.5204453468322754
    3. '#' (adapté à ' #') → logprob: -4.020445346832275
    4. ' if' → logprob: -7.895445346832275
    5. '```' → logprob: -11.895445823669434
    6. ' #' → logprob: -12.145445823669434
    7. '                
' → logprob: -12.270445823669434
    8. '           ' → logprob: -12.270445823669434
    9. '
' → logprob: -13.145445823669434
    10. '``' → logprob: -13.270445823669434

Token 3773: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04741877689957619
    2. '#' → logprob: -3.5474188327789307
    3. '               ' → logprob: -4.047418594360352
    4. ' if' → logprob: -10.547418594360352
    5. '           ' → logprob: -11.922418594360352
    6. '```' → logprob: -12.297418594360352
    7. '                
' → logprob: -13.297418594360352
    8. '
' → logprob: -13.297418594360352
    9. '``' → logprob: -13.297418594360352
    10. '                   ' → logprob: -13.797418594360352

Token 3774: '1' (ID: 16)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030437350273132324
    2. '#' → logprob: -3.530437469482422
    3. '               ' → logprob: -7.655437469482422
    4. 'inside' → logprob: -8.780437469482422
    5. ' if' → logprob: -11.280437469482422
    6. '
' → logprob: -11.405437469482422
    7. 'ship' → logprob: -12.030437469482422
    8. '                   ' → logprob: -12.405437469482422
    9. 'in' → logprob: -12.530437469482422
    10. '           ' → logprob: -12.655437469482422

Token 3775: ')' (ID: 8)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.713431179523468
    2. 'if' → logprob: -1.8384311199188232
    3. '               ' → logprob: -2.0884311199188232
    4. ':' → logprob: -2.3384311199188232
    5. ' if' → logprob: -3.0884311199188232
    6. ')' → logprob: -3.5884311199188232
    7. ' #' → logprob: -3.5884311199188232
    8. '.' → logprob: -3.9634311199188232
    9. '                   ' → logprob: -5.213431358337402
    10. ':
' → logprob: -6.463431358337402

Token 3776: ' Si' (ID: 7832)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.5972906351089478
    2. '#' → logprob: -1.2222906351089478
    3. 'if' → logprob: -2.222290515899658
    4. 's' → logprob: -3.472290515899658
    5. ' ship' → logprob: -5.222290515899658
    6. ' if' → logprob: -5.972290515899658
    7. 'ships' → logprob: -6.222290515899658
    8. 'sas' → logprob: -6.347290515899658
    9. ' s' → logprob: -7.222290515899658
    10. ' #' → logprob: -7.347290515899658

Token 3777: ' bateau' (ID: 123794)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.02493046596646309
    2. ' ship' → logprob: -4.149930477142334
    3. 's' → logprob: -5.149930477142334
    4. 'sas' → logprob: -6.649930477142334
    5. 'ships' → logprob: -7.899930477142334
    6. ' s' → logprob: -7.899930477142334
    7. '   ' → logprob: -8.274930000305176
    8. '(ship' → logprob: -8.774930000305176
    9. 'not' → logprob: -9.149930000305176
    10. 'pos' → logprob: -9.274930000305176

Token 3778: ' est' (ID: 893)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.12373396009206772
    2. '_inside' → logprob: -2.7487339973449707
    3. 'est' → logprob: -4.498733997344971
    4. 'inside' → logprob: -4.748733997344971
    5. 'is' → logprob: -4.873733997344971
    6. 'in' → logprob: -4.998733997344971
    7. '#' → logprob: -5.373733997344971
    8. '_ent' → logprob: -6.123733997344971
    9. 'wait' → logprob: -6.248733997344971
    10. 'ship' → logprob: -6.498733997344971

Token 3779: ' devant' (ID: 37522)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.020880168303847313
    2. 'inside' → logprob: -5.145880222320557
    3. 'pas' → logprob: -5.270880222320557
    4. 'None' → logprob: -5.395880222320557
    5. 'à' → logprob: -6.145880222320557
    6. 'entrant' → logprob: -6.770880222320557
    7. 'entr' → logprob: -7.895880222320557
    8. 'not' → logprob: -8.020879745483398
    9. 'en' → logprob: -8.145879745483398
    10. 'in' → logprob: -8.520879745483398

Token 3780: ' sas' (ID: 51515)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1099441051483154
    2. ':' → logprob: -2.2349441051483154
    3. '                   ' → logprob: -2.3599441051483154
    4. '(i' → logprob: -2.4849441051483154
    5. 's' → logprob: -2.7349441051483154
    6. '               ' → logprob: -2.8599441051483154
    7. 'i' → logprob: -3.1099441051483154
    8. '==' → logprob: -3.1099441051483154
    9. 'dans' → logprob: -3.1099441051483154
    10. 'if' → logprob: -3.2349441051483154

Token 3781: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.900737464427948
    2. ' and' → logprob: -1.1507375240325928
    3. ':
' → logprob: -2.4007375240325928
    4. '               ' → logprob: -2.6507375240325928
    5. ':' → logprob: -3.0257375240325928
    6. 'and' → logprob: -3.2757375240325928
    7. '                       ' → logprob: -4.525737285614014
    8. ',' → logprob: -5.400737285614014
    9. '_' → logprob: -6.025737285614014
    10. ' et' → logprob: -6.900737285614014

Token 3782: 'just' (ID: 5283)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.5589346289634705
    2. 'False' → logprob: -1.3089346885681152
    3. 'level' → logprob: -3.4339346885681152
    4. '#' → logprob: -3.6839346885681152
    5. 's' → logprob: -3.6839346885681152
    6. 'ships' → logprob: -4.308934688568115
    7. 'None' → logprob: -4.433934688568115
    8. 'True' → logprob: -4.558934688568115
    9. 'sas' → logprob: -4.808934688568115
    10. 'not' → logprob: -5.308934688568115

Token 3783: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5117104053497314
    2. 'if' → logprob: -1.6367104053497314
    3. 'avant' → logprob: -2.2617104053497314
    4. 'à' → logprob: -3.0117104053497314
    5. '```' → logprob: -4.761710166931152
    6. '       ' → logprob: -5.511710166931152
    7. ''à' → logprob: -5.761710166931152
    8. '               ' → logprob: -5.886710166931152
    9. '           ' → logprob: -5.886710166931152
    10. '
' → logprob: -6.011710166931152

Token 3784: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1686490923166275
    2. 'entr' → logprob: -2.043649196624756
    3. 'entrant' → logprob: -4.293649196624756
    4. 'entrée' → logprob: -4.918649196624756
    5. 'à' → logprob: -6.293649196624756
    6. ' arrivé' → logprob: -6.668649196624756
    7. ')' → logprob: -7.543649196624756
    8. ' entr' → logprob: -8.168648719787598
    9. '),' → logprob: -9.168648719787598
    10. ' arrived' → logprob: -9.543648719787598

Token 3785: ' dessus' (ID: 67454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6188681125640869
    2. '):
' → logprob: -2.118868112564087
    3. ' à' → logprob: -2.368868112564087
    4. '),' → logprob: -2.368868112564087
    5. '                   ' → logprob: -3.243868112564087
    6. '               ' → logprob: -3.493868112564087
    7. '_' → logprob: -4.743867874145508
    8. ' at' → logprob: -4.868867874145508
    9. ',' → logprob: -4.993867874145508
    10. '   ' → logprob: -5.118867874145508

Token 3786: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.393579363822937
    2. '):
' → logprob: -1.768579363822937
    3. '),' → logprob: -2.5185794830322266
    4. '                   ' → logprob: -3.1435794830322266
    5. ',' → logprob: -4.518579483032227
    6. '               ' → logprob: -5.393579483032227
    7. '):' → logprob: -5.518579483032227
    8. ')
' → logprob: -6.143579483032227
    9. ' and' → logprob: -6.518579483032227
    10. ':
' → logprob: -6.893579483032227

Token 3787: ' et' (ID: 859)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14597786962985992
    2. ' and' → logprob: -3.1459779739379883
    3. ':
' → logprob: -3.2709779739379883
    4. '               ' → logprob: -3.3959779739379883
    5. ':' → logprob: -4.395977973937988
    6. 'and' → logprob: -5.520977973937988
    7. ',' → logprob: -6.270977973937988
    8. '#' → logprob: -7.395977973937988
    9. '                       ' → logprob: -7.520977973937988
    10. '                    
' → logprob: -7.645977973937988

Token 3788: ' dans' (ID: 2671)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.6307324171066284
    2. '(ship' → logprob: -1.7557324171066284
    3. '(s' → logprob: -1.8807324171066284
    4. '(' → logprob: -3.505732536315918
    5. '(g' → logprob: -3.880732536315918
    6. 's' → logprob: -4.380732536315918
    7. '(not' → logprob: -4.380732536315918
    8. 'pos' → logprob: -4.505732536315918
    9. 'not' → logprob: -4.630732536315918
    10. 'gate' → logprob: -4.880732536315918

Token 3789: ' sens' (ID: 5050)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.7000916004180908
    2. 'ship' → logprob: -1.0750916004180908
    3. '#' → logprob: -2.950091600418091
    4. 'not' → logprob: -3.575091600418091
    5. 's' → logprob: -3.700091600418091
    6. 'gate' → logprob: -4.075091361999512
    7. 'g' → logprob: -4.700091361999512
    8. 'False' → logprob: -5.200091361999512
    9. 'None' → logprob: -5.950091361999512
    10. 'le' → logprob: -5.950091361999512

Token 3790: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5373102426528931
    2. ' =' → logprob: -2.1623101234436035
    3. ' ==' → logprob: -2.5373101234436035
    4. '==' → logprob: -2.6623101234436035
    5. ' est' → logprob: -2.9123101234436035
    6. 'est' → logprob: -3.1623101234436035
    7. ' de' → logprob: -4.9123101234436035
    8. '=s' → logprob: -5.1623101234436035
    9. 's' → logprob: -5.4123101234436035
    10. ' ' → logprob: -5.4123101234436035

Token 3791: ''ent' (ID: 53422)
  Prédit: ''entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.8872666358947754
    2. 'e' → logprob: -2.0122666358947754
    3. ''arrivée' → logprob: -2.1372666358947754
    4. 'est' → logprob: -2.8872666358947754
    5. 'u' → logprob: -3.2622666358947754
    6. ''avance' → logprob: -3.3872666358947754
    7. ''ou' → logprob: -3.6372666358947754
    8. ''arr' → logprob: -3.7622666358947754
    9. 'entrée' → logprob: -3.7622666358947754
    10. ''est' → logprob: -3.7622666358947754

Token 3792: 'ree' (ID: 908)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.15212924778461456
    2. 'ree' → logprob: -2.0271291732788086
    3. 'r' → logprob: -4.902129173278809
    4. 'ée' → logprob: -6.402129173278809
    5. 'rance' → logprob: -8.777129173278809
    6. 'ier' → logprob: -10.902129173278809
    7. 're' → logprob: -10.902129173278809
    8. 'ré' → logprob: -11.402129173278809
    9. 'rer' → logprob: -11.527129173278809
    10. 'ee' → logprob: -11.527129173278809

Token 3793: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8227458000183105
    2. ':
' → logprob: -1.4477458000183105
    3. '==' → logprob: -2.6977458000183105
    4. '_' → logprob: -3.0727458000183105
    5. ',' → logprob: -3.1977458000183105
    6. '=' → logprob: -3.5727458000183105
    7. ' vers' → logprob: -3.6977458000183105
    8. 'vers' → logprob: -3.9477458000183105
    9. ' ==' → logprob: -4.6977458000183105
    10. '_est' → logprob: -4.8227458000183105

Token 3794: ' 
' (ID: 793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17142117023468018
    2. 'if' → logprob: -2.1714210510253906
    3. '               ' → logprob: -3.7964210510253906
    4. '                   ' → logprob: -4.171421051025391
    5. ' if' → logprob: -5.796421051025391
    6. ' #' → logprob: -6.796421051025391
    7. '                       ' → logprob: -7.921421051025391
    8. 'pass' → logprob: -8.42142105102539
    9. ':
' → logprob: -8.92142105102539
    10. '```' → logprob: -8.92142105102539

Token 3795: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6356807351112366
    2. '                   ' → logprob: -1.1356806755065918
    3. '#' → logprob: -2.260680675506592
    4. ' #' → logprob: -4.385680675506592
    5. '                ' → logprob: -4.760680675506592
    6. '```' → logprob: -5.510680675506592
    7. 'if' → logprob: -5.635680675506592
    8. '                       ' → logprob: -5.635680675506592
    9. ' il' → logprob: -6.260680675506592
    10. ':' → logprob: -6.510680675506592

Token 3796: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3872058689594269
    2. '#' (adapté à ' #') → logprob: -1.5122058391571045
    3. 'if' → logprob: -2.7622058391571045
    4. '                   ' → logprob: -3.8872058391571045
    5. ' if' → logprob: -5.012206077575684
    6. ' #' → logprob: -5.137206077575684
    7. '                       ' → logprob: -6.262206077575684
    8. 'elif' → logprob: -7.512206077575684
    9. '                ' → logprob: -7.762206077575684
    10. ' il' → logprob: -8.137206077575684

Token 3797: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3859187960624695
    2. '                   ' → logprob: -2.1359188556671143
    3. 'if' → logprob: -2.8859188556671143
    4. ' #' → logprob: -3.0109188556671143
    5. '               ' → logprob: -3.1359188556671143
    6. ' if' → logprob: -4.260918617248535
    7. '                       ' → logprob: -4.635918617248535
    8. ' il' → logprob: -4.760918617248535
    9. 'pass' → logprob: -6.010918617248535
    10. ':' → logprob: -6.135918617248535

Token 3798: ' ne' (ID: 453)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1233699321746826
    2. ' doit' → logprob: -1.3733699321746826
    3. '   ' → logprob: -2.8733699321746826
    4. ' #' → logprob: -3.3733699321746826
    5. ' est' → logprob: -3.4983699321746826
    6. '               ' → logprob: -3.4983699321746826
    7. 'continue' → logprob: -3.4983699321746826
    8. '                       ' → logprob: -3.8733699321746826
    9. '                   ' → logprob: -4.123370170593262
    10. ' must' → logprob: -4.373370170593262

Token 3799: ' peut' (ID: 9216)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -1.1195958852767944
    2. 's' → logprob: -2.119596004486084
    3. ' peut' → logprob: -2.119596004486084
    4. 'pas' → logprob: -2.244596004486084
    5. ' faut' → logprob: -2.994596004486084
    6. 'f' → logprob: -3.119596004486084
    7. '           ' → logprob: -3.119596004486084
    8. 'pe' → logprob: -3.744596004486084
    9. 'est' → logprob: -3.869596004486084
    10. ')' → logprob: -3.869596004486084

Token 3800: ' entrer' (ID: 111917)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.018779555335640907
    2. ' pas' → logprob: -4.018779754638672
    3. 'pass' → logprob: -7.893779754638672
    4. '               ' → logprob: -9.768779754638672
    5. '           ' → logprob: -10.018779754638672
    6. '_pas' → logprob: -10.393779754638672
    7. '       ' → logprob: -10.768779754638672
    8. ' ' → logprob: -11.143779754638672
    9. 'p' → logprob: -11.268779754638672
    10. 's' → logprob: -11.643779754638672

Token 3801: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8723224997520447
    2. ' if' → logprob: -1.7473225593566895
    3. '               ' → logprob: -2.4973225593566895
    4. 'unless' → logprob: -2.6223225593566895
    5. ' unless' → logprob: -2.9973225593566895
    6. '   ' → logprob: -3.6223225593566895
    7. 's' → logprob: -3.8723225593566895
    8. '                   ' → logprob: -3.9973225593566895
    9. '_if' → logprob: -4.3723225593566895
    10. ' ' → logprob: -4.4973225593566895

Token 3802: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1267094761133194
    2. 'si' → logprob: -2.501709461212158
    3. ' if' → logprob: -4.126709461212158
    4. 'que' → logprob: -4.626709461212158
    5. 's' → logprob: -5.251709461212158
    6. ' si' → logprob: -5.876709461212158
    7. ' que' → logprob: -6.251709461212158
    8. ' s' → logprob: -7.376709461212158
    9. '               ' → logprob: -9.001709938049316
    10. 'dans' → logprob: -9.376709938049316

Token 3803: ' sas' (ID: 51515)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8885577321052551
    2. '(s' → logprob: -1.5135576725006104
    3. '(g' → logprob: -1.8885576725006104
    4. '(not' → logprob: -2.5135576725006104
    5. 'sas' → logprob: -2.5135576725006104
    6. 'not' → logprob: -4.5135579109191895
    7. 's' → logprob: -4.8885579109191895
    8. '(' → logprob: -5.0135579109191895
    9. '(ship' → logprob: -5.1385579109191895
    10. '((' → logprob: -5.3885579109191895

Token 3804: ' niveau' (ID: 21708)
  Prédit: '.level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.level' → logprob: -0.0006658526253886521
    2. 'level' → logprob: -7.500665664672852
    3. '.target' → logprob: -10.250665664672852
    4. '_level' → logprob: -10.750665664672852
    5. '[level' → logprob: -11.500665664672852
    6. '_target' → logprob: -11.625665664672852
    7. '.' → logprob: -11.750665664672852
    8. 'niveau' → logprob: -12.000665664672852
    9. '.is' → logprob: -12.375665664672852
    10. '	level' → logprob: -13.125665664672852

Token 3805: ' =' (ID: 314)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5503564476966858
    2. ' ==' → logprob: -1.050356388092041
    3. '_is' → logprob: -2.800356388092041
    4. 'est' → logprob: -5.425356388092041
    5. ' est' → logprob: -6.050356388092041
    6. '=' → logprob: -6.550356388092041
    7. 'is' → logprob: -6.550356388092041
    8. '_est' → logprob: -7.300356388092041
    9. ' is' → logprob: -7.675356388092041
    10. '_high' → logprob: -7.800356388092041

Token 3806: ' niveau' (ID: 21708)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6942830681800842
    2. '(not' → logprob: -1.0692830085754395
    3. '(s' → logprob: -3.1942830085754395
    4. '(g' → logprob: -3.4442830085754395
    5. '(False' → logprob: -3.6942830085754395
    6. 'not' → logprob: -3.9442830085754395
    7. 'False' → logprob: -4.0692830085754395
    8. '(' → logprob: -5.0692830085754395
    9. 's' → logprob: -5.1942830085754395
    10. '(bool' → logprob: -5.6942830085754395

Token 3807: ' coté' (ID: 138409)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.9472380876541138
    2. 'haut' → logprob: -1.6972380876541138
    3. 'g' → logprob: -2.697237968444824
    4. 'am' → logprob: -2.947237968444824
    5. ' haut' → logprob: -2.947237968444824
    6. 'est' → logprob: -3.197237968444824
    7. '_' → logprob: -3.572237968444824
    8. 'de' → logprob: -3.822237968444824
    9. 'aval' → logprob: -4.197237968444824
    10. 'd' → logprob: -4.322237968444824

Token 3808: ' ou' (ID: 2031)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.06751581281423569
    2. 'ou' → logprob: -3.4425158500671387
    3. ''est' → logprob: -4.192515850067139
    4. 'g' → logprob: -5.192515850067139
    5. ''ou' → logprob: -5.692515850067139
    6. ' est' → logprob: -5.942515850067139
    7. '```' → logprob: -6.692515850067139
    8. ''' → logprob: -6.942515850067139
    9. 'east' → logprob: -7.567515850067139
    10. 'O' → logprob: -7.692515850067139

Token 3809: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.00027337539358995855
    2. 'e' → logprob: -10.000273704528809
    3. '```' → logprob: -10.000273704528809
    4. 'uest' → logprob: -10.250273704528809
    5. 'st' → logprob: -11.125273704528809
    6. '#' → logprob: -11.125273704528809
    7. 'vest' → logprob: -11.250273704528809
    8. '
' → logprob: -11.375273704528809
    9. '   ' → logprob: -11.500273704528809
    10. 'west' → logprob: -11.750273704528809

Token 3810: '

' (ID: 279)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3559814691543579
    2. 'and' → logprob: -1.730981469154358
    3. '               ' → logprob: -2.7309813499450684
    4. ' or' → logprob: -3.8559813499450684
    5. ' if' → logprob: -4.605981349945068
    6. ' (' → logprob: -4.605981349945068
    7. '
' → logprob: -5.855981349945068
    8. '                   ' → logprob: -6.105981349945068
    9. '==' → logprob: -6.480981349945068
    10. 'if' → logprob: -6.980981349945068

Token 3811: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03659582883119583
    2. ' and' → logprob: -3.6615958213806152
    3. 'and' → logprob: -5.661595821380615
    4. ' (' → logprob: -5.661595821380615
    5. '                   ' → logprob: -6.661595821380615
    6. '                ' → logprob: -7.161595821380615
    7. '```' → logprob: -7.911595821380615
    8. ' if' → logprob: -8.661596298217773
    9. '                
' → logprob: -8.661596298217773
    10. '(' → logprob: -9.411596298217773

Token 3812: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.052092038094997406
    2. '               ' → logprob: -3.1770920753479004
    3. ' if' → logprob: -4.9270920753479
    4. '#' (adapté à ' #') → logprob: -6.5520920753479
    5. '                
' → logprob: -8.552091598510742
    6. '
' → logprob: -9.927091598510742
    7. '```' → logprob: -10.427091598510742
    8. 'west' → logprob: -10.927091598510742
    9. '                   ' → logprob: -11.052091598510742
    10. '``' → logprob: -11.552091598510742

Token 3813: ' Determ' (ID: 63499)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08132734894752502
    2. '               ' → logprob: -3.081327438354492
    3. '#' → logprob: -3.456327438354492
    4. 'west' → logprob: -8.206327438354492
    5. '                
' → logprob: -8.831327438354492
    6. ' if' → logprob: -9.706327438354492
    7. '```' → logprob: -9.706327438354492
    8. '``' → logprob: -10.581327438354492
    9. '
' → logprob: -10.831327438354492
    10. 'is' → logprob: -10.956327438354492

Token 3814: 'in' (ID: 258)
  Prédit: 'iner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.006124552339315414
    2. 'ine' → logprob: -5.256124496459961
    3. 'iné' → logprob: -7.506124496459961
    4. 'er' → logprob: -9.131124496459961
    5. '               ' → logprob: -9.631124496459961
    6. 'e' → logprob: -9.881124496459961
    7. '           ' → logprob: -10.506124496459961
    8. 'in' → logprob: -10.631124496459961
    9. '   ' → logprob: -11.381124496459961
    10. '       ' → logprob: -11.506124496459961

Token 3815: 'ons' (ID: 1808)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.029914090409874916
    2. 'e' → logprob: -3.529914140701294
    3. 'if' → logprob: -10.279913902282715
    4. 'ant' → logprob: -10.404913902282715
    5. '
' → logprob: -10.654913902282715
    6. '#' → logprob: -10.904913902282715
    7. 'é' → logprob: -11.404913902282715
    8. '   ' → logprob: -11.529913902282715
    9. '       ' → logprob: -12.154913902282715
    10. '```' → logprob: -12.279913902282715

Token 3816: ' si' (ID: 1784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7756903171539307
    2. '               ' → logprob: -1.9006903171539307
    3. 'le' → logprob: -2.2756903171539307
    4. 'if' → logprob: -3.1506903171539307
    5. 'c' → logprob: -3.2756903171539307
    6. 'level' → logprob: -3.7756903171539307
    7. 'side' → logprob: -3.7756903171539307
    8. 'niveau' → logprob: -3.9006903171539307
    9. 'est' → logprob: -4.025690078735352
    10. 'l' → logprob: -4.025690078735352

Token 3817: ' bateau' (ID: 123794)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2514052093029022
    2. 's' → logprob: -2.1264052391052246
    3. 'pos' → logprob: -3.8764052391052246
    4. 'ship' → logprob: -3.8764052391052246
    5. '#' → logprob: -4.251405239105225
    6. 'ships' → logprob: -4.376405239105225
    7. 'gate' → logprob: -4.376405239105225
    8. 'UD' → logprob: -4.751405239105225
    9. 'not' → logprob: -6.126405239105225
    10. ' g' → logprob: -6.126405239105225

Token 3818: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.3934098184108734
    2. ' est' → logprob: -1.7684098482131958
    3. 'i' → logprob: -3.2684097290039062
    4. 'pos' → logprob: -3.6434097290039062
    5. '_in' → logprob: -3.8934097290039062
    6. '_i' → logprob: -4.143409729003906
    7. 's' → logprob: -4.518409729003906
    8. ' is' → logprob: -4.643409729003906
    9. '#' → logprob: -5.143409729003906
    10. '_est' → logprob: -5.143409729003906

Token 3819: ' à' (ID: 1221)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.1303189992904663
    2. 'à' → logprob: -1.5053189992904663
    3. 'est' → logprob: -1.8803189992904663
    4. 'avant' → logprob: -2.005319118499756
    5. 'en' → logprob: -2.880319118499756
    6. 'du' → logprob: -3.255319118499756
    7. 'entrant' → logprob: -4.005319118499756
    8. 'dev' → logprob: -4.630319118499756
    9. 'just' → logprob: -4.880319118499756
    10. 'au' → logprob: -5.255319118499756

Token 3820: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00698519591242075
    2. 'g' → logprob: -5.756985187530518
    3. 'gate' → logprob: -6.881985187530518
    4. '```' → logprob: -6.881985187530518
    5. 'la' → logprob: -7.881985187530518
    6. 'c' → logprob: -8.256985664367676
    7. 'est' → logprob: -8.506985664367676
    8. 'west' → logprob: -8.631985664367676
    9. 'dro' → logprob: -8.756985664367676
    10. 'ou' → logprob: -9.131985664367676

Token 3821: ''entrée' (ID: 115820)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.02943882904946804
    2. 'l' → logprob: -5.2794389724731445
    3. '```' → logprob: -5.4044389724731445
    4. 'o' → logprob: -5.5294389724731445
    5. 'ou' → logprob: -5.9044389724731445
    6. ''est' → logprob: -6.0294389724731445
    7. '_est' → logprob: -6.1544389724731445
    8. 'g' → logprob: -6.2794389724731445
    9. 'e' → logprob: -6.6544389724731445
    10. '#' → logprob: -6.6544389724731445

Token 3822: ' (' (ID: 350)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ou' → logprob: -1.1038522720336914
    2. '               ' → logprob: -1.4788522720336914
    3. 'est' → logprob: -1.6038522720336914
    4. 'du' → logprob: -2.9788522720336914
    5. 'g' → logprob: -3.4788522720336914
    6. '#' → logprob: -3.6038522720336914
    7. 'o' → logprob: -3.8538522720336914
    8. '_' → logprob: -3.9788522720336914
    9. 'west' → logprob: -4.353852272033691
    10. '_est' → logprob: -4.353852272033691

Token 3823: 'ou' (ID: 283)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9480328559875488
    2. '0' → logprob: -1.9480328559875488
    3. 'gate' → logprob: -2.073032855987549
    4. '#' → logprob: -2.448032855987549
    5. 'UD' → logprob: -3.073032855987549
    6. 'True' → logprob: -3.198032855987549
    7. 'pos' → logprob: -3.198032855987549
    8. 'False' → logprob: -3.323032855987549
    9. 'est' → logprob: -3.948032855987549
    10. 'not' → logprob: -4.073032855987549

Token 3824: ' sortie' (ID: 52761)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.6641057133674622
    2. 'sort' → logprob: -1.1641056537628174
    3. '#' → logprob: -3.0391056537628174
    4. ' sortie' → logprob: -3.2891056537628174
    5. 'ou' → logprob: -3.5391056537628174
    6. '```' → logprob: -4.4141058921813965
    7. 'à' → logprob: -4.5391058921813965
    8. 'exit' → logprob: -4.7891058921813965
    9. '       ' → logprob: -5.1641058921813965
    10. '   ' → logprob: -5.5391058921813965

Token 3825: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34581995010375977
    2. ' ou' → logprob: -2.5958199501037598
    3. 'ou' → logprob: -2.9708199501037598
    4. 'est' → logprob: -3.4708199501037598
    5. '_' → logprob: -3.5958199501037598
    6. '_est' → logprob: -3.7208199501037598
    7. ')
' → logprob: -3.9708199501037598
    8. 'du' → logprob: -4.47081995010376
    9. ' du' → logprob: -4.59581995010376
    10. ' de' → logprob: -4.72081995010376

Token 3826: ' ou' (ID: 2031)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12111780047416687
    2. '#' → logprob: -3.4961178302764893
    3. '               ' → logprob: -3.6211178302764893
    4. 'est' → logprob: -3.7461178302764893
    5. 'ou' → logprob: -3.8711178302764893
    6. 'west' → logprob: -5.12111759185791
    7. '```' → logprob: -6.87111759185791
    8. 'o' → logprob: -7.62111759185791
    9. 'du' → logprob: -7.62111759185791
    10. ' if' → logprob: -7.62111759185791

Token 3827: ' côté' (ID: 33533)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.1079241037368774
    2. 'sort' → logprob: -1.2329241037368774
    3. 'l' → logprob: -1.8579241037368774
    4. 'près' → logprob: -2.482923984527588
    5. ' sortie' → logprob: -3.607923984527588
    6. 'à' → logprob: -3.732923984527588
    7. 'la' → logprob: -4.107923984527588
    8. '```' → logprob: -4.482923984527588
    9. '#' → logprob: -4.982923984527588
    10. 'bien' → logprob: -5.357923984527588

Token 3828: ' sas' (ID: 51515)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.07917299121618271
    2. 'ou' → logprob: -2.8291730880737305
    3. 'g' → logprob: -4.7041730880737305
    4. 's' → logprob: -5.9541730880737305
    5. '#' → logprob: -6.7041730880737305
    6. 'gate' → logprob: -7.4541730880737305
    7. ''est' → logprob: -7.5791730880737305
    8. '```' → logprob: -7.5791730880737305
    9. 'east' → logprob: -8.07917308807373
    10. ' est' → logprob: -8.32917308807373

Token 3829: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.540016233921051
    2. 'if' → logprob: -0.915016233921051
    3. '#' → logprob: -4.290016174316406
    4. '```' → logprob: -6.915016174316406
    5. '=' → logprob: -7.540016174316406
    6. ' if' → logprob: -8.415016174316406
    7. '                
' → logprob: -8.540016174316406
    8. 'west' → logprob: -8.790016174316406
    9. 'pos' → logprob: -8.915016174316406
    10. '
' → logprob: -9.165016174316406

Token 3830: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43819665908813477
    2. 'if' → logprob: -1.0631966590881348
    3. '```' → logprob: -5.688196659088135
    4. ' if' → logprob: -5.813196659088135
    5. '#' → logprob: -6.063196659088135
    6. '``' → logprob: -8.438196182250977
    7. ':' → logprob: -9.063196182250977
    8. '=' → logprob: -9.938196182250977
    9. ',' → logprob: -9.938196182250977
    10. '                
' → logprob: -10.063196182250977

Token 3831: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10475378483533859
    2. '               ' → logprob: -2.8547537326812744
    3. '#' (adapté à ' #') → logprob: -3.8547537326812744
    4. 'west' → logprob: -3.9797537326812744
    5. 'inside' → logprob: -7.3547539710998535
    6. 'est' → logprob: -8.104753494262695
    7. 'is' → logprob: -8.229753494262695
    8. 'east' → logprob: -8.229753494262695
    9. 'side' → logprob: -8.979753494262695
    10. 'enter' → logprob: -9.854753494262695

Token 3832: ' Cas' (ID: 8066)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35373935103416443
    2. '               ' → logprob: -1.2287393808364868
    3. '#' → logprob: -5.353739261627197
    4. ' if' → logprob: -7.853739261627197
    5. '```' → logprob: -9.353739738464355
    6. '                
' → logprob: -10.603739738464355
    7. 'level' → logprob: -11.603739738464355
    8. 'pos' → logprob: -11.728739738464355
    9. 'next' → logprob: -12.353739738464355
    10. 'inside' → logprob: -12.728739738464355

Token 3833: ' entree' (ID: 156822)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.852403998374939
    2. ' if' → logprob: -1.852403998374939
    3. '               ' → logprob: -1.852403998374939
    4. '#' → logprob: -2.4774041175842285
    5. '                   ' → logprob: -2.7274041175842285
    6. 'pos' → logprob: -3.1024041175842285
    7. 's' → logprob: -4.4774041175842285
    8. ':' → logprob: -4.9774041175842285
    9. ' #' → logprob: -5.1024041175842285
    10. '                       ' → logprob: -5.4774041175842285

Token 3834: ' sas' (ID: 51515)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6585566401481628
    2. '               ' → logprob: -1.4085566997528076
    3. ':
' → logprob: -2.0335566997528076
    4. ':' → logprob: -2.9085566997528076
    5. ' if' → logprob: -4.1585564613342285
    6. '#' → logprob: -4.4085564613342285
    7. '```' → logprob: -5.4085564613342285
    8. '                   ' → logprob: -5.7835564613342285
    9. ' and' → logprob: -6.5335564613342285
    10. '=' → logprob: -6.5335564613342285

Token 3835: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6956619024276733
    2. 'if' → logprob: -1.3206619024276733
    3. ':
' → logprob: -2.070662021636963
    4. ' if' → logprob: -3.445662021636963
    5. ':' → logprob: -3.695662021636963
    6. '
' → logprob: -4.320662021636963
    7. ' =' → logprob: -4.695662021636963
    8. '#' → logprob: -5.070662021636963
    9. '                   ' → logprob: -5.695662021636963
    10. '=' → logprob: -5.945662021636963

Token 3836: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8925116062164307
    2. ' if' → logprob: -1.0175116062164307
    3. 'if' → logprob: -1.5175116062164307
    4. '```' → logprob: -5.392511367797852
    5. '                   ' → logprob: -6.392511367797852
    6. '#' → logprob: -6.892511367797852
    7. '                ' → logprob: -7.017511367797852
    8. '                
' → logprob: -7.767511367797852
    9. ' #' → logprob: -8.017511367797852
    10. '``' → logprob: -8.767511367797852

Token 3837: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006034854333847761
    2. '#' (adapté à ' #') → logprob: -5.756034851074219
    3. '               ' → logprob: -6.506034851074219
    4. ' if' → logprob: -6.756034851074219
    5. 'west' → logprob: -9.256034851074219
    6. '                   ' → logprob: -10.381034851074219
    7. 'g' → logprob: -11.506034851074219
    8. '```' → logprob: -11.506034851074219
    9. 'east' → logprob: -12.256034851074219
    10. '                
' → logprob: -12.256034851074219

Token 3838: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14105336368083954
    2. '#' → logprob: -2.1410534381866455
    3. '               ' → logprob: -4.516053199768066
    4. 'west' → logprob: -7.016053199768066
    5. 'est' → logprob: -7.266053199768066
    6. 'pos' → logprob: -8.641053199768066
    7. 's' → logprob: -8.766053199768066
    8. 'inside' → logprob: -8.891053199768066
    9. '                   ' → logprob: -9.141053199768066
    10. '
' → logprob: -9.141053199768066

Token 3839: ' bateau' (ID: 123794)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.1464128494262695
    2. 'gate' → logprob: -1.2714128494262695
    3. 'pos' → logprob: -1.5214128494262695
    4. 's' → logprob: -2.5214128494262695
    5. 'ship' → logprob: -3.2714128494262695
    6. 'i' → logprob: -3.8964128494262695
    7. 'ships' → logprob: -4.7714128494262695
    8. 'not' → logprob: -4.8964128494262695
    9. ' g' → logprob: -5.2714128494262695
    10. ' gate' → logprob: -5.3964128494262695

Token 3840: ' n' (ID: 297)
  Prédit: '.pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.6702802777290344
    2. '_in' → logprob: -1.2952802181243896
    3. 'pos' → logprob: -1.6702802181243896
    4. '.level' → logprob: -4.545280456542969
    5. 'i' → logprob: -5.670280456542969
    6. 'In' → logprob: -6.045280456542969
    7. '.speed' → logprob: -6.045280456542969
    8. 's' → logprob: -6.170280456542969
    9. '.position' → logprob: -6.545280456542969
    10. 'in' → logprob: -7.045280456542969

Token 3841: ''est' (ID: 6616)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.5246738195419312
    2. 'pas' → logprob: -2.0246739387512207
    3. 'not' → logprob: -2.2746739387512207
    4. ''est' → logprob: -2.2746739387512207
    5. 'est' → logprob: -3.5246739387512207
    6. 'in' → logprob: -4.274673938751221
    7. 'n' → logprob: -5.274673938751221
    8. 'is' → logprob: -5.649673938751221
    9. '’est' → logprob: -6.149673938751221
    10. '#' → logprob: -6.149673938751221

Token 3842: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.01981334574520588
    2. 'None' → logprob: -4.144813537597656
    3. ' None' → logprob: -6.644813537597656
    4. 'dans' → logprob: -6.769813537597656
    5. ' pas' → logprob: -7.644813537597656
    6. 'not' → logprob: -8.144813537597656
    7. 'in' → logprob: -8.644813537597656
    8. 'inside' → logprob: -9.769813537597656
    9. 'avant' → logprob: -10.269813537597656
    10. 'plus' → logprob: -10.394813537597656

Token 3843: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.17967072129249573
    2. 'in' → logprob: -2.804670810699463
    3. 'pas' → logprob: -3.054670810699463
    4. 'inside' → logprob: -3.054670810699463
    5. 'None' → logprob: -5.679670810699463
    6. ' dans' → logprob: -6.929670810699463
    7. 'entrant' → logprob: -6.929670810699463
    8. 'à' → logprob: -7.054670810699463
    9. ' None' → logprob: -7.929670810699463
    10. ' in' → logprob: -8.054670333862305

Token 3844: ' sas' (ID: 51515)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.018432144075632095
    2. '_s' → logprob: -4.643432140350342
    3. 'le' → logprob: -5.893432140350342
    4. 's' → logprob: -6.643432140350342
    5. ' sas' → logprob: -6.893432140350342
    6. 'un' → logprob: -7.518432140350342
    7. 'sa' → logprob: -7.643432140350342
    8. '_' → logprob: -7.768432140350342
    9. 'la' → logprob: -7.768432140350342
    10. '```' → logprob: -8.2684326171875

Token 3845: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.963750958442688
    2. ':
' → logprob: -1.713750958442688
    3. '                   ' → logprob: -2.2137508392333984
    4. 'or' → logprob: -2.3387508392333984
    5. ' and' → logprob: -2.3387508392333984
    6. ' or' → logprob: -3.0887508392333984
    7. '               ' → logprob: -3.3387508392333984
    8. ':' → logprob: -3.8387508392333984
    9. '_in' → logprob: -4.588750839233398
    10. '                       ' → logprob: -5.713750839233398

Token 3846: ' il' (ID: 1793)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7133932709693909
    2. '#' → logprob: -1.588393211364746
    3. ' if' → logprob: -2.213393211364746
    4. 'if' → logprob: -2.463393211364746
    5. '               ' → logprob: -3.213393211364746
    6. 'ship' → logprob: -3.713393211364746
    7. '                       ' → logprob: -4.338393211364746
    8. ' #' → logprob: -4.463393211364746
    9. ' ship' → logprob: -5.088393211364746
    10. ' and' → logprob: -6.088393211364746

Token 3847: ' essa' (ID: 19417)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doit' → logprob: -1.7056565284729004
    2. 'n' → logprob: -1.8306565284729004
    3. 'do' → logprob: -1.9556565284729004
    4. 'est' → logprob: -2.2056565284729004
    5. 'continue' → logprob: -2.3306565284729004
    6. 'contin' → logprob: -2.7056565284729004
    7. 'must' → logprob: -2.8306565284729004
    8. '#' → logprob: -3.4556565284729004
    9. '```' → logprob: -3.7056565284729004
    10. 'should' → logprob: -4.0806565284729

Token 3848: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.01631423644721508
    2. 'it' → logprob: -4.7663140296936035
    3. 'ye' → logprob: -5.0163140296936035
    4. 'y' → logprob: -7.6413140296936035
    5. 'ite' → logprob: -9.016314506530762
    6. 'i' → logprob: -9.266314506530762
    7. '
' → logprob: -10.016314506530762
    8. 'aye' → logprob: -10.266314506530762
    9. '#' → logprob: -10.391314506530762
    10. 'e' → logprob: -10.891314506530762

Token 3849: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5261188745498657
    2. '                   ' → logprob: -1.5261188745498657
    3. '               ' → logprob: -2.651118755340576
    4. 'de' → logprob: -3.151118755340576
    5. '                       ' → logprob: -3.401118755340576
    6. '   ' → logprob: -4.901118755340576
    7. '                           ' → logprob: -5.276118755340576
    8. 'enter' → logprob: -5.401118755340576
    9. '           ' → logprob: -5.526118755340576
    10. ' d' → logprob: -5.526118755340576

Token 3850: ''' (ID: 6)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19447903335094452
    2. 'entr' → logprob: -1.819478988647461
    3. 'nt' → logprob: -5.194478988647461
    4. 'enter' → logprob: -5.819478988647461
    5. ' entrer' → logprob: -5.944478988647461
    6. 'entra' → logprob: -7.319478988647461
    7. ' rentrer' → logprob: -7.319478988647461
    8. 'tre' → logprob: -8.194478988647461
    9. 'r' → logprob: -8.569478988647461
    10. 'ns' → logprob: -8.569478988647461

Token 3851: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.007130327634513378
    2. 'enter' → logprob: -5.257130146026611
    3. 'entra' → logprob: -6.882130146026611
    4. ' entrer' → logprob: -8.13213062286377
    5. 'entrée' → logprob: -8.50713062286377
    6. 'entrant' → logprob: -9.50713062286377
    7. 'contin' → logprob: -9.50713062286377
    8. 'entre' → logprob: -9.75713062286377
    9. 'penetr' → logprob: -10.00713062286377
    10. 'pass' → logprob: -10.63213062286377

Token 3852: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00041625293670222163
    2. 'ée' → logprob: -9.250415802001953
    3. 'rer' → logprob: -9.625415802001953
    4. 'e' → logprob: -9.750415802001953
    5. 'éer' → logprob: -10.250415802001953
    6. 'enter' → logprob: -10.500415802001953
    7. 'erer' → logprob: -10.500415802001953
    8. 'é' → logprob: -10.500415802001953
    9. 'érer' → logprob: -10.625415802001953
    10. 'eer' → logprob: -11.000415802001953

Token 3853: ' si' (ID: 1784)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2720233201980591
    2. '                   ' → logprob: -2.0220232009887695
    3. 'if' → logprob: -2.6470232009887695
    4. ':
' → logprob: -4.6470232009887695
    5. 'and' → logprob: -5.0220232009887695
    6. '{
' → logprob: -6.0220232009887695
    7. '                       ' → logprob: -6.0220232009887695
    8. ',' → logprob: -6.3970232009887695
    9. '
' → logprob: -6.7720232009887695
    10. 'et' → logprob: -6.7720232009887695

Token 3854: ' sas' (ID: 51515)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.025488784536719322
    2. 'not' → logprob: -4.40048885345459
    3. ' ship' → logprob: -5.52548885345459
    4. 'pos' → logprob: -6.27548885345459
    5. 'gate' → logprob: -6.40048885345459
    6. 's' → logprob: -6.77548885345459
    7. 'sas' → logprob: -6.77548885345459
    8. 'ships' → logprob: -6.90048885345459
    9. '(ship' → logprob: -7.90048885345459
    10. '   ' → logprob: -8.02548885345459

Token 3855: '_level' (ID: 18404)
  Prédit: '_inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inside' → logprob: -0.5522732734680176
    2. 'level' → logprob: -1.3022732734680176
    3. '.level' → logprob: -2.8022732734680176
    4. '_target' → logprob: -3.5522732734680176
    5. '_in' → logprob: -3.8022732734680176
    6. '[level' → logprob: -4.427273273468018
    7. '_level' → logprob: -4.552273273468018
    8. 'Inside' → logprob: -5.677273273468018
    9. 'target' → logprob: -5.677273273468018
    10. 'inside' → logprob: -6.052273273468018

Token 3856: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005929393693804741
    2. '==' → logprob: -5.505929470062256
    3. ' ==' → logprob: -6.755929470062256
    4. '               ' → logprob: -8.255928993225098
    5. '                   ' → logprob: -9.380928993225098
    6. '[g' → logprob: -9.880928993225098
    7. '   ' → logprob: -10.505928993225098
    8. ' [' → logprob: -10.630928993225098
    9. '!=' → logprob: -10.755928993225098
    10. ' !=' → logprob: -10.880928993225098

Token 3857: ' côté' (ID: 33533)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0072534154169261456
    2. '(False' → logprob: -5.382253646850586
    3. 'g' → logprob: -6.132253646850586
    4. ' False' → logprob: -9.382253646850586
    5. '[' → logprob: -9.507253646850586
    6. 'not' → logprob: -9.757253646850586
    7. '0' → logprob: -10.132253646850586
    8. '(g' → logprob: -10.132253646850586
    9. 'sas' → logprob: -10.257253646850586
    10. 'True' → logprob: -10.757253646850586

Token 3858: ' ou' (ID: 2031)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.5836362838745117
    2. 'ou' → logprob: -0.9586362838745117
    3. 'g' → logprob: -3.7086362838745117
    4. 'west' → logprob: -4.583636283874512
    5. '```' → logprob: -5.458636283874512
    6. 'bas' → logprob: -5.583636283874512
    7. '0' → logprob: -5.583636283874512
    8. ''ou' → logprob: -6.083636283874512
    9. 'O' → logprob: -6.458636283874512
    10. ''est' → logprob: -7.208636283874512

Token 3859: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -5.848420551046729e-05
    2. '```' → logprob: -10.8750581741333
    3. 'e' → logprob: -11.2500581741333
    4. 'west' → logprob: -12.3750581741333
    5. 'uest' → logprob: -12.7500581741333
    6. 'st' → logprob: -12.8750581741333
    7. '
' → logprob: -13.0000581741333
    8. '[' → logprob: -13.5000581741333
    9. 'es' → logprob: -13.6250581741333
    10. '``' → logprob: -13.7500581741333

Token 3860: ' du' (ID: 1462)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19882677495479584
    2. ' and' → logprob: -2.073826789855957
    3. 'and' → logprob: -3.823826789855957
    4. ' or' → logprob: -4.573826789855957
    5. '                   ' → logprob: -5.698826789855957
    6. '
' → logprob: -6.198826789855957
    7. ':
' → logprob: -6.323826789855957
    8. ' (' → logprob: -6.448826789855957
    9. '                
' → logprob: -6.448826789855957
    10. '_' → logprob: -6.573826789855957

Token 3861: ' gate' (ID: 27172)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.14141647517681122
    2. ' gate' → logprob: -2.641416549682617
    3. 'g' → logprob: -3.016416549682617
    4. 'i' → logprob: -5.641416549682617
    5. 'pos' → logprob: -5.891416549682617
    6. '```' → logprob: -6.766416549682617
    7. 'False' → logprob: -6.891416549682617
    8. '_gate' → logprob: -7.266416549682617
    9. 's' → logprob: -7.516416549682617
    10. ' g' → logprob: -7.766416549682617

Token 3862: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13451717793941498
    2. 'if' → logprob: -2.259517192840576
    3. ' if' → logprob: -4.509517192840576
    4. '#' → logprob: -5.634517192840576
    5. ' and' → logprob: -6.259517192840576
    6. 'and' → logprob: -6.884517192840576
    7. '                
' → logprob: -7.009517192840576
    8. '```' → logprob: -7.509517192840576
    9. '
' → logprob: -7.759517192840576
    10. '=' → logprob: -8.384516716003418

Token 3863: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6744348406791687
    2. ' and' → logprob: -0.9244348406791687
    3. 'and' → logprob: -3.0494349002838135
    4. '                   ' → logprob: -4.049434661865234
    5. ':
' → logprob: -4.299434661865234
    6. ':' → logprob: -5.174434661865234
    7. '
' → logprob: -6.549434661865234
    8. '                       ' → logprob: -6.549434661865234
    9. ' (' → logprob: -6.674434661865234
    10. ',' → logprob: -7.424434661865234

Token 3864: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6185402870178223
    2. '               ' → logprob: -0.8685402870178223
    3. ' if' → logprob: -3.3685402870178223
    4. '#' (adapté à ' #') → logprob: -5.868540287017822
    5. '                
' → logprob: -6.868540287017822
    6. 'west' → logprob: -6.993540287017822
    7. '
' → logprob: -7.868540287017822
    8. '```' → logprob: -7.993540287017822
    9. ' (' → logprob: -8.493539810180664
    10. ',' → logprob: -9.118539810180664

Token 3865: ' Il' (ID: 5329)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.655819833278656
    2. '               ' → logprob: -1.2808198928833008
    3. ' if' → logprob: -1.6558198928833008
    4. '                
' → logprob: -5.280819892883301
    5. 'west' → logprob: -6.405819892883301
    6. '#' → logprob: -6.780819892883301
    7. '```' → logprob: -6.780819892883301
    8. '
' → logprob: -7.530819892883301
    9. '                   ' → logprob: -7.905819892883301
    10. ' #' → logprob: -8.2808198928833

Token 3866: ' doit' (ID: 21822)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.5983580946922302
    2. 'if' → logprob: -2.098358154296875
    3. '#' → logprob: -2.348358154296875
    4. 'n' → logprob: -3.348358154296875
    5. 'continue' → logprob: -3.473358154296875
    6. 'contin' → logprob: -3.848358154296875
    7. '.level' → logprob: -3.848358154296875
    8. '       ' → logprob: -4.223358154296875
    9. '           ' → logprob: -4.348358154296875
    10. 'niveau' → logprob: -4.723358154296875

Token 3867: ' s' (ID: 265)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.7542062997817993
    2. 'wait' → logprob: -1.6292062997817993
    3. 'entr' → logprob: -2.5042061805725098
    4. 'if' → logprob: -3.0042061805725098
    5. 'att' → logprob: -3.2542061805725098
    6. '#' → logprob: -3.7542061805725098
    7. 'être' → logprob: -3.8792061805725098
    8. 'level' → logprob: -4.00420618057251
    9. 'continue' → logprob: -4.12920618057251
    10. 'pass' → logprob: -4.50420618057251

Token 3868: ''ar' (ID: 54307)
  Prédit: ''assurer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''assurer' → logprob: -0.5814175009727478
    2. ''arr' → logprob: -0.9564175009727478
    3. 'avoir' → logprob: -4.206417560577393
    4. 'arr' → logprob: -4.456417560577393
    5. ''att' → logprob: -4.706417560577393
    6. '’arr' → logprob: -5.581417560577393
    7. 'e' → logprob: -5.706417560577393
    8. ''autor' → logprob: -6.206417560577393
    9. '’assurer' → logprob: -6.206417560577393
    10. 'ur' → logprob: -6.706417560577393

Token 3869: 'reter' (ID: 69430)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21591529250144958
    2. 'rr' → logprob: -1.840915322303772
    3. 'reter' → logprob: -3.4659152030944824
    4. 'pp' → logprob: -6.340915203094482
    5. 'ret' → logprob: -6.965915203094482
    6. 'rv' → logprob: -8.34091567993164
    7. 'p' → logprob: -8.59091567993164
    8. 'river' → logprob: -9.21591567993164
    9. 'rt' → logprob: -9.34091567993164
    10. 'tt' → logprob: -9.46591567993164

Token 3870: ' devant' (ID: 37522)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0227932408452034
    2. 'if' → logprob: -4.022793292999268
    3. '                   ' → logprob: -5.897793292999268
    4. ' if' → logprob: -6.772793292999268
    5. ',' → logprob: -9.02279281616211
    6. '                
' → logprob: -9.02279281616211
    7. '                       ' → logprob: -9.39779281616211
    8. '                ' → logprob: -9.77279281616211
    9. '           ' → logprob: -10.27279281616211
    10. '#' → logprob: -10.27279281616211

Token 3871: ' sas' (ID: 51515)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.008418321609497
    2. 'True' → logprob: -1.758418321609497
    3. '               ' → logprob: -2.383418321609497
    4. ' if' → logprob: -2.383418321609497
    5. 'False' → logprob: -2.633418321609497
    6. ' True' → logprob: -2.758418321609497
    7. '                   ' → logprob: -2.883418321609497
    8. '
' → logprob: -4.383418083190918
    9. '```' → logprob: -4.633418083190918
    10. ' False' → logprob: -5.008418083190918

Token 3872: ' sinon' (ID: 52915)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10452209413051605
    2. 'if' → logprob: -2.9795219898223877
    3. '
' → logprob: -3.7295219898223877
    4. ' if' → logprob: -4.604522228240967
    5. '#' → logprob: -5.604522228240967
    6. '                   ' → logprob: -5.729522228240967
    7. '                
' → logprob: -5.979522228240967
    8. '```' → logprob: -6.729522228240967
    9. ' and' → logprob: -7.979522228240967
    10. ',' → logprob: -7.979522228240967

Token 3873: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9699041247367859
    2. ' if' → logprob: -1.7199041843414307
    3. 'if' → logprob: -2.0949041843414307
    4. ' True' → logprob: -2.5949041843414307
    5. 'False' → logprob: -2.7199041843414307
    6. 'True' → logprob: -2.7199041843414307
    7. ' continue' → logprob: -3.8449041843414307
    8. ' False' → logprob: -4.094903945922852
    9. '#' → logprob: -4.219903945922852
    10. 'continue' → logprob: -4.219903945922852

Token 3874: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028848794754594564
    2. '                ' → logprob: -7.252884864807129
    3. '                
' → logprob: -7.377884864807129
    4. ' if' → logprob: -7.502884864807129
    5. '```' → logprob: -8.252884864807129
    6. '                   ' → logprob: -8.377884864807129
    7. 'if' → logprob: -8.752884864807129
    8. '              ' → logprob: -10.002884864807129
    9. ' ' → logprob: -10.252884864807129
    10. '                 
' → logprob: -10.377884864807129

Token 3875: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45359179377555847
    2. 'if' (adapté à ' if') → logprob: -1.0785918235778809
    3. ' if' → logprob: -4.453591823577881
    4. '#' → logprob: -5.078591823577881
    5. '                
' → logprob: -5.578591823577881
    6. '
' → logprob: -6.953591823577881
    7. 'west' → logprob: -7.203591823577881
    8. '```' → logprob: -8.078591346740723
    9. '                   ' → logprob: -8.453591346740723
    10. ' #' → logprob: -8.953591346740723

Token 3876: ' ship' (ID: 12407)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.0017809720011427999
    2. ' ship' → logprob: -7.126780986785889
    3. 'not' → logprob: -7.501780986785889
    4. '   ' → logprob: -8.12678050994873
    5. '(ship' → logprob: -10.50178050994873
    6. '       ' → logprob: -10.75178050994873
    7. ' not' → logprob: -11.12678050994873
    8. 'ships' → logprob: -11.25178050994873
    9. '               ' → logprob: -12.00178050994873
    10. '           ' → logprob: -12.00178050994873

Token 3877: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.2352385965641588e-05
    2. '_inside' → logprob: -11.625012397766113
    3. 'in' → logprob: -14.000012397766113
    4. 's' → logprob: -14.500012397766113
    5. '   ' → logprob: -14.875012397766113
    6. '_i' → logprob: -15.250012397766113
    7. '
' → logprob: -15.625012397766113
    8. '[i' → logprob: -15.625012397766113
    9. 'In' → logprob: -15.750012397766113
    10. '#' → logprob: -16.000011444091797

Token 3878: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7358962297439575
    2. '_s' → logprob: -1.2358962297439575
    3. 'i' → logprob: -1.8608962297439575
    4. '[i' → logprob: -2.985896110534668
    5. '_i' → logprob: -4.735896110534668
    6. 'sas' → logprob: -4.735896110534668
    7. '[s' → logprob: -6.110896110534668
    8. '_' → logprob: -6.985896110534668
    9. '   ' → logprob: -7.110896110534668
    10. '```' → logprob: -8.235896110534668

Token 3879: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.6222279071807861
    2. 's' → logprob: -1.4972279071807861
    3. 'sas' → logprob: -1.7472279071807861
    4. '_s' → logprob: -3.622227907180786
    5. 'i' → logprob: -3.747227907180786
    6. '[i' → logprob: -4.872227668762207
    7. '[s' → logprob: -6.122227668762207
    8. '   ' → logprob: -6.622227668762207
    9. '_as' → logprob: -7.497227668762207
    10. '[' → logprob: -7.747227668762207

Token 3880: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20177613198757172
    2. '[i' → logprob: -1.701776146888733
    3. '[g' → logprob: -7.951776027679443
    4. '               ' → logprob: -12.326776504516602
    5. ' [' → logprob: -12.701776504516602
    6. '   ' → logprob: -14.076776504516602
    7. '                   ' → logprob: -14.701776504516602
    8. '[s' → logprob: -14.701776504516602
    9. '```' → logprob: -14.826776504516602
    10. '[get' → logprob: -15.451776504516602

Token 3881: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06693734973669052
    2. 'is' → logprob: -3.6919374465942383
    3. ' is' → logprob: -3.8169374465942383
    4. '[i' → logprob: -4.191937446594238
    5. ')' → logprob: -6.441937446594238
    6. '[' → logprob: -7.066937446594238
    7. ']==' → logprob: -8.941937446594238
    8. ' ]' → logprob: -10.316937446594238
    9. ')is' → logprob: -10.566937446594238
    10. '   ' → logprob: -11.191937446594238

Token 3882: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20163270831108093
    2. 'is' → logprob: -1.7016327381134033
    3. '==' → logprob: -8.576632499694824
    4. ' ==' → logprob: -11.076632499694824
    5. ' ' → logprob: -12.326632499694824
    6. ')' → logprob: -13.201632499694824
    7. '	is' → logprob: -13.201632499694824
    8. '[' → logprob: -13.326632499694824
    9. 'in' → logprob: -13.576632499694824
    10. '        ' → logprob: -14.326632499694824

Token 3883: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00011117222311440855
    2. ' None' → logprob: -9.12511157989502
    3. '_None' → logprob: -14.50011157989502
    4. '                   ' → logprob: -14.62511157989502
    5. '=None' → logprob: -15.25011157989502
    6. '   ' → logprob: -15.62511157989502
    7. '                                   ' → logprob: -15.75011157989502
    8. 'not' → logprob: -15.87511157989502
    9. '(None' → logprob: -16.000110626220703
    10. '                           ' → logprob: -16.125110626220703

Token 3884: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5542888045310974
    2. ' and' → logprob: -1.5542888641357422
    3. '                   ' → logprob: -2.054288864135742
    4. ':' → logprob: -2.804288864135742
    5. '               ' → logprob: -4.054288864135742
    6. '                       ' → logprob: -5.554288864135742
    7. 'and' → logprob: -5.679288864135742
    8. '                           ' → logprob: -8.179288864135742
    9. '           ' → logprob: -8.679288864135742
    10. ':

' → logprob: -9.554288864135742

Token 3885: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026087433099746704
    2. '               ' → logprob: -3.776087522506714
    3. ' if' → logprob: -7.151087284088135
    4. '                       ' → logprob: -7.651087284088135
    5. ' and' → logprob: -7.901087284088135
    6. 'if' → logprob: -8.151087760925293
    7. '```' → logprob: -8.151087760925293
    8. '
' → logprob: -8.401087760925293
    9. '                    
' → logprob: -8.526087760925293
    10. '           ' → logprob: -10.276087760925293

Token 3886: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05298007279634476
    2. '#' (adapté à ' #') → logprob: -3.9279801845550537
    3. 'west' → logprob: -4.177979946136475
    4. '                   ' → logprob: -4.552979946136475
    5. '               ' → logprob: -5.677979946136475
    6. 'side' → logprob: -6.302979946136475
    7. ' if' → logprob: -8.052980422973633
    8. 'w' → logprob: -9.427980422973633
    9. '```' → logprob: -9.427980422973633
    10. '                       ' → logprob: -9.552980422973633

Token 3887: ' B' (ID: 418)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0662011206150055
    2. '#' → logprob: -3.0662012100219727
    3. '                   ' → logprob: -4.316201210021973
    4. 'west' → logprob: -6.441201210021973
    5. 'side' → logprob: -6.566201210021973
    6. 'water' → logprob: -7.691201210021973
    7. '               ' → logprob: -8.441201210021973
    8. 'level' → logprob: -9.816201210021973
    9. 'entr' → logprob: -9.941201210021973
    10. 'c' → logprob: -10.191201210021973

Token 3888: 'ateau' (ID: 107442)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2225012481212616
    2. '               ' → logprob: -2.972501277923584
    3. 'if' → logprob: -2.972501277923584
    4. '                   ' → logprob: -3.222501277923584
    5. 'gate' → logprob: -3.722501277923584
    6. 'side' → logprob: -4.347501277923584
    7. 'est' → logprob: -5.222501277923584
    8. 'elow' → logprob: -6.222501277923584
    9. '                       ' → logprob: -6.472501277923584
    10. '
' → logprob: -6.722501277923584

Token 3889: ' devant' (ID: 37522)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9204845428466797
    2. '#' → logprob: -1.6704845428466797
    3. '                   ' → logprob: -2.4204845428466797
    4. '_level' → logprob: -2.6704845428466797
    5. 'est' → logprob: -2.9204845428466797
    6. '_in' → logprob: -3.0454845428466797
    7. '_pos' → logprob: -3.4204845428466797
    8. 'level' → logprob: -3.5454845428466797
    9. 'if' → logprob: -4.17048454284668
    10. '                       ' → logprob: -4.42048454284668

Token 3890: ' sas' (ID: 51515)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3401751220226288
    2. 'if' → logprob: -1.5901751518249512
    3. '#' → logprob: -2.965175151824951
    4. '                       ' → logprob: -4.340175151824951
    5. '               ' → logprob: -5.340175151824951
    6. 's' → logprob: -6.090175151824951
    7. '=' → logprob: -6.215175151824951
    8. ':' → logprob: -6.590175151824951
    9. ':
' → logprob: -6.715175151824951
    10. ' if' → logprob: -6.840175151824951

Token 3891: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0675191730260849
    2. '                       ' → logprob: -3.942519187927246
    3. ':
' → logprob: -4.317519187927246
    4. ' =' → logprob: -4.692519187927246
    5. 'if' → logprob: -5.192519187927246
    6. '               ' → logprob: -5.567519187927246
    7. ':' → logprob: -5.692519187927246
    8. '                    
' → logprob: -5.817519187927246
    9. '
' → logprob: -6.567519187927246
    10. ' if' → logprob: -6.942519187927246

Token 3892: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07552365958690643
    2. '                       ' → logprob: -2.700523614883423
    3. '               ' → logprob: -6.200523853302002
    4. 'if' → logprob: -6.950523853302002
    5. ':' → logprob: -7.325523853302002
    6. ':
' → logprob: -7.700523853302002
    7. ' and' → logprob: -7.700523853302002
    8. ' =' → logprob: -8.450523376464844
    9. '```' → logprob: -8.450523376464844
    10. ' if' → logprob: -8.950523376464844

Token 3893: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1297120302915573
    2. '                   ' → logprob: -2.6297121047973633
    3. '#' (adapté à ' #') → logprob: -3.8797121047973633
    4. 'side' → logprob: -4.129712104797363
    5. 'water' → logprob: -4.754712104797363
    6. 'west' → logprob: -6.504712104797363
    7. '               ' → logprob: -6.879712104797363
    8. 'level' → logprob: -7.754712104797363
    9. ' if' → logprob: -8.629712104797363
    10. 'c' → logprob: -9.129712104797363

Token 3894: ' sas' (ID: 51515)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.567699670791626
    2. '                   ' → logprob: -0.942699670791626
    3. '#' → logprob: -3.567699670791626
    4. 'west' → logprob: -4.942699432373047
    5. 'side' → logprob: -5.817699432373047
    6. 'water' → logprob: -6.192699432373047
    7. '               ' → logprob: -6.817699432373047
    8. 'level' → logprob: -8.067699432373047
    9. 'e' → logprob: -8.442699432373047
    10. '                    
' → logprob: -8.692699432373047

Token 3895: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.1834665685892105
    2. '_side' → logprob: -1.9334665536880493
    3. '_target' → logprob: -4.68346643447876
    4. 'side' → logprob: -5.30846643447876
    5. 'level' → logprob: -5.68346643447876
    6. '_pos' → logprob: -6.93346643447876
    7. '_inside' → logprob: -7.05846643447876
    8. '_low' → logprob: -7.80846643447876
    9. 'pos' → logprob: -8.433466911315918
    10. '_' → logprob: -8.433466911315918

Token 3896: ' vs' (ID: 10217)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8145267963409424
    2. '[g' → logprob: -1.5645267963409424
    3. '[' → logprob: -2.4395267963409424
    4. '_side' → logprob: -2.8145267963409424
    5. '_value' → logprob: -3.5645267963409424
    6. '_val' → logprob: -3.6895267963409424
    7. '==' → logprob: -3.8145267963409424
    8. '_i' → logprob: -4.189526557922363
    9. '_is' → logprob: -4.189526557922363
    10. '_gate' → logprob: -4.439526557922363

Token 3897: ' niveau' (ID: 21708)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001695176586508751
    2. '(False' → logprob: -6.751695156097412
    3. 'g' → logprob: -8.12669563293457
    4. ' False' → logprob: -9.25169563293457
    5. 'not' → logprob: -9.87669563293457
    6. '0' → logprob: -10.87669563293457
    7. 'ships' → logprob: -11.00169563293457
    8. '(g' → logprob: -12.00169563293457
    9. '(not' → logprob: -12.00169563293457
    10. 'True' → logprob: -12.00169563293457

Token 3898: ' ou' (ID: 2031)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0401331186294556
    2. 'False' → logprob: -1.4151331186294556
    3. '==' → logprob: -1.7901331186294556
    4. '[i' → logprob: -2.165132999420166
    5. '[g' → logprob: -3.165132999420166
    6. '                   ' → logprob: -3.415132999420166
    7. '0' → logprob: -4.790132999420166
    8. '=False' → logprob: -4.790132999420166
    9. '_false' → logprob: -5.040132999420166
    10. '=' → logprob: -5.415132999420166

Token 3899: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.00012749579036608338
    2. '```' → logprob: -10.000127792358398
    3. 'west' → logprob: -11.000127792358398
    4. 'uest' → logprob: -11.250127792358398
    5. '
' → logprob: -11.375127792358398
    6. '#' → logprob: -12.000127792358398
    7. 'vest' → logprob: -12.875127792358398
    8. '`' → logprob: -12.875127792358398
    9. 'ests' → logprob: -13.125127792358398
    10. '[' → logprob: -13.375127792358398

Token 3900: '
' (ID: 198)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7633227705955505
    2. ' ==' → logprob: -0.7633227705955505
    3. ':' → logprob: -3.7633228302001953
    4. '                   ' → logprob: -3.8883228302001953
    5. ':
' → logprob: -4.638322830200195
    6. '=' → logprob: -6.013322830200195
    7. 'if' → logprob: -6.013322830200195
    8. '[' → logprob: -6.263322830200195
    9. '                       ' → logprob: -6.388322830200195
    10. ' =' → logprob: -7.263322830200195

Token 3901: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.29228976368904114
    2. '==' → logprob: -2.0422897338867188
    3. ' ==' → logprob: -2.4172897338867188
    4. ':' → logprob: -4.917289733886719
    5. '                       ' → logprob: -5.042289733886719
    6. ':
' → logprob: -5.167289733886719
    7. '=' → logprob: -5.667289733886719
    8. '[' → logprob: -5.917289733886719
    9. ' =' → logprob: -5.917289733886719
    10. ' and' → logprob: -6.167289733886719

Token 3902: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0719325914978981
    2. 'west' → logprob: -2.946932554244995
    3. '                   ' → logprob: -4.571932792663574
    4. 'side' → logprob: -5.821932792663574
    5. '#' (adapté à ' #') → logprob: -7.071932792663574
    6. 'level' → logprob: -7.446932792663574
    7. ' if' → logprob: -7.696932792663574
    8. 'est' → logprob: -8.071932792663574
    9. 'expected' → logprob: -8.321932792663574
    10. 'w' → logprob: -9.071932792663574

Token 3903: ' niveau' (ID: 21708)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13156254589557648
    2. '                   ' → logprob: -2.1315624713897705
    3. 'west' → logprob: -6.25656270980835
    4. '#' → logprob: -6.75656270980835
    5. '               ' → logprob: -7.50656270980835
    6. 'side' → logprob: -8.131562232971191
    7. '```' → logprob: -8.381562232971191
    8. ' if' → logprob: -9.631562232971191
    9. 'level' → logprob: -9.881562232971191
    10. '                       ' → logprob: -10.131562232971191

Token 3904: ' ou' (ID: 2031)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.4858262836933136
    2. ' =' → logprob: -2.985826253890991
    3. '=' → logprob: -3.235826253890991
    4. '_est' → logprob: -3.485826253890991
    5. 'west' → logprob: -3.610826253890991
    6. 'bas' → logprob: -3.610826253890991
    7. '_' → logprob: -3.610826253890991
    8. '_is' → logprob: -3.860826253890991
    9. '_bas' → logprob: -3.985826253890991
    10. '_b' → logprob: -4.11082649230957

Token 3905: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.00034702493576332927
    2. 'st' → logprob: -9.250347137451172
    3. '=' → logprob: -9.375347137451172
    4. 'west' → logprob: -9.625347137451172
    5. '                   ' → logprob: -10.625347137451172
    6. '                       ' → logprob: -11.000347137451172
    7. '       ' → logprob: -11.625347137451172
    8. '               ' → logprob: -11.750347137451172
    9. 's' → logprob: -11.750347137451172
    10. ' =' → logprob: -12.125347137451172

Token 3906: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5830456614494324
    2. '==' → logprob: -1.5830457210540771
    3. ' =' → logprob: -1.7080457210540771
    4. '=' → logprob: -3.083045721054077
    5. '_gate' → logprob: -6.208045482635498
    6. 'if' → logprob: -6.583045482635498
    7. 'g' → logprob: -7.208045482635498
    8. '_g' → logprob: -7.458045482635498
    9. '0' → logprob: -7.583045482635498
    10. '                   ' → logprob: -7.958045482635498

Token 3907: ' le' (ID: 505)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011834138073027134
    2. 'not' → logprob: -4.886834144592285
    3. ' False' → logprob: -6.136834144592285
    4. '(False' → logprob: -7.136834144592285
    5. '0' → logprob: -7.886834144592285
    6. ' not' → logprob: -8.261834144592285
    7. '                   ' → logprob: -8.511834144592285
    8. '(not' → logprob: -8.886834144592285
    9. 'True' → logprob: -9.136834144592285
    10. 'g' → logprob: -9.636834144592285

Token 3908: ' plus' (ID: 2932)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16340814530849457
    2. 'not' → logprob: -1.9134081602096558
    3. '(not' → logprob: -6.288408279418945
    4. '(False' → logprob: -7.413408279418945
    5. '0' → logprob: -8.413408279418945
    6. ' not' → logprob: -8.913408279418945
    7. ' False' → logprob: -9.288408279418945
    8. 'True' → logprob: -9.538408279418945
    9. 'false' → logprob: -9.913408279418945
    10. 'g' → logprob: -10.038408279418945

Token 3909: ' haut' (ID: 28223)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.2028927057981491
    2. 'sou' → logprob: -3.077892780303955
    3. 'à' → logprob: -3.327892780303955
    4. 'prob' → logprob: -3.577892780303955
    5. 'ou' → logprob: -4.202892780303955
    6. 'pro' → logprob: -4.577892780303955
    7. '```' → logprob: -4.827892780303955
    8. 'haut' → logprob: -5.202892780303955
    9. '0' → logprob: -5.327892780303955
    10. 'west' → logprob: -6.077892780303955

Token 3910: ' ou' (ID: 2031)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.5066388845443726
    2. '=False' → logprob: -1.7566388845443726
    3. ' ==' → logprob: -2.006639003753662
    4. 'if' → logprob: -2.631639003753662
    5. '<|end|>' → logprob: -2.631639003753662
    6. 'False' → logprob: -2.756639003753662
    7. '(False' → logprob: -3.131639003753662
    8. '                   ' → logprob: -3.131639003753662
    9. '==' → logprob: -3.256639003753662
    10. ' (' → logprob: -3.506639003753662

Token 3911: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.040336355566978455
    2. 'moins' → logprob: -3.5403363704681396
    3. ' bas' → logprob: -5.4153361320495605
    4. 'est' → logprob: -6.2903361320495605
    5. '#' → logprob: -6.6653361320495605
    6. 'ou' → logprob: -6.7903361320495605
    7. 'plus' → logprob: -7.7903361320495605
    8. '```' → logprob: -8.040336608886719
    9. 'False' → logprob: -8.165336608886719
    10. '0' → logprob: -9.040336608886719

Token 3912: ' selon' (ID: 27571)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0585696697235107
    2. '                   ' → logprob: -1.3085696697235107
    3. ' ==' → logprob: -2.0585696697235107
    4. ' if' → logprob: -2.6835696697235107
    5. '=' → logprob: -2.8085696697235107
    6. ' (' → logprob: -3.4335696697235107
    7. 'if' → logprob: -3.8085696697235107
    8. '=False' → logprob: -3.8085696697235107
    9. '==' → logprob: -4.05856990814209
    10. ':' → logprob: -4.68356990814209

Token 3913: ' UD' (ID: 121618)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.14018210768699646
    2. 'not' → logprob: -2.3901820182800293
    3. '(not' → logprob: -4.265182018280029
    4. '0' → logprob: -4.515182018280029
    5. '(g' → logprob: -5.390182018280029
    6. '(' → logprob: -6.140182018280029
    7. 'UD' → logprob: -6.140182018280029
    8. 'gate' → logprob: -6.265182018280029
    9. ' not' → logprob: -6.765182018280029
    10. '1' → logprob: -7.390182018280029

Token 3914: ' et' (ID: 859)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5571900010108948
    2. '                   ' → logprob: -1.30718994140625
    3. 'if' → logprob: -1.93218994140625
    4. ' =' → logprob: -5.30718994140625
    5. '                    
' → logprob: -6.68218994140625
    6. '=' → logprob: -6.93218994140625
    7. ' (' → logprob: -7.55718994140625
    8. '                    ' → logprob: -7.55718994140625
    9. '
' → logprob: -8.30718994140625
    10. '	if' → logprob: -8.43218994140625

Token 3915: ' sas' (ID: 51515)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5856325626373291
    2. '0' → logprob: -1.835632562637329
    3. 'False' → logprob: -2.960632562637329
    4. '(g' → logprob: -3.085632562637329
    5. 'not' → logprob: -3.210632562637329
    6. 'gate' → logprob: -3.460632562637329
    7. '(not' → logprob: -3.585632562637329
    8. 'EPS' → logprob: -3.585632562637329
    9. 'self' → logprob: -4.71063232421875
    10. '#' → logprob: -4.83563232421875

Token 3916: '_level' (ID: 18404)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8343303203582764
    2. ' ==' → logprob: -1.5843303203582764
    3. '_' → logprob: -1.8343303203582764
    4. '                   ' → logprob: -3.3343303203582764
    5. ' =' → logprob: -3.7093303203582764
    6. '_level' → logprob: -3.7093303203582764
    7. '_est' → logprob: -3.8343303203582764
    8. '_value' → logprob: -4.2093305587768555
    9. '_code' → logprob: -4.3343305587768555
    10. '=' → logprob: -4.4593305587768555

Token 3917: ' bool' (ID: 3792)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4491567015647888
    2. 'if' → logprob: -1.0741567611694336
    3. '==' → logprob: -4.574156761169434
    4. ' if' → logprob: -5.324156761169434
    5. ' ==' → logprob: -6.949156761169434
    6. '               ' → logprob: -6.949156761169434
    7. ':
' → logprob: -7.074156761169434
    8. '                       ' → logprob: -7.824156761169434
    9. '
' → logprob: -7.949156761169434
    10. '0' → logprob: -8.074156761169434

Token 3918: 'é' (ID: 377)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05489085614681244
    2. ' =' → logprob: -3.9298908710479736
    3. 'if' → logprob: -4.9298906326293945
    4. '=' → logprob: -5.4298906326293945
    5. ':
' → logprob: -5.6798906326293945
    6. '==' → logprob: -5.8048906326293945
    7. ' if' → logprob: -6.3048906326293945
    8. 'est' → logprob: -6.3048906326293945
    9. ':' → logprob: -6.8048906326293945
    10. ' ==' → logprob: -6.8048906326293945

Token 3919: 'en' (ID: 262)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.21934066712856293
    2. 'ean' → logprob: -2.3443405628204346
    3. 'n' → logprob: -3.8443405628204346
    4. 'en' → logprob: -4.469340801239014
    5. '
' → logprob: -4.594340801239014
    6. ':
' → logprob: -4.844340801239014
    7. 'é' → logprob: -4.969340801239014
    8. '=True' → logprob: -5.594340801239014
    9. '               ' → logprob: -5.719340801239014
    10. '                   ' → logprob: -5.844340801239014

Token 3920: '

' (ID: 279)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13662324845790863
    2. 'if' → logprob: -2.3866231441497803
    3. ' if' → logprob: -3.5116231441497803
    4. ' =' → logprob: -7.011623382568359
    5. ':
' → logprob: -7.011623382568359
    6. '==' → logprob: -7.511623382568359
    7. '=' → logprob: -7.636623382568359
    8. '               ' → logprob: -7.886623382568359
    9. '
' → logprob: -8.26162338256836
    10. ':' → logprob: -8.38662338256836

Token 3921: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2857285439968109
    2. '               ' → logprob: -1.5357285737991333
    3. '                       ' → logprob: -4.910728454589844
    4. '                    
' → logprob: -5.035728454589844
    5. '                    ' → logprob: -5.410728454589844
    6. '                ' → logprob: -5.535728454589844
    7. ' if' → logprob: -5.660728454589844
    8. 'if' → logprob: -6.660728454589844
    9. '                        
' → logprob: -6.785728454589844
    10. '                 
' → logprob: -6.785728454589844

Token 3922: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6084792017936707
    2. 'west' → logprob: -1.2334792613983154
    3. '                   ' → logprob: -1.9834792613983154
    4. '#' (adapté à ' #') → logprob: -4.608479022979736
    5. 'ou' → logprob: -5.233479022979736
    6. 'expected' → logprob: -5.608479022979736
    7. 'est' → logprob: -6.233479022979736
    8. 'side' → logprob: -6.358479022979736
    9. 'level' → logprob: -6.858479022979736
    10. 'western' → logprob: -7.983479022979736

Token 3923: ' Niveau' (ID: 112668)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.18032251298427582
    2. 'if' → logprob: -2.8053224086761475
    3. '                   ' → logprob: -3.1803224086761475
    4. 'ou' → logprob: -3.6803224086761475
    5. '#' → logprob: -4.555322647094727
    6. 'est' → logprob: -5.055322647094727
    7. 'niveau' → logprob: -5.180322647094727
    8. 'level' → logprob: -5.305322647094727
    9. 'western' → logprob: -6.305322647094727
    10. 'side' → logprob: -6.430322647094727

Token 3924: ' ou' (ID: 2031)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9025440812110901
    2. 'ou' → logprob: -0.9025440812110901
    3. '_w' → logprob: -2.1525440216064453
    4. 'west' → logprob: -3.9025440216064453
    5. 'est' → logprob: -4.027544021606445
    6. '_o' → logprob: -4.402544021606445
    7. '_est' → logprob: -5.027544021606445
    8. '_c' → logprob: -6.152544021606445
    9. '_occ' → logprob: -6.777544021606445
    10. 'o' → logprob: -6.902544021606445

Token 3925: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.000995890935882926
    2. 'west' → logprob: -7.375996112823486
    3. '
' → logprob: -9.375995635986328
    4. '   ' → logprob: -9.375995635986328
    5. '=' → logprob: -9.625995635986328
    6. '```' → logprob: -11.000995635986328
    7. '    ' → logprob: -11.125995635986328
    8. '       ' → logprob: -11.375995635986328
    9. '#' → logprob: -11.375995635986328
    10. '     ' → logprob: -11.750995635986328

Token 3926: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9002413153648376
    2. '_is' → logprob: -1.7752413749694824
    3. '_level' → logprob: -2.2752413749694824
    4. '_n' → logprob: -2.5252413749694824
    5. '_bas' → logprob: -2.6502413749694824
    6. '=' → logprob: -3.1502413749694824
    7. '_low' → logprob: -3.7752413749694824
    8. 'is' → logprob: -3.9002413749694824
    9. '_est' → logprob: -4.025241374969482
    10. 'bas' → logprob: -4.275241374969482

Token 3927: ' si' (ID: 1784)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.45319321751594543
    2. 'ou' → logprob: -2.203193187713623
    3. '                   ' → logprob: -2.203193187713623
    4. 'if' → logprob: -2.328193187713623
    5. 'est' → logprob: -5.078193187713623
    6. 'western' → logprob: -5.203193187713623
    7. 'niveau' → logprob: -5.328193187713623
    8. 'not' → logprob: -5.328193187713623
    9. 'level' → logprob: -5.953193187713623
    10. 'o' → logprob: -6.078193187713623

Token 3928: ' UD' (ID: 121618)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.003816464450210333
    2. 'not' → logprob: -6.378816604614258
    3. ' g' → logprob: -7.253816604614258
    4. 'gate' → logprob: -7.253816604614258
    5. ' gates' → logprob: -8.003816604614258
    6. '   ' → logprob: -9.128816604614258
    7. ' not' → logprob: -9.753816604614258
    8. '(g' → logprob: -10.003816604614258
    9. '           ' → logprob: -10.628816604614258
    10. '       ' → logprob: -11.066316604614258

Token 3929: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22550280392169952
    2. ' ==' → logprob: -1.600502848625183
    3. '=' → logprob: -10.475502967834473
    4. '==
' → logprob: -11.350502967834473
    5. ']==' → logprob: -11.475502967834473
    6. '[' → logprob: -11.475502967834473
    7. '()==' → logprob: -11.850502967834473
    8. ')==' → logprob: -12.350502967834473
    9. '===' → logprob: -12.850502967834473
    10. '```' → logprob: -13.225502967834473

Token 3930: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18213677406311035
    2. '1' → logprob: -1.8071367740631104
    3. 'g' → logprob: -6.182136535644531
    4. 'gate' → logprob: -8.682136535644531
    5. ' ' → logprob: -10.307136535644531
    6. '   ' → logprob: -10.807136535644531
    7. '```' → logprob: -11.244636535644531
    8. 'False' → logprob: -11.307136535644531
    9. '#' → logprob: -11.807136535644531
    10. '[g' → logprob: -12.057136535644531

Token 3931: ' =>' (ID: 871)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4749826192855835
    2. ' ==' → logprob: -1.4749826192855835
    3. ':
' → logprob: -2.349982738494873
    4. ':' → logprob: -3.724982738494873
    5. '                       ' → logprob: -3.724982738494873
    6. 'False' → logprob: -6.349982738494873
    7. '                   ' → logprob: -6.974982738494873
    8. 'g' → logprob: -7.224982738494873
    9. ' (' → logprob: -7.849982738494873
    10. ' is' → logprob: -8.224982261657715

Token 3932: ' est' (ID: 893)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.08713133633136749
    2. 'True' → logprob: -3.0871312618255615
    3. 'not' → logprob: -3.8371312618255615
    4. 'g' → logprob: -4.212131500244141
    5. 'gate' → logprob: -7.337131500244141
    6. 'sas' → logprob: -8.58713150024414
    7. ' False' → logprob: -9.21213150024414
    8. '#' → logprob: -9.58713150024414
    9. 's' → logprob: -9.58713150024414
    10. '0' → logprob: -9.71213150024414

Token 3933: ' haut' (ID: 28223)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0393929481506348
    2. ' ==' → logprob: -1.2893929481506348
    3. '==' → logprob: -1.4143929481506348
    4. '=False' → logprob: -3.1643929481506348
    5. 'level' → logprob: -3.4143929481506348
    6. ' is' → logprob: -4.164392948150635
    7. ' False' → logprob: -4.289392948150635
    8. '0' → logprob: -5.664392948150635
    9. ' est' → logprob: -6.414392948150635
    10. ' level' → logprob: -6.539392948150635

Token 3934: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6113333702087402
    2. 'else' → logprob: -1.7363333702087402
    3. ' else' → logprob: -1.9863333702087402
    4. '                       ' → logprob: -3.2363333702087402
    5. '==' → logprob: -3.6113333702087402
    6. ',' → logprob: -3.7363333702087402
    7. ':' → logprob: -4.36133337020874
    8. ':
' → logprob: -4.61133337020874
    9. ' ==' → logprob: -4.61133337020874
    10. 'False' → logprob: -4.61133337020874

Token 3935: ' ou' (ID: 2031)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.018640438094735146
    2. ' False' → logprob: -4.518640518188477
    3. '                   ' → logprob: -5.143640518188477
    4. 'True' → logprob: -6.893640518188477
    5. 'sas' → logprob: -8.143640518188477
    6. 'not' → logprob: -9.143640518188477
    7. 'self' → logprob: -9.393640518188477
    8. '#' → logprob: -10.268640518188477
    9. 'else' → logprob: -10.393640518188477
    10. 'level' → logprob: -10.518640518188477

Token 3936: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.00010819212911883369
    2. '```' → logprob: -9.875107765197754
    3. 'west' → logprob: -11.125107765197754
    4. 'uest' → logprob: -11.125107765197754
    5. '
' → logprob: -11.750107765197754
    6. '`' → logprob: -12.125107765197754
    7. 'st' → logprob: -12.875107765197754
    8. 'else' → logprob: -13.250107765197754
    9. '``' → logprob: -13.625107765197754
    10. 'self' → logprob: -13.875107765197754

Token 3937: ' bas' (ID: 3222)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8946458697319031
    2. ' est' → logprob: -1.7696459293365479
    3. '=' → logprob: -2.144645929336548
    4. '==' → logprob: -2.269645929336548
    5. ' =' → logprob: -2.394645929336548
    6. ' plus' → logprob: -3.269645929336548
    7. 'est' → logprob: -3.769645929336548
    8. ' is' → logprob: -4.144645690917969
    9. ' bas' → logprob: -4.644645690917969
    10. '=True' → logprob: -5.519645690917969

Token 3938: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1314893662929535
    2. '==' → logprob: -3.5064892768859863
    3. ' ==' → logprob: -3.6314892768859863
    4. '=True' → logprob: -4.381489276885986
    5. '=False' → logprob: -4.506489276885986
    6. ' =' → logprob: -4.756489276885986
    7. ':' → logprob: -5.006489276885986
    8. ' (' → logprob: -5.506489276885986
    9. 'False' → logprob: -5.631489276885986
    10. ',' → logprob: -5.756489276885986

Token 3939: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006376771721988916
    2. '                    ' → logprob: -7.00637674331665
    3. 'else' → logprob: -7.38137674331665
    4. ',' → logprob: -7.75637674331665
    5. 'if' → logprob: -7.75637674331665
    6. ' if' → logprob: -7.88137674331665
    7. '```' → logprob: -7.88137674331665
    8. '                    
' → logprob: -7.88137674331665
    9. ' (' → logprob: -8.006377220153809
    10. ' else' → logprob: -8.131377220153809

Token 3940: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6416504979133606
    2. '                   ' → logprob: -1.0166504383087158
    3. 'ou' → logprob: -2.891650438308716
    4. 'west' → logprob: -3.766650438308716
    5. '#' (adapté à ' #') → logprob: -4.266650676727295
    6. ' if' → logprob: -5.891650676727295
    7. '```' → logprob: -6.016650676727295
    8. 'level' → logprob: -6.266650676727295
    9. 'niveau' → logprob: -6.391650676727295
    10. '               ' → logprob: -6.766650676727295

Token 3941: ' UD' (ID: 121618)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12595628201961517
    2. '                   ' → logprob: -2.6259562969207764
    3. '#' → logprob: -3.2509562969207764
    4. 'niveau' → logprob: -6.125956058502197
    5. 'west' → logprob: -6.750956058502197
    6. 'ou' → logprob: -6.875956058502197
    7. 'level' → logprob: -7.250956058502197
    8. '```' → logprob: -7.375956058502197
    9. ' if' → logprob: -8.375956535339355
    10. 'est' → logprob: -8.500956535339355

Token 3942: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25233227014541626
    2. ' ==' → logprob: -1.5023322105407715
    3. '=' → logprob: -8.00233268737793
    4. ']==' → logprob: -10.50233268737793
    5. '[' → logprob: -11.75233268737793
    6. ' =' → logprob: -12.25233268737793
    7. '   ' → logprob: -12.62733268737793
    8. ' ' → logprob: -12.87733268737793
    9. ']' → logprob: -13.00233268737793
    10. 's' → logprob: -13.00233268737793

Token 3943: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02397177740931511
    2. '1' → logprob: -3.7739717960357666
    3. ' ' → logprob: -7.7739715576171875
    4. 'False' → logprob: -9.148971557617188
    5. '```' → logprob: -9.898971557617188
    6. 'True' → logprob: -9.898971557617188
    7. '==' → logprob: -10.898971557617188
    8. '=' → logprob: -11.523971557617188
    9. '   ' → logprob: -11.898971557617188
    10. 'not' → logprob: -11.961471557617188

Token 3944: ' =>' (ID: 871)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6654592752456665
    2. '==' → logprob: -1.0404592752456665
    3. ':' → logprob: -2.665459156036377
    4. ':
' → logprob: -3.040459156036377
    5. ' =>' → logprob: -5.165459156036377
    6. '=>' → logprob: -6.040459156036377
    7. ' :' → logprob: -6.415459156036377
    8. '                   ' → logprob: -6.665459156036377
    9. '=' → logprob: -7.165459156036377
    10. ' ' → logprob: -7.915459156036377

Token 3945: ' ou' (ID: 2031)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02538987621665001
    2. 'True' → logprob: -4.025389671325684
    3. 'self' → logprob: -5.900389671325684
    4. '0' → logprob: -7.025389671325684
    5. 'sas' → logprob: -7.150389671325684
    6. ' False' → logprob: -7.275389671325684
    7. '#' → logprob: -7.525389671325684
    8. 'not' → logprob: -7.900389671325684
    9. 'g' → logprob: -8.025389671325684
    10. 'level' → logprob: -8.775389671325684

Token 3946: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -7.52919222577475e-05
    2. 'west' → logprob: -10.375075340270996
    3. '```' → logprob: -11.000075340270996
    4. '
' → logprob: -11.375075340270996
    5. 'uest' → logprob: -12.500075340270996
    6. 'e' → logprob: -13.125075340270996
    7. '`' → logprob: -13.250075340270996
    8. 't' → logprob: -13.750075340270996
    9. 'set' → logprob: -14.125075340270996
    10. '``' → logprob: -14.375075340270996

Token 3947: ' bas' (ID: 3222)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2992645800113678
    2. ' bas' → logprob: -2.049264669418335
    3. '==' → logprob: -3.049264669418335
    4. ' =' → logprob: -3.174264669418335
    5. '=' → logprob: -4.049264430999756
    6. ' est' → logprob: -4.674264430999756
    7. 'bas' → logprob: -4.799264430999756
    8. ' ' → logprob: -7.049264430999756
    9. '=True' → logprob: -7.174264430999756
    10. '```' → logprob: -7.549264430999756

Token 3948: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21789570152759552
    2. ' (' → logprob: -2.967895746231079
    3. ':
' → logprob: -2.967895746231079
    4. ':' → logprob: -3.092895746231079
    5. ',' → logprob: -4.2178955078125
    6. '
' → logprob: -5.3428955078125
    7. '(True' → logprob: -5.4678955078125
    8. '=True' → logprob: -5.9678955078125
    9. '                       ' → logprob: -6.2178955078125
    10. '==' → logprob: -6.3428955078125

Token 3949: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.034279465675354004
    2. 'True' → logprob: -3.4092793464660645
    3. ' False' → logprob: -7.6592793464660645
    4. '0' → logprob: -9.659279823303223
    5. ' True' → logprob: -10.034279823303223
    6. 'not' → logprob: -10.534279823303223
    7. ')' → logprob: -12.159279823303223
    8. '                   ' → logprob: -12.284279823303223
    9. '
' → logprob: -12.909279823303223
    10. '(False' → logprob: -13.159279823303223

Token 3950: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3942769169807434
    2. ')
' → logprob: -1.7692768573760986
    3. ')' → logprob: -2.2692768573760986
    4. '                   ' → logprob: -3.6442768573760986
    5. ',' → logprob: -4.144277095794678
    6. '),
' → logprob: -5.644277095794678
    7. ' else' → logprob: -6.519277095794678
    8. 'else' → logprob: -6.644277095794678
    9. ');' → logprob: -7.144277095794678
    10. '):
' → logprob: -7.144277095794678

Token 3951: ' est' (ID: 893)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.19053499400615692
    2. 'True' → logprob: -2.065535068511963
    3. '                   ' → logprob: -3.940535068511963
    4. ' False' → logprob: -4.815535068511963
    5. 'or' → logprob: -5.690535068511963
    6. 'else' → logprob: -5.815535068511963
    7. 'ou' → logprob: -5.815535068511963
    8. ' True' → logprob: -6.065535068511963
    9. '#' → logprob: -6.190535068511963
    10. 'level' → logprob: -6.315535068511963

Token 3952: ' haut' (ID: 28223)
  Prédit: ' haut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' haut' → logprob: -0.030995061621069908
    2. 'haut' → logprob: -4.655994892120361
    3. ' True' → logprob: -5.530994892120361
    4. ' bas' → logprob: -5.655994892120361
    5. 'True' → logprob: -5.780994892120361
    6. '=True' → logprob: -6.405994892120361
    7. '=' → logprob: -6.655994892120361
    8. ' high' → logprob: -6.655994892120361
    9. '0' → logprob: -6.905994892120361
    10. 'high' → logprob: -7.030994892120361

Token 3953: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5879979133605957
    2. '
' → logprob: -1.7129979133605957
    3. ' (' → logprob: -2.5879979133605957
    4. '=True' → logprob: -3.0879979133605957
    5. '=False' → logprob: -3.2129979133605957
    6. '(True' → logprob: -3.5879979133605957
    7. ',' → logprob: -3.8379979133605957
    8. '(False' → logprob: -3.9629979133605957
    9. ' =' → logprob: -5.087997913360596
    10. 'False' → logprob: -5.087997913360596

Token 3954: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.02326492965221405
    2. 'False' → logprob: -3.7732648849487305
    3. ' True' → logprob: -11.02326488494873
    4. 'not' → logprob: -13.89826488494873
    5. '0' → logprob: -14.14826488494873
    6. '   ' → logprob: -14.89826488494873
    7. ' False' → logprob: -15.14826488494873
    8. '
' → logprob: -15.39826488494873
    9. '(True' → logprob: -15.39826488494873
    10. '=True' → logprob: -15.52326488494873

Token 3955: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01856403797864914
    2. ')' → logprob: -4.518564224243164
    3. '                   ' → logprob: -5.518564224243164
    4. '),' → logprob: -5.768564224243164
    5. '),
' → logprob: -9.018564224243164
    6. ')
' → logprob: -10.143564224243164
    7. ');' → logprob: -10.143564224243164
    8. ')

' → logprob: -10.518564224243164
    9. ').' → logprob: -10.643564224243164
    10. '):
' → logprob: -11.143564224243164

Token 3956: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007888155058026314
    2. '
' → logprob: -6.507888317108154
    3. ' if' → logprob: -6.507888317108154
    4. 'if' → logprob: -7.132888317108154
    5. ',' → logprob: -7.632888317108154
    6. '                    
' → logprob: -7.632888317108154
    7. 'else' → logprob: -7.882888317108154
    8. '                       ' → logprob: -8.007887840270996
    9. '                    ' → logprob: -8.132887840270996
    10. '               ' → logprob: -8.132887840270996

Token 3957: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2801462709903717
    2. '                   ' → logprob: -1.9051462411880493
    3. 'ou' → logprob: -3.155146360397339
    4. 'west' → logprob: -3.280146360397339
    5. '#' (adapté à ' #') → logprob: -5.15514612197876
    6. 'level' → logprob: -6.40514612197876
    7. ' if' → logprob: -6.65514612197876
    8. 'or' → logprob: -7.40514612197876
    9. '```' → logprob: -7.40514612197876
    10. 'niveau' → logprob: -7.78014612197876

Token 3958: ' UD' (ID: 121618)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4996732473373413
    2. 'ou' → logprob: -1.7496732473373413
    3. '                   ' → logprob: -2.374673366546631
    4. 'west' → logprob: -2.499673366546631
    5. '#' → logprob: -3.749673366546631
    6. '               ' → logprob: -5.624673366546631
    7. 'niveau' → logprob: -5.749673366546631
    8. ' if' → logprob: -6.249673366546631
    9. 'level' → logprob: -6.374673366546631
    10. '```' → logprob: -6.749673366546631

Token 3959: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47992753982543945
    2. '=' → logprob: -1.3549275398254395
    3. ' ==' → logprob: -2.1049275398254395
    4. ' =' → logprob: -6.7299275398254395
    5. '0' → logprob: -10.354927062988281
    6. ':' → logprob: -10.604927062988281
    7. ' ' → logprob: -11.354927062988281
    8. 'def' → logprob: -11.479927062988281
    9. '#' → logprob: -11.604927062988281
    10. '==
' → logprob: -11.604927062988281

Token 3960: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003850325592793524
    2. 'False' → logprob: -8.250385284423828
    3. '1' → logprob: -9.125385284423828
    4. ' ' → logprob: -12.625385284423828
    5. 'True' → logprob: -13.125385284423828
    6. '```' → logprob: -13.250385284423828
    7. 'g' → logprob: -13.500385284423828
    8. '   ' → logprob: -13.750385284423828
    9. '#' → logprob: -13.875385284423828
    10. '
' → logprob: -14.625385284423828

Token 3961: ' =>' (ID: 871)
  Prédit: ' =>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =>' → logprob: -0.45230990648269653
    2. '=>' → logprob: -1.2023098468780518
    3. '=' → logprob: -3.2023098468780518
    4. '==' → logprob: -4.577310085296631
    5. ' =' → logprob: -5.702310085296631
    6. '=False' → logprob: -5.827310085296631
    7. ':' → logprob: -6.452310085296631
    8. '=True' → logprob: -6.577310085296631
    9. ' ==' → logprob: -6.827310085296631
    10. '                   ' → logprob: -7.452310085296631

Token 3962: ' ou' (ID: 2031)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0016217415686696768
    2. 'True' → logprob: -6.751621723175049
    3. ' False' → logprob: -7.751621723175049
    4. 'not' → logprob: -12.001622200012207
    5. '#' → logprob: -12.626622200012207
    6. '(False' → logprob: -12.751622200012207
    7. '0' → logprob: -12.751622200012207
    8. 'g' → logprob: -13.501622200012207
    9. '   ' → logprob: -13.626622200012207
    10. 'false' → logprob: -13.626622200012207

Token 3963: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.28053948283195496
    2. 'west' → logprob: -1.5305395126342773
    3. 'uest' → logprob: -3.6555395126342773
    4. '0' → logprob: -7.280539512634277
    5. '#' → logprob: -8.280539512634277
    6. 'u' → logprob: -8.405539512634277
    7. '
' → logprob: -8.530539512634277
    8. 's' → logprob: -8.780539512634277
    9. 'st' → logprob: -8.905539512634277
    10. 'o' → logprob: -9.530539512634277

Token 3964: ' haut' (ID: 28223)
  Prédit: ' bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bas' → logprob: -0.6081589460372925
    2. 'bas' → logprob: -0.9831589460372925
    3. ' haut' → logprob: -2.733159065246582
    4. ' True' → logprob: -5.483159065246582
    5. 'haut' → logprob: -5.858159065246582
    6. 'False' → logprob: -5.983159065246582
    7. ' False' → logprob: -6.233159065246582
    8. 'True' → logprob: -6.233159065246582
    9. '0' → logprob: -6.483159065246582
    10. ' high' → logprob: -8.483159065246582

Token 3965: ' (' (ID: 350)
  Prédit: '(False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(False' → logprob: -0.4744676947593689
    2. ' (' → logprob: -1.2244677543640137
    3. '(True' → logprob: -3.0994677543640137
    4. 'False' → logprob: -3.7244677543640137
    5. '=False' → logprob: -5.349467754364014
    6. ' False' → logprob: -5.474467754364014
    7. ',' → logprob: -6.349467754364014
    8. ' =' → logprob: -6.474467754364014
    9. '(' → logprob: -7.224467754364014
    10. '=True' → logprob: -7.599467754364014

Token 3966: 'True' (ID: 4710)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3883279860019684
    2. 'True' → logprob: -1.138327956199646
    3. '0' → logprob: -6.6383280754089355
    4. '1' → logprob: -9.763327598571777
    5. ' True' → logprob: -10.138327598571777
    6. ' False' → logprob: -10.138327598571777
    7. 'not' → logprob: -12.763327598571777
    8. '(True' → logprob: -13.138327598571777
    9. '
' → logprob: -13.513327598571777
    10. '   ' → logprob: -13.513327598571777

Token 3967: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.011817644350230694
    2. '                   ' → logprob: -5.011817455291748
    3. ',' → logprob: -5.386817455291748
    4. ')' → logprob: -8.886817932128906
    5. ')
' → logprob: -9.511817932128906
    6. ' ),' → logprob: -9.636817932128906
    7. '),
' → logprob: -9.886817932128906
    8. 'else' → logprob: -10.261817932128906
    9. '#' → logprob: -10.761817932128906
    10. '):
' → logprob: -11.261817932128906

Token 3968: ' est' (ID: 893)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03726999834179878
    2. ' False' → logprob: -3.5372700691223145
    3. 'est' → logprob: -5.4122700691223145
    4. '#' → logprob: -6.1622700691223145
    5. 'ou' → logprob: -7.7872700691223145
    6. ' est' → logprob: -8.037269592285156
    7. ' ou' → logprob: -10.162269592285156
    8. '                   ' → logprob: -10.662269592285156
    9. ' #' → logprob: -10.787269592285156
    10. '=False' → logprob: -11.162269592285156

Token 3969: ' bas' (ID: 3222)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.093505099765025e-05
    2. ' False' → logprob: -11.000020980834961
    3. 'not' → logprob: -13.000020980834961
    4. '0' → logprob: -13.750020980834961
    5. '(False' → logprob: -14.625020980834961
    6. 'True' → logprob: -15.875020980834961
    7. 'false' → logprob: -16.25002098083496
    8. 'Fa' → logprob: -16.50002098083496
    9. 'F' → logprob: -17.00002098083496
    10. '_false' → logprob: -17.37502098083496

Token 3970: ' (' (ID: 350)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6362680792808533
    2. '(False' → logprob: -1.136268138885498
    3. ' False' → logprob: -2.386268138885498
    4. '=False' → logprob: -2.886268138885498
    5. '(True' → logprob: -7.136268138885498
    6. ' =' → logprob: -8.01126766204834
    7. '=True' → logprob: -8.13626766204834
    8. '                   ' → logprob: -8.76126766204834
    9. ' (' → logprob: -9.26126766204834
    10. '_false' → logprob: -9.51126766204834

Token 3971: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.491498531133402e-06
    2. 'True' → logprob: -11.750009536743164
    3. ' False' → logprob: -13.375009536743164
    4. '0' → logprob: -18.000009536743164
    5. '(False' → logprob: -18.125009536743164
    6. '
' → logprob: -19.250009536743164
    7. 'false' → logprob: -19.375009536743164
    8. ')' → logprob: -20.125009536743164
    9. '=False' → logprob: -21.000009536743164
    10. '_false' → logprob: -21.125009536743164

Token 3972: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10399764776229858
    2. '                   ' → logprob: -2.6039977073669434
    3. ')' → logprob: -4.478997707366943
    4. '):
' → logprob: -4.478997707366943
    5. ')

' → logprob: -6.978997707366943
    6. '):

' → logprob: -8.228997230529785
    7. ' )
' → logprob: -9.103997230529785
    8. ')
' → logprob: -9.228997230529785
    9. '),' → logprob: -9.353997230529785
    10. '               ' → logprob: -9.603997230529785

Token 3973: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.040886711329221725
    2. 'if' → logprob: -3.290886640548706
    3. ' if' → logprob: -6.915886878967285
    4. '
' → logprob: -7.540886878967285
    5. '                    
' → logprob: -8.165886878967285
    6. 'west' → logprob: -8.290886878967285
    7. '```' → logprob: -8.415886878967285
    8. 'level' → logprob: -8.915886878967285
    9. 'ou' → logprob: -9.915886878967285
    10. '                    ' → logprob: -9.915886878967285

Token 3974: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.979799211025238
    2. 'west' → logprob: -1.1047992706298828
    3. 'ou' → logprob: -1.4797992706298828
    4. '                   ' → logprob: -3.229799270629883
    5. 'expected' → logprob: -5.229799270629883
    6. 'level' → logprob: -5.229799270629883
    7. 'o' → logprob: -6.479799270629883
    8. 'ow' → logprob: -6.479799270629883
    9. 'niveau' → logprob: -6.729799270629883
    10. '#' → logprob: -6.979799270629883

Token 3975: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.17597201466560364
    2. '(g' → logprob: -1.9259719848632812
    3. '((' → logprob: -5.175971984863281
    4. '(' → logprob: -5.550971984863281
    5. '(not' → logprob: -6.050971984863281
    6. ' g' → logprob: -6.675971984863281
    7. 'not' → logprob: -6.925971984863281
    8. ' (' → logprob: -7.300971984863281
    9. '(s' → logprob: -8.675971984863281
    10. '(
' → logprob: -8.800971984863281

Token 3976: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.033332131803035736
    2. '.level' → logprob: -3.533332109451294
    3. 'level' → logprob: -6.283332347869873
    4. '.D' → logprob: -7.283332347869873
    5. '.L' → logprob: -8.033331871032715
    6. '.U' → logprob: -8.658331871032715
    7. '.X' → logprob: -8.783331871032715
    8. '.F' → logprob: -9.283331871032715
    9. 'UD' → logprob: -9.783331871032715
    10. '.UR' → logprob: -10.283331871032715

Token 3977: 'UD' (ID: 7965)
  Prédit: 'UD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UD' → logprob: -0.005365494638681412
    2. 'level' → logprob: -5.255365371704102
    3. 'D' → logprob: -9.505365371704102
    4. '
' → logprob: -10.505365371704102
    5. '   ' → logprob: -11.630365371704102
    6. 'X' → logprob: -12.630365371704102
    7. ' UD' → logprob: -12.755365371704102
    8. '  ' → logprob: -12.880365371704102
    9. 'L' → logprob: -13.630365371704102
    10. '#' → logprob: -13.630365371704102

Token 3978: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6326718926429749
    2. ' ==' → logprob: -0.7576718926429749
    3. '==
' → logprob: -10.007672309875488
    4. ')==' → logprob: -11.632672309875488
    5. ']==' → logprob: -12.507672309875488
    6. '()==' → logprob: -12.507672309875488
    7. '[' → logprob: -13.382672309875488
    8. '=' → logprob: -13.507672309875488
    9. '0' → logprob: -13.507672309875488
    10. '
' → logprob: -13.882672309875488

Token 3979: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038705902989022434
    2. ' ' → logprob: -8.125387191772461
    3. '1' → logprob: -9.375387191772461
    4. '   ' → logprob: -14.000387191772461
    5. '```' → logprob: -14.062887191772461
    6. '<|end|>' → logprob: -14.312887191772461
    7. '=' → logprob: -14.375387191772461
    8. 'False' → logprob: -14.375387191772461
    9. '(' → logprob: -15.000387191772461
    10. '[' → logprob: -15.125387191772461

Token 3980: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01117561012506485
    2. '1' → logprob: -4.511175632476807
    3. ' ' → logprob: -9.011175155639648
    4. '   ' → logprob: -13.823675155639648
    5. '=' → logprob: -14.136175155639648
    6. '```' → logprob: -14.323675155639648
    7. '[' → logprob: -14.698675155639648
    8. 'False' → logprob: -14.948675155639648
    9. '(' → logprob: -15.198675155639648
    10. '-' → logprob: -15.511175155639648

Token 3981: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8434882164001465
    2. ':
' → logprob: -1.0934882164001465
    3. 'and' → logprob: -2.0934882164001465
    4. '                       ' → logprob: -2.9684882164001465
    5. '==' → logprob: -3.2184882164001465
    6. ':' → logprob: -4.4684882164001465
    7. ' ==' → logprob: -4.9684882164001465
    8. '                   ' → logprob: -7.2184882164001465
    9. '                           ' → logprob: -8.718488693237305
    10. ':

' → logprob: -9.093488693237305

Token 3982: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.018851857632398605
    2. '                   ' → logprob: -5.2688517570495605
    3. 'if' → logprob: -5.7688517570495605
    4. 'level' → logprob: -5.8938517570495605
    5. '#' → logprob: -6.6438517570495605
    6. 'False' → logprob: -7.0188517570495605
    7. 'west' → logprob: -7.1438517570495605
    8. 'ou' → logprob: -7.1438517570495605
    9. ':
' → logprob: -7.7688517570495605
    10. ' if' → logprob: -7.8938517570495605

Token 3983: ' west' (ID: 14078)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4155813455581665
    2. 'west' (adapté à ' west') → logprob: -2.790581226348877
    3. 'expected' → logprob: -2.915581226348877
    4. 'desired' → logprob: -3.165581226348877
    5. 'sas' → logprob: -3.165581226348877
    6. 'required' → logprob: -3.290581226348877
    7. 'not' → logprob: -3.790581226348877
    8. 'ou' → logprob: -4.040581226348877
    9. '#' → logprob: -4.540581226348877
    10. 'level' → logprob: -4.665581226348877

Token 3984: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.0005297990282997489
    2. ' =' → logprob: -8.250530242919922
    3. 'level' → logprob: -9.375530242919922
    4. '_lvl' → logprob: -9.375530242919922
    5. '_is' → logprob: -10.000530242919922
    6. '_bas' → logprob: -11.375530242919922
    7. '_low' → logprob: -11.500530242919922
    8. '_side' → logprob: -11.750530242919922
    9. 'niveau' → logprob: -11.750530242919922
    10. 'Level' → logprob: -12.125530242919922

Token 3985: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869776129722595
    2. ' =' → logprob: -1.1369776725769043
    3. '==' → logprob: -10.011977195739746
    4. ' ==' → logprob: -10.761977195739746
    5. '_level' → logprob: -11.136977195739746
    6. '=False' → logprob: -11.136977195739746
    7. '_is' → logprob: -12.761977195739746
    8. ' ' → logprob: -13.261977195739746
    9. '```' → logprob: -13.886977195739746
    10. ',' → logprob: -14.011977195739746

Token 3986: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.676292231422849e-05
    2. ' False' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.125017166137695
    4. 'false' → logprob: -19.625017166137695
    5. '(False' → logprob: -20.375017166137695
    6. 'True' → logprob: -21.750017166137695
    7. '=False' → logprob: -22.375017166137695
    8. '0' → logprob: -22.375017166137695
    9. '.False' → logprob: -22.875017166137695
    10. '_false' → logprob: -23.000017166137695

Token 3987: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3988: '                   ' (ID: 699)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.019322395324707
    2. '<|end|>' → logprob: -1.394322395324707
    3. ' else' → logprob: -1.519322395324707
    4. '                       ' → logprob: -2.269322395324707
    5. '                   ' → logprob: -3.394322395324707
    6. '                        
' → logprob: -4.019322395324707
    7. '
' → logprob: -4.769322395324707
    8. ' ' → logprob: -7.019322395324707
    9. '                        ' → logprob: -7.019322395324707
    10. '```' → logprob: -7.144322395324707

Token 3989: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.166767880320549
    2. ' else' → logprob: -1.9167678356170654
    3. '                   ' → logprob: -5.1667680740356445
    4. '               ' → logprob: -7.7917680740356445
    5. 'elif' → logprob: -8.041768074035645
    6. '                       ' → logprob: -10.791768074035645
    7. '           ' → logprob: -10.791768074035645
    8. ' elif' → logprob: -11.291768074035645
    9. '       ' → logprob: -11.791768074035645
    10. '	else' → logprob: -11.791768074035645

Token 3990: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05752045288681984
    2. ':' → logprob: -3.3075203895568848
    3. ':
' → logprob: -4.182520389556885
    4. '                        ' → logprob: -6.557520389556885
    5. '                        
' → logprob: -7.057520389556885
    6. '                   ' → logprob: -7.682520389556885
    7. '                           ' → logprob: -7.932520389556885
    8. '                      ' → logprob: -8.807520866394043
    9. '<|end|>' → logprob: -9.057520866394043
    10. ' :' → logprob: -9.057520866394043

Token 3991: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08572482317686081
    2. ' True' → logprob: -3.2107248306274414
    3. ' False' → logprob: -4.460724830627441
    4. '                   ' → logprob: -4.835724830627441
    5. 'True' → logprob: -5.210724830627441
    6. 'False' → logprob: -5.335724830627441
    7. '                           ' → logprob: -5.585724830627441
    8. '                        
' → logprob: -5.960724830627441
    9. ' ' → logprob: -6.210724830627441
    10. '                        ' → logprob: -6.460724830627441

Token 3992: ' west' (ID: 14078)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' (adapté à ' west') → logprob: -4.215330409351736e-05
    2. ' west' → logprob: -10.750041961669922
    3. 'True' → logprob: -11.000041961669922
    4. '                       ' → logprob: -12.875041961669922
    5. 'False' → logprob: -14.625041961669922
    6. 'western' → logprob: -15.125041961669922
    7. '                   ' → logprob: -15.500041961669922
    8. '                           ' → logprob: -16.125041961669922
    9. '#' → logprob: -16.500041961669922
    10. 'West' → logprob: -17.000041961669922

Token 3993: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -5.676981345459353e-06
    2. 'level' → logprob: -12.250005722045898
    3. '                   ' → logprob: -14.750005722045898
    4. '_levels' → logprob: -15.875005722045898
    5. 'Level' → logprob: -16.1250057220459
    6. 'niveau' → logprob: -16.5000057220459
    7. '_' → logprob: -17.0000057220459
    8. '_LEVEL' → logprob: -17.6250057220459
    9. '```' → logprob: -17.8750057220459
    10. 'n' → logprob: -17.8750057220459

Token 3994: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932252049446106
    2. ' =' → logprob: -0.6932252049446106
    3. '                       ' → logprob: -10.443224906921387
    4. '=False' → logprob: -10.568224906921387
    5. '=True' → logprob: -11.068224906921387
    6. '                   ' → logprob: -13.068224906921387
    7. '==' → logprob: -13.943224906921387
    8. '                        ' → logprob: -13.943224906921387
    9. '=
' → logprob: -14.068224906921387
    10. ':' → logprob: -14.068224906921387

Token 3995: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.1994775377388578e-05
    2. ' True' → logprob: -11.500012397766113
    3. 'False' → logprob: -13.625012397766113
    4. 'not' → logprob: -14.500012397766113
    5. '   ' → logprob: -17.750011444091797
    6. '(True' → logprob: -17.750011444091797
    7. 'true' → logprob: -19.250011444091797
    8. '=True' → logprob: -20.000011444091797
    9. '0' → logprob: -21.125011444091797
    10. '
' → logprob: -22.000011444091797

Token 3996: '

' (ID: 279)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5415772199630737
    2. '<|end|>' → logprob: -1.6665772199630737
    3. '                       ' → logprob: -2.6665773391723633
    4. ' if' → logprob: -3.5415773391723633
    5. '               ' → logprob: -3.6665773391723633
    6. '```' → logprob: -3.7915773391723633
    7. ')' → logprob: -4.041577339172363
    8. '                        
' → logprob: -4.041577339172363
    9. '                           ' → logprob: -4.291577339172363
    10. 'if' → logprob: -4.916577339172363

Token 3997: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05633600428700447
    2. '               ' → logprob: -3.181335926055908
    3. 'if' → logprob: -4.681335926055908
    4. '```' → logprob: -6.431335926055908
    5. ' if' → logprob: -7.306335926055908
    6. '
' → logprob: -7.431335926055908
    7. '                    
' → logprob: -7.556335926055908
    8. '                       ' → logprob: -8.056336402893066
    9. '           ' → logprob: -8.931336402893066
    10. 'else' → logprob: -10.556336402893066

Token 3998: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16147354245185852
    2. '                   ' → logprob: -1.9114735126495361
    3. '               ' → logprob: -7.161473751068115
    4. ' if' → logprob: -8.286473274230957
    5. '#' (adapté à ' #') → logprob: -9.286473274230957
    6. '                    
' → logprob: -9.911473274230957
    7. '```' → logprob: -10.161473274230957
    8. '           ' → logprob: -11.036473274230957
    9. '
' → logprob: -11.161473274230957
    10. '                       ' → logprob: -12.911473274230957

Token 3999: ' Le' (ID: 2018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011243393644690514
    2. '                   ' → logprob: -4.5112433433532715
    3. '```' → logprob: -9.76124382019043
    4. ' if' → logprob: -9.88624382019043
    5. '               ' → logprob: -10.13624382019043
    6. '#' → logprob: -10.26124382019043
    7. '                    
' → logprob: -11.88624382019043
    8. '
' → logprob: -13.26124382019043
    9. '                       ' → logprob: -13.51124382019043
    10. '           ' → logprob: -14.13624382019043

Token 4000: ' bateau' (ID: 123794)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007569773588329554
    2. '                   ' → logprob: -7.625756740570068
    3. ' if' → logprob: -8.625757217407227
    4. '#' → logprob: -9.625757217407227
    5. '
' → logprob: -12.000757217407227
    6. '                       ' → logprob: -12.125757217407227
    7. 'can' → logprob: -13.000757217407227
    8. '```' → logprob: -13.000757217407227
    9. 'level' → logprob: -13.250757217407227
    10. '                    
' → logprob: -13.750757217407227

Token 4001: ' peut' (ID: 9216)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.039600443094968796
    2. 'can' → logprob: -4.414600372314453
    3. '                   ' → logprob: -4.539600372314453
    4. '#' → logprob: -5.289600372314453
    5. ' if' → logprob: -5.539600372314453
    6. 'must' → logprob: -6.039600372314453
    7. 'est' → logprob: -6.789600372314453
    8. '_can' → logprob: -7.414600372314453
    9. ' peut' → logprob: -8.039600372314453
    10. 'cannot' → logprob: -8.164600372314453

Token 4002: ' entrer' (ID: 111917)
  Prédit: 'entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.009633428417146206
    2. 'pass' → logprob: -5.634633541107178
    3. 'enter' → logprob: -5.884633541107178
    4. ' entrer' → logprob: -6.509633541107178
    5. 'entrant' → logprob: -7.759633541107178
    6. 'contin' → logprob: -8.00963306427002
    7. 'entra' → logprob: -8.13463306427002
    8. 'entrée' → logprob: -8.50963306427002
    9. 'ent' → logprob: -9.13463306427002
    10. ' entr' → logprob: -9.38463306427002

Token 4003: ' dans' (ID: 2671)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019432762637734413
    2. 'if' → logprob: -6.376943111419678
    3. ' if' → logprob: -8.501943588256836
    4. '                       ' → logprob: -11.751943588256836
    5. '                    ' → logprob: -12.001943588256836
    6. ',' → logprob: -12.376943588256836
    7. '               ' → logprob: -12.751943588256836
    8. ' only' → logprob: -12.751943588256836
    9. 'only' → logprob: -13.001943588256836
    10. '				' → logprob: -13.126943588256836

Token 4004: ' sas' (ID: 51515)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.018095625564455986
    2. 'g' → logprob: -4.89309549331665
    3. 'ship' → logprob: -6.01809549331665
    4. 'le' → logprob: -6.39309549331665
    5. 's' → logprob: -6.51809549331665
    6. 'gate' → logprob: -7.14309549331665
    7. '```' → logprob: -7.26809549331665
    8. 'True' → logprob: -8.018095970153809
    9. 'if' → logprob: -8.018095970153809
    10. 'False' → logprob: -8.143095970153809

Token 4005: ' que' (ID: 661)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017707353690639138
    2. 'if' → logprob: -7.001770973205566
    3. ' if' → logprob: -7.126770973205566
    4. '                       ' → logprob: -10.751770973205566
    5. '               ' → logprob: -11.001770973205566
    6. ',' → logprob: -12.126770973205566
    7. '```' → logprob: -12.751770973205566
    8. '                    ' → logprob: -13.501770973205566
    9. '           ' → logprob: -13.876770973205566
    10. '				' → logprob: -14.376770973205566

Token 4006: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33924752473831177
    2. ' if' → logprob: -1.339247465133667
    3. ' si' → logprob: -4.464247703552246
    4. 'si' → logprob: -4.714247703552246
    5. '                   ' → logprob: -5.714247703552246
    6. '                       ' → logprob: -6.714247703552246
    7. 'only' → logprob: -8.339247703552246
    8. 'que' → logprob: -9.214247703552246
    9. ' only' → logprob: -9.464247703552246
    10. '               ' → logprob: -10.714247703552246

Token 4007: ' sas' (ID: 51515)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.0873880535364151
    2. 'west' → logprob: -3.212388038635254
    3. 'g' → logprob: -3.337388038635254
    4. ' sas' → logprob: -5.462388038635254
    5. 'not' → logprob: -6.837388038635254
    6. '(s' → logprob: -7.587388038635254
    7. '(g' → logprob: -8.087388038635254
    8. '   ' → logprob: -8.337388038635254
    9. ' g' → logprob: -8.587388038635254
    10. 's' → logprob: -8.587388038635254

Token 4008: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.0008180848672054708
    2. 'level' → logprob: -7.250818252563477
    3. '_inside' → logprob: -10.375818252563477
    4. '                   ' → logprob: -10.625818252563477
    5. '[level' → logprob: -11.000818252563477
    6. '_target' → logprob: -11.375818252563477
    7. 'niveau' → logprob: -12.125818252563477
    8. '.level' → logprob: -12.750818252563477
    9. '_levels' → logprob: -13.250818252563477
    10. '                       ' → logprob: -13.500818252563477

Token 4009: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17010557651519775
    2. ' ==' → logprob: -2.170105457305908
    3. '[i' → logprob: -3.170105457305908
    4. '                   ' → logprob: -9.045105934143066
    5. '[' → logprob: -9.420105934143066
    6. '==
' → logprob: -10.170105934143066
    7. '                       ' → logprob: -11.795105934143066
    8. '               ' → logprob: -13.170105934143066
    9. '           ' → logprob: -13.420105934143066
    10. ' ==
' → logprob: -13.545105934143066

Token 4010: ' niveau' (ID: 21708)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'west' → logprob: -5.157039049663581e-05
    2. ' west' → logprob: -9.875051498413086
    3. '```' → logprob: -17.750051498413086
    4. 'western' → logprob: -18.250051498413086
    5. '   ' → logprob: -18.500051498413086
    6. 'g' → logprob: -18.875051498413086
    7. 'West' → logprob: -19.375051498413086
    8. 'w' → logprob: -19.625051498413086
    9. '=' → logprob: -19.750051498413086
    10. '`' → logprob: -19.875051498413086

Token 4011: ' ou' (ID: 2031)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.005934486165642738
    2. 'ou' → logprob: -5.630934715270996
    3. ' west' → logprob: -7.005934715270996
    4. '   ' → logprob: -8.130934715270996
    5. '```' → logprob: -8.380934715270996
    6. '                   ' → logprob: -8.880934715270996
    7. '               ' → logprob: -9.380934715270996
    8. '       ' → logprob: -9.630934715270996
    9. '           ' → logprob: -10.255934715270996
    10. '=' → logprob: -10.255934715270996

Token 4012: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.14428488910198212
    2. 'west' → logprob: -2.019284963607788
    3. 'st' → logprob: -7.144284725189209
    4. '```' → logprob: -7.769284725189209
    5. 'uest' → logprob: -9.019285202026367
    6. 'w' → logprob: -9.394285202026367
    7. '   ' → logprob: -10.519285202026367
    8. 'ut' → logprob: -10.644285202026367
    9. 'vest' → logprob: -11.019285202026367
    10. 'east' → logprob: -11.144285202026367

Token 4013: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.41196364164352417
    2. '                   ' → logprob: -1.161963701248169
    3. 'and' → logprob: -3.786963701248169
    4. '                       ' → logprob: -6.91196346282959
    5. ':
' → logprob: -8.16196346282959
    6. '               ' → logprob: -8.16196346282959
    7. '==' → logprob: -9.03696346282959
    8. '                    ' → logprob: -9.78696346282959
    9. ' ==' → logprob: -9.91196346282959
    10. '
' → logprob: -10.03696346282959

Token 4014: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00200203456915915
    2. '                    ' → logprob: -6.627002239227295
    3. '                       ' → logprob: -8.127001762390137
    4. '               ' → logprob: -8.377001762390137
    5. ' and' → logprob: -10.127001762390137
    6. '           ' → logprob: -11.127001762390137
    7. ' ' → logprob: -11.377001762390137
    8. ' if' → logprob: -11.377001762390137
    9. '                ' → logprob: -11.502001762390137
    10. '                  ' → logprob: -11.627001762390137

Token 4015: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6213296055793762
    2. 'if' (adapté à ' if') → logprob: -0.8713296055793762
    3. ' if' → logprob: -3.1213295459747314
    4. '               ' → logprob: -8.621329307556152
    5. '                       ' → logprob: -9.871329307556152
    6. '```' → logprob: -10.746329307556152
    7. '           ' → logprob: -11.871329307556152
    8. ' ' → logprob: -12.621329307556152
    9. '                    
' → logprob: -12.871329307556152
    10. '                    ' → logprob: -13.121329307556152

Token 4016: ' sas' (ID: 51515)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.001976095838472247
    2. ' sas' → logprob: -6.626976013183594
    3. 'g' → logprob: -7.876976013183594
    4. 's' → logprob: -8.876976013183594
    5. '   ' → logprob: -10.251976013183594
    6. 'sar' → logprob: -10.626976013183594
    7. 'sap' → logprob: -11.751976013183594
    8. '(s' → logprob: -11.876976013183594
    9. 'sass' → logprob: -12.001976013183594
    10. 'sis' → logprob: -12.126976013183594

Token 4017: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.0008342855726368725
    2. '_inside' → logprob: -7.8758344650268555
    3. 'level' → logprob: -8.250834465026855
    4. '_target' → logprob: -8.625834465026855
    5. '_levels' → logprob: -12.000834465026855
    6. '[level' → logprob: -12.750834465026855
    7. '   ' → logprob: -13.625834465026855
    8. 'inside' → logprob: -14.375834465026855
    9. '_' → logprob: -15.000834465026855
    10. '[' → logprob: -15.250834465026855

Token 4018: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.130576806142926e-05
    2. '                   ' → logprob: -11.125031471252441
    3. '==' → logprob: -11.875031471252441
    4. '[g' → logprob: -12.750031471252441
    5. '               ' → logprob: -12.875031471252441
    6. '   ' → logprob: -14.250031471252441
    7. ' ==' → logprob: -14.625031471252441
    8. ' [' → logprob: -14.750031471252441
    9. '           ' → logprob: -14.875031471252441
    10. '                           ' → logprob: -15.000031471252441

Token 4019: 'gate' (ID: 33990)
  Prédit: 'gate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.00011367550177965313
    2. '[' → logprob: -9.750113487243652
    3. ' gate' → logprob: -10.250113487243652
    4. '                   ' → logprob: -12.125113487243652
    5. '   ' → logprob: -13.000113487243652
    6. '               ' → logprob: -13.125113487243652
    7. '           ' → logprob: -13.125113487243652
    8. '```' → logprob: -13.375113487243652
    9. 'gateway' → logprob: -13.750113487243652
    10. '_gate' → logprob: -13.750113487243652

Token 4020: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.21176943182945251
    2. 'i' → logprob: -2.0867693424224854
    3. 'gate' → logprob: -2.8367693424224854
    4. '[' → logprob: -6.3367695808410645
    5. '_positions' → logprob: -6.8367695808410645
    6. '_gate' → logprob: -6.9617695808410645
    7. '   ' → logprob: -7.3367695808410645
    8. '```' → logprob: -7.6492695808410645
    9. '               ' → logprob: -8.211769104003906
    10. '       ' → logprob: -8.336769104003906

Token 4021: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.172102153301239
    2. '[i' → logprob: -1.9221022129058838
    3. ']==' → logprob: -5.547101974487305
    4. ']' → logprob: -5.547101974487305
    5. '                   ' → logprob: -6.422101974487305
    6. '==' → logprob: -6.922101974487305
    7. '               ' → logprob: -7.797101974487305
    8. '[g' → logprob: -8.672101974487305
    9. 'i' → logprob: -8.797101974487305
    10. '                       ' → logprob: -9.297101974487305

Token 4022: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932697296142578
    2. ' ==' → logprob: -0.6932697296142578
    3. '[' → logprob: -9.818269729614258
    4. '==
' → logprob: -10.693269729614258
    5. ' !=' → logprob: -11.318269729614258
    6. ')==' → logprob: -11.693269729614258
    7. '!=' → logprob: -11.943269729614258
    8. ']==' → logprob: -12.068269729614258
    9. '                           ' → logprob: -12.943269729614258
    10. ' ==
' → logprob: -13.568269729614258

Token 4023: ' west' (ID: 14078)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -1.9266199160483666e-05
    2. ' west' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.250019073486328
    4. 'western' → logprob: -17.375019073486328
    5. '       ' → logprob: -18.000019073486328
    6. '```' → logprob: -19.125019073486328
    7. '           ' → logprob: -19.875019073486328
    8. '=' → logprob: -20.250019073486328
    9. '
' → logprob: -20.250019073486328
    10. ' ' → logprob: -20.250019073486328

Token 4024: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -1.6240566083070007e-06
    2. 'level' → logprob: -14.125001907348633
    3. 'Level' → logprob: -14.750001907348633
    4. '                   ' → logprob: -15.750001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '           ' → logprob: -16.875001907348633
    7. ' _' → logprob: -17.125001907348633
    8. '               ' → logprob: -17.500001907348633
    9. '_levels' → logprob: -18.000001907348633
    10. '       ' → logprob: -18.250001907348633

Token 4025: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7533376812934875
    2. ':' → logprob: -0.8783376812934875
    3. '                       ' → logprob: -2.2533376216888428
    4. ' and' → logprob: -5.253337860107422
    5. '                   ' → logprob: -6.753337860107422
    6. '                           ' → logprob: -6.753337860107422
    7. '                               ' → logprob: -8.378337860107422
    8. '                        ' → logprob: -8.503337860107422
    9. 'and' → logprob: -9.378337860107422
    10. '):
' → logprob: -9.503337860107422

Token 4026: ' sas' (ID: 51515)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.921286940574646
    2. 'not' → logprob: -1.296286940574646
    3. 's' → logprob: -1.796286940574646
    4. 'abs' → logprob: -2.7962870597839355
    5. 'ship' → logprob: -3.5462870597839355
    6. '(not' → logprob: -3.7962870597839355
    7. 'g' → logprob: -4.2962870597839355
    8. '(' → logprob: -4.7962870597839355
    9. '(s' → logprob: -5.1712870597839355
    10. 'pos' → logprob: -5.1712870597839355

Token 4027: '_inside' (ID: 191028)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.20639221370220184
    2. '_level' → logprob: -1.8313921689987183
    3. '_inside' → logprob: -3.831392288208008
    4. 'level' → logprob: -6.331392288208008
    5. 'in' → logprob: -7.206392288208008
    6. '_target' → logprob: -7.831392288208008
    7. '#' → logprob: -7.831392288208008
    8. '   ' → logprob: -9.081392288208008
    9. 'inside' → logprob: -9.081392288208008
    10. '           ' → logprob: -9.331392288208008

Token 4028: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.0126840758603066e-05
    2. '[i' → logprob: -11.500040054321289
    3. '                   ' → logprob: -11.500040054321289
    4. '   ' → logprob: -12.250040054321289
    5. '```' → logprob: -12.500040054321289
    6. ' [' → logprob: -13.000040054321289
    7. '               ' → logprob: -13.625040054321289
    8. '                           ' → logprob: -13.750040054321289
    9. ')[' → logprob: -13.750040054321289
    10. '][' → logprob: -14.250040054321289

Token 4029: 'gate' (ID: 33990)
  Prédit: 'gate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -0.0002882721892092377
    2. '[' → logprob: -8.250288009643555
    3. ' gate' → logprob: -10.875288009643555
    4. 'g' → logprob: -13.625288009643555
    5. '   ' → logprob: -13.750288009643555
    6. '```' → logprob: -13.750288009643555
    7. '_gate' → logprob: -14.000288009643555
    8. 'gateway' → logprob: -14.375288009643555
    9. '
' → logprob: -14.875288009643555
    10. '[
' → logprob: -15.125288009643555

Token 4030: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.0564331205387134e-05
    2. 'i' → logprob: -11.50001049041748
    3. '[i' → logprob: -15.50001049041748
    4. '```' → logprob: -17.000011444091797
    5. '[' → logprob: -17.625011444091797
    6. '...' → logprob: -18.625011444091797
    7. '\' → logprob: -18.875011444091797
    8. 's' → logprob: -19.125011444091797
    9. '{i' → logprob: -19.125011444091797
    10. '   ' → logprob: -19.250011444091797

Token 4031: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14969070255756378
    2. ']' → logprob: -2.024690628051758
    3. ']==' → logprob: -6.149690628051758
    4. ' is' → logprob: -6.524690628051758
    5. 'i' → logprob: -6.899690628051758
    6. '[' → logprob: -7.399690628051758
    7. '                   ' → logprob: -7.774690628051758
    8. 'is' → logprob: -8.274690628051758
    9. '(i' → logprob: -8.399690628051758
    10. '           ' → logprob: -8.649690628051758

Token 4032: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03811688721179962
    2. 'is' → logprob: -3.288116931915283
    3. '==' → logprob: -9.663116455078125
    4. 'None' → logprob: -12.663116455078125
    5. '	is' → logprob: -13.288116455078125
    6. '[i' → logprob: -13.413116455078125
    7. '[' → logprob: -13.538116455078125
    8. ')' → logprob: -13.663116455078125
    9. ')is' → logprob: -14.538116455078125
    10. ' ==' → logprob: -14.663116455078125

Token 4033: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.988221684878226e-06
    2. ' None' → logprob: -12.125006675720215
    3. '   ' → logprob: -13.500006675720215
    4. '(None' → logprob: -17.12500762939453
    5. '_None' → logprob: -17.50000762939453
    6. '=None' → logprob: -18.50000762939453
    7. 'not' → logprob: -18.50000762939453
    8. 'none' → logprob: -18.62500762939453
    9. 'No' → logprob: -20.00000762939453
    10. '[' → logprob: -20.50000762939453

Token 4034: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6089780330657959
    2. '                       ' → logprob: -1.108978033065796
    3. ':' → logprob: -2.483978033065796
    4. ' and' → logprob: -3.483978033065796
    5. '                   ' → logprob: -5.108978271484375
    6. '                           ' → logprob: -5.483978271484375
    7. 'and' → logprob: -7.608978271484375
    8. '                               ' → logprob: -7.983978271484375
    9. '):
' → logprob: -8.483978271484375
    10. '                        ' → logprob: -8.608978271484375

Token 4035: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.036503881216049194
    2. ':
' → logprob: -3.786503791809082
    3. '                           ' → logprob: -5.411503791809082
    4. '                   ' → logprob: -6.036503791809082
    5. '                               ' → logprob: -6.036503791809082
    6. ' and' → logprob: -6.161503791809082
    7. ':' → logprob: -7.161503791809082
    8. '                        
' → logprob: -7.911503791809082
    9. '                        ' → logprob: -8.536503791809082
    10. '):
' → logprob: -9.036503791809082

Token 4036: ' #' (ID: 1069)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.3892296552658081
    2. '                   ' → logprob: -1.264229655265808
    3. '                       ' → logprob: -3.3892297744750977
    4. 'sas' → logprob: -6.389229774475098
    5. '   ' → logprob: -6.639229774475098
    6. '               ' → logprob: -6.764229774475098
    7. '                           ' → logprob: -7.389229774475098
    8. '       ' → logprob: -8.264229774475098
    9. '```' → logprob: -8.264229774475098
    10. '           ' → logprob: -8.389229774475098

Token 4037: ' B' (ID: 418)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ship' → logprob: -0.019408414140343666
    2. '                   ' → logprob: -4.394408226013184
    3. '#' → logprob: -5.394408226013184
    4. 'sas' → logprob: -6.394408226013184
    5. '                       ' → logprob: -7.769408226013184
    6. '               ' → logprob: -9.644408226013184
    7. 'ships' → logprob: -9.769408226013184
    8. '```' → logprob: -10.644408226013184
    9. '                           ' → logprob: -11.019408226013184
    10. '   ' → logprob: -11.519408226013184

Token 4038: 'ateau' (ID: 107442)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9495173692703247
    2. 'ateau' → logprob: -1.5745173692703247
    3. 'ate' → logprob: -1.9495173692703247
    4. '               ' → logprob: -2.949517250061035
    5. '                   ' → logprob: -3.449517250061035
    6. 'sas' → logprob: -3.574517250061035
    7. '           ' → logprob: -3.699517250061035
    8. '                       ' → logprob: -3.949517250061035
    9. 'ata' → logprob: -4.074517250061035
    10. '       ' → logprob: -4.199517250061035

Token 4039: ' entre' (ID: 3853)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.028331294655799866
    2. '                   ' → logprob: -5.028331279754639
    3. '_inside' → logprob: -5.278331279754639
    4. 's' → logprob: -5.403331279754639
    5. 'in' → logprob: -5.403331279754639
    6. '#' → logprob: -6.153331279754639
    7. '_ent' → logprob: -6.778331279754639
    8. '                       ' → logprob: -7.028331279754639
    9. 'ent' → logprob: -7.528331279754639
    10. 'In' → logprob: -8.153331756591797

Token 4040: ' dans' (ID: 2671)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.17928555607795715
    2. '                   ' → logprob: -2.5542855262756348
    3. '[' → logprob: -3.9292855262756348
    4. '[s' → logprob: -4.554285526275635
    5. '```' → logprob: -4.554285526275635
    6. 's' → logprob: -5.179285526275635
    7. 'dans' → logprob: -5.429285526275635
    8. '_in' → logprob: -5.554285526275635
    9. '                           ' → logprob: -5.679285526275635
    10. '[i' → logprob: -5.929285526275635

Token 4041: ' sas' (ID: 51515)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.0009839815320447087
    2. ' sas' → logprob: -7.875984191894531
    3. 'gate' → logprob: -8.250984191894531
    4. '```' → logprob: -9.500984191894531
    5. 's' → logprob: -10.250984191894531
    6. 'ship' → logprob: -10.250984191894531
    7. 'sar' → logprob: -10.500984191894531
    8. '   ' → logprob: -10.750984191894531
    9. 'sap' → logprob: -10.750984191894531
    10. '``' → logprob: -10.875984191894531

Token 4042: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03517927601933479
    2. '                   ' → logprob: -3.535179376602173
    3. '                           ' → logprob: -6.410179138183594
    4. '
' → logprob: -6.410179138183594
    5. '                        
' → logprob: -7.160179138183594
    6. '               ' → logprob: -7.535179138183594
    7. ':
' → logprob: -8.410179138183594
    8. '           ' → logprob: -8.785179138183594
    9. '```' → logprob: -9.660179138183594
    10. '                               ' → logprob: -9.785179138183594

Token 4043: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.009876616299152374
    2. '                   ' → logprob: -4.759876728057861
    3. '               ' → logprob: -7.884876728057861
    4. 'ship' → logprob: -8.009876251220703
    5. '                           ' → logprob: -8.384876251220703
    6. 'ships' → logprob: -9.134876251220703
    7. '```' → logprob: -9.134876251220703
    8. '           ' → logprob: -10.134876251220703
    9. 's' → logprob: -11.009876251220703
    10. '                               ' → logprob: -11.134876251220703

Token 4044: ' ship' (ID: 12407)
  Prédit: 'ship'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ship' (adapté à ' ship') → logprob: -0.02592598646879196
    2. '                       ' → logprob: -4.525926113128662
    3. '                   ' → logprob: -4.650926113128662
    4. 'sas' → logprob: -5.775926113128662
    5. 'ships' → logprob: -7.400926113128662
    6. '                           ' → logprob: -7.775926113128662
    7. '```' → logprob: -8.275925636291504
    8. ' ship' → logprob: -8.275925636291504
    9. '               ' → logprob: -8.400925636291504
    10. '                               ' → logprob: -9.900925636291504

Token 4045: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.7432603272027336e-06
    2. 's' → logprob: -14.375001907348633
    3. '_inside' → logprob: -15.000001907348633
    4. 'In' → logprob: -15.375001907348633
    5. '_' → logprob: -16.375001907348633
    6. ' _' → logprob: -17.000001907348633
    7. 'in' → logprob: -17.000001907348633
    8. '_on' → logprob: -17.500001907348633
    9. '_i' → logprob: -17.500001907348633
    10. ')_' → logprob: -17.500001907348633

Token 4046: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.5609731674194336
    2. 'sas' → logprob: -0.9359731674194336
    3. 's' → logprob: -3.3109731674194336
    4. '```' → logprob: -9.060973167419434
    5. '[s' → logprob: -9.185973167419434
    6. '_' → logprob: -9.435973167419434
    7. '`s' → logprob: -9.935973167419434
    8. '[i' → logprob: -10.185973167419434
    9. '[' → logprob: -10.310973167419434
    10. '\s' → logprob: -10.435973167419434

Token 4047: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.1025385856628418
    2. 's' → logprob: -3.352538585662842
    3. 'sas' → logprob: -3.352538585662842
    4. '_s' → logprob: -3.727538585662842
    5. '_as' → logprob: -6.852538585662842
    6. '[' → logprob: -6.977538585662842
    7. '[s' → logprob: -7.477538585662842
    8. '[i' → logprob: -8.2275390625
    9. '_' → logprob: -8.6025390625
    10. '_in' → logprob: -9.4775390625

Token 4048: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.166338137816638e-05
    2. '[' → logprob: -10.375031471252441
    3. 'i' → logprob: -15.750031471252441
    4. ' [' → logprob: -16.125032424926758
    5. '```' → logprob: -16.375032424926758
    6. '=i' → logprob: -17.500032424926758
    7. '(i' → logprob: -17.625032424926758
    8. '[s' → logprob: -19.125032424926758
    9. '{i' → logprob: -19.250032424926758
    10. '\[' → logprob: -19.500032424926758

Token 4049: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2419537603855133
    2. '[' → logprob: -1.616953730583191
    3. '][' → logprob: -4.2419538497924805
    4. ']' → logprob: -6.6169538497924805
    5. '                   ' → logprob: -8.99195384979248
    6. ']=' → logprob: -9.36695384979248
    7. '[g' → logprob: -9.49195384979248
    8. '```' → logprob: -9.86695384979248
    9. '=' → logprob: -9.99195384979248
    10. '               ' → logprob: -9.99195384979248

Token 4050: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.041158679872751236
    2. '[i' → logprob: -3.791158676147461
    3. '=' → logprob: -4.041158676147461
    4. ' =' → logprob: -9.291158676147461
    5. '                   ' → logprob: -10.541158676147461
    6. '=[' → logprob: -11.416158676147461
    7. ' [' → logprob: -11.791158676147461
    8. '```' → logprob: -11.916158676147461
    9. '                       ' → logprob: -12.041158676147461
    10. '=i' → logprob: -12.291158676147461

Token 4051: ' gate' (ID: 27172)
  Prédit: 'gate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gate' → logprob: -2.7610454708337784e-05
    2. ' gate' → logprob: -10.500027656555176
    3. 'gateway' → logprob: -17.25002670288086
    4. '_gate' → logprob: -17.37502670288086
    5. 'g' → logprob: -19.25002670288086
    6. '```' → logprob: -20.50002670288086
    7. 'Gate' → logprob: -20.62502670288086
    8. '   ' → logprob: -20.62502670288086
    9. 'gun' → logprob: -20.75002670288086
    10. 'gat' → logprob: -20.87502670288086

Token 4052: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0004390134708955884
    2. 'i' → logprob: -8.250438690185547
    3. '[' → logprob: -9.250438690185547
    4. '```' → logprob: -10.500438690185547
    5. '_gate' → logprob: -10.750438690185547
    6. '[i' → logprob: -12.500438690185547
    7. ')_' → logprob: -12.500438690185547
    8. '_index' → logprob: -12.875438690185547
    9. '_positions' → logprob: -13.375438690185547
    10. ')' → logprob: -13.750438690185547

Token 4053: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.023404689505696297
    2. '                        
' → logprob: -4.398404598236084
    3. '                   ' → logprob: -5.148404598236084
    4. '<|end|>' → logprob: -5.898404598236084
    5. '               ' → logprob: -7.273404598236084
    6. '                           ' → logprob: -7.773404598236084
    7. '
' → logprob: -8.273405075073242
    8. '                        ' → logprob: -8.773405075073242
    9. ')' → logprob: -8.898405075073242
    10. '           ' → logprob: -9.023405075073242

Token 4054: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0001544321421533823
    2. '                   ' → logprob: -9.250154495239258
    3. '                        
' → logprob: -11.000154495239258
    4. '                           ' → logprob: -11.625154495239258
    5. 'sas' → logprob: -11.750154495239258
    6. '               ' → logprob: -11.750154495239258
    7. '
' → logprob: -12.000154495239258
    8. '```' → logprob: -12.000154495239258
    9. '           ' → logprob: -13.750154495239258
    10. '       ' → logprob: -14.250154495239258

Token 4055: ' sas' (ID: 51515)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sas' (adapté à ' sas') → logprob: -0.09478788822889328
    2. '                       ' → logprob: -3.094787836074829
    3. 'ships' → logprob: -4.219788074493408
    4. 'True' → logprob: -4.344788074493408
    5. '                   ' → logprob: -4.844788074493408
    6. 'False' → logprob: -5.719788074493408
    7. 'g' → logprob: -6.219788074493408
    8. '               ' → logprob: -7.344788074493408
    9. '                           ' → logprob: -7.344788074493408
    10. '   ' → logprob: -7.719788074493408

Token 4056: '_inside' (ID: 191028)
  Prédit: '_inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inside' → logprob: -4.894790981779806e-05
    2. 'inside' → logprob: -10.500048637390137
    3. 'Inside' → logprob: -10.875048637390137
    4. '```' → logprob: -14.000048637390137
    5. '_' → logprob: -15.250048637390137
    6. '_in' → logprob: -15.375048637390137
    7. '\' → logprob: -15.875048637390137
    8. '   ' → logprob: -16.000049591064453
    9. 's' → logprob: -16.250049591064453
    10. '_inner' → logprob: -16.250049591064453

Token 4057: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.228561349213123e-05
    2. '```' → logprob: -10.375052452087402
    3. '                   ' → logprob: -11.250052452087402
    4. '               ' → logprob: -13.000052452087402
    5. '\[' → logprob: -13.500052452087402
    6. '                       ' → logprob: -13.875052452087402
    7. '[
' → logprob: -15.125052452087402
    8. '                           ' → logprob: -15.125052452087402
    9. ' =' → logprob: -15.250052452087402
    10. '       ' → logprob: -15.250052452087402

Token 4058: 'gate' (ID: 33990)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38748425245285034
    2. 'gate' → logprob: -1.1374843120574951
    3. '[i' → logprob: -8.762484550476074
    4. '[g' → logprob: -9.137484550476074
    5. '```' → logprob: -9.387484550476074
    6. 'i' → logprob: -9.762484550476074
    7. '_gate' → logprob: -10.012484550476074
    8. ' gate' → logprob: -10.262484550476074
    9. 'g' → logprob: -10.512484550476074
    10. '[s' → logprob: -11.012484550476074

Token 4059: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00012642296496778727
    2. '[' → logprob: -9.250126838684082
    3. 'i' → logprob: -11.000126838684082
    4. '```' → logprob: -11.750126838684082
    5. '[i' → logprob: -12.875126838684082
    6. '_gate' → logprob: -14.750126838684082
    7. ']_' → logprob: -14.875126838684082
    8. '[_' → logprob: -15.000126838684082
    9. '...' → logprob: -15.250126838684082
    10. '_id' → logprob: -15.500126838684082

Token 4060: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08949945122003555
    2. ']' → logprob: -3.2144994735717773
    3. ']=' → logprob: -3.8394994735717773
    4. '=' → logprob: -4.089499473571777
    5. '[' → logprob: -4.964499473571777
    6. '=i' → logprob: -9.964499473571777
    7. '][' → logprob: -10.339499473571777
    8. '```' → logprob: -10.464499473571777
    9. 'i' → logprob: -10.589499473571777
    10. '[I' → logprob: -10.964499473571777

Token 4061: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2471589798224159e-05
    2. ' =' → logprob: -11.500012397766113
    3. '=i' → logprob: -13.125012397766113
    4. ')=' → logprob: -15.750012397766113
    5. ']=' → logprob: -16.87501335144043
    6. '=
' → logprob: -17.50001335144043
    7. '==' → logprob: -18.00001335144043
    8. ')' → logprob: -18.37501335144043
    9. '=}' → logprob: -18.50001335144043
    10. '＝' → logprob: -18.62501335144043

Token 4062: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.615255839889869e-05
    2. ' i' → logprob: -9.250096321105957
    3. '	i' → logprob: -17.25009536743164
    4. '(i' → logprob: -18.12509536743164
    5. ''i' → logprob: -19.62509536743164
    6. '$i' → logprob: -19.87509536743164
    7. '[i' → logprob: -20.37509536743164
    8. '{i' → logprob: -20.37509536743164
    9. ')i' → logprob: -21.50009536743164
    10. '   ' → logprob: -21.62509536743164

Token 4063: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007362763863056898
    2. '                        
' → logprob: -6.0073628425598145
    3. '<|end|>' → logprob: -6.1323628425598145
    4. '                   ' → logprob: -6.5073628425598145
    5. '               ' → logprob: -7.2573628425598145
    6. '           ' → logprob: -9.132362365722656
    7. '                           ' → logprob: -9.507362365722656
    8. '                        ' → logprob: -9.757362365722656
    9. '                      ' → logprob: -10.132362365722656
    10. 's' → logprob: -10.132362365722656

Token 4064: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002382545731961727
    2. 'ships' → logprob: -7.002382755279541
    3. '                   ' → logprob: -7.252382755279541
    4. '                        
' → logprob: -8.127382278442383
    5. '```' → logprob: -9.127382278442383
    6. 's' → logprob: -9.127382278442383
    7. '               ' → logprob: -9.252382278442383
    8. '#' → logprob: -10.127382278442383
    9. '           ' → logprob: -10.752382278442383
    10. '                      ' → logprob: -11.002382278442383

Token 4065: ' #' (ID: 1069)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.09804803878068924
    2. 's' → logprob: -2.598047971725464
    3. '                       ' → logprob: -4.848048210144043
    4. '                   ' → logprob: -5.223048210144043
    5. '#' (adapté à ' #') → logprob: -5.348048210144043
    6. '               ' → logprob: -7.973048210144043
    7. '           ' → logprob: -9.348048210144043
    8. 'if' → logprob: -9.348048210144043
    9. 'continue' → logprob: -9.348048210144043
    10. '```' → logprob: -9.848048210144043

Token 4066: ' B' (ID: 418)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7302253246307373
    2. 'ships' → logprob: -0.8552253246307373
    3. '#' → logprob: -2.4802253246307373
    4. '                       ' → logprob: -5.605225563049316
    5. '                   ' → logprob: -5.855225563049316
    6. '               ' → logprob: -7.105225563049316
    7. 'if' → logprob: -7.480225563049316
    8. '           ' → logprob: -7.605225563049316
    9. '                           ' → logprob: -9.605225563049316
    10. 'ship' → logprob: -9.730225563049316

Token 4067: 'ateau' (ID: 107442)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9552044868469238
    2. 'ships' → logprob: -0.9552044868469238
    3. '           ' → logprob: -2.830204486846924
    4. 'reak' → logprob: -2.955204486846924
    5. 'ate' → logprob: -3.955204486846924
    6. 's' → logprob: -3.955204486846924
    7. 'ooks' → logprob: -4.705204486846924
    8. 'locks' → logprob: -5.205204486846924
    9. 'egin' → logprob: -5.330204486846924
    10. '       ' → logprob: -5.330204486846924

Token 4068: ' s' (ID: 265)
  Prédit: '.speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.speed' → logprob: -0.0001468067930545658
    2. 'speed' → logprob: -8.875146865844727
    3. '.wait' → logprob: -12.500146865844727
    4. '.velocity' → logprob: -13.875146865844727
    5. '.s' → logprob: -14.375146865844727
    6. '	speed' → logprob: -14.375146865844727
    7. '.' → logprob: -15.625146865844727
    8. '                       ' → logprob: -15.750146865844727
    9. '(speed' → logprob: -15.750146865844727
    10. 's' → logprob: -16.125146865844727

Token 4069: ''arr' (ID: 49695)
  Prédit: 'peed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'peed' → logprob: -0.07085473090410233
    2. '.speed' → logprob: -2.695854663848877
    3. 'speed' → logprob: -7.695854663848877
    4. '_speed' → logprob: -8.570855140686035
    5. '.' → logprob: -9.445855140686035
    6. 'PEED' → logprob: -10.445855140686035
    7. '.wait' → logprob: -10.445855140686035
    8. '.v' → logprob: -10.695855140686035
    9. '	speed' → logprob: -11.195855140686035
    10. '.s' → logprob: -11.445855140686035

Token 4070: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.04226924851536751
    2. 'ète' → logprob: -3.542269229888916
    3. 'ete' → logprob: -4.417269229888916
    4. 'êt' → logprob: -8.292269706726074
    5. 'êtes' → logprob: -10.417269706726074
    6. 'ette' → logprob: -10.542269706726074
    7. 'ote' → logprob: -11.042269706726074
    8. 'e' → logprob: -11.417269706726074
    9. 'êter' → logprob: -12.167269706726074
    10. '#' → logprob: -12.167269706726074

Token 4071: ' dans' (ID: 2671)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.36760494112968445
    2. '=' → logprob: -1.2426049709320068
    3. ' =' → logprob: -4.617604732513428
    4. '=True' → logprob: -6.367604732513428
    5. '.' → logprob: -6.492604732513428
    6. '                        
' → logprob: -6.742604732513428
    7. '                   ' → logprob: -6.992604732513428
    8. '                        ' → logprob: -7.117604732513428
    9. '                           ' → logprob: -7.492604732513428
    10. '```' → logprob: -7.617604732513428

Token 4072: ' sas' (ID: 51515)
  Prédit: 'sas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sas' → logprob: -0.6399677991867065
    2. 'le' → logprob: -0.7649677991867065
    3. ' le' → logprob: -6.264967918395996
    4. 'la' → logprob: -6.514967918395996
    5. '```' → logprob: -6.764967918395996
    6. ' sas' → logprob: -7.139967918395996
    7. 'l' → logprob: -8.139967918395996
    8. '   ' → logprob: -8.264967918395996
    9. '#' → logprob: -9.014967918395996
    10. ' ' → logprob: -9.139967918395996

Token 4073: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007918820483610034
    2. '                   ' → logprob: -7.875792026519775
    3. '               ' → logprob: -8.375791549682617
    4. '                        
' → logprob: -9.875791549682617
    5. '.' → logprob: -10.125791549682617
    6. ',' → logprob: -11.000791549682617
    7. '           ' → logprob: -11.500791549682617
    8. '                           ' → logprob: -11.750791549682617
    9. '.
' → logprob: -11.875791549682617
    10. 's' → logprob: -11.875791549682617

Token 4074: ' vitesse' (ID: 71752)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ships' → logprob: -0.1543416529893875
    2. 's' → logprob: -2.029341697692871
    3. '                       ' → logprob: -4.779341697692871
    4. ' ships' → logprob: -6.154341697692871
    5. '                   ' → logprob: -7.404341697692871
    6. ' s' → logprob: -8.654341697692871
    7. '               ' → logprob: -9.654341697692871
    8. '           ' → logprob: -10.154341697692871
    9. 'ship' → logprob: -10.279341697692871
    10. '                           ' → logprob: -10.654341697692871

Token 4075: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028062984347343445
    2. ' =' → logprob: -5.877806186676025
    3. '0' → logprob: -14.502806663513184
    4. 's' → logprob: -14.877806663513184
    5. '=
' → logprob: -15.627806663513184
    6. '                   ' → logprob: -15.752806663513184
    7. '           ' → logprob: -16.752805709838867
    8. '                       ' → logprob: -16.877805709838867
    9. '```' → logprob: -16.877805709838867
    10. '               ' → logprob: -17.127805709838867

Token 4076: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.000003814697266
    4. '                   ' → logprob: -18.000003814697266
    5. '                       ' → logprob: -18.250003814697266
    6. '=' → logprob: -18.500003814697266
    7. '```' → logprob: -18.500003814697266
    8. '           ' → logprob: -19.250003814697266
    9. '00' → logprob: -19.625003814697266
    10. '               ' → logprob: -19.750003814697266

Token 4077: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.048587486147880554
    2. '               ' → logprob: -4.048587322235107
    3. '<|end|>' → logprob: -4.298587322235107
    4. '                   ' → logprob: -4.798587322235107
    5. '                        
' → logprob: -5.548587322235107
    6. '           ' → logprob: -7.298587322235107
    7. '.' → logprob: -7.423587322235107
    8. '```' → logprob: -7.423587322235107
    9. '
' → logprob: -8.298587799072266
    10. ')' → logprob: -8.298587799072266

Token 4078: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01693068817257881
    2. '               ' → logprob: -4.76693058013916
    3. '                   ' → logprob: -4.89193058013916
    4. '                        
' → logprob: -8.01693058013916
    5. '           ' → logprob: -8.39193058013916
    6. 's' → logprob: -9.64193058013916
    7. '       ' → logprob: -10.39193058013916
    8. ' s' → logprob: -10.51693058013916
    9. '```' → logprob: -10.76693058013916
    10. '                    
' → logprob: -11.26693058013916

Token 4079: ' ships' (ID: 33610)
  Prédit: 'ships'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ships' (adapté à ' ships') → logprob: -0.2882235050201416
    2. 's' → logprob: -1.4132235050201416
    3. ' ships' → logprob: -5.5382232666015625
    4. '                       ' → logprob: -6.2882232666015625
    5. '                   ' → logprob: -7.4132232666015625
    6. ' s' → logprob: -8.413223266601562
    7. '           ' → logprob: -8.538223266601562
    8. '               ' → logprob: -9.038223266601562
    9. '```' → logprob: -10.788223266601562
    10. '   ' → logprob: -11.163223266601562

Token 4080: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.3226136767771095e-05
    2. '[' → logprob: -10.125042915344238
    3. ' [' → logprob: -12.875042915344238
    4. '```' → logprob: -14.750042915344238
    5. '[s' → logprob: -17.375043869018555
    6. '   ' → logprob: -17.375043869018555
    7. '\[' → logprob: -17.625043869018555
    8. 'i' → logprob: -17.625043869018555
    9. '[I' → logprob: -17.875043869018555
    10. '                   ' → logprob: -18.000043869018555

Token 4081: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000946472748182714
    2. '.' → logprob: -7.500946521759033
    3. '].' → logprob: -9.000946044921875
    4. '[' → logprob: -9.000946044921875
    5. '                   ' → logprob: -10.625946044921875
    6. '.speed' → logprob: -10.750946044921875
    7. '           ' → logprob: -11.125946044921875
    8. '                       ' → logprob: -11.125946044921875
    9. ' .' → logprob: -11.375946044921875
    10. '   ' → logprob: -11.500946044921875

Token 4082: 'speed' (ID: 42880)
  Prédit: 'speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -2.696889623621246e-06
    2. ' speed' → logprob: -12.87500286102295
    3. '	speed' → logprob: -18.000001907348633
    4. 'velocity' → logprob: -18.250001907348633
    5. ' ' → logprob: -19.125001907348633
    6. '.speed' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.500001907348633
    8. 'stop' → logprob: -19.500001907348633
    9. '_speed' → logprob: -20.000001907348633
    10. '(speed' → logprob: -20.375001907348633

Token 4083: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. '0' → logprob: -18.52975082397461
    4. ' ' → logprob: -19.15475082397461
    5. '＝' → logprob: -19.27975082397461
    6. ')' → logprob: -19.27975082397461
    7. ',' → logprob: -19.52975082397461
    8. '=
' → logprob: -19.52975082397461
    9. '.=' → logprob: -19.77975082397461
    10. '   ' → logprob: -19.90475082397461

Token 4084: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -17.0
    4. '   ' → logprob: -18.125
    5. '۰' → logprob: -19.125
    6. '.' → logprob: -20.75
    7. '`' → logprob: -21.125
    8. '``' → logprob: -21.5
    9. '00' → logprob: -21.75
    10. '٠' → logprob: -21.75

Token 4085: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -16.25
    4. '                   ' → logprob: -18.0
    5. '           ' → logprob: -18.375
    6. '                       ' → logprob: -19.0
    7. '               ' → logprob: -19.375
    8. '۰' → logprob: -19.375
    9. '       ' → logprob: -19.625
    10. '                           ' → logprob: -19.875

Token 4086: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005012048059143126
    2. '<|end|>' → logprob: -7.6255011558532715
    3. ')' → logprob: -12.25050163269043
    4. '<|end|>' → logprob: -12.50050163269043
    5. '```' → logprob: -14.50050163269043
    6. '               ' → logprob: -14.62550163269043
    7. '[' → logprob: -14.87550163269043
    8. '       ' → logprob: -15.25050163269043
    9. '                        
' → logprob: -15.37550163269043
    10. '0' → logprob: -15.50050163269043

Token 4087: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '000' → logprob: -16.0
    3. '       ' → logprob: -16.625
    4. '```' → logprob: -16.75
    5. '   ' → logprob: -17.5
    6. ')' → logprob: -19.0
    7. '           ' → logprob: -19.0
    8. '00' → logprob: -19.125
    9. 'False' → logprob: -19.875
    10. '.' → logprob: -20.125

Token 4088: '

' (ID: 279)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4511841833591461
    2. '<|end|>' → logprob: -2.2011842727661133
    3. '                        
' → logprob: -2.5761842727661133
    4. '                   ' → logprob: -2.5761842727661133
    5. '               ' → logprob: -3.5761842727661133
    6. 'continue' → logprob: -3.7011842727661133
    7. '```' → logprob: -4.576184272766113
    8. '
' → logprob: -4.701184272766113
    9. '                           ' → logprob: -5.076184272766113
    10. '           ' → logprob: -5.451184272766113

Token 4089: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.11723879724740982
    2. '                   ' → logprob: -2.867238759994507
    3. 'continue' → logprob: -3.492238759994507
    4. '               ' → logprob: -4.492238998413086
    5. '```' → logprob: -5.117238998413086
    6. '           ' → logprob: -6.492238998413086
    7. ' continue' → logprob: -6.867238998413086
    8. '                        
' → logprob: -6.992238998413086
    9. 'else' → logprob: -7.242238998413086
    10. '                           ' → logprob: -7.492238998413086

Token 4090: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3014466464519501
    2. 'continue' → logprob: -1.8014466762542725
    3. '#' (adapté à ' #') → logprob: -3.1764466762542725
    4. '                   ' → logprob: -3.6764466762542725
    5. 'heap' → logprob: -4.801446437835693
    6. '               ' → logprob: -5.301446437835693
    7. 'adjust' → logprob: -5.676446437835693
    8. 'sas' → logprob: -5.801446437835693
    9. 'res' → logprob: -6.051446437835693
    10. 'if' → logprob: -6.176446437835693

Token 4091: ' Dé' (ID: 27247)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6765352487564087
    2. 'adjust' → logprob: -1.3015352487564087
    3. 'sas' → logprob: -1.8015352487564087
    4. 'res' → logprob: -3.301535129547119
    5. 'if' → logprob: -4.426535129547119
    6. 'continue' → logprob: -6.301535129547119
    7. 'adj' → logprob: -7.176535129547119
    8. 'for' → logprob: -7.801535129547119
    9. 'schedule' → logprob: -8.051535606384277
    10. '   ' → logprob: -8.051535606384277

Token 4092: 'but' (ID: 8293)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3792915344238281
    2. 'f' → logprob: -1.3792915344238281
    3. 'part' → logprob: -2.004291534423828
    4. 'placer' → logprob: -2.004291534423828
    5. 'lay' → logprob: -2.754291534423828
    6. 'pass' → logprob: -3.504291534423828
    7. 'fin' → logprob: -3.629291534423828
    8. 'continue' → logprob: -4.379291534423828
    9. '       ' → logprob: -4.879291534423828
    10. 'l' → logprob: -4.879291534423828

Token 4093: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4220849573612213
    2. '                       ' → logprob: -1.672084927558899
    3. 'de' → logprob: -3.1720850467681885
    4. 'd' → logprob: -3.6720850467681885
    5. 'du' → logprob: -3.6720850467681885
    6. '                   ' → logprob: -3.7970850467681885
    7. '```' → logprob: -4.672084808349609
    8. ' de' → logprob: -5.047084808349609
    9. '=' → logprob: -5.047084808349609
    10. ' du' → logprob: -5.922084808349609

Token 4094: ' changement' (ID: 61912)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16092564165592194
    2. 'pass' → logprob: -3.0359256267547607
    3. 'level' → logprob: -3.9109256267547607
    4. 'la' → logprob: -4.28592586517334
    5. 'ch' → logprob: -4.41092586517334
    6. 'l' → logprob: -4.66092586517334
    7. 'time' → logprob: -5.03592586517334
    8. 'le' → logprob: -5.03592586517334
    9. 'simulation' → logprob: -5.53592586517334
    10. 'change' → logprob: -5.66092586517334

Token 4095: ' niveau' (ID: 21708)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.6575963497161865
    2. 's' → logprob: -1.9075963497161865
    3. '_de' → logprob: -1.9075963497161865
    4. ' de' → logprob: -2.0325963497161865
    5. 'niveau' → logprob: -2.1575963497161865
    6. '_n' → logprob: -2.4075963497161865
    7. '_' → logprob: -3.1575963497161865
    8. '_s' → logprob: -3.2825963497161865
    9. '_level' → logprob: -3.4075963497161865
    10. 'd' → logprob: -4.282596588134766


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 4093
Tokens correctement prédits (1ère position, stricte): 913
Tokens correctement prédits (1ère position, avec adaptation): 1003
Tokens correctement prédits (top 10): 2333
Précision stricte (1ère position): 22.31%
Précision adaptée (1ère position): 24.51%
Précision (top 10): 57.00%
================================================================================
