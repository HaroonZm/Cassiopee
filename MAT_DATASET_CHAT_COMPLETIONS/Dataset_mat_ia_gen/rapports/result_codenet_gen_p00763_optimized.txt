================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

input=sys.stdin.readline

def build_fare_table(p, q, r):
    # Precompute fare for all distances up to max_distance=10000 (problem max)
    max_distance = 10000
    fare = [0]*(max_distance+1)
    idx = 1
    for i in range(1, max_distance+1):
        if idx < p and i > q[idx-1]:
            idx +=1
        fare[i] = fare[i-1] + r[idx-1]
    return fare

while True:
    n,m,c,s,g=map(int,input().split())
    if (n,m,c,s,g)==(0,0,0,0,0):
        break
    adj=[[] for _ in range(n+1)]
    for _ in range(m):
        x,y,d,comp=map(int,input().split())
        adj[x].append((y,d,comp))
        adj[y].append((x,d,comp))
    p = []
    q = []
    r = []
    for _ in range(c):
        pj=int(input())
        p.append(pj)
    for i in range(c):
        q.append(list(map(int,input().split())))
    for i in range(c):
        r.append(list(map(int,input().split())))
    fare_tables=[None]
    for i in range(c):
        fare_tables.append(build_fare_table(p[i], q[i], r[i]))
    # State: (cost_so_far, station, current_company, current_dist)
    # current_company: 0 means no current company (start or after switching)
    INF=10**15
    dist=[[ [INF]*(201) for __ in range(c+1)] for _ in range(n+1)]
    # at start, no company used, dist is 0 with dist 0
    dist[s][0][0]=0
    heap=[(0,s,0,0)]
    while heap:
        cost,u,ccurr,dcurr=heapq.heappop(heap)
        if dist[u][ccurr][dcurr]<cost:
            continue
        if u==g:
            print(cost)
            break
        for v,d,line_comp in adj[u]:
            if ccurr==line_comp:
                nd=(dcurr+d)
                add=0
                if nd>200:
                    # max dist stored is 200, to guarantee performance
                    nd=200
                ncost=cost
                # fare not added yet (only on switching or end)
                # Here we accumulate distance with same co
                if dist[v][ccurr][nd]>ncost:
                    dist[v][ccurr][nd]=ncost
                    heapq.heappush(heap,(ncost,v,ccurr,nd))
            else:
                add=0
                if d>200:
                    cost_d = fare_tables[line_comp][200]
                else:
                    cost_d = fare_tables[line_comp][d]
                ncost=cost
                # Add fare for old company section
                if ccurr!=0 and dcurr>0:
                    costold = fare_tables[ccurr][dcurr]
                    ncost+=costold
                ncost+=cost_d
                if dist[v][line_comp][d]>ncost:
                    dist[v][line_comp][d]=ncost
                    heapq.heappush(heap,(ncost,v,line_comp,d))
    else:
        # no break => no path
        print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.014684110297821e-06
    2. '.' → logprob: -12.000008583068848
    3. 'queue' → logprob: -13.250008583068848
    4. 'ify' → logprob: -15.625008583068848
    5. '_' → logprob: -15.625008583068848
    6. '#' → logprob: -16.000009536743164
    7. '[' → logprob: -16.750009536743164
    8. '=' → logprob: -16.875009536743164
    9. 'space' → logprob: -16.875009536743164
    10. 'p' → logprob: -17.000009536743164

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7595844268798828
    2. '\n' → logprob: -1.2595844268798828
    3. '\' → logprob: -1.8845844268798828
    4. '
' → logprob: -2.759584426879883
    5. '```' → logprob: -5.009584426879883
    6. '

' → logprob: -5.009584426879883
    7. 'import' → logprob: -5.509584426879883
    8. '' → logprob: -5.634584426879883
    9. '.
' → logprob: -5.884584426879883
    10. '<|end|>' → logprob: -6.009584426879883

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5305744409561157
    2. '
' → logprob: -1.9055744409561157
    3. '\' → logprob: -2.655574321746826
    4. '\n' → logprob: -2.780574321746826
    5. 'def' → logprob: -3.030574321746826
    6. '```' → logprob: -3.530574321746826
    7. '.
' → logprob: -4.155574321746826
    8. 'import' → logprob: -4.280574321746826
    9. '' → logprob: -5.405574321746826
    10. 'from' → logprob: -5.530574321746826

Token 8: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014861393719911575
    2. '.' → logprob: -4.264861583709717
    3. ')' → logprob: -7.889861583709717
    4. '()' → logprob: -9.264861106872559
    5. '(.)' → logprob: -9.514861106872559
    6. '=' → logprob: -10.139861106872559
    7. ' (' → logprob: -10.889861106872559
    8. '```' → logprob: -11.389861106872559
    9. '(
' → logprob: -11.514861106872559
    10. '[' → logprob: -11.639861106872559

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026547595858573914
    2. '.stdin' → logprob: -3.77654767036438
    3. '.readline' → logprob: -6.026547431945801
    4. '.input' → logprob: -8.1515474319458
    5. ' .' → logprob: -8.2765474319458
    6. '._' → logprob: -9.4015474319458
    7. '.argv' → logprob: -10.1515474319458
    8. '.get' → logprob: -10.4015474319458
    9. '.stdout' → logprob: -10.6515474319458
    10. '.read' → logprob: -10.7765474319458

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008416466414928436
    2. '.read' → logprob: -5.258416652679443
    3. '.' → logprob: -5.758416652679443
    4. '.readlines' → logprob: -11.508416175842285
    5. '.Read' → logprob: -12.383416175842285
    6. '.buffer' → logprob: -13.258416175842285
    7. 'read' → logprob: -13.633416175842285
    8. '```' → logprob: -13.633416175842285
    9. ' readline' → logprob: -14.508416175842285
    10. '.READ' → logprob: -14.508416175842285

Token 11: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5789350867271423
    2. '(' → logprob: -0.8289350867271423
    3. '(
' → logprob: -6.328935146331787
    4. '()
' → logprob: -7.203935146331787
    5. ')' → logprob: -8.953934669494629
    6. '(

' → logprob: -9.203934669494629
    7. '()

' → logprob: -9.953934669494629
    8. ' ()' → logprob: -10.828934669494629
    9. '().' → logprob: -10.828934669494629
    10. '
' → logprob: -10.828934669494629

Token 12: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4884641170501709
    2. 'def' → logprob: -1.363464117050171
    3. '()' → logprob: -2.238464117050171
    4. 'n' → logprob: -4.48846435546875
    5. '(n' → logprob: -4.48846435546875
    6. '(
' → logprob: -7.61346435546875
    7. 's' → logprob: -8.11346435546875
    8. 'for' → logprob: -8.86346435546875
    9. '()\' → logprob: -9.48846435546875
    10. 'd' → logprob: -9.61346435546875

Token 13: ' build' (ID: 3024)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4174409806728363
    2. ' main' → logprob: -1.2924410104751587
    3. ' ' → logprob: -3.667440891265869
    4. ' solve' → logprob: -4.417440891265869
    5. ' find' → logprob: -4.792440891265869
    6. ' solution' → logprob: -5.042440891265869
    7. ' a' → logprob: -5.167440891265869
    8. 'd' → logprob: -6.167440891265869
    9. ' D' → logprob: -6.542440891265869
    10. ' process' → logprob: -7.167440891265869

Token 14: '_f' (ID: 1337)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34579169750213623
    2. '_heap' → logprob: -1.8457916975021362
    3. '_' → logprob: -2.720791816711426
    4. '_tree' → logprob: -2.970791816711426
    5. ' (' → logprob: -4.845791816711426
    6. '(heap' → logprob: -5.470791816711426
    7. '_max' → logprob: -7.220791816711426
    8. '_min' → logprob: -7.345791816711426
    9. 'heap' → logprob: -7.845791816711426
    10. '(tree' → logprob: -8.220791816711426

Token 15: 'are' (ID: 644)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.12972743809223175
    2. 'requency' → logprob: -2.254727363586426
    3. 'req' → logprob: -4.629727363586426
    4. 'or' → logprob: -6.379727363586426
    5. 'requencies' → logprob: -6.504727363586426
    6. 'unction' → logprob: -6.754727363586426
    7. 'e' → logprob: -7.504727363586426
    8. 'requent' → logprob: -7.879727363586426
    9. 'ib' → logprob: -8.004727363586426
    10. 'ull' → logprob: -8.629727363586426

Token 16: '_table' (ID: 11721)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19800357520580292
    2. '_map' → logprob: -1.9480035305023193
    3. '_tree' → logprob: -3.8230035305023193
    4. '_' → logprob: -5.698003768920898
    5. '_table' → logprob: -5.948003768920898
    6. '(_' → logprob: -6.448003768920898
    7. '_list' → logprob: -6.573003768920898
    8. 's' → logprob: -6.698003768920898
    9. '(tree' → logprob: -7.448003768920898
    10. '_chart' → logprob: -7.948003768920898

Token 17: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027857938781380653
    2. '():' → logprob: -3.652858018875122
    3. '(:' → logprob: -7.777857780456543
    4. '_' → logprob: -8.652857780456543
    5. ':' → logprob: -8.902857780456543
    6. ' (' → logprob: -9.027857780456543
    7. '(":' → logprob: -9.777857780456543
    8. '(f' → logprob: -10.277857780456543
    9. ' ():' → logprob: -10.277857780456543
    10. '```' → logprob: -10.527857780456543

Token 18: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1114791631698608
    2. 'ass' → logprob: -1.1114791631698608
    3. 'ar' → logprob: -1.7364791631698608
    4. 'l' → logprob: -3.1114792823791504
    5. 'layers' → logprob: -3.1114792823791504
    6. 'r' → logprob: -3.9864792823791504
    7. ')' → logprob: -3.9864792823791504
    8. 'laces' → logprob: -4.73647928237915
    9. 'a' → logprob: -5.23647928237915
    10. 'asses' → logprob: -6.23647928237915

Token 19: ' q' (ID: 2335)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3669722080230713
    2. ' n' → logprob: -1.9919722080230713
    3. 's' → logprob: -2.7419722080230713
    4. 'd' → logprob: -2.7419722080230713
    5. 'q' → logprob: -3.1169722080230713
    6. 'a' → logprob: -3.1169722080230713
    7. ' s' → logprob: -3.5544722080230713
    8. 't' → logprob: -3.6169722080230713
    9. 'k' → logprob: -3.8044722080230713
    10. ' d' → logprob: -3.8669722080230713

Token 20: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1360778957605362
    2. ',' → logprob: -2.136077880859375
    3. ')' → logprob: -4.761077880859375
    4. ' ):' → logprob: -8.136077880859375
    5. ':' → logprob: -9.136077880859375
    6. ',p' → logprob: -9.761077880859375
    7. ' ,' → logprob: -10.636077880859375
    8. '   ' → logprob: -11.636077880859375
    9. '):
' → logprob: -11.886077880859375
    10. ' ' → logprob: -12.136077880859375

Token 21: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8453104496002197
    2. ' r' → logprob: -1.7203104496002197
    3. 'n' → logprob: -2.4703104496002197
    4. ' n' → logprob: -2.9703104496002197
    5. 's' → logprob: -3.2203104496002197
    6. ' s' → logprob: -3.8453104496002197
    7. 'd' → logprob: -3.9078104496002197
    8. 'm' → logprob: -4.157810211181641
    9. 'a' → logprob: -4.345310211181641
    10. ' d' → logprob: -4.657810211181641

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06716900318861008
    2. ',' → logprob: -2.817168951034546
    3. ')' → logprob: -5.317169189453125
    4. ' ):' → logprob: -8.567169189453125
    5. ':' → logprob: -10.317169189453125
    6. ',p' → logprob: -11.442169189453125
    7. ' ' → logprob: -11.817169189453125
    8. ' ,' → logprob: -12.317169189453125
    9. '):
' → logprob: -12.442169189453125
    10. '=' → logprob: -12.692169189453125

Token 23: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2663826644420624
    2. '   ' → logprob: -1.5163826942443848
    3. ':
' → logprob: -5.016382694244385
    4. '):' → logprob: -6.391382694244385
    5. '(' → logprob: -6.766382694244385
    6. '    
' → logprob: -6.766382694244385
    7. '():' → logprob: -6.891382694244385
    8. '```' → logprob: -7.016382694244385
    9. ' :' → logprob: -8.266382217407227
    10. '    ' → logprob: -8.516382217407227

Token 24: ' #' (ID: 1069)
  Prédit: ' fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fare' → logprob: -0.6385651230812073
    2. '   ' → logprob: -1.5135650634765625
    3. ' ' → logprob: -3.1385650634765625
    4. ' 
' → logprob: -3.2635650634765625
    5. ' table' → logprob: -3.8885650634765625
    6. ' )' → logprob: -4.0135650634765625
    7. ' fares' → logprob: -4.0135650634765625
    8. '    ' → logprob: -4.1385650634765625
    9. ' return' → logprob: -4.3885650634765625
    10. 'fare' → logprob: -4.7635650634765625

Token 25: ' Pre' (ID: 4659)
  Prédit: ' fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fare' → logprob: -0.4769858419895172
    2. ' table' → logprob: -2.4769859313964844
    3. ' dp' → logprob: -2.6019859313964844
    4. ' n' → logprob: -2.9769859313964844
    5. 'fare' → logprob: -3.4769859313964844
    6. '   ' → logprob: -3.7269859313964844
    7. ' return' → logprob: -4.351985931396484
    8. 'table' → logprob: -4.601985931396484
    9. ' cost' → logprob: -4.726985931396484
    10. ' max' → logprob: -4.726985931396484

Token 26: 'compute' (ID: 54521)
  Prédit: 'pare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.9671499133110046
    2. 'compute' → logprob: -1.3421499729156494
    3. 'dict' → logprob: -2.0921499729156494
    4. 'fix' → logprob: -2.7171499729156494
    5. 'd' → logprob: -3.3421499729156494
    6. 'process' → logprob: -3.7171499729156494
    7. 's' → logprob: -4.09214973449707
    8. 'sent' → logprob: -4.21714973449707
    9. 'serve' → logprob: -4.21714973449707
    10. 'sum' → logprob: -4.46714973449707

Token 27: ' fare' (ID: 25285)
  Prédit: ' fare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fare' → logprob: -0.8394503593444824
    2. ' fares' → logprob: -1.5894503593444824
    3. ' distances' → logprob: -2.4644503593444824
    4. 'fare' → logprob: -2.7144503593444824
    5. ' dp' → logprob: -2.8394503593444824
    6. ' the' → logprob: -3.7144503593444824
    7. '   ' → logprob: -3.9644503593444824
    8. ' max' → logprob: -4.089450359344482
    9. 'cost' → logprob: -4.339450359344482
    10. 'dp' → logprob: -4.714450359344482

Token 28: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08612727373838425
    2. '_table' → logprob: -2.711127281188965
    3. ' ' → logprob: -5.711127281188965
    4. ' =' → logprob: -5.836127281188965
    5. '[' → logprob: -5.961127281188965
    6. '_s' → logprob: -6.586127281188965
    7. '   ' → logprob: -6.711127281188965
    8. ' s' → logprob: -6.836127281188965
    9. '[]' → logprob: -7.211127281188965
    10. '_list' → logprob: -7.711127281188965

Token 29: ' all' (ID: 722)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.940295398235321
    2. ' all' → logprob: -1.1902954578399658
    3. ' distance' → logprob: -2.440295457839966
    4. ' each' → logprob: -2.940295457839966
    5. ' distances' → logprob: -3.315295457839966
    6. ' range' → logprob: -3.565295457839966
    7. ' d' → logprob: -3.815295457839966
    8. ' ' → logprob: -4.190295219421387
    9. ' day' → logprob: -5.065295219421387
    10. ' a' → logprob: -5.190295219421387

Token 30: ' distances' (ID: 48294)
  Prédit: ' distances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.3274299204349518
    2. ' i' → logprob: -2.577430009841919
    3. ' possible' → logprob: -2.827430009841919
    4. ' combinations' → logprob: -2.952430009841919
    5. ' distance' → logprob: -4.32742977142334
    6. '   ' → logprob: -4.57742977142334
    7. 'dist' → logprob: -4.57742977142334
    8. 'i' → logprob: -5.07742977142334
    9. ' destinations' → logprob: -5.20242977142334
    10. ' ranges' → logprob: -5.20242977142334

Token 31: ' up' (ID: 869)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7783762812614441
    2. ':' → logprob: -1.5283763408660889
    3. '   ' → logprob: -2.278376340866089
    4. ' =' → logprob: -2.528376340866089
    5. ' for' → logprob: -3.153376340866089
    6. ',' → logprob: -3.278376340866089
    7. ' :' → logprob: -4.15337610244751
    8. '  ' → logprob: -4.65337610244751
    9. ' ,' → logprob: -5.02837610244751
    10. '=' → logprob: -5.15337610244751

Token 32: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.027636246755719185
    2. ' to' → logprob: -4.1526360511779785
    3. '_to' → logprob: -5.4026360511779785
    4. 't' → logprob: -5.5276360511779785
    5. 'o' → logprob: -6.1526360511779785
    6. '=' → logprob: -7.9026360511779785
    7. ' ' → logprob: -8.527636528015137
    8. '_t' → logprob: -9.652636528015137
    9. '_' → logprob: -9.777636528015137
    10. '  ' → logprob: -10.027636528015137

Token 33: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5664615035057068
    2. '100' → logprob: -1.9414615631103516
    3. ' p' → logprob: -2.4414615631103516
    4. 'r' → logprob: -2.5664615631103516
    5. ' r' → logprob: -3.0664615631103516
    6. 'p' → logprob: -4.066461563110352
    7. '10' → logprob: -4.316461563110352
    8. '500' → logprob: -4.566461563110352
    9. ' max' → logprob: -4.816461563110352
    10. '200' → logprob: -5.066461563110352

Token 34: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.10854635387659073
    2. '_d' → logprob: -2.858546257019043
    3. '_dist' → logprob: -3.483546257019043
    4. '(p' → logprob: -4.983546257019043
    5. '(' → logprob: -5.483546257019043
    6. '_p' → logprob: -7.358546257019043
    7. '_' → logprob: -7.358546257019043
    8. '_n' → logprob: -7.858546257019043
    9. '_length' → logprob: -8.483546257019043
    10. ')' → logprob: -8.483546257019043

Token 35: '=' (ID: 28)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08392933011054993
    2. '   ' → logprob: -3.7089293003082275
    3. ' :' → logprob: -4.083929538726807
    4. ' ' → logprob: -4.708929538726807
    5. '=' → logprob: -4.833929538726807
    6. ' =' → logprob: -4.958929538726807
    7. 'max' → logprob: -4.958929538726807
    8. ',' → logprob: -6.083929538726807
    9. '):' → logprob: -7.083929538726807
    10. '
' → logprob: -7.333929538726807

Token 36: '100' (ID: 1353)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6400111317634583
    2. '100' → logprob: -1.2650110721588135
    3. '10' → logprob: -2.7650110721588135
    4. 'r' → logprob: -3.5150110721588135
    5. ' p' → logprob: -3.8900110721588135
    6. 'p' → logprob: -4.140011310577393
    7. '500' → logprob: -4.265011310577393
    8. '200' → logprob: -4.765011310577393
    9. ' max' → logprob: -5.015011310577393
    10. 'max' → logprob: -5.265011310577393

Token 37: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009431391954421997
    2. ')' → logprob: -5.6344313621521
    3. ' ' → logprob: -6.3844313621521
    4. '

' → logprob: -6.8844313621521
    5. '
' → logprob: -7.2594313621521
    6. ':' → logprob: -7.8844313621521
    7. ' =' → logprob: -8.509431838989258
    8. '```' → logprob: -8.509431838989258
    9. '+' → logprob: -8.759431838989258
    10. '00' → logprob: -8.884431838989258

Token 38: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.203150674700737
    2. '
' → logprob: -1.9531506299972534
    3. '   ' → logprob: -3.953150749206543
    4. ':
' → logprob: -4.703150749206543
    5. '\n' → logprob: -6.203150749206543
    6. 'def' → logprob: -6.203150749206543
    7. ' ' → logprob: -6.203150749206543
    8. '```' → logprob: -6.703150749206543
    9. ',' → logprob: -7.078150749206543
    10. '):' → logprob: -7.203150749206543

Token 39: 'problem' (ID: 63922)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01852143555879593
    2. '+' → logprob: -4.768521308898926
    3. ' )' → logprob: -5.768521308898926
    4. '):' → logprob: -6.143521308898926
    5. ')
' → logprob: -6.893521308898926
    6. '1' → logprob: -7.018521308898926
    7. '):
' → logprob: -7.018521308898926
    8. ' ' → logprob: -7.393521308898926
    9. '0' → logprob: -8.143521308898926
    10. '```' → logprob: -8.268521308898926

Token 40: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21501201391220093
    2. ' ' → logprob: -2.2150120735168457
    3. '_' → logprob: -4.590012073516846
    4. ',' → logprob: -4.715012073516846
    5. '_size' → logprob: -4.840012073516846
    6. '):' → logprob: -4.965012073516846
    7. '   ' → logprob: -5.090012073516846
    8. '+' → logprob: -5.340012073516846
    9. '```' → logprob: -5.715012073516846
    10. ' )' → logprob: -5.840012073516846

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1654902696609497
    2. '_distance' → logprob: -2.16549015045166
    3. ')
' → logprob: -3.79049015045166
    4. ' )' → logprob: -5.66549015045166
    5. '_)' → logprob: -6.16549015045166
    6. 'distance' → logprob: -6.16549015045166
    7. ')

' → logprob: -6.41549015045166
    8. '_dist' → logprob: -7.16549015045166
    9. '_d' → logprob: -7.79049015045166
    10. '+' → logprob: -7.79049015045166

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054186467081308365
    2. '```' → logprob: -4.0541863441467285
    3. '
' → logprob: -4.1791863441467285
    4. ':' → logprob: -4.3041863441467285
    5. '    
' → logprob: -6.3041863441467285
    6. ' ' → logprob: -7.1791863441467285
    7. '\n' → logprob: -7.3041863441467285
    8. 'def' → logprob: -7.6791863441467285
    9. '``' → logprob: -7.6791863441467285
    10. ')' → logprob: -8.554186820983887

Token 43: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.799156904220581
    2. 'max' (adapté à ' max') → logprob: -1.299156904220581
    3. 'fare' → logprob: -1.674156904220581
    4. ' fare' → logprob: -3.174156904220581
    5. '   ' → logprob: -4.29915714263916
    6. '```' → logprob: -4.79915714263916
    7. '
' → logprob: -5.04915714263916
    8. ' 
' → logprob: -6.04915714263916
    9. ' fares' → logprob: -6.17415714263916
    10. 'distance' → logprob: -6.29915714263916

Token 44: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.026786476373672485
    2. '_' → logprob: -3.6517865657806396
    3. '_dist' → logprob: -8.026786804199219
    4. '_d' → logprob: -9.026786804199219
    5. '_length' → logprob: -11.776786804199219
    6. ' _' → logprob: -11.776786804199219
    7. '_dis' → logprob: -12.651786804199219
    8. '_p' → logprob: -13.026786804199219
    9. '_depth' → logprob: -13.276786804199219
    10. '_space' → logprob: -13.776786804199219

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740861654281616
    2. '=' → logprob: -0.9740861654281616
    3. ' ' → logprob: -11.974085807800293
    4. ',' → logprob: -13.974085807800293
    5. ' =
' → logprob: -14.599085807800293
    6. ')' → logprob: -14.724085807800293
    7. '=int' → logprob: -14.974085807800293
    8. '=

' → logprob: -15.349085807800293
    9. ' =)' → logprob: -16.34908676147461
    10. '   ' → logprob: -16.34908676147461

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519410252571106
    2. '100' → logprob: -1.5019409656524658
    3. '10' → logprob: -11.376940727233887
    4. '   ' → logprob: -15.626940727233887
    5. '1' → logprob: -16.251941680908203
    6. ' ' → logprob: -17.001941680908203
    7. '=' → logprob: -17.126941680908203
    8. '  ' → logprob: -17.376941680908203
    9. '101' → logprob: -18.064441680908203
    10. ' =' → logprob: -18.626941680908203

Token 47: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00010640407708706334
    2. ' ' → logprob: -9.250106811523438
    3. '10' → logprob: -11.500106811523438
    4. '1' → logprob: -17.250106811523438
    5. '   ' → logprob: -18.125106811523438
    6. '１００' → logprob: -19.125106811523438
    7. '  ' → logprob: -19.500106811523438
    8. '101' → logprob: -20.000106811523438
    9. '999' → logprob: -20.250106811523438
    10. '=' → logprob: -20.375106811523438

Token 48: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.017291614785790443
    2. '0' → logprob: -4.14229154586792
    3. ' ' → logprob: -7.39229154586792
    4. ')' → logprob: -7.76729154586792
    5. '01' → logprob: -9.017292022705078
    6. '000' → logprob: -10.142292022705078
    7. '   ' → logprob: -11.142292022705078
    8. '```' → logprob: -12.079792022705078
    9. ' ' → logprob: -12.704792022705078
    10. ''' → logprob: -12.829792022705078

Token 49: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6380940079689026
    2. '+' → logprob: -0.7630940079689026
    3. ' +' → logprob: -5.763093948364258
    4. '
' → logprob: -7.263093948364258
    5. ')' → logprob: -7.763093948364258
    6. '<|end|>' → logprob: -8.138093948364258
    7. '

' → logprob: -9.013093948364258
    8. '' → logprob: -9.138093948364258
    9. '```' → logprob: -9.513093948364258
    10. '    
' → logprob: -9.513093948364258

Token 50: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22967830300331116
    2. '   ' → logprob: -2.9796783924102783
    3. '_f' → logprob: -3.4796783924102783
    4. 'fare' → logprob: -3.7296783924102783
    5. '    
' → logprob: -3.9796783924102783
    6. ')' → logprob: -4.104678153991699
    7. ',' → logprob: -4.729678153991699
    8. '_' → logprob: -4.979678153991699
    9. ' 
' → logprob: -5.104678153991699
    10. ')
' → logprob: -5.104678153991699

Token 51: ' fare' (ID: 25285)
  Prédit: ' fare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fare' → logprob: -0.5895357728004456
    2. 'fare' (adapté à ' fare') → logprob: -0.9645357728004456
    3. ' fares' → logprob: -3.089535713195801
    4. '
' → logprob: -5.464535713195801
    5. ' 
' → logprob: -5.714535713195801
    6. 'f' → logprob: -5.839535713195801
    7. 'fa' → logprob: -6.714535713195801
    8. '    
' → logprob: -7.214535713195801
    9. '   ' → logprob: -7.339535713195801
    10. '_f' → logprob: -7.589535713195801

Token 52: ' =' (ID: 314)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.31901469826698303
    2. 's' → logprob: -1.5690146684646606
    3. '=' → logprob: -3.19401478767395
    4. ' =' → logprob: -3.81901478767395
    5. '_' → logprob: -6.819014549255371
    6. '_s' → logprob: -8.694014549255371
    7. '_list' → logprob: -8.819014549255371
    8. '=[]' → logprob: -8.944014549255371
    9. '[' → logprob: -9.194014549255371
    10. ' ' → logprob: -9.944014549255371

Token 53: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5769400000572205
    2. ' [' → logprob: -0.8269400000572205
    3. '[p' → logprob: -6.951940059661865
    4. '[a' → logprob: -11.326939582824707
    5. '[int' → logprob: -12.451939582824707
    6. '[i' → logprob: -12.826939582824707
    7. '[r' → logprob: -12.951939582824707
    8. ' ' → logprob: -13.201939582824707
    9. '[len' → logprob: -13.201939582824707
    10. '[-' → logprob: -13.451939582824707

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005635190173052251
    2. ' ' → logprob: -7.625563621520996
    3. 'float' → logprob: -10.000563621520996
    4. ']' → logprob: -11.125563621520996
    5. '-' → logprob: -13.125563621520996
    6. '100' → logprob: -13.250563621520996
    7. ')' → logprob: -13.250563621520996
    8. 'p' → logprob: -13.500563621520996
    9. ' float' → logprob: -13.625563621520996
    10. '   ' → logprob: -13.750563621520996

Token 55: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018905533943325281
    2. ']*' → logprob: -6.751890659332275
    3. ']*(' → logprob: -7.376890659332275
    4. ' ]' → logprob: -9.876890182495117
    5. ' for' → logprob: -10.751890182495117
    6. ',' → logprob: -11.876890182495117
    7. ']+' → logprob: -12.126890182495117
    8. 'for' → logprob: -12.376890182495117
    9. ')' → logprob: -12.626890182495117
    10. '*' → logprob: -14.876890182495117

Token 56: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00018852073117159307
    2. '100' → logprob: -8.750188827514648
    3. ' max' → logprob: -10.625188827514648
    4. '(max' → logprob: -12.125188827514648
    5. '   ' → logprob: -15.750188827514648
    6. ' ' → logprob: -16.75018882751465
    7. ')' → logprob: -17.12518882751465
    8. '	max' → logprob: -17.37518882751465
    9. '[max' → logprob: -17.50018882751465
    10. ',max' → logprob: -18.00018882751465

Token 57: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -6.630610641877865e-06
    2. 'distance' → logprob: -12.625006675720215
    3. '_dist' → logprob: -13.625006675720215
    4. '_' → logprob: -14.125006675720215
    5. '_d' → logprob: -14.250006675720215
    6. '_dis' → logprob: -15.000006675720215
    7. '_DISTANCE' → logprob: -15.750006675720215
    8. ')' → logprob: -16.7500057220459
    9. 'Distance' → logprob: -16.8750057220459
    10. '_length' → logprob: -17.2500057220459

Token 58: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004307884373702109
    2. ' +' → logprob: -7.750430583953857
    3. '1' → logprob: -16.500431060791016
    4. '+
' → logprob: -17.875431060791016
    5. ' ' → logprob: -18.125431060791016
    6. '＋' → logprob: -18.625431060791016
    7. '+

' → logprob: -19.250431060791016
    8. '```' → logprob: -19.375431060791016
    9. ')' → logprob: -19.750431060791016
    10. ')+' → logprob: -19.875431060791016

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.141186450899113e-05
    2. ' ' → logprob: -11.000020980834961
    3. '2' → logprob: -12.625020980834961
    4. '   ' → logprob: -15.250020980834961
    5. '5' → logprob: -15.562520980834961
    6. '10' → logprob: -15.687520980834961
    7. '11' → logprob: -16.25002098083496
    8. ')' → logprob: -16.25002098083496
    9. '100' → logprob: -16.50002098083496
    10. '  ' → logprob: -17.06252098083496

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010068230039905757
    2. ')
' → logprob: -9.625101089477539
    3. ' )' → logprob: -10.500101089477539
    4. ')

' → logprob: -12.875101089477539
    5. '<|end|>' → logprob: -12.875101089477539
    6. ')
' → logprob: -13.875101089477539
    7. ']' → logprob: -15.250101089477539
    8. '),' → logprob: -15.625101089477539
    9. '```' → logprob: -16.37510108947754
    10. '+' → logprob: -16.62510108947754

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.500402569770813
    2. 'for' → logprob: -1.625402569770813
    3. ' for' → logprob: -1.625402569770813
    4. '	for' → logprob: -11.750402450561523
    5. '
' → logprob: -11.875402450561523
    6. '    
' → logprob: -11.875402450561523
    7. ' ' → logprob: -12.250402450561523
    8. 'f' → logprob: -12.625402450561523
    9. ',' → logprob: -12.750402450561523
    10. '  ' → logprob: -12.875402450561523

Token 62: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017658861353993416
    2. ' for' → logprob: -4.142658710479736
    3. 'f' → logprob: -7.267658710479736
    4. 'fare' → logprob: -7.267658710479736
    5. '```' → logprob: -10.017659187316895
    6. '   ' → logprob: -10.142659187316895
    7. 'distance' → logprob: -10.267659187316895
    8. ' fare' → logprob: -10.517659187316895
    9. 'd' → logprob: -10.767659187316895
    10. ' ' → logprob: -12.080159187316895

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6938772201538086
    2. ' =' → logprob: -0.6938772201538086
    3. ' ' → logprob: -8.193877220153809
    4. 'f' → logprob: -8.568877220153809
    5. 'for' → logprob: -9.193877220153809
    6. ' in' → logprob: -9.818877220153809
    7. ' for' → logprob: -10.568877220153809
    8. ')' → logprob: -11.443877220153809
    9. ']' → logprob: -11.693877220153809
    10. '   ' → logprob: -11.818877220153809

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3185797333717346
    2. ' ' → logprob: -1.3185796737670898
    3. '0' → logprob: -5.31857967376709
    4. '2' → logprob: -8.94357967376709
    5. '100' → logprob: -9.44357967376709
    6. '10' → logprob: -10.44357967376709
    7. ' max' → logprob: -10.56857967376709
    8. 'max' → logprob: -10.56857967376709
    9. '[' → logprob: -10.69357967376709
    10. '  ' → logprob: -10.94357967376709

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.046750180423259735
    2. '0' → logprob: -3.171750068664551
    3. '2' → logprob: -6.796750068664551
    4. ' ' → logprob: -6.796750068664551
    5. '100' → logprob: -6.921750068664551
    6. 'max' → logprob: -8.42175006866455
    7. '10' → logprob: -9.42175006866455
    8. 'range' → logprob: -10.42175006866455
    9. '3' → logprob: -10.54675006866455
    10. '[' → logprob: -10.79675006866455

Token 66: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7348123788833618
    2. '
' → logprob: -2.1098122596740723
    3. ' while' → logprob: -2.2348122596740723
    4. '   ' → logprob: -2.3598122596740723
    5. '<|end|>' → logprob: -2.3598122596740723
    6. ':' → logprob: -2.9848122596740723
    7. ' 
' → logprob: -4.234812259674072
    8. '<|end|>' → logprob: -4.609812259674072
    9. ' ' → logprob: -5.609812259674072
    10. '    
' → logprob: -5.609812259674072

Token 67: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5718054175376892
    2. ' while' → logprob: -1.321805477142334
    3. '   ' → logprob: -3.321805477142334
    4. '
' → logprob: -3.321805477142334
    5. '<|end|>' → logprob: -3.571805477142334
    6. ':' → logprob: -3.821805477142334
    7. '0' → logprob: -4.321805477142334
    8. '<|end|>' → logprob: -5.196805477142334
    9. ')' → logprob: -5.821805477142334
    10. ' ' → logprob: -5.946805477142334

Token 68: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2569845914840698
    2. ' while' → logprob: -1.5069845914840698
    3. '
' → logprob: -5.881984710693359
    4. '1' → logprob: -8.00698471069336
    5. 'for' (adapté à ' for') → logprob: -8.00698471069336
    6. '<|end|>' → logprob: -8.00698471069336
    7. '0' → logprob: -8.75698471069336
    8. '   ' → logprob: -8.75698471069336
    9. ',' → logprob: -9.25698471069336
    10. ' for' → logprob: -9.50698471069336

Token 69: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.19822907447814941
    2. ' idx' → logprob: -2.0732290744781494
    3. ' distance' → logprob: -3.3232290744781494
    4. ' in' → logprob: -4.82322883605957
    5. ' ' → logprob: -5.82322883605957
    6. ' i' → logprob: -6.32322883605957
    7. ' dist' → logprob: -6.69822883605957
    8. ' d' → logprob: -6.94822883605957
    9. 'range' → logprob: -6.94822883605957
    10. ' _' → logprob: -7.07322883605957

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07908663153648376
    2. 'in' → logprob: -2.5790865421295166
    3. ' ' → logprob: -9.454086303710938
    4. ',' → logprob: -9.579086303710938
    5. '   ' → logprob: -11.829086303710938
    6. '  ' → logprob: -12.204086303710938
    7. 'In' → logprob: -12.329086303710938
    8. 'range' → logprob: -12.454086303710938
    9. '1' → logprob: -12.579086303710938
    10. 'to' → logprob: -13.079086303710938

Token 71: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04304520785808563
    2. 'range' → logprob: -3.1680452823638916
    3. ' ' → logprob: -10.168045043945312
    4. '  ' → logprob: -13.043045043945312
    5. '(range' → logprob: -13.168045043945312
    6. '   ' → logprob: -13.668045043945312
    7. '	range' → logprob: -14.168045043945312
    8. ' xrange' → logprob: -14.418045043945312
    9. '[' → logprob: -15.918045043945312
    10. '1' → logprob: -15.918045043945312

Token 72: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5716304410016164e-05
    2. ' (' → logprob: -10.375035285949707
    3. '(max' → logprob: -12.625035285949707
    4. ' ' → logprob: -14.250035285949707
    5. '1' → logprob: -15.000035285949707
    6. '(idx' → logprob: -15.500035285949707
    7. ' max' → logprob: -17.750036239624023
    8. '   ' → logprob: -18.500036239624023
    9. '(len' → logprob: -18.500036239624023
    10. '(

' → logprob: -19.750036239624023

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06672749668359756
    2. ' ' → logprob: -2.81672739982605
    3. ' max' → logprob: -5.941727638244629
    4. 'max' → logprob: -6.566727638244629
    5. 'idx' → logprob: -7.941727638244629
    6. ' idx' → logprob: -8.191727638244629
    7. '   ' → logprob: -10.441727638244629
    8. '(' → logprob: -11.316727638244629
    9. '(max' → logprob: -11.441727638244629
    10. '100' → logprob: -11.816727638244629

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00966448150575161
    2. ' ,' → logprob: -4.759664535522461
    3. ',max' → logprob: -6.884664535522461
    4. ' ' → logprob: -11.634664535522461
    5. ',len' → logprob: -12.134664535522461
    6. '   ' → logprob: -12.509664535522461
    7. ',
' → logprob: -12.759664535522461
    8. 'max' → logprob: -12.884664535522461
    9. '(max' → logprob: -14.259664535522461
    10. ' max' → logprob: -15.009664535522461

Token 75: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17998382449150085
    2. ' max' → logprob: -1.8049838542938232
    3. '100' → logprob: -8.679984092712402
    4. 'len' → logprob: -10.304984092712402
    5. ' ' → logprob: -10.804984092712402
    6. ' len' → logprob: -11.804984092712402
    7. '(max' → logprob: -13.054984092712402
    8. '   ' → logprob: -13.929984092712402
    9. '	max' → logprob: -14.179984092712402
    10. '10' → logprob: -14.304984092712402

Token 76: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.00014585316239390522
    2. 'distance' → logprob: -8.87514591217041
    3. '_' → logprob: -12.87514591217041
    4. 'Distance' → logprob: -13.87514591217041
    5. '_DISTANCE' → logprob: -14.25014591217041
    6. ')' → logprob: -15.12514591217041
    7. '(distance' → logprob: -15.25014591217041
    8. '_index' → logprob: -15.62514591217041
    9. '+' → logprob: -15.87514591217041
    10. '_token' → logprob: -16.625144958496094

Token 77: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01605759747326374
    2. ' +' → logprob: -4.14105749130249
    3. '):
' → logprob: -11.391057968139648
    4. '):' → logprob: -11.641057968139648
    5. ' ' → logprob: -14.016057968139648
    6. '()+' → logprob: -14.266057968139648
    7. '1' → logprob: -14.891057968139648
    8. ')+' → logprob: -15.391057968139648
    9. '   ' → logprob: -15.516057968139648
    10. '+
' → logprob: -15.766057968139648

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023975323420017958
    2. ' ' → logprob: -6.127397537231445
    3. '+' → logprob: -8.627397537231445
    4. '100' → logprob: -10.752397537231445
    5. ')' → logprob: -12.002397537231445
    6. '=' → logprob: -13.377397537231445
    7. '-' → logprob: -14.127397537231445
    8. '2' → logprob: -14.502397537231445
    9. ' +' → logprob: -14.627397537231445
    10. '   ' → logprob: -14.752397537231445

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.060870055109262466
    2. ':' → logprob: -3.1858701705932617
    3. ' ):' → logprob: -4.185870170593262
    4. '):
' → logprob: -6.435870170593262
    5. ' :' → logprob: -7.685870170593262
    6. ')' → logprob: -8.310870170593262
    7. ',' → logprob: -9.310870170593262
    8. ' ):
' → logprob: -9.685870170593262
    9. ' )' → logprob: -11.435870170593262
    10. '):
' → logprob: -11.560870170593262

Token 80: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.573352575302124
    2. '       ' → logprob: -1.448352575302124
    3. '   ' → logprob: -2.573352575302124
    4. ' ' → logprob: -2.823352575302124
    5. '<|end|>' → logprob: -3.948352575302124
    6. '    ' → logprob: -4.948352813720703
    7. ')' → logprob: -5.073352813720703
    8. ' :' → logprob: -5.073352813720703
    9. '):' → logprob: -5.448352813720703
    10. ',' → logprob: -5.698352813720703

Token 81: ' if' (ID: 538)
  Prédit: ' fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fare' → logprob: -1.193197250366211
    2. ' if' → logprob: -1.318197250366211
    3. 'fare' → logprob: -1.318197250366211
    4. 'if' (adapté à ' if') → logprob: -2.568197250366211
    5. 'idx' → logprob: -3.068197250366211
    6. '   ' → logprob: -4.318197250366211
    7. ' idx' → logprob: -4.568197250366211
    8. ' while' → logprob: -6.318197250366211
    9. 'while' → logprob: -6.693197250366211
    10. ' for' → logprob: -7.068197250366211

Token 82: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11192150413990021
    2. 'i' → logprob: -2.611921548843384
    3. ' idx' → logprob: -3.611921548843384
    4. ' p' → logprob: -5.986921310424805
    5. 'idx' → logprob: -6.111921310424805
    6. 'p' → logprob: -8.611921310424805
    7. ' (' → logprob: -8.736921310424805
    8. ' ' → logprob: -8.736921310424805
    9. '   ' → logprob: -9.361921310424805
    10. '(i' → logprob: -9.486921310424805

Token 83: ' <' (ID: 464)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8180157542228699
    2. '*' → logprob: -1.5680158138275146
    3. ' <=' → logprob: -1.9430158138275146
    4. ' <' → logprob: -2.6930158138275146
    5. ' ==' → logprob: -3.3180158138275146
    6. '<=' → logprob: -3.5680158138275146
    7. '<' → logprob: -3.6930158138275146
    8. '==' → logprob: -3.9430158138275146
    9. ' >' → logprob: -5.1930155754089355
    10. '*p' → logprob: -5.1930155754089355

Token 84: ' p' (ID: 275)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9815241098403931
    2. 'p' → logprob: -1.356524109840393
    3. ' len' → logprob: -1.731524109840393
    4. ' p' → logprob: -1.731524109840393
    5. 'r' → logprob: -5.6065239906311035
    6. '=len' → logprob: -6.3565239906311035
    7. 'q' → logprob: -6.4815239906311035
    8. '=' → logprob: -6.4815239906311035
    9. ' ' → logprob: -6.6065239906311035
    10. ' r' → logprob: -6.7315239906311035

Token 85: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11320272833108902
    2. 'and' → logprob: -2.2382028102874756
    3. '*' → logprob: -8.738203048706055
    4. ' *' → logprob: -9.613203048706055
    5. ' ' → logprob: -9.738203048706055
    6. '+' → logprob: -11.238203048706055
    7. '-' → logprob: -11.363203048706055
    8. '   ' → logprob: -11.363203048706055
    9. '    ' → logprob: -11.988203048706055
    10. '[' → logprob: -12.113203048706055

Token 86: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5185031294822693
    2. 'i' → logprob: -1.018503189086914
    3. ' (' → logprob: -4.268503189086914
    4. '(i' → logprob: -4.518503189086914
    5. ' r' → logprob: -6.018503189086914
    6. 'r' → logprob: -6.018503189086914
    7. ' fare' → logprob: -6.143503189086914
    8. ' ' → logprob: -6.268503189086914
    9. ' p' → logprob: -6.268503189086914
    10. ' q' → logprob: -6.393503189086914

Token 87: ' >' (ID: 1424)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3784399926662445
    2. ' ==' → logprob: -2.0034399032592773
    3. '%' → logprob: -2.2534399032592773
    4. '==' → logprob: -3.2534399032592773
    5. ' <' → logprob: -4.253439903259277
    6. ' <=' → logprob: -5.128439903259277
    7. ' ' → logprob: -5.378439903259277
    8. ' >=' → logprob: -5.503439903259277
    9. '<' → logprob: -6.128439903259277
    10. '>=' → logprob: -6.753439903259277

Token 88: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8563531637191772
    2. ' q' → logprob: -0.9813531637191772
    3. ' idx' → logprob: -2.481353282928467
    4. 'r' → logprob: -3.356353282928467
    5. ' r' → logprob: -3.606353282928467
    6. 'idx' → logprob: -4.106353282928467
    7. '1' → logprob: -4.481353282928467
    8. ' ' → logprob: -4.731353282928467
    9. ' (' → logprob: -5.731353282928467
    10. '=' → logprob: -5.731353282928467

Token 89: '[idx' (ID: 25582)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18303456902503967
    2. ' and' → logprob: -2.058034658432007
    3. ' *' → logprob: -4.433034420013428
    4. '*' → logprob: -4.558034420013428
    5. '*i' → logprob: -5.683034420013428
    6. '**' → logprob: -5.808034420013428
    7. ' :' → logprob: -5.933034420013428
    8. 'and' → logprob: -6.183034420013428
    9. '[i' → logprob: -6.558034420013428
    10. ' ' → logprob: -6.683034420013428

Token 90: '-' (ID: 12)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5214288234710693
    2. '-' → logprob: -1.3964288234710693
    3. ']' → logprob: -2.5214288234710693
    4. '[' → logprob: -3.7714288234710693
    5. ']):' → logprob: -4.021429061889648
    6. ' -' → logprob: -4.396429061889648
    7. '][' → logprob: -4.521429061889648
    8. '):' → logprob: -5.021429061889648
    9. ']*' → logprob: -7.146429061889648
    10. '   ' → logprob: -7.146429061889648

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002545448951423168
    2. ' ' → logprob: -8.75025463104248
    3. '0' → logprob: -10.12525463104248
    4. ']' → logprob: -10.25025463104248
    5. '-' → logprob: -12.00025463104248
    6. '][' → logprob: -12.37525463104248
    7. '2' → logprob: -12.62525463104248
    8. '])' → logprob: -13.81275463104248
    9. '   ' → logprob: -14.12525463104248
    10. 'idx' → logprob: -14.75025463104248

Token 92: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.4031488299369812
    2. '):' → logprob: -1.528148889541626
    3. ':' → logprob: -2.778148889541626
    4. ' and' → logprob: -3.653148889541626
    5. ']' → logprob: -5.028148651123047
    6. ' ):' → logprob: -5.028148651123047
    7. '+' → logprob: -6.528148651123047
    8. '):
' → logprob: -6.528148651123047
    9. ' ]' → logprob: -6.653148651123047
    10. ']:
' → logprob: -6.778148651123047

Token 93: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.046026743948459625
    2. ' :' → logprob: -3.5460267066955566
    3. ':
' → logprob: -5.296026706695557
    4. '+' → logprob: -5.796026706695557
    5. '       ' → logprob: -6.296026706695557
    6. ' and' → logprob: -6.546026706695557
    7. '   ' → logprob: -6.671026706695557
    8. ' :
' → logprob: -7.046026706695557
    9. ' ' → logprob: -7.171026706695557
    10. '):' → logprob: -7.796026706695557

Token 94: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.06407729536294937
    2. 'idx' (adapté à ' idx') → logprob: -2.939077377319336
    3. '	idx' → logprob: -5.939077377319336
    4. '           ' → logprob: -6.189077377319336
    5. '   ' → logprob: -6.314077377319336
    6. '       ' → logprob: -6.564077377319336
    7. '[idx' → logprob: -7.564077377319336
    8. '	   ' → logprob: -8.939077377319336
    9. '(idx' → logprob: -9.189077377319336
    10. '_idx' → logprob: -9.314077377319336

Token 95: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0011997550027444959
    2. ' +=' → logprob: -6.751199722290039
    3. '=' → logprob: -10.626199722290039
    4. ']+=' → logprob: -12.626199722290039
    5. '+' → logprob: -13.251199722290039
    6. '   ' → logprob: -16.37619972229004
    7. '*=' → logprob: -16.75119972229004
    8. '+='' → logprob: -16.87619972229004
    9. '-=' → logprob: -17.75119972229004
    10. '+="' → logprob: -17.87619972229004

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.31273078918457
    4. '```' → logprob: -17.56273078918457
    5. '+' → logprob: -17.87523078918457
    6. '0' → logprob: -17.93773078918457
    7. '<|end|>' → logprob: -17.93773078918457
    8. ' ' → logprob: -18.00023078918457
    9. '  ' → logprob: -18.25023078918457
    10. '
' → logprob: -18.37523078918457

Token 97: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4106663763523102
    2. '<|end|>' → logprob: -1.6606663465499878
    3. '   ' → logprob: -2.9106664657592773
    4. '
' → logprob: -4.035666465759277
    5. ' ' → logprob: -4.035666465759277
    6. ' else' → logprob: -4.535666465759277
    7. '        
' → logprob: -5.160666465759277
    8. ' 
' → logprob: -5.285666465759277
    9. '[' → logprob: -5.410666465759277
    10. '+' → logprob: -5.535666465759277

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14090313017368317
    2. '<|end|>' → logprob: -2.8909032344818115
    3. '   ' → logprob: -3.6409032344818115
    4. '[' → logprob: -4.265902996063232
    5. ')' → logprob: -4.390902996063232
    6. '
' → logprob: -4.765902996063232
    7. '+' → logprob: -5.515902996063232
    8. ']' → logprob: -6.140902996063232
    9. '<|end|>' → logprob: -6.390902996063232
    10. ' ' → logprob: -6.640902996063232

Token 99: ' fare' (ID: 25285)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.856086015701294
    2. 'fare' (adapté à ' fare') → logprob: -1.356086015701294
    3. ' fare' → logprob: -1.981086015701294
    4. ' if' → logprob: -2.106086015701294
    5. 'if' → logprob: -4.106085777282715
    6. ')' → logprob: -4.856085777282715
    7. '       ' → logprob: -4.856085777282715
    8. ' ' → logprob: -4.981085777282715
    9. '
' → logprob: -5.106085777282715
    10. '0' → logprob: -6.481085777282715

Token 100: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005300042685121298
    2. '[' → logprob: -5.255300045013428
    3. ' [' → logprob: -10.25529956817627
    4. '=' → logprob: -10.75529956817627
    5. '[s' → logprob: -13.25529956817627
    6. '[I' → logprob: -13.50529956817627
    7. ' =' → logprob: -13.88029956817627
    8. '[idx' → logprob: -14.38029956817627
    9. '[int' → logprob: -14.63029956817627
    10. '[f' → logprob: -14.75529956817627

Token 101: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6762287616729736
    2. '=' → logprob: -1.4262287616729736
    3. ']' → logprob: -1.4262287616729736
    4. ']=' → logprob: -4.6762285232543945
    5. ' ]' → logprob: -6.4262285232543945
    6. ' +=' → logprob: -10.176228523254395
    7. ']+=' → logprob: -10.551228523254395
    8. ')' → logprob: -10.676228523254395
    9. ')=' → logprob: -12.176228523254395
    10. ' ' → logprob: -12.426228523254395

Token 102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2528187930583954
    2. ' =' → logprob: -1.5028188228607178
    3. ' +=' → logprob: -7.377818584442139
    4. '+=' → logprob: -8.252819061279297
    5. '=f' → logprob: -13.752819061279297
    6. ' ' → logprob: -14.252819061279297
    7. '=max' → logprob: -15.502819061279297
    8. '=int' → logprob: -15.627819061279297
    9. '=s' → logprob: -15.877819061279297
    10. '+' → logprob: -15.877819061279297

Token 103: ' fare' (ID: 25285)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6074513792991638
    2. 'fare' → logprob: -0.8574513792991638
    3. ' fare' → logprob: -4.232451438903809
    4. ' r' → logprob: -4.732451438903809
    5. 'max' → logprob: -5.982451438903809
    6. '   ' → logprob: -6.857451438903809
    7. 'min' → logprob: -7.107451438903809
    8. 'p' → logprob: -7.357451438903809
    9. ' max' → logprob: -7.857451438903809
    10. ' ' → logprob: -8.294951438903809

Token 104: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -14.875
    3. '[' → logprob: -17.0
    4. ' i' → logprob: -18.375
    5. '[I' → logprob: -19.0
    6. '[-' → logprob: -19.625
    7. '(i' → logprob: -20.125
    8. ' [' → logprob: -20.125
    9. '```' → logprob: -20.375
    10. '
' → logprob: -20.5

Token 105: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008087906171567738
    2. ' -' → logprob: -7.1258087158203125
    3. '1' → logprob: -12.750808715820312
    4. '[-' → logprob: -14.625808715820312
    5. '[i' → logprob: -15.000808715820312
    6. ']' → logprob: -15.250808715820312
    7. 'i' → logprob: -15.875808715820312
    8. '-i' → logprob: -16.000808715820312
    9. '[' → logprob: -16.625808715820312
    10. ' ' → logprob: -16.875808715820312

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3915141355246305e-05
    2. ' ' → logprob: -10.75002384185791
    3. '```' → logprob: -14.50002384185791
    4. '   ' → logprob: -14.56252384185791
    5. '-' → logprob: -14.75002384185791
    6. ')' → logprob: -15.87502384185791
    7. '<|end|>' → logprob: -16.500024795532227
    8. ']' → logprob: -16.687524795532227
    9. '  ' → logprob: -16.750024795532227
    10. '2' → logprob: -17.125024795532227

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027710573747754097
    2. ']+' → logprob: -3.6527106761932373
    3. '+' → logprob: -7.027710437774658
    4. ' ]' → logprob: -8.527710914611816
    5. ' +' → logprob: -8.652710914611816
    6. ')' → logprob: -9.277710914611816
    7. ')+' → logprob: -11.652710914611816
    8. '+r' → logprob: -11.777710914611816
    9. 'r' → logprob: -12.152710914611816
    10. '+]' → logprob: -12.277710914611816

Token 108: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06681090593338013
    2. ' +' → logprob: -3.3168108463287354
    3. '+r' → logprob: -3.5668108463287354
    4. 'r' → logprob: -9.566810607910156
    5. ' r' → logprob: -11.191810607910156
    6. '+p' → logprob: -12.191810607910156
    7. ' plus' → logprob: -12.441810607910156
    8. '+
' → logprob: -12.816810607910156
    9. '[r' → logprob: -13.566810607910156
    10. '+k' → logprob: -13.566810607910156

Token 109: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004982559010386467
    2. ' r' → logprob: -5.6299824714660645
    3. '(r' → logprob: -7.3799824714660645
    4. 'p' → logprob: -7.7549824714660645
    5. ' (' → logprob: -8.879982948303223
    6. '(' → logprob: -10.129982948303223
    7. '(p' → logprob: -10.254982948303223
    8. 'q' → logprob: -10.504982948303223
    9. 'idx' → logprob: -10.879982948303223
    10. '   ' → logprob: -11.004982948303223

Token 110: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.1041145626222715e-05
    2. 'idx' → logprob: -12.000011444091797
    3. '[' → logprob: -13.000011444091797
    4. ' idx' → logprob: -14.000011444091797
    5. ' [' → logprob: -14.125011444091797
    6. '[i' → logprob: -15.000011444091797
    7. '(idx' → logprob: -16.250011444091797
    8. '	idx' → logprob: -16.500011444091797
    9. 's' → logprob: -16.625011444091797
    10. '[max' → logprob: -17.125011444091797

Token 111: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.031945157796144485
    2. ']' → logprob: -3.53194522857666
    3. ' -' → logprob: -6.15694522857666
    4. '1' → logprob: -9.90694522857666
    5. '[' → logprob: -11.65694522857666
    6. ' ]' → logprob: -12.90694522857666
    7. '   ' → logprob: -13.15694522857666
    8. '<|end|>' → logprob: -13.40694522857666
    9. ' ' → logprob: -13.65694522857666
    10. '0' → logprob: -13.78194522857666

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -11.875009536743164
    3. '2' → logprob: -13.250009536743164
    4. ']' → logprob: -14.375009536743164
    5. '0' → logprob: -15.062509536743164
    6. '3' → logprob: -17.250009536743164
    7. '```' → logprob: -17.437509536743164
    8. '<|end|>' → logprob: -17.687509536743164
    9. '   ' → logprob: -17.812509536743164
    10. '6' → logprob: -18.187509536743164

Token 113: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004013222176581621
    2. ')' → logprob: -6.1290130615234375
    3. '<|end|>' → logprob: -7.2540130615234375
    4. ']*' → logprob: -7.6290130615234375
    5. ')]' → logprob: -8.504013061523438
    6. ' ]' → logprob: -9.004013061523438
    7. '*' → logprob: -9.504013061523438
    8. '])' → logprob: -9.629013061523438
    9. ' *' → logprob: -10.504013061523438
    10. ']
' → logprob: -10.754013061523438

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40031442046165466
    2. 'return' → logprob: -1.650314450263977
    3. ' return' → logprob: -2.1503143310546875
    4. '<|end|>' → logprob: -4.4003143310546875
    5. '	return' → logprob: -5.5253143310546875
    6. '
' → logprob: -5.5253143310546875
    7. ' ' → logprob: -7.6503143310546875
    8. ':return' → logprob: -8.775314331054688
    9. 'def' → logprob: -8.900314331054688
    10. '    
' → logprob: -8.900314331054688

Token 115: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.096687912940979
    2. 'return' (adapté à ' return') → logprob: -1.221687912940979
    3. '<|end|>' → logprob: -1.721687912940979
    4. ' return' → logprob: -2.0966877937316895
    5. '
' → logprob: -2.8466877937316895
    6. '	return' → logprob: -5.4716877937316895
    7. ' ' → logprob: -6.2216877937316895
    8. '    
' → logprob: -6.3466877937316895
    9. ':return' → logprob: -6.9716877937316895
    10. '<|end|>' → logprob: -7.4716877937316895

Token 116: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.0024943258613348007
    2. ' fare' → logprob: -6.0024943351745605
    3. 'far' → logprob: -11.502493858337402
    4. 'fa' → logprob: -12.627493858337402
    5. 'fair' → logprob: -12.627493858337402
    6. 'f' → logprob: -13.377493858337402
    7. '(f' → logprob: -16.25249481201172
    8. 'Fare' → logprob: -16.37749481201172
    9. 'fee' → logprob: -16.50249481201172
    10. 'fal' → logprob: -16.87749481201172

Token 117: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: 'while' (ID: 7032)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.056832797825336456
    2. '
' → logprob: -3.181832790374756
    3. '<|end|>' → logprob: -4.431832790374756
    4. '

' → logprob: -6.806832790374756
    5. '```' → logprob: -8.681833267211914
    6. '<|end|>' → logprob: -9.056833267211914
    7. ')' → logprob: -9.056833267211914
    8. '    
' → logprob: -9.806833267211914
    9. ' def' → logprob: -10.431833267211914
    10. '#' → logprob: -10.431833267211914

Token 119: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.016063814982771873
    2. 'True' → logprob: -4.141063690185547
    3. '(True' → logprob: -10.891063690185547
    4. ' not' → logprob: -12.266063690185547
    5. ' input' → logprob: -12.891063690185547
    6. ' ' → logprob: -13.766063690185547
    7. ' true' → logprob: -13.891063690185547
    8. '=True' → logprob: -14.891063690185547
    9. '1' → logprob: -14.891063690185547
    10. ' len' → logprob: -15.141063690185547

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015681622608099133
    2. '():' → logprob: -9.12515640258789
    3. ':
' → logprob: -10.25015640258789
    4. ' :' → logprob: -12.25015640258789
    5. ':**' → logprob: -13.00015640258789
    6. '):' → logprob: -13.12515640258789
    7. ',' → logprob: -13.62515640258789
    8. ':

' → logprob: -14.62515640258789
    9. '   ' → logprob: -14.87515640258789
    10. ':def' → logprob: -15.50015640258789

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14822058379650116
    2. ' line' → logprob: -2.1482205390930176
    3. ' try' → logprob: -4.648220539093018
    4. 'line' → logprob: -5.148220539093018
    5. 'try' → logprob: -5.523220539093018
    6. 'n' → logprob: -7.023220539093018
    7. ' s' → logprob: -7.898220539093018
    8. 's' → logprob: -9.148221015930176
    9. ' n' → logprob: -9.273221015930176
    10. '    
' → logprob: -9.898221015930176

Token 122: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6537714600563049
    2. 'n' (adapté à ' n') → logprob: -1.1537714004516602
    3. ' n' → logprob: -2.90377140045166
    4. 'line' → logprob: -2.90377140045166
    5. ' try' → logprob: -3.65377140045166
    6. 'l' → logprob: -4.90377140045166
    7. 'try' → logprob: -5.15377140045166
    8. ' l' → logprob: -5.40377140045166
    9. 'N' → logprob: -5.90377140045166
    10. 's' → logprob: -6.40377140045166

Token 123: ',m' (ID: 26648)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25675326585769653
    2. ',' → logprob: -1.6317532062530518
    3. ' =' → logprob: -3.5067532062530518
    4. '=int' → logprob: -7.506753444671631
    5. '=input' → logprob: -9.256752967834473
    6. ',p' → logprob: -10.506752967834473
    7. ',m' → logprob: -10.506752967834473
    8. ',s' → logprob: -10.506752967834473
    9. ',n' → logprob: -10.881752967834473
    10. '=

' → logprob: -11.131752967834473

Token 124: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07157854735851288
    2. ' =' → logprob: -2.6965785026550293
    3. '=input' → logprob: -7.946578502655029
    4. '=w' → logprob: -8.571578979492188
    5. ',w' → logprob: -8.696578979492188
    6. '=p' → logprob: -9.446578979492188
    7. ',p' → logprob: -9.571578979492188
    8. ',k' → logprob: -9.571578979492188
    9. '=f' → logprob: -9.696578979492188
    10. ',l' → logprob: -9.696578979492188

Token 125: ',s' (ID: 20379)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0029009245336055756
    2. ' =' → logprob: -5.877901077270508
    3. '=input' → logprob: -9.752901077270508
    4. '=sys' → logprob: -11.377901077270508
    5. '=int' → logprob: -11.877901077270508
    6. '=line' → logprob: -12.002901077270508
    7. ',' → logprob: -12.877901077270508
    8. '=s' → logprob: -13.377901077270508
    9. '=n' → logprob: -13.502901077270508
    10. '=list' → logprob: -13.752901077270508

Token 126: ',g' (ID: 44461)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019171632826328278
    2. ' =' → logprob: -5.019171714782715
    3. '=line' → logprob: -5.019171714782715
    4. '=input' → logprob: -6.394171714782715
    5. '=sys' → logprob: -6.644171714782715
    6. '=list' → logprob: -7.519171714782715
    7. '=w' → logprob: -7.644171714782715
    8. ',l' → logprob: -8.394171714782715
    9. ',v' → logprob: -8.519171714782715
    10. ',w' → logprob: -8.519171714782715

Token 127: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0041512916795909405
    2. ' =' → logprob: -5.504151344299316
    3. '=input' → logprob: -10.504151344299316
    4. '=line' → logprob: -10.754151344299316
    5. '=sys' → logprob: -11.379151344299316
    6. ',' → logprob: -11.629151344299316
    7. '=

' → logprob: -14.754151344299316
    8. '=
' → logprob: -15.254151344299316
    9. '=s' → logprob: -15.254151344299316
    10. '=list' → logprob: -15.379151344299316

Token 128: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6931493282318115
    2. ' map' → logprob: -0.6931493282318115
    3. '(map' → logprob: -14.06814956665039
    4. '	map' → logprob: -14.19314956665039
    5. 'list' → logprob: -14.81814956665039
    6. ' list' → logprob: -15.56814956665039
    7. ' sys' → logprob: -16.81814956665039
    8. ' ' → logprob: -17.81814956665039
    9. 'sys' → logprob: -18.56814956665039
    10. '  ' → logprob: -18.69314956665039

Token 129: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009756630170159042
    2. '(' → logprob: -7.000975608825684
    3. '(input' → logprob: -10.375975608825684
    4. '(str' → logprob: -11.000975608825684
    5. 'int' → logprob: -11.875975608825684
    6. '(list' → logprob: -12.625975608825684
    7. '[int' → logprob: -13.625975608825684
    8. '=int' → logprob: -13.750975608825684
    9. ' (' → logprob: -14.125975608825684
    10. '(tuple' → logprob: -14.250975608825684

Token 130: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44893574714660645
    2. '(sys' → logprob: -1.6989357471466064
    3. ',input' → logprob: -1.8239357471466064
    4. 'sys' → logprob: -4.448935508728027
    5. '(' → logprob: -6.073935508728027
    6. 'input' → logprob: -6.573935508728027
    7. '(input' → logprob: -6.948935508728027
    8. '=sys' → logprob: -7.323935508728027
    9. ' sys' → logprob: -8.948935508728027
    10. '(),' → logprob: -9.698935508728027

Token 131: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.180258191714529e-06
    2. '()' → logprob: -11.750008583068848
    3. ' ().' → logprob: -15.375008583068848
    4. '.' → logprob: -19.62500762939453
    5. '()
' → logprob: -20.00000762939453
    6. '(' → logprob: -20.00000762939453
    7. '())' → logprob: -20.25000762939453
    8. '()?.' → logprob: -20.50000762939453
    9. ')' → logprob: -20.62500762939453
    10. '()

' → logprob: -21.62500762939453

Token 132: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20199494063854218
    2. 'strip' → logprob: -1.7019948959350586
    3. 'rstrip' → logprob: -7.451994895935059
    4. '(split' → logprob: -14.826994895935059
    5. ' split' → logprob: -15.076994895935059
    6. ' strip' → logprob: -15.826994895935059
    7. '().' → logprob: -16.201995849609375
    8. 'read' → logprob: -16.576995849609375
    9. '(strip' → logprob: -17.201995849609375
    10. '```' → logprob: -17.701995849609375

Token 133: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13043391704559326
    2. ')' → logprob: -2.630434036254883
    3. '()' → logprob: -3.005434036254883
    4. '(' → logprob: -8.130434036254883
    5. '())
' → logprob: -8.255434036254883
    6. '('' → logprob: -9.130434036254883
    7. '(','' → logprob: -11.255434036254883
    8. '(),' → logprob: -11.630434036254883
    9. '().' → logprob: -12.130434036254883
    10. ' ())' → logprob: -12.255434036254883

Token 134: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10105092078447342
    2. ' if' → logprob: -2.351050853729248
    3. '<|end|>' → logprob: -7.351050853729248
    4. '    ' → logprob: -9.851051330566406
    5. '
' → logprob: -9.976051330566406
    6. '   ' → logprob: -10.101051330566406
    7. ' ' → logprob: -11.101051330566406
    8. ')' → logprob: -11.476051330566406
    9. ';if' → logprob: -12.101051330566406
    10. '#' → logprob: -12.226051330566406

Token 136: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.023296138271689415
    2. 'n' → logprob: -3.7732961177825928
    3. ' not' → logprob: -10.023296356201172
    4. ' ' → logprob: -12.648296356201172
    5. '(n' → logprob: -13.648296356201172
    6. '0' → logprob: -14.273296356201172
    7. '	n' → logprob: -14.523296356201172
    8. ' (' → logprob: -15.148296356201172
    9. 'not' → logprob: -15.148296356201172
    10. '(' → logprob: -16.273296356201172

Token 137: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014241418801248074
    2. ' n' → logprob: -4.5142412185668945
    3. '0' → logprob: -5.7642412185668945
    4. '   ' → logprob: -11.014241218566895
    5. ')n' → logprob: -11.264241218566895
    6. ' ' → logprob: -11.639241218566895
    7. ')' → logprob: -12.389241218566895
    8. ' not' → logprob: -12.639241218566895
    9. '	n' → logprob: -13.014241218566895
    10. 'not' → logprob: -13.514241218566895

Token 138: ',m' (ID: 26648)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08120568096637726
    2. ' ==' → logprob: -2.5812056064605713
    3. ',' → logprob: -6.08120584487915
    4. ')==' → logprob: -11.331205368041992
    5. ' ,' → logprob: -11.581205368041992
    6. '=' → logprob: -13.331205368041992
    7. ')' → logprob: -13.581205368041992
    8. '<=' → logprob: -14.081205368041992
    9. ',m' → logprob: -14.581205368041992
    10. '0' → logprob: -14.831205368041992

Token 139: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2555016577243805
    2. ',c' → logprob: -1.505501627922058
    3. ')==' → logprob: -6.380501747131348
    4. '0' → logprob: -6.755501747131348
    5. ')' → logprob: -8.005501747131348
    6. '==' → logprob: -9.505501747131348
    7. ',n' → logprob: -9.755501747131348
    8. ' ,' → logprob: -10.005501747131348
    9. ',s' → logprob: -10.630501747131348
    10. 'c' → logprob: -10.880501747131348

Token 140: ',s' (ID: 20379)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.681184709072113
    2. ')==' → logprob: -0.806184709072113
    3. ',' → logprob: -3.681184768676758
    4. '0' → logprob: -4.431184768676758
    5. '==' → logprob: -5.056184768676758
    6. '(' → logprob: -5.681184768676758
    7. ' ==' → logprob: -9.056184768676758
    8. ']==' → logprob: -9.556184768676758
    9. '==(' → logprob: -9.681184768676758
    10. '```' → logprob: -10.056184768676758

Token 141: ',g' (ID: 44461)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061636198312044144
    2. ')==' → logprob: -3.186636209487915
    3. ')' → logprob: -4.186635971069336
    4. ',c' → logprob: -6.311635971069336
    5. '0' → logprob: -7.061635971069336
    6. '==' → logprob: -8.686635971069336
    7. ',g' → logprob: -9.186635971069336
    8. '(' → logprob: -9.561635971069336
    9. ',q' → logprob: -10.061635971069336
    10. ' ,' → logprob: -10.186635971069336

Token 142: ')==' (ID: 35269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3136245310306549
    2. ')==' → logprob: -1.3136245012283325
    3. '==' → logprob: -7.938624382019043
    4. ' )' → logprob: -13.063624382019043
    5. ']==' → logprob: -13.688624382019043
    6. ' ==' → logprob: -13.688624382019043
    7. ')=='' → logprob: -14.688624382019043
    8. '==(' → logprob: -14.938624382019043
    9. '(' → logprob: -15.188624382019043
    10. '0' → logprob: -15.563624382019043

Token 143: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011791547294706106
    2. ' (' → logprob: -6.751179218292236
    3. '0' → logprob: -11.751178741455078
    4. ' ' → logprob: -13.751178741455078
    5. '(-' → logprob: -20.376178741455078
    6. 'tuple' → logprob: -20.626178741455078
    7. '（' → logprob: -21.001178741455078
    8. '[' → logprob: -21.376178741455078
    9. '`' → logprob: -21.751178741455078
    10. '```' → logprob: -22.376178741455078

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.624555291840807e-05
    2. ' ' → logprob: -10.125076293945312
    3. '(' → logprob: -10.250076293945312
    4. ' (' → logprob: -14.500076293945312
    5. '０' → logprob: -16.000076293945312
    6. '-' → logprob: -16.250076293945312
    7. ')' → logprob: -17.375076293945312
    8. '۰' → logprob: -17.500076293945312
    9. '[' → logprob: -19.625076293945312
    10. '   ' → logprob: -19.750076293945312

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ' ,' → logprob: -12.000009536743164
    3. '0' → logprob: -13.250009536743164
    4. ',
' → logprob: -13.875009536743164
    5. ')' → logprob: -17.000009536743164
    6. ' ' → logprob: -17.625009536743164
    7. '
' → logprob: -18.750009536743164
    8. '):' → logprob: -18.875009536743164
    9. '

' → logprob: -19.000009536743164
    10. ',

' → logprob: -19.500009536743164

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. ')' → logprob: -17.625011444091797
    4. '۰' → logprob: -20.500011444091797
    5. '000' → logprob: -22.250011444091797
    6. '０' → logprob: -22.500011444091797
    7. '০' → logprob: -22.625011444091797
    8. '00' → logprob: -22.625011444091797
    9. '  ' → logprob: -22.750011444091797
    10. '(' → logprob: -22.875011444091797

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.170270353322849e-05
    2. '0' → logprob: -9.750061988830566
    3. ' ,' → logprob: -12.625061988830566
    4. ')' → logprob: -17.00006103515625
    5. '```' → logprob: -17.87506103515625
    6. ',
' → logprob: -18.00006103515625
    7. ' ' → logprob: -19.12506103515625
    8. '،' → logprob: -19.37506103515625
    9. '00' → logprob: -19.81256103515625
    10. '),' → logprob: -20.25006103515625

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۰' → logprob: -19.6250057220459
    4. ')' → logprob: -19.7500057220459
    5. '(' → logprob: -20.8750057220459
    6. '০' → logprob: -20.9375057220459
    7. '

' → logprob: -21.1250057220459
    8. '```' → logprob: -21.3125057220459
    9. '000' → logprob: -21.6875057220459
    10. '०' → logprob: -21.7500057220459

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.872261317563243e-05
    2. '0' → logprob: -9.875059127807617
    3. ' ,' → logprob: -11.875059127807617
    4. ')' → logprob: -16.750059127807617
    5. ',
' → logprob: -16.875059127807617
    6. '```' → logprob: -17.500059127807617
    7. ' ' → logprob: -18.125059127807617
    8. '00' → logprob: -18.875059127807617
    9. '000' → logprob: -19.000059127807617
    10. '

' → logprob: -19.000059127807617

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '۰' → logprob: -17.8750057220459
    4. ')' → logprob: -18.0625057220459
    5. '  ' → logprob: -18.6875057220459
    6. '#' → logprob: -18.6875057220459
    7. '   ' → logprob: -18.8750057220459
    8. '```' → logprob: -19.1250057220459
    9. '০' → logprob: -19.3750057220459
    10. '<|end|>' → logprob: -20.0000057220459

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.893480243277736e-05
    2. '0' → logprob: -10.250039100646973
    3. '):' → logprob: -12.750039100646973
    4. ')' → logprob: -14.750039100646973
    5. ' ,' → logprob: -16.125038146972656
    6. ',
' → logprob: -16.625038146972656
    7. '):
' → logprob: -16.875038146972656
    8. ' ' → logprob: -17.875038146972656
    9. '،' → logprob: -19.250038146972656
    10. '```' → logprob: -19.250038146972656

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. ')' → logprob: -18.125001907348633
    4. '۰' → logprob: -18.750001907348633
    5. '```' → logprob: -19.250001907348633
    6. '-' → logprob: -19.500001907348633
    7. '   ' → logprob: -20.250001907348633
    8. '০' → logprob: -20.687501907348633
    9. '  ' → logprob: -20.687501907348633
    10. '

' → logprob: -20.812501907348633

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06198056787252426
    2. '):
' → logprob: -2.8119804859161377
    3. ')' → logprob: -11.561980247497559
    4. '):
' → logprob: -13.311980247497559
    5. ':' → logprob: -13.561980247497559
    6. '):

' → logprob: -15.186980247497559
    7. ':
' → logprob: -16.311981201171875
    8. ' ):' → logprob: -17.186981201171875
    9. '   ' → logprob: -17.436981201171875
    10. '}:' → logprob: -18.061981201171875

Token 154: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1269734650850296
    2. '       ' → logprob: -2.1269733905792236
    3. '	break' → logprob: -11.376973152160645
    4. '   ' → logprob: -11.376973152160645
    5. 'break' → logprob: -11.376973152160645
    6. ' break' → logprob: -11.626973152160645
    7. '```' → logprob: -14.376973152160645
    8. '    
' → logprob: -15.251973152160645
    9. '<|end|>' → logprob: -15.876973152160645
    10. '	' → logprob: -16.00197410583496

Token 155: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.011189645156264305
    2. ' break' → logprob: -4.5111894607543945
    3. '   ' → logprob: -9.511189460754395
    4. '       ' → logprob: -10.136189460754395
    5. '	break' → logprob: -10.511189460754395
    6. '```' → logprob: -14.636189460754395
    7. '
' → logprob: -15.261189460754395
    8. '           ' → logprob: -15.761189460754395
    9. '_break' → logprob: -15.761189460754395
    10. '    
' → logprob: -17.38619041442871

Token 156: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6313484311103821
    2. '   ' → logprob: -1.0063483715057373
    3. ' graph' → logprob: -3.3813483715057373
    4. '    
' → logprob: -3.3813483715057373
    5. '
' → logprob: -4.006348609924316
    6. 'dist' → logprob: -5.631348609924316
    7. 'adj' → logprob: -5.756348609924316
    8. 'distance' → logprob: -5.881348609924316
    9. '	graph' → logprob: -6.381348609924316
    10. 'edges' → logprob: -6.381348609924316

Token 157: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1219462901353836
    2. '   ' → logprob: -2.496946334838867
    3. 'dist' → logprob: -4.371946334838867
    4. '    
' → logprob: -4.746946334838867
    5. ' graph' → logprob: -5.371946334838867
    6. '
' → logprob: -6.246946334838867
    7. 'distance' → logprob: -6.621946334838867
    8. '	graph' → logprob: -6.871946334838867
    9. 'adj' → logprob: -6.871946334838867
    10. 'edges' → logprob: -8.121946334838867

Token 158: ' adj' (ID: 20251)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8573084473609924
    2. 'fa' → logprob: -1.2323083877563477
    3. 'fare' → logprob: -2.4823083877563477
    4. 'graph' → logprob: -2.8573083877563477
    5. 'edges' → logprob: -3.6073083877563477
    6. 'dist' → logprob: -3.8573083877563477
    7. 'f' → logprob: -4.732308387756348
    8. 'adj' (adapté à ' adj') → logprob: -4.857308387756348
    9. 'cost' → logprob: -5.107308387756348
    10. 'P' → logprob: -5.482308387756348

Token 159: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31626096367836
    2. ' =' → logprob: -1.3162609338760376
    3. '=[' → logprob: -6.441260814666748
    4. '=[]' → logprob: -6.691260814666748
    5. '={}' → logprob: -8.941261291503906
    6. '[' → logprob: -11.566261291503906
    7. '={' → logprob: -12.066261291503906
    8. '=[[' → logprob: -12.191261291503906
    9. '＝' → logprob: -13.191261291503906
    10. 'acency' → logprob: -13.816261291503906

Token 160: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00020449401927180588
    2. ' []' → logprob: -8.500204086303711
    3. '[]
' → logprob: -14.625204086303711
    4. ' [[]' → logprob: -15.000204086303711
    5. '[' → logprob: -15.375204086303711
    6. '[][]' → logprob: -17.00020408630371
    7. '[]

' → logprob: -18.00020408630371
    8. '([]' → logprob: -19.25020408630371
    9. '{}' → logprob: -19.50020408630371
    10. '][]' → logprob: -19.62520408630371

Token 161: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931490898132324
    2. 'for' → logprob: -0.6931490898132324
    3. '	for' → logprob: -13.94314956665039
    4. '()' → logprob: -14.69314956665039
    5. '(n' → logprob: -15.56814956665039
    6. '   ' → logprob: -15.94314956665039
    7. '```' → logprob: -16.19314956665039
    8. ' ' → logprob: -16.31814956665039
    9. ')' → logprob: -16.94314956665039
    10. ']' → logprob: -17.06814956665039

Token 162: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25808557868003845
    2. ' in' → logprob: -1.6330856084823608
    3. 'in' → logprob: -3.6330854892730713
    4. 'range' → logprob: -6.00808572769165
    5. ' _' → logprob: -6.13308572769165
    6. ' range' → logprob: -7.00808572769165
    7. '(range' → logprob: -9.758085250854492
    8. '_in' → logprob: -10.383085250854492
    9. ' ' → logprob: -10.633085250854492
    10. ' i' → logprob: -11.133085250854492

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2522917091846466
    2. 'in' → logprob: -1.5022916793823242
    3. 'range' → logprob: -8.002291679382324
    4. 'n' → logprob: -11.127291679382324
    5. '(n' → logprob: -11.877291679382324
    6. ' range' → logprob: -12.252291679382324
    7. 'i' → logprob: -15.127291679382324
    8. '_' → logprob: -15.377291679382324
    9. '(' → logprob: -15.502291679382324
    10. ' ' → logprob: -15.627291679382324

Token 164: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889033854007721
    2. ' range' → logprob: -2.578890323638916
    3. '(range' → logprob: -14.328890800476074
    4. '	range' → logprob: -18.578889846801758
    5. '   ' → logprob: -20.453889846801758
    6. 'in' → logprob: -20.453889846801758
    7. '_range' → logprob: -20.828889846801758
    8. 'r' → logprob: -21.078889846801758
    9. '.range' → logprob: -21.453889846801758
    10. ' ' → logprob: -21.453889846801758

Token 165: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.226628895296017e-06
    2. 'n' → logprob: -12.375007629394531
    3. '(' → logprob: -13.000007629394531
    4. ' (' → logprob: -14.375007629394531
    5. ' n' → logprob: -16.87500762939453
    6. '((' → logprob: -18.37500762939453
    7. '(N' → logprob: -18.37500762939453
    8. '	n' → logprob: -19.75000762939453
    9. '   ' → logprob: -19.87500762939453
    10. '[n' → logprob: -20.00000762939453

Token 166: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.939851037808694e-05
    2. ')]
' → logprob: -11.125029563903809
    3. ' )' → logprob: -11.625029563903809
    4. ')' → logprob: -12.875029563903809
    5. '+' → logprob: -13.250029563903809
    6. ')]

' → logprob: -14.000029563903809
    7. ')]
' → logprob: -15.750029563903809
    8. ']' → logprob: -16.250028610229492
    9. ')])' → logprob: -16.250028610229492
    10. ')],' → logprob: -17.500028610229492

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '2' → logprob: -15.375005722045898
    4. '```' → logprob: -17.0000057220459
    5. '0' → logprob: -17.2500057220459
    6. '(' → logprob: -18.0625057220459
    7. '   ' → logprob: -18.1875057220459
    8. '7' → logprob: -18.3750057220459
    9. '１' → logprob: -18.5000057220459
    10. '3' → logprob: -18.7500057220459

Token 168: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4769693911075592
    2. ']' → logprob: -0.9769693613052368
    3. ')' → logprob: -5.851969242095947
    4. ' ]' → logprob: -12.101969718933105
    5. ']
' → logprob: -12.476969718933105
    6. ']

' → logprob: -13.601969718933105
    7. '])' → logprob: -13.851969718933105
    8. '}]' → logprob: -14.476969718933105
    9. ')],' → logprob: -15.101969718933105
    10. '`]' → logprob: -15.101969718933105

Token 169: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006806910037994385
    2. ' for' → logprob: -5.38180685043335
    3. '   ' → logprob: -6.13180685043335
    4. '	for' → logprob: -11.881807327270508
    5. '<|end|>' → logprob: -12.381807327270508
    6. '    
' → logprob: -15.381807327270508
    7. '
' → logprob: -16.006807327270508
    8. ' ' → logprob: -16.381807327270508
    9. '  ' → logprob: -17.006807327270508
    10. '    ' → logprob: -17.881807327270508

Token 170: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.165027217415627e-05
    2. ' for' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.50002098083496
    4. 'fare' → logprob: -18.25002098083496
    5. ' ' → logprob: -19.12502098083496
    6. '	for' → logprob: -19.37502098083496
    7. 'f' → logprob: -19.50002098083496
    8. '
' → logprob: -19.75002098083496
    9. '```' → logprob: -20.12502098083496
    10. '    
' → logprob: -20.12502098083496

Token 171: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0011718906462192535
    2. ' _' → logprob: -6.751172065734863
    3. '_i' → logprob: -13.501172065734863
    4. ' in' → logprob: -15.501172065734863
    5. '_=' → logprob: -17.876171112060547
    6. ' ' → logprob: -18.001171112060547
    7. '_range' → logprob: -18.501171112060547
    8. 'i' → logprob: -18.501171112060547
    9. ' i' → logprob: -18.626171112060547
    10. '_in' → logprob: -18.626171112060547

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006733487825840712
    2. 'in' → logprob: -5.006733417510986
    3. 'range' → logprob: -11.631733894348145
    4. ' ' → logprob: -12.256733894348145
    5. 'import' → logprob: -13.381733894348145
    6. '```' → logprob: -15.006733894348145
    7. '	in' → logprob: -15.256733894348145
    8. 'i' → logprob: -15.381733894348145
    9. '  ' → logprob: -15.506733894348145
    10. 's' → logprob: -15.506733894348145

Token 173: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005537479883059859
    2. ' range' → logprob: -7.500553607940674
    3. '(range' → logprob: -14.750554084777832
    4. 'in' → logprob: -15.875554084777832
    5. ' ' → logprob: -16.125553131103516
    6. ' in' → logprob: -16.625553131103516
    7. '	range' → logprob: -17.875553131103516
    8. 'm' → logprob: -18.125553131103516
    9. 'r' → logprob: -18.125553131103516
    10. '  ' → logprob: -18.375553131103516

Token 174: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.02352648414671421
    2. 'm' → logprob: -3.773526430130005
    3. ' m' → logprob: -8.398526191711426
    4. ' (' → logprob: -9.898526191711426
    5. '(' → logprob: -12.523526191711426
    6. '	m' → logprob: -13.398526191711426
    7. '   ' → logprob: -15.648526191711426
    8. ',m' → logprob: -16.398527145385742
    9. '_m' → logprob: -17.773527145385742
    10. ')m' → logprob: -18.273527145385742

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016984831541776657
    2. ' ):' → logprob: -4.766984939575195
    3. ',' → logprob: -5.266984939575195
    4. '):
' → logprob: -5.891984939575195
    5. ':' → logprob: -8.766984939575195
    6. ' ,' → logprob: -9.141984939575195
    7. ')' → logprob: -9.766984939575195
    8. '):
' → logprob: -10.266984939575195
    9. ' ):
' → logprob: -10.641984939575195
    10. '   ' → logprob: -11.891984939575195

Token 176: '       ' (ID: 309)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3713023066520691
    2. ' u' → logprob: -1.3713023662567139
    3. '   ' → logprob: -3.121302366256714
    4. 'a' → logprob: -4.621302127838135
    5. ' a' → logprob: -6.621302127838135
    6. '	u' → logprob: -7.121302127838135
    7. 'b' → logprob: -9.371302604675293
    8. ',u' → logprob: -9.996302604675293
    9. '       ' → logprob: -10.121302604675293
    10. '    ' → logprob: -10.246302604675293

Token 177: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.316576212644577
    2. 'u' → logprob: -1.3165762424468994
    3. 'x' (adapté à ' x') → logprob: -6.81657600402832
    4. ' a' → logprob: -6.94157600402832
    5. ' u' → logprob: -7.06657600402832
    6. 'f' → logprob: -8.81657600402832
    7. 'A' → logprob: -9.56657600402832
    8. 's' → logprob: -10.31657600402832
    9. 'U' → logprob: -10.31657600402832
    10. '   ' → logprob: -10.56657600402832

Token 178: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.20147542655467987
    2. ',' → logprob: -1.7014753818511963
    3. ' ,' → logprob: -10.451475143432617
    4. ',x' → logprob: -11.201475143432617
    5. ',u' → logprob: -11.951475143432617
    6. ',v' → logprob: -13.201475143432617
    7. ',a' → logprob: -13.326475143432617
    8. ',s' → logprob: -13.826475143432617
    9. ',Y' → logprob: -13.951475143432617
    10. ',w' → logprob: -13.951475143432617

Token 179: ',d' (ID: 26159)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.5306243896484375
    2. ',z' → logprob: -1.0306243896484375
    3. ',' → logprob: -3.0306243896484375
    4. ',c' → logprob: -5.2806243896484375
    5. ',d' → logprob: -7.1556243896484375
    6. ' ,' → logprob: -8.030624389648438
    7. ',v' → logprob: -8.155624389648438
    8. ',y' → logprob: -10.655624389648438
    9. ',value' → logprob: -10.780624389648438
    10. ',l' → logprob: -10.905624389648438

Token 180: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6835161447525024
    2. ',w' → logprob: -1.0585161447525024
    3. ',z' → logprob: -2.933516025543213
    4. ' =' → logprob: -3.183516025543213
    5. ',c' → logprob: -3.808516025543213
    6. ',v' → logprob: -4.433516025543213
    7. ',' → logprob: -4.933516025543213
    8. ',l' → logprob: -6.058516025543213
    9. ',s' → logprob: -6.183516025543213
    10. '=int' → logprob: -6.433516025543213

Token 181: 'comp' (ID: 3697)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3859722316265106
    2. 't' → logprob: -2.010972261428833
    3. '=' → logprob: -3.010972261428833
    4. 'w' → logprob: -3.385972261428833
    5. 'f' → logprob: -3.510972261428833
    6. 'fare' → logprob: -4.260972023010254
    7. 'v' → logprob: -4.635972023010254
    8. 'cost' → logprob: -4.760972023010254
    9. 'l' → logprob: -4.885972023010254
    10. 'c' → logprob: -5.510972023010254

Token 182: '=' (ID: 28)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.6295257210731506
    2. '=' → logprob: -1.0045256614685059
    3. ',' → logprob: -3.379525661468506
    4. ' =' → logprob: -4.129525661468506
    5. 'let' → logprob: -4.254525661468506
    6. 'cost' → logprob: -4.629525661468506
    7. 'an' → logprob: -5.254525661468506
    8. 'lete' → logprob: -5.629525661468506
    9. '=[]' → logprob: -5.879525661468506
    10. 'type' → logprob: -6.629525661468506

Token 183: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00016563729150220752
    2. ' map' → logprob: -8.750165939331055
    3. 'input' → logprob: -11.875165939331055
    4. 'list' → logprob: -17.250165939331055
    5. '	map' → logprob: -17.500165939331055
    6. '   ' → logprob: -18.000165939331055
    7. '  ' → logprob: -19.000165939331055
    8. ' ' → logprob: -19.375165939331055
    9. 'sys' → logprob: -19.375165939331055
    10. '
' → logprob: -19.625165939331055

Token 184: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004546254931483418
    2. 'int' → logprob: -7.750454425811768
    3. '=int' → logprob: -11.625454902648926
    4. '[int' → logprob: -11.875454902648926
    5. ',int' → logprob: -12.125454902648926
    6. '<int' → logprob: -13.625454902648926
    7. ' int' → logprob: -14.125454902648926
    8. '```' → logprob: -15.500454902648926
    9. ':int' → logprob: -15.875454902648926
    10. ']int' → logprob: -16.12545394897461

Token 185: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0010862821945920587
    2. ',' → logprob: -6.876086235046387
    3. 'input' → logprob: -10.626086235046387
    4. ',int' → logprob: -11.126086235046387
    5. '(input' → logprob: -11.376086235046387
    6. ' ,' → logprob: -13.626086235046387
    7. '```' → logprob: -15.126086235046387
    8. '   ' → logprob: -15.251086235046387
    9. '=input' → logprob: -15.626086235046387
    10. '(' → logprob: -15.751086235046387

Token 186: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1160349458805285e-05
    2. '()' → logprob: -12.000011444091797
    3. ')' → logprob: -12.875011444091797
    4. '())' → logprob: -13.750011444091797
    5. '(' → logprob: -15.000011444091797
    6. '.' → logprob: -15.125011444091797
    7. ' ().' → logprob: -15.125011444091797
    8. '.split' → logprob: -15.875011444091797
    9. '.readline' → logprob: -16.000011444091797
    10. '().__' → logprob: -16.500011444091797

Token 187: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -16.75
    3. 'strip' → logprob: -18.5
    4. '(split' → logprob: -19.125
    5. 'spl' → logprob: -20.125
    6. '```' → logprob: -21.25
    7. '.split' → logprob: -21.625
    8. 'rstrip' → logprob: -21.875
    9. 'plit' → logprob: -23.125
    10. 'sl' → logprob: -23.375

Token 188: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.550411151489243e-05
    2. '())' → logprob: -10.500055313110352
    3. ')
' → logprob: -10.750055313110352
    4. '()' → logprob: -12.625055313110352
    5. ' )' → logprob: -13.500055313110352
    6. '))' → logprob: -14.625055313110352
    7. ')`' → logprob: -15.250055313110352
    8. ')}' → logprob: -16.00005531311035
    9. '<|end|>' → logprob: -16.00005531311035
    10. '),' → logprob: -16.12505531311035

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24439872801303864
    2. '   ' → logprob: -2.244398832321167
    3. 'adj' → logprob: -3.494398832321167
    4. '<|end|>' → logprob: -3.619398832321167
    5. ')' → logprob: -3.994398832321167
    6. '
' → logprob: -4.369398593902588
    7. ' adj' → logprob: -4.744398593902588
    8. '        
' → logprob: -5.244398593902588
    9. '    
' → logprob: -6.244398593902588
    10. ',' → logprob: -6.494398593902588

Token 190: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.08026031404733658
    2. 'adj' (adapté à ' adj') → logprob: -2.5802602767944336
    3. ' if' → logprob: -7.330260276794434
    4. '   ' → logprob: -7.955260276794434
    5. '       ' → logprob: -8.330260276794434
    6. 'if' → logprob: -9.955260276794434
    7. ' adjacency' → logprob: -10.580260276794434
    8. ' 
' → logprob: -12.080260276794434
    9. '_adj' → logprob: -12.205260276794434
    10. '(adj' → logprob: -12.205260276794434

Token 191: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.250000953674316
    3. 'x' → logprob: -15.750000953674316
    4. ' [' → logprob: -16.125
    5. '```' → logprob: -17.125
    6. '[y' → logprob: -18.125
    7. '[u' → logprob: -18.75
    8. '[int' → logprob: -19.25
    9. '[a' → logprob: -19.375
    10. '[s' → logprob: -19.5

Token 192: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.019894566386938095
    2. '[y' → logprob: -4.519894599914551
    3. '[x' → logprob: -4.769894599914551
    4. '][' → logprob: -8.39489459991455
    5. '[' → logprob: -10.39489459991455
    6. ').' → logprob: -10.76989459991455
    7. '   ' → logprob: -11.14489459991455
    8. ']' → logprob: -11.26989459991455
    9. ' ].' → logprob: -11.89489459991455
    10. '.append' → logprob: -12.01989459991455

Token 193: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.935296834039036e-06
    2. ' append' → logprob: -13.25000286102295
    3. '.append' → logprob: -14.12500286102295
    4. 'push' → logprob: -15.62500286102295
    5. '_append' → logprob: -16.000003814697266
    6. 'Append' → logprob: -16.875003814697266
    7. 'appen' → logprob: -18.000003814697266
    8. 'app' → logprob: -18.000003814697266
    9. '```' → logprob: -18.375003814697266
    10. '	append' → logprob: -19.375003814697266

Token 194: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.16092291474342346
    2. '(y' → logprob: -1.910922884941101
    3. '(' → logprob: -7.285923004150391
    4. ' (' → logprob: -11.41092300415039
    5. ' ((' → logprob: -14.03592300415039
    6. '([' → logprob: -14.91092300415039
    7. '   ' → logprob: -14.91092300415039
    8. '(x' → logprob: -15.28592300415039
    9. '(
' → logprob: -15.66092300415039
    10. '(Y' → logprob: -15.78592300415039

Token 195: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004329341172706336
    2. ' y' → logprob: -7.750432968139648
    3. '   ' → logprob: -13.875432968139648
    4. '	y' → logprob: -15.250432968139648
    5. ')y' → logprob: -15.375432968139648
    6. '
' → logprob: -15.750432968139648
    7. ',y' → logprob: -15.875432968139648
    8. ''y' → logprob: -16.12543296813965
    9. ')' → logprob: -16.50043296813965
    10. ',' → logprob: -16.62543296813965

Token 196: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.34879446029663086
    2. ',' → logprob: -1.2237944602966309
    3. ' ,' → logprob: -7.973794460296631
    4. 'd' → logprob: -13.098794937133789
    5. ',
' → logprob: -14.098794937133789
    6. ',D' → logprob: -15.223794937133789
    7. ',c' → logprob: -15.223794937133789
    8. ',int' → logprob: -15.348794937133789
    9. ',b' → logprob: -15.598794937133789
    10. '```' → logprob: -15.598794937133789

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010390079842181876
    2. ' ,' → logprob: -9.375103950500488
    3. ',c' → logprob: -11.375103950500488
    4. ',f' → logprob: -13.375103950500488
    5. ',d' → logprob: -13.375103950500488
    6. ',r' → logprob: -14.000103950500488
    7. ',int' → logprob: -14.375103950500488
    8. ',p' → logprob: -14.750103950500488
    9. ',b' → logprob: -14.875103950500488
    10. ',w' → logprob: -15.250103950500488

Token 198: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0002142650482710451
    2. ' comp' → logprob: -9.000214576721191
    3. 'fare' → logprob: -10.000214576721191
    4. 'r' → logprob: -11.500214576721191
    5. 'c' → logprob: -11.750214576721191
    6. '	comp' → logprob: -12.000214576721191
    7. 'p' → logprob: -12.500214576721191
    8. 'com' → logprob: -13.000214576721191
    9. '   ' → logprob: -13.000214576721191
    10. 'compl' → logprob: -13.125214576721191

Token 199: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.696077227592468e-05
    2. ')' → logprob: -9.750077247619629
    3. ' ))' → logprob: -11.500077247619629
    4. '))
' → logprob: -12.000077247619629
    5. ')))' → logprob: -13.750077247619629
    6. '));' → logprob: -14.750077247619629
    7. ',' → logprob: -15.500077247619629
    8. '))

' → logprob: -15.625077247619629
    9. '),' → logprob: -16.125076293945312
    10. '   ' → logprob: -16.250076293945312

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07425913214683533
    2. '<|end|>' → logprob: -2.699259042739868
    3. '
' → logprob: -6.574259281158447
    4. ' adj' → logprob: -6.699259281158447
    5. 'adj' → logprob: -7.074259281158447
    6. '   ' → logprob: -8.199258804321289
    7. '<|end|>' → logprob: -8.449258804321289
    8. ',' → logprob: -8.699258804321289
    9. ')' → logprob: -10.449258804321289
    10. ' ' → logprob: -10.574258804321289

Token 201: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.1602741926908493
    2. 'adj' (adapté à ' adj') → logprob: -1.9102741479873657
    3. '       ' → logprob: -10.160274505615234
    4. '(adj' → logprob: -12.160274505615234
    5. '   ' → logprob: -12.410274505615234
    6. 'ad' → logprob: -14.660274505615234
    7. '    ' → logprob: -14.910274505615234
    8. ' ' → logprob: -15.535274505615234
    9. ' adjacency' → logprob: -15.535274505615234
    10. '_adj' → logprob: -15.660274505615234

Token 202: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.370294846012257e-05
    2. '[' → logprob: -10.500043869018555
    3. '[x' → logprob: -11.250043869018555
    4. '[u' → logprob: -14.500043869018555
    5. ' [' → logprob: -14.625043869018555
    6. 'y' → logprob: -14.750043869018555
    7. '```' → logprob: -14.875043869018555
    8. '[s' → logprob: -15.375043869018555
    9. '[c' → logprob: -16.125043869018555
    10. '[z' → logprob: -16.125043869018555

Token 203: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.018393052741885185
    2. ').' → logprob: -4.268393039703369
    3. '.append' → logprob: -5.768393039703369
    4. '.' → logprob: -6.893393039703369
    5. '   ' → logprob: -10.143393516540527
    6. '       ' → logprob: -10.893393516540527
    7. ']' → logprob: -12.518393516540527
    8. ' ].' → logprob: -12.518393516540527
    9. '.app' → logprob: -12.768393516540527
    10. '[' → logprob: -12.768393516540527

Token 204: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.3856492842023727e-06
    2. '.append' → logprob: -14.375000953674316
    3. ' append' → logprob: -14.500000953674316
    4. 'appen' → logprob: -15.375000953674316
    5. '	append' → logprob: -17.250001907348633
    6. '```' → logprob: -19.625001907348633
    7. 'app' → logprob: -19.875001907348633
    8. 'appe' → logprob: -20.000001907348633
    9. 'add' → logprob: -20.250001907348633
    10. 'Append' → logprob: -20.375001907348633

Token 205: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000581388536375016
    2. '(x' → logprob: -7.75058126449585
    3. ' (' → logprob: -8.875581741333008
    4. '(y' → logprob: -12.500581741333008
    5. ' ((' → logprob: -12.625581741333008
    6. '(' → logprob: -12.750581741333008
    7. ' ' → logprob: -15.375581741333008
    8. ',' → logprob: -15.375581741333008
    9. '(
' → logprob: -15.500581741333008
    10. '[(' → logprob: -16.500581741333008

Token 206: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014186188578605652
    2. '(x' → logprob: -4.264186382293701
    3. ' x' → logprob: -11.764185905456543
    4. '(' → logprob: -11.889185905456543
    5. ' (' → logprob: -12.264185905456543
    6. ',x' → logprob: -13.139185905456543
    7. '(
' → logprob: -14.764185905456543
    8. ',' → logprob: -15.014185905456543
    9. ')x' → logprob: -15.389185905456543
    10. ')' → logprob: -16.63918685913086

Token 207: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.16202539205551147
    2. ',(' → logprob: -2.2870254516601562
    3. ',' → logprob: -3.0370254516601562
    4. ' ,' → logprob: -10.912025451660156
    5. ',y' → logprob: -12.412025451660156
    6. ',
' → logprob: -12.787025451660156
    7. '   ' → logprob: -13.287025451660156
    8. ',[' → logprob: -13.287025451660156
    9. '),(' → logprob: -13.912025451660156
    10. '(d' → logprob: -14.162025451660156

Token 208: ',' (ID: 11)
  Prédit: ',d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.04865901172161102
    2. ',' → logprob: -3.048659086227417
    3. ' ,' → logprob: -9.673659324645996
    4. ',(' → logprob: -12.798659324645996
    5. ',y' → logprob: -12.923659324645996
    6. ',
' → logprob: -14.173659324645996
    7. ',c' → logprob: -14.548659324645996
    8. '   ' → logprob: -14.923659324645996
    9. '       ' → logprob: -15.048659324645996
    10. '))' → logprob: -15.298659324645996

Token 209: 'comp' (ID: 3697)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.474573016166687
    2. 'comp' → logprob: -0.974573016166687
    3. ' comp' → logprob: -8.349573135375977
    4. ' d' → logprob: -9.349573135375977
    5. 'com' → logprob: -10.224573135375977
    6. ',' → logprob: -10.474573135375977
    7. 'cost' → logprob: -10.724573135375977
    8. 'c' → logprob: -10.724573135375977
    9. '(comp' → logprob: -10.849573135375977
    10. '	comp' → logprob: -11.724573135375977

Token 210: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048600319772958755
    2. '))' → logprob: -3.048600435256958
    3. ')}' → logprob: -12.548600196838379
    4. ' )' → logprob: -12.673600196838379
    5. ')
' → logprob: -13.048600196838379
    6. '       ' → logprob: -13.673600196838379
    7. ')))' → logprob: -13.673600196838379
    8. '))
' → logprob: -15.048600196838379
    9. '   ' → logprob: -15.173600196838379
    10. '<|end|>' → logprob: -15.173600196838379

Token 211: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4254508912563324
    2. '   ' → logprob: -1.3004509210586548
    3. '
' → logprob: -2.6754508018493652
    4. '    
' → logprob: -6.175450801849365
    5. '```' → logprob: -6.675450801849365
    6. ' def' → logprob: -7.175450801849365
    7. 'import' → logprob: -7.550450801849365
    8. 'distance' → logprob: -9.050451278686523
    9. 'dist' → logprob: -9.425451278686523
    10. ')' → logprob: -9.550451278686523

Token 212: ' p' (ID: 275)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2575664222240448
    2. 'def' → logprob: -2.257566452026367
    3. 'fare' → logprob: -2.257566452026367
    4. 'distance' → logprob: -5.007566452026367
    5. 'INF' → logprob: -5.507566452026367
    6. 'cost' → logprob: -5.882566452026367
    7. 'dp' → logprob: -7.257566452026367
    8. '   ' → logprob: -7.257566452026367
    9. 'import' → logprob: -7.382566452026367
    10. '
' → logprob: -7.632566452026367

Token 213: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18686731159687042
    2. ',q' → logprob: -1.811867356300354
    3. '=' → logprob: -5.8118672370910645
    4. ' =' → logprob: -5.9368672370910645
    5. ' ,' → logprob: -7.5618672370910645
    6. ',p' → logprob: -8.311867713928223
    7. '=[]' → logprob: -8.686867713928223
    8. ',c' → logprob: -9.061867713928223
    9. ',r' → logprob: -9.686867713928223
    10. ',s' → logprob: -9.936867713928223

Token 214: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.562456488609314
    2. ' [' → logprob: -1.312456488609314
    3. '[int' → logprob: -2.1874566078186035
    4. 'list' → logprob: -3.9374566078186035
    5. '[]' → logprob: -4.8124566078186035
    6. ' []' → logprob: -4.9374566078186035
    7. ' list' → logprob: -5.0624566078186035
    8. '[p' → logprob: -5.3124566078186035
    9. 'int' → logprob: -6.9374566078186035
    10. '[list' → logprob: -7.3124566078186035

Token 215: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.060230180621147156
    2. ',p' → logprob: -4.310230255126953
    3. '=[]' → logprob: -4.685230255126953
    4. '<|end|>' → logprob: -4.685230255126953
    5. '=' → logprob: -4.810230255126953
    6. ' =' → logprob: -5.310230255126953
    7. '.append' → logprob: -5.560230255126953
    8. '[]' → logprob: -6.185230255126953
    9. '   ' → logprob: -6.185230255126953
    10. ',q' → logprob: -6.685230255126953

Token 216: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -1.361750841140747
    2. '[' → logprob: -1.486750841140747
    3. ',' → logprob: -2.236750841140747
    4. '<|end|>' → logprob: -2.361750841140747
    5. ' q' → logprob: -2.986750841140747
    6. ' ' → logprob: -3.111750841140747
    7. '[]' → logprob: -3.236750841140747
    8. ',q' → logprob: -3.486750841140747
    9. 'p' → logprob: -3.611750841140747
    10. '[
' → logprob: -4.486750602722168

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15084326267242432
    2. ',' → logprob: -2.1508431434631348
    3. ' =' → logprob: -4.150843143463135
    4. ',p' → logprob: -5.525843143463135
    5. '=[]' → logprob: -6.150843143463135
    6. ',q' → logprob: -7.025843143463135
    7. '.append' → logprob: -8.025843620300293
    8. '<|end|>' → logprob: -8.275843620300293
    9. '=p' → logprob: -10.275843620300293
    10. ' ,' → logprob: -10.275843620300293

Token 218: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00907859392464161
    2. '[' → logprob: -5.134078502655029
    3. ' []' → logprob: -5.884078502655029
    4. '[]
' → logprob: -8.634078979492188
    5. '<|end|>' → logprob: -9.509078979492188
    6. '=[]' → logprob: -10.009078979492188
    7. '[]}' → logprob: -11.009078979492188
    8. '[int' → logprob: -11.009078979492188
    9. '[:]' → logprob: -11.884078979492188
    10. '[]>' → logprob: -12.384078979492188

Token 219: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2442515790462494
    2. '[' → logprob: -2.3692514896392822
    3. ' r' → logprob: -3.2442514896392822
    4. ',r' → logprob: -3.8692514896392822
    5. '[r' → logprob: -3.9942514896392822
    6. '   ' → logprob: -4.619251728057861
    7. '<|end|>' → logprob: -4.994251728057861
    8. ',' → logprob: -5.369251728057861
    9. '	r' → logprob: -5.369251728057861
    10. ' =' → logprob: -5.494251728057861

Token 220: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.22598601877689362
    2. ' r' → logprob: -1.6009860038757324
    3. '[' → logprob: -7.975986003875732
    4. '[r' → logprob: -9.47598648071289
    5. 'for' → logprob: -10.72598648071289
    6. '   ' → logprob: -10.72598648071289
    7. '[]' → logprob: -10.97598648071289
    8. '_r' → logprob: -11.22598648071289
    9. ' for' → logprob: -11.22598648071289
    10. ' [' → logprob: -11.47598648071289

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20594339072704315
    2. ' =' → logprob: -1.8309433460235596
    3. '=[]' → logprob: -4.205943584442139
    4. '.append' → logprob: -4.580943584442139
    5. '=[]
' → logprob: -8.70594310760498
    6. ',' → logprob: -9.08094310760498
    7. '=[' → logprob: -9.45594310760498
    8. '[]' → logprob: -9.70594310760498
    9. '[' → logprob: -9.83094310760498
    10. '<|end|>' → logprob: -9.83094310760498

Token 222: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0171769130975008
    2. ' []' → logprob: -4.142177104949951
    3. '[' → logprob: -7.142177104949951
    4. 'list' → logprob: -9.267176628112793
    5. '[int' → logprob: -9.642176628112793
    6. '<|end|>' → logprob: -9.892176628112793
    7. '[]
' → logprob: -10.142176628112793
    8. '[]>' → logprob: -10.517176628112793
    9. '=[]' → logprob: -11.017176628112793
    10. '[]}' → logprob: -11.017176628112793

Token 223: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8468838930130005
    2. ' for' → logprob: -1.4718838930130005
    3. '<|end|>' → logprob: -1.8468838930130005
    4. '   ' → logprob: -2.221883773803711
    5. ' 
' → logprob: -3.596883773803711
    6. '
' → logprob: -4.471883773803711
    7. '    
' → logprob: -5.471883773803711
    8. 'while' → logprob: -5.596883773803711
    9. 'n' → logprob: -5.971883773803711
    10. ' while' → logprob: -6.096883773803711

Token 224: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08212346583604813
    2. ' for' → logprob: -2.5821235179901123
    3. 'line' → logprob: -6.332123279571533
    4. 'p' → logprob: -7.332123279571533
    5. '   ' → logprob: -8.332123756408691
    6. ' line' → logprob: -8.957123756408691
    7. 'n' → logprob: -9.582123756408691
    8. 'count' → logprob: -10.207123756408691
    9. '[line' → logprob: -10.457123756408691
    10. ' 
' → logprob: -10.707123756408691

Token 225: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007490088231861591
    2. ' _' → logprob: -5.757490158081055
    3. '_i' → logprob: -5.882490158081055
    4. '_comp' → logprob: -6.507490158081055
    5. '__' → logprob: -11.632490158081055
    6. '_p' → logprob: -12.632490158081055
    7. ' i' → logprob: -13.007490158081055
    8. '_j' → logprob: -13.132490158081055
    9. '___' → logprob: -13.132490158081055
    10. '_c' → logprob: -14.382490158081055

Token 226: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12697672843933105
    2. ' in' → logprob: -2.126976728439331
    3. ' ' → logprob: -10.62697696685791
    4. 'range' → logprob: -11.37697696685791
    5. '  ' → logprob: -13.00197696685791
    6. 'p' → logprob: -13.12697696685791
    7. '(' → logprob: -13.75197696685791
    8. '   ' → logprob: -13.87697696685791
    9. 'i' → logprob: -14.00197696685791
    10. '
' → logprob: -14.00197696685791

Token 227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0059342472814023495
    2. ' range' → logprob: -5.130934238433838
    3. 'p' → logprob: -13.255934715270996
    4. 'map' → logprob: -14.255934715270996
    5. 'input' → logprob: -14.505934715270996
    6. ' ' → logprob: -14.755934715270996
    7. 'r' → logprob: -14.880934715270996
    8. '_' → logprob: -15.505934715270996
    9. '   ' → logprob: -15.630934715270996
    10. '
' → logprob: -15.630934715270996

Token 228: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.014543760567903519
    2. 'c' → logprob: -4.264543533325195
    3. '(' → logprob: -9.264543533325195
    4. ' c' → logprob: -9.389543533325195
    5. ' (' → logprob: -9.764543533325195
    6. '(n' → logprob: -10.014543533325195
    7. '(int' → logprob: -10.389543533325195
    8. 'int' → logprob: -11.014543533325195
    9. '(s' → logprob: -11.639543533325195
    10. 'n' → logprob: -12.139543533325195

Token 229: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.348527193069458
    2. '):' → logprob: -1.223527193069458
    3. '   ' → logprob: -10.348526954650879
    4. '):
' → logprob: -10.723526954650879
    5. '():
' → logprob: -11.973526954650879
    6. ')' → logprob: -11.973526954650879
    7. ' ):
' → logprob: -12.473526954650879
    8. ' ):' → logprob: -12.848526954650879
    9. ':' → logprob: -12.973526954650879
    10. '):

' → logprob: -13.473526954650879

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07467816025018692
    2. 'p' → logprob: -3.4496781826019287
    3. ' p' → logprob: -3.4496781826019287
    4. ',p' → logprob: -5.82467794418335
    5. ',' → logprob: -6.07467794418335
    6. '   ' → logprob: -7.32467794418335
    7. '):
' → logprob: -7.82467794418335
    8. 'tokens' → logprob: -8.449678421020508
    9. 't' → logprob: -9.074678421020508
    10. 'x' → logprob: -9.074678421020508

Token 231: ' pj' (ID: 110041)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.511170506477356
    2. 'pi' → logprob: -2.0111703872680664
    3. 'pp' → logprob: -2.1361703872680664
    4. 'x' → logprob: -3.2611703872680664
    5. 'pc' → logprob: -3.2611703872680664
    6. 'p' → logprob: -3.7611703872680664
    7. 'P' → logprob: -4.386170387268066
    8. 'cp' → logprob: -5.386170387268066
    9. ' a' → logprob: -5.636170387268066
    10. 'comp' → logprob: -5.761170387268066

Token 232: '=int' (ID: 37431)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35798180103302
    2. ',p' → logprob: -1.60798180103302
    3. '.append' → logprob: -2.4829816818237305
    4. ' ,' → logprob: -4.4829816818237305
    5. 'oints' → logprob: -6.4829816818237305
    6. ',int' → logprob: -7.1079816818237305
    7. 'p' → logprob: -7.3579816818237305
    8. 'append' → logprob: -7.4829816818237305
    9. ',q' → logprob: -8.10798168182373
    10. 'oint' → logprob: -8.48298168182373

Token 233: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005583931924775243
    2. 'input' → logprob: -7.500558376312256
    3. '(sys' → logprob: -12.250558853149414
    4. ',input' → logprob: -15.125558853149414
    5. '=input' → logprob: -15.750558853149414
    6. 'sys' → logprob: -15.875558853149414
    7. ' input' → logprob: -16.000558853149414
    8. '(' → logprob: -17.625558853149414
    9. ' (' → logprob: -18.250558853149414
    10. '	input' → logprob: -19.000558853149414

Token 234: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03532497584819794
    2. '())
' → logprob: -3.535325050354004
    3. '()' → logprob: -5.535325050354004
    4. ')' → logprob: -6.535325050354004
    5. '())
' → logprob: -9.910325050354004
    6. '()
' → logprob: -10.535325050354004
    7. '().' → logprob: -10.535325050354004
    8. '())

' → logprob: -10.660325050354004
    9. '(' → logprob: -10.785325050354004
    10. ')
' → logprob: -12.035325050354004

Token 235: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0109024047851562
    2. ',p' → logprob: -1.2609024047851562
    3. 'p' → logprob: -2.2609024047851562
    4. '       ' → logprob: -2.3859024047851562
    5. '   ' → logprob: -3.0109024047851562
    6. ',q' → logprob: -3.1359024047851562
    7. 'q' → logprob: -4.260902404785156
    8. '<|end|>' → logprob: -4.635902404785156
    9. '
' → logprob: -4.760902404785156
    10. ' p' → logprob: -5.135902404785156

Token 236: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0013259568950161338
    2. ' p' → logprob: -7.876326084136963
    3. 'q' → logprob: -8.001325607299805
    4. 'if' → logprob: -8.626325607299805
    5. 'parts' → logprob: -8.751325607299805
    6. 'line' → logprob: -10.251325607299805
    7. 'pq' → logprob: -10.376325607299805
    8. 'params' → logprob: -11.126325607299805
    9. 'pj' → logprob: -11.251325607299805
    10. '   ' → logprob: -11.376325607299805

Token 237: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001942322589457035
    2. '.' → logprob: -6.251942157745361
    3. '.app' → logprob: -11.62694263458252
    4. '.ap' → logprob: -13.00194263458252
    5. 'append' → logprob: -13.50194263458252
    6. ' .' → logprob: -14.37694263458252
    7. '​.' → logprob: -15.50194263458252
    8. '.p' → logprob: -15.62694263458252
    9. '.extend' → logprob: -16.251941680908203
    10. '.add' → logprob: -17.126941680908203

Token 238: '(p' (ID: 2407)
  Prédit: 'pj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pj' → logprob: -0.0017255148850381374
    2. '(p' → logprob: -6.751725673675537
    3. ' pj' → logprob: -7.501725673675537
    4. '(' → logprob: -13.876725196838379
    5. '0' → logprob: -14.001725196838379
    6. 'p' → logprob: -14.626725196838379
    7. 'int' → logprob: -15.126725196838379
    8. '1' → logprob: -15.626725196838379
    9. 'len' → logprob: -16.251726150512695
    10. '(int' → logprob: -16.876726150512695

Token 239: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16051778197288513
    2. ')' → logprob: -1.9105178117752075
    3. ')
' → logprob: -8.410517692565918
    4. '+' → logprob: -11.660517692565918
    5. '[j' → logprob: -11.910517692565918
    6. ',j' → logprob: -12.410517692565918
    7. ')**' → logprob: -12.410517692565918
    8. ')

' → logprob: -12.660517692565918
    9. 'x' → logprob: -12.660517692565918
    10. '<|end|>' → logprob: -12.785517692565918

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019561098888516426
    2. ')
' → logprob: -6.376955986022949
    3. ' )' → logprob: -8.87695598602295
    4. '<|end|>' → logprob: -9.62695598602295
    5. ')p' → logprob: -11.00195598602295
    6. '<|end|>' → logprob: -11.25195598602295
    7. ',' → logprob: -12.75195598602295
    8. ' )
' → logprob: -13.00195598602295
    9. '   ' → logprob: -13.12695598602295
    10. ',p' → logprob: -13.12695598602295

Token 241: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4106030464172363
    2. '<|end|>' → logprob: -1.5356030464172363
    3. 'q' → logprob: -1.9106030464172363
    4. 'line' → logprob: -2.7856030464172363
    5. '
' → logprob: -3.0356030464172363
    6. 'newline' → logprob: -3.6606030464172363
    7. ' q' → logprob: -3.7856030464172363
    8. ' line' → logprob: -3.9106030464172363
    9. '        
' → logprob: -4.410603046417236
    10. '[line' → logprob: -4.410603046417236

Token 242: ' for' (ID: 395)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.3480302095413208
    2. '   ' → logprob: -1.4730302095413208
    3. 'for' (adapté à ' for') → logprob: -1.7230302095413208
    4. '       ' → logprob: -2.2230300903320312
    5. 'qs' → logprob: -2.5980300903320312
    6. ' for' → logprob: -3.0980300903320312
    7. 'l' → logprob: -4.598030090332031
    8. 'line' → logprob: -4.598030090332031
    9. 'qr' → logprob: -4.598030090332031
    10. 'pq' → logprob: -4.723030090332031

Token 243: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01867261901497841
    2. ' _' → logprob: -4.268672466278076
    3. ' range' → logprob: -5.643672466278076
    4. 'range' → logprob: -7.518672466278076
    5. ' in' → logprob: -9.018672943115234
    6. '_p' → logprob: -9.268672943115234
    7. '_range' → logprob: -9.893672943115234
    8. ' pj' → logprob: -10.143672943115234
    9. ' p' → logprob: -10.268672943115234
    10. '_q' → logprob: -11.143672943115234

Token 244: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34847474098205566
    2. 'in' → logprob: -1.2234747409820557
    3. ' ' → logprob: -11.348474502563477
    4. 'n' → logprob: -11.848474502563477
    5. '=' → logprob: -13.598474502563477
    6. '  ' → logprob: -13.973474502563477
    7. ',' → logprob: -14.098474502563477
    8. 'import' → logprob: -14.223474502563477
    9. '
' → logprob: -14.473474502563477
    10. 's' → logprob: -14.473474502563477

Token 245: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02686190977692604
    2. ' range' → logprob: -3.6518619060516357
    3. 'p' → logprob: -8.151862144470215
    4. 'q' → logprob: -8.651862144470215
    5. 'input' → logprob: -9.776862144470215
    6. 'map' → logprob: -11.026862144470215
    7. ' q' → logprob: -11.651862144470215
    8. ' p' → logprob: -12.151862144470215
    9. 'r' → logprob: -12.776862144470215
    10. ' ' → logprob: -13.026862144470215

Token 246: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.29412156343460083
    2. 'c' → logprob: -1.419121503829956
    3. '(' → logprob: -5.419121742248535
    4. ' c' → logprob: -5.794121742248535
    5. '(len' → logprob: -6.169121742248535
    6. 'len' → logprob: -6.419121742248535
    7. '(p' → logprob: -6.919121742248535
    8. '1' → logprob: -8.169121742248535
    9. 'p' → logprob: -9.044121742248535
    10. '0' → logprob: -9.794121742248535

Token 247: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3486863076686859
    2. '):' → logprob: -1.2236863374710083
    3. '):
' → logprob: -10.098686218261719
    4. '():
' → logprob: -10.473686218261719
    5. '+' → logprob: -10.848686218261719
    6. ',' → logprob: -10.848686218261719
    7. ' ):' → logprob: -11.098686218261719
    8. '-' → logprob: -11.223686218261719
    9. ':' → logprob: -11.223686218261719
    10. '1' → logprob: -11.223686218261719

Token 248: '       ' (ID: 309)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1944226026535034
    2. ' q' → logprob: -1.1944226026535034
    3. '       ' → logprob: -1.5694226026535034
    4. 'line' → logprob: -2.819422721862793
    5. ' line' → logprob: -3.194422721862793
    6. '   ' → logprob: -3.569422721862793
    7. '	q' → logprob: -4.444422721862793
    8. 'val' → logprob: -4.819422721862793
    9. ' val' → logprob: -5.444422721862793
    10. ' if' → logprob: -5.444422721862793

Token 249: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.06460031121969223
    2. 'if' → logprob: -3.8146002292633057
    3. ' q' → logprob: -3.8146002292633057
    4. 'val' → logprob: -5.189600467681885
    5. 'line' → logprob: -5.439600467681885
    6. ' if' → logprob: -5.939600467681885
    7. 'v' → logprob: -6.814600467681885
    8. ' line' → logprob: -6.939600467681885
    9. ' val' → logprob: -7.189600467681885
    10. 'vals' → logprob: -7.314600467681885

Token 250: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.015170343220233917
    2. '=' → logprob: -4.765170574188232
    3. '.' → logprob: -5.265170574188232
    4. ' =' → logprob: -7.890170574188232
    5. ' .' → logprob: -8.140170097351074
    6. ',' → logprob: -9.140170097351074
    7. '[i' → logprob: -9.140170097351074
    8. '=input' → logprob: -9.140170097351074
    9. 'append' → logprob: -9.890170097351074
    10. '   ' → logprob: -10.015170097351074

Token 251: '(list' (ID: 13116)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6099018454551697
    2. 'int' → logprob: -1.4849019050598145
    3. '(int' → logprob: -1.7349019050598145
    4. 'p' → logprob: -3.3599019050598145
    5. '(' → logprob: -4.4849019050598145
    6. '0' → logprob: -6.2349019050598145
    7. 'list' → logprob: -7.1099019050598145
    8. '(i' → logprob: -7.2349019050598145
    9. '((' → logprob: -7.3599019050598145
    10. '[int' → logprob: -7.6099019050598145

Token 252: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002997785806655884
    2. '(input' → logprob: -5.877997875213623
    3. ')' → logprob: -10.502997398376465
    4. '(range' → logprob: -10.502997398376465
    5. '())' → logprob: -10.627997398376465
    6. '()' → logprob: -10.752997398376465
    7. '(' → logprob: -11.127997398376465
    8. 'map' → logprob: -11.502997398376465
    9. '(sys' → logprob: -11.627997398376465
    10. '(int' → logprob: -11.752997398376465

Token 253: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008587978780269623
    2. 'int' → logprob: -5.008587837219238
    3. ',int' → logprob: -6.383587837219238
    4. '[int' → logprob: -9.383587837219238
    5. ')' → logprob: -10.258587837219238
    6. '=int' → logprob: -10.508587837219238
    7. ']int' → logprob: -11.258587837219238
    8. ' int' → logprob: -11.633587837219238
    9. '<int' → logprob: -12.383587837219238
    10. ')(' → logprob: -12.758587837219238

Token 254: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0025630532763898373
    2. '(input' → logprob: -6.252562999725342
    3. ',' → logprob: -7.502562999725342
    4. ',int' → logprob: -9.6275634765625
    5. 'input' → logprob: -12.1275634765625
    6. '(),' → logprob: -12.3775634765625
    7. '(int' → logprob: -13.3775634765625
    8. '=input' → logprob: -13.3775634765625
    9. ' ,' → logprob: -13.5025634765625
    10. '   ' → logprob: -13.6275634765625

Token 255: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005181243759579957
    2. '()' → logprob: -7.625518321990967
    3. '()))' → logprob: -10.750517845153809
    4. ' ().' → logprob: -13.000517845153809
    5. ')' → logprob: -13.500517845153809
    6. '()).' → logprob: -14.000517845153809
    7. '()[' → logprob: -14.125517845153809
    8. '))' → logprob: -14.500517845153809
    9. '(' → logprob: -14.625517845153809
    10. '())))' → logprob: -14.875517845153809

Token 256: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.64970643306151e-05
    2. 'strip' → logprob: -9.750086784362793
    3. '().' → logprob: -11.875086784362793
    4. ')' → logprob: -12.125086784362793
    5. 'read' → logprob: -12.625086784362793
    6. '))' → logprob: -12.750086784362793
    7. '()' → logprob: -12.875086784362793
    8. ' split' → logprob: -13.375086784362793
    9. '.split' → logprob: -13.375086784362793
    10. 'rstrip' → logprob: -14.000086784362793

Token 257: '())))
' (ID: 129187)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.7625606656074524
    2. '()))' → logprob: -1.0125606060028076
    3. '()' → logprob: -2.1375606060028076
    4. ')))' → logprob: -3.1375606060028076
    5. '())))
' → logprob: -6.012560844421387
    6. '())).' → logprob: -6.387560844421387
    7. '())' → logprob: -6.387560844421387
    8. '))' → logprob: -6.512560844421387
    9. '())[' → logprob: -7.262560844421387
    10. '()))
' → logprob: -8.137560844421387

Token 258: '   ' (ID: 271)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.40042951703071594
    2. '[' → logprob: -1.7754294872283936
    3. ')[' → logprob: -2.0254294872283936
    4. '()[' → logprob: -4.275429725646973
    5. ')' → logprob: -4.900429725646973
    6. '[q' → logprob: -5.525429725646973
    7. '<|end|>' → logprob: -7.150429725646973
    8. '())[' → logprob: -7.525429725646973
    9. '][' → logprob: -7.900429725646973
    10. '\[' → logprob: -8.400429725646973

Token 259: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25865593552589417
    2. 'j' → logprob: -2.1336560249328613
    3. ' i' → logprob: -2.6336560249328613
    4. 'comp' → logprob: -4.383656024932861
    5. ' j' → logprob: -4.633656024932861
    6. 'ri' → logprob: -5.133656024932861
    7. 'k' → logprob: -5.633656024932861
    8. ' comp' → logprob: -6.383656024932861
    9. 'row' → logprob: -7.258656024932861
    10. '_' → logprob: -8.133655548095703

Token 261: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3489857017993927
    2. 'in' → logprob: -1.2239856719970703
    3. '_' → logprob: -9.22398567199707
    4. '.append' → logprob: -9.34898567199707
    5. '   ' → logprob: -9.72398567199707
    6. '[' → logprob: -9.84898567199707
    7. '0' → logprob: -10.72398567199707
    8. 's' → logprob: -10.84898567199707
    9. '...' → logprob: -11.09898567199707
    10. ',' → logprob: -11.09898567199707

Token 262: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2907645106315613
    2. ' range' → logprob: -1.415764570236206
    3. 'r' → logprob: -4.915764331817627
    4. 'q' → logprob: -6.290764331817627
    5. ' r' → logprob: -8.290764808654785
    6. ' q' → logprob: -9.290764808654785
    7. 'list' → logprob: -10.915764808654785
    8. 'p' → logprob: -12.040764808654785
    9. 'map' → logprob: -12.540764808654785
    10. 'c' → logprob: -12.665764808654785

Token 263: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00014740281039848924
    2. 'c' → logprob: -9.625147819519043
    3. 'range' → logprob: -10.500147819519043
    4. ' (' → logprob: -10.625147819519043
    5. '(len' → logprob: -11.375147819519043
    6. '(' → logprob: -11.625147819519043
    7. '(range' → logprob: -12.875147819519043
    8. '[c' → logprob: -13.500147819519043
    9. 'len' → logprob: -13.750147819519043
    10. ' range' → logprob: -14.125147819519043

Token 264: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0826316550374031
    2. '):
' → logprob: -2.5826315879821777
    3. ':' → logprob: -6.207631587982178
    4. '[' → logprob: -6.957631587982178
    5. ')[' → logprob: -8.582632064819336
    6. '[i' → logprob: -8.832632064819336
    7. '   ' → logprob: -9.082632064819336
    8. ']:' → logprob: -9.582632064819336
    9. '[r' → logprob: -10.207632064819336
    10. '.append' → logprob: -10.457632064819336

Token 265: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2965429425239563
    2. ' r' → logprob: -1.5465428829193115
    3. '   ' → logprob: -3.1715428829193115
    4. '       ' → logprob: -6.796543121337891
    5. '           ' → logprob: -7.921543121337891
    6. '	r' → logprob: -9.67154312133789
    7. 'for' → logprob: -10.67154312133789
    8. '[r' → logprob: -10.67154312133789
    9. ' for' → logprob: -10.92154312133789
    10. ' ' → logprob: -11.29654312133789

Token 266: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.048859063535928726
    2. ' r' → logprob: -3.048859119415283
    3. 'for' → logprob: -8.923858642578125
    4. '   ' → logprob: -9.298858642578125
    5. ' for' → logprob: -10.923858642578125
    6. 'if' → logprob: -11.673858642578125
    7. ' if' → logprob: -12.673858642578125
    8. '
' → logprob: -12.798858642578125
    9. '_r' → logprob: -12.923858642578125
    10. ' ' → logprob: -12.923858642578125

Token 267: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.45837733149528503
    2. '+=' → logprob: -1.2083773612976074
    3. '.append' → logprob: -2.7083773612976074
    4. '.' → logprob: -6.708377361297607
    5. ' +=' → logprob: -7.083377361297607
    6. '=' → logprob: -8.70837688446045
    7. '.=' → logprob: -9.08337688446045
    8. '+=(' → logprob: -11.58337688446045
    9. ' .' → logprob: -12.08337688446045
    10. '+' → logprob: -12.70837688446045

Token 268: '(list' (ID: 13116)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.000591874762903899
    2. ' list' → logprob: -7.75059175491333
    3. 'int' → logprob: -8.750592231750488
    4. '(list' → logprob: -13.375592231750488
    5. 'p' → logprob: -15.625592231750488
    6. 'q' → logprob: -15.625592231750488
    7. 'tuple' → logprob: -15.875592231750488
    8. 'sum' → logprob: -16.000591278076172
    9. ' int' → logprob: -16.125591278076172
    10. 'r' → logprob: -16.250591278076172

Token 269: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.741137283621356e-05
    2. '(int' → logprob: -10.375057220458984
    3. 'map' → logprob: -11.625057220458984
    4. '(' → logprob: -11.875057220458984
    5. ')' → logprob: -12.750057220458984
    6. ',map' → logprob: -13.125057220458984
    7. ')(' → logprob: -14.125057220458984
    8. '(
' → logprob: -14.375057220458984
    9. '   ' → logprob: -14.500057220458984
    10. '[int' → logprob: -14.625057220458984

Token 270: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6966678500175476
    2. '(int' → logprob: -0.6966678500175476
    3. ',int' → logprob: -6.196667671203613
    4. '[int' → logprob: -6.946667671203613
    5. '=int' → logprob: -8.571667671203613
    6. ']int' → logprob: -8.946667671203613
    7. '<int' → logprob: -9.571667671203613
    8. '   ' → logprob: -9.946667671203613
    9. ' int' → logprob: -10.696667671203613
    10. '           ' → logprob: -11.196667671203613

Token 271: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10179810971021652
    2. 'int' → logprob: -2.7267980575561523
    3. ',int' → logprob: -4.101798057556152
    4. ')))' → logprob: -4.601798057556152
    5. '))' → logprob: -6.226798057556152
    6. '[int' → logprob: -6.351798057556152
    7. '=int' → logprob: -7.101798057556152
    8. ')' → logprob: -10.101798057556152
    9. ']int' → logprob: -10.226798057556152
    10. ',' → logprob: -10.226798057556152

Token 272: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00027230256819166243
    2. '()' → logprob: -9.250272750854492
    3. '()))' → logprob: -9.625272750854492
    4. '())' → logprob: -9.750272750854492
    5. '()[' → logprob: -11.375272750854492
    6. '()(' → logprob: -11.375272750854492
    7. '(int' → logprob: -12.125272750854492
    8. '```' → logprob: -12.375272750854492
    9. '=int' → logprob: -12.500272750854492
    10. '(' → logprob: -12.625272750854492

Token 273: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.21110482513904572
    2. 'int' → logprob: -1.7111048698425293
    3. 's' → logprob: -6.086104869842529
    4. '))' → logprob: -6.461104869842529
    5. '1' → logprob: -6.586104869842529
    6. '(int' → logprob: -7.086104869842529
    7. 'strip' → logprob: -7.461104869842529
    8. '
' → logprob: -7.836104869842529
    9. '[int' → logprob: -8.211104393005371
    10. ' ' → logprob: -8.336104393005371

Token 274: '())))
' (ID: 129187)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5138527750968933
    2. '()' → logprob: -2.138852834701538
    3. ')))' → logprob: -2.263852834701538
    4. '))' → logprob: -2.263852834701538
    5. '())))' → logprob: -3.388852834701538
    6. '()[' → logprob: -4.138852596282959
    7. '())[' → logprob: -4.513852596282959
    8. '())' → logprob: -5.138852596282959
    9. ')[' → logprob: -5.638852596282959
    10. '))[' → logprob: -6.138852596282959

Token 275: '   ' (ID: 271)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5035206079483032
    2. '[' → logprob: -1.0035206079483032
    3. '<|end|>' → logprob: -4.878520488739014
    4. '[
' → logprob: -5.128520488739014
    5. '
' → logprob: -5.503520488739014
    6. '[idx' → logprob: -6.378520488739014
    7. ')' → logprob: -6.378520488739014
    8. '[c' → logprob: -6.628520488739014
    9. '   ' → logprob: -7.253520488739014
    10. '[n' → logprob: -7.378520488739014

Token 276: ' fare' (ID: 25285)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09105934202671051
    2. '[i' → logprob: -2.966059446334839
    3. ')' → logprob: -4.34105920791626
    4. '[p' → logprob: -4.84105920791626
    5. '[c' → logprob: -5.84105920791626
    6. '[
' → logprob: -6.21605920791626
    7. '[n' → logprob: -6.71605920791626
    8. '[idx' → logprob: -6.96605920791626
    9. '<|end|>' → logprob: -7.09105920791626
    10. '   ' → logprob: -7.21605920791626

Token 277: '_tables' (ID: 88363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12706449627876282
    2. ' =' → logprob: -2.1270644664764404
    3. '_table' → logprob: -10.12706470489502
    4. '[' → logprob: -10.50206470489502
    5. '_=' → logprob: -10.50206470489502
    6. '=[' → logprob: -11.25206470489502
    7. ' =[' → logprob: -12.50206470489502
    8. '=[]' → logprob: -12.50206470489502
    9. '=f' → logprob: -12.62706470489502
    10. '_tables' → logprob: -12.75206470489502

Token 278: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6329526901245117
    2. '=' → logprob: -0.7579526901245117
    3. '[' → logprob: -8.507952690124512
    4. '=[]' → logprob: -9.507952690124512
    5. 's' → logprob: -10.757952690124512
    6. ')' → logprob: -11.382952690124512
    7. '=[' → logprob: -11.882952690124512
    8. ',' → logprob: -12.382952690124512
    9. '_=' → logprob: -12.382952690124512
    10. '_' → logprob: -12.632952690124512

Token 279: 'None' (ID: 8505)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.13429801166057587
    2. '[]' → logprob: -2.384298086166382
    3. ']' → logprob: -3.509298086166382
    4. ' build' → logprob: -6.384297847747803
    5. '[' → logprob: -6.884297847747803
    6. ' []' → logprob: -7.634297847747803
    7. '[]
' → logprob: -9.884298324584961
    8. '[]

' → logprob: -10.009298324584961
    9. ' ]' → logprob: -10.134298324584961
    10. '(build' → logprob: -10.134298324584961

Token 280: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09672679007053375
    2. ' for' → logprob: -2.846726894378662
    3. 'for' → logprob: -4.221726894378662
    4. ' ]' → logprob: -4.346726894378662
    5. '<|end|>' → logprob: -5.721726894378662
    6. ')' → logprob: -6.721726894378662
    7. ']*' → logprob: -7.471726894378662
    8. ',' → logprob: -7.721726894378662
    9. '<|end|>' → logprob: -7.971726894378662
    10. ')]' → logprob: -8.596726417541504

Token 281: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3850901424884796
    2. 'for' → logprob: -1.3850901126861572
    3. '
' → logprob: -3.3850901126861572
    4. '   ' → logprob: -4.135090351104736
    5. '<|end|>' → logprob: -4.135090351104736
    6. '	for' → logprob: -6.635090351104736
    7. '[' → logprob: -7.510090351104736
    8. '    
' → logprob: -7.510090351104736
    9. ' 
' → logprob: -7.760090351104736
    10. '<|end|>' → logprob: -8.635089874267578

Token 282: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5022256970405579
    2. ' for' → logprob: -1.002225637435913
    3. '[' → logprob: -3.877225637435913
    4. '[]' → logprob: -6.627225875854492
    5. '<|end|>' → logprob: -6.627225875854492
    6. '.append' → logprob: -6.752225875854492
    7. ' =' → logprob: -7.377225875854492
    8. '   ' → logprob: -7.627225875854492
    9. '=' → logprob: -7.627225875854492
    10. '[
' → logprob: -8.002225875854492

Token 283: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00685117719694972
    2. ' i' → logprob: -6.2568511962890625
    3. 'idx' → logprob: -6.3818511962890625
    4. 'ci' → logprob: -6.5068511962890625
    5. 'c' → logprob: -6.8818511962890625
    6. 'comp' → logprob: -8.756851196289062
    7. '_i' → logprob: -8.756851196289062
    8. 'cid' → logprob: -9.256851196289062
    9. 'cost' → logprob: -9.256851196289062
    10. 'city' → logprob: -9.756851196289062

Token 284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043025679886341095
    2. 'in' → logprob: -3.1680257320404053
    3. ',' → logprob: -11.543025970458984
    4. '_in' → logprob: -12.668025970458984
    5. 'import' → logprob: -12.918025970458984
    6. ' ' → logprob: -13.168025970458984
    7. '   ' → logprob: -13.418025970458984
    8. '	in' → logprob: -13.793025970458984
    9. '_' → logprob: -14.043025970458984
    10. ',in' → logprob: -14.168025970458984

Token 285: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019288709154352546
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -16.501928329467773
    4. 'p' → logprob: -16.876928329467773
    5. ' ' → logprob: -17.001928329467773
    6. 'r' → logprob: -17.251928329467773
    7. 'c' → logprob: -17.876928329467773
    8. '   ' → logprob: -18.251928329467773
    9. 'in' → logprob: -18.376928329467773
    10. '  ' → logprob: -19.001928329467773

Token 286: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.03387321159243584
    2. '(' → logprob: -3.4088733196258545
    3. 'c' → logprob: -9.408873558044434
    4. '1' → logprob: -9.658873558044434
    5. ' c' → logprob: -10.658873558044434
    6. ',c' → logprob: -10.783873558044434
    7. ' in' → logprob: -11.033873558044434
    8. ' (' → logprob: -11.533873558044434
    9. ',' → logprob: -12.533873558044434
    10. '(len' → logprob: -13.158873558044434

Token 287: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010519604198634624
    2. '):
' → logprob: -4.635519504547119
    3. '+' → logprob: -7.885519504547119
    4. ' ):' → logprob: -8.260519981384277
    5. ']:' → logprob: -10.385519981384277
    6. '   ' → logprob: -10.635519981384277
    7. ',' → logprob: -10.635519981384277
    8. ':' → logprob: -10.885519981384277
    9. ')' → logprob: -10.885519981384277
    10. '):
' → logprob: -13.010519981384277

Token 288: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46069392561912537
    2. ':' → logprob: -1.3356939554214478
    3. ' fare' → logprob: -2.585693836212158
    4. '):' → logprob: -4.960693836212158
    5. 'fare' → logprob: -5.085693836212158
    6. '[' → logprob: -5.460693836212158
    7. ' =' → logprob: -5.460693836212158
    8. ',' → logprob: -6.085693836212158
    9. ':
' → logprob: -6.210693836212158
    10. '):
' → logprob: -6.585693836212158

Token 289: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' (adapté à ' fare') → logprob: -0.0790824443101883
    2. ' fare' → logprob: -2.579082489013672
    3. '   ' → logprob: -9.079082489013672
    4. 'fa' → logprob: -10.329082489013672
    5. 'f' → logprob: -11.204082489013672
    6. 'for' → logprob: -12.579082489013672
    7. 'fee' → logprob: -12.829082489013672
    8. 'fair' → logprob: -12.829082489013672
    9. 'Fare' → logprob: -12.954082489013672
    10. 'p' → logprob: -13.391582489013672

Token 290: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -1.8908587662735954e-05
    2. '_' → logprob: -12.125019073486328
    3. 'tables' → logprob: -12.625019073486328
    4. '_table' → logprob: -12.750019073486328
    5. '=' → logprob: -13.250019073486328
    6. '=_' → logprob: -13.750019073486328
    7. '[_' → logprob: -13.875019073486328
    8. '_=' → logprob: -14.000019073486328
    9. 'table' → logprob: -14.125019073486328
    10. 's' → logprob: -14.750019073486328

Token 291: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013913080329075456
    2. '.' → logprob: -6.751391410827637
    3. 'append' → logprob: -9.376391410827637
    4. '+=' → logprob: -9.876391410827637
    5. '=' → logprob: -10.126391410827637
    6. ' .' → logprob: -11.001391410827637
    7. '[i' → logprob: -11.126391410827637
    8. '.app' → logprob: -12.626391410827637
    9. '.extend' → logprob: -12.876391410827637
    10. '   ' → logprob: -13.501391410827637

Token 292: '(build' (ID: 71897)
  Prédit: '(build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(build' → logprob: -7.421908958349377e-05
    2. 'build' → logprob: -9.62507438659668
    3. '(' → logprob: -12.00007438659668
    4. '(b' → logprob: -14.00007438659668
    5. ' build' → logprob: -14.12507438659668
    6. ' (' → logprob: -15.50007438659668
    7. '(
' → logprob: -17.12507438659668
    8. '	build' → logprob: -17.50007438659668
    9. '((' → logprob: -18.50007438659668
    10. '.build' → logprob: -19.12507438659668

Token 293: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.125001907348633
    3. ')' → logprob: -14.625001907348633
    4. ' _' → logprob: -14.875001907348633
    5. '_p' → logprob: -16.250001907348633
    6. 'f' → logprob: -16.375001907348633
    7. 'fare' → logprob: -17.125001907348633
    8. '_r' → logprob: -17.125001907348633
    9. ')_' → logprob: -17.125001907348633
    10. '_fee' → logprob: -17.500001907348633

Token 294: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.00011522514978423715
    2. '_are' → logprob: -9.625115394592285
    3. 'fare' → logprob: -10.375115394592285
    4. '_' → logprob: -12.125115394592285
    5. '_f' → logprob: -12.250115394592285
    6. 'ar' → logprob: -13.000115394592285
    7. 'air' → logprob: -13.125115394592285
    8. 're' → logprob: -14.625115394592285
    9. ' fare' → logprob: -15.250115394592285
    10. '(' → logprob: -15.250115394592285

Token 295: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -1.4736459888808895e-05
    2. '_tables' → logprob: -11.500014305114746
    3. 'table' → logprob: -12.375014305114746
    4. '_TABLE' → logprob: -15.875014305114746
    5. '_tab' → logprob: -16.750015258789062
    6. '_tbl' → logprob: -17.750015258789062
    7. '_t' → logprob: -18.125015258789062
    8. 'Table' → logprob: -18.625015258789062
    9. '_Table' → logprob: -18.625015258789062
    10. '_list' → logprob: -18.750015258789062

Token 296: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00010604646377032623
    2. '(' → logprob: -9.625105857849121
    3. ' (' → logprob: -10.500105857849121
    4. ')' → logprob: -11.875105857849121
    5. '((' → logprob: -13.375105857849121
    6. ')(' → logprob: -13.500105857849121
    7. '(
' → logprob: -13.625105857849121
    8. '   ' → logprob: -14.375105857849121
    9. 'p' → logprob: -16.125106811523438
    10. ' ' → logprob: -16.250106811523438

Token 297: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. ',' → logprob: -14.750000953674316
    3. '[' → logprob: -14.750000953674316
    4. 'r' → logprob: -16.125001907348633
    5. 'q' → logprob: -16.375001907348633
    6. 'p' → logprob: -16.750001907348633
    7. ',q' → logprob: -16.750001907348633
    8. 'i' → logprob: -17.250001907348633
    9. ' [' → logprob: -17.875001907348633
    10. '[q' → logprob: -18.000001907348633

Token 298: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006463355850428343
    2. ',q' → logprob: -5.131463527679443
    3. ' ,' → logprob: -8.131463050842285
    4. '[i' → logprob: -8.506463050842285
    5. '[q' → logprob: -10.506463050842285
    6. ',r' → logprob: -12.756463050842285
    7. '[],' → logprob: -13.006463050842285
    8. ',p' → logprob: -13.506463050842285
    9. '[' → logprob: -14.006463050842285
    10. '   ' → logprob: -14.256463050842285

Token 299: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.11287832260131836
    2. ' q' → logprob: -2.2378783226013184
    3. '[q' → logprob: -11.487878799438477
    4. ' ' → logprob: -11.862878799438477
    5. '   ' → logprob: -12.112878799438477
    6. '    ' → logprob: -12.237878799438477
    7. ' [' → logprob: -12.237878799438477
    8. 'r' → logprob: -12.487878799438477
    9. '	q' → logprob: -12.487878799438477
    10. '[' → logprob: -12.612878799438477

Token 300: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.75000286102295
    3. ' [' → logprob: -16.000003814697266
    4. '```' → logprob: -17.000003814697266
    5. '
' → logprob: -17.750003814697266
    6. ' ' → logprob: -18.250003814697266
    7. '[-' → logprob: -18.250003814697266
    8. ',' → logprob: -18.375003814697266
    9. '[
' → logprob: -18.500003814697266
    10. '[s' → logprob: -18.500003814697266

Token 301: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14695273339748383
    2. '],' → logprob: -2.0219526290893555
    3. ' ,' → logprob: -6.5219526290893555
    4. '[i' → logprob: -6.8969526290893555
    5. ',i' → logprob: -7.3969526290893555
    6. '][' → logprob: -8.021952629089355
    7. '   ' → logprob: -8.271952629089355
    8. ']' → logprob: -9.021952629089355
    9. ',r' → logprob: -9.021952629089355
    10. ' ],' → logprob: -9.396952629089355

Token 302: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11282698810100555
    2. ' r' → logprob: -2.2378270626068115
    3. '   ' → logprob: -12.98782730102539
    4. ' ' → logprob: -14.48782730102539
    5. '	r' → logprob: -14.61282730102539
    6. '[r' → logprob: -14.86282730102539
    7. '    ' → logprob: -15.61282730102539
    8. '     ' → logprob: -15.86282730102539
    9. '       ' → logprob: -15.98782730102539
    10. '  ' → logprob: -16.11282730102539

Token 303: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.75
    3. 'i' → logprob: -15.875
    4. ')' → logprob: -16.375
    5. ' [' → logprob: -17.5
    6. '```' → logprob: -17.5
    7. ' i' → logprob: -17.875
    8. ')[' → logprob: -18.625
    9. '(i' → logprob: -19.75
    10. '[
' → logprob: -20.0

Token 304: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -4.668304245569743e-05
    2. ')' → logprob: -10.875046730041504
    3. '[i' → logprob: -11.125046730041504
    4. ' ))' → logprob: -12.000046730041504
    5. ')))' → logprob: -12.875046730041504
    6. '))
' → logprob: -13.000046730041504
    7. '[' → logprob: -13.875046730041504
    8. ']))' → logprob: -15.375046730041504
    9. ')[' → logprob: -15.750046730041504
    10. '])' → logprob: -16.000045776367188

Token 305: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002595276804640889
    2. '
' → logprob: -6.6275954246521
    3. 'dist' → logprob: -7.2525954246521
    4. 'import' → logprob: -8.877594947814941
    5. 'distance' → logprob: -8.877594947814941
    6. '   ' → logprob: -9.627594947814941
    7. ')' → logprob: -10.002594947814941
    8. 'cost' → logprob: -10.377594947814941
    9. '```' → logprob: -10.377594947814941
    10. ' def' → logprob: -10.377594947814941

Token 307: ' State' (ID: 5388)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12999354302883148
    2. 'dist' → logprob: -2.504993438720703
    3. ' dist' → logprob: -4.254993438720703
    4. 'import' → logprob: -5.004993438720703
    5. ' def' → logprob: -5.004993438720703
    6. 'distance' → logprob: -5.129993438720703
    7. '
' → logprob: -6.254993438720703
    8. '   ' → logprob: -6.629993438720703
    9. 'cost' → logprob: -6.879993438720703
    10. 'visited' → logprob: -7.504993438720703

Token 308: ':' (ID: 25)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4448300898075104
    2. 'dist' → logprob: -1.819830060005188
    3. ' dist' → logprob: -2.9448301792144775
    4. 'heap' → logprob: -3.0698301792144775
    5. ' heap' → logprob: -3.1948301792144775
    6. ' import' → logprob: -4.319829940795898
    7. ' =' → logprob: -4.819829940795898
    8. '   ' → logprob: -5.319829940795898
    9. 'cost' → logprob: -5.319829940795898
    10. 'distance' → logprob: -5.319829940795898

Token 309: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.580643892288208
    2. 'heap' → logprob: -1.580643892288208
    3. 'dist' → logprob: -2.705643892288208
    4. ' heap' → logprob: -2.955643892288208
    5. ' (' → logprob: -3.330643892288208
    6. '(heap' → logprob: -3.705643892288208
    7. ' dist' → logprob: -4.330643653869629
    8. ' import' → logprob: -4.705643653869629
    9. 'distance' → logprob: -4.955643653869629
    10. '(s' → logprob: -5.330643653869629

Token 310: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.035942379385232925
    2. 'dist' → logprob: -3.785942316055298
    3. 'distance' → logprob: -5.160942554473877
    4. ' cost' → logprob: -6.160942554473877
    5. ')' → logprob: -6.785942554473877
    6. 'c' → logprob: -6.910942554473877
    7. ' dist' → logprob: -7.535942554473877
    8. 'd' → logprob: -7.660942554473877
    9. 'current' → logprob: -7.910942554473877
    10. 'total' → logprob: -8.160942077636719

Token 311: '_so' (ID: 98189)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003565575461834669
    2. ' ,' → logprob: -8.375356674194336
    3. ',
' → logprob: -10.125356674194336
    4. ')' → logprob: -10.125356674194336
    5. '<|end|>' → logprob: -11.750356674194336
    6. ',current' → logprob: -12.375356674194336
    7. ',node' → logprob: -12.500356674194336
    8. ',)' → logprob: -12.750356674194336
    9. ',state' → logprob: -12.750356674194336
    10. ',int' → logprob: -13.000356674194336

Token 312: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.06384089589118958
    2. 'far' → logprob: -3.938840866088867
    3. '_' → logprob: -4.063840866088867
    4. 'ur' → logprob: -4.063840866088867
    5. '_f' → logprob: -6.313840866088867
    6. 'u' → logprob: -6.438840866088867
    7. ',' → logprob: -6.563840866088867
    8. '_,' → logprob: -6.563840866088867
    9. 'f' → logprob: -6.938840866088867
    10. ')' → logprob: -8.438840866088867

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020652047533076257
    2. ' ,' → logprob: -8.87520694732666
    3. ',current' → logprob: -11.00020694732666
    4. ',
' → logprob: -11.62520694732666
    5. ',state' → logprob: -11.62520694732666
    6. 'cost' → logprob: -12.50020694732666
    7. ')' → logprob: -12.62520694732666
    8. ',n' → logprob: -13.00020694732666
    9. '   ' → logprob: -13.00020694732666
    10. ',next' → logprob: -13.12520694732666

Token 314: ' station' (ID: 11538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7337477207183838
    2. 'node' → logprob: -0.8587477207183838
    3. ' current' → logprob: -2.983747720718384
    4. ' node' → logprob: -3.858747720718384
    5. 'distance' → logprob: -4.483747482299805
    6. 's' → logprob: -5.483747482299805
    7. 'cost' → logprob: -5.608747482299805
    8. 'curr' → logprob: -6.358747482299805
    9. 'cur' → logprob: -6.483747482299805
    10. 'city' → logprob: -7.233747482299805

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007331048138439655
    2. ')' → logprob: -5.132330894470215
    3. ',current' → logprob: -7.632330894470215
    4. ' ,' → logprob: -8.632330894470215
    5. ',node' → logprob: -8.882330894470215
    6. '<|end|>' → logprob: -9.132330894470215
    7. ',user' → logprob: -9.257330894470215
    8. ',u' → logprob: -9.382330894470215
    9. ',state' → logprob: -10.007330894470215
    10. ',index' → logprob: -10.382330894470215

Token 316: ' current' (ID: 2208)
  Prédit: 'fuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fuel' → logprob: -1.5496561527252197
    2. 'tickets' → logprob: -1.7996561527252197
    3. 'cost' → logprob: -2.0496561527252197
    4. 'cou' → logprob: -2.5496561527252197
    5. 'fare' → logprob: -2.9246561527252197
    6. 'c' → logprob: -3.4246561527252197
    7. 'used' → logprob: -3.6746561527252197
    8. 'capacity' → logprob: -3.9246561527252197
    9. 'remaining' → logprob: -3.9246561527252197
    10. 'total' → logprob: -4.049655914306641

Token 317: '_company' (ID: 77215)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.7134327292442322
    2. 'comp' → logprob: -1.713432788848877
    3. 'line' → logprob: -2.588432788848877
    4. 'component' → logprob: -2.838432788848877
    5. 'car' → logprob: -3.588432788848877
    6. 'ticket' → logprob: -3.713432788848877
    7. ' line' → logprob: -4.213432788848877
    8. 'card' → logprob: -4.338432788848877
    9. 'cost' → logprob: -4.463432788848877
    10. '_comp' → logprob: -4.713432788848877

Token 318: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05617835000157356
    2. ',' → logprob: -2.931178331375122
    3. ',state' → logprob: -7.306178569793701
    4. ')
' → logprob: -8.306178092956543
    5. '_cost' → logprob: -9.056178092956543
    6. '_state' → logprob: -9.431178092956543
    7. 'state' → logprob: -10.056178092956543
    8. '   ' → logprob: -10.556178092956543
    9. 'cost' → logprob: -10.931178092956543
    10. '_states' → logprob: -11.181178092956543

Token 319: ' current' (ID: 2208)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -1.4284858703613281
    2. 'current' → logprob: -1.4284858703613281
    3. ' path' → logprob: -1.9284858703613281
    4. ' current' → logprob: -2.803485870361328
    5. 'cost' → logprob: -3.053485870361328
    6. 'fare' → logprob: -3.553485870361328
    7. ')' → logprob: -3.678485870361328
    8. 'used' → logprob: -3.803485870361328
    9. 'tickets' → logprob: -3.803485870361328
    10. 'company' → logprob: -4.428485870361328

Token 320: '_dist' (ID: 37968)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.5066384673118591
    2. ')' → logprob: -1.631638526916504
    3. '_f' → logprob: -2.631638526916504
    4. '_' → logprob: -3.381638526916504
    5. '_time' → logprob: -4.256638526916504
    6. '_company' → logprob: -4.256638526916504
    7. '_)' → logprob: -4.631638526916504
    8. '_mode' → logprob: -5.006638526916504
    9. '_price' → logprob: -5.256638526916504
    10. '_distance' → logprob: -5.381638526916504

Token 321: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20807988941669464
    2. 'ance' → logprob: -1.7080799341201782
    3. '_)' → logprob: -6.208079814910889
    4. ')_' → logprob: -6.458079814910889
    5. ',' → logprob: -6.583079814910889
    6. '_' → logprob: -6.833079814910889
    7. ' )' → logprob: -8.333080291748047
    8. ',)' → logprob: -9.833080291748047
    9. 'e' → logprob: -10.083080291748047
    10. 'ANCE' → logprob: -10.458080291748047

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010792183689773083
    2. ',' → logprob: -6.010792255401611
    3. 'import' → logprob: -6.135792255401611
    4. ')' → logprob: -6.260792255401611
    5. 'heap' → logprob: -6.760792255401611
    6. '    
' → logprob: -7.510792255401611
    7. 'def' → logprob: -7.885792255401611
    8. '
' → logprob: -7.885792255401611
    9. 'while' → logprob: -8.260791778564453
    10. 'cost' → logprob: -8.260791778564453

Token 323: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4457811415195465
    2. 'heap' → logprob: -1.0707811117172241
    3. ' heap' → logprob: -5.445781230926514
    4. 'hq' → logprob: -5.695781230926514
    5. 'pq' → logprob: -5.945781230926514
    6. ' import' → logprob: -6.070781230926514
    7. '   ' → logprob: -6.570781230926514
    8. 'dist' → logprob: -6.820781230926514
    9. 'h' → logprob: -7.570781230926514
    10. 'dp' → logprob: -7.945781230926514

Token 324: ' current' (ID: 2208)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09221035242080688
    2. 'heap' → logprob: -2.717210292816162
    3. 'def' → logprob: -4.217210292816162
    4. ' import' → logprob: -6.092210292816162
    5. 'hq' → logprob: -6.092210292816162
    6. 'pq' → logprob: -7.592210292816162
    7. ' heap' → logprob: -7.717210292816162
    8. '   ' → logprob: -7.842210292816162
    9. 'from' → logprob: -8.21721076965332
    10. 'queue' → logprob: -8.21721076965332

Token 325: '_company' (ID: 77215)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.19804838299751282
    2. '_' → logprob: -1.8230483531951904
    3. '_dist' → logprob: -5.3230485916137695
    4. '_company' → logprob: -5.3230485916137695
    5. '_distance' → logprob: -6.0730485916137695
    6. '_f' → logprob: -6.1980485916137695
    7. ')' → logprob: -7.3230485916137695
    8. '_comp' → logprob: -7.3230485916137695
    9. '_state' → logprob: -7.9480485916137695
    10. '_)' → logprob: -8.07304859161377

Token 326: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9656822085380554
    2. ' =' → logprob: -0.9656822085380554
    3. '=' → logprob: -1.7156822681427002
    4. ')' → logprob: -3.2156822681427
    5. '=None' → logprob: -5.215682029724121
    6. '<|end|>' → logprob: -6.090682029724121
    7. ' is' → logprob: -6.215682029724121
    8. ',current' → logprob: -6.590682029724121
    9. ',
' → logprob: -6.590682029724121
    10. 'import' → logprob: -6.965682029724121

Token 327: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31875401735305786
    2. '-' → logprob: -2.693753957748413
    3. 'None' → logprob: -2.693753957748413
    4. ' ' → logprob: -3.068753957748413
    5. ' None' → logprob: -3.068753957748413
    6. ' -' → logprob: -3.693753957748413
    7. 'int' → logprob: -4.318754196166992
    8. ' int' → logprob: -5.193754196166992
    9. 'c' → logprob: -7.568754196166992
    10. ' c' → logprob: -8.568754196166992

Token 328: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6743708252906799
    2. '0' → logprob: -1.2993707656860352
    3. 'int' → logprob: -2.049370765686035
    4. 'None' → logprob: -2.424370765686035
    5. 'c' → logprob: -9.174370765686035
    6. 'none' → logprob: -9.299370765686035
    7. ' -' → logprob: -9.924370765686035
    8. ' None' → logprob: -10.299370765686035
    9. '1' → logprob: -10.424370765686035
    10. 'initial' → logprob: -10.549370765686035

Token 329: ' means' (ID: 4748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.15569794178009033
    2. 'any' → logprob: -2.405697822570801
    3. ' no' → logprob: -3.280697822570801
    4. 'none' → logprob: -5.155697822570801
    5. 'not' → logprob: -5.530697822570801
    6. 'start' → logprob: -5.905697822570801
    7. 'starting' → logprob: -6.405697822570801
    8. 'initial' → logprob: -7.280697822570801
    9. ' any' → logprob: -7.655697822570801
    10. 'None' → logprob: -7.780697822570801

Token 331: ' current' (ID: 2208)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.3975455164909363
    2. ' company' → logprob: -1.772545576095581
    3. 'current' → logprob: -2.772545576095581
    4. ' current' → logprob: -2.772545576095581
    5. 'space' → logprob: -4.022545337677002
    6. '_company' → logprob: -5.022545337677002
    7. 't' → logprob: -6.647545337677002
    8. ' space' → logprob: -7.022545337677002
    9. '<|end|>' → logprob: -7.022545337677002
    10. ' preferred' → logprob: -7.147545337677002

Token 332: ' company' (ID: 3175)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.15370140969753265
    2. ' company' → logprob: -2.1537013053894043
    3. '_company' → logprob: -3.6537013053894043
    4. '_' → logprob: -8.403701782226562
    5. 'line' → logprob: -9.903701782226562
    6. ' ' → logprob: -10.653701782226562
    7. '```' → logprob: -10.653701782226562
    8. 'carrier' → logprob: -10.653701782226562
    9. ' line' → logprob: -10.903701782226562
    10. '-company' → logprob: -10.903701782226562

Token 333: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.580752432346344
    2. 'while' → logprob: -2.080752372741699
    3. 'cost' → logprob: -2.205752372741699
    4. ' while' → logprob: -2.455752372741699
    5. ' 
' → logprob: -3.830752372741699
    6. ',' → logprob: -3.955752372741699
    7. ' cost' → logprob: -4.205752372741699
    8. ')' → logprob: -4.580752372741699
    9. 'import' → logprob: -4.705752372741699
    10. '  
' → logprob: -4.955752372741699

Token 334: 'start' (ID: 5236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044830769184045494
    2. ' )' → logprob: -8.125448226928711
    3. ',' → logprob: -10.250448226928711
    4. 'state' → logprob: -10.500448226928711
    5. ')
' → logprob: -10.875448226928711
    6. '),' → logprob: -11.375448226928711
    7. 'current' → logprob: -11.625448226928711
    8. '0' → logprob: -11.875448226928711
    9. ' starting' → logprob: -12.125448226928711
    10. 'None' → logprob: -12.625448226928711

Token 335: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022022522171027958
    2. ' )' → logprob: -9.37522029876709
    3. ',' → logprob: -9.50022029876709
    4. '),' → logprob: -11.25022029876709
    5. 'state' → logprob: -11.50022029876709
    6. ')
' → logprob: -11.62522029876709
    7. '_)' → logprob: -11.62522029876709
    8. ' state' → logprob: -12.12522029876709
    9. '_' → logprob: -12.12522029876709
    10. ' at' → logprob: -13.50022029876709

Token 336: ' after' (ID: 1934)
  Prédit: ' transfer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' transfer' → logprob: -1.462766170501709
    2. 'switch' → logprob: -1.712766170501709
    3. 'change' → logprob: -2.087766170501709
    4. ' reset' → logprob: -2.212766170501709
    5. ' switch' → logprob: -2.462766170501709
    6. ' switching' → logprob: -2.962766170501709
    7. 'transfer' → logprob: -3.087766170501709
    8. 'reset' → logprob: -3.587766170501709
    9. ' restart' → logprob: -3.837766170501709
    10. ' change' → logprob: -3.837766170501709

Token 337: ' switching' (ID: 45236)
  Prédit: ' transfer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transfer' → logprob: -0.9202653169631958
    2. 'transfer' → logprob: -1.4202653169631958
    3. 'switch' → logprob: -2.0452651977539062
    4. ' a' → logprob: -2.7952651977539062
    5. 'a' → logprob: -3.1702651977539062
    6. 'change' → logprob: -3.4202651977539062
    7. ' switching' → logprob: -3.5452651977539062
    8. ' switch' → logprob: -4.045265197753906
    9. 'changing' → logprob: -4.670265197753906
    10. 'reset' → logprob: -5.295265197753906

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.579495235811919e-05
    2. ' )' → logprob: -10.12509536743164
    3. ')
' → logprob: -10.62509536743164
    4. 'company' → logprob: -11.62509536743164
    5. 'state' → logprob: -12.12509536743164
    6. '),' → logprob: -12.37509536743164
    7. ' state' → logprob: -12.50009536743164
    8. ' company' → logprob: -13.00009536743164
    9. '_company' → logprob: -13.75009536743164
    10. ',' → logprob: -13.87509536743164

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13010302186012268
    2. 'while' → logprob: -3.63010311126709
    3. 'heap' → logprob: -3.75510311126709
    4. 'import' → logprob: -3.75510311126709
    5. 'cost' → logprob: -3.88010311126709
    6. '
' → logprob: -4.88010311126709
    7. 'pq' → logprob: -5.13010311126709
    8. ' while' → logprob: -6.13010311126709
    9. 'def' → logprob: -6.13010311126709
    10. 'dist' → logprob: -6.50510311126709

Token 340: ' INF' (ID: 69196)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9186220169067383
    2. 'heap' → logprob: -1.4186220169067383
    3. 'cost' → logprob: -1.6686220169067383
    4. 'import' → logprob: -3.0436220169067383
    5. 'pq' → logprob: -3.0436220169067383
    6. ' heap' → logprob: -3.9186220169067383
    7. 'while' → logprob: -4.418622016906738
    8. 'queue' → logprob: -4.793622016906738
    9. 'dist' → logprob: -4.793622016906738
    10. ' cost' → logprob: -4.918622016906738

Token 341: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759462714195251
    2. '=' → logprob: -0.8259462714195251
    3. '=int' → logprob: -12.700945854187012
    4. ')' → logprob: -13.325945854187012
    5. ',' → logprob: -14.200945854187012
    6. '   ' → logprob: -15.075945854187012
    7. '＝' → logprob: -15.200945854187012
    8. '_' → logprob: -15.200945854187012
    9. ' =
' → logprob: -15.950945854187012
    10. '=float' → logprob: -16.075946807861328

Token 342: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06834104657173157
    2. 'float' → logprob: -2.818341016769409
    3. 'int' → logprob: -5.068341255187988
    4. '1' → logprob: -9.943341255187988
    5. 'sys' → logprob: -12.193341255187988
    6. '100' → logprob: -12.318341255187988
    7. ' float' → logprob: -13.318341255187988
    8. ' ' → logprob: -14.443341255187988
    9. '987' → logprob: -15.318341255187988
    10. '999' → logprob: -16.568340301513672

Token 343: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002004410926019773
    2. '10' → logprob: -9.000200271606445
    3. '15' → logprob: -9.875200271606445
    4. '12' → logprob: -11.625200271606445
    5. '18' → logprob: -11.625200271606445
    6. '**' → logprob: -12.125200271606445
    7. '09' → logprob: -13.250200271606445
    8. '14' → logprob: -15.000200271606445
    9. '13' → logprob: -16.000200271606445
    10. '7' → logprob: -17.375200271606445

Token 344: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.16266243159770966
    2. '15' → logprob: -1.912662386894226
    3. '10' → logprob: -6.537662506103516
    4. '18' → logprob: -7.662662506103516
    5. '12' → logprob: -8.037662506103516
    6. '14' → logprob: -9.162662506103516
    7. '16' → logprob: -10.162662506103516
    8. '13' → logprob: -10.537662506103516
    9. '11' → logprob: -11.537662506103516
    10. '7' → logprob: -11.912662506103516

Token 345: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09945796430110931
    2. 'distance' → logprob: -2.7244579792022705
    3. '
' → logprob: -4.099457740783691
    4. 'import' → logprob: -4.599457740783691
    5. ' dist' → logprob: -7.099457740783691
    6. '   ' → logprob: -7.224457740783691
    7. 'heap' → logprob: -8.474457740783691
    8. 'cost' → logprob: -8.974457740783691
    9. 'dp' → logprob: -9.224457740783691
    10. 'pq' → logprob: -9.599457740783691

Token 346: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.019744152203202248
    2. 'import' → logprob: -5.019743919372559
    3. 'distance' → logprob: -5.144743919372559
    4. 'def' → logprob: -5.769743919372559
    5. '   ' → logprob: -6.019743919372559
    6. 'dp' → logprob: -7.269743919372559
    7. 'cost' → logprob: -7.644743919372559
    8. 'heap' → logprob: -8.894743919372559
    9. 'while' → logprob: -9.769743919372559
    10. 'from' → logprob: -9.769743919372559

Token 347: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.06501840800046921
    2. 'import' → logprob: -3.56501841545105
    3. 'def' → logprob: -3.56501841545105
    4. 'distance' → logprob: -5.940018177032471
    5. 'dp' → logprob: -6.315018177032471
    6. 'while' → logprob: -7.565018177032471
    7. 'heap' → logprob: -7.940018177032471
    8. 'cost' → logprob: -8.065018653869629
    9. '   ' → logprob: -8.190018653869629
    10. 'from' → logprob: -8.815018653869629

Token 348: '=[[' (ID: 112637)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5804213881492615
    2. ' =' → logprob: -0.8304213881492615
    3. '=[' → logprob: -5.455421447753906
    4. '=[[' → logprob: -9.455421447753906
    5. '[' → logprob: -9.830421447753906
    6. ' =[' → logprob: -9.955421447753906
    7. '=[]' → logprob: -12.205421447753906
    8. ')' → logprob: -13.205421447753906
    9. '＝' → logprob: -13.455421447753906
    10. '=[
' → logprob: -13.455421447753906

Token 349: ' [' (ID: 723)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.20152969658374786
    2. '[' → logprob: -1.7015297412872314
    3. '(' → logprob: -9.951529502868652
    4. ' [' → logprob: -10.326529502868652
    5. '(IN' → logprob: -11.326529502868652
    6. ' INF' → logprob: -11.826529502868652
    7. '[(' → logprob: -12.326529502868652
    8. '{' → logprob: -12.701529502868652
    9. 'inf' → logprob: -13.076529502868652
    10. '[[' → logprob: -13.951529502868652

Token 350: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: 0.0
    2. ' INF' → logprob: -18.0
    3. 'inf' → logprob: -18.125
    4. '_INF' → logprob: -19.5
    5. '-INF' → logprob: -20.125
    6. ']' → logprob: -20.625
    7. 'Inf' → logprob: -20.625
    8. '0' → logprob: -21.875
    9. 'IN' → logprob: -22.25
    10. '   ' → logprob: -22.375

Token 351: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5624911785125732
    2. ']*(' → logprob: -1.0624911785125732
    3. ']*' → logprob: -2.6874911785125732
    4. ' for' → logprob: -4.312491416931152
    5. 'for' → logprob: -5.937491416931152
    6. ',' → logprob: -8.812491416931152
    7. ']+' → logprob: -9.312491416931152
    8. ' ]' → logprob: -9.437491416931152
    9. ')' → logprob: -9.812491416931152
    10. '   ' → logprob: -9.937491416931152

Token 352: '201' (ID: 667)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0008296403102576733
    2. 'max' → logprob: -7.875829696655273
    3. '101' → logprob: -8.625829696655273
    4. 'p' → logprob: -8.750829696655273
    5. 'q' → logprob: -10.000829696655273
    6. ' ' → logprob: -11.125829696655273
    7. '110' → logprob: -11.125829696655273
    8. '200' → logprob: -12.250829696655273
    9. '500' → logprob: -13.000829696655273
    10. '105' → logprob: -13.000829696655273

Token 353: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004039785999339074
    2. ')]' → logprob: -8.000404357910156
    3. ')
' → logprob: -9.875404357910156
    4. ' )' → logprob: -12.125404357910156
    5. ')])' → logprob: -12.500404357910156
    6. '))' → logprob: -13.750404357910156
    7. '```' → logprob: -14.250404357910156
    8. ')

' → logprob: -14.250404357910156
    9. ')]
' → logprob: -14.375404357910156
    10. ')][' → logprob: -14.500404357910156

Token 354: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01295950636267662
    2. 'for' → logprob: -4.3879594802856445
    3. ')' → logprob: -7.8879594802856445
    4. ']' → logprob: -10.262959480285645
    5. '	for' → logprob: -11.262959480285645
    6. '   ' → logprob: -11.887959480285645
    7. ' )' → logprob: -12.012959480285645
    8. ')]' → logprob: -12.012959480285645
    9. ' ' → logprob: -12.512959480285645
    10. ' ]' → logprob: -12.762959480285645

Token 355: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1002185270190239
    2. '_' → logprob: -2.3502185344696045
    3. '_j' → logprob: -12.975218772888184
    4. ' in' → logprob: -13.350218772888184
    5. '_c' → logprob: -13.475218772888184
    6. '__' → logprob: -13.975218772888184
    7. 'j' → logprob: -13.975218772888184
    8. 'n' → logprob: -14.225218772888184
    9. ' __' → logprob: -14.350218772888184
    10. ' j' → logprob: -14.350218772888184

Token 356: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003526898566633463
    2. 'in' → logprob: -5.75352668762207
    3. '_' → logprob: -8.25352668762207
    4. '_in' → logprob: -9.62852668762207
    5. ' _' → logprob: -11.75352668762207
    6. 'n' → logprob: -12.00352668762207
    7. ' ' → logprob: -12.37852668762207
    8. '	in' → logprob: -13.87852668762207
    9. '_n' → logprob: -14.00352668762207
    10. 'i' → logprob: -14.50352668762207

Token 357: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931791305541992
    2. 'range' → logprob: -0.6931791305541992
    3. '(range' → logprob: -10.4431791305542
    4. '_range' → logprob: -13.6931791305542
    5. 'n' → logprob: -14.1931791305542
    6. '_' → logprob: -14.5681791305542
    7. '   ' → logprob: -15.9431791305542
    8. '	range' → logprob: -16.193180084228516
    9. ' in' → logprob: -16.443180084228516
    10. '(n' → logprob: -16.568180084228516

Token 358: '(c' (ID: 2410)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003733542689587921
    2. 'n' → logprob: -8.125372886657715
    3. '(' → logprob: -10.000372886657715
    4. ' (' → logprob: -10.625372886657715
    5. '((' → logprob: -12.625372886657715
    6. '(c' → logprob: -13.375372886657715
    7. '   ' → logprob: -13.625372886657715
    8. ',n' → logprob: -15.125372886657715
    9. '(N' → logprob: -15.250372886657715
    10. ' n' → logprob: -15.375372886657715

Token 359: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9385402993066236e-05
    2. ' +' → logprob: -10.875019073486328
    3. '+
' → logprob: -15.000019073486328
    4. ')]' → logprob: -16.875019073486328
    5. '+)' → logprob: -18.500019073486328
    6. '+

' → logprob: -19.000019073486328
    7. ')' → logprob: -19.375019073486328
    8. '
' → logprob: -19.625019073486328
    9. '＋' → logprob: -19.625019073486328
    10. 'plus' → logprob: -19.625019073486328

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005254268646240234
    2. '2' → logprob: -5.25525426864624
    3. ' ' → logprob: -10.880254745483398
    4. '   ' → logprob: -14.255254745483398
    5. '+' → logprob: -14.630254745483398
    6. '
' → logprob: -14.755254745483398
    7. '3' → logprob: -16.0052547454834
    8. '(' → logprob: -17.3802547454834
    9. '  ' → logprob: -17.5052547454834
    10. '

' → logprob: -17.8802547454834

Token 361: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002556165214627981
    2. ')' → logprob: -6.002556324005127
    3. ' )' → logprob: -9.502555847167969
    4. ']' → logprob: -12.252555847167969
    5. '   ' → logprob: -14.877555847167969
    6. ' ]' → logprob: -15.377555847167969
    7. ')]
' → logprob: -15.377555847167969
    8. ')]

' → logprob: -16.50255584716797
    9. ' ' → logprob: -17.12755584716797
    10. ')])' → logprob: -17.37755584716797

Token 362: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5960167050361633
    2. '   ' → logprob: -1.5960166454315186
    3. ' for' → logprob: -1.8460166454315186
    4. ' ]' → logprob: -2.4710166454315186
    5. ' ' → logprob: -6.221016883850098
    6. '    ' → logprob: -7.471016883850098
    7. 'for' → logprob: -7.596016883850098
    8. '  ' → logprob: -7.846016883850098
    9. '       ' → logprob: -8.721016883850098
    10. ' in' → logprob: -8.721016883850098

Token 363: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20616430044174194
    2. ' range' → logprob: -1.9561643600463867
    3. ' _' → logprob: -3.4561643600463867
    4. 'range' → logprob: -4.581164360046387
    5. '(n' → logprob: -7.081164360046387
    6. ' in' → logprob: -7.331164360046387
    7. '(range' → logprob: -7.581164360046387
    8. 'n' → logprob: -8.081164360046387
    9. '___' → logprob: -8.581164360046387
    10. ' __' → logprob: -8.956164360046387

Token 364: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1452862024307251
    2. 'in' → logprob: -2.0202860832214355
    3. 'range' → logprob: -6.8952860832214355
    4. '_' → logprob: -7.1452860832214355
    5. ' range' → logprob: -7.3952860832214355
    6. '(' → logprob: -9.520286560058594
    7. ' _' → logprob: -10.145286560058594
    8. 'n' → logprob: -10.270286560058594
    9. '(n' → logprob: -10.895286560058594
    10. ' ' → logprob: -12.020286560058594

Token 365: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8014600276947021
    2. 'range' → logprob: -0.8014600276947021
    3. '(n' → logprob: -2.301460027694702
    4. '(range' → logprob: -6.301460266113281
    5. ' (' → logprob: -7.676460266113281
    6. '[n' → logprob: -9.176460266113281
    7. 'n' → logprob: -9.301460266113281
    8. ' n' → logprob: -10.176460266113281
    9. '   ' → logprob: -11.926460266113281
    10. '(' → logprob: -13.926460266113281

Token 366: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002518031978979707
    2. 'n' → logprob: -8.625251770019531
    3. '(' → logprob: -10.000251770019531
    4. ' (' → logprob: -10.625251770019531
    5. '((' → logprob: -13.875251770019531
    6. ' n' → logprob: -14.250251770019531
    7. '   ' → logprob: -14.375251770019531
    8. ' ' → logprob: -17.00025177001953
    9. '(
' → logprob: -17.00025177001953
    10. '	n' → logprob: -17.12525177001953

Token 367: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.935296834039036e-06
    2. ' +' → logprob: -13.50000286102295
    3. '1' → logprob: -13.87500286102295
    4. '+
' → logprob: -14.75000286102295
    5. ')]' → logprob: -17.375003814697266
    6. '＋' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.125003814697266
    8. ')+' → logprob: -18.250003814697266
    9. '```' → logprob: -18.875003814697266
    10. '+n' → logprob: -19.000003814697266

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.652451464906335e-05
    2. ' ' → logprob: -12.000016212463379
    3. '2' → logprob: -12.125016212463379
    4. '   ' → logprob: -13.250016212463379
    5. '+' → logprob: -14.000016212463379
    6. '(' → logprob: -14.125016212463379
    7. '
' → logprob: -15.125016212463379
    8. '(n' → logprob: -15.625016212463379
    9. '```' → logprob: -15.875016212463379
    10. 'n' → logprob: -15.937516212463379

Token 369: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0032314250711351633
    2. ')' → logprob: -6.128231525421143
    3. ']' → logprob: -6.878231525421143
    4. '   ' → logprob: -11.878231048583984
    5. '])' → logprob: -12.503231048583984
    6. '])]' → logprob: -13.253231048583984
    7. ')])' → logprob: -13.378231048583984
    8. ')],' → logprob: -14.628231048583984
    9. ')]
' → logprob: -14.753231048583984
    10. ' )' → logprob: -14.878231048583984

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48010382056236267
    2. 'dist' → logprob: -0.9801038503646851
    3. '	dist' → logprob: -6.230103969573975
    4. ' dist' → logprob: -6.605103969573975
    5. 'for' → logprob: -6.855103969573975
    6. '<|end|>' → logprob: -7.730103969573975
    7. 'heap' → logprob: -8.105103492736816
    8. ' for' → logprob: -8.730103492736816
    9. 'import' → logprob: -8.855103492736816
    10. 'def' → logprob: -9.480103492736816

Token 371: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02035115659236908
    2. 'import' → logprob: -4.020350933074951
    3. 'heap' → logprob: -7.020350933074951
    4. 'hq' → logprob: -7.145350933074951
    5. 'pq' → logprob: -8.02035140991211
    6. '   ' → logprob: -9.39535140991211
    7. 'from' → logprob: -10.39535140991211
    8. 'start' → logprob: -10.77035140991211
    9. 'for' → logprob: -11.39535140991211
    10. 'queue' → logprob: -11.52035140991211

Token 372: ' at' (ID: 540)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.44533878564834595
    2. 'heap' → logprob: -1.6953387260437012
    3. 'dist' → logprob: -1.9453387260437012
    4. 'hq' → logprob: -3.570338726043701
    5. 'h' → logprob: -6.070338726043701
    6. 'pq' → logprob: -6.320338726043701
    7. 'from' → logprob: -8.19533920288086
    8. 'start' → logprob: -9.19533920288086
    9. 'queue' → logprob: -9.32033920288086
    10. '   ' → logprob: -9.32033920288086

Token 373: ' start' (ID: 1604)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2279866635799408
    2. ' dist' → logprob: -1.8529866933822632
    3. 's' → logprob: -3.3529865741729736
    4. 'start' → logprob: -5.477986812591553
    5. 'd' → logprob: -5.977986812591553
    6. ' s' → logprob: -6.602986812591553
    7. 'import' → logprob: -7.102986812591553
    8. '   ' → logprob: -7.227986812591553
    9. '[s' → logprob: -7.602986812591553
    10. '0' → logprob: -8.227986335754395

Token 374: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4700298607349396
    2. '   ' → logprob: -1.2200298309326172
    3. ' dist' → logprob: -2.595029830932617
    4. '
' → logprob: -6.095029830932617
    5. 'heap' → logprob: -6.970029830932617
    6. 'import' → logprob: -7.095029830932617
    7. '[' → logprob: -7.970029830932617
    8. '	dist' → logprob: -8.595029830932617
    9. ' heap' → logprob: -8.720029830932617
    10. '    
' → logprob: -9.095029830932617

Token 375: ' no' (ID: 860)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0024357126094400883
    2. ' dist' → logprob: -6.877435684204102
    3. 'import' → logprob: -7.002435684204102
    4. '   ' → logprob: -8.002435684204102
    5. 'for' → logprob: -9.252435684204102
    6. 'heap' → logprob: -10.002435684204102
    7. 'from' → logprob: -12.502435684204102
    8. 'print' → logprob: -12.502435684204102
    9. ' for' → logprob: -12.877435684204102
    10. ' import' → logprob: -13.252435684204102

Token 376: ' company' (ID: 3175)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.20301084220409393
    2. 'current' → logprob: -2.5780107975006104
    3. ' company' → logprob: -2.8280107975006104
    4. '_company' → logprob: -4.2030110359191895
    5. 'company' → logprob: -4.4530110359191895
    6. 'cost' → logprob: -5.0780110359191895
    7. ' cost' → logprob: -5.2030110359191895
    8. '_current' → logprob: -5.3280110359191895
    9. '_' → logprob: -6.4530110359191895
    10. '_cost' → logprob: -6.5780110359191895

Token 377: ' used' (ID: 2061)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.18581685423851013
    2. '
' → logprob: -3.060816764831543
    3. ' dist' → logprob: -3.185816764831543
    4. '_dist' → logprob: -3.435816764831543
    5. '   ' → logprob: -3.560816764831543
    6. '[' → logprob: -4.185816764831543
    7. ',' → logprob: -5.435816764831543
    8. '    
' → logprob: -7.935816764831543
    9. '	dist' → logprob: -8.310816764831543
    10. '][' → logprob: -9.060816764831543

Token 378: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6869188547134399
    2. 'dist' → logprob: -0.9369188547134399
    3. '
' → logprob: -2.4369187355041504
    4. ' dist' → logprob: -4.18691873550415
    5. '	dist' → logprob: -6.81191873550415
    6. ',' → logprob: -6.93691873550415
    7. '    
' → logprob: -8.561919212341309
    8. '(dist' → logprob: -9.811919212341309
    9. '_dist' → logprob: -11.061919212341309
    10. '.dist' → logprob: -11.186919212341309

Token 379: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04588909447193146
    2. ' dist' → logprob: -3.170889139175415
    3. '   ' → logprob: -5.920888900756836
    4. '0' → logprob: -9.045888900756836
    5. 'current' → logprob: -10.170888900756836
    6. ' current' → logprob: -11.545888900756836
    7. 'for' → logprob: -11.920888900756836
    8. 'start' → logprob: -12.170888900756836
    9. ' ' → logprob: -12.670888900756836
    10. '
' → logprob: -12.670888900756836

Token 380: ' is' (ID: 382)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.1276523470878601
    2. '[' → logprob: -2.127652406692505
    3. '][' → logprob: -8.127652168273926
    4. 's' → logprob: -9.002652168273926
    5. ' [' → logprob: -9.252652168273926
    6. '[n' → logprob: -9.877652168273926
    7. '[S' → logprob: -9.877652168273926
    8. '   ' → logprob: -10.002652168273926
    9. ')[' → logprob: -11.752652168273926
    10. '=' → logprob: -11.752652168273926

Token 381: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0719350203871727
    2. '[' → logprob: -2.821934938430786
    3. ' ' → logprob: -5.571935176849365
    4. 'dist' → logprob: -5.571935176849365
    5. '   ' → logprob: -6.321935176849365
    6. ' [' → logprob: -8.821934700012207
    7. ' dist' → logprob: -8.821934700012207
    8. 'zero' → logprob: -9.821934700012207
    9. 's' → logprob: -10.821934700012207
    10. ' zero' → logprob: -10.946934700012207

Token 382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018311807652935386
    2. '[' → logprob: -6.8768310546875
    3. 'dist' → logprob: -7.5018310546875
    4. ' ' → logprob: -8.7518310546875
    5. '[[' → logprob: -9.8768310546875
    6. 'zero' → logprob: -11.5018310546875
    7. 'set' → logprob: -11.7518310546875
    8. '   ' → logprob: -12.3768310546875
    9. ' dist' → logprob: -12.8768310546875
    10. '{' → logprob: -13.3768310546875

Token 383: ' with' (ID: 483)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8461987376213074
    2. '   ' → logprob: -1.0961987972259521
    3. '
' → logprob: -1.4711987972259521
    4. ' dist' → logprob: -5.346198558807373
    5. '	dist' → logprob: -6.596198558807373
    6. '    
' → logprob: -7.346198558807373
    7. '(dist' → logprob: -8.596199035644531
    8. '_dist' → logprob: -9.596199035644531
    9. '.dist' → logprob: -9.971199035644531
    10. '  
' → logprob: -10.596199035644531

Token 384: ' dist' (ID: 3601)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1908348798751831
    2. '0' → logprob: -1.815834879875183
    3. ' current' → logprob: -4.690834999084473
    4. 'distance' → logprob: -7.940834999084473
    5. 'dist' → logprob: -8.065834999084473
    6. 's' → logprob: -8.065834999084473
    7. ' ' → logprob: -8.315834999084473
    8. 'company' → logprob: -8.440834999084473
    9. 'station' → logprob: -9.690834999084473
    10. '   ' → logprob: -9.815834999084473

Token 385: ' ' (ID: 220)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0001872094871941954
    2. 's' → logprob: -8.750186920166016
    3. ' [' → logprob: -11.375186920166016
    4. '[' → logprob: -11.625186920166016
    5. '   ' → logprob: -13.250186920166016
    6. '```' → logprob: -13.250186920166016
    7. '[n' → logprob: -13.875186920166016
    8. '[start' → logprob: -14.250186920166016
    9. '[c' → logprob: -14.625186920166016
    10. '(s' → logprob: -14.750186920166016

Token 386: '0' (ID: 15)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0011119971750304103
    2. '[' → logprob: -6.87611198425293
    3. 's' → logprob: -10.00111198425293
    4. ' [' → logprob: -11.25111198425293
    5. '[n' → logprob: -11.87611198425293
    6. '0' → logprob: -12.25111198425293
    7. '   ' → logprob: -13.12611198425293
    8. '[start' → logprob: -13.50111198425293
    9. '[S' → logprob: -14.00111198425293
    10. '```' → logprob: -14.00111198425293

Token 387: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6593072414398193
    2. '   ' → logprob: -0.9093072414398193
    3. '
' → logprob: -2.5343072414398193
    4. ' dist' → logprob: -7.534307479858398
    5. '    
' → logprob: -9.909307479858398
    6. '	dist' → logprob: -10.034307479858398
    7. '_dist' → logprob: -11.409307479858398
    8. 'Dist' → logprob: -11.909307479858398
    9. '
' → logprob: -11.909307479858398
    10. '(dist' → logprob: -12.159307479858398

Token 388: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08364397287368774
    2. '   ' → logprob: -2.583643913269043
    3. ' dist' → logprob: -5.583643913269043
    4. '
' → logprob: -7.208643913269043
    5. '	dist' → logprob: -8.958643913269043
    6. '```' → logprob: -9.708643913269043
    7. '    
' → logprob: -10.833643913269043
    8. 'heap' → logprob: -11.458643913269043
    9. '_dist' → logprob: -11.583643913269043
    10. 'Dist' → logprob: -12.208643913269043

Token 389: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.023177221417427063
    2. 'import' → logprob: -4.273177146911621
    3. 'heap' → logprob: -4.773177146911621
    4. ' dist' → logprob: -7.898177146911621
    5. '   ' → logprob: -9.273177146911621
    6. ' heap' → logprob: -11.148177146911621
    7. 'print' → logprob: -11.273177146911621
    8. 'hq' → logprob: -11.523177146911621
    9. 'pq' → logprob: -11.773177146911621
    10. ' import' → logprob: -12.773177146911621

Token 390: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.07891270518302917
    2. '[' → logprob: -2.5789127349853516
    3. '[n' → logprob: -11.328912734985352
    4. '[S' → logprob: -12.703912734985352
    5. ' [' → logprob: -12.828912734985352
    6. 's' → logprob: -13.078912734985352
    7. '][' → logprob: -13.328912734985352
    8. '[start' → logprob: -14.953912734985352
    9. '   ' → logprob: -15.453912734985352
    10. '```' → logprob: -16.07891273498535

Token 391: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004487844998948276
    2. '[' → logprob: -7.750448703765869
    3. ']' → logprob: -11.750449180603027
    4. ' ][' → logprob: -11.875449180603027
    5. '0' → logprob: -12.875449180603027
    6. '   ' → logprob: -16.00044822692871
    7. ''][' → logprob: -16.75044822692871
    8. ',' → logprob: -16.87544822692871
    9. '"][' → logprob: -16.87544822692871
    10. ')][' → logprob: -17.00044822692871

Token 392: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '۰' → logprob: -18.75
    4. '০' → logprob: -19.75
    5. '<|end|>' → logprob: -21.0
    6. '०' → logprob: -21.125
    7. '０' → logprob: -21.875
    8. '#' → logprob: -22.0625
    9. '00' → logprob: -22.1875
    10. '000' → logprob: -22.25

Token 393: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00015741224342491478
    2. '[' → logprob: -9.375157356262207
    3. '0' → logprob: -9.625157356262207
    4. ']' → logprob: -12.125157356262207
    5. ' ][' → logprob: -14.000157356262207
    6. '   ' → logprob: -16.625158309936523
    7. '1' → logprob: -16.625158309936523
    8. ''][' → logprob: -17.250158309936523
    9. '"][' → logprob: -17.500158309936523
    10. ' ' → logprob: -18.500158309936523

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -18.75
    4. '۰' → logprob: -19.375
    5. 'c' → logprob: -19.6875
    6. '  ' → logprob: -19.6875
    7. '200' → logprob: -19.8125
    8. '000' → logprob: -20.3125
    9. '1' → logprob: -20.375
    10. '```' → logprob: -20.625

Token 395: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06201350316405296
    2. ']=' → logprob: -2.8120133876800537
    3. ' ]' → logprob: -10.312013626098633
    4. '=' → logprob: -11.312013626098633
    5. ']+=' → logprob: -15.562013626098633
    6. ']==' → logprob: -16.687013626098633
    7. '0' → logprob: -17.062013626098633
    8. ']={' → logprob: -17.312013626098633
    9. ']=(' → logprob: -17.312013626098633
    10. '']=' → logprob: -17.812013626098633

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '۰' → logprob: -19.875
    4. '   ' → logprob: -20.875
    5. '000' → logprob: -22.125
    6. '০' → logprob: -22.625
    7. '00' → logprob: -22.75
    8. '=' → logprob: -22.875
    9. '０' → logprob: -22.875
    10. '```' → logprob: -23.25

Token 397: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5371336340904236
    2. 'import' → logprob: -0.9121336340904236
    3. 'heap' → logprob: -4.662133693695068
    4. '
' → logprob: -5.662133693695068
    5. 'pq' → logprob: -7.412133693695068
    6. 'hq' → logprob: -8.91213321685791
    7. 'queue' → logprob: -9.66213321685791
    8. '```' → logprob: -9.91213321685791
    9. 'q' → logprob: -10.16213321685791
    10. ' heap' → logprob: -10.41213321685791

Token 398: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16857707500457764
    2. 'heap' → logprob: -1.9185770750045776
    3. 'pq' → logprob: -5.543577194213867
    4. 'hq' → logprob: -6.168577194213867
    5. '   ' → logprob: -6.793577194213867
    6. 'queue' → logprob: -6.918577194213867
    7. 'q' → logprob: -9.918577194213867
    8. ' heap' → logprob: -9.918577194213867
    9. '```' → logprob: -10.293577194213867
    10. ' import' → logprob: -10.668577194213867

Token 399: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.23065978288650513
    2. 'hq' → logprob: -1.9806597232818604
    3. 'import' → logprob: -2.7306597232818604
    4. 'h' → logprob: -6.4806599617004395
    5. 'pq' → logprob: -6.9806599617004395
    6. 'queue' → logprob: -8.230659484863281
    7. '   ' → logprob: -9.980659484863281
    8. ' heap' → logprob: -10.480659484863281
    9. 'q' → logprob: -10.980659484863281
    10. 'que' → logprob: -12.105659484863281

Token 400: '=[' (ID: 13370)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.006796371191740036
    2. '=[]' → logprob: -5.256796360015869
    3. '=' → logprob: -6.631796360015869
    4. ' =' → logprob: -8.881796836853027
    5. '=[]
' → logprob: -9.881796836853027
    6. '=[
' → logprob: -11.631796836853027
    7. '=[' → logprob: -12.006796836853027
    8. '```' → logprob: -12.381796836853027
    9. 'pq' → logprob: -12.631796836853027
    10. '=q' → logprob: -12.631796836853027

Token 401: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.107425062713446e-06
    2. ' (' → logprob: -12.250006675720215
    3. '[(' → logprob: -13.000006675720215
    4. '[' → logprob: -18.75000762939453
    5. '   ' → logprob: -21.37500762939453
    6. '((' → logprob: -22.12500762939453
    7. '0' → logprob: -22.75000762939453
    8. ']' → logprob: -23.12500762939453
    9. '```' → logprob: -23.37500762939453
    10. '（' → logprob: -24.00000762939453

Token 402: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. '(' → logprob: -10.250035285949707
    3. ' ' → logprob: -16.125036239624023
    4. '   ' → logprob: -18.500036239624023
    5. ')' → logprob: -19.250036239624023
    6. ' (' → logprob: -19.500036239624023
    7. '۰' → logprob: -19.625036239624023
    8. '```' → logprob: -20.250036239624023
    9. ',' → logprob: -21.000036239624023
    10. '000' → logprob: -21.375036239624023

Token 403: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16037897765636444
    2. ',s' → logprob: -1.9103789329528809
    3. ' ,' → logprob: -8.785379409790039
    4. ')' → logprob: -14.535379409790039
    5. ',
' → logprob: -14.785379409790039
    6. '	s' → logprob: -16.16037940979004
    7. ',,' → logprob: -16.16037940979004
    8. ',n' → logprob: -16.28537940979004
    9. 's' → logprob: -16.41037940979004
    10. ' s' → logprob: -16.78537940979004

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008727675303816795
    2. '0' → logprob: -4.758727550506592
    3. ' ,' → logprob: -9.13372802734375
    4. ' ' → logprob: -12.63372802734375
    5. ')' → logprob: -15.00872802734375
    6. '(' → logprob: -15.00872802734375
    7. ')]' → logprob: -15.50872802734375
    8. ',
' → logprob: -15.50872802734375
    9. '   ' → logprob: -15.50872802734375
    10. '00' → logprob: -15.75872802734375

Token 405: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.750001907348633
    5. ')' → logprob: -19.187501907348633
    6. '(' → logprob: -19.687501907348633
    7. '০' → logprob: -19.687501907348633
    8. '
' → logprob: -19.937501907348633
    9. '```' → logprob: -20.250001907348633
    10. '０' → logprob: -20.500001907348633

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.955703818472102e-05
    2. '0' → logprob: -9.750059127807617
    3. ' ,' → logprob: -13.625059127807617
    4. ',
' → logprob: -18.750059127807617
    5. ' ' → logprob: -19.000059127807617
    6. ')' → logprob: -19.875059127807617
    7. ')]' → logprob: -20.625059127807617
    8. '   ' → logprob: -21.500059127807617
    9. '```' → logprob: -21.500059127807617
    10. '000' → logprob: -21.750059127807617

Token 407: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '  ' → logprob: -20.125001907348633
    5. ')' → logprob: -20.125001907348633
    6. '۰' → logprob: -20.625001907348633
    7. '```' → logprob: -20.875001907348633
    8. '00' → logprob: -21.000001907348633
    9. '000' → logprob: -21.125001907348633
    10. '[' → logprob: -22.187501907348633

Token 408: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004137496289331466
    2. ')' → logprob: -7.87541389465332
    3. ')]
' → logprob: -10.50041389465332
    4. ']' → logprob: -13.12541389465332
    5. ')]
' → logprob: -13.37541389465332
    6. ')]

' → logprob: -14.25041389465332
    7. ' )' → logprob: -14.50041389465332
    8. ')
' → logprob: -15.12541389465332
    9. ')])' → logprob: -15.12541389465332
    10. '))' → logprob: -15.25041389465332

Token 409: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08160359412431717
    2. '   ' → logprob: -2.956603527069092
    3. ' while' → logprob: -4.206603527069092
    4. '	while' → logprob: -4.581603527069092
    5. ')' → logprob: -6.831603527069092
    6. 'While' → logprob: -10.08160400390625
    7. '```' → logprob: -10.45660400390625
    8. '<|end|>' → logprob: -10.95660400390625
    9. '    
' → logprob: -11.58160400390625
    10. ',' → logprob: -11.58160400390625

Token 410: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0004827465454582125
    2. '   ' → logprob: -8.125482559204102
    3. ' while' → logprob: -8.750482559204102
    4. ')' → logprob: -10.750482559204102
    5. '	while' → logprob: -12.125482559204102
    6. 'While' → logprob: -14.250482559204102
    7. '    
' → logprob: -15.125482559204102
    8. '```' → logprob: -15.375482559204102
    9. 'heap' → logprob: -16.3754825592041
    10. ']' → logprob: -16.8754825592041

Token 411: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0485910028219223
    2. ' heap' → logprob: -3.048590898513794
    3. '(heap' → logprob: -12.673590660095215
    4. 'len' → logprob: -15.048590660095215
    5. 'he' → logprob: -17.42359161376953
    6. ' len' → logprob: -17.92359161376953
    7. '.heap' → logprob: -17.92359161376953
    8. ' ' → logprob: -18.92359161376953
    9. '```' → logprob: -19.04859161376953
    10. 'h' → logprob: -19.04859161376953

Token 412: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016815703362226486
    2. '[' → logprob: -5.266815662384033
    3. ':
' → logprob: -5.641815662384033
    4. ' and' → logprob: -5.891815662384033
    5. 'and' → logprob: -6.141815662384033
    6. '.pop' → logprob: -6.641815662384033
    7. '):' → logprob: -7.391815662384033
    8. ',' → logprob: -8.016816139221191
    9. '.' → logprob: -8.516816139221191
    10. ')' → logprob: -9.141816139221191

Token 413: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7834624648094177
    2. '```' → logprob: -1.1584625244140625
    3. '       ' → logprob: -1.6584625244140625
    4. 'import' → logprob: -4.2834625244140625
    5. ',' → logprob: -4.6584625244140625
    6. '0' → logprob: -5.5334625244140625
    7. ':' → logprob: -6.0334625244140625
    8. '``' → logprob: -6.5334625244140625
    9. '):
' → logprob: -7.0334625244140625
    10. ')' → logprob: -7.2834625244140625

Token 414: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.025345945730805397
    2. '0' → logprob: -3.900346040725708
    3. 'import' → logprob: -6.275345802307129
    4. ' cost' → logprob: -6.775345802307129
    5. 'heap' → logprob: -7.525345802307129
    6. '(cost' → logprob: -7.900345802307129
    7. '
' → logprob: -8.150345802307129
    8. 'dist' → logprob: -9.025345802307129
    9. 'cur' → logprob: -9.150345802307129
    10. '   ' → logprob: -9.650345802307129

Token 415: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002815812826156616
    2. '_,' → logprob: -6.5028157234191895
    3. ' ,' → logprob: -8.002816200256348
    4. ',c' → logprob: -8.627816200256348
    5. ',u' → logprob: -8.752816200256348
    6. ',next' → logprob: -8.752816200256348
    7. ',_' → logprob: -9.127816200256348
    8. ',current' → logprob: -9.252816200256348
    9. ',user' → logprob: -10.252816200256348
    10. ',t' → logprob: -10.502816200256348

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031088778749108315
    2. ',c' → logprob: -3.7810888290405273
    3. '=' → logprob: -5.156088829040527
    4. ',u' → logprob: -6.656088829040527
    5. ',d' → logprob: -8.781088829040527
    6. ',current' → logprob: -8.781088829040527
    7. ',time' → logprob: -9.656088829040527
    8. ',t' → logprob: -9.781088829040527
    9. ',next' → logprob: -9.781088829040527
    10. ' =' → logprob: -10.281088829040527

Token 417: 'cc' (ID: 710)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.4741867482662201
    2. 'cur' → logprob: -1.5991867780685425
    3. 'curr' → logprob: -2.099186658859253
    4. 'company' → logprob: -3.349186658859253
    5. 'co' → logprob: -5.474186897277832
    6. 'current' → logprob: -5.599186897277832
    7. 'cc' → logprob: -5.599186897277832
    8. 'com' → logprob: -5.724186897277832
    9. 'c' → logprob: -6.224186897277832
    10. 'cmp' → logprob: -7.724186897277832

Token 418: 'urr' (ID: 1057)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11301471292972565
    2. ',c' → logprob: -2.9880146980285645
    3. ',current' → logprob: -3.1130146980285645
    4. ',d' → logprob: -4.9880146980285645
    5. ',k' → logprob: -6.3630146980285645
    6. ',u' → logprob: -6.7380146980285645
    7. ',next' → logprob: -7.6130146980285645
    8. ',v' → logprob: -8.113015174865723
    9. ',t' → logprob: -8.738015174865723
    10. ',a' → logprob: -8.738015174865723

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6685822010040283
    2. ',c' → logprob: -1.1685822010040283
    3. ',d' → logprob: -2.1685822010040283
    4. ',current' → logprob: -2.9185822010040283
    5. ',k' → logprob: -5.293581962585449
    6. ',u' → logprob: -6.418581962585449
    7. ',i' → logprob: -8.04358196258545
    8. ',t' → logprob: -8.29358196258545
    9. ',next' → logprob: -8.66858196258545
    10. ',x' → logprob: -8.79358196258545

Token 420: 'dc' (ID: 13964)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.06371418386697769
    2. 'curr' → logprob: -2.9387142658233643
    3. 'cur' → logprob: -5.063714027404785
    4. 'dist' → logprob: -6.563714027404785
    5. 'c' → logprob: -7.063714027404785
    6. 'dc' → logprob: -9.813714027404785
    7. 'cc' → logprob: -9.813714027404785
    8. 'd' → logprob: -10.688714027404785
    9. 'curl' → logprob: -11.188714027404785
    10. 'cl' → logprob: -11.313714027404785

Token 421: 'urr' (ID: 1057)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5875781178474426
    2. 'ost' → logprob: -0.9625781178474426
    3. 't' → logprob: -3.712578058242798
    4. 'st' → logprob: -4.337578296661377
    5. ' =' → logprob: -4.462578296661377
    6. 'ist' → logprob: -5.462578296661377
    7. '_' → logprob: -5.712578296661377
    8. 'ur' → logprob: -6.712578296661377
    9. '=_' → logprob: -6.837578296661377
    10. 'urr' → logprob: -7.587578296661377

Token 422: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010679395636543632
    2. ' =' → logprob: -6.876068115234375
    3. '=sys' → logprob: -11.001068115234375
    4. ')=' → logprob: -11.626068115234375
    5. '=_' → logprob: -12.876068115234375
    6. '=

' → logprob: -13.376068115234375
    7. '=line' → logprob: -14.001068115234375
    8. '=
' → logprob: -14.126068115234375
    9. '=h' → logprob: -14.251068115234375
    10. '=input' → logprob: -14.501068115234375

Token 423: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -2.8206473871250637e-05
    2. ' heap' → logprob: -10.500028610229492
    3. 'he' → logprob: -14.375028610229492
    4. '(heap' → logprob: -16.875028610229492
    5. '.heap' → logprob: -19.375028610229492
    6. '
' → logprob: -20.000028610229492
    7. '0' → logprob: -20.125028610229492
    8. 'queue' → logprob: -21.000028610229492
    9. '
' → logprob: -21.250028610229492
    10. 'hq' → logprob: -21.375028610229492

Token 424: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.43992534279823303
    2. '=' → logprob: -1.0649253129959106
    3. ' =' → logprob: -5.689925193786621
    4. 'he' → logprob: -6.064925193786621
    5. '.he' → logprob: -6.064925193786621
    6. 'pop' → logprob: -6.564925193786621
    7. '   ' → logprob: -7.564925193786621
    8. '.pop' → logprob: -7.689925193786621
    9. 'app' → logprob: -8.939925193786621
    10. 'p' → logprob: -9.189925193786621

Token 425: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -3.1782583391759545e-05
    2. '.heap' → logprob: -10.500031471252441
    3. '.' → logprob: -13.625031471252441
    4. 'he' → logprob: -13.875031471252441
    5. ' he' → logprob: -14.875031471252441
    6. 'q' → logprob: -14.875031471252441
    7. '```' → logprob: -15.000031471252441
    8. '_he' → logprob: -15.125031471252441
    9. ').' → logprob: -15.375031471252441
    10. ' .' → logprob: -15.500031471252441

Token 426: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.008129963040119e-06
    2. 'ap' → logprob: -12.625003814697266
    3. 'pp' → logprob: -14.375003814697266
    4. ' app' → logprob: -19.125003814697266
    5. '(app' → logprob: -20.250003814697266
    6. 'a' → logprob: -20.625003814697266
    7. '```' → logprob: -20.625003814697266
    8. 'pop' → logprob: -20.750003814697266
    9. '[' → logprob: -21.125003814697266
    10. 'appen' → logprob: -21.125003814697266

Token 427: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.04231918230652809
    2. 'app' → logprob: -4.292319297790527
    3. 'pp' → logprob: -4.667319297790527
    4. 'ush' → logprob: -4.792319297790527
    5. 'ap' → logprob: -4.917319297790527
    6. 'p' → logprob: -6.042319297790527
    7. 'q' → logprob: -8.417319297790527
    8. 'pop' → logprob: -9.292319297790527
    9. '```' → logprob: -11.292319297790527
    10. '   ' → logprob: -11.417319297790527

Token 428: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.750003814697266
    3. 'heap' → logprob: -14.875003814697266
    4. '(queue' → logprob: -16.500003814697266
    5. '```' → logprob: -17.125003814697266
    6. '(h' → logprob: -17.500003814697266
    7. '(
' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.375003814697266
    9. ' (' → logprob: -18.375003814697266
    10. '(hit' → logprob: -18.875003814697266

Token 429: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067234220914542675
    2. ')
' → logprob: -5.006723403930664
    3. ')
' → logprob: -11.881723403930664
    4. ')

' → logprob: -14.256723403930664
    5. ')`' → logprob: -15.881723403930664
    6. '       ' → logprob: -16.256723403930664
    7. '),' → logprob: -16.756723403930664
    8. '   ' → logprob: -17.006723403930664
    9. ' )' → logprob: -17.006723403930664
    10. ')#' → logprob: -17.631723403930664

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10275308787822723
    2. 'if' → logprob: -2.602753162384033
    3. ' if' → logprob: -4.352753162384033
    4. '   ' → logprob: -4.977753162384033
    5. '        
' → logprob: -6.227753162384033
    6. '
' → logprob: -6.602753162384033
    7. '```' → logprob: -8.852752685546875
    8. '    
' → logprob: -9.602752685546875
    9. '  
' → logprob: -9.602752685546875
    10. '           ' → logprob: -9.727752685546875

Token 431: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00010843054042197764
    2. '       ' → logprob: -9.25010871887207
    3. ' if' → logprob: -11.50010871887207
    4. '   ' → logprob: -13.25010871887207
    5. '	if' → logprob: -15.87510871887207
    6. '
' → logprob: -15.87510871887207
    7. '        
' → logprob: -16.00010871887207
    8. '           ' → logprob: -17.75010871887207
    9. '```' → logprob: -18.62510871887207
    10. ';if' → logprob: -19.37510871887207

Token 432: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.049290262162685394
    2. ' dist' → logprob: -3.799290180206299
    3. 'cost' → logprob: -3.924290180206299
    4. 'u' → logprob: -5.424290180206299
    5. '(dist' → logprob: -7.049290180206299
    6. ' cost' → logprob: -8.424290657043457
    7. '(u' → logprob: -8.549290657043457
    8. ' u' → logprob: -8.924290657043457
    9. '(cost' → logprob: -9.174290657043457
    10. ' (' → logprob: -11.674290657043457

Token 433: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.704273118884885e-07
    2. 'u' → logprob: -14.875000953674316
    3. '[' → logprob: -15.750000953674316
    4. '[s' → logprob: -16.0
    5. ' [' → logprob: -17.0
    6. '```' → logprob: -17.625
    7. '][' → logprob: -18.75
    8. '[user' → logprob: -18.875
    9. ' u' → logprob: -19.375
    10. '<u' → logprob: -19.5

Token 434: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38745731115341187
    2. '][' → logprob: -1.1374573707580566
    3. '[u' → logprob: -8.262456893920898
    4. '[c' → logprob: -9.137456893920898
    5. ')[' → logprob: -10.137456893920898
    6. '[curr' → logprob: -10.137456893920898
    7. '[cur' → logprob: -10.262456893920898
    8. ' ][' → logprob: -11.262456893920898
    9. '"][' → logprob: -11.512456893920898
    10. '
' → logprob: -11.637456893920898

Token 435: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: 0.0
    2. ' cc' → logprob: -17.75
    3. '(cc' → logprob: -18.75
    4. '
' → logprob: -19.0
    5. '	cc' → logprob: -20.0
    6. '   ' → logprob: -22.75
    7. 'c' → logprob: -22.875
    8. '
' → logprob: -23.0
    9. '```' → logprob: -23.375
    10. '_cc' → logprob: -23.625

Token 436: 'urr' (ID: 1057)
  Prédit: 'urr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urr' → logprob: -0.0024969447404146194
    2. 'curr' → logprob: -6.002496719360352
    3. '[curr' → logprob: -11.752496719360352
    4. '[' → logprob: -12.877496719360352
    5. '][' → logprob: -13.127496719360352
    6. '(curr' → logprob: -13.877496719360352
    7. 'urn' → logprob: -13.877496719360352
    8. 'orr' → logprob: -13.877496719360352
    9. 'u' → logprob: -14.002496719360352
    10. 'arr' → logprob: -14.127496719360352

Token 437: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.40998875699006e-05
    2. '[' → logprob: -9.75007438659668
    3. ']' → logprob: -11.25007438659668
    4. ' ][' → logprob: -13.12507438659668
    5. ']][' → logprob: -15.62507438659668
    6. '"][' → logprob: -15.87507438659668
    7. '   ' → logprob: -16.37507438659668
    8. ']==' → logprob: -16.50007438659668
    9. ')][' → logprob: -16.87507438659668
    10. '()][' → logprob: -16.87507438659668

Token 438: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -1.8624639324116288e-06
    2. 'd' → logprob: -13.875001907348633
    3. 'dcc' → logprob: -14.375001907348633
    4. ' dc' → logprob: -15.625001907348633
    5. '	d' → logprob: -17.875001907348633
    6. ' d' → logprob: -18.250001907348633
    7. '   ' → logprob: -19.250001907348633
    8. ' ' → logprob: -19.375001907348633
    9. '
' → logprob: -19.750001907348633
    10. '(d' → logprob: -19.750001907348633

Token 439: 'urr' (ID: 1057)
  Prédit: 'urr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urr' → logprob: -2.534558552724775e-05
    2. 'curr' → logprob: -10.625025749206543
    3. ' urr' → logprob: -15.375025749206543
    4. 'u' → logprob: -15.875025749206543
    5. 'arr' → logprob: -16.125024795532227
    6. 'ur' → logprob: -16.375024795532227
    7. 'orr' → logprob: -16.750024795532227
    8. ' ' → logprob: -16.750024795532227
    9. ' curr' → logprob: -16.875024795532227
    10. 'urn' → logprob: -17.500024795532227

Token 440: ']<' (ID: 80424)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.334247350692749
    2. ']!=' → logprob: -1.959247350692749
    3. ']<' → logprob: -1.959247350692749
    4. '<' → logprob: -6.709247589111328
    5. ']>' → logprob: -7.209247589111328
    6. '!=' → logprob: -8.834247589111328
    7. ']==' → logprob: -11.584247589111328
    8. ' ]' → logprob: -11.584247589111328
    9. ']<=' → logprob: -11.584247589111328
    10. '<u' → logprob: -11.709247589111328

Token 441: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.0206720617134124e-05
    2. ' cost' → logprob: -11.50001049041748
    3. '(cost' → logprob: -21.750009536743164
    4. '_cost' → logprob: -23.250009536743164
    5. '-cost' → logprob: -23.625009536743164
    6. 'code' → logprob: -23.625009536743164
    7. '.cost' → logprob: -24.625009536743164
    8. '0' → logprob: -24.875009536743164
    9. '```' → logprob: -25.750009536743164
    10. 'Cost' → logprob: -25.875009536743164

Token 442: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015409957617521286
    2. ':
' → logprob: -4.76540994644165
    3. 'continue' → logprob: -5.64040994644165
    4. '       ' → logprob: -6.39040994644165
    5. ' continue' → logprob: -6.89040994644165
    6. '   ' → logprob: -8.515410423278809
    7. '	continue' → logprob: -8.640410423278809
    8. '           ' → logprob: -9.390410423278809
    9. '_continue' → logprob: -10.515410423278809
    10. ':return' → logprob: -11.390410423278809

Token 443: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4520531892776489
    2. 'continue' → logprob: -1.702053189277649
    3. '           ' → logprob: -1.827053189277649
    4. ' continue' → logprob: -3.9520530700683594
    5. '	continue' → logprob: -6.827053070068359
    6. '   ' → logprob: -9.07705307006836
    7. '_continue' → logprob: -9.82705307006836
    8. '		' → logprob: -12.45205307006836
    9. '               ' → logprob: -13.07705307006836
    10. 'Continue' → logprob: -13.07705307006836

Token 444: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0011040179524570704
    2. ' continue' → logprob: -7.50110387802124
    3. '       ' → logprob: -8.001104354858398
    4. '           ' → logprob: -8.501104354858398
    5. '	continue' → logprob: -11.376104354858398
    6. 'contin' → logprob: -14.876104354858398
    7. '_continue' → logprob: -15.126104354858398
    8. 'continu' → logprob: -15.501104354858398
    9. '   ' → logprob: -15.751104354858398
    10. '               ' → logprob: -16.6261043548584

Token 445: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0759776830673218
    2. '       ' → logprob: -1.2009776830673218
    3. 'for' → logprob: -1.2009776830673218
    4. ' for' → logprob: -2.9509778022766113
    5. '<|end|>' → logprob: -5.450977802276611
    6. ')' → logprob: -8.325977325439453
    7. '	for' → logprob: -8.700977325439453
    8. '
' → logprob: -10.200977325439453
    9. '```' → logprob: -10.450977325439453
    10. 'if' → logprob: -10.575977325439453

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022797346173319966
    2. '   ' → logprob: -9.250227928161621
    3. ' for' → logprob: -9.625227928161621
    4. 'for' → logprob: -10.125227928161621
    5. '<|end|>' → logprob: -11.500227928161621
    6. ' if' → logprob: -12.375227928161621
    7. 'if' → logprob: -12.625227928161621
    8. '
' → logprob: -12.750227928161621
    9. '        
' → logprob: -13.625227928161621
    10. ')' → logprob: -13.625227928161621

Token 447: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00353141687810421
    2. '   ' → logprob: -6.628531455993652
    3. 'if' (adapté à ' if') → logprob: -6.628531455993652
    4. ' for' → logprob: -7.378531455993652
    5. '       ' → logprob: -8.378531455993652
    6. '	for' → logprob: -10.628531455993652
    7. ' if' → logprob: -14.003531455993652
    8. '
' → logprob: -14.378531455993652
    9. '        
' → logprob: -14.753531455993652
    10. '    
' → logprob: -15.128531455993652

Token 448: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.011049824766814709
    2. ' u' → logprob: -4.511049747467041
    3. '(u' → logprob: -13.2610502243042
    4. '	u' → logprob: -16.386049270629883
    5. '   ' → logprob: -16.636049270629883
    6. '[u' → logprob: -17.636049270629883
    7. ' ' → logprob: -18.386049270629883
    8. '
' → logprob: -18.386049270629883
    9. ' ' → logprob: -18.511049270629883
    10. ' (' → logprob: -19.136049270629883

Token 449: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12693430483341217
    2. ' ==' → logprob: -2.126934289932251
    3. ']==' → logprob: -13.001934051513672
    4. ')==' → logprob: -13.251934051513672
    5. '=' → logprob: -13.626934051513672
    6. '()==' → logprob: -14.876934051513672
    7. '==
' → logprob: -15.251934051513672
    8. '===' → logprob: -15.626934051513672
    9. '==(' → logprob: -15.876934051513672
    10. ' ' → logprob: -17.251934051513672

Token 450: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0002614550176076591
    2. ' g' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.625261306762695
    4. '
' → logprob: -16.875261306762695
    5. '	g' → logprob: -17.250261306762695
    6. ' ' → logprob: -18.125261306762695
    7. '```' → logprob: -18.625261306762695
    8. '_g' → logprob: -19.250261306762695
    9. '           ' → logprob: -19.375261306762695
    10. ' ' → logprob: -19.375261306762695

Token 451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038269493728876114
    2. ':
' → logprob: -3.288269519805908
    3. ':return' → logprob: -8.53826904296875
    4. ' and' → logprob: -10.91326904296875
    5. '       ' → logprob: -12.66326904296875
    6. ':
' → logprob: -12.91326904296875
    7. '           ' → logprob: -13.16326904296875
    8. '   ' → logprob: -13.41326904296875
    9. '<|end|>' → logprob: -13.53826904296875
    10. 'and' → logprob: -13.91326904296875

Token 452: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02573186717927456
    2. '       ' → logprob: -4.150732040405273
    3. '
' → logprob: -4.775732040405273
    4. '   ' → logprob: -7.525732040405273
    5. 'print' → logprob: -7.650732040405273
    6. ' print' → logprob: -9.900732040405273
    7. 'break' → logprob: -10.525732040405273
    8. '```' → logprob: -10.525732040405273
    9. ' break' → logprob: -10.775732040405273
    10. '               ' → logprob: -10.775732040405273

Token 453: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.9424725148128346e-05
    2. '       ' → logprob: -10.750049591064453
    3. '           ' → logprob: -11.000049591064453
    4. ' print' → logprob: -11.500049591064453
    5. '   ' → logprob: -13.750049591064453
    6. '
' → logprob: -18.125049591064453
    7. '```' → logprob: -19.000049591064453
    8. '	print' → logprob: -19.500049591064453
    9. '               ' → logprob: -19.875049591064453
    10. 'break' → logprob: -21.125049591064453

Token 454: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -1.0325924449716695e-05
    2. 'cost' → logprob: -11.50001049041748
    3. '(dist' → logprob: -17.000009536743164
    4. ' cost' → logprob: -17.375009536743164
    5. '(' → logprob: -19.250009536743164
    6. '(c' → logprob: -20.000009536743164
    7. '(distance' → logprob: -22.250009536743164
    8. '(price' → logprob: -22.375009536743164
    9. '(count' → logprob: -23.250009536743164
    10. '(
' → logprob: -23.375009536743164

Token 455: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029761025682091713
    2. ')' → logprob: -3.5297610759735107
    3. ')
' → logprob: -12.02976131439209
    4. '       ' → logprob: -13.02976131439209
    5. '   ' → logprob: -13.65476131439209
    6. '           ' → logprob: -14.65476131439209
    7. ')return' → logprob: -15.02976131439209
    8. ')`
' → logprob: -15.77976131439209
    9. ' )
' → logprob: -15.90476131439209
    10. ')

' → logprob: -17.154760360717773

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016349162615370005
    2. '       ' → logprob: -8.750163078308105
    3. '   ' → logprob: -12.875163078308105
    4. 'continue' → logprob: -14.375163078308105
    5. '               ' → logprob: -14.500163078308105
    6. 'break' → logprob: -14.625163078308105
    7. '		' → logprob: -15.500163078308105
    8. ' continue' → logprob: -16.125164031982422
    9. 'import' → logprob: -16.250164031982422
    10. '          ' → logprob: -16.250164031982422

Token 457: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25243425369262695
    2. 'break' (adapté à ' break') → logprob: -1.502434253692627
    3. ' break' → logprob: -7.627434253692627
    4. '	break' → logprob: -11.502433776855469
    5. '		' → logprob: -12.752433776855469
    6. '       ' → logprob: -13.002433776855469
    7. '   ' → logprob: -13.752433776855469
    8. '
' → logprob: -14.377433776855469
    9. 'continue' → logprob: -15.252433776855469
    10. '               ' → logprob: -15.502433776855469

Token 458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20839321613311768
    2. '   ' → logprob: -1.8333932161331177
    3. 'for' → logprob: -3.833393096923828
    4. ' for' → logprob: -5.708393096923828
    5. 'else' → logprob: -5.833393096923828
    6. '        
' → logprob: -9.708393096923828
    7. '	for' → logprob: -9.958393096923828
    8. '	' → logprob: -10.083393096923828
    9. '     ' → logprob: -10.333393096923828
    10. ')' → logprob: -10.458393096923828

Token 459: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.669299304485321
    2. '       ' → logprob: -1.4192993640899658
    3. 'for' → logprob: -1.4192993640899658
    4. 'else' → logprob: -5.544299125671387
    5. ' for' → logprob: -8.294299125671387
    6. '```' → logprob: -13.169299125671387
    7. '	for' → logprob: -13.544299125671387
    8. '    
' → logprob: -13.669299125671387
    9. '        
' → logprob: -13.669299125671387
    10. '
' → logprob: -15.669299125671387

Token 460: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.7385154428193346e-05
    2. ' for' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.37503719329834
    4. '	for' → logprob: -15.00003719329834
    5. '    
' → logprob: -16.750038146972656
    6. '        
' → logprob: -18.500038146972656
    7. '
' → logprob: -18.625038146972656
    8. '       ' → logprob: -19.250038146972656
    9. '```' → logprob: -21.000038146972656
    10. '            
' → logprob: -22.375038146972656

Token 461: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.4741213917732239
    2. 'v' → logprob: -0.9741213917732239
    3. 'vv' → logprob: -11.34912109375
    4. '(' → logprob: -11.47412109375
    5. 'w' → logprob: -12.47412109375
    6. ' v' → logprob: -12.59912109375
    7. ' (' → logprob: -13.09912109375
    8. ',v' → logprob: -13.34912109375
    9. '_v' → logprob: -13.34912109375
    10. '[v' → logprob: -13.59912109375

Token 462: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5098567008972168
    2. ',w' → logprob: -1.2598567008972168
    3. ',d' → logprob: -2.259856700897217
    4. ',v' → logprob: -4.509856700897217
    5. ',u' → logprob: -9.134857177734375
    6. ',c' → logprob: -9.509857177734375
    7. ' ,' → logprob: -9.634857177734375
    8. ',(' → logprob: -10.259857177734375
    9. ',x' → logprob: -10.759857177734375
    10. ',y' → logprob: -10.759857177734375

Token 463: ',line' (ID: 171132)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.016512876376509666
    2. ',' → logprob: -4.141512870788574
    3. ',y' → logprob: -8.391512870788574
    4. ',d' → logprob: -10.141512870788574
    5. ' ,' → logprob: -10.141512870788574
    6. 'v' → logprob: -10.641512870788574
    7. ',value' → logprob: -10.766512870788574
    8. ',val' → logprob: -10.891512870788574
    9. ',w' → logprob: -11.141512870788574
    10. ',e' → logprob: -11.141512870788574

Token 464: '_comp' (ID: 34754)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13575874269008636
    2. ',d' → logprob: -2.760758638381958
    3. ',v' → logprob: -3.135758638381958
    4. ',line' → logprob: -4.635758876800537
    5. ',t' → logprob: -6.385758876800537
    6. ',y' → logprob: -6.760758876800537
    7. ',w' → logprob: -6.760758876800537
    8. ',c' → logprob: -7.135758876800537
    9. ',len' → logprob: -7.385758876800537
    10. 't' → logprob: -7.385758876800537

Token 465: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0824170634150505
    2. ' in' → logprob: -2.7074170112609863
    3. ',line' → logprob: -5.832417011260986
    4. 'any' → logprob: -5.957417011260986
    5. ',v' → logprob: -6.207417011260986
    6. '=' → logprob: -6.707417011260986
    7. 'onent' → logprob: -6.957417011260986
    8. ')' → logprob: -7.207417011260986
    9. ',y' → logprob: -8.082417488098145
    10. ',p' → logprob: -8.082417488098145

Token 466: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.3132643401622772
    2. 'adj' → logprob: -1.3132643699645996
    3. '(adj' → logprob: -13.938263893127441
    4. '   ' → logprob: -14.313263893127441
    5. 'ad' → logprob: -14.438263893127441
    6. '    ' → logprob: -16.563264846801758
    7. '[' → logprob: -16.688264846801758
    8. 'Adj' → logprob: -16.813264846801758
    9. '```' → logprob: -16.813264846801758
    10. ' ' → logprob: -16.813264846801758

Token 467: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0004529566504061222
    2. 'in' → logprob: -9.000452995300293
    3. ' in' → logprob: -9.000452995300293
    4. 'u' → logprob: -9.875452995300293
    5. '[v' → logprob: -9.875452995300293
    6. '(u' → logprob: -10.000452995300293
    7. ',u' → logprob: -11.125452995300293
    8. ':' → logprob: -11.375452995300293
    9. '[' → logprob: -12.000452995300293
    10. '   ' → logprob: -12.125452995300293

Token 468: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.06163922697305679
    2. '):' → logprob: -3.8116393089294434
    3. ']:
' → logprob: -3.9366393089294434
    4. ':' → logprob: -4.186639308929443
    5. '):
' → logprob: -6.436639308929443
    6. ']' → logprob: -7.561639308929443
    7. ']:
' → logprob: -7.811639308929443
    8. '       ' → logprob: -8.561638832092285
    9. '>:' → logprob: -10.061638832092285
    10. ':
' → logprob: -10.311638832092285

Token 469: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5273157954216003
    2. '<|end|>' → logprob: -1.9023158550262451
    3. '           ' → logprob: -2.152315855026245
    4. '        ' → logprob: -2.652315855026245
    5. '        
' → logprob: -3.902315855026245
    6. ' ' → logprob: -3.902315855026245
    7. '            
' → logprob: -5.152315616607666
    8. ' 
' → logprob: -5.277315616607666
    9. ' if' → logprob: -5.527315616607666
    10. '<|end|>' → logprob: -5.902315616607666

Token 470: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.017982997000217438
    2. ' if' → logprob: -4.6429829597473145
    3. 'new' → logprob: -5.6429829597473145
    4. 'nd' → logprob: -6.6429829597473145
    5. '           ' → logprob: -6.6429829597473145
    6. 'next' → logprob: -6.8929829597473145
    7. 'n' → logprob: -7.7679829597473145
    8. 'nc' → logprob: -7.7679829597473145
    9. ' nd' → logprob: -9.392983436584473
    10. 'nt' → logprob: -10.517983436584473

Token 471: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.009034758433699608
    2. 'line' → logprob: -5.134034633636475
    3. ' cc' → logprob: -5.884034633636475
    4. ' line' → logprob: -8.384035110473633
    5. 'cost' → logprob: -10.384035110473633
    6. 'dc' → logprob: -11.134035110473633
    7. 'u' → logprob: -11.884035110473633
    8. '   ' → logprob: -12.134035110473633
    9. 'c' → logprob: -12.134035110473633
    10. 'd' → logprob: -12.509035110473633

Token 472: 'urr' (ID: 1057)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.08002572506666183
    2. 'urr' → logprob: -2.5800256729125977
    3. '_curr' → logprob: -7.330025672912598
    4. ' curr' → logprob: -8.455025672912598
    5. '[curr' → logprob: -8.955025672912598
    6. '(curr' → logprob: -9.705025672912598
    7. '	curr' → logprob: -10.705025672912598
    8. '==' → logprob: -11.080025672912598
    9. 'urry' → logprob: -11.205025672912598
    10. '.curr' → logprob: -12.080025672912598

Token 473: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02977907471358776
    2. ' ==' → logprob: -3.5297789573669434
    3. ']==' → logprob: -11.904779434204102
    4. '==
' → logprob: -12.029779434204102
    5. ')==' → logprob: -12.654779434204102
    6. '!=' → logprob: -12.904779434204102
    7. 'and' → logprob: -13.404779434204102
    8. '0' → logprob: -13.529779434204102
    9. 'in' → logprob: -13.529779434204102
    10. '=' → logprob: -13.529779434204102

Token 474: 'line' (ID: 1137)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.127268984913826
    2. 'line' → logprob: -2.1272690296173096
    3. ' ' → logprob: -8.62726879119873
    4. ' line' → logprob: -9.00226879119873
    5. '#line' → logprob: -11.37726879119873
    6. '(line' → logprob: -11.62726879119873
    7. '=line' → logprob: -11.87726879119873
    8. '[line' → logprob: -12.87726879119873
    9. '	line' → logprob: -13.87726879119873
    10. '```' → logprob: -14.00226879119873

Token 475: '_comp' (ID: 34754)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11300502717494965
    2. '[' → logprob: -3.2380049228668213
    3. ' or' → logprob: -3.4880049228668213
    4. ' ' → logprob: -4.4880051612854
    5. '<|end|>' → logprob: -5.6130051612854
    6. ':
' → logprob: -5.7380051612854
    7. ':' → logprob: -5.7380051612854
    8. '_comp' → logprob: -5.9880051612854
    9. '[line' → logprob: -5.9880051612854
    10. '```' → logprob: -6.3630051612854

Token 476: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.021915532648563385
    2. ':' → logprob: -4.646915435791016
    3. 'or' → logprob: -4.771915435791016
    4. ' and' → logprob: -6.521915435791016
    5. ':
' → logprob: -6.521915435791016
    6. 'and' → logprob: -8.021915435791016
    7. '=' → logprob: -9.646915435791016
    8. '   ' → logprob: -9.771915435791016
    9. ' ' → logprob: -9.771915435791016
    10. '<|end|>' → logprob: -10.271915435791016

Token 477: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2926841080188751
    2. ' and' → logprob: -1.6676840782165527
    3. ':' → logprob: -3.0426840782165527
    4. ':
' → logprob: -4.542684078216553
    5. '<|end|>' → logprob: -6.292684078216553
    6. 'and' → logprob: -6.417684078216553
    7. ' or' → logprob: -6.917684078216553
    8. '           ' → logprob: -7.292684078216553
    9. '<|end|>' → logprob: -8.167684555053711
    10. '              ' → logprob: -8.792684555053711

Token 478: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.6777603030204773
    2. 'new' → logprob: -1.177760362625122
    3. 'next' → logprob: -3.052760362625122
    4. ' nd' → logprob: -3.177760362625122
    5. 'if' → logprob: -3.302760362625122
    6. ' new' → logprob: -3.677760362625122
    7. 'n' → logprob: -4.927760124206543
    8. 'nc' → logprob: -5.302760124206543
    9. ' if' → logprob: -5.552760124206543
    10. 'curr' → logprob: -6.052760124206543

Token 479: '=(' (ID: 9893)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.003503026207908988
    2. 'cur' → logprob: -7.00350284576416
    3. '=' → logprob: -7.25350284576416
    4. '_curr' → logprob: -7.37850284576416
    5. 'c' → logprob: -7.50350284576416
    6. 'cost' → logprob: -7.62850284576416
    7. ' =' → logprob: -9.62850284576416
    8. 'w' → logprob: -10.62850284576416
    9. 'Curr' → logprob: -10.75350284576416
    10. '_c' → logprob: -11.12850284576416

Token 480: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -9.968312951968983e-06
    2. ' dc' → logprob: -12.375009536743164
    3. 'd' → logprob: -12.625009536743164
    4. 'dcc' → logprob: -13.250009536743164
    5. ' d' → logprob: -15.250009536743164
    6. '   ' → logprob: -16.125009536743164
    7. ')' → logprob: -16.500009536743164
    8. ' ' → logprob: -17.000009536743164
    9. '0' → logprob: -17.000009536743164
    10. '	d' → logprob: -17.500009536743164

Token 481: 'urr' (ID: 1057)
  Prédit: 'urr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urr' → logprob: -0.2014756053686142
    2. 'curr' → logprob: -1.7014756202697754
    3. '_curr' → logprob: -10.076475143432617
    4. ' curr' → logprob: -11.076475143432617
    5. 'Curr' → logprob: -13.076475143432617
    6. '[curr' → logprob: -14.451475143432617
    7. '	curr' → logprob: -14.701475143432617
    8. 'c' → logprob: -15.201475143432617
    9. ' urr' → logprob: -15.326475143432617
    10. '(curr' → logprob: -15.326475143432617

Token 482: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.049168605357408524
    2. ' +' → logprob: -3.424168586730957
    3. '+' → logprob: -4.174168586730957
    4. '   ' → logprob: -12.549168586730957
    5. '
' → logprob: -13.299168586730957
    6. 'd' → logprob: -13.549168586730957
    7. ')+' → logprob: -13.924168586730957
    8. '	' → logprob: -14.049168586730957
    9. '+
' → logprob: -14.049168586730957
    10. '	d' → logprob: -14.174168586730957

Token 483: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002189756603911519
    2. ' if' → logprob: -6.627189636230469
    3. '<|end|>' → logprob: -8.002189636230469
    4. ')
' → logprob: -8.252189636230469
    5. 'if' → logprob: -9.002189636230469
    6. '>' → logprob: -10.502189636230469
    7. ' )' → logprob: -10.627189636230469
    8. ')<=' → logprob: -10.877189636230469
    9. '<=' → logprob: -11.377189636230469
    10. ')%' → logprob: -11.502189636230469

Token 484: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ' add' (ID: 1147)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1877686083316803
    2. 'if' → logprob: -1.812768578529358
    3. '               ' → logprob: -5.312768459320068
    4. '           ' → logprob: -6.937768459320068
    5. '[' → logprob: -7.187768459320068
    6. ' ' → logprob: -7.937768459320068
    7. '<|end|>' → logprob: -8.312768936157227
    8. '                           ' → logprob: -9.062768936157227
    9. '                               ' → logprob: -9.312768936157227
    10. ')' → logprob: -9.312768936157227

Token 486: '=' (ID: 28)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.28884607553482056
    2. 'cost' → logprob: -1.7888460159301758
    3. '=' → logprob: -2.538846015930176
    4. ' =' → logprob: -5.913846015930176
    5. 'ed' → logprob: -6.538846015930176
    6. '=_' → logprob: -8.788846015930176
    7. 'itional' → logprob: -9.163846015930176
    8. 'fare' → logprob: -9.788846015930176
    9. ' cost' → logprob: -9.788846015930176
    10. '=f' → logprob: -9.913846015930176

Token 487: '0' (ID: 15)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.001529620960354805
    2. ' fare' → logprob: -6.501529693603516
    3. '0' → logprob: -11.001529693603516
    4. 'far' → logprob: -12.751529693603516
    5. 'fa' → logprob: -13.126529693603516
    6. 'fair' → logprob: -13.376529693603516
    7. 'fee' → logprob: -13.876529693603516
    8. 'Fare' → logprob: -14.751529693603516
    9. '   ' → logprob: -14.876529693603516
    10. '```' → logprob: -15.126529693603516

Token 488: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2633434534072876
    2. 'if' → logprob: -2.013343334197998
    3. '<|end|>' → logprob: -2.763343334197998
    4. '
' → logprob: -4.513343334197998
    5. ' ' → logprob: -5.513343334197998
    6. '           ' → logprob: -5.888343334197998
    7. 'for' → logprob: -6.138343334197998
    8. '[' → logprob: -6.138343334197998
    9. ' 
' → logprob: -6.263343334197998
    10. '+' → logprob: -6.513343334197998

Token 490: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2122177630662918
    2. '               ' → logprob: -2.5872178077697754
    3. 'for' → logprob: -2.5872178077697754
    4. ' if' → logprob: -3.7122178077697754
    5. '           ' → logprob: -5.087217807769775
    6. ' for' → logprob: -6.087217807769775
    7. 'fare' → logprob: -6.087217807769775
    8. 'while' → logprob: -6.462217807769775
    9. 'else' → logprob: -6.587217807769775
    10. 'elif' → logprob: -8.087217330932617

Token 491: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.01734996773302555
    2. ' nd' → logprob: -4.142350196838379
    3. 'd' → logprob: -8.017350196838379
    4. '   ' → logprob: -8.392350196838379
    5. 'fare' → logprob: -8.642350196838379
    6. 'dc' → logprob: -9.642350196838379
    7. '(nd' → logprob: -9.642350196838379
    8. '1' → logprob: -9.642350196838379
    9. 'n' → logprob: -10.017350196838379
    10. ' fare' → logprob: -10.017350196838379

Token 492: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20759248733520508
    2. ' >' → logprob: -1.957592487335205
    3. '<=' → logprob: -3.957592487335205
    4. '>=' → logprob: -4.082592487335205
    5. ' <=' → logprob: -4.957592487335205
    6. ' >=' → logprob: -6.207592487335205
    7. '<' → logprob: -7.707592487335205
    8. '[' → logprob: -8.207592010498047
    9. ' <' → logprob: -8.957592010498047
    10. '<len' → logprob: -9.082592010498047

Token 493: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.6362282633781433
    2. '100' → logprob: -0.7612282633781433
    3. '201' → logprob: -6.386228084564209
    4. '0' → logprob: -6.761228084564209
    5. ' ' → logprob: -7.511228084564209
    6. 'len' → logprob: -8.636228561401367
    7. 'd' → logprob: -10.386228561401367
    8. '199' → logprob: -12.386228561401367
    9. '   ' → logprob: -12.636228561401367
    10. '20' → logprob: -12.886228561401367

Token 494: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06170277297496796
    2. ' and' → logprob: -3.1867027282714844
    3. ':
' → logprob: -4.311702728271484
    4. 'and' → logprob: -6.061702728271484
    5. '<|end|>' → logprob: -6.436702728271484
    6. '<|end|>' → logprob: -7.811702728271484
    7. ' :' → logprob: -8.311702728271484
    8. '               ' → logprob: -8.936702728271484
    9. ':return' → logprob: -8.936702728271484
    10. ' or' → logprob: -10.436702728271484

Token 495: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06370433419942856
    2. 'continue' → logprob: -3.813704252243042
    3. ' continue' → logprob: -4.188704490661621
    4. '               ' → logprob: -4.188704490661621
    5. '
' → logprob: -6.063704490661621
    6. ' nd' → logprob: -6.063704490661621
    7. '                       ' → logprob: -6.688704490661621
    8. 'nd' → logprob: -7.063704490661621
    9. '<|end|>' → logprob: -7.813704490661621
    10. '                    
' → logprob: -8.188704490661621

Token 496: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5479426383972168
    2. 'add' → logprob: -1.1729426383972168
    3. 'nd' → logprob: -2.672942638397217
    4. '                   ' → logprob: -3.672942638397217
    5. '   ' → logprob: -4.672942638397217
    6. '               ' → logprob: -5.547942638397217
    7. '           ' → logprob: -6.672942638397217
    8. ' continue' → logprob: -6.922942638397217
    9. 'break' → logprob: -7.172942638397217
    10. '#' (adapté à ' #') → logprob: -8.422943115234375

Token 497: ' max' (ID: 2999)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6389310956001282
    2. 'add' → logprob: -0.8889310956001282
    3. 'nd' → logprob: -2.8889310359954834
    4. '                   ' → logprob: -6.3889312744140625
    5. '               ' → logprob: -7.0139312744140625
    6. '   ' → logprob: -7.0139312744140625
    7. 'break' → logprob: -7.1389312744140625
    8. '           ' → logprob: -8.263931274414062
    9. ' continue' → logprob: -8.638931274414062
    10. 'fare' → logprob: -8.888931274414062

Token 498: ' dist' (ID: 3601)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.10100006312131882
    2. ' nd' → logprob: -3.6010000705718994
    3. 'd' → logprob: -4.10099983215332
    4. '200' → logprob: -4.22599983215332
    5. '(nd' → logprob: -4.35099983215332
    6. '=' → logprob: -5.10099983215332
    7. ')' → logprob: -5.85099983215332
    8. '_nd' → logprob: -6.10099983215332
    9. '```' → logprob: -6.22599983215332
    10. 'distance' → logprob: -6.72599983215332

Token 499: ' stored' (ID: 16240)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.08795655518770218
    2. '=' → logprob: -3.462956666946411
    3. ' nd' → logprob: -3.712956666946411
    4. '                   ' → logprob: -4.087956428527832
    5. '               ' → logprob: -4.962956428527832
    6. ' =' → logprob: -5.837956428527832
    7. '(nd' → logprob: -7.837956428527832
    8. 'd' → logprob: -8.087956428527832
    9. 'continue' → logprob: -8.337956428527832
    10. 'add' → logprob: -8.712956428527832

Token 500: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18246100842952728
    2. 'nd' → logprob: -2.3074610233306885
    3. ' =' → logprob: -4.182460784912109
    4. ')' → logprob: -4.182460784912109
    5. ']' → logprob: -4.307460784912109
    6. ' nd' → logprob: -4.432460784912109
    7. ']=' → logprob: -5.057460784912109
    8. '```' → logprob: -7.182460784912109
    9. '(nd' → logprob: -7.557460784912109
    10. '               ' → logprob: -7.682460784912109

Token 501: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.0001415618316968903
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.250141143798828
    4. '  ' → logprob: -15.250141143798828
    5. '```' → logprob: -15.375141143798828
    6. '201' → logprob: -15.750141143798828
    7. '
' → logprob: -15.875141143798828
    8. '199' → logprob: -15.875141143798828
    9. '0' → logprob: -17.625141143798828
    10. '    ' → logprob: -17.875141143798828

Token 502: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.62501049041748
    3. '
' → logprob: -14.00001049041748
    4. '```' → logprob: -14.62501049041748
    5. '   ' → logprob: -15.50001049041748
    6. '201' → logprob: -15.62501049041748
    7. '  ' → logprob: -16.000011444091797
    8. '199' → logprob: -17.250011444091797
    9. '=' → logprob: -17.875011444091797
    10. '0' → logprob: -18.125011444091797

Token 503: ',' (ID: 11)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.7429372072219849
    2. ' nd' → logprob: -1.2429372072219849
    3. '                   ' → logprob: -1.6179372072219849
    4. '               ' → logprob: -3.9929370880126953
    5. 'continue' → logprob: -4.742937088012695
    6. '
' → logprob: -4.992937088012695
    7. ' continue' → logprob: -6.367937088012695
    8. '```' → logprob: -7.117937088012695
    9. '                       ' → logprob: -7.742937088012695
    10. '(nd' → logprob: -8.492937088012695

Token 504: ' to' (ID: 316)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.47446560859680176
    2. ' nd' → logprob: -0.9744656085968018
    3. '                   ' → logprob: -8.224465370178223
    4. '               ' → logprob: -10.224465370178223
    5. '_nd' → logprob: -10.474465370178223
    6. '                       ' → logprob: -10.974465370178223
    7. '(nd' → logprob: -11.099465370178223
    8. '.nd' → logprob: -11.974465370178223
    9. '
' → logprob: -11.974465370178223
    10. '                           ' → logprob: -13.349465370178223

Token 505: ' guarantee' (ID: 16218)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.19612593948841095
    2. ' nd' → logprob: -1.8211259841918945
    3. '
' → logprob: -5.1961259841918945
    4. 'd' → logprob: -5.6961259841918945
    5. 'rd' → logprob: -6.0711259841918945
    6. ' avoid' → logprob: -7.4461259841918945
    7. '250' → logprob: -7.8211259841918945
    8. '200' → logprob: -7.8211259841918945
    9. ' keep' → logprob: -8.071125984191895
    10. 'n' → logprob: -8.196125984191895

Token 506: ' performance' (ID: 6198)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.47711750864982605
    2. ' nd' → logprob: -0.9771175384521484
    3. '```' → logprob: -7.227117538452148
    4. '
' → logprob: -7.602117538452148
    5. 'add' → logprob: -8.227117538452148
    6. ' add' → logprob: -8.477117538452148
    7. '   ' → logprob: -8.477117538452148
    8. 'cost' → logprob: -8.852117538452148
    9. '200' → logprob: -8.852117538452148
    10. '_nd' → logprob: -9.477117538452148

Token 507: '
' (ID: 198)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.1844785362482071
    2. 'nd' → logprob: -2.059478521347046
    3. '
' → logprob: -4.184478759765625
    4. ',' → logprob: -4.809478759765625
    5. 'continue' → logprob: -5.309478759765625
    6. '                   ' → logprob: -5.559478759765625
    7. ' continue' → logprob: -5.684478759765625
    8. '```' → logprob: -6.184478759765625
    9. '               ' → logprob: -7.184478759765625
    10. '(nd' → logprob: -7.809478759765625

Token 508: '                   ' (ID: 699)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.6576794385910034
    2. '                   ' → logprob: -1.4076794385910034
    3. 'nd' → logprob: -2.407679557800293
    4. '
' → logprob: -2.907679557800293
    5. '               ' → logprob: -3.657679557800293
    6. 'continue' → logprob: -4.282679557800293
    7. ')' → logprob: -4.532679557800293
    8. ' continue' → logprob: -4.532679557800293
    9. ',' → logprob: -5.157679557800293
    10. '```' → logprob: -5.282679557800293

Token 509: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.05016987770795822
    2. 'continue' → logprob: -3.6751699447631836
    3. '                   ' → logprob: -4.800169944763184
    4. 'add' → logprob: -5.175169944763184
    5. ' nd' → logprob: -5.300169944763184
    6. '               ' → logprob: -5.800169944763184
    7. '           ' → logprob: -8.175169944763184
    8. '   ' → logprob: -8.300169944763184
    9. '                       ' → logprob: -8.300169944763184
    10. ' continue' → logprob: -8.425169944763184

Token 510: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00043400691356509924
    2. ' =' → logprob: -7.750433921813965
    3. '=min' → logprob: -12.875433921813965
    4. '=max' → logprob: -14.625433921813965
    5. '=
' → logprob: -16.12543487548828
    6. '=len' → logprob: -16.62543487548828
    7. '＝' → logprob: -17.50043487548828
    8. '=

' → logprob: -18.00043487548828
    9. '=d' → logprob: -18.62543487548828
    10. '=n' → logprob: -18.87543487548828

Token 511: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.125006675720215
    3. '201' → logprob: -14.625006675720215
    4. '   ' → logprob: -14.625006675720215
    5. '199' → logprob: -15.625006675720215
    6. '  ' → logprob: -16.00000762939453
    7. '20' → logprob: -17.12500762939453
    8. '
' → logprob: -17.25000762939453
    9. '    ' → logprob: -18.00000762939453
    10. '2' → logprob: -18.12500762939453

Token 512: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6143009066581726
    2. '
' → logprob: -0.8643009066581726
    3. '<|end|>' → logprob: -3.7393009662628174
    4. '           ' → logprob: -5.614300727844238
    5. '                
' → logprob: -5.864300727844238
    6. ',' → logprob: -6.364300727844238
    7. '                   ' → logprob: -6.739300727844238
    8. ')' → logprob: -7.364300727844238
    9. '<|end|>' → logprob: -7.739300727844238
    10. ' else' → logprob: -7.864300727844238

Token 513: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09103724360466003
    2. '
' → logprob: -2.8410372734069824
    3. ' else' → logprob: -4.466037273406982
    4. '<|end|>' → logprob: -5.341037273406982
    5. '           ' → logprob: -5.716037273406982
    6. '                
' → logprob: -5.966037273406982
    7. ' 
' → logprob: -6.216037273406982
    8. 'else' → logprob: -6.716037273406982
    9. '                   ' → logprob: -7.216037273406982
    10. ' add' → logprob: -7.341037273406982

Token 514: ' n' (ID: 297)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.138796091079712
    2. 'else' → logprob: -1.263796091079712
    3. '               ' → logprob: -1.388796091079712
    4. 'cost' → logprob: -2.763796091079712
    5. ' else' → logprob: -4.138795852661133
    6. 'if' → logprob: -4.263795852661133
    7. 'fare' → logprob: -4.263795852661133
    8. ' add' → logprob: -4.388795852661133
    9. '           ' → logprob: -4.638795852661133
    10. 'print' → logprob: -5.513795852661133

Token 515: 'cost' (ID: 33457)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6894509792327881
    2. 'cost' → logprob: -1.064450979232788
    3. 'dist' → logprob: -2.314450979232788
    4. 'ew' → logprob: -3.939450979232788
    5. 'add' → logprob: -4.564451217651367
    6. 'w' → logprob: -4.939451217651367
    7. 'dc' → logprob: -5.439451217651367
    8. 'c' → logprob: -5.689451217651367
    9. 'fare' → logprob: -6.189451217651367
    10. 'ext' → logprob: -6.814451217651367

Token 516: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020554153248667717
    2. ' =' → logprob: -3.8955540657043457
    3. '=c' → logprob: -12.270554542541504
    4. '=
' → logprob: -12.395554542541504
    5. '+=' → logprob: -13.395554542541504
    6. '=

' → logprob: -14.895554542541504
    7. '=cut' → logprob: -15.020554542541504
    8. '=f' → logprob: -15.395554542541504
    9. '＝' → logprob: -15.520554542541504
    10. ' =
' → logprob: -16.270553588867188

Token 517: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00033593899570405483
    2. ' cost' → logprob: -8.000335693359375
    3. 'dist' → logprob: -14.875335693359375
    4. '   ' → logprob: -17.375335693359375
    5. 'fare' → logprob: -17.625335693359375
    6. '(cost' → logprob: -17.875335693359375
    7. '```' → logprob: -20.000335693359375
    8. '
' → logprob: -20.250335693359375
    9. 'code' → logprob: -20.375335693359375
    10. 'price' → logprob: -20.625335693359375

Token 518: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018161294981837273
    2. ' +' → logprob: -4.018161296844482
    3. '+
' → logprob: -12.393160820007324
    4. '+n' → logprob: -12.643160820007324
    5. '+=' → logprob: -13.768160820007324
    6. ' +
' → logprob: -14.268160820007324
    7. '+[' → logprob: -14.643160820007324
    8. '+(' → logprob: -15.018160820007324
    9. '+r' → logprob: -15.143160820007324
    10. '+h' → logprob: -15.518160820007324

Token 519: '               ' (ID: 506)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14312796294689178
    2. ' +' → logprob: -2.018127918243408
    3. '+n' → logprob: -9.393128395080566
    4. '
' → logprob: -9.518128395080566
    5. '               ' → logprob: -9.893128395080566
    6. '+[' → logprob: -10.393128395080566
    7. '+=' → logprob: -10.518128395080566
    8. '+
' → logprob: -10.768128395080566
    9. '<|end|>' → logprob: -10.768128395080566
    10. '           ' → logprob: -10.768128395080566

Token 520: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04813668504357338
    2. ' +' → logprob: -3.2981367111206055
    3. 'if' → logprob: -5.6731367111206055
    4. '+=' → logprob: -6.1731367111206055
    5. ' if' → logprob: -6.5481367111206055
    6. '
' → logprob: -7.2981367111206055
    7. 'n' → logprob: -7.7981367111206055
    8. '=' → logprob: -7.9231367111206055
    9. '+n' → logprob: -8.048136711120605
    10. '+
' → logprob: -8.173136711120605

Token 521: ' fare' (ID: 25285)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20061303675174713
    2. 'n' → logprob: -2.825613021850586
    3. 'add' → logprob: -3.200613021850586
    4. 'nc' → logprob: -3.700613021850586
    5. '               ' → logprob: -3.950613021850586
    6. 'fare' → logprob: -4.825613021850586
    7. '#' → logprob: -4.950613021850586
    8. 'for' → logprob: -5.075613021850586
    9. 'else' → logprob: -5.700613021850586
    10. '           ' → logprob: -6.075613021850586

Token 522: ' not' (ID: 625)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1333528608083725
    2. '+=' → logprob: -2.633352756500244
    3. '_table' → logprob: -4.758352756500244
    4. '_cost' → logprob: -4.883352756500244
    5. ' =' → logprob: -5.008352756500244
    6. '_add' → logprob: -5.258352756500244
    7. ' +=' → logprob: -5.508352756500244
    8. 'for' → logprob: -5.633352756500244
    9. '[' → logprob: -5.758352756500244
    10. '_increment' → logprob: -6.008352756500244

Token 523: ' added' (ID: 5768)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1645800918340683
    2. '=' → logprob: -2.4145801067352295
    3. ' +=' → logprob: -2.9145801067352295
    4. ']+=' → logprob: -6.03957986831665
    5. '_tables' → logprob: -6.53957986831665
    6. '+' → logprob: -6.53957986831665
    7. '[' → logprob: -7.16457986831665
    8. '+=(' → logprob: -7.41457986831665
    9. ' =' → logprob: -7.91457986831665
    10. '[n' → logprob: -9.039580345153809

Token 524: ' yet' (ID: 5073)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49898549914360046
    2. ' +' → logprob: -1.6239855289459229
    3. ' +=' → logprob: -2.248985528945923
    4. '<|end|>' → logprob: -2.998985528945923
    5. '+=' → logprob: -4.248985290527344
    6. '<|end|>' → logprob: -5.248985290527344
    7. '=' → logprob: -5.498985290527344
    8. ' =' → logprob: -5.998985290527344
    9. '+
' → logprob: -6.248985290527344
    10. ' +
' → logprob: -6.373985290527344

Token 525: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.588135838508606
    2. '+' → logprob: -1.838135838508606
    3. ' +' → logprob: -2.4631357192993164
    4. '<|end|>' → logprob: -2.4631357192993164
    5. ' +=' → logprob: -2.8381357192993164
    6. ' =' → logprob: -4.088135719299316
    7. '<|end|>' → logprob: -4.463135719299316
    8. '+=' → logprob: -4.963135719299316
    9. ' if' → logprob: -5.463135719299316
    10. '           ' → logprob: -5.463135719299316

Token 526: 'only' (ID: 7393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19611507654190063
    2. ' )' → logprob: -2.571115016937256
    3. ' +' → logprob: -2.946115016937256
    4. '+' → logprob: -3.196115016937256
    5. '<|end|>' → logprob: -5.571115016937256
    6. ')
' → logprob: -6.946115016937256
    7. ' +
' → logprob: -7.571115016937256
    8. '+n' → logprob: -7.946115016937256
    9. ' )
' → logprob: -8.071115493774414
    10. '+)' → logprob: -8.196115493774414

Token 527: ' on' (ID: 402)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.5110552310943604
    2. 'add' → logprob: -1.6360552310943604
    3. 'when' → logprob: -1.8860552310943604
    4. 'for' → logprob: -2.2610552310943604
    5. 'if' → logprob: -2.7610552310943604
    6. 'fare' → logprob: -3.6360552310943604
    7. 'adding' → logprob: -3.8860552310943604
    8. 'acc' → logprob: -4.011054992675781
    9. 'increment' → logprob: -4.136054992675781
    10. 'the' → logprob: -4.261054992675781

Token 528: ' switching' (ID: 45236)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.2148858606815338
    2. 'company' → logprob: -2.464885950088501
    3. 'change' → logprob: -3.589885950088501
    4. 'line' → logprob: -3.589885950088501
    5. 'changing' → logprob: -4.214885711669922
    6. 'continu' → logprob: -5.214885711669922
    7. 'station' → logprob: -5.464885711669922
    8. 'fare' → logprob: -5.839885711669922
    9. ' switching' → logprob: -5.839885711669922
    10. 'distance' → logprob: -5.964885711669922

Token 529: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005665445234626532
    2. ')
' → logprob: -5.630665302276611
    3. ' )' → logprob: -6.255665302276611
    4. ' )
' → logprob: -10.50566577911377
    5. '),' → logprob: -10.88066577911377
    6. ' or' → logprob: -11.25566577911377
    7. '               ' → logprob: -11.38066577911377
    8. '           ' → logprob: -11.38066577911377
    9. '
' → logprob: -11.75566577911377
    10. ',' → logprob: -11.88066577911377

Token 530: ' end' (ID: 1268)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.7971233129501343
    2. 'arrival' → logprob: -1.6721233129501343
    3. 'start' → logprob: -2.797123432159424
    4. 'ending' → logprob: -3.172123432159424
    5. 'when' → logprob: -3.297123432159424
    6. 'st' → logprob: -3.422123432159424
    7. 'continu' → logprob: -3.547123432159424
    8. 'reset' → logprob: -3.672123432159424
    9. 'changing' → logprob: -3.922123432159424
    10. 'arr' → logprob: -4.297123432159424

Token 531: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05981392413377762
    2. 'of' → logprob: -3.559813976287842
    3. ')
' → logprob: -4.684813976287842
    4. '               ' → logprob: -5.309813976287842
    5. ' of' → logprob: -5.309813976287842
    6. '           ' → logprob: -5.684813976287842
    7. 'if' → logprob: -5.809813976287842
    8. '_of' → logprob: -7.434813976287842
    9. '),' → logprob: -7.559813976287842
    10. 'cost' → logprob: -7.934813976287842

Token 532: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4473423361778259
    2. '               ' → logprob: -1.8223423957824707
    3. '<|end|>' → logprob: -1.9473423957824707
    4. ')' → logprob: -3.6973423957824707
    5. '<|end|>' → logprob: -5.072342395782471
    6. '       ' → logprob: -5.322342395782471
    7. '+' → logprob: -5.697342395782471
    8. ',' → logprob: -5.822342395782471
    9. '            
' → logprob: -6.822342395782471
    10. ' if' → logprob: -6.947342395782471

Token 533: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3961280882358551
    2. '               ' → logprob: -1.2711280584335327
    3. 'elif' → logprob: -3.6461281776428223
    4. 'else' → logprob: -4.271128177642822
    5. 'if' → logprob: -6.146128177642822
    6. ' if' → logprob: -6.771128177642822
    7. ' else' → logprob: -6.771128177642822
    8. ' elif' → logprob: -7.146128177642822
    9. ',' → logprob: -8.271127700805664
    10. '                
' → logprob: -8.396127700805664

Token 534: ' Here' (ID: 7306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6045856475830078
    2. 'if' → logprob: -1.8545856475830078
    3. '           ' → logprob: -1.9795856475830078
    4. 'else' → logprob: -2.854585647583008
    5. 'elif' → logprob: -2.854585647583008
    6. ' if' → logprob: -4.104585647583008
    7. 'heap' → logprob: -4.229585647583008
    8. 'n' → logprob: -5.604585647583008
    9. 'pass' → logprob: -6.104585647583008
    10. '#' → logprob: -6.604585647583008

Token 535: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4070315957069397
    2. 'if' → logprob: -1.907031536102295
    3. '               ' → logprob: -2.282031536102295
    4. '           ' → logprob: -3.032031536102295
    5. '                   ' → logprob: -4.657031536102295
    6. 'continue' → logprob: -5.907031536102295
    7. ',' → logprob: -6.157031536102295
    8. '<|end|>' → logprob: -6.282031536102295
    9. ' =' → logprob: -6.407031536102295
    10. ' continue' → logprob: -6.532031536102295

Token 536: ' accumulate' (ID: 74226)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5548439621925354
    2. ' continue' → logprob: -0.9298439621925354
    3. ' are' → logprob: -5.179843902587891
    4. 'should' → logprob: -5.304843902587891
    5. ' should' → logprob: -5.429843902587891
    6. '<|end|>' → logprob: -5.929843902587891
    7. 'are' → logprob: -6.054843902587891
    8. ' need' → logprob: -6.929843902587891
    9. 'must' → logprob: -7.179843902587891
    10. 'continu' → logprob: -7.179843902587891

Token 537: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.7672204971313477
    2. 'the' → logprob: -2.2672204971313477
    3. ' nd' → logprob: -2.2672204971313477
    4. ' the' → logprob: -2.3922204971313477
    5. 'nd' → logprob: -2.3922204971313477
    6. 'd' → logprob: -3.8922204971313477
    7. ' distance' → logprob: -4.142220497131348
    8. ' only' → logprob: -4.642220497131348
    9. 'continue' → logprob: -4.767220497131348
    10. 'dist' → logprob: -5.017220497131348

Token 538: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049899887293577194
    2. ',' → logprob: -4.049900054931641
    3. ' and' → logprob: -4.674900054931641
    4. '           ' → logprob: -4.924900054931641
    5. 'and' → logprob: -6.174900054931641
    6. '=' → logprob: -6.174900054931641
    7. ' for' → logprob: -6.674900054931641
    8. 'else' → logprob: -6.674900054931641
    9. ' but' → logprob: -6.674900054931641
    10. ' else' → logprob: -6.674900054931641

Token 539: ' same' (ID: 2684)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.9234575629234314
    2. 'out' → logprob: -1.0484576225280762
    3. 'no' → logprob: -2.048457622528076
    4. 'current' → logprob: -4.048457622528076
    5. ' nd' → logprob: -4.048457622528076
    6. 'nd' → logprob: -4.173457622528076
    7. 'fare' → logprob: -4.673457622528076
    8. ' current' → logprob: -4.923457622528076
    9. ' fare' → logprob: -4.923457622528076
    10. 'the' → logprob: -5.048457622528076

Token 540: ' co' (ID: 1407)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.35310712456703186
    2. 'cc' → logprob: -1.3531070947647095
    3. 'line' → logprob: -3.478107213973999
    4. 'nd' → logprob: -5.97810697555542
    5. 'comp' → logprob: -6.22810697555542
    6. ' line' → logprob: -6.60310697555542
    7. ' company' → logprob: -7.22810697555542
    8. ' cc' → logprob: -7.85310697555542
    9. '
' → logprob: -8.103107452392578
    10. 'current' → logprob: -8.478107452392578

Token 541: '
' (ID: 198)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -8.537868779967539e-06
    2. 'omp' → logprob: -12.500008583068848
    3. ' mp' → logprob: -13.750008583068848
    4. '   ' → logprob: -14.000008583068848
    5. '  ' → logprob: -15.375008583068848
    6. 'm' → logprob: -15.375008583068848
    7. '    ' → logprob: -15.375008583068848
    8. 'np' → logprob: -15.500008583068848
    9. 'mpi' → logprob: -15.500008583068848
    10. '     ' → logprob: -15.625008583068848

Token 542: '               ' (ID: 506)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.9739500880241394
    2. '           ' → logprob: -1.9739501476287842
    3. '               ' → logprob: -2.473950147628784
    4. 'nt' → logprob: -2.473950147628784
    5. 'de' → logprob: -2.473950147628784
    6. '<|end|>' → logprob: -3.348950147628784
    7. ')' → logprob: -3.473950147628784
    8. '            
' → logprob: -3.473950147628784
    9. 'n' → logprob: -3.723950147628784
    10. '            ' → logprob: -4.223949909210205

Token 543: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1154413223266602
    2. '               ' → logprob: -1.1154413223266602
    3. ' else' → logprob: -2.24044132232666
    4. ' if' → logprob: -2.36544132232666
    5. 'else' → logprob: -2.86544132232666
    6. ')' → logprob: -4.11544132232666
    7. '                
' → logprob: -4.36544132232666
    8. 'if' (adapté à ' if') → logprob: -4.99044132232666
    9. ' elif' → logprob: -5.11544132232666
    10. 'elif' → logprob: -5.11544132232666

Token 544: ' dist' (ID: 3601)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -1.3424192667007446
    2. 'False' → logprob: -1.3424192667007446
    3. ' nd' → logprob: -1.8424192667007446
    4. 'nd' → logprob: -2.092419147491455
    5. ' False' → logprob: -2.592419147491455
    6. ' cc' → logprob: -3.467419147491455
    7. ' d' → logprob: -4.342419147491455
    8. 'd' → logprob: -4.592419147491455
    9. 'dc' → logprob: -4.717419147491455
    10. ' dc' → logprob: -4.717419147491455

Token 545: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.5784943103790283
    2. '[u' → logprob: -0.8284943103790283
    3. '[' → logprob: -6.203494071960449
    4. '[n' → logprob: -8.07849407196045
    5. '[d' → logprob: -10.20349407196045
    6. 'v' → logprob: -10.45349407196045
    7. '[next' → logprob: -10.70349407196045
    8. '[node' → logprob: -11.20349407196045
    9. '```' → logprob: -11.20349407196045
    10. '[c' → logprob: -11.57849407196045

Token 546: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018773240968585014
    2. '][' → logprob: -4.018773078918457
    3. '[line' → logprob: -7.643773078918457
    4. 'cc' → logprob: -9.768773078918457
    5. '[v' → logprob: -10.893773078918457
    6. ']' → logprob: -11.268773078918457
    7. ')[' → logprob: -11.643773078918457
    8. '[cur' → logprob: -12.393773078918457
    9. ' [' → logprob: -12.518773078918457
    10. '[curr' → logprob: -12.643773078918457

Token 547: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0004509301797952503
    2. 'line' → logprob: -7.75045108795166
    3. ' cc' → logprob: -11.87545108795166
    4. 'nd' → logprob: -12.12545108795166
    5. 'c' → logprob: -13.37545108795166
    6. '   ' → logprob: -13.50045108795166
    7. 'nc' → logprob: -13.75045108795166
    8. 'v' → logprob: -14.25045108795166
    9. '	cc' → logprob: -14.87545108795166
    10. '(cc' → logprob: -14.87545108795166

Token 548: 'urr' (ID: 1057)
  Prédit: 'urr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urr' → logprob: -0.003204688662663102
    2. 'curr' → logprob: -5.753204822540283
    3. '   ' → logprob: -12.628204345703125
    4. 'ur' → logprob: -13.003204345703125
    5. ' curr' → logprob: -13.253204345703125
    6. ' ' → logprob: -13.253204345703125
    7. '[curr' → logprob: -13.378204345703125
    8. 'arr' → logprob: -13.378204345703125
    9. '
' → logprob: -13.503204345703125
    10. '...' → logprob: -13.628204345703125

Token 549: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00038384052459150553
    2. '[' → logprob: -8.125383377075195
    3. ']' → logprob: -9.500383377075195
    4. ' ][' → logprob: -12.250383377075195
    5. ']][' → logprob: -13.375383377075195
    6. ']==' → logprob: -13.625383377075195
    7. '"][' → logprob: -14.125383377075195
    8. '<|end|>' → logprob: -14.375383377075195
    9. '<|end|>' → logprob: -14.625383377075195
    10. ' ' → logprob: -14.625383377075195

Token 550: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -4.7159857786027715e-05
    2. ' nd' → logprob: -10.125046730041504
    3. '   ' → logprob: -12.750046730041504
    4. '
' → logprob: -13.375046730041504
    5. '(nd' → logprob: -14.500046730041504
    6. 'min' → logprob: -14.625046730041504
    7. 'nc' → logprob: -15.250046730041504
    8. '  ' → logprob: -15.500046730041504
    9. '```' → logprob: -15.500046730041504
    10. ' ' → logprob: -15.875046730041504

Token 551: ']>' (ID: 54651)
  Prédit: ']>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.4790574014186859
    2. ']' → logprob: -0.9790574312210083
    3. ']==' → logprob: -5.479057312011719
    4. '>' → logprob: -7.479057312011719
    5. ']<=' → logprob: -8.979057312011719
    6. ' ]' → logprob: -9.979057312011719
    7. ']!=' → logprob: -11.104057312011719
    8. ']<' → logprob: -11.729057312011719
    9. ']>=' → logprob: -11.729057312011719
    10. ']>
' → logprob: -12.354057312011719

Token 552: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -1.664371848164592e-05
    2. 'n' → logprob: -11.750016212463379
    3. ' n' → logprob: -12.500016212463379
    4. 'cost' → logprob: -12.750016212463379
    5. ' nc' → logprob: -13.125016212463379
    6. '   ' → logprob: -16.250017166137695
    7. '
' → logprob: -17.125017166137695
    8. 'NC' → logprob: -17.375017166137695
    9. '	n' → logprob: -18.000017166137695
    10. '```' → logprob: -18.125017166137695

Token 553: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -4.179569077678025e-05
    2. 'cost' → logprob: -10.250041961669922
    3. 'st' → logprob: -12.125041961669922
    4. 'os' → logprob: -14.625041961669922
    5. 'o' → logprob: -15.625041961669922
    6. '_cost' → logprob: -16.125041961669922
    7. ' cost' → logprob: -16.625041961669922
    8. 'ост' → logprob: -16.750041961669922
    9. ' ost' → logprob: -17.000041961669922
    10. 'ot' → logprob: -17.875041961669922

Token 554: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04170457646250725
    2. ':
' → logprob: -3.2917046546936035
    3. '=' → logprob: -7.1667046546936035
    4. '           ' → logprob: -7.6667046546936035
    5. '):' → logprob: -7.7917046546936035
    6. '):
' → logprob: -7.9167046546936035
    7. '       ' → logprob: -8.041704177856445
    8. '<|end|>' → logprob: -8.041704177856445
    9. '               ' → logprob: -8.666704177856445
    10. ' and' → logprob: -8.666704177856445

Token 555: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30880260467529297
    2. '                   ' → logprob: -2.183802604675293
    3. '           ' → logprob: -2.558802604675293
    4. 'dist' → logprob: -2.933802604675293
    5. '                       ' → logprob: -5.058802604675293
    6. ' dist' → logprob: -5.433802604675293
    7. '```' → logprob: -5.808802604675293
    8. '                               ' → logprob: -6.058802604675293
    9. '                           ' → logprob: -6.183802604675293
    10. '<|end|>' → logprob: -6.433802604675293

Token 556: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0332602933049202
    2. ' dist' → logprob: -3.6582603454589844
    3. '                   ' → logprob: -5.158260345458984
    4. '               ' → logprob: -7.033260345458984
    5. '                       ' → logprob: -8.283260345458984
    6. '                           ' → logprob: -11.158260345458984
    7. '           ' → logprob: -11.283260345458984
    8. '	dist' → logprob: -11.283260345458984
    9. '   ' → logprob: -12.783260345458984
    10. '       ' → logprob: -13.158260345458984

Token 557: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -15.75
    3. '[u' → logprob: -17.0
    4. '(v' → logprob: -18.0
    5. '<v' → logprob: -18.125
    6. '=v' → logprob: -18.25
    7. '```' → logprob: -18.5
    8. ',v' → logprob: -19.125
    9. '[' → logprob: -19.5
    10. '	v' → logprob: -19.5

Token 558: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3190581798553467
    2. '[v' → logprob: -1.3190581798553467
    3. '[' → logprob: -5.319058418273926
    4. '[u' → logprob: -7.194058418273926
    5. '<|end|>' → logprob: -10.444058418273926
    6. ')[' → logprob: -10.819058418273926
    7. '}[' → logprob: -10.944058418273926
    8. ']' → logprob: -11.069058418273926
    9. '"][' → logprob: -11.944058418273926
    10. '[cur' → logprob: -12.194058418273926

Token 559: 'cc' (ID: 710)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0023088154848665
    2. 'cc' → logprob: -6.1273088455200195
    3. ' v' → logprob: -9.62730884552002
    4. 'c' → logprob: -10.50230884552002
    5. '[v' → logprob: -10.50230884552002
    6. '[' → logprob: -13.75230884552002
    7. ' ' → logprob: -14.62730884552002
    8. '   ' → logprob: -14.87730884552002
    9. '(v' → logprob: -15.25230884552002
    10. '```' → logprob: -15.75230884552002

Token 560: 'urr' (ID: 1057)
  Prédit: 'urr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urr' → logprob: -0.0025231034960597754
    2. 'curr' → logprob: -6.002522945404053
    3. '[' → logprob: -10.877523422241211
    4. '[curr' → logprob: -11.502523422241211
    5. ' curr' → logprob: -11.752523422241211
    6. 'orr' → logprob: -13.752523422241211
    7. '   ' → logprob: -14.127523422241211
    8. 'rr' → logprob: -14.252523422241211
    9. '_curr' → logprob: -14.252523422241211
    10. '[c' → logprob: -14.377523422241211

Token 561: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01825037971138954
    2. '[' → logprob: -4.018250465393066
    3. ']' → logprob: -10.393250465393066
    4. '<|end|>' → logprob: -10.768250465393066
    5. '"][' → logprob: -11.268250465393066
    6. ''][' → logprob: -11.393250465393066
    7. ')[' → logprob: -12.268250465393066
    8. ']][' → logprob: -13.018250465393066
    9. ' ][' → logprob: -13.018250465393066
    10. '   ' → logprob: -13.643250465393066

Token 562: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -4.60414821645827e-06
    2. ' nd' → logprob: -12.500004768371582
    3. '[' → logprob: -14.125004768371582
    4. 'n' → logprob: -16.500003814697266
    5. '_nd' → logprob: -17.500003814697266
    6. '(nd' → logprob: -18.250003814697266
    7. 'nc' → logprob: -18.375003814697266
    8. '
' → logprob: -18.625003814697266
    9. '   ' → logprob: -19.250003814697266
    10. '```' → logprob: -19.750003814697266

Token 563: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2525148093700409
    2. ']=' → logprob: -1.5025148391723633
    3. ']' → logprob: -8.002514839172363
    4. ' =' → logprob: -9.002514839172363
    5. '=n' → logprob: -9.252514839172363
    6. ')=' → logprob: -10.752514839172363
    7. '=
' → logprob: -12.377514839172363
    8. '=

' → logprob: -13.002514839172363
    9. '=new' → logprob: -13.502514839172363
    10. '"]=' → logprob: -15.002514839172363

Token 564: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -2.2200749754119897e-06
    2. ' nc' → logprob: -13.375001907348633
    3. ' n' → logprob: -15.250001907348633
    4. 'n' → logprob: -15.500001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '_nc' → logprob: -18.875001907348633
    7. '
' → logprob: -19.250001907348633
    8. 'cost' → logprob: -19.375001907348633
    9. '	n' → logprob: -19.500001907348633
    10. '
' → logprob: -19.875001907348633

Token 565: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.020599929615855217
    2. 'cost' → logprob: -3.895599842071533
    3. 'st' → logprob: -9.895600318908691
    4. ' cost' → logprob: -13.020600318908691
    5. '_cost' → logprob: -13.145600318908691
    6. 'Cost' → logprob: -13.270600318908691
    7. 'opt' → logprob: -14.770600318908691
    8. 'kost' → logprob: -14.770600318908691
    9. 't' → logprob: -16.270599365234375
    10. 'os' → logprob: -16.395599365234375

Token 566: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00022249009634833783
    2. 'heap' → logprob: -8.625222206115723
    3. '               ' → logprob: -10.625222206115723
    4. '                       ' → logprob: -12.625222206115723
    5. '				' → logprob: -13.000222206115723
    6. '           ' → logprob: -13.000222206115723
    7. '                           ' → logprob: -13.000222206115723
    8. '                  ' → logprob: -13.125222206115723
    9. ' heap' → logprob: -13.625222206115723
    10. '(heap' → logprob: -13.875222206115723

Token 567: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008656067657284439
    2. 'heap' → logprob: -7.125865459442139
    3. '               ' → logprob: -10.000865936279297
    4. '                       ' → logprob: -12.625865936279297
    5. '           ' → logprob: -12.625865936279297
    6. '```' → logprob: -13.375865936279297
    7. '                           ' → logprob: -13.500865936279297
    8. '                  ' → logprob: -13.625865936279297
    9. '   ' → logprob: -13.875865936279297
    10. ' heap' → logprob: -14.000865936279297

Token 568: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0023516223300248384
    2. '                   ' → logprob: -6.377351760864258
    3. ' heap' → logprob: -7.377351760864258
    4. '               ' → logprob: -11.252351760864258
    5. '                       ' → logprob: -12.127351760864258
    6. '           ' → logprob: -12.877351760864258
    7. '                           ' → logprob: -13.627351760864258
    8. 'he' → logprob: -14.502351760864258
    9. '   ' → logprob: -14.627351760864258
    10. '```' → logprob: -15.377351760864258

Token 569: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.935296834039036e-06
    2. '.he' → logprob: -13.00000286102295
    3. 'push' → logprob: -15.25000286102295
    4. 'p' → logprob: -16.375003814697266
    5. '```' → logprob: -16.375003814697266
    6. 'app' → logprob: -16.500003814697266
    7. '.push' → logprob: -16.500003814697266
    8. '.append' → logprob: -17.500003814697266
    9. '.heap' → logprob: -18.000003814697266
    10. '.' → logprob: -18.125003814697266

Token 570: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -6.034592388459714e-06
    2. 'q' → logprob: -12.750005722045898
    3. '.heap' → logprob: -13.375005722045898
    4. 'he' → logprob: -13.750005722045898
    5. '.push' → logprob: -15.500005722045898
    6. ' he' → logprob: -16.5000057220459
    7. 'app' → logprob: -17.6250057220459
    8. '.h' → logprob: -17.6250057220459
    9. '_he' → logprob: -17.6250057220459
    10. '.' → logprob: -17.8750057220459

Token 571: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00012475410767365247
    2. 'ap' → logprob: -9.00012493133545
    3. 'pp' → logprob: -13.62512493133545
    4. 'a' → logprob: -16.625123977661133
    5. ' app' → logprob: -17.875123977661133
    6. 'ап' → logprob: -18.000123977661133
    7. '```' → logprob: -18.250123977661133
    8. 'p' → logprob: -18.750123977661133
    9. 'appen' → logprob: -18.875123977661133
    10. '(app' → logprob: -18.875123977661133

Token 572: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0005075189401395619
    2. 'op' → logprob: -7.625507354736328
    3. 'push' → logprob: -11.500507354736328
    4. 'p' → logprob: -12.500507354736328
    5. 'sh' → logprob: -13.125507354736328
    6. 'app' → logprob: -13.125507354736328
    7. 'pp' → logprob: -14.625507354736328
    8. '```' → logprob: -14.750507354736328
    9. 'ap' → logprob: -15.125507354736328
    10. '   ' → logprob: -15.625507354736328

Token 573: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.875000953674316
    3. 'heap' → logprob: -15.875000953674316
    4. '```' → logprob: -17.75
    5. '((' → logprob: -18.5
    6. '(h' → logprob: -18.625
    7. ' (' → logprob: -18.875
    8. '(queue' → logprob: -19.125
    9. '   ' → logprob: -20.875
    10. '(
' → logprob: -21.375

Token 574: ',(' (ID: 27243)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -3.2378600735682994e-05
    2. 'heap' → logprob: -10.625032424926758
    3. '(' → logprob: -12.000032424926758
    4. '(queue' → logprob: -14.375032424926758
    5. ' (' → logprob: -15.125032424926758
    6. '   ' → logprob: -15.875032424926758
    7. '```' → logprob: -16.000032424926758
    8. '(
' → logprob: -16.000032424926758
    9. '                   ' → logprob: -16.125032424926758
    10. ' heap' → logprob: -16.375032424926758

Token 575: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -5.3596853831550106e-05
    2. '(n' → logprob: -10.500053405761719
    3. ' nc' → logprob: -10.875053405761719
    4. ' n' → logprob: -12.375053405761719
    5. 'n' → logprob: -12.875053405761719
    6. 'cost' → logprob: -15.875053405761719
    7. '	n' → logprob: -17.37505340576172
    8. '_nc' → logprob: -17.87505340576172
    9. ' (' → logprob: -18.87505340576172
    10. '   ' → logprob: -19.12505340576172

Token 576: 'ost' (ID: 564)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.38813337683677673
    2. 'ost' → logprob: -1.1381334066390991
    3. 'st' → logprob: -7.513133525848389
    4. '_cost' → logprob: -8.26313304901123
    5. '(cost' → logprob: -9.63813304901123
    6. '```' → logprob: -10.38813304901123
    7. '-cost' → logprob: -10.51313304901123
    8. 'w' → logprob: -10.51313304901123
    9. ' cost' → logprob: -10.51313304901123
    10. 'n' → logprob: -10.63813304901123

Token 577: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.018151700496673584
    2. ',' → logprob: -4.018151760101318
    3. ' ,' → logprob: -13.26815128326416
    4. 'v' → logprob: -18.393152236938477
    5. '   ' → logprob: -18.768152236938477
    6. ',u' → logprob: -19.643152236938477
    7. ',(' → logprob: -20.518152236938477
    8. ' v' → logprob: -20.893152236938477
    9. '	v' → logprob: -20.893152236938477
    10. ',
' → logprob: -21.018152236938477

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.644463479053229e-05
    2. ' ,' → logprob: -10.000046730041504
    3. 'cc' → logprob: -14.375046730041504
    4. ',c' → logprob: -15.125046730041504
    5. ',ll' → logprob: -16.875045776367188
    6. ',n' → logprob: -17.500045776367188
    7. ' cc' → logprob: -17.625045776367188
    8. '_cc' → logprob: -17.625045776367188
    9. ',
' → logprob: -17.875045776367188
    10. '  ' → logprob: -18.125045776367188

Token 579: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -3.054500666621607e-06
    2. ' cc' → logprob: -12.75000286102295
    3. '	cc' → logprob: -15.75000286102295
    4. '(cc' → logprob: -19.000003814697266
    5. '_cc' → logprob: -19.000003814697266
    6. 'c' → logprob: -19.375003814697266
    7. 'cccc' → logprob: -20.500003814697266
    8. 'line' → logprob: -20.625003814697266
    9. 'ccc' → logprob: -21.125003814697266
    10. '   ' → logprob: -21.125003814697266

Token 580: 'urr' (ID: 1057)
  Prédit: 'urr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urr' → logprob: -3.750436007976532e-05
    2. 'curr' → logprob: -10.25003719329834
    3. 'rr' → logprob: -14.25003719329834
    4. 'arr' → logprob: -14.62503719329834
    5. 'urn' → logprob: -15.12503719329834
    6. ' curr' → logprob: -15.87503719329834
    7. 'orr' → logprob: -16.125038146972656
    8. 'u' → logprob: -16.375038146972656
    9. 'urrent' → logprob: -16.500038146972656
    10. 'ur' → logprob: -17.125038146972656

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.637786231702194e-05
    2. ' ,' → logprob: -9.375086784362793
    3. ',n' → logprob: -13.875086784362793
    4. ',
' → logprob: -15.250086784362793
    5. ',int' → logprob: -16.875085830688477
    6. 'nd' → logprob: -17.000085830688477
    7. '```' → logprob: -17.125085830688477
    8. ' nd' → logprob: -17.250085830688477
    9. '(nd' → logprob: -17.375085830688477
    10. '   ' → logprob: -17.625085830688477

Token 582: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00033546582562848926
    2. ' nd' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.750335693359375
    4. '(nd' → logprob: -16.875335693359375
    5. '_nd' → logprob: -17.125335693359375
    6. 'nds' → logprob: -18.000335693359375
    7. ' ' → logprob: -18.250335693359375
    8. 'n' → logprob: -18.250335693359375
    9. 'nt' → logprob: -18.375335693359375
    10. '  ' → logprob: -19.125335693359375

Token 583: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.5597102396423e-05
    2. '))
' → logprob: -10.500035285949707
    3. ')' → logprob: -12.000035285949707
    4. ')))' → logprob: -14.125035285949707
    5. ' ))' → logprob: -14.375035285949707
    6. '               ' → logprob: -15.875035285949707
    7. '])' → logprob: -16.500036239624023
    8. '))

' → logprob: -16.500036239624023
    9. '));' → logprob: -16.750036239624023
    10. '           ' → logprob: -16.875036239624023

Token 584: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5127364993095398
    2. 'else' → logprob: -1.2627365589141846
    3. ' else' → logprob: -2.1377365589141846
    4. 'elif' → logprob: -9.387736320495605
    5. '          ' → logprob: -9.637736320495605
    6. '               ' → logprob: -9.637736320495605
    7. '```' → logprob: -10.137736320495605
    8. '       ' → logprob: -10.637736320495605
    9. '<|end|>' → logprob: -10.637736320495605
    10. ' elif' → logprob: -11.137736320495605

Token 585: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0987191200256348
    2. ' else' → logprob: -1.0987191200256348
    3. 'else' (adapté à ' else') → logprob: -1.0987191200256348
    4. '       ' → logprob: -9.848718643188477
    5. 'elif' → logprob: -10.348718643188477
    6. ' elif' → logprob: -11.223718643188477
    7. '	else' → logprob: -13.348718643188477
    8. '          ' → logprob: -13.473718643188477
    9. ')' → logprob: -13.598718643188477
    10. '               ' → logprob: -13.848718643188477

Token 586: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004516396671533585
    2. '           ' → logprob: -6.1295166015625
    3. ':
' → logprob: -7.1295166015625
    4. ':' → logprob: -7.8795166015625
    5. ' if' → logprob: -8.3795166015625
    6. '       ' → logprob: -8.6295166015625
    7. '              ' → logprob: -9.2545166015625
    8. '                
' → logprob: -9.3795166015625
    9. '```' → logprob: -9.5045166015625
    10. '                   ' → logprob: -9.5045166015625

Token 587: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2615540325641632
    2. ' n' → logprob: -2.136554002761841
    3. ' cost' → logprob: -2.886554002761841
    4. ' ' → logprob: -4.38655424118042
    5. '           ' → logprob: -4.51155424118042
    6. ' if' → logprob: -4.88655424118042
    7. 'n' → logprob: -4.88655424118042
    8. '```' → logprob: -5.76155424118042
    9. 'cost' → logprob: -5.88655424118042
    10. '                ' → logprob: -6.26155424118042

Token 588: ' add' (ID: 1147)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7208707332611084
    2. 'nd' → logprob: -2.0958707332611084
    3. 'nc' → logprob: -2.0958707332611084
    4. 'add' (adapté à ' add') → logprob: -2.8458707332611084
    5. 'n' → logprob: -3.0958707332611084
    6. 'switch' → logprob: -3.0958707332611084
    7. 'fare' → logprob: -3.7208707332611084
    8. 'if' → logprob: -3.8458707332611084
    9. 'base' → logprob: -3.8458707332611084
    10. 'new' → logprob: -3.9708707332611084

Token 589: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04020123928785324
    2. ' =' → logprob: -3.290201187133789
    3. '=f' → logprob: -7.165201187133789
    4. '_cost' → logprob: -8.165201187133789
    5. '=line' → logprob: -8.290201187133789
    6. '=int' → logprob: -8.415201187133789
    7. '=sum' → logprob: -9.165201187133789
    8. 'cost' → logprob: -9.165201187133789
    9. '=_' → logprob: -9.290201187133789
    10. '=(' → logprob: -9.290201187133789

Token 590: '0' (ID: 15)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.029773633927106857
    2. 'p' → logprob: -4.154773712158203
    3. '0' → logprob: -5.154773712158203
    4. 'cost' → logprob: -5.654773712158203
    5. ' fare' → logprob: -5.904773712158203
    6. 'build' → logprob: -7.029773712158203
    7. 'r' → logprob: -9.279773712158203
    8. '   ' → logprob: -9.529773712158203
    9. 'far' → logprob: -9.779773712158203
    10. ' p' → logprob: -9.779773712158203

Token 591: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4598459303379059
    2. ' if' → logprob: -1.5848459005355835
    3. '+' → logprob: -2.584846019744873
    4. '<|end|>' → logprob: -3.209846019744873
    5. 'if' → logprob: -4.334846019744873
    6. '
' → logprob: -4.584846019744873
    7. '                ' → logprob: -5.709846019744873
    8. '+
' → logprob: -6.209846019744873
    9. '                
' → logprob: -6.209846019744873
    10. '                               ' → logprob: -6.334846019744873

Token 592: '               ' (ID: 506)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2553289830684662
    2. ' if' → logprob: -2.880328893661499
    3. 'for' → logprob: -3.255328893661499
    4. ' fare' → logprob: -3.505328893661499
    5. 'if' → logprob: -3.630328893661499
    6. 'fare' → logprob: -4.005329132080078
    7. ' +' → logprob: -4.380329132080078
    8. '
' → logprob: -4.505329132080078
    9. '               ' → logprob: -4.630329132080078
    10. ' for' → logprob: -4.755329132080078

Token 593: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19302469491958618
    2. 'nd' → logprob: -2.6930246353149414
    3. 'if' (adapté à ' if') → logprob: -2.6930246353149414
    4. 'nc' → logprob: -4.193024635314941
    5. ' for' → logprob: -5.318024635314941
    6. 'dist' → logprob: -5.568024635314941
    7. 'n' → logprob: -5.693024635314941
    8. '
' → logprob: -6.068024635314941
    9. '```' → logprob: -6.318024635314941
    10. 'max' → logprob: -6.693024635314941

Token 594: ' d' (ID: 272)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.15482936799526215
    2. 'd' → logprob: -2.279829263687134
    3. 'cc' → logprob: -4.654829502105713
    4. ' d' → logprob: -4.654829502105713
    5. 'nd' → logprob: -4.779829502105713
    6. ' dc' → logprob: -4.904829502105713
    7. 'dist' → logprob: -6.029829502105713
    8. 'dcc' → logprob: -6.404829502105713
    9. 'c' → logprob: -7.404829502105713
    10. '0' → logprob: -8.529829025268555

Token 595: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.23541362583637238
    2. ' >' → logprob: -1.860413670539856
    3. '<=' → logprob: -3.2354135513305664
    4. ' <=' → logprob: -4.485413551330566
    5. '>d' → logprob: -6.610413551330566
    6. '>=' → logprob: -6.735413551330566
    7. ' >=' → logprob: -8.485413551330566
    8. 'd' → logprob: -9.110413551330566
    9. '[' → logprob: -9.235413551330566
    10. '==' → logprob: -9.360413551330566

Token 596: '200' (ID: 1179)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04936173930764198
    2. 'p' → logprob: -3.4243617057800293
    3. '200' → logprob: -4.299361705780029
    4. ' q' → logprob: -7.174361705780029
    5. '100' → logprob: -7.924361705780029
    6. ' ' → logprob: -8.549362182617188
    7. '0' → logprob: -8.549362182617188
    8. 'fare' → logprob: -9.049362182617188
    9. ' p' → logprob: -9.424362182617188
    10. 'max' → logprob: -9.549362182617188

Token 597: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14184729754924774
    2. ':
' → logprob: -2.8918473720550537
    3. '<|end|>' → logprob: -3.1418473720550537
    4. '               ' → logprob: -3.7668473720550537
    5. '                   ' → logprob: -5.891847133636475
    6. '<|end|>' → logprob: -6.016847133636475
    7. ' and' → logprob: -6.516847133636475
    8. ' :' → logprob: -7.641847133636475
    9. '                ' → logprob: -7.766847133636475
    10. ':return' → logprob: -8.016847610473633

Token 598: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0670812129974365
    2. '               ' → logprob: -1.6920812129974365
    3. '<|end|>' → logprob: -2.0670812129974365
    4. ':
' → logprob: -2.3170812129974365
    5. ' add' → logprob: -2.6920812129974365
    6. '                   ' → logprob: -2.9420812129974365
    7. ' ' → logprob: -3.4420812129974365
    8. ' d' → logprob: -4.192081451416016
    9. '                ' → logprob: -4.442081451416016
    10. ' 
' → logprob: -4.942081451416016

Token 599: ' cost' (ID: 3097)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002952978014945984
    2. '                   ' → logprob: -6.502953052520752
    3. ' d' → logprob: -7.127953052520752
    4. 'continue' → logprob: -8.127952575683594
    5. 'add' → logprob: -8.752952575683594
    6. '               ' → logprob: -8.877952575683594
    7. '   ' → logprob: -11.002952575683594
    8. ' continue' → logprob: -11.627952575683594
    9. '                  ' → logprob: -12.377952575683594
    10. ' add' → logprob: -12.377952575683594

Token 600: '_d' (ID: 1565)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6884815692901611
    2. '=' → logprob: -0.9384815692901611
    3. ' +=' → logprob: -2.563481569290161
    4. '+' → logprob: -3.938481569290161
    5. ' =' → logprob: -5.063481330871582
    6. 'continue' → logprob: -7.063481330871582
    7. ' continue' → logprob: -7.688481330871582
    8. '=cut' → logprob: -8.188481330871582
    9. 'cost' → logprob: -8.438481330871582
    10. 'd' → logprob: -8.563481330871582

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05883769690990448
    2. ' =' → logprob: -2.933837652206421
    3. '=d' → logprob: -5.933837890625
    4. '+=' → logprob: -7.308837890625
    5. ' +=' → logprob: -7.683837890625
    6. 'd' → logprob: -9.433837890625
    7. ' d' → logprob: -10.683837890625
    8. '+' → logprob: -11.058837890625
    9. '=int' → logprob: -11.183837890625
    10. '_d' → logprob: -11.933837890625

Token 602: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.01628796011209488
    2. 'cost' → logprob: -4.766287803649902
    3. '200' → logprob: -5.766287803649902
    4. 'r' → logprob: -6.641287803649902
    5. ' fare' → logprob: -7.266287803649902
    6. 'build' → logprob: -7.516287803649902
    7. 'c' → logprob: -7.641287803649902
    8. 'p' → logprob: -7.891287803649902
    9. '0' → logprob: -8.766287803649902
    10. 'far' → logprob: -8.766287803649902

Token 603: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.028684547170996666
    2. '[d' → logprob: -4.528684616088867
    3. '[line' → logprob: -4.653684616088867
    4. '[' → logprob: -5.028684616088867
    5. '[i' → logprob: -7.903684616088867
    6. '[t' → logprob: -8.653684616088867
    7. 's' → logprob: -9.278684616088867
    8. 'tables' → logprob: -9.278684616088867
    9. 'line' → logprob: -9.528684616088867
    10. '_t' → logprob: -9.653684616088867

Token 604: '[line' (ID: 129099)
  Prédit: '[line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.007749778684228659
    2. '[' → logprob: -4.882749557495117
    3. 'line' → logprob: -9.257749557495117
    4. 'cc' → logprob: -10.132749557495117
    5. '[current' → logprob: -13.882749557495117
    6. '[c' → logprob: -13.882749557495117
    7. '#line' → logprob: -13.882749557495117
    8. '[cur' → logprob: -14.007749557495117
    9. '=line' → logprob: -14.007749557495117
    10. '```' → logprob: -14.132749557495117

Token 605: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.03589189425110817
    2. 'line' → logprob: -4.410892009735107
    3. 'i' → logprob: -4.910892009735107
    4. '_curr' → logprob: -5.285892009735107
    5. 'comp' → logprob: -6.035892009735107
    6. '_tables' → logprob: -6.535892009735107
    7. 'curr' → logprob: -6.660892009735107
    8. 'Comp' → logprob: -6.785892009735107
    9. '[' → logprob: -6.785892009735107
    10. '[line' → logprob: -6.910892009735107

Token 606: '][' (ID: 2696)
  Prédit: '[line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.0015291442396119237
    2. '][' → logprob: -6.501529216766357
    3. '[' → logprob: -11.6265287399292
    4. ')[' → logprob: -11.8765287399292
    5. '#line' → logprob: -12.1265287399292
    6. '=line' → logprob: -13.7515287399292
    7. '           ' → logprob: -13.8765287399292
    8. ',line' → logprob: -14.3765287399292
    9. '(line' → logprob: -14.5015287399292
    10. '```' → logprob: -14.7515287399292

Token 607: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.004258257802575827
    2. 'd' → logprob: -5.504258155822754
    3. ' ' → logprob: -9.129258155822754
    4. 'min' → logprob: -10.504258155822754
    5. '  ' → logprob: -11.129258155822754
    6. '   ' → logprob: -11.379258155822754
    7. '[' → logprob: -11.379258155822754
    8. ' d' → logprob: -13.004258155822754
    9. '199' → logprob: -14.379258155822754
    10. '201' → logprob: -14.629258155822754

Token 608: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008986006141640246
    2. ']
' → logprob: -7.125898838043213
    3. ']

' → logprob: -10.750898361206055
    4. ' ]' → logprob: -10.875898361206055
    5. 'd' → logprob: -11.000898361206055
    6. ']
' → logprob: -11.125898361206055
    7. ']+' → logprob: -12.000898361206055
    8. '+' → logprob: -12.375898361206055
    9. 'else' → logprob: -12.375898361206055
    10. '+d' → logprob: -13.375898361206055

Token 609: '               ' (ID: 506)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1753566712141037
    2. ' +' → logprob: -3.30035662651062
    3. '               ' → logprob: -3.42535662651062
    4. '<|end|>' → logprob: -3.55035662651062
    5. ' else' → logprob: -3.80035662651062
    6. 'else' → logprob: -4.175356864929199
    7. ')' → logprob: -4.300356864929199
    8. '[' → logprob: -5.675356864929199
    9. '                   ' → logprob: -6.050356864929199
    10. '[token' → logprob: -6.675356864929199

Token 610: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5654611587524414
    2. ' else' → logprob: -1.0654611587524414
    3. '               ' → logprob: -2.5654611587524414
    4. '[' → logprob: -5.065461158752441
    5. '+' → logprob: -6.190461158752441
    6. ')' → logprob: -7.815461158752441
    7. '                ' → logprob: -8.690461158752441
    8. '                   ' → logprob: -8.815461158752441
    9. '[token' → logprob: -8.815461158752441
    10. '```' → logprob: -9.065461158752441

Token 611: ':
' (ID: 734)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.401825875043869
    2. ' =' → logprob: -2.0268259048461914
    3. 'cost' → logprob: -2.2768259048461914
    4. '=' → logprob: -2.7768259048461914
    5. '[' → logprob: -3.7768259048461914
    6. '(cost' → logprob: -6.026825904846191
    7. '               ' → logprob: -6.151825904846191
    8. ':
' → logprob: -6.151825904846191
    9. ':' → logprob: -6.276825904846191
    10. '[
' → logprob: -7.276825904846191

Token 612: '                   ' (ID: 699)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.6175498962402344
    2. 'cost' → logprob: -1.1175498962402344
    3. ' fare' → logprob: -2.4925498962402344
    4. 'fare' → logprob: -2.9925498962402344
    5. '(cost' → logprob: -8.242549896240234
    6. ' d' → logprob: -8.742549896240234
    7. '               ' → logprob: -9.492549896240234
    8. '   ' → logprob: -9.992549896240234
    9. 'd' → logprob: -9.992549896240234
    10. '_cost' → logprob: -10.242549896240234

Token 613: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.00754723884165287
    2. ' cost' → logprob: -5.007547378540039
    3. 'fare' → logprob: -7.132547378540039
    4. ' fare' → logprob: -10.507547378540039
    5. 'd' → logprob: -13.132547378540039
    6. ' d' → logprob: -13.507547378540039
    7. '(cost' → logprob: -14.132547378540039
    8. 'code' → logprob: -15.257547378540039
    9. '_cost' → logprob: -15.257547378540039
    10. 'Cost' → logprob: -15.257547378540039

Token 614: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.124934196472168
    2. '[line' → logprob: -1.374934196472168
    3. '_tables' → logprob: -1.624934196472168
    4. '=' → logprob: -2.249934196472168
    5. '=line' → logprob: -3.124934196472168
    6. '[' → logprob: -3.374934196472168
    7. 'd' → logprob: -3.624934196472168
    8. ' =' → logprob: -4.624934196472168
    9. '[d' → logprob: -5.999934196472168
    10. '=d' → logprob: -6.749934196472168

Token 615: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09053821861743927
    2. ' =' → logprob: -2.590538263320923
    3. '=f' → logprob: -4.465538024902344
    4. '+=' → logprob: -9.840538024902344
    5. '[f' → logprob: -11.340538024902344
    6. ' +=' → logprob: -11.465538024902344
    7. '=d' → logprob: -13.090538024902344
    8. '=line' → logprob: -13.715538024902344
    9. '[' → logprob: -13.840538024902344
    10. '=c' → logprob: -14.465538024902344

Token 616: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.009780999273061752
    2. ' fare' → logprob: -4.6347808837890625
    3. 'fair' → logprob: -11.009780883789062
    4. 'far' → logprob: -12.134780883789062
    5. 'fa' → logprob: -13.634780883789062
    6. 'cost' → logprob: -14.009780883789062
    7. 'fee' → logprob: -15.009780883789062
    8. 'Fare' → logprob: -15.509780883789062
    9. '   ' → logprob: -16.009780883789062
    10. ' fair' → logprob: -16.759780883789062

Token 617: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.009781233966350555
    2. '[line' → logprob: -4.634781360626221
    3. 'Tables' → logprob: -11.009780883789062
    4. 'tables' → logprob: -12.634780883789062
    5. '[' → logprob: -13.384780883789062
    6. '[d' → logprob: -14.009780883789062
    7. '=line' → logprob: -14.009780883789062
    8. '_lines' → logprob: -14.259780883789062
    9. 'line' → logprob: -14.884780883789062
    10. '_arrays' → logprob: -15.009780883789062

Token 618: '[line' (ID: 129099)
  Prédit: '[line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[line' → logprob: -3.128163257315464e-07
    2. 'line' → logprob: -15.875
    3. '(line' → logprob: -16.625
    4. '#line' → logprob: -17.25
    5. '=line' → logprob: -17.75
    6. '[' → logprob: -19.625
    7. ',line' → logprob: -21.125
    8. ' line' → logprob: -21.375
    9. '[
' → logprob: -21.625
    10. '	line' → logprob: -21.875

Token 619: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.0010668702889233828
    2. 'comp' → logprob: -7.3760666847229
    3. '[line' → logprob: -8.376067161560059
    4. 'line' → logprob: -8.501067161560059
    5. '_line' → logprob: -13.001067161560059
    6. '(line' → logprob: -13.501067161560059
    7. '_com' → logprob: -13.751067161560059
    8. '[' → logprob: -14.376067161560059
    9. 'Comp' → logprob: -14.751067161560059
    10. ' line' → logprob: -15.126067161560059

Token 620: '][' (ID: 2696)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.00017481597024016082
    2. '][' → logprob: -8.750174522399902
    3. '[' → logprob: -11.750174522399902
    4. ')[' → logprob: -12.625174522399902
    5. 'd' → logprob: -13.375174522399902
    6. '                   ' → logprob: -13.500174522399902
    7. '               ' → logprob: -14.250174522399902
    8. '[line' → logprob: -14.375174522399902
    9. ' [' → logprob: -14.625174522399902
    10. '(d' → logprob: -15.875174522399902

Token 621: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.2200749754119897e-06
    2. ' d' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '[d' → logprob: -15.000001907348633
    5. '           ' → logprob: -17.250001907348633
    6. '
' → logprob: -17.500001907348633
    7. '       ' → logprob: -17.625001907348633
    8. '               ' → logprob: -17.625001907348633
    9. '	d' → logprob: -17.625001907348633
    10. 'int' → logprob: -17.750001907348633

Token 622: ']
' (ID: 1592)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.06253121793270111
    2. ']' → logprob: -2.8125312328338623
    3. 'd' → logprob: -8.062531471252441
    4. '][' → logprob: -8.687531471252441
    5. '[' → logprob: -10.062531471252441
    6. '+d' → logprob: -10.937531471252441
    7. ' ]' → logprob: -12.437531471252441
    8. '               ' → logprob: -13.312531471252441
    9. '_d' → logprob: -13.562531471252441
    10. '[token' → logprob: -13.687531471252441

Token 623: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.058466386049985886
    2. '+' → logprob: -3.4334664344787598
    3. ' n' → logprob: -4.80846643447876
    4. 'n' → logprob: -5.55846643447876
    5. ' cost' → logprob: -5.80846643447876
    6. ' +' → logprob: -6.30846643447876
    7. ' add' → logprob: -6.30846643447876
    8. '<|end|>' → logprob: -6.55846643447876
    9. '                ' → logprob: -6.68346643447876
    10. '                   ' → logprob: -6.93346643447876

Token 624: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.4151614010334015
    2. 'nc' → logprob: -1.540161371231079
    3. '               ' → logprob: -2.665161371231079
    4. ' n' → logprob: -3.290161371231079
    5. 'add' → logprob: -5.040161609649658
    6. ' add' → logprob: -5.290161609649658
    7. 'cost' → logprob: -5.290161609649658
    8. ' cost' → logprob: -7.415161609649658
    9. ' nc' → logprob: -7.415161609649658
    10. '                   ' → logprob: -8.4151611328125

Token 625: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -3.5597102396423e-05
    2. '_cost' → logprob: -10.250035285949707
    3. ' cost' → logprob: -16.125036239624023
    4. 'cot' → logprob: -18.000036239624023
    5. '(cost' → logprob: -18.375036239624023
    6. 'c' → logprob: -18.625036239624023
    7. '.cost' → logprob: -19.250036239624023
    8. '-cost' → logprob: -19.375036239624023
    9. 'cos' → logprob: -19.375036239624023
    10. 'const' → logprob: -19.500036239624023

Token 626: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163863845169544
    2. ' =' → logprob: -4.264163970947266
    3. '=
' → logprob: -15.264163970947266
    4. '+=' → logprob: -17.014163970947266
    5. '＝' → logprob: -17.889163970947266
    6. '=

' → logprob: -18.014163970947266
    7. '=c' → logprob: -18.264163970947266
    8. '
' → logprob: -18.764163970947266
    9. '=cut' → logprob: -19.264163970947266
    10. '=n' → logprob: -19.264163970947266

Token 627: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0005530327325686812
    2. ' cost' → logprob: -7.500553131103516
    3. '(cost' → logprob: -19.625553131103516
    4. '   ' → logprob: -22.250553131103516
    5. 'price' → logprob: -22.625553131103516
    6. 'code' → logprob: -23.000553131103516
    7. '_cost' → logprob: -23.125553131103516
    8. 'Cost' → logprob: -24.375553131103516
    9. ' ' → logprob: -24.500553131103516
    10. 'color' → logprob: -24.625553131103516

Token 628: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005931289400905371
    2. ' +' → logprob: -5.130931377410889
    3. '+c' → logprob: -13.38093090057373
    4. '+=' → logprob: -15.38093090057373
    5. '
' → logprob: -15.50593090057373
    6. '+C' → logprob: -15.88093090057373
    7. '+
' → logprob: -16.380931854248047
    8. '```' → logprob: -16.630931854248047
    9. '＋' → logprob: -16.755931854248047
    10. '+self' → logprob: -16.755931854248047

Token 629: '               ' (ID: 506)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010494358837604523
    2. ' +' → logprob: -4.635494232177734
    3. '+=' → logprob: -7.885494232177734
    4. '+n' → logprob: -8.635494232177734
    5. ' +=' → logprob: -9.635494232177734
    6. '+
' → logprob: -9.760494232177734
    7. '+c' → logprob: -10.885494232177734
    8. '+[' → logprob: -11.510494232177734
    9. '```' → logprob: -12.635494232177734
    10. '<|end|>' → logprob: -12.635494232177734

Token 630: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009060516953468323
    2. ' +' → logprob: -5.634060382843018
    3. '+=' → logprob: -5.884060382843018
    4. '+n' → logprob: -6.259060382843018
    5. ' +=' → logprob: -7.634060382843018
    6. 'nc' → logprob: -9.259060859680176
    7. '+
' → logprob: -9.509060859680176
    8. 'n' → logprob: -10.009060859680176
    9. '               ' → logprob: -10.634060859680176
    10. '   ' → logprob: -12.759060859680176

Token 631: ' Add' (ID: 4063)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.050549622625112534
    2. 'n' → logprob: -3.6755495071411133
    3. 'if' → logprob: -4.425549507141113
    4. '               ' → logprob: -4.925549507141113
    5. 'add' → logprob: -6.675549507141113
    6. 'cost' → logprob: -6.800549507141113
    7. '+' → logprob: -7.050549507141113
    8. ' n' → logprob: -7.800549507141113
    9. ' if' → logprob: -8.050549507141113
    10. 'nb' → logprob: -8.925549507141113

Token 632: ' fare' (ID: 25285)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.6055260896682739
    2. 'cost' → logprob: -0.9805260896682739
    3. '+' → logprob: -3.2305259704589844
    4. ' +=' → logprob: -4.105525970458984
    5. '+=' → logprob: -4.230525970458984
    6. ' +' → logprob: -5.355525970458984
    7. '=' → logprob: -5.855525970458984
    8. ' =' → logprob: -8.355525970458984
    9. ' fare' → logprob: -8.730525970458984
    10. '(cost' → logprob: -8.730525970458984

Token 633: ' for' (ID: 395)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5830128788948059
    2. ' +=' → logprob: -1.0830128192901611
    3. '+' → logprob: -2.458012819290161
    4. '=' → logprob: -4.33301305770874
    5. ' +' → logprob: -5.70801305770874
    6. ' =' → logprob: -6.95801305770874
    7. ']+=' → logprob: -10.083012580871582
    8. '+=(' → logprob: -10.208012580871582
    9. '               ' → logprob: -10.708012580871582
    10. '<|end|>' → logprob: -10.708012580871582

Token 634: ' old' (ID: 2890)
  Prédit: 'changing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'changing' → logprob: -1.2354516983032227
    2. 'cost' → logprob: -1.3604516983032227
    3. 'switch' → logprob: -1.4854516983032227
    4. 'd' → logprob: -2.4854516983032227
    5. ' switching' → logprob: -2.7354516983032227
    6. 'the' → logprob: -3.8604516983032227
    7. 'distance' → logprob: -4.110451698303223
    8. ' changing' → logprob: -4.610451698303223
    9. ' d' → logprob: -4.860451698303223
    10. 'change' → logprob: -5.110451698303223

Token 635: ' company' (ID: 3175)
  Prédit: '_company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -0.7367100715637207
    2. 'company' → logprob: -0.9867100715637207
    3. ' company' → logprob: -2.2367100715637207
    4. '_comp' → logprob: -3.7367100715637207
    5. '_cc' → logprob: -5.361710071563721
    6. '_co' → logprob: -6.236710071563721
    7. ')' → logprob: -6.611710071563721
    8. ' ' → logprob: -6.611710071563721
    9. ' line' → logprob: -6.611710071563721
    10. '+' → logprob: -7.236710071563721

Token 636: ' section' (ID: 7102)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25598156452178955
    2. 'if' → logprob: -2.0059814453125
    3. ' +' → logprob: -3.0059814453125
    4. ' if' → logprob: -3.3809814453125
    5. '               ' → logprob: -5.7559814453125
    6. '+=' → logprob: -5.8809814453125
    7. ' +=' → logprob: -7.1309814453125
    8. '=' → logprob: -7.6309814453125
    9. '+
' → logprob: -9.2559814453125
    10. 'and' → logprob: -9.8809814453125

Token 637: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.527005672454834
    2. ' +' → logprob: -0.902005672454834
    3. '+
' → logprob: -7.152005672454834
    4. ' if' → logprob: -7.152005672454834
    5. ' +
' → logprob: -7.152005672454834
    6. 'if' → logprob: -7.402005672454834
    7. '<|end|>' → logprob: -8.277006149291992
    8. '               ' → logprob: -8.402006149291992
    9. ' +=' → logprob: -9.652006149291992
    10. ')' → logprob: -9.652006149291992

Token 638: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12592612206935883
    2. '+' → logprob: -2.8759260177612305
    3. 'if' → logprob: -3.6259260177612305
    4. ' +' → logprob: -3.6259260177612305
    5. ' if' → logprob: -5.1259260177612305
    6. '<|end|>' → logprob: -6.5009260177612305
    7. '+
' → logprob: -8.37592601776123
    8. ',' → logprob: -8.75092601776123
    9. ' +
' → logprob: -8.87592601776123
    10. '       ' → logprob: -9.25092601776123

Token 639: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10960181057453156
    2. '+' → logprob: -2.7346017360687256
    3. ' if' → logprob: -3.8596017360687256
    4. '               ' → logprob: -4.234601974487305
    5. ' +' → logprob: -6.859601974487305
    6. '+=' → logprob: -6.984601974487305
    7. ' +=' → logprob: -8.234601974487305
    8. '+
' → logprob: -8.484601974487305
    9. '+n' → logprob: -8.734601974487305
    10. '=' → logprob: -8.984601974487305

Token 640: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0007355354027822614
    2. ' cc' → logprob: -7.875735759735107
    3. 'dc' → logprob: -8.00073528289795
    4. '   ' → logprob: -11.75073528289795
    5. 'dcc' → logprob: -12.87573528289795
    6. '           ' → logprob: -13.00073528289795
    7. '(cc' → logprob: -13.37573528289795
    8. ' dc' → logprob: -13.37573528289795
    9. '	cc' → logprob: -13.62573528289795
    10. ' ' → logprob: -14.25073528289795

Token 641: 'urr' (ID: 1057)
  Prédit: 'urr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urr' → logprob: -0.3135039508342743
    2. 'curr' → logprob: -1.3135039806365967
    3. '_curr' → logprob: -8.563504219055176
    4. 'urrent' → logprob: -10.938504219055176
    5. ' curr' → logprob: -11.438504219055176
    6. '	curr' → logprob: -12.063504219055176
    7. 'Curr' → logprob: -12.438504219055176
    8. '[curr' → logprob: -12.438504219055176
    9. 'urry' → logprob: -12.563504219055176
    10. '(curr' → logprob: -12.938504219055176

Token 642: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.02062574028968811
    2. 'and' → logprob: -4.145625591278076
    3. ' !=' → logprob: -5.770625591278076
    4. '>' → logprob: -6.770625591278076
    5. ' and' → logprob: -8.270626068115234
    6. '!==' → logprob: -11.020626068115234
    7. '!' → logprob: -11.395626068115234
    8. 'not' → logprob: -12.145626068115234
    9. ']!=' → logprob: -12.270626068115234
    10. ')!=' → logprob: -12.520626068115234

Token 643: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -20.375
    4. '>' → logprob: -20.875
    5. '
' → logprob: -21.125
    6. '#' → logprob: -21.375
    7. 'not' → logprob: -21.625
    8. '۰' → logprob: -21.75
    9. '   ' → logprob: -22.0
    10. '=' → logprob: -22.0

Token 644: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8210440874099731
    2. 'and' → logprob: -0.8210440874099731
    3. ':' → logprob: -2.1960439682006836
    4. ':
' → logprob: -4.821043968200684
    5. '               ' → logprob: -8.571043968200684
    6. '<|end|>' → logprob: -8.696043968200684
    7. '           ' → logprob: -9.446043968200684
    8. '                   ' → logprob: -9.571043968200684
    9. '       ' → logprob: -10.071043968200684
    10. '   ' → logprob: -10.571043968200684

Token 645: ' d' (ID: 272)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.0003017385315615684
    2. 'dist' → logprob: -8.750301361083984
    3. 'd' → logprob: -9.625301361083984
    4. ' dc' → logprob: -10.000301361083984
    5. 'dcc' → logprob: -10.750301361083984
    6. ' d' → logprob: -12.750301361083984
    7. '	d' → logprob: -13.750301361083984
    8. '
' → logprob: -13.875301361083984
    9. ' ' → logprob: -13.875301361083984
    10. '   ' → logprob: -14.000301361083984

Token 646: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0006490522064268589
    2. '>' → logprob: -8.250649452209473
    3. '[curr' → logprob: -8.750649452209473
    4. 'cur' → logprob: -9.625649452209473
    5. '_curr' → logprob: -10.125649452209473
    6. 'urr' → logprob: -10.750649452209473
    7. '==' → logprob: -11.375649452209473
    8. 'Curr' → logprob: -11.625649452209473
    9. '	curr' → logprob: -11.625649452209473
    10. ' curr' → logprob: -11.750649452209473

Token 647: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0010705619351938367
    2. ' >' → logprob: -7.001070499420166
    3. '!=' → logprob: -9.126070976257324
    4. ':' → logprob: -11.126070976257324
    5. ')>' → logprob: -12.126070976257324
    6. '>=' → logprob: -12.251070976257324
    7. ' !=' → logprob: -12.501070976257324
    8. ']>' → logprob: -12.626070976257324
    9. '[' → logprob: -13.126070976257324
    10. ')' → logprob: -13.251070976257324

Token 648: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '>' → logprob: -17.37500762939453
    4. '=' → logprob: -18.25000762939453
    5. '
' → logprob: -19.12500762939453
    6. '```' → logprob: -19.37500762939453
    7. '<|end|>' → logprob: -20.00000762939453
    8. '[' → logprob: -20.50000762939453
    9. '۰' → logprob: -20.62500762939453
    10. '   ' → logprob: -20.75000762939453

Token 649: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1805507391691208
    2. '                   ' → logprob: -2.3055508136749268
    3. ':' → logprob: -2.8055508136749268
    4. '               ' → logprob: -6.305550575256348
    5. '                       ' → logprob: -6.430550575256348
    6. ' and' → logprob: -7.555550575256348
    7. '):
' → logprob: -8.680550575256348
    8. '                           ' → logprob: -8.805550575256348
    9. ',' → logprob: -9.180550575256348
    10. '=' → logprob: -9.305550575256348

Token 650: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03330204263329506
    2. '+' → logprob: -4.658301830291748
    3. '               ' → logprob: -4.908301830291748
    4. '                       ' → logprob: -5.283301830291748
    5. ':' → logprob: -5.408301830291748
    6. '                               ' → logprob: -6.908301830291748
    7. ':
' → logprob: -6.908301830291748
    8. '```' → logprob: -7.283301830291748
    9. ' +' → logprob: -7.658301830291748
    10. 'n' → logprob: -8.033302307128906

Token 651: ' cost' (ID: 3097)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.06348150223493576
    2. '                   ' → logprob: -3.313481569290161
    3. 'n' → logprob: -4.438481330871582
    4. ' n' → logprob: -4.688481330871582
    5. ' nc' → logprob: -6.063481330871582
    6. '                       ' → logprob: -6.688481330871582
    7. 'add' → logprob: -8.688481330871582
    8. '               ' → logprob: -8.938481330871582
    9. 'cost' (adapté à ' cost') → logprob: -9.938481330871582
    10. '```' → logprob: -10.563481330871582

Token 652: 'old' (ID: 1280)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.7457494139671326
    2. '=' → logprob: -1.3707494735717773
    3. '+=' → logprob: -2.7457494735717773
    4. '_n' → logprob: -2.9957494735717773
    5. 'nc' → logprob: -3.6207494735717773
    6. 'd' → logprob: -3.6207494735717773
    7. ' +=' → logprob: -3.8707494735717773
    8. 'fare' → logprob: -3.8707494735717773
    9. 'n' → logprob: -4.245749473571777
    10. 'cost' → logprob: -4.995749473571777

Token 653: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1470954716205597
    2. '=' → logprob: -2.6470954418182373
    3. ' +=' → logprob: -2.7720954418182373
    4. ' =' → logprob: -6.147095680236816
    5. '+' → logprob: -7.522095680236816
    6. '_tables' → logprob: -8.897095680236816
    7. '+=(' → logprob: -9.147095680236816
    8. '   ' → logprob: -9.272095680236816
    9. 'cost' → logprob: -9.397095680236816
    10. '=f' → logprob: -9.772095680236816

Token 654: ' fare' (ID: 25285)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.004505484830588102
    2. 'cost' → logprob: -5.879505634307861
    3. ' fare' → logprob: -6.504505634307861
    4. 'fa' → logprob: -9.754505157470703
    5. 'dist' → logprob: -9.754505157470703
    6. 'far' → logprob: -10.629505157470703
    7. 'fair' → logprob: -10.879505157470703
    8. ' cost' → logprob: -11.629505157470703
    9. '   ' → logprob: -11.879505157470703
    10. '+' → logprob: -12.879505157470703

Token 655: '_tables' (ID: 88363)
  Prédit: '_tables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tables' → logprob: -0.021294528618454933
    2. '[' → logprob: -4.021294593811035
    3. '=' → logprob: -6.646294593811035
    4. 'tables' → logprob: -7.146294593811035
    5. 'Tables' → logprob: -7.271294593811035
    6. ' =' → logprob: -9.271294593811035
    7. 'cc' → logprob: -10.021294593811035
    8. '   ' → logprob: -10.146294593811035
    9. '[c' → logprob: -10.771294593811035
    10. '(cc' → logprob: -11.146294593811035

Token 656: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.630610641877865e-06
    2. '(cc' → logprob: -12.875006675720215
    3. '```' → logprob: -13.625006675720215
    4. ' [' → logprob: -14.125006675720215
    5. 'cc' → logprob: -14.500006675720215
    6. '[cur' → logprob: -15.625006675720215
    7. '[current' → logprob: -15.750006675720215
    8. '
' → logprob: -15.750006675720215
    9. '][' → logprob: -15.875006675720215
    10. '[c' → logprob: -16.1250057220459

Token 657: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -1.0280383548888494e-06
    2. ' cc' → logprob: -14.250000953674316
    3. '(cc' → logprob: -15.000000953674316
    4. '	cc' → logprob: -16.875001907348633
    5. 'c' → logprob: -17.125001907348633
    6. '_cc' → logprob: -19.375001907348633
    7. '[' → logprob: -19.875001907348633
    8. 'ccc' → logprob: -19.875001907348633
    9. '
' → logprob: -20.125001907348633
    10. 'cccc' → logprob: -20.875001907348633

Token 658: 'urr' (ID: 1057)
  Prédit: 'urr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urr' → logprob: -0.0002671768015716225
    2. 'curr' → logprob: -8.250267028808594
    3. 'rr' → logprob: -13.000267028808594
    4. '[' → logprob: -13.750267028808594
    5. '[curr' → logprob: -14.375267028808594
    6. 'Curr' → logprob: -14.750267028808594
    7. '_curr' → logprob: -15.125267028808594
    8. ' curr' → logprob: -15.250267028808594
    9. '
' → logprob: -15.625267028808594
    10. '(curr' → logprob: -16.125267028808594

Token 659: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00032592954812571406
    2. '[' → logprob: -8.125326156616211
    3. ' ][' → logprob: -11.500326156616211
    4. ']' → logprob: -11.500326156616211
    5. ''][' → logprob: -13.500326156616211
    6. '"][' → logprob: -13.500326156616211
    7. '   ' → logprob: -14.000326156616211
    8. '               ' → logprob: -14.000326156616211
    9. '                   ' → logprob: -14.375326156616211
    10. '[cur' → logprob: -14.750326156616211

Token 660: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -2.1008713702030946e-06
    2. ' dc' → logprob: -13.875001907348633
    3. '[' → logprob: -14.000001907348633
    4. 'd' → logprob: -16.250001907348633
    5. ' ' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.250001907348633
    7. '201' → logprob: -17.375001907348633
    8. 'dcc' → logprob: -17.500001907348633
    9. '```' → logprob: -18.125001907348633
    10. '200' → logprob: -18.250001907348633

Token 661: 'urr' (ID: 1057)
  Prédit: 'urr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urr' → logprob: -0.00524098752066493
    2. 'curr' → logprob: -5.2552409172058105
    3. ' curr' → logprob: -13.005241394042969
    4. 'Curr' → logprob: -13.130241394042969
    5. 'rr' → logprob: -13.755241394042969
    6. '_curr' → logprob: -14.005241394042969
    7. '(curr' → logprob: -15.005241394042969
    8. '[curr' → logprob: -15.755241394042969
    9. 'urrent' → logprob: -16.13024139404297
    10. ' Curr' → logprob: -16.63024139404297

Token 662: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1003926694393158
    2. ']
' → logprob: -2.3503925800323486
    3. ']
' → logprob: -9.85039234161377
    4. '               ' → logprob: -10.22539234161377
    5. '                   ' → logprob: -10.60039234161377
    6. ' ]' → logprob: -10.85039234161377
    7. ']+' → logprob: -11.60039234161377
    8. '[d' → logprob: -11.97539234161377
    9. '][' → logprob: -12.22539234161377
    10. '[-' → logprob: -12.22539234161377

Token 663: '                   ' (ID: 699)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2868298590183258
    2. '                   ' → logprob: -1.4118298292160034
    3. ' +' → logprob: -6.411829948425293
    4. '               ' → logprob: -6.411829948425293
    5. '+
' → logprob: -6.786829948425293
    6. '```' → logprob: -7.661829948425293
    7. '+=' → logprob: -8.536829948425293
    8. '+n' → logprob: -9.286829948425293
    9. ')' → logprob: -9.536829948425293
    10. '                       ' → logprob: -9.661829948425293

Token 664: ' n' (ID: 297)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.06629450619220734
    2. '                   ' → logprob: -2.8162944316864014
    3. 'n' (adapté à ' n') → logprob: -5.5662946701049805
    4. ' n' → logprob: -8.06629467010498
    5. ' nc' → logprob: -9.44129467010498
    6. '               ' → logprob: -9.94129467010498
    7. '
' → logprob: -10.69129467010498
    8. '```' → logprob: -11.69129467010498
    9. '   ' → logprob: -11.81629467010498
    10. '           ' → logprob: -12.69129467010498

Token 665: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: 0.0
    2. '_cost' → logprob: -18.25
    3. ' cost' → logprob: -19.0
    4. 'ost' → logprob: -19.75
    5. '-cost' → logprob: -21.125
    6. 'oc' → logprob: -21.5
    7. '(cost' → logprob: -21.75
    8. 'cust' → logprob: -22.25
    9. '.cost' → logprob: -22.5
    10. 'Cost' → logprob: -22.75

Token 666: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001952541060745716
    2. ' +=' → logprob: -6.251952648162842
    3. ']+=' → logprob: -11.376952171325684
    4. '+=(' → logprob: -11.876952171325684
    5. '+' → logprob: -13.126952171325684
    6. '=' → logprob: -13.751952171325684
    7. '   ' → logprob: -13.876952171325684
    8. '                   ' → logprob: -14.251952171325684
    9. '+='' → logprob: -15.376952171325684
    10. '```' → logprob: -15.626952171325684

Token 667: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0009118211455643177
    2. ' cost' → logprob: -7.000911712646484
    3. '```' → logprob: -16.000911712646484
    4. '(cost' → logprob: -16.375911712646484
    5. 'code' → logprob: -17.125911712646484
    6. '
' → logprob: -17.625911712646484
    7. 'price' → logprob: -18.125911712646484
    8. 'fare' → logprob: -19.000911712646484
    9. '   ' → logprob: -19.375911712646484
    10. 'int' → logprob: -19.750911712646484

Token 668: 'old' (ID: 1280)
  Prédit: 'old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -4.429896944202483e-05
    2. '_old' → logprob: -10.375043869018555
    3. '_d' → logprob: -11.625043869018555
    4. '	old' → logprob: -13.750043869018555
    5. '[' → logprob: -13.875043869018555
    6. '(old' → logprob: -13.875043869018555
    7. ' old' → logprob: -14.500043869018555
    8. 'cost' → logprob: -16.125043869018555
    9. '_cost' → logprob: -16.375043869018555
    10. '.old' → logprob: -16.500043869018555

Token 669: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04592086374759674
    2. '+' → logprob: -3.2959208488464355
    3. '<|end|>' → logprob: -5.5459208488464355
    4. ' +' → logprob: -6.9209208488464355
    5. '                
' → logprob: -6.9209208488464355
    6. '+
' → logprob: -7.5459208488464355
    7. ',' → logprob: -7.9209208488464355
    8. '                   ' → logprob: -7.9209208488464355
    9. '                ' → logprob: -9.295921325683594
    10. '<|end|>' → logprob: -9.420921325683594

Token 670: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31142640113830566
    2. '+' → logprob: -1.8114264011383057
    3. '                   ' → logprob: -2.4364264011383057
    4. ',' → logprob: -5.811426162719727
    5. ' +' → logprob: -6.186426162719727
    6. ')' → logprob: -6.436426162719727
    7. '```' → logprob: -6.436426162719727
    8. '<|end|>' → logprob: -6.561426162719727
    9. '                ' → logprob: -7.061426162719727
    10. ' if' → logprob: -7.311426162719727

Token 671: ' n' (ID: 297)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.057909440249204636
    2. '               ' → logprob: -3.0579094886779785
    3. '+' → logprob: -5.6829094886779785
    4. 'cost' → logprob: -6.1829094886779785
    5. 'n' (adapté à ' n') → logprob: -6.3079094886779785
    6. ' nc' → logprob: -7.8079094886779785
    7. '                
' → logprob: -8.18290901184082
    8. 'if' → logprob: -8.18290901184082
    9. '```' → logprob: -8.18290901184082
    10. '                   ' → logprob: -8.80790901184082

Token 672: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -6.704273118884885e-07
    2. ' cost' → logprob: -14.875000953674316
    3. '_cost' → logprob: -15.750000953674316
    4. '-cost' → logprob: -18.375
    5. '.cost' → logprob: -18.5
    6. 'cot' → logprob: -18.625
    7. 'ost' → logprob: -18.75
    8. '```' → logprob: -18.875
    9. '(cost' → logprob: -19.125
    10. 'cout' → logprob: -19.625

Token 673: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -4.4060561776859686e-05
    2. ' +=' → logprob: -10.125043869018555
    3. '+=(' → logprob: -13.000043869018555
    4. ']+=' → logprob: -13.750043869018555
    5. '+' → logprob: -15.625043869018555
    6. '=' → logprob: -15.625043869018555
    7. '   ' → logprob: -16.125043869018555
    8. '+='' → logprob: -16.375043869018555
    9. '+="' → logprob: -17.000043869018555
    10. '
' → logprob: -18.125043869018555

Token 674: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.0206720617134124e-05
    2. ' cost' → logprob: -11.50001049041748
    3. '(cost' → logprob: -18.875009536743164
    4. 'code' → logprob: -19.625009536743164
    5. '
' → logprob: -20.375009536743164
    6. 'color' → logprob: -21.375009536743164
    7. '```' → logprob: -21.750009536743164
    8. 'price' → logprob: -22.000009536743164
    9. 'fare' → logprob: -22.750009536743164
    10. '   ' → logprob: -22.750009536743164

Token 675: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.036749593913555145
    2. 'd' → logprob: -3.6617496013641357
    3. '[line' → logprob: -5.036749362945557
    4. '+' → logprob: -6.786749362945557
    5. 'cost' → logprob: -7.911749362945557
    6. '[' → logprob: -7.911749362945557
    7. 'line' → logprob: -8.161749839782715
    8. ')' → logprob: -8.286749839782715
    9. 'add' → logprob: -8.411749839782715
    10. '+d' → logprob: -8.786749839782715

Token 676: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10627681761980057
    2. 'dist' → logprob: -2.856276750564575
    3. 'if' → logprob: -3.356276750564575
    4. ' if' → logprob: -5.356276988983154
    5. '                   ' → logprob: -6.356276988983154
    6. ' dist' → logprob: -6.606276988983154
    7. '           ' → logprob: -8.731276512145996
    8. '   ' → logprob: -8.731276512145996
    9. '                
' → logprob: -9.481276512145996
    10. '```' → logprob: -9.481276512145996

Token 677: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011125282384455204
    2. '                   ' → logprob: -4.761125087738037
    3. '                
' → logprob: -6.886125087738037
    4. '                ' → logprob: -7.761125087738037
    5. '           ' → logprob: -8.386125564575195
    6. '<|end|>' → logprob: -9.011125564575195
    7. '                    
' → logprob: -9.261125564575195
    8. '              ' → logprob: -9.386125564575195
    9. ' if' → logprob: -9.386125564575195
    10. '```' → logprob: -9.761125564575195

Token 678: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.021198131144046783
    2. 'nd' → logprob: -4.646198272705078
    3. '               ' → logprob: -4.646198272705078
    4. 'dist' → logprob: -6.646198272705078
    5. '                   ' → logprob: -8.271198272705078
    6. ' if' → logprob: -9.271198272705078
    7. '           ' → logprob: -9.771198272705078
    8. '   ' → logprob: -10.396198272705078
    9. 'new' → logprob: -11.896198272705078
    10. '```' → logprob: -12.396198272705078

Token 679: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05505842715501785
    2. ' dist' → logprob: -2.930058479309082
    3. 'nc' → logprob: -9.930058479309082
    4. '   ' → logprob: -10.180058479309082
    5. 'n' → logprob: -10.555058479309082
    6. '(dist' → logprob: -10.680058479309082
    7. 'dc' → logprob: -11.305058479309082
    8. ' n' → logprob: -12.180058479309082
    9. '	dist' → logprob: -12.680058479309082
    10. 'nd' → logprob: -12.805058479309082

Token 680: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -8.2994620242971e-06
    2. '[u' → logprob: -11.875008583068848
    3. 'v' → logprob: -13.625008583068848
    4. '```' → logprob: -17.00000762939453
    5. '(v' → logprob: -17.25000762939453
    6. '<v' → logprob: -17.50000762939453
    7. '[' → logprob: -18.00000762939453
    8. '=v' → logprob: -18.25000762939453
    9. '           ' → logprob: -19.37500762939453
    10. ' [' → logprob: -19.37500762939453

Token 681: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.06585484743118286
    2. '[' → logprob: -2.940854787826538
    3. '][' → logprob: -5.065855026245117
    4. '[line' → logprob: -5.440855026245117
    5. '[n' → logprob: -9.190855026245117
    6. ')[' → logprob: -10.190855026245117
    7. '[c' → logprob: -10.815855026245117
    8. '[u' → logprob: -11.315855026245117
    9. '[node' → logprob: -11.690855026245117
    10. '[var' → logprob: -11.815855026245117

Token 682: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0005863950937055051
    2. '0' → logprob: -7.50058650970459
    3. ' line' → logprob: -10.87558650970459
    4. '(line' → logprob: -12.25058650970459
    5. '#line' → logprob: -12.37558650970459
    6. '[line' → logprob: -12.87558650970459
    7. 'v' → logprob: -13.75058650970459
    8. ' ' → logprob: -15.12558650970459
    9. '```' → logprob: -15.62558650970459
    10. '	line' → logprob: -15.75058650970459

Token 683: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.004505011718720198
    2. 'comp' → logprob: -5.504505157470703
    3. 'v' → logprob: -8.254505157470703
    4. 'line' → logprob: -9.504505157470703
    5. 'Comp' → logprob: -9.504505157470703
    6. '[line' → logprob: -12.004505157470703
    7. '_com' → logprob: -12.379505157470703
    8. '[' → logprob: -13.379505157470703
    9. '[v' → logprob: -13.504505157470703
    10. '_line' → logprob: -13.754505157470703

Token 684: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014063243754208088
    2. '[' → logprob: -4.389063358306885
    3. '[line' → logprob: -7.014063358306885
    4. '[d' → logprob: -8.514062881469727
    5. '[v' → logprob: -9.514062881469727
    6. '[n' → logprob: -9.514062881469727
    7. '[node' → logprob: -9.764062881469727
    8. ']' → logprob: -10.139062881469727
    9. '[now' → logprob: -10.889062881469727
    10. '[len' → logprob: -10.889062881469727

Token 685: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00023357603640761226
    2. '0' → logprob: -8.37523365020752
    3. ' d' → logprob: -13.00023365020752
    4. '   ' → logprob: -15.00023365020752
    5. ' ' → logprob: -16.000232696533203
    6. '(d' → logprob: -17.000232696533203
    7. '{' → logprob: -17.125232696533203
    8. '```' → logprob: -17.250232696533203
    9. '`' → logprob: -17.375232696533203
    10. ')d' → logprob: -17.500232696533203

Token 686: ']>' (ID: 54651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005693563143722713
    2. ']>' → logprob: -8.250569343566895
    3. 'd' → logprob: -8.750569343566895
    4. ' ]' → logprob: -9.625569343566895
    5. ']+=' → logprob: -10.875569343566895
    6. ']<' → logprob: -11.500569343566895
    7. ']=' → logprob: -11.625569343566895
    8. ']>=' → logprob: -11.875569343566895
    9. '<|end|>' → logprob: -12.000569343566895
    10. ' ' → logprob: -12.250569343566895

Token 687: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -2.816093228830141e-06
    2. 'n' → logprob: -13.75000286102295
    3. ' n' → logprob: -14.12500286102295
    4. ' nc' → logprob: -14.12500286102295
    5. '   ' → logprob: -15.87500286102295
    6. 'NC' → logprob: -17.750001907348633
    7. '
' → logprob: -17.750001907348633
    8. 'cost' → logprob: -17.875001907348633
    9. '(n' → logprob: -18.125001907348633
    10. '  ' → logprob: -18.500001907348633

Token 688: 'ost' (ID: 564)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.016379669308662415
    2. 'ost' → logprob: -4.1413798332214355
    3. 'st' → logprob: -8.516379356384277
    4. ' cost' → logprob: -9.516379356384277
    5. 'nc' → logprob: -11.266379356384277
    6. '_cost' → logprob: -11.391379356384277
    7. '(cost' → logprob: -11.766379356384277
    8. 'dist' → logprob: -12.391379356384277
    9. 'opt' → logprob: -12.516379356384277
    10. '   ' → logprob: -12.641379356384277

Token 689: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.18507899343967438
    2. ':' → logprob: -2.4350790977478027
    3. ' >' → logprob: -3.0600790977478027
    4. '=' → logprob: -4.060079097747803
    5. '<|end|>' → logprob: -5.185079097747803
    6. '   ' → logprob: -5.685079097747803
    7. ']>' → logprob: -5.935079097747803
    8. ']' → logprob: -6.810079097747803
    9. '           ' → logprob: -7.185079097747803
    10. '```' → logprob: -7.435079097747803

Token 690: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5175179243087769
    2. ' dist' → logprob: -1.8925179243087769
    3. 'dist' → logprob: -2.0175180435180664
    4. '```' → logprob: -3.0175180435180664
    5. '                               ' → logprob: -3.1425180435180664
    6. '                       ' → logprob: -4.517518043518066
    7. '               ' → logprob: -4.767518043518066
    8. '                           ' → logprob: -5.767518043518066
    9. '                ' → logprob: -7.267518043518066
    10. '   ' → logprob: -7.267518043518066

Token 691: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0006056951242499053
    2. ' dist' → logprob: -8.000605583190918
    3. '                   ' → logprob: -8.500605583190918
    4. '               ' → logprob: -9.750605583190918
    5. '   ' → logprob: -12.250605583190918
    6. '                       ' → logprob: -13.125605583190918
    7. '	dist' → logprob: -14.250605583190918
    8. '           ' → logprob: -14.750605583190918
    9. '       ' → logprob: -14.875605583190918
    10. '```' → logprob: -15.500605583190918

Token 692: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.512236498361744e-07
    2. 'v' → logprob: -14.875000953674316
    3. '[u' → logprob: -16.125
    4. '<v' → logprob: -17.125
    5. '(v' → logprob: -18.625
    6. '=v' → logprob: -19.375
    7. '	v' → logprob: -19.875
    8. '```' → logprob: -20.125
    9. ',v' → logprob: -20.25
    10. ')v' → logprob: -20.625

Token 693: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.704273118884885e-07
    2. '][' → logprob: -15.625000953674316
    3. '<v' → logprob: -16.375
    4. '=v' → logprob: -17.125
    5. ',v' → logprob: -17.25
    6. '           ' → logprob: -17.375
    7. 'v' → logprob: -17.375
    8. '[' → logprob: -17.5
    9. '(v' → logprob: -17.75
    10. ')[' → logprob: -17.875

Token 694: 'line' (ID: 1137)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.9888433093437925e-05
    2. 'cost' → logprob: -11.250040054321289
    3. '[v' → logprob: -11.625040054321289
    4. 'dist' → logprob: -12.000040054321289
    5. ' v' → logprob: -12.250040054321289
    6. 'line' → logprob: -12.875040054321289
    7. '```' → logprob: -13.500040054321289
    8. '(v' → logprob: -14.125040054321289
    9. '   ' → logprob: -14.500040054321289
    10. 'd' → logprob: -14.750040054321289

Token 695: '_comp' (ID: 34754)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.007095762062817812
    2. 'v' → logprob: -5.132095813751221
    3. '(v' → logprob: -7.882095813751221
    4. 'q' → logprob: -7.882095813751221
    5. 'heap' → logprob: -8.757095336914062
    6. 'cost' → logprob: -9.882095336914062
    7. '```' → logprob: -10.382095336914062
    8. '           ' → logprob: -10.507095336914062
    9. '       ' → logprob: -10.882095336914062
    10. '   ' → logprob: -10.882095336914062

Token 696: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0010457895696163177
    2. '][' → logprob: -6.8760457038879395
    3. '[' → logprob: -13.126046180725098
    4. '[u' → logprob: -13.501046180725098
    5. '(v' → logprob: -13.876046180725098
    6. ',v' → logprob: -14.001046180725098
    7. '=v' → logprob: -14.001046180725098
    8. ']' → logprob: -14.251046180725098
    9. '```' → logprob: -14.376046180725098
    10. '=[' → logprob: -14.501046180725098

Token 697: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25294259190559387
    2. 'v' → logprob: -1.5029425621032715
    3. '[v' → logprob: -7.1279425621032715
    4. 'nc' → logprob: -9.37794303894043
    5. 'nd' → logprob: -10.37794303894043
    6. ' d' → logprob: -10.75294303894043
    7. '[d' → logprob: -11.00294303894043
    8. 'vd' → logprob: -11.12794303894043
    9. 'cost' → logprob: -12.00294303894043
    10. ' v' → logprob: -12.12794303894043

Token 698: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4745384454727173
    2. ']=' → logprob: -0.9745384454727173
    3. ')=' → logprob: -8.099538803100586
    4. '=n' → logprob: -9.224538803100586
    5. ']' → logprob: -10.224538803100586
    6. '=
' → logprob: -12.724538803100586
    7. '=cut' → logprob: -12.974538803100586
    8. ' =' → logprob: -12.974538803100586
    9. '=node' → logprob: -12.974538803100586
    10. '']=' → logprob: -13.474538803100586

Token 699: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -3.128163257315464e-07
    2. ' nc' → logprob: -15.25
    3. 'n' → logprob: -17.625
    4. '_nc' → logprob: -18.625
    5. '[n' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. 'NC' → logprob: -19.625
    8. '.nc' → logprob: -19.625
    9. '(n' → logprob: -19.875
    10. '	n' → logprob: -20.875

Token 700: 'ost' (ID: 564)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.006718332413583994
    2. 'ost' → logprob: -5.006718158721924
    3. ' cost' → logprob: -13.256718635559082
    4. '_cost' → logprob: -14.381718635559082
    5. 'st' → logprob: -15.006718635559082
    6. 'Cost' → logprob: -16.256717681884766
    7. 'c' → logprob: -16.381717681884766
    8. 'oc' → logprob: -16.881717681884766
    9. 'const' → logprob: -17.381717681884766
    10. 'opt' → logprob: -17.631717681884766

Token 701: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005478029139339924
    2. 'heap' → logprob: -5.2554779052734375
    3. '
' → logprob: -9.130477905273438
    4. '               ' → logprob: -9.630477905273438
    5. '```' → logprob: -10.505477905273438
    6. '           ' → logprob: -10.755477905273438
    7. '                       ' → logprob: -12.380477905273438
    8. '                  ' → logprob: -12.505477905273438
    9. '   ' → logprob: -12.880477905273438
    10. '       ' → logprob: -13.005477905273438

Token 702: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006957611534744501
    2. 'heap' → logprob: -5.006957530975342
    3. '```' → logprob: -9.0069580078125
    4. '               ' → logprob: -9.8819580078125
    5. '				' → logprob: -10.5069580078125
    6. '           ' → logprob: -11.3819580078125
    7. '                       ' → logprob: -11.7569580078125
    8. ' heap' → logprob: -11.7569580078125
    9. '   ' → logprob: -12.2569580078125
    10. '(heap' → logprob: -12.8819580078125

Token 703: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -5.512236498361744e-07
    2. ' heap' → logprob: -14.625000953674316
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -19.5
    5. '                   ' → logprob: -19.625
    6. 'he' → logprob: -21.0
    7. '(heap' → logprob: -21.375
    8. '
' → logprob: -21.375
    9. '.heap' → logprob: -21.5
    10. '           ' → logprob: -22.125

Token 704: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.173704271830502e-06
    2. 'p' → logprob: -13.25000286102295
    3. 'push' → logprob: -14.50000286102295
    4. 'he' → logprob: -15.12500286102295
    5. '```' → logprob: -15.37500286102295
    6. '.he' → logprob: -16.000003814697266
    7. 'heap' → logprob: -17.000003814697266
    8. '[' → logprob: -17.250003814697266
    9. 'h' → logprob: -17.500003814697266
    10. 'app' → logprob: -17.625003814697266

Token 705: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0305535476654768
    2. 'he' → logprob: -3.5305535793304443
    3. 'q' → logprob: -7.280553340911865
    4. '_he' → logprob: -9.530553817749023
    5. 'push' → logprob: -10.780553817749023
    6. 'app' → logprob: -11.905553817749023
    7. ' he' → logprob: -12.030553817749023
    8. 'ush' → logprob: -13.405553817749023
    9. 'heap' → logprob: -13.530553817749023
    10. 'p' → logprob: -14.155553817749023

Token 706: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.7385154428193346e-05
    2. 'ap' → logprob: -10.25003719329834
    3. 'pp' → logprob: -13.25003719329834
    4. 'push' → logprob: -15.62503719329834
    5. 'ush' → logprob: -17.375038146972656
    6. 'appen' → logprob: -18.000038146972656
    7. 'p' → logprob: -18.625038146972656
    8. 'e' → logprob: -18.625038146972656
    9. '```' → logprob: -19.000038146972656
    10. 'he' → logprob: -19.000038146972656

Token 707: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00022094044834375381
    2. 'push' → logprob: -9.125221252441406
    3. 'op' → logprob: -9.250221252441406
    4. 'he' → logprob: -11.625221252441406
    5. 'app' → logprob: -12.500221252441406
    6. 'q' → logprob: -13.375221252441406
    7. 'p' → logprob: -14.125221252441406
    8. 'pp' → logprob: -14.875221252441406
    9. 'pop' → logprob: -16.000221252441406
    10. 'ushed' → logprob: -16.125221252441406

Token 708: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.250005722045898
    3. 'heap' → logprob: -14.500005722045898
    4. '```' → logprob: -16.1250057220459
    5. '(
' → logprob: -16.5000057220459
    6. ' (' → logprob: -16.8750057220459
    7. '(h' → logprob: -17.6250057220459
    8. '   ' → logprob: -18.5000057220459
    9. '((' → logprob: -18.5000057220459
    10. '.heap' → logprob: -19.2500057220459

Token 709: ',(' (ID: 27243)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -7.703443770878948e-06
    2. 'heap' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.250007629394531
    4. '(h' → logprob: -15.500007629394531
    5. ' (' → logprob: -15.875007629394531
    6. '(' → logprob: -16.12500762939453
    7. '```' → logprob: -17.00000762939453
    8. '       ' → logprob: -17.87500762939453
    9. '((' → logprob: -18.00000762939453
    10. ' heap' → logprob: -18.50000762939453

Token 710: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.005241344682872295
    2. '(n' → logprob: -5.255241394042969
    3. ' nc' → logprob: -12.005241394042969
    4. ' n' → logprob: -14.130241394042969
    5. 'n' → logprob: -14.630241394042969
    6. '[n' → logprob: -16.13024139404297
    7. '	n' → logprob: -16.75524139404297
    8. '```' → logprob: -17.13024139404297
    9. '   ' → logprob: -17.63024139404297
    10. '_nc' → logprob: -18.38024139404297

Token 711: 'ost' (ID: 564)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6328391432762146
    2. 'ost' → logprob: -0.7578391432762146
    3. 'st' → logprob: -9.25783920288086
    4. '_cost' → logprob: -9.50783920288086
    5. '(cost' → logprob: -11.00783920288086
    6. ' cost' → logprob: -11.63283920288086
    7. 'opt' → logprob: -11.63283920288086
    8. 'oc' → logprob: -12.00783920288086
    9. 'c' → logprob: -12.25783920288086
    10. 'ot' → logprob: -12.88283920288086

Token 712: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.0001649220648687333
    2. ',' → logprob: -9.125164985656738
    3. 'v' → logprob: -10.375164985656738
    4. '(v' → logprob: -10.625164985656738
    5. '<v' → logprob: -16.250164031982422
    6. '```' → logprob: -16.250164031982422
    7. ' ,' → logprob: -16.625164031982422
    8. ',(' → logprob: -17.000164031982422
    9. ' v' → logprob: -17.375164031982422
    10. '[v' → logprob: -17.875164031982422

Token 713: ',line' (ID: 171132)
  Prédit: ',line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',line' → logprob: -0.3193065822124481
    2. 'line' → logprob: -1.3193066120147705
    3. ',' → logprob: -5.319306373596191
    4. ' line' → logprob: -6.819306373596191
    5. '[line' → logprob: -10.694306373596191
    6. '#line' → logprob: -11.319306373596191
    7. '=line' → logprob: -13.069306373596191
    8. ' ,' → logprob: -14.694306373596191
    9. '(line' → logprob: -15.194306373596191
    10. '	line' → logprob: -15.569306373596191

Token 714: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -8.537868779967539e-06
    2. 'comp' → logprob: -11.875008583068848
    3. '_line' → logprob: -13.875008583068848
    4. 'line' → logprob: -15.000008583068848
    5. '_com' → logprob: -16.37500762939453
    6. '_COMP' → logprob: -17.00000762939453
    7. '```' → logprob: -17.37500762939453
    8. 'Comp' → logprob: -17.75000762939453
    9. 'omp' → logprob: -17.75000762939453
    10. '-comp' → logprob: -18.12500762939453

Token 715: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0059469291009008884
    2. 'd' → logprob: -5.255947113037109
    3. ',' → logprob: -7.255947113037109
    4. ' ,' → logprob: -12.50594711303711
    5. ' d' → logprob: -13.63094711303711
    6. ')d' → logprob: -14.63094711303711
    7. '```' → logprob: -14.88094711303711
    8. '	d' → logprob: -14.88094711303711
    9. '   ' → logprob: -15.25594711303711
    10. '+d' → logprob: -16.31844711303711

Token 716: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00010878815373871475
    2. ')))' → logprob: -9.75010871887207
    3. ')' → logprob: -10.00010871887207
    4. '))
' → logprob: -12.50010871887207
    5. ' ))' → logprob: -14.25010871887207
    6. '));' → logprob: -15.62510871887207
    7. ']))' → logprob: -16.50010871887207
    8. ')]' → logprob: -16.50010871887207
    9. '               ' → logprob: -16.87510871887207
    10. '))))' → logprob: -17.37510871887207

Token 717: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 718: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 719: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7341457605361938
    2. '   ' → logprob: -0.7341457605361938
    3. ':
' → logprob: -3.6091456413269043
    4. 'print' → logprob: -4.859145641326904
    5. '       ' → logprob: -5.609145641326904
    6. '[' → logprob: -7.359145641326904
    7. '>' → logprob: -8.859146118164062
    8. '```' → logprob: -8.859146118164062
    9. '(' → logprob: -9.234146118164062
    10. '(print' → logprob: -9.484146118164062

Token 720: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030093399807810783
    2. '   ' → logprob: -3.5300934314727783
    3. '       ' → logprob: -8.5300931930542
    4. '```' → logprob: -9.0300931930542
    5. ' print' → logprob: -11.0300931930542
    6. '``' → logprob: -12.5300931930542
    7. '	print' → logprob: -12.5300931930542
    8. '           ' → logprob: -14.6550931930542
    9. '#print' → logprob: -14.6550931930542
    10. '        
' → logprob: -15.2800931930542

Token 721: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016361083544325083
    2. '   ' → logprob: -8.750164031982422
    3. ' print' → logprob: -12.250164031982422
    4. '	print' → logprob: -15.125164031982422
    5. '       ' → logprob: -16.625164031982422
    6. '```' → logprob: -17.750164031982422
    7. '#print' → logprob: -19.000164031982422
    8. ' ' → logprob: -19.750164031982422
    9. '    
' → logprob: -19.750164031982422
    10. '  ' → logprob: -20.250164031982422

Token 722: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015650922432541847
    2. '   ' → logprob: -6.501564979553223
    3. '       ' → logprob: -10.126564979553223
    4. ' print' → logprob: -10.751564979553223
    5. '	print' → logprob: -14.126564979553223
    6. '           ' → logprob: -15.126564979553223
    7. '```' → logprob: -15.626564979553223
    8. 'printf' → logprob: -16.50156593322754
    9. '#print' → logprob: -17.00156593322754
    10. ' ' → logprob: -17.62656593322754

Token 723: ' break' (ID: 2338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005392295774072409
    2. ' print' → logprob: -6.255392074584961
    3. 'answer' → logprob: -6.380392074584961
    4. 't' → logprob: -7.880392074584961
    5. '   ' → logprob: -8.005392074584961
    6. 'n' → logprob: -8.505392074584961
    7. 'solution' → logprob: -8.505392074584961
    8. 'route' → logprob: -9.130392074584961
    9. 'println' → logprob: -9.255392074584961
    10. 'path' → logprob: -9.255392074584961

Token 724: ' =>' (ID: 871)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22914113104343414
    2. '   ' → logprob: -1.604141116142273
    3. '       ' → logprob: -5.7291412353515625
    4. ' print' → logprob: -7.8541412353515625
    5. ' ' → logprob: -10.729141235351562
    6. '	print' → logprob: -10.854141235351562
    7. '           ' → logprob: -11.229141235351562
    8. '(print' → logprob: -11.604141235351562
    9. '  ' → logprob: -12.354141235351562
    10. '<|end|>' → logprob: -12.479141235351562

Token 725: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.723973582556937e-05
    2. '   ' → logprob: -11.125017166137695
    3. ' print' → logprob: -13.000017166137695
    4. '       ' → logprob: -16.750017166137695
    5. '```' → logprob: -17.000017166137695
    6. '	print' → logprob: -17.375017166137695
    7. '    
' → logprob: -19.500017166137695
    8. '``' → logprob: -19.625017166137695
    9. '           ' → logprob: -19.625017166137695
    10. 'println' → logprob: -20.000017166137695

Token 726: ' path' (ID: 3104)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004496823064982891
    2. 'answer' → logprob: -5.629497051239014
    3. 'solution' → logprob: -7.629497051239014
    4. 'route' → logprob: -8.379496574401855
    5. 'path' → logprob: -9.129496574401855
    6. 'output' → logprob: -10.754496574401855
    7. ' print' → logprob: -11.254496574401855
    8. 'println' → logprob: -11.629496574401855
    9. 'printf' → logprob: -12.504496574401855
    10. '-print' → logprob: -12.629496574401855

Token 727: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027123568579554558
    2. 'print' → logprob: -3.65212345123291
    3. '       ' → logprob: -7.15212345123291
    4. ' print' → logprob: -10.65212345123291
    5. '	print' → logprob: -12.02712345123291
    6. ' ' → logprob: -12.27712345123291
    7. '  ' → logprob: -13.27712345123291
    8. '           ' → logprob: -13.52712345123291
    9. '<|end|>' → logprob: -14.15212345123291
    10. '     ' → logprob: -14.90212345123291

Token 728: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011142375878989697
    2. '   ' → logprob: -4.511142253875732
    3. '```' → logprob: -9.51114273071289
    4. ' print' → logprob: -11.01114273071289
    5. '``' → logprob: -13.13614273071289
    6. '       ' → logprob: -13.38614273071289
    7. '	print' → logprob: -15.01114273071289
    8. '`' → logprob: -16.88614273071289
    9. 'printf' → logprob: -17.51114273071289
    10. ' ' → logprob: -17.76114273071289

Token 729: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00034821697045117617
    2. '   ' → logprob: -8.000348091125488
    3. ' print' → logprob: -11.375348091125488
    4. '	print' → logprob: -13.625348091125488
    5. '       ' → logprob: -16.625349044799805
    6. '#print' → logprob: -17.250349044799805
    7. '```' → logprob: -17.250349044799805
    8. ' ' → logprob: -19.750349044799805
    9. '.print' → logprob: -19.750349044799805
    10. 'printf' → logprob: -19.875349044799805

Token 730: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07987353205680847
    2. '(-' → logprob: -2.579873561859131
    3. '("' → logprob: -7.329873561859131
    4. '(' → logprob: -9.079873085021973
    5. '0' → logprob: -9.079873085021973
    6. '   ' → logprob: -9.704873085021973
    7. ' -' → logprob: -10.829873085021973
    8. '('' → logprob: -11.204873085021973
    9. '("-' → logprob: -13.204873085021973
    10. '"' → logprob: -13.579873085021973

Token 731: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '１' → logprob: -20.5
    4. '   ' → logprob: -21.75
    5. '```' → logprob: -22.5
    6. '۱' → logprob: -22.625
    7. '2' → logprob: -23.0
    8. 'print' → logprob: -23.5
    9. '  ' → logprob: -23.5
    10. '১' → logprob: -24.0

Token 732: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.25
    3. '())' → logprob: -17.875
    4. '))' → logprob: -18.375
    5. ')}' → logprob: -18.75
    6. ' )' → logprob: -18.875
    7. ')`' → logprob: -19.125
    8. '`)' → logprob: -19.5
    9. '')' → logprob: -19.75
    10. ')}}' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 730
Tokens correctement prédits (1ère position, stricte): 294
Tokens correctement prédits (1ère position, avec adaptation): 328
Tokens correctement prédits (top 10): 585
Précision stricte (1ère position): 40.27%
Précision adaptée (1ère position): 44.93%
Précision (top 10): 80.14%
================================================================================
