================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:29:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

N, M = map(int, input().split())
P = list(map(int, input().split()))

A = [0] * (N - 1)
B = [0] * (N - 1)
C = [0] * (N - 1)
for i in range(N - 1):
    a, b, c = map(int, input().split())
    A[i], B[i], C[i] = a, b, c

# 鉄道ごとに通る回数をカウント
usage = [0] * (N - 1)
for j in range(M - 1):
    start, end = P[j], P[j + 1]
    if start > end:
        start, end = end, start
    # 鉄道 i は都市 i と i+1 を結ぶため、start から end-1 までの鉄道を通る
    for i in range(start - 1, end - 1):
        usage[i] += 1

# 合計コストを計算
total_cost = 0
for i in range(N - 1):
    if usage[i] == 0:
        # 通らない路線は料金がかからない
        continue
    # 紙の切符だけで乗る場合のコスト
    cost_ticket_only = usage[i] * A[i]
    # ICカードを買って乗る場合のコスト
    cost_ic = C[i] + usage[i] * B[i]
    # 小さい方を採用
    total_cost += min(cost_ticket_only, cost_ic)

print(total_cost)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006614457233808935
    2. '.' → logprob: -8.000661849975586
    3. '()' → logprob: -8.875661849975586
    4. ' (' → logprob: -9.250661849975586
    5. '('' → logprob: -10.625661849975586
    6. '(
' → logprob: -10.875661849975586
    7. ')' → logprob: -11.375661849975586
    8. '```' → logprob: -12.250661849975586
    9. ''' → logprob: -12.375661849975586
    10. '_' → logprob: -13.000661849975586

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12724284827709198
    2. 'sys' → logprob: -2.1272428035736084
    3. ' input' → logprob: -8.752243041992188
    4. 'input' → logprob: -8.877243041992188
    5. '	sys' → logprob: -11.877243041992188
    6. '=sys' → logprob: -12.127243041992188
    7. '(sys' → logprob: -12.877243041992188
    8. ' ' → logprob: -13.502243041992188
    9. ' system' → logprob: -15.002243041992188
    10. '_sys' → logprob: -15.627243041992188

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00012047011114191264
    2. '.readline' → logprob: -10.500120162963867
    3. '.`' → logprob: -11.000120162963867
    4. '.import' → logprob: -11.000120162963867
    5. '.stdin' → logprob: -11.250120162963867
    6. ' .' → logprob: -11.625120162963867
    7. '.input' → logprob: -12.625120162963867
    8. '[' → logprob: -12.750120162963867
    9. '.)' → logprob: -13.000120162963867
    10. '.
' → logprob: -13.000120162963867

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6531236171722412
    2. '.readline' → logprob: -0.7781236171722412
    3. '.read' → logprob: -3.903123617172241
    4. '.Read' → logprob: -10.40312385559082
    5. '.readlines' → logprob: -10.40312385559082
    6. 'read' → logprob: -10.52812385559082
    7. '```' → logprob: -11.52812385559082
    8. ' .' → logprob: -11.77812385559082
    9. '.\' → logprob: -12.65312385559082
    10. '.buffer' → logprob: -13.02812385559082

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17288635671138763
    2. '(' → logprob: -1.9228863716125488
    3. '()
' → logprob: -5.672886371612549
    4. '(
' → logprob: -6.047886371612549
    5. '\' → logprob: -6.297886371612549
    6. '\n' → logprob: -6.672886371612549
    7. '
' → logprob: -6.797886371612549
    8. '()\' → logprob: -6.922886371612549
    9. '().' → logprob: -7.172886371612549
    10. '()

' → logprob: -8.79788589477539

Token 9: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.42980557680130005
    2. '(' → logprob: -1.0548055171966553
    3. '().' → logprob: -7.929805755615234
    4. '()
' → logprob: -8.929805755615234
    5. '(
' → logprob: -9.054805755615234
    6. 'def' → logprob: -9.054805755615234
    7. ')' → logprob: -10.054805755615234
    8. '(n' → logprob: -10.054805755615234
    9. '()\' → logprob: -10.054805755615234
    10. '#' → logprob: -10.304805755615234

Token 10: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.871807873249054
    2. ')' → logprob: -1.4968078136444092
    3. ' =' → logprob: -1.8718078136444092
    4. '=' → logprob: -1.8718078136444092
    5. '[' → logprob: -4.496808052062988
    6. '>' → logprob: -4.996808052062988
    7. ' )' → logprob: -5.121808052062988
    8. '.' → logprob: -5.371808052062988
    9. '<|end|>' → logprob: -5.621808052062988
    10. '+' → logprob: -5.996808052062988

Token 11: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3693229556083679
    2. ' M' → logprob: -1.3693230152130127
    3. ' K' → logprob: -3.9943230152130127
    4. 'M' → logprob: -4.119322776794434
    5. 'input' → logprob: -4.619322776794434
    6. ' input' → logprob: -5.869322776794434
    7. ' N' → logprob: -6.494322776794434
    8. 'K' → logprob: -6.619322776794434
    9. '  ' → logprob: -7.244322776794434
    10. 'space' → logprob: -7.369322776794434

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03326721861958504
    2. '=' → logprob: -3.6582672595977783
    3. ',' → logprob: -5.283267021179199
    4. ' ' → logprob: -6.658267021179199
    5. ' ,' → logprob: -7.908267021179199
    6. '<|end|>' → logprob: -9.1582670211792
    7. ')' → logprob: -9.5332670211792
    8. '[' → logprob: -12.1582670211792
    9. ' =
' → logprob: -12.2832670211792
    10. '=input' → logprob: -12.2832670211792

Token 13: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006733130197972059
    2. 'map' → logprob: -5.006732940673828
    3. ' input' → logprob: -11.006732940673828
    4. 'input' → logprob: -14.006732940673828
    5. ' ' → logprob: -15.756732940673828
    6. ' list' → logprob: -16.006732940673828
    7. '	map' → logprob: -17.131732940673828
    8. ' tuple' → logprob: -17.256732940673828
    9. ' mapa' → logprob: -18.006732940673828
    10. '(map' → logprob: -18.881732940673828

Token 14: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16269323229789734
    2. '(int' → logprob: -2.1626932621002197
    3. '(str' → logprob: -3.6626932621002197
    4. '(lambda' → logprob: -4.912693023681641
    5. '(input' → logprob: -6.537693023681641
    6. '(len' → logprob: -8.91269302368164
    7. '(tuple' → logprob: -9.28769302368164
    8. '(list' → logprob: -9.53769302368164
    9. '<|end|>' → logprob: -10.16269302368164
    10. 'int' → logprob: -10.41269302368164

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5914958119392395
    2. '(input' → logprob: -1.3414957523345947
    3. ',input' → logprob: -2.3414957523345947
    4. '(' → logprob: -2.8414957523345947
    5. ')' → logprob: -3.8414957523345947
    6. 'input' → logprob: -5.466495990753174
    7. '(sys' → logprob: -5.841495990753174
    8. ' ,' → logprob: -7.841495990753174
    9. '=input' → logprob: -8.591495513916016
    10. '(str' → logprob: -8.591495513916016

Token 16: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759717226028442
    2. 'input' → logprob: -0.8259717226028442
    3. ' sys' → logprob: -10.825971603393555
    4. 'sys' → logprob: -12.075971603393555
    5. '(input' → logprob: -13.075971603393555
    6. ')' → logprob: -13.450971603393555
    7. ',input' → logprob: -13.700971603393555
    8. ' ' → logprob: -13.825971603393555
    9. 'str' → logprob: -14.575971603393555
    10. '=input' → logprob: -15.450971603393555

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04399362578988075
    2. '())' → logprob: -3.2939937114715576
    3. '()' → logprob: -5.5439934730529785
    4. ')' → logprob: -6.2939934730529785
    5. '()))' → logprob: -9.168993949890137
    6. '()).' → logprob: -10.168993949890137
    7. ').' → logprob: -11.668993949890137
    8. '()),' → logprob: -12.043993949890137
    9. '(' → logprob: -12.543993949890137
    10. '());' → logprob: -12.918993949890137

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2551140785217285
    2. 'strip' → logprob: -1.5051140785217285
    3. 'rstrip' → logprob: -5.7551140785217285
    4. ')' → logprob: -11.88011360168457
    5. ' split' → logprob: -12.50511360168457
    6. '(split' → logprob: -13.88011360168457
    7. ' strip' → logprob: -14.25511360168457
    8. 'read' → logprob: -14.88011360168457
    9. '```' → logprob: -15.25511360168457
    10. '()' → logprob: -15.88011360168457

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011129142512800172
    2. '))' → logprob: -9.25011157989502
    3. '())' → logprob: -12.25011157989502
    4. '()' → logprob: -12.37511157989502
    5. '`)' → logprob: -12.87511157989502
    6. '(' → logprob: -14.00011157989502
    7. ')`' → logprob: -14.50011157989502
    8. '')' → logprob: -14.75011157989502
    9. ' )' → logprob: -14.75011157989502
    10. '),' → logprob: -14.87511157989502

Token 20: 'P' (ID: 47)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3666095733642578
    2. '[' → logprob: -1.8666095733642578
    3. 'd' → logprob: -1.8666095733642578
    4. 'data' → logprob: -2.116609573364258
    5. ' ' → logprob: -2.741609573364258
    6. '\n' → logprob: -2.991609573364258
    7. ')' → logprob: -3.491609573364258
    8. 'for' → logprob: -3.866609573364258
    9. '\' → logprob: -4.241609573364258
    10. 's' → logprob: -4.366609573364258

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2694753408432007
    2. ' =' → logprob: -1.3944753408432007
    3. '[' → logprob: -2.1444754600524902
    4. '=[]' → logprob: -2.5194754600524902
    5. '[]' → logprob: -2.8944754600524902
    6. '[:]' → logprob: -3.2694754600524902
    7. '.' → logprob: -3.6444754600524902
    8. 'A' → logprob: -3.7694754600524902
    9. 'r' → logprob: -3.8944754600524902
    10. '_' → logprob: -4.14447546005249

Token 22: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5058396458625793
    2. 'list' → logprob: -1.1308395862579346
    3. '[' → logprob: -3.2558395862579346
    4. ' [' → logprob: -3.5058395862579346
    5. '[list' → logprob: -5.630839824676514
    6. ' []' → logprob: -6.880839824676514
    7. '[]' → logprob: -7.755839824676514
    8. '[int' → logprob: -7.880839824676514
    9. '[input' → logprob: -8.880839347839355
    10. ' ' → logprob: -10.130839347839355

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.53050296427682e-05
    2. '(range' → logprob: -10.25008487701416
    3. '(int' → logprob: -11.00008487701416
    4. '(

' → logprob: -12.25008487701416
    5. '("("' → logprob: -12.37508487701416
    6. '(
' → logprob: -12.75008487701416
    7. '(input' → logprob: -13.50008487701416
    8. '(map' → logprob: -13.50008487701416
    9. '((' → logprob: -13.50008487701416
    10. '()' → logprob: -13.62508487701416

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5237398743629456
    2. '(' → logprob: -0.8987398743629456
    3. '(lambda' → logprob: -7.898739814758301
    4. '(str' → logprob: -9.3987398147583
    5. '(
' → logprob: -10.6487398147583
    6. '<int' → logprob: -10.7737398147583
    7. '[int' → logprob: -11.2737398147583
    8. '(float' → logprob: -11.2737398147583
    9. 'int' → logprob: -11.3987398147583
    10. '<|end|>' → logprob: -11.5237398147583

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4949270486831665
    2. '(' → logprob: -1.2449270486831665
    3. ',' → logprob: -2.744926929473877
    4. ',input' → logprob: -3.494926929473877
    5. '(int' → logprob: -5.244926929473877
    6. ')' → logprob: -6.994926929473877
    7. ',int' → logprob: -7.869926929473877
    8. ' ,' → logprob: -8.494927406311035
    9. '(in' → logprob: -8.744927406311035
    10. ' (' → logprob: -9.119927406311035

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931791305541992
    2. ' input' → logprob: -0.6931791305541992
    3. '(input' → logprob: -10.4431791305542
    4. ',input' → logprob: -13.5681791305542
    5. ')' → logprob: -14.4431791305542
    6. '=input' → logprob: -15.5681791305542
    7. 'list' → logprob: -15.8181791305542
    8. '	input' → logprob: -16.068180084228516
    9. '[input' → logprob: -16.068180084228516
    10. ' ' → logprob: -16.318180084228516

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.015697753056883812
    2. '()' → logprob: -4.765697956085205
    3. '(' → logprob: -5.015697956085205
    4. '()))' → logprob: -8.265697479248047
    5. '())' → logprob: -9.640697479248047
    6. '(.' → logprob: -10.515697479248047
    7. '()));' → logprob: -10.890697479248047
    8. ')' → logprob: -11.390697479248047
    9. '()-' → logprob: -11.640697479248047
    10. '();' → logprob: -11.765697479248047

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0206720617134124e-05
    2. 'strip' → logprob: -11.62501049041748
    3. ' split' → logprob: -14.50001049041748
    4. 'rstrip' → logprob: -14.75001049041748
    5. ')' → logprob: -15.75001049041748
    6. '(split' → logprob: -16.250009536743164
    7. 's' → logprob: -16.875009536743164
    8. 'spl' → logprob: -16.875009536743164
    9. '().' → logprob: -18.500009536743164
    10. '()' → logprob: -18.875009536743164

Token 29: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2568052411079407
    2. ')' → logprob: -1.506805181503296
    3. '()))' → logprob: -5.756805419921875
    4. '(' → logprob: -6.631805419921875
    5. '())' → logprob: -8.131805419921875
    6. '()' → logprob: -9.631805419921875
    7. '),' → logprob: -11.506805419921875
    8. ')))' → logprob: -12.381805419921875
    9. ''))' → logprob: -12.756805419921875
    10. ' ))' → logprob: -13.256805419921875

Token 30: 'A' (ID: 32)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12892255187034607
    2. '
' → logprob: -2.878922462463379
    3. '[' → logprob: -4.253922462463379
    4. '.' → logprob: -4.753922462463379
    5. ' ' → logprob: -4.878922462463379
    6. 'p' → logprob: -5.253922462463379
    7. '\n' → logprob: -5.503922462463379
    8. 'for' → logprob: -5.628922462463379
    9. '(' → logprob: -6.003922462463379
    10. ' 
' → logprob: -6.253922462463379

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35360056161880493
    2. '=' → logprob: -1.8536005020141602
    3. ' ' → logprob: -2.72860050201416
    4. '[' → logprob: -2.72860050201416
    5. '.' → logprob: -5.35360050201416
    6. ',' → logprob: -5.97860050201416
    7. '_' → logprob: -6.35360050201416
    8. 's' → logprob: -7.47860050201416
    9. '(' → logprob: -8.47860050201416
    10. 'r' → logprob: -9.10360050201416

Token 32: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9375088810920715
    2. '[]' → logprob: -1.1875088214874268
    3. '[' → logprob: -1.4375088214874268
    4. '[list' → logprob: -3.6875088214874268
    5. ' list' → logprob: -4.187509059906006
    6. ' [' → logprob: -4.562509059906006
    7. ' []' → logprob: -5.312509059906006
    8. '[int' → logprob: -5.437509059906006
    9. '[P' → logprob: -5.687509059906006
    10. '[input' → logprob: -7.187509059906006

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001301426556892693
    2. 'int' → logprob: -7.126301288604736
    3. ']' → logprob: -8.376301765441895
    4. '[]' → logprob: -9.001301765441895
    5. 'P' → logprob: -9.876301765441895
    6. ' ' → logprob: -10.501301765441895
    7. 'False' → logprob: -10.626301765441895
    8. '[int' → logprob: -12.251301765441895
    9. 'i' → logprob: -12.376301765441895
    10. '])' → logprob: -12.751301765441895

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014071124605834484
    2. ']*' → logprob: -4.514070987701416
    3. ']*(' → logprob: -6.764070987701416
    4. ' ]' → logprob: -6.889070987701416
    5. ' for' → logprob: -7.264070987701416
    6. ',' → logprob: -9.639071464538574
    7. 'for' → logprob: -10.014071464538574
    8. ')]' → logprob: -11.139071464538574
    9. ')' → logprob: -11.264071464538574
    10. ']+' → logprob: -12.264071464538574

Token 35: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8273076415061951
    2. ' ' → logprob: -0.9523076415061951
    3. ' *' → logprob: -2.82730770111084
    4. '+' → logprob: -2.95230770111084
    5. 'for' → logprob: -3.95230770111084
    6. ' for' → logprob: -4.20230770111084
    7. ' +' → logprob: -4.45230770111084
    8. '0' → logprob: -5.20230770111084
    9. '[' → logprob: -5.32730770111084
    10. ' ]' → logprob: -6.32730770111084

Token 36: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.15573711693286896
    2. '(N' → logprob: -2.6557371616363525
    3. 'M' → logprob: -2.9057371616363525
    4. '(M' → logprob: -4.155736923217773
    5. '(' → logprob: -6.155736923217773
    6. '100' → logprob: -7.405736923217773
    7. '101' → logprob: -8.030736923217773
    8. '10' → logprob: -8.655736923217773
    9. ' N' → logprob: -9.030736923217773
    10. ' (' → logprob: -10.280736923217773

Token 37: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014505110681056976
    2. 'M' → logprob: -4.264504909515381
    3. '100' → logprob: -8.889505386352539
    4. ' N' → logprob: -9.889505386352539
    5. '10' → logprob: -10.139505386352539
    6. '(N' → logprob: -10.264505386352539
    7. '101' → logprob: -10.264505386352539
    8. '(' → logprob: -11.389505386352539
    9. '(M' → logprob: -11.639505386352539
    10. ' ' → logprob: -12.889505386352539

Token 38: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004889077506959438
    2. ' +' → logprob: -5.754889011383057
    3. ')' → logprob: -6.379889011383057
    4. ' )' → logprob: -12.004889488220215
    5. '+)' → logprob: -12.129889488220215
    6. '+
' → logprob: -13.504889488220215
    7. '*' → logprob: -14.879889488220215
    8. '))' → logprob: -15.004889488220215
    9. '1' → logprob: -15.129889488220215
    10. '```' → logprob: -15.879889488220215

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034756974782794714
    2. ' ' → logprob: -5.753475666046143
    3. 'M' → logprob: -8.6284761428833
    4. ' M' → logprob: -9.2534761428833
    5. '2' → logprob: -10.7534761428833
    6. '	M' → logprob: -14.8784761428833
    7. '3' → logprob: -15.0034761428833
    8. '  ' → logprob: -15.2534761428833
    9. '   ' → logprob: -15.2534761428833
    10. '4' → logprob: -16.253475189208984

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019734179659280926
    2. 'M' → logprob: -9.375197410583496
    3. '2' → logprob: -9.750197410583496
    4. ' ' → logprob: -9.875197410583496
    5. ' M' → logprob: -13.625197410583496
    6. '3' → logprob: -14.375197410583496
    7. '   ' → logprob: -15.687697410583496
    8. '4' → logprob: -15.875197410583496
    9. '  ' → logprob: -15.937697410583496
    10. '	M' → logprob: -16.50019645690918

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000530871853698045
    2. '+' → logprob: -7.87553071975708
    3. ' )' → logprob: -8.875531196594238
    4. ']' → logprob: -12.875531196594238
    5. '))' → logprob: -13.500531196594238
    6. ')
' → logprob: -13.625531196594238
    7. ' +' → logprob: -13.750531196594238
    8. '```' → logprob: -14.250531196594238
    9. '),' → logprob: -14.625531196594238
    10. ')]' → logprob: -14.750531196594238

Token 42: 'B' (ID: 33)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13690687716007233
    2. ' for' → logprob: -2.761906862258911
    3. ' 
' → logprob: -4.01190710067749
    4. '
' → logprob: -4.01190710067749
    5. ' ' → logprob: -4.51190710067749
    6. '<|end|>' → logprob: -4.51190710067749
    7. ')' → logprob: -6.01190710067749
    8. '\n' → logprob: -6.38690710067749
    9. '\' → logprob: -7.63690710067749
    10. '  
' → logprob: -8.511906623840332

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009858080185949802
    2. '=' → logprob: -4.634858131408691
    3. ' ' → logprob: -9.384858131408691
    4. '[' → logprob: -11.759858131408691
    5. ',' → logprob: -12.384858131408691
    6. ' =[' → logprob: -13.134858131408691
    7. ' ,' → logprob: -13.509858131408691
    8. ')' → logprob: -14.509858131408691
    9. ' =
' → logprob: -14.884858131408691
    10. ']' → logprob: -15.259858131408691

Token 44: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18124015629291534
    2. ' [' → logprob: -1.806240200996399
    3. '[]' → logprob: -6.931240081787109
    4. ' list' → logprob: -8.55624008178711
    5. 'list' → logprob: -9.05624008178711
    6. '[list' → logprob: -9.30624008178711
    7. ' []' → logprob: -9.43124008178711
    8. '[int' → logprob: -11.80624008178711
    9. '[N' → logprob: -12.05624008178711
    10. '[input' → logprob: -12.30624008178711

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00028398085851222277
    2. ' ' → logprob: -8.625284194946289
    3. 'int' → logprob: -10.000284194946289
    4. ']' → logprob: -10.250284194946289
    5. ')' → logprob: -11.000284194946289
    6. ']int' → logprob: -13.250284194946289
    7. '(' → logprob: -13.500284194946289
    8. '(int' → logprob: -14.000284194946289
    9. '[int' → logprob: -14.250284194946289
    10. 'list' → logprob: -14.500284194946289

Token 46: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.825890159234405e-05
    2. ' )' → logprob: -10.000068664550781
    3. ']' → logprob: -11.000068664550781
    4. '*' → logprob: -13.375068664550781
    5. ' ' → logprob: -13.875068664550781
    6. ')(' → logprob: -14.000068664550781
    7. ' *' → logprob: -14.625068664550781
    8. '}' → logprob: -15.000068664550781
    9. ')
' → logprob: -15.125068664550781
    10. '>' → logprob: -15.250068664550781

Token 47: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40645939111709595
    2. '<|end|>' → logprob: -1.6564593315124512
    3. '*' → logprob: -3.281459331512451
    4. ')' → logprob: -3.406459331512451
    5. ' *' → logprob: -3.406459331512451
    6. ' (' → logprob: -4.531459331512451
    7. '(' → logprob: -5.031459331512451
    8. '*(' → logprob: -5.781459331512451
    9. ' 
' → logprob: -5.781459331512451
    10. '
' → logprob: -5.781459331512451

Token 48: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47838085889816284
    2. '(N' → logprob: -1.1033809185028076
    3. '(' → logprob: -3.1033809185028076
    4. '(M' → logprob: -5.7283806800842285
    5. 'N' → logprob: -8.853381156921387
    6. 'M' → logprob: -9.103381156921387
    7. ' N' → logprob: -10.728381156921387
    8. ' M' → logprob: -11.103381156921387
    9. '(
' → logprob: -11.478381156921387
    10. '(n' → logprob: -11.603381156921387

Token 49: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001821554615162313
    2. 'M' → logprob: -6.751821517944336
    3. ' N' → logprob: -7.501821517944336
    4. '(N' → logprob: -9.626821517944336
    5. '(' → logprob: -11.501821517944336
    6. ' (' → logprob: -12.001821517944336
    7. '(M' → logprob: -12.251821517944336
    8. ' ' → logprob: -12.251821517944336
    9. '   ' → logprob: -12.876821517944336
    10. ' M' → logprob: -13.626821517944336

Token 50: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05005808174610138
    2. ' -' → logprob: -3.050058126449585
    3. ')' → logprob: -6.550057888031006
    4. ' ' → logprob: -11.050058364868164
    5. '1' → logprob: -11.675058364868164
    6. ' )' → logprob: -12.050058364868164
    7. '[' → logprob: -13.300058364868164
    8. '2' → logprob: -13.675058364868164
    9. '   ' → logprob: -13.800058364868164
    10. '-
' → logprob: -13.925058364868164

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002790935104712844
    2. ' ' → logprob: -8.375279426574707
    3. '2' → logprob: -10.000279426574707
    4. '<|end|>' → logprob: -13.500279426574707
    5. ')' → logprob: -13.750279426574707
    6. '```' → logprob: -15.500279426574707
    7. '0' → logprob: -16.00027847290039
    8. '   ' → logprob: -16.62527847290039
    9. '  ' → logprob: -16.81277847290039
    10. '3' → logprob: -17.00027847290039

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.375015258789062
    3. '2' → logprob: -12.625015258789062
    4. ')' → logprob: -16.500015258789062
    5. '```' → logprob: -16.625015258789062
    6. '   ' → logprob: -16.875015258789062
    7. '１' → logprob: -17.687515258789062
    8. '  ' → logprob: -18.062515258789062
    9. '<|end|>' → logprob: -18.375015258789062
    10. '0' → logprob: -18.687515258789062

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -16.50000762939453
    4. '}' → logprob: -17.00000762939453
    5. ')

' → logprob: -17.00000762939453
    6. '```' → logprob: -17.25000762939453
    7. '))' → logprob: -17.62500762939453
    8. '`)' → logprob: -17.87500762939453
    9. ')
' → logprob: -18.00000762939453
    10. ']' → logprob: -18.12500762939453

Token 54: 'C' (ID: 34)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016099588247016072
    2. '\n' → logprob: -7.126609802246094
    3. ' for' → logprob: -7.376609802246094
    4. '
' → logprob: -10.126609802246094
    5. '<|end|>' → logprob: -10.126609802246094
    6. '\' → logprob: -11.001609802246094
    7. '[' → logprob: -11.001609802246094
    8. 'n' → logprob: -11.251609802246094
    9. 'f' → logprob: -11.376609802246094
    10. '```' → logprob: -12.001609802246094

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029825231060385704
    2. '=' → logprob: -3.529825210571289
    3. '[' → logprob: -9.779825210571289
    4. ',' → logprob: -12.154825210571289
    5. ' ' → logprob: -12.154825210571289
    6. '_' → logprob: -13.654825210571289
    7. '[]' → logprob: -13.904825210571289
    8. 'a' → logprob: -14.029825210571289
    9. ']' → logprob: -14.404825210571289
    10. '.' → logprob: -14.529825210571289

Token 56: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06166410446166992
    2. ' [' → logprob: -2.93666410446167
    3. '0' → logprob: -5.68666410446167
    4. '[]' → logprob: -5.93666410446167
    5. ' ' → logprob: -8.186664581298828
    6. ' []' → logprob: -8.436664581298828
    7. '[N' → logprob: -9.311664581298828
    8. '[int' → logprob: -9.811664581298828
    9. '1' → logprob: -11.436664581298828
    10. '[len' → logprob: -11.561664581298828

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03247208148241043
    2. '[' → logprob: -3.6574721336364746
    3. '[N' → logprob: -5.907472133636475
    4. ' ' → logprob: -6.782472133636475
    5. '(' → logprob: -7.407472133636475
    6. '[]' → logprob: -7.907472133636475
    7. ']' → logprob: -8.032471656799316
    8. '[M' → logprob: -8.157471656799316
    9. '[int' → logprob: -8.282471656799316
    10. '(N' → logprob: -8.657471656799316

Token 58: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3136240243911743
    2. ']' → logprob: -1.3136240243911743
    3. ' ]' → logprob: -9.063624382019043
    4. ' )' → logprob: -9.438624382019043
    5. ' ' → logprob: -9.938624382019043
    6. ' *' → logprob: -10.938624382019043
    7. '*' → logprob: -10.938624382019043
    8. '}' → logprob: -11.063624382019043
    9. ')]' → logprob: -11.438624382019043
    10. '(N' → logprob: -11.438624382019043

Token 59: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7331616878509521
    2. '<|end|>' → logprob: -1.6081616878509521
    3. ' ' → logprob: -1.7331616878509521
    4. '*' → logprob: -3.233161687850952
    5. ' *' → logprob: -3.858161687850952
    6. 'for' → logprob: -3.983161687850952
    7. '
' → logprob: -4.108161926269531
    8. ' 
' → logprob: -4.108161926269531
    9. '<|end|>' → logprob: -4.733161926269531
    10. ']' → logprob: -5.608161926269531

Token 60: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.7815863490104675
    2. ' (' → logprob: -0.9065863490104675
    3. '(' → logprob: -2.6565864086151123
    4. '(M' → logprob: -3.2815864086151123
    5. 'M' → logprob: -4.281586170196533
    6. 'N' → logprob: -4.281586170196533
    7. ' M' → logprob: -6.406586170196533
    8. ' N' → logprob: -6.781586170196533
    9. ' ' → logprob: -8.906586647033691
    10. '(
' → logprob: -10.656586647033691

Token 61: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.019138772040605545
    2. 'M' → logprob: -4.144138813018799
    3. ' N' → logprob: -6.269138813018799
    4. '(N' → logprob: -7.144138813018799
    5. '(M' → logprob: -8.89413833618164
    6. ' M' → logprob: -9.64413833618164
    7. '(' → logprob: -9.76913833618164
    8. ' (' → logprob: -9.89413833618164
    9. ' ' → logprob: -10.39413833618164
    10. '2' → logprob: -10.64413833618164

Token 62: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.045711249113082886
    2. ' -' → logprob: -3.1707112789154053
    3. ')' → logprob: -5.920711040496826
    4. '1' → logprob: -11.795711517333984
    5. '
' → logprob: -13.045711517333984
    6. '<|end|>' → logprob: -13.045711517333984
    7. ')
' → logprob: -13.170711517333984
    8. '[' → logprob: -13.295711517333984
    9. ' )' → logprob: -13.420711517333984
    10. ' ' → logprob: -13.545711517333984

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003348698082845658
    2. '2' → logprob: -8.375334739685059
    3. ' ' → logprob: -9.375334739685059
    4. ')' → logprob: -11.500334739685059
    5. '-' → logprob: -12.875334739685059
    6. '```' → logprob: -13.125334739685059
    7. '3' → logprob: -13.375334739685059
    8. '   ' → logprob: -14.000334739685059
    9. '<|end|>' → logprob: -14.125334739685059
    10. '
' → logprob: -15.125334739685059

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.79811754100956e-05
    2. '2' → logprob: -10.375038146972656
    3. ' ' → logprob: -12.250038146972656
    4. '3' → logprob: -14.375038146972656
    5. ')' → logprob: -14.625038146972656
    6. '```' → logprob: -14.875038146972656
    7. '-' → logprob: -16.625038146972656
    8. '１' → logprob: -16.750038146972656
    9. '   ' → logprob: -16.812538146972656
    10. '0' → logprob: -17.187538146972656

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.723973582556937e-05
    2. ')
' → logprob: -11.000017166137695
    3. ' )' → logprob: -15.500017166137695
    4. '}' → logprob: -16.250017166137695
    5. ']' → logprob: -16.250017166137695
    6. '```' → logprob: -16.875017166137695
    7. ')
' → logprob: -17.000017166137695
    8. ')

' → logprob: -17.500017166137695
    9. '*' → logprob: -17.625017166137695
    10. '`)' → logprob: -17.750017166137695

Token 66: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011056899093091488
    2. ' for' → logprob: -5.011056900024414
    3. '
' → logprob: -6.136056900024414
    4. '\n' → logprob: -6.511056900024414
    5. '<|end|>' → logprob: -7.886056900024414
    6. '```' → logprob: -9.136056900024414
    7. '\' → logprob: -9.636056900024414
    8. ' 
' → logprob: -9.886056900024414
    9. ' ' → logprob: -10.886056900024414
    10. '' → logprob: -11.261056900024414

Token 67: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03921159356832504
    2. ' ' → logprob: -3.2892115116119385
    3. ' _' → logprob: -7.039211750030518
    4. 'i' → logprob: -8.78921127319336
    5. '_' → logprob: -9.03921127319336
    6. ' ‌' → logprob: -11.66421127319336
    7. ' ' → logprob: -12.16421127319336
    8. '  ' → logprob: -12.41421127319336
    9. '	i' → logprob: -13.78921127319336
    10. ' I' → logprob: -14.03921127319336

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022448498755693436
    2. 'in' → logprob: -3.8974485397338867
    3. ' ' → logprob: -6.397448539733887
    4. ' i' → logprob: -8.772448539733887
    5. '  ' → logprob: -10.772448539733887
    6. ',' → logprob: -11.272448539733887
    7. 'n' → logprob: -11.897448539733887
    8. '<|end|>' → logprob: -12.022448539733887
    9. 'range' → logprob: -12.647448539733887
    10. '	in' → logprob: -12.647448539733887

Token 69: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003189832204952836
    2. 'range' → logprob: -5.753190040588379
    3. ' xrange' → logprob: -12.003190040588379
    4. '(range' → logprob: -12.753190040588379
    5. '	range' → logprob: -12.878190040588379
    6. ' ' → logprob: -14.753190040588379
    7. '_range' → logprob: -16.878189086914062
    8. '.range' → logprob: -17.003189086914062
    9. ' rango' → logprob: -17.253189086914062
    10. '<|end|>' → logprob: -17.753189086914062

Token 70: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03867693990468979
    2. '(N' → logprob: -3.2886769771575928
    3. ' (' → logprob: -7.413676738739014
    4. '(M' → logprob: -11.538677215576172
    5. '(n' → logprob: -11.913677215576172
    6. '(i' → logprob: -12.288677215576172
    7. '(
' → logprob: -12.288677215576172
    8. '(len' → logprob: -12.663677215576172
    9. '(

' → logprob: -13.663677215576172
    10. ' ' → logprob: -13.788677215576172

Token 71: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02877061627805233
    2. ' -' → logprob: -3.653770685195923
    3. '):' → logprob: -6.153770446777344
    4. ')' → logprob: -9.028770446777344
    5. '):
' → logprob: -9.153770446777344
    6. '1' → logprob: -9.278770446777344
    7. ' ' → logprob: -11.153770446777344
    8. ' ):' → logprob: -13.028770446777344
    9. '   ' → logprob: -13.528770446777344
    10. '2' → logprob: -13.903770446777344

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02325141802430153
    2. ' ' → logprob: -3.773251533508301
    3. '<|end|>' → logprob: -12.8982515335083
    4. ')' → logprob: -14.1482515335083
    5. '<|end|>' → logprob: -14.6482515335083
    6. '  ' → logprob: -14.7732515335083
    7. '```' → logprob: -14.8357515335083
    8. ' )' → logprob: -15.3982515335083
    9. '2' → logprob: -15.6482515335083
    10. '-' → logprob: -15.6482515335083

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -15.000009536743164
    4. '2' → logprob: -15.375009536743164
    5. ')' → logprob: -16.125009536743164
    6. '<|end|>' → logprob: -16.375009536743164
    7. '   ' → logprob: -16.562509536743164
    8. '１' → logprob: -17.562509536743164
    9. '१' → logprob: -17.625009536743164
    10. '<|end|>' → logprob: -18.250009536743164

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003356659086421132
    2. ')' → logprob: -5.878356456756592
    3. ':' → logprob: -7.753356456756592
    4. ' ):' → logprob: -9.12835693359375
    5. '):
' → logprob: -11.50335693359375
    6. ']:' → logprob: -14.00335693359375
    7. ',' → logprob: -14.00335693359375
    8. '+' → logprob: -15.00335693359375
    9. '():' → logprob: -15.00335693359375
    10. ' )' → logprob: -15.12835693359375

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3427470624446869
    2. '<|end|>' → logprob: -1.3427470922470093
    3. ' A' → logprob: -4.967747211456299
    4. ' ' → logprob: -4.967747211456299
    5. '<|end|>' → logprob: -5.967747211456299
    6. '    
' → logprob: -6.217747211456299
    7. 'A' → logprob: -6.467747211456299
    8. '\t' → logprob: -6.592747211456299
    9. '	A' → logprob: -6.967747211456299
    10. '	s' → logprob: -7.092747211456299

Token 76: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11111793667078018
    2. ' A' → logprob: -2.6111178398132324
    3. 'a' (adapté à ' a') → logprob: -3.4861178398132324
    4. ' a' → logprob: -6.986117839813232
    5. 'x' → logprob: -9.23611831665039
    6. 'u' → logprob: -11.61111831665039
    7. 's' → logprob: -11.61111831665039
    8. '	A' → logprob: -11.86111831665039
    9. '   ' → logprob: -11.98611831665039
    10. ' ' → logprob: -12.23611831665039

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005703500472009182
    2. ',b' → logprob: -5.255703449249268
    3. ' ,' → logprob: -7.880703449249268
    4. ',a' → logprob: -9.755703926086426
    5. 'b' → logprob: -11.130703926086426
    6. ',B' → logprob: -12.005703926086426
    7. ',p' → logprob: -13.130703926086426
    8. '=' → logprob: -13.130703926086426
    9. ',s' → logprob: -13.380703926086426
    10. ',A' → logprob: -13.755703926086426

Token 78: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02057458832859993
    2. ' b' → logprob: -3.8955745697021484
    3. ' ' → logprob: -11.145574569702148
    4. '<|end|>' → logprob: -11.145574569702148
    5. 's' → logprob: -12.895574569702148
    6. 'space' → logprob: -14.520574569702148
    7. '<|end|>' → logprob: -15.895574569702148
    8. '_' → logprob: -15.895574569702148
    9. '  ' → logprob: -16.27057456970215
    10. '>b' → logprob: -16.39557456970215

Token 79: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5124713182449341
    2. ',' → logprob: -1.262471318244934
    3. ' =' → logprob: -2.1374711990356445
    4. ' ,' → logprob: -10.637471199035645
    5. '<|end|>' → logprob: -10.637471199035645
    6. ')' → logprob: -12.137471199035645
    7. '=input' → logprob: -12.512471199035645
    8. '=int' → logprob: -13.012471199035645
    9. '<|end|>' → logprob: -13.262471199035645
    10. ',a' → logprob: -13.387471199035645

Token 80: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07896216213703156
    2. ' c' → logprob: -2.5789620876312256
    3. ' =' → logprob: -10.828962326049805
    4. ',c' → logprob: -11.078962326049805
    5. ' ' → logprob: -11.453962326049805
    6. ',' → logprob: -12.328962326049805
    7. '=' → logprob: -12.828962326049805
    8. 'd' → logprob: -12.828962326049805
    9. '<|end|>' → logprob: -12.828962326049805
    10. 't' → logprob: -13.078962326049805

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22541537880897522
    2. ' =' → logprob: -1.6004153490066528
    3. '=input' → logprob: -13.725415229797363
    4. '＝' → logprob: -14.600415229797363
    5. ',' → logprob: -14.725415229797363
    6. '=line' → logprob: -15.475415229797363
    7. ' ' → logprob: -15.850415229797363
    8. ')' → logprob: -15.975415229797363
    9. '=int' → logprob: -16.85041618347168
    10. ')=' → logprob: -17.22541618347168

Token 82: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011052302084863186
    2. 'map' → logprob: -4.511052131652832
    3. ' input' → logprob: -12.886052131652832
    4. '	map' → logprob: -14.011052131652832
    5. 'input' → logprob: -14.761052131652832
    6. ' ' → logprob: -15.011052131652832
    7. ' list' → logprob: -15.636052131652832
    8. '(map' → logprob: -16.26105308532715
    9. 'm' → logprob: -17.38605308532715
    10. '_map' → logprob: -17.76105308532715

Token 83: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004746406921185553
    2. '(' → logprob: -7.750474452972412
    3. '<int' → logprob: -11.25047492980957
    4. '[int' → logprob: -11.50047492980957
    5. '<|end|>' → logprob: -11.62547492980957
    6. ']int' → logprob: -12.87547492980957
    7. '(input' → logprob: -13.00047492980957
    8. '(in' → logprob: -13.37547492980957
    9. '=int' → logprob: -13.50047492980957
    10. 'int' → logprob: -13.75047492980957

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006738462019711733
    2. ',input' → logprob: -5.006738662719727
    3. ' ,' → logprob: -11.631738662719727
    4. '(),' → logprob: -12.006738662719727
    5. '(' → logprob: -12.256738662719727
    6. '(input' → logprob: -13.381738662719727
    7. ',int' → logprob: -14.131738662719727
    8. ',(' → logprob: -16.006738662719727
    9. '‌,' → logprob: -16.256738662719727
    10. ',function' → logprob: -16.381738662719727

Token 85: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.313262403011322
    2. 'input' → logprob: -1.3132624626159668
    3. '(input' → logprob: -15.688261985778809
    4. '	input' → logprob: -15.938261985778809
    5. '_input' → logprob: -16.188262939453125
    6. ')' → logprob: -16.313262939453125
    7. ',input' → logprob: -16.313262939453125
    8. '=input' → logprob: -16.563262939453125
    9. ' ' → logprob: -16.938262939453125
    10. '[input' → logprob: -17.438262939453125

Token 86: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00039588010986335576
    2. '()' → logprob: -7.875395774841309
    3. '.' → logprob: -11.625395774841309
    4. ' ().' → logprob: -13.125395774841309
    5. ')' → logprob: -13.250395774841309
    6. '.readline' → logprob: -13.625395774841309
    7. '(' → logprob: -14.000395774841309
    8. '.split' → logprob: -15.000395774841309
    9. '('').' → logprob: -16.500396728515625
    10. ').' → logprob: -16.625396728515625

Token 87: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5776860184123507e-06
    2. 'spl' → logprob: -13.12500286102295
    3. '(split' → logprob: -15.37500286102295
    4. 'strip' → logprob: -15.87500286102295
    5. ' split' → logprob: -15.87500286102295
    6. 's' → logprob: -16.875001907348633
    7. ')' → logprob: -17.500001907348633
    8. 'rstrip' → logprob: -17.875001907348633
    9. 'plit' → logprob: -18.250001907348633
    10. 'sp' → logprob: -19.750001907348633

Token 88: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2863728702068329
    2. '())' → logprob: -1.4113729000091553
    3. '()' → logprob: -5.286372661590576
    4. '())
' → logprob: -10.036373138427734
    5. '))' → logprob: -10.161373138427734
    6. ')
' → logprob: -10.536373138427734
    7. '(' → logprob: -12.161373138427734
    8. '`)' → logprob: -12.161373138427734
    9. ' )' → logprob: -12.161373138427734
    10. ')`' → logprob: -12.286373138427734

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2549091875553131
    2. '<|end|>' → logprob: -1.7549091577529907
    3. '    
' → logprob: -3.7549092769622803
    4. ')' → logprob: -4.129909038543701
    5. '  
' → logprob: -6.004909038543701
    6. ' ' → logprob: -6.254909038543701
    7. '\n' → logprob: -6.504909038543701
    8. '```' → logprob: -6.629909038543701
    9. '  ' → logprob: -6.879909038543701
    10. '
' → logprob: -7.129909038543701

Token 90: ' A' (ID: 355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002896048128604889
    2. '[' → logprob: -5.877895832061768
    3. '[a' → logprob: -9.377896308898926
    4. '[I' → logprob: -12.502896308898926
    5. ' [' → logprob: -14.002896308898926
    6. '[A' → logprob: -14.127896308898926
    7. '```' → logprob: -15.002896308898926
    8. '\[' → logprob: -15.627896308898926
    9. '[s' → logprob: -15.877896308898926
    10. '[
' → logprob: -16.00289535522461

Token 92: '],' (ID: 2155)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5734567046165466
    2. ']' → logprob: -1.4484567642211914
    3. ' =' → logprob: -2.0734567642211914
    4. ')' → logprob: -2.6984567642211914
    5. ',' → logprob: -5.323456764221191
    6. ']=' → logprob: -6.323456764221191
    7. ')=' → logprob: -7.198456764221191
    8. ' ]' → logprob: -7.323456764221191
    9. ' ' → logprob: -8.448456764221191
    10. ' )' → logprob: -9.573456764221191

Token 93: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.39555421471595764
    2. ' B' → logprob: -1.1455541849136353
    3. 'b' → logprob: -5.145554065704346
    4. ' ' → logprob: -6.645554065704346
    5. '<|end|>' → logprob: -7.145554065704346
    6. ' b' → logprob: -7.520554065704346
    7. ' =' → logprob: -9.395554542541504
    8. '=' → logprob: -10.020554542541504
    9. 'a' → logprob: -11.020554542541504
    10. '	B' → logprob: -11.895554542541504

Token 94: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003103175258729607
    2. '[' → logprob: -8.125309944152832
    3. ',' → logprob: -11.625309944152832
    4. '<|end|>' → logprob: -12.750309944152832
    5. '[I' → logprob: -14.125309944152832
    6. ' [' → logprob: -15.250309944152832
    7. '[int' → logprob: -15.375309944152832
    8. ',i' → logprob: -15.500309944152832
    9. '[user' → logprob: -15.750309944152832
    10. 'i' → logprob: -16.00031089782715

Token 95: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003784750821068883
    2. '],' → logprob: -6.378784656524658
    3. ']' → logprob: -7.003784656524658
    4. '=' → logprob: -7.253784656524658
    5. ' ,' → logprob: -8.503785133361816
    6. ' =' → logprob: -9.003785133361816
    7. '>,' → logprob: -10.378785133361816
    8. '),' → logprob: -10.503785133361816
    9. ']=' → logprob: -11.003785133361816
    10. ')' → logprob: -11.378785133361816

Token 96: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.055137839168310165
    2. ' C' → logprob: -2.930137872695923
    3. ' =' → logprob: -9.305137634277344
    4. ' ' → logprob: -9.680137634277344
    5. ' and' → logprob: -10.055137634277344
    6. '=C' → logprob: -10.930137634277344
    7. '=' → logprob: -11.180137634277344
    8. '<|end|>' → logprob: -11.305137634277344
    9. 'and' → logprob: -11.680137634277344
    10. ',' → logprob: -13.180137634277344

Token 97: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016539888747502118
    2. '[' → logprob: -8.750164985656738
    3. '[
' → logprob: -13.000164985656738
    4. ' [' → logprob: -14.000164985656738
    5. ']' → logprob: -14.000164985656738
    6. '[I' → logprob: -14.125164985656738
    7. '<|end|>' → logprob: -14.625164985656738
    8. '=' → logprob: -14.750164985656738
    9. ' =' → logprob: -15.375164985656738
    10. '][' → logprob: -15.500164985656738

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03274784982204437
    2. '=' → logprob: -3.907747745513916
    3. ')' → logprob: -4.657747745513916
    4. ']=' → logprob: -6.282747745513916
    5. ' =' → logprob: -7.282747745513916
    6. ')=' → logprob: -9.657748222351074
    7. ' ]' → logprob: -11.407748222351074
    8. ',' → logprob: -11.782748222351074
    9. ' ' → logprob: -14.032748222351074
    10. ')]' → logprob: -14.407748222351074

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741556644439697
    2. ' =' → logprob: -0.9741556644439697
    3. ',' → logprob: -9.97415542602539
    4. '=a' → logprob: -10.97415542602539
    5. '=i' → logprob: -12.09915542602539
    6. '=

' → logprob: -13.84915542602539
    7. ' =[' → logprob: -14.09915542602539
    8. ' ,' → logprob: -14.09915542602539
    9. '=input' → logprob: -14.22415542602539
    10. '=data' → logprob: -14.59915542602539

Token 100: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.061968132853507996
    2. ' a' → logprob: -2.8119680881500244
    3. '	a' → logprob: -14.561967849731445
    4. ' ' → logprob: -17.186967849731445
    5. '   ' → logprob: -17.186967849731445
    6. '(a' → logprob: -17.561967849731445
    7. '  ' → logprob: -19.186967849731445
    8. '    ' → logprob: -19.436967849731445
    9. ' (' → logprob: -19.936967849731445
    10. ',' → logprob: -20.936967849731445

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0871952474117279
    2. ' ,' → logprob: -3.0871951580047607
    3. ',b' → logprob: -3.4621951580047607
    4. ' ' → logprob: -5.58719539642334
    5. '<|end|>' → logprob: -6.46219539642334
    6. ',B' → logprob: -8.08719539642334
    7. ' b' → logprob: -8.58719539642334
    8. '
' → logprob: -8.58719539642334
    9. ' ,
' → logprob: -8.96219539642334
    10. ' 
' → logprob: -9.08719539642334

Token 102: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12692831456661224
    2. 'b' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.376928329467773
    4. '	b' → logprob: -16.751928329467773
    5. ' б' → logprob: -18.751928329467773
    6. ' ' → logprob: -19.501928329467773
    7. ',b' → logprob: -19.626928329467773
    8. '    ' → logprob: -20.126928329467773
    9. ')b' → logprob: -20.376928329467773
    10. ' ,' → logprob: -20.876928329467773

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008238304406404495
    2. ' ,' → logprob: -4.883238315582275
    3. ',c' → logprob: -7.508238315582275
    4. 'c' → logprob: -10.258237838745117
    5. ' ' → logprob: -10.508237838745117
    6. ' c' → logprob: -11.008237838745117
    7. '<|end|>' → logprob: -14.258237838745117
    8. '`,' → logprob: -14.508237838745117
    9. ' 
' → logprob: -14.758237838745117
    10. '	c' → logprob: -15.008237838745117

Token 104: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3868716359138489
    2. 'c' → logprob: -1.136871576309204
    3. '	c' → logprob: -15.011871337890625
    4. ' ' → logprob: -15.511871337890625
    5. ' ' → logprob: -16.261871337890625
    6. ' 
' → logprob: -17.636871337890625
    7. '_c' → logprob: -18.261871337890625
    8. ')c' → logprob: -18.636871337890625
    9. '```' → logprob: -19.011871337890625
    10. '%c' → logprob: -19.511871337890625

Token 105: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8647319674491882
    2. 'for' → logprob: -1.739732027053833
    3. '<|end|>' → logprob: -1.739732027053833
    4. 'd' → logprob: -3.114732027053833
    5. 'D' → logprob: -3.489732027053833
    6. '[' → logprob: -3.864732027053833
    7. '#' → logprob: -3.864732027053833
    8. 'P' → logprob: -4.114731788635254
    9. '\n' → logprob: -4.114731788635254
    10. ')' → logprob: -4.364731788635254

Token 106: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3646583557128906
    2. 'dp' → logprob: -1.7396583557128906
    3. 'd' → logprob: -2.1146583557128906
    4. 'D' → logprob: -2.3646583557128906
    5. 'result' → logprob: -2.4896583557128906
    6. 'Q' → logprob: -2.8646583557128906
    7. '#' → logprob: -3.2396583557128906
    8. 'P' → logprob: -3.7396583557128906
    9. 'dist' → logprob: -3.8646583557128906
    10. 'answer' → logprob: -3.8646583557128906

Token 107: ' �' (ID: 3348)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7844780087471008
    2. ' for' → logprob: -1.784477949142456
    3. 'from' → logprob: -1.909477949142456
    4. '#' → logprob: -2.284477949142456
    5. ' #' → logprob: -4.034478187561035
    6. 'Here' → logprob: -4.159478187561035
    7. ' from' → logprob: -4.284478187561035
    8. 'd' → logprob: -4.909478187561035
    9. 'def' → logprob: -5.284478187561035
    10. 'P' → logprob: -5.284478187561035

Token 108: '�' (ID: 231)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.058120813220739365
    2. 'f' → logprob: -4.3081207275390625
    3. 'd' → logprob: -4.3081207275390625
    4. '=' → logprob: -4.5581207275390625
    5. 'P' → logprob: -5.8081207275390625
    6. 'i' → logprob: -5.9331207275390625
    7. 'p' → logprob: -6.3081207275390625
    8. 'from' → logprob: -7.0581207275390625
    9. ' ' → logprob: -7.0581207275390625
    10. 'for' → logprob: -7.1831207275390625

Token 109: '�' (ID: 226)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06803259998559952
    2. ' ' → logprob: -2.8180325031280518
    3. 'for' → logprob: -7.193032741546631
    4. 'd' → logprob: -7.193032741546631
    5. '
' → logprob: -7.318032741546631
    6. ' 
' → logprob: -7.693032741546631
    7. ' #' → logprob: -8.068032264709473
    8. 'f' → logprob: -8.068032264709473
    9. ')' → logprob: -8.193032264709473
    10. ',' → logprob: -8.443032264709473

Token 110: '道' (ID: 7615)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.013195876963436604
    2. ' ' → logprob: -4.763195991516113
    3. 'd' → logprob: -7.388195991516113
    4. '
' → logprob: -7.638195991516113
    5. '[' → logprob: -8.013195991516113
    6. '_' → logprob: -8.138195991516113
    7. ')' → logprob: -8.138195991516113
    8. ' #' → logprob: -8.388195991516113
    9. 's' → logprob: -8.513195991516113
    10. 'f' → logprob: -8.763195991516113

Token 111: 'ご' (ID: 16211)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.079356350004673
    2. 'd' → logprob: -3.0793564319610596
    3. 'dp' → logprob: -4.5793561935424805
    4. 'for' → logprob: -5.7043561935424805
    5. '
' → logprob: -5.9543561935424805
    6. ')' → logprob: -6.3293561935424805
    7. 'distance' → logprob: -6.5793561935424805
    8. 'D' → logprob: -6.9543561935424805
    9. ' ' → logprob: -7.0793561935424805
    10. 's' → logprob: -7.0793561935424805

Token 112: 'と' (ID: 5330)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.5258244872093201
    2. '#' → logprob: -1.1508245468139648
    3. 'for' → logprob: -3.525824546813965
    4. 'に' → logprob: -3.650824546813965
    5. 'と' → logprob: -4.775824546813965
    6. 'def' → logprob: -5.400824546813965
    7. '```' → logprob: -5.650824546813965
    8. 'は' → logprob: -6.275824546813965
    9. 'り' → logprob: -6.338324546813965
    10. 'で' → logprob: -6.463324546813965

Token 113: 'に' (ID: 5280)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12769955396652222
    2. ' ' → logprob: -2.377699613571167
    3. 'for' → logprob: -4.127699375152588
    4. '
' → logprob: -6.002699375152588
    5. 'd' → logprob: -6.252699375152588
    6. '<|end|>' → logprob: -6.502699375152588
    7. ' 
' → logprob: -7.252699375152588
    8. ' for' → logprob: -7.377699375152588
    9. ' #' → logprob: -7.627699375152588
    10. '' → logprob: -7.752699375152588

Token 114: '通' (ID: 9034)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0088341236114502
    2. 'd' → logprob: -2.25883412361145
    3. 'A' → logprob: -2.63383412361145
    4. 'p' → logprob: -3.00883412361145
    5. 'cost' → logprob: -3.25883412361145
    6. 'b' → logprob: -3.38383412361145
    7. 'P' → logprob: -3.63383412361145
    8. 'k' → logprob: -3.63383412361145
    9. '```' → logprob: -3.63383412361145
    10. 'c' → logprob: -3.75883412361145

Token 115: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.017009560018777847
    2. 'す' → logprob: -5.142009735107422
    3. '過' → logprob: -5.767009735107422
    4. 'れる' → logprob: -6.142009735107422
    5. '#' → logprob: -6.517009735107422
    6. '行' → logprob: -6.517009735107422
    7. '```' → logprob: -6.767009735107422
    8. 'う' → logprob: -7.642009735107422
    9. 'った' → logprob: -8.017009735107422
    10. 'っ' → logprob: -8.642009735107422

Token 116: '回' (ID: 10154)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1830434948205948
    2. 'for' → logprob: -2.0580434799194336
    3. ' for' → logprob: -4.308043479919434
    4. ' ' → logprob: -4.433043479919434
    5. '_' → logprob: -5.558043479919434
    6. ' #' → logprob: -6.058043479919434
    7. ',' → logprob: -7.058043479919434
    8. ')' → logprob: -7.058043479919434
    9. '.' → logprob: -7.308043479919434
    10. 'P' → logprob: -7.558043479919434

Token 117: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.0012697550700977445
    2. 's' → logprob: -7.001269817352295
    3. '#' → logprob: -8.751269340515137
    4. 'count' → logprob: -9.751269340515137
    5. 'す' → logprob: -10.126269340515137
    6. '```' → logprob: -10.876269340515137
    7. '수' → logprob: -11.251269340515137
    8. '[]' → logprob: -11.376269340515137
    9. '0' → logprob: -11.501269340515137
    10. '수를' → logprob: -12.126269340515137

Token 118: 'を' (ID: 7277)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.269476979970932
    2. 'cnt' → logprob: -2.394476890563965
    3. 'c' → logprob: -3.019476890563965
    4. 'counts' → logprob: -3.394476890563965
    5. 'd' → logprob: -4.019476890563965
    6. 't' → logprob: -4.144476890563965
    7. 'dp' → logprob: -5.894476890563965
    8. 'counter' → logprob: -6.269476890563965
    9. ',' → logprob: -6.269476890563965
    10. 'times' → logprob: -6.519476890563965

Token 119: 'カ' (ID: 14214)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0032251295633614063
    2. '0' → logprob: -7.003225326538086
    3. 'count' → logprob: -7.753225326538086
    4. '[i' → logprob: -8.128225326538086
    5. '[]' → logprob: -8.128225326538086
    6. ' [' → logprob: -8.503225326538086
    7. '[P' → logprob: -8.503225326538086
    8. 'print' → logprob: -9.003225326538086
    9. '[count' → logprob: -9.378225326538086
    10. '計' → logprob: -9.378225326538086

Token 120: 'ウ' (ID: 21225)
  Prédit: 'ウ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ウ' → logprob: -0.019300853833556175
    2. 'う' → logprob: -4.644300937652588
    3. '운' → logprob: -6.394300937652588
    4. 'ウン' → logprob: -6.644300937652588
    5. '[' → logprob: -6.769300937652588
    6. 'u' → logprob: -6.894300937652588
    7. '#' → logprob: -7.144300937652588
    8. 'l' → logprob: -7.644300937652588
    9. '=' → logprob: -7.769300937652588
    10. '0' → logprob: -7.769300937652588

Token 121: 'ント' (ID: 21744)
  Prédit: 'ウ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ウ' → logprob: -0.4980992376804352
    2. 'ン' → logprob: -1.1230992078781128
    3. 'n' → logprob: -3.9980993270874023
    4. '#' → logprob: -4.248099327087402
    5. 'う' → logprob: -4.498099327087402
    6. 'ント' → logprob: -5.373099327087402
    7. '[' → logprob: -5.748099327087402
    8. 'ウン' → logprob: -6.248099327087402
    9. 'u' → logprob: -6.498099327087402
    10. '=' → logprob: -6.498099327087402

Token 122: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1699877232313156
    2. 'counts' → logprob: -3.044987678527832
    3. 'route' → logprob: -3.669987678527832
    4. 'path' → logprob: -4.044987678527832
    5. 'counter' → logprob: -4.294987678527832
    6. 'cnt' → logprob: -4.419987678527832
    7. 'road' → logprob: -5.044987678527832
    8. 'Q' → logprob: -5.294987678527832
    9. 'pass' → logprob: -5.419987678527832
    10. 'ways' → logprob: -5.669987678527832

Token 123: 'usage' (ID: 25871)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3760394752025604
    2. 'for' → logprob: -2.501039505004883
    3. 'counts' → logprob: -2.501039505004883
    4. 'cnt' → logprob: -3.501039505004883
    5. 'freq' → logprob: -4.251039505004883
    6. 'route' → logprob: -4.251039505004883
    7. 'counter' → logprob: -4.626039505004883
    8. 'Q' → logprob: -4.626039505004883
    9. 'path' → logprob: -4.876039505004883
    10. 'road' → logprob: -5.001039505004883

Token 124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22582034766674042
    2. ' =' → logprob: -1.7258203029632568
    3. '_' → logprob: -4.225820541381836
    4. '_count' → logprob: -5.350820541381836
    5. '_counts' → logprob: -5.600820541381836
    6. 's' → logprob: -7.350820541381836
    7. '[' → logprob: -8.350820541381836
    8. 'count' → logprob: -10.350820541381836
    9. ' ' → logprob: -10.600820541381836
    10. '_=' → logprob: -10.600820541381836

Token 125: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.32392441527918e-05
    2. ' [' → logprob: -10.000053405761719
    3. '[N' → logprob: -12.500053405761719
    4. '[P' → logprob: -12.875053405761719
    5. '[A' → logprob: -14.750053405761719
    6. '[B' → logprob: -15.125053405761719
    7. '[M' → logprob: -15.750053405761719
    8. '[n' → logprob: -15.750053405761719
    9. '[len' → logprob: -16.00005340576172
    10. '{' → logprob: -16.50005340576172

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. ']' → logprob: -16.250051498413086
    4. 'N' → logprob: -16.562551498413086
    5. '(' → logprob: -17.125051498413086
    6. '０' → logprob: -17.375051498413086
    7. 'False' → logprob: -17.500051498413086
    8. '1' → logprob: -17.500051498413086
    9. ')' → logprob: -17.750051498413086
    10. 'M' → logprob: -17.812551498413086

Token 127: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013634715229272842
    2. ' for' → logprob: -4.51363468170166
    3. ']*' → logprob: -6.76363468170166
    4. 'for' → logprob: -7.38863468170166
    5. ']*(' → logprob: -7.76363468170166
    6. ')' → logprob: -8.76363468170166
    7. '*' → logprob: -9.13863468170166
    8. '(N' → logprob: -9.88863468170166
    9. '(' → logprob: -10.38863468170166
    10. ' ]' → logprob: -11.13863468170166

Token 128: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03573350980877876
    2. '*(' → logprob: -4.285733699798584
    3. '(N' → logprob: -4.535733699798584
    4. ' *' → logprob: -5.285733699798584
    5. '(' → logprob: -6.285733699798584
    6. ']*' → logprob: -6.660733699798584
    7. 'for' → logprob: -7.410733699798584
    8. ']' → logprob: -7.660733699798584
    9. ' for' → logprob: -7.910733699798584
    10. '*N' → logprob: -8.035733222961426

Token 129: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.018379369750618935
    2. '(M' → logprob: -5.018379211425781
    3. 'N' → logprob: -5.143379211425781
    4. 'M' → logprob: -5.643379211425781
    5. '(' → logprob: -6.143379211425781
    6. ' (' → logprob: -10.018379211425781
    7. '(len' → logprob: -11.393379211425781
    8. ' ' → logprob: -13.143379211425781
    9. '(
' → logprob: -13.393379211425781
    10. 'len' → logprob: -13.643379211425781

Token 130: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06515111029148102
    2. 'N' → logprob: -2.8151512145996094
    3. '(M' → logprob: -6.815151214599609
    4. 'M' → logprob: -6.940151214599609
    5. '(' → logprob: -7.065151214599609
    6. ' (' → logprob: -8.56515121459961
    7. '(
' → logprob: -10.81515121459961
    8. ' N' → logprob: -11.19015121459961
    9. '
' → logprob: -12.06515121459961
    10. ' ' → logprob: -12.31515121459961

Token 131: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0307195745408535
    2. '-' → logprob: -3.530719518661499
    3. ' )' → logprob: -7.155719757080078
    4. ' -' → logprob: -9.155719757080078
    5. ')
' → logprob: -9.905719757080078
    6. '+' → logprob: -11.280719757080078
    7. '1' → logprob: -12.155719757080078
    8. '*' → logprob: -12.905719757080078
    9. '```' → logprob: -13.155719757080078
    10. '[' → logprob: -13.655719757080078

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0339031834737398e-05
    2. ' ' → logprob: -10.875020027160645
    3. '１' → logprob: -14.750020027160645
    4. '2' → logprob: -15.250020027160645
    5. '-' → logprob: -15.250020027160645
    6. '```' → logprob: -16.00002098083496
    7. '
' → logprob: -16.43752098083496
    8. '   ' → logprob: -16.68752098083496
    9. ')' → logprob: -17.31252098083496
    10. '6' → logprob: -17.37502098083496

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.250005722045898
    3. '2' → logprob: -14.000005722045898
    4. '１' → logprob: -15.750005722045898
    5. '-' → logprob: -16.1250057220459
    6. '```' → logprob: -16.5000057220459
    7. '0' → logprob: -16.6250057220459
    8. '3' → logprob: -17.5000057220459
    9. '6' → logprob: -18.0625057220459
    10. '   ' → logprob: -18.1875057220459

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9385402993066236e-05
    2. ')
' → logprob: -11.000019073486328
    3. ' )' → logprob: -13.125019073486328
    4. ')

' → logprob: -15.375019073486328
    5. ')
' → logprob: -15.500019073486328
    6. '）' → logprob: -16.250019073486328
    7. ']' → logprob: -18.000019073486328
    8. '))' → logprob: -18.500019073486328
    9. '
' → logprob: -18.625019073486328
    10. '*' → logprob: -18.875019073486328

Token 135: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011497443774715066
    2. 'M' → logprob: -8.001150131225586
    3. ')' → logprob: -8.751150131225586
    4. '<|end|>' → logprob: -8.751150131225586
    5. ' for' → logprob: -8.876150131225586
    6. 'i' → logprob: -9.126150131225586
    7. 'P' → logprob: -9.251150131225586
    8. '#' → logprob: -10.376150131225586
    9. '
' → logprob: -11.251150131225586
    10. '.' → logprob: -11.376150131225586

Token 136: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28532928228378296
    2. ' i' → logprob: -1.7853293418884277
    3. 'p' → logprob: -3.1603293418884277
    4. '_' → logprob: -3.7853293418884277
    5. ' p' → logprob: -4.910329341888428
    6. ' _' → logprob: -6.160329341888428
    7. '_i' → logprob: -6.285329341888428
    8. 'j' → logprob: -6.410329341888428
    9. 'x' → logprob: -7.535329341888428
    10. ' j' → logprob: -8.03532886505127

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16307157278060913
    2. 'in' → logprob: -1.913071632385254
    3. ' ' → logprob: -6.163071632385254
    4. ',' → logprob: -7.538071632385254
    5. ' ,' → logprob: -10.038071632385254
    6. '	in' → logprob: -10.663071632385254
    7. 'In' → logprob: -10.913071632385254
    8. '1' → logprob: -11.288071632385254
    9. 's' → logprob: -11.600571632385254
    10. '  ' → logprob: -11.600571632385254

Token 138: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.48237478733062744
    2. ' range' → logprob: -0.9823747873306274
    3. 'P' → logprob: -4.857374668121338
    4. ' P' → logprob: -7.732374668121338
    5. 'r' → logprob: -10.857375144958496
    6. 'M' → logprob: -11.482375144958496
    7. ' ' → logprob: -12.232375144958496
    8. '(range' → logprob: -12.482375144958496
    9. 'p' → logprob: -12.607375144958496
    10. '	range' → logprob: -12.982375144958496

Token 139: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0009918416617438197
    2. '(' → logprob: -7.0009918212890625
    3. '(N' → logprob: -10.375991821289062
    4. 'M' → logprob: -10.875991821289062
    5. ' (' → logprob: -11.500991821289062
    6. '(len' → logprob: -11.875991821289062
    7. '(m' → logprob: -12.125991821289062
    8. ' M' → logprob: -13.000991821289062
    9. '(P' → logprob: -13.750991821289062
    10. '(
' → logprob: -13.750991821289062

Token 140: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004779811482876539
    2. '):
' → logprob: -5.754779815673828
    3. ' ):' → logprob: -6.504779815673828
    4. ')' → logprob: -9.379779815673828
    5. '):
' → logprob: -11.504779815673828
    6. '+' → logprob: -12.379779815673828
    7. ' ):
' → logprob: -13.254779815673828
    8. ':' → logprob: -13.254779815673828
    9. ',' → logprob: -14.629779815673828
    10. ' )' → logprob: -14.879779815673828

Token 141: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017054134514182806
    2. ' ' → logprob: -6.376705646514893
    3. '2' → logprob: -13.001705169677734
    4. '-' → logprob: -15.001705169677734
    5. '   ' → logprob: -16.251705169677734
    6. ')' → logprob: -16.376705169677734
    7. '１' → logprob: -16.751705169677734
    8. '
' → logprob: -16.814205169677734
    9. '```' → logprob: -16.814205169677734
    10. '  ' → logprob: -16.876705169677734

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.4192871175473556e-05
    2. ' ' → logprob: -9.875054359436035
    3. '2' → logprob: -13.375054359436035
    4. '-' → logprob: -15.125054359436035
    5. '１' → logprob: -15.562554359436035
    6. '   ' → logprob: -16.31255340576172
    7. '```' → logprob: -16.31255340576172
    8. '0' → logprob: -16.37505340576172
    9. ')' → logprob: -16.62505340576172
    10. '
' → logprob: -16.81255340576172

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10356508195400238
    2. '):
' → logprob: -2.353564977645874
    3. ' ):' → logprob: -5.853565216064453
    4. ')' → logprob: -8.353565216064453
    5. ' ):
' → logprob: -9.228565216064453
    6. '):
' → logprob: -9.228565216064453
    7. ':' → logprob: -10.353565216064453
    8. ',' → logprob: -11.478565216064453
    9. ' )' → logprob: -12.603565216064453
    10. ' :' → logprob: -13.103565216064453

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10420067608356476
    2. 'u' → logprob: -3.104200601577759
    3. ' u' → logprob: -4.104200839996338
    4. 'p' → logprob: -4.854200839996338
    5. 'for' → logprob: -5.229200839996338
    6. ' for' → logprob: -5.479200839996338
    7. ' p' → logprob: -5.854200839996338
    8. 'i' → logprob: -5.979200839996338
    9. 'from' → logprob: -6.229200839996338
    10. 'l' → logprob: -6.229200839996338

Token 145: ' start' (ID: 1604)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.21055282652378082
    2. 'p' → logprob: -2.085552930831909
    3. 'start' (adapté à ' start') → logprob: -3.335552930831909
    4. 'for' → logprob: -4.33555269241333
    5. 'l' → logprob: -5.21055269241333
    6. 'from' → logprob: -5.96055269241333
    7. 's' → logprob: -5.96055269241333
    8. 'x' → logprob: -6.08555269241333
    9. 'i' → logprob: -7.21055269241333
    10. 'idx' → logprob: -7.33555269241333

Token 146: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07421131432056427
    2. '=' → logprob: -2.824211359024048
    3. ',' → logprob: -4.449211120605469
    4. '_idx' → logprob: -7.824211120605469
    5. ' ,' → logprob: -9.824211120605469
    6. '_' → logprob: -12.074211120605469
    7. '_index' → logprob: -12.824211120605469
    8. ' ' → logprob: -13.074211120605469
    9. 'idx' → logprob: -13.074211120605469
    10. '=P' → logprob: -13.074211120605469

Token 147: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0227251835167408
    2. 'goal' → logprob: -4.2727251052856445
    3. ' end' → logprob: -4.8977251052856445
    4. ' goal' → logprob: -6.8977251052856445
    5. '=end' → logprob: -10.522725105285645
    6. ',end' → logprob: -12.022725105285645
    7. '	end' → logprob: -12.772725105285645
    8. 'target' → logprob: -13.147725105285645
    9. 'start' → logprob: -13.147725105285645
    10. 'Goal' → logprob: -13.272725105285645

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141859352588654
    2. '=' → logprob: -1.7014186382293701
    3. ' ' → logprob: -12.70141887664795
    4. ',' → logprob: -14.57641887664795
    5. '=int' → logprob: -14.82641887664795
    6. '＝' → logprob: -14.95141887664795
    7. ')' → logprob: -15.07641887664795
    8. '=end' → logprob: -16.076417922973633
    9. '=input' → logprob: -16.201417922973633
    10. ' =
' → logprob: -16.451417922973633

Token 149: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0017430083826184273
    2. ' P' → logprob: -6.376742839813232
    3. '(P' → logprob: -10.75174331665039
    4. ' ' → logprob: -11.87674331665039
    5. '   ' → logprob: -12.25174331665039
    6. '	P' → logprob: -13.00174331665039
    7. '  ' → logprob: -13.37674331665039
    8. '(' → logprob: -13.87674331665039
    9. ' (' → logprob: -14.12674331665039
    10. ')' → logprob: -14.75174331665039

Token 150: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0022199610248208046
    2. '[' → logprob: -6.127220153808594
    3. '[
' → logprob: -11.627220153808594
    4. 'j' → logprob: -11.627220153808594
    5. ' [' → logprob: -12.377220153808594
    6. ']' → logprob: -13.002220153808594
    7. '[i' → logprob: -13.127220153808594
    8. '[J' → logprob: -13.877220153808594
    9. '
' → logprob: -14.002220153808594
    10. '[[' → logprob: -14.627220153808594

Token 151: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.02728157490491867
    2. ']' → logprob: -3.6522815227508545
    3. '-' → logprob: -7.527281761169434
    4. ']-' → logprob: -7.902281761169434
    5. ' ],' → logprob: -9.902281761169434
    6. ' -' → logprob: -10.902281761169434
    7. ']
' → logprob: -14.277281761169434
    8. ' ]' → logprob: -14.527281761169434
    9. '+' → logprob: -14.652281761169434
    10. ',' → logprob: -15.027281761169434

Token 152: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0010331686353310943
    2. ' P' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.376032829284668
    4. '	P' → logprob: -16.126033782958984
    5. ' ' → logprob: -17.001033782958984
    6. '>P' → logprob: -17.376033782958984
    7. '_P' → logprob: -18.001033782958984
    8. '  ' → logprob: -18.376033782958984
    9. '[P' → logprob: -19.501033782958984
    10. 'Ｐ' → logprob: -19.626033782958984

Token 153: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.06483341008424759
    2. 'j' → logprob: -2.814833402633667
    3. '[' → logprob: -5.939833641052246
    4. '{' → logprob: -9.814833641052246
    5. '[
' → logprob: -9.939833641052246
    6. '```' → logprob: -10.064833641052246
    7. '+' → logprob: -10.564833641052246
    8. ' j' → logprob: -10.939833641052246
    9. '	j' → logprob: -11.064833641052246
    10. '1' → logprob: -12.439833641052246

Token 154: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005936628440394998
    2. ' +' → logprob: -7.875593662261963
    3. ']' → logprob: -8.875594139099121
    4. '+j' → logprob: -9.750594139099121
    5. '+]' → logprob: -11.625594139099121
    6. '1' → logprob: -12.250594139099121
    7. ']+' → logprob: -14.250594139099121
    8. '[j' → logprob: -15.125594139099121
    9. 'j' → logprob: -15.250594139099121
    10. '+
' → logprob: -15.750594139099121

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001613459608051926
    2. ' ' → logprob: -8.750161170959473
    3. '   ' → logprob: -14.250161170959473
    4. ']' → logprob: -14.250161170959473
    5. '  ' → logprob: -14.625161170959473
    6. '```' → logprob: -15.250161170959473
    7. '0' → logprob: -15.500161170959473
    8. '１' → logprob: -16.56266212463379
    9. '
' → logprob: -16.68766212463379
    10. ' ' → logprob: -16.68766212463379

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -16.125003814697266
    4. ']' → logprob: -16.500003814697266
    5. 'j' → logprob: -17.375003814697266
    6. '```' → logprob: -17.375003814697266
    7. '１' → logprob: -17.625003814697266
    8. ')' → logprob: -18.125003814697266
    9. '])' → logprob: -18.125003814697266
    10. '
' → logprob: -18.375003814697266

Token 157: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026985259726643562
    2. ']' → logprob: -3.6519851684570312
    3. '])' → logprob: -8.276985168457031
    4. ')
' → logprob: -8.776985168457031
    5. ' )' → logprob: -8.901985168457031
    6. ')]' → logprob: -9.401985168457031
    7. '）' → logprob: -11.026985168457031
    8. ' ]' → logprob: -12.026985168457031
    9. ']
' → logprob: -12.526985168457031
    10. '#' → logprob: -12.776985168457031

Token 158: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01892414130270481
    2. 'i' → logprob: -5.518924236297607
    3. '#' → logprob: -5.643924236297607
    4. 'idx' → logprob: -5.893924236297607
    5. ' for' → logprob: -6.143924236297607
    6. 'if' (adapté à ' if') → logprob: -6.143924236297607
    7. 'path' → logprob: -6.518924236297607
    8. 'while' → logprob: -7.143924236297607
    9. 'current' → logprob: -7.643924236297607
    10. '<|end|>' → logprob: -8.01892375946045

Token 160: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5762584209442139
    2. ' start' → logprob: -0.8262584209442139
    3. ' A' → logprob: -9.576258659362793
    4. ' ' → logprob: -10.076258659362793
    5. 'end' → logprob: -10.201258659362793
    6. ' end' → logprob: -10.326258659362793
    7. 'A' → logprob: -10.326258659362793
    8. ' abs' → logprob: -10.701258659362793
    9. 'abs' → logprob: -11.326258659362793
    10. '	start' → logprob: -11.326258659362793

Token 161: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5997105836868286
    2. '==' → logprob: -1.0997105836868286
    3. ' >' → logprob: -3.099710464477539
    4. ' <' → logprob: -3.224710464477539
    5. '<' → logprob: -4.099710464477539
    6. '>' → logprob: -4.349710464477539
    7. ' !=' → logprob: -6.224710464477539
    8. '!=' → logprob: -6.474710464477539
    9. '=' → logprob: -8.974710464477539
    10. ' <=' → logprob: -10.849710464477539

Token 162: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0046464535407722
    2. ' end' → logprob: -5.379646301269531
    3. '=end' → logprob: -11.504646301269531
    4. '	end' → logprob: -12.004646301269531
    5. '>end' → logprob: -13.004646301269531
    6. ' ' → logprob: -13.379646301269531
    7. 'endmodule' → logprob: -13.754646301269531
    8. '[end' → logprob: -13.879646301269531
    9. 'endt' → logprob: -14.004646301269531
    10. '   ' → logprob: -14.629646301269531

Token 163: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005681091919541359
    2. ':
' → logprob: -5.505681037902832
    3. ',' → logprob: -6.505681037902832
    4. ' :' → logprob: -9.505681037902832
    5. ':start' → logprob: -11.380681037902832
    6. '):' → logprob: -11.880681037902832
    7. ',
' → logprob: -13.255681037902832
    8. ':end' → logprob: -13.380681037902832
    9. ' :
' → logprob: -13.630681037902832
    10. '[' → logprob: -13.630681037902832

Token 164: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5570583343505859
    2. ' start' → logprob: -1.432058334350586
    3. 'start' → logprob: -1.682058334350586
    4. '       ' → logprob: -7.057058334350586
    5. ' for' → logprob: -7.932058334350586
    6. '[start' → logprob: -8.307058334350586
    7. '    ' → logprob: -8.682058334350586
    8. '	start' → logprob: -8.682058334350586
    9. 'for' → logprob: -9.432058334350586
    10. ' continue' → logprob: -10.057058334350586

Token 165: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.039662428200244904
    2. ' start' → logprob: -3.2896623611450195
    3. '   ' → logprob: -6.9146623611450195
    4. '       ' → logprob: -7.4146623611450195
    5. '	start' → logprob: -12.03966236114502
    6. 'end' → logprob: -12.53966236114502
    7. '[start' → logprob: -12.66466236114502
    8. '
' → logprob: -13.03966236114502
    9. '    ' → logprob: -13.16466236114502
    10. ' ' → logprob: -13.78966236114502

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002690840628929436
    2. ' ,' → logprob: -8.750268936157227
    3. ',end' → logprob: -9.125268936157227
    4. '=' → logprob: -14.875268936157227
    5. ',
' → logprob: -15.375268936157227
    6. ',start' → logprob: -15.375268936157227
    7. '=end' → logprob: -15.625268936157227
    8. ' ' → logprob: -16.250268936157227
    9. '```' → logprob: -16.500268936157227
    10. '[::-' → logprob: -16.750268936157227

Token 167: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.16023418307304382
    2. ' end' → logprob: -1.9102342128753662
    3. '=end' → logprob: -12.410234451293945
    4. '	end' → logprob: -13.160234451293945
    5. ',end' → logprob: -13.660234451293945
    6. '(end' → logprob: -14.160234451293945
    7. ' ' → logprob: -14.285234451293945
    8. '[end' → logprob: -14.285234451293945
    9. '<|end|>' → logprob: -14.910234451293945
    10. ',' → logprob: -16.785234451293945

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009128939709626138
    2. ' =' → logprob: -7.000912666320801
    3. '=
' → logprob: -14.0009126663208
    4. ',' → logprob: -15.0009126663208
    5. '=

' → logprob: -15.7509126663208
    6. '=end' → logprob: -17.000913619995117
    7. '=start' → logprob: -17.000913619995117
    8. '=}' → logprob: -17.625913619995117
    9. '.=' → logprob: -18.625913619995117
    10. '<|end|>' → logprob: -18.750913619995117

Token 169: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.12693461775779724
    2. ' end' → logprob: -2.12693452835083
    3. '	end' → logprob: -13.376935005187988
    4. '(end' → logprob: -13.376935005187988
    5. '   ' → logprob: -13.876935005187988
    6. '=end' → logprob: -14.126935005187988
    7. '[end' → logprob: -14.626935005187988
    8. ',end' → logprob: -15.126935005187988
    9. '
' → logprob: -15.376935005187988
    10. ' ' → logprob: -15.501935005187988

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.0536883615423e-05
    2. ',
' → logprob: -9.750080108642578
    3. ' ,' → logprob: -11.875080108642578
    4. ',start' → logprob: -12.125080108642578
    5. '<|end|>' → logprob: -12.375080108642578
    6. ',end' → logprob: -12.750080108642578
    7. ',input' → logprob: -15.000080108642578
    8. ',None' → logprob: -15.625080108642578
    9. ',

' → logprob: -15.625080108642578
    10. '-' → logprob: -15.625080108642578

Token 171: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00033558503491804004
    2. ' start' → logprob: -8.000335693359375
    3. '       ' → logprob: -17.000335693359375
    4. 'star' → logprob: -17.875335693359375
    5. ' ' → logprob: -18.375335693359375
    6. '
' → logprob: -18.875335693359375
    7. '   ' → logprob: -19.125335693359375
    8. '[start' → logprob: -19.125335693359375
    9. '	start' → logprob: -20.500335693359375
    10. '
' → logprob: -21.000335693359375

Token 172: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9734154939651489
    2. '   ' → logprob: -1.223415493965149
    3. '<|end|>' → logprob: -1.598415493965149
    4. ' for' → logprob: -2.3484153747558594
    5. ' ' → logprob: -5.473415374755859
    6. 'continue' → logprob: -5.848415374755859
    7. '    ' → logprob: -5.848415374755859
    8. '#' → logprob: -5.848415374755859
    9. '...' → logprob: -5.973415374755859
    10. '[start' → logprob: -6.098415374755859

Token 173: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46270522475242615
    2. '   ' → logprob: -1.2127052545547485
    3. ' for' → logprob: -2.712705135345459
    4. '<|end|>' → logprob: -6.337705135345459
    5. '    
' → logprob: -6.712705135345459
    6. '
' → logprob: -6.962705135345459
    7. 'while' → logprob: -7.337705135345459
    8. 'start' → logprob: -7.462705135345459
    9. '  
' → logprob: -8.087705612182617
    10. 'i' → logprob: -8.587705612182617

Token 174: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0059879315085709095
    2. 'usage' → logprob: -5.630988121032715
    3. '   ' → logprob: -6.630988121032715
    4. ' for' → logprob: -7.505988121032715
    5. 'i' → logprob: -8.755988121032715
    6. 'while' → logprob: -9.630988121032715
    7. '#' (adapté à ' #') → logprob: -9.630988121032715
    8. 'start' → logprob: -9.880988121032715
    9. '    ' → logprob: -10.255988121032715
    10. 'if' → logprob: -10.255988121032715

Token 175: ' �' (ID: 3348)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01005036011338234
    2. '#' → logprob: -5.635050296783447
    3. 'idx' → logprob: -6.260050296783447
    4. 'i' → logprob: -6.760050296783447
    5. 'usage' → logprob: -7.010050296783447
    6. ' for' → logprob: -7.385050296783447
    7. 'pass' → logprob: -7.510050296783447
    8. '<|end|>' → logprob: -7.885050296783447
    9. 'index' → logprob: -8.135050773620605
    10. 'count' → logprob: -8.760050773620605

Token 176: '�' (ID: 231)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004265044699423015
    2. ' for' → logprob: -8.250426292419434
    3. '
' → logprob: -9.875426292419434
    4. '#' → logprob: -10.375426292419434
    5. 'usage' → logprob: -11.000426292419434
    6. 'start' → logprob: -11.500426292419434
    7. 'range' → logprob: -11.750426292419434
    8. 'i' → logprob: -11.875426292419434
    9. 'while' → logprob: -12.000426292419434
    10. '<|end|>' → logprob: -12.250426292419434

Token 177: '�' (ID: 226)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012773671187460423
    2. ' for' → logprob: -4.637773513793945
    3. '#' → logprob: -6.512773513793945
    4. '<|end|>' → logprob: -8.012773513793945
    5. 'pass' → logprob: -8.512773513793945
    6. 'usage' → logprob: -8.762773513793945
    7. '
' → logprob: -8.887773513793945
    8. 'i' → logprob: -9.137773513793945
    9. 'while' → logprob: -9.637773513793945
    10. 'continue' → logprob: -9.887773513793945

Token 178: '道' (ID: 7615)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027115573175251484
    2. ' for' → logprob: -6.127711772918701
    3. '
' → logprob: -8.877711296081543
    4. 'i' → logprob: -9.627711296081543
    5. 'or' → logprob: -9.752711296081543
    6. 'usage' → logprob: -10.127711296081543
    7. 'r' → logprob: -10.502711296081543
    8. 'while' → logprob: -10.627711296081543
    9. 's' → logprob: -10.752711296081543
    10. '#' → logprob: -10.877711296081543

Token 179: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006112463306635618
    2. ' for' → logprob: -5.131112575531006
    3. 's' → logprob: -9.756112098693848
    4. '
' → logprob: -10.381112098693848
    5. '   ' → logprob: -10.631112098693848
    6. ',' → logprob: -11.506112098693848
    7. '<|end|>' → logprob: -11.756112098693848
    8. '[' → logprob: -12.131112098693848
    9. '#' → logprob: -12.381112098693848
    10. '	for' → logprob: -12.631112098693848

Token 180: ' は' (ID: 121587)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20947417616844177
    2. ' for' → logprob: -2.2094740867614746
    3. '=' → logprob: -3.0844740867614746
    4. ' =' → logprob: -3.8344740867614746
    5. 'を' → logprob: -5.834474086761475
    6. 'で' → logprob: -7.084474086761475
    7. ' usage' → logprob: -7.209474086761475
    8. 'の' → logprob: -7.209474086761475
    9. 'usage' → logprob: -7.584474086761475
    10. 'に' → logprob: -7.834474086761475

Token 181: '都市' (ID: 136453)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3578276038169861
    2. 'for' → logprob: -1.4828276634216309
    3. '0' → logprob: -3.357827663421631
    4. 'A' → logprob: -4.607827663421631
    5. '-' → logprob: -5.357827663421631
    6. 'end' → logprob: -5.482827663421631
    7. 'B' → logprob: -5.482827663421631
    8. 'i' → logprob: -5.857827663421631
    9. 'usage' → logprob: -5.857827663421631
    10. 'range' → logprob: -6.232827663421631

Token 182: ' i' (ID: 575)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.024798480793833733
    2. ' start' → logprob: -4.399798393249512
    3. '=start' → logprob: -5.149798393249512
    4. '[start' → logprob: -6.149798393249512
    5. 's' → logprob: -7.149798393249512
    6. 'for' → logprob: -7.274798393249512
    7. 'a' → logprob: -7.399798393249512
    8. 'A' → logprob: -8.024798393249512
    9. '_start' → logprob: -8.149798393249512
    10. '=' → logprob: -8.399798393249512

Token 183: ' と' (ID: 150026)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.34454345703125
    2. ',' → logprob: -1.96954345703125
    3. 'から' → logprob: -1.96954345703125
    4. '-' → logprob: -2.09454345703125
    5. '   ' → logprob: -2.59454345703125
    6. ' ' → logprob: -2.59454345703125
    7. ' to' → logprob: -3.21954345703125
    8. ' ,' → logprob: -3.34454345703125
    9. '+' → logprob: -3.84454345703125
    10. 'と' → logprob: -4.09454345703125

Token 184: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020592445798683912
    2. ' i' → logprob: -8.750205993652344
    3. '(i' → logprob: -10.125205993652344
    4. '
' → logprob: -12.875205993652344
    5. '   ' → logprob: -13.625205993652344
    6. '	i' → logprob: -13.625205993652344
    7. '
' → logprob: -14.625205993652344
    8. '(' → logprob: -14.625205993652344
    9. ' (' → logprob: -14.875205993652344
    10. '[i' → logprob: -15.625205993652344

Token 185: '+' (ID: 10)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1905537098646164
    2. '+' → logprob: -2.190553665161133
    3. ' i' → logprob: -2.815553665161133
    4. ' +' → logprob: -6.565553665161133
    5. ' ' → logprob: -8.940553665161133
    6. '+i' → logprob: -9.815553665161133
    7. '[i' → logprob: -10.065553665161133
    8. '	i' → logprob: -10.315553665161133
    9. '(i' → logprob: -11.190553665161133
    10. '<|end|>' → logprob: -11.190553665161133

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000918008794542402
    2. ' ' → logprob: -7.000917911529541
    3. 'i' → logprob: -12.1259183883667
    4. '１' → logprob: -14.3759183883667
    5. ' i' → logprob: -15.2509183883667
    6. '```' → logprob: -15.8759183883667
    7. '   ' → logprob: -16.750917434692383
    8. '  ' → logprob: -17.125917434692383
    9. '+' → logprob: -18.125917434692383
    10. '0' → logprob: -18.375917434692383

Token 187: ' を' (ID: 107105)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.060597013682127
    2. ' の' → logprob: -2.9355969429016113
    3. 'を' → logprob: -5.685596942901611
    4. ' を' → logprob: -7.060596942901611
    5. ' ' → logprob: -7.685596942901611
    6. '-' → logprob: -7.935596942901611
    7. '之间' → logprob: -8.93559741973877
    8. 'との' → logprob: -9.18559741973877
    9. '間' → logprob: -9.43559741973877
    10. 'に' → logprob: -9.56059741973877

Token 188: '結' (ID: 45115)
  Prédit: '結'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '結' → logprob: -0.8559874296188354
    2. 'connect' → logprob: -1.2309874296188354
    3. 'つ' → logprob: -1.8559874296188354
    4. '通' → logprob: -2.980987548828125
    5. '\xe7\xb9' → logprob: -3.855987548828125
    6. '
' → logprob: -3.855987548828125
    7. 'for' → logprob: -4.855987548828125
    8. '#' → logprob: -5.730987548828125
    9. 'connected' → logprob: -5.730987548828125
    10. 'また' → logprob: -5.855987548828125

Token 189: 'ぶ' (ID: 69284)
  Prédit: 'ぶ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ぶ' → logprob: -0.42962878942489624
    2. 'ん' → logprob: -1.054628849029541
    3. 'び' → logprob: -7.054628849029541
    4. 'ば' → logprob: -11.304628372192383
    5. 'b' → logprob: -11.804628372192383
    6. 'う' → logprob: -11.804628372192383
    7. '合' → logprob: -12.054628372192383
    8. 'ふ' → logprob: -12.679628372192383
    9. '```' → logprob: -12.929628372192383
    10. '1' → logprob: -12.929628372192383

Token 190: 'ため' (ID: 103912)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6822565197944641
    2. 'for' → logprob: -0.9322565197944641
    3. '<|end|>' → logprob: -2.9322564601898193
    4. ' for' → logprob: -3.4322564601898193
    5. ' i' → logprob: -6.057256698608398
    6. ';' → logprob: -6.057256698608398
    7. '
' → logprob: -6.432256698608398
    8. '\n' → logprob: -6.557256698608398
    9. '<|end|>' → logprob: -6.557256698608398
    10. ' ' → logprob: -7.057256698608398

Token 191: '、' (ID: 1395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008438454940915108
    2. ' for' → logprob: -5.008438587188721
    3. '   ' → logprob: -6.508438587188721
    4. 'i' → logprob: -9.008438110351562
    5. 'range' → logprob: -10.633438110351562
    6. ' ' → logprob: -10.883438110351562
    7. 'if' → logprob: -11.258438110351562
    8. '	for' → logprob: -11.258438110351562
    9. '  ' → logprob: -11.883438110351562
    10. '```' → logprob: -12.383438110351562

Token 192: 'start' (ID: 5236)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.082895273109898e-05
    2. '   ' → logprob: -11.125030517578125
    3. '
' → logprob: -11.625030517578125
    4. ' for' → logprob: -12.000030517578125
    5. '	for' → logprob: -15.125030517578125
    6. '
' → logprob: -15.500030517578125
    7. '    
' → logprob: -16.250030517578125
    8. '```' → logprob: -16.500030517578125
    9. 'usage' → logprob: -16.625030517578125
    10. '﻿' → logprob: -17.500030517578125

Token 193: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.32088929414749146
    2. ',' → logprob: -2.5708892345428467
    3. '+' → logprob: -2.9458892345428467
    4. '<=' → logprob: -3.0708892345428467
    5. '<|end|>' → logprob: -3.4458892345428467
    6. ' -' → logprob: -3.6958892345428467
    7. ' <=' → logprob: -4.945889472961426
    8. '...' → logprob: -5.070889472961426
    9. '<|end|>' → logprob: -5.445889472961426
    10. ';' → logprob: -5.445889472961426

Token 194: 'から' (ID: 27500)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.29049432277679443
    2. 'for' → logprob: -2.290494441986084
    3. '+=' → logprob: -2.915494441986084
    4. 'while' → logprob: -3.290494441986084
    5. ',' → logprob: -3.665494441986084
    6. ' <=' → logprob: -4.540494441986084
    7. '=' → logprob: -5.165494441986084
    8. '<' → logprob: -6.040494441986084
    9. ' +=' → logprob: -6.290494441986084
    10. '≤' → logprob: -6.415494441986084

Token 195: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.013419498689472675
    2. 'start' → logprob: -5.1384196281433105
    3. 'for' → logprob: -5.6384196281433105
    4. ' end' → logprob: -5.7634196281433105
    5. 'i' → logprob: -7.3884196281433105
    6. ' for' → logprob: -9.638419151306152
    7. 'range' → logprob: -10.763419151306152
    8. ' start' → logprob: -11.513419151306152
    9. ' i' → logprob: -11.888419151306152
    10. '   ' → logprob: -12.138419151306152

Token 196: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1286414861679077
    2. '
' → logprob: -1.7536414861679077
    3. '-' → logprob: -1.8786414861679077
    4. ',end' → logprob: -2.7536416053771973
    5. 'まで' → logprob: -3.1286416053771973
    6. '   ' → logprob: -3.1286416053771973
    7. 'for' → logprob: -3.2536416053771973
    8. '+' → logprob: -3.5036416053771973
    9. 'end' → logprob: -3.8786416053771973
    10. ' for' → logprob: -4.003641605377197

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020890454470645636
    2. ' ' → logprob: -8.500208854675293
    3. '```' → logprob: -12.875208854675293
    4. '   ' → logprob: -13.875208854675293
    5. '...' → logprob: -14.750208854675293
    6. 'for' → logprob: -14.750208854675293
    7. '`' → logprob: -15.375208854675293
    8. '+' → logprob: -15.625208854675293
    9. '2' → logprob: -15.750208854675293
    10. 'start' → logprob: -16.12520980834961

Token 198: ' ' (ID: 220)
  Prédit: 'まで'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'まで' → logprob: -0.02630714885890484
    2. 'for' → logprob: -4.401307106018066
    3. ' for' → logprob: -5.526307106018066
    4. '<|end|>' → logprob: -5.901307106018066
    5. '
' → logprob: -6.401307106018066
    6. ':' → logprob: -6.401307106018066
    7. '<|end|>' → logprob: -6.401307106018066
    8. 'の' → logprob: -7.901307106018066
    9. 'を' → logprob: -8.526307106018066
    10. ',' → logprob: -8.651307106018066

Token 199: 'まで' (ID: 54342)
  Prédit: 'まで'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'まで' → logprob: -0.11850414425134659
    2. 'for' → logprob: -2.368504047393799
    3. ' for' → logprob: -4.493504047393799
    4. ':' → logprob: -6.868504047393799
    5. 'の' → logprob: -6.868504047393799
    6. ' ' → logprob: -7.493504047393799
    7. '   ' → logprob: -7.618504047393799
    8. 'で' → logprob: -7.618504047393799
    9. 'を' → logprob: -7.743504047393799
    10. ' の' → logprob: -7.868504047393799

Token 200: 'の' (ID: 3385)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.300584614276886
    2. '   ' → logprob: -1.6755845546722412
    3. ' for' → logprob: -2.675584554672241
    4. ':' → logprob: -6.92558479309082
    5. '+' → logprob: -7.05058479309082
    6. '       ' → logprob: -8.05058479309082
    7. '  ' → logprob: -8.05058479309082
    8. 'in' → logprob: -8.55058479309082
    9. 'の' → logprob: -8.55058479309082
    10. '    ' → logprob: -8.67558479309082

Token 201: '鉄' (ID: 147752)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003382038848940283
    2. ' for' → logprob: -8.250338554382324
    3. 'range' → logprob: -9.625338554382324
    4. 'i' → logprob: -11.875338554382324
    5. '
' → logprob: -13.875338554382324
    6. 'usage' → logprob: -14.000338554382324
    7. ' range' → logprob: -14.500338554382324
    8. '	for' → logprob: -14.625338554382324
    9. '```' → logprob: -15.125338554382324
    10. '   ' → logprob: -15.375338554382324

Token 202: '道' (ID: 7615)
  Prédit: '道'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '道' → logprob: -0.4417501389980316
    2. 'for' → logprob: -1.316750168800354
    3. '   ' → logprob: -2.8167500495910645
    4. '路' → logprob: -4.5667500495910645
    5. ' for' → logprob: -5.0667500495910645
    6. 'の' → logprob: -5.5667500495910645
    7. ' \xe9\x81' → logprob: -6.0667500495910645
    8. 'i' → logprob: -6.6917500495910645
    9. ' ' → logprob: -6.8167500495910645
    10. 'road' → logprob: -7.3167500495910645

Token 203: 'を' (ID: 7277)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43728041648864746
    2. ' for' → logprob: -1.0622804164886475
    3. '   ' → logprob: -4.812280654907227
    4. '	for' → logprob: -8.562280654907227
    5. '    ' → logprob: -10.312280654907227
    6. 'i' → logprob: -10.312280654907227
    7. ' ' → logprob: -10.312280654907227
    8. ' usage' → logprob: -10.562280654907227
    9. '  ' → logprob: -10.687280654907227
    10. 'の' → logprob: -11.437280654907227

Token 204: '通' (ID: 9034)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00044532763422466815
    2. ' for' → logprob: -7.750445365905762
    3. '   ' → logprob: -12.125445365905762
    4. '
' → logprob: -12.750445365905762
    5. 'usage' → logprob: -13.250445365905762
    6. '```' → logprob: -13.250445365905762
    7. ' ' → logprob: -14.625445365905762
    8. 'range' → logprob: -14.625445365905762
    9. '	for' → logprob: -15.000445365905762
    10. 'used' → logprob: -15.375445365905762

Token 205: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.147079735994339
    2. '   ' → logprob: -3.1470797061920166
    3. 'す' → logprob: -3.2720797061920166
    4. 'for' → logprob: -3.5220797061920166
    5. '過' → logprob: -4.647079944610596
    6. 'って' → logprob: -4.897079944610596
    7. 'ります' → logprob: -5.897079944610596
    8. 'して' → logprob: -6.272079944610596
    9. 'り' → logprob: -6.522079944610596
    10. '       ' → logprob: -7.022079944610596

Token 206: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09371764957904816
    2. '   ' → logprob: -2.843717575073242
    3. ' for' → logprob: -3.468717575073242
    4. '	for' → logprob: -9.718717575073242
    5. ' ' → logprob: -11.593717575073242
    6. '  ' → logprob: -11.843717575073242
    7. '
' → logprob: -11.968717575073242
    8. '```' → logprob: -12.593717575073242
    9. '    
' → logprob: -12.718717575073242
    10. '    ' → logprob: -13.218717575073242

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4751124083995819
    2. 'for' → logprob: -0.9751124382019043
    3. ' for' → logprob: -7.100112438201904
    4. '	for' → logprob: -8.600111961364746
    5. '```' → logprob: -11.475111961364746
    6. '    
' → logprob: -11.725111961364746
    7. '
' → logprob: -13.100111961364746
    8. ' ' → logprob: -13.975111961364746
    9. '  ' → logprob: -13.975111961364746
    10. '       ' → logprob: -14.100111961364746

Token 208: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00021140782337170094
    2. '   ' → logprob: -8.500211715698242
    3. ' for' → logprob: -11.875211715698242
    4. '	for' → logprob: -14.875211715698242
    5. '
' → logprob: -15.625211715698242
    6. '```' → logprob: -15.750211715698242
    7. '    
' → logprob: -16.000211715698242
    8. ' ' → logprob: -17.750211715698242
    9. '  ' → logprob: -17.750211715698242
    10. 'usage' → logprob: -18.125211715698242

Token 209: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2837161123752594
    2. 'k' → logprob: -1.408716082572937
    3. ' i' → logprob: -6.158716201782227
    4. ' k' → logprob: -7.783716201782227
    5. 'x' → logprob: -10.533716201782227
    6. 'idx' → logprob: -13.783716201782227
    7. '   ' → logprob: -14.158716201782227
    8. ' ' → logprob: -14.408716201782227
    9. '_i' → logprob: -14.408716201782227
    10. '	i' → logprob: -14.533716201782227

Token 210: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04317297413945198
    2. 'in' → logprob: -3.16817307472229
    3. 'range' → logprob: -9.293172836303711
    4. ' ' → logprob: -9.668172836303711
    5. ' range' → logprob: -12.293172836303711
    6. '  ' → logprob: -12.543172836303711
    7. '	in' → logprob: -12.793172836303711
    8. '   ' → logprob: -13.043172836303711
    9. '　' → logprob: -13.668172836303711
    10. 'n' → logprob: -14.043172836303711

Token 211: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033581978641450405
    2. ' range' → logprob: -8.000335693359375
    3. '	range' → logprob: -16.500335693359375
    4. '(range' → logprob: -16.625335693359375
    5. '   ' → logprob: -16.750335693359375
    6. ' ' → logprob: -17.125335693359375
    7. '  ' → logprob: -18.250335693359375
    8. 'rang' → logprob: -19.750335693359375
    9. 'ra' → logprob: -19.750335693359375
    10. 'r' → logprob: -19.875335693359375

Token 212: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -4.811348480870947e-05
    2. 'start' → logprob: -10.00004768371582
    3. '(' → logprob: -13.25004768371582
    4. ' start' → logprob: -14.37504768371582
    5. '	start' → logprob: -16.25004768371582
    6. ' (' → logprob: -16.37504768371582
    7. '[start' → logprob: -17.12504768371582
    8. '=start' → logprob: -17.37504768371582
    9. '((' → logprob: -18.87504768371582
    10. ',start' → logprob: -19.00004768371582

Token 213: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050860676914453506
    2. ' ,' → logprob: -3.550860643386841
    3. '-' → logprob: -4.42586088180542
    4. ',end' → logprob: -4.92586088180542
    5. ' -' → logprob: -6.42586088180542
    6. '   ' → logprob: -11.175860404968262
    7. ' ' → logprob: -11.300860404968262
    8. '+' → logprob: -12.425860404968262
    9. ' end' → logprob: -12.425860404968262
    10. '[end' → logprob: -12.550860404968262

Token 214: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '１' → logprob: -17.375179290771484
    4. 'start' → logprob: -17.500179290771484
    5. ',' → logprob: -17.750179290771484
    6. '```' → logprob: -18.687679290771484
    7. '   ' → logprob: -18.750179290771484
    8. 'to' → logprob: -18.750179290771484
    9. '<|end|>' → logprob: -18.937679290771484
    10. '2' → logprob: -19.125179290771484

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '１' → logprob: -17.00007438659668
    4. 'end' → logprob: -19.37507438659668
    5. 'start' → logprob: -19.62507438659668
    6. '2' → logprob: -19.87507438659668
    7. '   ' → logprob: -20.87507438659668
    8. '0' → logprob: -20.87507438659668
    9. '۱' → logprob: -21.43757438659668
    10. '১' → logprob: -21.56257438659668

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024814847856760025
    2. ',end' → logprob: -6.252481460571289
    3. ' ,' → logprob: -7.502481460571289
    4. 'end' → logprob: -14.627481460571289
    5. ',
' → logprob: -14.752481460571289
    6. '(end' → logprob: -16.37748146057129
    7. ' end' → logprob: -17.12748146057129
    8. '[end' → logprob: -17.25248146057129
    9. ' ' → logprob: -17.50248146057129
    10. '=end' → logprob: -17.75248146057129

Token 217: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.018150178715586662
    2. ' end' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.143150329589844
    4. '(end' → logprob: -16.268150329589844
    5. '	end' → logprob: -17.518150329589844
    6. '[end' → logprob: -18.018150329589844
    7. ' ' → logprob: -18.768150329589844
    8. '
' → logprob: -19.018150329589844
    9. ':end' → logprob: -19.018150329589844
    10. '=end' → logprob: -19.518150329589844

Token 218: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6328123211860657
    2. ' -' → logprob: -0.7578123211860657
    3. ')' → logprob: -8.8828125
    4. '   ' → logprob: -10.5078125
    5. '1' → logprob: -10.8828125
    6. ' ' → logprob: -11.6328125
    7. '<|end|>' → logprob: -12.0078125
    8. '):
' → logprob: -12.6328125
    9. '):' → logprob: -13.0078125
    10. '```' → logprob: -13.5078125

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -15.500015258789062
    4. '-' → logprob: -16.250015258789062
    5. '１' → logprob: -16.625015258789062
    6. '   ' → logprob: -17.125015258789062
    7. '0' → logprob: -17.125015258789062
    8. '2' → logprob: -17.250015258789062
    9. '<|end|>' → logprob: -18.125015258789062
    10. ')' → logprob: -18.437515258789062

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '１' → logprob: -16.375009536743164
    4. '```' → logprob: -16.750009536743164
    5. '0' → logprob: -17.500009536743164
    6. '2' → logprob: -17.750009536743164
    7. '-' → logprob: -17.812509536743164
    8. '   ' → logprob: -17.937509536743164
    9. '۱' → logprob: -18.937509536743164
    10. '
' → logprob: -18.937509536743164

Token 221: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23075897991657257
    2. '):
' → logprob: -1.6057590246200562
    3. '+' → logprob: -5.355759143829346
    4. '   ' → logprob: -7.980759143829346
    5. ':' → logprob: -9.230758666992188
    6. '):
' → logprob: -9.355758666992188
    7. ')' → logprob: -10.730758666992188
    8. ' ):' → logprob: -10.730758666992188
    9. ' ):
' → logprob: -11.730758666992188
    10. ']:' → logprob: -11.730758666992188

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49004775285720825
    2. 'usage' → logprob: -0.9900477528572083
    3. '   ' → logprob: -4.240047931671143
    4. ' usage' → logprob: -6.615047931671143
    5. '        
' → logprob: -10.490047454833984
    6. '```' → logprob: -10.615047454833984
    7. '           ' → logprob: -11.365047454833984
    8. '    
' → logprob: -11.615047454833984
    9. '_usage' → logprob: -12.365047454833984
    10. '     ' → logprob: -12.615047454833984

Token 223: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' (adapté à ' usage') → logprob: -3.404745439183898e-05
    2. ' usage' → logprob: -10.75003433227539
    3. '   ' → logprob: -11.62503433227539
    4. '       ' → logprob: -13.00003433227539
    5. '
' → logprob: -13.62503433227539
    6. '           ' → logprob: -16.50003433227539
    7. '```' → logprob: -17.75003433227539
    8. '        
' → logprob: -18.25003433227539
    9. '    
' → logprob: -18.62503433227539
    10. ' ' → logprob: -18.75003433227539

Token 224: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2246291337069124e-05
    2. '[' → logprob: -10.750021934509277
    3. ' [' → logprob: -14.375021934509277
    4. '```' → logprob: -16.500022888183594
    5. 'i' → logprob: -16.875022888183594
    6. '[I' → logprob: -17.250022888183594
    7. '[++' → logprob: -18.250022888183594
    8. '[j' → logprob: -18.375022888183594
    9. '[u' → logprob: -18.375022888183594
    10. '[s' → logprob: -18.375022888183594

Token 225: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04879061132669449
    2. ' +=' → logprob: -3.048790693283081
    3. ']+=' → logprob: -8.67379093170166
    4. '+' → logprob: -10.42379093170166
    5. '=' → logprob: -13.79879093170166
    6. ')' → logprob: -13.79879093170166
    7. ']' → logprob: -15.54879093170166
    8. '   ' → logprob: -16.298789978027344
    9. '+='' → logprob: -16.423789978027344
    10. '+=(' → logprob: -16.673789978027344

Token 226: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0015090317465364933
    2. ' +=' → logprob: -6.501509189605713
    3. ']+=' → logprob: -12.251508712768555
    4. '=' → logprob: -13.376508712768555
    5. '+' → logprob: -15.251508712768555
    6. '+='' → logprob: -16.501508712768555
    7. '+=(' → logprob: -17.376508712768555
    8. '+="' → logprob: -17.501508712768555
    9. ' ' → logprob: -18.501508712768555
    10. ' ' → logprob: -18.626508712768555

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.125001907348633
    4. '１' → logprob: -19.375001907348633
    5. '2' → logprob: -20.250001907348633
    6. '۱' → logprob: -21.000001907348633
    7. '100' → logprob: -21.125001907348633
    8. '
' → logprob: -21.250001907348633
    9. '```' → logprob: -21.312501907348633
    10. '10' → logprob: -21.437501907348633

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.000000953674316
    3. '2' → logprob: -16.125
    4. '100' → logprob: -16.25
    5. '10' → logprob: -16.75
    6. '   ' → logprob: -18.5
    7. '１' → logprob: -18.75
    8. '3' → logprob: -19.375
    9. '+' → logprob: -20.4375
    10. '```' → logprob: -20.5

Token 229: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8043254613876343
    2. 'answer' → logprob: -1.5543254613876343
    3. 'total' → logprob: -2.054325580596924
    4. 'dp' → logprob: -2.929325580596924
    5. 'result' → logprob: -3.179325580596924
    6. 'ans' → logprob: -3.304325580596924
    7. 'res' → logprob: -3.679325580596924
    8. 'Q' → logprob: -4.179325580596924
    9. 'cost' → logprob: -4.179325580596924
    10. 'for' → logprob: -5.054325580596924

Token 231: ' 合' (ID: 53411)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1574251651763916
    2. 'answer' → logprob: -1.6574251651763916
    3. 'total' → logprob: -1.9074251651763916
    4. 'ans' → logprob: -2.1574251651763916
    5. 'cost' → logprob: -2.5324251651763916
    6. 'result' → logprob: -2.6574251651763916
    7. 'dp' → logprob: -3.1574251651763916
    8. 'res' → logprob: -4.0324249267578125
    9. 'min' → logprob: -5.0324249267578125
    10. 'score' → logprob: -5.7824249267578125

Token 232: '計' (ID: 37662)
  Prédit: '計'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '計' → logprob: -0.004313803277909756
    2. 'total' → logprob: -7.379313945770264
    3. 'cost' → logprob: -7.754313945770264
    4. '成' → logprob: -7.879313945770264
    5. '算' → logprob: -7.879313945770264
    6. '理' → logprob: -7.879313945770264
    7. '最' → logprob: -8.254313468933105
    8. 'for' → logprob: -9.129313468933105
    9. '计' → logprob: -9.379313468933105
    10. '0' → logprob: -9.379313468933105

Token 233: 'コ' (ID: 12504)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.043317049741744995
    2. 'total' → logprob: -3.7933170795440674
    3. 'sum' → logprob: -4.668316841125488
    4. 'score' → logprob: -5.668316841125488
    5. 'ans' → logprob: -5.793316841125488
    6. '_cost' → logprob: -6.168316841125488
    7. 'result' → logprob: -7.418316841125488
    8. 'answer' → logprob: -7.793316841125488
    9. '=' → logprob: -7.918316841125488
    10. ' =' → logprob: -8.543316841125488

Token 234: 'スト' (ID: 38236)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06256727874279022
    2. 'す' → logprob: -3.4375672340393066
    3. 'ス' → logprob: -4.312567234039307
    4. 'st' → logprob: -5.562567234039307
    5. '   ' → logprob: -5.687567234039307
    6. '#' → logprob: -6.062567234039307
    7. '```' → logprob: -6.687567234039307
    8. '    ' → logprob: -7.437567234039307
    9. '       ' → logprob: -7.812567234039307
    10. 'sts' → logprob: -7.812567234039307

Token 235: 'を' (ID: 7277)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.25301671028137207
    2. 'cost' → logprob: -1.503016710281372
    3. '
' → logprob: -7.253016471862793
    4. 'answer' → logprob: -8.878016471862793
    5. 'ans' → logprob: -9.253016471862793
    6. 'sum' → logprob: -10.128016471862793
    7. '=' → logprob: -10.378016471862793
    8. ' =' → logprob: -10.753016471862793
    9. 'result' → logprob: -11.003016471862793
    10. ' total' → logprob: -11.128016471862793

Token 236: '計' (ID: 37662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25213921070098877
    2. 'sum' → logprob: -1.5021392107009888
    3. 'C' → logprob: -8.8771390914917
    4. ' ' → logprob: -10.7521390914917
    5. ' sum' → logprob: -11.0021390914917
    6. 'max' → logprob: -11.7521390914917
    7. '(sum' → logprob: -12.5021390914917
    8. '1' → logprob: -12.8771390914917
    9. 'min' → logprob: -12.8771390914917
    10. 'calc' → logprob: -13.0021390914917

Token 237: '算' (ID: 16727)
  Prédit: '算'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '算' → logprob: -0.0389024019241333
    2. 'l' → logprob: -4.538902282714844
    3. 'for' → logprob: -5.413902282714844
    4. '計' → logprob: -5.538902282714844
    5. 'm' → logprob: -6.038902282714844
    6. 'sum' → logprob: -6.163902282714844
    7. 'al' → logprob: -6.663902282714844
    8. 'total' → logprob: -6.788902282714844
    9. 'alculate' → logprob: -6.913902282714844
    10. 'pute' → logprob: -7.038902282714844

Token 238: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.027271945029497147
    2. 'cost' → logprob: -3.7772719860076904
    3. 'ans' → logprob: -5.777271747589111
    4. 'answer' → logprob: -7.152271747589111
    5. '
' → logprob: -9.40227222442627
    6. 'result' → logprob: -10.02727222442627
    7. 'sum' → logprob: -12.40227222442627
    8. 'res' → logprob: -12.77727222442627
    9. '```' → logprob: -13.65227222442627
    10. ' total' → logprob: -13.65227222442627

Token 239: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.040494006127119064
    2. 'cost' → logprob: -3.290493965148926
    3. 'ans' → logprob: -6.290493965148926
    4. 'answer' → logprob: -7.540493965148926
    5. 'result' → logprob: -9.790493965148926
    6. 'res' → logprob: -12.415493965148926
    7. ' total' → logprob: -13.665493965148926
    8. 'sum' → logprob: -14.040493965148926
    9. 'tot' → logprob: -14.165493965148926
    10. '```' → logprob: -14.415493965148926

Token 240: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.01767829805612564
    2. '_' → logprob: -4.142678260803223
    3. ' =' → logprob: -6.642678260803223
    4. '=' → logprob: -8.392678260803223
    5. '_usage' → logprob: -9.517678260803223
    6. 'cost' → logprob: -11.517678260803223
    7. ' _' → logprob: -12.142678260803223
    8. '_co' → logprob: -12.267678260803223
    9. 'Cost' → logprob: -12.517678260803223
    10. '_C' → logprob: -12.892678260803223

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193288922309875
    2. '=' → logprob: -1.5019328594207764
    3. ' ' → logprob: -13.001933097839355
    4. '＝' → logprob: -14.876933097839355
    5. ',' → logprob: -15.251933097839355
    6. ' +=' → logprob: -15.376933097839355
    7. '=sum' → logprob: -15.501933097839355
    8. ')' → logprob: -16.00193214416504
    9. ' =
' → logprob: -16.12693214416504
    10. ' =[' → logprob: -16.37693214416504

Token 242: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009394664317369461
    2. 'sum' → logprob: -4.759394645690918
    3. ' ' → logprob: -7.634394645690918
    4. ' sum' → logprob: -8.134394645690918
    5. '   ' → logprob: -13.259394645690918
    6. 's' → logprob: -15.196894645690918
    7. '	sum' → logprob: -15.446894645690918
    8. '(sum' → logprob: -15.884394645690918
    9. '  ' → logprob: -16.071895599365234
    10. ' ' → logprob: -16.634395599365234

Token 243: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011802274966612458
    2. 'sum' → logprob: -6.751180171966553
    3. ' ' → logprob: -11.626180648803711
    4. ' sum' → logprob: -14.876180648803711
    5. '[' → logprob: -15.626180648803711
    6. 's' → logprob: -16.00118064880371
    7. '   ' → logprob: -16.25118064880371
    8. '(sum' → logprob: -17.43868064880371
    9. '1' → logprob: -17.56368064880371
    10. '```' → logprob: -17.75118064880371

Token 244: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31479594111442566
    2. '
' → logprob: -1.314795970916748
    3. ' for' → logprob: -6.939795970916748
    4. '<|end|>' → logprob: -7.689795970916748
    5. '\n' → logprob: -10.31479549407959
    6. '+
' → logprob: -11.06479549407959
    7. '+' → logprob: -11.31479549407959
    8. '
' → logprob: -11.43979549407959
    9. '' → logprob: -12.18979549407959
    10. '

' → logprob: -12.31479549407959

Token 245: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013796406565234065
    2. '
' → logprob: -6.626379489898682
    3. ' for' → logprob: -9.87637996673584
    4. '<|end|>' → logprob: -13.12637996673584
    5. '\n' → logprob: -16.626379013061523
    6. '	for' → logprob: -17.001379013061523
    7. '
' → logprob: -17.001379013061523
    8. '```' → logprob: -17.251379013061523
    9. 'f' → logprob: -17.876379013061523
    10. '<|end|>' → logprob: -18.001379013061523

Token 246: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00671809446066618
    2. ' i' → logprob: -5.006718158721924
    3. '	i' → logprob: -13.131717681884766
    4. ' ' → logprob: -15.131717681884766
    5. '_i' → logprob: -15.256717681884766
    6. 'k' → logprob: -16.381717681884766
    7. '   ' → logprob: -16.756717681884766
    8. '(i' → logprob: -17.256717681884766
    9. 'j' → logprob: -17.631717681884766
    10. '```' → logprob: -18.006717681884766

Token 247: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01838802359998226
    2. 'in' → logprob: -4.018387794494629
    3. ' ' → logprob: -8.393387794494629
    4. ',' → logprob: -12.018387794494629
    5. '	in' → logprob: -13.268387794494629
    6. ' ,' → logprob: -14.018387794494629
    7. '  ' → logprob: -14.268387794494629
    8. 'range' → logprob: -14.518387794494629
    9. 'In' → logprob: -15.393387794494629
    10. '   ' → logprob: -15.393387794494629

Token 248: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -17.875553131103516
    4. '	range' → logprob: -18.500553131103516
    5. ' ' → logprob: -19.875553131103516
    6. '   ' → logprob: -21.125553131103516
    7. '.range' → logprob: -21.250553131103516
    8. '  ' → logprob: -21.750553131103516
    9. ')' → logprob: -22.500553131103516
    10. 'rang' → logprob: -22.625553131103516

Token 249: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007657911046408117
    2. '(len' → logprob: -7.500765800476074
    3. '(' → logprob: -9.000765800476074
    4. 'N' → logprob: -10.250765800476074
    5. ' (' → logprob: -10.250765800476074
    6. 'len' → logprob: -11.125765800476074
    7. ' N' → logprob: -13.250765800476074
    8. '(n' → logprob: -14.125765800476074
    9. '   ' → logprob: -14.250765800476074
    10. '((' → logprob: -15.250765800476074

Token 250: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38693127036094666
    2. '-' → logprob: -1.136931300163269
    3. ')' → logprob: -10.386931419372559
    4. '1' → logprob: -11.011931419372559
    5. '   ' → logprob: -12.511931419372559
    6. ' ' → logprob: -13.011931419372559
    7. '
' → logprob: -13.386931419372559
    8. '-
' → logprob: -13.636931419372559
    9. ' -
' → logprob: -13.886931419372559
    10. '):
' → logprob: -14.511931419372559

Token 251: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '-' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.625003814697266
    4. '```' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '１' → logprob: -17.875003814697266
    7. '2' → logprob: -18.625003814697266
    8. '१' → logprob: -19.562503814697266
    9. '
' → logprob: -19.625003814697266
    10. ')' → logprob: -19.875003814697266

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.746380237629637e-05
    2. '-' → logprob: -9.250097274780273
    3. ' ' → logprob: -13.875097274780273
    4. '```' → logprob: -15.875097274780273
    5. '   ' → logprob: -16.000097274780273
    6. '2' → logprob: -16.375097274780273
    7. '１' → logprob: -17.750097274780273
    8. ' -' → logprob: -18.250097274780273
    9. ')' → logprob: -18.312597274780273
    10. '
' → logprob: -18.500097274780273

Token 253: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06343339383602142
    2. '):
' → logprob: -2.8134334087371826
    3. ':' → logprob: -6.6884331703186035
    4. '):
' → logprob: -9.188433647155762
    5. ')' → logprob: -9.438433647155762
    6. '   ' → logprob: -11.063433647155762
    7. ':
' → logprob: -11.563433647155762
    8. ' ):' → logprob: -11.688433647155762
    9. '):

' → logprob: -13.813433647155762
    10. ' ' → logprob: -14.188433647155762

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10802612453699112
    2. 'total' → logprob: -2.3580260276794434
    3. ' total' → logprob: -4.858026027679443
    4. 'if' → logprob: -11.858026504516602
    5. '	total' → logprob: -11.858026504516602
    6. ' ' → logprob: -12.733026504516602
    7. ' if' → logprob: -13.108026504516602
    8. '       ' → logprob: -14.108026504516602
    9. '  ' → logprob: -14.108026504516602
    10. ',total' → logprob: -14.358026504516602

Token 255: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0010081578511744738
    2. '   ' → logprob: -7.501008033752441
    3. ' total' → logprob: -7.751008033752441
    4. 'if' (adapté à ' if') → logprob: -11.251008033752441
    5. 'cost' → logprob: -11.501008033752441
    6. '+' → logprob: -14.126008033752441
    7. '	total' → logprob: -14.751008033752441
    8. ' if' → logprob: -16.376008987426758
    9. '```' → logprob: -16.376008987426758
    10. '
' → logprob: -16.626008987426758

Token 256: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.20271645486354828
    2. ' usage' → logprob: -1.7027164697647095
    3. 'C' → logprob: -7.45271635055542
    4. ' C' → logprob: -7.95271635055542
    5. '   ' → logprob: -8.827716827392578
    6. 'A' → logprob: -9.452716827392578
    7. 'B' → logprob: -9.577716827392578
    8. ' A' → logprob: -10.952716827392578
    9. ' B' → logprob: -10.952716827392578
    10. ' ' → logprob: -11.702716827392578

Token 257: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. ' [' → logprob: -17.0
    4. 'i' → logprob: -18.0
    5. '```' → logprob: -18.125
    6. '[I' → logprob: -18.875
    7. '\[' → logprob: -20.5
    8. '[
' → logprob: -21.0
    9. '>' → logprob: -21.125
    10. '[j' → logprob: -21.25

Token 258: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15938541293144226
    2. ' >' → logprob: -2.0343854427337646
    3. ']' → logprob: -4.2843852043151855
    4. ']>' → logprob: -5.9093852043151855
    5. ']:' → logprob: -11.159385681152344
    6. ')' → logprob: -11.409385681152344
    7. ']==' → logprob: -11.409385681152344
    8. ':' → logprob: -11.659385681152344
    9. ')>' → logprob: -11.909385681152344
    10. '==' → logprob: -12.534385681152344

Token 259: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.020939702168107033
    2. ' >' → logprob: -3.895939588546753
    3. ':' → logprob: -8.520939826965332
    4. '==' → logprob: -8.895939826965332
    5. '!=' → logprob: -10.520939826965332
    6. ' ==' → logprob: -11.270939826965332
    7. '%' → logprob: -11.895939826965332
    8. '>=' → logprob: -12.020939826965332
    9. '>:' → logprob: -12.645939826965332
    10. ' !=' → logprob: -12.895939826965332

Token 260: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014370457269251347
    2. ' ' → logprob: -4.514370441436768
    3. '1' → logprob: -5.764370441436768
    4. '2' → logprob: -9.764370918273926
    5. 'C' → logprob: -9.889370918273926
    6. ' C' → logprob: -11.264370918273926
    7. 'N' → logprob: -11.389370918273926
    8. 'M' → logprob: -11.889370918273926
    9. '>' → logprob: -12.076870918273926
    10. '3' → logprob: -12.201870918273926

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026066064834594727
    2. '1' → logprob: -4.151065826416016
    3. '2' → logprob: -5.026065826416016
    4. 'C' → logprob: -6.151065826416016
    5. ' ' → logprob: -6.776065826416016
    6. '3' → logprob: -10.151065826416016
    7. 'max' → logprob: -10.526065826416016
    8. ' C' → logprob: -10.651065826416016
    9. '100' → logprob: -11.276065826416016
    10. 'B' → logprob: -11.776065826416016

Token 262: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037055390421301126
    2. ':
' → logprob: -6.0037055015563965
    3. '   ' → logprob: -7.2537055015563965
    4. '	continue' → logprob: -8.753705978393555
    5. ' continue' → logprob: -9.003705978393555
    6. '       ' → logprob: -9.128705978393555
    7. 'continue' → logprob: -9.503705978393555
    8. ' or' → logprob: -10.253705978393555
    9. ' continues' → logprob: -11.878705978393555
    10. ' :' → logprob: -12.128705978393555

Token 263: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08226753026247025
    2. 'continue' → logprob: -2.7072675228118896
    3. ' continue' → logprob: -4.832267761230469
    4. '       ' → logprob: -5.582267761230469
    5. '	continue' → logprob: -8.332267761230469
    6. 'total' → logprob: -8.457267761230469
    7. ' total' → logprob: -10.332267761230469
    8. '```' → logprob: -10.582267761230469
    9. '_continue' → logprob: -12.957267761230469
    10. '   ' → logprob: -13.582267761230469

Token 264: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.08280417323112488
    2. '   ' → logprob: -2.7078042030334473
    3. 'total' → logprob: -4.707804203033447
    4. ' continue' → logprob: -5.707804203033447
    5. 'print' → logprob: -8.832803726196289
    6. '	continue' → logprob: -9.207803726196289
    7. '       ' → logprob: -9.332803726196289
    8. ' total' → logprob: -10.457803726196289
    9. 'cost' → logprob: -10.957803726196289
    10. 'continu' → logprob: -11.082803726196289

Token 265: ' 通' (ID: 52461)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.35088682174682617
    2. 'total' → logprob: -1.2258868217468262
    3. '   ' → logprob: -6.725886821746826
    4. ' continue' → logprob: -7.350886821746826
    5. 'print' → logprob: -8.725887298583984
    6. 'cost' → logprob: -8.975887298583984
    7. ' total' → logprob: -9.225887298583984
    8. 'continu' → logprob: -9.600887298583984
    9. 'pass' → logprob: -9.725887298583984
    10. '0' → logprob: -11.350887298583984

Token 266: 'ら' (ID: 8870)
  Prédit: 'ら'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ら' → logprob: -0.010099096223711967
    2. 'る' → logprob: -5.260098934173584
    3. 'さ' → logprob: -6.385098934173584
    4. 'り' → logprob: -7.385098934173584
    5. '行' → logprob: -7.635098934173584
    6. '過' → logprob: -7.635098934173584
    7. 'って' → logprob: -8.135099411010742
    8. 'った' → logprob: -8.385099411010742
    9. 'し' → logprob: -8.635099411010742
    10. '```' → logprob: -8.885099411010742

Token 267: 'ない' (ID: 47592)
  Prédit: 'ない'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ない' → logprob: -0.11933086812496185
    2. 'な' → logprob: -2.244330883026123
    3. 'なく' → logprob: -5.244330883026123
    4. 'ず' → logprob: -7.369330883026123
    5. 'n' → logprob: -9.244330406188965
    6. ' ' → logprob: -9.494330406188965
    7. '```' → logprob: -9.619330406188965
    8. '#' → logprob: -9.744330406188965
    9. 'れ' → logprob: -10.119330406188965
    10. '   ' → logprob: -10.494330406188965

Token 268: '路' (ID: 14385)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.01290866732597351
    2. ' continue' → logprob: -5.012908458709717
    3. '   ' → logprob: -5.512908458709717
    4. '	continue' → logprob: -7.262908458709717
    5. 'cost' → logprob: -8.137908935546875
    6. 'コ' → logprob: -8.637908935546875
    7. 'print' → logprob: -9.387908935546875
    8. '鉄' → logprob: -9.387908935546875
    9. 'contin' → logprob: -9.512908935546875
    10. ',' → logprob: -9.512908935546875

Token 269: '線' (ID: 29948)
  Prédit: '線'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '線' → logprob: -7.719917630311102e-05
    2. '面' → logprob: -9.750077247619629
    3. '#' → logprob: -12.000077247619629
    4. '程' → logprob: -12.750077247619629
    5. '```' → logprob: -13.125077247619629
    6. 'は' → logprob: -13.625077247619629
    7. '径' → logprob: -13.875077247619629
    8. 'i' → logprob: -14.000077247619629
    9. '
' → logprob: -14.875077247619629
    10. 'm' → logprob: -15.000077247619629

Token 270: 'は' (ID: 5205)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04082582890987396
    2. '       ' → logprob: -3.915825843811035
    3. 'continue' → logprob: -4.290825843811035
    4. ' continue' → logprob: -5.540825843811035
    5. '	continue' → logprob: -6.665825843811035
    6. ':' → logprob: -7.040825843811035
    7. ',' → logprob: -9.040825843811035
    8. '続きを' → logprob: -10.540825843811035
    9. 'の' → logprob: -10.665825843811035
    10. 'を' → logprob: -10.665825843811035

Token 271: '料金' (ID: 137048)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.03645261749625206
    2. 'total' → logprob: -3.536452531814575
    3. ' continue' → logprob: -5.661452770233154
    4. '0' → logprob: -6.161452770233154
    5. 'pass' → logprob: -7.786452770233154
    6. '   ' → logprob: -8.536452293395996
    7. 'print' → logprob: -8.911452293395996
    8. ' total' → logprob: -9.161452293395996
    9. 'continu' → logprob: -10.036452293395996
    10. 'contin' → logprob: -10.911452293395996

Token 272: 'が' (ID: 6632)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.718609094619751
    2. '=' → logprob: -0.718609094619751
    3. ' =' → logprob: -5.468608856201172
    4. 'なし' → logprob: -5.468608856201172
    5. '無料' → logprob: -5.468608856201172
    6. 'を' → logprob: -5.843608856201172
    7. '   ' → logprob: -6.093608856201172
    8. 'A' → logprob: -6.593608856201172
    9. 'C' → logprob: -6.593608856201172
    10. '+=' → logprob: -6.718608856201172

Token 273: 'か' (ID: 7128)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03188592195510864
    2. 'C' → logprob: -3.906885862350464
    3. 'A' → logprob: -4.781886100769043
    4. '無料' → logprob: -7.531886100769043
    5. '100' → logprob: -7.656886100769043
    6. '変' → logprob: -7.781886100769043
    7. '1' → logprob: -8.531886100769043
    8. '-' → logprob: -8.656886100769043
    9. 'B' → logprob: -8.781886100769043
    10. '500' → logprob: -9.156886100769043

Token 274: 'から' (ID: 27500)
  Prédit: 'から'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'から' → logprob: -0.31536343693733215
    2. 'ら' → logprob: -1.9403634071350098
    3. 'か' → logprob: -2.0653634071350098
    4. '0' → logprob: -10.815363883972168
    5. 'り' → logprob: -11.690363883972168
    6. 'る' → logprob: -12.190363883972168
    7. 'わ' → logprob: -12.440363883972168
    8. 'さ' → logprob: -12.815363883972168
    9. '```' → logprob: -12.815363883972168
    10. '#' → logprob: -13.315363883972168

Token 275: 'ない' (ID: 47592)
  Prédit: 'ない'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ない' → logprob: -0.06371227651834488
    2. 'ら' → logprob: -2.8137123584747314
    3. 'な' → logprob: -6.563712120056152
    4. 'り' → logprob: -9.438712120056152
    5. ' ' → logprob: -9.688712120056152
    6. 'ず' → logprob: -9.813712120056152
    7. '0' → logprob: -10.438712120056152
    8. '1' → logprob: -10.563712120056152
    9. 'る' → logprob: -10.938712120056152
    10. 'n' → logprob: -11.688712120056152

Token 276: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024496424943208694
    2. 'continue' → logprob: -4.774496555328369
    3. '       ' → logprob: -5.149496555328369
    4. ' continue' → logprob: -5.399496555328369
    5. '	continue' → logprob: -5.524496555328369
    6. '
' → logprob: -7.024496555328369
    7. ',' → logprob: -7.899496555328369
    8. '_continue' → logprob: -10.274496078491211
    9. ':' → logprob: -10.524496078491211
    10. ',
' → logprob: -10.774496078491211

Token 277: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11798857152462006
    2. ' continue' → logprob: -2.9929885864257812
    3. 'continue' → logprob: -3.4929885864257812
    4. '       ' → logprob: -3.6179885864257812
    5. '	continue' → logprob: -5.617988586425781
    6. ' ' → logprob: -9.492988586425781
    7. ',' → logprob: -9.742988586425781
    8. '
' → logprob: -10.992988586425781
    9. '   ' → logprob: -10.992988586425781
    10. '_continue' → logprob: -11.242988586425781

Token 278: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0019953702576458454
    2. ' continue' → logprob: -6.37699556350708
    3. '   ' → logprob: -8.251995086669922
    4. 'continu' → logprob: -11.251995086669922
    5. '	continue' → logprob: -11.626995086669922
    6. 'total' → logprob: -12.626995086669922
    7. 'contin' → logprob: -12.876995086669922
    8. 'pass' → logprob: -13.126995086669922
    9. ' ' → logprob: -13.376995086669922
    10. 'cont' → logprob: -14.376995086669922

Token 279: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6867698431015015
    2. '    
' → logprob: -1.6867698431015015
    3. 'total' → logprob: -1.8117698431015015
    4. '
' → logprob: -2.311769962310791
    5. ' total' → logprob: -3.686769962310791
    6. '   
' → logprob: -5.186769962310791
    7. '  
' → logprob: -5.186769962310791
    8. 'if' → logprob: -6.061769962310791
    9. 'elif' → logprob: -6.061769962310791
    10. ' 
' → logprob: -6.686769962310791

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7170735001564026
    2. 'total' → logprob: -1.2170734405517578
    3. ' total' → logprob: -2.467073440551758
    4. 'if' → logprob: -2.842073440551758
    5. ' if' → logprob: -3.717073440551758
    6. 'elif' → logprob: -4.217073440551758
    7. '    
' → logprob: -4.967073440551758
    8. 'cost' → logprob: -5.092073440551758
    9. ' elif' → logprob: -5.467073440551758
    10. '
' → logprob: -5.592073440551758

Token 281: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.107218861579895
    2. 'cost' → logprob: -1.232218861579895
    3. 'if' → logprob: -1.732218861579895
    4. 'discount' → logprob: -2.1072187423706055
    5. '   ' → logprob: -3.8572187423706055
    6. 'else' → logprob: -3.8572187423706055
    7. 'elif' → logprob: -4.3572187423706055
    8. 'x' → logprob: -5.6072187423706055
    9. 'usage' → logprob: -6.6072187423706055
    10. 'distance' → logprob: -6.6072187423706055

Token 282: ' �' (ID: 48031)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6169804930686951
    2. 'cost' → logprob: -0.8669804930686951
    3. 'if' → logprob: -4.11698055267334
    4. 'discount' → logprob: -4.86698055267334
    5. '#' → logprob: -5.11698055267334
    6. 'original' → logprob: -6.61698055267334
    7. 'normal' → logprob: -6.86698055267334
    8. 'base' → logprob: -6.86698055267334
    9. 'x' → logprob: -7.24198055267334
    10. 'distance' → logprob: -7.49198055267334

Token 283: '�' (ID: 247)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3351132571697235
    2. 'total' → logprob: -1.585113286972046
    3. 'if' → logprob: -3.460113286972046
    4. ' cost' → logprob: -3.960113286972046
    5. 'min' → logprob: -5.085113048553467
    6. '#' → logprob: -5.085113048553467
    7. 'max' → logprob: -6.085113048553467
    8. ' total' → logprob: -6.085113048553467
    9. 'base' → logprob: -6.710113048553467
    10. 'c' → logprob: -6.710113048553467

Token 284: 'の' (ID: 3385)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.674645185470581
    2. 'total' → logprob: -1.299645185470581
    3. ' cost' → logprob: -2.299645185470581
    4. 'if' → logprob: -3.174645185470581
    5. ' total' → logprob: -3.299645185470581
    6. '   ' → logprob: -4.54964542388916
    7. ' if' → logprob: -4.79964542388916
    8. 'min' → logprob: -5.79964542388916
    9. 'c' → logprob: -5.92464542388916
    10. 'max' → logprob: -6.04964542388916

Token 285: '切' (ID: 34921)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.13356095552444458
    2. 'total' → logprob: -3.1335608959198
    3. 'min' → logprob: -3.7585608959198
    4. 'if' → logprob: -3.8835608959198
    5. ' cost' → logprob: -4.758561134338379
    6. '#' → logprob: -5.008561134338379
    7. '   ' → logprob: -5.633561134338379
    8. 'usage' → logprob: -6.133561134338379
    9. 'for' → logprob: -6.258561134338379
    10. 'c' → logprob: -6.383561134338379

Token 286: '符' (ID: 43487)
  Prédit: '符'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '符' → logprob: -0.24472440779209137
    2. '替' → logprob: -2.4947245121002197
    3. 'り' → logprob: -2.7447245121002197
    4. '断' → logprob: -3.2447245121002197
    5. '削' → logprob: -5.494724273681641
    6. '```' → logprob: -5.494724273681641
    7. '換' → logprob: -5.869724273681641
    8. '片' → logprob: -5.869724273681641
    9. '込' → logprob: -6.619724273681641
    10. '止' → logprob: -6.994724273681641

Token 287: 'だけ' (ID: 121885)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.3086414337158203
    2. '_price' → logprob: -1.4336414337158203
    3. '_type' → logprob: -1.8086414337158203
    4. ' =' → logprob: -2.0586414337158203
    5. 'cost' → logprob: -2.0586414337158203
    6. 'type' → logprob: -3.6836414337158203
    7. '=' → logprob: -4.18364143371582
    8. 'price' → logprob: -4.80864143371582
    9. '_fee' → logprob: -5.18364143371582
    10. '料金' → logprob: -5.43364143371582

Token 288: 'で' (ID: 4344)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4849887490272522
    2. 'total' → logprob: -1.2349886894226074
    3. '=' → logprob: -2.8599886894226074
    4. 'for' → logprob: -4.859988689422607
    5. '   ' → logprob: -5.359988689422607
    6. ' =' → logprob: -5.609988689422607
    7. ' cost' → logprob: -5.734988689422607
    8. '料金' → logprob: -5.984988689422607
    9. 'の' → logprob: -6.234988689422607
    10. 'price' → logprob: -6.359988689422607

Token 289: '乗' (ID: 155429)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.013712677173316479
    2. 'cost' → logprob: -4.8887128829956055
    3. 'usage' → logprob: -6.5137128829956055
    4. 'min' → logprob: -7.0137128829956055
    5. '料金' → logprob: -7.2637128829956055
    6. 'は' → logprob: -7.5137128829956055
    7. 'pass' → logprob: -7.7637128829956055
    8. ' total' → logprob: -7.8887128829956055
    9. 'continue' → logprob: -8.388712882995605
    10. '#' → logprob: -8.388712882995605

Token 290: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.10363289713859558
    2. '車' → logprob: -2.353632926940918
    3. 'れる' → logprob: -6.228632926940918
    4. 'り' → logprob: -6.853632926940918
    5. 'っ' → logprob: -8.728632926940918
    6. 'って' → logprob: -9.728632926940918
    7. 'った' → logprob: -10.478632926940918
    8. 'れば' → logprob: -10.728632926940918
    9. '```' → logprob: -10.853632926940918
    10. 'ら' → logprob: -11.103632926940918

Token 291: '場合' (ID: 72486)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.47936585545539856
    2. 'total' → logprob: -1.2293658256530762
    3. '   ' → logprob: -3.354365825653076
    4. ' cost' → logprob: -4.354365825653076
    5. 'ticket' → logprob: -4.479365825653076
    6. '=' → logprob: -5.479365825653076
    7. 'if' → logprob: -5.604365825653076
    8. 'price' → logprob: -5.729365825653076
    9. 'count' → logprob: -5.979365825653076
    10. ' =' → logprob: -6.229365825653076

Token 292: 'の' (ID: 3385)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4534968137741089
    2. 'total' → logprob: -1.3284968137741089
    3. 'cost' → logprob: -2.9534969329833984
    4. ' total' → logprob: -3.7034969329833984
    5. ' cost' → logprob: -4.328496932983398
    6. '
' → logprob: -5.578496932983398
    7. '    
' → logprob: -6.828496932983398
    8. ',' → logprob: -6.953496932983398
    9. '```' → logprob: -7.453496932983398
    10. 'price' → logprob: -7.953496932983398

Token 293: 'コ' (ID: 12504)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1805257648229599
    2. 'total' → logprob: -1.805525779724121
    3. 'price' → logprob: -7.680525779724121
    4. ' cost' → logprob: -9.930525779724121
    5. 'fee' → logprob: -10.305525779724121
    6. 'base' → logprob: -10.305525779724121
    7. '#' → logprob: -10.555525779724121
    8. 'min' → logprob: -10.680525779724121
    9. 'c' → logprob: -11.180525779724121
    10. '
' → logprob: -11.305525779724121

Token 294: 'スト' (ID: 38236)
  Prédit: 'スト'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'スト' → logprob: -0.1592809110879898
    2. 'st' → logprob: -2.534281015396118
    3. 's' → logprob: -3.034281015396118
    4. 'total' → logprob: -5.034280776977539
    5. 'ス' → logprob: -5.159280776977539
    6. 'ost' → logprob: -6.159280776977539
    7. '       ' → logprob: -6.534280776977539
    8. 'cost' → logprob: -7.034280776977539
    9. '   ' → logprob: -7.409280776977539
    10. 'ース' → logprob: -7.909280776977539

Token 295: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8500458002090454
    2. '=' → logprob: -1.2250458002090454
    3. 'total' → logprob: -1.9750458002090454
    4. ' +=' → logprob: -3.100045680999756
    5. '+' → logprob: -3.600045680999756
    6. 'cost' → logprob: -3.600045680999756
    7. '+=' → logprob: -3.600045680999756
    8. '   ' → logprob: -4.975045680999756
    9. ' total' → logprob: -5.975045680999756
    10. ' cost' → logprob: -6.975045680999756

Token 296: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5822108387947083
    2. 'cost' → logprob: -1.4572107791900635
    3. '   ' → logprob: -1.9572107791900635
    4. ' cost' → logprob: -3.9572107791900635
    5. ' total' → logprob: -3.9572107791900635
    6. '=' → logprob: -4.707211017608643
    7. '+' → logprob: -4.957211017608643
    8. ' =' → logprob: -5.207211017608643
    9. '+=' → logprob: -5.957211017608643
    10. ' +=' → logprob: -6.832211017608643

Token 297: ' cost' (ID: 3097)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.23043467104434967
    2. 'cost' (adapté à ' cost') → logprob: -1.6054346561431885
    3. '   ' → logprob: -6.730434894561768
    4. ' total' → logprob: -6.855434894561768
    5. 'base' → logprob: -7.230434894561768
    6. 'single' → logprob: -7.605434894561768
    7. ' cost' → logprob: -7.855434894561768
    8. 'normal' → logprob: -8.60543441772461
    9. 'ticket' → logprob: -8.73043441772461
    10. 'min' → logprob: -8.85543441772461

Token 298: '_ticket' (ID: 115656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2259705364704132
    2. '=' → logprob: -1.6009705066680908
    3. '＝' → logprob: -8.350970268249512
    4. '1' → logprob: -8.850970268249512
    5. '_' → logprob: -9.225970268249512
    6. '_base' → logprob: -10.850970268249512
    7. '_single' → logprob: -11.600970268249512
    8. ' ' → logprob: -12.350970268249512
    9. '　' → logprob: -12.350970268249512
    10. ' +=' → logprob: -12.600970268249512

Token 299: '_only' (ID: 43039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2831035852432251
    2. '=' → logprob: -1.408103585243225
    3. '_' → logprob: -7.2831034660339355
    4. '1' → logprob: -7.4081034660339355
    5. 's' → logprob: -8.908103942871094
    6. '＝' → logprob: -9.033103942871094
    7. '_ticket' → logprob: -9.033103942871094
    8. '_single' → logprob: -9.283103942871094
    9. '_cost' → logprob: -10.783103942871094
    10. '_base' → logprob: -11.033103942871094

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741223454475403
    2. '=' → logprob: -0.9741223454475403
    3. '＝' → logprob: -10.224122047424316
    4. ' ' → logprob: -12.974122047424316
    5. '1' → logprob: -13.724122047424316
    6. '_' → logprob: -13.849122047424316
    7. 's' → logprob: -13.974122047424316
    8. '=i' → logprob: -14.349122047424316
    9. ',' → logprob: -14.349122047424316
    10. '　' → logprob: -14.724122047424316

Token 301: ' usage' (ID: 16622)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.09431403875350952
    2. 'usage' → logprob: -2.7193140983581543
    3. 'A' → logprob: -4.344314098358154
    4. 'B' → logprob: -4.844314098358154
    5. ' usage' → logprob: -6.594314098358154
    6. ' C' → logprob: -6.844314098358154
    7. '   ' → logprob: -8.344313621520996
    8. '100' → logprob: -9.219313621520996
    9. '(C' → logprob: -9.844313621520996
    10. 'max' → logprob: -9.969313621520996

Token 302: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.75
    3. '```' → logprob: -16.875
    4. 'i' → logprob: -17.25
    5. ' [' → logprob: -18.0
    6. '[I' → logprob: -18.875
    7. '[idx' → logprob: -19.0
    8. '[j' → logprob: -19.375
    9. '<|end|>' → logprob: -19.75
    10. '
' → logprob: -19.875

Token 303: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005555360112339258
    2. ']*' → logprob: -8.250555992126465
    3. '[i' → logprob: -8.375555992126465
    4. '*' → logprob: -10.000555992126465
    5. '[' → logprob: -11.750555992126465
    6. '][' → logprob: -12.625555992126465
    7. ')' → logprob: -13.375555992126465
    8. '-' → logprob: -13.625555992126465
    9. ' *' → logprob: -14.000555992126465
    10. ' ]' → logprob: -14.625555992126465

Token 304: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12745286524295807
    2. ' *' → logprob: -2.127452850341797
    3. '*C' → logprob: -7.627452850341797
    4. '```' → logprob: -12.252452850341797
    5. ' ' → logprob: -12.377452850341797
    6. ' ' → logprob: -12.627452850341797
    7. '#' → logprob: -12.752452850341797
    8. '   ' → logprob: -12.877452850341797
    9. '*A' → logprob: -13.002452850341797
    10. '[i' → logprob: -13.127452850341797

Token 305: ' A' (ID: 355)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005064461147412658
    2. 'A' → logprob: -8.250506401062012
    3. 'B' → logprob: -8.750506401062012
    4. ' C' → logprob: -9.875506401062012
    5. 'c' → logprob: -10.625506401062012
    6. '100' → logprob: -12.750506401062012
    7. '   ' → logprob: -13.125506401062012
    8. '(C' → logprob: -13.625506401062012
    9. ' ' → logprob: -14.625506401062012
    10. '	C' → logprob: -14.750506401062012

Token 306: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -11.50001049041748
    3. ' [' → logprob: -15.75001049041748
    4. 'i' → logprob: -16.625009536743164
    5. '[I' → logprob: -17.250009536743164
    6. '```' → logprob: -17.875009536743164
    7. '\[' → logprob: -18.500009536743164
    8. ']' → logprob: -18.875009536743164
    9. '[
' → logprob: -19.000009536743164
    10. ')' → logprob: -19.250009536743164

Token 307: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007857399992644787
    2. '[i' → logprob: -5.007857322692871
    3. ' ]' → logprob: -7.257857322692871
    4. '[' → logprob: -8.507857322692871
    5. ')' → logprob: -8.632857322692871
    6. '<|end|>' → logprob: -11.632857322692871
    7. ']+' → logprob: -12.132857322692871
    8. ']
' → logprob: -12.132857322692871
    9. '[
' → logprob: -12.132857322692871
    10. ']>' → logprob: -12.382857322692871

Token 308: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.037375085055828094
    2. '#' (adapté à ' #') → logprob: -4.412374973297119
    3. ' cost' → logprob: -4.412374973297119
    4. 'total' → logprob: -5.287374973297119
    5. 'discount' → logprob: -5.412374973297119
    6. 'min' → logprob: -6.412374973297119
    7. 'if' → logprob: -7.787374973297119
    8. 'max' → logprob: -8.412375450134277
    9. ' #' → logprob: -9.162375450134277
    10. 'ticket' → logprob: -10.037375450134277

Token 310: ' IC' (ID: 30492)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.013511006720364094
    2. 'discount' → logprob: -4.7635111808776855
    3. '#' → logprob: -6.3885111808776855
    4. ' cost' → logprob: -6.3885111808776855
    5. 'min' → logprob: -7.6385111808776855
    6. 'ticket' → logprob: -8.513510704040527
    7. 'for' → logprob: -8.888510704040527
    8. 'total' → logprob: -9.013510704040527
    9. 'pass' → logprob: -9.013510704040527
    10. 'max' → logprob: -9.138510704040527

Token 311: 'カード' (ID: 144583)
  Prédit: '_ticket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ticket' → logprob: -0.32031866908073425
    2. '_card' → logprob: -2.1953186988830566
    3. '_cost' → logprob: -2.8203186988830566
    4. 'カード' → logprob: -3.0703186988830566
    5. '_price' → logprob: -3.6953186988830566
    6. '_fee' → logprob: -5.320318698883057
    7. 'card' → logprob: -5.570318698883057
    8. ' =' → logprob: -5.570318698883057
    9. 'cost' → logprob: -5.695318698883057
    10. '料金' → logprob: -6.195318698883057

Token 312: 'を' (ID: 7277)
  Prédit: 'のみ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'のみ' → logprob: -0.9947936534881592
    2. 'only' → logprob: -1.1197936534881592
    3. '_only' → logprob: -2.119793653488159
    4. 'だけ' → logprob: -2.994793653488159
    5. 'を' → logprob: -3.244793653488159
    6. ' only' → logprob: -3.994793653488159
    7. 'で' → logprob: -3.994793653488159
    8. 'cost' → logprob: -4.119793891906738
    9. 'の' → logprob: -4.244793891906738
    10. '_cost' → logprob: -5.244793891906738

Token 313: '買' (ID: 61563)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.29321372509002686
    2. 'min' → logprob: -1.9182137250900269
    3. 'cost' → logprob: -3.5432138442993164
    4. 'max' → logprob: -3.7932138442993164
    5. '使用' → logprob: -4.043213844299316
    6. '使' → logprob: -4.168213844299316
    7. 'C' → logprob: -5.418213844299316
    8. 'use' → logprob: -5.418213844299316
    9. 'used' → logprob: -5.543213844299316
    10. ' B' → logprob: -6.043213844299316

Token 314: 'って' (ID: 30677)
  Prédit: 'う'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'う' → logprob: -0.012516716495156288
    2. 'って' → logprob: -4.887516498565674
    3. 'い' → logprob: -6.012516498565674
    4. 'っ' → logprob: -6.637516498565674
    5. 'った' → logprob: -7.512516498565674
    6. '```' → logprob: -8.387516975402832
    7. '#' → logprob: -9.762516975402832
    8. '用' → logprob: -9.887516975402832
    9. 'お' → logprob: -10.137516975402832
    10. '1' → logprob: -10.387516975402832

Token 315: '乗' (ID: 155429)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6751757264137268
    2. ' cost' → logprob: -0.8001757264137268
    3. 'B' → logprob: -4.550175666809082
    4. ' B' → logprob: -4.925175666809082
    5. 'total' → logprob: -5.050175666809082
    6. ' total' → logprob: -5.675175666809082
    7. 'min' → logprob: -5.675175666809082
    8. ' min' → logprob: -5.925175666809082
    9. 'C' → logprob: -6.300175666809082
    10. ' C' → logprob: -6.675175666809082

Token 316: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -1.664371848164592e-05
    2. '車' → logprob: -11.375016212463379
    3. 'り' → logprob: -12.250016212463379
    4. '```' → logprob: -16.375017166137695
    5. '[i' → logprob: -17.125017166137695
    6. 'cost' → logprob: -17.375017166137695
    7. 'く' → logprob: -17.375017166137695
    8. 'う' → logprob: -17.500017166137695
    9. '' → logprob: -18.000017166137695
    10. 'i' → logprob: -18.250017166137695

Token 317: '場合' (ID: 72486)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.05293947830796242
    2. ' cost' → logprob: -3.5529394149780273
    3. 'min' → logprob: -4.552939414978027
    4. 'B' → logprob: -5.052939414978027
    5. ' =' → logprob: -6.677939414978027
    6. ' min' → logprob: -7.552939414978027
    7. '場合' → logprob: -7.802939414978027
    8. ' B' → logprob: -7.802939414978027
    9. 'C' → logprob: -8.052939414978027
    10. 'コ' → logprob: -8.177939414978027

Token 318: 'の' (ID: 3385)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7038387060165405
    2. 'cost' → logprob: -1.0788387060165405
    3. ' cost' → logprob: -1.8288387060165405
    4. '=' → logprob: -5.95383882522583
    5. ',' → logprob: -6.45383882522583
    6. '_cost' → logprob: -8.578838348388672
    7. '   ' → logprob: -8.578838348388672
    8. '+' → logprob: -10.328838348388672
    9. ':' → logprob: -10.453838348388672
    10. ' ,' → logprob: -10.703838348388672

Token 319: 'コ' (ID: 12504)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.012014716863632202
    2. 'min' → logprob: -4.512014865875244
    3. ' cost' → logprob: -7.137014865875244
    4. 'B' → logprob: -9.637014389038086
    5. 'コ' → logprob: -10.387014389038086
    6. '
' → logprob: -10.637014389038086
    7. ' min' → logprob: -10.762014389038086
    8. 'total' → logprob: -11.637014389038086
    9. 'max' → logprob: -12.012014389038086
    10. 'co' → logprob: -12.137014389038086

Token 320: 'スト' (ID: 38236)
  Prédit: 'スト'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'スト' → logprob: -0.007138377986848354
    2. 'ス' → logprob: -5.257138252258301
    3. 'ース' → logprob: -7.882138252258301
    4. 'st' → logprob: -8.0071382522583
    5. 'cost' → logprob: -8.0071382522583
    6. '```' → logprob: -8.2571382522583
    7. '#' → logprob: -8.6321382522583
    8. '
' → logprob: -8.8821382522583
    9. '``' → logprob: -9.7571382522583
    10. 's' → logprob: -10.5071382522583

Token 321: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2432580292224884
    2. ' cost' → logprob: -2.243257999420166
    3. 'cost' → logprob: -2.368257999420166
    4. '=' → logprob: -4.243257999420166
    5. '   ' → logprob: -7.368257999420166
    6. ',' → logprob: -7.743257999420166
    7. '+' → logprob: -8.618258476257324
    8. ' +' → logprob: -9.243258476257324
    9. '_cost' → logprob: -9.368258476257324
    10. '
' → logprob: -9.368258476257324

Token 322: '   ' (ID: 271)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.10267897695302963
    2. ' cost' → logprob: -2.3526790142059326
    3. '   ' → logprob: -7.2276787757873535
    4. 'min' → logprob: -7.3526787757873535
    5. 'card' → logprob: -8.602679252624512
    6. 'discount' → logprob: -8.727679252624512
    7. ' =' → logprob: -8.852679252624512
    8. 'total' → logprob: -8.977679252624512
    9. ' min' → logprob: -9.352679252624512
    10. '=' → logprob: -9.352679252624512

Token 323: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.0009311101748608053
    2. ' cost' → logprob: -7.625931262969971
    3. 'card' → logprob: -8.125930786132812
    4. 'ic' → logprob: -10.000930786132812
    5. 'min' → logprob: -10.000930786132812
    6. 'total' → logprob: -10.875930786132812
    7. 'ticket' → logprob: -11.875930786132812
    8. '   ' → logprob: -12.000930786132812
    9. 'if' → logprob: -12.500930786132812
    10. 'discount' → logprob: -12.750930786132812

Token 324: '_ic' (ID: 79605)
  Prédit: '_ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ic' → logprob: -0.09374044090509415
    2. '_card' → logprob: -2.718740463256836
    3. '_ticket' → logprob: -3.843740463256836
    4. '_IC' → logprob: -6.843740463256836
    5. 'ic' → logprob: -7.968740463256836
    6. 'IC' → logprob: -8.468740463256836
    7. ' =' → logprob: -8.593740463256836
    8. 'card' → logprob: -9.218740463256836
    9. '=' → logprob: -9.468740463256836
    10. '
' → logprob: -10.718740463256836

Token 325: ' =' (ID: 314)
  Prédit: '_only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_only' → logprob: -0.4383271038532257
    2. ' =' → logprob: -1.3133270740509033
    3. '=' → logprob: -2.5633270740509033
    4. '_card' → logprob: -5.188327312469482
    5. 'only' → logprob: -6.188327312469482
    6. 'card' → logprob: -6.813327312469482
    7. '_cost' → logprob: -10.813326835632324
    8. '_cards' → logprob: -10.813326835632324
    9. 'Only' → logprob: -11.063326835632324
    10. ' ' → logprob: -11.438326835632324

Token 326: ' C' (ID: 363)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03750448673963547
    2. 'C' → logprob: -3.9125044345855713
    3. ' B' → logprob: -4.28750467300415
    4. 'usage' → logprob: -6.53750467300415
    5. ' usage' → logprob: -7.91250467300415
    6. 'A' → logprob: -8.037504196166992
    7. ' C' → logprob: -8.162504196166992
    8. 'min' → logprob: -8.537504196166992
    9. '	B' → logprob: -9.162504196166992
    10. ' ' → logprob: -9.412504196166992

Token 327: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.000001907348633
    3. 'i' → logprob: -14.375001907348633
    4. '[I' → logprob: -17.500001907348633
    5. '<|end|>' → logprob: -18.000001907348633
    6. '(i' → logprob: -18.250001907348633
    7. '```' → logprob: -18.375001907348633
    8. '[
' → logprob: -18.500001907348633
    9. ',i' → logprob: -19.625001907348633
    10. '[A' → logprob: -19.750001907348633

Token 328: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003102019429206848
    2. '[i' → logprob: -6.503101825714111
    3. ']*' → logprob: -6.753101825714111
    4. '])' → logprob: -8.87810230255127
    5. '][' → logprob: -9.37810230255127
    6. ']+' → logprob: -9.62810230255127
    7. '[' → logprob: -10.12810230255127
    8. ')' → logprob: -10.50310230255127
    9. '*' → logprob: -10.75310230255127
    10. '-' → logprob: -10.87810230255127

Token 329: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5418642163276672
    2. '+' → logprob: -1.2918641567230225
    3. ' +' → logprob: -2.4168641567230225
    4. ' *' → logprob: -2.9168641567230225
    5. '<|end|>' → logprob: -9.416864395141602
    6. 'if' → logprob: -9.791864395141602
    7. ')' → logprob: -10.666864395141602
    8. ' ' → logprob: -11.166864395141602
    9. ' if' → logprob: -11.291864395141602
    10. '```' → logprob: -11.416864395141602

Token 330: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.24430274963378906
    2. 'B' → logprob: -1.619302749633789
    3. ' usage' → logprob: -4.244302749633789
    4. ' B' → logprob: -5.744302749633789
    5. '(B' → logprob: -7.369302749633789
    6. '   ' → logprob: -8.369302749633789
    7. '(' → logprob: -8.494302749633789
    8. ' (' → logprob: -10.119302749633789
    9. ' ' → logprob: -10.994302749633789
    10. '	B' → logprob: -11.869302749633789

Token 331: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. 'i' → logprob: -16.375
    4. '```' → logprob: -18.125
    5. '[
' → logprob: -18.75
    6. ' [' → logprob: -19.25
    7. '(i' → logprob: -19.5
    8. '[I' → logprob: -20.125
    9. '[user' → logprob: -20.5
    10. ' ' → logprob: -20.75

Token 332: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7556333541870117
    2. '[i' → logprob: -0.8806333541870117
    3. '*' → logprob: -2.2556333541870117
    4. '[' → logprob: -5.255633354187012
    5. ']*' → logprob: -5.755633354187012
    6. ' *' → logprob: -6.255633354187012
    7. '```' → logprob: -8.505633354187012
    8. '-' → logprob: -9.130633354187012
    9. ')' → logprob: -10.005633354187012
    10. '[]' → logprob: -10.005633354187012

Token 333: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20141996443271637
    2. ' *' → logprob: -1.7014199495315552
    3. ' ' → logprob: -12.451419830322266
    4. ' ' → logprob: -13.326419830322266
    5. '**' → logprob: -15.451419830322266
    6. '```' → logprob: -15.451419830322266
    7. '*(' → logprob: -15.701419830322266
    8. '＊' → logprob: -15.701419830322266
    9. 'B' → logprob: -15.951419830322266
    10. ' B' → logprob: -16.576419830322266

Token 334: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0024832691997289658
    2. ' B' → logprob: -6.002483367919922
    3. '(B' → logprob: -12.752483367919922
    4. '	B' → logprob: -13.502483367919922
    5. '   ' → logprob: -13.627483367919922
    6. '(' → logprob: -14.252483367919922
    7. ' (' → logprob: -14.627483367919922
    8. ' ' → logprob: -14.877483367919922
    9. '  ' → logprob: -16.002483367919922
    10. '
' → logprob: -16.627483367919922

Token 335: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. '```' → logprob: -16.375
    4. 'i' → logprob: -17.625
    5. '<|end|>' → logprob: -18.375
    6. ' [' → logprob: -20.0
    7. '[I' → logprob: -20.125
    8. '(i' → logprob: -20.75
    9. '[
' → logprob: -21.375
    10. '[j' → logprob: -21.625

Token 336: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22136425971984863
    2. '
' → logprob: -1.9713642597198486
    3. 'if' → logprob: -3.7213642597198486
    4. 'total' → logprob: -3.8463642597198486
    5. ' if' → logprob: -5.0963640213012695
    6. '    
' → logprob: -5.2213640213012695
    7. ' total' → logprob: -7.0963640213012695
    8. 'cost' → logprob: -8.22136402130127
    9. ')' → logprob: -8.59636402130127
    10. '
' → logprob: -8.72136402130127

Token 338: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4862997531890869
    2. '   ' → logprob: -1.611299753189087
    3. 'if' → logprob: -1.736299753189087
    4. ' if' → logprob: -5.611299514770508
    5. ' total' → logprob: -5.736299514770508
    6. 'cost' → logprob: -6.611299514770508
    7. '
' → logprob: -6.986299514770508
    8. '    
' → logprob: -9.861299514770508
    9. '	total' → logprob: -10.611299514770508
    10. ' ' → logprob: -11.361299514770508

Token 339: ' 小' (ID: 27743)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0012440400896593928
    2. ' total' → logprob: -6.751244068145752
    3. '   ' → logprob: -10.126243591308594
    4. 'cost' → logprob: -10.626243591308594
    5. '
' → logprob: -12.251243591308594
    6. 'if' → logprob: -12.626243591308594
    7. '
' → logprob: -15.001243591308594
    8. 'min' → logprob: -15.001243591308594
    9. '	total' → logprob: -15.376243591308594
    10. '    
' → logprob: -15.876243591308594

Token 340: 'さい' (ID: 36201)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.19749288260936737
    2. 'total' → logprob: -2.072492837905884
    3. 'cost' → logprob: -3.447492837905884
    4. 'est' → logprob: -4.447493076324463
    5. '_cost' → logprob: -5.072493076324463
    6. '_total' → logprob: -6.947493076324463
    7. 'st' → logprob: -7.947493076324463
    8. 'さい' → logprob: -8.572492599487305
    9. '=' → logprob: -8.697492599487305
    10. 'ist' → logprob: -8.822492599487305

Token 341: '方' (ID: 4983)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.07324706017971039
    2. ' cost' → logprob: -3.948246955871582
    3. 'er' → logprob: -4.073246955871582
    4. 'コ' → logprob: -4.448246955871582
    5. '方' → logprob: -5.073246955871582
    6. '_cost' → logprob: -5.198246955871582
    7. '   ' → logprob: -5.948246955871582
    8. '
' → logprob: -6.198246955871582
    9. 'の' → logprob: -6.323246955871582
    10. 'ほ' → logprob: -6.948246955871582

Token 342: 'を' (ID: 7277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8077130317687988
    2. 'を' → logprob: -0.9327130317687988
    3. ')' → logprob: -2.807713031768799
    4. ',' → logprob: -3.307713031768799
    5. '<|end|>' → logprob: -3.432713031768799
    6. '=' → logprob: -4.432713031768799
    7. 'の' → logprob: -5.057713031768799
    8. ' =' → logprob: -6.057713031768799
    9. ' を' → logprob: -6.307713031768799
    10. '  ' → logprob: -6.682713031768799

Token 343: '採' (ID: 174756)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0012620178749784827
    2. 'min' → logprob: -7.376262187957764
    3. ' total' → logprob: -7.376262187957764
    4. 'cost' → logprob: -12.376261711120605
    5. '   ' → logprob: -13.251261711120605
    6. '	total' → logprob: -14.126261711120605
    7. '選' → logprob: -14.751261711120605
    8. ' min' → logprob: -14.876261711120605
    9. '
' → logprob: -15.126261711120605
    10. 'selected' → logprob: -15.251261711120605

Token 344: '用' (ID: 5615)
  Prédit: '用'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '用' → logprob: -0.01630661077797413
    2. '択' → logprob: -4.141306400299072
    3. '```' → logprob: -9.26630687713623
    4. '용' → logprob: -9.89130687713623
    5. '�' → logprob: -10.01630687713623
    6. '``' → logprob: -10.39130687713623
    7. '
' → logprob: -11.39130687713623
    8. '���' → logprob: -11.64130687713623
    9. '��' → logprob: -11.76630687713623
    10. '

' → logprob: -12.64130687713623

Token 345: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46625837683677673
    2. '
' → logprob: -1.7162584066390991
    3. 'total' → logprob: -1.7162584066390991
    4. ' total' → logprob: -4.591258525848389
    5. 'cost' → logprob: -6.091258525848389
    6. '    
' → logprob: -8.59125804901123
    7. ' cost' → logprob: -8.59125804901123
    8. 'if' → logprob: -8.84125804901123
    9. ' if' → logprob: -9.46625804901123
    10. '
' → logprob: -10.09125804901123

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032661911100149155
    2. '
' → logprob: -3.5326619148254395
    3. 'total' → logprob: -5.9076619148254395
    4. '    
' → logprob: -9.407661437988281
    5. ' total' → logprob: -9.532661437988281
    6. 'cost' → logprob: -11.532661437988281
    7. '```' → logprob: -11.907661437988281
    8. 'if' → logprob: -12.032661437988281
    9. '
' → logprob: -13.032661437988281
    10. '	total' → logprob: -13.532661437988281

Token 347: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0026254775002598763
    2. ' total' → logprob: -6.002625465393066
    3. '   ' → logprob: -9.002625465393066
    4. '
' → logprob: -10.877625465393066
    5. 'cost' → logprob: -12.127625465393066
    6. 'if' → logprob: -13.752625465393066
    7. '	total' → logprob: -14.377625465393066
    8. '
' → logprob: -15.127625465393066
    9. ' ' → logprob: -15.627625465393066
    10. '    
' → logprob: -16.377626419067383

Token 348: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -5.5577775128767826e-06
    2. 'cost' → logprob: -12.500005722045898
    3. '_' → logprob: -13.375005722045898
    4. '_COST' → logprob: -16.7500057220459
    5. '_co' → logprob: -17.1250057220459
    6. '_cos' → logprob: -17.7500057220459
    7. ' _' → logprob: -17.8750057220459
    8. ' +=' → logprob: -18.1250057220459
    9. ' cost' → logprob: -18.3750057220459
    10. '_code' → logprob: -18.3750057220459

Token 349: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12693975865840912
    2. '+=' → logprob: -2.1269397735595703
    3. '=' → logprob: -11.75193977355957
    4. ' =' → logprob: -13.37693977355957
    5. '+' → logprob: -14.12693977355957
    6. ']+=' → logprob: -14.50193977355957
    7. '+=(' → logprob: -14.75193977355957
    8. '　' → logprob: -15.87693977355957
    9. ' ' → logprob: -16.12693977355957
    10. '	' → logprob: -16.37693977355957

Token 350: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.06196846812963486
    2. 'min' → logprob: -2.8119685649871826
    3. ' max' → logprob: -14.561968803405762
    4. 'max' → logprob: -15.436968803405762
    5. '	min' → logprob: -16.561967849731445
    6. '   ' → logprob: -18.936967849731445
    7. '(min' → logprob: -18.936967849731445
    8. ' cost' → logprob: -19.311967849731445
    9. ' ' → logprob: -19.936967849731445
    10. 'cost' → logprob: -21.311967849731445

Token 351: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -1.3425219549390022e-05
    2. 'cost' → logprob: -11.25001335144043
    3. '(' → logprob: -14.87501335144043
    4. ' cost' → logprob: -19.12501335144043
    5. '_cost' → logprob: -20.87501335144043
    6. '(co' → logprob: -21.50001335144043
    7. 'Cost' → logprob: -21.50001335144043
    8. '(price' → logprob: -21.62501335144043
    9. '(c' → logprob: -22.62501335144043
    10. '.cost' → logprob: -22.75001335144043

Token 352: '_ticket' (ID: 115656)
  Prédit: '_ticket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ticket' → logprob: -1.1398757123970427e-05
    2. '_cost' → logprob: -11.625011444091797
    3. '(cost' → logprob: -13.250011444091797
    4. '_' → logprob: -15.875011444091797
    5. '(ticket' → logprob: -16.125011444091797
    6. '_t' → logprob: -16.125011444091797
    7. '_tick' → logprob: -16.500011444091797
    8. 'ticket' → logprob: -16.750011444091797
    9. 'cost' → logprob: -17.250011444091797
    10. '(_' → logprob: -18.000011444091797

Token 353: '_only' (ID: 43039)
  Prédit: '_only'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_only' → logprob: -2.696889623621246e-06
    2. 'only' → logprob: -13.25000286102295
    3. '_on' → logprob: -14.25000286102295
    4. '_cost' → logprob: -16.125001907348633
    5. '_ticket' → logprob: -17.250001907348633
    6. '_' → logprob: -18.125001907348633
    7. '_or' → logprob: -18.625001907348633
    8. '_ONLY' → logprob: -19.625001907348633
    9. '_once' → logprob: -19.750001907348633
    10. '-only' → logprob: -20.125001907348633

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00524098752066493
    2. ' ,' → logprob: -5.2552409172058105
    3. ',
' → logprob: -12.380241394042969
    4. ',c' → logprob: -13.005241394042969
    5. ' cost' → logprob: -15.380241394042969
    6. 'cost' → logprob: -15.755241394042969
    7. '   ' → logprob: -16.50524139404297
    8. '，' → logprob: -16.75524139404297
    9. ',

' → logprob: -17.00524139404297
    10. ' ,
' → logprob: -17.25524139404297

Token 355: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0380416102707386
    2. ' cost' → logprob: -3.288041591644287
    3. '(cost' → logprob: -16.413042068481445
    4. '_cost' → logprob: -17.288042068481445
    5. 'Cost' → logprob: -18.413042068481445
    6. ' ' → logprob: -18.413042068481445
    7. '   ' → logprob: -18.663042068481445
    8. '.cost' → logprob: -18.788042068481445
    9. ')' → logprob: -19.288042068481445
    10. '
' → logprob: -19.913042068481445

Token 356: '_ic' (ID: 79605)
  Prédit: '_ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ic' → logprob: -0.0002353640884393826
    2. '_only' → logprob: -8.750235557556152
    3. 'ic' → logprob: -9.500235557556152
    4. 'only' → logprob: -14.500235557556152
    5. '_IC' → logprob: -15.500235557556152
    6. '_i' → logprob: -15.875235557556152
    7. '_card' → logprob: -16.000234603881836
    8. ')' → logprob: -16.125234603881836
    9. ' ic' → logprob: -16.375234603881836
    10. '
' → logprob: -16.625234603881836

Token 357: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. ')
' → logprob: -11.500012397766113
    3. ' )' → logprob: -13.375012397766113
    4. '）' → logprob: -16.250011444091797
    5. ')i' → logprob: -17.250011444091797
    6. '[i' → logprob: -17.375011444091797
    7. ')
' → logprob: -17.500011444091797
    8. ')

' → logprob: -17.875011444091797
    9. ')}' → logprob: -18.125011444091797
    10. '))' → logprob: -18.375011444091797

Token 358: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.0
    3. '
' → logprob: -16.5
    4. '```' → logprob: -18.75
    5. '#print' → logprob: -20.125
    6. 'pr' → logprob: -20.25
    7. '(print' → logprob: -20.75
    8. '.print' → logprob: -22.25
    9. '-print' → logprob: -22.25
    10. '
' → logprob: -22.25

Token 359: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1602296084165573
    2. '(total' → logprob: -1.9102295637130737
    3. '()' → logprob: -13.035229682922363
    4. '('' → logprob: -14.285229682922363
    5. ' (' → logprob: -14.410229682922363
    6. '("("' → logprob: -14.535229682922363
    7. '(
' → logprob: -14.910229682922363
    8. '(

' → logprob: -15.035229682922363
    9. 'total' → logprob: -15.285229682922363
    10. '(`' → logprob: -15.660229682922363

Token 360: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -9.088346359931165e-07
    2. 't' → logprob: -14.750000953674316
    3. 'cost' → logprob: -15.000000953674316
    4. '_' → logprob: -16.375
    5. '_c' → logprob: -17.75
    6. '_price' → logprob: -18.25
    7. '_COST' → logprob: -18.5
    8. '_code' → logprob: -18.75
    9. '_t' → logprob: -19.0
    10. ' _' → logprob: -19.125

Token 361: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ' )' → logprob: -13.000006675720215
    3. '()' → logprob: -13.125006675720215
    4. '(' → logprob: -13.500006675720215
    5. '())' → logprob: -14.250006675720215
    6. '```' → logprob: -15.875006675720215
    7. ')
' → logprob: -16.2500057220459
    8. '*' → logprob: -16.7500057220459
    9. '+' → logprob: -17.3750057220459
    10. '),' → logprob: -18.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 359
Tokens correctement prédits (1ère position, stricte): 130
Tokens correctement prédits (1ère position, avec adaptation): 136
Tokens correctement prédits (top 10): 273
Précision stricte (1ère position): 36.21%
Précision adaptée (1ère position): 37.88%
Précision (top 10): 76.04%
================================================================================
