================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def find(par, x):
    while par[x] != x:
        par[x] = par[par[x]]
        x = par[x]
    return x

def union(par, rank, x, y):
    x = find(par, x)
    y = find(par, y)
    if x == y:
        return False
    if rank[x] < rank[y]:
        par[x] = y
    else:
        par[y] = x
        if rank[x] == rank[y]:
            rank[x] += 1
    return True

def main():
    input = sys.stdin.readline
    while True:
        n,m,k= map(int, input().split())
        if n == 0 and m == 0 and k == 0:
            break
        edges = []
        for _ in range(m):
            u,v,w,l = input().split()
            u = int(u)
            v = int(v)
            w = int(w)
            # store edges with company info and cost
            # company A will be flagged as 0, company B as 1 to ease counting
            comp = 0 if l == 'A' else 1
            edges.append((w, comp, u, v))
        # We want to pick exactly k edges from A, and n-1-k edges from B
        # There may be several MSTs varying in chosen edges from A and B
        # Strategy: binary search the penalty on using A edges (or use DP)
        # We'll use binary search on an auxiliary variable x:
        # adjust cost = w + x if company is A else = w
        # For different x, MST picks different number of edges from A
        # For each x, MST can be found and we know the count of A edges
        # We search x so that MST has k edges from A.
        # Then compute the original cost (not adjusted)
        
        left, right = -10000, 10000
        ans = -1
        
        def mst(x):
            # adjust cost: w + x if A, w if B
            adj_edges = []
            for w, comp, u, v in edges:
                cw = w + x if comp == 0 else w
                adj_edges.append((cw, w, comp, u, v))
            adj_edges.sort(key=lambda e: e[0])
            par = [i for i in range(n+1)]
            rank = [0]*(n+1)
            countA = 0
            total_orig = 0
            num = 0
            for cw, w_orig, comp, u, v in adj_edges:
                if union(par, rank, u, v):
                    num += 1
                    total_orig += w_orig
                    if comp == 0:
                        countA += 1
                    if num == n-1:
                        break
            if num < n-1:
                return None,None
            return countA, total_orig
        
        # binary search to find if there's a MST with k A edges
        for _ in range(50):
            mid = (left+right)/2
            cA, cost = mst(mid)
            if cA is None:
                # not spanning tree, remove too small mid
                left = mid
                continue
            if cA < k:
                right = mid
            else:
                left = mid
        
        # after binary search left ~= right, try both ends around left to find best
        candidates = []
        for testX in [left, right, (left+right)/2]:
            cA, cost = mst(testX)
            if cA == k and cost is not None:
                candidates.append(cost)
        if candidates:
            ans = min(candidates)
        print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6406725645065308
    2. '.' → logprob: -0.8906725645065308
    3. 'import' → logprob: -4.01567268371582
    4. 'newline' → logprob: -4.26567268371582
    5. '\' → logprob: -4.76567268371582
    6. '<|end|>' → logprob: -5.01567268371582
    7. '```' → logprob: -5.39067268371582
    8. '
' → logprob: -5.76567268371582
    9. '<|end|>' → logprob: -6.51567268371582
    10. '' → logprob: -6.51567268371582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.075269341468811
    2. '_sys' → logprob: -1.575269341468811
    3. '_trace' → logprob: -2.4502692222595215
    4. 'sys' → logprob: -2.8252692222595215
    5. 's' → logprob: -3.0752692222595215
    6. 'trace' → logprob: -3.4502692222595215
    7. '_set' → logprob: -3.5752692222595215
    8. 'attr' → logprob: -4.0752692222595215
    9. '_default' → logprob: -4.2002692222595215
    10. 'set' → logprob: -4.2002692222595215

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003742952598258853
    2. 'ursive' → logprob: -6.3787431716918945
    3. 'limit' → logprob: -7.0037431716918945
    4. 'ur' → logprob: -7.5037431716918945
    5. 'urse' → logprob: -9.253743171691895
    6. '_limit' → logprob: -9.628743171691895
    7. 'urs' → logprob: -9.628743171691895
    8. 'ut' → logprob: -9.753743171691895
    9. 'u' → logprob: -10.003743171691895
    10. 't' → logprob: -10.128743171691895

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.48526206612586975
    2. 'limit' → logprob: -0.9852620363235474
    3. '_depth' → logprob: -4.610261917114258
    4. 'depth' → logprob: -7.485261917114258
    5. '_' → logprob: -8.485261917114258
    6. '_rate' → logprob: -10.110261917114258
    7. 'lim' → logprob: -10.235261917114258
    8. '(' → logprob: -10.485261917114258
    9. '_factor' → logprob: -10.485261917114258
    10. '_stack' → logprob: -10.735261917114258

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4259644558478612e-05
    2. ' (' → logprob: -11.875014305114746
    3. '(
' → logprob: -12.375014305114746
    4. '(

' → logprob: -13.250014305114746
    5. '("("' → logprob: -14.750014305114746
    6. '((' → logprob: -14.875014305114746
    7. '('' → logprob: -15.750014305114746
    8. '(.' → logprob: -16.87501335144043
    9. '```' → logprob: -17.00001335144043
    10. '(None' → logprob: -17.12501335144043

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20221766829490662
    2. '100' → logprob: -1.702217698097229
    3. ' ' → logprob: -7.5772175788879395
    4. '300' → logprob: -9.077218055725098
    5. '500' → logprob: -9.202218055725098
    6. '999' → logprob: -10.702218055725098
    7. '1' → logprob: -11.202218055725098
    8. '150' → logprob: -11.327218055725098
    9. '200' → logprob: -11.577218055725098
    10. '  ' → logprob: -12.077218055725098

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08597567677497864
    2. '00' → logprob: -2.7109756469726562
    3. '000' → logprob: -4.335975646972656
    4. '4' → logprob: -5.960975646972656
    5. '6' → logprob: -9.335975646972656
    6. '2' → logprob: -9.835975646972656
    7. '3' → logprob: -9.835975646972656
    8. ')' → logprob: -10.710975646972656
    9. '5' → logprob: -11.710975646972656
    10. '```' → logprob: -11.710975646972656

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.37501335144043

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00548038724809885
    2. '
' → logprob: -5.8804802894592285
    3. '```' → logprob: -6.7554802894592285
    4. '\' → logprob: -7.3804802894592285
    5. '

' → logprob: -7.8804802894592285
    6. '
' → logprob: -8.630480766296387
    7. '\n' → logprob: -9.255480766296387
    8. 'import' → logprob: -10.380480766296387
    9. '`' → logprob: -10.505480766296387
    10. 'class' → logprob: -10.505480766296387

Token 14: ' find' (ID: 1646)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.0553218349814415
    2. ' dfs' → logprob: -3.1803219318389893
    3. ' ' → logprob: -5.18032169342041
    4. ' factor' → logprob: -5.80532169342041
    5. ' fibonacci' → logprob: -6.05532169342041
    6. ' f' → logprob: -7.55532169342041
    7. ' space' → logprob: -9.05532169342041
    8. ' solve' → logprob: -9.18032169342041
    9. ' fib' → logprob: -9.68032169342041
    10. ' main' → logprob: -9.68032169342041

Token 15: '(par' (ID: 34455)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005318311974406242
    2. '_max' → logprob: -5.7553181648254395
    3. ' _' → logprob: -6.7553181648254395
    4. '_depth' → logprob: -9.130318641662598
    5. '_sub' → logprob: -9.505318641662598
    6. '_a' → logprob: -9.755318641662598
    7. '_parent' → logprob: -9.880318641662598
    8. '_l' → logprob: -9.880318641662598
    9. '_div' → logprob: -10.380318641662598
    10. '(_' → logprob: -10.505318641662598

Token 16: ',' (ID: 11)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0055414470843970776
    2. 't' → logprob: -5.2555413246154785
    3. 'ents' → logprob: -8.380541801452637
    4. ')' → logprob: -9.630541801452637
    5. 'e' → logprob: -12.505541801452637
    6. ',' → logprob: -12.755541801452637
    7. '):' → logprob: -14.005541801452637
    8. ')**' → logprob: -14.130541801452637
    9. ')t' → logprob: -14.255541801452637
    10. 'en' → logprob: -14.255541801452637

Token 17: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1118552684783936
    2. ' x' → logprob: -1.1118552684783936
    3. 'a' → logprob: -1.7368552684783936
    4. ' a' → logprob: -2.3618552684783936
    5. 'i' → logprob: -4.361855506896973
    6. ' u' → logprob: -4.361855506896973
    7. ' node' → logprob: -4.736855506896973
    8. ' i' → logprob: -4.861855506896973
    9. ' v' → logprob: -5.111855506896973
    10. 'u' → logprob: -5.111855506896973

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005077573587186635
    2. ')' → logprob: -7.625507831573486
    3. ' ):' → logprob: -11.625507354736328
    4. '):
' → logprob: -12.000507354736328
    5. ',' → logprob: -12.625507354736328
    6. ':' → logprob: -14.500507354736328
    7. '):
' → logprob: -15.500507354736328
    8. ')：' → logprob: -15.625507354736328
    9. ']:' → logprob: -16.500507354736328
    10. '),' → logprob: -16.500507354736328

Token 19: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.565647542476654
    2. ':' → logprob: -1.1906476020812988
    3. ' :' → logprob: -2.315647602081299
    4. '   ' → logprob: -4.440647602081299
    5. ' ):' → logprob: -4.940647602081299
    6. ')' → logprob: -5.690647602081299
    7. ',' → logprob: -6.190647602081299
    8. '):
' → logprob: -6.565647602081299
    9. '[' → logprob: -6.690647602081299
    10. ' :
' → logprob: -7.690647602081299

Token 20: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05374348908662796
    2. 'if' → logprob: -3.303743600845337
    3. '   ' → logprob: -4.303743362426758
    4. ' while' → logprob: -7.053743362426758
    5. ' :' → logprob: -7.553743362426758
    6. ' return' → logprob: -8.928743362426758
    7. '    ' → logprob: -8.928743362426758
    8. ':' → logprob: -9.553743362426758
    9. '[' → logprob: -9.553743362426758
    10. ' ' → logprob: -9.678743362426758

Token 21: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.06201350316405296
    2. 'par' → logprob: -2.8120133876800537
    3. '	par' → logprob: -10.937013626098633
    4. '(par' → logprob: -11.187013626098633
    5. 'x' → logprob: -11.812013626098633
    6. ' x' → logprob: -12.187013626098633
    7. ' ' → logprob: -14.187013626098633
    8. '   ' → logprob: -15.562013626098633
    9. ' ' → logprob: -15.812013626098633
    10. ' not' → logprob: -15.812013626098633

Token 22: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.87500286102295
    3. 'x' → logprob: -14.62500286102295
    4. '```' → logprob: -17.125003814697266
    5. '\[' → logprob: -17.375003814697266
    6. '[parent' → logprob: -17.750003814697266
    7. ' [' → logprob: -17.750003814697266
    8. '[i' → logprob: -18.375003814697266
    9. '[
' → logprob: -18.375003814697266
    10. '(x' → logprob: -18.375003814697266

Token 23: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0068586356937885284
    2. ']!=' → logprob: -5.006858825683594
    3. '[' → logprob: -9.131858825683594
    4. '[x' → logprob: -10.381858825683594
    5. 'x' → logprob: -13.006858825683594
    6. '!=' → logprob: -14.381858825683594
    7. ')!=' → logprob: -15.631858825683594
    8. ' ]' → logprob: -16.006858825683594
    9. ']!' → logprob: -16.006858825683594
    10. '][' → logprob: -16.381858825683594

Token 24: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.05286869406700134
    2. ' !=' → logprob: -3.177868604660034
    3. ']!=' → logprob: -4.802868843078613
    4. ')!=' → logprob: -7.302868843078613
    5. '!=-' → logprob: -7.552868843078613
    6. '[' → logprob: -8.552868843078613
    7. 'x' → logprob: -9.427868843078613
    8. '()!=' → logprob: -9.677868843078613
    9. ']' → logprob: -10.302868843078613
    10. ')' → logprob: -11.052868843078613

Token 25: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010329303331673145
    2. ' x' → logprob: -6.876032829284668
    3. '	x' → logprob: -16.126033782958984
    4. ')x' → logprob: -17.251033782958984
    5. '-' → logprob: -17.501033782958984
    6. ' ' → logprob: -17.626033782958984
    7. '   ' → logprob: -17.751033782958984
    8. ' -' → logprob: -18.501033782958984
    9. '>x' → logprob: -18.626033782958984
    10. '<x' → logprob: -19.001033782958984

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007734165410511196
    2. ':
' → logprob: -7.8757734298706055
    3. ' :' → logprob: -8.375773429870605
    4. '):' → logprob: -9.500773429870605
    5. ':x' → logprob: -9.875773429870605
    6. '   ' → logprob: -11.500773429870605
    7. ',' → logprob: -11.500773429870605
    8. 'x' → logprob: -12.750773429870605
    9. ':return' → logprob: -13.000773429870605
    10. ' and' → logprob: -13.250773429870605

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003695801133289933
    2. ' x' → logprob: -5.878695964813232
    3. 'x' → logprob: -7.628695964813232
    4. '   ' → logprob: -8.128695487976074
    5. '[' → logprob: -11.253695487976074
    6. ':' → logprob: -11.253695487976074
    7. '\n' → logprob: -11.503695487976074
    8. ',' → logprob: -11.503695487976074
    9. '```' → logprob: -11.503695487976074
    10. '        
' → logprob: -12.003695487976074

Token 28: ' par' (ID: 686)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.39377766847610474
    2. 'x' → logprob: -1.14377760887146
    3. '       ' → logprob: -5.018777847290039
    4. ' par' → logprob: -8.643777847290039
    5. '   ' → logprob: -10.018777847290039
    6. 'par' (adapté à ' par') → logprob: -10.268777847290039
    7. '```' → logprob: -11.893777847290039
    8. '	x' → logprob: -12.393777847290039
    9. '           ' → logprob: -13.893777847290039
    10. ' ' → logprob: -14.018777847290039

Token 29: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0004984631086699665
    2. '[' → logprob: -8.25049877166748
    3. 'x' → logprob: -8.50049877166748
    4. ' =' → logprob: -11.12549877166748
    5. '=' → logprob: -11.50049877166748
    6. ']' → logprob: -13.00049877166748
    7. '	x' → logprob: -14.00049877166748
    8. '=x' → logprob: -14.00049877166748
    9. '```' → logprob: -14.12549877166748
    10. '(x' → logprob: -14.12549877166748

Token 30: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013442812487483025
    2. '=' → logprob: -6.876344203948975
    3. ')' → logprob: -8.751344680786133
    4. ']=' → logprob: -9.251344680786133
    5. ' =' → logprob: -10.001344680786133
    6. ' ]' → logprob: -11.501344680786133
    7. '[' → logprob: -14.251344680786133
    8. ' ' → logprob: -15.251344680786133
    9. '],' → logprob: -15.501344680786133
    10. '   ' → logprob: -16.001344680786133

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868727385997772
    2. '=' → logprob: -1.1368727684020996
    3. '＝' → logprob: -13.761872291564941
    4. ' ' → logprob: -15.011872291564941
    5. ',' → logprob: -16.636873245239258
    6. ')' → logprob: -16.636873245239258
    7. '[' → logprob: -16.886873245239258
    8. '=

' → logprob: -17.011873245239258
    9. '=sys' → logprob: -17.261873245239258
    10. ']' → logprob: -17.636873245239258

Token 32: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6931514739990234
    2. 'par' → logprob: -0.6931514739990234
    3. '	par' → logprob: -12.693151473999023
    4. '(par' → logprob: -13.943151473999023
    5. 'find' → logprob: -15.818151473999023
    6. ' find' → logprob: -16.068151473999023
    7. ' ' → logprob: -17.193151473999023
    8. ' ' → logprob: -17.443151473999023
    9. 'paren' → logprob: -17.818151473999023
    10. 'ar' → logprob: -18.193151473999023

Token 33: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001468067930545658
    2. 'par' → logprob: -8.875146865844727
    3. '[x' → logprob: -12.125146865844727
    4. '[parent' → logprob: -14.500146865844727
    5. ' par' → logprob: -15.125146865844727
    6. '	par' → logprob: -15.500146865844727
    7. '(par' → logprob: -16.125146865844727
    8. '```' → logprob: -16.250146865844727
    9. '[
' → logprob: -16.375146865844727
    10. 'x' → logprob: -16.750146865844727

Token 34: 'par' (ID: 796)
  Prédit: 'par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.003438157495111227
    2. '[' → logprob: -5.7534379959106445
    3. 'x' → logprob: -8.378437995910645
    4. ' par' → logprob: -10.503437995910645
    5. '(par' → logprob: -13.378437995910645
    6. '[x' → logprob: -14.253437995910645
    7. '	par' → logprob: -14.378437995910645
    8. 'paren' → logprob: -15.128437995910645
    9. '[parent' → logprob: -16.25343894958496
    10. ']' → logprob: -17.25343894958496

Token 35: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00542383873835206
    2. 'x' → logprob: -5.2554240226745605
    3. '[' → logprob: -9.005423545837402
    4. ']' → logprob: -9.880423545837402
    5. ' x' → logprob: -11.630423545837402
    6. '][' → logprob: -12.505423545837402
    7. '(x' → logprob: -13.755423545837402
    8. '[
' → logprob: -14.380423545837402
    9. '{x' → logprob: -14.380423545837402
    10. '```' → logprob: -14.880423545837402

Token 36: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013442812487483025
    2. ']]' → logprob: -6.626344203948975
    3. ']
' → logprob: -11.376344680786133
    4. ' ]' → logprob: -12.501344680786133
    5. ']
' → logprob: -14.126344680786133
    6. ')]' → logprob: -14.126344680786133
    7. ']

' → logprob: -15.251344680786133
    8. ']]]' → logprob: -15.251344680786133
    9. '])' → logprob: -15.501344680786133
    10. ']}' → logprob: -15.501344680786133

Token 37: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.701126217842102
    2. 'x' → logprob: -1.326126217842102
    3. '       ' → logprob: -1.451126217842102
    4. '   ' → logprob: -5.5761260986328125
    5. '	x' → logprob: -8.826126098632812
    6. ',x' → logprob: -10.326126098632812
    7. ')x' → logprob: -10.576126098632812
    8. '           ' → logprob: -10.826126098632812
    9. '[x' → logprob: -10.951126098632812
    10. '(x' → logprob: -10.951126098632812

Token 38: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.01416798122227192
    2. ' x' → logprob: -4.264167785644531
    3. '       ' → logprob: -12.514167785644531
    4. '   ' → logprob: -14.139167785644531
    5. '	x' → logprob: -16.76416778564453
    6. ')x' → logprob: -19.26416778564453
    7. ' ' → logprob: -19.51416778564453
    8. '```' → logprob: -20.76416778564453
    9. '           ' → logprob: -21.51416778564453
    10. '  ' → logprob: -21.63916778564453

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283209919929504
    2. '=' → logprob: -2.2378320693969727
    3. ' ' → logprob: -12.237832069396973
    4. '[' → logprob: -13.487832069396973
    5. ' =
' → logprob: -13.862832069396973
    6. ']' → logprob: -14.862832069396973
    7. ' +=' → logprob: -14.987832069396973
    8. ')' → logprob: -15.112832069396973
    9. ' .=' → logprob: -15.612832069396973
    10. '```' → logprob: -15.612832069396973

Token 40: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.47408443689346313
    2. ' par' → logprob: -0.9740844368934631
    3. '	par' → logprob: -12.349084854125977
    4. '(par' → logprob: -13.349084854125977
    5. '   ' → logprob: -15.349084854125977
    6. ' x' → logprob: -15.599084854125977
    7. '_par' → logprob: -15.599084854125977
    8. 'x' → logprob: -15.599084854125977
    9. ' ' → logprob: -15.849084854125977
    10. ' ' → logprob: -15.974084854125977

Token 41: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.037835580878891e-05
    2. 'x' → logprob: -10.12505054473877
    3. '[' → logprob: -11.50005054473877
    4. ' x' → logprob: -16.500049591064453
    5. '(x' → logprob: -16.875049591064453
    6. '```' → logprob: -17.250049591064453
    7. ' [' → logprob: -18.250049591064453
    8. '{x' → logprob: -18.250049591064453
    9. '	x' → logprob: -18.500049591064453
    10. ')x' → logprob: -19.125049591064453

Token 42: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.048612575978040695
    2. ')' → logprob: -3.048612594604492
    3. ']
' → logprob: -11.423612594604492
    4. ')]' → logprob: -12.173612594604492
    5. '}' → logprob: -13.423612594604492
    6. '])' → logprob: -13.673612594604492
    7. ')
' → logprob: -13.798612594604492
    8. ']

' → logprob: -13.798612594604492
    9. '[' → logprob: -13.798612594604492
    10. ' ]' → logprob: -14.048612594604492

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013202388072386384
    2. 'return' → logprob: -7.1263203620910645
    3. ' return' → logprob: -7.6263203620910645
    4. '    
' → logprob: -11.626319885253906
    5. '	return' → logprob: -12.626319885253906
    6. ':return' → logprob: -12.626319885253906
    7. '       ' → logprob: -12.751319885253906
    8. ')' → logprob: -12.751319885253906
    9. '
' → logprob: -13.626319885253906
    10. ',' → logprob: -14.001319885253906

Token 44: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17373919486999512
    2. 'return' (adapté à ' return') → logprob: -1.9237391948699951
    3. ' return' → logprob: -4.423739433288574
    4. '
' → logprob: -7.673739433288574
    5. ' ' → logprob: -8.298739433288574
    6. ':return' → logprob: -8.548739433288574
    7. '    
' → logprob: -9.048739433288574
    8. '\n' → logprob: -9.048739433288574
    9. '	return' → logprob: -9.548739433288574
    10. '  ' → logprob: -10.048739433288574

Token 45: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759411454200745
    2. ' x' → logprob: -0.8259411454200745
    3. 'par' → logprob: -14.20094108581543
    4. ' par' → logprob: -14.82594108581543
    5. ' ' → logprob: -14.95094108581543
    6. '	x' → logprob: -15.70094108581543
    7. ' ' → logprob: -16.45094108581543
    8. '(x' → logprob: -16.70094108581543
    9. 'space' → logprob: -17.57594108581543
    10. 's' → logprob: -18.07594108581543

Token 46: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33021122217178345
    2. '<|end|>' → logprob: -2.4552111625671387
    3. '
' → logprob: -2.7052111625671387
    4. '\n' → logprob: -2.9552111625671387
    5. '```' → logprob: -3.0802111625671387
    6. '

' → logprob: -4.455211162567139
    7. '\' → logprob: -4.955211162567139
    8. '    
' → logprob: -5.830211162567139
    9. '<|end|>' → logprob: -6.330211162567139
    10. '' → logprob: -6.330211162567139

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028319843113422394
    2. '
' → logprob: -6.002831935882568
    3. '```' → logprob: -8.502832412719727
    4. '

' → logprob: -9.127832412719727
    5. '\' → logprob: -11.377832412719727
    6. '    
' → logprob: -12.002832412719727
    7. '<|end|>' → logprob: -12.127832412719727
    8. ' def' → logprob: -12.377832412719727
    9. '  
' → logprob: -12.502832412719727
    10. 'par' → logprob: -12.502832412719727

Token 48: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.008834374137222767
    2. ' unite' → logprob: -5.008834362030029
    3. ' merge' → logprob: -6.633834362030029
    4. 'union' → logprob: -7.633834362030029
    5. '_union' → logprob: -9.258834838867188
    6. ' un' → logprob: -9.383834838867188
    7. ' unions' → logprob: -10.258834838867188
    8. ' find' → logprob: -10.258834838867188
    9. ' unify' → logprob: -10.758834838867188
    10. 'un' → logprob: -12.008834838867188

Token 49: '(par' (ID: 34455)
  Prédit: '(par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(par' → logprob: -0.3134108781814575
    2. '(' → logprob: -1.3134108781814575
    3. '(paren' → logprob: -8.938410758972168
    4. '_par' → logprob: -12.438410758972168
    5. '(parent' → logprob: -12.563410758972168
    6. ' (' → logprob: -12.688410758972168
    7. '(pr' → logprob: -13.438410758972168
    8. '(pa' → logprob: -13.813410758972168
    9. '(p' → logprob: -14.063410758972168
    10. '_' → logprob: -14.438410758972168

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0921942703134846e-05
    2. ' ,' → logprob: -12.12501049041748
    3. ',p' → logprob: -13.37501049041748
    4. '[' → logprob: -14.25001049041748
    5. ',parent' → logprob: -14.37501049041748
    6. ',n' → logprob: -15.12501049041748
    7. ',

' → logprob: -15.37501049041748
    8. '[],' → logprob: -15.50001049041748
    9. '‌,' → logprob: -15.75001049041748
    10. '   ' → logprob: -15.75001049041748

Token 51: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.5640067458152771
    2. 'rank' → logprob: -1.0640068054199219
    3. ' size' → logprob: -3.189006805419922
    4. 'size' → logprob: -4.314006805419922
    5. 'a' → logprob: -5.064006805419922
    6. ' x' → logprob: -5.064006805419922
    7. ' a' → logprob: -5.564006805419922
    8. 'r' → logprob: -5.939006805419922
    9. 'b' → logprob: -5.939006805419922
    10. 'x' → logprob: -6.189006805419922

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010711929644457996
    2. '):' → logprob: -9.875106811523438
    3. '   ' → logprob: -10.625106811523438
    4. ' ,' → logprob: -11.750106811523438
    5. '),' → logprob: -11.875106811523438
    6. ')' → logprob: -12.250106811523438
    7. '):
' → logprob: -13.500106811523438
    8. ',parent' → logprob: -13.750106811523438
    9. ',
' → logprob: -13.875106811523438
    10. '`,' → logprob: -14.250106811523438

Token 53: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.76531583070755
    2. 'x' → logprob: -0.89031583070755
    3. ' x' → logprob: -2.5153157711029053
    4. ' a' → logprob: -3.1403157711029053
    5. 'u' → logprob: -9.390316009521484
    6. ' u' → logprob: -10.390316009521484
    7. ')x' → logprob: -11.015316009521484
    8. ')a' → logprob: -11.015316009521484
    9. ')' → logprob: -11.515316009521484
    10. ' ' → logprob: -11.890316009521484

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.554343366995454e-05
    2. ' ,' → logprob: -9.375085830688477
    3. ',y' → logprob: -15.125085830688477
    4. '):' → logprob: -15.875085830688477
    5. '1' → logprob: -16.750085830688477
    6. '_,' → logprob: -16.875085830688477
    7. '   ' → logprob: -17.125085830688477
    8. '),' → logprob: -17.250085830688477
    9. ',x' → logprob: -17.375085830688477
    10. '‌,' → logprob: -17.375085830688477

Token 55: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132660686969757
    2. ' y' → logprob: -1.3132660388946533
    3. ' ' → logprob: -13.063265800476074
    4. '   ' → logprob: -13.688265800476074
    5. '	y' → logprob: -14.813265800476074
    6. '  ' → logprob: -15.188265800476074
    7. ' ' → logprob: -15.813265800476074
    8. '    ' → logprob: -16.18826675415039
    9. ')' → logprob: -16.56326675415039
    10. ')y' → logprob: -17.18826675415039

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.143808109802194e-05
    2. ')' → logprob: -10.250041007995605
    3. '):
' → logprob: -12.500041007995605
    4. ' ):' → logprob: -13.625041007995605
    5. ':' → logprob: -14.125041007995605
    6. ',' → logprob: -15.750041007995605
    7. '):
' → logprob: -16.500041961669922
    8. '   ' → logprob: -17.875041961669922
    9. ')：' → logprob: -18.125041961669922
    10. '():' → logprob: -18.500041961669922

Token 57: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5810585618019104
    2. '   ' → logprob: -1.2060585021972656
    3. '):' → logprob: -2.4560585021972656
    4. '):
' → logprob: -3.7060585021972656
    5. ':
' → logprob: -3.8310585021972656
    6. ')' → logprob: -5.706058502197266
    7. ',' → logprob: -6.081058502197266
    8. 'x' → logprob: -6.456058502197266
    9. 'root' → logprob: -7.331058502197266
    10. ' x' → logprob: -7.831058502197266

Token 58: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.06690914928913116
    2. ' x' → logprob: -2.816909074783325
    3. '   ' → logprob: -6.066909313201904
    4. 'root' → logprob: -6.191909313201904
    5. ' root' → logprob: -7.816909313201904
    6. 'px' → logprob: -9.066908836364746
    7. 'rx' → logprob: -10.566908836364746
    8. ' px' → logprob: -12.191908836364746
    9. ' rx' → logprob: -12.316908836364746
    10. '```' → logprob: -12.691908836364746

Token 59: ' =' (ID: 314)
  Prédit: '_root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.10651678591966629
    2. ' =' → logprob: -3.1065168380737305
    3. '_parent' → logprob: -3.9815168380737305
    4. 'root' → logprob: -3.9815168380737305
    5. '_' → logprob: -4.7315168380737305
    6. '=' → logprob: -4.8565168380737305
    7. '_par' → logprob: -6.9815168380737305
    8. '_=' → logprob: -8.23151683807373
    9. '_,' → logprob: -8.48151683807373
    10. '_rep' → logprob: -8.73151683807373

Token 60: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.20141752064228058
    2. ' find' → logprob: -1.7014175653457642
    3. '(find' → logprob: -13.326417922973633
    4. '	find' → logprob: -13.701417922973633
    5. ')find' → logprob: -13.826417922973633
    6. '=find' → logprob: -15.076417922973633
    7. 'f' → logprob: -16.826417922973633
    8. '_find' → logprob: -16.951417922973633
    9. '.find' → logprob: -17.326417922973633
    10. ' ' → logprob: -18.326417922973633

Token 61: '(par' (ID: 34455)
  Prédit: '(par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(par' → logprob: -0.000681457226164639
    2. '(' → logprob: -7.625681400299072
    3. '(paren' → logprob: -8.62568187713623
    4. 'par' → logprob: -11.75068187713623
    5. ' (' → logprob: -13.25068187713623
    6. '	par' → logprob: -14.12568187713623
    7. '(
' → logprob: -14.37568187713623
    8. ' par' → logprob: -14.37568187713623
    9. '(pa' → logprob: -14.37568187713623
    10. ')' → logprob: -14.50068187713623

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.599403423024341e-05
    2. ',x' → logprob: -9.750065803527832
    3. ',y' → logprob: -11.875065803527832
    4. ' ,' → logprob: -14.500065803527832
    5. ',
' → logprob: -17.12506675720215
    6. ',

' → logprob: -17.75006675720215
    7. '，' → logprob: -18.12506675720215
    8. '`,' → logprob: -18.25006675720215
    9. ')' → logprob: -18.37506675720215
    10. '‌,' → logprob: -18.62506675720215

Token 63: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04300502687692642
    2. ' x' → logprob: -3.1680049896240234
    3. ')' → logprob: -12.418004989624023
    4. ')x' → logprob: -13.668004989624023
    5. '(x' → logprob: -15.293004989624023
    6. ' ' → logprob: -15.543004989624023
    7. '	x' → logprob: -15.668004989624023
    8. ' )' → logprob: -17.543004989624023
    9. ',x' → logprob: -18.293004989624023
    10. 'y' → logprob: -18.418004989624023

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4744698405265808
    2. ')
' → logprob: -0.9744698405265808
    3. ')
' → logprob: -7.8494696617126465
    4. ')

' → logprob: -13.599470138549805
    5. ' )
' → logprob: -13.849470138549805
    6. ' )' → logprob: -14.974470138549805
    7. ')y' → logprob: -15.724470138549805
    8. '),' → logprob: -17.099470138549805
    9. ')x' → logprob: -17.474470138549805
    10. ')#' → logprob: -17.724470138549805

Token 65: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10039342194795609
    2. ' y' → logprob: -2.350393533706665
    3. '   ' → logprob: -8.850393295288086
    4. '
' → logprob: -11.350393295288086
    5. '	y' → logprob: -11.850393295288086
    6. ',y' → logprob: -11.975393295288086
    7. ' if' → logprob: -12.225393295288086
    8. ' 
' → logprob: -12.600393295288086
    9. 'if' → logprob: -12.850393295288086
    10. ';y' → logprob: -13.100393295288086

Token 66: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.004078639671206474
    2. ' y' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.129077911376953
    4. '	y' → logprob: -17.129077911376953
    5. '    
' → logprob: -19.004077911376953
    6. '    ' → logprob: -19.004077911376953
    7. '  ' → logprob: -19.129077911376953
    8. ' ' → logprob: -19.254077911376953
    9. ',y' → logprob: -19.879077911376953
    10. ''y' → logprob: -19.879077911376953

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06414024531841278
    2. '=' → logprob: -2.8141403198242188
    3. '<|end|>' → logprob: -6.564140319824219
    4. ')' → logprob: -7.314140319824219
    5. '<|end|>' → logprob: -10.689140319824219
    6. ' ' → logprob: -11.064140319824219
    7. ')=' → logprob: -11.564140319824219
    8. '   ' → logprob: -11.564140319824219
    9. ' =
' → logprob: -11.939140319824219
    10. ' =)' → logprob: -12.064140319824219

Token 68: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.008628644980490208
    2. ' find' → logprob: -4.758628845214844
    3. '(find' → logprob: -11.383628845214844
    4. 'y' → logprob: -14.008628845214844
    5. '=find' → logprob: -14.258628845214844
    6. '	find' → logprob: -14.508628845214844
    7. '.find' → logprob: -15.258628845214844
    8. ' y' → logprob: -15.758628845214844
    9. 'par' → logprob: -16.258628845214844
    10. ')find' → logprob: -16.258628845214844

Token 69: '(par' (ID: 34455)
  Prédit: '(par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(par' → logprob: -1.8908587662735954e-05
    2. '(paren' → logprob: -11.500019073486328
    3. '(' → logprob: -12.125019073486328
    4. 'par' → logprob: -12.750019073486328
    5. ')' → logprob: -16.250019073486328
    6. ' (' → logprob: -16.375019073486328
    7. '	par' → logprob: -16.375019073486328
    8. '(pr' → logprob: -16.875019073486328
    9. '(
' → logprob: -16.875019073486328
    10. '/par' → logprob: -17.125019073486328

Token 70: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013500562636181712
    2. ')y' → logprob: -9.87513542175293
    3. ')
' → logprob: -10.25013542175293
    4. ',' → logprob: -10.25013542175293
    5. ' )' → logprob: -12.87513542175293
    6. ')x' → logprob: -13.25013542175293
    7. '<|end|>' → logprob: -13.87513542175293
    8. '),' → logprob: -14.00013542175293
    9. '[y' → logprob: -14.25013542175293
    10. ' y' → logprob: -14.25013542175293

Token 71: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07890631258487701
    2. ' y' → logprob: -2.578906297683716
    3. 'x' → logprob: -11.453906059265137
    4. ')' → logprob: -13.078906059265137
    5. ')y' → logprob: -13.953906059265137
    6. '   ' → logprob: -14.078906059265137
    7. 'par' → logprob: -14.203906059265137
    8. ' ' → logprob: -14.453906059265137
    9. ' par' → logprob: -14.828906059265137
    10. ' x' → logprob: -15.453906059265137

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001998819876462221
    2. ')
' → logprob: -6.2519989013671875
    3. '   ' → logprob: -9.751998901367188
    4. ')return' → logprob: -12.876998901367188
    5. '<|end|>' → logprob: -13.126998901367188
    6. ')
' → logprob: -13.251998901367188
    7. ')**' → logprob: -14.376998901367188
    8. '):
' → logprob: -14.376998901367188
    9. '):' → logprob: -14.501998901367188
    10. ' )' → logprob: -14.501998901367188

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01630297303199768
    2. '
' → logprob: -4.891303062438965
    3. '<|end|>' → logprob: -5.641303062438965
    4. ' if' → logprob: -5.891303062438965
    5. 'if' → logprob: -6.891303062438965
    6. '    
' → logprob: -7.891303062438965
    7. ' ' → logprob: -8.266303062438965
    8. '```' → logprob: -8.641303062438965
    9. ':
' → logprob: -9.641303062438965
    10. ':' → logprob: -9.641303062438965

Token 74: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.00025514091248624027
    2. 'x' → logprob: -8.375255584716797
    3. ' rank' → logprob: -11.375255584716797
    4. ' ' → logprob: -11.625255584716797
    5. 'rank' → logprob: -13.250255584716797
    6. '	x' → logprob: -13.375255584716797
    7. ' ' → logprob: -14.250255584716797
    8. '  ' → logprob: -16.000255584716797
    9. '_rank' → logprob: -17.375255584716797
    10. ' ranks' → logprob: -17.625255584716797

Token 76: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2274450808763504
    2. '!=' → logprob: -2.227445125579834
    3. ' ==' → logprob: -2.602445125579834
    4. '==' → logprob: -3.852445125579834
    5. '=' → logprob: -9.102444648742676
    6. ' ' → logprob: -9.227444648742676
    7. ' ' → logprob: -10.602444648742676
    8. '_' → logprob: -11.352444648742676
    9. '<|end|>' → logprob: -11.852444648742676
    10. '[' → logprob: -11.977444648742676

Token 77: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019295861711725593
    2. ' y' → logprob: -6.251929759979248
    3. '	y' → logprob: -13.87692928314209
    4. ' ' → logprob: -17.501930236816406
    5. ''y' → logprob: -17.751930236816406
    6. ')y' → logprob: -18.751930236816406
    7. '‘y' → logprob: -19.251930236816406
    8. '_y' → logprob: -19.251930236816406
    9. '<|end|>' → logprob: -19.251930236816406
    10. '  ' → logprob: -19.501930236816406

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018155796453356743
    2. ':return' → logprob: -4.018155574798584
    3. ':
' → logprob: -12.768156051635742
    4. ' :' → logprob: -13.268156051635742
    5. 'return' → logprob: -14.143156051635742
    6. ' return' → logprob: -14.893156051635742
    7. '):' → logprob: -15.768156051635742
    8. ':**' → logprob: -17.393156051635742
    9. '   ' → logprob: -17.643156051635742
    10. ')return' → logprob: -17.893156051635742

Token 79: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.644585132598877
    2. '       ' → logprob: -0.894585132598877
    3. '   ' → logprob: -3.519585132598877
    4. ':return' → logprob: -3.519585132598877
    5. ' return' → logprob: -5.144585132598877
    6. '    ' → logprob: -7.894585132598877
    7. ':
' → logprob: -8.519584655761719
    8. 'return' → logprob: -8.519584655761719
    9. '\n' → logprob: -8.769584655761719
    10. '	return' → logprob: -9.144584655761719

Token 80: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0667848214507103
    2. '   ' → logprob: -3.1917848587036133
    3. 'return' (adapté à ' return') → logprob: -4.066784858703613
    4. '       ' → logprob: -5.441784858703613
    5. '
' → logprob: -6.941784858703613
    6. ':return' → logprob: -7.691784858703613
    7. '    ' → logprob: -8.316784858703613
    8. ' 
' → logprob: -8.816784858703613
    9. '	return' → logprob: -8.941784858703613
    10. '    
' → logprob: -10.566784858703613

Token 81: ' False' (ID: 7983)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019192572683095932
    2. '    
' → logprob: -5.144192695617676
    3. ' 
' → logprob: -5.644192695617676
    4. 'None' → logprob: -6.394192695617676
    5. ' None' → logprob: -6.394192695617676
    6. ' True' → logprob: -6.394192695617676
    7. '  
' → logprob: -6.769192695617676
    8. 'False' → logprob: -7.019192695617676
    9. 'True' → logprob: -7.394192695617676
    10. ' False' → logprob: -7.644192695617676

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.833519697189331
    2. '   ' → logprob: -0.833519697189331
    3. '<|end|>' → logprob: -2.208519697189331
    4. '    
' → logprob: -4.08351993560791
    5. '  
' → logprob: -6.83351993560791
    6. '```' → logprob: -7.20851993560791
    7. '<|end|>' → logprob: -7.33351993560791
    8. '\n' → logprob: -7.83351993560791
    9. '  ' → logprob: -7.95851993560791
    10. '   
' → logprob: -8.08351993560791

Token 83: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6104562282562256
    2. '<|end|>' → logprob: -1.3604562282562256
    3. '   ' → logprob: -1.8604562282562256
    4. '    
' → logprob: -3.4854562282562256
    5. '  
' → logprob: -4.860456466674805
    6. '   
' → logprob: -6.735456466674805
    7. '<|end|>' → logprob: -6.735456466674805
    8. '```' → logprob: -6.985456466674805
    9. 'newline' → logprob: -7.110456466674805
    10. '\n' → logprob: -7.485456466674805

Token 84: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19946815073490143
    2. '<|end|>' → logprob: -2.4494681358337402
    3. '   ' → logprob: -2.8244681358337402
    4. '    
' → logprob: -3.8244681358337402
    5. '  
' → logprob: -5.57446813583374
    6. '```' → logprob: -6.19946813583374
    7. '   
' → logprob: -6.32446813583374
    8. ' 
' → logprob: -6.57446813583374
    9. '<|end|>' → logprob: -6.69946813583374
    10. '\n' → logprob: -6.82446813583374

Token 85: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.00193636619951576
    2. 'rank' → logprob: -6.251936435699463
    3. '(rank' → logprob: -11.876935958862305
    4. ' ranks' → logprob: -14.751935958862305
    5. '_rank' → logprob: -14.876935958862305
    6. '.rank' → logprob: -15.751935958862305
    7. 'Rank' → logprob: -17.876935958862305
    8. ' ranked' → logprob: -19.251935958862305
    9. ' ' → logprob: -19.376935958862305
    10. ' ran' → logprob: -19.876935958862305

Token 86: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0011712945997714996
    2. '[' → logprob: -6.751171112060547
    3. '[
' → logprob: -15.001171112060547
    4. 'x' → logprob: -15.001171112060547
    5. '[y' → logprob: -15.376171112060547
    6. ' [' → logprob: -16.001171112060547
    7. ' x' → logprob: -17.126171112060547
    8. '(x' → logprob: -18.001171112060547
    9. '```' → logprob: -18.751171112060547
    10. '[a' → logprob: -18.876171112060547

Token 87: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12580271065235138
    2. '<' → logprob: -3.000802755355835
    3. ']<' → logprob: -3.000802755355835
    4. '[' → logprob: -4.375802516937256
    5. ' <' → logprob: -5.250802516937256
    6. '>' → logprob: -7.250802516937256
    7. ']>' → logprob: -10.250802993774414
    8. ')<' → logprob: -10.250802993774414
    9. ')' → logprob: -10.500802993774414
    10. '}' → logprob: -10.750802993774414

Token 88: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5234504342079163
    2. '<' → logprob: -0.8984504342079163
    3. '[' → logprob: -8.14845085144043
    4. '>' → logprob: -11.02345085144043
    5. '<x' → logprob: -12.39845085144043
    6. '<int' → logprob: -12.64845085144043
    7. ' ' → logprob: -12.77345085144043
    8. ' >' → logprob: -12.89845085144043
    9. '<size' → logprob: -13.14845085144043
    10. '<class' → logprob: -14.14845085144043

Token 89: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.2519318461418152
    2. 'rank' → logprob: -1.50193190574646
    3. '(rank' → logprob: -13.001932144165039
    4. ' ' → logprob: -14.876932144165039
    5. '.rank' → logprob: -15.876932144165039
    6. '_rank' → logprob: -18.00193214416504
    7. ' ' → logprob: -19.62693214416504
    8. 'r' → logprob: -20.00193214416504
    9. '=' → logprob: -20.37693214416504
    10. '  ' → logprob: -20.50193214416504

Token 90: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.07529041171073914
    2. '[x' → logprob: -2.8252904415130615
    3. '[' → logprob: -4.325290203094482
    4. '[
' → logprob: -13.95029067993164
    5. 'y' → logprob: -14.07529067993164
    6. '```' → logprob: -14.57529067993164
    7. ' [' → logprob: -14.82529067993164
    8. '[q' → logprob: -15.32529067993164
    9. ']' → logprob: -15.32529067993164
    10. '[s' → logprob: -15.45029067993164

Token 91: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19328276813030243
    2. ']:' → logprob: -2.3182828426361084
    3. '):' → logprob: -2.5682828426361084
    4. ':
' → logprob: -8.818283081054688
    5. ']' → logprob: -8.818283081054688
    6. '}:' → logprob: -8.818283081054688
    7. '):
' → logprob: -9.693283081054688
    8. '>:' → logprob: -9.818283081054688
    9. ']:
' → logprob: -10.443283081054688
    10. ')' → logprob: -10.568283081054688

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6079636216163635
    2. ' par' → logprob: -1.6079635620117188
    3. ':' → logprob: -1.9829635620117188
    4. '   ' → logprob: -2.4829635620117188
    5. '<|end|>' → logprob: -4.232963562011719
    6. '	par' → logprob: -4.482963562011719
    7. ':
' → logprob: -6.357963562011719
    8. 'par' → logprob: -6.732963562011719
    9. ',' → logprob: -6.857963562011719
    10. '[' → logprob: -7.232963562011719

Token 93: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.0036574339028447866
    2. 'par' (adapté à ' par') → logprob: -5.628657341003418
    3. '	par' → logprob: -10.253657341003418
    4. ' x' → logprob: -11.878657341003418
    5. '   ' → logprob: -12.253657341003418
    6. '(par' → logprob: -12.878657341003418
    7. ',' → logprob: -12.878657341003418
    8. '_par' → logprob: -13.753657341003418
    9. ' ' → logprob: -14.003657341003418
    10. 'x' → logprob: -14.003657341003418

Token 94: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.2034493237733841
    2. '[x' → logprob: -1.7034493684768677
    3. '[' → logprob: -6.203449249267578
    4. '][' → logprob: -12.203449249267578
    5. 'y' → logprob: -12.953449249267578
    6. ']' → logprob: -13.453449249267578
    7. '```' → logprob: -13.828449249267578
    8. 'x' → logprob: -14.328449249267578
    9. ' [' → logprob: -15.078449249267578
    10. ' y' → logprob: -15.703449249267578

Token 95: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018149138486478478
    2. ']=' → logprob: -8.625181198120117
    3. ' ]' → logprob: -13.250181198120117
    4. '[' → logprob: -16.250181198120117
    5. '=' → logprob: -16.875181198120117
    6. '[y' → logprob: -17.250181198120117
    7. ']+=' → logprob: -18.250181198120117
    8. ']==' → logprob: -18.500181198120117
    9. ')' → logprob: -18.500181198120117
    10. ' =' → logprob: -18.625181198120117

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742412865161896
    2. '=' → logprob: -0.9742412567138672
    3. '=y' → logprob: -9.349241256713867
    4. ']' → logprob: -10.724241256713867
    5. '=x' → logprob: -10.849241256713867
    6. '[' → logprob: -11.224241256713867
    7. ']=' → logprob: -11.599241256713867
    8. ')' → logprob: -12.724241256713867
    9. '=s' → logprob: -12.974241256713867
    10. '=user' → logprob: -13.724241256713867

Token 97: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0031777136027812958
    2. ' y' → logprob: -5.753177642822266
    3. '	y' → logprob: -17.503177642822266
    4. ''y' → logprob: -20.878177642822266
    5. ' ' → logprob: -21.378177642822266
    6. '[y' → logprob: -21.628177642822266
    7. '   ' → logprob: -21.753177642822266
    8. ')y' → logprob: -21.878177642822266
    9. 'y's' → logprob: -22.003177642822266
    10. '‘y' → logprob: -22.378177642822266

Token 98: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4117017686367035
    2. '
' → logprob: -1.4117017984390259
    3. ' else' → logprob: -3.0367016792297363
    4. 'else' → logprob: -3.2867016792297363
    5. '<|end|>' → logprob: -5.286701679229736
    6. '	else' → logprob: -6.536701679229736
    7. '    
' → logprob: -7.036701679229736
    8. 'elif' → logprob: -8.536702156066895
    9. '\n' → logprob: -8.786702156066895
    10. '```' → logprob: -9.036702156066895

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020115643739700317
    2. 'else' → logprob: -4.645115852355957
    3. ' else' → logprob: -4.770115852355957
    4. '
' → logprob: -6.770115852355957
    5. '       ' → logprob: -8.395115852355957
    6. '	else' → logprob: -8.770115852355957
    7. '    
' → logprob: -9.020115852355957
    8. '<|end|>' → logprob: -9.395115852355957
    9. '  
' → logprob: -10.770115852355957
    10. 'elif' → logprob: -10.895115852355957

Token 100: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.11420850455760956
    2. ' else' → logprob: -2.614208459854126
    3. '   ' → logprob: -3.364208459854126
    4. '	else' → logprob: -9.114208221435547
    5. '    
' → logprob: -14.364208221435547
    6. 'elif' → logprob: -14.739208221435547
    7. '_else' → logprob: -14.739208221435547
    8. '[' → logprob: -15.239208221435547
    9. '       ' → logprob: -15.739208221435547
    10. 'e' → logprob: -15.739208221435547

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31342169642448425
    2. ':
' → logprob: -1.3134217262268066
    3. '       ' → logprob: -9.563421249389648
    4. '   ' → logprob: -10.063421249389648
    5. ':
' → logprob: -10.563421249389648
    6. ':

' → logprob: -12.438421249389648
    7. '{' → logprob: -12.688421249389648
    8. '[' → logprob: -12.688421249389648
    9. ' :
' → logprob: -12.813421249389648
    10. ' :' → logprob: -12.938421249389648

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06209809333086014
    2. ' par' → logprob: -3.1870980262756348
    3. 'par' → logprob: -4.937098026275635
    4. '   ' → logprob: -5.812098026275635
    5. '{
' → logprob: -5.812098026275635
    6. ':
' → logprob: -5.812098026275635
    7. ':' → logprob: -6.812098026275635
    8. '{' → logprob: -7.062098026275635
    9. '```' → logprob: -7.937098026275635
    10. '	par' → logprob: -8.562098503112793

Token 103: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' (adapté à ' par') → logprob: -0.007222165819257498
    2. ' par' → logprob: -5.0072221755981445
    3. '       ' → logprob: -7.7572221755981445
    4. '   ' → logprob: -10.257222175598145
    5. '	par' → logprob: -10.257222175598145
    6. '           ' → logprob: -12.007222175598145
    7. '```' → logprob: -14.382222175598145
    8. '(par' → logprob: -14.632222175598145
    9. '{
' → logprob: -14.757222175598145
    10. 'pat' → logprob: -15.507222175598145

Token 104: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.6312321753939614e-05
    2. '[x' → logprob: -10.625036239624023
    3. '[' → logprob: -11.375036239624023
    4. '   ' → logprob: -15.250036239624023
    5. 'y' → logprob: -15.875036239624023
    6. '```' → logprob: -16.500036239624023
    7. '       ' → logprob: -17.625036239624023
    8. '[
' → logprob: -17.625036239624023
    9. ' [' → logprob: -17.750036239624023
    10. '[user' → logprob: -18.625036239624023

Token 105: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39136257767677307
    2. '=' → logprob: -1.5163625478744507
    3. ']' → logprob: -2.2663626670837402
    4. ']=' → logprob: -7.39136266708374
    5. ')' → logprob: -10.391362190246582
    6. '   ' → logprob: -12.141362190246582
    7. '[' → logprob: -12.141362190246582
    8. ' ]' → logprob: -12.266362190246582
    9. ' ' → logprob: -13.516362190246582
    10. '=x' → logprob: -14.141362190246582

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861468818038702
    2. ' =' → logprob: -4.758614540100098
    3. '=s' → logprob: -17.133615493774414
    4. '=y' → logprob: -17.508615493774414
    5. '=x' → logprob: -17.508615493774414
    6. ')' → logprob: -17.883615493774414
    7. '[' → logprob: -18.258615493774414
    8. '＝' → logprob: -18.383615493774414
    9. '=os' → logprob: -18.383615493774414
    10. ']=' → logprob: -18.633615493774414

Token 107: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024756586644798517
    2. ' x' → logprob: -6.002475738525391
    3. '	x' → logprob: -19.25247573852539
    4. '[x' → logprob: -21.75247573852539
    5. ')x' → logprob: -21.75247573852539
    6. '"x' → logprob: -21.87747573852539
    7. ''x' → logprob: -22.25247573852539
    8. '   ' → logprob: -22.37747573852539
    9. '$x' → logprob: -22.62747573852539
    10. '{x' → logprob: -23.00247573852539

Token 108: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19170662760734558
    2. '   ' → logprob: -2.066706657409668
    3. 'if' → logprob: -3.316706657409668
    4. ' if' → logprob: -4.691706657409668
    5. '```' → logprob: -6.441706657409668
    6. '           ' → logprob: -8.691706657409668
    7. '        
' → logprob: -8.691706657409668
    8. '     ' → logprob: -9.566706657409668
    9. '    
' → logprob: -9.816706657409668
    10. '    ' → logprob: -9.941706657409668

Token 109: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012908781878650188
    2. 'if' → logprob: -4.637908935546875
    3. '       ' → logprob: -6.512908935546875
    4. ' if' → logprob: -6.637908935546875
    5. '```' → logprob: -8.012908935546875
    6. '    
' → logprob: -11.762908935546875
    7. ' ' → logprob: -12.637908935546875
    8. '``' → logprob: -12.762908935546875
    9. '	if' → logprob: -13.012908935546875
    10. '    ' → logprob: -13.762908935546875

Token 110: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.020425327122211456
    2. '       ' → logprob: -4.270425319671631
    3. 'rank' → logprob: -5.145425319671631
    4. ' if' → logprob: -8.395425796508789
    5. '   ' → logprob: -9.145425796508789
    6. '(rank' → logprob: -9.895425796508789
    7. '```' → logprob: -11.270425796508789
    8. '_rank' → logprob: -12.520425796508789
    9. '.rank' → logprob: -12.770425796508789
    10. '           ' → logprob: -12.895425796508789

Token 111: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.03804252669215202
    2. ' rank' → logprob: -3.2880425453186035
    3. '(rank' → logprob: -13.788042068481445
    4. '   ' → logprob: -18.788042068481445
    5. '.rank' → logprob: -19.163042068481445
    6. '_rank' → logprob: -19.413042068481445
    7. 'r' → logprob: -20.913042068481445
    8. 'Rank' → logprob: -21.413042068481445
    9. '
' → logprob: -21.913042068481445
    10. ' ' → logprob: -22.038042068481445

Token 112: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.000000953674316
    3. 'x' → logprob: -16.375001907348633
    4. '[y' → logprob: -20.125001907348633
    5. '(x' → logprob: -21.375001907348633
    6. ' [' → logprob: -21.500001907348633
    7. ' x' → logprob: -21.500001907348633
    8. '[
' → logprob: -21.625001907348633
    9. '[]' → logprob: -23.125001907348633
    10. '	x' → logprob: -23.125001907348633

Token 113: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03672810271382332
    2. ']==' → logprob: -3.9117281436920166
    3. '[' → logprob: -4.5367279052734375
    4. ' ==' → logprob: -5.5367279052734375
    5. ']' → logprob: -7.0367279052734375
    6. '[x' → logprob: -7.9117279052734375
    7. '=' → logprob: -10.036727905273438
    8. '[y' → logprob: -10.411727905273438
    9. ')==' → logprob: -10.661727905273438
    10. '[]' → logprob: -11.286727905273438

Token 114: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00018458699923940003
    2. '[' → logprob: -9.250185012817383
    3. ' ==' → logprob: -9.625185012817383
    4. ']==' → logprob: -11.375185012817383
    5. '==
' → logprob: -12.000185012817383
    6. '=' → logprob: -12.750185012817383
    7. '===' → logprob: -13.375185012817383
    8. ')==' → logprob: -16.500185012817383
    9. '()==' → logprob: -16.500185012817383
    10. '[]' → logprob: -16.750185012817383

Token 115: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.16022644937038422
    2. ' rank' → logprob: -1.9102264642715454
    3. '(rank' → logprob: -13.035226821899414
    4. ' ' → logprob: -16.035226821899414
    5. '.rank' → logprob: -17.535226821899414
    6. '   ' → logprob: -17.785226821899414
    7. '_rank' → logprob: -19.660226821899414
    8. '
' → logprob: -20.285226821899414
    9. '  ' → logprob: -20.660226821899414
    10. 'r' → logprob: -21.410226821899414

Token 116: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0012598758330568671
    2. '[x' → logprob: -7.251259803771973
    3. 'y' → logprob: -7.626259803771973
    4. '[' → logprob: -9.751259803771973
    5. ' y' → logprob: -13.251259803771973
    6. 'x' → logprob: -13.376259803771973
    7. '   ' → logprob: -15.126259803771973
    8. '	y' → logprob: -15.501259803771973
    9. '(y' → logprob: -16.62626075744629
    10. '```' → logprob: -16.87626075744629

Token 117: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043116696178913116
    2. ':
' → logprob: -3.168116807937622
    3. '):
' → logprob: -10.293116569519043
    4. ']:' → logprob: -10.293116569519043
    5. '):' → logprob: -10.543116569519043
    6. ']:
' → logprob: -12.418116569519043
    7. '   ' → logprob: -13.043116569519043
    8. ':

' → logprob: -13.168116569519043
    9. '       ' → logprob: -13.168116569519043
    10. '():
' → logprob: -13.168116569519043

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17082242667675018
    2. ' rank' → logprob: -2.1708223819732666
    3. 'rank' → logprob: -3.1708223819732666
    4. '(rank' → logprob: -7.045822620391846
    5. '_rank' → logprob: -10.045822143554688
    6. '.rank' → logprob: -10.420822143554688
    7. '   ' → logprob: -11.920822143554688
    8. '       ' → logprob: -12.295822143554688
    9. '               ' → logprob: -12.420822143554688
    10. '```' → logprob: -12.545822143554688

Token 119: ' rank' (ID: 10302)
  Prédit: ' rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rank' → logprob: -0.20145796239376068
    2. 'rank' (adapté à ' rank') → logprob: -1.7014579772949219
    3. '   ' → logprob: -10.576457977294922
    4. '(rank' → logprob: -11.201457977294922
    5. '           ' → logprob: -12.826457977294922
    6. '.rank' → logprob: -13.576457977294922
    7. '_rank' → logprob: -13.951457977294922
    8. '       ' → logprob: -14.826457977294922
    9. '               ' → logprob: -16.701457977294922
    10. '  ' → logprob: -16.826457977294922

Token 120: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.392202976712724e-06
    2. '[' → logprob: -12.000006675720215
    3. 'x' → logprob: -16.0000057220459
    4. ' x' → logprob: -18.8750057220459
    5. ' [' → logprob: -19.7500057220459
    6. '[
' → logprob: -19.8750057220459
    7. '(x' → logprob: -20.5000057220459
    8. '```' → logprob: -21.1250057220459
    9. '	x' → logprob: -21.2500057220459
    10. '[ix' → logprob: -21.2500057220459

Token 121: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6710367798805237
    2. '+=' → logprob: -0.9210367798805237
    3. ']+=' → logprob: -2.546036720275879
    4. ']' → logprob: -4.421036720275879
    5. '[' → logprob: -8.296036720275879
    6. '+' → logprob: -10.296036720275879
    7. ' ]' → logprob: -11.296036720275879
    8. '   ' → logprob: -12.796036720275879
    9. '[i' → logprob: -14.171036720275879
    10. ')' → logprob: -14.421036720275879

Token 122: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0024819616228342056
    2. ' +=' → logprob: -6.002481937408447
    3. ']+=' → logprob: -12.002482414245605
    4. '=' → logprob: -16.75248146057129
    5. '+' → logprob: -17.12748146057129
    6. '[' → logprob: -17.25248146057129
    7. '+='' → logprob: -18.37748146057129
    8. '+="' → logprob: -18.50248146057129
    9. '   ' → logprob: -18.62748146057129
    10. '+=(' → logprob: -20.25248146057129

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.250045776367188
    4. '  ' → logprob: -20.000045776367188
    5. '       ' → logprob: -21.375045776367188
    6. '
' → logprob: -21.500045776367188
    7. ' ' → logprob: -21.500045776367188
    8. '１' → logprob: -21.500045776367188
    9. '```' → logprob: -21.750045776367188
    10. '[' → logprob: -22.000045776367188

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.750003814697266
    4. '  ' → logprob: -20.125003814697266
    5. '１' → logprob: -20.687503814697266
    6. '```' → logprob: -21.000003814697266
    7. '
' → logprob: -21.062503814697266
    8. '۱' → logprob: -21.500003814697266
    9. '

' → logprob: -21.812503814697266
    10. '१' → logprob: -22.000003814697266

Token 125: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4765394330024719
    2. '
' → logprob: -1.4765393733978271
    3. '<|end|>' → logprob: -1.9765393733978271
    4. 'return' → logprob: -5.851539611816406
    5. '\n' → logprob: -6.101539611816406
    6. ' return' → logprob: -6.351539611816406
    7. '<|end|>' → logprob: -6.476539611816406
    8. '	return' → logprob: -6.726539611816406
    9. '    
' → logprob: -7.476539611816406
    10. '```' → logprob: -7.726539611816406

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00577995041385293
    2. ' return' → logprob: -5.88077974319458
    3. '
' → logprob: -6.88077974319458
    4. 'return' → logprob: -6.88077974319458
    5. '<|end|>' → logprob: -8.630780220031738
    6. ')' → logprob: -9.005780220031738
    7. '    
' → logprob: -9.380780220031738
    8. ' ' → logprob: -9.380780220031738
    9. 'def' → logprob: -9.380780220031738
    10. '       ' → logprob: -9.630780220031738

Token 127: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8136687278747559
    2. ' return' → logprob: -1.0636687278747559
    3. '   ' → logprob: -1.5636687278747559
    4. '
' → logprob: -6.938668727874756
    5. '	return' → logprob: -7.563668727874756
    6. ':return' → logprob: -7.813668727874756
    7. '       ' → logprob: -9.063669204711914
    8. ' True' → logprob: -10.188669204711914
    9. '    
' → logprob: -10.313669204711914
    10. ' 
' → logprob: -10.313669204711914

Token 128: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03804149478673935
    2. ' True' → logprob: -3.288041591644287
    3. '(True' → logprob: -16.913042068481445
    4. '=True' → logprob: -19.663042068481445
    5. ' ' → logprob: -20.038042068481445
    6. 'None' → logprob: -20.913042068481445
    7. ' Tru' → logprob: -21.288042068481445
    8. 'Tr' → logprob: -21.288042068481445
    9. ' ' → logprob: -21.663042068481445
    10. 'False' → logprob: -22.038042068481445

Token 129: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6153199076652527
    2. '
' → logprob: -1.4903199672698975
    3. '<|end|>' → logprob: -2.2403199672698975
    4. '(' → logprob: -3.2403199672698975
    5. '#' → logprob: -3.7403199672698975
    6. '\n' → logprob: -3.8653199672698975
    7. '(
' → logprob: -4.615319728851318
    8. '```' → logprob: -4.865319728851318
    9. 'n' → logprob: -5.115319728851318
    10. '

' → logprob: -5.490319728851318

Token 130: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5386364459991455
    2. 'def' → logprob: -0.9136364459991455
    3. 'N' → logprob: -4.288636207580566
    4. 'import' → logprob: -8.038636207580566
    5. 'Q' → logprob: -8.288636207580566
    6. '#' → logprob: -8.413636207580566
    7. 'from' → logprob: -8.538636207580566
    8. '```' → logprob: -8.788636207580566
    9. 'edges' → logprob: -9.038636207580566
    10. 'class' → logprob: -9.413636207580566

Token 131: ' main' (ID: 2758)
  Prédit: ' kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' kr' → logprob: -0.6487809419631958
    2. ' main' → logprob: -0.7737809419631958
    3. ' solve' → logprob: -4.398780822753906
    4. 'kr' → logprob: -5.898780822753906
    5. ' mst' → logprob: -8.023780822753906
    6. ' Kr' → logprob: -8.398780822753906
    7. 'main' → logprob: -8.898780822753906
    8. ' minimum' → logprob: -9.148780822753906
    9. ' dfs' → logprob: -9.773780822753906
    10. 'solve' → logprob: -10.148780822753906

Token 132: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00015741224342491478
    2. '(' → logprob: -8.875157356262207
    3. '()' → logprob: -11.375157356262207
    4. ' ():' → logprob: -12.875157356262207
    5. '():
' → logprob: -13.375157356262207
    6. '(:' → logprob: -13.750157356262207
    7. ':' → logprob: -14.750157356262207
    8. '(":' → logprob: -15.125157356262207
    9. '):' → logprob: -17.750158309936523
    10. '():
' → logprob: -18.125158309936523

Token 133: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08102419227361679
    2. 'n' → logprob: -3.081024169921875
    3. '   ' → logprob: -3.456024169921875
    4. ' import' → logprob: -8.581024169921875
    5. ' input' → logprob: -9.956024169921875
    6. 'import' → logprob: -9.956024169921875
    7. '	n' → logprob: -10.206024169921875
    8. '    ' → logprob: -11.706024169921875
    9. ' pass' → logprob: -11.956024169921875
    10. '```' → logprob: -12.206024169921875

Token 134: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6940025091171265
    2. ' n' → logprob: -0.6940025091171265
    3. 'N' → logprob: -7.944002628326416
    4. ' N' → logprob: -8.319002151489258
    5. '   ' → logprob: -8.694002151489258
    6. 'import' → logprob: -10.069002151489258
    7. ' import' → logprob: -10.694002151489258
    8. ' input' → logprob: -11.569002151489258
    9. '	n' → logprob: -12.569002151489258
    10. ' ' → logprob: -12.569002151489258

Token 135: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013613052433356643
    2. '().' → logprob: -6.87636137008667
    3. '_data' → logprob: -8.876360893249512
    4. '(' → logprob: -9.501360893249512
    5. ' =' → logprob: -10.376360893249512
    6. '_line' → logprob: -11.001360893249512
    7. '=' → logprob: -11.251360893249512
    8. '_' → logprob: -11.751360893249512
    9. ' ()' → logprob: -11.876360893249512
    10. '()]' → logprob: -12.126360893249512

Token 136: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.018642311915755272
    2. ' input' → logprob: -4.643642425537109
    3. 'sys' → logprob: -4.768642425537109
    4. 'input' → logprob: -8.14364242553711
    5. '=sys' → logprob: -11.01864242553711
    6. ' lambda' → logprob: -11.14364242553711
    7. ' ' → logprob: -11.39364242553711
    8. ' raw' → logprob: -12.26864242553711
    9. '	sys' → logprob: -12.26864242553711
    10. '(sys' → logprob: -12.76864242553711

Token 137: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.018651790916919708
    2. '.' → logprob: -4.018651962280273
    3. '.stdout' → logprob: -8.143651962280273
    4. '.readline' → logprob: -8.893651962280273
    5. '.argv' → logprob: -10.268651962280273
    6. '.std' → logprob: -10.518651962280273
    7. '.setdefault' → logprob: -12.643651962280273
    8. '().' → logprob: -13.268651962280273
    9. '.__' → logprob: -13.268651962280273
    10. '.input' → logprob: -13.643651962280273

Token 138: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.526570384972729e-05
    2. '.read' → logprob: -9.875055313110352
    3. '.' → logprob: -13.250055313110352
    4. '.readlines' → logprob: -13.625055313110352
    5. '.buffer' → logprob: -14.625055313110352
    6. 'read' → logprob: -15.750055313110352
    7. ' readline' → logprob: -15.750055313110352
    8. '_read' → logprob: -18.75005531311035
    9. 'buffer' → logprob: -19.75005531311035
    10. '.Read' → logprob: -19.87505531311035

Token 139: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010521139949560165
    2. '().' → logprob: -5.010520935058594
    3. '()
' → logprob: -5.635520935058594
    4. '   ' → logprob: -8.635520935058594
    5. '()\' → logprob: -10.885520935058594
    6. '
' → logprob: -11.510520935058594
    7. '(' → logprob: -11.885520935058594
    8. ' ()' → logprob: -12.135520935058594
    9. '()
' → logprob: -13.010520935058594
    10. '())' → logprob: -13.135520935058594

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01313281711190939
    2. 'n' → logprob: -4.3881330490112305
    3. '    
' → logprob: -8.13813304901123
    4. '
' → logprob: -8.88813304901123
    5. ' n' → logprob: -9.63813304901123
    6. '(n' → logprob: -10.63813304901123
    7. '	n' → logprob: -11.01313304901123
    8. '    ' → logprob: -11.26313304901123
    9. 't' → logprob: -11.51313304901123
    10. 'a' → logprob: -11.63813304901123

Token 141: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22223183512687683
    2. 'N' → logprob: -1.7222318649291992
    3. '   ' → logprob: -3.972231864929199
    4. ' n' → logprob: -6.722231864929199
    5. 'Q' → logprob: -8.3472318649292
    6. ' N' → logprob: -8.4722318649292
    7. 'q' → logprob: -9.5972318649292
    8. 't' → logprob: -11.7222318649292
    9. 'h' → logprob: -11.9722318649292
    10. ' ' → logprob: -12.2222318649292

Token 142: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01815474033355713
    2. 'True' → logprob: -4.018154621124268
    3. '(True' → logprob: -12.393155097961426
    4. ' ' → logprob: -14.643155097961426
    5. '1' → logprob: -15.643155097961426
    6. ' Tru' → logprob: -16.14315414428711
    7. '  ' → logprob: -17.14315414428711
    8. '=True' → logprob: -17.89315414428711
    9. '   ' → logprob: -18.26815414428711
    10. ' ' → logprob: -18.51815414428711

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020279695745557547
    2. '():' → logprob: -6.377027988433838
    3. ':
' → logprob: -8.37702751159668
    4. ',' → logprob: -10.12702751159668
    5. '):' → logprob: -10.62702751159668
    6. '(' → logprob: -11.50202751159668
    7. '   ' → logprob: -11.87702751159668
    8. '       ' → logprob: -12.37702751159668
    9. '():
' → logprob: -12.50202751159668
    10. ' :' → logprob: -12.87702751159668

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015112892724573612
    2. '   ' → logprob: -6.876511096954346
    3. 'n' → logprob: -8.876511573791504
    4. '    ' → logprob: -9.251511573791504
    5. ' ' → logprob: -9.876511573791504
    6. ' line' → logprob: -10.126511573791504
    7. ',' → logprob: -10.876511573791504
    8. '      ' → logprob: -10.876511573791504
    9. '<|end|>' → logprob: -11.001511573791504
    10. ' try' → logprob: -11.251511573791504

Token 145: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3243790864944458
    2. ' n' → logprob: -1.6993790864944458
    3. ' line' → logprob: -3.3243789672851562
    4. 'N' → logprob: -3.4493789672851562
    5. 'l' → logprob: -5.074378967285156
    6. 's' → logprob: -5.574378967285156
    7. '   ' → logprob: -5.699378967285156
    8. ' N' → logprob: -5.824378967285156
    9. 'line' → logprob: -5.824378967285156
    10. 'w' → logprob: -6.574378967285156

Token 146: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05632912740111351
    2. '=' → logprob: -2.9313290119171143
    3. ',' → logprob: -6.931329250335693
    4. ' ==' → logprob: -8.181328773498535
    5. '=int' → logprob: -8.931328773498535
    6. ' ' → logprob: -10.931328773498535
    7. '=input' → logprob: -10.931328773498535
    8. '==' → logprob: -12.056328773498535
    9. ' ,' → logprob: -12.556328773498535
    10. '=line' → logprob: -12.806328773498535

Token 147: ',k' (ID: 35155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022209584712982
    2. '=' → logprob: -2.350222110748291
    3. '=input' → logprob: -11.725221633911133
    4. ',' → logprob: -11.975221633911133
    5. '=int' → logprob: -15.100221633911133
    6. '=line' → logprob: -15.600221633911133
    7. ' ' → logprob: -15.850221633911133
    8. ' ,' → logprob: -16.725221633911133
    9. '＝' → logprob: -16.725221633911133
    10. '=list' → logprob: -17.100221633911133

Token 148: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132643401622772
    2. '=' → logprob: -1.3132643699645996
    3. ',' → logprob: -13.438263893127441
    4. ' ' → logprob: -14.688263893127441
    5. '=input' → logprob: -15.063263893127441
    6. '=line' → logprob: -16.438264846801758
    7. '    ' → logprob: -16.813264846801758
    8. '＝' → logprob: -16.813264846801758
    9. '   ' → logprob: -17.563264846801758
    10. '[' → logprob: -17.563264846801758

Token 149: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.25194594264030457
    2. ' map' → logprob: -1.501945972442627
    3. 'list' → logprob: -11.751945495605469
    4. 'input' → logprob: -12.126945495605469
    5. '	map' → logprob: -13.626945495605469
    6. '(map' → logprob: -14.001945495605469
    7. ' list' → logprob: -14.376945495605469
    8. '[' → logprob: -15.001945495605469
    9. ' input' → logprob: -15.001945495605469
    10. ' ' → logprob: -15.251945495605469

Token 150: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6448107957839966
    2. '(str' → logprob: -1.3948107957839966
    3. '(' → logprob: -1.6448107957839966
    4. '(input' → logprob: -3.394810676574707
    5. '(list' → logprob: -7.394810676574707
    6. '(lambda' → logprob: -9.269810676574707
    7. '(sys' → logprob: -11.644810676574707
    8. '(
' → logprob: -11.769810676574707
    9. ' (' → logprob: -12.394810676574707
    10. '(tuple' → logprob: -12.394810676574707

Token 151: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6831492781639099
    2. ',' → logprob: -0.8081492781639099
    3. '(input' → logprob: -3.1831493377685547
    4. '(sys' → logprob: -5.058149337768555
    5. '(' → logprob: -7.058149337768555
    6. 'input' → logprob: -8.058149337768555
    7. ')' → logprob: -9.558149337768555
    8. '   ' → logprob: -10.058149337768555
    9. ' ,' → logprob: -10.558149337768555
    10. ',str' → logprob: -10.683149337768555

Token 152: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014164102263748646
    2. ' input' → logprob: -4.264163970947266
    3. 'sys' → logprob: -14.764163970947266
    4. ' sys' → logprob: -16.639163970947266
    5. ',input' → logprob: -16.889163970947266
    6. '(input' → logprob: -17.139163970947266
    7. ')' → logprob: -17.264163970947266
    8. '=input' → logprob: -18.389163970947266
    9. ' ' → logprob: -18.639163970947266
    10. '	input' → logprob: -19.014163970947266

Token 153: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005558936391025782
    2. '()' → logprob: -7.500555992126465
    3. '('' → logprob: -13.875555992126465
    4. '())' → logprob: -14.250555992126465
    5. ')' → logprob: -15.000555992126465
    6. '()
' → logprob: -15.500555992126465
    7. '().'' → logprob: -15.625555992126465
    8. ' ().' → logprob: -15.750555992126465
    9. '(' → logprob: -16.62555503845215
    10. '.readline' → logprob: -16.87555503845215

Token 154: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12953580915927887
    2. 'strip' → logprob: -2.1295359134674072
    3. 'rstrip' → logprob: -6.004535675048828
    4. 'read' → logprob: -9.254535675048828
    5. ')' → logprob: -10.254535675048828
    6. 'decode' → logprob: -12.879535675048828
    7. '(split' → logprob: -13.504535675048828
    8. '().' → logprob: -14.504535675048828
    9. ' split' → logprob: -15.004535675048828
    10. '.readline' → logprob: -15.254535675048828

Token 155: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010556180030107498
    2. '())' → logprob: -4.885556221008301
    3. '()' → logprob: -5.885556221008301
    4. ')
' → logprob: -8.8855562210083
    5. '))' → logprob: -11.7605562210083
    6. '())
' → logprob: -11.8855562210083
    7. '(' → logprob: -12.3855562210083
    8. '('' → logprob: -12.7605562210083
    9. ')`' → logprob: -13.1355562210083
    10. ' )' → logprob: -13.8855562210083

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2091130167245865
    2. '<|end|>' → logprob: -1.9591130018234253
    3. ' if' → logprob: -3.459113121032715
    4. '
' → logprob: -4.959113121032715
    5. 'if' → logprob: -5.834113121032715
    6. ' ' → logprob: -6.209113121032715
    7. '        
' → logprob: -7.084113121032715
    8. '   ' → logprob: -7.209113121032715
    9. ' 
' → logprob: -7.334113121032715
    10. '        ' → logprob: -8.084113121032715

Token 157: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26712778210639954
    2. 'if' (adapté à ' if') → logprob: -1.6421277523040771
    3. '       ' → logprob: -3.267127752304077
    4. '<|end|>' → logprob: -6.892127990722656
    5. '
' → logprob: -7.017127990722656
    6. ' ' → logprob: -7.642127990722656
    7. '   ' → logprob: -8.517127990722656
    8. '	if' → logprob: -10.142127990722656
    9. ' 
' → logprob: -10.767127990722656
    10. 'If' → logprob: -11.267127990722656

Token 158: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.014168446883559227
    2. 'n' → logprob: -4.2641682624816895
    3. ' not' → logprob: -12.389168739318848
    4. '(n' → logprob: -15.264168739318848
    5. '	n' → logprob: -16.01416778564453
    6. ' (' → logprob: -16.26416778564453
    7. ' ' → logprob: -16.51416778564453
    8. ' ' → logprob: -16.63916778564453
    9. 'not' → logprob: -16.63916778564453
    10. '(' → logprob: -18.13916778564453

Token 159: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25193649530410767
    2. ' ==' → logprob: -1.501936435699463
    3. ')==' → logprob: -12.751936912536621
    4. '=' → logprob: -13.126936912536621
    5. '===' → logprob: -14.251936912536621
    6. '()==' → logprob: -14.501936912536621
    7. ']==' → logprob: -14.626936912536621
    8. '==
' → logprob: -14.876936912536621
    9. ' ' → logprob: -15.251936912536621
    10. ' ' → logprob: -16.251935958862305

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001034714630804956
    2. ' ' → logprob: -6.876034736633301
    3. '０' → logprob: -14.9385347366333
    4. 'm' → logprob: -15.1885347366333
    5. 'k' → logprob: -15.1885347366333
    6. '۰' → logprob: -15.6260347366333
    7. ' ' → logprob: -15.9385347366333
    8. 's' → logprob: -16.126033782958984
    9. '  ' → logprob: -16.376033782958984
    10. '=' → logprob: -16.438533782958984

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3080716346157715e-05
    2. ' ' → logprob: -10.750022888183594
    3. 'm' → logprob: -14.375022888183594
    4. 'k' → logprob: -14.750022888183594
    5. '```' → logprob: -16.500022888183594
    6. 'and' → logprob: -16.562522888183594
    7. 's' → logprob: -16.687522888183594
    8. '０' → logprob: -16.812522888183594
    9. '

' → logprob: -17.125022888183594
    10. 'n' → logprob: -17.375022888183594

Token 162: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.313264399766922
    2. ' and' → logprob: -1.3132643699645996
    3. ' or' → logprob: -13.938264846801758
    4. ':' → logprob: -14.313264846801758
    5. '	and' → logprob: -14.313264846801758
    6. ' ' → logprob: -14.938264846801758
    7. '<|end|>' → logprob: -16.688264846801758
    8. 'or' → logprob: -17.063264846801758
    9. '   ' → logprob: -17.063264846801758
    10. ' ' → logprob: -17.188264846801758

Token 163: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011047935113310814
    2. ' m' → logprob: -4.511047840118408
    3. '	m' → logprob: -17.51104736328125
    4. '   ' → logprob: -17.63604736328125
    5. '  ' → logprob: -18.76104736328125
    6. ' ' → logprob: -18.88604736328125
    7. ' ' → logprob: -19.51104736328125
    8. 'n' → logprob: -20.38604736328125
    9. '    ' → logprob: -20.63604736328125
    10. ',m' → logprob: -21.01104736328125

Token 164: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023652255535126
    2. '==' → logprob: -1.9102364778518677
    3. ' ' → logprob: -11.910236358642578
    4. '0' → logprob: -12.785236358642578
    5. ' ' → logprob: -13.910236358642578
    6. '=' → logprob: -14.660236358642578
    7. '===' → logprob: -14.910236358642578
    8. '<|end|>' → logprob: -15.160236358642578
    9. '==
' → logprob: -16.035236358642578
    10. ' =' → logprob: -16.035236358642578

Token 165: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.378177642822266
    4. '   ' → logprob: -17.628177642822266
    5. '۰' → logprob: -18.003177642822266
    6. '  ' → logprob: -18.128177642822266
    7. 'k' → logprob: -18.190677642822266
    8. '<|end|>' → logprob: -18.628177642822266
    9. 'and' → logprob: -18.690677642822266
    10. '<|end|>' → logprob: -18.940677642822266

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '<|end|>' → logprob: -19.125030517578125
    4. '۰' → logprob: -19.875030517578125
    5. '<|end|>' → logprob: -21.187530517578125
    6. 'and' → logprob: -21.312530517578125
    7. '０' → logprob: -21.375030517578125
    8. ' ' → logprob: -21.375030517578125
    9. '   ' → logprob: -21.437530517578125
    10. '  ' → logprob: -21.500030517578125

Token 167: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04859123006463051
    2. 'and' → logprob: -3.048591136932373
    3. '	and' → logprob: -13.548591613769531
    4. ':' → logprob: -14.048591613769531
    5. '       ' → logprob: -14.923591613769531
    6. '           ' → logprob: -15.048591613769531
    7. '0' → logprob: -15.298591613769531
    8. '   ' → logprob: -15.548591613769531
    9. ' и' → logprob: -15.798591613769531
    10. ' ' → logprob: -16.54859161376953

Token 168: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03804183006286621
    2. ' k' → logprob: -3.288041830062866
    3. '   ' → logprob: -15.663042068481445
    4. ' ' → logprob: -16.163042068481445
    5. '	k' → logprob: -16.663042068481445
    6. '  ' → logprob: -17.538042068481445
    7. '       ' → logprob: -18.538042068481445
    8. '0' → logprob: -18.538042068481445
    9. '    ' → logprob: -19.413042068481445
    10. ' ' → logprob: -19.538042068481445

Token 169: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20146752893924713
    2. '==' → logprob: -1.701467514038086
    3. '0' → logprob: -10.326467514038086
    4. ' ' → logprob: -11.576467514038086
    5. ')==' → logprob: -12.576467514038086
    6. '=' → logprob: -12.701467514038086
    7. ':' → logprob: -13.826467514038086
    8. '()==' → logprob: -13.951467514038086
    9. '   ' → logprob: -14.076467514038086
    10. '[' → logprob: -14.076467514038086

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141363143920898
    2. ' ' → logprob: -1.701413631439209
    3. ' ' → logprob: -15.451414108276367
    4. '  ' → logprob: -17.201414108276367
    5. '<|end|>' → logprob: -17.201414108276367
    6. '   ' → logprob: -18.763914108276367
    7. '۰' → logprob: -18.951414108276367
    8. '1' → logprob: -18.951414108276367
    9. '=' → logprob: -19.076414108276367
    10. '000' → logprob: -19.388914108276367

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -18.68752098083496
    4. '   ' → logprob: -19.18752098083496
    5. '```' → logprob: -19.68752098083496
    6. '０' → logprob: -19.68752098083496
    7. '  ' → logprob: -20.00002098083496
    8. '1' → logprob: -20.18752098083496
    9. '০' → logprob: -20.50002098083496
    10. 's' → logprob: -20.87502098083496

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007074567489326
    2. ':
' → logprob: -5.007074356079102
    3. '       ' → logprob: -8.507074356079102
    4. '           ' → logprob: -8.882074356079102
    5. ':return' → logprob: -11.257074356079102
    6. '   ' → logprob: -13.507074356079102
    7. ',' → logprob: -13.507074356079102
    8. '.' → logprob: -14.007074356079102
    9. ':
' → logprob: -14.382074356079102
    10. ' :' → logprob: -14.882074356079102

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00462688785046339
    2. '       ' → logprob: -5.379626750946045
    3. '   ' → logprob: -13.254627227783203
    4. '          ' → logprob: -13.629627227783203
    5. ' break' → logprob: -13.879627227783203
    6. '               ' → logprob: -14.129627227783203
    7. '		' → logprob: -14.379627227783203
    8. '     ' → logprob: -14.879627227783203
    9. '      ' → logprob: -15.504627227783203
    10. '         ' → logprob: -15.629627227783203

Token 174: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.532350480556488
    2. ' break' → logprob: -1.0323505401611328
    3. 'return' → logprob: -3.032350540161133
    4. ' return' → logprob: -5.282350540161133
    5. '       ' → logprob: -6.157350540161133
    6. '           ' → logprob: -6.782350540161133
    7. '	break' → logprob: -9.782350540161133
    8. '               ' → logprob: -11.657350540161133
    9. '   ' → logprob: -11.907350540161133
    10. '_break' → logprob: -14.282350540161133

Token 175: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44384077191352844
    2. '
' → logprob: -1.693840742111206
    3. '   ' → logprob: -2.693840742111206
    4. 'edges' → logprob: -2.943840742111206
    5. ' edges' → logprob: -4.068840980529785
    6. 'par' → logprob: -4.693840980529785
    7. ' par' → logprob: -5.568840980529785
    8. '        
' → logprob: -5.568840980529785
    9. '```' → logprob: -5.818840980529785
    10. 's' → logprob: -6.068840980529785

Token 177: ' edges' (ID: 22569)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.06986640393733978
    2. ' par' → logprob: -2.819866418838501
    3. ' edges' → logprob: -6.069866180419922
    4. '       ' → logprob: -6.319866180419922
    5. 'edges' (adapté à ' edges') → logprob: -6.444866180419922
    6. '   ' → logprob: -6.444866180419922
    7. 'parents' → logprob: -8.694866180419922
    8. ' parents' → logprob: -10.069866180419922
    9. '	par' → logprob: -10.069866180419922
    10. 'parent' → logprob: -10.194866180419922

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002507047727704048
    2. '=' → logprob: -6.002507209777832
    3. '=[]' → logprob: -10.627507209777832
    4. '<|end|>' → logprob: -13.502507209777832
    5. '[]' → logprob: -13.752507209777832
    6. ')' → logprob: -13.877507209777832
    7. ',' → logprob: -14.002507209777832
    8. '[' → logprob: -14.377507209777832
    9. ' ' → logprob: -14.377507209777832
    10. 's' → logprob: -15.252507209777832

Token 179: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011122682131826878
    2. ' []' → logprob: -4.511122703552246
    3. '[' → logprob: -9.636122703552246
    4. '[]
' → logprob: -11.761122703552246
    5. '[]}' → logprob: -14.636122703552246
    6. '[]

' → logprob: -14.761122703552246
    7. ' [' → logprob: -15.261122703552246
    8. '[],' → logprob: -15.761122703552246
    9. '{}' → logprob: -15.886122703552246
    10. '[][]' → logprob: -16.01112174987793

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2189195454120636
    2. ' for' → logprob: -2.218919515609741
    3. '<|end|>' → logprob: -2.843919515609741
    4. '
' → logprob: -4.84391975402832
    5. '   ' → logprob: -4.96891975402832
    6. '	for' → logprob: -5.09391975402832
    7. 'for' → logprob: -5.84391975402832
    8. '	' → logprob: -5.96891975402832
    9. ' ' → logprob: -7.21891975402832
    10. '<|end|>' → logprob: -7.59391975402832

Token 181: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04868922382593155
    2. ' for' → logprob: -3.048689126968384
    3. '       ' → logprob: -10.173688888549805
    4. 'total' → logprob: -10.548688888549805
    5. '   ' → logprob: -11.673688888549805
    6. 'cost' → logprob: -11.798688888549805
    7. 'result' → logprob: -11.923688888549805
    8. 'nodes' → logprob: -13.798688888549805
    9. 'edges' → logprob: -13.798688888549805
    10. 'graph' → logprob: -13.923688888549805

Token 182: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007833030540496111
    2. ' _' → logprob: -7.250783443450928
    3. '_i' → logprob: -9.62578296661377
    4. ' i' → logprob: -11.87578296661377
    5. 'i' → logprob: -15.50078296661377
    6. '_=' → logprob: -16.750783920288086
    7. ' ' → logprob: -18.125783920288086
    8. '_j' → logprob: -19.750783920288086
    9. '_range' → logprob: -20.000783920288086
    10. '_

' → logprob: -20.125783920288086

Token 183: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026465756818652153
    2. 'in' → logprob: -3.651465654373169
    3. 'range' → logprob: -9.52646541595459
    4. ' ' → logprob: -9.77646541595459
    5. 'import' → logprob: -12.40146541595459
    6. 'n' → logprob: -12.40146541595459
    7. '```' → logprob: -12.52646541595459
    8. 's' → logprob: -12.52646541595459
    9. 'input' → logprob: -12.77646541595459
    10. '  ' → logprob: -12.90146541595459

Token 184: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013286912580952048
    2. ' range' → logprob: -6.626328468322754
    3. '(range' → logprob: -13.626328468322754
    4. '	range' → logprob: -15.126328468322754
    5. 'm' → logprob: -15.251328468322754
    6. 'rang' → logprob: -15.376328468322754
    7. 'ange' → logprob: -15.626328468322754
    8. 'r' → logprob: -15.751328468322754
    9. 'in' → logprob: -15.876328468322754
    10. '```' → logprob: -16.25132942199707

Token 185: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.875001907348633
    3. ' (' → logprob: -14.250001907348633
    4. 'm' → logprob: -15.000001907348633
    5. ' m' → logprob: -15.250001907348633
    6. '(M' → logprob: -17.250001907348633
    7. '(k' → logprob: -18.500001907348633
    8. '	m' → logprob: -18.875001907348633
    9. ',m' → logprob: -19.625001907348633
    10. '(n' → logprob: -20.500001907348633

Token 186: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02994740568101406
    2. '):
' → logprob: -3.529947519302368
    3. ' ):' → logprob: -9.154947280883789
    4. ':' → logprob: -9.779947280883789
    5. '):
' → logprob: -10.779947280883789
    6. ')' → logprob: -12.029947280883789
    7. ',' → logprob: -13.029947280883789
    8. ' ):
' → logprob: -13.154947280883789
    9. '   ' → logprob: -14.154947280883789
    10. ':
' → logprob: -14.154947280883789

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2922772169113159
    2. '       ' → logprob: -1.667277216911316
    3. '   ' → logprob: -3.4172773361206055
    4. '	   ' → logprob: -4.7922773361206055
    5. ',' → logprob: -5.0422773361206055
    6. '	       ' → logprob: -5.1672773361206055
    7. ' x' → logprob: -6.1672773361206055
    8. 'x' → logprob: -6.9172773361206055
    9. '		   ' → logprob: -6.9172773361206055
    10. '    	   ' → logprob: -7.1672773361206055

Token 188: ' u' (ID: 337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6957542300224304
    2. 'u' (adapté à ' u') → logprob: -0.9457542300224304
    3. ' u' → logprob: -2.570754289627075
    4. ' a' → logprob: -3.320754289627075
    5. 's' → logprob: -9.195754051208496
    6. 'x' → logprob: -9.320754051208496
    7. '   ' → logprob: -10.195754051208496
    8. ' s' → logprob: -10.570754051208496
    9. 'f' → logprob: -11.070754051208496
    10. ' ' → logprob: -12.320754051208496

Token 189: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03833327442407608
    2. ',v' → logprob: -3.2883331775665283
    3. ' ,' → logprob: -8.28833293914795
    4. ',b' → logprob: -11.78833293914795
    5. ',n' → logprob: -12.28833293914795
    6. ',u' → logprob: -12.28833293914795
    7. ',k' → logprob: -12.66333293914795
    8. ',m' → logprob: -12.91333293914795
    9. ',user' → logprob: -12.91333293914795
    10. ',w' → logprob: -13.41333293914795

Token 190: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7359196543693542
    2. '=' → logprob: -0.8609196543693542
    3. ' =' → logprob: -2.985919713973999
    4. ',w' → logprob: -3.110919713973999
    5. ' ,' → logprob: -6.86091947555542
    6. ',c' → logprob: -6.98591947555542
    7. ',k' → logprob: -7.86091947555542
    8. ',u' → logprob: -8.610919952392578
    9. 'w' → logprob: -8.735919952392578
    10. ',v' → logprob: -8.860919952392578

Token 191: ',l' (ID: 45198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602327525615692
    2. ' =' → logprob: -1.9102327823638916
    3. ',' → logprob: -11.785232543945312
    4. ')' → logprob: -15.410232543945312
    5. '=input' → logprob: -15.535232543945312
    6. '   ' → logprob: -15.910232543945312
    7. '=int' → logprob: -16.160232543945312
    8. ' ' → logprob: -16.285232543945312
    9. '＝' → logprob: -16.785232543945312
    10. '=line' → logprob: -17.035232543945312

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012512356042861938
    2. ' =' → logprob: -4.38751220703125
    3. '=input' → logprob: -13.88751220703125
    4. '=int' → logprob: -15.13751220703125
    5. ' ' → logprob: -15.38751220703125
    6. '=list' → logprob: -15.51251220703125
    7. 'ist' → logprob: -15.63751220703125
    8. 'w' → logprob: -15.76251220703125
    9. ')=' → logprob: -15.76251220703125
    10. '=line' → logprob: -16.13751220703125

Token 193: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16022534668445587
    2. 'map' → logprob: -1.9102253913879395
    3. '	map' → logprob: -13.910224914550781
    4. 'm' → logprob: -15.535224914550781
    5. ' ' → logprob: -17.53522491455078
    6. '(map' → logprob: -18.41022491455078
    7. '   ' → logprob: -18.53522491455078
    8. ' list' → logprob: -18.78522491455078
    9. 'list' → logprob: -18.91022491455078
    10. 'tuple' → logprob: -19.03522491455078

Token 194: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006274910410866141
    2. '()' → logprob: -7.375627517700195
    3. '(' → logprob: -14.875627517700195
    4. ' ().' → logprob: -15.000627517700195
    5. '()
' → logprob: -15.125627517700195
    6. '())' → logprob: -17.750627517700195
    7. '()

' → logprob: -17.750627517700195
    8. '()).' → logprob: -17.750627517700195
    9. '().__' → logprob: -18.250627517700195
    10. ')' → logprob: -18.500627517700195

Token 195: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07903652638196945
    2. 'strip' → logprob: -2.5790364742279053
    3. 'rstrip' → logprob: -8.829036712646484
    4. ' split' → logprob: -15.579036712646484
    5. 'spl' → logprob: -16.954036712646484
    6. '(split' → logprob: -17.954036712646484
    7. 'rs' → logprob: -18.579036712646484
    8. ' strip' → logprob: -18.954036712646484
    9. '_split' → logprob: -20.454036712646484
    10. '.split' → logprob: -21.829036712646484

Token 196: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03664904087781906
    2. ',' → logprob: -3.661648988723755
    3. ')' → logprob: -5.411649227142334
    4. '()
' → logprob: -5.786649227142334
    5. '<|end|>' → logprob: -7.411649227142334
    6. ',u' → logprob: -7.661649227142334
    7. '(' → logprob: -8.036648750305176
    8. '(),' → logprob: -8.161648750305176
    9. '           ' → logprob: -8.786648750305176
    10. '       ' → logprob: -8.911648750305176

Token 197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6551125645637512
    2. '<|end|>' → logprob: -1.1551125049591064
    3. ',' → logprob: -2.7801125049591064
    4. ',u' → logprob: -3.6551125049591064
    5. '       ' → logprob: -3.7801125049591064
    6. 'u' → logprob: -4.1551127433776855
    7. ' u' → logprob: -4.1551127433776855
    8. '<|end|>' → logprob: -4.9051127433776855
    9. ' ' → logprob: -6.2801127433776855
    10. '            
' → logprob: -6.2801127433776855

Token 198: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.22544755041599274
    2. 'u' (adapté à ' u') → logprob: -1.6004475355148315
    3. '           ' → logprob: -11.225447654724121
    4. ' edges' → logprob: -11.850447654724121
    5. '	u' → logprob: -11.975447654724121
    6. '            ' → logprob: -13.600447654724121
    7. ' 
' → logprob: -13.725447654724121
    8. 'edges' → logprob: -13.850447654724121
    9. '    ' → logprob: -14.100447654724121
    10. ',u' → logprob: -14.350447654724121

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6116097569465637
    2. ',' → logprob: -1.486609697341919
    3. ' =' → logprob: -1.486609697341919
    4. '=int' → logprob: -5.486609935760498
    5. ',u' → logprob: -7.986609935760498
    6. ',v' → logprob: -8.36160945892334
    7. ' ,' → logprob: -8.86160945892334
    8. '-' → logprob: -9.11160945892334
    9. ',int' → logprob: -9.23660945892334
    10. ')' → logprob: -10.23660945892334

Token 200: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0206720617134124e-05
    2. ' int' → logprob: -11.50001049041748
    3. '[int' → logprob: -21.250009536743164
    4. '   ' → logprob: -22.000009536743164
    5. '	int' → logprob: -22.250009536743164
    6. '<int' → logprob: -22.375009536743164
    7. '  ' → logprob: -22.375009536743164
    8. '=int' → logprob: -22.375009536743164
    9. '
' → logprob: -22.750009536743164
    10. '(int' → logprob: -23.000009536743164

Token 201: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -4.644463479053229e-05
    2. '(' → logprob: -10.375046730041504
    3. 'u' → logprob: -11.125046730041504
    4. ',u' → logprob: -16.625045776367188
    5. '()' → logprob: -16.875045776367188
    6. '(
' → logprob: -17.000045776367188
    7. '(U' → logprob: -17.250045776367188
    8. '	u' → logprob: -17.250045776367188
    9. '(v' → logprob: -17.250045776367188
    10. '(user' → logprob: -17.625045776367188

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.076170414686203
    2. ')-' → logprob: -2.7011704444885254
    3. ')
' → logprob: -5.576170444488525
    4. '-' → logprob: -6.076170444488525
    5. ' -' → logprob: -10.076169967651367
    6. ');' → logprob: -10.701169967651367
    7. '-)' → logprob: -10.826169967651367
    8. '[' → logprob: -11.201169967651367
    9. ')v' → logprob: -11.701169967651367
    10. ' )' → logprob: -12.076169967651367

Token 203: '           ' (ID: 352)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16834570467472076
    2. '           ' → logprob: -2.5433456897735596
    3. ',v' → logprob: -2.7933456897735596
    4. ' v' → logprob: -4.543345928192139
    5. ',' → logprob: -5.793345928192139
    6. '<|end|>' → logprob: -7.168345928192139
    7. ')v' → logprob: -7.668345928192139
    8. '	v' → logprob: -9.29334545135498
    9. '
' → logprob: -11.04334545135498
    10. '<|end|>' → logprob: -11.41834545135498

Token 204: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.00033999193692579865
    2. ' v' → logprob: -8.000340461730957
    3. '
' → logprob: -12.500340461730957
    4. 'int' → logprob: -15.125340461730957
    5. '           ' → logprob: -15.250340461730957
    6. ',v' → logprob: -16.25033950805664
    7. '	v' → logprob: -16.50033950805664
    8. 'u' → logprob: -16.75033950805664
    9. '   ' → logprob: -16.75033950805664
    10. ')v' → logprob: -16.87533950805664

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6041128039360046
    2. ' =' → logprob: -0.8541128039360046
    3. '=int' → logprob: -3.6041128635406494
    4. ')' → logprob: -7.85411262512207
    5. '(int' → logprob: -9.85411262512207
    6. '<|end|>' → logprob: -9.97911262512207
    7. 'int' → logprob: -10.85411262512207
    8. '(' → logprob: -11.10411262512207
    9. '[int' → logprob: -11.35411262512207
    10. ',' → logprob: -12.10411262512207

Token 206: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.615255839889869e-05
    2. ' int' → logprob: -9.250096321105957
    3. '(int' → logprob: -18.25009536743164
    4. '<int' → logprob: -18.25009536743164
    5. '[int' → logprob: -18.87509536743164
    6. '=int' → logprob: -19.25009536743164
    7. '	int' → logprob: -20.25009536743164
    8. ':int' → logprob: -20.75009536743164
    9. 'ints' → logprob: -21.12509536743164
    10. ']int' → logprob: -21.25009536743164

Token 207: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -7.52919222577475e-05
    2. '(u' → logprob: -9.625075340270996
    3. 'v' → logprob: -12.250075340270996
    4. ' (' → logprob: -13.250075340270996
    5. '(' → logprob: -13.375075340270996
    6. '(int' → logprob: -14.250075340270996
    7. ')' → logprob: -16.00007438659668
    8. 'u' → logprob: -16.12507438659668
    9. 'int' → logprob: -16.62507438659668
    10. ')v' → logprob: -16.75007438659668

Token 208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31078264117240906
    2. ')
' → logprob: -1.4357826709747314
    3. 'int' → logprob: -4.310782432556152
    4. ',' → logprob: -5.185782432556152
    5. '=' → logprob: -5.435782432556152
    6. '=int' → logprob: -6.185782432556152
    7. ' =' → logprob: -7.060782432556152
    8. '           ' → logprob: -7.435782432556152
    9. ')=' → logprob: -7.810782432556152
    10. ',int' → logprob: -7.810782432556152

Token 209: '           ' (ID: 352)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.07538449019193649
    2. 'w' → logprob: -2.9503843784332275
    3. '           ' → logprob: -3.9503843784332275
    4. '   ' → logprob: -7.075384616851807
    5. '       ' → logprob: -10.075384140014648
    6. '
' → logprob: -10.325384140014648
    7. 'int' → logprob: -10.450384140014648
    8. '    ' → logprob: -10.575384140014648
    9. ',w' → logprob: -10.700384140014648
    10. '	w' → logprob: -10.950384140014648

Token 210: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.005305027589201927
    2. ' w' → logprob: -5.25530481338501
    3. 'int' → logprob: -9.630305290222168
    4. 'l' → logprob: -13.130305290222168
    5. '   ' → logprob: -14.005305290222168
    6. '           ' → logprob: -14.255305290222168
    7. '
' → logprob: -14.630305290222168
    8. 'weight' → logprob: -14.880305290222168
    9. 'k' → logprob: -15.130305290222168
    10. ' int' → logprob: -15.255305290222168

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20250317454338074
    2. '=' → logprob: -1.7025032043457031
    3. '=int' → logprob: -6.827503204345703
    4. 'int' → logprob: -12.577503204345703
    5. ',' → logprob: -14.077503204345703
    6. ' ' → logprob: -14.452503204345703
    7. 'w' → logprob: -15.202503204345703
    8. ')' → logprob: -15.952503204345703
    9. '＝' → logprob: -15.952503204345703
    10. '   ' → logprob: -16.327503204345703

Token 212: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004891689168289304
    2. ' int' → logprob: -7.625489234924316
    3. 'float' → logprob: -14.250489234924316
    4. '[int' → logprob: -14.875489234924316
    5. '0' → logprob: -16.62548828125
    6. '(int' → logprob: -17.00048828125
    7. '1' → logprob: -17.37548828125
    8. '<int' → logprob: -17.50048828125
    9. '=int' → logprob: -17.50048828125
    10. ' ' → logprob: -18.00048828125

Token 213: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0008808538550511003
    2. 'int' → logprob: -8.00088119506836
    3. '(l' → logprob: -8.37588119506836
    4. '(int' → logprob: -8.87588119506836
    5. '(v' → logprob: -9.00088119506836
    6. 'w' → logprob: -10.75088119506836
    7. '(u' → logprob: -11.00088119506836
    8. '(' → logprob: -11.50088119506836
    9. ' (' → logprob: -12.87588119506836
    10. '(len' → logprob: -15.62588119506836

Token 214: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4288754165172577
    2. ')' → logprob: -1.05387544631958
    3. ')
' → logprob: -9.678874969482422
    4. '           ' → logprob: -10.303874969482422
    5. ' )
' → logprob: -10.428874969482422
    6. ',' → logprob: -11.178874969482422
    7. '
' → logprob: -11.803874969482422
    8. ' )' → logprob: -12.178874969482422
    9. ',l' → logprob: -12.178874969482422
    10. ')v' → logprob: -12.428874969482422

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08016174286603928
    2. 'l' → logprob: -2.9551618099212646
    3. ' l' → logprob: -4.0801615715026855
    4. '   ' → logprob: -5.5801615715026855
    5. '       ' → logprob: -5.8301615715026855
    6. '	l' → logprob: -7.5801615715026855
    7. '		' → logprob: -7.9551615715026855
    8. ',l' → logprob: -8.330162048339844
    9. '	   ' → logprob: -10.455162048339844
    10. '    ' → logprob: -10.580162048339844

Token 216: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.558399319241289e-05
    2. 'k' → logprob: -11.625025749206543
    3. '           ' → logprob: -11.750025749206543
    4. ' l' → logprob: -12.125025749206543
    5. 'int' → logprob: -13.875025749206543
    6. 'if' → logprob: -14.125025749206543
    7. '#' (adapté à ' #') → logprob: -15.375025749206543
    8. '            
' → logprob: -15.375025749206543
    9. '   ' → logprob: -15.750025749206543
    10. '	l' → logprob: -15.875025749206543

Token 217: ' store' (ID: 4897)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003977123647928238
    2. ' l' → logprob: -5.878977298736572
    3. '           ' → logprob: -8.128976821899414
    4. '#' → logprob: -8.378976821899414
    5. 'if' → logprob: -8.378976821899414
    6. 'k' → logprob: -9.253976821899414
    7. 'edges' → logprob: -9.503976821899414
    8. 'continue' → logprob: -10.128976821899414
    9. ' edges' → logprob: -10.253976821899414
    10. ' #' → logprob: -10.378976821899414

Token 218: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.11323902755975723
    2. 'edges' → logprob: -2.238239049911499
    3. ' l' → logprob: -8.363239288330078
    4. 'l' → logprob: -8.988239288330078
    5. 'length' → logprob: -10.613239288330078
    6. '(edges' → logprob: -11.113239288330078
    7. ' length' → logprob: -11.988239288330078
    8. ' edge' → logprob: -12.488239288330078
    9. 'edge' → logprob: -13.238239288330078
    10. '_edges' → logprob: -13.738239288330078

Token 219: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33676213026046753
    2. ' edges' → logprob: -1.4617621898651123
    3. 'edges' → logprob: -3.4617621898651123
    4. ',' → logprob: -4.461761951446533
    5. '           ' → logprob: -5.336761951446533
    6. ' ,' → logprob: -5.586761951446533
    7. '   ' → logprob: -6.836761951446533
    8. '(edges' → logprob: -7.211761951446533
    9. ',l' → logprob: -8.086762428283691
    10. '.edges' → logprob: -9.586762428283691

Token 220: ' company' (ID: 3175)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14654727280139923
    2. 'int' → logprob: -2.646547317504883
    3. ' l' → logprob: -3.021547317504883
    4. 'w' → logprob: -4.646547317504883
    5. ' int' → logprob: -5.271547317504883
    6. '(int' → logprob: -7.646547317504883
    7. ' w' → logprob: -7.771547317504883
    8. 'length' → logprob: -8.521547317504883
    9. ' (' → logprob: -8.771547317504883
    10. '(l' → logprob: -9.021547317504883

Token 221: ' info' (ID: 5377)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.713814914226532
    2. '_id' → logprob: -1.7138149738311768
    3. '=' → logprob: -2.3388149738311768
    4. 'l' → logprob: -2.4638149738311768
    5. ',' → logprob: -2.9638149738311768
    6. '=l' → logprob: -3.4638149738311768
    7. 's' → logprob: -3.7138149738311768
    8. ' l' → logprob: -4.213814735412598
    9. ',l' → logprob: -4.338814735412598
    10. 'id' → logprob: -5.463814735412598

Token 222: ' and' (ID: 326)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5827810168266296
    2. '       ' → logprob: -1.3327810764312744
    3. ',' → logprob: -2.7077810764312744
    4. '           ' → logprob: -3.3327810764312744
    5. 'edges' → logprob: -3.5827810764312744
    6. '   ' → logprob: -3.9577810764312744
    7. ' ,' → logprob: -4.082780838012695
    8. ',l' → logprob: -5.582780838012695
    9. '(edges' → logprob: -5.707780838012695
    10. ' l' → logprob: -7.332780838012695

Token 223: ' cost' (ID: 3097)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06369751691818237
    2. ' l' → logprob: -2.813697576522827
    3. ' edges' → logprob: -6.938697338104248
    4. 'edges' → logprob: -7.813697338104248
    5. 'int' → logprob: -8.313697814941406
    6. ' int' → logprob: -10.563697814941406
    7. '       ' → logprob: -11.438697814941406
    8. '           ' → logprob: -11.438697814941406
    9. '
' → logprob: -11.688697814941406
    10. '   ' → logprob: -11.813697814941406

Token 224: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03012116067111492
    2. ' edges' → logprob: -3.905121088027954
    3. '           ' → logprob: -4.905121326446533
    4. 'edges' → logprob: -6.280121326446533
    5. ',' → logprob: -9.030120849609375
    6. '(edges' → logprob: -9.780120849609375
    7. '   ' → logprob: -10.530120849609375
    8. '<|end|>' → logprob: -11.405120849609375
    9. '.edges' → logprob: -11.780120849609375
    10. '      ' → logprob: -12.280120849609375

Token 225: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24924656748771667
    2. ' edges' → logprob: -1.624246597290039
    3. '           ' → logprob: -4.249246597290039
    4. 'edges' → logprob: -5.249246597290039
    5. '   ' → logprob: -6.249246597290039
    6. ',' → logprob: -6.874246597290039
    7. '(edges' → logprob: -8.249246597290039
    8. '<|end|>' → logprob: -8.249246597290039
    9. ' l' → logprob: -9.124246597290039
    10. ' ,' → logprob: -9.874246597290039

Token 226: ' #' (ID: 1069)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.14630015194416046
    2. 'edges' → logprob: -2.5213000774383545
    3. '       ' → logprob: -3.1463000774383545
    4. '           ' → logprob: -5.021300315856934
    5. '   ' → logprob: -5.271300315856934
    6. 'l' → logprob: -7.771300315856934
    7. ' l' → logprob: -8.271300315856934
    8. 'c' → logprob: -9.896300315856934
    9. ' c' → logprob: -10.271300315856934
    10. ' length' → logprob: -10.771300315856934

Token 227: ' company' (ID: 3175)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.17752163112163544
    2. 'edges' → logprob: -1.9275215864181519
    3. 'l' → logprob: -4.677521705627441
    4. ' l' → logprob: -5.802521705627441
    5. '           ' → logprob: -6.427521705627441
    6. '   ' → logprob: -7.052521705627441
    7. 'c' → logprob: -7.427521705627441
    8. ' c' → logprob: -7.552521705627441
    9. ' company' → logprob: -8.552521705627441
    10. 'company' → logprob: -8.552521705627441

Token 228: ' A' (ID: 355)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20315133035182953
    2. '=' → logprob: -1.7031513452529907
    3. '_id' → logprob: -6.828151226043701
    4. '=int' → logprob: -8.82815170288086
    5. ' ' → logprob: -9.57815170288086
    6. 's' → logprob: -9.70315170288086
    7. ',' → logprob: -9.82815170288086
    8. 'l' → logprob: -10.07815170288086
    9. '_cost' → logprob: -10.20315170288086
    10. 'w' → logprob: -10.32815170288086

Token 229: ' will' (ID: 738)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.8983017206192017
    2. ' =' → logprob: -1.1483017206192017
    3. 'edges' → logprob: -2.148301601409912
    4. ',' → logprob: -2.773301601409912
    5. '_edges' → logprob: -3.398301601409912
    6. 'cost' → logprob: -4.523301601409912
    7. '=' → logprob: -4.648301601409912
    8. '.append' → logprob: -4.898301601409912
    9. '           ' → logprob: -5.273301601409912
    10. '_cost' → logprob: -5.273301601409912

Token 230: ' be' (ID: 413)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.14385977387428284
    2. 'edges' → logprob: -2.26885986328125
    3. ' continue' → logprob: -4.14385986328125
    4. ' be' → logprob: -4.89385986328125
    5. 'continue' → logprob: -6.39385986328125
    6. '           ' → logprob: -6.64385986328125
    7. '_edges' → logprob: -7.51885986328125
    8. '(edges' → logprob: -7.76885986328125
    9. '.append' → logprob: -8.01885986328125
    10. '<|end|>' → logprob: -8.01885986328125

Token 231: ' flagged' (ID: 124503)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.8174800276756287
    2. '0' → logprob: -1.1924800872802734
    3. 'edges' → logprob: -2.3174800872802734
    4. ' (' → logprob: -3.4424800872802734
    5. '1' → logprob: -3.5674800872802734
    6. 'w' → logprob: -3.8174800872802734
    7. ' ' → logprob: -4.317480087280273
    8. '(' → logprob: -4.442480087280273
    9. ' l' → logprob: -4.692480087280273
    10. ' w' → logprob: -4.692480087280273

Token 232: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17693190276622772
    2. '=' → logprob: -2.426931858062744
    3. ' if' → logprob: -3.801931858062744
    4. ' ' → logprob: -4.426931858062744
    5. ' edges' → logprob: -5.301931858062744
    6. ' l' → logprob: -5.301931858062744
    7. '   ' → logprob: -5.551931858062744
    8. '0' → logprob: -5.926931858062744
    9. ',' → logprob: -5.926931858062744
    10. 'l' → logprob: -6.051931858062744

Token 233: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37992826104164124
    2. ' ' → logprob: -1.7549282312393188
    3. ' (' → logprob: -3.0049283504486084
    4. ' l' → logprob: -3.7549283504486084
    5. '1' → logprob: -4.004928112030029
    6. 'l' → logprob: -4.129928112030029
    7. '(' → logprob: -5.004928112030029
    8. ' w' → logprob: -5.004928112030029
    9. 'w' → logprob: -5.254928112030029
    10. ' True' → logprob: -5.379928112030029

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04403994232416153
    2. '1' → logprob: -4.169039726257324
    3. 'True' → logprob: -4.669039726257324
    4. 'False' → logprob: -4.794039726257324
    5. 'l' → logprob: -5.419039726257324
    6. 'w' → logprob: -6.294039726257324
    7. ' ' → logprob: -7.044039726257324
    8. '(' → logprob: -7.919039726257324
    9. ' True' → logprob: -7.919039726257324
    10. ''w' → logprob: -8.044039726257324

Token 235: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19315679371356964
    2. ' edges' → logprob: -2.6931567192077637
    3. '           ' → logprob: -3.3181567192077637
    4. ',' → logprob: -4.068156719207764
    5. '   ' → logprob: -4.318156719207764
    6. ' l' → logprob: -4.443156719207764
    7. ' ,' → logprob: -4.943156719207764
    8. 'edges' → logprob: -5.693156719207764
    9. ' if' → logprob: -5.943156719207764
    10. ' company' → logprob: -5.943156719207764

Token 236: ' company' (ID: 3175)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.007063442841172218
    2. 'l' → logprob: -6.132063388824463
    3. '           ' → logprob: -6.257063388824463
    4. '0' → logprob: -7.132063388824463
    5. '1' → logprob: -7.257063388824463
    6. ' ' → logprob: -7.632063388824463
    7. ' c' → logprob: -8.757063865661621
    8. ' ' → logprob: -9.007063865661621
    9. ' company' → logprob: -9.007063865661621
    10. 'company' → logprob: -9.257063865661621

Token 237: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.3869559168815613
    2. 'B' → logprob: -1.261955976486206
    3. ' ' → logprob: -4.386955738067627
    4. '=' → logprob: -5.011955738067627
    5. 'A' → logprob: -5.011955738067627
    6. ' A' → logprob: -5.136955738067627
    7. ' =' → logprob: -5.386955738067627
    8. '0' → logprob: -7.136955738067627
    9. '<|end|>' → logprob: -7.886955738067627
    10. ' a' → logprob: -10.011956214904785

Token 238: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.20468664169311523
    2. ' =' → logprob: -1.8296866416931152
    3. '=' → logprob: -4.204686641693115
    4. ' ' → logprob: -5.079686641693115
    5. '<|end|>' → logprob: -6.329686641693115
    6. 'as' → logprob: -7.204686641693115
    7. '<|end|>' → logprob: -8.579687118530273
    8. ' is' → logprob: -8.704687118530273
    9. '0' → logprob: -9.454687118530273
    10. '           ' → logprob: -9.579687118530273

Token 239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06198393553495407
    2. ' ' → logprob: -2.811983823776245
    3. '0' → logprob: -12.061984062194824
    4. 'int' → logprob: -12.686984062194824
    5. ' ' → logprob: -12.936984062194824
    6. '   ' → logprob: -13.561984062194824
    7. ' int' → logprob: -14.499484062194824
    8. '```' → logprob: -14.999484062194824
    9. '
' → logprob: -15.311984062194824
    10. 'l' → logprob: -15.499484062194824

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020711649267468601
    2. ' ' → logprob: -8.50020694732666
    3. 'int' → logprob: -13.00020694732666
    4. '0' → logprob: -13.62520694732666
    5. 'l' → logprob: -16.750207901000977
    6. ' int' → logprob: -17.500207901000977
    7. '   ' → logprob: -17.625207901000977
    8. '
' → logprob: -18.312707901000977
    9. ' ' → logprob: -18.312707901000977
    10. '-' → logprob: -18.562707901000977

Token 241: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2566045820713043
    2. '   ' → logprob: -2.5066046714782715
    3. ' edges' → logprob: -2.6316046714782715
    4. '       ' → logprob: -3.3816046714782715
    5. 'edges' → logprob: -4.2566046714782715
    6. ',' → logprob: -4.7566046714782715
    7. '
' → logprob: -5.6316046714782715
    8. '    
' → logprob: -6.3816046714782715
    9. ' 
' → logprob: -6.5066046714782715
    10. ' l' → logprob: -6.7566046714782715

Token 242: ' ease' (ID: 18380)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.9900588393211365
    2. ' distinguish' → logprob: -2.1150588989257812
    3. 'edges' → logprob: -2.4900588989257812
    4. ' differentiate' → logprob: -2.7400588989257812
    5. ' continue' → logprob: -2.9900588989257812
    6. '           ' → logprob: -3.2400588989257812
    7. ')' → logprob: -3.6150588989257812
    8. '       ' → logprob: -3.8650588989257812
    9. 'dist' → logprob: -3.8650588989257812
    10. 'continue' → logprob: -4.115058898925781

Token 243: ' counting' (ID: 43276)
  Prédit: ' sorting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorting' → logprob: -0.35832884907722473
    2. ' the' → logprob: -2.4833288192749023
    3. ' comparisons' → logprob: -2.6083288192749023
    4. ' processing' → logprob: -3.8583288192749023
    5. ' edges' → logprob: -3.8583288192749023
    6. ' comparison' → logprob: -3.9833288192749023
    7. 'the' → logprob: -4.108328819274902
    8. 'sorting' → logprob: -4.233328819274902
    9. ' integration' → logprob: -5.108328819274902
    10. ' l' → logprob: -5.233328819274902

Token 244: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3243359327316284
    2. '   ' → logprob: -2.449336051940918
    3. ' edges' → logprob: -2.574336051940918
    4. ' l' → logprob: -2.949336051940918
    5. '       ' → logprob: -3.449336051940918
    6. '	l' → logprob: -5.324336051940918
    7. 'edges' → logprob: -5.574336051940918
    8. 'l' → logprob: -5.824336051940918
    9. ' company' → logprob: -6.074336051940918
    10. ',' → logprob: -6.324336051940918

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7906487584114075
    2. '   ' → logprob: -1.6656486988067627
    3. '       ' → logprob: -1.7906486988067627
    4. ' edges' → logprob: -2.4156486988067627
    5. ' l' → logprob: -3.1656486988067627
    6. ' c' → logprob: -4.790648937225342
    7. 'edges' → logprob: -4.790648937225342
    8. '	l' → logprob: -4.915648937225342
    9. '	   ' → logprob: -5.540648937225342
    10. ' company' → logprob: -5.540648937225342

Token 246: ' comp' (ID: 1050)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4835463762283325
    2. ' c' → logprob: -1.4835463762283325
    3. 'company' → logprob: -1.8585463762283325
    4. ' company' → logprob: -2.358546257019043
    5. ' l' → logprob: -2.483546257019043
    6. 'l' → logprob: -2.858546257019043
    7. ' if' → logprob: -3.108546257019043
    8. '           ' → logprob: -3.483546257019043
    9. 'if' → logprob: -3.858546257019043
    10. ' edges' → logprob: -3.858546257019043

Token 247: ' =' (ID: 314)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.0597052574157715
    2. ' =' → logprob: -1.3097052574157715
    3. ',' → logprob: -1.5597052574157715
    4. '=' → logprob: -1.8097052574157715
    5. '_id' → logprob: -6.5597052574157715
    6. '_flag' → logprob: -6.6847052574157715
    7. 'an' → logprob: -7.0597052574157715
    8. '_info' → logprob: -7.1847052574157715
    9. '_' → logprob: -7.3097052574157715
    10. ',_' → logprob: -7.4347052574157715

Token 248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2315988838672638
    2. ' ' → logprob: -1.6065988540649414
    3. '1' → logprob: -5.981598854064941
    4. ' int' → logprob: -6.106598854064941
    5. 'int' → logprob: -6.606598854064941
    6. ' (' → logprob: -10.606598854064941
    7. ' l' → logprob: -10.981598854064941
    8. 'l' → logprob: -11.731598854064941
    9. '(int' → logprob: -12.606598854064941
    10. '(' → logprob: -12.731598854064941

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02659345418214798
    2. '1' → logprob: -3.9015934467315674
    3. 'int' → logprob: -5.4015936851501465
    4. ' ' → logprob: -6.6515936851501465
    5. 'l' → logprob: -9.276593208312988
    6. ' int' → logprob: -9.276593208312988
    7. '(int' → logprob: -11.151593208312988
    8. '(' → logprob: -11.151593208312988
    9. 'w' → logprob: -12.401593208312988
    10. ' l' → logprob: -13.276593208312988

Token 250: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006051208823919296
    2. 'if' → logprob: -5.131051063537598
    3. '           ' → logprob: -9.381051063537598
    4. '	if' → logprob: -10.756051063537598
    5. '
' → logprob: -12.006051063537598
    6. ' ' → logprob: -12.131051063537598
    7. '		' → logprob: -13.131051063537598
    8. '       ' → logprob: -14.506051063537598
    9. '<|end|>' → logprob: -14.506051063537598
    10. '   ' → logprob: -14.756051063537598

Token 251: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.37274250388145447
    2. 'l' → logprob: -1.2477425336837769
    3. ' w' → logprob: -4.247742652893066
    4. 'w' → logprob: -4.747742652893066
    5. ' u' → logprob: -7.497742652893066
    6. 'u' → logprob: -8.122742652893066
    7. ' int' → logprob: -10.372742652893066
    8. ' ' → logprob: -10.372742652893066
    9. 'int' → logprob: -10.372742652893066
    10. ' len' → logprob: -11.622742652893066

Token 252: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5871647000312805
    2. ' ==' → logprob: -0.8371647000312805
    3. '[' → logprob: -4.587164878845215
    4. '=='' → logprob: -7.212164878845215
    5. '=="' → logprob: -8.712164878845215
    6. ' =='' → logprob: -10.837164878845215
    7. '=' → logprob: -10.962164878845215
    8. '==
' → logprob: -11.087164878845215
    9. ' ' → logprob: -11.962164878845215
    10. '.startswith' → logprob: -12.337164878845215

Token 253: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.041199978440999985
    2. '"A' → logprob: -3.5411999225616455
    3. ' '' → logprob: -4.791200160980225
    4. 'A' → logprob: -6.041200160980225
    5. ''' → logprob: -7.791200160980225
    6. ''a' → logprob: -8.666199684143066
    7. ' "' → logprob: -10.416199684143066
    8. '"' → logprob: -10.666199684143066
    9. ''S' → logprob: -11.416199684143066
    10. '’A' → logprob: -11.541199684143066

Token 254: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011505763977766037
    2. ''A' → logprob: -4.636505603790283
    3. 'a' → logprob: -7.511505603790283
    4. ''' → logprob: -7.511505603790283
    5. '"A' → logprob: -8.011506080627441
    6. '0' → logprob: -9.386506080627441
    7. ' A' → logprob: -9.761506080627441
    8. '
' → logprob: -10.011506080627441
    9. '"' → logprob: -10.636506080627441
    10. '1' → logprob: -10.761506080627441

Token 255: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -7.107425062713446e-06
    2. '\n' → logprob: -12.125006675720215
    3. ' '' → logprob: -14.250006675720215
    4. 'else' → logprob: -14.375006675720215
    5. '"' → logprob: -15.625006675720215
    6. ' else' → logprob: -16.50000762939453
    7. ''\' → logprob: -17.12500762939453
    8. ''
' → logprob: -17.87500762939453
    9. ')'' → logprob: -18.25000762939453
    10. '')' → logprob: -18.62500762939453

Token 256: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2014150768518448
    2. 'else' → logprob: -1.7014150619506836
    3. '	else' → logprob: -13.326415061950684
    4. '       ' → logprob: -17.076416015625
    5. '   ' → logprob: -17.201416015625
    6. '```' → logprob: -17.201416015625
    7. ' ' → logprob: -17.326416015625
    8. '
' → logprob: -18.451416015625
    9. 'lse' → logprob: -19.451416015625
    10. 'els' → logprob: -19.451416015625

Token 257: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931481957435608
    2. ' ' → logprob: -0.6931481957435608
    3. ' ' → logprob: -14.068148612976074
    4. '0' → logprob: -16.693147659301758
    5. ' 
' → logprob: -18.193147659301758
    6. '   ' → logprob: -18.755647659301758
    7. '```' → logprob: -19.068147659301758
    8. '  ' → logprob: -19.255647659301758
    9. '<|end|>' → logprob: -19.255647659301758
    10. ',' → logprob: -19.443147659301758

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '0' → logprob: -20.125139236450195
    4. '   ' → logprob: -20.937639236450195
    5. '１' → logprob: -21.125139236450195
    6. ' ' → logprob: -21.187639236450195
    7. '۱' → logprob: -21.437639236450195
    8. '  ' → logprob: -21.937639236450195
    9. '2' → logprob: -22.000139236450195
    10. '```' → logprob: -22.375139236450195

Token 259: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004131536406930536
    2. ' edges' → logprob: -8.250412940979004
    3. '       ' → logprob: -9.625412940979004
    4. 'edges' → logprob: -10.000412940979004
    5. ',' → logprob: -11.000412940979004
    6. '   ' → logprob: -11.750412940979004
    7. '<|end|>' → logprob: -12.000412940979004
    8. '
' → logprob: -13.125412940979004
    9. '(edges' → logprob: -13.500412940979004
    10. '<|end|>' → logprob: -13.625412940979004

Token 260: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00962150190025568
    2. ' edges' → logprob: -5.384621620178223
    3. 'edges' → logprob: -6.134621620178223
    4. '       ' → logprob: -6.134621620178223
    5. ',' → logprob: -8.509621620178223
    6. '   ' → logprob: -8.634621620178223
    7. '<|end|>' → logprob: -9.009621620178223
    8. '(edges' → logprob: -9.759621620178223
    9. '<|end|>' → logprob: -10.259621620178223
    10. '.edges' → logprob: -11.134621620178223

Token 261: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.4126189351081848
    2. 'edges' (adapté à ' edges') → logprob: -1.41261887550354
    3. '           ' → logprob: -2.41261887550354
    4. '       ' → logprob: -5.912619113922119
    5. '   ' → logprob: -6.287619113922119
    6. '(edges' → logprob: -9.037618637084961
    7. '
' → logprob: -9.162618637084961
    8. '.edges' → logprob: -9.287618637084961
    9. '_edges' → logprob: -10.537618637084961
    10. '            
' → logprob: -10.787618637084961

Token 262: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.636475493200123e-05
    2. '.' → logprob: -9.500076293945312
    3. ' .' → logprob: -14.875076293945312
    4. '.ap' → logprob: -15.125076293945312
    5. '.app' → logprob: -15.250076293945312
    6. '.push' → logprob: -15.625076293945312
    7. 'append' → logprob: -15.750076293945312
    8. ').' → logprob: -16.000076293945312
    9. '.Append' → logprob: -16.500076293945312
    10. '.add' → logprob: -16.750076293945312

Token 263: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0006211769068613648
    2. '(u' → logprob: -7.500621318817139
    3. '(' → logprob: -9.62562084197998
    4. ' ((' → logprob: -13.62562084197998
    5. ' (' → logprob: -15.00062084197998
    6. '(((' → logprob: -15.25062084197998
    7. '([' → logprob: -15.87562084197998
    8. '   ' → logprob: -15.87562084197998
    9. '[(' → logprob: -16.625621795654297
    10. '```' → logprob: -18.625621795654297

Token 264: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00021605310030281544
    2. ' w' → logprob: -9.000216484069824
    3. 'u' → logprob: -9.375216484069824
    4. ')' → logprob: -12.250216484069824
    5. '   ' → logprob: -13.125216484069824
    6. 'comp' → logprob: -15.375216484069824
    7. '	w' → logprob: -16.000215530395508
    8. '_w' → logprob: -16.375215530395508
    9. 'x' → logprob: -16.375215530395508
    10. ' ' → logprob: -16.500215530395508

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037251986213959754
    2. ' ,' → logprob: -8.250372886657715
    3. ',u' → logprob: -9.125372886657715
    4. ',w' → logprob: -14.000372886657715
    5. ',
' → logprob: -14.625372886657715
    6. ',x' → logprob: -14.750372886657715
    7. ',n' → logprob: -15.500372886657715
    8. ',user' → logprob: -16.3753719329834
    9. ',c' → logprob: -16.5003719329834
    10. ',int' → logprob: -16.8753719329834

Token 266: ' comp' (ID: 1050)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6482137441635132
    2. 'comp' → logprob: -0.7732137441635132
    3. ' comp' → logprob: -4.648213863372803
    4. ' u' → logprob: -5.148213863372803
    5. '   ' → logprob: -9.898213386535645
    6. 'com' → logprob: -11.648213386535645
    7. '(comp' → logprob: -11.835713386535645
    8. '	comp' → logprob: -12.023213386535645
    9. ' ' → logprob: -12.335713386535645
    10. '    ' → logprob: -12.773213386535645

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0061624664813280106
    2. ',u' → logprob: -5.131162643432617
    3. ' ,' → logprob: -8.381162643432617
    4. ',x' → logprob: -13.506162643432617
    5. '))' → logprob: -13.756162643432617
    6. ')' → logprob: -14.381162643432617
    7. ',n' → logprob: -14.631162643432617
    8. '   ' → logprob: -14.756162643432617
    9. ',v' → logprob: -15.881162643432617
    10. ',
' → logprob: -16.006162643432617

Token 268: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0031790214125066996
    2. ' u' → logprob: -5.75317907333374
    3. '   ' → logprob: -13.753178596496582
    4. ')' → logprob: -16.3781795501709
    5. '	u' → logprob: -16.5031795501709
    6. '(u' → logprob: -18.2531795501709
    7. ' ' → logprob: -18.6281795501709
    8. ',u' → logprob: -18.6281795501709
    9. '[u' → logprob: -18.7531795501709
    10. '0' → logprob: -19.1281795501709

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02225648984313011
    2. ',v' → logprob: -3.897256374359131
    3. ' ,' → logprob: -6.522256374359131
    4. '-' → logprob: -8.397256851196289
    5. ' -' → logprob: -11.397256851196289
    6. ',
' → logprob: -12.647256851196289
    7. ')' → logprob: -13.897256851196289
    8. ',u' → logprob: -14.772256851196289
    9. 'v' → logprob: -14.897256851196289
    10. ' v' → logprob: -15.772256851196289

Token 270: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015036711702123284
    2. ' v' → logprob: -6.5015034675598145
    3. ')v' → logprob: -14.501503944396973
    4. '   ' → logprob: -14.626503944396973
    5. ')' → logprob: -15.626503944396973
    6. '	v' → logprob: -15.751503944396973
    7. '    ' → logprob: -16.626502990722656
    8. ' ' → logprob: -16.751502990722656
    9. '
' → logprob: -16.876502990722656
    10. '  ' → logprob: -18.001502990722656

Token 271: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005423958413302898
    2. ')' → logprob: -5.2554240226745605
    3. '))
' → logprob: -8.630423545837402
    4. ' ))' → logprob: -12.630423545837402
    5. '   ' → logprob: -12.880423545837402
    6. '       ' → logprob: -13.130423545837402
    7. ')))' → logprob: -13.505423545837402
    8. ')
' → logprob: -13.755423545837402
    9. '),' → logprob: -15.130423545837402
    10. ',' → logprob: -15.130423545837402

Token 272: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7113384008407593
    2. '<|end|>' → logprob: -1.0863384008407593
    3. '
' → logprob: -2.461338520050049
    4. '       ' → logprob: -2.836338520050049
    5. '    
' → logprob: -4.836338520050049
    6. '  
' → logprob: -4.836338520050049
    7. ')' → logprob: -5.086338520050049
    8. '        
' → logprob: -6.211338520050049
    9. '<|end|>' → logprob: -6.836338520050049
    10. ' 
' → logprob: -7.586338520050049

Token 273: ' #' (ID: 1069)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.316051721572876
    2. ' par' → logprob: -2.316051721572876
    3. '   ' → logprob: -2.691051721572876
    4. 'edges' → logprob: -2.816051721572876
    5. 'par' → logprob: -3.191051721572876
    6. '       ' → logprob: -6.441051483154297
    7. '
' → logprob: -6.566051483154297
    8. '	par' → logprob: -7.941051483154297
    9. '    
' → logprob: -9.691051483154297
    10. ' ' → logprob: -10.941051483154297

Token 274: ' We' (ID: 1416)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.039891209453344345
    2. ' par' → logprob: -3.914891242980957
    3. 'edges' → logprob: -4.289891242980957
    4. ' edges' → logprob: -5.789891242980957
    5. '   ' → logprob: -6.289891242980957
    6. '       ' → logprob: -8.414891242980957
    7. '#' → logprob: -9.664891242980957
    8. '
' → logprob: -9.789891242980957
    9. 'def' → logprob: -9.789891242980957
    10. 'parent' → logprob: -10.539891242980957

Token 275: ' want' (ID: 1682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8777565360069275
    2. ' edges' → logprob: -1.1277565956115723
    3. '   ' → logprob: -2.2527565956115723
    4. 'edges' → logprob: -2.3777565956115723
    5. ' sort' → logprob: -3.2527565956115723
    6. 'sort' → logprob: -4.252756595611572
    7. '.sort' → logprob: -5.752756595611572
    8. '#' → logprob: -6.627756595611572
    9. '=' → logprob: -7.627756595611572
    10. ' #' → logprob: -7.752756595611572

Token 276: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05655818432569504
    2. 'to' → logprob: -2.931558132171631
    3. ' edges' → logprob: -6.681558132171631
    4. 'edges' → logprob: -9.556558609008789
    5. '    ' → logprob: -9.806558609008789
    6. '       ' → logprob: -10.306558609008789
    7. '   ' → logprob: -10.556558609008789
    8. 's' → logprob: -10.556558609008789
    9. 'total' → logprob: -10.556558609008789
    10. 't' → logprob: -10.556558609008789

Token 277: ' pick' (ID: 5230)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.767727255821228
    2. ' edges' → logprob: -1.267727255821228
    3. 'sort' → logprob: -1.767727255821228
    4. ' sort' → logprob: -3.1427273750305176
    5. ' minimize' → logprob: -4.642727375030518
    6. '#' → logprob: -4.892727375030518
    7. 'count' → logprob: -5.142727375030518
    8. 'find' → logprob: -5.142727375030518
    9. ' find' → logprob: -5.392727375030518
    10. 'min' → logprob: -6.017727375030518

Token 278: ' exactly' (ID: 9707)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.09842676669359207
    2. 'edges' → logprob: -2.4734268188476562
    3. ' only' → logprob: -5.223426818847656
    4. ' the' → logprob: -6.223426818847656
    5. 'only' → logprob: -7.848426818847656
    6. 'the' → logprob: -8.098426818847656
    7. ' a' → logprob: -8.098426818847656
    8. '(edges' → logprob: -8.223426818847656
    9. '   ' → logprob: -9.223426818847656
    10. ' all' → logprob: -9.223426818847656

Token 279: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.25369885563850403
    2. ' k' → logprob: -1.5036988258361816
    3. 'm' → logprob: -7.378698825836182
    4. ' edges' → logprob: -8.12869930267334
    5. ' m' → logprob: -8.62869930267334
    6. ' n' → logprob: -8.75369930267334
    7. 'n' → logprob: -9.00369930267334
    8. ' (' → logprob: -9.75369930267334
    9. '(k' → logprob: -9.87869930267334
    10. 'edges' → logprob: -9.87869930267334

Token 280: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.014896865002810955
    2. 'edges' → logprob: -4.764896869659424
    3. ' ' → logprob: -6.014896869659424
    4. '<|end|>' → logprob: -7.139896869659424
    5. ' company' → logprob: -7.264896869659424
    6. '0' → logprob: -7.514896869659424
    7. ' spaces' → logprob: -8.389896392822266
    8. ' more' → logprob: -8.514896392822266
    9. ' space' → logprob: -8.764896392822266
    10. ')' → logprob: -8.764896392822266

Token 281: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2033812999725342
    2. ' that' → logprob: -1.7033812999725342
    3. ' from' → logprob: -1.8283812999725342
    4. ' of' → logprob: -2.578381299972534
    5. ' with' → logprob: -2.703381299972534
    6. 'from' → logprob: -2.828381299972534
    7. '<|end|>' → logprob: -2.953381299972534
    8. '       ' → logprob: -3.328381299972534
    9. ' to' → logprob: -4.078381538391113
    10. ' for' → logprob: -4.953381538391113

Token 282: ' A' (ID: 355)
  Prédit: ' company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.18041090667247772
    2. 'company' → logprob: -1.8054108619689941
    3. ' edges' → logprob: -8.305411338806152
    4. ' the' → logprob: -8.805411338806152
    5. 'comp' → logprob: -9.430411338806152
    6. 'the' → logprob: -9.680411338806152
    7. 'com' → logprob: -10.930411338806152
    8. 'A' → logprob: -11.055411338806152
    9. ' comp' → logprob: -11.180411338806152
    10. ' ' → logprob: -11.180411338806152

Token 283: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.39728423953056335
    2. ' n' → logprob: -2.3972842693328857
    3. ' m' → logprob: -2.7722842693328857
    4. ' edges' → logprob: -2.8972842693328857
    5. '<|end|>' → logprob: -3.8972842693328857
    6. 'and' → logprob: -3.8972842693328857
    7. 'm' → logprob: -4.147284030914307
    8. ' rest' → logprob: -4.647284030914307
    9. ' ' → logprob: -4.772284030914307
    10. ' k' → logprob: -4.897284030914307

Token 285: ' n' (ID: 297)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.825401782989502
    2. 'm' → logprob: -1.075401782989502
    3. ' n' → logprob: -2.575401782989502
    4. '(m' → logprob: -3.075401782989502
    5. ' exactly' → logprob: -3.575401782989502
    6. ' (' → logprob: -3.950401782989502
    7. 'n' → logprob: -3.950401782989502
    8. 'exact' → logprob: -5.200401782989502
    9. '(n' → logprob: -5.325401782989502
    10. '(' → logprob: -5.575401782989502

Token 286: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1427198052406311
    2. ' -' → logprob: -2.0177197456359863
    3. '       ' → logprob: -11.267720222473145
    4. ' ' → logprob: -11.267720222473145
    5. '   ' → logprob: -11.642720222473145
    6. ' edges' → logprob: -13.892720222473145
    7. '-
' → logprob: -13.892720222473145
    8. '-k' → logprob: -14.142720222473145
    9. '	' → logprob: -14.267720222473145
    10. ' ' → logprob: -14.267720222473145

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022426776122301817
    2. ' ' → logprob: -6.127242565155029
    3. 'k' → logprob: -10.252243041992188
    4. ' k' → logprob: -11.377243041992188
    5. '-' → logprob: -12.377243041992188
    6. '   ' → logprob: -12.752243041992188
    7. '```' → logprob: -13.752243041992188
    8. '
' → logprob: -14.002243041992188
    9. '           ' → logprob: -14.939743041992188
    10. '       ' → logprob: -15.314743041992188

Token 288: '-k' (ID: 10897)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.1455216258764267
    2. ' -' → logprob: -3.270521640777588
    3. '-' → logprob: -3.520521640777588
    4. '<|end|>' → logprob: -3.520521640777588
    5. '-k' → logprob: -4.270521640777588
    6. 'edges' → logprob: -4.395521640777588
    7. 'from' → logprob: -5.270521640777588
    8. ' from' → logprob: -6.770521640777588
    9. ' ' → logprob: -7.020521640777588
    10. ' ones' → logprob: -7.145521640777588

Token 289: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.08266348391771317
    2. ' from' → logprob: -3.0826635360717773
    3. 'edges' → logprob: -4.332663536071777
    4. '<|end|>' → logprob: -4.707663536071777
    5. 'from' → logprob: -5.332663536071777
    6. ' ' → logprob: -5.582663536071777
    7. '(edges' → logprob: -6.457663536071777
    8. ' ones' → logprob: -7.707663536071777
    9. ')' → logprob: -8.957663536071777
    10. '_edges' → logprob: -9.457663536071777

Token 290: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.10080166906118393
    2. 'from' → logprob: -2.350801706314087
    3. '<|end|>' → logprob: -8.475801467895508
    4. ' ' → logprob: -8.725801467895508
    5. '(' → logprob: -9.225801467895508
    6. ' (' → logprob: -10.100801467895508
    7. '	from' → logprob: -11.100801467895508
    8. ',' → logprob: -11.225801467895508
    9. '[' → logprob: -11.600801467895508
    10. '.from' → logprob: -11.850801467895508

Token 291: ' B' (ID: 418)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6157292723655701
    2. 'B' → logprob: -1.7407293319702148
    3. ' A' → logprob: -1.7407293319702148
    4. ' B' → logprob: -2.990729331970215
    5. '0' → logprob: -3.865729331970215
    6. ' ' → logprob: -4.115729331970215
    7. ' edges' → logprob: -4.490729331970215
    8. 'edges' → logprob: -5.240729331970215
    9. '1' → logprob: -5.490729331970215
    10. ' the' → logprob: -8.490729331970215

Token 292: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1016402468085289
    2. ',' → logprob: -3.851640224456787
    3. '<|end|>' → logprob: -3.851640224456787
    4. '
' → logprob: -3.976640224456787
    5. '        
' → logprob: -4.351640224456787
    6. '.' → logprob: -4.601640224456787
    7. ' edges' → logprob: -5.726640224456787
    8. ',
' → logprob: -5.976640224456787
    9. '<|end|>' → logprob: -6.726640224456787
    10. '(edges' → logprob: -6.976640224456787

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08235294371843338
    2. '<|end|>' → logprob: -2.832352876663208
    3. '
' → logprob: -4.207353115081787
    4. '        
' → logprob: -6.082353115081787
    5. '<|end|>' → logprob: -6.707353115081787
    6. ',' → logprob: -7.207353115081787
    7. '   ' → logprob: -7.832353115081787
    8. ' edges' → logprob: -8.332352638244629
    9. 'edges' → logprob: -9.332352638244629
    10. ')' → logprob: -9.707352638244629

Token 294: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.902158796787262
    2. ' edges' → logprob: -1.0271587371826172
    3. '       ' → logprob: -1.7771587371826172
    4. '   ' → logprob: -3.277158737182617
    5. '
' → logprob: -3.777158737182617
    6. '        
' → logprob: -6.027158737182617
    7. '(edges' → logprob: -6.902158737182617
    8. '_edges' → logprob: -7.652158737182617
    9. '.edges' → logprob: -7.777158737182617
    10. '    
' → logprob: -8.027158737182617

Token 295: ' There' (ID: 3274)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.16513793170452118
    2. ' edges' → logprob: -1.9151378870010376
    3. '#' → logprob: -6.290137767791748
    4. '
' → logprob: -7.165137767791748
    5. '   ' → logprob: -7.165137767791748
    6. 'par' → logprob: -7.415137767791748
    7. 'parent' → logprob: -8.290138244628906
    8. ' par' → logprob: -8.415138244628906
    9. 'def' → logprob: -8.415138244628906
    10. '       ' → logprob: -10.165138244628906

Token 296: ' may' (ID: 1340)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.2047561407089233
    2. ' is' → logprob: -1.2047561407089233
    3. ' are' → logprob: -2.079756259918213
    4. 'are' → logprob: -2.454756259918213
    5. '#' → logprob: -2.579756259918213
    6. ''s' → logprob: -2.829756259918213
    7. 'def' → logprob: -3.454756259918213
    8. 'edges' → logprob: -5.579756259918213
    9. 'must' → logprob: -5.704756259918213
    10. 'm' → logprob: -6.454756259918213

Token 297: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0431339293718338
    2. 'be' → logprob: -3.6681339740753174
    3. '<|end|>' → logprob: -4.543133735656738
    4. '=' → logprob: -7.168133735656738
    5. '
' → logprob: -7.543133735656738
    6. '#' → logprob: -7.543133735656738
    7. '<|end|>' → logprob: -7.543133735656738
    8. ' ' → logprob: -7.793133735656738
    9. 'def' → logprob: -7.918133735656738
    10. 'continue' → logprob: -7.918133735656738

Token 298: ' several' (ID: 4919)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.16841591894626617
    2. ' multiple' → logprob: -2.7934160232543945
    3. 'a' → logprob: -3.5434160232543945
    4. 'more' → logprob: -3.9184160232543945
    5. 'no' → logprob: -4.1684160232543945
    6. 'additional' → logprob: -5.1684160232543945
    7. 'other' → logprob: -5.5434160232543945
    8. 'cases' → logprob: -5.5434160232543945
    9. 'some' → logprob: -6.0434160232543945
    10. 'edges' → logprob: -6.1684160232543945

Token 299: ' MST' (ID: 123058)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.1795486956834793
    2. ' strategies' → logprob: -3.054548740386963
    3. ' approaches' → logprob: -3.304548740386963
    4. '<|end|>' → logprob: -3.804548740386963
    5. 'ways' → logprob: -4.429548740386963
    6. ' more' → logprob: -4.429548740386963
    7. ' possible' → logprob: -4.804548740386963
    8. 'strateg' → logprob: -5.179548740386963
    9. 'possible' → logprob: -5.429548740386963
    10. ' lines' → logprob: -5.554548740386963

Token 300: 's' (ID: 82)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: ' varying' (ID: 44689)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4853728115558624
    2. '       ' → logprob: -1.73537278175354
    3. '<|end|>' → logprob: -2.11037278175354
    4. ',' → logprob: -3.36037278175354
    5. '   ' → logprob: -3.86037278175354
    6. '<|end|>' → logprob: -4.860373020172119
    7. '        
' → logprob: -5.360373020172119
    8. ',
' → logprob: -5.485373020172119
    9. '    
' → logprob: -5.735373020172119
    10. ' edges' → logprob: -6.360373020172119

Token 302: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: ' chosen' (ID: 16180)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.0546932220458984
    2. 'the' → logprob: -1.4296932220458984
    3. 'weight' → logprob: -2.0546932220458984
    4. 'edges' → logprob: -2.9296932220458984
    5. 'their' → logprob: -3.0546932220458984
    6. 'weights' → logprob: -3.1796932220458984
    7. 'total' → logprob: -3.1796932220458984
    8. ' edges' → logprob: -3.5546932220458984
    9. ' cost' → logprob: -3.8046932220458984
    10. 'terms' → logprob: -4.804693222045898

Token 304: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.14784196019172668
    2. 'edges' → logprob: -2.2728419303894043
    3. '<|end|>' → logprob: -4.647841930389404
    4. 'company' → logprob: -4.897841930389404
    5. 'companies' → logprob: -4.897841930389404
    6. ' company' → logprob: -6.022841930389404
    7. ' companies' → logprob: -7.022841930389404
    8. 'weight' → logprob: -7.522841930389404
    9. 'cost' → logprob: -7.897841930389404
    10. 'weights' → logprob: -7.897841930389404

Token 305: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2798593044281006
    2. ' A' → logprob: -2.1548593044281006
    3. 'company' → logprob: -2.2798593044281006
    4. ' company' → logprob: -3.7798593044281006
    5. 'different' → logprob: -7.40485954284668
    6. 'each' → logprob: -7.65485954284668
    7. ' each' → logprob: -7.90485954284668
    8. 'companies' → logprob: -8.27985954284668
    9. 'both' → logprob: -8.65485954284668
    10. '```' → logprob: -8.77985954284668

Token 307: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.782798707485199
    2. '
' → logprob: -0.907798707485199
    3. '<|end|>' → logprob: -2.1577987670898438
    4. '   ' → logprob: -5.157798767089844
    5. '<|end|>' → logprob: -5.532798767089844
    6. '        
' → logprob: -5.532798767089844
    7. ',' → logprob: -6.157798767089844
    8. '    
' → logprob: -6.157798767089844
    9. '  
' → logprob: -6.407798767089844
    10. 'n' → logprob: -7.157798767089844

Token 308: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.016202813014388084
    2. ' B' → logprob: -4.141202926635742
    3. '#' → logprob: -9.516202926635742
    4. 'from' → logprob: -9.766202926635742
    5. ' edges' → logprob: -11.391202926635742
    6. '
' → logprob: -12.016202926635742
    7. 'edges' → logprob: -12.016202926635742
    8. ' from' → logprob: -12.766202926635742
    9. 'def' → logprob: -12.766202926635742
    10. '```' → logprob: -13.391202926635742

Token 309: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5258297324180603
    2. '<|end|>' → logprob: -1.275829792022705
    3. '
' → logprob: -2.400829792022705
    4. '<|end|>' → logprob: -4.025829792022705
    5. ',' → logprob: -4.900829792022705
    6. ' edges' → logprob: -5.525829792022705
    7. '   ' → logprob: -5.650829792022705
    8. '        
' → logprob: -6.150829792022705
    9. 'edges' → logprob: -6.900829792022705
    10. '.' → logprob: -7.525829792022705

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08017923682928085
    2. '
' → logprob: -3.705179214477539
    3. '   ' → logprob: -4.330179214477539
    4. '        
' → logprob: -4.455179214477539
    5. '<|end|>' → logprob: -4.455179214477539
    6. ' edges' → logprob: -4.580179214477539
    7. 'edges' → logprob: -5.955179214477539
    8. '    
' → logprob: -7.205179214477539
    9. '#' → logprob: -7.830179214477539
    10. ' 
' → logprob: -8.205179214477539

Token 311: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.8689879775047302
    2. '       ' → logprob: -1.493988037109375
    3. ' edges' → logprob: -1.493988037109375
    4. '   ' → logprob: -2.493988037109375
    5. '#' (adapté à ' #') → logprob: -3.368988037109375
    6. ' #' → logprob: -5.368988037109375
    7. '        
' → logprob: -5.993988037109375
    8. '
' → logprob: -6.118988037109375
    9. 'def' → logprob: -6.368988037109375
    10. '(edges' → logprob: -6.868988037109375

Token 312: ' Strategy' (ID: 39435)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.3721802234649658
    2. ' edges' → logprob: -1.7471802234649658
    3. '
' → logprob: -2.247180223464966
    4. '#' → logprob: -3.747180223464966
    5. '       ' → logprob: -5.497179985046387
    6. '        
' → logprob: -6.872179985046387
    7. '   ' → logprob: -7.622179985046387
    8. ' #' → logprob: -8.122179985046387
    9. '(edges' → logprob: -8.372179985046387
    10. 'def' → logprob: -8.747179985046387

Token 313: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33686563372612
    2. ' =' → logprob: -1.4618656635284424
    3. ' :' → logprob: -3.7118656635284424
    4. '=' → logprob: -4.586865425109863
    5. '   ' → logprob: -4.836865425109863
    6. ' is' → logprob: -5.586865425109863
    7. ':
' → logprob: -6.086865425109863
    8. '       ' → logprob: -6.711865425109863
    9. '#' → logprob: -7.336865425109863
    10. ' for' → logprob: -7.586865425109863

Token 314: ' binary' (ID: 15600)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4412769079208374
    2. ' low' → logprob: -1.5662769079208374
    3. 'low' → logprob: -2.066277027130127
    4. ' left' → logprob: -2.441277027130127
    5. ' edges' → logprob: -2.441277027130127
    6. 'def' → logprob: -2.691277027130127
    7. ' lo' → logprob: -3.316277027130127
    8. 'left' → logprob: -3.316277027130127
    9. ' #' → logprob: -3.816277027130127
    10. 'edges' → logprob: -4.191277027130127

Token 315: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.30669742822647095
    2. '_search' → logprob: -1.8066973686218262
    3. ' search' → logprob: -2.306697368621826
    4. '_' → logprob: -8.056697845458984
    5. 'earch' → logprob: -11.681697845458984
    6. '-search' → logprob: -12.806697845458984
    7. ' _' → logprob: -12.931697845458984
    8. '	search' → logprob: -13.056697845458984
    9. ' ' → logprob: -13.306697845458984
    10. 'Search' → logprob: -13.556697845458984

Token 316: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4802374839782715
    2. ' on' → logprob: -1.7302374839782715
    3. '(low' → logprob: -2.6052374839782715
    4. ' low' → logprob: -2.8552374839782715
    5. ' over' → logprob: -3.3552374839782715
    6. '(' → logprob: -3.9802374839782715
    7. 'low' → logprob: -5.1052374839782715
    8. 'for' → logprob: -5.7302374839782715
    9. ' lo' → logprob: -6.3552374839782715
    10. '   ' → logprob: -6.4802374839782715

Token 317: ' penalty' (ID: 34689)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.4866039752960205
    2. 'max' → logprob: -1.8616039752960205
    3. ' maximum' → logprob: -1.8616039752960205
    4. ' middle' → logprob: -1.8616039752960205
    5. ' mid' → logprob: -2.2366039752960205
    6. 'maximum' → logprob: -2.9866039752960205
    7. 'middle' → logprob: -2.9866039752960205
    8. ' max' → logprob: -3.3616039752960205
    9. ' maximal' → logprob: -4.986603736877441
    10. 'answer' → logprob: -5.111603736877441

Token 318: ' on' (ID: 402)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -1.0761308670043945
    2. ' on' → logprob: -1.7011308670043945
    3. ' for' → logprob: -1.8261308670043945
    4. '(' → logprob: -2.7011308670043945
    5. ' over' → logprob: -2.8261308670043945
    6. 'low' → logprob: -2.9511308670043945
    7. ' low' → logprob: -3.3261308670043945
    8. ',' → logprob: -3.3261308670043945
    9. ' (' → logprob: -4.3261308670043945
    10. ' =' → logprob: -5.0761308670043945

Token 319: ' using' (ID: 2360)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9666474461555481
    2. ' the' → logprob: -1.4666473865509033
    3. 'the' → logprob: -1.9666473865509033
    4. ' A' → logprob: -2.0916473865509033
    5. ' edges' → logprob: -2.5916473865509033
    6. 'edges' → logprob: -3.9666473865509033
    7. ' ' → logprob: -5.216647624969482
    8. 'company' → logprob: -5.466647624969482
    9. 'a' → logprob: -5.716647624969482
    10. 'w' → logprob: -5.841647624969482

Token 320: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6734070181846619
    2. ' edges' → logprob: -1.9234070777893066
    3. ' A' → logprob: -2.1734070777893066
    4. 'edges' → logprob: -2.2984070777893066
    5. 'company' → logprob: -2.6734070777893066
    6. ' company' → logprob: -3.0484070777893066
    7. '0' → logprob: -5.173407077789307
    8. 'the' → logprob: -6.423407077789307
    9. ' ' → logprob: -6.798407077789307
    10. ' the' → logprob: -6.798407077789307

Token 321: ' edges' (ID: 22569)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.5733419060707092
    2. 'low' → logprob: -1.5733418464660645
    3. 'def' → logprob: -3.0733418464660645
    4. ',' → logprob: -3.1983418464660645
    5. '   ' → logprob: -3.3233418464660645
    6. ' low' → logprob: -3.5733418464660645
    7. '(' → logprob: -4.6983418464660645
    8. '
' → logprob: -4.8233418464660645
    9. ')' → logprob: -4.9483418464660645
    10. ' for' → logprob: -5.1983418464660645

Token 322: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31753236055374146
    2. '   ' → logprob: -1.6925323009490967
    3. '    
' → logprob: -3.1925323009490967
    4. '       ' → logprob: -4.317532539367676
    5. ' 
' → logprob: -4.817532539367676
    6. '  
' → logprob: -4.817532539367676
    7. '' → logprob: -5.567532539367676
    8. ',' → logprob: -5.942532539367676
    9. '        
' → logprob: -6.067532539367676
    10. ',
' → logprob: -6.317532539367676

Token 323: 'or' (ID: 267)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.7628269791603088
    2. ')' → logprob: -1.762826919555664
    3. ' lambda' → logprob: -2.012826919555664
    4. ' mid' → logprob: -2.387826919555664
    5. 'lambda' → logprob: -3.137826919555664
    6. 'low' → logprob: -3.762826919555664
    7. ' low' → logprob: -4.637826919555664
    8. ' )' → logprob: -4.637826919555664
    9. ' penalty' → logprob: -4.637826919555664
    10. ',' → logprob: -4.762826919555664

Token 324: ' use' (ID: 1199)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7149785757064819
    2. ' B' → logprob: -0.9649785757064819
    3. ')' → logprob: -2.2149786949157715
    4. ' )' → logprob: -5.5899786949157715
    5. 'not' → logprob: -6.0899786949157715
    6. ' not' → logprob: -6.3399786949157715
    7. ' ' → logprob: -6.5899786949157715
    8. ' vice' → logprob: -6.7149786949157715
    9. 'vice' → logprob: -6.7149786949157715
    10. ' penalty' → logprob: -6.7149786949157715

Token 325: ' DP' (ID: 51992)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20498862862586975
    2. ' binary' → logprob: -3.454988718032837
    3. ')' → logprob: -3.704988718032837
    4. 'a' → logprob: -3.954988718032837
    5. ' an' → logprob: -3.954988718032837
    6. ' the' → logprob: -4.079988479614258
    7. ' edges' → logprob: -4.204988479614258
    8. 'A' → logprob: -4.579988479614258
    9. ' param' → logprob: -4.704988479614258
    10. 'param' → logprob: -5.329988479614258

Token 326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005714997183531523
    2. ' )' → logprob: -5.3807148933410645
    3. '<|end|>' → logprob: -8.505715370178223
    4. '<|end|>' → logprob: -8.630715370178223
    5. ',' → logprob: -8.880715370178223
    6. ' to' → logprob: -9.380715370178223
    7. ')
' → logprob: -9.380715370178223
    8. ' =' → logprob: -10.005715370178223
    9. 'import' → logprob: -10.130715370178223
    10. '):' → logprob: -10.255715370178223

Token 327: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14324088394641876
    2. '
' → logprob: -2.3932409286499023
    3. '       ' → logprob: -4.143240928649902
    4. '    
' → logprob: -4.143240928649902
    5. ' 
' → logprob: -5.768240928649902
    6. '  
' → logprob: -5.893240928649902
    7. 'def' → logprob: -6.893240928649902
    8. '        
' → logprob: -7.143240928649902
    9. '   
' → logprob: -7.893240928649902
    10. ',' → logprob: -7.893240928649902

Token 328: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.23076550662517548
    2. 'left' → logprob: -2.9807655811309814
    3. '   ' → logprob: -3.1057655811309814
    4. ' low' → logprob: -3.2307655811309814
    5. 'l' → logprob: -3.8557655811309814
    6. 'lo' → logprob: -3.9807655811309814
    7. 'def' → logprob: -4.480765342712402
    8. '
' → logprob: -4.855765342712402
    9. ' lo' → logprob: -5.105765342712402
    10. ' left' → logprob: -5.730765342712402

Token 329: ' We'll' (ID: 46830)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.7606965899467468
    2. 'left' → logprob: -0.8856965899467468
    3. 'def' → logprob: -2.8856966495513916
    4. ' low' → logprob: -4.0106964111328125
    5. 'l' → logprob: -4.1356964111328125
    6. 'lo' → logprob: -4.2606964111328125
    7. ' left' → logprob: -4.5106964111328125
    8. ' lo' → logprob: -6.6356964111328125
    9. '#' → logprob: -6.6356964111328125
    10. '   ' → logprob: -7.1356964111328125

Token 330: ' use' (ID: 1199)
  Prédit: ' use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -1.6027553081512451
    2. ' implement' → logprob: -1.8527553081512451
    3. 'binary' → logprob: -2.477755308151245
    4. ' binary' → logprob: -2.602755308151245
    5. 'use' → logprob: -2.602755308151245
    6. ' continue' → logprob: -2.727755308151245
    7. ' define' → logprob: -2.727755308151245
    8. 'define' → logprob: -2.852755308151245
    9. 'continue' → logprob: -2.852755308151245
    10. ' perform' → logprob: -3.352755308151245

Token 331: ' binary' (ID: 15600)
  Prédit: ' binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.6554098129272461
    2. 'binary' → logprob: -0.7804098129272461
    3. ' a' → logprob: -5.155409812927246
    4. 'def' → logprob: -5.530409812927246
    5. 'a' → logprob: -6.155409812927246
    6. ' penalty' → logprob: -6.405409812927246
    7. '0' → logprob: -6.655409812927246
    8. 'pen' → logprob: -6.655409812927246
    9. 'low' → logprob: -7.280409812927246
    10. 'bis' → logprob: -7.280409812927246

Token 332: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.4100416600704193
    2. 'search' → logprob: -1.1600416898727417
    3. '_search' → logprob: -3.785041570663452
    4. '_' → logprob: -8.785041809082031
    5. ' _' → logprob: -11.035041809082031
    6. '
' → logprob: -11.535041809082031
    7. 'import' → logprob: -12.160041809082031
    8. ' ' → logprob: -13.535041809082031
    9. '-search' → logprob: -13.535041809082031
    10. ' space' → logprob: -13.660041809082031

Token 333: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7275007367134094
    2. ' on' → logprob: -1.2275006771087646
    3. '(' → logprob: -2.1025006771087646
    4. '(low' → logprob: -3.3525006771087646
    5. ' for' → logprob: -3.8525006771087646
    6. ',' → logprob: -3.9775006771087646
    7. 'def' → logprob: -5.602500915527344
    8. ':' → logprob: -5.977500915527344
    9. ' low' → logprob: -6.102500915527344
    10. '    ' → logprob: -6.102500915527344

Token 334: ' an' (ID: 448)
  Prédit: 'pen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pen' → logprob: -1.078973650932312
    2. 'mid' → logprob: -1.203973650932312
    3. 'the' → logprob: -1.203973650932312
    4. ' penalty' → logprob: -4.328973770141602
    5. 'a' → logprob: -4.453973770141602
    6. 'low' → logprob: -4.703973770141602
    7. ' the' → logprob: -5.078973770141602
    8. 'lambda' → logprob: -5.453973770141602
    9. 'left' → logprob: -5.578973770141602
    10. 'middle' → logprob: -5.703973770141602

Token 335: ' auxiliary' (ID: 97016)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.244152307510376
    2. 'int' → logprob: -1.369152307510376
    3. 'extra' → logprob: -2.619152307510376
    4. ' extra' → logprob: -2.869152307510376
    5. 'edge' → logprob: -2.869152307510376
    6. ' integer' → logprob: -2.994152307510376
    7. ' edge' → logprob: -3.119152307510376
    8. 'additional' → logprob: -3.494152307510376
    9. ' penalty' → logprob: -3.619152307510376
    10. ' additional' → logprob: -3.619152307510376

Token 336: ' variable' (ID: 11076)
  Prédit: ' penalty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' penalty' → logprob: -1.5472294092178345
    2. ' variable' → logprob: -1.6722294092178345
    3. 'value' → logprob: -1.7972294092178345
    4. 'cost' → logprob: -2.047229290008545
    5. 'variable' → logprob: -2.297229290008545
    6. ' value' → logprob: -2.672229290008545
    7. ' cost' → logprob: -2.672229290008545
    8. ' parameter' → logprob: -3.422229290008545
    9. 'parameter' → logprob: -3.672229290008545
    10. 'pen' → logprob: -5.422229290008545

Token 337: ' x' (ID: 1215)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -1.5159448385238647
    2. 'low' → logprob: -2.1409449577331543
    3. ' mid' → logprob: -2.2659449577331543
    4. '
' → logprob: -2.5159449577331543
    5. 'left' → logprob: -2.5159449577331543
    6. ' left' → logprob: -2.6409449577331543
    7. 'mid' → logprob: -2.7659449577331543
    8. ' lo' → logprob: -2.8909449577331543
    9. 'l' → logprob: -3.0159449577331543
    10. ' l' → logprob: -3.1409449577331543

Token 338: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.880056619644165
    2. ':' → logprob: -1.755056619644165
    3. '
' → logprob: -1.755056619644165
    4. '       ' → logprob: -2.880056619644165
    5. '   ' → logprob: -3.380056619644165
    6. ' =' → logprob: -3.630056619644165
    7. ',
' → logprob: -4.005056381225586
    8. ':
' → logprob: -4.130056381225586
    9. '.' → logprob: -4.255056381225586
    10. ' and' → logprob: -4.380056381225586

Token 339: '       ' (ID: 309)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.44039490818977356
    2. '   ' → logprob: -1.8153948783874512
    3. ' l' → logprob: -2.940394878387451
    4. ' mid' → logprob: -3.065394878387451
    5. ' left' → logprob: -3.315394878387451
    6. 'low' → logprob: -3.815394878387451
    7. ' lo' → logprob: -4.065394878387451
    8. '
' → logprob: -5.565394878387451
    9. '    ' → logprob: -5.815394878387451
    10. ' def' → logprob: -6.190394878387451

Token 340: ' #' (ID: 1069)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.6515130996704102
    2. 'low' → logprob: -1.9015130996704102
    3. ' l' → logprob: -2.15151309967041
    4. ' left' → logprob: -2.27651309967041
    5. ' mid' → logprob: -3.65151309967041
    6. 'left' → logprob: -3.90151309967041
    7. '   ' → logprob: -3.90151309967041
    8. ' lo' → logprob: -4.15151309967041
    9. 'mid' → logprob: -4.90151309967041
    10. 'l' → logprob: -4.90151309967041

Token 341: ' adjust' (ID: 10266)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.9791470170021057
    2. ' low' → logprob: -0.9791470170021057
    3. 'low' → logprob: -2.229146957397461
    4. 'left' → logprob: -2.479146957397461
    5. ' l' → logprob: -3.729146957397461
    6. ' lo' → logprob: -3.729146957397461
    7. 'l' → logprob: -5.604146957397461
    8. 'lo' → logprob: -5.979146957397461
    9. ' def' → logprob: -6.854146957397461
    10. 'def' → logprob: -7.104146957397461

Token 342: ' cost' (ID: 3097)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7508302330970764
    2. ' edges' → logprob: -0.8758302330970764
    3. ' penalty' → logprob: -3.1258301734924316
    4. 'edges' → logprob: -3.6258301734924316
    5. 'the' → logprob: -4.125830173492432
    6. 'mid' → logprob: -5.500830173492432
    7. ' a' → logprob: -6.000830173492432
    8. 'cost' → logprob: -6.000830173492432
    9. ' edge' → logprob: -6.125830173492432
    10. ' mid' → logprob: -6.250830173492432

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4373054504394531
    2. '=' → logprob: -1.3123054504394531
    3. 's' → logprob: -3.187305450439453
    4. '=lambda' → logprob: -3.437305450439453
    5. ' edges' → logprob: -6.062305450439453
    6. 'edges' → logprob: -7.187305450439453
    7. ' +=' → logprob: -7.187305450439453
    8. ')' → logprob: -7.312305450439453
    9. '_edges' → logprob: -7.437305450439453
    10. '=w' → logprob: -7.437305450439453

Token 344: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3217460811138153
    2. ' w' → logprob: -1.3217461109161377
    3. ' lambda' → logprob: -5.196745872497559
    4. 'lambda' → logprob: -6.446745872497559
    5. '(w' → logprob: -7.696745872497559
    6. ' (' → logprob: -8.446745872497559
    7. '[w' → logprob: -8.696745872497559
    8. '   ' → logprob: -8.696745872497559
    9. ' [' → logprob: -10.321745872497559
    10. '(lambda' → logprob: -10.321745872497559

Token 345: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4129565954208374
    2. ' +' → logprob: -1.1629565954208374
    3. ' -' → logprob: -4.037956714630127
    4. '-' → logprob: -4.912956714630127
    5. '+x' → logprob: -7.662956714630127
    6. '+w' → logprob: -9.537956237792969
    7. '+i' → logprob: -9.912956237792969
    8. '[' → logprob: -10.287956237792969
    9. '+k' → logprob: -10.412956237792969
    10. ' ' → logprob: -11.162956237792969

Token 346: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3890761137008667
    2. ' x' → logprob: -1.1390761137008667
    3. ' (' → logprob: -6.889076232910156
    4. '(' → logprob: -7.264076232910156
    5. '(comp' → logprob: -8.764076232910156
    6. '1' → logprob: -9.014076232910156
    7. '(x' → logprob: -9.889076232910156
    8. 'comp' → logprob: -10.014076232910156
    9. ' ' → logprob: -10.389076232910156
    10. ' comp' → logprob: -10.389076232910156

Token 347: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17328199744224548
    2. ')' → logprob: -2.7982819080352783
    3. '<|end|>' → logprob: -3.5482819080352783
    4. ' *' → logprob: -4.173282146453857
    5. '*' → logprob: -4.298282146453857
    6. ' if' → logprob: -4.923282146453857
    7. '   ' → logprob: -5.173282146453857
    8. ',' → logprob: -5.298282146453857
    9. '
' → logprob: -5.298282146453857
    10. ' ' → logprob: -5.423282146453857

Token 348: ' company' (ID: 3175)
  Prédit: ' comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.38690024614334106
    2. 'comp' → logprob: -1.1369001865386963
    3. '	comp' → logprob: -11.011899948120117
    4. '(comp' → logprob: -11.761899948120117
    5. ' edges' → logprob: -12.636899948120117
    6. ' not' → logprob: -14.136899948120117
    7. 'not' → logprob: -15.136899948120117
    8. 'edges' → logprob: -15.261899948120117
    9. 'company' → logprob: -16.136899948120117
    10. '_comp' → logprob: -16.636899948120117

Token 349: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5768805146217346
    2. '==' → logprob: -0.8268805146217346
    3. 'comp' → logprob: -7.57688045501709
    4. ' comp' → logprob: -7.82688045501709
    5. '=' → logprob: -11.32688045501709
    6. ' is' → logprob: -12.07688045501709
    7. ' ' → logprob: -12.32688045501709
    8. ' ' → logprob: -13.20188045501709
    9. '0' → logprob: -13.32688045501709
    10. '==
' → logprob: -13.57688045501709

Token 350: ' A' (ID: 355)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1346072107553482
    2. '1' → logprob: -2.1346073150634766
    3. ' ' → logprob: -4.884607315063477
    4. 'A' → logprob: -9.759607315063477
    5. ' A' → logprob: -10.884607315063477
    6. '==' → logprob: -12.134607315063477
    7. '=' → logprob: -13.072107315063477
    8. ' ==' → logprob: -14.509607315063477
    9. '```' → logprob: -14.509607315063477
    10. 'B' → logprob: -15.072107315063477

Token 351: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15512920916080475
    2. '       ' → logprob: -2.4051291942596436
    3. ')' → logprob: -3.6551291942596436
    4. '   ' → logprob: -4.780129432678223
    5. '\n' → logprob: -4.905129432678223
    6. ')
' → logprob: -5.530129432678223
    7. ',' → logprob: -6.155129432678223
    8. ',
' → logprob: -6.905129432678223
    9. '
' → logprob: -7.405129432678223
    10. '+' → logprob: -7.655129432678223

Token 352: ' =' (ID: 314)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.04687429219484329
    2. 'w' → logprob: -3.1718742847442627
    3. '0' → logprob: -5.671874523162842
    4. ' ' → logprob: -8.171874046325684
    5. ' ' → logprob: -9.921874046325684
    6. '1' → logprob: -10.671874046325684
    7. ' (' → logprob: -11.046874046325684
    8. '   ' → logprob: -11.546874046325684
    9. '(w' → logprob: -11.546874046325684
    10. '  ' → logprob: -11.921874046325684

Token 353: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07990291714668274
    2. ' w' → logprob: -2.5799028873443604
    3. '0' → logprob: -6.9549031257629395
    4. ' ' → logprob: -10.954902648925781
    5. '(w' → logprob: -11.579902648925781
    6. '   ' → logprob: -12.079902648925781
    7. '
' → logprob: -12.454902648925781
    8. '1' → logprob: -13.079902648925781
    9. '	w' → logprob: -13.079902648925781
    10. '2' → logprob: -13.329902648925781

Token 354: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05786612629890442
    2. ')' → logprob: -4.057866096496582
    3. '       ' → logprob: -5.057866096496582
    4. ',' → logprob: -5.057866096496582
    5. ',
' → logprob: -5.432866096496582
    6. '   ' → logprob: -5.557866096496582
    7. ')
' → logprob: -5.932866096496582
    8. '
' → logprob: -5.932866096496582
    9. '\n' → logprob: -5.932866096496582
    10. '<|end|>' → logprob: -6.432866096496582

Token 355: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3546929955482483
    2. '       ' → logprob: -1.3546929359436035
    3. '   ' → logprob: -3.7296929359436035
    4. ',' → logprob: -5.4796929359436035
    5. '<|end|>' → logprob: -5.7296929359436035
    6. '    
' → logprob: -6.2296929359436035
    7. '        
' → logprob: -6.6046929359436035
    8. ')' → logprob: -6.8546929359436035
    9. '  
' → logprob: -6.8546929359436035
    10. 'import' → logprob: -7.3546929359436035

Token 356: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47302111983299255
    2. '
' → logprob: -1.348021149635315
    3. '       ' → logprob: -2.3480210304260254
    4. '    
' → logprob: -4.973021030426025
    5. ' x' → logprob: -4.973021030426025
    6. '\n' → logprob: -6.473021030426025
    7. 'x' → logprob: -6.473021030426025
    8. '  
' → logprob: -6.473021030426025
    9. '        
' → logprob: -6.973021030426025
    10. ',' → logprob: -7.848021030426025

Token 357: ' For' (ID: 2214)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.3393987715244293
    2. '   ' → logprob: -2.4643988609313965
    3. 'left' → logprob: -2.8393988609313965
    4. ' low' → logprob: -3.3393988609313965
    5. '
' → logprob: -3.3393988609313965
    6. 'lo' → logprob: -3.7143988609313965
    7. 'l' → logprob: -3.9643988609313965
    8. 'def' → logprob: -4.0893988609313965
    9. ' lo' → logprob: -5.2143988609313965
    10. ' left' → logprob: -5.3393988609313965

Token 358: ' different' (ID: 2647)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11583773046731949
    2. 'x' → logprob: -3.865837812423706
    3. ' _' → logprob: -3.865837812423706
    4. ' mid' → logprob: -3.990837812423706
    5. ' binary' → logprob: -4.240837574005127
    6. ' l' → logprob: -4.615837574005127
    7. 'mid' → logprob: -4.615837574005127
    8. ' ' → logprob: -6.115837574005127
    9. ' low' → logprob: -6.240837574005127
    10. ' w' → logprob: -6.240837574005127

Token 359: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07058260589838028
    2. 'x' → logprob: -2.820582628250122
    3. ' values' → logprob: -4.820582389831543
    4. 'values' → logprob: -7.945582389831543
    5. '
' → logprob: -9.695582389831543
    6. ' ' → logprob: -9.945582389831543
    7. 's' → logprob: -11.445582389831543
    8. '   ' → logprob: -11.695582389831543
    9. ' value' → logprob: -12.320582389831543
    10. 'value' → logprob: -12.445582389831543

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5365735292434692
    2. ':' → logprob: -1.6615735292434692
    3. ' in' → logprob: -1.6615735292434692
    4. '):' → logprob: -3.5365734100341797
    5. 'in' → logprob: -5.66157341003418
    6. ':
' → logprob: -6.78657341003418
    7. '):
' → logprob: -7.66157341003418
    8. ' ,' → logprob: -7.91157341003418
    9. ')' → logprob: -8.41157341003418
    10. '<|end|>' → logprob: -9.16157341003418

Token 361: ' MST' (ID: 123058)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.3528807461261749
    2. ' the' → logprob: -1.8528807163238525
    3. '#' → logprob: -2.8528807163238525
    4. 'edges' → logprob: -3.3528807163238525
    5. 'the' → logprob: -4.102880954742432
    6. 'def' → logprob: -4.477880954742432
    7. 'we' → logprob: -4.852880954742432
    8. ' we' → logprob: -4.977880954742432
    9. ' #' → logprob: -6.477880954742432
    10. '(edges' → logprob: -7.227880954742432

Token 362: ' picks' (ID: 37120)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -1.3244746923446655
    2. 'cost' → logprob: -1.3244746923446655
    3. ' weight' → logprob: -2.074474811553955
    4. ' will' → logprob: -2.574474811553955
    5. 's' → logprob: -2.824474811553955
    6. 'weight' → logprob: -3.074474811553955
    7. ' edges' → logprob: -3.074474811553955
    8. ' costs' → logprob: -3.824474811553955
    9. ' can' → logprob: -4.199474811553955
    10. ' might' → logprob: -4.574474811553955

Token 363: ' different' (ID: 2647)
  Prédit: ' different'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' different' → logprob: -0.7339038252830505
    2. 'different' → logprob: -1.3589038848876953
    3. ' edges' → logprob: -1.4839038848876953
    4. 'edges' → logprob: -4.233903884887695
    5. ' more' → logprob: -4.358903884887695
    6. 'more' → logprob: -5.733903884887695
    7. ' the' → logprob: -6.858903884887695
    8. ' a' → logprob: -6.858903884887695
    9. 'a' → logprob: -7.483903884887695
    10. 'A' → logprob: -7.733903884887695

Token 364: ' number' (ID: 2086)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.08439145982265472
    2. 'edges' → logprob: -2.7093913555145264
    3. ' sets' → logprob: -6.3343915939331055
    4. 'x' → logprob: -6.4593915939331055
    5. 'weights' → logprob: -6.7093915939331055
    6. 'cost' → logprob: -6.8343915939331055
    7. ' weights' → logprob: -7.2093915939331055
    8. ' x' → logprob: -7.4593915939331055
    9. ' costs' → logprob: -7.4593915939331055
    10. '
' → logprob: -7.4593915939331055

Token 365: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.3267107605934143
    2. ' of' → logprob: -1.3267107009887695
    3. 's' → logprob: -4.7017107009887695
    4. '_of' → logprob: -5.8267107009887695
    5. '   ' → logprob: -7.3267107009887695
    6. 'ofs' → logprob: -8.20171070098877
    7. '
' → logprob: -9.07671070098877
    8. ' ' → logprob: -9.45171070098877
    9. ' s' → logprob: -9.82671070098877
    10. '       ' → logprob: -10.20171070098877

Token 366: ' edges' (ID: 22569)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1503504365682602
    2. ' A' → logprob: -2.150350332260132
    3. ' edges' → logprob: -4.400350570678711
    4. 'edges' → logprob: -5.275350570678711
    5. 'company' → logprob: -5.525350570678711
    6. ' company' → logprob: -6.650350570678711
    7. 'a' → logprob: -9.150350570678711
    8. '```' → logprob: -9.150350570678711
    9. '0' → logprob: -9.775350570678711
    10. 'comp' → logprob: -10.275350570678711

Token 367: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9152861833572388
    2. '       ' → logprob: -0.9152861833572388
    3. ',' → logprob: -2.415286064147949
    4. '.' → logprob: -3.540286064147949
    5. ' =' → logprob: -3.540286064147949
    6. '=' → logprob: -4.540286064147949
    7. ')' → logprob: -5.040286064147949
    8. 'def' → logprob: -5.040286064147949
    9. ':' → logprob: -5.290286064147949
    10. ' with' → logprob: -5.415286064147949

Token 368: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.38761693239212036
    2. 'A' → logprob: -1.1376168727874756
    3. ' company' → logprob: -7.512617111206055
    4. 'company' → logprob: -8.762617111206055
    5. ' ' → logprob: -11.137617111206055
    6. '0' → logprob: -12.012617111206055
    7. ' a' → logprob: -12.262617111206055
    8. '```' → logprob: -12.637617111206055
    9. 'a' → logprob: -13.012617111206055
    10. 'Company' → logprob: -13.262617111206055

Token 369: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5655683279037476
    2. '
' → logprob: -1.0655683279037476
    3. '   ' → logprob: -3.065568447113037
    4. '        
' → logprob: -4.190568447113037
    5. '    
' → logprob: -4.440568447113037
    6. '<|end|>' → logprob: -5.315568447113037
    7. ',' → logprob: -5.565568447113037
    8. 'def' → logprob: -6.315568447113037
    9. '  
' → logprob: -7.065568447113037
    10. '```' → logprob: -7.315568447113037

Token 370: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.620404064655304
    2. '       ' → logprob: -0.870404064655304
    3. '   ' → logprob: -3.620404005050659
    4. '        
' → logprob: -5.495404243469238
    5. '    
' → logprob: -5.495404243469238
    6. '<|end|>' → logprob: -5.745404243469238
    7. ',' → logprob: -5.995404243469238
    8. '  
' → logprob: -7.745404243469238
    9. '' → logprob: -8.495404243469238
    10. 'x' → logprob: -8.620404243469238

Token 371: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5105564594268799
    2. '
' → logprob: -1.3855564594268799
    3. ' l' → logprob: -3.01055645942688
    4. 'x' → logprob: -3.26055645942688
    5. ' x' → logprob: -3.88555645942688
    6. '    
' → logprob: -4.135556221008301
    7. ' low' → logprob: -4.885556221008301
    8. 'low' → logprob: -5.010556221008301
    9. 'l' → logprob: -5.885556221008301
    10. ' L' → logprob: -6.010556221008301

Token 372: ' For' (ID: 2214)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.4358614385128021
    2. 'l' → logprob: -1.8108614683151245
    3. 'left' → logprob: -2.685861349105835
    4. '
' → logprob: -2.810861349105835
    5. 'def' → logprob: -3.435861349105835
    6. 'lo' → logprob: -4.435861587524414
    7. '   ' → logprob: -4.560861587524414
    8. ' low' → logprob: -5.810861587524414
    9. ' l' → logprob: -6.435861587524414
    10. ' lo' → logprob: -7.560861587524414

Token 373: ' each' (ID: 2454)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06486368924379349
    2. 'x' → logprob: -3.439863681793213
    3. ' low' → logprob: -4.064863681793213
    4. ' l' → logprob: -5.564863681793213
    5. ' _' → logprob: -6.064863681793213
    6. 'low' → logprob: -6.564863681793213
    7. ' lo' → logprob: -7.189863681793213
    8. ' w' → logprob: -7.314863681793213
    9. ' d' → logprob: -7.314863681793213
    10. ' binary' → logprob: -7.439863681793213

Token 374: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5480256080627441
    2. ' x' → logprob: -1.7980256080627441
    3. 'mid' → logprob: -2.048025608062744
    4. ' mid' → logprob: -2.798025608062744
    5. 'def' → logprob: -3.548025608062744
    6. ' iteration' → logprob: -4.798025608062744
    7. 'iteration' → logprob: -5.048025608062744
    8. 'step' → logprob: -5.298025608062744
    9. 'left' → logprob: -5.923025608062744
    10. 'low' → logprob: -6.048025608062744

Token 375: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06141795590519905
    2. 'in' → logprob: -2.936418056488037
    3. ',' → logprob: -5.186418056488037
    4. ':' → logprob: -7.061418056488037
    5. ':
' → logprob: -10.811417579650879
    6. '   ' → logprob: -11.186417579650879
    7. ' ,' → logprob: -11.311417579650879
    8. '       ' → logprob: -12.436417579650879
    9. ',
' → logprob: -13.061417579650879
    10. ' :' → logprob: -13.436417579650879

Token 376: ' MST' (ID: 123058)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.198207974433899
    2. 'low' → logprob: -1.198207974433899
    3. 'left' → logprob: -2.0732078552246094
    4. 'l' → logprob: -2.0732078552246094
    5. 'lo' → logprob: -2.8232078552246094
    6. 'par' → logprob: -3.1982078552246094
    7. 'edges' → logprob: -4.448207855224609
    8. '
' → logprob: -4.573207855224609
    9. '   ' → logprob: -5.573207855224609
    10. ' left' → logprob: -5.698207855224609

Token 377: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4336273670196533
    2. '=' → logprob: -1.4336273670196533
    3. 'cost' → logprob: -3.3086273670196533
    4. ' is' → logprob: -3.9336273670196533
    5. '_edges' → logprob: -3.9336273670196533
    6. 'edges' → logprob: -5.058627128601074
    7. 'weight' → logprob: -5.308627128601074
    8. ' cost' → logprob: -5.558627128601074
    9. ' edges' → logprob: -5.683627128601074
    10. 'is' → logprob: -5.683627128601074

Token 378: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4375639259815216
    2. 'def' → logprob: -1.5625638961791992
    3. ' find' → logprob: -3.937563896179199
    4. ' def' → logprob: -4.187563896179199
    5. 'import' → logprob: -4.437563896179199
    6. ' =' → logprob: -4.437563896179199
    7. ' pick' → logprob: -4.562563896179199
    8. ')' → logprob: -4.937563896179199
    9. ' build' → logprob: -4.937563896179199
    10. ' select' → logprob: -5.062563896179199

Token 379: ' found' (ID: 2491)
  Prédit: 'built'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -1.2886196374893188
    2. 'found' → logprob: -1.5386196374893188
    3. 'computed' → logprob: -1.6636196374893188
    4. 'constructed' → logprob: -2.1636195182800293
    5. ' found' → logprob: -2.6636195182800293
    6. ' built' → logprob: -2.9136195182800293
    7. ' constructed' → logprob: -3.4136195182800293
    8. ' computed' → logprob: -3.6636195182800293
    9. 'formed' → logprob: -4.913619518280029
    10. 'def' → logprob: -5.413619518280029

Token 380: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5030458569526672
    2. ' by' → logprob: -2.1280457973480225
    3. 'def' → logprob: -2.3780457973480225
    4. '   ' → logprob: -2.6280457973480225
    5. ' =' → logprob: -3.1280457973480225
    6. ',' → logprob: -3.8780457973480225
    7. ':' → logprob: -4.253046035766602
    8. ' with' → logprob: -4.878046035766602
    9. ' using' → logprob: -5.003046035766602
    10. '=' → logprob: -5.128046035766602

Token 381: ' we' (ID: 581)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.5611579418182373
    2. ' used' → logprob: -1.9361579418182373
    3. ' counted' → logprob: -1.9361579418182373
    4. ' count' → logprob: -2.3111579418182373
    5. ' edges' → logprob: -2.5611579418182373
    6. ' l' → logprob: -2.8111579418182373
    7. 'used' → logprob: -3.0611579418182373
    8. 'def' → logprob: -3.1861579418182373
    9. ' def' → logprob: -3.5611579418182373
    10. ' cnt' → logprob: -3.8111579418182373

Token 382: ' know' (ID: 1761)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3835330605506897
    2. 'count' → logprob: -2.883533000946045
    3. ' count' → logprob: -3.258533000946045
    4. 'can' → logprob: -3.383533000946045
    5. '       ' → logprob: -3.883533000946045
    6. ' will' → logprob: -4.008533000946045
    7. 'continue' → logprob: -4.133533000946045
    8. 'will' → logprob: -4.133533000946045
    9. ' continue' → logprob: -4.258533000946045
    10. ' get' → logprob: -4.383533000946045

Token 383: ' the' (ID: 290)
  Prédit: ' how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' how' → logprob: -0.08972808718681335
    2. ' the' → logprob: -2.9647281169891357
    3. 'the' → logprob: -4.464727878570557
    4. ' number' → logprob: -4.839727878570557
    5. 'how' → logprob: -4.964727878570557
    6. 'number' → logprob: -5.339727878570557
    7. '   ' → logprob: -6.839727878570557
    8. 'count' → logprob: -7.089727878570557
    9. 'exact' → logprob: -7.964727878570557
    10. ' count' → logprob: -9.214728355407715

Token 384: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6606869101524353
    2. ' number' → logprob: -1.66068696975708
    3. 'number' → logprob: -2.16068696975708
    4. ' count' → logprob: -2.28568696975708
    5. 'num' → logprob: -2.91068696975708
    6. 'cnt' → logprob: -4.53568696975708
    7. 'def' → logprob: -5.53568696975708
    8. 'left' → logprob: -6.53568696975708
    9. ' cnt' → logprob: -7.03568696975708
    10. ' num' → logprob: -7.03568696975708

Token 385: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5888499617576599
    2. '   ' → logprob: -1.2138500213623047
    3. '       ' → logprob: -2.0888500213623047
    4. 'of' → logprob: -4.213850021362305
    5. 'def' → logprob: -5.338850021362305
    6. '           ' → logprob: -7.088850021362305
    7. '_' → logprob: -7.338850021362305
    8. ',' → logprob: -7.463850021362305
    9. ' edges' → logprob: -8.088850021362305
    10. '_of' → logprob: -8.088850021362305

Token 386: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1726602017879486
    2. ' A' → logprob: -2.7976601123809814
    3. ' edges' → logprob: -2.7976601123809814
    4. 'edges' → logprob: -3.7976601123809814
    5. 'a' → logprob: -5.0476603507995605
    6. ' a' → logprob: -6.2976603507995605
    7. 'comp' → logprob: -7.0476603507995605
    8. '0' → logprob: -7.2976603507995605
    9. ' chosen' → logprob: -7.2976603507995605
    10. ' selected' → logprob: -7.4226603507995605

Token 387: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5547276139259338
    2. 'edges' → logprob: -1.179727554321289
    3. '_edges' → logprob: -2.179727554321289
    4. ')' → logprob: -5.929727554321289
    5. '<|end|>' → logprob: -7.304727554321289
    6. '_' → logprob: -7.554727554321289
    7. '(edges' → logprob: -7.929727554321289
    8. '.edges' → logprob: -8.554727554321289
    9. 'def' → logprob: -8.679727554321289
    10. '<|end|>' → logprob: -9.054727554321289

Token 388: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10960843414068222
    2. '
' → logprob: -2.8596084117889404
    3. '        
' → logprob: -4.2346086502075195
    4. ',' → logprob: -4.3596086502075195
    5. '<|end|>' → logprob: -4.3596086502075195
    6. '<|end|>' → logprob: -5.7346086502075195
    7. 'def' → logprob: -6.6096086502075195
    8. ',
' → logprob: -7.2346086502075195
    9. '    
' → logprob: -8.48460865020752
    10. '   ' → logprob: -8.60960865020752

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.263912558555603
    2. '
' → logprob: -1.638912558555603
    3. '        
' → logprob: -3.8889126777648926
    4. '<|end|>' → logprob: -4.263912677764893
    5. '<|end|>' → logprob: -6.888912677764893
    6. ',' → logprob: -7.013912677764893
    7. '    
' → logprob: -7.763912677764893
    8. '   ' → logprob: -8.138912200927734
    9. 'def' → logprob: -8.888912200927734
    10. '  
' → logprob: -9.513912200927734

Token 390: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7083236575126648
    2. '
' → logprob: -0.9583236575126648
    3. '   ' → logprob: -2.7083237171173096
    4. '        
' → logprob: -3.2083237171173096
    5. '    
' → logprob: -4.2083234786987305
    6. 'def' → logprob: -7.7083234786987305
    7. ' x' → logprob: -8.33332347869873
    8. '<|end|>' → logprob: -8.58332347869873
    9. 'x' → logprob: -8.70832347869873
    10. '    ' → logprob: -8.83332347869873

Token 391: ' We' (ID: 1416)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17974501848220825
    2. '       ' → logprob: -2.6797449588775635
    3. '   ' → logprob: -3.0547449588775635
    4. 'def' → logprob: -4.304745197296143
    5. 'x' → logprob: -4.679745197296143
    6. '    
' → logprob: -4.929745197296143
    7. '\n' → logprob: -5.554745197296143
    8. '        
' → logprob: -5.554745197296143
    9. ' 
' → logprob: -5.679745197296143
    10. '  
' → logprob: -6.179745197296143

Token 392: ' search' (ID: 3684)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06430591642856598
    2. '=' → logprob: -3.8143060207366943
    3. ' def' → logprob: -4.064305782318115
    4. 'def' → logprob: -4.314305782318115
    5. ' ' → logprob: -5.314305782318115
    6. ' continue' → logprob: -6.689305782318115
    7. ' can' → logprob: -7.064305782318115
    8. ' will' → logprob: -7.439305782318115
    9. ' need' → logprob: -7.939305782318115
    10. '
' → logprob: -8.314306259155273

Token 393: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02057516947388649
    2. 'for' → logprob: -4.020575046539307
    3. ' low' → logprob: -7.270575046539307
    4. ' to' → logprob: -7.895575046539307
    5. ' x' → logprob: -8.020575523376465
    6. '(low' → logprob: -8.645575523376465
    7. '   ' → logprob: -9.020575523376465
    8. ' on' → logprob: -9.270575523376465
    9. '(' → logprob: -9.395575523376465
    10. ' in' → logprob: -9.520575523376465

Token 394: ' so' (ID: 813)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19216188788414001
    2. '=' → logprob: -2.067161798477173
    3. 'import' → logprob: -4.567162036895752
    4. '   ' → logprob: -4.817162036895752
    5. 'mid' → logprob: -4.817162036895752
    6. ',' → logprob: -5.692162036895752
    7. ' for' → logprob: -5.692162036895752
    8. 'from' → logprob: -6.442162036895752
    9. ')' → logprob: -6.692162036895752
    10. ' in' → logprob: -6.817162036895752

Token 395: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.045682668685913086
    2. 'that' → logprob: -3.170682668685913
    3. '   ' → logprob: -6.795682907104492
    4. ' to' → logprob: -7.420682907104492
    5. ':' → logprob: -9.045682907104492
    6. '=' → logprob: -9.420682907104492
    7. 'def' → logprob: -9.420682907104492
    8. ',' → logprob: -9.545682907104492
    9. 'to' → logprob: -9.670682907104492
    10. ' ' → logprob: -9.670682907104492

Token 396: ' MST' (ID: 123058)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9210610389709473
    2. 'count' → logprob: -1.0460610389709473
    3. 'the' → logprob: -1.9210610389709473
    4. ' count' → logprob: -2.7960610389709473
    5. 'cnt' → logprob: -4.921061038970947
    6. 'def' → logprob: -5.296061038970947
    7. 'edges' → logprob: -5.671061038970947
    8. ' edges' → logprob: -5.921061038970947
    9. 'num' → logprob: -6.046061038970947
    10. 'exact' → logprob: -6.296061038970947

Token 397: ' has' (ID: 853)
  Prédit: ' uses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uses' → logprob: -1.2265042066574097
    2. ' includes' → logprob: -1.7265042066574097
    3. ' has' → logprob: -1.8515042066574097
    4. ' picks' → logprob: -2.101504325866699
    5. ' contains' → logprob: -2.351504325866699
    6. 'includes' → logprob: -3.351504325866699
    7. 'has' → logprob: -3.601504325866699
    8. 'contains' → logprob: -3.851504325866699
    9. 'uses' → logprob: -4.226504325866699
    10. '#' → logprob: -4.476504325866699

Token 398: ' k' (ID: 372)
  Prédit: ' exactly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.8121992945671082
    2. 'k' → logprob: -1.312199354171753
    3. ' k' → logprob: -1.312199354171753
    4. 'exact' → logprob: -4.062199115753174
    5. 'comp' → logprob: -9.062199592590332
    6. ' A' → logprob: -9.687199592590332
    7. 'A' → logprob: -9.812199592590332
    8. 'a' → logprob: -10.062199592590332
    9. ' a' → logprob: -10.062199592590332
    10. ' exact' → logprob: -10.687199592590332

Token 399: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.0384235680103302
    2. ' A' → logprob: -3.663423538208008
    3. 'A' → logprob: -4.788423538208008
    4. 'edges' → logprob: -5.788423538208008
    5. '   ' → logprob: -9.288423538208008
    6. '_edges' → logprob: -9.413423538208008
    7. ' from' → logprob: -9.538423538208008
    8. ' company' → logprob: -9.913423538208008
    9. 'from' → logprob: -10.038423538208008
    10. ' ' → logprob: -10.288423538208008

Token 400: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33289942145347595
    2. 'from' → logprob: -1.7078994512557983
    3. ' from' → logprob: -2.707899332046509
    4. '   ' → logprob: -4.457899570465088
    5. 'def' → logprob: -5.082899570465088
    6. ' with' → logprob: -6.082899570465088
    7. 'import' → logprob: -6.082899570465088
    8. ' for' → logprob: -6.207899570465088
    9. ' =' → logprob: -6.457899570465088
    10. ' in' → logprob: -6.457899570465088

Token 401: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6350429058074951
    2. ' A' → logprob: -0.7600429058074951
    3. 'company' → logprob: -6.635043144226074
    4. ' company' → logprob: -6.885043144226074
    5. '0' → logprob: -9.885043144226074
    6. ' ' → logprob: -10.885043144226074
    7. 'comp' → logprob: -11.885043144226074
    8. '```' → logprob: -12.010043144226074
    9. 'Company' → logprob: -12.510043144226074
    10. ' a' → logprob: -13.010043144226074

Token 402: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7462236285209656
    2. '       ' → logprob: -0.7462236285209656
    3. '        
' → logprob: -3.1212236881256104
    4. ',' → logprob: -5.996223449707031
    5. 'def' → logprob: -6.121223449707031
    6. '    
' → logprob: -7.496223449707031
    7. '<|end|>' → logprob: -7.871223449707031
    8. 'import' → logprob: -7.996223449707031
    9. '

' → logprob: -8.246223449707031
    10. '<|end|>' → logprob: -8.371223449707031

Token 403: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3042484521865845
    2. '       ' → logprob: -1.4292484521865845
    3. '        
' → logprob: -4.179248332977295
    4. '<|end|>' → logprob: -5.554248332977295
    5. ',' → logprob: -6.929248332977295
    6. '    
' → logprob: -7.429248332977295
    7. 'def' → logprob: -7.679248332977295
    8. '   ' → logprob: -8.054248809814453
    9. '<|end|>' → logprob: -8.179248809814453
    10. '
' → logprob: -8.804248809814453

Token 404: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4048779606819153
    2. '
' → logprob: -1.4048779010772705
    3. '        
' → logprob: -3.5298779010772705
    4. ' x' → logprob: -3.7798779010772705
    5. '   ' → logprob: -4.02987813949585
    6. 'x' → logprob: -5.27987813949585
    7. '    
' → logprob: -5.52987813949585
    8. ' l' → logprob: -5.52987813949585
    9. ' 
' → logprob: -7.15487813949585
    10. 'def' → logprob: -7.15487813949585

Token 405: ' Then' (ID: 7801)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.45009565353393555
    2. 'def' → logprob: -1.5750956535339355
    3. 'l' → logprob: -3.0750956535339355
    4. '
' → logprob: -3.0750956535339355
    5. '   ' → logprob: -3.5750956535339355
    6. 'lo' → logprob: -3.8250956535339355
    7. 'left' → logprob: -4.4500956535339355
    8. 'lower' → logprob: -8.200096130371094
    9. 'lb' → logprob: -8.325096130371094
    10. '       ' → logprob: -8.575096130371094

Token 406: ' compute' (ID: 23864)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4154788553714752
    2. 'low' → logprob: -1.6654788255691528
    3. 'left' → logprob: -2.6654789447784424
    4. '
' → logprob: -3.4154789447784424
    5. 'lo' → logprob: -3.6654789447784424
    6. 'l' → logprob: -4.540478706359863
    7. '#' → logprob: -4.915478706359863
    8. '   ' → logprob: -6.165478706359863
    9. '       ' → logprob: -7.415478706359863
    10. ' low' → logprob: -8.040478706359863

Token 407: ' the' (ID: 290)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.418233871459961
    2. ' res' → logprob: -1.793233871459961
    3. 'total' → logprob: -1.918233871459961
    4. 'ans' → logprob: -2.043233871459961
    5. 'cost' → logprob: -2.918233871459961
    6. 'result' → logprob: -3.168233871459961
    7. 'base' → logprob: -3.543233871459961
    8. 'best' → logprob: -3.668233871459961
    9. 'min' → logprob: -3.793233871459961
    10. ' total' → logprob: -4.043233871459961

Token 408: ' original' (ID: 4756)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -1.3866809606552124
    2. 'total' → logprob: -1.8866809606552124
    3. 'final' → logprob: -2.511681079864502
    4. 'min' → logprob: -2.761681079864502
    5. 'result' → logprob: -3.011681079864502
    6. ' minimal' → logprob: -3.136681079864502
    7. 'minimal' → logprob: -3.136681079864502
    8. ' total' → logprob: -3.136681079864502
    9. 'cost' → logprob: -3.261681079864502
    10. 'answer' → logprob: -3.386681079864502

Token 409: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5589877367019653
    2. ' cost' → logprob: -0.9339877367019653
    3. '_cost' → logprob: -3.808987617492676
    4. 'total' → logprob: -5.933987617492676
    5. ' total' → logprob: -6.183987617492676
    6. ' costs' → logprob: -6.683987617492676
    7. 'def' → logprob: -6.933987617492676
    8. 'edges' → logprob: -7.058987617492676
    9. 'M' → logprob: -7.183987617492676
    10. ' edges' → logprob: -7.183987617492676

Token 410: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24228249490261078
    2. '       ' → logprob: -2.3672823905944824
    3. '   ' → logprob: -2.9922823905944824
    4. '        
' → logprob: -2.9922823905944824
    5. '    
' → logprob: -4.367282390594482
    6. 'def' → logprob: -5.367282390594482
    7. 'x' → logprob: -7.242282390594482
    8. 'import' → logprob: -7.367282390594482
    9. '

' → logprob: -8.24228286743164
    10. ',' → logprob: -8.49228286743164

Token 411: 'not' (ID: 2878)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024279333651065826
    2. ')
' → logprob: -4.2742791175842285
    3. ' )' → logprob: -5.3992791175842285
    4. '       ' → logprob: -7.2742791175842285
    5. ' edges' → logprob: -7.6492791175842285
    6. 'total' → logprob: -7.7742791175842285
    7. ' of' → logprob: -8.024279594421387
    8. '=' → logprob: -8.274279594421387
    9. '   ' → logprob: -8.399279594421387
    10. 'mst' → logprob: -8.399279594421387

Token 412: ' adjusted' (ID: 38307)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.4603121876716614
    2. ' adjusted' → logprob: -1.9603121280670166
    3. 'x' → logprob: -2.7103121280670166
    4. '(x' → logprob: -3.0853121280670166
    5. 'modified' → logprob: -3.4603121280670166
    6. ' augmented' → logprob: -3.9603121280670166
    7. 'w' → logprob: -4.710312366485596
    8. '(w' → logprob: -4.835312366485596
    9. ' (' → logprob: -4.960312366485596
    10. ' x' → logprob: -4.960312366485596

Token 413: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04645299166440964
    2. 'cost' → logprob: -4.04645299911499
    3. '_cost' → logprob: -4.54645299911499
    4. ' )' → logprob: -5.17145299911499
    5. ' cost' → logprob: -5.29645299911499
    6. ')
' → logprob: -6.04645299911499
    7. '_' → logprob: -6.54645299911499
    8. '_w' → logprob: -6.67145299911499
    9. '_)' → logprob: -6.92145299911499
    10. '),' → logprob: -9.171452522277832

Token 414: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40345150232315063
    2. '       ' → logprob: -1.1534514427185059
    3. '        
' → logprob: -4.778451442718506
    4. '    
' → logprob: -6.153451442718506
    5. '   ' → logprob: -6.528451442718506
    6. ',' → logprob: -6.653451442718506
    7. '<|end|>' → logprob: -6.653451442718506
    8. ')' → logprob: -7.528451442718506
    9. 'def' → logprob: -8.153451919555664
    10. ',
' → logprob: -8.778451919555664

Token 415: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008519424125552177
    2. '```' → logprob: -5.883519649505615
    3. '    
' → logprob: -6.508519649505615
    4. '        
' → logprob: -6.758519649505615
    5. '   ' → logprob: -6.758519649505615
    6. '       ' → logprob: -7.383519649505615
    7. ' 
' → logprob: -7.633519649505615
    8. '  
' → logprob: -8.633519172668457
    9. 'def' → logprob: -8.633519172668457
    10. 'x' → logprob: -8.883519172668457

Token 416: ' left' (ID: 3561)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.39139336347579956
    2. 'l' → logprob: -2.2663934230804443
    3. 'left' (adapté à ' left') → logprob: -2.7663934230804443
    4. '   ' → logprob: -2.7663934230804443
    5. 'def' → logprob: -2.8913934230804443
    6. 'lo' → logprob: -4.391393184661865
    7. ' low' → logprob: -4.766393184661865
    8. 'par' → logprob: -5.141393184661865
    9. '
' → logprob: -5.141393184661865
    10. '       ' → logprob: -5.766393184661865

Token 417: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4129299521446228
    2. ' =' → logprob: -1.1629300117492676
    3. ',' → logprob: -3.6629300117492676
    4. ' ,' → logprob: -10.03792953491211
    5. '=-' → logprob: -10.91292953491211
    6. ' ' → logprob: -13.78792953491211
    7. '=int' → logprob: -15.16292953491211
    8. '=
' → logprob: -15.41292953491211
    9. '```' → logprob: -15.53792953491211
    10. '＝' → logprob: -15.66292953491211

Token 418: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.038043901324272156
    2. ' right' → logprob: -3.288043975830078
    3. '=' → logprob: -13.163043975830078
    4. '100' → logprob: -15.663043975830078
    5. '	right' → logprob: -16.288043975830078
    6. ' =' → logprob: -16.413043975830078
    7. ' ' → logprob: -16.788043975830078
    8. ',right' → logprob: -16.913043975830078
    9. '10' → logprob: -17.663043975830078
    10. 'Right' → logprob: -17.788043975830078

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. ',' → logprob: -15.188261985778809
    4. '＝' → logprob: -16.813262939453125
    5. ' ' → logprob: -17.063262939453125
    6. '=int' → logprob: -17.688262939453125
    7. '=-' → logprob: -18.688262939453125
    8. '=

' → logprob: -18.688262939453125
    9. '   ' → logprob: -18.813262939453125
    10. '=
' → logprob: -19.438262939453125

Token 420: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16030333936214447
    2. '0' → logprob: -1.9103033542633057
    3. ' -' → logprob: -9.910303115844727
    4. ' ' → logprob: -10.910303115844727
    5. '10' → logprob: -11.785303115844727
    6. '100' → logprob: -13.535303115844727
    7. '1' → logprob: -13.785303115844727
    8. '-(' → logprob: -14.535303115844727
    9. '-max' → logprob: -15.660303115844727
    10. '-min' → logprob: -16.660303115844727

Token 421: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004694276489317417
    2. '100' → logprob: -5.50469446182251
    3. '1' → logprob: -7.75469446182251
    4. 'int' → logprob: -8.754693984985352
    5. '200' → logprob: -11.004693984985352
    6. '(' → logprob: -12.004693984985352
    7. 'max' → logprob: -12.629693984985352
    8. ' ' → logprob: -12.879693984985352
    9. '2' → logprob: -14.629693984985352
    10. '101' → logprob: -16.75469398498535

Token 422: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.041545283049345016
    2. '00' → logprob: -3.2915453910827637
    3. '0' → logprob: -5.666545391082764
    4. '1' → logprob: -11.666544914245605
    5. '001' → logprob: -11.666544914245605
    6. '_' → logprob: -12.041544914245605
    7. '01' → logprob: -12.041544914245605
    8. '6' → logprob: -13.041544914245605
    9. '10' → logprob: -13.166544914245605
    10. '5' → logprob: -13.291544914245605

Token 423: ',' (ID: 11)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5725858807563782
    2. ',' → logprob: -1.1975858211517334
    3. '0' → logprob: -2.1975858211517334
    4. '00' → logprob: -3.8225858211517334
    5. '_' → logprob: -6.9475860595703125
    6. ' ,' → logprob: -9.572586059570312
    7. '1' → logprob: -11.697586059570312
    8. '
' → logprob: -11.947586059570312
    9. ',
' → logprob: -12.197586059570312
    10. '_,' → logprob: -12.197586059570312

Token 424: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0021859495900571346
    2. ' ' → logprob: -6.127185821533203
    3. '200' → logprob: -14.877185821533203
    4. '   ' → logprob: -15.627185821533203
    5. '  ' → logprob: -16.252185821533203
    6. '10' → logprob: -16.377185821533203
    7. '+' → logprob: -16.752185821533203
    8. '110' → logprob: -17.002185821533203
    9. '１００' → logprob: -18.002185821533203
    10. '300' → logprob: -18.127185821533203

Token 425: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '200' → logprob: -16.87537956237793
    4. '   ' → logprob: -17.75037956237793
    5. '  ' → logprob: -18.37537956237793
    6. '１００' → logprob: -18.50037956237793
    7. '
' → logprob: -18.62537956237793
    8. '+' → logprob: -19.37537956237793
    9. '110' → logprob: -19.62537956237793
    10. '=' → logprob: -19.75037956237793

Token 426: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.37031567096710205
    2. '000' → logprob: -1.370315670967102
    3. '4' → logprob: -3.1203155517578125
    4. '5' → logprob: -4.8703155517578125
    5. '04' → logprob: -6.3703155517578125
    6. '0' → logprob: -7.3703155517578125
    7. '05' → logprob: -7.8703155517578125
    8. '6' → logprob: -7.9953155517578125
    9. '3' → logprob: -8.995315551757812
    10. '+' → logprob: -8.995315551757812

Token 427: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09227166324853897
    2. '   ' → logprob: -2.967271566390991
    3. '    
' → logprob: -4.21727180480957
    4. '       ' → logprob: -4.46727180480957
    5. '        
' → logprob: -5.96727180480957
    6. 'while' → logprob: -6.09227180480957
    7. '  
' → logprob: -6.46727180480957
    8. ' while' → logprob: -6.46727180480957
    9. '<|end|>' → logprob: -7.46727180480957
    10. ' 
' → logprob: -7.71727180480957

Token 428: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.138207197189331
    2. ' while' → logprob: -1.513207197189331
    3. '
' → logprob: -1.763207197189331
    4. 'while' → logprob: -2.138207197189331
    5. '       ' → logprob: -2.263207197189331
    6. '    
' → logprob: -3.263207197189331
    7. '<|end|>' → logprob: -5.01320743560791
    8. '        
' → logprob: -5.13820743560791
    9. ' 
' → logprob: -5.51320743560791
    10. '  
' → logprob: -5.88820743560791

Token 429: ' ans' (ID: 3345)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.15601161122322083
    2. 'while' → logprob: -2.5310115814208984
    3. ' for' → logprob: -3.0310115814208984
    4. ' 
' → logprob: -5.156011581420898
    5. '
' → logprob: -6.031011581420898
    6. '    
' → logprob: -6.156011581420898
    7. '    ' → logprob: -6.156011581420898
    8. 'for' → logprob: -6.406011581420898
    9. ' ' → logprob: -7.406011581420898
    10. '   ' → logprob: -7.531011581420898

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02631225436925888
    2. '=' → logprob: -3.6513123512268066
    3. ',' → logprob: -12.651311874389648
    4. '   ' → logprob: -13.026311874389648
    5. ' ' → logprob: -13.526311874389648
    6. '_cost' → logprob: -13.526311874389648
    7. '_' → logprob: -14.276311874389648
    8. 'cost' → logprob: -14.401311874389648
    9. '    ' → logprob: -14.651311874389648
    10. ')' → logprob: -14.776311874389648

Token 431: ' -' (ID: 533)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9879417419433594
    2. 'None' → logprob: -1.4879417419433594
    3. 'float' → logprob: -1.4879417419433594
    4. '-' → logprob: -1.7379417419433594
    5. 'int' → logprob: -10.11294174194336
    6. '1' → logprob: -10.98794174194336
    7. '0' → logprob: -11.23794174194336
    8. ' None' → logprob: -11.36294174194336
    9. 'sys' → logprob: -11.86294174194336
    10. ' -' → logprob: -12.23794174194336

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '10' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '2' → logprob: -16.375001907348633
    5. '   ' → logprob: -17.375001907348633
    6. 'left' → logprob: -17.500001907348633
    7. '100' → logprob: -17.500001907348633
    8. 'sys' → logprob: -17.750001907348633
    9. 'float' → logprob: -18.062501907348633
    10. '１' → logprob: -18.187501907348633

Token 433: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2567594349384308
    2. '       ' → logprob: -1.5067594051361084
    3. '        
' → logprob: -6.1317596435546875
    4. '<|end|>' → logprob: -7.5067596435546875
    5. ' while' → logprob: -7.7567596435546875
    6. '  
' → logprob: -7.8817596435546875
    7. ' 
' → logprob: -8.256759643554688
    8. 'while' → logprob: -8.381759643554688
    9. '   ' → logprob: -8.506759643554688
    10. '    
' → logprob: -8.881759643554688

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10003884881734848
    2. ' while' → logprob: -3.600038766860962
    3. '
' → logprob: -3.975038766860962
    4. ' 
' → logprob: -4.100039005279541
    5. '        ' → logprob: -4.725039005279541
    6. '        
' → logprob: -4.975039005279541
    7. '   ' → logprob: -5.600039005279541
    8. 'while' → logprob: -5.975039005279541
    9. '    
' → logprob: -6.100039005279541
    10. '	while' → logprob: -6.225039005279541

Token 435: ' def' (ID: 1056)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.318601131439209
    2. ' while' → logprob: -1.318601131439209
    3. 'for' → logprob: -5.943601131439209
    4. ' for' → logprob: -5.943601131439209
    5. '       ' → logprob: -9.943601608276367
    6. '   ' → logprob: -11.068601608276367
    7. 'def' (adapté à ' def') → logprob: -11.318601608276367
    8. '    ' → logprob: -13.193601608276367
    9. '	while' → logprob: -13.568601608276367
    10. '        ' → logprob: -14.943601608276367

Token 436: ' mst' (ID: 179099)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -1.405910611152649
    2. 'check' → logprob: -1.530910611152649
    3. ' mst' → logprob: -1.655910611152649
    4. 'mst' → logprob: -1.780910611152649
    5. ' can' → logprob: -2.7809104919433594
    6. ' possible' → logprob: -3.5309104919433594
    7. 'kr' → logprob: -3.6559104919433594
    8. 'm' → logprob: -3.9059104919433594
    9. ' cost' → logprob: -4.405910491943359
    10. 'possible' → logprob: -5.405910491943359

Token 437: '(x' (ID: 4061)
  Prédit: '(par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(par' → logprob: -0.10285957902669907
    2. '(left' → logprob: -2.3528594970703125
    3. '(x' → logprob: -6.4778594970703125
    4. '(' → logprob: -7.9778594970703125
    5. '(p' → logprob: -7.9778594970703125
    6. '(edges' → logprob: -9.352859497070312
    7. '(l' → logprob: -9.727859497070312
    8. '_par' → logprob: -10.477859497070312
    9. '(mid' → logprob: -10.727859497070312
    10. '(adj' → logprob: -10.852859497070312

Token 438: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24856726825237274
    2. '):
' → logprob: -1.6235672235488892
    3. ',' → logprob: -3.8735673427581787
    4. '):
' → logprob: -7.2485671043396
    5. '   ' → logprob: -8.248567581176758
    6. ')' → logprob: -8.248567581176758
    7. '       ' → logprob: -8.498567581176758
    8. ' ):' → logprob: -8.748567581176758
    9. '(w' → logprob: -8.998567581176758
    10. '(edges' → logprob: -9.498567581176758

Token 439: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7893303036689758
    2. '           ' → logprob: -0.7893303036689758
    3. '       ' → logprob: -3.289330244064331
    4. '(par' → logprob: -3.289330244064331
    5. ' par' → logprob: -4.53933048248291
    6. ':' → logprob: -5.91433048248291
    7. 'par' → logprob: -6.41433048248291
    8. '	par' → logprob: -8.03933048248291
    9. ',' → logprob: -8.28933048248291
    10. ':
' → logprob: -8.28933048248291

Token 440: ' #' (ID: 1069)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.3210066556930542
    2. ' non' → logprob: -2.3210067749023438
    3. 'par' → logprob: -2.6960067749023438
    4. '           ' → logprob: -3.4460067749023438
    5. ' cost' → logprob: -3.8210067749023438
    6. '       ' → logprob: -4.196006774902344
    7. 'cost' → logprob: -4.571006774902344
    8. '   ' → logprob: -4.696006774902344
    9. 'non' → logprob: -4.821006774902344
    10. ' res' → logprob: -6.571006774902344

Token 441: ' adjust' (ID: 10266)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0464119128882885
    2. '           ' → logprob: -3.4214119911193848
    3. 'non' → logprob: -4.796411991119385
    4. ' par' → logprob: -5.921411991119385
    5. '   ' → logprob: -7.546411991119385
    6. 'def' → logprob: -8.171411514282227
    7. 'adjust' → logprob: -8.421411514282227
    8. '       ' → logprob: -9.171411514282227
    9. 'cost' → logprob: -9.171411514282227
    10. ' non' → logprob: -9.671411514282227

Token 442: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3424997925758362
    2. 'ed' → logprob: -2.4674997329711914
    3. 'edges' → logprob: -2.4674997329711914
    4. 'def' → logprob: -3.4674997329711914
    5. 'd' → logprob: -3.8424997329711914
    6. 'total' → logprob: -4.217499732971191
    7. ' edges' → logprob: -4.342499732971191
    8. '   ' → logprob: -4.592499732971191
    9. ' cost' → logprob: -4.967499732971191
    10. '_cost' → logprob: -4.967499732971191

Token 443: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3631492853164673
    2. '=' → logprob: -1.3631492853164673
    3. '           ' → logprob: -4.363149166107178
    4. '   ' → logprob: -4.363149166107178
    5. 'edges' → logprob: -5.113149166107178
    6. '_edges' → logprob: -5.613149166107178
    7. '(edges' → logprob: -5.863149166107178
    8. ',' → logprob: -5.863149166107178
    9. ')' → logprob: -6.238149166107178
    10. ' edges' → logprob: -6.738149166107178

Token 444: ' w' (ID: 286)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.2698016166687012
    2. '   ' → logprob: -1.7698016166687012
    3. 'adjust' → logprob: -2.144801616668701
    4. 'cost' → logprob: -2.269801616668701
    5. 'total' → logprob: -2.519801616668701
    6. '           ' → logprob: -2.519801616668701
    7. 'edges' → logprob: -3.269801616668701
    8. '       ' → logprob: -3.644801616668701
    9. 'return' → logprob: -4.144801616668701
    10. 'res' → logprob: -4.394801616668701

Token 445: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4867595434188843
    2. '+' → logprob: -0.9867595434188843
    3. '+x' → logprob: -4.736759662628174
    4. 'if' → logprob: -7.111759662628174
    5. '=' → logprob: -7.111759662628174
    6. ' if' → logprob: -7.611759662628174
    7. '+w' → logprob: -7.736759662628174
    8. ',' → logprob: -8.486759185791016
    9. '+i' → logprob: -8.861759185791016
    10. '           ' → logprob: -8.986759185791016

Token 446: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.846934974193573
    2. 'x' → logprob: -1.0969350337982178
    3. ' (' → logprob: -1.9719350337982178
    4. ' x' → logprob: -3.0969350337982178
    5. '(comp' → logprob: -3.3469350337982178
    6. '(' → logprob: -4.096934795379639
    7. 'comp' → logprob: -7.346934795379639
    8. ' comp' → logprob: -8.346935272216797
    9. '1' → logprob: -9.346935272216797
    10. '((' → logprob: -9.846935272216797

Token 447: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03257225081324577
    2. ',' → logprob: -4.032572269439697
    3. 'if' → logprob: -4.532572269439697
    4. '<|end|>' → logprob: -6.657572269439697
    5. ' ,' → logprob: -7.532572269439697
    6. '           ' → logprob: -7.782572269439697
    7. ')' → logprob: -7.782572269439697
    8. ' *' → logprob: -8.032571792602539
    9. '*' → logprob: -8.532571792602539
    10. '
' → logprob: -9.282571792602539

Token 448: ' A' (ID: 355)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.10028354823589325
    2. ' comp' → logprob: -2.350283622741699
    3. 'company' → logprob: -10.6002836227417
    4. 'l' → logprob: -10.9752836227417
    5. ' l' → logprob: -11.4752836227417
    6. '(comp' → logprob: -11.8502836227417
    7. '	comp' → logprob: -12.2252836227417
    8. 'c' → logprob: -12.3502836227417
    9. ' company' → logprob: -12.4752836227417
    10. '   ' → logprob: -13.9752836227417

Token 449: ',' (ID: 11)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.774624228477478
    2. ' ==' → logprob: -1.524624228477478
    3. '==' → logprob: -1.774624228477478
    4. 'else' → logprob: -2.6496243476867676
    5. ' edges' → logprob: -3.5246243476867676
    6. 'edges' → logprob: -3.7746243476867676
    7. ',' → logprob: -4.149624347686768
    8. '           ' → logprob: -5.774624347686768
    9. '
' → logprob: -5.774624347686768
    10. ')' → logprob: -7.274624347686768

Token 450: ' w' (ID: 286)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2786918878555298
    2. '           ' → logprob: -1.9036918878555298
    3. ' comp' → logprob: -3.7786917686462402
    4. ' w' → logprob: -3.9036917686462402
    5. 'else' → logprob: -4.02869176864624
    6. 'comp' → logprob: -5.02869176864624
    7. 'w' → logprob: -5.15369176864624
    8. ' edges' → logprob: -5.52869176864624
    9. '            ' → logprob: -5.77869176864624
    10. '0' → logprob: -5.90369176864624

Token 451: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8354137539863586
    2. '           ' → logprob: -1.4604136943817139
    3. '+' → logprob: -1.5854136943817139
    4. 'else' → logprob: -2.960413694381714
    5. ' +' → logprob: -3.460413694381714
    6. 'if' → logprob: -3.710413694381714
    7. ' else' → logprob: -4.710413932800293
    8. ')' → logprob: -6.210413932800293
    9. '               ' → logprob: -6.585413932800293
    10. '            ' → logprob: -6.835413932800293

Token 452: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3135271966457367
    2. ' not' → logprob: -2.5635271072387695
    3. 'comp' → logprob: -2.6885271072387695
    4. 'not' → logprob: -2.9385271072387695
    5. ' B' → logprob: -3.0635271072387695
    6. 'l' → logprob: -4.8135271072387695
    7. '1' → logprob: -5.6885271072387695
    8. ' comp' → logprob: -5.8135271072387695
    9. 'company' → logprob: -6.0635271072387695
    10. ' ' → logprob: -6.6885271072387695

Token 453: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6082909107208252
    2. '
' → logprob: -1.6082909107208252
    3. ',' → logprob: -2.108290910720825
    4. ')' → logprob: -2.733290910720825
    5. ' =' → logprob: -4.108290672302246
    6. ')
' → logprob: -4.233290672302246
    7. '):
' → logprob: -4.358290672302246
    8. ',
' → logprob: -5.108290672302246
    9. '=' → logprob: -5.233290672302246
    10. ':
' → logprob: -6.233290672302246

Token 454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08200793713331223
    2. ')' → logprob: -3.582007884979248
    3. '
' → logprob: -3.707007884979248
    4. ',' → logprob: -4.457007884979248
    5. '):
' → logprob: -5.332007884979248
    6. ')
' → logprob: -5.957007884979248
    7. '       ' → logprob: -6.082007884979248
    8. '=' → logprob: -6.957007884979248
    9. ',
' → logprob: -7.582007884979248
    10. ':' → logprob: -7.707007884979248

Token 455: ' adj' (ID: 20251)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.7693158388137817
    2. ' cost' → logprob: -2.019315719604492
    3. '   ' → logprob: -2.144315719604492
    4. '       ' → logprob: -2.394315719604492
    5. ' non' → logprob: -2.394315719604492
    6. ' par' → logprob: -2.644315719604492
    7. 'cost' → logprob: -3.144315719604492
    8. ' adjusted' → logprob: -3.144315719604492
    9. ' total' → logprob: -3.519315719604492
    10. ' sorted' → logprob: -3.519315719604492

Token 456: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.3420252799987793
    2. 'edges' → logprob: -2.2170252799987793
    3. '       ' → logprob: -3.0920252799987793
    4. 'cost' → logprob: -3.4670252799987793
    5. ' =' → logprob: -3.7170252799987793
    6. '   ' → logprob: -3.7170252799987793
    7. '_cost' → logprob: -3.8420252799987793
    8. '=' → logprob: -4.467025279998779
    9. '           ' → logprob: -5.092025279998779
    10. 'ed' → logprob: -5.217025279998779

Token 457: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12699824571609497
    2. ' =' → logprob: -2.12699818611145
    3. '=[]' → logprob: -9.626997947692871
    4. '=[]
' → logprob: -13.001997947692871
    5. '.sort' → logprob: -14.751997947692871
    6. 'sorted' → logprob: -14.876997947692871
    7. '.append' → logprob: -15.126997947692871
    8. '=[' → logprob: -15.376997947692871
    9. ')' → logprob: -15.751997947692871
    10. '   ' → logprob: -16.126998901367188

Token 458: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.03251282125711441
    2. 'sorted' → logprob: -3.532512903213501
    3. '[]
' → logprob: -6.032512664794922
    4. '[]' → logprob: -8.282512664794922
    5. '[((' → logprob: -9.282512664794922
    6. '[' → logprob: -11.782512664794922
    7. ' [(' → logprob: -13.032512664794922
    8. '[
' → logprob: -13.282512664794922
    9. '[]

' → logprob: -13.782512664794922
    10. ' sorted' → logprob: -14.282512664794922

Token 459: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27532264590263367
    2. ' for' → logprob: -2.275322675704956
    3. ' =' → logprob: -3.025322675704956
    4. '=' → logprob: -3.400322675704956
    5. 'for' → logprob: -3.400322675704956
    6. '<|end|>' → logprob: -5.275322437286377
    7. '[' → logprob: -6.150322437286377
    8. ',' → logprob: -6.275322437286377
    9. '               ' → logprob: -6.400322437286377
    10. ')' → logprob: -6.525322437286377

Token 460: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2036992609500885
    2. 'for' (adapté à ' for') → logprob: -2.0786993503570557
    3. '           ' → logprob: -2.8286993503570557
    4. '       ' → logprob: -10.328699111938477
    5. '	for' → logprob: -10.453699111938477
    6. '   ' → logprob: -10.578699111938477
    7. '
' → logprob: -11.953699111938477
    8. '               ' → logprob: -12.578699111938477
    9. '	       ' → logprob: -12.578699111938477
    10. ' ' → logprob: -12.953699111938477

Token 461: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.017925506457686424
    2. '(w' → logprob: -4.26792573928833
    3. ' w' → logprob: -5.64292573928833
    4. '   ' → logprob: -9.642925262451172
    5. ' (' → logprob: -9.767925262451172
    6. 'e' → logprob: -10.142925262451172
    7. 'ww' → logprob: -11.392925262451172
    8. 'ew' → logprob: -11.892925262451172
    9. 'wt' → logprob: -12.017925262451172
    10. 'edge' → logprob: -12.392925262451172

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001454955490771681
    2. ',w' → logprob: -10.37514591217041
    3. ',c' → logprob: -10.87514591217041
    4. ' ,' → logprob: -10.87514591217041
    5. ',x' → logprob: -11.00014591217041
    6. ',e' → logprob: -11.50014591217041
    7. ',t' → logprob: -11.50014591217041
    8. ',l' → logprob: -11.62514591217041
    9. 'comp' → logprob: -12.12514591217041
    10. ',v' → logprob: -12.62514591217041

Token 463: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0031804447062313557
    2. ' comp' → logprob: -5.753180503845215
    3. 'c' → logprob: -13.253180503845215
    4. '	comp' → logprob: -14.378180503845215
    5. 'com' → logprob: -15.253180503845215
    6. 'compl' → logprob: -17.2531795501709
    7. ' ' → logprob: -17.3781795501709
    8. '.comp' → logprob: -18.0031795501709
    9. 'cmp' → logprob: -18.0031795501709
    10. '   ' → logprob: -18.0031795501709

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022650440223515034
    2. ',c' → logprob: -6.502264976501465
    3. ',w' → logprob: -8.377264976501465
    4. ' in' → logprob: -8.627264976501465
    5. ' ,' → logprob: -8.877264976501465
    6. ',e' → logprob: -9.377264976501465
    7. ',l' → logprob: -10.127264976501465
    8. ',v' → logprob: -11.252264976501465
    9. 'in' → logprob: -11.377264976501465
    10. '_,' → logprob: -11.627264976501465

Token 465: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0040785204619169235
    2. ' u' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.254077911376953
    4. ' ' → logprob: -17.504077911376953
    5. '	u' → logprob: -18.254077911376953
    6. '           ' → logprob: -19.629077911376953
    7. '  ' → logprob: -19.629077911376953
    8. '       ' → logprob: -19.879077911376953
    9. '    ' → logprob: -19.879077911376953
    10. '        ' → logprob: -20.629077911376953

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07022296637296677
    2. ',v' → logprob: -2.695222854614258
    3. ' ,' → logprob: -8.695222854614258
    4. ',u' → logprob: -9.195222854614258
    5. ',w' → logprob: -11.820222854614258
    6. '_,' → logprob: -12.570222854614258
    7. ' in' → logprob: -12.695222854614258
    8. 'v' → logprob: -14.695222854614258
    9. ',user' → logprob: -14.695222854614258
    10. ',y' → logprob: -14.820222854614258

Token 467: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.5597102396423e-05
    2. ' v' → logprob: -10.250035285949707
    3. ',v' → logprob: -15.875035285949707
    4. '	v' → logprob: -17.875036239624023
    5. '
' → logprob: -18.250036239624023
    6. ',' → logprob: -18.250036239624023
    7. '   ' → logprob: -19.375036239624023
    8. ' ' → logprob: -20.125036239624023
    9. '_v' → logprob: -20.375036239624023
    10. '    ' → logprob: -20.500036239624023

Token 468: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04987630620598793
    2. ',' → logprob: -3.0498762130737305
    3. 'in' → logprob: -6.7998762130737305
    4. '               ' → logprob: -9.79987621307373
    5. '           ' → logprob: -9.79987621307373
    6. ' ,' → logprob: -10.79987621307373
    7. ':' → logprob: -11.79987621307373
    8. ':
' → logprob: -12.04987621307373
    9. ',
' → logprob: -12.42487621307373
    10. '            ' → logprob: -12.42487621307373

Token 469: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.03370391204953194
    2. ' edges' → logprob: -3.4087038040161133
    3. '(edges' → logprob: -10.408703804016113
    4. '   ' → logprob: -10.783703804016113
    5. '       ' → logprob: -13.283703804016113
    6. '.edges' → logprob: -13.658703804016113
    7. ' ' → logprob: -13.658703804016113
    8. '
' → logprob: -14.408703804016113
    9. '           ' → logprob: -15.033703804016113
    10. '    ' → logprob: -15.158703804016113

Token 470: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09107217937707901
    2. ':
' → logprob: -2.8410720825195312
    3. ':' → logprob: -3.7160720825195312
    4. ' in' → logprob: -6.341072082519531
    5. ',
' → logprob: -6.591072082519531
    6. '               ' → logprob: -7.466072082519531
    7. '           ' → logprob: -8.216072082519531
    8. '):
' → logprob: -8.591072082519531
    9. ' ,' → logprob: -9.966072082519531
    10. ',w' → logprob: -10.091072082519531

Token 471: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.045857783406972885
    2. ',' → logprob: -3.7958576679229736
    3. '           ' → logprob: -4.795857906341553
    4. ' in' → logprob: -5.670857906341553
    5. ' adj' → logprob: -6.420857906341553
    6. ' (' → logprob: -6.545857906341553
    7. '.append' → logprob: -6.545857906341553
    8. ':
' → logprob: -7.045857906341553
    9. ' =' → logprob: -7.170857906341553
    10. ' w' → logprob: -7.420857906341553

Token 472: ' cw' (ID: 72592)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.0905885174870491
    2. 'adj' → logprob: -2.4655885696411133
    3. ' if' → logprob: -7.215588569641113
    4. '                   ' → logprob: -7.590588569641113
    5. '               ' → logprob: -8.590588569641113
    6. 'if' → logprob: -8.965588569641113
    7. '(adj' → logprob: -9.840588569641113
    8. '   ' → logprob: -10.715588569641113
    9. '           ' → logprob: -11.715588569641113
    10. ' (' → logprob: -12.840588569641113

Token 473: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25264936685562134
    2. ' =' → logprob: -1.5026493072509766
    3. '=w' → logprob: -7.252649307250977
    4. '=
' → logprob: -12.752649307250977
    5. ',' → logprob: -12.877649307250977
    6. 'w' → logprob: -13.627649307250977
    7. '   ' → logprob: -14.252649307250977
    8. '+' → logprob: -14.377649307250977
    9. '=

' → logprob: -14.502649307250977
    10. '=c' → logprob: -14.502649307250977

Token 474: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.006731122732162476
    2. ' w' → logprob: -5.006731033325195
    3. '   ' → logprob: -11.381731033325195
    4. '(w' → logprob: -12.631731033325195
    5. ' ' → logprob: -14.756731033325195
    6. '	w' → logprob: -14.881731033325195
    7. '           ' → logprob: -16.381731033325195
    8. '    ' → logprob: -16.506731033325195
    9. '  ' → logprob: -16.756731033325195
    10. '       ' → logprob: -17.006731033325195

Token 475: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06474782526493073
    2. ' +' → logprob: -2.8147478103637695
    3. '+x' → logprob: -5.9397478103637695
    4. ' if' → logprob: -9.56474781036377
    5. '           ' → logprob: -11.06474781036377
    6. 'if' → logprob: -11.06474781036377
    7. '+
' → logprob: -11.31474781036377
    8. '
' → logprob: -11.56474781036377
    9. '+c' → logprob: -11.56474781036377
    10. '+w' → logprob: -12.68974781036377

Token 476: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.216456338763237
    2. '(x' → logprob: -1.7164562940597534
    3. ' x' → logprob: -4.716456413269043
    4. ' (' → logprob: -5.216456413269043
    5. '(' → logprob: -7.591456413269043
    6. '   ' → logprob: -10.591456413269043
    7. ' ' → logprob: -11.591456413269043
    8. '1' → logprob: -12.591456413269043
    9. '
' → logprob: -13.216456413269043
    10. '{x' → logprob: -13.466456413269043

Token 477: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0298797357827425
    2. 'if' → logprob: -3.5298798084259033
    3. '           ' → logprob: -9.654879570007324
    4. '               ' → logprob: -9.779879570007324
    5. '   ' → logprob: -12.904879570007324
    6. '
' → logprob: -13.654879570007324
    7. '                   ' → logprob: -13.779879570007324
    8. '                ' → logprob: -13.779879570007324
    9. '       ' → logprob: -14.029879570007324
    10. ' ' → logprob: -14.654879570007324

Token 478: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.006717505399137735
    2. ' comp' → logprob: -5.006717681884766
    3. '(comp' → logprob: -13.131717681884766
    4. '	comp' → logprob: -15.881717681884766
    5. 'Comp' → logprob: -19.631717681884766
    6. '_comp' → logprob: -20.256717681884766
    7. 'com' → logprob: -20.381717681884766
    8. ' ' → logprob: -20.631717681884766
    9. '.comp' → logprob: -20.756717681884766
    10. ' (' → logprob: -20.881717681884766

Token 479: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0788913294672966
    2. ' ==' → logprob: -2.5788912773132324
    3. '==
' → logprob: -14.07889175415039
    4. '0' → logprob: -14.82889175415039
    5. '=' → logprob: -15.70389175415039
    6. '[' → logprob: -16.07889175415039
    7. ' ' → logprob: -16.45389175415039
    8. ']==' → logprob: -16.57889175415039
    9. '===' → logprob: -17.70389175415039
    10. '()==' → logprob: -17.95389175415039

Token 480: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -20.125003814697266
    4. '۰' → logprob: -21.125003814697266
    5. '00' → logprob: -21.625003814697266
    6. '
' → logprob: -21.750003814697266
    7. '1' → logprob: -22.125003814697266
    8. '=' → logprob: -22.562503814697266
    9. '  ' → logprob: -22.562503814697266
    10. '０' → logprob: -22.875003814697266

Token 481: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '1' → logprob: -20.5
    4. '۰' → logprob: -20.75
    5. '   ' → logprob: -20.875
    6. '```' → logprob: -21.125
    7. '00' → logprob: -21.1875
    8. '=' → logprob: -21.4375
    9. '
' → logprob: -21.8125
    10. '[' → logprob: -21.9375

Token 482: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.008616108447313309
    2. 'else' → logprob: -4.758615970611572
    3. '	else' → logprob: -13.75861644744873
    4. '           ' → logprob: -15.25861644744873
    5. '        ' → logprob: -16.008615493774414
    6. '               ' → logprob: -17.008615493774414
    7. '            ' → logprob: -17.008615493774414
    8. ' ' → logprob: -17.133615493774414
    9. '       ' → logprob: -18.258615493774414
    10. '                ' → logprob: -18.508615493774414

Token 483: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00462688785046339
    2. ' w' → logprob: -5.379626750946045
    3. '0' → logprob: -12.004627227783203
    4. '   ' → logprob: -15.754627227783203
    5. '           ' → logprob: -16.129627227783203
    6. ' ' → logprob: -16.254627227783203
    7. '               ' → logprob: -16.379627227783203
    8. '
' → logprob: -17.504627227783203
    9. '                   ' → logprob: -17.504627227783203
    10. '	w' → logprob: -17.754627227783203

Token 484: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019580135121941566
    2. ')' → logprob: -6.876957893371582
    3. '           ' → logprob: -7.751957893371582
    4. ',' → logprob: -8.501957893371582
    5. '
' → logprob: -9.251957893371582
    6. '<|end|>' → logprob: -9.626957893371582
    7. ')
' → logprob: -9.876957893371582
    8. '<|end|>' → logprob: -10.501957893371582
    9. '                   ' → logprob: -11.376957893371582
    10. '                
' → logprob: -12.001957893371582

Token 485: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006066487403586507
    2. '           ' → logprob: -7.750606536865234
    3. ',' → logprob: -9.125606536865234
    4. ')' → logprob: -10.125606536865234
    5. '
' → logprob: -12.125606536865234
    6. '                   ' → logprob: -12.375606536865234
    7. '                
' → logprob: -12.875606536865234
    8. ')
' → logprob: -13.125606536865234
    9. '<|end|>' → logprob: -13.250606536865234
    10. '              ' → logprob: -13.500606536865234

Token 486: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.5802449584007263
    2. 'adj' (adapté à ' adj') → logprob: -0.8302449584007263
    3. '           ' → logprob: -5.580245018005371
    4. '               ' → logprob: -7.580245018005371
    5. '(adj' → logprob: -12.330245018005371
    6. '   ' → logprob: -12.955245018005371
    7. '       ' → logprob: -12.955245018005371
    8. '                   ' → logprob: -13.455245018005371
    9. 'ad' → logprob: -13.830245018005371
    10. 'Adj' → logprob: -14.205245018005371

Token 487: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -3.5120287066092715e-05
    2. '               ' → logprob: -10.750035285949707
    3. '           ' → logprob: -12.375035285949707
    4. ',' → logprob: -12.625035285949707
    5. 'edges' → logprob: -12.750035285949707
    6. '                   ' → logprob: -14.625035285949707
    7. '   ' → logprob: -14.750035285949707
    8. '       ' → logprob: -15.125035285949707
    9. '.append' → logprob: -15.250035285949707
    10. ',_' → logprob: -15.500035285949707

Token 488: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003205161774531007
    2. '.' → logprob: -5.753205299377441
    3. 'append' → logprob: -11.003205299377441
    4. ' .' → logprob: -12.753205299377441
    5. '=' → logprob: -12.753205299377441
    6. ',' → logprob: -13.378205299377441
    7. ').' → logprob: -13.378205299377441
    8. '.app' → logprob: -14.253205299377441
    9. '].' → logprob: -15.003205299377441
    10. '.ap' → logprob: -16.003204345703125

Token 489: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5087274312973022
    2. '(c' → logprob: -1.0087274312973022
    3. '(' → logprob: -3.383727550506592
    4. ' (' → logprob: -9.383727073669434
    5. '   ' → logprob: -10.633727073669434
    6. '(C' → logprob: -10.883727073669434
    7. '(ct' → logprob: -13.883727073669434
    8. '(cost' → logprob: -14.008727073669434
    9. '(cx' → logprob: -14.008727073669434
    10. '  ' → logprob: -14.133727073669434

Token 490: 'cw' (ID: 97179)
  Prédit: 'cw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -4.0722858102526516e-05
    2. ' cw' → logprob: -10.125041007995605
    3. 'cwd' → logprob: -15.500041007995605
    4. 'cow' → logprob: -15.625041007995605
    5. 'c' → logprob: -15.875041007995605
    6. '   ' → logprob: -16.75004005432129
    7. '
' → logprob: -17.25004005432129
    8. ')' → logprob: -17.37504005432129
    9. 'cv' → logprob: -18.12504005432129
    10. 'cq' → logprob: -18.25004005432129

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022451656695920974
    2. ',u' → logprob: -9.000224113464355
    3. ' ,' → logprob: -9.625224113464355
    4. ',w' → logprob: -10.375224113464355
    5. '))' → logprob: -14.250224113464355
    6. ')' → logprob: -14.250224113464355
    7. ',
' → logprob: -14.500224113464355
    8. '   ' → logprob: -14.625224113464355
    9. ',x' → logprob: -14.625224113464355
    10. ',)' → logprob: -14.875224113464355

Token 492: ' w' (ID: 286)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0004499765345826745
    2. 'w' → logprob: -7.875450134277344
    3. ' comp' → logprob: -9.625450134277344
    4. '   ' → logprob: -13.375450134277344
    5. '(comp' → logprob: -14.500450134277344
    6. '	comp' → logprob: -14.750450134277344
    7. 'u' → logprob: -15.125450134277344
    8. 'com' → logprob: -15.375450134277344
    9. '    ' → logprob: -16.250450134277344
    10. 'cmp' → logprob: -16.250450134277344

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001761272142175585
    2. ' ,' → logprob: -8.750176429748535
    3. '))' → logprob: -11.750176429748535
    4. ',
' → logprob: -12.750176429748535
    5. 'comp' → logprob: -13.000176429748535
    6. ',c' → logprob: -14.250176429748535
    7. '   ' → logprob: -14.750176429748535
    8. ')' → logprob: -14.750176429748535
    9. '           ' → logprob: -14.750176429748535
    10. ')),' → logprob: -15.250176429748535

Token 494: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0028073713183403015
    2. ' comp' → logprob: -5.877807140350342
    3. '	comp' → logprob: -14.1278076171875
    4. '           ' → logprob: -14.7528076171875
    5. 'com' → logprob: -14.7528076171875
    6. '   ' → logprob: -15.0028076171875
    7. '(comp' → logprob: -16.1278076171875
    8. '               ' → logprob: -16.2528076171875
    9. ' ' → logprob: -16.5028076171875
    10. 'c' → logprob: -17.1278076171875

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020722290500998497
    2. ',u' → logprob: -6.252072334289551
    3. ' ,' → logprob: -8.87707233428955
    4. 'u' → logprob: -13.25207233428955
    5. '           ' → logprob: -14.25207233428955
    6. '   ' → logprob: -14.87707233428955
    7. ',v' → logprob: -15.37707233428955
    8. ',
' → logprob: -15.62707233428955
    9. '               ' → logprob: -15.62707233428955
    10. ',user' → logprob: -15.87707233428955

Token 496: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0036017363891005516
    2. ' u' → logprob: -5.628601551055908
    3. '   ' → logprob: -13.628602027893066
    4. ' ' → logprob: -15.878602027893066
    5. '
' → logprob: -15.878602027893066
    6. '	u' → logprob: -16.50360107421875
    7. '           ' → logprob: -17.25360107421875
    8. ')' → logprob: -17.25360107421875
    9. '    ' → logprob: -17.50360107421875
    10. '
' → logprob: -17.75360107421875

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008713372983038425
    2. ',v' → logprob: -4.758713245391846
    3. ' ,' → logprob: -9.258713722229004
    4. ',
' → logprob: -13.008713722229004
    5. 'v' → logprob: -13.883713722229004
    6. '   ' → logprob: -16.383712768554688
    7. '<|end|>' → logprob: -16.883712768554688
    8. ',\
' → logprob: -17.258712768554688
    9. '           ' → logprob: -17.383712768554688
    10. ' v' → logprob: -17.508712768554688

Token 498: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00014036978245712817
    2. ' v' → logprob: -8.875140190124512
    3. ')v' → logprob: -16.000141143798828
    4. ')' → logprob: -16.500141143798828
    5. '
' → logprob: -16.500141143798828
    6. '   ' → logprob: -17.000141143798828
    7. ' ' → logprob: -17.500141143798828
    8. '	v' → logprob: -17.875141143798828
    9. ',v' → logprob: -18.000141143798828
    10. '    ' → logprob: -18.125141143798828

Token 499: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007725168019533157
    2. '))
' → logprob: -4.882725238800049
    3. ')' → logprob: -9.13272476196289
    4. '           ' → logprob: -12.25772476196289
    5. '))

' → logprob: -13.50772476196289
    6. ' ))' → logprob: -13.50772476196289
    7. ')
' → logprob: -13.63272476196289
    8. '               ' → logprob: -14.50772476196289
    9. '))
' → logprob: -14.63272476196289
    10. '       ' → logprob: -15.00772476196289

Token 500: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20191621780395508
    2. '       ' → logprob: -2.076916217803955
    3. '           ' → logprob: -3.576916217803955
    4. '<|end|>' → logprob: -4.326916217803955
    5. '   ' → logprob: -5.326916217803955
    6. ')' → logprob: -5.326916217803955
    7. '<|end|>' → logprob: -6.076916217803955
    8. '        
' → logprob: -7.201916217803955
    9. '.sort' → logprob: -7.326916217803955
    10. '    
' → logprob: -7.576916217803955

Token 501: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.4913575053215027
    2. ' adj' → logprob: -1.1163575649261475
    3. '           ' → logprob: -3.1163575649261475
    4. '
' → logprob: -4.241357326507568
    5. '   ' → logprob: -6.741357326507568
    6. '       ' → logprob: -7.616357326507568
    7. '(adj' → logprob: -8.741357803344727
    8. '            
' → logprob: -9.991357803344727
    9. 'ad' → logprob: -10.241357803344727
    10. '    
' → logprob: -10.991357803344727

Token 502: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00020497082732617855
    2. ' =' → logprob: -9.875205039978027
    3. '.sort' → logprob: -10.000205039978027
    4. 'sort' → logprob: -10.625205039978027
    5. '.append' → logprob: -10.625205039978027
    6. 'edges' → logprob: -11.250205039978027
    7. 'ges' → logprob: -11.500205039978027
    8. '=' → logprob: -11.500205039978027
    9. '_sorted' → logprob: -11.625205039978027
    10. '
' → logprob: -13.500205039978027

Token 503: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00012451570364646614
    2. '.' → logprob: -9.00012493133545
    3. '=' → logprob: -14.12512493133545
    4. 'sort' → logprob: -15.25012493133545
    5. ' .' → logprob: -16.000123977661133
    6. '=.' → logprob: -17.625123977661133
    7. ' sort' → logprob: -18.125123977661133
    8. '	sort' → logprob: -18.625123977661133
    9. '​.' → logprob: -19.000123977661133
    10. '.Sort' → logprob: -19.250123977661133

Token 504: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01870795525610447
    2. '()
' → logprob: -4.893707752227783
    3. '(' → logprob: -5.518707752227783
    4. '<|end|>' → logprob: -5.518707752227783
    5. '           ' → logprob: -6.893707752227783
    6. ',' → logprob: -7.393707752227783
    7. '(
' → logprob: -8.143708229064941
    8. ')' → logprob: -8.143708229064941
    9. '<|end|>' → logprob: -8.393708229064941
    10. '(reverse' → logprob: -9.268708229064941

Token 505: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.01106881070882082
    2. '=' → logprob: -4.511068820953369
    3. 'lambda' → logprob: -11.511068344116211
    4. '(lambda' → logprob: -11.636068344116211
    5. ')' → logprob: -13.886068344116211
    6. ' =' → logprob: -14.511068344116211
    7. '=
' → logprob: -15.261068344116211
    8. '=item' → logprob: -15.511068344116211
    9. '=len' → logprob: -16.38606834411621
    10. '=None' → logprob: -16.63606834411621

Token 506: ' e' (ID: 319)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.015137357637286186
    2. ' lambda' → logprob: -4.265137195587158
    3. 'x' → logprob: -7.640137195587158
    4. 'item' → logprob: -8.390137672424316
    5. '_lambda' → logprob: -9.515137672424316
    6. '(lambda' → logprob: -10.015137672424316
    7. '_' → logprob: -10.140137672424316
    8. '=lambda' → logprob: -10.640137672424316
    9. 'lam' → logprob: -10.890137672424316
    10. 'e' → logprob: -11.265137672424316

Token 507: ':' (ID: 25)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4094747006893158
    2. ':' → logprob: -1.6594747304916382
    3. '(e' → logprob: -2.4094746112823486
    4. '(' → logprob: -3.5344746112823486
    5. '[' → logprob: -4.534474849700928
    6. ':e' → logprob: -5.284474849700928
    7. ' e' → logprob: -5.784474849700928
    8. '0' → logprob: -5.909474849700928
    9. ')' → logprob: -6.534474849700928
    10. ':(' → logprob: -6.784474849700928

Token 508: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0002330992283532396
    2. ' e' → logprob: -8.375232696533203
    3. '(e' → logprob: -13.000232696533203
    4. '(' → logprob: -15.375232696533203
    5. ' (' → logprob: -18.000232696533203
    6. ')e' → logprob: -18.000232696533203
    7. '	e' → logprob: -18.375232696533203
    8. '   ' → logprob: -19.125232696533203
    9. '_e' → logprob: -19.500232696533203
    10. '_' → logprob: -20.125232696533203

Token 509: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00027206414961256087
    2. ':' → logprob: -8.875271797180176
    3. '0' → logprob: -9.500271797180176
    4. '(' → logprob: -10.500271797180176
    5. 'e' → logprob: -11.625271797180176
    6. '[e' → logprob: -11.625271797180176
    7. ' [' → logprob: -12.875271797180176
    8. '(e' → logprob: -13.125271797180176
    9. ')' → logprob: -13.375271797180176
    10. ':(' → logprob: -13.750271797180176

Token 510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4617256056226324e-05
    2. 'e' → logprob: -11.625014305114746
    3. ' ' → logprob: -12.500014305114746
    4. '(' → logprob: -14.500014305114746
    5. '1' → logprob: -14.875014305114746
    6. '[' → logprob: -14.875014305114746
    7. '   ' → logprob: -15.375014305114746
    8. '
' → logprob: -15.500014305114746
    9. ' e' → logprob: -17.000015258789062
    10. 'x' → logprob: -17.375015258789062

Token 511: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011534435179783031
    2. ')
' → logprob: -9.125115394592285
    3. ' )' → logprob: -12.625115394592285
    4. ')`' → logprob: -13.750115394592285
    5. '))' → logprob: -14.625115394592285
    6. ')#' → logprob: -14.875115394592285
    7. ')
' → logprob: -15.375115394592285
    8. ')return' → logprob: -15.875115394592285
    9. '),' → logprob: -16.00011444091797
    10. ',' → logprob: -16.00011444091797

Token 512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2780778706073761
    2. '   ' → logprob: -2.0280778408050537
    3. '       ' → logprob: -3.4030778408050537
    4. ' par' → logprob: -3.5280778408050537
    5. '
' → logprob: -3.7780778408050537
    6. 'par' → logprob: -4.278078079223633
    7. '            
' → logprob: -5.653078079223633
    8. '    
' → logprob: -6.403078079223633
    9. '	par' → logprob: -6.653078079223633
    10. 'count' → logprob: -6.903078079223633

Token 513: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' (adapté à ' par') → logprob: -0.0005594660760834813
    2. '           ' → logprob: -7.625559329986572
    3. ' par' → logprob: -9.75055980682373
    4. '
' → logprob: -11.75055980682373
    5. '   ' → logprob: -13.00055980682373
    6. '       ' → logprob: -13.75055980682373
    7. '            
' → logprob: -14.12555980682373
    8. '	par' → logprob: -15.25055980682373
    9. 'parent' → logprob: -15.37555980682373
    10. 'n' → logprob: -15.50055980682373

Token 514: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19098685681819916
    2. ' =' → logprob: -2.0659868717193604
    3. '=' → logprob: -3.0659868717193604
    4. ',n' → logprob: -8.315986633300781
    5. ' ,' → logprob: -9.690986633300781
    6. ',length' → logprob: -10.065986633300781
    7. ',k' → logprob: -10.815986633300781
    8. '[' → logprob: -11.065986633300781
    9. ',len' → logprob: -11.190986633300781
    10. ',size' → logprob: -11.440986633300781

Token 515: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.5785034894943237
    2. 'list' → logprob: -0.8285034894943237
    3. '[i' → logprob: -6.578503608703613
    4. ' list' → logprob: -7.328503608703613
    5. ' [' → logprob: -8.578503608703613
    6. '[' → logprob: -8.578503608703613
    7. '[n' → logprob: -9.703503608703613
    8. '[u' → logprob: -10.953503608703613
    9. '[node' → logprob: -10.953503608703613
    10. '[List' → logprob: -11.828503608703613

Token 516: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.088346359931165e-07
    2. ' i' → logprob: -14.750000953674316
    3. '_i' → logprob: -15.000000953674316
    4. '_' → logprob: -15.750000953674316
    5. '-i' → logprob: -17.0
    6. '[i' → logprob: -17.5
    7. '*i' → logprob: -17.75
    8. '   ' → logprob: -18.0
    9. '-' → logprob: -18.25
    10. '
' → logprob: -18.25

Token 517: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5760177969932556
    2. ' for' → logprob: -0.8260177969932556
    3. 'i' → logprob: -10.451017379760742
    4. '   ' → logprob: -11.326017379760742
    5. ' i' → logprob: -11.576017379760742
    6. ']' → logprob: -11.701017379760742
    7. '
' → logprob: -11.951017379760742
    8. ' ' → logprob: -12.701017379760742
    9. '	for' → logprob: -12.826017379760742
    10. '=' → logprob: -12.826017379760742

Token 518: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008632888086140156
    2. ' range' → logprob: -4.758632659912109
    3. 'i' → logprob: -11.13363265991211
    4. 'in' → logprob: -13.00863265991211
    5. '(range' → logprob: -13.88363265991211
    6. ' i' → logprob: -15.50863265991211
    7. ' ' → logprob: -15.75863265991211
    8. ' in' → logprob: -15.75863265991211
    9. '
' → logprob: -16.50863265991211
    10. '  ' → logprob: -17.63363265991211

Token 519: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003993746358901262
    2. ' range' → logprob: -6.003993511199951
    3. 'in' → logprob: -6.753993511199951
    4. '(range' → logprob: -8.00399398803711
    5. ' in' → logprob: -11.12899398803711
    6. ' ' → logprob: -14.00399398803711
    7. '  ' → logprob: -15.00399398803711
    8. '   ' → logprob: -15.12899398803711
    9. '(' → logprob: -15.75399398803711
    10. '	range' → logprob: -16.25399398803711

Token 520: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '(range' → logprob: -18.50020408630371
    4. ' ' → logprob: -21.37520408630371
    5. '	range' → logprob: -22.87520408630371
    6. '  ' → logprob: -23.37520408630371
    7. '
' → logprob: -23.75020408630371
    8. '   ' → logprob: -23.87520408630371
    9. '0' → logprob: -24.25020408630371
    10. 'rang' → logprob: -24.37520408630371

Token 521: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38688260316848755
    2. '(n' → logprob: -1.1368825435638428
    3. '(' → logprob: -11.886882781982422
    4. ' n' → logprob: -13.136882781982422
    5. ' (' → logprob: -13.761882781982422
    6. '	n' → logprob: -15.136882781982422
    7. '
' → logprob: -15.386882781982422
    8. '0' → logprob: -15.386882781982422
    9. '_n' → logprob: -15.511882781982422
    10. '   ' → logprob: -15.761882781982422

Token 522: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3014083504676819
    2. ')]
' → logprob: -1.426408290863037
    3. '+' → logprob: -3.926408290863037
    4. ' )' → logprob: -9.176408767700195
    5. ')]
' → logprob: -9.301408767700195
    6. ' +' → logprob: -9.676408767700195
    7. ')]

' → logprob: -9.926408767700195
    8. '+n' → logprob: -11.176408767700195
    9. ')' → logprob: -11.301408767700195
    10. '   ' → logprob: -13.801408767700195

Token 523: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6887151598930359
    2. '(n' → logprob: -0.9387151598930359
    3. '1' → logprob: -2.5637152194976807
    4. ' n' → logprob: -3.5637152194976807
    5. ' (' → logprob: -7.938714981079102
    6. '(' → logprob: -8.313714981079102
    7. ')n' → logprob: -8.438714981079102
    8. ')' → logprob: -8.813714981079102
    9. '   ' → logprob: -9.063714981079102
    10. '
' → logprob: -9.563714981079102

Token 524: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06216755136847496
    2. ')]
' → logprob: -2.8121676445007324
    3. ']' → logprob: -9.187167167663574
    4. ')' → logprob: -9.812167167663574
    5. ')]
' → logprob: -10.937167167663574
    6. ']
' → logprob: -11.437167167663574
    7. ')]

' → logprob: -11.437167167663574
    8. ')
' → logprob: -14.062167167663574
    9. ')],' → logprob: -14.312167167663574
    10. ' )' → logprob: -15.187167167663574

Token 525: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3533158004283905
    2. '	r' → logprob: -1.978315830230713
    3. 'rank' → logprob: -2.103315830230713
    4. ' rank' → logprob: -4.478315830230713
    5. '   ' → logprob: -4.603315830230713
    6. '	       ' → logprob: -5.478315830230713
    7. '       ' → logprob: -5.728315830230713
    8. '	   ' → logprob: -5.978315830230713
    9. '(rank' → logprob: -6.103315830230713
    10. '		' → logprob: -6.603315830230713

Token 526: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' (adapté à ' rank') → logprob: -0.00040362097206525505
    2. ' rank' → logprob: -7.87540340423584
    3. '           ' → logprob: -11.12540340423584
    4. '   ' → logprob: -12.00040340423584
    5. '
' → logprob: -13.62540340423584
    6. '(rank' → logprob: -14.37540340423584
    7. '       ' → logprob: -14.62540340423584
    8. '```' → logprob: -16.625404357910156
    9. '            
' → logprob: -16.750404357910156
    10. 'r' → logprob: -17.250404357910156

Token 527: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11284487694501877
    2. ' =' → logprob: -2.237844944000244
    3. '=[' → logprob: -11.362844467163086
    4. '[' → logprob: -12.612844467163086
    5. '=[]' → logprob: -13.237844467163086
    6. '   ' → logprob: -13.362844467163086
    7. ' =[' → logprob: -13.737844467163086
    8. ' ' → logprob: -13.737844467163086
    9. ']' → logprob: -14.612844467163086
    10. '	' → logprob: -14.612844467163086

Token 528: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001981095178052783
    2. ' [' → logprob: -6.251981258392334
    3. '[i' → logprob: -10.001980781555176
    4. '   ' → logprob: -12.376980781555176
    5. '[n' → logprob: -12.751980781555176
    6. '0' → logprob: -17.126981735229492
    7. '[I' → logprob: -17.376981735229492
    8. ' ' → logprob: -17.626981735229492
    9. '[e' → logprob: -17.751981735229492
    10. '	' → logprob: -17.876981735229492

Token 529: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '   ' → logprob: -21.75
    4. '
' → logprob: -22.625
    5. '۰' → logprob: -22.875
    6. '０' → logprob: -23.0
    7. '```' → logprob: -23.25
    8. '00' → logprob: -23.375
    9. '000' → logprob: -23.875
    10. '1' → logprob: -24.25

Token 530: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.670853853225708
    2. ']' → logprob: -0.795853853225708
    3. ' for' → logprob: -3.670853853225708
    4. 'for' → logprob: -4.545853614807129
    5. ']*' → logprob: -7.045853614807129
    6. '*(' → logprob: -8.045853614807129
    7. '   ' → logprob: -8.545853614807129
    8. '	for' → logprob: -10.420853614807129
    9. ' ]' → logprob: -11.545853614807129
    10. '           ' → logprob: -11.795853614807129

Token 531: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.704273118884885e-07
    2. ' n' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.625
    4. '(n' → logprob: -16.75
    5. '
' → logprob: -17.5
    6. '	n' → logprob: -18.75
    7. ')n' → logprob: -19.625
    8. ' ' → logprob: -21.375
    9. '(' → logprob: -21.75
    10. '_n' → logprob: -22.0

Token 532: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7432603272027336e-06
    2. '+
' → logprob: -14.125001907348633
    3. ' +' → logprob: -14.625001907348633
    4. '1' → logprob: -15.500001907348633
    5. '```' → logprob: -15.625001907348633
    6. '
' → logprob: -17.125001907348633
    7. '[' → logprob: -18.250001907348633
    8. '+n' → logprob: -18.375001907348633
    9. '()+' → logprob: -18.625001907348633
    10. ')+' → logprob: -19.000001907348633

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. '5' → logprob: -12.25001049041748
    3. '7' → logprob: -13.12501049041748
    4. '6' → logprob: -13.75001049041748
    5. ' ' → logprob: -14.12501049041748
    6. '
' → logprob: -14.62501049041748
    7. '```' → logprob: -14.75001049041748
    8. '   ' → logprob: -15.75001049041748
    9. 'n' → logprob: -15.87501049041748
    10. 'm' → logprob: -16.125009536743164

Token 534: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015084355836734176
    2. ')
' → logprob: -6.5015082359313965
    3. ')

' → logprob: -13.376508712768555
    4. ')
' → logprob: -13.376508712768555
    5. '   ' → logprob: -13.501508712768555
    6. ' )' → logprob: -14.376508712768555
    7. '       ' → logprob: -15.501508712768555
    8. '<|end|>' → logprob: -15.626508712768555
    9. ')\' → logprob: -16.376508712768555
    10. '[' → logprob: -16.501508712768555

Token 535: '           ' (ID: 352)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3059496581554413
    2. ' count' → logprob: -2.5559496879577637
    3. '           ' → logprob: -2.8059496879577637
    4. 'cnt' → logprob: -3.0559496879577637
    5. 'res' → logprob: -4.430949687957764
    6. 'mst' → logprob: -4.555949687957764
    7. ' cnt' → logprob: -4.805949687957764
    8. '       ' → logprob: -4.930949687957764
    9. 'total' → logprob: -5.055949687957764
    10. '   ' → logprob: -5.055949687957764

Token 536: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.25184687972068787
    2. 'cnt' → logprob: -1.7518469095230103
    3. 'res' → logprob: -3.2518467903137207
    4. 'total' → logprob: -5.126846790313721
    5. 'cost' → logprob: -5.751846790313721
    6. 'used' → logprob: -7.626846790313721
    7. 'num' → logprob: -8.126847267150879
    8. 'a' → logprob: -8.501847267150879
    9. '           ' → logprob: -9.876847267150879
    10. 'ac' → logprob: -10.001847267150879

Token 537: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.794284462928772
    2. '_A' → logprob: -1.294284462928772
    3. ' =' → logprob: -1.669284462928772
    4. '_a' → logprob: -2.6692843437194824
    5. '=' → logprob: -4.669284343719482
    6. '_' → logprob: -5.419284343719482
    7. 'a' → logprob: -6.294284343719482
    8. ' A' → logprob: -8.41928482055664
    9. '_comp' → logprob: -8.54428482055664
    10. '0' → logprob: -9.66928482055664

Token 538: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142823457717896
    2. '=' → logprob: -1.7014281749725342
    3. ',' → logprob: -11.201428413391113
    4. ' ' → logprob: -14.201428413391113
    5. ' ' → logprob: -15.701428413391113
    6. ' ,' → logprob: -16.201427459716797
    7. ')' → logprob: -16.201427459716797
    8. '```' → logprob: -16.701427459716797
    9. '   ' → logprob: -17.076427459716797
    10. '[' → logprob: -17.201427459716797

Token 539: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -19.000024795532227
    4. '           ' → logprob: -19.250024795532227
    5. '=' → logprob: -19.500024795532227
    6. '  ' → logprob: -20.500024795532227
    7. '000' → logprob: -20.625024795532227
    8. '       ' → logprob: -21.000024795532227
    9. '۰' → logprob: -21.375024795532227
    10. '```' → logprob: -21.375024795532227

Token 540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '000' → logprob: -19.625001907348633
    5. '```' → logprob: -20.125001907348633
    6. '۰' → logprob: -20.250001907348633
    7. '=' → logprob: -20.625001907348633
    8. 'import' → logprob: -20.625001907348633
    9. '[' → logprob: -20.750001907348633
    10. '<|end|>' → logprob: -20.875001907348633

Token 541: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4730938971042633
    2. '           ' → logprob: -1.348093867301941
    3. '<|end|>' → logprob: -3.7230939865112305
    4. ' 
' → logprob: -3.8480939865112305
    5. ' for' → logprob: -4.5980939865112305
    6. '    
' → logprob: -4.7230939865112305
    7. '  
' → logprob: -4.7230939865112305
    8. '<|end|>' → logprob: -4.8480939865112305
    9. '            
' → logprob: -5.0980939865112305
    10. ',' → logprob: -5.3480939865112305

Token 542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23685887455940247
    2. ' for' → logprob: -2.61185884475708
    3. '
' → logprob: -3.11185884475708
    4. '       ' → logprob: -3.73685884475708
    5. 'for' → logprob: -4.11185884475708
    6. '   ' → logprob: -4.11185884475708
    7. '<|end|>' → logprob: -4.61185884475708
    8. ',' → logprob: -4.98685884475708
    9. '```' → logprob: -6.23685884475708
    10. 'i' → logprob: -6.23685884475708

Token 543: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049164172261953354
    2. ' for' → logprob: -3.049164056777954
    3. '           ' → logprob: -8.549163818359375
    4. 'result' → logprob: -9.174163818359375
    5. 'total' (adapté à ' total') → logprob: -9.299163818359375
    6. 'cost' → logprob: -10.174163818359375
    7. '```' → logprob: -10.549163818359375
    8. 'res' → logprob: -10.549163818359375
    9. '
' → logprob: -10.799163818359375
    10. 'idx' → logprob: -11.049163818359375

Token 544: '_orig' (ID: 96685)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.057186923921108246
    2. '_' → logprob: -3.5571868419647217
    3. ' =' → logprob: -4.307187080383301
    4. ',' → logprob: -5.182187080383301
    5. '=' → logprob: -5.432187080383301
    6. 'cost' → logprob: -6.932187080383301
    7. '_weight' → logprob: -6.932187080383301
    8. ' _' → logprob: -7.932187080383301
    9. '_w' → logprob: -8.0571870803833
    10. ',_' → logprob: -8.1821870803833

Token 545: ' =' (ID: 314)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.015013943426311016
    2. 'cost' → logprob: -5.015014171600342
    3. ' =' → logprob: -5.390014171600342
    4. '_' → logprob: -6.390014171600342
    5. '=' → logprob: -6.640014171600342
    6. '_w' → logprob: -9.015013694763184
    7. ',' → logprob: -9.015013694763184
    8. '
' → logprob: -9.265013694763184
    9. '_weight' → logprob: -9.390013694763184
    10. '   ' → logprob: -9.890013694763184

Token 546: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010344763286411762
    2. ' ' → logprob: -6.876034259796143
    3. '           ' → logprob: -13.6260347366333
    4. '   ' → logprob: -15.6260347366333
    5. ' ' → logprob: -15.7510347366333
    6. '               ' → logprob: -16.001033782958984
    7. '       ' → logprob: -17.001033782958984
    8. '                   ' → logprob: -17.876033782958984
    9. '=' → logprob: -18.501033782958984
    10. '  ' → logprob: -18.563533782958984

Token 547: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.375009536743164
    4. '=' → logprob: -19.062509536743164
    5. '000' → logprob: -19.375009536743164
    6. '۰' → logprob: -19.625009536743164
    7. 'w' → logprob: -19.750009536743164
    8. '  ' → logprob: -20.062509536743164
    9. '```' → logprob: -20.062509536743164
    10. '00' → logprob: -20.125009536743164

Token 548: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08134745061397552
    2. '           ' → logprob: -3.4563474655151367
    3. ' 
' → logprob: -4.706347465515137
    4. '  
' → logprob: -4.706347465515137
    5. '<|end|>' → logprob: -4.831347465515137
    6. '    
' → logprob: -5.456347465515137
    7. '            
' → logprob: -5.456347465515137
    8. ' for' → logprob: -5.956347465515137
    9. '<|end|>' → logprob: -6.331347465515137
    10. '	
' → logprob: -6.581347465515137

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09075368195772171
    2. '
' → logprob: -2.7157537937164307
    3. ' for' → logprob: -5.090753555297852
    4. '       ' → logprob: -5.340753555297852
    5. '   ' → logprob: -5.965753555297852
    6. '<|end|>' → logprob: -6.840753555297852
    7. '    
' → logprob: -7.090753555297852
    8. '            
' → logprob: -7.340753555297852
    9. 'for' → logprob: -7.715753555297852
    10. '  
' → logprob: -7.715753555297852

Token 550: ' num' (ID: 2269)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6131932139396667
    2. 'for' → logprob: -0.8631932139396667
    3. '           ' → logprob: -3.3631932735443115
    4. '   ' → logprob: -6.863193035125732
    5. '       ' → logprob: -7.488193035125732
    6. '	for' → logprob: -8.36319351196289
    7. ' ' → logprob: -10.61319351196289
    8. '
' → logprob: -10.73819351196289
    9. '	   ' → logprob: -11.48819351196289
    10. '```' → logprob: -11.48819351196289

Token 551: ' =' (ID: 314)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.15597397089004517
    2. '=' → logprob: -2.5309739112854004
    3. ' =' → logprob: -3.0309739112854004
    4. 'A' → logprob: -5.1559739112854
    5. '_nodes' → logprob: -6.0309739112854
    6. '_selected' → logprob: -6.0309739112854
    7. 'Edges' → logprob: -6.2809739112854
    8. '_tokens' → logprob: -7.2809739112854
    9. '_vertices' → logprob: -7.6559739112854
    10. '_' → logprob: -7.7809739112854

Token 552: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005077573587186635
    2. ' ' → logprob: -7.625507831573486
    3. 'n' → logprob: -11.000507354736328
    4. '1' → logprob: -13.750507354736328
    5. '   ' → logprob: -14.500507354736328
    6. 'len' → logprob: -15.125507354736328
    7. '=' → logprob: -15.625507354736328
    8. ' n' → logprob: -15.750507354736328
    9. '  ' → logprob: -16.125507354736328
    10. '```' → logprob: -16.250507354736328

Token 553: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.802049756515771e-05
    2. 'n' → logprob: -9.875067710876465
    3. ' ' → logprob: -11.500067710876465
    4. 'len' → logprob: -12.625067710876465
    5. '1' → logprob: -13.500067710876465
    6. '```' → logprob: -15.125067710876465
    7. '   ' → logprob: -15.250067710876465
    8. '=' → logprob: -15.500067710876465
    9. '(' → logprob: -15.687567710876465
    10. 'm' → logprob: -16.25006866455078

Token 554: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2131735384464264
    2. '           ' → logprob: -1.963173508644104
    3. '  
' → logprob: -4.2131733894348145
    4. '<|end|>' → logprob: -4.4631733894348145
    5. '            
' → logprob: -4.9631733894348145
    6. '    
' → logprob: -5.0881733894348145
    7. '<|end|>' → logprob: -5.3381733894348145
    8. ' 
' → logprob: -6.0881733894348145
    9. ' for' → logprob: -6.9631733894348145
    10. '        
' → logprob: -7.4631733894348145

Token 555: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04103202372789383
    2. ' for' → logprob: -4.291031837463379
    3. '       ' → logprob: -4.541031837463379
    4. '<|end|>' → logprob: -5.666031837463379
    5. '   ' → logprob: -6.166031837463379
    6. ' 
' → logprob: -6.291031837463379
    7. '            
' → logprob: -6.416031837463379
    8. '  
' → logprob: -6.541031837463379
    9. '    
' → logprob: -7.166031837463379
    10. '
' → logprob: -7.166031837463379

Token 556: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.413708359003067
    2. '           ' → logprob: -1.5387083292007446
    3. 'for' (adapté à ' for') → logprob: -2.163708448410034
    4. '       ' → logprob: -5.163708209991455
    5. '   ' → logprob: -6.413708209991455
    6. '	for' → logprob: -7.288708209991455
    7. '
' → logprob: -8.288708686828613
    8. '	       ' → logprob: -8.788708686828613
    9. '	   ' → logprob: -9.163708686828613
    10. ' 
' → logprob: -9.288708686828613

Token 557: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.03277957811951637
    2. '_,' → logprob: -4.032779693603516
    3. ' cw' → logprob: -4.657779693603516
    4. 'adj' → logprob: -5.657779693603516
    5. 'cost' → logprob: -6.782779693603516
    6. ' _,' → logprob: -9.532779693603516
    7. ' adj' → logprob: -9.782779693603516
    8. 'c' → logprob: -9.782779693603516
    9. '(_,' → logprob: -10.032779693603516
    10. '   ' → logprob: -10.157779693603516

Token 558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018659044057130814
    2. ',w' → logprob: -4.0186591148376465
    3. ',e' → logprob: -7.7686591148376465
    4. ' ,' → logprob: -10.643658638000488
    5. ',u' → logprob: -11.143658638000488
    6. ',x' → logprob: -11.893658638000488
    7. ',v' → logprob: -11.893658638000488
    8. ',num' → logprob: -12.018658638000488
    9. ',c' → logprob: -12.268658638000488
    10. 'w' → logprob: -12.643658638000488

Token 559: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.006852835416793823
    2. ' w' → logprob: -5.131852626800537
    3. 'ow' → logprob: -7.506852626800537
    4. 'orig' → logprob: -8.381853103637695
    5. ' ow' → logprob: -9.131853103637695
    6. ' orig' → logprob: -11.006853103637695
    7. '_w' → logprob: -11.631853103637695
    8. '_orig' → logprob: -12.381853103637695
    9. 'original' → logprob: -13.381853103637695
    10. 'wo' → logprob: -13.756853103637695

Token 560: '_orig' (ID: 96685)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3120038501219824e-05
    2. ' ,' → logprob: -10.500053405761719
    3. '           ' → logprob: -12.375053405761719
    4. 'in' → logprob: -12.375053405761719
    5. ',
' → logprob: -13.000053405761719
    6. ' in' → logprob: -13.000053405761719
    7. ',num' → logprob: -13.375053405761719
    8. ',in' → logprob: -13.375053405761719
    9. '               ' → logprob: -13.750053405761719
    10. ',count' → logprob: -13.875053405761719

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.747814349073451e-05
    2. ' ,' → logprob: -11.000017166137695
    3. 'comp' → logprob: -15.375017166137695
    4. ',
' → logprob: -15.375017166137695
    5. '_,' → logprob: -15.500017166137695
    6. '   ' → logprob: -17.000017166137695
    7. ',

' → logprob: -18.250017166137695
    8. ' ' → logprob: -18.625017166137695
    9. '```' → logprob: -18.750017166137695
    10. ',
' → logprob: -18.875017166137695

Token 562: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.0280383548888494e-06
    2. ' comp' → logprob: -14.000000953674316
    3. '	comp' → logprob: -16.375001907348633
    4. 'c' → logprob: -17.250001907348633
    5. '_comp' → logprob: -17.875001907348633
    6. 'compl' → logprob: -19.750001907348633
    7. 'cmp' → logprob: -19.750001907348633
    8. '(comp' → logprob: -20.625001907348633
    9. 'com' → logprob: -20.875001907348633
    10. '_,' → logprob: -21.500001907348633

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025324986781924963
    2. ',u' → logprob: -6.002532482147217
    3. ' ,' → logprob: -9.877532958984375
    4. 'u' → logprob: -12.877532958984375
    5. '_,' → logprob: -13.252532958984375
    6. ',x' → logprob: -14.002532958984375
    7. '   ' → logprob: -16.252532958984375
    8. '```' → logprob: -16.627532958984375
    9. '(u' → logprob: -17.002532958984375
    10. '`,' → logprob: -17.877532958984375

Token 564: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0001234428636962548
    2. ' u' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.250123977661133
    4. '	u' → logprob: -18.750123977661133
    5. ' ' → logprob: -19.125123977661133
    6. '  ' → logprob: -21.000123977661133
    7. '    ' → logprob: -21.875123977661133
    8. '_u' → logprob: -22.375123977661133
    9. ',u' → logprob: -22.375123977661133
    10. ',' → logprob: -22.500123977661133

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03808154910802841
    2. ',v' → logprob: -3.288081645965576
    3. ' ,' → logprob: -10.163081169128418
    4. ',u' → logprob: -14.038081169128418
    5. 'v' → logprob: -15.538081169128418
    6. '_,' → logprob: -15.663081169128418
    7. ',w' → logprob: -16.413082122802734
    8. ',
' → logprob: -16.413082122802734
    9. ',y' → logprob: -16.663082122802734
    10. '```' → logprob: -17.288082122802734

Token 566: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002036595979006961
    2. ' v' → logprob: -8.500204086303711
    3. ',v' → logprob: -16.62520408630371
    4. '
' → logprob: -17.37520408630371
    5. ' ' → logprob: -18.00020408630371
    6. '	v' → logprob: -18.12520408630371
    7. '   ' → logprob: -19.12520408630371
    8. '    ' → logprob: -19.50020408630371
    9. '```' → logprob: -19.87520408630371
    10. 'u' → logprob: -20.12520408630371

Token 567: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004650014918297529
    2. 'in' → logprob: -5.379650115966797
    3. '   ' → logprob: -11.129650115966797
    4. ',' → logprob: -12.129650115966797
    5. '	in' → logprob: -12.504650115966797
    6. ' ' → logprob: -13.504650115966797
    7. ':' → logprob: -14.379650115966797
    8. '       ' → logprob: -14.379650115966797
    9. ':
' → logprob: -14.379650115966797
    10. '    ' → logprob: -14.629650115966797

Token 568: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.005546312779188156
    2. ' adj' → logprob: -5.7555460929870605
    3. 'par' → logprob: -6.1305460929870605
    4. 'edges' → logprob: -9.255546569824219
    5. '(adj' → logprob: -10.005546569824219
    6. ' par' → logprob: -11.005546569824219
    7. '   ' → logprob: -11.380546569824219
    8. ' edges' → logprob: -12.755546569824219
    9. 'comp' → logprob: -12.755546569824219
    10. '(' → logprob: -13.130546569824219

Token 569: '_edges' (ID: 68870)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.0502899885177612
    2. '_edges' → logprob: -1.5502899885177612
    3. 'u' → logprob: -2.300290107727051
    4. 'odes' → logprob: -2.425290107727051
    5. ',u' → logprob: -2.675290107727051
    6. 'oints' → logprob: -3.425290107727051
    7. 'edges' → logprob: -3.675290107727051
    8. ',' → logprob: -3.925290107727051
    9. '   ' → logprob: -4.175290107727051
    10. '(u' → logprob: -4.175290107727051

Token 570: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7036179304122925
    2. ':
' → logprob: -0.7036179304122925
    3. ',' → logprob: -4.703618049621582
    4. '):
' → logprob: -7.328618049621582
    5. '           ' → logprob: -8.578618049621582
    6. '               ' → logprob: -8.828618049621582
    7. '=' → logprob: -9.453618049621582
    8. ' if' → logprob: -9.453618049621582
    9. ',
' → logprob: -10.078618049621582
    10. '       ' → logprob: -10.203618049621582

Token 571: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054108891636133194
    2. ' if' → logprob: -3.0541088581085205
    3. '       ' → logprob: -5.9291090965271
    4. 'if' → logprob: -7.1791090965271
    5. '           ' → logprob: -7.3041090965271
    6. '   ' → logprob: -8.304108619689941
    7. '                
' → logprob: -8.304108619689941
    8. '	           ' → logprob: -9.054108619689941
    9. '	       ' → logprob: -9.179108619689941
    10. ',' → logprob: -9.304108619689941

Token 572: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39815837144851685
    2. 'if' (adapté à ' if') → logprob: -1.148158311843872
    3. '               ' → logprob: -4.523158550262451
    4. '       ' → logprob: -9.023158073425293
    5. '                   ' → logprob: -9.148158073425293
    6. '           ' → logprob: -9.398158073425293
    7. '   ' → logprob: -10.023158073425293
    8. '	if' → logprob: -11.773158073425293
    9. '                ' → logprob: -13.523158073425293
    10. 'If' → logprob: -13.648158073425293

Token 573: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.20143379271030426
    2. 'union' → logprob: -1.701433777809143
    3. '               ' → logprob: -12.076434135437012
    4. '   ' → logprob: -12.201434135437012
    5. '                   ' → logprob: -12.576434135437012
    6. '	union' → logprob: -12.576434135437012
    7. '.union' → logprob: -14.201434135437012
    8. '_union' → logprob: -14.326434135437012
    9. ' ' → logprob: -14.701434135437012
    10. '                ' → logprob: -15.201434135437012

Token 574: '(par' (ID: 34455)
  Prédit: '(par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(par' → logprob: -2.093505099765025e-05
    2. '(paren' → logprob: -11.375020980834961
    3. '(' → logprob: -11.750020980834961
    4. ' (' → logprob: -13.875020980834961
    5. '(
' → logprob: -15.500020980834961
    6. 'par' → logprob: -16.12502098083496
    7. '(pa' → logprob: -16.37502098083496
    8. '(pr' → logprob: -17.00002098083496
    9. '	par' → logprob: -17.12502098083496
    10. '(pol' → logprob: -17.87502098083496

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002610974188428372
    2. '(rank' → logprob: -8.375261306762695
    3. ' ,' → logprob: -11.125261306762695
    4. ',r' → logprob: -11.625261306762695
    5. 'rank' → logprob: -12.500261306762695
    6. ',
' → logprob: -12.875261306762695
    7. ' rank' → logprob: -15.625261306762695
    8. '
' → logprob: -16.000261306762695
    9. ',(' → logprob: -16.375261306762695
    10. '

' → logprob: -16.375261306762695

Token 576: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.038043100386857986
    2. ' rank' → logprob: -3.2880430221557617
    3. '(rank' → logprob: -13.288043022155762
    4. '   ' → logprob: -20.038043975830078
    5. '.rank' → logprob: -20.163043975830078
    6. '
' → logprob: -20.538043975830078
    7. ' ' → logprob: -21.038043975830078
    8. 'range' → logprob: -21.663043975830078
    9. '_rank' → logprob: -21.663043975830078
    10. '  ' → logprob: -22.413043975830078

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02089744806289673
    2. ',u' → logprob: -3.895897388458252
    3. ' ,' → logprob: -8.89589786529541
    4. '(u' → logprob: -9.39589786529541
    5. ',x' → logprob: -9.77089786529541
    6. 'u' → logprob: -10.64589786529541
    7. ',c' → logprob: -10.89589786529541
    8. ',
' → logprob: -11.64589786529541
    9. '(par' → logprob: -11.89589786529541
    10. ',n' → logprob: -12.27089786529541

Token 578: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002805940806865692
    2. ' u' → logprob: -5.877805709838867
    3. '   ' → logprob: -15.002805709838867
    4. ')' → logprob: -15.252805709838867
    5. '	u' → logprob: -15.377805709838867
    6. '(u' → logprob: -16.627805709838867
    7. ' ' → logprob: -16.627805709838867
    8. '[u' → logprob: -17.127805709838867
    9. 'x' → logprob: -17.752805709838867
    10. ',' → logprob: -18.252805709838867

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008323782822117209
    2. ',v' → logprob: -7.375832557678223
    3. ',u' → logprob: -8.750832557678223
    4. ' ,' → logprob: -10.000832557678223
    5. ',x' → logprob: -14.000832557678223
    6. '               ' → logprob: -14.750832557678223
    7. ',
' → logprob: -15.625832557678223
    8. ',w' → logprob: -16.125831604003906
    9. ',y' → logprob: -16.250831604003906
    10. ',user' → logprob: -16.250831604003906

Token 580: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000553151941858232
    2. ' v' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.250553131103516
    4. '	v' → logprob: -17.000553131103516
    5. ' ' → logprob: -17.625553131103516
    6. '
' → logprob: -17.875553131103516
    7. '    ' → logprob: -18.875553131103516
    8. '           ' → logprob: -19.000553131103516
    9. '
' → logprob: -19.125553131103516
    10. '               ' → logprob: -19.125553131103516

Token 581: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47413206100463867
    2. '):' → logprob: -0.9741320610046387
    3. '):
' → logprob: -10.599132537841797
    4. ')' → logprob: -10.849132537841797
    5. '):

' → logprob: -12.099132537841797
    6. '               ' → logprob: -13.099132537841797
    7. '                   ' → logprob: -14.099132537841797
    8. ')==' → logprob: -14.724132537841797
    9. ''):
' → logprob: -14.849132537841797
    10. ' ):' → logprob: -15.099132537841797

Token 582: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005796770565211773
    2. '               ' → logprob: -5.380796909332275
    3. '
' → logprob: -8.130796432495117
    4. '           ' → logprob: -8.505796432495117
    5. '                       ' → logprob: -8.505796432495117
    6. '       ' → logprob: -8.755796432495117
    7. '   ' → logprob: -9.505796432495117
    8. '                    
' → logprob: -9.880796432495117
    9. '                ' → logprob: -10.130796432495117
    10. '                  ' → logprob: -10.255796432495117

Token 583: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.6679967641830444
    2. '                   ' → logprob: -1.5429967641830444
    3. ' num' → logprob: -1.7929967641830444
    4. '               ' → logprob: -3.292996883392334
    5. ' total' → logprob: -3.292996883392334
    6. 'total' → logprob: -3.917996883392334
    7. ' if' → logprob: -4.792996883392334
    8. 'if' → logprob: -6.167996883392334
    9. '                       ' → logprob: -6.292996883392334
    10. '   ' → logprob: -8.167996406555176

Token 584: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0486474335193634
    2. ' +=' → logprob: -3.048647403717041
    3. '   ' → logprob: -10.2986478805542
    4. '=' → logprob: -11.6736478805542
    5. '           ' → logprob: -12.0486478805542
    6. ']+=' → logprob: -12.1736478805542
    7. '+' → logprob: -13.0486478805542
    8. '       ' → logprob: -13.1736478805542
    9. '```' → logprob: -13.9236478805542
    10. '               ' → logprob: -14.5486478805542

Token 585: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.750009536743164
    4. 'w' → logprob: -18.625009536743164
    5. '```' → logprob: -19.250009536743164
    6. '
' → logprob: -19.625009536743164
    7. ' ' → logprob: -21.250009536743164
    8. ' w' → logprob: -21.875009536743164
    9. '<|end|>' → logprob: -22.375009536743164
    10. '  ' → logprob: -22.625009536743164

Token 586: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. 'w' → logprob: -16.75
    4. '   ' → logprob: -19.0
    5. '```' → logprob: -19.125
    6. '
' → logprob: -19.25
    7. '+' → logprob: -21.4375
    8. '۱' → logprob: -21.625
    9. '0' → logprob: -22.0625
    10. 'cw' → logprob: -22.125

Token 587: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009647835046052933
    2. '
' → logprob: -4.884647846221924
    3. '               ' → logprob: -6.759647846221924
    4. '           ' → logprob: -8.384647369384766
    5. '<|end|>' → logprob: -8.759647369384766
    6. '```' → logprob: -8.884647369384766
    7. '       ' → logprob: -9.009647369384766
    8. '                    
' → logprob: -9.509647369384766
    9. ',' → logprob: -9.884647369384766
    10. '  
' → logprob: -10.759647369384766

Token 588: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009673569351434708
    2. '```' → logprob: -5.759673595428467
    3. '               ' → logprob: -6.009673595428467
    4. '
' → logprob: -6.384673595428467
    5. '<|end|>' → logprob: -7.134673595428467
    6. '           ' → logprob: -7.384673595428467
    7. '       ' → logprob: -7.634673595428467
    8. '                    
' → logprob: -9.634673118591309
    9. '                       ' → logprob: -9.759673118591309
    10. '``' → logprob: -9.759673118591309

Token 589: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.12469110637903214
    2. 'if' → logprob: -2.3746910095214844
    3. '                   ' → logprob: -3.7496910095214844
    4. ' total' → logprob: -7.749691009521484
    5. ' if' → logprob: -8.874691009521484
    6. '               ' → logprob: -10.249691009521484
    7. '                       ' → logprob: -10.499691009521484
    8. '           ' → logprob: -11.124691009521484
    9. '
' → logprob: -11.874691009521484
    10. '   ' → logprob: -13.124691009521484

Token 590: '_orig' (ID: 96685)
  Prédit: '_orig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orig' → logprob: -5.455048449221067e-05
    2. '+=' → logprob: -10.125054359436035
    3. 'orig' → logprob: -11.750054359436035
    4. ' +=' → logprob: -13.125054359436035
    5. '_original' → logprob: -13.125054359436035
    6. '\' → logprob: -14.125054359436035
    7. '```' → logprob: -14.250054359436035
    8. '+' → logprob: -15.500054359436035
    9. '=' → logprob: -15.750054359436035
    10. '_ori' → logprob: -16.00005531311035

Token 591: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.474100261926651
    2. ' +=' → logprob: -0.9741002321243286
    3. '+' → logprob: -11.224100112915039
    4. '=' → logprob: -12.224100112915039
    5. ']+=' → logprob: -12.474100112915039
    6. '```' → logprob: -14.599100112915039
    7. ' +' → logprob: -15.599100112915039
    8. '   ' → logprob: -15.974100112915039
    9. ' =' → logprob: -15.974100112915039
    10. '+=(' → logprob: -16.22410011291504

Token 592: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005233882926404476
    2. ' w' → logprob: -5.2552337646484375
    3. '	w' → logprob: -17.255233764648438
    4. '_w' → logprob: -18.380233764648438
    5. '(w' → logprob: -19.005233764648438
    6. ' ' → logprob: -19.130233764648438
    7. '+w' → logprob: -19.630233764648438
    8. '
' → logprob: -19.755233764648438
    9. ' ' → logprob: -19.880233764648438
    10. '   ' → logprob: -20.005233764648438

Token 593: '_orig' (ID: 96685)
  Prédit: '_orig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orig' → logprob: -0.004806041717529297
    2. '_' → logprob: -5.629806041717529
    3. ' _' → logprob: -7.004806041717529
    4. 'orig' → logprob: -8.879806518554688
    5. '_ori' → logprob: -10.379806518554688
    6. '_original' → logprob: -10.754806518554688
    7. '(orig' → logprob: -10.754806518554688
    8. ' if' → logprob: -11.129806518554688
    9. ' orig' → logprob: -11.629806518554688
    10. ' +' → logprob: -12.254806518554688

Token 594: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005262265913188457
    2. '           ' → logprob: -8.000526428222656
    3. '               ' → logprob: -8.750526428222656
    4. '   ' → logprob: -11.625526428222656
    5. '       ' → logprob: -11.625526428222656
    6. '
' → logprob: -12.125526428222656
    7. '                  ' → logprob: -13.375526428222656
    8. '<|end|>' → logprob: -13.625526428222656
    9. '                    
' → logprob: -14.250526428222656
    10. '		           ' → logprob: -14.250526428222656

Token 595: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016382889589294791
    2. '           ' → logprob: -7.501638412475586
    3. '```' → logprob: -7.626638412475586
    4. '               ' → logprob: -8.376638412475586
    5. ' if' → logprob: -9.251638412475586
    6. '   ' → logprob: -9.251638412475586
    7. 'if' → logprob: -10.001638412475586
    8. '       ' → logprob: -10.501638412475586
    9. '
' → logprob: -10.626638412475586
    10. '     ' → logprob: -11.126638412475586

Token 596: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2791299521923065
    2. 'if' (adapté à ' if') → logprob: -1.654129981994629
    3. '                   ' → logprob: -3.279129981994629
    4. 'count' → logprob: -4.904129981994629
    5. ' count' → logprob: -5.279129981994629
    6. '
' → logprob: -7.279129981994629
    7. '```' → logprob: -7.529129981994629
    8. ' ' → logprob: -8.779129981994629
    9. '                    
' → logprob: -8.904129981994629
    10. '               ' → logprob: -9.029129981994629

Token 597: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.03804171830415726
    2. ' comp' → logprob: -3.288041830062866
    3. '(comp' → logprob: -15.663042068481445
    4. '	comp' → logprob: -15.913042068481445
    5. '   ' → logprob: -19.163042068481445
    6. ' ' → logprob: -20.038042068481445
    7. '.comp' → logprob: -20.038042068481445
    8. '_comp' → logprob: -21.038042068481445
    9. 'Comp' → logprob: -21.038042068481445
    10. 'com' → logprob: -21.788042068481445

Token 598: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1269395500421524
    2. ' ==' → logprob: -2.126939535140991
    3. '0' → logprob: -12.00193977355957
    4. '==
' → logprob: -12.75193977355957
    5. '=' → logprob: -14.25193977355957
    6. ']==' → logprob: -14.50193977355957
    7. '[' → logprob: -14.50193977355957
    8. ')==' → logprob: -15.00193977355957
    9. ' ' → logprob: -15.12693977355957
    10. '===' → logprob: -16.62693977355957

Token 599: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. '
' → logprob: -19.87670135498047
    4. '1' → logprob: -20.12670135498047
    5. '   ' → logprob: -20.12670135498047
    6. '```' → logprob: -20.87670135498047
    7. '۰' → logprob: -21.37670135498047
    8. '=' → logprob: -21.50170135498047
    9. '  ' → logprob: -21.50170135498047
    10. ' ' → logprob: -22.12670135498047

Token 600: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -19.187501907348633
    4. '   ' → logprob: -19.312501907348633
    5. '1' → logprob: -19.875001907348633
    6. '00' → logprob: -20.250001907348633
    7. '```' → logprob: -20.437501907348633
    8. '
' → logprob: -20.500001907348633
    9. '000' → logprob: -20.687501907348633
    10. '  ' → logprob: -21.062501907348633

Token 601: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21391744911670685
    2. ':' → logprob: -1.7139174938201904
    3. '                       ' → logprob: -4.588917255401611
    4. '                   ' → logprob: -6.213917255401611
    5. '               ' → logprob: -9.08891773223877
    6. '):
' → logprob: -9.96391773223877
    7. '           ' → logprob: -11.08891773223877
    8. '                           ' → logprob: -11.21391773223877
    9. ' :
' → logprob: -11.46391773223877
    10. '                        
' → logprob: -11.58891773223877

Token 602: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00010282796574756503
    2. '                   ' → logprob: -9.500102996826172
    3. 'count' → logprob: -11.500102996826172
    4. ' count' → logprob: -11.750102996826172
    5. '               ' → logprob: -13.250102996826172
    6. '                           ' → logprob: -13.500102996826172
    7. '                      ' → logprob: -13.750102996826172
    8. '                        
' → logprob: -13.750102996826172
    9. '       ' → logprob: -13.875102996826172
    10. '           ' → logprob: -14.500102996826172

Token 603: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.20176677405834198
    2. ' count' → logprob: -1.7017667293548584
    3. '                       ' → logprob: -8.451766967773438
    4. '                   ' → logprob: -9.076766967773438
    5. ' ' → logprob: -11.951766967773438
    6. '                           ' → logprob: -12.076766967773438
    7. '   ' → logprob: -12.701766967773438
    8. '
' → logprob: -12.826766967773438
    9. '               ' → logprob: -13.076766967773438
    10. '                               ' → logprob: -13.451766967773438

Token 604: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -16.875
    3. ' A' → logprob: -16.875
    4. '=' → logprob: -18.0
    5. '+=' → logprob: -18.375
    6. ' +=' → logprob: -19.25
    7. '```' → logprob: -19.5
    8. '[' → logprob: -20.25
    9. '=A' → logprob: -20.375
    10. '_A' → logprob: -20.375

Token 605: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038047801703214645
    2. ' +=' → logprob: -3.2880477905273438
    3. ']+=' → logprob: -12.288047790527344
    4. '+' → logprob: -14.038047790527344
    5. '=' → logprob: -14.163047790527344
    6. '```' → logprob: -15.538047790527344
    7. '           ' → logprob: -18.163047790527344
    8. '+="' → logprob: -18.538047790527344
    9. '                       ' → logprob: -18.663047790527344
    10. '                           ' → logprob: -18.663047790527344

Token 606: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -20.5
    4. '```' → logprob: -21.125
    5. '
' → logprob: -22.375
    6. '           ' → logprob: -22.5
    7. '<|end|>' → logprob: -23.5
    8. '۱' → logprob: -23.75
    9. '+' → logprob: -23.875
    10. '１' → logprob: -24.125

Token 607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -20.375
    4. '   ' → logprob: -21.625
    5. '
' → logprob: -22.625
    6. '۱' → logprob: -23.375
    7. '１' → logprob: -23.75
    8. '<|end|>' → logprob: -24.1875
    9. '१' → logprob: -24.625
    10. '`' → logprob: -24.75

Token 608: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3518108129501343
    2. '           ' → logprob: -1.9768108129501343
    3. '                   ' → logprob: -2.851810932159424
    4. '               ' → logprob: -2.976810932159424
    5. '<|end|>' → logprob: -3.101810932159424
    6. '<|end|>' → logprob: -6.476810932159424
    7. ',' → logprob: -6.976810932159424
    8. '  
' → logprob: -7.851810932159424
    9. ',
' → logprob: -8.476810455322266
    10. '       ' → logprob: -8.476810455322266

Token 609: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4536258280277252
    2. '               ' → logprob: -1.3286257982254028
    3. '           ' → logprob: -2.9536259174346924
    4. '
' → logprob: -3.2036259174346924
    5. '```' → logprob: -5.578625679016113
    6. '<|end|>' → logprob: -6.578625679016113
    7. '       ' → logprob: -7.078625679016113
    8. ',' → logprob: -8.453625679016113
    9. '   ' → logprob: -8.453625679016113
    10. '                       ' → logprob: -8.828625679016113

Token 610: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2862078547477722
    2. '               ' → logprob: -1.536207914352417
    3. '           ' → logprob: -3.411207914352417
    4. 'if' (adapté à ' if') → logprob: -8.286208152770996
    5. '       ' → logprob: -8.661208152770996
    6. '   ' → logprob: -9.036208152770996
    7. ' if' → logprob: -9.411208152770996
    8. '
' → logprob: -10.036208152770996
    9. '                       ' → logprob: -11.411208152770996
    10. '```' → logprob: -12.411208152770996

Token 611: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.0040785204619169235
    2. 'num' → logprob: -5.504078388214111
    3. '	num' → logprob: -17.129077911376953
    4. '(num' → logprob: -17.504077911376953
    5. ' ' → logprob: -18.379077911376953
    6. '   ' → logprob: -18.629077911376953
    7. '$num' → logprob: -20.254077911376953
    8. '                   ' → logprob: -20.504077911376953
    9. '<num' → logprob: -20.629077911376953
    10. '[num' → logprob: -20.754077911376953

Token 612: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25193724036216736
    2. '==' → logprob: -1.5019372701644897
    3. '=' → logprob: -12.626936912536621
    4. '==
' → logprob: -13.751936912536621
    5. ')==' → logprob: -13.876936912536621
    6. ']==' → logprob: -14.501936912536621
    7. ' ==
' → logprob: -14.501936912536621
    8. '===' → logprob: -14.626936912536621
    9. ' ' → logprob: -15.126936912536621
    10. '==(' → logprob: -15.251936912536621

Token 613: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.7120533811976202e-05
    2. ' n' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.000017166137695
    4. '	n' → logprob: -18.000017166137695
    5. '
' → logprob: -18.500017166137695
    6. '(n' → logprob: -19.875017166137695
    7. '       ' → logprob: -20.625017166137695
    8. '[n' → logprob: -21.375017166137695
    9. '_n' → logprob: -21.875017166137695
    10. ' ' → logprob: -22.125017166137695

Token 614: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031860284507274628
    2. ' -' → logprob: -5.753186225891113
    3. '   ' → logprob: -12.003186225891113
    4. '```' → logprob: -14.378186225891113
    5. '<|end|>' → logprob: -15.128186225891113
    6. ' ' → logprob: -15.253186225891113
    7. '-
' → logprob: -15.253186225891113
    8. '       ' → logprob: -15.378186225891113
    9. '           ' → logprob: -16.128185272216797
    10. '<|end|>' → logprob: -16.378185272216797

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '
' → logprob: -18.875001907348633
    6. '<|end|>' → logprob: -19.375001907348633
    7. '۱' → logprob: -20.125001907348633
    8. '１' → logprob: -20.562501907348633
    9. '১' → logprob: -20.812501907348633
    10. ' ' → logprob: -20.875001907348633

Token 616: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7325185537338257
    2. ':
' → logprob: -0.8575185537338257
    3. '                       ' → logprob: -2.3575186729431152
    4. '                   ' → logprob: -7.982518672943115
    5. '               ' → logprob: -10.482518196105957
    6. ':
' → logprob: -10.857518196105957
    7. '           ' → logprob: -11.357518196105957
    8. '                           ' → logprob: -11.857518196105957
    9. ',' → logprob: -12.232518196105957
    10. '       ' → logprob: -12.482518196105957

Token 617: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0004928641719743609
    2. '                   ' → logprob: -8.500493049621582
    3. '               ' → logprob: -9.500493049621582
    4. '
' → logprob: -9.750493049621582
    5. '           ' → logprob: -10.000493049621582
    6. 'break' → logprob: -10.000493049621582
    7. ' break' → logprob: -10.375493049621582
    8. '                           ' → logprob: -10.750493049621582
    9. '                        
' → logprob: -12.500493049621582
    10. '       ' → logprob: -13.250493049621582

Token 618: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5317056775093079
    2. 'break' (adapté à ' break') → logprob: -1.031705617904663
    3. '                       ' → logprob: -3.031705617904663
    4. '               ' → logprob: -5.281705856323242
    5. '                   ' → logprob: -6.656705856323242
    6. 'return' → logprob: -7.281705856323242
    7. ' return' → logprob: -8.031705856323242
    8. '           ' → logprob: -8.781705856323242
    9. '	break' → logprob: -9.406705856323242
    10. '                           ' → logprob: -9.531705856323242

Token 619: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6941016316413879
    2. '           ' → logprob: -0.6941016316413879
    3. '<|end|>' → logprob: -7.444101810455322
    4. ' return' → logprob: -9.069101333618164
    5. 'return' → logprob: -9.569101333618164
    6. '  
' → logprob: -10.569101333618164
    7. '            
' → logprob: -10.819101333618164
    8. '		' → logprob: -11.069101333618164
    9. '```' → logprob: -11.069101333618164
    10. '<|end|>' → logprob: -11.069101333618164

Token 620: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023539531975984573
    2. '
' → logprob: -3.8985395431518555
    3. '       ' → logprob: -6.0235395431518555
    4. '<|end|>' → logprob: -8.273539543151855
    5. '```' → logprob: -9.148539543151855
    6. '        
' → logprob: -10.023539543151855
    7. '            
' → logprob: -10.523539543151855
    8. 'return' → logprob: -10.523539543151855
    9. ' return' → logprob: -10.773539543151855
    10. '    
' → logprob: -10.773539543151855

Token 621: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12503327429294586
    2. ' return' → logprob: -2.875033378601074
    3. '       ' → logprob: -3.125033378601074
    4. 'return' → logprob: -4.125033378601074
    5. '   ' → logprob: -7.000033378601074
    6. '
' → logprob: -10.000033378601074
    7. ' ' → logprob: -10.750033378601074
    8. '               ' → logprob: -11.750033378601074
    9. '         ' → logprob: -12.125033378601074
    10. '```' → logprob: -12.625033378601074

Token 622: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6958547830581665
    2. 'count' → logprob: -0.6958547830581665
    3. ' num' → logprob: -6.320854663848877
    4. ' count' → logprob: -7.070854663848877
    5. '(num' → logprob: -11.320855140686035
    6. '(count' → logprob: -11.320855140686035
    7. ' ' → logprob: -12.070855140686035
    8. '   ' → logprob: -12.320855140686035
    9. 'total' → logprob: -12.445855140686035
    10. 'par' → logprob: -13.070855140686035

Token 623: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.050502240657806396
    2. ' ==' → logprob: -3.800502300262451
    3. '!=' → logprob: -4.050502300262451
    4. '<' → logprob: -5.175502300262451
    5. '<n' → logprob: -6.300502300262451
    6. ' !=' → logprob: -6.550502300262451
    7. '=' → logprob: -8.300501823425293
    8. '<num' → logprob: -9.300501823425293
    9. ' <' → logprob: -9.550501823425293
    10. '<int' → logprob: -10.175501823425293

Token 624: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931476593017578
    2. ' n' → logprob: -0.6931476593017578
    3. '   ' → logprob: -15.068147659301758
    4. '(n' → logprob: -16.068147659301758
    5. '	n' → logprob: -17.318147659301758
    6. ' ' → logprob: -17.318147659301758
    7. '       ' → logprob: -18.068147659301758
    8. ')n' → logprob: -18.068147659301758
    9. '           ' → logprob: -18.318147659301758
    10. '=n' → logprob: -18.943147659301758

Token 625: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014964858070015907
    2. ':
' → logprob: -4.889965057373047
    3. ' -' → logprob: -5.389965057373047
    4. ':' → logprob: -6.264965057373047
    5. '           ' → logprob: -7.264965057373047
    6. '               ' → logprob: -9.514965057373047
    7. '       ' → logprob: -10.139965057373047
    8. '   ' → logprob: -11.139965057373047
    9. '-
' → logprob: -11.514965057373047
    10. ':return' → logprob: -11.764965057373047

Token 626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -15.125005722045898
    4. '   ' → logprob: -15.750005722045898
    5. '<|end|>' → logprob: -16.5000057220459
    6. '
' → logprob: -18.1250057220459
    7. '-' → logprob: -18.2500057220459
    8. '<|end|>' → logprob: -18.3750057220459
    9. '...' → logprob: -18.8750057220459
    10. '**' → logprob: -19.3750057220459

Token 627: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43298694491386414
    2. ':' → logprob: -1.0579869747161865
    3. '           ' → logprob: -6.182986736297607
    4. ':return' → logprob: -6.182986736297607
    5. ' or' → logprob: -10.182987213134766
    6. '       ' → logprob: -10.182987213134766
    7. ':
' → logprob: -10.932987213134766
    8. '               ' → logprob: -11.432987213134766
    9. '   ' → logprob: -11.432987213134766
    10. ',' → logprob: -11.932987213134766

Token 628: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3961958885192871
    2. ' return' → logprob: -1.646195888519287
    3. '           ' → logprob: -2.146195888519287
    4. 'return' → logprob: -4.646195888519287
    5. '       ' → logprob: -5.021195888519287
    6. '
' → logprob: -7.146195888519287
    7. ',' → logprob: -9.271196365356445
    8. '   ' → logprob: -9.396196365356445
    9. ':return' → logprob: -10.271196365356445
    10. '            
' → logprob: -10.396196365356445

Token 629: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5859811305999756
    2. ' return' → logprob: -0.8359811305999756
    3. '               ' → logprob: -4.960981369018555
    4. '           ' → logprob: -5.835981369018555
    5. '   ' → logprob: -10.460981369018555
    6. '       ' → logprob: -11.085981369018555
    7. '{return' → logprob: -11.585981369018555
    8. ':return' → logprob: -12.585981369018555
    9. ' ' → logprob: -12.960981369018555
    10. '	return' → logprob: -13.335981369018555

Token 630: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.09912669658660889
    2. 'float' → logprob: -2.8491268157958984
    3. 'False' → logprob: -3.3491268157958984
    4. ' None' → logprob: -6.724126815795898
    5. '-' → logprob: -9.224126815795898
    6. ' float' → logprob: -10.724126815795898
    7. '   ' → logprob: -11.349126815795898
    8. '           ' → logprob: -11.724126815795898
    9. ' False' → logprob: -12.224126815795898
    10. '(None' → logprob: -12.599126815795898

Token 631: ',None' (ID: 186897)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1506211757659912
    2. ',' → logprob: -2.400621175765991
    3. '<|end|>' → logprob: -4.52562141418457
    4. ',
' → logprob: -4.90062141418457
    5. '            
' → logprob: -5.02562141418457
    6. '       ' → logprob: -5.15062141418457
    7. '
' → logprob: -5.27562141418457
    8. '        
' → logprob: -5.52562141418457
    9. ' None' → logprob: -6.15062141418457
    10. '    
' → logprob: -6.40062141418457

Token 632: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7510783672332764
    2. '           ' → logprob: -0.8760783672332764
    3. ',
' → logprob: -2.6260783672332764
    4. '
' → logprob: -3.5010783672332764
    5. '            
' → logprob: -5.5010786056518555
    6. '       ' → logprob: -6.8760786056518555
    7. '    
' → logprob: -6.8760786056518555
    8. '        
' → logprob: -7.0010786056518555
    9. ' ,' → logprob: -7.5010786056518555
    10. '  
' → logprob: -7.8760786056518555

Token 633: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0420451164245605
    2. '           ' → logprob: -1.2920451164245605
    3. ',' → logprob: -2.1670451164245605
    4. ',
' → logprob: -2.9170451164245605
    5. '        
' → logprob: -2.9170451164245605
    6. '       ' → logprob: -3.1670451164245605
    7. '<|end|>' → logprob: -3.2920451164245605
    8. '            
' → logprob: -3.6670451164245605
    9. '    
' → logprob: -4.1670451164245605
    10. '  
' → logprob: -4.5420451164245605

Token 634: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33215904235839844
    2. ' return' → logprob: -2.0821590423583984
    3. '       ' → logprob: -2.2071590423583984
    4. 'return' (adapté à ' return') → logprob: -3.0821590423583984
    5. '   ' → logprob: -6.457159042358398
    6. ',' → logprob: -8.082159042358398
    7. ' ' → logprob: -9.957159042358398
    8. '
' → logprob: -10.082159042358398
    9. '<|end|>' → logprob: -10.207159042358398
    10. '	return' → logprob: -10.957159042358398

Token 635: ' count' (ID: 3605)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.06359740346670151
    2. 'count' → logprob: -2.8135974407196045
    3. ' total' → logprob: -6.813597202301025
    4. '(total' → logprob: -7.813597202301025
    5. '(count' → logprob: -9.313597679138184
    6. ' count' → logprob: -10.438597679138184
    7. '   ' → logprob: -12.688597679138184
    8. 'tot' → logprob: -14.438597679138184
    9. ' (' → logprob: -14.438597679138184
    10. ' ' → logprob: -15.188597679138184

Token 636: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1875571544806007e-05
    2. 'count' → logprob: -11.375011444091797
    3. ' A' → logprob: -15.625011444091797
    4. ',' → logprob: -16.625011444091797
    5. 'a' → logprob: -16.750011444091797
    6. 's' → logprob: -16.750011444091797
    7. '```' → logprob: -17.250011444091797
    8. '(count' → logprob: -18.250011444091797
    9. ' count' → logprob: -18.625011444091797
    10. '`' → logprob: -18.625011444091797

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07891832292079926
    2. ',total' → logprob: -2.578918218612671
    3. ' ,' → logprob: -10.57891845703125
    4. 'total' → logprob: -13.07891845703125
    5. ',target' → logprob: -15.07891845703125
    6. ',t' → logprob: -15.20391845703125
    7. ',
' → logprob: -15.57891845703125
    8. ',n' → logprob: -17.45391845703125
    9. ' total' → logprob: -17.45391845703125
    10. ',b' → logprob: -17.70391845703125

Token 638: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -2.7610454708337784e-05
    2. ' total' → logprob: -10.500027656555176
    3. '   ' → logprob: -21.75002670288086
    4. '(total' → logprob: -21.75002670288086
    5. '	total' → logprob: -22.75002670288086
    6. 'tot' → logprob: -23.00002670288086
    7. '           ' → logprob: -23.12502670288086
    8. 'Total' → logprob: -23.87502670288086
    9. '$total' → logprob: -24.00002670288086
    10. ' ' → logprob: -24.12502670288086

Token 639: '_orig' (ID: 96685)
  Prédit: '_orig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orig' → logprob: -2.3795937522663735e-05
    2. 'orig' → logprob: -11.25002384185791
    3. '_original' → logprob: -12.37502384185791
    4. '_origin' → logprob: -13.00002384185791
    5. 'Orig' → logprob: -13.37502384185791
    6. '_ori' → logprob: -14.12502384185791
    7. '_ans' → logprob: -14.62502384185791
    8. '_org' → logprob: -15.25002384185791
    9. '<|end|>' → logprob: -15.25002384185791
    10. '(orig' → logprob: -15.87502384185791

Token 640: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6858334541320801
    2. '        
' → logprob: -1.43583345413208
    3. '
' → logprob: -1.56083345413208
    4. '<|end|>' → logprob: -3.06083345413208
    5. '    
' → logprob: -7.93583345413208
    6. '<|end|>' → logprob: -8.060832977294922
    7. '  
' → logprob: -8.435832977294922
    8. 'while' → logprob: -8.560832977294922
    9. ',' → logprob: -9.560832977294922
    10. '```' → logprob: -9.810832977294922

Token 641: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9449005722999573
    2. '       ' → logprob: -0.9449005722999573
    3. '  
' → logprob: -2.3199005126953125
    4. '        
' → logprob: -3.1949005126953125
    5. '<|end|>' → logprob: -3.4449005126953125
    6. '   ' → logprob: -3.9449005126953125
    7. '    
' → logprob: -4.0699005126953125
    8. ' 
' → logprob: -5.1949005126953125
    9. ' while' → logprob: -5.8199005126953125
    10. 'while' → logprob: -6.4449005126953125

Token 642: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08120084553956985
    2. 'while' → logprob: -2.5812008380889893
    3. ' for' → logprob: -6.331201076507568
    4. '       ' → logprob: -8.58120059967041
    5. ' while' → logprob: -8.83120059967041
    6. '   ' → logprob: -9.33120059967041
    7. '        
' → logprob: -9.70620059967041
    8. '
' → logprob: -11.08120059967041
    9. '    
' → logprob: -11.33120059967041
    10. 'l' → logprob: -12.45620059967041

Token 643: ' binary' (ID: 15600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5772790908813477
    2. 'while' → logprob: -0.8272790908813477
    3. 'low' → logprob: -7.077279090881348
    4. ' for' → logprob: -8.702279090881348
    5. ' while' → logprob: -8.827279090881348
    6. 'l' → logprob: -9.577279090881348
    7. '       ' → logprob: -9.827279090881348
    8. 'lo' → logprob: -11.077279090881348
    9. 'left' → logprob: -11.702279090881348
    10. '   ' → logprob: -11.702279090881348

Token 644: ' search' (ID: 3684)
  Prédit: '_search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.5465590953826904
    2. 'search' → logprob: -1.0465590953826904
    3. ' search' → logprob: -2.6715590953826904
    4. '       ' → logprob: -7.7965593338012695
    5. '   ' → logprob: -9.54655933380127
    6. '    ' → logprob: -9.67155933380127
    7. '_' → logprob: -9.67155933380127
    8. ' _' → logprob: -9.79655933380127
    9. ' =' → logprob: -10.29655933380127
    10. ')' → logprob: -11.04655933380127

Token 645: ' to' (ID: 316)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.649206817150116
    2. ' for' → logprob: -2.0242068767547607
    3. 'while' → logprob: -2.1492068767547607
    4. ' 
' → logprob: -2.3992068767547607
    5. '
' → logprob: -2.6492068767547607
    6. '       ' → logprob: -4.149206638336182
    7. '  
' → logprob: -4.399206638336182
    8. 'for' → logprob: -4.399206638336182
    9. ':
' → logprob: -5.149206638336182
    10. '   ' → logprob: -5.274206638336182

Token 646: ' find' (ID: 1646)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16435326635837555
    2. ' while' → logprob: -2.789353370666504
    3. 'find' → logprob: -3.039353370666504
    4. ' find' → logprob: -3.289353370666504
    5. '       ' → logprob: -6.039353370666504
    6. 'for' → logprob: -7.164353370666504
    7. 'continue' → logprob: -8.289353370666504
    8. ' ' → logprob: -8.664353370666504
    9. '#' → logprob: -8.914353370666504
    10. 'binary' → logprob: -9.164353370666504

Token 647: ' if' (ID: 538)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2817421555519104
    2. 'while' → logprob: -2.1567420959472656
    3. ' left' → logprob: -2.5317420959472656
    4. ' while' → logprob: -4.531742095947266
    5. 'mid' → logprob: -4.531742095947266
    6. 'right' → logprob: -4.531742095947266
    7. 'x' → logprob: -5.531742095947266
    8. '       ' → logprob: -5.531742095947266
    9. 'for' → logprob: -6.406742095947266
    10. ' right' → logprob: -6.531742095947266

Token 648: ' there's' (ID: 15333)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.5117930173873901
    2. 'left' → logprob: -1.5117930173873901
    3. 'ans' → logprob: -1.6367930173873901
    4. 'count' → logprob: -1.7617930173873901
    5. ' ans' → logprob: -3.2617931365966797
    6. ' mst' → logprob: -3.2617931365966797
    7. ' count' → logprob: -3.5117931365966797
    8. 'mst' → logprob: -4.38679313659668
    9. '
' → logprob: -4.88679313659668
    10. 'k' → logprob: -4.88679313659668

Token 649: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.427207887172699
    2. 'a' → logprob: -1.3022079467773438
    3. 'count' → logprob: -3.4272079467773438
    4. ' count' → logprob: -3.8022079467773438
    5. 'ans' → logprob: -5.802207946777344
    6. ' an' → logprob: -5.927207946777344
    7. ' ' → logprob: -6.302207946777344
    8. ' any' → logprob: -6.302207946777344
    9. '(count' → logprob: -6.427207946777344
    10. ' (' → logprob: -6.552207946777344

Token 650: ' MST' (ID: 123058)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0573582649230957
    2. ' x' → logprob: -1.1823582649230957
    3. ' value' → logprob: -2.3073582649230957
    4. 'k' → logprob: -2.4323582649230957
    5. ' k' → logprob: -3.1823582649230957
    6. ' solution' → logprob: -3.5573582649230957
    7. 'value' → logprob: -4.182358264923096
    8. ' MST' → logprob: -4.557358264923096
    9. 'solution' → logprob: -4.932358264923096
    10. '   ' → logprob: -5.057358264923096

Token 651: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.26785871386528015
    2. 'with' → logprob: -1.8928587436676025
    3. ' that' → logprob: -2.8928587436676025
    4. ' such' → logprob: -4.017858505249023
    5. 'that' → logprob: -5.892858505249023
    6. '       ' → logprob: -6.017858505249023
    7. 'count' → logprob: -6.392858505249023
    8. ' where' → logprob: -6.767858505249023
    9. 'such' → logprob: -7.892858505249023
    10. ' for' → logprob: -8.142858505249023

Token 652: ' k' (ID: 372)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.15347178280353546
    2. 'k' → logprob: -2.2784717082977295
    3. ' count' → logprob: -3.6534717082977295
    4. 'exact' → logprob: -4.778471946716309
    5. ' k' → logprob: -5.528471946716309
    6. 'left' → logprob: -7.528471946716309
    7. ' exactly' → logprob: -8.153471946716309
    8. '```' → logprob: -8.278471946716309
    9. 'a' → logprob: -8.903471946716309
    10. 'ans' → logprob: -9.528471946716309

Token 653: ' A' (ID: 355)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.32021448016166687
    2. 'edges' → logprob: -1.9452145099639893
    3. 'A' → logprob: -2.3202145099639893
    4. '_edges' → logprob: -4.19521427154541
    5. 'from' → logprob: -4.82021427154541
    6. 'count' → logprob: -5.69521427154541
    7. ' from' → logprob: -6.57021427154541
    8. ' A' → logprob: -6.94521427154541
    9. ' count' → logprob: -7.07021427154541
    10. '=' → logprob: -7.32021427154541

Token 654: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.3618915379047394
    2. 'edges' → logprob: -1.236891508102417
    3. '_edges' → logprob: -4.361891746520996
    4. '-' → logprob: -8.111891746520996
    5. '       ' → logprob: -9.111891746520996
    6. '   ' → logprob: -9.611891746520996
    7. '(edges' → logprob: -10.611891746520996
    8. ' edge' → logprob: -11.111891746520996
    9. 'Edges' → logprob: -11.236891746520996
    10. '-edge' → logprob: -11.611891746520996

Token 655: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5093891024589539
    2. ' while' → logprob: -1.8843891620635986
    3. 'while' → logprob: -1.8843891620635986
    4. ':
' → logprob: -3.5093891620635986
    5. ':' → logprob: -3.6343891620635986
    6. '       ' → logprob: -4.8843889236450195
    7. '  
' → logprob: -5.0093889236450195
    8. '```' → logprob: -5.5093889236450195
    9. '   ' → logprob: -5.6343889236450195
    10. ',' → logprob: -5.7593889236450195

Token 656: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4957403540611267
    2. ' while' → logprob: -1.6207404136657715
    3. 'while' → logprob: -2.2457404136657715
    4. '       ' → logprob: -3.2457404136657715
    5. ' 
' → logprob: -4.2457404136657715
    6. '  
' → logprob: -4.8707404136657715
    7. '<|end|>' → logprob: -4.8707404136657715
    8. ',' → logprob: -5.6207404136657715
    9. '   ' → logprob: -5.9957404136657715
    10. ':' → logprob: -6.1207404136657715

Token 657: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6384566426277161
    2. ' while' → logprob: -0.7634566426277161
    3. '
' → logprob: -5.63845682144165
    4. ' 
' → logprob: -6.63845682144165
    5. '       ' → logprob: -7.88845682144165
    6. ' for' → logprob: -8.388456344604492
    7. 'for' (adapté à ' for') → logprob: -8.888456344604492
    8. '  
' → logprob: -10.013456344604492
    9. '        
' → logprob: -10.263456344604492
    10. '```' → logprob: -10.263456344604492

Token 658: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014890989288687706
    2. ' _' → logprob: -4.264891147613525
    3. '_mid' → logprob: -7.514891147613525
    4. '_i' → logprob: -8.889890670776367
    5. ' mid' → logprob: -10.764890670776367
    6. 'mid' → logprob: -11.139890670776367
    7. '_=' → logprob: -12.764890670776367
    8. '_iter' → logprob: -13.889890670776367
    9. '_x' → logprob: -14.014890670776367
    10. '_in' → logprob: -14.389890670776367

Token 659: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25195205211639404
    2. 'in' → logprob: -1.501952052116394
    3. ' ' → logprob: -11.876952171325684
    4. 'n' → logprob: -12.126952171325684
    5. '   ' → logprob: -13.251952171325684
    6. '  ' → logprob: -13.376952171325684
    7. '=' → logprob: -13.376952171325684
    8. '    ' → logprob: -13.501952171325684
    9. 'range' → logprob: -14.001952171325684
    10. ',' → logprob: -14.126952171325684

Token 660: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020413640595506877
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -15.000204086303711
    4. '0' → logprob: -16.62520408630371
    5. '[' → logprob: -17.25020408630371
    6. '   ' → logprob: -17.50020408630371
    7. '10' → logprob: -17.50020408630371
    8. '100' → logprob: -18.00020408630371
    9. '	range' → logprob: -18.00020408630371
    10. '_range' → logprob: -18.00020408630371

Token 661: '(' (ID: 7)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.8284162878990173
    2. '60' → logprob: -1.328416347503662
    3. '40' → logprob: -1.578416347503662
    4. '100' → logprob: -2.703416347503662
    5. '30' → logprob: -3.953416347503662
    6. '(' → logprob: -6.328416347503662
    7. '35' → logprob: -7.078416347503662
    8. '70' → logprob: -7.328416347503662
    9. '61' → logprob: -7.703416347503662
    10. ' ' → logprob: -7.828416347503662

Token 662: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.7859942317008972
    2. '100' → logprob: -1.285994291305542
    3. '40' → logprob: -2.035994291305542
    4. '20' → logprob: -3.035994291305542
    5. '30' → logprob: -3.160994291305542
    6. '60' → logprob: -3.285994291305542
    7. '31' → logprob: -5.910994052886963
    8. '200' → logprob: -6.535994052886963
    9. ' ' → logprob: -6.785994052886963
    10. '35' → logprob: -6.910994052886963

Token 663: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.017488429322838783
    2. '):' → logprob: -4.892488479614258
    3. ':
' → logprob: -5.017488479614258
    4. ':' → logprob: -6.267488479614258
    5. ' ):
' → logprob: -7.142488479614258
    6. '   ' → logprob: -8.142488479614258
    7. ' :
' → logprob: -9.392488479614258
    8. '       ' → logprob: -10.267488479614258
    9. '():
' → logprob: -10.267488479614258
    10. ')' → logprob: -11.017488479614258

Token 664: '           ' (ID: 352)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.4997042119503021
    2. '           ' → logprob: -1.3747042417526245
    3. 'mid' → logprob: -1.9997042417526245
    4. '   ' → logprob: -5.624704360961914
    5. '_mid' → logprob: -8.124704360961914
    6. ' midpoint' → logprob: -8.374704360961914
    7. '       ' → logprob: -8.874704360961914
    8. ' mids' → logprob: -8.874704360961914
    9. '```' → logprob: -9.124704360961914
    10. '[mid' → logprob: -9.624704360961914

Token 665: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.07894255965948105
    2. ' mid' → logprob: -2.5789425373077393
    3. 'middle' → logprob: -11.20394229888916
    4. 'm' → logprob: -11.45394229888916
    5. '           ' → logprob: -11.45394229888916
    6. '_mid' → logprob: -11.95394229888916
    7. '(mid' → logprob: -12.32894229888916
    8. ' midpoint' → logprob: -12.95394229888916
    9. '[mid' → logprob: -13.45394229888916
    10. ' middle' → logprob: -13.45394229888916

Token 666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17989720404148102
    2. '=' → logprob: -1.8048971891403198
    3. '=(' → logprob: -8.92989730834961
    4. '=int' → logprob: -11.67989730834961
    5. '=((' → logprob: -12.80489730834961
    6. ' =(' → logprob: -13.42989730834961
    7. ')' → logprob: -13.92989730834961
    8. '=
' → logprob: -14.30489730834961
    9. '=line' → logprob: -14.42989730834961
    10. '<|end|>' → logprob: -14.67989730834961

Token 667: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.011160303838551044
    2. ' (' → logprob: -4.511160373687744
    3. '(right' → logprob: -9.136159896850586
    4. '           ' → logprob: -13.386159896850586
    5. '[left' → logprob: -13.761159896850586
    6. '(l' → logprob: -14.386159896850586
    7. '(mid' → logprob: -14.886159896850586
    8. '(line' → logprob: -15.136159896850586
    9. '(lhs' → logprob: -15.761159896850586
    10. '(low' → logprob: -16.011159896850586

Token 668: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.004159007221460342
    2. ' left' → logprob: -5.504158973693848
    3. 'right' → logprob: -9.754158973693848
    4. '(left' → logprob: -10.754158973693848
    5. ')' → logprob: -14.754158973693848
    6. '	left' → logprob: -14.754158973693848
    7. ' right' → logprob: -15.504158973693848
    8. '[left' → logprob: -16.004159927368164
    9. ',left' → logprob: -17.004159927368164
    10. '           ' → logprob: -17.379159927368164

Token 669: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12692862749099731
    2. ' +' → logprob: -2.1269285678863525
    3. '+
' → logprob: -14.876928329467773
    4. ' +
' → logprob: -16.126928329467773
    5. '＋' → logprob: -18.001928329467773
    6. ')' → logprob: -18.376928329467773
    7. '```' → logprob: -18.626928329467773
    8. '+r' → logprob: -19.501928329467773
    9. '
' → logprob: -19.626928329467773
    10. ' ' → logprob: -19.751928329467773

Token 670: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -7.493430894101039e-05
    2. ' right' → logprob: -9.500075340270996
    3. '	right' → logprob: -18.87507438659668
    4. '(right' → logprob: -20.62507438659668
    5. '[right' → logprob: -20.62507438659668
    6. '
' → logprob: -20.87507438659668
    7. '```' → logprob: -22.12507438659668
    8. '.right' → logprob: -22.50007438659668
    9. ' ' → logprob: -22.50007438659668
    10. ',right' → logprob: -22.50007438659668

Token 671: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02661214768886566
    2. ')//' → logprob: -3.7766120433807373
    3. ')>>' → logprob: -5.776612281799316
    4. ' )' → logprob: -8.776612281799316
    5. ')/' → logprob: -9.151612281799316
    6. ')
' → logprob: -14.776612281799316
    7. ')#' → logprob: -14.901612281799316
    8. ')<<' → logprob: -15.776612281799316
    9. ' ' → logprob: -16.151611328125
    10. '```' → logprob: -16.276611328125

Token 672: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '```' → logprob: -16.00006675720215
    4. '   ' → logprob: -17.12506675720215
    5. '=' → logprob: -17.62506675720215
    6. '1' → logprob: -18.87506675720215
    7. '  ' → logprob: -18.87506675720215
    8. '２' → logprob: -19.43756675720215
    9. '>' → logprob: -19.68756675720215
    10. '۲' → logprob: -19.75006675720215

Token 673: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08015535026788712
    2. '            
' → logprob: -3.705155372619629
    3. '           ' → logprob: -3.830155372619629
    4. '  
' → logprob: -4.455155372619629
    5. ' 
' → logprob: -4.580155372619629
    6. '<|end|>' → logprob: -5.205155372619629
    7. '    
' → logprob: -6.830155372619629
    8. '
' → logprob: -7.705155372619629
    9. '        
' → logprob: -7.830155372619629
    10. '   
' → logprob: -8.580155372619629

Token 674: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5787023305892944
    2. '
' → logprob: -1.0787023305892944
    3. '<|end|>' → logprob: -3.078702449798584
    4. '            
' → logprob: -3.953702449798584
    5. ' 
' → logprob: -4.703702449798584
    6. '  
' → logprob: -4.828702449798584
    7. '<|end|>' → logprob: -5.078702449798584
    8. ' if' → logprob: -5.703702449798584
    9. '    
' → logprob: -6.328702449798584
    10. ',' → logprob: -7.078702449798584

Token 675: ' c' (ID: 274)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.05212338641285896
    2. ' count' → logprob: -3.4271233081817627
    3. 'cnt' → logprob: -4.802123546600342
    4. '           ' → logprob: -5.302123546600342
    5. 'c' (adapté à ' c') → logprob: -5.552123546600342
    6. ' cnt' → logprob: -8.052123069763184
    7. 'ca' → logprob: -8.177123069763184
    8. ' c' → logprob: -9.052123069763184
    9. 'res' → logprob: -9.302123069763184
    10. 'ac' → logprob: -9.427123069763184

Token 676: 'A' (ID: 32)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.003708396339789033
    2. 'count' → logprob: -5.753708362579346
    3. ',' → logprob: -8.878708839416504
    4. 'A' → logprob: -9.253708839416504
    5. 'out' → logprob: -9.253708839416504
    6. 'o' → logprob: -10.128708839416504
    7. 'ont' → logprob: -10.253708839416504
    8. 'nt' → logprob: -10.253708839416504
    9. ',count' → logprob: -10.503708839416504
    10. 'a' → logprob: -11.128708839416504

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20911727845668793
    2. ',count' → logprob: -1.7091172933578491
    3. ',c' → logprob: -4.959117412567139
    4. ',result' → logprob: -8.70911693572998
    5. ',num' → logprob: -9.08411693572998
    6. ',total' → logprob: -9.45911693572998
    7. ',n' → logprob: -9.83411693572998
    8. ',t' → logprob: -10.33411693572998
    9. ' ,' → logprob: -10.58411693572998
    10. ',w' → logprob: -10.70911693572998

Token 678: ' cost' (ID: 3097)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.17750604450702667
    2. 'cost' → logprob: -2.4275059700012207
    3. 't' → logprob: -3.5525059700012207
    4. 'tot' → logprob: -3.9275059700012207
    5. 'c' → logprob: -4.802505970001221
    6. ' total' → logprob: -5.177505970001221
    7. 'to' → logprob: -5.427505970001221
    8. 'res' → logprob: -5.552505970001221
    9. 'orig' → logprob: -6.927505970001221
    10. ' cost' → logprob: -7.552505970001221

Token 679: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519329786300659
    2. ' =' → logprob: -1.501932978630066
    3. ',' → logprob: -14.126933097839355
    4. '<|end|>' → logprob: -14.501933097839355
    5. '=user' → logprob: -15.001933097839355
    6. '=None' → logprob: -15.376933097839355
    7. '=line' → logprob: -15.876933097839355
    8. '=c' → logprob: -15.876933097839355
    9. '＝' → logprob: -16.00193214416504
    10. ' ' → logprob: -16.00193214416504

Token 680: ' mst' (ID: 179099)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.002476016292348504
    2. ' mst' → logprob: -6.002476215362549
    3. 'mnt' → logprob: -15.75247573852539
    4. 'ms' → logprob: -15.87747573852539
    5. '   ' → logprob: -16.37747573852539
    6. 'mt' → logprob: -17.75247573852539
    7. 'msc' → logprob: -17.75247573852539
    8. ' ' → logprob: -18.00247573852539
    9. 'mts' → logprob: -18.00247573852539
    10. 'm' → logprob: -18.75247573852539

Token 681: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.02106834575533867
    2. '(int' → logprob: -3.8960683345794678
    3. 'int' → logprob: -8.146068572998047
    4. 'mid' → logprob: -8.396068572998047
    5. '(round' → logprob: -12.646068572998047
    6. '[mid' → logprob: -13.271068572998047
    7. ' (' → logprob: -13.396068572998047
    8. '(' → logprob: -13.646068572998047
    9. '(m' → logprob: -13.771068572998047
    10. ' int' → logprob: -14.896068572998047

Token 682: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07892019301652908
    2. ')' → logprob: -2.5789201259613037
    3. '           ' → logprob: -10.453920364379883
    4. ')
' → logprob: -13.953920364379883
    5. ' )
' → logprob: -15.078920364379883
    6. '       ' → logprob: -15.328920364379883
    7. ')`
' → logprob: -16.203920364379883
    8. ')

' → logprob: -16.328920364379883
    9. '   ' → logprob: -17.953920364379883
    10. ' )' → logprob: -18.078920364379883

Token 683: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033044762909412384
    2. '<|end|>' → logprob: -3.5330448150634766
    3. '
' → logprob: -6.283044815063477
    4. '       ' → logprob: -7.658044815063477
    5. '<|end|>' → logprob: -7.908044815063477
    6. '            
' → logprob: -8.783044815063477
    7. ' if' → logprob: -8.908044815063477
    8. '```' → logprob: -9.408044815063477
    9. '          ' → logprob: -10.033044815063477
    10. '   ' → logprob: -10.533044815063477

Token 684: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5513328909873962
    2. '           ' → logprob: -1.176332950592041
    3. 'if' (adapté à ' if') → logprob: -2.176332950592041
    4. '       ' → logprob: -6.926332950592041
    5. '   ' → logprob: -7.051332950592041
    6. 'If' → logprob: -10.551332473754883
    7. '
' → logprob: -10.676332473754883
    8. '```' → logprob: -10.926332473754883
    9. ' ' → logprob: -11.551332473754883
    10. '<|end|>' → logprob: -11.676332473754883

Token 685: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2254207879304886
    2. ' c' → logprob: -1.6004208326339722
    3. '   ' → logprob: -12.350420951843262
    4. ' ' → logprob: -13.975420951843262
    5. ' ' → logprob: -13.975420951843262
    6. ' (' → logprob: -14.475420951843262
    7. '(c' → logprob: -14.475420951843262
    8. '	c' → logprob: -14.850420951843262
    9. '    ' → logprob: -15.475420951843262
    10. '  ' → logprob: -15.600420951843262

Token 686: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.704273118884885e-07
    2. 'a' → logprob: -15.500000953674316
    3. ' A' → logprob: -16.25
    4. '_A' → logprob: -16.875
    5. 'c' → logprob: -16.875
    6. '```' → logprob: -17.125
    7. '=' → logprob: -18.125
    8. '==' → logprob: -18.25
    9. '[' → logprob: -18.5
    10. '>=' → logprob: -18.625

Token 687: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.026587413623929024
    2. ' <' → logprob: -4.90158748626709
    3. 'is' → logprob: -5.15158748626709
    4. ' ==' → logprob: -5.52658748626709
    5. ' >=' → logprob: -5.65158748626709
    6. '==' → logprob: -6.27658748626709
    7. '>=' → logprob: -6.27658748626709
    8. '<|end|>' → logprob: -6.77658748626709
    9. '<' → logprob: -8.02658748626709
    10. ' ' → logprob: -9.15158748626709

Token 688: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00046296243090182543
    2. ' None' → logprob: -7.750463008880615
    3. 'k' → logprob: -10.875462532043457
    4. 'not' → logprob: -11.250462532043457
    5. '=None' → logprob: -15.875462532043457
    6. 'none' → logprob: -16.375463485717773
    7. '(None' → logprob: -16.750463485717773
    8. ' not' → logprob: -17.250463485717773
    9. '_None' → logprob: -17.500463485717773
    10. 'Not' → logprob: -17.750463485717773

Token 689: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0034315004013478756
    2. ':' → logprob: -6.00343132019043
    3. ':
' → logprob: -7.37843132019043
    4. 'or' → logprob: -8.50343132019043
    5. '           ' → logprob: -9.25343132019043
    6. '	or' → logprob: -11.37843132019043
    7. '               ' → logprob: -11.75343132019043
    8. '       ' → logprob: -11.87843132019043
    9. '   ' → logprob: -13.37843132019043
    10. ')' → logprob: -14.12843132019043

Token 690: '               ' (ID: 506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06415142118930817
    2. '               ' → logprob: -2.8141515254974365
    3. '           ' → logprob: -6.189151287078857
    4. ':' → logprob: -9.314151763916016
    5. 'or' → logprob: -11.564151763916016
    6. '              ' → logprob: -11.814151763916016
    7. ' and' → logprob: -12.189151763916016
    8. ':
' → logprob: -12.314151763916016
    9. '            ' → logprob: -12.939151763916016
    10. '<|end|>' → logprob: -13.064151763916016

Token 691: ' #' (ID: 1069)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.17953214049339294
    2. ' right' → logprob: -2.054532051086426
    3. 'left' → logprob: -3.929532051086426
    4. 'right' → logprob: -4.304532051086426
    5. '               ' → logprob: -5.929532051086426
    6. '           ' → logprob: -8.429532051086426
    7. '            ' → logprob: -9.179532051086426
    8. '                ' → logprob: -11.429532051086426
    9. '                   ' → logprob: -12.179532051086426
    10. '	left' → logprob: -12.429532051086426

Token 692: ' not' (ID: 625)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4794735312461853
    2. 'right' → logprob: -0.9794735312461853
    3. ' left' → logprob: -5.47947359085083
    4. ' right' → logprob: -6.72947359085083
    5. '               ' → logprob: -11.604473114013672
    6. '           ' → logprob: -12.479473114013672
    7. '	left' → logprob: -14.229473114013672
    8. 'if' → logprob: -15.104473114013672
    9. '	right' → logprob: -15.354473114013672
    10. '   ' → logprob: -15.354473114013672

Token 693: ' spanning' (ID: 66335)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -1.0133941173553467
    2. ' feasible' → logprob: -1.6383941173553467
    3. 'possible' → logprob: -1.6383941173553467
    4. 'fe' → logprob: -2.3883941173553467
    5. '           ' → logprob: -3.0133941173553467
    6. 'en' → logprob: -3.3883941173553467
    7. 'left' → logprob: -3.8883941173553467
    8. ' found' → logprob: -4.513394355773926
    9. 'able' → logprob: -4.888394355773926
    10. ' possible' → logprob: -5.138394355773926

Token 694: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.7697784304618835
    2. 'left' → logprob: -1.1447784900665283
    3. ',' → logprob: -2.3947784900665283
    4. 'right' → logprob: -2.8947784900665283
    5. ' left' → logprob: -3.2697784900665283
    6. ' tree' → logprob: -4.394778251647949
    7. 'trees' → logprob: -5.894778251647949
    8. '
' → logprob: -6.019778251647949
    9. '       ' → logprob: -6.144778251647949
    10. '   ' → logprob: -6.269778251647949

Token 695: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6856469511985779
    2. '           ' → logprob: -0.8106469511985779
    3. ':' → logprob: -3.3106470108032227
    4. ' or' → logprob: -4.560647010803223
    5. '               ' → logprob: -5.935647010803223
    6. ',' → logprob: -7.060647010803223
    7. '                   ' → logprob: -7.810647010803223
    8. ' left' → logprob: -8.935647010803223
    9. '):
' → logprob: -9.060647010803223
    10. '
' → logprob: -9.060647010803223

Token 696: ' remove' (ID: 6234)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.036804404109716415
    2. ' left' → logprob: -3.661804437637329
    3. 'right' → logprob: -4.66180419921875
    4. '               ' → logprob: -7.16180419921875
    5. '           ' → logprob: -9.16180419921875
    6. ' right' → logprob: -9.28680419921875
    7. '	left' → logprob: -11.03680419921875
    8. '   ' → logprob: -12.28680419921875
    9. '                   ' → logprob: -13.53680419921875
    10. ':left' → logprob: -13.91180419921875

Token 697: ' too' (ID: 3101)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6005258560180664
    2. 'left' → logprob: -0.9755258560180664
    3. ' left' → logprob: -2.8505258560180664
    4. ' right' → logprob: -4.100525856018066
    5. '	left' → logprob: -10.350525856018066
    6. '	right' → logprob: -10.725525856018066
    7. '   ' → logprob: -11.100525856018066
    8. ' lef' → logprob: -11.600525856018066
    9. 'mid' → logprob: -12.350525856018066
    10. ')' → logprob: -12.600525856018066

Token 698: ' small' (ID: 3291)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.22708511352539062
    2. 'large' → logprob: -2.8520851135253906
    3. ' far' → logprob: -3.1020851135253906
    4. 'low' → logprob: -3.2270851135253906
    5. 'much' → logprob: -3.8520851135253906
    6. 'small' → logprob: -4.852085113525391
    7. 'left' → logprob: -4.852085113525391
    8. 'high' → logprob: -5.102085113525391
    9. 'heavy' → logprob: -5.727085113525391
    10. 'cheap' → logprob: -6.102085113525391

Token 699: ' mid' (ID: 6959)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2796259820461273
    2. ' left' → logprob: -2.27962589263916
    3. 'right' → logprob: -2.65462589263916
    4. '           ' → logprob: -3.52962589263916
    5. ',' → logprob: -4.40462589263916
    6. ' right' → logprob: -5.02962589263916
    7. '[left' → logprob: -5.15462589263916
    8. '               ' → logprob: -5.27962589263916
    9. ',left' → logprob: -6.02962589263916
    10. ':left' → logprob: -6.02962589263916

Token 700: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004154618363827467
    2. '               ' → logprob: -6.129154682159424
    3. ',' → logprob: -6.879154682159424
    4. '
' → logprob: -7.754154682159424
    5. '       ' → logprob: -8.754154205322266
    6. 'left' → logprob: -9.504154205322266
    7. '            
' → logprob: -10.129154205322266
    8. '[left' → logprob: -10.254154205322266
    9. '```' → logprob: -10.754154205322266
    10. ' =' → logprob: -10.754154205322266

Token 701: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034901537001132965
    2. '
' → logprob: -3.5349016189575195
    3. '               ' → logprob: -6.2849016189575195
    4. ' left' → logprob: -6.2849016189575195
    5. 'left' → logprob: -7.5349016189575195
    6. '            
' → logprob: -8.40990161895752
    7. '   ' → logprob: -8.90990161895752
    8. '       ' → logprob: -8.90990161895752
    9. '    
' → logprob: -9.28490161895752
    10. '```' → logprob: -9.28490161895752

Token 702: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.2997831404209137
    2. 'left' (adapté à ' left') → logprob: -1.4247831106185913
    3. ' right' → logprob: -4.424783229827881
    4. 'right' → logprob: -5.174783229827881
    5. '           ' → logprob: -7.424783229827881
    6. '               ' → logprob: -8.674782752990723
    7. '	left' → logprob: -11.049782752990723
    8. ' lef' → logprob: -11.549782752990723
    9. '   ' → logprob: -11.674782752990723
    10. '            ' → logprob: -11.924782752990723

Token 703: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020699352025986
    2. ' =' → logprob: -2.3502070903778076
    3. '+=' → logprob: -14.975207328796387
    4. ' +=' → logprob: -16.97520637512207
    5. ' ' → logprob: -17.85020637512207
    6. '＝' → logprob: -17.97520637512207
    7. '.=' → logprob: -19.47520637512207
    8. '=line' → logprob: -20.10020637512207
    9. '*=' → logprob: -20.35020637512207
    10. '            ' → logprob: -20.47520637512207

Token 704: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.306760805164231e-05
    2. ' mid' → logprob: -11.25001335144043
    3. '[mid' → logprob: -17.75001335144043
    4. '(mid' → logprob: -19.37501335144043
    5. 'm' → logprob: -21.12501335144043
    6. 'middle' → logprob: -22.00001335144043
    7. '_mid' → logprob: -22.75001335144043
    8. 'mi' → logprob: -23.12501335144043
    9. 'midd' → logprob: -23.25001335144043
    10. 'midt' → logprob: -23.37501335144043

Token 705: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07917717099189758
    2. ' +' → logprob: -2.579177141189575
    3. '+
' → logprob: -9.079176902770996
    4. '<|end|>' → logprob: -9.829176902770996
    5. 'else' → logprob: -10.079176902770996
    6. ' else' → logprob: -10.454176902770996
    7. '           ' → logprob: -11.454176902770996
    8. '+=' → logprob: -11.954176902770996
    9. ' +
' → logprob: -12.079176902770996
    10. '<|end|>' → logprob: -12.204176902770996

Token 706: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034002382308244705
    2. 'else' → logprob: -3.6590023040771484
    3. ' else' → logprob: -5.034002304077148
    4. '       ' → logprob: -7.159002304077148
    5. '```' → logprob: -8.409002304077148
    6. 'elif' → logprob: -9.534002304077148
    7. '<|end|>' → logprob: -10.409002304077148
    8. '               ' → logprob: -10.534002304077148
    9. '   ' → logprob: -11.534002304077148
    10. ' elif' → logprob: -12.284002304077148

Token 707: ' continue' (ID: 4901)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.018267467617988586
    2. ' else' → logprob: -4.268267631530762
    3. '           ' → logprob: -6.143267631530762
    4. 'right' → logprob: -6.268267631530762
    5. ' right' → logprob: -10.893267631530762
    6. '       ' → logprob: -11.268267631530762
    7. 'elif' → logprob: -12.018267631530762
    8. '```' → logprob: -12.143267631530762
    9. 'continue' (adapté à ' continue') → logprob: -12.393267631530762
    10. '               ' → logprob: -12.893267631530762

Token 708: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018887832993641496
    2. '```' → logprob: -9.500188827514648
    3. 'else' → logprob: -10.000188827514648
    4. '
' → logprob: -10.250188827514648
    5. '<|end|>' → logprob: -11.500188827514648
    6. 'elif' → logprob: -11.750188827514648
    7. ' else' → logprob: -11.875188827514648
    8. '       ' → logprob: -13.000188827514648
    9. '            
' → logprob: -13.375188827514648
    10. '          ' → logprob: -14.250188827514648

Token 709: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030202565249055624
    2. '```' → logprob: -6.003020286560059
    3. 'else' → logprob: -8.128020286560059
    4. '       ' → logprob: -9.878020286560059
    5. 'elif' → logprob: -9.878020286560059
    6. 'if' → logprob: -10.003020286560059
    7. ' if' → logprob: -10.628020286560059
    8. '
' → logprob: -10.878020286560059
    9. ' else' → logprob: -11.128020286560059
    10. '   ' → logprob: -11.253020286560059

Token 710: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6207846403121948
    2. 'if' (adapté à ' if') → logprob: -1.2457846403121948
    3. ' if' → logprob: -1.7457846403121948
    4. '   ' → logprob: -9.120784759521484
    5. '       ' → logprob: -9.870784759521484
    6. '
' → logprob: -10.370784759521484
    7. '```' → logprob: -10.995784759521484
    8. ' ' → logprob: -11.620784759521484
    9. '<|end|>' → logprob: -11.870784759521484
    10. '            
' → logprob: -11.995784759521484

Token 711: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16022545099258423
    2. ' c' → logprob: -1.9102253913879395
    3. '	c' → logprob: -14.535225868225098
    4. '   ' → logprob: -15.535225868225098
    5. ' ' → logprob: -16.03522491455078
    6. 'abs' → logprob: -16.28522491455078
    7. ' ' → logprob: -16.53522491455078
    8. '(c' → logprob: -16.66022491455078
    9. '  ' → logprob: -16.78522491455078
    10. '$c' → logprob: -16.91022491455078

Token 712: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.088346359931165e-07
    2. '_A' → logprob: -14.875000953674316
    3. '_' → logprob: -15.000000953674316
    4. 'a' → logprob: -15.875000953674316
    5. '_a' → logprob: -17.0
    6. ' A' → logprob: -17.625
    7. 'c' → logprob: -18.25
    8. 'o' → logprob: -18.625
    9. '```' → logprob: -19.25
    10. '>A' → logprob: -20.25

Token 713: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.26455774903297424
    2. ' <' → logprob: -1.6395577192306519
    3. '>' → logprob: -3.8895578384399414
    4. '>=' → logprob: -4.514557838439941
    5. ' >' → logprob: -5.389557838439941
    6. ' >=' → logprob: -6.139557838439941
    7. '==' → logprob: -9.264557838439941
    8. ' ==' → logprob: -10.514557838439941
    9. '<int' → logprob: -10.764557838439941
    10. ' ' → logprob: -11.264557838439941

Token 714: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011703446507453918
    2. ' k' → logprob: -6.7511701583862305
    3. '           ' → logprob: -16.126171112060547
    4. '               ' → logprob: -20.501171112060547
    5. '	k' → logprob: -21.376171112060547
    6. '            ' → logprob: -22.626171112060547
    7. '```' → logprob: -22.626171112060547
    8. '       ' → logprob: -22.626171112060547
    9. '   ' → logprob: -22.876171112060547
    10. ' ' → logprob: -23.001171112060547

Token 715: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20201244950294495
    2. ':
' → logprob: -1.7020124197006226
    3. '           ' → logprob: -7.577012538909912
    4. '       ' → logprob: -10.452012062072754
    5. '               ' → logprob: -10.827012062072754
    6. ':
' → logprob: -11.202012062072754
    7. ':left' → logprob: -11.202012062072754
    8. ',' → logprob: -13.202012062072754
    9. '):
' → logprob: -13.327012062072754
    10. '   ' → logprob: -13.327012062072754

Token 716: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16894754767417908
    2. ' left' → logprob: -2.168947458267212
    3. '           ' → logprob: -3.543947458267212
    4. ' right' → logprob: -4.918947696685791
    5. 'left' → logprob: -5.668947696685791
    6. 'right' → logprob: -6.918947696685791
    7. '   ' → logprob: -8.918947219848633
    8. '```' → logprob: -9.168947219848633
    9. '                   ' → logprob: -9.668947219848633
    10. '	left' → logprob: -9.918947219848633

Token 717: ' right' (ID: 1849)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.059622012078762054
    2. ' left' → logprob: -3.559622049331665
    3. 'right' (adapté à ' right') → logprob: -3.559622049331665
    4. ' right' → logprob: -6.934621810913086
    5. '	left' → logprob: -12.434621810913086
    6. ' lef' → logprob: -14.059621810913086
    7. '[left' → logprob: -14.309621810913086
    8. '               ' → logprob: -14.559621810913086
    9. 'lef' → logprob: -14.934621810913086
    10. '	right' → logprob: -15.684621810913086

Token 718: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014133334159851
    2. '=' → logprob: -1.7014133930206299
    3. '＝' → logprob: -18.201414108276367
    4. '.=' → logprob: -19.701414108276367
    5. ' ' → logprob: -20.826414108276367
    6. '=cut' → logprob: -21.576414108276367
    7. '=end' → logprob: -21.576414108276367
    8. '=k' → logprob: -22.451414108276367
    9. '=}' → logprob: -22.701414108276367
    10. '=

' → logprob: -22.951414108276367

Token 719: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0019286326132714748
    2. ' mid' → logprob: -6.251928806304932
    3. '[mid' → logprob: -19.751928329467773
    4. '_mid' → logprob: -20.126928329467773
    5. '(mid' → logprob: -20.751928329467773
    6. 'middle' → logprob: -22.251928329467773
    7. 'm' → logprob: -22.751928329467773
    8. '.mid' → logprob: -23.126928329467773
    9. 'midt' → logprob: -23.251928329467773
    10. ' midpoint' → logprob: -24.876928329467773

Token 720: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.912935197353363
    2. ' else' → logprob: -1.0379352569580078
    3. 'else' → logprob: -1.4129352569580078
    4. '               ' → logprob: -7.912935256958008
    5. '
' → logprob: -8.037935256958008
    6. '       ' → logprob: -8.537935256958008
    7. ' 
' → logprob: -10.912935256958008
    8. '            
' → logprob: -11.037935256958008
    9. '          ' → logprob: -11.037935256958008
    10. '```' → logprob: -11.037935256958008

Token 721: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047776028513908386
    2. 'else' → logprob: -3.547775983810425
    3. ' else' → logprob: -4.047776222229004
    4. '               ' → logprob: -8.297776222229004
    5. '       ' → logprob: -9.547776222229004
    6. '```' → logprob: -10.172776222229004
    7. '<|end|>' → logprob: -11.172776222229004
    8. '          ' → logprob: -11.422776222229004
    9. '         ' → logprob: -12.797776222229004
    10. '   ' → logprob: -12.797776222229004

Token 722: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6628174781799316
    2. '           ' → logprob: -1.0378174781799316
    3. ' else' → logprob: -2.0378174781799316
    4. '       ' → logprob: -10.912817001342773
    5. 'elif' → logprob: -11.287817001342773
    6. '          ' → logprob: -11.787817001342773
    7. '```' → logprob: -12.162817001342773
    8. '<|end|>' → logprob: -12.287817001342773
    9. '   ' → logprob: -12.662817001342773
    10. '	else' → logprob: -12.912817001342773

Token 723: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4492851793766022
    2. ':
' → logprob: -1.8242851495742798
    3. 'left' → logprob: -2.9492852687835693
    4. ':left' → logprob: -2.9492852687835693
    5. ' left' → logprob: -3.5742852687835693
    6. '       ' → logprob: -3.6992852687835693
    7. '[left' → logprob: -3.9492852687835693
    8. '               ' → logprob: -4.57428503036499
    9. '           ' → logprob: -4.82428503036499
    10. '	left' → logprob: -5.82428503036499

Token 724: '               ' (ID: 506)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4742865264415741
    2. ' left' → logprob: -0.9742865562438965
    3. '       ' → logprob: -9.474286079406738
    4. '	left' → logprob: -9.474286079406738
    5. '               ' → logprob: -11.099286079406738
    6. '[left' → logprob: -11.224286079406738
    7. '           ' → logprob: -11.599286079406738
    8. '   ' → logprob: -11.974286079406738
    9. '```' → logprob: -12.349286079406738
    10. ',left' → logprob: -13.099286079406738

Token 725: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.00026169343618676066
    2. ' left' → logprob: -8.250261306762695
    3. '	left' → logprob: -15.000261306762695
    4. '[left' → logprob: -16.500261306762695
    5. '           ' → logprob: -17.750261306762695
    6. 'right' → logprob: -18.250261306762695
    7. '               ' → logprob: -18.250261306762695
    8. ':left' → logprob: -19.250261306762695
    9. '   ' → logprob: -20.000261306762695
    10. '.left' → logprob: -20.625261306762695

Token 726: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868710398674011
    2. ' =' → logprob: -1.136871099472046
    3. '＝' → logprob: -18.261871337890625
    4. '[mid' → logprob: -19.886871337890625
    5. ' =
' → logprob: -20.386871337890625
    6. '<|end|>' → logprob: -20.386871337890625
    7. '=
' → logprob: -20.761871337890625
    8. ' ' → logprob: -21.011871337890625
    9. '=cut' → logprob: -21.136871337890625
    10. ',' → logprob: -21.136871337890625

Token 727: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0031777136027812958
    2. ' mid' → logprob: -5.753177642822266
    3. '(mid' → logprob: -18.503177642822266
    4. '[mid' → logprob: -19.378177642822266
    5. '_mid' → logprob: -20.253177642822266
    6. 'middle' → logprob: -21.503177642822266
    7. ' midpoint' → logprob: -21.878177642822266
    8. '.mid' → logprob: -22.628177642822266
    9. '   ' → logprob: -23.253177642822266
    10. 'm' → logprob: -23.503177642822266

Token 728: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.937859296798706
    2. '<|end|>' → logprob: -1.187859296798706
    3. '       ' → logprob: -1.687859296798706
    4. '        
' → logprob: -2.187859296798706
    5. '<|end|>' → logprob: -6.187859535217285
    6. ',' → logprob: -6.687859535217285
    7. '  
' → logprob: -7.187859535217285
    8. '    
' → logprob: -7.687859535217285
    9. ' 
' → logprob: -8.562859535217285
    10. '        ' → logprob: -8.562859535217285

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10035385936498642
    2. '
' → logprob: -3.725353956222534
    3. '   ' → logprob: -3.725353956222534
    4. '```' → logprob: -4.225353717803955
    5. ' if' → logprob: -4.975353717803955
    6. '<|end|>' → logprob: -5.225353717803955
    7. 'ans' → logprob: -5.475353717803955
    8. ')' → logprob: -5.600353717803955
    9. 'else' → logprob: -5.850353717803955
    10. 'final' → logprob: -5.975353717803955

Token 730: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.013569813221693039
    2. 'mid' → logprob: -5.0135698318481445
    3. 'if' → logprob: -5.2635698318481445
    4. 'final' → logprob: -7.3885698318481445
    5. 'count' → logprob: -8.763569831848145
    6. '_,' → logprob: -8.763569831848145
    7. 'ans' → logprob: -9.013569831848145
    8. '   ' → logprob: -9.138569831848145
    9. 'result' → logprob: -9.263569831848145
    10. 'res' → logprob: -9.388569831848145

Token 731: ' after' (ID: 1934)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0038938994985073805
    2. 'final' → logprob: -6.503893852233887
    3. 'res' → logprob: -7.253893852233887
    4. 'count' → logprob: -7.503893852233887
    5. 'result' → logprob: -8.003893852233887
    6. 'if' → logprob: -8.128893852233887
    7. '_,' → logprob: -9.253893852233887
    8. ' c' → logprob: -9.378893852233887
    9. 'best' → logprob: -9.503893852233887
    10. 'ans' → logprob: -10.003893852233887

Token 732: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -1.1400898694992065
    2. 'mid' → logprob: -1.6400898694992065
    3. 'left' → logprob: -1.7650898694992065
    4. '_' → logprob: -2.390089988708496
    5. 'final' → logprob: -2.390089988708496
    6. 'the' → logprob: -3.140089988708496
    7. 'c' → logprob: -3.640089988708496
    8. 'finding' → logprob: -4.515089988708496
    9. '#' → logprob: -4.890089988708496
    10. 'mst' → logprob: -5.015089988708496

Token 733: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.0006790731567889452
    2. ' search' → logprob: -7.500679016113281
    3. '       ' → logprob: -9.625679016113281
    4. 'left' → logprob: -10.500679016113281
    5. '_search' → logprob: -10.875679016113281
    6. '
' → logprob: -12.000679016113281
    7. '   ' → logprob: -12.250679016113281
    8. 'right' → logprob: -14.000679016113281
    9. ' left' → logprob: -14.875679016113281
    10. 'point' → logprob: -15.375679016113281

Token 734: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7526122331619263
    2. ' c' → logprob: -1.2526122331619263
    3. 'c' → logprob: -2.8776121139526367
    4. ',' → logprob: -3.0026121139526367
    5. '   ' → logprob: -3.2526121139526367
    6. ' mid' → logprob: -3.3776121139526367
    7. 'mid' → logprob: -3.5026121139526367
    8. '
' → logprob: -3.7526121139526367
    9. ' if' → logprob: -6.002612113952637
    10. '        
' → logprob: -6.002612113952637

Token 735: ' ~=' (ID: 50800)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06981170177459717
    2. ',c' → logprob: -2.8198118209838867
    3. 'c' → logprob: -5.569811820983887
    4. '_,' → logprob: -6.944811820983887
    5. ',
' → logprob: -7.444811820983887
    6. ' =' → logprob: -7.569811820983887
    7. '
' → logprob: -7.819811820983887
    8. '           ' → logprob: -7.944811820983887
    9. '_c' → logprob: -8.194811820983887
    10. '       ' → logprob: -8.444811820983887

Token 736: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00024763107649050653
    2. 'left' → logprob: -9.125247955322266
    3. ' right' → logprob: -9.250247955322266
    4. 'mid' → logprob: -11.000247955322266
    5. '(right' → logprob: -11.125247955322266
    6. 'round' → logprob: -12.625247955322266
    7. '(' → logprob: -12.750247955322266
    8. 'int' → logprob: -13.500247955322266
    9. '0' → logprob: -13.625247955322266
    10. ' ' → logprob: -14.750247955322266

Token 737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2246125936508179
    2. 'c' → logprob: -1.2246125936508179
    3. '
' → logprob: -1.4746125936508179
    4. ' c' → logprob: -2.0996127128601074
    5. '       ' → logprob: -3.7246127128601074
    6. '   ' → logprob: -4.849612712860107
    7. 'count' → logprob: -4.849612712860107
    8. '        
' → logprob: -5.349612712860107
    9. ',c' → logprob: -5.474612712860107
    10. ',
' → logprob: -5.974612712860107

Token 738: ' try' (ID: 2075)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10520434379577637
    2. 'count' → logprob: -2.3552043437957764
    3. '_,' → logprob: -6.2302045822143555
    4. 'final' → logprob: -6.7302045822143555
    5. '       ' → logprob: -7.2302045822143555
    6. 'cnt' → logprob: -7.9802045822143555
    7. 'res' → logprob: -8.105204582214355
    8. ' c' → logprob: -8.855204582214355
    9. 'result' → logprob: -8.980204582214355
    10. '   ' → logprob: -9.480204582214355

Token 739: ' both' (ID: 2973)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10099499672651291
    2. 'count' → logprob: -2.6009950637817383
    3. '       ' → logprob: -4.850995063781738
    4. '_,' → logprob: -5.225995063781738
    5. '
' → logprob: -6.350995063781738
    6. ' c' → logprob: -6.475995063781738
    7. 'mst' → logprob: -6.725995063781738
    8. '   ' → logprob: -7.225995063781738
    9. 'cnt' → logprob: -7.350995063781738
    10. '           ' → logprob: -7.725995063781738

Token 740: ' ends' (ID: 17095)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25332435965538025
    2. 'for' → logprob: -2.753324270248413
    3. '
' → logprob: -3.128324270248413
    4. '       ' → logprob: -3.378324270248413
    5. ' c' → logprob: -4.003324508666992
    6. ' for' → logprob: -4.003324508666992
    7. '        
' → logprob: -4.128324508666992
    8. 'left' → logprob: -5.128324508666992
    9. 'mid' → logprob: -5.503324508666992
    10. 'a' → logprob: -5.753324508666992

Token 741: ' around' (ID: 2846)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0524551086127758
    2. '
' → logprob: -3.802455186843872
    3. '        
' → logprob: -3.927455186843872
    4. 'c' → logprob: -5.302454948425293
    5. ',' → logprob: -6.552454948425293
    6. ' c' → logprob: -6.927454948425293
    7. ' for' → logprob: -7.552454948425293
    8. '    
' → logprob: -8.802454948425293
    9. 'for' → logprob: -8.802454948425293
    10. '   ' → logprob: -8.802454948425293

Token 742: ' left' (ID: 3561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.508427619934082
    2. 'for' → logprob: -1.508427619934082
    3. ' for' → logprob: -2.008427619934082
    4. 'c' → logprob: -3.883427619934082
    5. ' c' → logprob: -5.258427619934082
    6. 'ans' → logprob: -5.633427619934082
    7. '        
' → logprob: -5.758427619934082
    8. 'vals' → logprob: -6.758427619934082
    9. '       ' → logprob: -7.008427619934082
    10. ':' → logprob: -7.383427619934082

Token 743: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0406273677945137
    2. ',' → logprob: -3.9156274795532227
    3. '        
' → logprob: -4.790627479553223
    4. '
' → logprob: -4.915627479553223
    5. ' for' → logprob: -6.415627479553223
    6. ',
' → logprob: -7.915627479553223
    7. 'c' → logprob: -8.040627479553223
    8. ' and' → logprob: -8.040627479553223
    9. ' c' → logprob: -8.290627479553223
    10. ':' → logprob: -8.290627479553223

Token 744: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.9915841817855835
    2. '
' → logprob: -1.8665841817855835
    3. 'get' → logprob: -1.8665841817855835
    4. ' find' → logprob: -2.116584300994873
    5. ' get' → logprob: -2.491584300994873
    6. 'ensure' → logprob: -3.491584300994873
    7. 'c' → logprob: -3.991584300994873
    8. 'final' → logprob: -4.241584300994873
    9. 'confirm' → logprob: -5.116584300994873
    10. 'ans' → logprob: -5.116584300994873

Token 745: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6296372413635254
    2. 'the' → logprob: -1.7546372413635254
    3. ' the' → logprob: -2.0046372413635254
    4. ' best' → logprob: -3.1296372413635254
    5. 'final' → logprob: -3.1296372413635254
    6. 'minimum' → logprob: -4.504637241363525
    7. 'minimal' → logprob: -4.629637241363525
    8. ' minimal' → logprob: -4.629637241363525
    9. 'min' → logprob: -4.754637241363525
    10. ' final' → logprob: -5.004637241363525

Token 746: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0693920850753784
    2. 'cost' → logprob: -1.9443920850753784
    3. 'result' → logprob: -2.069392204284668
    4. ' cost' → logprob: -2.194392204284668
    5. ' result' → logprob: -2.444392204284668
    6. 'c' → logprob: -2.944392204284668
    7. ' ans' → logprob: -3.569392204284668
    8. 'answer' → logprob: -4.444392204284668
    9. ' answer' → logprob: -4.444392204284668
    10. 'res' → logprob: -4.444392204284668

Token 747: '       ' (ID: 309)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.1090034618973732
    2. 'result' → logprob: -3.8590035438537598
    3. ' best' → logprob: -3.9840035438537598
    4. 'c' → logprob: -4.10900354385376
    5. '       ' → logprob: -4.10900354385376
    6. 'final' → logprob: -4.98400354385376
    7. 'for' → logprob: -5.48400354385376
    8. 'res' → logprob: -5.60900354385376
    9. 'ans' → logprob: -5.98400354385376
    10. 'possible' → logprob: -6.10900354385376

Token 748: ' candidates' (ID: 18116)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6206102967262268
    2. 'c' → logprob: -1.495610237121582
    3. 'res' → logprob: -1.870610237121582
    4. 'for' → logprob: -2.745610237121582
    5. 'result' → logprob: -4.870610237121582
    6. 'results' → logprob: -5.245610237121582
    7. 'possible' → logprob: -5.995610237121582
    8. '       ' → logprob: -6.495610237121582
    9. 'final' → logprob: -6.995610237121582
    10. ' candidates' → logprob: -7.370610237121582

Token 749: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889363914728165
    2. '=' → logprob: -2.5788936614990234
    3. '=[]' → logprob: -12.828893661499023
    4. '=[' → logprob: -14.453893661499023
    5. '=[
' → logprob: -15.453893661499023
    6. '=[]
' → logprob: -15.578893661499023
    7. ' =[' → logprob: -15.953893661499023
    8. '```' → logprob: -16.953893661499023
    9. ',' → logprob: -17.328893661499023
    10. '＝' → logprob: -17.703893661499023

Token 750: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.33251670002937317
    2. '[]
' → logprob: -1.3325166702270508
    3. '[
' → logprob: -4.582516670227051
    4. '[' → logprob: -4.832516670227051
    5. '[(' → logprob: -7.332516670227051
    6. '[c' → logprob: -9.45751667022705
    7. '[]

' → logprob: -9.70751667022705
    8. '[int' → logprob: -10.58251667022705
    9. '[left' → logprob: -10.83251667022705
    10. ' []' → logprob: -12.08251667022705

Token 751: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06653434038162231
    2. ' for' → logprob: -3.1915342807769775
    3. 'c' → logprob: -4.316534519195557
    4. '       ' → logprob: -4.691534519195557
    5. ' candidates' → logprob: -7.691534519195557
    6. '
' → logprob: -8.566534042358398
    7. '```' → logprob: -10.066534042358398
    8. '_candidates' → logprob: -11.441534042358398
    9. '           ' → logprob: -11.816534042358398
    10. '        
' → logprob: -11.941534042358398

Token 752: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005742399953305721
    2. 'c' → logprob: -7.500574111938477
    3. '
' → logprob: -11.125574111938477
    4. ' for' → logprob: -12.000574111938477
    5. '        
' → logprob: -15.250574111938477
    6. ' candidates' → logprob: -16.000574111938477
    7. '```' → logprob: -17.125574111938477
    8. '       ' → logprob: -17.750574111938477
    9. '            
' → logprob: -18.125574111938477
    10. '[c' → logprob: -18.250574111938477

Token 753: ' test' (ID: 1746)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.39821985363960266
    2. ' x' → logprob: -1.3982198238372803
    3. ' delta' → logprob: -3.3982198238372803
    4. 'delta' → logprob: -3.6482198238372803
    5. 'dx' → logprob: -4.773220062255859
    6. ' dx' → logprob: -5.648220062255859
    7. ' mid' → logprob: -5.773220062255859
    8. 'mid' → logprob: -6.148220062255859
    9. 'adj' → logprob: -6.648220062255859
    10. '_x' → logprob: -7.523220062255859

Token 754: 'X' (ID: 55)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07894520461559296
    2. ' in' → logprob: -2.5789451599121094
    3. 'x' → logprob: -10.57894515991211
    4. '_in' → logprob: -11.32894515991211
    5. '_x' → logprob: -12.07894515991211
    6. ' ' → logprob: -12.20394515991211
    7. '_' → logprob: -12.95394515991211
    8. 'test' → logprob: -13.45394515991211
    9. 'i' → logprob: -14.07894515991211
    10. '_test' → logprob: -14.07894515991211

Token 755: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693114578723907
    2. 'in' → logprob: -2.1269311904907227
    3. ' ' → logprob: -13.876931190490723
    4. 'range' → logprob: -14.251931190490723
    5. 'n' → logprob: -14.751931190490723
    6. '	in' → logprob: -15.126931190490723
    7. '```' → logprob: -16.251930236816406
    8. 'test' → logprob: -16.376930236816406
    9. 'In' → logprob: -16.376930236816406
    10. '   ' → logprob: -16.501930236816406

Token 756: ' [' (ID: 723)
  Prédit: '[left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.0004966750275343657
    2. ' [' → logprob: -8.625496864318848
    3. '(left' → logprob: -9.125496864318848
    4. '[int' → logprob: -9.250496864318848
    5. '[' → logprob: -9.500496864318848
    6. '[right' → logprob: -10.750496864318848
    7. 'left' → logprob: -11.375496864318848
    8. ' left' → logprob: -13.625496864318848
    9. '[
' → logprob: -14.125496864318848
    10. '[-' → logprob: -14.750496864318848

Token 757: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00045081099960952997
    2. ' left' → logprob: -8.00045108795166
    3. 'int' → logprob: -9.12545108795166
    4. '   ' → logprob: -12.50045108795166
    5. '	left' → logprob: -14.37545108795166
    6. ' ' → logprob: -14.87545108795166
    7. 'right' → logprob: -15.00045108795166
    8. '[left' → logprob: -15.50045108795166
    9. '           ' → logprob: -15.75045108795166
    10. ',left' → logprob: -15.75045108795166

Token 758: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06522145867347717
    2. '-' → logprob: -3.5652215480804443
    3. ' -' → logprob: -4.065221309661865
    4. ',right' → logprob: -4.690221309661865
    5. ' ,' → logprob: -4.815221309661865
    6. ',left' → logprob: -8.315221786499023
    7. '+' → logprob: -9.440221786499023
    8. ',
' → logprob: -10.565221786499023
    9. ' +' → logprob: -11.065221786499023
    10. '           ' → logprob: -11.815221786499023

Token 759: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.001624952768906951
    2. ' right' → logprob: -7.001625061035156
    3. 'left' → logprob: -7.251625061035156
    4. '(right' → logprob: -13.876625061035156
    5. '	right' → logprob: -14.126625061035156
    6. '   ' → logprob: -14.501625061035156
    7. '
' → logprob: -14.626625061035156
    8. ' left' → logprob: -14.876625061035156
    9. 'Right' → logprob: -15.501625061035156
    10. ' ' → logprob: -15.751625061035156

Token 760: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6348057985305786
    2. ']:
' → logprob: -0.7598057985305786
    3. ']:' → logprob: -7.384805679321289
    4. '       ' → logprob: -7.884805679321289
    5. ',
' → logprob: -8.009805679321289
    6. ']:
' → logprob: -8.509805679321289
    7. ' ,' → logprob: -8.634805679321289
    8. '           ' → logprob: -9.259805679321289
    9. ']' → logprob: -9.259805679321289
    10. '+' → logprob: -9.759805679321289

Token 761: ' (' (ID: 350)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.08341105282306671
    2. ' left' → logprob: -3.2084109783172607
    3. '(left' → logprob: -3.7084109783172607
    4. ' (' → logprob: -4.45841121673584
    5. 'mid' → logprob: -6.08341121673584
    6. '0' → logprob: -8.33341121673584
    7. ' mid' → logprob: -8.33341121673584
    8. '(' → logprob: -8.70841121673584
    9. 'right' → logprob: -8.70841121673584
    10. ' ' → logprob: -9.45841121673584

Token 762: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00011999329581158236
    2. '(left' → logprob: -9.125120162963867
    3. ' left' → logprob: -11.750120162963867
    4. 'right' → logprob: -12.875120162963867
    5. '(' → logprob: -15.500120162963867
    6. '
' → logprob: -15.875120162963867
    7. '0' → logprob: -16.625120162963867
    8. '	left' → logprob: -16.875120162963867
    9. '[left' → logprob: -17.000120162963867
    10. 'mid' → logprob: -17.250120162963867

Token 763: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519424259662628
    2. ' +' → logprob: -1.5019423961639404
    3. '+
' → logprob: -11.87694263458252
    4. '-' → logprob: -13.00194263458252
    5. ' -' → logprob: -13.75194263458252
    6. ' +
' → logprob: -14.62694263458252
    7. '+r' → logprob: -15.00194263458252
    8. '
' → logprob: -15.12694263458252
    9. '＋' → logprob: -15.25194263458252
    10. '+k' → logprob: -15.62694263458252

Token 764: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0017078984528779984
    2. ' right' → logprob: -6.376708030700684
    3. '   ' → logprob: -12.751708030700684
    4. '
' → logprob: -13.501708030700684
    5. ' ' → logprob: -14.376708030700684
    6. '	right' → logprob: -14.751708030700684
    7. '[right' → logprob: -16.251707077026367
    8. '  ' → logprob: -17.001707077026367
    9. '    
' → logprob: -17.251707077026367
    10. '(right' → logprob: -17.251707077026367

Token 765: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.013232704252004623
    2. ')' → logprob: -4.388232707977295
    3. ')//' → logprob: -7.263232707977295
    4. ' )' → logprob: -10.763232231140137
    5. ')*' → logprob: -14.888232231140137
    6. ')
' → logprob: -15.638232231140137
    7. '   ' → logprob: -17.013233184814453
    8. ')#' → logprob: -17.263233184814453
    9. ')>>' → logprob: -17.513233184814453
    10. ' ' → logprob: -17.763233184814453

Token 766: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. '3' → logprob: -12.625004768371582
    3. ' ' → logprob: -14.250004768371582
    4. '   ' → logprob: -14.750004768371582
    5. '```' → logprob: -15.375004768371582
    6. '
' → logprob: -16.2500057220459
    7. '=' → logprob: -16.5000057220459
    8. '  ' → logprob: -17.3125057220459
    9. '２' → logprob: -17.6875057220459
    10. '

' → logprob: -17.8125057220459

Token 767: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.005863136146217585
    2. ',' → logprob: -5.630863189697266
    3. ']:' → logprob: -6.505863189697266
    4. ']:
' → logprob: -8.130863189697266
    5. ' ]' → logprob: -8.505863189697266
    6. '       ' → logprob: -9.380863189697266
    7. ']:

' → logprob: -9.380863189697266
    8. ']' → logprob: -10.755863189697266
    9. '   ' → logprob: -10.880863189697266
    10. '           ' → logprob: -11.255863189697266

Token 768: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023142756894230843
    2. '
' → logprob: -3.8981428146362305
    3. ' c' → logprob: -6.7731428146362305
    4. ',' → logprob: -7.5231428146362305
    5. '   ' → logprob: -8.52314281463623
    6. ':
' → logprob: -8.77314281463623
    7. ',c' → logprob: -9.27314281463623
    8. '       ' → logprob: -9.39814281463623
    9. '            
' → logprob: -9.64814281463623
    10. ' for' → logprob: -10.02314281463623

Token 769: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.4634031057357788
    2. ' c' → logprob: -1.0884031057357788
    3. '           ' → logprob: -3.4634032249450684
    4. '   ' → logprob: -6.713403224945068
    5. '
' → logprob: -7.713403224945068
    6. 'result' → logprob: -8.21340274810791
    7. ' result' → logprob: -8.83840274810791
    8. 'count' → logprob: -8.96340274810791
    9. '               ' → logprob: -8.96340274810791
    10. ' ' → logprob: -9.58840274810791

Token 770: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.460291767027229e-05
    2. ',' → logprob: -9.375094413757324
    3. '_A' → logprob: -12.875094413757324
    4. '=' → logprob: -13.500094413757324
    5. 'a' → logprob: -13.500094413757324
    6. ',A' → logprob: -13.625094413757324
    7. '_,' → logprob: -14.625094413757324
    8. '_' → logprob: -14.625094413757324
    9. ' A' → logprob: -14.625094413757324
    10. '_test' → logprob: -15.000094413757324

Token 771: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028785800095647573
    2. ',c' → logprob: -5.877878665924072
    3. '=' → logprob: -9.752878189086914
    4. ' ,' → logprob: -11.877878189086914
    5. ',count' → logprob: -13.252878189086914
    6. ',result' → logprob: -13.377878189086914
    7. ' =' → logprob: -14.127878189086914
    8. ',total' → logprob: -14.127878189086914
    9. ',test' → logprob: -14.502878189086914
    10. ',status' → logprob: -15.127878189086914

Token 772: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.632645308971405
    2. 'cost' → logprob: -0.757645308971405
    3. 'c' → logprob: -10.757645606994629
    4. ' c' → logprob: -12.132645606994629
    5. 'result' → logprob: -12.757645606994629
    6. ' total' → logprob: -13.007645606994629
    7. 'total' → logprob: -13.007645606994629
    8. ' result' → logprob: -13.257645606994629
    9. 'res' → logprob: -13.632645606994629
    10. ' res' → logprob: -13.632645606994629

Token 773: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16025438904762268
    2. ' =' → logprob: -1.9102543592453003
    3. '           ' → logprob: -10.91025447845459
    4. '=c' → logprob: -11.41025447845459
    5. ',' → logprob: -15.66025447845459
    6. '       ' → logprob: -16.285253524780273
    7. ' ' → logprob: -16.410253524780273
    8. '=test' → logprob: -16.410253524780273
    9. '               ' → logprob: -16.660253524780273
    10. '=_' → logprob: -16.910253524780273

Token 774: ' mst' (ID: 179099)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.048592254519462585
    2. ' mst' → logprob: -3.0485923290252686
    3. '   ' → logprob: -13.048592567443848
    4. 'mnt' → logprob: -14.298592567443848
    5. ' ' → logprob: -14.298592567443848
    6. 'm' → logprob: -15.173592567443848
    7. 'ms' → logprob: -15.423592567443848
    8. 'msc' → logprob: -15.548592567443848
    9. 'mts' → logprob: -15.673592567443848
    10. ' mts' → logprob: -16.17359161376953

Token 775: '(test' (ID: 16066)
  Prédit: '(test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(test' → logprob: -0.0004402055055834353
    2. '(int' → logprob: -7.7504401206970215
    3. 'int' → logprob: -12.37544059753418
    4. 'test' → logprob: -12.37544059753418
    5. '(round' → logprob: -14.12544059753418
    6. '(' → logprob: -15.50044059753418
    7. '[test' → logprob: -16.75044059753418
    8. ' (' → logprob: -17.12544059753418
    9. '(
' → logprob: -17.75044059753418
    10. '((' → logprob: -17.75044059753418

Token 776: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.8624639324116288e-06
    2. '(test' → logprob: -13.375001907348633
    3. ' X' → logprob: -16.250001907348633
    4. 'x' → logprob: -16.625001907348633
    5. 'test' → logprob: -16.875001907348633
    6. ')' → logprob: -18.000001907348633
    7. '[test' → logprob: -19.000001907348633
    8. '```' → logprob: -19.250001907348633
    9. '(' → logprob: -19.500001907348633
    10. ')test' → logprob: -19.750001907348633

Token 777: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0022582602687180042
    2. '           ' → logprob: -6.37725830078125
    3. ')' → logprob: -7.50225830078125
    4. ')
' → logprob: -12.75225830078125
    5. ' )
' → logprob: -14.50225830078125
    6. '       ' → logprob: -14.75225830078125
    7. '())
' → logprob: -15.87725830078125
    8. '               ' → logprob: -16.50225830078125
    9. ')

' → logprob: -17.50225830078125
    10. '          ' → logprob: -17.75225830078125

Token 778: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.376848902320489e-05
    2. ' if' → logprob: -10.250093460083008
    3. 'if' → logprob: -10.375093460083008
    4. '       ' → logprob: -11.125093460083008
    5. '<|end|>' → logprob: -12.625093460083008
    6. '   ' → logprob: -12.875093460083008
    7. '
' → logprob: -13.500093460083008
    8. ',' → logprob: -13.625093460083008
    9. '```' → logprob: -13.750093460083008
    10. '               ' → logprob: -13.750093460083008

Token 779: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15222027897834778
    2. 'if' (adapté à ' if') → logprob: -2.6522202491760254
    3. ' if' → logprob: -2.6522202491760254
    4. '       ' → logprob: -8.777220726013184
    5. '   ' → logprob: -10.277220726013184
    6. '               ' → logprob: -11.902220726013184
    7. '
' → logprob: -12.652220726013184
    8. '          ' → logprob: -12.652220726013184
    9. '```' → logprob: -12.902220726013184
    10. ' ' → logprob: -12.902220726013184

Token 780: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2519676387310028
    2. ' c' → logprob: -1.5019676685333252
    3. '           ' → logprob: -11.126967430114746
    4. 'cost' → logprob: -11.376967430114746
    5. ' cost' → logprob: -12.126967430114746
    6. '   ' → logprob: -12.626967430114746
    7. ' ' → logprob: -14.126967430114746
    8. '    ' → logprob: -14.376967430114746
    9. '               ' → logprob: -14.626967430114746
    10. '	c' → logprob: -15.001967430114746

Token 781: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1398757123970427e-05
    2. 'c' → logprob: -12.500011444091797
    3. '_A' → logprob: -12.500011444091797
    4. ' A' → logprob: -13.750011444091797
    5. 'a' → logprob: -14.500011444091797
    6. 'А' → logprob: -14.625011444091797
    7. '_' → logprob: -14.750011444091797
    8. '=' → logprob: -15.125011444091797
    9. ' is' → logprob: -16.375011444091797
    10. '```' → logprob: -16.375011444091797

Token 782: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07678165286779404
    2. 'is' → logprob: -3.451781749725342
    3. '==' → logprob: -3.701781749725342
    4. ' ==' → logprob: -4.076781749725342
    5. '!=' → logprob: -8.076781272888184
    6. ' !=' → logprob: -8.701781272888184
    7. ' not' → logprob: -9.826781272888184
    8. '=' → logprob: -11.326781272888184
    9. 'not' → logprob: -11.701781272888184
    10. '===' → logprob: -12.076781272888184

Token 783: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001234428636962548
    2. ' k' → logprob: -9.000123023986816
    3. '   ' → logprob: -21.125123977661133
    4. '	k' → logprob: -21.375123977661133
    5. ' ' → logprob: -22.625123977661133
    6. '=k' → logprob: -23.000123977661133
    7. '
' → logprob: -23.125123977661133
    8. '{k' → logprob: -23.375123977661133
    9. '  ' → logprob: -23.750123977661133
    10. ' к' → logprob: -24.000123977661133

Token 784: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07275492697954178
    2. ':
' → logprob: -2.9477548599243164
    3. '           ' → logprob: -4.572754859924316
    4. 'and' → logprob: -5.572754859924316
    5. '               ' → logprob: -5.947754859924316
    6. ':' → logprob: -7.072754859924316
    7. '       ' → logprob: -10.197754859924316
    8. '          ' → logprob: -10.697754859924316
    9. '              ' → logprob: -11.072754859924316
    10. ',' → logprob: -11.322754859924316

Token 785: ' cost' (ID: 3097)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.14885376393795013
    2. 'cost' → logprob: -2.3988537788391113
    3. ' (' → logprob: -3.5238537788391113
    4. ' cost' → logprob: -4.898853778839111
    5. '(ans' → logprob: -5.023853778839111
    6. '(c' → logprob: -5.648853778839111
    7. 'ans' → logprob: -9.273853302001953
    8. 'c' → logprob: -9.523853302001953
    9. ' ans' → logprob: -9.648853302001953
    10. '(candidate' → logprob: -10.523853302001953

Token 786: ' is' (ID: 382)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6363759636878967
    2. ' !=' → logprob: -1.386375904083252
    3. ' is' → logprob: -1.636375904083252
    4. 'is' → logprob: -4.136375904083252
    5. '!=-' → logprob: -4.886375904083252
    6. '>=' → logprob: -6.511375904083252
    7. ' not' → logprob: -7.761375904083252
    8. 'not' → logprob: -7.886375904083252
    9. ')' → logprob: -8.88637638092041
    10. ' >=' → logprob: -9.88637638092041

Token 787: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.11286915838718414
    2. ' not' → logprob: -2.2378692626953125
    3. '           ' → logprob: -10.612869262695312
    4. '               ' → logprob: -12.112869262695312
    5. '!=' → logprob: -12.862869262695312
    6. '!' → logprob: -13.112869262695312
    7. '                   ' → logprob: -13.237869262695312
    8. '```' → logprob: -13.737869262695312
    9. '	not' → logprob: -13.862869262695312
    10. '                       ' → logprob: -13.862869262695312

Token 788: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.000158842682139948
    2. ' None' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.50015926361084
    4. 'none' → logprob: -17.125158309936523
    5. '(None' → logprob: -17.375158309936523
    6. '           ' → logprob: -17.875158309936523
    7. 'not' → logprob: -18.125158309936523
    8. '0' → logprob: -18.375158309936523
    9. '```' → logprob: -18.375158309936523
    10. '-' → logprob: -18.375158309936523

Token 789: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7936486601829529
    2. '               ' → logprob: -0.9186486601829529
    3. ':' → logprob: -1.9186487197875977
    4. ' and' → logprob: -7.168648719787598
    5. '):
' → logprob: -7.293648719787598
    6. ',' → logprob: -8.168648719787598
    7. '           ' → logprob: -9.418648719787598
    8. '              ' → logprob: -10.418648719787598
    9. '<|end|>' → logprob: -11.043648719787598
    10. '                   ' → logprob: -11.543648719787598

Token 790: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4736459888808895e-05
    2. ' candidates' → logprob: -13.000014305114746
    3. '              ' → logprob: -13.000014305114746
    4. '```' → logprob: -13.250014305114746
    5. ',' → logprob: -13.375014305114746
    6. '<|end|>' → logprob: -13.500014305114746
    7. '           ' → logprob: -13.625014305114746
    8. '                   ' → logprob: -14.000014305114746
    9. '   ' → logprob: -14.250014305114746
    10. '	           ' → logprob: -15.000014305114746

Token 791: ' candidates' (ID: 18116)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029126832261681557
    2. ' candidates' → logprob: -4.4041266441345215
    3. '
' → logprob: -5.4041266441345215
    4. '                   ' → logprob: -5.5291266441345215
    5. 'c' → logprob: -5.6541266441345215
    6. '   ' → logprob: -6.1541266441345215
    7. 'ans' → logprob: -6.4041266441345215
    8. 'if' → logprob: -8.77912712097168
    9. ' ans' → logprob: -8.77912712097168
    10. '           ' → logprob: -9.15412712097168

Token 792: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.1782583391759545e-05
    2. '.' → logprob: -10.375031471252441
    3. ').' → logprob: -15.875031471252441
    4. ' .' → logprob: -16.125032424926758
    5. '].' → logprob: -16.625032424926758
    6. '.extend' → logprob: -16.750032424926758
    7. '.app' → logprob: -17.250032424926758
    8. 'append' → logprob: -17.250032424926758
    9. '.setdefault' → logprob: -18.125032424926758
    10. '.add' → logprob: -18.500032424926758

Token 793: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.018170781433582306
    2. '((' → logprob: -4.0181708335876465
    3. 'cost' → logprob: -10.893170356750488
    4. '(' → logprob: -13.018170356750488
    5. ' cost' → logprob: -16.518171310424805
    6. ' (' → logprob: -17.018171310424805
    7. '(price' → logprob: -18.393171310424805
    8. '(color' → logprob: -19.393171310424805
    9. '(c' → logprob: -19.643171310424805
    10. ' ((' → logprob: -19.643171310424805

Token 794: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4328944981098175
    2. ')' → logprob: -1.4328944683074951
    3. '       ' → logprob: -2.182894468307495
    4. '   ' → logprob: -11.307894706726074
    5. '           ' → logprob: -11.932894706726074
    6. ')
' → logprob: -12.432894706726074
    7. ')

' → logprob: -12.432894706726074
    8. '
' → logprob: -12.807894706726074
    9. '               ' → logprob: -13.432894706726074
    10. '      ' → logprob: -13.432894706726074

Token 795: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02041715383529663
    2. 'if' → logprob: -4.145417213439941
    3. ' if' → logprob: -5.770417213439941
    4. '
' → logprob: -6.895417213439941
    5. 'print' → logprob: -9.395417213439941
    6. '   ' → logprob: -9.395417213439941
    7. '        
' → logprob: -10.145417213439941
    8. '```' → logprob: -10.520417213439941
    9. '           ' → logprob: -12.145417213439941
    10. 'return' → logprob: -14.145417213439941

Token 796: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13734880089759827
    2. '       ' → logprob: -2.1373488903045654
    3. 'print' → logprob: -4.637348651885986
    4. ' if' → logprob: -7.762348651885986
    5. '
' → logprob: -9.012349128723145
    6. '```' → logprob: -9.387349128723145
    7. '   ' → logprob: -10.137349128723145
    8. 'return' → logprob: -12.512349128723145
    9. 'answer' → logprob: -12.887349128723145
    10. '        
' → logprob: -13.387349128723145

Token 797: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07893947511911392
    2. ' candidates' → logprob: -2.578939437866211
    3. 'len' → logprob: -10.453939437866211
    4. ' len' → logprob: -11.328939437866211
    5. ' not' → logprob: -12.078939437866211
    6. '   ' → logprob: -13.203939437866211
    7. ' c' → logprob: -14.453939437866211
    8. 'not' → logprob: -14.828939437866211
    9. ' ' → logprob: -16.20393943786621
    10. '	c' → logprob: -16.32893943786621

Token 798: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18074040114879608
    2. ':
' → logprob: -1.8057403564453125
    3. 'and' → logprob: -8.055740356445312
    4. '):
' → logprob: -8.680740356445312
    5. '=' → logprob: -9.305740356445312
    6. ')' → logprob: -9.555740356445312
    7. '!=' → logprob: -9.680740356445312
    8. '):' → logprob: -9.930740356445312
    9. 'not' → logprob: -9.930740356445312
    10. '==' → logprob: -10.180740356445312

Token 799: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01984945498406887
    2. 'print' → logprob: -4.5198493003845215
    3. '       ' → logprob: -5.2698493003845215
    4. ' print' → logprob: -5.8948493003845215
    5. '   ' → logprob: -7.1448493003845215
    6. '	       ' → logprob: -10.51984977722168
    7. '```' → logprob: -10.64484977722168
    8. '               ' → logprob: -11.51984977722168
    9. '<|end|>' → logprob: -12.51984977722168
    10. ' ans' → logprob: -12.89484977722168

Token 800: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005037117283791304
    2. '       ' → logprob: -6.005037307739258
    3. ' print' → logprob: -6.005037307739258
    4. '           ' → logprob: -9.755037307739258
    5. '   ' → logprob: -10.380037307739258
    6. '
' → logprob: -13.630037307739258
    7. '	print' → logprob: -13.755037307739258
    8. '```' → logprob: -15.505037307739258
    9. '               ' → logprob: -16.130037307739258
    10. '        
' → logprob: -16.630037307739258

Token 801: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759394764900208
    2. ' =' → logprob: -0.8259394764900208
    3. '＝' → logprob: -17.075939178466797
    4. '   ' → logprob: -18.825939178466797
    5. '=
' → logprob: -18.825939178466797
    6. '=int' → logprob: -19.075939178466797
    7. '=

' → logprob: -19.200939178466797
    8. '=max' → logprob: -19.325939178466797
    9. ' =
' → logprob: -19.325939178466797
    10. '.=' → logprob: -19.825939178466797

Token 802: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.836499985889532e-05
    2. ' min' → logprob: -9.7500581741333
    3. '(min' → logprob: -18.875059127807617
    4. 'max' → logprob: -20.000059127807617
    5. '	min' → logprob: -21.000059127807617
    6. 'minimum' → logprob: -21.125059127807617
    7. '[min' → logprob: -21.500059127807617
    8. '=min' → logprob: -21.625059127807617
    9. ',min' → logprob: -22.875059127807617
    10. 'str' → logprob: -23.125059127807617

Token 803: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.4121114822482923e-06
    2. 'c' → logprob: -13.125003814697266
    3. '(' → logprob: -14.625003814697266
    4. '(ans' → logprob: -14.625003814697266
    5. '(
' → logprob: -15.125003814697266
    6. '(candidate' → logprob: -15.875003814697266
    7. ')c' → logprob: -17.750003814697266
    8. 'ans' → logprob: -18.250003814697266
    9. '©' → logprob: -19.750003814697266
    10. ' (' → logprob: -19.750003814697266

Token 804: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.0011041370453312993
    2. 'and' → logprob: -7.376104354858398
    3. 'c' → logprob: -8.251104354858398
    4. '(c' → logprob: -8.501104354858398
    5. 'andid' → logprob: -12.501104354858398
    6. '_candidates' → logprob: -12.876104354858398
    7. 'andi' → logprob: -13.001104354858398
    8. '(' → logprob: -13.751104354858398
    9. '[c' → logprob: -13.876104354858398
    10. 'andidate' → logprob: -14.501104354858398

Token 805: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4779030382633209
    2. ')
' → logprob: -0.9779030084609985
    3. '       ' → logprob: -5.602902889251709
    4. 'else' → logprob: -10.477903366088867
    5. '())
' → logprob: -10.727903366088867
    6. '())' → logprob: -10.977903366088867
    7. '
' → logprob: -10.977903366088867
    8. '()
' → logprob: -11.227903366088867
    9. '           ' → logprob: -12.227903366088867
    10. '   ' → logprob: -12.352903366088867

Token 806: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029340088367462158
    2. 'print' → logprob: -3.7793400287628174
    3. '
' → logprob: -5.5293402671813965
    4. '   ' → logprob: -6.2793402671813965
    5. '```' → logprob: -9.029339790344238
    6. '        
' → logprob: -9.279339790344238
    7. '    
' → logprob: -11.404339790344238
    8. ' print' → logprob: -12.279339790344238
    9. '<|end|>' → logprob: -14.529339790344238
    10. '	print' → logprob: -14.529339790344238

Token 807: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4743795692920685
    2. 'print' (adapté à ' print') → logprob: -0.9743795394897461
    3. '   ' → logprob: -8.224379539489746
    4. '```' → logprob: -10.849379539489746
    5. ' print' → logprob: -11.474379539489746
    6. '        
' → logprob: -12.724379539489746
    7. '
' → logprob: -13.724379539489746
    8. 'else' → logprob: -15.599379539489746
    9. '    
' → logprob: -15.599379539489746
    10. '           ' → logprob: -16.599380493164062

Token 808: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. '()' → logprob: -17.500001907348633
    4. '(answer' → logprob: -18.250001907348633
    5. ' (' → logprob: -18.875001907348633
    6. '(
' → logprob: -19.000001907348633
    7. '(f' → logprob: -19.250001907348633
    8. 'ans' → logprob: -19.625001907348633
    9. '(abs' → logprob: -20.000001907348633
    10. '((' → logprob: -20.625001907348633

Token 809: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.375000953674316
    3. '())' → logprob: -15.500000953674316
    4. ' )' → logprob: -16.500001907348633
    5. '   ' → logprob: -16.875001907348633
    6. ')`' → logprob: -17.000001907348633
    7. '()' → logprob: -17.125001907348633
    8. '")' → logprob: -17.875001907348633
    9. '`)' → logprob: -17.875001907348633
    10. '))' → logprob: -18.375001907348633

Token 810: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004167437553405762
    2. '
' → logprob: -6.254167556762695
    3. '<|end|>' → logprob: -6.879167556762695
    4. 'main' → logprob: -7.129167556762695
    5. '```' → logprob: -8.379167556762695
    6. ' if' → logprob: -9.004167556762695
    7. '  
' → logprob: -10.879167556762695
    8. '(main' → logprob: -11.754167556762695
    9. '    
' → logprob: -12.004167556762695
    10. '<|end|>' → logprob: -13.004167556762695

Token 811: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12694227695465088
    2. '__' → logprob: -2.1269421577453613
    3. '_' → logprob: -12.00194263458252
    4. '_name' → logprob: -12.37694263458252
    5. '___' → logprob: -13.37694263458252
    6. 'name' → logprob: -13.50194263458252
    7. '/__' → logprob: -15.62694263458252
    8. '____' → logprob: -15.87694263458252
    9. ' ___' → logprob: -16.001941680908203
    10. ' ' → logprob: -16.251941680908203

Token 812: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.050303876399993896
    2. ' ==' → logprob: -3.6753039360046387
    3. '==' → logprob: -3.8003039360046387
    4. 'name' → logprob: -6.925303936004639
    5. '=="' → logprob: -8.17530345916748
    6. ' __' → logprob: -10.30030345916748
    7. '=='' → logprob: -10.92530345916748
    8. '.__' → logprob: -11.67530345916748
    9. '__.__' → logprob: -11.80030345916748
    10. 'main' → logprob: -12.30030345916748

Token 813: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0206720617134124e-05
    2. '==' → logprob: -12.00001049041748
    3. '__.__' → logprob: -12.62501049041748
    4. '=="' → logprob: -14.87501049041748
    5. ' ==' → logprob: -15.87501049041748
    6. '__('' → logprob: -17.250009536743164
    7. '__
' → logprob: -17.375009536743164
    8. '___' → logprob: -17.500009536743164
    9. '__["' → logprob: -17.500009536743164
    10. '____' → logprob: -17.750009536743164

Token 814: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09797690063714981
    2. '==' → logprob: -2.4729769229888916
    3. ' ==' → logprob: -5.0979766845703125
    4. '=="' → logprob: -5.9729766845703125
    5. '=='' → logprob: -8.097976684570312
    6. '__.__' → logprob: -11.472976684570312
    7. '=' → logprob: -11.722976684570312
    8. '==
' → logprob: -12.222976684570312
    9. '===' → logprob: -13.597976684570312
    10. '___' → logprob: -13.597976684570312

Token 815: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1602746844291687
    2. ''' → logprob: -1.9102747440338135
    3. '__' → logprob: -9.910274505615234
    4. ' "__' → logprob: -13.910274505615234
    5. ' '__' → logprob: -17.535274505615234
    6. 'main' → logprob: -19.285274505615234
    7. '   ' → logprob: -19.410274505615234
    8. ''"' → logprob: -19.535274505615234
    9. '("__' → logprob: -19.660274505615234
    10. '"<?' → logprob: -19.785274505615234

Token 816: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00045926711754873395
    2. '__' → logprob: -7.87545919418335
    3. 'name' → logprob: -10.000459671020508
    4. '"' → logprob: -10.875459671020508
    5. ''' → logprob: -11.250459671020508
    6. '_main' → logprob: -14.500459671020508
    7. 'built' → logprob: -14.875459671020508
    8. ' main' → logprob: -15.000459671020508
    9. '__":
' → logprob: -16.125459671020508
    10. '(main' → logprob: -16.250459671020508

Token 817: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.023826273158192635
    2. '__' → logprob: -3.7738263607025146
    3. '__':
' → logprob: -7.5238261222839355
    4. '__.' → logprob: -11.273826599121094
    5. '__.__' → logprob: -11.273826599121094
    6. '__["' → logprob: -11.398826599121094
    7. '__:' → logprob: -14.023826599121094
    8. '__()
' → logprob: -14.148826599121094
    9. '():
' → logprob: -14.523826599121094
    10. '__
' → logprob: -14.773826599121094

Token 818: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3346730172634125
    2. '	main' → logprob: -1.3346730470657349
    3. 'main' → logprob: -3.9596729278564453
    4. ' main' → logprob: -6.209672927856445
    5. '   ' → logprob: -9.834672927856445
    6. ' ' → logprob: -11.334672927856445
    7. '	Main' → logprob: -11.459672927856445
    8. '_main' → logprob: -11.584672927856445
    9. '(main' → logprob: -12.084672927856445
    10. ' ' → logprob: -12.084672927856445

Token 819: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.2664456789934775e-06
    2. ' main' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.500001907348633
    4. '	main' → logprob: -18.250001907348633
    5. '_main' → logprob: -23.125001907348633
    6. '(main' → logprob: -23.875001907348633
    7. '.main' → logprob: -24.625001907348633
    8. ' ' → logprob: -25.125001907348633
    9. '  ' → logprob: -25.625001907348633
    10. 'Main' → logprob: -27.125001907348633

Token 820: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 818
Tokens correctement prédits (1ère position, stricte): 302
Tokens correctement prédits (1ère position, avec adaptation): 329
Tokens correctement prédits (top 10): 663
Précision stricte (1ère position): 36.92%
Précision adaptée (1ère position): 40.22%
Précision (top 10): 81.05%
================================================================================
