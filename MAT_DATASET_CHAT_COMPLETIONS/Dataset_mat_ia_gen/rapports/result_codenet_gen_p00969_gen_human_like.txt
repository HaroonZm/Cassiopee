================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
values = list(map(int, input().split()))
values.sort()

index_map = {v: i for i, v in enumerate(values)}
dp = [dict() for _ in range(n)]

max_length = 2

for i in range(n):
    for j in range(i):
        diff = values[i] - values[j]
        if diff in dp[j]:
            dp[i][diff] = dp[j][diff] + 1
        else:
            dp[i][diff] = 2
        if dp[i][diff] > max_length:
            max_length = dp[i][diff]

print(max_length)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00028266964363865554
    2. ''' → logprob: -9.000282287597656
    3. '(n' → logprob: -10.375282287597656
    4. '('' → logprob: -10.500282287597656
    5. '```' → logprob: -10.500282287597656
    6. '()' → logprob: -10.750282287597656
    7. '("("' → logprob: -11.500282287597656
    8. '(
' → logprob: -11.500282287597656
    9. '`' → logprob: -11.625282287597656
    10. ')' → logprob: -11.750282287597656

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5856168270111084
    2. ')' → logprob: -0.8356168270111084
    3. '()' → logprob: -5.0856170654296875
    4. '())' → logprob: -6.0856170654296875
    5. '(
' → logprob: -8.085617065429688
    6. '```' → logprob: -8.960617065429688
    7. '('' → logprob: -9.460617065429688
    8. '')' → logprob: -9.460617065429688
    9. '")' → logprob: -9.585617065429688
    10. '))' → logprob: -10.210617065429688

Token 5: 'values' (ID: 7222)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9201469421386719
    2. 'if' → logprob: -1.1701469421386719
    3. 'for' → logprob: -2.295146942138672
    4. 's' → logprob: -2.420146942138672
    5. ' ' → logprob: -3.795146942138672
    6. ''' → logprob: -4.420146942138672
    7. 'x' → logprob: -4.670146942138672
    8. ')' → logprob: -4.920146942138672
    9. 'a' → logprob: -5.045146942138672
    10. '`' → logprob: -5.295146942138672

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011075903894379735
    2. '.' → logprob: -7.376107692718506
    3. '[]' → logprob: -8.751107215881348
    4. ')' → logprob: -9.126107215881348
    5. '\[' → logprob: -9.876107215881348
    6. '[:]' → logprob: -10.376107215881348
    7. '[
' → logprob: -10.876107215881348
    8. '```' → logprob: -11.126107215881348
    9. 's' → logprob: -11.376107215881348
    10. '=' → logprob: -11.501107215881348

Token 7: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1968517005443573
    2. '[]' → logprob: -1.9468517303466797
    3. 'list' → logprob: -4.07185173034668
    4. ' list' → logprob: -4.07185173034668
    5. ' [' → logprob: -7.07185173034668
    6. '[' → logprob: -7.82185173034668
    7. 'input' → logprob: -8.44685173034668
    8. ' ' → logprob: -8.82185173034668
    9. '[input' → logprob: -8.94685173034668
    10. ' input' → logprob: -9.82185173034668

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025031503289937973
    2. '(values' → logprob: -3.775031566619873
    3. '(range' → logprob: -6.525031566619873
    4. '(input' → logprob: -10.025031089782715
    5. '()' → logprob: -10.400031089782715
    6. '("("' → logprob: -10.525031089782715
    7. '```' → logprob: -10.900031089782715
    8. '(
' → logprob: -10.900031089782715
    9. '(user' → logprob: -11.025031089782715
    10. '((' → logprob: -11.025031089782715

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0811626985669136
    2. '(' → logprob: -2.581162691116333
    3. ')' → logprob: -7.581162929534912
    4. '(lambda' → logprob: -7.831162929534912
    5. '<int' → logprob: -7.831162929534912
    6. '(str' → logprob: -7.956162929534912
    7. '(input' → logprob: -8.331162452697754
    8. 'int' → logprob: -8.706162452697754
    9. '=int' → logprob: -9.831162452697754
    10. '(
' → logprob: -10.081162452697754

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002916022902354598
    2. ',input' → logprob: -6.002915859222412
    3. '(' → logprob: -8.37791633605957
    4. 'input' → logprob: -9.25291633605957
    5. '=input' → logprob: -10.00291633605957
    6. ',' → logprob: -11.12791633605957
    7. '))' → logprob: -11.25291633605957
    8. ')' → logprob: -11.25291633605957
    9. '```' → logprob: -11.75291633605957
    10. ' input' → logprob: -12.62791633605957

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10022791475057602
    2. ' input' → logprob: -2.3502278327941895
    3. '(input' → logprob: -10.850228309631348
    4. ',input' → logprob: -14.225228309631348
    5. ')' → logprob: -14.600228309631348
    6. '=input' → logprob: -15.225228309631348
    7. '	input' → logprob: -15.725228309631348
    8. '<input' → logprob: -16.22522735595703
    9. ' ' → logprob: -16.35022735595703
    10. '[input' → logprob: -16.60022735595703

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7278392314910889
    2. '()))' → logprob: -0.9778392314910889
    3. '().' → logprob: -2.352839231491089
    4. '())' → logprob: -3.227839231491089
    5. '()));' → logprob: -5.602839469909668
    6. '())))' → logprob: -6.977839469909668
    7. '()>' → logprob: -7.477839469909668
    8. '(' → logprob: -8.727839469909668
    9. '());' → logprob: -9.102839469909668
    10. ')' → logprob: -9.352839469909668

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009346862207166851
    2. 'strip' → logprob: -7.000934600830078
    3. 'rstrip' → logprob: -10.750934600830078
    4. ' split' → logprob: -13.500934600830078
    5. '(split' → logprob: -15.250934600830078
    6. 'spl' → logprob: -16.250934600830078
    7. ')' → logprob: -18.250934600830078
    8. 's' → logprob: -18.500934600830078
    9. 'replace' → logprob: -18.625934600830078
    10. 'sp' → logprob: -19.250934600830078

Token 14: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6430999636650085
    2. '))' → logprob: -0.8930999636650085
    3. '(' → logprob: -3.5181000232696533
    4. '()))' → logprob: -3.6431000232696533
    5. '())' → logprob: -4.893099784851074
    6. '()' → logprob: -7.143099784851074
    7. ')))' → logprob: -7.518099784851074
    8. ''))' → logprob: -9.268099784851074
    9. '(
' → logprob: -10.018099784851074
    10. '('' → logprob: -10.143099784851074

Token 15: 'values' (ID: 7222)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5804896950721741
    2. 'total' → logprob: -2.0804896354675293
    3. 'max' → logprob: -2.4554896354675293
    4. 'sum' → logprob: -2.5804896354675293
    5. 'for' → logprob: -3.0804896354675293
    6. 'result' → logprob: -3.0804896354675293
    7. 'values' → logprob: -3.9554896354675293
    8. 'count' → logprob: -4.455489635467529
    9. 'm' → logprob: -4.955489635467529
    10. 'c' → logprob: -5.330489635467529

Token 16: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13823197782039642
    2. '.' → logprob: -2.5132319927215576
    3. '```' → logprob: -3.3882319927215576
    4. '[
' → logprob: -5.7632317543029785
    5. '<|end|>' → logprob: -5.8882317543029785
    6. '\n' → logprob: -6.5132317543029785
    7. '\[' → logprob: -6.8882317543029785
    8. ')' → logprob: -6.8882317543029785
    9. '#' → logprob: -7.2632317543029785
    10. '\' → logprob: -7.5132317543029785

Token 17: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03369941562414169
    2. '(' → logprob: -3.4086995124816895
    3. '`()' → logprob: -10.908699035644531
    4. '()`' → logprob: -11.408699035644531
    5. '())' → logprob: -12.408699035644531
    6. '```' → logprob: -12.658699035644531
    7. '()(' → logprob: -13.158699035644531
    8. '()
' → logprob: -13.408699035644531
    9. ' ()' → logprob: -13.533699035644531
    10. ']()' → logprob: -14.033699035644531

Token 18: 'index' (ID: 2257)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6075420379638672
    2. 'k' → logprob: -1.4825420379638672
    3. 'm' → logprob: -2.857542037963867
    4. 'i' → logprob: -3.482542037963867
    5. 'print' → logprob: -3.982542037963867
    6. 'c' → logprob: -4.232542037963867
    7. 'median' → logprob: -4.232542037963867
    8. 'x' → logprob: -4.732542037963867
    9. 'd' → logprob: -4.732542037963867
    10. 'if' → logprob: -4.857542037963867

Token 19: '_map' (ID: 11824)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05913054943084717
    2. '_' → logprob: -3.3091306686401367
    3. '[' → logprob: -3.9341306686401367
    4. 's' → logprob: -7.059130668640137
    5. '```' → logprob: -9.434130668640137
    6. '(
' → logprob: -9.684130668640137
    7. '+' → logprob: -9.934130668640137
    8. ')' → logprob: -10.434130668640137
    9. '0' → logprob: -10.809130668640137
    10. '\[' → logprob: -10.934130668640137

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7075961232185364
    2. ' =' → logprob: -0.7075961232185364
    3. '_' → logprob: -4.707596302032471
    4. '[' → logprob: -5.457596302032471
    5. ' ' → logprob: -7.957596302032471
    6. 's' → logprob: -8.207595825195312
    7. '_=' → logprob: -8.457595825195312
    8. '[:]' → logprob: -9.457595825195312
    9. '={}' → logprob: -10.207595825195312
    10. '(' → logprob: -10.832595825195312

Token 21: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -3.380904672667384e-05
    2. '{' → logprob: -10.750033378601074
    3. ' {}' → logprob: -11.375033378601074
    4. 'dict' → logprob: -14.250033378601074
    5. '{}

' → logprob: -16.62503433227539
    6. '{})' → logprob: -17.12503433227539
    7. '{}
' → logprob: -17.62503433227539
    8. '{},' → logprob: -18.62503433227539
    9. '{}\' → logprob: -18.62503433227539
    10. '[]' → logprob: -19.25003433227539

Token 22: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.19274121522903442
    2. 'values' → logprob: -2.3177411556243896
    3. 'value' → logprob: -2.8177411556243896
    4. 'val' → logprob: -4.692741394042969
    5. ' v' → logprob: -5.692741394042969
    6. ' values' → logprob: -6.067741394042969
    7. ' value' → logprob: -6.317741394042969
    8. '}' → logprob: -8.817741394042969
    9. ' val' → logprob: -8.942741394042969
    10. '   ' → logprob: -10.692741394042969

Token 23: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005987455137073994
    2. ':i' → logprob: -5.380987644195557
    3. ':index' → logprob: -6.630987644195557
    4. ':v' → logprob: -10.630987167358398
    5. ' :' → logprob: -11.130987167358398
    6. ':n' → logprob: -12.505987167358398
    7. ':value' → logprob: -13.755987167358398
    8. ':k' → logprob: -14.005987167358398
    9. ':l' → logprob: -15.005987167358398
    10. ':j' → logprob: -15.130987167358398

Token 24: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016359033063054085
    2. ' i' → logprob: -4.141358852386475
    3. '0' → logprob: -9.141359329223633
    4. 'idx' → logprob: -9.266359329223633
    5. '[]' → logprob: -10.016359329223633
    6. '[i' → logprob: -11.141359329223633
    7. ' ' → logprob: -11.141359329223633
    8. 'v' → logprob: -11.266359329223633
    9. 'values' → logprob: -11.391359329223633
    10. ' idx' → logprob: -11.891359329223633

Token 25: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3141483962535858
    2. 'for' → logprob: -1.3141484260559082
    3. '+' → logprob: -7.189148426055908
    4. ' ' → logprob: -9.68914794921875
    5. 'n' → logprob: -10.56414794921875
    6. '	for' → logprob: -11.18914794921875
    7. ',' → logprob: -11.68914794921875
    8. ')' → logprob: -12.18914794921875
    9. '   ' → logprob: -12.43914794921875
    10. ' +' → logprob: -12.56414794921875

Token 26: ' i' (ID: 575)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.04959352687001228
    2. ' i' → logprob: -3.674593448638916
    3. ' ' → logprob: -4.299593448638916
    4. 'v' → logprob: -4.924593448638916
    5. '_' → logprob: -7.799593448638916
    6. ' values' → logprob: -7.924593448638916
    7. '  ' → logprob: -7.924593448638916
    8. ' range' → logprob: -8.299593925476074
    9. ' (' → logprob: -9.174593925476074
    10. ' index' → logprob: -9.174593925476074

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008859686204232275
    2. ' in' → logprob: -7.875885963439941
    3. ',v' → logprob: -7.875885963439941
    4. ' ,' → logprob: -10.000885963439941
    5. ',n' → logprob: -10.750885963439941
    6. 'in' → logprob: -11.000885963439941
    7. 'n' → logprob: -11.625885963439941
    8. 'range' → logprob: -12.000885963439941
    9. '<|end|>' → logprob: -12.250885963439941
    10. ' range' → logprob: -12.375885963439941

Token 28: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.38722097873687744
    2. ' v' → logprob: -1.1372209787368774
    3. ' in' → logprob: -8.387221336364746
    4. 'value' → logprob: -9.512221336364746
    5. 'enumer' → logprob: -10.762221336364746
    6. 'in' → logprob: -11.637221336364746
    7. '<|end|>' → logprob: -12.137221336364746
    8. '	v' → logprob: -12.887221336364746
    9. ' ' → logprob: -13.137221336364746
    10. ',v' → logprob: -13.137221336364746

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5234581828117371
    2. 'in' → logprob: -0.8984581828117371
    3. 'n' → logprob: -8.898458480834961
    4. ',' → logprob: -9.773458480834961
    5. ' ' → logprob: -9.773458480834961
    6. '<|end|>' → logprob: -10.398458480834961
    7. 'enumer' → logprob: -11.023458480834961
    8. ')' → logprob: -12.023458480834961
    9. '	in' → logprob: -12.523458480834961
    10. 's' → logprob: -12.648458480834961

Token 30: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.2014152854681015
    2. 'enumer' → logprob: -1.7014153003692627
    3. '```' → logprob: -13.701415061950684
    4. ' enumer' → logprob: -15.201415061950684
    5. 'en' → logprob: -15.826415061950684
    6. '(en' → logprob: -16.451416015625
    7. 'Enumer' → logprob: -16.701416015625
    8. 'enum' → logprob: -16.701416015625
    9. ' en' → logprob: -16.826416015625
    10. ')' → logprob: -16.826416015625

Token 31: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -4.1557283111615106e-05
    2. '(' → logprob: -10.625041961669922
    3. '(sorted' → logprob: -12.000041961669922
    4. 'values' → logprob: -12.125041961669922
    5. '(value' → logprob: -13.250041961669922
    6. ' (' → logprob: -13.250041961669922
    7. ' values' → logprob: -14.375041961669922
    8. '(vals' → logprob: -14.875041961669922
    9. '(range' → logprob: -15.125041961669922
    10. ')' → logprob: -15.625041961669922

Token 32: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -2.558399319241289e-05
    2. '}' → logprob: -11.250025749206543
    3. ')' → logprob: -12.000025749206543
    4. '})' → logprob: -12.750025749206543
    5. ' )' → logprob: -13.875025749206543
    6. ')}}' → logprob: -14.500025749206543
    7. ')}
' → logprob: -14.625025749206543
    8. '))' → logprob: -15.125025749206543
    9. ']}' → logprob: -15.250025749206543
    10. ')}
' → logprob: -15.250025749206543

Token 33: 'dp' (ID: 19037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8301489949226379
    2. 'n' → logprob: -1.7051489353179932
    3. 'v' → logprob: -2.330148935317993
    4. '#' → logprob: -3.080148935317993
    5. '<|end|>' → logprob: -3.455148935317993
    6. 'a' → logprob: -3.705148935317993
    7. ' 
' → logprob: -3.830148935317993
    8. 'r' → logprob: -4.080149173736572
    9. '[' → logprob: -4.205149173736572
    10. '\n' → logprob: -4.330149173736572

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13700543344020844
    2. '[' → logprob: -2.13700532913208
    3. '=' → logprob: -4.88700532913208
    4. ' ' → logprob: -6.13700532913208
    5. '_' → logprob: -8.887005805969238
    6. ' =[' → logprob: -9.762005805969238
    7. '[:]' → logprob: -10.762005805969238
    8. '[]' → logprob: -11.137005805969238
    9. '=[' → logprob: -11.262005805969238
    10. '(' → logprob: -11.387005805969238

Token 35: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6946383118629456
    2. ' [' → logprob: -0.6946383118629456
    3. '{}' → logprob: -7.069638252258301
    4. ' {}' → logprob: -8.1946382522583
    5. '[len' → logprob: -9.1946382522583
    6. '[]' → logprob: -9.4446382522583
    7. '[-' → logprob: -9.8196382522583
    8. '[n' → logprob: -9.9446382522583
    9. '{' → logprob: -10.4446382522583
    10. ' []' → logprob: -10.6946382522583

Token 36: 'dict' (ID: 20993)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20393766462802887
    2. '1' → logprob: -1.7039376497268677
    3. '-' → logprob: -6.828937530517578
    4. 'float' → logprob: -7.203937530517578
    5. '[' → logprob: -7.828937530517578
    6. ' ' → logprob: -8.953937530517578
    7. 'False' → logprob: -10.203937530517578
    8. ']' → logprob: -10.328937530517578
    9. '100' → logprob: -10.828937530517578
    10. 'len' → logprob: -11.453937530517578

Token 37: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.20166681706905365
    2. '()' → logprob: -1.7016668319702148
    3. '()
' → logprob: -9.576666831970215
    4. '(' → logprob: -9.951666831970215
    5. '()]
' → logprob: -10.076666831970215
    6. '()}' → logprob: -10.826666831970215
    7. ' ()' → logprob: -10.826666831970215
    8. '(),' → logprob: -11.076666831970215
    9. ']()' → logprob: -11.201666831970215
    10. '())' → logprob: -12.451666831970215

Token 38: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09554150700569153
    2. 'for' → logprob: -2.470541477203369
    3. ']' → logprob: -5.970541477203369
    4. '()' → logprob: -6.095541477203369
    5. ')' → logprob: -7.345541477203369
    6. ' ' → logprob: -7.845541477203369
    7. '   ' → logprob: -8.220541954040527
    8. '}' → logprob: -8.845541954040527
    9. ')]' → logprob: -9.220541954040527
    10. ',' → logprob: -9.470541954040527

Token 39: ' _' (ID: 1175)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1593942493200302
    2. '(range' → logprob: -2.0343942642211914
    3. ' range' → logprob: -4.284394264221191
    4. ' (' → logprob: -6.284394264221191
    5. 'range' → logprob: -8.159394264221191
    6. '()' → logprob: -8.534394264221191
    7. ' _' → logprob: -9.784394264221191
    8. '_' → logprob: -10.159394264221191
    9. '(i' → logprob: -10.159394264221191
    10. ' ()' → logprob: -10.159394264221191

Token 40: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6895883083343506
    2. '(' → logprob: -1.1895883083343506
    3. 'in' → logprob: -2.0645883083343506
    4. ' in' → logprob: -3.0645883083343506
    5. '(range' → logprob: -4.06458854675293
    6. ' range' → logprob: -5.93958854675293
    7. ' ' → logprob: -8.31458854675293
    8. '(n' → logprob: -9.56458854675293
    9. 'n' → logprob: -10.06458854675293
    10. '()' → logprob: -10.31458854675293

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6945275068283081
    2. 'range' → logprob: -0.6945275068283081
    3. '(range' → logprob: -6.694527626037598
    4. 'values' → logprob: -9.569527626037598
    5. ' values' → logprob: -9.819527626037598
    6. '(values' → logprob: -11.569527626037598
    7. '(' → logprob: -12.319527626037598
    8. '	range' → logprob: -13.444527626037598
    9. ' xrange' → logprob: -14.819527626037598
    10. 'ranges' → logprob: -14.819527626037598

Token 42: '(n' (ID: 2406)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.4683572053909302
    2. '(n' → logprob: -1.2183572053909302
    3. '(range' → logprob: -2.8433570861816406
    4. '(' → logprob: -4.343357086181641
    5. '(values' → logprob: -4.968357086181641
    6. ' (' → logprob: -10.46835708618164
    7. '(s' → logprob: -10.71835708618164
    8. ' range' → logprob: -11.84335708618164
    9. '((' → logprob: -11.84335708618164
    10. '(N' → logprob: -13.09335708618164

Token 43: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.804671233519912e-05
    2. ')' → logprob: -9.75008773803711
    3. ' )' → logprob: -11.00008773803711
    4. ']' → logprob: -12.25008773803711
    5. ')]
' → logprob: -12.50008773803711
    6. ')])' → logprob: -13.62508773803711
    7. ')],' → logprob: -14.37508773803711
    8. '])]' → logprob: -14.75008773803711
    9. ')]

' → logprob: -15.00008773803711
    10. '+' → logprob: -15.00008773803711

Token 44: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002978767966851592
    2. ' for' → logprob: -5.877978801727295
    3. 'max' → logprob: -9.627978324890137
    4. 'result' → logprob: -10.002978324890137
    5. 'prev' → logprob: -11.252978324890137
    6. 'res' → logprob: -11.377978324890137
    7. 'f' → logprob: -12.127978324890137
    8. 'k' → logprob: -12.627978324890137
    9. ' ' → logprob: -12.752978324890137
    10. ')' → logprob: -12.752978324890137

Token 45: '_length' (ID: 11514)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.6619574427604675
    2. '_' → logprob: -1.2869575023651123
    3. '_length' → logprob: -1.6619575023651123
    4. '_val' → logprob: -4.911957263946533
    5. '_value' → logprob: -5.536957263946533
    6. '_l' → logprob: -5.786957263946533
    7. '_sum' → logprob: -6.786957263946533
    8. 'len' → logprob: -7.536957263946533
    9. '_diff' → logprob: -7.786957263946533
    10. '_freq' → logprob: -7.911957263946533

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010270435363054276
    2. '=' → logprob: -4.635270595550537
    3. ' ' → logprob: -7.635270595550537
    4. '_' → logprob: -10.885270118713379
    5. '[' → logprob: -12.135270118713379
    6. ' =
' → logprob: -13.135270118713379
    7. 's' → logprob: -14.260270118713379
    8. ' ' → logprob: -14.385270118713379
    9. '  ' → logprob: -14.510270118713379
    10. ')' → logprob: -14.510270118713379

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38343125581741333
    2. ' ' → logprob: -1.2584311962127686
    3. '0' → logprob: -3.3834311962127686
    4. '2' → logprob: -7.758431434631348
    5. '3' → logprob: -11.133431434631348
    6. ' ' → logprob: -12.133431434631348
    7. '  ' → logprob: -14.758431434631348
    8. '   ' → logprob: -14.758431434631348
    9. 'n' → logprob: -14.820931434631348
    10. '_' → logprob: -15.633431434631348

Token 48: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35832396149635315
    2. '2' → logprob: -1.4833239316940308
    3. '0' → logprob: -2.6083240509033203
    4. '3' → logprob: -7.48332405090332
    5. ' ' → logprob: -11.10832405090332
    6. '(' → logprob: -11.85832405090332
    7. '```' → logprob: -11.98332405090332
    8. '[' → logprob: -12.73332405090332
    9. '_' → logprob: -12.98332405090332
    10. '{}' → logprob: -13.10832405090332

Token 49: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45364910364151
    2. ' for' → logprob: -1.3286490440368652
    3. '
' → logprob: -2.5786490440368652
    4. '\n' → logprob: -4.328649044036865
    5. ' ' → logprob: -5.578649044036865
    6. '' → logprob: -6.203649044036865
    7. ' 
' → logprob: -6.328649044036865
    8. '```' → logprob: -6.828649044036865
    9. '<|end|>' → logprob: -7.328649044036865
    10. 'n' → logprob: -8.203649520874023

Token 50: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.53050296427682e-05
    2. ' for' → logprob: -9.37508487701416
    3. '```' → logprob: -14.75008487701416
    4. '	for' → logprob: -17.750085830688477
    5. 'For' → logprob: -18.625085830688477
    6. '   ' → logprob: -18.750085830688477
    7. 'f' → logprob: -18.875085830688477
    8. ')' → logprob: -19.000085830688477
    9. '`' → logprob: -19.000085830688477
    10. 'from' → logprob: -19.000085830688477

Token 51: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0002346488763578236
    2. 'i' → logprob: -9.500234603881836
    3. '_' → logprob: -9.625234603881836
    4. ' ' → logprob: -10.125234603881836
    5. ' _' → logprob: -10.125234603881836
    6. ' j' → logprob: -11.875234603881836
    7. '	i' → logprob: -13.125234603881836
    8. ' ' → logprob: -13.500234603881836
    9. '_i' → logprob: -14.500234603881836
    10. ' r' → logprob: -15.125234603881836

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02079586684703827
    2. 'in' → logprob: -3.8957958221435547
    3. ' ' → logprob: -8.395795822143555
    4. '  ' → logprob: -11.520795822143555
    5. '	in' → logprob: -12.020795822143555
    6. 'n' → logprob: -12.270795822143555
    7. ',' → logprob: -13.145795822143555
    8. 'In' → logprob: -14.395795822143555
    9. 'range' → logprob: -14.395795822143555
    10. 'import' → logprob: -14.645795822143555

Token 53: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01815333589911461
    2. 'range' → logprob: -4.018153190612793
    3. ' ' → logprob: -13.768153190612793
    4. '	range' → logprob: -13.893153190612793
    5. '(range' → logprob: -14.143153190612793
    6. ' xrange' → logprob: -15.643153190612793
    7. '  ' → logprob: -16.64315414428711
    8. ' rang' → logprob: -16.76815414428711
    9. ' ra' → logprob: -16.76815414428711
    10. '   ' → logprob: -16.76815414428711

Token 54: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03481978923082352
    2. '(n' → logprob: -3.4098198413848877
    3. ' (' → logprob: -6.784819602966309
    4. ' ' → logprob: -10.659819602966309
    5. '1' → logprob: -12.284819602966309
    6. '(range' → logprob: -12.284819602966309
    7. '(len' → logprob: -12.534819602966309
    8. ' n' → logprob: -13.159819602966309
    9. ' range' → logprob: -13.534819602966309
    10. 'n' → logprob: -13.659819602966309

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.037651799619197845
    2. ' ):' → logprob: -3.537651777267456
    3. '):
' → logprob: -5.162652015686035
    4. ')' → logprob: -6.287652015686035
    5. ' ):
' → logprob: -9.412652015686035
    6. '-' → logprob: -9.662652015686035
    7. ' )' → logprob: -10.037652015686035
    8. ' ' → logprob: -10.162652015686035
    9. ' -' → logprob: -11.412652015686035
    10. '+' → logprob: -11.412652015686035

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06116142496466637
    2. ' for' → logprob: -3.311161518096924
    3. '	for' → logprob: -3.936161518096924
    4. ' ' → logprob: -7.061161518096924
    5. '<|end|>' → logprob: -7.061161518096924
    6. '   ' → logprob: -7.686161518096924
    7. '\t' → logprob: -8.061161041259766
    8. '	s' → logprob: -8.811161041259766
    9. '	   ' → logprob: -9.186161041259766
    10. '	t' → logprob: -9.936161041259766

Token 57: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3385345935821533
    2. 'for' (adapté à ' for') → logprob: -1.3385345935821533
    3. '   ' → logprob: -3.7135345935821533
    4. ' j' → logprob: -8.338534355163574
    5. ' ' → logprob: -8.713534355163574
    6. 'j' → logprob: -9.588534355163574
    7. '	for' → logprob: -10.213534355163574
    8. '```' → logprob: -10.713534355163574
    9. '  ' → logprob: -11.088534355163574
    10. '    ' → logprob: -12.088534355163574

Token 58: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.028087113052606583
    2. 'range' → logprob: -3.6530871391296387
    3. ' j' → logprob: -6.403087139129639
    4. 'j' → logprob: -9.90308666229248
    5. '(range' → logprob: -10.52808666229248
    6. ' ' → logprob: -11.27808666229248
    7. ' i' → logprob: -11.27808666229248
    8. '_range' → logprob: -12.27808666229248
    9. ' xrange' → logprob: -12.27808666229248
    10. '   ' → logprob: -12.52808666229248

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02136431820690632
    2. 'in' → logprob: -3.896364212036133
    3. '   ' → logprob: -8.146364212036133
    4. ' ' → logprob: -8.146364212036133
    5. '(' → logprob: -9.396364212036133
    6. '    ' → logprob: -10.271364212036133
    7. '  ' → logprob: -10.646364212036133
    8. '(i' → logprob: -10.646364212036133
    9. ' i' → logprob: -10.646364212036133
    10. '	in' → logprob: -10.646364212036133

Token 60: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22670307755470276
    2. 'range' → logprob: -1.6017030477523804
    3. '(range' → logprob: -6.72670316696167
    4. '   ' → logprob: -10.351702690124512
    5. '	range' → logprob: -10.726702690124512
    6. ' i' → logprob: -11.101702690124512
    7. ' xrange' → logprob: -12.101702690124512
    8. ' ' → logprob: -12.226702690124512
    9. 'i' → logprob: -12.351702690124512
    10. '  ' → logprob: -13.851702690124512

Token 61: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1203041672706604
    2. '(' → logprob: -2.9953041076660156
    3. '(range' → logprob: -3.1203041076660156
    4. '(j' → logprob: -4.245304107666016
    5. ' range' → logprob: -5.995304107666016
    6. 'range' → logprob: -6.620304107666016
    7. ' (' → logprob: -7.495304107666016
    8. '(n' → logprob: -7.870304107666016
    9. '   ' → logprob: -10.370304107666016
    10. '(r' → logprob: -10.995304107666016

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6280369162559509
    2. '+' → logprob: -1.3780369758605957
    3. '):
' → logprob: -1.7530369758605957
    4. ' ):' → logprob: -4.128036975860596
    5. ' +' → logprob: -4.753036975860596
    6. ')' → logprob: -5.128036975860596
    7. ' ):
' → logprob: -5.878036975860596
    8. '-' → logprob: -6.003036975860596
    9. '   ' → logprob: -6.378036975860596
    10. ' ' → logprob: -6.378036975860596

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011072326451539993
    2. '    ' → logprob: -8.126107215881348
    3. ' ' → logprob: -8.501107215881348
    4. '   ' → logprob: -8.876107215881348
    5. ',' → logprob: -9.126107215881348
    6. ':' → logprob: -9.376107215881348
    7. '     ' → logprob: -10.001107215881348
    8. '        ' → logprob: -10.501107215881348
    9. '      ' → logprob: -10.501107215881348
    10. '        
' → logprob: -10.751107215881348

Token 64: ' diff' (ID: 8868)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975858747959137
    2. '=' → logprob: -3.5297586917877197
    3. ' ' → logprob: -11.90475845336914
    4. ')' → logprob: -15.02975845336914
    5. '_' → logprob: -15.02975845336914
    6. ' =
' → logprob: -15.90475845336914
    7. ']' → logprob: -16.02975845336914
    8. ' ' → logprob: -16.40475845336914
    9. 's' → logprob: -16.90475845336914
    10. ',' → logprob: -16.90475845336914

Token 66: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.01110217534005642
    2. ' values' → logprob: -4.511102199554443
    3. '	values' → logprob: -10.261101722717285
    4. '   ' → logprob: -11.636101722717285
    5. '(values' → logprob: -11.761101722717285
    6. '.values' → logprob: -13.136101722717285
    7. '       ' → logprob: -15.636101722717285
    8. 'value' → logprob: -15.886101722717285
    9. ' ' → logprob: -16.2611026763916
    10. '_values' → logprob: -16.5111026763916

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. 'i' → logprob: -12.500008583068848
    3. '[j' → logprob: -13.000008583068848
    4. '[' → logprob: -13.250008583068848
    5. ' [' → logprob: -16.25000762939453
    6. '```' → logprob: -16.37500762939453
    7. ' i' → logprob: -17.00000762939453
    8. ' ' → logprob: -17.12500762939453
    9. '   ' → logprob: -17.37500762939453
    10. '{i' → logprob: -17.75000762939453

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003387430217117071
    2. '[j' → logprob: -7.003387451171875
    3. ' ]' → logprob: -7.128387451171875
    4. '[' → logprob: -7.378387451171875
    5. '[i' → logprob: -7.878387451171875
    6. '-' → logprob: -8.003387451171875
    7. ' -' → logprob: -8.378387451171875
    8. ']-' → logprob: -9.878387451171875
    9. ')' → logprob: -10.628387451171875
    10. '   ' → logprob: -11.878387451171875

Token 69: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20142745971679688
    2. '-' → logprob: -1.7014274597167969
    3. ' ' → logprob: -11.826427459716797
    4. '[' → logprob: -13.201427459716797
    5. '-values' → logprob: -13.326427459716797
    6. '   ' → logprob: -14.576427459716797
    7. '[i' → logprob: -14.701427459716797
    8. '[j' → logprob: -14.701427459716797
    9. '-val' → logprob: -14.826427459716797
    10. ']' → logprob: -15.076427459716797

Token 70: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.009764352813363075
    2. ' values' → logprob: -4.634764194488525
    3. '	values' → logprob: -12.009764671325684
    4. '(values' → logprob: -14.259764671325684
    5. '.values' → logprob: -14.509764671325684
    6. '   ' → logprob: -15.009764671325684
    7. 'value' → logprob: -15.259764671325684
    8. ' ' → logprob: -15.259764671325684
    9. '_values' → logprob: -15.884764671325684
    10. '[' → logprob: -17.134763717651367

Token 71: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002639582962729037
    2. '[i' → logprob: -8.250264167785645
    3. '[' → logprob: -13.750264167785645
    4. 'values' → logprob: -13.750264167785645
    5. '   ' → logprob: -16.000263214111328
    6. '```' → logprob: -16.125263214111328
    7. 'j' → logprob: -16.750263214111328
    8. ' [' → logprob: -17.125263214111328
    9. '][' → logprob: -17.250263214111328
    10. 's' → logprob: -17.500263214111328

Token 72: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6460899114608765
    2. ')' → logprob: -1.1460899114608765
    3. ')
' → logprob: -2.146090030670166
    4. ']' → logprob: -3.396090030670166
    5. ']
' → logprob: -5.271090030670166
    6. ' )' → logprob: -7.521090030670166
    7. ' )
' → logprob: -8.271089553833008
    8. '
' → logprob: -8.396089553833008
    9. ')
' → logprob: -8.396089553833008
    10. '])' → logprob: -8.521089553833008

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008631584234535694
    2. 'if' → logprob: -5.133631706237793
    3. ' if' → logprob: -6.133631706237793
    4. ')' → logprob: -8.758631706237793
    5. ',' → logprob: -9.258631706237793
    6. '        
' → logprob: -9.508631706237793
    7. '```' → logprob: -9.883631706237793
    8. '<|end|>' → logprob: -10.508631706237793
    9. 'length' → logprob: -10.633631706237793
    10. 'dp' → logprob: -10.883631706237793

Token 74: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04031917825341225
    2. 'prev' → logprob: -3.6653192043304443
    3. 'length' → logprob: -5.165318965911865
    4. '       ' → logprob: -5.415318965911865
    5. 'dp' → logprob: -6.415318965911865
    6. 'k' → logprob: -6.790318965911865
    7. ' if' → logprob: -7.165318965911865
    8. 'count' → logprob: -9.040319442749023
    9. 'cnt' → logprob: -10.290319442749023
    10. ' prev' → logprob: -10.665319442749023

Token 75: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.14284370839595795
    2. ' diff' → logprob: -2.017843723297119
    3. '(diff' → logprob: -9.142843246459961
    4. '	diff' → logprob: -10.267843246459961
    5. 'values' → logprob: -11.642843246459961
    6. '   ' → logprob: -11.892843246459961
    7. ' values' → logprob: -12.517843246459961
    8. ' ' → logprob: -13.267843246459961
    9. 'd' → logprob: -13.267843246459961
    10. ' (' → logprob: -13.392843246459961

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01147476863116026
    2. 'in' → logprob: -4.511474609375
    3. ' not' → logprob: -8.011474609375
    4. 'not' → logprob: -9.511474609375
    5. ' ' → logprob: -11.261474609375
    6. ')' → logprob: -13.511474609375
    7. 'In' → logprob: -13.636474609375
    8. '>' → logprob: -13.761474609375
    9. '_in' → logprob: -14.011474609375
    10. ' в' → logprob: -14.261474609375

Token 77: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001602579141035676
    2. ' dp' → logprob: -6.751602649688721
    3. 'index' → logprob: -7.751602649688721
    4. ' index' → logprob: -13.251602172851562
    5. ' ' → logprob: -15.501602172851562
    6. '(dp' → logprob: -15.751602172851562
    7. '	dp' → logprob: -16.376602172851562
    8. '   ' → logprob: -17.876602172851562
    9. '  ' → logprob: -19.251602172851562
    10. 'd' → logprob: -19.626602172851562

Token 78: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.811348480870947e-05
    2. '[' → logprob: -10.00004768371582
    3. '[i' → logprob: -13.25004768371582
    4. ' [' → logprob: -14.87504768371582
    5. '```' → logprob: -15.37504768371582
    6. 'j' → logprob: -15.87504768371582
    7. '[
' → logprob: -16.12504768371582
    8. '   ' → logprob: -17.25004768371582
    9. '[js' → logprob: -17.62504768371582
    10. 's' → logprob: -18.37504768371582

Token 79: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.008847496472299099
    2. '}:' → logprob: -5.508847713470459
    3. ']' → logprob: -5.758847713470459
    4. '):' → logprob: -7.633847713470459
    5. ']:
' → logprob: -7.758847713470459
    6. '>:' → logprob: -8.2588472366333
    7. ':' → logprob: -8.8838472366333
    8. '']:' → logprob: -9.2588472366333
    9. ' and' → logprob: -10.1338472366333
    10. ']:
' → logprob: -10.2588472366333

Token 80: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6163877844810486
    2. ':
' → logprob: -1.7413878440856934
    3. 'dp' → logprob: -1.8663878440856934
    4. '           ' → logprob: -2.1163878440856934
    5. ' and' → logprob: -5.491387844085693
    6. ' dp' → logprob: -5.616387844085693
    7. 'and' → logprob: -7.616387844085693
    8. '):
' → logprob: -7.991387844085693
    9. '(dp' → logprob: -8.366387367248535
    10. '):' → logprob: -8.616387367248535

Token 81: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0924164280295372
    2. ' dp' → logprob: -2.467416524887085
    3. '           ' → logprob: -5.717416286468506
    4. 'length' → logprob: -8.967416763305664
    5. ' length' → logprob: -11.217416763305664
    6. '               ' → logprob: -11.217416763305664
    7. '	dp' → logprob: -11.842416763305664
    8. '(dp' → logprob: -12.342416763305664
    9. '       ' → logprob: -12.467416763305664
    10. '_dp' → logprob: -12.967416763305664

Token 82: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.06197642162442207
    2. '[i' → logprob: -2.811976432800293
    3. '[' → logprob: -12.311976432800293
    4. '][' → logprob: -12.936976432800293
    5. '[index' → logprob: -15.061976432800293
    6. 'j' → logprob: -15.311976432800293
    7. ' [' → logprob: -15.686976432800293
    8. 'i' → logprob: -15.686976432800293
    9. '   ' → logprob: -16.061975479125977
    10. '           ' → logprob: -16.061975479125977

Token 83: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12766356766223907
    2. '[' → logprob: -2.1276636123657227
    3. ']' → logprob: -8.002663612365723
    4. '[d' → logprob: -8.627663612365723
    5. 'diff' → logprob: -10.127663612365723
    6. ' ][' → logprob: -10.127663612365723
    7. '[j' → logprob: -10.252663612365723
    8. '   ' → logprob: -11.127663612365723
    9. '[df' → logprob: -11.377663612365723
    10. ' [' → logprob: -11.377663612365723

Token 84: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.17513877153396606
    2. 'j' → logprob: -1.9251387119293213
    3. 'values' → logprob: -4.5501389503479
    4. ' diff' → logprob: -6.0501389503479
    5. 'dp' → logprob: -7.3001389503479
    6. ' j' → logprob: -7.8001389503479
    7. ' values' → logprob: -8.550138473510742
    8. '(diff' → logprob: -8.925138473510742
    9. 'v' → logprob: -9.425138473510742
    10. '   ' → logprob: -9.675138473510742

Token 85: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.817902173381299e-05
    2. ']=' → logprob: -9.87509822845459
    3. ' ]' → logprob: -10.00009822845459
    4. '=' → logprob: -13.87509822845459
    5. ' =' → logprob: -15.00009822845459
    6. '   ' → logprob: -18.625097274780273
    7. ']]' → logprob: -18.625097274780273
    8. '    ' → logprob: -19.125097274780273
    9. ']+=' → logprob: -19.125097274780273
    10. '[' → logprob: -19.500097274780273

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478977203369
    2. ' =' → logprob: -0.6931478977203369
    3. ']' → logprob: -14.443147659301758
    4. ' ' → logprob: -15.943147659301758
    5. ']=' → logprob: -17.068147659301758
    6. '=max' → logprob: -17.068147659301758
    7. '   ' → logprob: -17.568147659301758
    8. '>' → logprob: -17.568147659301758
    9. '=

' → logprob: -17.693147659301758
    10. '＝' → logprob: -18.068147659301758

Token 87: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002002865308895707
    2. ' dp' → logprob: -6.252002716064453
    3. 'max' → logprob: -9.627002716064453
    4. ' max' → logprob: -12.252002716064453
    5. '	dp' → logprob: -13.627002716064453
    6. '           ' → logprob: -13.752002716064453
    7. '   ' → logprob: -14.627002716064453
    8. '(dp' → logprob: -15.002002716064453
    9. '1' → logprob: -16.127002716064453
    10. ' ' → logprob: -16.627002716064453

Token 88: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.9153885558771435e-06
    2. 'j' → logprob: -12.750005722045898
    3. '[' → logprob: -13.625005722045898
    4. '[i' → logprob: -13.750005722045898
    5. ' [' → logprob: -14.750005722045898
    6. '][' → logprob: -16.3750057220459
    7. '```' → logprob: -16.5000057220459
    8. ' j' → logprob: -16.6250057220459
    9. '	j' → logprob: -18.6250057220459
    10. ',j' → logprob: -19.3750057220459

Token 89: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007230812683701515
    2. '[' → logprob: -5.007230758666992
    3. ']' → logprob: -8.257230758666992
    4. '}[' → logprob: -9.132230758666992
    5. '[j' → logprob: -9.882230758666992
    6. ' ][' → logprob: -10.257230758666992
    7. '[i' → logprob: -10.632230758666992
    8. ' [' → logprob: -11.757230758666992
    9. '"][' → logprob: -12.632230758666992
    10. ' ' → logprob: -12.882230758666992

Token 90: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.16024312376976013
    2. '[' → logprob: -1.9102431535720825
    3. ' diff' → logprob: -11.785243034362793
    4. '][' → logprob: -12.410243034362793
    5. '	diff' → logprob: -12.410243034362793
    6. '(diff' → logprob: -14.035243034362793
    7. 'd' → logprob: -14.160243034362793
    8. 'dif' → logprob: -14.160243034362793
    9. '_diff' → logprob: -15.035243034362793
    10. '```' → logprob: -15.410243034362793

Token 91: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16691042482852936
    2. ']+' → logprob: -1.9169104099273682
    3. '+' → logprob: -5.041910648345947
    4. ' +' → logprob: -8.666910171508789
    5. ' ]' → logprob: -11.291910171508789
    6. '[' → logprob: -12.041910171508789
    7. ')' → logprob: -12.791910171508789
    8. ')+' → logprob: -13.166910171508789
    9. '```' → logprob: -13.166910171508789
    10. '}+' → logprob: -13.291910171508789

Token 92: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859123006463051
    2. ' +' → logprob: -3.048591136932373
    3. ']+' → logprob: -12.923591613769531
    4. '```' → logprob: -15.423591613769531
    5. ' plus' → logprob: -15.548591613769531
    6. '1' → logprob: -15.798591613769531
    7. '+j' → logprob: -15.798591613769531
    8. ']' → logprob: -16.17359161376953
    9. '[' → logprob: -16.29859161376953
    10. ' ' → logprob: -16.42359161376953

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.375003814697266
    4. '```' → logprob: -20.375003814697266
    5. ' ' → logprob: -20.875003814697266
    6. '  ' → logprob: -20.875003814697266
    7. '<|end|>' → logprob: -23.250003814697266
    8. '۱' → logprob: -23.250003814697266
    9. '１' → logprob: -23.375003814697266
    10. '[' → logprob: -23.500003814697266

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -20.375
    4. '```' → logprob: -21.0
    5. '  ' → logprob: -22.75
    6. '１' → logprob: -23.375
    7. '۱' → logprob: -23.5
    8. ' ' → logprob: -23.5
    9. '१' → logprob: -23.625
    10. '[' → logprob: -24.0

Token 95: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23016612231731415
    2. 'else' → logprob: -1.6051660776138306
    3. ' else' → logprob: -5.480165958404541
    4. '<|end|>' → logprob: -7.855165958404541
    5. '```' → logprob: -9.6051664352417
    6. '	else' → logprob: -9.6051664352417
    7. '#else' → logprob: -11.3551664352417
    8. '<|end|>' → logprob: -11.9801664352417
    9. '	' → logprob: -12.3551664352417
    10. '}else' → logprob: -12.3551664352417

Token 96: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47704118490219116
    2. '       ' → logprob: -0.9770411849021912
    3. ' else' → logprob: -6.102041244506836
    4. '```' → logprob: -7.852041244506836
    5. '<|end|>' → logprob: -8.477041244506836
    6. '	else' → logprob: -9.602041244506836
    7. 'elif' → logprob: -11.352041244506836
    8. '_else' → logprob: -11.602041244506836
    9. '}else' → logprob: -11.852041244506836
    10. '#else' → logprob: -12.102041244506836

Token 97: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.25612691044807434
    2. '       ' → logprob: -1.631126880645752
    3. ' else' → logprob: -3.506126880645752
    4. '	else' → logprob: -8.75612735748291
    5. '   ' → logprob: -10.38112735748291
    6. '```' → logprob: -10.38112735748291
    7. '_else' → logprob: -12.38112735748291
    8. '<|end|>' → logprob: -12.75612735748291
    9. '}else' → logprob: -13.13112735748291
    10. '	' → logprob: -13.63112735748291

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23290161788463593
    2. '           ' → logprob: -1.6079015731811523
    3. ':
' → logprob: -5.357901573181152
    4. '       ' → logprob: -6.857901573181152
    5. '               ' → logprob: -8.107901573181152
    6. ' :' → logprob: -8.357901573181152
    7. '```' → logprob: -8.357901573181152
    8. '          ' → logprob: -8.607901573181152
    9. '        ' → logprob: -8.857901573181152
    10. '<|end|>' → logprob: -9.107901573181152

Token 99: '           ' (ID: 352)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4103330969810486
    2. '           ' → logprob: -1.1603331565856934
    3. ' dp' → logprob: -3.7853331565856934
    4. '               ' → logprob: -8.535332679748535
    5. '	dp' → logprob: -8.910332679748535
    6. '       ' → logprob: -9.035332679748535
    7. ' ' → logprob: -11.660332679748535
    8. '(dp' → logprob: -11.785332679748535
    9. '```' → logprob: -12.410332679748535
    10. '		' → logprob: -12.660332679748535

Token 100: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0024976562708616257
    2. ' dp' → logprob: -6.002497673034668
    3. '           ' → logprob: -11.502497673034668
    4. '2' → logprob: -11.877497673034668
    5. ' ' → logprob: -13.127497673034668
    6. '	dp' → logprob: -13.252497673034668
    7. '   ' → logprob: -14.877497673034668
    8. '               ' → logprob: -15.002497673034668
    9. '_dp' → logprob: -15.377497673034668
    10. '       ' → logprob: -15.627497673034668

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1875571544806007e-05
    2. '[' → logprob: -11.875011444091797
    3. '```' → logprob: -12.875011444091797
    4. '[I' → logprob: -14.750011444091797
    5. ' [' → logprob: -14.875011444091797
    6. '][' → logprob: -14.875011444091797
    7. '[][' → logprob: -14.875011444091797
    8. '<|end|>' → logprob: -15.250011444091797
    9. '`' → logprob: -16.125011444091797
    10. ')[' → logprob: -16.250011444091797

Token 102: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2270563244819641
    2. '[' → logprob: -1.6020562648773193
    3. ']' → logprob: -6.727056503295898
    4. ')[' → logprob: -8.602056503295898
    5. '}[' → logprob: -8.852056503295898
    6. '>[' → logprob: -10.602056503295898
    7. '[df' → logprob: -11.102056503295898
    8. '```' → logprob: -11.602056503295898
    9. '"][' → logprob: -11.852056503295898
    10. ']={' → logprob: -12.102056503295898

Token 103: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.03658364713191986
    2. '2' → logprob: -3.536583662033081
    3. '1' → logprob: -5.036583423614502
    4. ' diff' → logprob: -8.28658390045166
    5. ' ' → logprob: -10.28658390045166
    6. '[' → logprob: -11.41158390045166
    7. '(diff' → logprob: -12.28658390045166
    8. '	diff' → logprob: -12.53658390045166
    9. '   ' → logprob: -13.16158390045166
    10. '{' → logprob: -13.16158390045166

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.191489642835222e-05
    2. ']=' → logprob: -10.625041961669922
    3. '=' → logprob: -11.375041961669922
    4. ' ]' → logprob: -12.375041961669922
    5. ' =' → logprob: -13.250041961669922
    6. ')' → logprob: -16.250041961669922
    7. '']' → logprob: -16.875041961669922
    8. '"]' → logprob: -17.375041961669922
    9. 's' → logprob: -18.375041961669922
    10. '[' → logprob: -18.750041961669922

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. ']' → logprob: -17.078889846801758
    4. ']=' → logprob: -18.078889846801758
    5. ')' → logprob: -18.328889846801758
    6. '＝' → logprob: -18.328889846801758
    7. ' ' → logprob: -18.578889846801758
    8. '   ' → logprob: -18.828889846801758
    9. '=

' → logprob: -19.453889846801758
    10. ')=' → logprob: -19.828889846801758

Token 106: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003454753023106605
    2. ' ' → logprob: -8.000345230102539
    3. '3' → logprob: -11.625345230102539
    4. '   ' → logprob: -13.750345230102539
    5. '```' → logprob: -18.00034523010254
    6. '  ' → logprob: -18.12534523010254
    7. '    ' → logprob: -18.37534523010254
    8. '22' → logprob: -18.75034523010254
    9. '       ' → logprob: -18.87534523010254
    10. '     ' → logprob: -19.06284523010254

Token 107: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '3' → logprob: -14.875024795532227
    4. '   ' → logprob: -16.000024795532227
    5. '  ' → logprob: -18.875024795532227
    6. '    ' → logprob: -19.625024795532227
    7. '```' → logprob: -19.750024795532227
    8. ' ' → logprob: -19.812524795532227
    9. '۲' → logprob: -20.125024795532227
    10. '２' → logprob: -20.500024795532227

Token 108: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014931997284293175
    2. '   ' → logprob: -7.126492977142334
    3. '           ' → logprob: -7.376492977142334
    4. ' if' → logprob: -10.626493453979492
    5. '```' → logprob: -11.501493453979492
    6. '        
' → logprob: -11.876493453979492
    7. 'if' → logprob: -11.876493453979492
    8. '
' → logprob: -12.001493453979492
    9. 'max' → logprob: -13.251493453979492
    10. '               ' → logprob: -13.376493453979492

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019510135753080249
    2. '           ' → logprob: -6.876951217651367
    3. '   ' → logprob: -7.126951217651367
    4. 'if' → logprob: -9.876951217651367
    5. ' if' → logprob: -10.251951217651367
    6. '        
' → logprob: -11.626951217651367
    7. 'max' → logprob: -12.251951217651367
    8. '```' → logprob: -12.376951217651367
    9. '
' → logprob: -13.001951217651367
    10. '               ' → logprob: -13.126951217651367

Token 110: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009878743439912796
    2. 'if' (adapté à ' if') → logprob: -5.259878635406494
    3. ' if' → logprob: -5.884878635406494
    4. 'max' → logprob: -6.384878635406494
    5. ' max' → logprob: -9.634879112243652
    6. '   ' → logprob: -9.884879112243652
    7. '           ' → logprob: -10.009879112243652
    8. '        
' → logprob: -12.884879112243652
    9. '     ' → logprob: -14.259879112243652
    10. '      ' → logprob: -14.634879112243652

Token 111: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07889727503061295
    2. ' dp' → logprob: -2.57889723777771
    3. 'max' → logprob: -12.953897476196289
    4. '	dp' → logprob: -13.203897476196289
    5. '(dp' → logprob: -13.453897476196289
    6. '           ' → logprob: -13.703897476196289
    7. ' max' → logprob: -14.828897476196289
    8. '       ' → logprob: -15.703897476196289
    9. '   ' → logprob: -16.45389747619629
    10. '_dp' → logprob: -16.57889747619629

Token 112: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -13.500003814697266
    3. 'i' → logprob: -13.750003814697266
    4. '[I' → logprob: -15.250003814697266
    5. '```' → logprob: -15.375003814697266
    6. '[j' → logprob: -15.625003814697266
    7. '<|end|>' → logprob: -15.625003814697266
    8. '[int' → logprob: -17.250003814697266
    9. '<|end|>' → logprob: -18.500003814697266
    10. 's' → logprob: -18.500003814697266

Token 113: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.506661833962426e-05
    2. '][' → logprob: -10.12508487701416
    3. '}[' → logprob: -11.12508487701416
    4. '[data' → logprob: -11.75008487701416
    5. '[df' → logprob: -11.75008487701416
    6. ')[' → logprob: -13.00008487701416
    7. '[d' → logprob: -13.12508487701416
    8. '>[' → logprob: -13.25008487701416
    9. '[max' → logprob: -14.12508487701416
    10. ' [' → logprob: -14.12508487701416

Token 114: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.006722352933138609
    2. '[' → logprob: -5.006722450256348
    3. ' diff' → logprob: -12.506722450256348
    4. '	diff' → logprob: -13.506722450256348
    5. '(diff' → logprob: -13.631722450256348
    6. '][' → logprob: -15.131722450256348
    7. '```' → logprob: -15.256722450256348
    8. 'dif' → logprob: -16.88172149658203
    9. '}[' → logprob: -17.13172149658203
    10. '_diff' → logprob: -17.38172149658203

Token 115: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.02632596157491207
    2. ' >' → logprob: -3.6513259410858154
    3. ' ' → logprob: -11.026326179504395
    4. '">' → logprob: -13.151326179504395
    5. '>

' → logprob: -13.276326179504395
    6. '>
' → logprob: -14.401326179504395
    7. ')>' → logprob: -14.526326179504395
    8. ' ' → logprob: -14.776326179504395
    9. '&gt' → logprob: -14.776326179504395
    10. '>end' → logprob: -14.776326179504395

Token 116: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.004079470410943031
    2. ' >' → logprob: -5.504079341888428
    3. ' ' → logprob: -14.879079818725586
    4. '>

' → logprob: -15.004079818725586
    5. '>
' → logprob: -16.629079818725586
    6. '&gt' → logprob: -16.754079818725586
    7. '">' → logprob: -16.879079818725586
    8. '>end' → logprob: -17.379079818725586
    9. ' ' → logprob: -17.504079818725586
    10. '＞' → logprob: -17.629079818725586

Token 117: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03804149478673935
    2. ' max' → logprob: -3.288041591644287
    3. '           ' → logprob: -16.913042068481445
    4. '	max' → logprob: -17.788042068481445
    5. '_max' → logprob: -18.413042068481445
    6. '   ' → logprob: -18.413042068481445
    7. '       ' → logprob: -18.538042068481445
    8. '=max' → logprob: -18.538042068481445
    9. '(max' → logprob: -18.913042068481445
    10. '
' → logprob: -19.413042068481445

Token 118: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.816093228830141e-06
    2. 'length' → logprob: -12.87500286102295
    3. '_l' → logprob: -17.000001907348633
    4. 'max' → logprob: -18.250001907348633
    5. '_max' → logprob: -18.750001907348633
    6. 'ength' → logprob: -19.375001907348633
    7. '_' → logprob: -19.375001907348633
    8. '_LENGTH' → logprob: -19.625001907348633
    9. 'Length' → logprob: -19.750001907348633
    10. '_len' → logprob: -19.750001907348633

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006518906448036432
    2. ':
' → logprob: -5.631518840789795
    3. '           ' → logprob: -6.006518840789795
    4. '=' → logprob: -8.006519317626953
    5. '=max' → logprob: -10.506519317626953
    6. 'max' → logprob: -10.881519317626953
    7. ':max' → logprob: -10.881519317626953
    8. ' =' → logprob: -11.006519317626953
    9. '       ' → logprob: -11.506519317626953
    10. '               ' → logprob: -12.506519317626953

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006514640990644693
    2. ' max' → logprob: -5.631514549255371
    3. 'max' → logprob: -5.881514549255371
    4. '               ' → logprob: -9.381514549255371
    5. '(max' → logprob: -11.631514549255371
    6. '```' → logprob: -11.756514549255371
    7. '                   ' → logprob: -12.506514549255371
    8. '
' → logprob: -12.756514549255371
    9. '            
' → logprob: -12.881514549255371
    10. '          ' → logprob: -13.006514549255371

Token 121: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06837856769561768
    2. 'max' (adapté à ' max') → logprob: -3.193378448486328
    3. '           ' → logprob: -3.943378448486328
    4. '               ' → logprob: -5.193378448486328
    5. '
' → logprob: -10.318378448486328
    6. '                   ' → logprob: -10.443378448486328
    7. '(max' → logprob: -11.693378448486328
    8. '_max' → logprob: -12.068378448486328
    9. '	max' → logprob: -12.068378448486328
    10. '[max' → logprob: -12.068378448486328

Token 122: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -4.320199877838604e-07
    2. '_l' → logprob: -15.5
    3. 'length' → logprob: -15.75
    4. '_lengths' → logprob: -17.5
    5. '_len' → logprob: -17.875
    6. '_' → logprob: -18.0
    7. '_le' → logprob: -19.125
    8. '_LENGTH' → logprob: -19.125
    9. 'Length' → logprob: -19.875
    10. '_Length' → logprob: -20.375

Token 123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '=

' → logprob: -16.755233764648438
    4. '.=' → logprob: -17.130233764648438
    5. '=max' → logprob: -17.380233764648438
    6. '＝' → logprob: -17.630233764648438
    7. '<|end|>' → logprob: -18.130233764648438
    8. '=int' → logprob: -18.380233764648438
    9. '+=' → logprob: -18.755233764648438
    10. '=}' → logprob: -19.255233764648438

Token 124: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00861468818038702
    2. ' dp' → logprob: -4.758614540100098
    3. '	dp' → logprob: -16.258615493774414
    4. '(dp' → logprob: -18.383615493774414
    5. '_dp' → logprob: -18.383615493774414
    6. '           ' → logprob: -19.258615493774414
    7. 'df' → logprob: -20.008615493774414
    8. 'd' → logprob: -20.883615493774414
    9. '.dp' → logprob: -20.883615493774414
    10. '   ' → logprob: -21.383615493774414

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.875000953674316
    3. '```' → logprob: -15.750000953674316
    4. '{i' → logprob: -16.75
    5. '[' → logprob: -17.75
    6. ',i' → logprob: -17.875
    7. '`' → logprob: -19.5
    8. ' i' → logprob: -19.625
    9. '(i' → logprob: -19.625
    10. ' [' → logprob: -20.125

Token 126: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001435112557373941
    2. '[' → logprob: -6.626435279846191
    3. '[i' → logprob: -10.001435279846191
    4. ']' → logprob: -10.376435279846191
    5. ' ][' → logprob: -11.626435279846191
    6. '}[' → logprob: -11.626435279846191
    7. ')[' → logprob: -12.001435279846191
    8. '"][' → logprob: -12.501435279846191
    9. ')' → logprob: -14.001435279846191
    10. ''][' → logprob: -14.501435279846191

Token 127: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0005809116992168128
    2. '[' → logprob: -8.000580787658691
    3. 'i' → logprob: -8.500580787658691
    4. ' diff' → logprob: -10.500580787658691
    5. '[i' → logprob: -11.250580787658691
    6. '	diff' → logprob: -14.125580787658691
    7. '(diff' → logprob: -14.750580787658691
    8. 'dp' → logprob: -16.125581741333008
    9. ' i' → logprob: -16.250581741333008
    10. 'dict' → logprob: -16.375581741333008

Token 128: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009704149328172207
    2. '<|end|>' → logprob: -4.884704113006592
    3. ']' → logprob: -7.009704113006592
    4. '}' → logprob: -7.259704113006592
    5. '```' → logprob: -9.50970458984375
    6. 'print' → logprob: -9.63470458984375
    7. '<|end|>' → logprob: -9.63470458984375
    8. ')}' → logprob: -9.63470458984375
    9. ')return' → logprob: -10.00970458984375
    10. '
' → logprob: -10.25970458984375

Token 129: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.392202976712724e-06
    2. '
' → logprob: -12.125006675720215
    3. 'return' → logprob: -14.250006675720215
    4. ' print' → logprob: -15.875006675720215
    5. '```' → logprob: -16.2500057220459
    6. '  
' → logprob: -18.0000057220459
    7. ')' → logprob: -18.6250057220459
    8. '<|end|>' → logprob: -18.8750057220459
    9. ' 
' → logprob: -19.2500057220459
    10. '    
' → logprob: -19.5000057220459

Token 130: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0040793512016534805
    2. '(' → logprob: -5.504079341888428
    3. 'max' → logprob: -14.379079818725586
    4. ' (' → logprob: -16.504079818725586
    5. '("("' → logprob: -16.879079818725586
    6. '(min' → logprob: -17.254079818725586
    7. '(ma' → logprob: -17.254079818725586
    8. '(
' → logprob: -17.379079818725586
    9. '(Max' → logprob: -17.379079818725586
    10. '(len' → logprob: -17.629079818725586

Token 131: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.696889623621246e-06
    2. 'length' → logprob: -13.12500286102295
    3. '_l' → logprob: -14.62500286102295
    4. '_len' → logprob: -16.625001907348633
    5. '_' → logprob: -16.875001907348633
    6. '_lengths' → logprob: -16.875001907348633
    7. 'ength' → logprob: -17.125001907348633
    8. '_LENGTH' → logprob: -18.750001907348633
    9. '_le' → logprob: -20.125001907348633
    10. 'Length' → logprob: -20.250001907348633

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.250001907348633
    3. ')
' → logprob: -17.125001907348633
    4. ')`' → logprob: -17.375001907348633
    5. '))' → logprob: -19.125001907348633
    6. '`)' → logprob: -20.000001907348633
    7. ')}' → logprob: -20.125001907348633
    8. '）' → logprob: -20.125001907348633
    9. '')' → logprob: -20.125001907348633
    10. '),' → logprob: -20.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 130
Tokens correctement prédits (1ère position, stricte): 58
Tokens correctement prédits (1ère position, avec adaptation): 62
Tokens correctement prédits (top 10): 112
Précision stricte (1ère position): 44.62%
Précision adaptée (1ère position): 47.69%
Précision (top 10): 86.15%
================================================================================
