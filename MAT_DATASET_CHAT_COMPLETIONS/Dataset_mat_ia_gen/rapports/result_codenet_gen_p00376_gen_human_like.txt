================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x1, x2 = map(int, input().split())
distance = abs(x1 - x2)
print(distance)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: '1' (ID: 16)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4220413267612457
    2. ',' → logprob: -1.9220412969589233
    3. ' x' → logprob: -1.9220412969589233
    4. ' ,' → logprob: -3.922041416168213
    5. ' =' → logprob: -4.547041416168213
    6. ' ' → logprob: -4.672041416168213
    7. '=' → logprob: -4.797041416168213
    8. '_' → logprob: -6.172041416168213
    9. ',x' → logprob: -7.922041416168213
    10. '```' → logprob: -8.422040939331055

Token 4: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6458385586738586
    2. '1' → logprob: -1.0208384990692139
    3. '_' → logprob: -2.270838499069214
    4. ',' → logprob: -5.020838737487793
    5. '[' → logprob: -6.020838737487793
    6. '.' → logprob: -7.145838737487793
    7. '0' → logprob: -7.270838737487793
    8. ')' → logprob: -8.145838737487793
    9. '_,' → logprob: -8.270838737487793
    10. '=' → logprob: -8.395838737487793

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40114346146583557
    2. ',' → logprob: -1.1511434316635132
    3. ' =' → logprob: -4.651143550872803
    4. '+' → logprob: -6.276143550872803
    5. '.' → logprob: -7.026143550872803
    6. '_' → logprob: -7.776143550872803
    7. ')' → logprob: -7.901143550872803
    8. '*' → logprob: -8.026143074035645
    9. '```' → logprob: -8.776143074035645
    10. '**' → logprob: -9.151143074035645

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7838132977485657
    2. '0' → logprob: -1.533813238143921
    3. 'x' → logprob: -1.783813238143921
    4. ' x' → logprob: -2.158813238143921
    5. 'y' → logprob: -4.6588134765625
    6. 'input' → logprob: -5.0338134765625
    7. ' y' → logprob: -5.1588134765625
    8. ' input' → logprob: -5.1588134765625
    9. '10' → logprob: -5.2838134765625
    10. '1' → logprob: -6.1588134765625

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019951704889535904
    2. '<|end|>' → logprob: -4.769951820373535
    3. '(lambda' → logprob: -4.894951820373535
    4. '```' → logprob: -7.019951820373535
    5. ')' → logprob: -7.769951820373535
    6. '<|end|>' → logprob: -8.144951820373535
    7. '(user' → logprob: -8.269951820373535
    8. '(x' → logprob: -8.394951820373535
    9. '(token' → logprob: -9.019951820373535
    10. '(func' → logprob: -9.394951820373535

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.055035293102264404
    2. '(' → logprob: -3.430035352706909
    3. ')' → logprob: -3.930035352706909
    4. 'input' → logprob: -7.43003511428833
    5. '(x' → logprob: -7.55503511428833
    6. '(user' → logprob: -9.555035591125488
    7. '(raw' → logprob: -9.680035591125488
    8. ',' → logprob: -10.680035591125488
    9. ',input' → logprob: -10.680035591125488
    10. '('' → logprob: -10.930035591125488

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5760801434516907
    2. 'input' → logprob: -0.8260801434516907
    3. ')' → logprob: -9.201080322265625
    4. '(input' → logprob: -10.326080322265625
    5. ',input' → logprob: -12.451080322265625
    6. ' )' → logprob: -13.326080322265625
    7. '=input' → logprob: -14.951080322265625
    8. '	input' → logprob: -15.576080322265625
    9. '<input' → logprob: -15.701080322265625
    10. '),' → logprob: -15.951080322265625

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7908490896224976
    2. '()' → logprob: -1.0408490896224976
    3. '())' → logprob: -2.040849208831787
    4. '(()' → logprob: -3.915849208831787
    5. ')' → logprob: -4.540849208831787
    6. '('' → logprob: -4.665849208831787
    7. '(""))' → logprob: -5.665849208831787
    8. '().' → logprob: -6.415849208831787
    9. '(token' → logprob: -6.415849208831787
    10. '`()' → logprob: -6.415849208831787

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011903966515092179
    2. 'strip' → logprob: -9.25011920928955
    3. ' split' → logprob: -11.25011920928955
    4. 'rstrip' → logprob: -11.75011920928955
    5. 'read' → logprob: -14.00011920928955
    6. ')' → logprob: -14.62511920928955
    7. '(split' → logprob: -14.75011920928955
    8. 'spl' → logprob: -15.50011920928955
    9. 'startswith' → logprob: -16.250118255615234
    10. '```' → logprob: -17.000118255615234

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040575746446847916
    2. '))' → logprob: -3.6655757427215576
    3. '())' → logprob: -4.290575981140137
    4. '()' → logprob: -8.665575981140137
    5. '`)' → logprob: -8.915575981140137
    6. '(' → logprob: -9.915575981140137
    7. ')`' → logprob: -10.040575981140137
    8. '()))' → logprob: -10.290575981140137
    9. ')))' → logprob: -12.040575981140137
    10. ' )' → logprob: -12.040575981140137

Token 13: 'distance' (ID: 40614)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029443921521306038
    2. '#' → logprob: -4.279443740844727
    3. 'x' → logprob: -5.529443740844727
    4. '*' → logprob: -5.654443740844727
    5. 'if' → logprob: -5.779443740844727
    6. '+
' → logprob: -7.154443740844727
    7. ',' → logprob: -7.279443740844727
    8. '-' → logprob: -7.654443740844727
    9. '=' → logprob: -8.029443740844727
    10. '>' → logprob: -8.154443740844727

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26620784401893616
    2. '_' → logprob: -1.5162078142166138
    3. '=' → logprob: -5.141207695007324
    4. ' =' → logprob: -5.391207695007324
    5. ')' → logprob: -6.766207695007324
    6. 's' → logprob: -7.641207695007324
    7. ',' → logprob: -8.016207695007324
    8. '()' → logprob: -8.141207695007324
    9. '[' → logprob: -8.391207695007324
    10. '_space' → logprob: -8.766207695007324

Token 15: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.20651158690452576
    2. ' abs' → logprob: -1.7065116167068481
    3. 'x' → logprob: -5.581511497497559
    4. ' x' → logprob: -6.831511497497559
    5. '(abs' → logprob: -8.831511497497559
    6. 'int' → logprob: -10.081511497497559
    7. ' ' → logprob: -10.956511497497559
    8. '0' → logprob: -11.081511497497559
    9. '(x' → logprob: -12.206511497497559
    10. ' int' → logprob: -12.331511497497559

Token 16: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931506395339966
    2. '(x' → logprob: -0.6931506395339966
    3. ' (' → logprob: -13.318150520324707
    4. '(distance' → logprob: -14.318150520324707
    5. '((' → logprob: -14.693150520324707
    6. '(
' → logprob: -15.318150520324707
    7. 'x' → logprob: -16.318151473999023
    8. '(s' → logprob: -16.443151473999023
    9. '(a' → logprob: -16.443151473999023
    10. '()' → logprob: -16.568151473999023

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012027313932776451
    2. '_' → logprob: -7.001202583312988
    3. '2' → logprob: -8.501202583312988
    4. '-' → logprob: -10.376202583312988
    5. ' -' → logprob: -10.376202583312988
    6. ' ' → logprob: -10.876202583312988
    7. ')' → logprob: -13.501202583312988
    8. '[' → logprob: -13.751202583312988
    9. 'x' → logprob: -14.188702583312988
    10. '\xe2\x82' → logprob: -14.188702583312988

Token 18: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3869110345840454
    2. '-' → logprob: -1.1369110345840454
    3. ' ' → logprob: -10.386911392211914
    4. '-x' → logprob: -11.886911392211914
    5. ')' → logprob: -13.636911392211914
    6. ' -
' → logprob: -15.386911392211914
    7. '	' → logprob: -16.136911392211914
    8. '-
' → logprob: -16.261911392211914
    9. '_' → logprob: -16.511911392211914
    10. ' -

' → logprob: -16.511911392211914

Token 19: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006715370807796717
    2. ' x' → logprob: -5.006715297698975
    3. ')x' → logprob: -17.131715774536133
    4. ' ' → logprob: -17.881715774536133
    5. ')' → logprob: -18.006715774536133
    6. '	x' → logprob: -18.756715774536133
    7. ''x' → logprob: -19.256715774536133
    8. '(x' → logprob: -19.631715774536133
    9. '"x' → logprob: -20.506715774536133
    10. '2' → logprob: -21.131715774536133

Token 20: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.250036239624023
    3. '1' → logprob: -15.125036239624023
    4. '_' → logprob: -15.625036239624023
    5. ',' → logprob: -16.125036239624023
    6. '₂' → logprob: -16.125036239624023
    7. ')' → logprob: -16.625036239624023
    8. '   ' → logprob: -17.125036239624023
    9. '۲' → logprob: -17.312536239624023
    10. '２' → logprob: -17.437536239624023

Token 21: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. '))' → logprob: -12.125006675720215
    3. ' )' → logprob: -15.375006675720215
    4. '')' → logprob: -15.375006675720215
    5. '`)' → logprob: -16.6250057220459
    6. ')
' → logprob: -16.8750057220459
    7. ')))' → logprob: -17.0000057220459
    8. ')`' → logprob: -17.1250057220459
    9. ')**' → logprob: -17.3750057220459
    10. '()' → logprob: -17.3750057220459

Token 22: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.170200914144516
    2. 'if' → logprob: -2.295200824737549
    3. '\n' → logprob: -4.045200824737549
    4. ' if' → logprob: -4.795200824737549
    5. '```' → logprob: -5.170200824737549
    6. '+' → logprob: -5.295200824737549
    7. ')' → logprob: -5.920200824737549
    8. '*' → logprob: -6.045200824737549
    9. ' ' → logprob: -6.045200824737549
    10. '\' → logprob: -6.420200824737549

Token 23: '(distance' (ID: 105203)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03805479779839516
    2. '(distance' → logprob: -3.2880547046661377
    3. '()' → logprob: -11.788054466247559
    4. '('' → logprob: -13.788054466247559
    5. '((' → logprob: -13.788054466247559
    6. '(x' → logprob: -14.038054466247559
    7. '(abs' → logprob: -14.413054466247559
    8. '(round' → logprob: -15.163054466247559
    9. '(`' → logprob: -15.413054466247559
    10. '(max' → logprob: -15.538054466247559

Token 24: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '))' → logprob: -12.375004768371582
    3. '`)' → logprob: -15.875004768371582
    4. ' )' → logprob: -16.375003814697266
    5. ')`' → logprob: -16.500003814697266
    6. ')
' → logprob: -17.875003814697266
    7. '()' → logprob: -19.000003814697266
    8. '')' → logprob: -19.000003814697266
    9. ')))' → logprob: -19.125003814697266
    10. ')**' → logprob: -19.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 22
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 18
Précision stricte (1ère position): 36.36%
Précision adaptée (1ère position): 36.36%
Précision (top 10): 81.82%
================================================================================
