================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    input=sys.stdin.readline

    def inv_J(s): return s[-1]+s[:-1]
    def inv_C(s): return s[1:]+s[0]
    def inv_E(s):
        l=len(s)
        mid=l//2
        if l%2==0:
            return s[mid:]+s[:mid]
        else:
            return s[mid+1:]+s[mid]+s[:mid]
    def inv_A(s): return s[::-1]
    def inv_P(s):
        res=[]
        for c in s:
            if c.isdigit():
                res.append('9' if c=='0' else str(int(c)-1))
            else:
                res.append(c)
        return ''.join(res)
    def inv_M(s):
        res=[]
        for c in s:
            if c.isdigit():
                res.append('0' if c=='9' else str(int(c)+1))
            else:
                res.append(c)
        return ''.join(res)

    inv_map={'J':inv_J,'C':inv_C,'E':inv_E,'A':inv_A,'P':inv_P,'M':inv_M}
    n=int(input())
    for _ in range(n):
        order=input().strip()
        msg=input().rstrip('\n')
        for ch in reversed(order):
            msg=inv_map[ch](msg)
        print(msg)
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.45526188611984253
    2. '\n' → logprob: -1.3302619457244873
    3. '   ' → logprob: -2.7052619457244873
    4. '    
' → logprob: -4.580261707305908
    5. ' 
' → logprob: -5.205261707305908
    6. '    ' → logprob: -5.330261707305908
    7. '```' → logprob: -5.580261707305908
    8. '(' → logprob: -5.955261707305908
    9. ''' → logprob: -6.580261707305908
    10. ' \' → logprob: -7.330261707305908

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5911958813667297
    2. '   ' → logprob: -1.841195821762085
    3. '    ' → logprob: -2.591195821762085
    4. 'return' → logprob: -2.966195821762085
    5. ' ' → logprob: -3.591195821762085
    6. '\' → logprob: -3.841195821762085
    7. 'pass' → logprob: -3.966195821762085
    8. 'a' → logprob: -4.091196060180664
    9. '_' → logprob: -4.591196060180664
    10. '#' → logprob: -4.841196060180664

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.05252670496702194
    2. ' sys' → logprob: -3.1775267124176025
    3. ' math' → logprob: -5.427526473999023
    4. ' ' → logprob: -6.177526473999023
    5. ' numpy' → logprob: -6.302526473999023
    6. ' json' → logprob: -7.427526473999023
    7. ' random' → logprob: -8.552526473999023
    8. ' pandas' → logprob: -9.677526473999023
    9. ' tensorflow' → logprob: -9.802526473999023
    10. ' csv' → logprob: -10.052526473999023

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1653047651052475
    2. '.readline' → logprob: -3.790304660797119
    3. 'newline' → logprob: -3.790304660797119
    4. '   ' → logprob: -4.040304660797119
    5. '.stdout' → logprob: -4.290304660797119
    6. 'import' → logprob: -4.665304660797119
    7. '.print' → logprob: -4.790304660797119
    8. '\n' → logprob: -4.790304660797119
    9. '```' → logprob: -4.790304660797119
    10. '[' → logprob: -5.165304660797119

Token 7: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8574399948120117
    2. '<|end|>' → logprob: -1.2324399948120117
    3. 'import' → logprob: -2.8574399948120117
    4. '```' → logprob: -3.2324399948120117
    5. '.readline' → logprob: -3.4824399948120117
    6. '<|end|>' → logprob: -3.8574399948120117
    7. '
' → logprob: -3.9824399948120117
    8. 'newline' → logprob: -4.232439994812012
    9. '\n' → logprob: -4.357439994812012
    10. '   ' → logprob: -4.607439994812012

Token 8: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3454183340072632
    2. ' ' → logprob: -2.3454184532165527
    3. '    ' → logprob: -2.3454184532165527
    4. '\n' → logprob: -3.8454184532165527
    5. '\' → logprob: -4.220418453216553
    6. '[' → logprob: -4.595418453216553
    7. '.' → logprob: -4.720418453216553
    8. 'import' → logprob: -4.845418453216553
    9. 'newline' → logprob: -5.220418453216553
    10. '  ' → logprob: -5.345418453216553

Token 9: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010104290209710598
    2. '()' → logprob: -5.135104179382324
    3. '_' → logprob: -6.510104179382324
    4. '.' → logprob: -7.135104179382324
    5. '_data' → logprob: -8.135104179382324
    6. ')' → logprob: -8.135104179382324
    7. ' ' → logprob: -8.885104179382324
    8. '```' → logprob: -8.885104179382324
    9. ''' → logprob: -9.385104179382324
    10. '('' → logprob: -9.510104179382324

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005675682332366705
    2. '.readline' → logprob: -7.875567436218262
    3. '.stdin' → logprob: -9.250567436218262
    4. '[' → logprob: -11.000567436218262
    5. ' .' → logprob: -11.000567436218262
    6. '.setdefault' → logprob: -11.125567436218262
    7. '.get' → logprob: -11.625567436218262
    8. '.input' → logprob: -12.375567436218262
    9. '.argv' → logprob: -12.500567436218262
    10. '.)' → logprob: -12.625567436218262

Token 11: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3697943091392517
    2. '.readline' → logprob: -1.2447943687438965
    3. '.read' → logprob: -3.8697943687438965
    4. '.Read' → logprob: -8.744793891906738
    5. '.readlines' → logprob: -10.494793891906738
    6. '._' → logprob: -11.619793891906738
    7. '.READ' → logprob: -11.619793891906738
    8. '```' → logprob: -11.619793891906738
    9. 'read' → logprob: -11.994793891906738
    10. ' .' → logprob: -12.119793891906738

Token 12: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1458980292081833
    2. '(' → logprob: -2.1458981037139893
    3. '(
' → logprob: -4.14589786529541
    4. '()
' → logprob: -6.39589786529541
    5. ')' → logprob: -7.39589786529541
    6. '(

' → logprob: -8.52089786529541
    7. '
' → logprob: -9.14589786529541
    8. ' ()' → logprob: -9.27089786529541
    9. '().' → logprob: -10.02089786529541
    10. ' ' → logprob: -10.39589786529541

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19670052826404572
    2. '(' → logprob: -2.1967005729675293
    3. '    
' → logprob: -3.4467005729675293
    4. '()' → logprob: -3.9467005729675293
    5. ' ' → logprob: -5.321700572967529
    6. '    ' → logprob: -5.446700572967529
    7. ')' → logprob: -6.071700572967529
    8. '  ' → logprob: -6.946700572967529
    9. 'a' → logprob: -7.196700572967529
    10. '(
' → logprob: -7.196700572967529

Token 14: ' def' (ID: 1056)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01547545101493597
    2. 'x' → logprob: -5.015475273132324
    3. 'data' → logprob: -5.765475273132324
    4. 'a' → logprob: -6.515475273132324
    5. 't' → logprob: -6.765475273132324
    6. '   ' → logprob: -7.515475273132324
    7. 'name' → logprob: -7.515475273132324
    8. 'for' → logprob: -7.765475273132324
    9. 'd' → logprob: -8.265475273132324
    10. 'user' → logprob: -8.515475273132324

Token 15: ' inv' (ID: 1827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6540164947509766
    2. ' process' → logprob: -1.9040164947509766
    3. ' solve' → logprob: -2.9040164947509766
    4. ' main' → logprob: -3.2790164947509766
    5. ' parse' → logprob: -3.2790164947509766
    6. ' split' → logprob: -3.5290164947509766
    7. ' factorial' → logprob: -3.5290164947509766
    8. ' test' → logprob: -4.029016494750977
    9. ' print' → logprob: -4.154016494750977
    10. ' calculate' → logprob: -4.279016494750977

Token 16: '_J' (ID: 22788)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.1807030886411667
    2. 'erse' → logprob: -1.930703043937683
    3. 'er' → logprob: -4.680703163146973
    4. 'ersion' → logprob: -5.180703163146973
    5. '(' → logprob: -5.930703163146973
    6. 'ers' → logprob: -6.430703163146973
    7. '_' → logprob: -8.930703163146973
    8. 'ent' → logprob: -9.305703163146973
    9. 'erte' → logprob: -9.430703163146973
    10. 'irt' → logprob: -9.680703163146973

Token 17: '(s' (ID: 1858)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.57205730676651
    2. '(' → logprob: -1.4470572471618652
    3. '_' → logprob: -2.4470572471618652
    4. '_ac' → logprob: -2.9470572471618652
    5. '(_' → logprob: -4.447057247161865
    6. 'AC' → logprob: -5.322057247161865
    7. '_inv' → logprob: -5.447057247161865
    8. '(ac' → logprob: -5.572057247161865
    9. '(x' → logprob: -5.697057247161865
    10. '```' → logprob: -5.822057247161865

Token 18: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05880880728363991
    2. 'a' → logprob: -3.3088088035583496
    3. ')' → logprob: -4.68380880355835
    4. '_' → logprob: -5.43380880355835
    5. ',' → logprob: -6.68380880355835
    6. '[' → logprob: -6.80880880355835
    7. 'u' → logprob: -6.93380880355835
    8. ':' → logprob: -6.93380880355835
    9. '_a' → logprob: -7.55880880355835
    10. ''):' → logprob: -7.93380880355835

Token 19: ' return' (ID: 622)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8045516014099121
    2. '       ' → logprob: -1.679551601409912
    3. ' ' → logprob: -1.804551601409912
    4. '   ' → logprob: -2.929551601409912
    5. 'n' → logprob: -3.429551601409912
    6. ')' → logprob: -4.054551601409912
    7. ':' → logprob: -4.054551601409912
    8. '        ' → logprob: -4.179551601409912
    9. 'u' → logprob: -4.554551601409912
    10. 't' → logprob: -4.929551601409912

Token 20: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.48855897784233093
    2. ' ' → logprob: -1.7385590076446533
    3. 's' → logprob: -2.3635590076446533
    4. '1' → logprob: -2.9885590076446533
    5. ' pow' → logprob: -4.238558769226074
    6. 'pow' → logprob: -4.238558769226074
    7. ' {' → logprob: -5.363558769226074
    8. '{' → logprob: -5.613558769226074
    9. ' int' → logprob: -5.613558769226074
    10. '(s' → logprob: -5.863558769226074

Token 21: '[-' (ID: 17503)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10252631455659866
    2. '(' → logprob: -3.3525264263153076
    3. ')' → logprob: -3.3525264263153076
    4. '[' → logprob: -4.7275261878967285
    5. ',' → logprob: -5.3525261878967285
    6. '_' → logprob: -5.4775261878967285
    7. ' ' → logprob: -6.3525261878967285
    8. '<|end|>' → logprob: -6.4775261878967285
    9. '
' → logprob: -6.9775261878967285
    10. ':' → logprob: -6.9775261878967285

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023700783029198647
    2. '2' → logprob: -3.773700714111328
    3. '3' → logprob: -8.273700714111328
    4. '4' → logprob: -9.398700714111328
    5. '5' → logprob: -10.148700714111328
    6. '10' → logprob: -10.648700714111328
    7. '6' → logprob: -11.398700714111328
    8. '7' → logprob: -11.648700714111328
    9. ' ' → logprob: -11.898700714111328
    10. '8' → logprob: -12.773700714111328

Token 23: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.054901350289583206
    2. ':]' → logprob: -3.429901361465454
    3. '::-' → logprob: -4.929901123046875
    4. '])' → logprob: -5.179901123046875
    5. ':' → logprob: -5.804901123046875
    6. '-' → logprob: -6.679901123046875
    7. ' ]' → logprob: -7.054901123046875
    8. ' :]' → logprob: -7.429901123046875
    9. '::' → logprob: -7.804901123046875
    10. '**' → logprob: -8.304901123046875

Token 24: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024774393532425165
    2. ' s' → logprob: -6.002477645874023
    3. ' ' → logprob: -14.127477645874023
    4. '(s' → logprob: -14.502477645874023
    5. ''s' → logprob: -15.002477645874023
    6. '  ' → logprob: -16.752477645874023
    7. '`s' → logprob: -16.752477645874023
    8. '	s' → logprob: -16.877477645874023
    9. '-s' → logprob: -17.002477645874023
    10. '...' → logprob: -17.627477645874023

Token 25: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.14301607012748718
    2. '[' → logprob: -2.0180160999298096
    3. '[-' → logprob: -9.01801586151123
    4. '[:]' → logprob: -9.14301586151123
    5. '[:' → logprob: -10.14301586151123
    6. '[len' → logprob: -10.64301586151123
    7. '[::-' → logprob: -11.14301586151123
    8. '[n' → logprob: -11.39301586151123
    9. '[]' → logprob: -12.26801586151123
    10. '1' → logprob: -13.14301586151123

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -17.0
    3. '１' → logprob: -17.125
    4. ' ' → logprob: -17.125
    5. '-' → logprob: -17.5
    6. '१' → logprob: -18.0625
    7. '' → logprob: -18.125
    8. '2' → logprob: -18.25
    9. ']' → logprob: -18.4375
    10. '0' → logprob: -18.9375

Token 27: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7120533811976202e-05
    2. ' )' → logprob: -11.125017166137695
    3. '）' → logprob: -14.375017166137695
    4. '')' → logprob: -14.875017166137695
    5. ')
' → logprob: -15.000017166137695
    6. '`)' → logprob: -15.125017166137695
    7. '))' → logprob: -15.500017166137695
    8. ']' → logprob: -15.625017166137695
    9. ')`' → logprob: -16.000017166137695
    10. ')s' → logprob: -16.125017166137695

Token 28: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8088514804840088
    2. '<|end|>' → logprob: -0.8088514804840088
    3. '\n' → logprob: -2.808851480484009
    4. '   ' → logprob: -4.18385124206543
    5. ')' → logprob: -4.93385124206543
    6. '

' → logprob: -5.05885124206543
    7. '<|end|>' → logprob: -5.18385124206543
    8. '    
' → logprob: -5.30885124206543
    9. '  
' → logprob: -7.05885124206543
    10. ' ' → logprob: -7.18385124206543

Token 29: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5379548072814941
    2. '   ' → logprob: -1.5379548072814941
    3. '<|end|>' → logprob: -3.037954807281494
    4. '    
' → logprob: -3.162954807281494
    5. '\n' → logprob: -3.412954807281494
    6. ')' → logprob: -3.412954807281494
    7. '

' → logprob: -4.412954807281494
    8. ' ' → logprob: -5.037954807281494
    9. 'def' (adapté à ' def') → logprob: -5.412954807281494
    10. 'n' → logprob: -5.662954807281494

Token 30: ' inv' (ID: 1827)
  Prédit: ' inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.3240918815135956
    2. ' J' → logprob: -2.199091911315918
    3. 'inv' → logprob: -2.824091911315918
    4. 'J' → logprob: -4.074091911315918
    5. ' rot' → logprob: -4.324091911315918
    6. ' rev' → logprob: -4.699091911315918
    7. ' add' → logprob: -4.699091911315918
    8. ' is' → logprob: -5.574091911315918
    9. ' mul' → logprob: -5.761591911315918
    10. 'rev' → logprob: -6.074091911315918

Token 31: '_C' (ID: 1720)
  Prédit: '_J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_J' → logprob: -0.12022066116333008
    2. '_' → logprob: -2.24522066116333
    3. '_I' → logprob: -6.99522066116333
    4. '_B' → logprob: -7.12022066116333
    5. '_S' → logprob: -7.12022066116333
    6. '_j' → logprob: -7.37022066116333
    7. '_A' → logprob: -7.37022066116333
    8. '_P' → logprob: -7.62022066116333
    9. '_T' → logprob: -7.74522066116333
    10. '__' → logprob: -7.87022066116333

Token 32: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0004766671918332577
    2. '(' → logprob: -8.875476837158203
    3. 'omp' → logprob: -10.000476837158203
    4. ' (' → logprob: -10.125476837158203
    5. 'a' → logprob: -10.500476837158203
    6. '(a' → logprob: -10.625476837158203
    7. '(S' → logprob: -11.000476837158203
    8. 'C' → logprob: -11.125476837158203
    9. 'ode' → logprob: -11.375476837158203
    10. 'ipher' → logprob: -11.687976837158203

Token 33: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.864272967912257e-05
    2. ')' → logprob: -10.250088691711426
    3. '):
' → logprob: -10.875088691711426
    4. ' ):' → logprob: -11.250088691711426
    5. '   ' → logprob: -12.000088691711426
    6. ':' → logprob: -13.250088691711426
    7. ',' → logprob: -13.375088691711426
    8. '=' → logprob: -13.500088691711426
    9. ''):' → logprob: -13.500088691711426
    10. '(s' → logprob: -14.125088691711426

Token 34: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6108343601226807
    2. ' s' → logprob: -0.9858343601226807
    3. '   ' → logprob: -3.2358343601226807
    4. 's' → logprob: -3.9858343601226807
    5. 'return' → logprob: -4.360834121704102
    6. 'eturn' → logprob: -4.860834121704102
    7. '[::-' → logprob: -6.235834121704102
    8. '    ' → logprob: -7.235834121704102
    9. ' if' → logprob: -8.298334121704102
    10. ')' → logprob: -8.360834121704102

Token 35: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01235282700508833
    2. '''.' → logprob: -4.88735294342041
    3. ' s' → logprob: -5.76235294342041
    4. 'chr' → logprob: -6.88735294342041
    5. ' ''.' → logprob: -8.76235294342041
    6. ''s' → logprob: -8.88735294342041
    7. ''' → logprob: -9.88735294342041
    8. '''' → logprob: -9.88735294342041
    9. 'str' → logprob: -10.13735294342041
    10. ' chr' → logprob: -11.07485294342041

Token 36: '[' (ID: 58)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4646308422088623
    2. '[' → logprob: -1.4646308422088623
    3. '<|end|>' → logprob: -1.8396308422088623
    4. '.' → logprob: -2.2146308422088623
    5. '_' → logprob: -2.5896308422088623
    6. ')' → logprob: -3.2146308422088623
    7. '[::-' → logprob: -3.2146308422088623
    8. 'def' → logprob: -3.5896308422088623
    9. '
' → logprob: -4.214631080627441
    10. '*' → logprob: -4.214631080627441

Token 37: '1' (ID: 16)
  Prédit: '::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.11938630789518356
    2. '1' → logprob: -2.6193861961364746
    3. ':' → logprob: -4.244386196136475
    4. '-' → logprob: -4.244386196136475
    5. ':]' → logprob: -5.869386196136475
    6. '[::-' → logprob: -5.869386196136475
    7. '::' → logprob: -5.869386196136475
    8. ':-' → logprob: -6.619386196136475
    9. '0' → logprob: -8.119386672973633
    10. '<' → logprob: -8.619386672973633

Token 38: ':' (ID: 25)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0017078984528779984
    2. ':' → logprob: -6.376708030700684
    3. ' :]' → logprob: -12.876708030700684
    4. ':].' → logprob: -13.876708030700684
    5. ':],' → logprob: -14.251708030700684
    6. ':]
' → logprob: -14.751708030700684
    7. ':]

' → logprob: -15.126708030700684
    8. '+' → logprob: -15.501708030700684
    9. ']' → logprob: -15.751708030700684
    10. '0' → logprob: -15.876708030700684

Token 39: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04312148317694664
    2. ']+' → logprob: -3.168121576309204
    3. ' ]' → logprob: -9.293121337890625
    4. ']+"' → logprob: -11.293121337890625
    5. ']
' → logprob: -12.918121337890625
    6. ']<<' → logprob: -13.168121337890625
    7. 's' → logprob: -13.418121337890625
    8. ']-' → logprob: -13.418121337890625
    9. ']+=' → logprob: -13.418121337890625
    10. ':]' → logprob: -14.043121337890625

Token 40: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00033593899570405483
    2. ' s' → logprob: -8.000335693359375
    3. '(s' → logprob: -15.250335693359375
    4. ' ' → logprob: -15.625335693359375
    5. '	s' → logprob: -17.375335693359375
    6. '<s' → logprob: -17.500335693359375
    7. '[' → logprob: -17.500335693359375
    8. '`s' → logprob: -18.000335693359375
    9. '[s' → logprob: -18.125335693359375
    10. '>s' → logprob: -18.625335693359375

Token 41: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01571054756641388
    2. '0' → logprob: -5.640710353851318
    3. '[:' → logprob: -5.765710353851318
    4. '(' → logprob: -6.515710353851318
    5. '.' → logprob: -6.515710353851318
    6. '[:]' → logprob: -6.515710353851318
    7. ')' → logprob: -7.265710353851318
    8. 's' → logprob: -7.390710353851318
    9. '[-' → logprob: -7.890710353851318
    10. '1' → logprob: -7.890710353851318

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013832130935043097
    2. ':' → logprob: -6.876383304595947
    3. '-' → logprob: -8.626382827758789
    4. '1' → logprob: -9.376382827758789
    5. ' ' → logprob: -9.876382827758789
    6. ' :' → logprob: -11.501382827758789
    7. '::-' → logprob: -12.251382827758789
    8. '   ' → logprob: -12.501382827758789
    9. ':-' → logprob: -12.813882827758789
    10. ':]' → logprob: -12.938882827758789

Token 43: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000344044849043712
    2. ' ]' → logprob: -8.375344276428223
    3. ':]' → logprob: -9.750344276428223
    4. '`]' → logprob: -10.875344276428223
    5. '']' → logprob: -11.375344276428223
    6. ']>' → logprob: -11.750344276428223
    7. '>]' → logprob: -12.000344276428223
    8. '}]' → logprob: -13.125344276428223
    9. 's' → logprob: -13.125344276428223
    10. ']
' → logprob: -13.500344276428223

Token 44: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8946486115455627
    2. '
' → logprob: -1.144648551940918
    3. 'def' (adapté à ' def') → logprob: -1.519648551940918
    4. '    
' → logprob: -3.519648551940918
    5. 'n' → logprob: -5.394648551940918
    6. ' ' → logprob: -5.894648551940918
    7. '```' → logprob: -6.019648551940918
    8. '<|end|>' → logprob: -6.269648551940918
    9. ' def' → logprob: -6.769648551940918
    10. '  
' → logprob: -6.769648551940918

Token 46: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.427028626203537
    2. ' inv' → logprob: -2.3020286560058594
    3. 'R' → logprob: -3.7395286560058594
    4. 'D' → logprob: -3.9270286560058594
    5. 'I' → logprob: -4.177028656005859
    6. 'J' → logprob: -4.364528656005859
    7. 'i' → logprob: -4.614528656005859
    8. 'B' → logprob: -4.739528656005859
    9. '_inv' → logprob: -4.802028656005859
    10. 'P' → logprob: -4.802028656005859

Token 47: '_E' (ID: 6584)
  Prédit: '_J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_J' → logprob: -1.8820693492889404
    2. '_R' → logprob: -2.0070693492889404
    3. '_D' → logprob: -2.1320693492889404
    4. '_V' → logprob: -2.2570693492889404
    5. '_S' → logprob: -2.3820693492889404
    6. '_B' → logprob: -2.6320693492889404
    7. '_P' → logprob: -2.6320693492889404
    8. '_A' → logprob: -2.8820693492889404
    9. '_X' → logprob: -3.6320693492889404
    10. '_T' → logprob: -4.0070695877075195

Token 48: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00015288250870071352
    2. '(' → logprob: -9.500152587890625
    3. '(x' → logprob: -11.000152587890625
    4. '(n' → logprob: -11.250152587890625
    5. '(a' → logprob: -11.500152587890625
    6. 's' → logprob: -11.500152587890625
    7. ' (' → logprob: -12.375152587890625
    8. 'a' → logprob: -13.312652587890625
    9. '(str' → logprob: -13.312652587890625
    10. '(r' → logprob: -13.312652587890625

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004634392389561981
    2. '[' → logprob: -8.750463485717773
    3. '):
' → logprob: -8.750463485717773
    4. ':' → logprob: -10.250463485717773
    5. ' ):' → logprob: -10.625463485717773
    6. ')' → logprob: -11.000463485717773
    7. '[::-' → logprob: -11.000463485717773
    8. ']:' → logprob: -11.750463485717773
    9. '[-' → logprob: -12.125463485717773
    10. '[:-' → logprob: -12.375463485717773

Token 50: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09676216542720795
    2. ' =' → logprob: -3.846762180328369
    3. ' s' → logprob: -3.971762180328369
    4. '[::-' → logprob: -3.971762180328369
    5. ' return' → logprob: -4.471762180328369
    6. 's' → logprob: -4.846762180328369
    7. 'def' → logprob: -6.096762180328369
    8. '[' → logprob: -6.221762180328369
    9. '=' → logprob: -6.346762180328369
    10. 'return' → logprob: -6.596762180328369

Token 51: ' l' (ID: 305)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21989966928958893
    2. 's' → logprob: -3.2198996543884277
    3. 'res' → logprob: -3.2198996543884277
    4. ' return' → logprob: -3.5948996543884277
    5. '   ' → logprob: -3.7198996543884277
    6. '''.' → logprob: -4.094899654388428
    7. 'result' → logprob: -4.469899654388428
    8. 'r' → logprob: -5.094899654388428
    9. 'ret' → logprob: -5.344899654388428
    10. ' res' → logprob: -5.594899654388428

Token 52: '=len' (ID: 114011)
  Prédit: '=len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=len' → logprob: -0.8147982358932495
    2. 'en' → logprob: -1.8147982358932495
    3. '=s' → logprob: -2.064798355102539
    4. ' =' → logprob: -2.064798355102539
    5. '=' → logprob: -2.189798355102539
    6. '=en' → logprob: -5.064798355102539
    7. 's' → logprob: -5.439798355102539
    8. '=[]' → logprob: -5.814798355102539
    9. 'st' → logprob: -6.064798355102539
    10. 'ist' → logprob: -6.189798355102539

Token 53: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -7.064297824399546e-05
    2. '(' → logprob: -10.000070571899414
    3. 's' → logprob: -10.625070571899414
    4. '(str' → logprob: -15.625070571899414
    5. ' (' → logprob: -15.750070571899414
    6. '(S' → logprob: -16.375070571899414
    7. '(ss' → logprob: -16.625070571899414
    8. '(input' → logprob: -17.375070571899414
    9. '```' → logprob: -17.625070571899414
    10. '(set' → logprob: -17.750070571899414

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12420091032981873
    2. ')
' → logprob: -2.2492008209228516
    3. ')//' → logprob: -4.874200820922852
    4. ')-' → logprob: -6.249200820922852
    5. ' )' → logprob: -7.874200820922852
    6. '       ' → logprob: -8.499200820922852
    7. '//' → logprob: -8.499200820922852
    8. '   ' → logprob: -8.749200820922852
    9. ')
' → logprob: -8.874200820922852
    10. ')>>' → logprob: -9.124200820922852

Token 55: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3953593373298645
    2. '       ' → logprob: -2.5203592777252197
    3. ' half' → logprob: -3.2703592777252197
    4. 's' → logprob: -3.5203592777252197
    5. ' return' → logprob: -4.270359516143799
    6. 'return' → logprob: -4.395359516143799
    7. 'half' → logprob: -4.520359516143799
    8. 'n' → logprob: -4.645359516143799
    9. 'mid' → logprob: -4.895359516143799
    10. ' s' → logprob: -4.895359516143799

Token 56: ' mid' (ID: 6959)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0796639919281006
    2. 'mid' (adapté à ' mid') → logprob: -1.3296639919281006
    3. 'half' → logprob: -2.2046639919281006
    4. 'm' → logprob: -2.3296639919281006
    5. 's' → logprob: -2.8296639919281006
    6. 'res' → logprob: -2.9546639919281006
    7. 'r' → logprob: -4.57966423034668
    8. 'l' → logprob: -4.70466423034668
    9. '   ' → logprob: -4.82966423034668
    10. ' mid' → logprob: -4.82966423034668

Token 57: '=l' (ID: 103670)
  Prédit: '=l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=l' → logprob: -0.5656031370162964
    2. '=' → logprob: -1.8156031370162964
    3. '=len' → logprob: -2.565603256225586
    4. ' =' → logprob: -3.065603256225586
    5. 'd' → logprob: -3.315603256225586
    6. '=d' → logprob: -3.440603256225586
    7. '=int' → logprob: -3.440603256225586
    8. '=s' → logprob: -4.065603256225586
    9. '=i' → logprob: -4.690603256225586
    10. '=(' → logprob: -5.440603256225586

Token 58: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0011791547294706106
    2. ' //' → logprob: -6.751179218292236
    3. '/' → logprob: -13.126178741455078
    4. '2' → logprob: -13.626178741455078
    5. '//=' → logprob: -13.626178741455078
    6. '```' → logprob: -13.876178741455078
    7. '>>' → logprob: -14.001178741455078
    8. ' ' → logprob: -14.876178741455078
    9. '   ' → logprob: -14.876178741455078
    10. '#' → logprob: -15.251178741455078

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.500031471252441
    3. '3' → logprob: -13.000031471252441
    4. '   ' → logprob: -14.000031471252441
    5. '<|end|>' → logprob: -15.625031471252441
    6. '4' → logprob: -15.750031471252441
    7. '  ' → logprob: -15.875031471252441
    8. '```' → logprob: -16.125030517578125
    9. '...' → logprob: -16.500030517578125
    10. '1' → logprob: -17.437530517578125

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.262408971786499
    2. '<|end|>' → logprob: -2.512408971786499
    3. 's' → logprob: -2.637408971786499
    4. '       ' → logprob: -3.137408971786499
    5. '+' → logprob: -4.012409210205078
    6. '-' → logprob: -5.637409210205078
    7. ' s' → logprob: -6.512409210205078
    8. '   ' → logprob: -6.637409210205078
    9. '        
' → logprob: -6.762409210205078
    10. '<|end|>' → logprob: -6.887409210205078

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40603771805763245
    2. 's' → logprob: -1.53103768825531
    3. '   ' → logprob: -2.9060378074645996
    4. ' s' → logprob: -3.4060378074645996
    5. '
' → logprob: -4.9060378074646
    6. '<|end|>' → logprob: -5.1560378074646
    7. ' return' → logprob: -5.9060378074646
    8. 'return' → logprob: -5.9060378074646
    9. '    ' → logprob: -6.1560378074646
    10. ' ' → logprob: -6.4060378074646

Token 62: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2924198508262634
    2. 's' → logprob: -2.042419910430908
    3. 'if' (adapté à ' if') → logprob: -3.167419910430908
    4. ' return' → logprob: -3.417419910430908
    5. '   ' → logprob: -4.042419910430908
    6. 'left' → logprob: -5.042419910430908
    7. 'r' → logprob: -5.167419910430908
    8. 'ret' → logprob: -5.542419910430908
    9. ' s' → logprob: -5.542419910430908
    10. '       ' → logprob: -5.792419910430908

Token 63: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.0025990803260356188
    2. 'l' → logprob: -6.877599239349365
    3. ' s' → logprob: -7.252599239349365
    4. ' len' → logprob: -7.502599239349365
    5. ' mid' → logprob: -8.627598762512207
    6. ' ' → logprob: -9.377598762512207
    7. '	l' → logprob: -11.502598762512207
    8. ' (' → logprob: -11.752598762512207
    9. ' not' → logprob: -11.877598762512207
    10. 's' → logprob: -12.502598762512207

Token 64: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.06268788129091263
    2. ' %' → logprob: -2.812687873840332
    3. ' ' → logprob: -8.062687873840332
    4. '<' → logprob: -9.187687873840332
    5. '==' → logprob: -9.312687873840332
    6. '&' → logprob: -9.812687873840332
    7. '2' → logprob: -10.437687873840332
    8. '<=' → logprob: -10.562687873840332
    9. ' <' → logprob: -10.937687873840332
    10. '>' → logprob: -11.062687873840332

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.633853652398102e-05
    2. ' ' → logprob: -10.000056266784668
    3. '==' → logprob: -12.500056266784668
    4. '0' → logprob: -12.875056266784668
    5. '3' → logprob: -13.750056266784668
    6. '1' → logprob: -14.625056266784668
    7. '```' → logprob: -14.625056266784668
    8. '   ' → logprob: -14.750056266784668
    9. '4' → logprob: -15.125056266784668
    10. '=' → logprob: -15.250056266784668

Token 66: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.022566694766283035
    2. ' ==' → logprob: -3.897566795349121
    3. '0' → logprob: -6.397566795349121
    4. ':' → logprob: -9.147566795349121
    5. '=' → logprob: -9.397566795349121
    6. ')==' → logprob: -9.647566795349121
    7. '<|end|>' → logprob: -9.772566795349121
    8. ' ' → logprob: -11.272566795349121
    9. '!=' → logprob: -11.272566795349121
    10. '()==' → logprob: -12.522566795349121

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005290207453072071
    2. '1' → logprob: -5.5052900314331055
    3. ' ' → logprob: -6.8802900314331055
    4. '2' → logprob: -8.630290031433105
    5. '```' → logprob: -14.692790031433105
    6. '==' → logprob: -14.755290031433105
    7. '۰' → logprob: -14.755290031433105
    8. '  ' → logprob: -15.130290031433105
    9. '   ' → logprob: -15.380290031433105
    10. '...' → logprob: -15.567790031433105

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014739706180989742
    2. ':
' → logprob: -4.264739513397217
    3. ':return' → logprob: -8.014739990234375
    4. '):' → logprob: -9.389739990234375
    5. '<|end|>' → logprob: -10.014739990234375
    6. '       ' → logprob: -10.139739990234375
    7. ':

' → logprob: -10.889739990234375
    8. '):
' → logprob: -11.014739990234375
    9. ',' → logprob: -11.264739990234375
    10. ' :' → logprob: -11.514739990234375

Token 69: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18959566950798035
    2. ' s' → logprob: -2.4395956993103027
    3. '       ' → logprob: -2.8145956993103027
    4. 'return' → logprob: -4.064595699310303
    5. '           ' → logprob: -5.314595699310303
    6. 's' → logprob: -6.439595699310303
    7. '   ' → logprob: -8.064595222473145
    8. '<|end|>' → logprob: -8.064595222473145
    9. '	return' → logprob: -8.189595222473145
    10. '
' → logprob: -8.439595222473145

Token 70: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9496257901191711
    2. ' return' → logprob: -1.1996257305145264
    3. 's' → logprob: -1.6996257305145264
    4. ' s' → logprob: -2.0746257305145264
    5. '       ' → logprob: -6.4496259689331055
    6. '           ' → logprob: -7.8246259689331055
    7. '   ' → logprob: -7.9496259689331055
    8. 'r' → logprob: -8.449625968933105
    9. 'ret' → logprob: -9.449625968933105
    10. '```' → logprob: -9.637125968933105

Token 71: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12700161337852478
    2. ' s' → logprob: -2.1270015239715576
    3. '(s' → logprob: -10.752001762390137
    4. ' ' → logprob: -11.002001762390137
    5. 'inv' → logprob: -11.502001762390137
    6. '   ' → logprob: -12.127001762390137
    7. '  ' → logprob: -12.814501762390137
    8. ' inv' → logprob: -13.189501762390137
    9. ' ' → logprob: -13.939501762390137
    10. '```' → logprob: -14.002001762390137

Token 72: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.0003989720717072487
    2. '[:' → logprob: -7.875399112701416
    3. '[' → logprob: -12.000398635864258
    4. 'mid' → logprob: -12.250398635864258
    5. '[-' → logprob: -13.000398635864258
    6. '[l' → logprob: -13.250398635864258
    7. '[m' → logprob: -14.000398635864258
    8. '[::-' → logprob: -14.125398635864258
    9. '[min' → logprob: -14.750398635864258
    10. ' [' → logprob: -14.750398635864258

Token 73: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29611870646476746
    2. ':]' → logprob: -1.4211187362670898
    3. '-' → logprob: -4.54611873626709
    4. '+' → logprob: -6.54611873626709
    5. ']+' → logprob: -6.54611873626709
    6. ':l' → logprob: -7.42111873626709
    7. '+l' → logprob: -8.67111873626709
    8. ' :' → logprob: -9.29611873626709
    9. ' -' → logprob: -9.42111873626709
    10. '::-' → logprob: -9.42111873626709

Token 74: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.10070790350437164
    2. ']' → logprob: -2.3507080078125
    3. ' ]' → logprob: -8.1007080078125
    4. 'l' → logprob: -8.7257080078125
    5. ']+"' → logprob: -11.1007080078125
    6. ' ' → logprob: -11.8507080078125
    7. ']+\' → logprob: -12.7257080078125
    8. ']-' → logprob: -13.2257080078125
    9. 's' → logprob: -13.4757080078125
    10. ']+=' → logprob: -13.7257080078125

Token 75: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00026169343618676066
    2. ' s' → logprob: -8.250261306762695
    3. '(s' → logprob: -16.000261306762695
    4. '```' → logprob: -16.750261306762695
    5. ' ' → logprob: -16.875261306762695
    6. '   ' → logprob: -17.000261306762695
    7. '<|end|>' → logprob: -17.125261306762695
    8. ''s' → logprob: -17.250261306762695
    9. '`s' → logprob: -17.375261306762695
    10. '	s' → logprob: -18.000261306762695

Token 76: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00045807508286088705
    2. ':' → logprob: -8.250457763671875
    3. '[' → logprob: -8.875457763671875
    4. '[mid' → logprob: -10.000457763671875
    5. '][:' → logprob: -12.875457763671875
    6. ' [:' → logprob: -13.000457763671875
    7. '[:-' → logprob: -13.500457763671875
    8. ' :' → logprob: -14.125457763671875
    9. '[:]' → logprob: -14.250457763671875
    10. '   ' → logprob: -14.625457763671875

Token 77: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -5.200166469876422e-06
    2. ' mid' → logprob: -12.500004768371582
    3. '[mid' → logprob: -13.750004768371582
    4. '(mid' → logprob: -15.875004768371582
    5. '<|end|>' → logprob: -16.5000057220459
    6. ' ' → logprob: -16.8750057220459
    7. '<|end|>' → logprob: -18.2500057220459
    8. '   ' → logprob: -18.2500057220459
    9. 'middle' → logprob: -18.5000057220459
    10. '_mid' → logprob: -19.0000057220459

Token 78: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2921304404735565
    2. '       ' → logprob: -1.792130470275879
    3. ')
' → logprob: -2.667130470275879
    4. ']' → logprob: -4.417130470275879
    5. ']
' → logprob: -5.792130470275879
    6. '   ' → logprob: -6.542130470275879
    7. ')
' → logprob: -8.417130470275879
    8. '）' → logprob: -9.292130470275879
    9. ' ' → logprob: -10.042130470275879
    10. '<|end|>' → logprob: -10.042130470275879

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008702859282493591
    2. '   ' → logprob: -5.508702754974365
    3. '
' → logprob: -5.883702754974365
    4. 'else' → logprob: -7.133702754974365
    5. 's' → logprob: -8.008703231811523
    6. '<|end|>' → logprob: -8.758703231811523
    7. ' else' → logprob: -8.883703231811523
    8. '```' → logprob: -9.508703231811523
    9. '        
' → logprob: -9.633703231811523
    10. '    
' → logprob: -9.883703231811523

Token 80: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2622796893119812
    2. 'else' (adapté à ' else') → logprob: -1.637279748916626
    3. ' else' → logprob: -3.762279748916626
    4. '   ' → logprob: -4.512279510498047
    5. 'return' → logprob: -6.512279510498047
    6. 's' → logprob: -8.637279510498047
    7. ' return' → logprob: -9.137279510498047
    8. '```' → logprob: -9.512279510498047
    9. ' ' → logprob: -10.012279510498047
    10. '           ' → logprob: -10.137279510498047

Token 81: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4525600075721741
    2. ' return' → logprob: -1.4525599479675293
    3. 'return' → logprob: -2.9525599479675293
    4. ' s' → logprob: -3.2025599479675293
    5. '   ' → logprob: -4.952559947967529
    6. '            ' → logprob: -4.952559947967529
    7. ':' → logprob: -5.327559947967529
    8. '    ' → logprob: -5.452559947967529
    9. ' ' → logprob: -5.827559947967529
    10. '       ' → logprob: -5.952559947967529

Token 82: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1570746898651123
    2. ' return' → logprob: -2.0320746898651123
    3. 'return' → logprob: -4.907074928283691
    4. '       ' → logprob: -5.532074928283691
    5. ' s' → logprob: -7.032074928283691
    6. '        ' → logprob: -7.532074928283691
    7. '   ' → logprob: -7.657074928283691
    8. '          ' → logprob: -8.282074928283691
    9. ' ' → logprob: -8.782074928283691
    10. '         ' → logprob: -8.907074928283691

Token 83: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2270125448703766
    2. ' return' → logprob: -1.6020125150680542
    3. '       ' → logprob: -7.227012634277344
    4. '           ' → logprob: -7.977012634277344
    5. 's' → logprob: -8.727012634277344
    6. ' s' → logprob: -8.977012634277344
    7. 'eturn' → logprob: -8.977012634277344
    8. '   ' → logprob: -9.727012634277344
    9. ' ' → logprob: -11.352012634277344
    10. '```' → logprob: -11.727012634277344

Token 84: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.34847572445869446
    2. 's' → logprob: -1.223475694656372
    3. '(s' → logprob: -11.473475456237793
    4. ' ' → logprob: -11.848475456237793
    5. 'inv' → logprob: -13.535975456237793
    6. '   ' → logprob: -13.598475456237793
    7. ' inv' → logprob: -13.723475456237793
    8. '(' → logprob: -13.910975456237793
    9. ''s' → logprob: -13.973475456237793
    10. '  ' → logprob: -14.035975456237793

Token 85: '[mid' (ID: 82578)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.85269695520401
    2. '[mid' → logprob: -1.1026968955993652
    3. '[::-' → logprob: -1.8526968955993652
    4. '[:' → logprob: -2.8526968955993652
    5. '[:-' → logprob: -4.477696895599365
    6. '[len' → logprob: -4.727696895599365
    7. '[l' → logprob: -5.602696895599365
    8. '[' → logprob: -6.227696895599365
    9. '[(' → logprob: -7.852696895599365
    10. '[m' → logprob: -8.852697372436523

Token 86: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08751203864812851
    2. ']+' → logprob: -2.9625120162963867
    3. ':' → logprob: -3.9625120162963867
    4. ':]' → logprob: -4.837512016296387
    5. ']' → logprob: -5.587512016296387
    6. '-' → logprob: -7.087512016296387
    7. ' +' → logprob: -8.837512016296387
    8. ':l' → logprob: -8.837512016296387
    9. ':-' → logprob: -9.087512016296387
    10. ' ]' → logprob: -9.962512016296387

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -11.750008583068848
    3. '+' → logprob: -15.375008583068848
    4. ':' → logprob: -15.500008583068848
    5. '2' → logprob: -16.125009536743164
    6. '```' → logprob: -16.375009536743164
    7. '   ' → logprob: -17.250009536743164
    8. '  ' → logprob: -17.875009536743164
    9. 'len' → logprob: -18.437509536743164
    10. '...' → logprob: -18.500009536743164

Token 88: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02439161017537117
    2. ':]' → logprob: -3.7743916511535645
    3. ']+' → logprob: -6.7743916511535645
    4. ']' → logprob: -13.274391174316406
    5. '']' → logprob: -15.149391174316406
    6. '"]' → logprob: -15.399391174316406
    7. '+' → logprob: -15.649391174316406
    8. ':-' → logprob: -15.774391174316406
    9. ':].' → logprob: -16.524391174316406
    10. ':+' → logprob: -17.149391174316406

Token 89: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.014272568747401237
    2. ']' → logprob: -4.264272689819336
    3. 'l' → logprob: -9.889272689819336
    4. '+' → logprob: -10.389272689819336
    5. ' ]' → logprob: -11.389272689819336
    6. 's' → logprob: -11.514272689819336
    7. 'mid' → logprob: -13.014272689819336
    8. '+l' → logprob: -13.389272689819336
    9. ')+' → logprob: -14.014272689819336
    10. ' ' → logprob: -14.389272689819336

Token 90: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007133854669518769
    2. ' s' → logprob: -7.250713348388672
    3. ''s' → logprob: -13.625713348388672
    4. '(s' → logprob: -14.000713348388672
    5. '`s' → logprob: -15.125713348388672
    6. ' ' → logprob: -15.250713348388672
    7. '[s' → logprob: -15.500713348388672
    8. '   ' → logprob: -16.375713348388672
    9. '[' → logprob: -16.625713348388672
    10. 'mid' → logprob: -16.750713348388672

Token 91: '[mid' (ID: 82578)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.10024355351924896
    2. '[mid' → logprob: -2.35024356842041
    3. '[' → logprob: -10.35024356842041
    4. '[:-' → logprob: -13.22524356842041
    5. '[:]' → logprob: -13.47524356842041
    6. 'mid' → logprob: -14.47524356842041
    7. '[m' → logprob: -15.22524356842041
    8. ' [:' → logprob: -15.47524356842041
    9. '[int' → logprob: -15.97524356842041
    10. ':' → logprob: -16.100242614746094

Token 92: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.08820151537656784
    2. ']' → logprob: -2.5882015228271484
    3. ':' → logprob: -4.713201522827148
    4. '+' → logprob: -9.338201522827148
    5. ']<<' → logprob: -9.963201522827148
    6. ' ]' → logprob: -10.213201522827148
    7. ']+"' → logprob: -10.213201522827148
    8. ']*' → logprob: -11.338201522827148
    9. ':]' → logprob: -11.338201522827148
    10. '[mid' → logprob: -11.963201522827148

Token 93: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00014001218369230628
    2. ' s' → logprob: -8.875140190124512
    3. '```' → logprob: -16.625139236450195
    4. ''s' → logprob: -17.500139236450195
    5. '   ' → logprob: -17.750139236450195
    6. '(s' → logprob: -17.875139236450195
    7. '`s' → logprob: -18.500139236450195
    8. '	s' → logprob: -18.625139236450195
    9. ' ' → logprob: -18.625139236450195
    10. '+s' → logprob: -18.750139236450195

Token 94: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.6383647918701172
    2. '[:-' → logprob: -0.7633647918701172
    3. ':' → logprob: -5.263364791870117
    4. '[mid' → logprob: -8.388364791870117
    5. ':m' → logprob: -8.638364791870117
    6. ':-' → logprob: -9.263364791870117
    7. ':end' → logprob: -10.763364791870117
    8. ':s' → logprob: -11.263364791870117
    9. ':mm' → logprob: -12.013364791870117
    10. '[' → logprob: -12.763364791870117

Token 95: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -3.054500666621607e-06
    2. ' mid' → logprob: -12.75000286102295
    3. '[mid' → logprob: -16.000003814697266
    4. '(mid' → logprob: -17.125003814697266
    5. 'm' → logprob: -19.000003814697266
    6. ' ' → logprob: -19.125003814697266
    7. 'middle' → logprob: -21.000003814697266
    8. '-mid' → logprob: -21.375003814697266
    9. '   ' → logprob: -21.625003814697266
    10. 'midt' → logprob: -21.750003814697266

Token 96: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007347009377554059
    2. ']' → logprob: -7.250734806060791
    3. ')
' → logprob: -11.000734329223633
    4. '}' → logprob: -13.125734329223633
    5. '）' → logprob: -13.375734329223633
    6. '   ' → logprob: -13.875734329223633
    7. ')]' → logprob: -14.000734329223633
    8. '])' → logprob: -14.250734329223633
    9. '<|end|>' → logprob: -14.750734329223633
    10. '       ' → logprob: -15.000734329223633

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13362646102905273
    2. '    
' → logprob: -3.5086264610290527
    3. '
' → logprob: -3.7586264610290527
    4. 's' → logprob: -4.133626461029053
    5. 'def' → logprob: -4.133626461029053
    6. '#' → logprob: -5.133626461029053
    7. '<|end|>' → logprob: -5.133626461029053
    8. 'n' → logprob: -5.258626461029053
    9. 'a' → logprob: -6.133626461029053
    10. 'for' → logprob: -6.383626461029053

Token 98: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025846881791949272
    2. '
' → logprob: -4.5258469581604
    3. '    
' → logprob: -5.0258469581604
    4. 's' → logprob: -5.6508469581604
    5. 'n' → logprob: -6.2758469581604
    6. '    ' → logprob: -8.150846481323242
    7. 'x' → logprob: -8.275846481323242
    8. '#' → logprob: -8.525846481323242
    9. 'input' → logprob: -8.525846481323242
    10. 't' → logprob: -9.025846481323242

Token 99: ' inv' (ID: 1827)
  Prédit: ' inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.6325616836547852
    2. ' solve' → logprob: -2.507561683654785
    3. ' main' → logprob: -2.632561683654785
    4. ' D' → logprob: -2.757561683654785
    5. ' F' → logprob: -3.820061683654785
    6. ' decode' → logprob: -4.132561683654785
    7. 'inv' → logprob: -4.445061683654785
    8. ' A' → logprob: -4.507561683654785
    9. ' B' → logprob: -4.695061683654785
    10. ' P' → logprob: -4.820061683654785

Token 100: '_A' (ID: 6829)
  Prédit: '_R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_R' → logprob: -1.764444351196289
    2. '_A' → logprob: -2.139444351196289
    3. '_F' → logprob: -2.264444351196289
    4. '_S' → logprob: -2.514444351196289
    5. '_D' → logprob: -2.639444351196289
    6. '_B' → logprob: -2.639444351196289
    7. '_P' → logprob: -2.639444351196289
    8. '_T' → logprob: -2.639444351196289
    9. '_V' → logprob: -3.264444351196289
    10. '_I' → logprob: -3.389444351196289

Token 101: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00017672323156148195
    2. '(' → logprob: -9.500176429748535
    3. ' (' → logprob: -10.125176429748535
    4. '(a' → logprob: -10.875176429748535
    5. 's' → logprob: -11.750176429748535
    6. '(n' → logprob: -11.875176429748535
    7. '(c' → logprob: -12.750176429748535
    8. '_' → logprob: -12.875176429748535
    9. 'a' → logprob: -12.875176429748535
    10. '(t' → logprob: -13.000176429748535

Token 102: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003005464968737215
    2. '):
' → logprob: -8.125300407409668
    3. ' ):' → logprob: -13.125300407409668
    4. ')' → logprob: -13.875300407409668
    5. '   ' → logprob: -14.875300407409668
    6. '):
' → logprob: -15.000300407409668
    7. '):

' → logprob: -15.125300407409668
    8. ''):' → logprob: -15.750300407409668
    9. 's' → logprob: -16.125301361083984
    10. '"):' → logprob: -16.750301361083984

Token 103: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4925031065940857
    2. ' s' → logprob: -0.9925031065940857
    3. '   ' → logprob: -4.8675031661987305
    4. 'return' → logprob: -4.9925031661987305
    5. 's' → logprob: -5.9925031661987305
    6. '    ' → logprob: -7.3675031661987305
    7. ' a' → logprob: -9.61750316619873
    8. ' if' → logprob: -9.74250316619873
    9. ' def' → logprob: -9.74250316619873
    10. ' for' → logprob: -9.93000316619873

Token 104: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6504724025726318
    2. ' s' → logprob: -0.7754724025726318
    3. '''.' → logprob: -4.650472640991211
    4. 'chr' → logprob: -6.275472640991211
    5. ' ''.' → logprob: -6.400472640991211
    6. '''' → logprob: -6.650472640991211
    7. ' chr' → logprob: -7.275472640991211
    8. ''s' → logprob: -7.275472640991211
    9. ''' → logprob: -7.400472640991211
    10. '"' → logprob: -8.025472640991211

Token 105: '[::-' (ID: 159890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21531876921653748
    2. '<|end|>' → logprob: -2.5903186798095703
    3. '
' → logprob: -3.0903186798095703
    4. 'def' → logprob: -3.7153186798095703
    5. '    
' → logprob: -4.34031867980957
    6. 's' → logprob: -4.34031867980957
    7. '<|end|>' → logprob: -5.96531867980957
    8. 'n' → logprob: -5.96531867980957
    9. 'return' → logprob: -6.46531867980957
    10. '#' → logprob: -6.46531867980957

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. 's' → logprob: -12.125009536743164
    3. '```' → logprob: -14.875009536743164
    4. 'ls' → logprob: -15.000009536743164
    5. 'rev' → logprob: -15.250009536743164
    6. 'se' → logprob: -15.375009536743164
    7. 'def' → logprob: -15.500009536743164
    8. 'sel' → logprob: -16.000009536743164
    9. 'sis' → logprob: -16.000009536743164
    10. 'rs' → logprob: -16.000009536743164

Token 107: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.963691804325208e-05
    2. '<|end|>' → logprob: -10.625029563903809
    3. ')
' → logprob: -13.625029563903809
    4. ']' → logprob: -13.625029563903809
    5. ' )' → logprob: -13.875029563903809
    6. '')' → logprob: -14.250029563903809
    7. '   ' → logprob: -15.375029563903809
    8. ')s' → logprob: -15.500029563903809
    9. '()' → logprob: -16.000030517578125
    10. '）' → logprob: -16.375030517578125

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20960305631160736
    2. '
' → logprob: -2.8346030712127686
    3. '    
' → logprob: -3.4596030712127686
    4. '<|end|>' → logprob: -3.5846030712127686
    5. 'n' → logprob: -3.9596030712127686
    6. 's' → logprob: -3.9596030712127686
    7. 'def' → logprob: -4.3346028327941895
    8. 'a' → logprob: -6.3346028327941895
    9. 'rest' → logprob: -6.5846028327941895
    10. 'x' → logprob: -6.7096028327941895

Token 109: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09975308924913406
    2. '
' → logprob: -3.2247531414031982
    3. 's' → logprob: -3.8497531414031982
    4. 'def' (adapté à ' def') → logprob: -3.9747531414031982
    5. '    
' → logprob: -4.849752902984619
    6. 'n' → logprob: -6.224752902984619
    7. 't' → logprob: -7.599752902984619
    8. '<|end|>' → logprob: -7.849752902984619
    9. 'a' → logprob: -7.974752902984619
    10. 'token' → logprob: -8.224753379821777

Token 110: ' inv' (ID: 1827)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -1.5695562362670898
    2. ' B' → logprob: -1.9445562362670898
    3. ' D' → logprob: -2.06955623626709
    4. ' inv' → logprob: -2.69455623626709
    5. '_D' → logprob: -2.69455623626709
    6. ' M' → logprob: -3.69455623626709
    7. ' V' → logprob: -3.81955623626709
    8. ' P' → logprob: -3.81955623626709
    9. '_P' → logprob: -3.94455623626709
    10. 'D' → logprob: -4.00705623626709

Token 111: '_P' (ID: 2008)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.5130235552787781
    2. '_D' → logprob: -1.5130236148834229
    3. '_S' → logprob: -3.388023614883423
    4. '_F' → logprob: -3.888023614883423
    5. '_T' → logprob: -3.888023614883423
    6. '_P' → logprob: -4.263023376464844
    7. '_R' → logprob: -4.263023376464844
    8. '_M' → logprob: -4.638023376464844
    9. '_Z' → logprob: -4.638023376464844
    10. '_L' → logprob: -5.013023376464844

Token 112: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.191489642835222e-05
    2. '(' → logprob: -10.875041961669922
    3. ' (' → logprob: -12.500041961669922
    4. '(a' → logprob: -13.000041961669922
    5. '(S' → logprob: -13.250041961669922
    6. '(r' → logprob: -13.375041961669922
    7. 's' → logprob: -13.500041961669922
    8. '_(' → logprob: -13.625041961669922
    9. '(str' → logprob: -13.750041961669922
    10. 'r' → logprob: -14.000041961669922

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.492120155598968e-05
    2. '):
' → logprob: -9.750064849853516
    3. ' ):' → logprob: -12.750064849853516
    4. ')' → logprob: -13.750064849853516
    5. ':' → logprob: -14.000064849853516
    6. '   ' → logprob: -14.250064849853516
    7. '):

' → logprob: -14.750064849853516
    8. ''):' → logprob: -15.750064849853516
    9. '):
' → logprob: -16.625064849853516
    10. ')=' → logprob: -16.750064849853516

Token 114: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.556397557258606
    2. '   ' → logprob: -1.306397557258606
    3. ' s' → logprob: -2.6813974380493164
    4. 'return' → logprob: -3.0563974380493164
    5. '    ' → logprob: -4.306397438049316
    6. 's' → logprob: -4.556397438049316
    7. ' n' → logprob: -5.681397438049316
    8. 'n' → logprob: -6.056397438049316
    9. ' p' → logprob: -6.556397438049316
    10. 'p' → logprob: -6.681397438049316

Token 115: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5829693675041199
    2. 'n' → logprob: -1.8329694271087646
    3. 'l' → logprob: -2.4579694271087646
    4. 's' → logprob: -3.0829694271087646
    5. 'res' (adapté à ' res') → logprob: -3.4579694271087646
    6. 'from' → logprob: -4.3329691886901855
    7. 'pairs' → logprob: -4.4579691886901855
    8. ' return' → logprob: -4.5829691886901855
    9. 'mid' → logprob: -4.7079691886901855
    10. '   ' → logprob: -4.9579691886901855

Token 116: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11945147067308426
    2. ' =' → logprob: -2.8694515228271484
    3. '=[]' → logprob: -3.2444515228271484
    4. '=""' → logprob: -4.494451522827148
    5. '=''' → logprob: -5.369451522827148
    6. '=s' → logprob: -7.494451522827148
    7. '=[]
' → logprob: -8.619451522827148
    8. '={}' → logprob: -8.994451522827148
    9. ',' → logprob: -9.619451522827148
    10. '=len' → logprob: -10.619451522827148

Token 117: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2129640132188797
    2. '       ' → logprob: -2.5879640579223633
    3. ' i' → logprob: -2.8379640579223633
    4. '   ' → logprob: -3.5879640579223633
    5. ' n' → logprob: -4.337964057922363
    6. 'for' → logprob: -4.712964057922363
    7. ' s' → logprob: -6.212964057922363
    8. 'n' → logprob: -6.337964057922363
    9. ' ' → logprob: -6.462964057922363
    10. '	for' → logprob: -7.462964057922363

Token 118: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1299220472574234
    2. 'i' → logprob: -2.7549221515655518
    3. ' for' → logprob: -4.629921913146973
    4. 'stack' → logprob: -4.629921913146973
    5. 'idx' → logprob: -4.879921913146973
    6. 'j' → logprob: -5.004921913146973
    7. 'pos' → logprob: -5.379921913146973
    8. '   ' → logprob: -5.754921913146973
    9. 'used' → logprob: -5.879921913146973
    10. 'n' → logprob: -6.004921913146973

Token 119: ' c' (ID: 274)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19989334046840668
    2. 'i' → logprob: -2.0748932361602783
    3. ' c' → logprob: -3.0748932361602783
    4. 'c' → logprob: -4.824893474578857
    5. ' x' → logprob: -8.3248929977417
    6. 'ch' → logprob: -8.6998929977417
    7. ' ch' → logprob: -8.8248929977417
    8. 'x' → logprob: -8.9498929977417
    9. '_' → logprob: -9.0748929977417
    10. ' _' → logprob: -9.1998929977417

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009208060801029205
    2. 'in' → logprob: -5.0092082023620605
    3. 's' → logprob: -6.2592082023620605
    4. ' ' → logprob: -8.009207725524902
    5. ' s' → logprob: -9.884207725524902
    6. '   ' → logprob: -10.009207725524902
    7. '  ' → logprob: -10.009207725524902
    8. ',' → logprob: -10.384207725524902
    9. ',s' → logprob: -11.134207725524902
    10. 'n' → logprob: -11.884207725524902

Token 121: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016124458983540535
    2. ' s' → logprob: -4.141124248504639
    3. 'range' → logprob: -10.391124725341797
    4. '(s' → logprob: -11.141124725341797
    5. ' reversed' → logprob: -11.391124725341797
    6. 're' → logprob: -11.891124725341797
    7. 'sorted' → logprob: -12.141124725341797
    8. ' range' → logprob: -12.391124725341797
    9. '   ' → logprob: -12.516124725341797
    10. '[::-' → logprob: -13.141124725341797

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49222132563591003
    2. ':
' → logprob: -0.9922213554382324
    3. '           ' → logprob: -4.242221355438232
    4. '[' → logprob: -6.867221355438232
    5. '[::-' → logprob: -6.867221355438232
    6. ' in' → logprob: -7.867221355438232
    7. '       ' → logprob: -8.367220878601074
    8. 'in' → logprob: -8.617220878601074
    9. 's' → logprob: -9.242220878601074
    10. '   ' → logprob: -9.367220878601074

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11575363576412201
    2. ' if' → logprob: -2.240753650665283
    3. 'if' → logprob: -7.365753650665283
    4. '
' → logprob: -7.615753650665283
    5. '            ' → logprob: -7.615753650665283
    6. '        ' → logprob: -8.365753173828125
    7. ' s' → logprob: -8.990753173828125
    8. '       ' → logprob: -9.365753173828125
    9. ',' → logprob: -9.490753173828125
    10. '            
' → logprob: -9.615753173828125

Token 124: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6745771169662476
    2. ' res' → logprob: -1.0495771169662476
    3. 'res' → logprob: -2.424577236175537
    4. 'if' (adapté à ' if') → logprob: -3.049577236175537
    5. '           ' → logprob: -5.674577236175537
    6. '            ' → logprob: -8.674576759338379
    7. ' code' → logprob: -8.799576759338379
    8. 'x' → logprob: -9.049576759338379
    9. 'n' → logprob: -9.174576759338379
    10. 'r' → logprob: -9.299576759338379

Token 125: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6652447581291199
    2. 'c' → logprob: -0.7902447581291199
    3. ''' → logprob: -3.5402448177337646
    4. ' '' → logprob: -5.9152445793151855
    5. ' ' → logprob: -9.415245056152344
    6. ' ord' → logprob: -9.415245056152344
    7. ''a' → logprob: -9.665245056152344
    8. 'ord' → logprob: -9.790245056152344
    9. ' not' → logprob: -10.665245056152344
    10. ''A' → logprob: -10.852745056152344

Token 126: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.7894929647445679
    2. '==' → logprob: -2.0394930839538574
    3. '=='' → logprob: -2.1644930839538574
    4. ' in' → logprob: -2.4144930839538574
    5. '>' → logprob: -2.5394930839538574
    6. ' ==' → logprob: -2.5394930839538574
    7. 'is' → logprob: -4.289493083953857
    8. '.' → logprob: -4.289493083953857
    9. '>=' → logprob: -4.664493083953857
    10. 'in' → logprob: -5.289493083953857

Token 127: 'digit' (ID: 78327)
  Prédit: 'alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.5633882880210876
    2. 'upper' → logprob: -1.4383883476257324
    3. 'lower' → logprob: -1.6883883476257324
    4. 'digit' → logprob: -4.813388347625732
    5. 'al' → logprob: -8.188387870788574
    6. 'decimal' → logprob: -9.563387870788574
    7. 'ascii' → logprob: -9.938387870788574
    8. 'numeric' → logprob: -10.063387870788574
    9. 'print' → logprob: -11.813387870788574
    10. 'a' → logprob: -11.938387870788574

Token 128: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.028390511870384216
    2. '()' → logprob: -4.153390407562256
    3. '():
' → logprob: -4.403390407562256
    4. '():

' → logprob: -11.153390884399414
    5. '()==' → logprob: -11.403390884399414
    6. '():
' → logprob: -12.153390884399414
    7. ' ():' → logprob: -12.403390884399414
    8. '(' → logprob: -12.528390884399414
    9. '()%' → logprob: -12.903390884399414
    10. ':' → logprob: -14.153390884399414

Token 129: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29796484112739563
    2. '           ' → logprob: -1.4229648113250732
    3. ' res' → logprob: -4.547965049743652
    4. 'res' → logprob: -7.047965049743652
    5. '<|end|>' → logprob: -7.422965049743652
    6. '
' → logprob: -7.797965049743652
    7. ' and' → logprob: -7.922965049743652
    8. ' if' → logprob: -7.922965049743652
    9. ' ' → logprob: -8.047965049743652
    10. ')' → logprob: -8.047965049743652

Token 130: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.432197630405426
    2. 'res' (adapté à ' res') → logprob: -1.0571975708007812
    3. '           ' → logprob: -6.682197570800781
    4. ' if' → logprob: -7.057197570800781
    5. '                   ' → logprob: -7.557197570800781
    6. '               ' → logprob: -7.932197570800781
    7. 'if' → logprob: -8.682197570800781
    8. '
' → logprob: -9.682197570800781
    9. 'n' → logprob: -9.932197570800781
    10. 'num' → logprob: -10.307197570800781

Token 131: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01933324709534645
    2. '.' → logprob: -4.019333362579346
    3. ' .' → logprob: -6.769333362579346
    4. 'append' → logprob: -11.269332885742188
    5. '+=' → logprob: -11.519332885742188
    6. ' +=' → logprob: -12.394332885742188
    7. ' append' → logprob: -13.394332885742188
    8. '=' → logprob: -14.269332885742188
    9. '.app' → logprob: -14.269332885742188
    10. '.ap' → logprob: -14.394332885742188

Token 132: '('' (ID: 706)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.062325939536094666
    2. 'chr' → logprob: -3.062325954437256
    3. ' str' → logprob: -4.937325954437256
    4. 'c' → logprob: -5.187325954437256
    5. ' chr' → logprob: -8.312325477600098
    6. '   ' → logprob: -8.437325477600098
    7. ' c' → logprob: -8.937325477600098
    8. '(str' → logprob: -9.312325477600098
    9. '(chr' → logprob: -9.812325477600098
    10. ' ' → logprob: -10.437325477600098

Token 133: '9' (ID: 24)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.049563124775886536
    2. '9' → logprob: -3.92456316947937
    3. 'chr' → logprob: -4.549562931060791
    4. ' str' → logprob: -4.674562931060791
    5. 'c' → logprob: -5.299562931060791
    6. '{' → logprob: -6.924562931060791
    7. '0' → logprob: -7.299562931060791
    8. ''' → logprob: -7.924562931060791
    9. '{'' → logprob: -8.04956340789795
    10. '1' → logprob: -8.42456340789795

Token 134: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3104129135608673
    2. '')' → logprob: -1.810412883758545
    3. 'str' → logprob: -3.935412883758545
    4. 'chr' → logprob: -4.185412883758545
    5. '-' → logprob: -4.310412883758545
    6. '(chr' → logprob: -4.435412883758545
    7. ')' → logprob: -4.810412883758545
    8. '
' → logprob: -4.935412883758545
    9. ' -' → logprob: -5.060412883758545
    10. ' chr' → logprob: -5.810412883758545

Token 135: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1645379215478897
    2. 'chr' → logprob: -2.6645379066467285
    3. 'str' → logprob: -2.9145379066467285
    4. ' if' → logprob: -4.9145379066467285
    5. '-' → logprob: -5.4145379066467285
    6. '')' → logprob: -5.5395379066467285
    7. '-str' → logprob: -6.0395379066467285
    8. '(chr' → logprob: -6.4145379066467285
    9. '=str' → logprob: -6.5395379066467285
    10. ' chr' → logprob: -6.7895379066467285

Token 136: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0297548845410347
    2. ' c' → logprob: -3.529754877090454
    3. ' ' → logprob: -13.529754638671875
    4. 'int' → logprob: -14.154754638671875
    5. ')c' → logprob: -14.779754638671875
    6. '   ' → logprob: -15.029754638671875
    7. '  ' → logprob: -15.592254638671875
    8. '(c' → logprob: -15.592254638671875
    9. '0' → logprob: -15.717254638671875
    10. '
' → logprob: -15.904754638671875

Token 137: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.00506155239418149
    2. '==' → logprob: -5.380061626434326
    3. ' ==' → logprob: -7.880061626434326
    4. ' =='' → logprob: -11.005061149597168
    5. '=="' → logprob: -11.380061149597168
    6. '='' → logprob: -11.505061149597168
    7. '!='' → logprob: -11.880061149597168
    8. 'else' → logprob: -12.380061149597168
    9. '==='' → logprob: -12.380061149597168
    10. '=' → logprob: -12.505061149597168

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030114251421764493
    2. '9' → logprob: -8.125301361083984
    3. ' ' → logprob: -12.375301361083984
    4. ''' → logprob: -14.125301361083984
    5. ' '' → logprob: -17.125301361083984
    6. ''s' → logprob: -17.125301361083984
    7. '1' → logprob: -17.500301361083984
    8. '
' → logprob: -18.687801361083984
    9. '

' → logprob: -18.750301361083984
    10. '۰' → logprob: -18.750301361083984

Token 139: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47413837909698486
    2. 'else' → logprob: -0.9741383790969849
    3. ''' → logprob: -10.099138259887695
    4. '```' → logprob: -12.224138259887695
    5. '	else' → logprob: -12.599138259887695
    6. '
' → logprob: -12.974138259887695
    7. ' ' → logprob: -13.849138259887695
    8. '   ' → logprob: -13.974138259887695
    9. '0' → logprob: -13.974138259887695
    10. '           ' → logprob: -14.224138259887695

Token 140: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20142006874084473
    2. ' else' → logprob: -1.7014200687408447
    3. '	else' → logprob: -12.576419830322266
    4. '
' → logprob: -14.201419830322266
    5. '               ' → logprob: -14.576419830322266
    6. '           ' → logprob: -14.701419830322266
    7. ')' → logprob: -15.326419830322266
    8. '9' → logprob: -15.451419830322266
    9. ' ' → logprob: -15.701419830322266
    10. '0' → logprob: -15.701419830322266

Token 141: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03030228056013584
    2. ' str' → logprob: -3.5303022861480713
    3. 'chr' → logprob: -7.530302047729492
    4. ' chr' → logprob: -11.530302047729492
    5. ' ' → logprob: -12.780302047729492
    6. '   ' → logprob: -13.905302047729492
    7. '  ' → logprob: -14.030302047729492
    8. '	str' → logprob: -15.530302047729492
    9. '(str' → logprob: -15.655302047729492
    10. '    ' → logprob: -16.030302047729492

Token 142: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018405809998512268
    2. '(' → logprob: -4.018405914306641
    3. '(ord' → logprob: -8.76840591430664
    4. '((' → logprob: -9.39340591430664
    5. 'int' → logprob: -11.26840591430664
    6. '(abs' → logprob: -12.89340591430664
    7. '9' → logprob: -13.89340591430664
    8. '(chr' → logprob: -15.76840591430664
    9. '[int' → logprob: -16.01840591430664
    10. ' (' → logprob: -16.14340591430664

Token 143: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.6166903151315637e-05
    2. 'c' → logprob: -11.625016212463379
    3. '(' → logprob: -12.375016212463379
    4. '9' → logprob: -13.750016212463379
    5. '(int' → logprob: -14.125016212463379
    6. '('' → logprob: -14.500016212463379
    7. ')c' → logprob: -15.500016212463379
    8. '((' → logprob: -16.000015258789062
    9. '©' → logprob: -16.375015258789062
    10. '	c' → logprob: -17.625015258789062

Token 144: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.206888347864151
    2. ')' → logprob: -1.7068883180618286
    3. ')+' → logprob: -5.956888198852539
    4. ')c' → logprob: -6.456888198852539
    5. 'c' → logprob: -6.706888198852539
    6. ' )' → logprob: -10.206888198852539
    7. '[c' → logprob: -11.206888198852539
    8. ' c' → logprob: -11.456888198852539
    9. '(c' → logprob: -11.706888198852539
    10. ')-(' → logprob: -12.831888198852539

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.375008583068848
    4. '  ' → logprob: -18.25000762939453
    5. '<|end|>' → logprob: -18.25000762939453
    6. ')' → logprob: -18.87500762939453
    7. '           ' → logprob: -19.75000762939453
    8. '' → logprob: -19.87500762939453
    9. '       ' → logprob: -19.93750762939453
    10. '
' → logprob: -19.93750762939453

Token 146: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4744149446487427
    2. '))
' → logprob: -0.9744149446487427
    3. ')' → logprob: -8.724414825439453
    4. ' ))
' → logprob: -9.599414825439453
    5. ' ))' → logprob: -10.474414825439453
    6. ')))' → logprob: -10.474414825439453
    7. '))
' → logprob: -11.099414825439453
    8. '))

' → logprob: -11.474414825439453
    9. ')))
' → logprob: -11.599414825439453
    10. ''))
' → logprob: -12.099414825439453

Token 147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15273745357990265
    2. ' else' → logprob: -2.2777373790740967
    3. 'else' → logprob: -3.2777373790740967
    4. '       ' → logprob: -6.652737617492676
    5. '	else' → logprob: -10.277737617492676
    6. '
' → logprob: -10.527737617492676
    7. '               ' → logprob: -11.027737617492676
    8. '   ' → logprob: -11.152737617492676
    9. '```' → logprob: -11.777737617492676
    10. '          ' → logprob: -12.152737617492676

Token 148: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3313969671726227
    2. 'else' (adapté à ' else') → logprob: -1.5813969373703003
    3. '       ' → logprob: -2.58139705657959
    4. '           ' → logprob: -7.70639705657959
    5. '	else' → logprob: -8.70639705657959
    6. '   ' → logprob: -9.95639705657959
    7. 'elif' → logprob: -11.20639705657959
    8. '<|end|>' → logprob: -11.95639705657959
    9. ' elif' → logprob: -12.08139705657959
    10. ')' → logprob: -12.58139705657959

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19257435202598572
    2. ':
' → logprob: -1.817574381828308
    3. '               ' → logprob: -4.442574501037598
    4. '           ' → logprob: -7.192574501037598
    5. '       ' → logprob: -9.442574501037598
    6. ' :' → logprob: -10.317574501037598
    7. ' :
' → logprob: -10.442574501037598
    8. ':

' → logprob: -11.067574501037598
    9. '              ' → logprob: -11.192574501037598
    10. '):
' → logprob: -11.192574501037598

Token 150: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00045140698784962296
    2. '       ' → logprob: -8.00045108795166
    3. '           ' → logprob: -9.87545108795166
    4. 'res' → logprob: -11.75045108795166
    5. '                
' → logprob: -11.87545108795166
    6. ' res' → logprob: -11.87545108795166
    7. ' ' → logprob: -12.00045108795166
    8. ' ' → logprob: -12.00045108795166
    9. '```' → logprob: -12.00045108795166
    10. '              ' → logprob: -12.25045108795166

Token 151: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.05506463348865509
    2. ' res' → logprob: -2.9300646781921387
    3. '           ' → logprob: -9.30506420135498
    4. '               ' → logprob: -9.80506420135498
    5. 'if' → logprob: -11.68006420135498
    6. ' if' → logprob: -12.30506420135498
    7. '       ' → logprob: -12.43006420135498
    8. '                   ' → logprob: -12.80506420135498
    9. 'return' → logprob: -12.93006420135498
    10. '	res' → logprob: -13.18006420135498

Token 152: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.816591434879228e-05
    2. 'append' → logprob: -9.87508773803711
    3. '.' → logprob: -10.25008773803711
    4. '.extend' → logprob: -15.00008773803711
    5. '           ' → logprob: -15.37508773803711
    6. 'appen' → logprob: -15.75008773803711
    7. ' .' → logprob: -15.87508773803711
    8. '.remove' → logprob: -16.25008773803711
    9. 'pend' → logprob: -16.50008773803711
    10. '.Append' → logprob: -16.62508773803711

Token 153: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.27590814232826233
    2. 'c' → logprob: -1.52590811252594
    3. '(chr' → logprob: -4.27590799331665
    4. '(' → logprob: -5.77590799331665
    5. 'chr' → logprob: -6.02590799331665
    6. '('' → logprob: -6.15090799331665
    7. ' c' → logprob: -6.27590799331665
    8. ''' → logprob: -9.400908470153809
    9. '('_' → logprob: -10.650908470153809
    10. '(ord' → logprob: -10.650908470153809

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002973280206788331
    2. ')
' → logprob: -8.125297546386719
    3. ' )' → logprob: -14.625297546386719
    4. '')' → logprob: -15.625297546386719
    5. ')return' → logprob: -15.750297546386719
    6. ')

' → logprob: -15.875297546386719
    7. '))' → logprob: -16.00029754638672
    8. ')
' → logprob: -16.37529754638672
    9. ')`' → logprob: -16.37529754638672
    10. '       ' → logprob: -17.75029754638672

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01251177117228508
    2. '
' → logprob: -5.137511730194092
    3. ' return' → logprob: -5.762511730194092
    4. 'return' → logprob: -5.887511730194092
    5. '   ' → logprob: -8.63751220703125
    6. ')' → logprob: -8.76251220703125
    7. ')
' → logprob: -9.51251220703125
    8. '	return' → logprob: -10.13751220703125
    9. ' s' → logprob: -10.26251220703125
    10. '
' → logprob: -10.76251220703125

Token 156: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23467299342155457
    2. ' return' → logprob: -1.609673023223877
    3. '   ' → logprob: -4.859673023223877
    4. '
' → logprob: -7.109673023223877
    5. '       ' → logprob: -8.359672546386719
    6. ')' → logprob: -8.859672546386719
    7. '	return' → logprob: -9.359672546386719
    8. ')
' → logprob: -10.234672546386719
    9. '    
' → logprob: -10.359672546386719
    10. 's' → logprob: -10.859672546386719

Token 157: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.049561988562345505
    2. '"' → logprob: -3.0495619773864746
    3. ' ''.' → logprob: -7.049561977386475
    4. '''' → logprob: -9.924562454223633
    5. ' "".' → logprob: -10.174562454223633
    6. ''' → logprob: -10.924562454223633
    7. '""' → logprob: -14.049562454223633
    8. ' ' → logprob: -15.049562454223633
    9. '''
' → logprob: -16.424562454223633
    10. ''',' → logprob: -16.924562454223633

Token 158: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -9.13388703338569e-06
    2. 'jo' → logprob: -12.125009536743164
    3. 'j' → logprob: -12.625009536743164
    4. '/j' → logprob: -16.125009536743164
    5. ' join' → logprob: -16.750009536743164
    6. '```' → logprob: -17.250009536743164
    7. '(join' → logprob: -17.375009536743164
    8. '''.' → logprob: -17.375009536743164
    9. 'concat' → logprob: -18.625009536743164
    10. ''.' → logprob: -18.750009536743164

Token 159: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.584239938296378e-06
    2. 'res' → logprob: -11.875007629394531
    3. '(' → logprob: -14.625007629394531
    4. ' (' → logprob: -18.62500762939453
    5. '	res' → logprob: -19.62500762939453
    6. ' res' → logprob: -19.75000762939453
    7. '$res' → logprob: -19.87500762939453
    8. ',res' → logprob: -20.12500762939453
    9. '(
' → logprob: -20.62500762939453
    10. 'Res' → logprob: -21.87500762939453

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. '<|end|>' → logprob: -13.750001907348633
    3. ')
' → logprob: -14.250001907348633
    4. '))' → logprob: -16.125001907348633
    5. ')return' → logprob: -16.125001907348633
    6. ')}}' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.250001907348633
    8. ')))' → logprob: -17.625001907348633
    9. '<|end|>' → logprob: -18.000001907348633
    10. '')' → logprob: -18.125001907348633

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2253165990114212
    2. 'def' → logprob: -1.7253166437149048
    3. '<|end|>' → logprob: -4.100316524505615
    4. ' def' → logprob: -5.100316524505615
    5. '<|end|>' → logprob: -7.725316524505615
    6. '#' → logprob: -9.225317001342773
    7. '	def' → logprob: -9.475317001342773
    8. '    
' → logprob: -9.725317001342773
    9. '```' → logprob: -10.225317001342773
    10. '
' → logprob: -10.350317001342773

Token 162: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3920819163322449
    2. 'def' (adapté à ' def') → logprob: -1.1420819759368896
    3. ' def' → logprob: -6.5170817375183105
    4. '
' → logprob: -7.2670817375183105
    5. '    
' → logprob: -7.5170817375183105
    6. 's' → logprob: -7.6420817375183105
    7. 'for' → logprob: -8.142082214355469
    8. '#' → logprob: -8.142082214355469
    9. 'input' → logprob: -8.392082214355469
    10. 'import' → logprob: -8.642082214355469

Token 163: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.3624289333820343
    2. 'P' → logprob: -2.237428903579712
    3. '_P' → logprob: -2.487428903579712
    4. 'Q' → logprob: -4.237429141998291
    5. 'B' → logprob: -4.487429141998291
    6. ' inv' → logprob: -4.862429141998291
    7. 'C' → logprob: -5.299929141998291
    8. 'main' → logprob: -5.362429141998291
    9. 'D' → logprob: -5.424929141998291
    10. 'S' → logprob: -5.549929141998291

Token 164: '_M' (ID: 2372)
  Prédit: '_S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -1.4877640008926392
    2. '_R' → logprob: -1.7377640008926392
    3. '_B' → logprob: -1.9877640008926392
    4. '_T' → logprob: -2.4877638816833496
    5. '_M' → logprob: -2.6127638816833496
    6. '_Q' → logprob: -2.9877638816833496
    7. '_D' → logprob: -3.3627638816833496
    8. '_V' → logprob: -3.3627638816833496
    9. '_F' → logprob: -3.4877638816833496
    10. '_U' → logprob: -3.8627638816833496

Token 165: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.2471589798224159e-05
    2. '(' → logprob: -12.375012397766113
    3. '(a' → logprob: -13.500012397766113
    4. ' (' → logprob: -13.625012397766113
    5. 'A' → logprob: -13.750012397766113
    6. 's' → logprob: -13.875012397766113
    7. 'a' → logprob: -14.000012397766113
    8. '(str' → logprob: -14.375012397766113
    9. '1' → logprob: -15.375012397766113
    10. '(n' → logprob: -15.375012397766113

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0040882546454668045
    2. '):
' → logprob: -5.504088401794434
    3. '):
' → logprob: -12.379088401794434
    4. '):

' → logprob: -12.754088401794434
    5. '(s' → logprob: -13.879088401794434
    6. ')' → logprob: -14.879088401794434
    7. ' ):' → logprob: -15.129088401794434
    8. '():' → logprob: -15.254088401794434
    9. ''):' → logprob: -15.379088401794434
    10. ':' → logprob: -15.504088401794434

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7683080434799194
    2. ' res' → logprob: -1.5183080434799194
    3. '   ' → logprob: -2.268308162689209
    4. ' return' → logprob: -2.518308162689209
    5. ' n' → logprob: -2.893308162689209
    6. 'return' → logprob: -3.768308162689209
    7. 'res' → logprob: -4.018308162689209
    8. 'n' → logprob: -4.893308162689209
    9. ' from' → logprob: -5.268308162689209
    10. 'from' → logprob: -5.518308162689209

Token 168: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.2169525623321533
    2. 'res' (adapté à ' res') → logprob: -1.4669525623321533
    3. 'return' → logprob: -1.7169525623321533
    4. 'from' → logprob: -2.4669525623321533
    5. ' return' → logprob: -2.7169525623321533
    6. 'd' → logprob: -3.7169525623321533
    7. ' from' → logprob: -4.216952323913574
    8. '   ' → logprob: -4.466952323913574
    9. 'n' → logprob: -4.841952323913574
    10. 'v' → logprob: -4.841952323913574

Token 169: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.1927671730518341
    2. '=' → logprob: -1.9427671432495117
    3. '=[]
' → logprob: -3.4427671432495117
    4. '[]' → logprob: -11.067767143249512
    5. ' =' → logprob: -11.192767143249512
    6. '=[]
' → logprob: -11.567767143249512
    7. '[:]' → logprob: -13.692767143249512
    8. '={}' → logprob: -14.317767143249512
    9. '=[],' → logprob: -14.692767143249512
    10. '=[' → logprob: -14.692767143249512

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5663110017776489
    2. 'for' → logprob: -1.316311001777649
    3. ' for' → logprob: -1.816311001777649
    4. '   ' → logprob: -6.441310882568359
    5. '	for' → logprob: -10.69131088256836
    6. '```' → logprob: -11.44131088256836
    7. ' ' → logprob: -13.06631088256836
    8. '	   ' → logprob: -13.44131088256836
    9. '
' → logprob: -13.69131088256836
    10. '           ' → logprob: -13.81631088256836

Token 171: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003148246556520462
    2. ' for' → logprob: -5.878148078918457
    3. '   ' → logprob: -8.128148078918457
    4. 'prev' → logprob: -10.878148078918457
    5. 'i' → logprob: -11.128148078918457
    6. 'import' → logprob: -13.378148078918457
    7. 'n' → logprob: -13.503148078918457
    8. '       ' → logprob: -13.628148078918457
    9. '```' → logprob: -13.628148078918457
    10. '	for' → logprob: -13.753148078918457

Token 172: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2524622976779938
    2. 'c' → logprob: -1.5024622678756714
    3. ' i' → logprob: -8.127462387084961
    4. 'i' → logprob: -8.502462387084961
    5. ' s' → logprob: -11.127462387084961
    6. 's' → logprob: -12.377462387084961
    7. 'ch' → logprob: -12.502462387084961
    8. ' ch' → logprob: -13.377462387084961
    9. ' ' → logprob: -13.752462387084961
    10. '_c' → logprob: -13.752462387084961

Token 173: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043263621628284454
    2. 'in' → logprob: -3.1682636737823486
    3. 's' → logprob: -8.54326343536377
    4. 'import' → logprob: -10.54326343536377
    5. ' ' → logprob: -11.29326343536377
    6. '	in' → logprob: -12.54326343536377
    7. 'n' → logprob: -12.73076343536377
    8. '   ' → logprob: -13.04326343536377
    9. 'not' → logprob: -13.10576343536377
    10. 'd' → logprob: -13.10576343536377

Token 174: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14270149171352386
    2. ' s' → logprob: -2.0177013874053955
    3. ''s' → logprob: -12.267701148986816
    4. ' ' → logprob: -12.330201148986816
    5. '   ' → logprob: -12.892701148986816
    6. 'range' → logprob: -13.330201148986816
    7. '```' → logprob: -13.517701148986816
    8. '[' → logprob: -13.705201148986816
    9. '(s' → logprob: -13.830201148986816
    10. 'str' → logprob: -14.330201148986816

Token 175: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5864235758781433
    2. 'in' → logprob: -0.9614235758781433
    3. 's' → logprob: -4.086423397064209
    4. '           ' → logprob: -4.586423397064209
    5. '   ' → logprob: -4.836423397064209
    6. '       ' → logprob: -5.336423397064209
    7. ':' → logprob: -5.336423397064209
    8. ':
' → logprob: -5.586423397064209
    9. ')' → logprob: -6.086423397064209
    10. ' s' → logprob: -6.086423397064209

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1518566757440567
    2. '       ' → logprob: -2.2768566608428955
    3. ' if' → logprob: -3.9018566608428955
    4. 'if' → logprob: -4.401856899261475
    5. ' s' → logprob: -5.776856899261475
    6. 's' → logprob: -6.776856899261475
    7. ' in' → logprob: -7.276856899261475
    8. '   ' → logprob: -7.651856899261475
    9. '
' → logprob: -9.151856422424316
    10. '               ' → logprob: -10.026856422424316

Token 177: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.015855107456445694
    2. ' if' → logprob: -4.390855312347412
    3. 'res' → logprob: -6.390855312347412
    4. '           ' → logprob: -6.640855312347412
    5. ' res' → logprob: -8.765854835510254
    6. '       ' → logprob: -8.765854835510254
    7. '               ' → logprob: -10.890854835510254
    8. '
' → logprob: -11.765854835510254
    9. '   ' → logprob: -12.640854835510254
    10. ' ' → logprob: -12.765854835510254

Token 178: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0964914932847023
    2. ' c' → logprob: -2.971491575241089
    3. ''' → logprob: -3.221491575241089
    4. ' '' → logprob: -7.47149133682251
    5. ''a' → logprob: -9.596491813659668
    6. ' ' → logprob: -10.096491813659668
    7. ''A' → logprob: -10.471491813659668
    8. 'ord' → logprob: -10.596491813659668
    9. ''s' → logprob: -11.096491813659668
    10. '   ' → logprob: -11.096491813659668

Token 179: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.005719385575503111
    2. '.' → logprob: -5.630719184875488
    3. '>' → logprob: -7.005719184875488
    4. '==' → logprob: -7.880719184875488
    5. '=='' → logprob: -8.130719184875488
    6. ' in' → logprob: -8.505719184875488
    7. 'isdigit' → logprob: -9.005719184875488
    8. 'is' → logprob: -9.630719184875488
    9. '>=' → logprob: -10.255719184875488
    10. ' .' → logprob: -10.255719184875488

Token 180: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.3386598527431488
    2. 'alpha' → logprob: -1.5886598825454712
    3. 'lower' → logprob: -2.9636597633361816
    4. 'upper' → logprob: -3.4636597633361816
    5. 'al' → logprob: -9.71366024017334
    6. 'a' → logprob: -10.58866024017334
    7. 'd' → logprob: -11.83866024017334
    8. 'ascii' → logprob: -12.33866024017334
    9. 'isdigit' → logprob: -12.33866024017334
    10. 'numeric' → logprob: -12.96366024017334

Token 181: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4768486022949219
    2. '():
' → logprob: -0.9768486022949219
    3. '()' → logprob: -5.976848602294922
    4. '():

' → logprob: -8.726848602294922
    5. '()==' → logprob: -10.351848602294922
    6. '():
' → logprob: -10.851848602294922
    7. '()):
' → logprob: -12.226848602294922
    8. '()>' → logprob: -12.601848602294922
    9. '(' → logprob: -12.976848602294922
    10. '()-' → logprob: -13.601848602294922

Token 182: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04473484680056572
    2. 'res' → logprob: -3.5447349548339844
    3. ' res' → logprob: -4.544734954833984
    4. ' if' → logprob: -5.919734954833984
    5. 'if' → logprob: -6.669734954833984
    6. '           ' → logprob: -8.919734954833984
    7. ' ' → logprob: -11.169734954833984
    8. 'c' → logprob: -11.169734954833984
    9. ' c' → logprob: -11.169734954833984
    10. ' s' → logprob: -11.169734954833984

Token 183: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.292642742395401
    2. 'res' (adapté à ' res') → logprob: -1.4176427125930786
    3. '               ' → logprob: -4.917642593383789
    4. '           ' → logprob: -6.292642593383789
    5. '                   ' → logprob: -7.417642593383789
    6. '       ' → logprob: -7.542642593383789
    7. ' if' → logprob: -7.792642593383789
    8. '   ' → logprob: -8.042642593383789
    9. '	res' → logprob: -8.792642593383789
    10. 'if' → logprob: -9.292642593383789

Token 184: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016146517009474337
    2. 'append' → logprob: -9.125161170959473
    3. '.' → logprob: -10.250161170959473
    4. ' .' → logprob: -11.875161170959473
    5. 'app' → logprob: -12.000161170959473
    6. '.app' → logprob: -14.125161170959473
    7. '           ' → logprob: -14.375161170959473
    8. 'appen' → logprob: -14.500161170959473
    9. '].' → logprob: -14.875161170959473
    10. '   ' → logprob: -15.125161170959473

Token 185: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.21270298957824707
    2. '(str' → logprob: -1.837702989578247
    3. 'str' → logprob: -3.712702989578247
    4. '(' → logprob: -5.337702751159668
    5. '(chr' → logprob: -6.337702751159668
    6. ''' → logprob: -7.462702751159668
    7. 'chr' → logprob: -8.212702751159668
    8. ' str' → logprob: -8.462702751159668
    9. 'c' → logprob: -8.712702751159668
    10. '(c' → logprob: -8.962702751159668

Token 186: '0' (ID: 15)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.059748340398073196
    2. ''' → logprob: -3.309748411178589
    3. ' str' → logprob: -4.18474817276001
    4. '9' → logprob: -5.30974817276001
    5. '0' → logprob: -7.43474817276001
    6. '(str' → logprob: -8.309748649597168
    7. 'chr' → logprob: -9.184748649597168
    8. 'c' → logprob: -9.684748649597168
    9. '(' → logprob: -10.059748649597168
    10. ' '' → logprob: -10.059748649597168

Token 187: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.045788802206516266
    2. 'if' → logprob: -3.6707887649536133
    3. ' if' → logprob: -4.170788764953613
    4. '9' → logprob: -5.795788764953613
    5. '')' → logprob: -7.420788764953613
    6. '0' → logprob: -8.920788764953613
    7. '"' → logprob: -10.545788764953613
    8. '7' → logprob: -11.295788764953613
    9. ')' → logprob: -11.920788764953613
    10. ' ' → logprob: -12.420788764953613

Token 188: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20145183801651
    2. ' if' → logprob: -1.7014517784118652
    3. ')' → logprob: -10.826452255249023
    4. '           ' → logprob: -11.701452255249023
    5. 'elif' → logprob: -12.201452255249023
    6. 'else' → logprob: -12.576452255249023
    7. '```' → logprob: -14.326452255249023
    8. '       ' → logprob: -15.201452255249023
    9. '               ' → logprob: -15.201452255249023
    10. ''' → logprob: -15.826452255249023

Token 189: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4740959405899048
    2. ' c' → logprob: -0.9740959405899048
    3. 'int' → logprob: -10.974096298217773
    4. ' ' → logprob: -14.224096298217773
    5. '   ' → logprob: -15.224096298217773
    6. ')c' → logprob: -15.849096298217773
    7. '9' → logprob: -16.224096298217773
    8. ' int' → logprob: -16.224096298217773
    9. '(c' → logprob: -16.599096298217773
    10. '           ' → logprob: -16.724096298217773

Token 190: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.006732780486345291
    2. '==' → logprob: -5.006732940673828
    3. ' ==' → logprob: -11.506732940673828
    4. ' =='' → logprob: -12.881732940673828
    5. '==
' → logprob: -13.256732940673828
    6. '=="' → logprob: -13.506732940673828
    7. ']=='' → logprob: -14.631732940673828
    8. 'c' → logprob: -14.756732940673828
    9. ''' → logprob: -14.881732940673828
    10. '='' → logprob: -15.756732940673828

Token 191: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0005695947329513729
    2. '1' → logprob: -7.500569820404053
    3. '0' → logprob: -11.250569343566895
    4. ''' → logprob: -13.000569343566895
    5. ' ' → logprob: -14.000569343566895
    6. '```' → logprob: -15.688069343566895
    7. ' '' → logprob: -16.50057029724121
    8. ''s' → logprob: -16.56307029724121
    9. '９' → logprob: -17.12557029724121
    10. '   ' → logprob: -17.31307029724121

Token 192: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3224399983882904
    2. 'else' → logprob: -1.3224400281906128
    3. ''' → logprob: -4.697440147399902
    4. '           ' → logprob: -11.947440147399902
    5. '               ' → logprob: -12.947440147399902
    6. '```' → logprob: -12.947440147399902
    7. '"' → logprob: -13.822440147399902
    8. '')' → logprob: -13.947440147399902
    9. ''s' → logprob: -14.697440147399902
    10. '`' → logprob: -14.822440147399902

Token 193: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.023245595395565033
    2. 'else' → logprob: -3.7732455730438232
    3. '	else' → logprob: -16.523244857788086
    4. '```' → logprob: -17.398244857788086
    5. '           ' → logprob: -19.648244857788086
    6. ')' → logprob: -19.773244857788086
    7. '
' → logprob: -19.773244857788086
    8. ' ' → logprob: -20.023244857788086
    9. '_else' → logprob: -20.023244857788086
    10. '               ' → logprob: -20.023244857788086

Token 194: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.38687190413475037
    2. 'str' → logprob: -1.1368719339370728
    3. ' chr' → logprob: -15.261872291564941
    4. 'chr' → logprob: -15.386872291564941
    5. '(str' → logprob: -15.761872291564941
    6. ' ' → logprob: -16.261871337890625
    7. 'c' → logprob: -16.886871337890625
    8. '	str' → logprob: -17.136871337890625
    9. 's' → logprob: -17.761871337890625
    10. 'string' → logprob: -17.761871337890625

Token 195: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001454955490771681
    2. '   ' → logprob: -10.12514591217041
    3. 'int' → logprob: -10.62514591217041
    4. '(' → logprob: -10.62514591217041
    5. ' (' → logprob: -10.75014591217041
    6. '(ord' → logprob: -11.25014591217041
    7. '[int' → logprob: -11.75014591217041
    8. '<int' → logprob: -11.87514591217041
    9. '1' → logprob: -13.37514591217041
    10. '=int' → logprob: -13.62514591217041

Token 196: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.9743012671824545e-05
    2. 'c' → logprob: -11.000020027160645
    3. '(' → logprob: -12.875020027160645
    4. '(int' → logprob: -15.000020027160645
    5. ')c' → logprob: -17.375019073486328
    6. '©' → logprob: -17.750019073486328
    7. ' (' → logprob: -18.000019073486328
    8. '	c' → logprob: -18.125019073486328
    9. ' ' → logprob: -18.250019073486328
    10. 'int' → logprob: -18.625019073486328

Token 197: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.0027062043081969023
    2. ')' → logprob: -7.002706050872803
    3. '(c' → logprob: -7.127706050872803
    4. '+' → logprob: -7.752706050872803
    5. ')c' → logprob: -8.877706527709961
    6. 'c' → logprob: -9.002706527709961
    7. '+c' → logprob: -9.127706527709961
    8. '')' → logprob: -9.377706527709961
    9. ''+' → logprob: -10.252706527709961
    10. ')+'' → logprob: -11.627706527709961

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.375014305114746
    3. 'c' → logprob: -13.125014305114746
    4. ' c' → logprob: -15.500014305114746
    5. '(c' → logprob: -15.625014305114746
    6. '   ' → logprob: -16.12501335144043
    7. '(' → logprob: -16.37501335144043
    8. '  ' → logprob: -18.37501335144043
    9. ')c' → logprob: -18.62501335144043
    10. ')' → logprob: -18.62501335144043

Token 199: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.048682861030101776
    2. '))
' → logprob: -3.048682928085327
    3. ')' → logprob: -9.548683166503906
    4. '))
' → logprob: -10.798683166503906
    5. '))

' → logprob: -13.548683166503906
    6. ''))' → logprob: -14.173683166503906
    7. ')))' → logprob: -14.298683166503906
    8. ' ))' → logprob: -14.548683166503906
    9. ' ))
' → logprob: -15.423683166503906
    10. ''))
' → logprob: -15.423683166503906

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.137130498653278e-05
    2. 'else' → logprob: -9.500081062316895
    3. ' else' → logprob: -12.375081062316895
    4. '	       ' → logprob: -14.125081062316895
    5. '       ' → logprob: -14.250081062316895
    6. '		' → logprob: -14.750081062316895
    7. '```' → logprob: -15.250081062316895
    8. '          ' → logprob: -16.37508201599121
    9. '<|end|>' → logprob: -16.87508201599121
    10. '               ' → logprob: -17.25008201599121

Token 201: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2527939975261688
    2. '           ' → logprob: -1.7527940273284912
    3. ' else' → logprob: -3.002794027328491
    4. '       ' → logprob: -7.877793788909912
    5. '               ' → logprob: -10.62779426574707
    6. '	       ' → logprob: -11.37779426574707
    7. '		' → logprob: -12.37779426574707
    8. '          ' → logprob: -12.62779426574707
    9. '   ' → logprob: -12.75279426574707
    10. '         ' → logprob: -13.25279426574707

Token 202: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002724513877183199
    2. '           ' → logprob: -6.002724647521973
    3. ':
' → logprob: -9.877724647521973
    4. '       ' → logprob: -10.127724647521973
    5. '                   ' → logprob: -10.377724647521973
    6. 'res' → logprob: -10.502724647521973
    7. ' res' → logprob: -10.502724647521973
    8. '              ' → logprob: -11.252724647521973
    9. '                       ' → logprob: -11.627724647521973
    10. '	       ' → logprob: -11.627724647521973

Token 203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006572311744093895
    2. '           ' → logprob: -5.756572246551514
    3. 'res' → logprob: -5.756572246551514
    4. '       ' → logprob: -8.506572723388672
    5. ' res' → logprob: -11.006572723388672
    6. '                   ' → logprob: -12.381572723388672
    7. '   ' → logprob: -13.631572723388672
    8. ' ' → logprob: -14.756572723388672
    9. '	       ' → logprob: -14.881572723388672
    10. '              ' → logprob: -14.881572723388672

Token 204: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0007168424781411886
    2. ' res' → logprob: -7.250716686248779
    3. '               ' → logprob: -12.375717163085938
    4. '           ' → logprob: -12.875717163085938
    5. '       ' → logprob: -16.125717163085938
    6. '                   ' → logprob: -17.125717163085938
    7. '   ' → logprob: -17.625717163085938
    8. '	res' → logprob: -17.625717163085938
    9. '
' → logprob: -18.500717163085938
    10. '(res' → logprob: -18.875717163085938

Token 205: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.179569077678025e-05
    2. '.' → logprob: -10.125041961669922
    3. ' .' → logprob: -14.125041961669922
    4. 'append' → logprob: -14.500041961669922
    5. '           ' → logprob: -15.875041961669922
    6. '.extend' → logprob: -16.000041961669922
    7. '.Append' → logprob: -16.375041961669922
    8. '.app' → logprob: -17.375041961669922
    9. '.
' → logprob: -19.500041961669922
    10. '.add' → logprob: -19.500041961669922

Token 206: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.625000953674316
    3. 'c' → logprob: -17.625
    4. ' (' → logprob: -19.375
    5. '('' → logprob: -21.0
    6. '   ' → logprob: -21.375
    7. '(
' → logprob: -21.75
    8. '	c' → logprob: -21.875
    9. '©' → logprob: -22.25
    10. ')c' → logprob: -22.375

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012607101816684008
    2. ')
' → logprob: -6.751260757446289
    3. ')c' → logprob: -9.376260757446289
    4. '))' → logprob: -12.751260757446289
    5. ')

' → logprob: -14.001260757446289
    6. '')' → logprob: -14.001260757446289
    7. ')
' → logprob: -14.876260757446289
    8. ')s' → logprob: -15.001260757446289
    9. ')`' → logprob: -16.12626075744629
    10. ' )' → logprob: -16.62626075744629

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009578526951372623
    2. ')' → logprob: -5.009578704833984
    3. 'return' → logprob: -6.134578704833984
    4. ')
' → logprob: -7.759578704833984
    5. '   ' → logprob: -9.509578704833984
    6. 'res' → logprob: -9.759578704833984
    7. ' return' → logprob: -10.009578704833984
    8. '           ' → logprob: -10.884578704833984
    9. ')return' → logprob: -11.134578704833984
    10. '               ' → logprob: -11.384578704833984

Token 209: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03838547319173813
    2. ' return' → logprob: -3.9133853912353516
    3. '   ' → logprob: -4.663385391235352
    4. '       ' → logprob: -5.038385391235352
    5. ')' → logprob: -6.913385391235352
    6. ')
' → logprob: -7.788385391235352
    7. '	return' → logprob: -8.788385391235352
    8. ')return' → logprob: -8.913385391235352
    9. '
' → logprob: -10.288385391235352
    10. 'eturn' → logprob: -11.163385391235352

Token 210: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.3872574269771576
    2. ' ''.' → logprob: -1.13725745677948
    3. ''' → logprob: -8.13725757598877
    4. '''' → logprob: -9.88725757598877
    5. ' '' → logprob: -10.26225757598877
    6. '"' → logprob: -12.26225757598877
    7. ' ' → logprob: -13.13725757598877
    8. ''',' → logprob: -15.38725757598877
    9. '','.' → logprob: -15.76225757598877
    10. '   ' → logprob: -16.012256622314453

Token 211: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9361264946837764e-07
    2. '(join' → logprob: -15.75
    3. 'j' → logprob: -16.875
    4. ' join' → logprob: -17.125
    5. 'jo' → logprob: -17.75
    6. '.join' → logprob: -19.125
    7. '(' → logprob: -19.5
    8. '"' → logprob: -19.625
    9. '```' → logprob: -19.75
    10. '''' → logprob: -19.875

Token 212: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0004309076175559312
    2. 'res' → logprob: -7.750431060791016
    3. '(' → logprob: -16.500431060791016
    4. ' res' → logprob: -17.250431060791016
    5. '(s' → logprob: -17.250431060791016
    6. 's' → logprob: -17.625431060791016
    7. ' (' → logprob: -18.750431060791016
    8. '```' → logprob: -19.000431060791016
    9. '$res' → logprob: -19.125431060791016
    10. ',res' → logprob: -19.375431060791016

Token 213: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5451681974809617e-05
    2. ')
' → logprob: -12.000015258789062
    3. '   ' → logprob: -12.000015258789062
    4. '<|end|>' → logprob: -13.500015258789062
    5. ')s' → logprob: -14.625015258789062
    6. ')return' → logprob: -14.750015258789062
    7. ' )' → logprob: -15.750015258789062
    8. '))' → logprob: -16.250015258789062
    9. '')' → logprob: -16.625015258789062
    10. '#' → logprob: -16.625015258789062

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6712705492973328
    2. 'n' → logprob: -0.7962705492973328
    3. '
' → logprob: -4.296270370483398
    4. ' n' → logprob: -5.046270370483398
    5. 'def' → logprob: -5.421270370483398
    6. 'N' → logprob: -5.796270370483398
    7. '    
' → logprob: -5.921270370483398
    8. 't' → logprob: -5.921270370483398
    9. 'q' → logprob: -6.546270370483398
    10. '	n' → logprob: -7.546270370483398

Token 215: ' inv' (ID: 1827)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0593460388481617
    2. 't' → logprob: -3.8093459606170654
    3. '   ' → logprob: -4.0593461990356445
    4. 'q' → logprob: -4.9343461990356445
    5. ' n' → logprob: -5.5593461990356445
    6. 'Q' → logprob: -5.9343461990356445
    7. 'T' → logprob: -6.0593461990356445
    8. 'N' → logprob: -6.8093461990356445
    9. 'for' → logprob: -7.8093461990356445
    10. ' t' → logprob: -8.059346199035645

Token 216: '_map' (ID: 11824)
  Prédit: '_J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_J' → logprob: -0.10393017530441284
    2. '_' → logprob: -2.7289302349090576
    3. '_P' → logprob: -4.1039299964904785
    4. '_C' → logprob: -4.7289299964904785
    5. '_M' → logprob: -5.6039299964904785
    6. '_A' → logprob: -6.2289299964904785
    7. '_E' → logprob: -7.2289299964904785
    8. 's' → logprob: -7.7289299964904785
    9. '_S' → logprob: -8.228930473327637
    10. '_I' → logprob: -8.603930473327637

Token 217: '={'' (ID: 24320)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25486770272254944
    2. '=' → logprob: -1.504867672920227
    3. '={' → logprob: -6.8798675537109375
    4. '={'' → logprob: -7.0048675537109375
    5. ' ={' → logprob: -7.7548675537109375
    6. '={"' → logprob: -8.254867553710938
    7. '_' → logprob: -8.879867553710938
    8. '={
' → logprob: -9.504867553710938
    9. '={}' → logprob: -10.754867553710938
    10. '[' → logprob: -10.754867553710938

Token 218: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.0016556596383452415
    2. 'A' → logprob: -6.876655578613281
    3. 'E' → logprob: -8.626655578613281
    4. 'P' → logprob: -9.001655578613281
    5. ''' → logprob: -9.251655578613281
    6. ' J' → logprob: -9.876655578613281
    7. 'C' → logprob: -10.626655578613281
    8. 'M' → logprob: -11.001655578613281
    9. '	J' → logprob: -11.126655578613281
    10. 'j' → logprob: -11.314155578613281

Token 219: '':' (ID: 2337)
  Prédit: '':''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.06378329545259476
    2. '':' → logprob: -2.8137834072113037
    3. ''' → logprob: -6.313783168792725
    4. '','' → logprob: -13.063783645629883
    5. '':''' → logprob: -15.688783645629883
    6. '":"' → logprob: -15.813783645629883
    7. '':['' → logprob: -16.188783645629883
    8. ''A' → logprob: -16.438783645629883
    9. ' ':'' → logprob: -16.813783645629883
    10. ''I' → logprob: -17.313783645629883

Token 220: 'inv' (ID: 31086)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.21997083723545074
    2. 'inv' → logprob: -1.7199708223342896
    3. ' inv' → logprob: -4.094970703125
    4. ' '' → logprob: -6.719970703125
    5. ''' → logprob: -7.719970703125
    6. '(inv' → logprob: -10.594970703125
    7. '   ' → logprob: -11.719970703125
    8. ''ex' → logprob: -11.969970703125
    9. '"' → logprob: -11.969970703125
    10. ' ' → logprob: -12.594970703125

Token 221: '_J' (ID: 22788)
  Prédit: '_J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_J' → logprob: -0.00018923594325315207
    2. ''_' → logprob: -9.125188827514648
    3. '_' → logprob: -9.750188827514648
    4. ''' → logprob: -11.750188827514648
    5. 'J' → logprob: -12.125188827514648
    6. '_'' → logprob: -12.625188827514648
    7. '_C' → logprob: -13.500188827514648
    8. '_j' → logprob: -13.625188827514648
    9. '_A' → logprob: -14.375188827514648
    10. '```' → logprob: -15.250188827514648

Token 222: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0636557936668396
    2. ','' → logprob: -2.8136558532714844
    3. ',
' → logprob: -6.438655853271484
    4. '',' → logprob: -9.938655853271484
    5. ' ,' → logprob: -11.438655853271484
    6. ',"' → logprob: -11.688655853271484
    7. '','' → logprob: -11.938655853271484
    8. ' ,'' → logprob: -12.563655853271484
    9. ',

' → logprob: -12.688655853271484
    10. ',
' → logprob: -13.188655853271484

Token 223: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.05621723458170891
    2. ''C' → logprob: -2.9312171936035156
    3. ''' → logprob: -7.181217193603516
    4. ' C' → logprob: -8.306217193603516
    5. '"C' → logprob: -8.681217193603516
    6. '   ' → logprob: -9.931217193603516
    7. 'J' → logprob: -11.181217193603516
    8. '	C' → logprob: -11.181217193603516
    9. ' '' → logprob: -11.431217193603516
    10. ' ' → logprob: -11.556217193603516

Token 224: '':' (ID: 2337)
  Prédit: '':''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.2556011974811554
    2. '':' → logprob: -1.505601167678833
    3. ''' → logprob: -5.630601406097412
    4. '','' → logprob: -10.255600929260254
    5. ':' → logprob: -11.505600929260254
    6. ':'' → logprob: -11.880600929260254
    7. ''A' → logprob: -12.130600929260254
    8. '',' → logprob: -12.755600929260254
    9. ' ':'' → logprob: -12.880600929260254
    10. '   ' → logprob: -13.130600929260254

Token 225: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.47440391778945923
    2. ''in' → logprob: -0.9744039177894592
    3. ' inv' → logprob: -8.224404335021973
    4. ''' → logprob: -10.974404335021973
    5. 'in' → logprob: -11.599404335021973
    6. ''invest' → logprob: -11.724404335021973
    7. '(inv' → logprob: -11.849404335021973
    8. '   ' → logprob: -12.224404335021973
    9. '
' → logprob: -13.099404335021973
    10. '’in' → logprob: -13.474404335021973

Token 226: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.004658087622374296
    2. 'C' → logprob: -5.504658222198486
    3. '_P' → logprob: -7.629658222198486
    4. '_' → logprob: -9.504657745361328
    5. '_M' → logprob: -12.629657745361328
    6. '_A' → logprob: -12.629657745361328
    7. '   ' → logprob: -12.629657745361328
    8. ''_' → logprob: -13.629657745361328
    9. '_c' → logprob: -13.879657745361328
    10. 'P' → logprob: -13.879657745361328

Token 227: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.06199009716510773
    2. ',' → logprob: -2.8119900226593018
    3. ',"' → logprob: -11.186989784240723
    4. ' ,'' → logprob: -12.311989784240723
    5. ',
' → logprob: -13.311989784240723
    6. '','' → logprob: -14.311989784240723
    7. ',’' → logprob: -14.686989784240723
    8. ' ,' → logprob: -14.811989784240723
    9. '   ' → logprob: -15.186989784240723
    10. '',' → logprob: -15.436989784240723

Token 228: 'E' (ID: 36)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.0036788135766983032
    2. 'E' → logprob: -5.753678798675537
    3. ''' → logprob: -8.628679275512695
    4. ''A' → logprob: -9.628679275512695
    5. ' '' → logprob: -9.753679275512695
    6. '   ' → logprob: -10.003679275512695
    7. '"E' → logprob: -10.378679275512695
    8. '’E' → logprob: -10.378679275512695
    9. ''M' → logprob: -10.753679275512695
    10. ''É' → logprob: -11.003679275512695

Token 229: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.25228485465049744
    2. '':'' → logprob: -1.5022848844528198
    3. ''' → logprob: -8.50228500366211
    4. ':'' → logprob: -9.50228500366211
    5. ':' → logprob: -9.87728500366211
    6. ' ':' → logprob: -11.62728500366211
    7. ':E' → logprob: -12.00228500366211
    8. ''E' → logprob: -12.50228500366211
    9. '':''' → logprob: -13.37728500366211
    10. ' ':'' → logprob: -13.62728500366211

Token 230: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.007798256818205118
    2. ''in' → logprob: -4.882798194885254
    3. ' inv' → logprob: -8.757798194885254
    4. 'in' → logprob: -11.132798194885254
    5. '(inv' → logprob: -11.382798194885254
    6. '   ' → logprob: -12.882798194885254
    7. ''' → logprob: -13.632798194885254
    8. ''invest' → logprob: -14.257798194885254
    9. '_inv' → logprob: -14.382798194885254
    10. ' ' → logprob: -14.632798194885254

Token 231: '_E' (ID: 6584)
  Prédit: '_E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_E' → logprob: -0.020635200664401054
    2. 'E' → logprob: -3.8956351280212402
    3. ''E' → logprob: -9.520635604858398
    4. '_' → logprob: -11.895635604858398
    5. ''' → logprob: -13.020635604858398
    6. '_A' → logprob: -13.395635604858398
    7. ' E' → logprob: -13.395635604858398
    8. '```' → logprob: -13.895635604858398
    9. '	E' → logprob: -14.520635604858398
    10. '['' → logprob: -14.520635604858398

Token 232: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.03806616738438606
    2. ',' → logprob: -3.2880661487579346
    3. ',"' → logprob: -11.163065910339355
    4. ' ,'' → logprob: -12.288065910339355
    5. '','' → logprob: -13.288065910339355
    6. ',
' → logprob: -13.788065910339355
    7. '   ' → logprob: -14.038065910339355
    8. ' ,' → logprob: -14.538065910339355
    9. '',' → logprob: -14.538065910339355
    10. ',’' → logprob: -14.788065910339355

Token 233: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00528296921402216
    2. ''A' → logprob: -5.255282878875732
    3. 'P' → logprob: -11.00528335571289
    4. ' A' → logprob: -11.38028335571289
    5. ''' → logprob: -11.50528335571289
    6. '"A' → logprob: -13.13028335571289
    7. '   ' → logprob: -13.38028335571289
    8. 'inv' → logprob: -13.50528335571289
    9. '_A' → logprob: -13.88028335571289
    10. '
' → logprob: -13.88028335571289

Token 234: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.02390391193330288
    2. '':'' → logprob: -3.7739038467407227
    3. ':' → logprob: -7.773903846740723
    4. ''' → logprob: -8.898903846740723
    5. ':'' → logprob: -9.523903846740723
    6. ' ':' → logprob: -11.148903846740723
    7. '":' → logprob: -13.023903846740723
    8. '':''' → logprob: -13.023903846740723
    9. '(':' → logprob: -13.398903846740723
    10. ' ':'' → logprob: -13.523903846740723

Token 235: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.4974866644479334e-05
    2. ' inv' → logprob: -11.125015258789062
    3. '(inv' → logprob: -16.375015258789062
    4. '   ' → logprob: -16.875015258789062
    5. '
' → logprob: -18.625015258789062
    6. '  ' → logprob: -18.750015258789062
    7. 'in' → logprob: -19.125015258789062
    8. '.inv' → logprob: -19.500015258789062
    9. ' ' → logprob: -19.750015258789062
    10. 'int' → logprob: -20.000015258789062

Token 236: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.14273633062839508
    2. 'A' → logprob: -2.0177364349365234
    3. '_P' → logprob: -10.017736434936523
    4. ''A' → logprob: -11.892736434936523
    5. ' A' → logprob: -12.642736434936523
    6. '	A' → logprob: -13.517736434936523
    7. 'А' → logprob: -14.267736434936523
    8. 'P' → logprob: -14.267736434936523
    9. '[::-' → logprob: -14.517736434936523
    10. 'a' → logprob: -14.767736434936523

Token 237: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.008622609078884125
    2. ',' → logprob: -4.758622646331787
    3. ',"' → logprob: -12.008622169494629
    4. ' ,'' → logprob: -14.008622169494629
    5. ',
' → logprob: -15.008622169494629
    6. ',’' → logprob: -15.508622169494629
    7. '','' → logprob: -15.508622169494629
    8. ',''' → logprob: -15.758622169494629
    9. '}' → logprob: -15.883622169494629
    10. ','"' → logprob: -16.758623123168945

Token 238: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -8.363617962459102e-05
    2. ''' → logprob: -9.625083923339844
    3. ' P' → logprob: -12.250083923339844
    4. '
' → logprob: -12.875083923339844
    5. '	P' → logprob: -12.875083923339844
    6. '   ' → logprob: -13.250083923339844
    7. '

' → logprob: -13.500083923339844
    8. ' ' → logprob: -14.000083923339844
    9. '  ' → logprob: -14.687583923339844
    10. '```' → logprob: -14.750083923339844

Token 239: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0053899227641522884
    2. '':'' → logprob: -5.25538969039917
    3. ''' → logprob: -8.880390167236328
    4. ':' → logprob: -11.505390167236328
    5. ':'' → logprob: -12.755390167236328
    6. ' ':' → logprob: -13.255390167236328
    7. '":' → logprob: -13.505390167236328
    8. '']' → logprob: -15.755390167236328
    9. '':''' → logprob: -16.005390167236328
    10. ']:' → logprob: -16.505390167236328

Token 240: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -2.7968066206085496e-05
    2. ' inv' → logprob: -10.500027656555176
    3. ''in' → logprob: -15.500027656555176
    4. '(inv' → logprob: -16.125028610229492
    5. 'in' → logprob: -18.500028610229492
    6. '   ' → logprob: -19.000028610229492
    7. '
' → logprob: -19.375028610229492
    8. '.inv' → logprob: -19.625028610229492
    9. 'inverse' → logprob: -20.000028610229492
    10. '_inv' → logprob: -20.625028610229492

Token 241: '_P' (ID: 2008)
  Prédit: '_P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_P' → logprob: -0.0005371859879232943
    2. 'P' → logprob: -8.500536918640137
    3. ''_' → logprob: -8.875536918640137
    4. '')' → logprob: -9.625536918640137
    5. ''' → logprob: -9.625536918640137
    6. '_M' → logprob: -10.250536918640137
    7. ')' → logprob: -11.750536918640137
    8. '')}' → logprob: -12.500536918640137
    9. ''),' → logprob: -12.625536918640137
    10. '_' → logprob: -12.625536918640137

Token 242: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.005239564459770918
    2. ',' → logprob: -5.255239486694336
    3. ' ,'' → logprob: -12.505239486694336
    4. ',"' → logprob: -13.505239486694336
    5. '}' → logprob: -15.630239486694336
    6. ',’' → logprob: -15.880239486694336
    7. ',''' → logprob: -16.005239486694336
    8. ',
' → logprob: -16.505239486694336
    9. ' ,' → logprob: -16.755239486694336
    10. '','' → logprob: -17.255239486694336

Token 243: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.248469718324486e-05
    2. ' M' → logprob: -11.375022888183594
    3. ''M' → logprob: -11.500022888183594
    4. '_M' → logprob: -14.875022888183594
    5. ''' → logprob: -16.000022888183594
    6. '	M' → logprob: -16.750022888183594
    7. 'М' → logprob: -16.750022888183594
    8. 'Ｍ' → logprob: -17.375022888183594
    9. '
' → logprob: -18.000022888183594
    10. '>M' → logprob: -18.125022888183594

Token 244: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.25319376587867737
    2. '}' → logprob: -2.3781938552856445
    3. ':' → logprob: -2.5031938552856445
    4. ''}' → logprob: -3.7531938552856445
    5. '':'' → logprob: -4.2531938552856445
    6. ''' → logprob: -5.0031938552856445
    7. ':'' → logprob: -5.8781938552856445
    8. '']' → logprob: -6.7531938552856445
    9. '}:' → logprob: -8.128193855285645
    10. '')' → logprob: -9.128193855285645

Token 245: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.8624639324116288e-06
    2. ' inv' → logprob: -13.250001907348633
    3. '(inv' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.375001907348633
    5. 'int' → logprob: -19.000001907348633
    6. '           ' → logprob: -19.625001907348633
    7. 'inf' → logprob: -19.750001907348633
    8. '  ' → logprob: -20.000001907348633
    9. '       ' → logprob: -20.125001907348633
    10. '.inv' → logprob: -20.500001907348633

Token 246: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -0.00016182278341148049
    2. 'M' → logprob: -8.750162124633789
    3. ''M' → logprob: -12.750162124633789
    4. '_P' → logprob: -15.625162124633789
    5. ')' → logprob: -17.00016212463379
    6. '```' → logprob: -17.12516212463379
    7. '	M' → logprob: -17.25016212463379
    8. 'М' → logprob: -17.87516212463379
    9. '}' → logprob: -18.00016212463379
    10. ')}' → logprob: -18.00016212463379

Token 247: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -6.392202976712724e-06
    2. ',' → logprob: -12.625006675720215
    3. ' }' → logprob: -13.500006675720215
    4. '   ' → logprob: -13.750006675720215
    5. '}
' → logprob: -14.625006675720215
    6. '}

' → logprob: -17.5000057220459
    7. ' ' → logprob: -19.0000057220459
    8. ']' → logprob: -19.5000057220459
    9. ')' → logprob: -19.5000057220459
    10. '	' → logprob: -19.6250057220459

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04301723092794418
    2. 'n' → logprob: -3.2930171489715576
    3. '
' → logprob: -7.168017387390137
    4. 's' → logprob: -7.293017387390137
    5. ' n' → logprob: -7.418017387390137
    6. '    
' → logprob: -7.418017387390137
    7. 'def' → logprob: -7.918017387390137
    8. 't' → logprob: -8.043017387390137
    9. 'N' → logprob: -8.043017387390137
    10. 'q' → logprob: -9.043017387390137

Token 249: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45904117822647095
    2. 'n' (adapté à ' n') → logprob: -1.9590411186218262
    3. 't' → logprob: -2.959041118621826
    4. 'Q' → logprob: -3.084041118621826
    5. ' n' → logprob: -3.209041118621826
    6. ' t' → logprob: -3.459041118621826
    7. 'T' → logprob: -4.084041118621826
    8. ' Q' → logprob: -4.084041118621826
    9. 'q' → logprob: -4.334041118621826
    10. ' T' → logprob: -4.959041118621826

Token 250: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04304554685950279
    2. ' =' → logprob: -4.043045520782471
    3. ',' → logprob: -4.293045520782471
    4. '=int' → logprob: -4.543045520782471
    5. '=input' → logprob: -8.418045997619629
    6. ',int' → logprob: -10.918045997619629
    7. ',n' → logprob: -11.418045997619629
    8. '   ' → logprob: -11.668045997619629
    9. '=sys' → logprob: -12.293045997619629
    10. ' ,' → logprob: -12.418045997619629

Token 251: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0016863665077835321
    2. '(' → logprob: -6.5016865730285645
    3. 'input' → logprob: -8.626686096191406
    4. '()' → logprob: -13.126686096191406
    5. ' input' → logprob: -13.626686096191406
    6. '('' → logprob: -14.501686096191406
    7. ' (' → logprob: -14.626686096191406
    8. '=input' → logprob: -15.501686096191406
    9. '(sys' → logprob: -15.501686096191406
    10. '("' → logprob: -17.376686096191406

Token 252: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011084134690463543
    2. '()' → logprob: -4.761084079742432
    3. '().' → logprob: -6.261084079742432
    4. '())
' → logprob: -7.511084079742432
    5. '())

' → logprob: -12.26108455657959
    6. '()
' → logprob: -12.76108455657959
    7. ')' → logprob: -13.38608455657959
    8. ' ())' → logprob: -14.76108455657959
    9. '();)' → logprob: -15.26108455657959
    10. '())
' → logprob: -15.38608455657959

Token 253: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2916141450405121
    2. '   ' → logprob: -1.4166141748428345
    3. ' for' → logprob: -4.666614055633545
    4. 's' → logprob: -7.791614055633545
    5. '	for' → logprob: -8.666614532470703
    6. 'results' → logprob: -9.666614532470703
    7. 'result' → logprob: -9.916614532470703
    8. '```' → logprob: -9.916614532470703
    9. '<|end|>' → logprob: -10.041614532470703
    10. 't' → logprob: -10.291614532470703

Token 254: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003107726341113448
    2. '   ' → logprob: -6.12810754776001
    3. ' for' → logprob: -7.00310754776001
    4. 's' → logprob: -12.378108024597168
    5. 'results' → logprob: -12.753108024597168
    6. '	for' → logprob: -13.128108024597168
    7. 'result' → logprob: -14.003108024597168
    8. 'res' → logprob: -14.628108024597168
    9. 'answers' → logprob: -14.753108024597168
    10. 'while' → logprob: -15.128108024597168

Token 255: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.25193148851394653
    2. '_' → logprob: -1.5019314289093018
    3. ' i' → logprob: -13.376931190490723
    4. ' ' → logprob: -14.876931190490723
    5. '_i' → logprob: -15.001931190490723
    6. ' ' → logprob: -15.751931190490723
    7. ' in' → logprob: -18.12693214416504
    8. '_case' → logprob: -19.37693214416504
    9. '_=' → logprob: -19.62693214416504
    10. ' range' → logprob: -19.75193214416504

Token 256: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.045669227838516235
    2. 'in' → logprob: -3.2956693172454834
    3. 'range' → logprob: -5.170669078826904
    4. ' _' → logprob: -7.170669078826904
    5. '_' → logprob: -7.295669078826904
    6. 'n' → logprob: -8.545669555664062
    7. ' ' → logprob: -9.170669555664062
    8. ' range' → logprob: -9.670669555664062
    9. 's' → logprob: -10.045669555664062
    10. 'i' → logprob: -11.670669555664062

Token 257: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -17.001928329467773
    4. '	range' → logprob: -17.001928329467773
    5. 'n' → logprob: -17.501928329467773
    6. 'r' → logprob: -17.501928329467773
    7. '```' → logprob: -18.001928329467773
    8. 'in' → logprob: -18.251928329467773
    9. 'rang' → logprob: -18.251928329467773
    10. 'ange' → logprob: -18.626928329467773

Token 258: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004207563120871782
    2. '(' → logprob: -5.504207611083984
    3. ' (' → logprob: -9.379207611083984
    4. 'n' → logprob: -10.504207611083984
    5. ' n' → logprob: -11.379207611083984
    6. '(range' → logprob: -12.754207611083984
    7. '(
' → logprob: -13.379207611083984
    8. 'range' → logprob: -13.754207611083984
    9. ' range' → logprob: -15.254207611083984
    10. '()' → logprob: -17.004207611083984

Token 259: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007819905877113342
    2. '):
' → logprob: -4.882820129394531
    3. ':' → logprob: -8.882820129394531
    4. ')' → logprob: -9.632820129394531
    5. '):
' → logprob: -12.507820129394531
    6. ' ):' → logprob: -13.007820129394531
    7. '():' → logprob: -13.632820129394531
    8. '):

' → logprob: -14.382820129394531
    9. '():
' → logprob: -14.757820129394531
    10. ':
' → logprob: -15.132820129394531

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012471356894820929
    2. '<|end|>' → logprob: -7.126246929168701
    3. ' s' → logprob: -8.62624740600586
    4. 's' → logprob: -9.50124740600586
    5. '   ' → logprob: -10.37624740600586
    6. '        
' → logprob: -10.50124740600586
    7. '<|end|>' → logprob: -11.25124740600586
    8. ',' → logprob: -11.37624740600586
    9. '	   ' → logprob: -11.62624740600586
    10. 'tokens' → logprob: -11.62624740600586

Token 261: ' order' (ID: 2569)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -1.3439075946807861
    2. 's' → logprob: -1.4689075946807861
    3. 'k' → logprob: -2.718907594680786
    4. 'q' → logprob: -2.843907594680786
    5. '   ' → logprob: -2.843907594680786
    6. 'cmd' → logprob: -3.218907594680786
    7. ' s' → logprob: -3.343907594680786
    8. 'm' → logprob: -3.468907594680786
    9. 'op' → logprob: -3.468907594680786
    10. ' ops' → logprob: -3.593907594680786

Token 262: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08424627780914307
    2. ' =' → logprob: -3.4592461585998535
    3. '=input' → logprob: -3.5842461585998535
    4. 's' → logprob: -4.9592461585998535
    5. ',' → logprob: -5.3342461585998535
    6. '=line' → logprob: -5.3342461585998535
    7. '=s' → logprob: -6.4592461585998535
    8. ',s' → logprob: -6.4592461585998535
    9. '=list' → logprob: -6.8342461585998535
    10. ',input' → logprob: -9.209246635437012

Token 263: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12693987786769867
    2. '()' → logprob: -2.1269397735595703
    3. '())' → logprob: -12.50193977355957
    4. '()
' → logprob: -13.00193977355957
    5. ')' → logprob: -13.62693977355957
    6. '()

' → logprob: -13.87693977355957
    7. ' ().' → logprob: -14.50193977355957
    8. '()<' → logprob: -14.62693977355957
    9. '(' → logprob: -14.87693977355957
    10. 'rstrip' → logprob: -14.87693977355957

Token 264: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.014171270653605461
    2. 'rstrip' → logprob: -4.264171123504639
    3. 'split' → logprob: -11.764171600341797
    4. ' strip' → logprob: -17.139171600341797
    5. 'rs' → logprob: -18.514171600341797
    6. 'rst' → logprob: -18.889171600341797
    7. '.strip' → logprob: -19.264171600341797
    8. 'r' → logprob: -19.889171600341797
    9. '(strip' → logprob: -19.889171600341797
    10. 'str' → logprob: -20.389171600341797

Token 265: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.8054536581039429
    2. '
' → logprob: -2.3054537773132324
    3. '       ' → logprob: -2.3054537773132324
    4. '=' → logprob: -2.8054537773132324
    5. ',' → logprob: -2.8054537773132324
    6. '[::-' → logprob: -2.8054537773132324
    7. '.split' → logprob: -3.6804537773132324
    8. ' =' → logprob: -3.6804537773132324
    9. 's' → logprob: -3.6804537773132324
    10. '   ' → logprob: -4.055453777313232

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08987235277891159
    2. 's' → logprob: -2.839872360229492
    3. ' s' → logprob: -3.839872360229492
    4. 'string' → logprob: -7.089872360229492
    5. 'result' → logprob: -7.339872360229492
    6. 'message' → logprob: -7.464872360229492
    7. ' code' → logprob: -7.464872360229492
    8. 'text' → logprob: -7.589872360229492
    9. 'code' → logprob: -7.589872360229492
    10. ' original' → logprob: -7.964872360229492

Token 267: ' msg' (ID: 6981)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18731360137462616
    2. 'code' → logprob: -2.8123135566711426
    3. 'text' → logprob: -2.9373135566711426
    4. 'msg' (adapté à ' msg') → logprob: -4.312313556671143
    5. 'res' → logprob: -4.437313556671143
    6. 'password' → logprob: -4.937313556671143
    7. 'S' → logprob: -5.687313556671143
    8. 'pwd' → logprob: -5.687313556671143
    9. 'word' → logprob: -5.937313556671143
    10. 'data' → logprob: -6.062313556671143

Token 268: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22841963171958923
    2. '=input' → logprob: -1.6034196615219116
    3. ' =' → logprob: -5.853419780731201
    4. '=list' → logprob: -10.353419303894043
    5. ',' → logprob: -10.728419303894043
    6. '=in' → logprob: -11.228419303894043
    7. '=[]' → logprob: -11.478419303894043
    8. ',input' → logprob: -11.728419303894043
    9. '=int' → logprob: -11.853419303894043
    10. '_=' → logprob: -11.978419303894043

Token 269: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018151935189962387
    2. '()' → logprob: -4.018151760101318
    3. '()
' → logprob: -14.143152236938477
    4. ' ().' → logprob: -14.643152236938477
    5. '()<' → logprob: -15.143152236938477
    6. '()>' → logprob: -16.018152236938477
    7. '()<<' → logprob: -16.393152236938477
    8. '(' → logprob: -16.518152236938477
    9. '()='' → logprob: -16.893152236938477
    10. '()

' → logprob: -16.893152236938477

Token 270: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0019301822176203132
    2. 'rstrip' → logprob: -6.251930236816406
    3. 'read' → logprob: -13.876930236816406
    4. ' strip' → logprob: -15.251930236816406
    5. 'r' → logprob: -15.251930236816406
    6. '(strip' → logprob: -16.251930236816406
    7. 'rst' → logprob: -16.626930236816406
    8. 'decode' → logprob: -17.751930236816406
    9. 'split' → logprob: -18.251930236816406
    10. '_strip' → logprob: -18.251930236816406

Token 271: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0058254641480743885
    2. '('\' → logprob: -5.380825519561768
    3. '()\' → logprob: -7.005825519561768
    4. '()
' → logprob: -8.63082504272461
    5. '(' → logprob: -9.88082504272461
    6. ')' → logprob: -10.75582504272461
    7. '("\' → logprob: -11.25582504272461
    8. '\n' → logprob: -11.50582504272461
    9. ''\' → logprob: -11.75582504272461
    10. '\' → logprob: -11.75582504272461

Token 272: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5094070477061905e-05
    2. '\n' → logprob: -11.125015258789062
    3. ')' → logprob: -15.375015258789062
    4. '
' → logprob: -18.375015258789062
    5. 'r' → logprob: -18.375015258789062
    6. ')\' → logprob: -19.375015258789062
    7. ' n' → logprob: -19.750015258789062
    8. ')n' → logprob: -20.750015258789062
    9. '```' → logprob: -20.875015258789062
    10. 't' → logprob: -21.125015258789062

Token 273: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2547496259212494
    2. ')' → logprob: -1.5047496557235718
    3. '()' → logprob: -7.254749774932861
    4. ')
' → logprob: -7.379749774932861
    5. '       ' → logprob: -7.629749774932861
    6. ')

' → logprob: -7.754749774932861
    7. '())
' → logprob: -8.504749298095703
    8. '')' → logprob: -9.254749298095703
    9. '')
' → logprob: -9.379749298095703
    10. '()
' → logprob: -9.504749298095703

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03374700993299484
    2. 'for' → logprob: -4.15874719619751
    3. ' for' → logprob: -4.28374719619751
    4. '   ' → logprob: -5.90874719619751
    5. '<|end|>' → logprob: -7.15874719619751
    6. '        
' → logprob: -9.033746719360352
    7. '
' → logprob: -10.783746719360352
    8. '<|end|>' → logprob: -11.033746719360352
    9. 's' → logprob: -11.158746719360352
    10. ')' → logprob: -11.283746719360352

Token 275: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001032691914588213
    2. '       ' → logprob: -7.251032829284668
    3. ' for' → logprob: -8.126032829284668
    4. '   ' → logprob: -11.001032829284668
    5. 'res' → logprob: -11.751032829284668
    6. 'result' → logprob: -13.501032829284668
    7. '	for' → logprob: -14.751032829284668
    8. 's' → logprob: -15.626032829284668
    9. '```' → logprob: -15.751032829284668
    10. 're' → logprob: -16.37603187561035

Token 276: ' ch' (ID: 549)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.27313822507858276
    2. 'op' → logprob: -2.0231382846832275
    3. ' c' → logprob: -3.2731382846832275
    4. 'c' → logprob: -3.6481382846832275
    5. ' cmd' → logprob: -3.8981382846832275
    6. 'cmd' → logprob: -5.023138046264648
    7. ' o' → logprob: -5.148138046264648
    8. 'o' → logprob: -5.898138046264648
    9. ' ch' → logprob: -6.148138046264648
    10. 'inv' → logprob: -6.648138046264648

Token 277: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001182607957161963
    2. 'in' → logprob: -6.751182556152344
    3. ' ' → logprob: -11.876182556152344
    4. 's' → logprob: -13.251182556152344
    5. '	in' → logprob: -13.376182556152344
    6. '  ' → logprob: -14.751182556152344
    7. '_in' → logprob: -15.251182556152344
    8. 'e' → logprob: -15.626182556152344
    9. '   ' → logprob: -15.876182556152344
    10. 't' → logprob: -16.001182556152344

Token 278: ' reversed' (ID: 57184)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.14742091298103333
    2. 're' → logprob: -2.022420883178711
    3. ' order' → logprob: -5.647420883178711
    4. ' reversed' → logprob: -6.772420883178711
    5. '   ' → logprob: -10.272420883178711
    6. 'reverse' → logprob: -11.522420883178711
    7. 'rev' → logprob: -12.647420883178711
    8. '[::-' → logprob: -12.647420883178711
    9. 'inv' → logprob: -12.897420883178711
    10. ' ' → logprob: -13.522420883178711

Token 279: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -2.165027217415627e-05
    2. ' (' → logprob: -11.625021934509277
    3. ' order' → logprob: -11.875021934509277
    4. 'order' → logprob: -12.500021934509277
    5. '(' → logprob: -13.250021934509277
    6. '(ord' → logprob: -15.875021934509277
    7. '	order' → logprob: -17.12502098083496
    8. '$order' → logprob: -17.12502098083496
    9. '_order' → logprob: -19.25002098083496
    10. '(s' → logprob: -19.37502098083496

Token 280: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12724746763706207
    2. '):' → logprob: -2.1272475719451904
    3. '):
' → logprob: -9.50224781036377
    4. ')' → logprob: -9.50224781036377
    5. '       ' → logprob: -9.62724781036377
    6. ':
' → logprob: -10.25224781036377
    7. ':' → logprob: -10.50224781036377
    8. '   ' → logprob: -11.12724781036377
    9. ' ):
' → logprob: -11.12724781036377
    10. '           ' → logprob: -12.25224781036377

Token 281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01779634691774845
    2. 'msg' → logprob: -4.642796516418457
    3. ' msg' → logprob: -5.017796516418457
    4. ':
' → logprob: -7.892796516418457
    5. '
' → logprob: -8.392796516418457
    6. '):
' → logprob: -8.767796516418457
    7. ',msg' → logprob: -8.892796516418457
    8. '[msg' → logprob: -9.267796516418457
    9. '```' → logprob: -9.267796516418457
    10. '(msg' → logprob: -9.392796516418457

Token 282: ' msg' (ID: 6981)
  Prédit: ' msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' msg' → logprob: -0.05969815328717232
    2. 'msg' (adapté à ' msg') → logprob: -2.9346981048583984
    3. '           ' → logprob: -5.559698104858398
    4. '       ' → logprob: -7.434698104858398
    5. '	msg' → logprob: -8.809698104858398
    6. '   ' → logprob: -9.434698104858398
    7. '               ' → logprob: -10.059698104858398
    8. ',msg' → logprob: -10.559698104858398
    9. '(msg' → logprob: -11.059698104858398
    10. ' s' → logprob: -11.184698104858398

Token 283: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067161982879042625
    2. ' =' → logprob: -5.006716251373291
    3. '=

' → logprob: -14.881715774536133
    4. '＝' → logprob: -15.881715774536133
    5. '=s' → logprob: -16.131715774536133
    6. '=m' → logprob: -16.256715774536133
    7. '=obj' → logprob: -16.631715774536133
    8. '=
' → logprob: -16.881715774536133
    9. '=f' → logprob: -18.256715774536133
    10. '=data' → logprob: -18.256715774536133

Token 284: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0013276183744892478
    2. ' inv' → logprob: -6.6263275146484375
    3. '(inv' → logprob: -13.751327514648438
    4. '   ' → logprob: -14.751327514648438
    5. ' ' → logprob: -16.751327514648438
    6. '           ' → logprob: -17.001327514648438
    7. '.inv' → logprob: -17.251327514648438
    8. '
' → logprob: -17.251327514648438
    9. '       ' → logprob: -17.376327514648438
    10. '```' → logprob: -17.876327514648438

Token 285: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -6.749814019713085e-06
    2. '_' → logprob: -12.000006675720215
    3. 'map' → logprob: -15.000006675720215
    4. '_MAP' → logprob: -16.75000762939453
    5. '_m' → logprob: -17.37500762939453
    6. ''_' → logprob: -17.62500762939453
    7. '_
' → logprob: -18.37500762939453
    8. '```' → logprob: -18.50000762939453
    9. 'Map' → logprob: -18.87500762939453
    10. '__' → logprob: -19.00000762939453

Token 286: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -1.8624639324116288e-06
    2. 'ch' → logprob: -14.125001907348633
    3. '```' → logprob: -14.750001907348633
    4. '[' → logprob: -14.750001907348633
    5. ' [' → logprob: -16.875001907348633
    6. '[c' → logprob: -17.250001907348633
    7. '\[' → logprob: -17.500001907348633
    8. '
' → logprob: -17.625001907348633
    9. '[m' → logprob: -17.875001907348633
    10. '(ch' → logprob: -17.875001907348633

Token 287: '](' (ID: 20614)
  Prédit: ']('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '](' → logprob: -0.00024323153775185347
    2. ']' → logprob: -8.375243186950684
    3. ' ]' → logprob: -12.000243186950684
    4. ')]' → logprob: -12.500243186950684
    5. ')(' → logprob: -13.250243186950684
    6. ']()' → logprob: -14.875243186950684
    7. '"](' → logprob: -16.125244140625
    8. '']' → logprob: -16.125244140625
    9. '`](' → logprob: -16.250244140625
    10. '(' → logprob: -16.750244140625

Token 288: 'msg' (ID: 6243)
  Prédit: 'msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'msg' → logprob: -2.1008713702030946e-06
    2. ' msg' → logprob: -13.500001907348633
    3. '(msg' → logprob: -14.250001907348633
    4. '	msg' → logprob: -19.375001907348633
    5. ',msg' → logprob: -19.375001907348633
    6. ')' → logprob: -19.750001907348633
    7. '[msg' → logprob: -21.375001907348633
    8. '$msg' → logprob: -21.875001907348633
    9. '   ' → logprob: -23.250001907348633
    10. '_msg' → logprob: -23.500001907348633

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47418031096458435
    2. ')
' → logprob: -0.9741803407669067
    3. '       ' → logprob: -9.224180221557617
    4. ')
' → logprob: -12.724180221557617
    5. ')

' → logprob: -13.849180221557617
    6. ')return' → logprob: -14.599180221557617
    7. ')`
' → logprob: -16.224180221557617
    8. '   ' → logprob: -16.974180221557617
    9. ' )' → logprob: -17.099180221557617
    10. ' )
' → logprob: -17.349180221557617

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009920296259224415
    2. 'print' → logprob: -4.634920120239258
    3. '   ' → logprob: -9.384920120239258
    4. ' print' → logprob: -9.509920120239258
    5. '
' → logprob: -12.884920120239258
    6. '```' → logprob: -13.259920120239258
    7. '<|end|>' → logprob: -13.634920120239258
    8. '	print' → logprob: -14.884920120239258
    9. '        
' → logprob: -16.634920120239258
    10. '.print' → logprob: -17.009920120239258

Token 291: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00016432604752480984
    2. ' print' → logprob: -9.250164031982422
    3. '   ' → logprob: -9.750164031982422
    4. '       ' → logprob: -11.875164031982422
    5. '
' → logprob: -13.000164031982422
    6. '```' → logprob: -14.750164031982422
    7. '	print' → logprob: -15.375164031982422
    8. '    
' → logprob: -18.375164031982422
    9. '(print' → logprob: -18.875164031982422
    10. ' ' → logprob: -19.125164031982422

Token 292: '(msg' (ID: 15182)
  Prédit: '(msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(msg' → logprob: -3.15441757265944e-05
    2. '(' → logprob: -10.375031471252441
    3. 'msg' → logprob: -16.500032424926758
    4. '(m' → logprob: -17.000032424926758
    5. ' (' → logprob: -17.125032424926758
    6. '(message' → logprob: -17.500032424926758
    7. '()' → logprob: -17.875032424926758
    8. '(f' → logprob: -17.875032424926758
    9. '(MSG' → logprob: -17.875032424926758
    10. '(ms' → logprob: -18.125032424926758

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -15.625000953674316
    4. '())' → logprob: -17.375
    5. ')}' → logprob: -18.5
    6. '`)' → logprob: -18.5
    7. ')`' → logprob: -18.5
    8. '   ' → logprob: -18.625
    9. '')' → logprob: -18.625
    10. '))' → logprob: -18.75

Token 294: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 293
Tokens correctement prédits (1ère position, stricte): 157
Tokens correctement prédits (1ère position, avec adaptation): 170
Tokens correctement prédits (top 10): 262
Précision stricte (1ère position): 53.58%
Précision adaptée (1ère position): 58.02%
Précision (top 10): 89.42%
================================================================================
