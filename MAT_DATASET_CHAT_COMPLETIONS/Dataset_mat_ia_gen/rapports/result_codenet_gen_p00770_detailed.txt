================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

# Pré-calcul des nombres premiers jusqu'à 10^6 avec le crible d'Ératosthène
MAX_M = 10**6
is_prime = [True] * (MAX_M + 1)
is_prime[0] = False
is_prime[1] = False
for i in range(2, int(MAX_M**0.5) + 1):
    if is_prime[i]:
        for j in range(i*i, MAX_M + 1, i):
            is_prime[j] = False


def get_children(cave_num, m):
    """
    Calcule les caves "en dessous" du cave_num selon la règle décrite dans l'énoncé.
    Trouve les 3 caves possibles directement sous cave_num selon le numéro des caves.
    Renvoie une liste des caves enfants valides (<= m).
    
    Pour trouver les enfants, on utilise la relation entre numéros de caves :
    d'après la spirale en carrés, on peut déduire la position (x,y) du cave_num,
    puis ses enfants sont ceux situés sous lui : (x+1, y-1), (x+1, y), (x+1, y+1).
    Mais puisque la position n'est pas donnée, on s'appuie sur la numérotation en spirale.
    
    Cependant, ce problème est un classique modifié : les enfants d'une cave i sont i + ligne,
    i + ligne - 1, i + ligne + 1 où ligne est l'indice de la ligne descendante.
    
    Or ce n'est pas fourni directement.
    
    Approche simplifiée :
    Comme la grille est carrée et numérotée en spirale à partir du centre,
    on remarque dans le problème original que la numérotation correspond à un carré en spirale.
    On peut trouver la "coordonnée verticale" de la cave en fonction de son numéro.
    Mais c'est complexe. 
    
    Heureusement, ce problème est classique dans ce concours.
    La relation entre un noeud i et ses enfants est :
    Les enfants sont : i + ligne, i + ligne - 1, i + ligne + 1
    où "ligne" correspond à la longueur de la ligne descendante, calculée par
    la fonction suivante (on détermine pour i le numéro de la ligne descendante).
    
    En résumé : 
    - Pour i, déterminer la ligne descendante à laquelle i appartient.
    - La ligne descendante L est l'entier comme suit : L = floor((sqrt(i - 1) + 1) / 2)
    - Les enfants sont i + L, i + L - 1, i + L + 1 (filtrés pour être <= m).
    """

    # Calcul de la ligne descendante L à partir du numéro cave_num
    # Formule déduite du pattern de la spirale carrée.
    # Dérivé de la racine carrée correspond à la couche dans la spirale.
    layer = int(math.floor((math.sqrt(cave_num - 1) + 1) / 2))
    children = []
    for diff in (layer - 1, layer, layer + 1):
        child = cave_num + diff
        if 1 <= child <= m:
            children.append(child)
    return children


def solve(m, n):
    """
    Trouve la route descendant maximum en nombre de caves premières en partant de n.
    Retourne (nombre_de_caves_premieres, dernier_no_cave_premiere)
    ou (0, 0) si aucun chemin avec des caves premières n'existe.
    
    On utilise une approche de programmation dynamique avec mémorisation car on peut
    réutiliser les résultats des sous-chemins.
    
    - Si la cave n'est pas prime, elle n'est pas comptée dans la longueur, mais on doit continuer.
    - On cherche le chemin descendant avec le maximum de caves premières.
    - En cas d'égalité, on choisit le chemin dont la dernière cave première est la plus grande.
    
    Pour cela, on mémorise pour chaque cave le tuple : 
    (max_nb_primes_sur_chemin, dernier_prime_sur_chemin)
    """

    from functools import lru_cache

    @lru_cache(None)
    def dfs(cave_num):
        # Recherche la meilleure route descendant en partant de cave_num
        children = get_children(cave_num, m)

        # Si pas d'enfants, alors la route se termine ici
        # Valeur dépend de cave_num (prime ou pas)
        if not children:
            if is_prime[cave_num]:
                return (1, cave_num)
            else:
                return (0, 0)

        # Recherche récursive sur enfant
        best = (0, 0)  # (max_prime_count, last_prime_number)
        for c in children:
            res = dfs(c)
            # on veut la meilleure sous-route
            if res[0] > best[0]:
                best = res
            elif res[0] == best[0]:
                # En cas d'égalité sur le nombre de primes, le plus grand dernier prime
                if res[1] > best[1]:
                    best = res

        # Ajouter cette cave si prime
        if is_prime[cave_num]:
            # compteur + 1, dernier prime devient cave_num (parce que on est avant enfants)
            return (best[0] + 1, cave_num)
        else:
            # pas prime, on ne compte pas mais on garde le meilleur chemin enfants
            return best

    res = dfs(n)

    # Si pas de chemin avec primes
    if res[0] == 0:
        print("0 0")
    else:
        print(res[0], res[1])


def main():
    for line in sys.stdin:
        if line.strip() == '':  # Ignorer lignes vides éventuelles
            continue
        m, n = map(int, line.strip().split())
        if m == 0 and n == 0:
            break
        solve(m, n)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183328330516815
    2. '.' → logprob: -2.3368332386016846
    3. '<|end|>' → logprob: -2.8368332386016846
    4. '\' → logprob: -4.711833477020264
    5. 'newline' → logprob: -5.086833477020264
    6. 'import' → logprob: -5.086833477020264
    7. '
' → logprob: -5.711833477020264
    8. '' → logprob: -5.836833477020264
    9. '<|end|>' → logprob: -5.836833477020264
    10. '\r' → logprob: -6.336833477020264

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29341021180152893
    2. '\n' → logprob: -2.418410301208496
    3. '\' → logprob: -2.918410301208496
    4. 'import' → logprob: -3.168410301208496
    5. '
' → logprob: -3.418410301208496
    6. '```' → logprob: -4.043410301208496
    7. '

' → logprob: -5.043410301208496
    8. '<|end|>' → logprob: -5.293410301208496
    9. ',' → logprob: -6.168410301208496
    10. '<|end|>' → logprob: -6.918410301208496

Token 6: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0550756454467773
    2. '\' → logprob: -1.4300756454467773
    3. 'import' → logprob: -2.1800756454467773
    4. '\n' → logprob: -2.1800756454467773
    5. '```' → logprob: -2.4300756454467773
    6. 'def' → logprob: -3.4300756454467773
    7. '
' → logprob: -4.180075645446777
    8. ',' → logprob: -4.680075645446777
    9. '`' → logprob: -4.930075645446777
    10. '*' → logprob: -4.930075645446777

Token 7: ' Pré' (ID: 86400)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46900349855422974
    2. ' def' → logprob: -1.344003438949585
    3. 'def' → logprob: -2.344003438949585
    4. ' factorial' → logprob: -6.219003677368164
    5. ' ' → logprob: -6.594003677368164
    6. ' is' → logprob: -6.719003677368164
    7. ' #' → logprob: -6.719003677368164
    8. 'import' → logprob: -7.094003677368164
    9. 'factor' → logprob: -7.094003677368164
    10. ' 

' → logprob: -7.219003677368164

Token 8: '-cal' (ID: 84920)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.8670677542686462
    2. '#' → logprob: -1.117067813873291
    3. 'f' → logprob: -2.242067813873291
    4. 'cision' → logprob: -3.492067813873291
    5. 'paration' → logprob: -3.617067813873291
    6. 'face' → logprob: -4.117067813873291
    7. 'd' → logprob: -4.742067813873291
    8. 'def' → logprob: -4.867067813873291
    9. 'c' → logprob: -5.117067813873291
    10. 'pa' → logprob: -5.242067813873291

Token 9: 'cul' (ID: 2885)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18097688257694244
    2. 'c' → logprob: -2.8059768676757812
    3. 'culation' → logprob: -3.5559768676757812
    4. '```' → logprob: -3.5559768676757812
    5. '_' → logprob: -4.555976867675781
    6. 'cul' → logprob: -4.930976867675781
    7. '\d' → logprob: -5.305976867675781
    8. '-' → logprob: -5.930976867675781
    9. '``' → logprob: -6.180976867675781
    10. '**' → logprob: -6.305976867675781

Token 10: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02376340888440609
    2. ' ' → logprob: -5.273763179779053
    3. 's' → logprob: -5.398763179779053
    4. 'ation' → logprob: -5.523763179779053
    5. '#' → logprob: -6.148763179779053
    6. ' _' → logprob: -6.273763179779053
    7. ':' → logprob: -6.398763179779053
    8. 'ations' → logprob: -6.523763179779053
    9. 'a' → logprob: -7.398763179779053
    10. 'e' → logprob: -8.398763656616211

Token 11: ' nombres' (ID: 76205)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.9185673594474792
    2. ' fact' → logprob: -2.043567419052124
    3. ' distances' → logprob: -2.418567419052124
    4. 'factor' → logprob: -2.543567419052124
    5. ' angles' → logprob: -3.043567419052124
    6. ' valeurs' → logprob: -3.418567419052124
    7. ' facteurs' → logprob: -3.418567419052124
    8. ' factorial' → logprob: -3.668567419052124
    9. 'rés' → logprob: -3.793567419052124
    10. ' résultats' → logprob: -3.793567419052124

Token 12: ' premiers' (ID: 59140)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1028379499912262
    2. '_prime' → logprob: -3.7278380393981934
    3. 's' → logprob: -4.227838039398193
    4. 'import' → logprob: -4.477838039398193
    5. '_f' → logprob: -4.852838039398193
    6. 'prime' → logprob: -4.977838039398193
    7. 'f' → logprob: -5.352838039398193
    8. '_factor' → logprob: -5.352838039398193
    9. '_s' → logprob: -5.852838039398193
    10. '_pr' → logprob: -6.102838039398193

Token 13: ' jusqu' (ID: 21961)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.607316255569458
    2. ' ' → logprob: -1.232316255569458
    3. '_' → logprob: -2.107316255569458
    4. 'def' → logprob: -5.107316017150879
    5. ':' → logprob: -5.357316017150879
    6. '\' → logprob: -5.357316017150879
    7. '```' → logprob: -5.357316017150879
    8. ',' → logprob: -5.357316017150879
    9. 'import' → logprob: -5.857316017150879
    10. ' primes' → logprob: -5.857316017150879

Token 14: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.02906477265059948
    2. ''' → logprob: -4.654064655303955
    3. 'à' → logprob: -5.154064655303955
    4. '’à' → logprob: -5.279064655303955
    5. ''au' → logprob: -5.404064655303955
    6. ' à' → logprob: -6.154064655303955
    7. 'a' → logprob: -7.779064655303955
    8. 'au' → logprob: -7.904064655303955
    9. ''a' → logprob: -8.029065132141113
    10. ' ' → logprob: -8.279065132141113

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3710669279098511
    2. '100' → logprob: -1.246066927909851
    3. '20' → logprob: -4.871067047119141
    4. '50' → logprob: -5.246067047119141
    5. ' int' → logprob: -5.996067047119141
    6. '500' → logprob: -6.871067047119141
    7. ' la' → logprob: -6.996067047119141
    8. '200' → logprob: -7.121067047119141
    9. 'int' → logprob: -7.246067047119141
    10. ' '' → logprob: -7.496067047119141

Token 16: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.18167394399642944
    2. ' ' → logprob: -1.8066740036010742
    3. '10' → logprob: -7.681674003601074
    4. '50' → logprob: -7.806674003601074
    5. '200' → logprob: -8.431674003601074
    6. ''' → logprob: -8.556674003601074
    7. '20' → logprob: -8.806674003601074
    8. 'n' → logprob: -8.931674003601074
    9. 'int' → logprob: -9.056674003601074
    10. '500' → logprob: -9.056674003601074

Token 17: '^' (ID: 61)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19750747084617615
    2. ' ' → logprob: -2.822507381439209
    3. '```' → logprob: -3.447507381439209
    4. '3' → logprob: -4.197507381439209
    5. '-' → logprob: -4.197507381439209
    6. '000' → logprob: -4.447507381439209
    7. '2' → logprob: -4.572507381439209
    8. ',' → logprob: -5.072507381439209
    9. '7' → logprob: -5.447507381439209
    10. '100' → logprob: -5.822507381439209

Token 18: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00010950337309623137
    2. '7' → logprob: -9.125109672546387
    3. ' ' → logprob: -14.625109672546387
    4. '**' → logprob: -18.75010871887207
    5. '```' → logprob: -18.75010871887207
    6. '^' → logprob: -19.12510871887207
    7. '5' → logprob: -19.50010871887207
    8. '0' → logprob: -21.25010871887207
    9. '8' → logprob: -21.50010871887207
    10. ' **' → logprob: -21.75010871887207

Token 19: ' avec' (ID: 3937)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.33543211221694946
    2. '```' → logprob: -2.0854320526123047
    3. ':' → logprob: -2.9604320526123047
    4. '\' → logprob: -3.7104320526123047
    5. 'n' → logprob: -4.085432052612305
    6. '\n' → logprob: -4.460432052612305
    7. ' ' → logprob: -4.460432052612305
    8. ' :' → logprob: -4.960432052612305
    9. 'def' → logprob: -5.085432052612305
    10. '`' → logprob: -5.460432052612305

Token 20: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.23711779713630676
    2. 'la' → logprob: -2.9871177673339844
    3. ' le' → logprob: -3.1121177673339844
    4. 's' → logprob: -3.1121177673339844
    5. 'un' → logprob: -3.8621177673339844
    6. ' la' → logprob: -4.487117767333984
    7. ' sieve' → logprob: -4.487117767333984
    8. ' un' → logprob: -4.987117767333984
    9. 'l' → logprob: -5.612117767333984
    10. 'cr' → logprob: -5.737117767333984

Token 21: ' cr' (ID: 1769)
  Prédit: ' cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cr' → logprob: -0.03750540688633919
    2. 's' → logprob: -4.037505626678467
    3. 'cr' → logprob: -4.412505626678467
    4. '_' → logprob: -6.287505626678467
    5. 'crib' → logprob: -6.912505626678467
    6. ' Cr' → logprob: -7.037505626678467
    7. 'é' → logprob: -7.037505626678467
    8. 'er' → logprob: -7.537505626678467
    9. ' sieve' → logprob: -7.537505626678467
    10. 'Cr' → logprob: -8.162505149841309

Token 22: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.0004932218580506742
    2. 'i' → logprob: -8.625493049621582
    3. 'iv' → logprob: -8.875493049621582
    4. 'ibl' → logprob: -9.375493049621582
    5. 'ib' → logprob: -10.375493049621582
    6. 'o' → logprob: -10.750493049621582
    7. 'ive' → logprob: -11.875493049621582
    8. 'iba' → logprob: -12.625493049621582
    9. 'é' → logprob: -12.875493049621582
    10. 'ibles' → logprob: -12.875493049621582

Token 23: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09958919137716293
    2. 's' → logprob: -2.9745891094207764
    3. '_s' → logprob: -3.4745891094207764
    4. 'd' → logprob: -4.8495893478393555
    5. 'S' → logprob: -6.3495893478393555
    6. '_d' → logprob: -6.9745893478393555
    7. ' d' → logprob: -6.9745893478393555
    8. '_er' → logprob: -8.599589347839355
    9. '```' → logprob: -8.599589347839355
    10. ' ' → logprob: -8.724589347839355

Token 24: ''É' (ID: 87944)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.3955979645252228
    2. 'É' → logprob: -1.5205979347229004
    3. ''É' → logprob: -2.2705979347229004
    4. '’É' → logprob: -6.1455979347229
    5. 'S' → logprob: -7.0205979347229
    6. ''E' → logprob: -7.5205979347229
    7. 'é' → logprob: -8.145598411560059
    8. 'Er' → logprob: -8.145598411560059
    9. ''é' → logprob: -8.270598411560059
    10. '```' → logprob: -8.770598411560059

Token 25: 'rat' (ID: 11990)
  Prédit: 'rat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rat' → logprob: -0.017081985250115395
    2. 'r' → logprob: -4.267082214355469
    3. 'rats' → logprob: -7.017082214355469
    4. 'R' → logprob: -7.517082214355469
    5. '**' → logprob: -7.892082214355469
    6. 'rast' → logprob: -7.892082214355469
    7. '```' → logprob: -8.267082214355469
    8. 'ras' → logprob: -9.017082214355469
    9. '' → logprob: -10.267082214355469
    10. '#' → logprob: -10.642082214355469

Token 26: 'ost' (ID: 564)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.25724518299102783
    2. 'ost' → logprob: -1.6322451829910278
    3. 'o' → logprob: -3.7572450637817383
    4. 'oste' → logprob: -5.882245063781738
    5. 'h' → logprob: -6.507245063781738
    6. ' ost' → logprob: -6.632245063781738
    7. ' os' → logprob: -6.757245063781738
    8. 'ose' → logprob: -8.257245063781738
    9. 'osten' → logprob: -8.632245063781738
    10. 'osen' → logprob: -8.632245063781738

Token 27: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0005582740413956344
    2. 'o' → logprob: -8.000557899475098
    3. 'ö' → logprob: -9.750557899475098
    4. 'ost' → logprob: -10.125557899475098
    5. 'H' → logprob: -10.625557899475098
    6. 'os' → logprob: -11.000557899475098
    7. 'oth' → logprob: -11.250557899475098
    8. 'ó' → logprob: -11.375557899475098
    9. 'hé' → logprob: -11.875557899475098
    10. '<h' → logprob: -12.500557899475098

Token 28: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.005357313901185989
    2. 'h' → logprob: -5.880357265472412
    3. 'ènes' → logprob: -6.880357265472412
    4. 'ene' → logprob: -7.130357265472412
    5. 'é' → logprob: -8.25535774230957
    6. '{' → logprob: -9.13035774230957
    7. 'enes' → logprob: -9.50535774230957
    8. 'o' → logprob: -10.13035774230957
    9. 'e' → logprob: -10.50535774230957
    10. '#' → logprob: -10.50535774230957

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22833366692066193
    2. 'def' → logprob: -2.4783337116241455
    3. 'import' → logprob: -3.9783337116241455
    4. '

' → logprob: -4.353333473205566
    5. '
' → logprob: -4.478333473205566
    6. 's' → logprob: -4.478333473205566
    7. '```' → logprob: -4.478333473205566
    8. ':' → logprob: -4.853333473205566
    9. ' 
' → logprob: -4.853333473205566
    10. '\' → logprob: -4.978333473205566

Token 30: 'MAX' (ID: 21911)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8932173848152161
    2. 'def' → logprob: -1.8932173252105713
    3. 'n' → logprob: -2.0182173252105713
    4. ' ' → logprob: -2.8932173252105713
    5. '```' → logprob: -2.8932173252105713
    6. '_' → logprob: -3.1432173252105713
    7. '
' → logprob: -3.2682173252105713
    8. 'prime' → logprob: -4.01821756362915
    9. ':' → logprob: -4.14321756362915
    10. 'N' → logprob: -4.89321756362915

Token 31: '_M' (ID: 2372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4298460781574249
    2. '_' → logprob: -1.1798460483551025
    3. '=' → logprob: -3.3048460483551025
    4. '_=' → logprob: -6.554846286773682
    5. '_NUM' → logprob: -6.804846286773682
    6. '_N' → logprob: -7.054846286773682
    7. '_SIZE' → logprob: -7.804846286773682
    8. ' _' → logprob: -8.054845809936523
    9. '_NUMBER' → logprob: -8.179845809936523
    10. '_VALUE' → logprob: -8.554845809936523

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19494383037090302
    2. 'AX' → logprob: -2.569943904876709
    3. '=' → logprob: -2.694943904876709
    4. '_' → logprob: -3.944943904876709
    5. 'A' → logprob: -4.444943904876709
    6. '_A' → logprob: -7.194943904876709
    7. '_=' → logprob: -8.19494342803955
    8. '   ' → logprob: -8.94494342803955
    9. '=A' → logprob: -9.44494342803955
    10. '=`' → logprob: -9.81994342803955

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4886140525341034
    2. '10' → logprob: -0.9886140823364258
    3. '100' → logprob: -4.238614082336426
    4. '1' → logprob: -12.738614082336426
    5. ' ' → logprob: -13.738614082336426
    6. 'int' → logprob: -15.613614082336426
    7. '  ' → logprob: -16.73861312866211
    8. '_' → logprob: -17.11361312866211
    9. ' int' → logprob: -17.11361312866211
    10. '105' → logprob: -17.73861312866211

Token 34: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.016322210431098938
    2. '100' → logprob: -4.266322135925293
    3. ' ' → logprob: -6.141322135925293
    4. '1' → logprob: -12.391322135925293
    5. 'int' → logprob: -16.01632308959961
    6. ' ' → logprob: -18.01632308959961
    7. '  ' → logprob: -18.26632308959961
    8. '106' → logprob: -18.76632308959961
    9. '   ' → logprob: -19.26632308959961
    10. '(' → logprob: -19.26632308959961

Token 35: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.10043063014745712
    2. '**' → logprob: -2.350430727005005
    3. '^' → logprob: -8.850430488586426
    4. '```' → logprob: -10.100430488586426
    5. ' **' → logprob: -11.475430488586426
    6. '\xe2\x81' → logprob: -12.225430488586426
    7. ' ' → logprob: -12.350430488586426
    8. '000' → logprob: -12.475430488586426
    9. '06' → logprob: -12.600430488586426
    10. '7' → logprob: -12.600430488586426

Token 36: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -16.625
    4. '06' → logprob: -18.9375
    5. '۶' → logprob: -19.4375
    6. '６' → logprob: -19.875
    7. '٦' → logprob: -19.9375
    8. '' → logprob: -20.125
    9. '६' → logprob: -20.25
    10. '7' → logprob: -20.375

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07317350059747696
    2. ' 
' → logprob: -3.1981735229492188
    3. 'import' → logprob: -4.698173522949219
    4. '

' → logprob: -5.073173522949219
    5. ' 

' → logprob: -5.948173522949219
    6. '
' → logprob: -5.948173522949219
    7. '#' → logprob: -6.323173522949219
    8. '```' → logprob: -6.448173522949219
    9. 's' → logprob: -7.073173522949219
    10. '\n' → logprob: -7.198173522949219

Token 38: 'is' (ID: 276)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8471931219100952
    2. 'prime' → logprob: -2.0971932411193848
    3. ' primes' → logprob: -2.5971932411193848
    4. ' 
' → logprob: -2.8471932411193848
    5. 'import' → logprob: -3.2221932411193848
    6. '```' → logprob: -3.4721932411193848
    7. 'pr' → logprob: -3.4721932411193848
    8. ' 

' → logprob: -3.7221932411193848
    9. '_prime' → logprob: -3.7221932411193848
    10. ' ' → logprob: -3.8471932411193848

Token 39: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.003205519402399659
    2. '_' → logprob: -5.753205299377441
    3. 'prime' → logprob: -10.628205299377441
    4. '_pr' → logprob: -13.128205299377441
    5. '_p' → logprob: -14.628205299377441
    6. ' _' → logprob: -14.753205299377441
    7. '```' → logprob: -15.128205299377441
    8. '_Pr' → logprob: -15.628205299377441
    9. ' prime' → logprob: -16.628206253051758
    10. 'Prime' → logprob: -16.753206253051758

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0307626910507679
    2. '=' → logprob: -4.155762672424316
    3. '[' → logprob: -4.280762672424316
    4. ' =[' → logprob: -7.780762672424316
    5. '=[' → logprob: -8.155762672424316
    6. '[:]' → logprob: -10.030762672424316
    7. 's' → logprob: -11.405762672424316
    8. ' ' → logprob: -11.780762672424316
    9. ' [' → logprob: -11.905762672424316
    10. '[]' → logprob: -12.405762672424316

Token 41: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12692968547344208
    2. ' [' → logprob: -2.126929759979248
    3. '[int' → logprob: -14.50192928314209
    4. ' ' → logprob: -15.62692928314209
    5. '[class' → logprob: -15.75192928314209
    6. ' ' → logprob: -16.126930236816406
    7. '[m' → logprob: -16.376930236816406
    8. '[n' → logprob: -16.501930236816406
    9. '[Math' → logprob: -16.626930236816406
    10. '[i' → logprob: -17.126930236816406

Token 42: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10020839422941208
    2. ' True' → logprob: -2.350208282470703
    3. '(True' → logprob: -13.725208282470703
    4. 'False' → logprob: -14.225208282470703
    5. 'Tr' → logprob: -17.725208282470703
    6. ' False' → logprob: -19.100208282470703
    7. '=True' → logprob: -19.100208282470703
    8. '.True' → logprob: -20.225208282470703
    9. '1' → logprob: -20.475208282470703
    10. ' Tru' → logprob: -20.725208282470703

Token 43: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4828236997127533
    2. ']' → logprob: -0.9828237295150757
    3. ' for' → logprob: -5.107823848724365
    4. ' ]' → logprob: -6.732823848724365
    5. ' ' → logprob: -7.482823848724365
    6. ' ,' → logprob: -7.857823848724365
    7. ']*' → logprob: -8.357823371887207
    8. '[' → logprob: -8.732823371887207
    9. 'for' → logprob: -10.357823371887207
    10. ',
' → logprob: -10.982823371887207

Token 44: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13254359364509583
    2. ' for' → logprob: -2.7575435638427734
    3. ']' → logprob: -3.0075435638427734
    4. '[' → logprob: -4.882543563842773
    5. ' ' → logprob: -7.132543563842773
    6. '<|end|>' → logprob: -7.132543563842773
    7. ' ,' → logprob: -8.257543563842773
    8. 'for' → logprob: -8.257543563842773
    9. ' ]' → logprob: -8.257543563842773
    10. ',[' → logprob: -8.632543563842773

Token 45: ' (' (ID: 350)
  Prédit: '(MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.00024239711638074368
    2. '(M' → logprob: -8.875242233276367
    3. ' (' → logprob: -9.750242233276367
    4. '(' → logprob: -10.125242233276367
    5. '(max' → logprob: -13.500242233276367
    6. '(Max' → logprob: -13.750242233276367
    7. '((' → logprob: -14.750242233276367
    8. 'MAX' → logprob: -14.750242233276367
    9. '[MAX' → logprob: -15.125242233276367
    10. '(NUM' → logprob: -15.500242233276367

Token 46: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0020781708881258965
    2. '(MAX' → logprob: -6.252078056335449
    3. ' MAX' → logprob: -9.00207805633545
    4. '(' → logprob: -11.50207805633545
    5. '100' → logprob: -11.87707805633545
    6. '10' → logprob: -12.00207805633545
    7. ' (' → logprob: -14.12707805633545
    8. '_MAX' → logprob: -14.37707805633545
    9. '(M' → logprob: -15.25207805633545
    10. ' ' → logprob: -15.25207805633545

Token 47: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -7.5649528298527e-05
    2. '_' → logprob: -10.875075340270996
    3. '+' → logprob: -11.000075340270996
    4. '_MAX' → logprob: -11.125075340270996
    5. '_MS' → logprob: -12.375075340270996
    6. '_MP' → logprob: -12.625075340270996
    7. '```' → logprob: -12.750075340270996
    8. ' _' → logprob: -13.000075340270996
    9. '_MC' → logprob: -13.125075340270996
    10. '_m' → logprob: -13.750075340270996

Token 48: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0052362410351634026
    2. ' +' → logprob: -5.2552361488342285
    3. '1' → logprob: -14.130236625671387
    4. '+
' → logprob: -14.380236625671387
    5. ' ' → logprob: -14.505236625671387
    6. ')' → logprob: -15.880236625671387
    7. '+

' → logprob: -16.50523567199707
    8. '＋' → logprob: -16.50523567199707
    9. '+)' → logprob: -16.63023567199707
    10. '```' → logprob: -17.25523567199707

Token 49: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009756677784025669
    2. ' ' → logprob: -4.634756565093994
    3. '```' → logprob: -15.759757041931152
    4. ')' → logprob: -16.134756088256836
    5. '  ' → logprob: -16.259756088256836
    6. '2' → logprob: -16.509756088256836
    7. '   ' → logprob: -17.072256088256836
    8. ' )' → logprob: -17.134756088256836
    9. ' ' → logprob: -17.197256088256836
    10. '7' → logprob: -17.322256088256836

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -18.3750057220459
    4. '2' → logprob: -19.0000057220459
    5. '7' → logprob: -19.3750057220459
    6. '１' → logprob: -20.1250057220459
    7. '۱' → logprob: -20.6250057220459
    8. '   ' → logprob: -20.6250057220459
    9. '  ' → logprob: -21.1250057220459
    10. '11' → logprob: -21.3125057220459

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008741624653339386
    2. ')
' → logprob: -4.758741855621338
    3. ')
' → logprob: -9.63374137878418
    4. ' )' → logprob: -10.00874137878418
    5. ']' → logprob: -11.88374137878418
    6. ')

' → logprob: -12.50874137878418
    7. ' )
' → logprob: -12.88374137878418
    8. '```' → logprob: -14.38374137878418
    9. '),' → logprob: -14.75874137878418
    10. '' → logprob: -14.88374137878418

Token 52: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0010193521156907082
    2. '
' → logprob: -7.001019477844238
    3. ' is' → logprob: -9.251019477844238
    4. '```' → logprob: -13.001019477844238
    5. 'for' → logprob: -13.251019477844238
    6. 'i' → logprob: -13.751019477844238
    7. '[' → logprob: -14.001019477844238
    8. '

' → logprob: -14.126019477844238
    9. '  
' → logprob: -14.126019477844238
    10. ' 
' → logprob: -14.251019477844238

Token 53: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.002483031013980508
    2. '_' → logprob: -6.002482891082764
    3. '_pr' → logprob: -12.752483367919922
    4. '_p' → logprob: -14.377483367919922
    5. ' _' → logprob: -14.502483367919922
    6. '_Pr' → logprob: -14.627483367919922
    7. '_private' → logprob: -14.752483367919922
    8. 'prime' → logprob: -14.752483367919922
    9. '_pal' → logprob: -15.502483367919922
    10. '_false' → logprob: -15.627483367919922

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -15.875000953674316
    3. '[:]' → logprob: -16.0
    4. '\[' → logprob: -16.0
    5. '```' → logprob: -16.375
    6. '[...]' → logprob: -17.625
    7. '[]' → logprob: -17.875
    8. '<|end|>' → logprob: -18.125
    9. ' ' → logprob: -18.25
    10. '[
' → logprob: -18.5

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '۰' → logprob: -17.500179290771484
    4. ')' → logprob: -18.125179290771484
    5. '00' → logprob: -18.500179290771484
    6. '٠' → logprob: -18.750179290771484
    7. '  ' → logprob: -19.000179290771484
    8. '   ' → logprob: -19.375179290771484
    9. '[' → logprob: -19.937679290771484
    10. ' ' → logprob: -20.000179290771484

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013296448159962893
    2. ' ]' → logprob: -6.62632942199707
    3. ']=' → logprob: -12.62632942199707
    4. '],' → logprob: -15.75132942199707
    5. ')' → logprob: -16.12632942199707
    6. ' ' → logprob: -16.87632942199707
    7. '']' → logprob: -17.00132942199707
    8. ']==' → logprob: -17.50132942199707
    9. '=' → logprob: -17.87632942199707
    10. ',' → logprob: -18.50132942199707

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009765299037098885
    2. '=' → logprob: -4.634765148162842
    3. ' ' → logprob: -12.509765625
    4. ' =
' → logprob: -13.009765625
    5. ',' → logprob: -13.509765625
    6. ' ==' → logprob: -14.384765625
    7. ' =
' → logprob: -14.509765625
    8. '=False' → logprob: -14.634765625
    9. ' |=' → logprob: -15.884765625
    10. ' =)' → logprob: -16.259765625

Token 58: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.048587825149297714
    2. ' False' → logprob: -3.0485877990722656
    3. '(False' → logprob: -15.798587799072266
    4. 'F' → logprob: -16.048587799072266
    5. '=False' → logprob: -16.298587799072266
    6. 'is' → logprob: -16.923587799072266
    7. '.False' → logprob: -17.923587799072266
    8. '_false' → logprob: -18.423587799072266
    9. ' ' → logprob: -18.548587799072266
    10. ' is' → logprob: -18.798587799072266

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33565181493759155
    2. '<|end|>' → logprob: -1.3356518745422363
    3. 'is' → logprob: -4.460651874542236
    4. ' is' → logprob: -4.835651874542236
    5. '<|end|>' → logprob: -6.460651874542236
    6. ' 
' → logprob: -7.960651874542236
    7. '  
' → logprob: -8.210651397705078
    8. ' ' → logprob: -9.710651397705078
    9. '
' → logprob: -9.710651397705078
    10. 's' → logprob: -9.960651397705078

Token 60: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2646227180957794
    2. '
' → logprob: -1.764622688293457
    3. '<|end|>' → logprob: -3.139622688293457
    4. ' is' → logprob: -4.139622688293457
    5. '0' → logprob: -6.889622688293457
    6. '[' → logprob: -8.639622688293457
    7. '1' → logprob: -8.764622688293457
    8. '<|end|>' → logprob: -8.889622688293457
    9. '  
' → logprob: -9.514622688293457
    10. ' 
' → logprob: -9.639622688293457

Token 61: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -2.4034345187828876e-05
    2. '_' → logprob: -11.00002384185791
    3. 'prime' → logprob: -12.50002384185791
    4. '_pr' → logprob: -13.00002384185791
    5. '_p' → logprob: -14.12502384185791
    6. '_prior' → logprob: -16.500024795532227
    7. '_private' → logprob: -16.750024795532227
    8. '_pi' → logprob: -17.125024795532227
    9. ']_' → logprob: -17.125024795532227
    10. '_pid' → logprob: -17.375024795532227

Token 62: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '[
' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -15.625000953674316
    4. '1' → logprob: -16.750001907348633
    5. ' [' → logprob: -17.250001907348633
    6. ' =' → logprob: -17.625001907348633
    7. '\[' → logprob: -18.500001907348633
    8. '```' → logprob: -18.500001907348633
    9. '=' → logprob: -18.875001907348633
    10. '[...]' → logprob: -20.250001907348633

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. ')' → logprob: -17.75002670288086
    4. '0' → logprob: -19.06252670288086
    5. '  ' → logprob: -19.06252670288086
    6. '   ' → logprob: -19.31252670288086
    7. '[' → logprob: -19.37502670288086
    8. '```' → logprob: -19.50002670288086
    9. '۱' → logprob: -19.56252670288086
    10. ']' → logprob: -19.62502670288086

Token 64: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25458836555480957
    2. ' =' → logprob: -2.1295883655548096
    3. '=' → logprob: -2.2545883655548096
    4. ' ]' → logprob: -7.3795881271362305
    5. ' ' → logprob: -8.50458812713623
    6. ']=' → logprob: -9.12958812713623
    7. ')' → logprob: -10.75458812713623
    8. '=False' → logprob: -13.25458812713623
    9. '<|end|>' → logprob: -14.00458812713623
    10. '[' → logprob: -14.50458812713623

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021904718596488237
    2. '=' → logprob: -6.127190589904785
    3. ' ' → logprob: -12.627190589904785
    4. '=False' → logprob: -14.002190589904785
    5. '<|end|>' → logprob: -14.252190589904785
    6. ' =
' → logprob: -14.502190589904785
    7. ')' → logprob: -17.12718963623047
    8. ' =
' → logprob: -17.50218963623047
    9. '=True' → logprob: -17.87718963623047
    10. ' ' → logprob: -18.00218963623047

Token 66: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12692810595035553
    2. ' False' → logprob: -2.1269280910491943
    3. '(False' → logprob: -19.626928329467773
    4. '=False' → logprob: -20.501928329467773
    5. '_false' → logprob: -21.001928329467773
    6. '.False' → logprob: -21.001928329467773
    7. 'True' → logprob: -22.626928329467773
    8. ' ' → logprob: -23.501928329467773
    9. 'F' → logprob: -24.001928329467773
    10. ' True' → logprob: -24.126928329467773

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0026153710205107927
    2. 'for' → logprob: -6.252615451812744
    3. '
' → logprob: -7.627615451812744
    4. ' for' → logprob: -8.877614974975586
    5. ' 
' → logprob: -10.627614974975586
    6. '

' → logprob: -11.252614974975586
    7. '\n' → logprob: -11.752614974975586
    8. '  
' → logprob: -11.752614974975586
    9. '```' → logprob: -12.752614974975586
    10. '' → logprob: -12.877614974975586

Token 68: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1049957275390625
    2. '
' → logprob: -2.3549957275390625
    3. ' for' → logprob: -5.3549957275390625
    4. '
' → logprob: -10.354995727539062
    5. ' 
' → logprob: -11.854995727539062
    6. '

' → logprob: -12.479995727539062
    7. '```' → logprob: -12.854995727539062
    8. 'n' → logprob: -13.229995727539062
    9. '' → logprob: -13.354995727539062
    10. '\n' → logprob: -13.479995727539062

Token 69: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002577559556812048
    2. ' ' → logprob: -6.627577781677246
    3. ' p' → logprob: -7.002577781677246
    4. 'i' → logprob: -8.002577781677246
    5. '	i' → logprob: -12.252577781677246
    6. ' number' → logprob: -14.877577781677246
    7. ' x' → logprob: -15.002577781677246
    8. ' n' → logprob: -15.127577781677246
    9. '  ' → logprob: -15.377577781677246
    10. 'p' → logprob: -15.627577781677246

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00869304221123457
    2. 'in' → logprob: -4.758693218231201
    3. ' ' → logprob: -9.633692741394043
    4. '2' → logprob: -12.633692741394043
    5. 'range' → logprob: -12.758692741394043
    6. '	in' → logprob: -13.508692741394043
    7. '  ' → logprob: -13.633692741394043
    8. ' i' → logprob: -14.258692741394043
    9. '   ' → logprob: -14.633692741394043
    10. 'i' → logprob: -14.633692741394043

Token 71: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0024827925954014063
    2. 'range' → logprob: -6.002482891082764
    3. '2' → logprob: -12.252482414245605
    4. ' ' → logprob: -13.377482414245605
    5. '	range' → logprob: -14.127482414245605
    6. '(range' → logprob: -17.002483367919922
    7. '.range' → logprob: -17.752483367919922
    8. ' xrange' → logprob: -18.377483367919922
    9. '  ' → logprob: -18.502483367919922
    10. '_range' → logprob: -20.752483367919922

Token 72: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000181372175575234
    2. '2' → logprob: -8.750181198120117
    3. ' ' → logprob: -11.000181198120117
    4. ' (' → logprob: -12.000181198120117
    5. '[' → logprob: -18.875181198120117
    6. ',' → logprob: -19.750181198120117
    7. '{' → logprob: -19.875181198120117
    8. '(
' → logprob: -19.875181198120117
    9. '```' → logprob: -20.625181198120117
    10. '  ' → logprob: -20.875181198120117

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.25001335144043
    4. '２' → logprob: -19.87501335144043
    5. '۲' → logprob: -19.87501335144043
    6. '(' → logprob: -20.12501335144043
    7. '```' → logprob: -20.62501335144043
    8. '  ' → logprob: -20.87501335144043
    9. '	' → logprob: -21.50001335144043
    10. ')' → logprob: -21.62501335144043

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026851817965507507
    2. ' ,' → logprob: -3.6518518924713135
    3. ' ' → logprob: -7.776851654052734
    4. ')' → logprob: -9.401851654052734
    5. ' )' → logprob: -10.526851654052734
    6. ',int' → logprob: -12.776851654052734
    7. '2' → logprob: -12.776851654052734
    8. ',len' → logprob: -13.026851654052734
    9. '  ' → logprob: -13.276851654052734
    10. 'import' → logprob: -13.401851654052734

Token 75: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16023477911949158
    2. 'int' → logprob: -1.910234808921814
    3. ' math' → logprob: -12.035234451293945
    4. 'math' → logprob: -13.160234451293945
    5. ' ' → logprob: -13.535234451293945
    6. '	int' → logprob: -13.910234451293945
    7. '(int' → logprob: -14.535234451293945
    8. '=int' → logprob: -17.660234451293945
    9. '[int' → logprob: -17.785234451293945
    10. ':int' → logprob: -18.160234451293945

Token 76: '(MAX' (ID: 129209)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42864349484443665
    2. '(math' → logprob: -1.1786434650421143
    3. '(MAX' → logprob: -3.5536434650421143
    4. ' (' → logprob: -4.428643703460693
    5. '(M' → logprob: -8.928643226623535
    6. '(s' → logprob: -9.303643226623535
    7. ' ' → logprob: -9.678643226623535
    8. '(max' → logprob: -11.053643226623535
    9. ' math' → logprob: -11.053643226623535
    10. '(
' → logprob: -11.178643226623535

Token 77: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -0.0037802429869771004
    2. '(math' → logprob: -6.503780364990234
    3. '(M' → logprob: -6.628780364990234
    4. 'sqrt' → logprob: -8.503780364990234
    5. '(s' → logprob: -8.503780364990234
    6. '_MAX' → logprob: -8.878780364990234
    7. ')' → logprob: -9.128780364990234
    8. '(MAX' → logprob: -9.503780364990234
    9. '.sqrt' → logprob: -9.878780364990234
    10. '(' → logprob: -10.753780364990234

Token 78: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.026648471131920815
    2. ' **' → logprob: -3.65164852142334
    3. '.sqrt' → logprob: -8.15164852142334
    4. ' ' → logprob: -10.52664852142334
    5. '.' → logprob: -11.27664852142334
    6. ''s' → logprob: -12.40164852142334
    7. ')' → logprob: -12.40164852142334
    8. 'sqrt' → logprob: -13.40164852142334
    9. '.square' → logprob: -13.40164852142334
    10. '^' → logprob: -13.52664852142334

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001037691137753427
    2. ' ' → logprob: -6.87603759765625
    3. '.' → logprob: -12.25103759765625
    4. ' ' → logprob: -16.62603759765625
    5. ' .' → logprob: -17.37603759765625
    6. '  ' → logprob: -19.25103759765625
    7. '(' → logprob: -19.50103759765625
    8. '2' → logprob: -20.50103759765625
    9. '    ' → logprob: -20.62603759765625
    10. '```' → logprob: -21.00103759765625

Token 80: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.531315314830863e-06
    2. '0' → logprob: -12.750003814697266
    3. ' .' → logprob: -14.750003814697266
    4. '2' → logprob: -17.250003814697266
    5. '5' → logprob: -17.500003814697266
    6. '1' → logprob: -17.500003814697266
    7. ' ' → logprob: -18.375003814697266
    8. '50' → logprob: -18.625003814697266
    9. '6' → logprob: -19.000003814697266
    10. '3' → logprob: -19.000003814697266

Token 81: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.531315314830863e-06
    2. '.' → logprob: -13.250003814697266
    3. '```' → logprob: -14.375003814697266
    4. '   ' → logprob: -15.375003814697266
    5. '4' → logprob: -16.250003814697266
    6. '0' → logprob: -16.812503814697266
    7. ')' → logprob: -16.812503814697266
    8. '6' → logprob: -16.937503814697266
    9. '``' → logprob: -17.000003814697266
    10. '...' → logprob: -17.000003814697266

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03376510739326477
    2. ')+' → logprob: -3.4087650775909424
    3. ' )' → logprob: -9.533764839172363
    4. '+' → logprob: -10.408764839172363
    5. '()' → logprob: -11.283764839172363
    6. ' +' → logprob: -13.158764839172363
    7. '()+' → logprob: -14.533764839172363
    8. '}+' → logprob: -15.158764839172363
    9. '```' → logprob: -15.158764839172363
    10. ']+' → logprob: -15.158764839172363

Token 83: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933830976486206
    2. ' +' → logprob: -0.6933830976486206
    3. ')+' → logprob: -8.81838321685791
    4. ')' → logprob: -9.94338321685791
    5. ' ' → logprob: -10.19338321685791
    6. '()+' → logprob: -13.69338321685791
    7. ' )' → logprob: -14.31838321685791
    8. ' ' → logprob: -15.31838321685791
    9. ']+' → logprob: -16.318382263183594
    10. '()' → logprob: -16.818382263183594

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25192928314208984
    2. ' ' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.251930236816406
    4. '```' → logprob: -17.126930236816406
    5. '2' → logprob: -17.501930236816406
    6. '  ' → logprob: -17.626930236816406
    7. ')' → logprob: -18.251930236816406
    8. '   ' → logprob: -18.876930236816406
    9. ' )' → logprob: -19.189430236816406
    10. '+' → logprob: -19.439430236816406

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '  ' → logprob: -16.50048828125
    4. '   ' → logprob: -17.50048828125
    5. '```' → logprob: -17.75048828125
    6. '2' → logprob: -18.50048828125
    7. '(' → logprob: -18.87548828125
    8. ' ' → logprob: -18.87548828125
    9. '    ' → logprob: -19.18798828125
    10. ')' → logprob: -19.50048828125

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00560641149058938
    2. ':' → logprob: -5.755606174468994
    3. ' ):' → logprob: -6.255606174468994
    4. ')' → logprob: -7.630606174468994
    5. '):
' → logprob: -11.380606651306152
    6. ' :' → logprob: -12.255606651306152
    7. ' )' → logprob: -12.755606651306152
    8. ',' → logprob: -14.755606651306152
    9. ' ' → logprob: -15.505606651306152
    10. ']:' → logprob: -15.880606651306152

Token 87: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006806791294366121
    2. ' :' → logprob: -5.00680685043335
    3. ':
' → logprob: -10.131806373596191
    4. ' if' → logprob: -11.131806373596191
    5. ' :
' → logprob: -11.506806373596191
    6. ' ' → logprob: -11.756806373596191
    7. '):' → logprob: -11.881806373596191
    8. '   ' → logprob: -12.131806373596191
    9. 'if' → logprob: -13.506806373596191
    10. ',' → logprob: -13.506806373596191

Token 88: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4054149091243744
    2. ' ' → logprob: -1.4054149389266968
    3. 'if' (adapté à ' if') → logprob: -3.2804148197174072
    4. '    ' → logprob: -3.2804148197174072
    5. '   ' → logprob: -5.155415058135986
    6. ' :' → logprob: -5.655415058135986
    7. '  ' → logprob: -6.905415058135986
    8. ':' → logprob: -7.280415058135986
    9. ' :
' → logprob: -7.780415058135986
    10. ' 
' → logprob: -8.280414581298828

Token 89: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0008616767590865493
    2. ' ' → logprob: -7.875861644744873
    3. 'is' → logprob: -7.875861644744873
    4. ' ' → logprob: -9.250862121582031
    5. '  ' → logprob: -13.375862121582031
    6. '	is' → logprob: -13.375862121582031
    7. ' not' → logprob: -13.750862121582031
    8. ' (' → logprob: -15.000862121582031
    9. ' ‌' → logprob: -15.125862121582031
    10. ' space' → logprob: -15.250862121582031

Token 90: '_prime' (ID: 98616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3872026801109314
    2. '_prime' → logprob: -1.1372027397155762
    3. '_pr' → logprob: -8.887202262878418
    4. '_
' → logprob: -9.512202262878418
    5. ' _' → logprob: -9.762202262878418
    6. '_p' → logprob: -11.387202262878418
    7. '_pi' → logprob: -11.637202262878418
    8. '_

' → logprob: -11.762202262878418
    9. '_prior' → logprob: -12.387202262878418
    10. '_private' → logprob: -12.762202262878418

Token 91: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0052342405542731285
    2. '[' → logprob: -5.255234241485596
    3. '[I' → logprob: -16.380233764648438
    4. '[
' → logprob: -16.505233764648438
    5. '```' → logprob: -16.880233764648438
    6. ' [' → logprob: -17.505233764648438
    7. '\[' → logprob: -18.005233764648438
    8. '[j' → logprob: -18.130233764648438
    9. '[...]' → logprob: -18.505233764648438
    10. '[int' → logprob: -18.880233764648438

Token 92: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009585851803421974
    2. ')' → logprob: -5.009585857391357
    3. ' ):' → logprob: -6.009585857391357
    4. ':' → logprob: -8.0095853805542
    5. ']:' → logprob: -10.2595853805542
    6. ' )' → logprob: -10.5095853805542
    7. '):
' → logprob: -11.2595853805542
    8. ']' → logprob: -14.1345853805542
    9. '=' → logprob: -14.2595853805542
    10. ' ' → logprob: -14.8845853805542

Token 93: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006818266119807959
    2. '       ' → logprob: -5.5068182945251465
    3. ':
' → logprob: -6.2568182945251465
    4. '   ' → logprob: -7.5068182945251465
    5. ' :' → logprob: -9.506817817687988
    6. '    ' → logprob: -9.631817817687988
    7. ',' → logprob: -10.381817817687988
    8. '):' → logprob: -10.506817817687988
    9. ' :
' → logprob: -11.631817817687988
    10. ' for' → logprob: -11.631817817687988

Token 94: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4628045856952667
    2. ' ' → logprob: -2.0878045558929443
    3. '    ' → logprob: -2.5878045558929443
    4. '   ' → logprob: -2.7128045558929443
    5. ' j' → logprob: -2.9628045558929443
    6. 'for' (adapté à ' for') → logprob: -3.5878045558929443
    7. '       ' → logprob: -3.8378045558929443
    8. '  ' → logprob: -7.087804794311523
    9. ' 
' → logprob: -7.087804794311523
    10. '     
' → logprob: -7.337804794311523

Token 95: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.47407791018486023
    2. 'j' → logprob: -0.9740779399871826
    3. '	j' → logprob: -13.974078178405762
    4. ' ' → logprob: -16.599077224731445
    5. '   ' → logprob: -17.599077224731445
    6. '```' → logprob: -19.849077224731445
    7. '    ' → logprob: -20.849077224731445
    8. '_j' → logprob: -21.474077224731445
    9. ' ' → logprob: -21.599077224731445
    10. '  ' → logprob: -21.599077224731445

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02649419941008091
    2. 'in' → logprob: -3.651494264602661
    3. ' i' → logprob: -9.276494026184082
    4. ' ' → logprob: -9.901494026184082
    5. '	in' → logprob: -10.276494026184082
    6. ' =' → logprob: -12.276494026184082
    7. '=' → logprob: -12.276494026184082
    8. '    ' → logprob: -13.776494026184082
    9. 'In' → logprob: -14.401494026184082
    10. 'i' → logprob: -14.401494026184082

Token 97: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868763744831085
    2. 'range' → logprob: -1.1368763446807861
    3. '	range' → logprob: -13.011876106262207
    4. ' i' → logprob: -13.511876106262207
    5. 'i' → logprob: -14.261876106262207
    6. '(range' → logprob: -15.136876106262207
    7. '   ' → logprob: -15.261876106262207
    8. ' ' → logprob: -15.261876106262207
    9. 'r' → logprob: -16.261877059936523
    10. 'rang' → logprob: -16.511877059936523

Token 98: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0004585518909152597
    2. 'i' → logprob: -8.500458717346191
    3. ' i' → logprob: -9.000458717346191
    4. '(' → logprob: -9.000458717346191
    5. ' (' → logprob: -11.750458717346191
    6. '	i' → logprob: -15.125458717346191
    7. '   ' → logprob: -16.000457763671875
    8. ')' → logprob: -17.250457763671875
    9. '(
' → logprob: -18.125457763671875
    10. ' ' → logprob: -18.500457763671875

Token 99: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.07928840816020966
    2. '*' → logprob: -2.5792884826660156
    3. ' *' → logprob: -7.829288482666016
    4. ' ' → logprob: -15.329288482666016
    5. '*
' → logprob: -15.704288482666016
    6. '**' → logprob: -16.454288482666016
    7. '*j' → logprob: -16.579288482666016
    8. 'i' → logprob: -16.704288482666016
    9. '*

' → logprob: -17.829288482666016
    10. '*,' → logprob: -17.954288482666016

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030293059535324574
    2. ' ,' → logprob: -8.125303268432617
    3. ',max' → logprob: -12.875303268432617
    4. ',M' → logprob: -13.000303268432617
    5. ',len' → logprob: -13.750303268432617
    6. ',
' → logprob: -15.125303268432617
    7. ',num' → logprob: -15.875303268432617
    8. ',j' → logprob: -16.000303268432617
    9. ',

' → logprob: -16.125303268432617
    10. ',int' → logprob: -16.500303268432617

Token 101: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.023252349346876144
    2. ' MAX' → logprob: -3.773252248764038
    3. '(MAX' → logprob: -11.898252487182617
    4. '   ' → logprob: -17.273252487182617
    5. '_MAX' → logprob: -18.273252487182617
    6. ' ' → logprob: -18.273252487182617
    7. '/MAX' → logprob: -18.398252487182617
    8. '[MAX' → logprob: -18.773252487182617
    9. 'M' → logprob: -19.398252487182617
    10. 'MIN' → logprob: -20.023252487182617

Token 102: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -1.0280383548888494e-06
    2. 'M' → logprob: -14.250000953674316
    3. '+' → logprob: -15.375000953674316
    4. '-M' → logprob: -16.250001907348633
    5. 'М' → logprob: -17.750001907348633
    6. '_' → logprob: -18.000001907348633
    7. '```' → logprob: -18.000001907348633
    8. '	M' → logprob: -18.750001907348633
    9. '_MAX' → logprob: -19.250001907348633
    10. ' М' → logprob: -19.500001907348633

Token 103: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019286326132714748
    2. ' +' → logprob: -6.251928806304932
    3. '+
' → logprob: -17.626928329467773
    4. ' ' → logprob: -18.876928329467773
    5. '+i' → logprob: -20.126928329467773
    6. '＋' → logprob: -20.126928329467773
    7. '+m' → logprob: -20.751928329467773
    8. ' ' → logprob: -20.751928329467773
    9. '```' → logprob: -21.001928329467773
    10. '+j' → logprob: -21.251928329467773

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.000051498413086
    4. '  ' → logprob: -18.375051498413086
    5. '    ' → logprob: -19.250051498413086
    6. ' ' → logprob: -19.375051498413086
    7. ')' → logprob: -19.875051498413086
    8. '     ' → logprob: -20.125051498413086
    9. '```' → logprob: -20.375051498413086
    10. ',' → logprob: -20.375051498413086

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.62500762939453
    4. '  ' → logprob: -18.81250762939453
    5. ',' → logprob: -18.93750762939453
    6. '```' → logprob: -19.56250762939453
    7. ')' → logprob: -19.68750762939453
    8. '１' → logprob: -19.75000762939453
    9. '۱' → logprob: -19.93750762939453
    10. '7' → logprob: -19.93750762939453

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006751373875886202
    2. ',i' → logprob: -5.006751537322998
    3. ' ,' → logprob: -10.50675106048584
    4. ',j' → logprob: -11.75675106048584
    5. ' i' → logprob: -14.88175106048584
    6. '   ' → logprob: -15.75675106048584
    7. ',
' → logprob: -16.006752014160156
    8. '           ' → logprob: -16.881752014160156
    9. ':i' → logprob: -16.881752014160156
    10. 'i' → logprob: -17.381752014160156

Token 107: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023246292024850845
    2. ' i' → logprob: -3.7732462882995605
    3. '	i' → logprob: -14.148246765136719
    4. '   ' → logprob: -17.02324676513672
    5. ')i' → logprob: -17.14824676513672
    6. ' ' → logprob: -18.39824676513672
    7. ')' → logprob: -19.27324676513672
    8. ' ' → logprob: -19.77324676513672
    9. '*i' → logprob: -20.14824676513672
    10. '  ' → logprob: -20.52324676513672

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028247274458408356
    2. '):
' → logprob: -5.877824783325195
    3. ')' → logprob: -11.127824783325195
    4. ' ):' → logprob: -13.252824783325195
    5. '):
' → logprob: -13.377824783325195
    6. ':' → logprob: -13.752824783325195
    7. '   ' → logprob: -15.252824783325195
    8. ']:' → logprob: -16.127824783325195
    9. '}:' → logprob: -16.252824783325195
    10. '):

' → logprob: -16.252824783325195

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3235132396221161
    2. ' is' → logprob: -1.3235132694244385
    3. 'is' → logprob: -4.698513031005859
    4. '               ' → logprob: -7.073513031005859
    5. '   ' → logprob: -9.44851303100586
    6. '            
' → logprob: -10.19851303100586
    7. '            ' → logprob: -10.32351303100586
    8. '          ' → logprob: -10.82351303100586
    9. '       ' → logprob: -11.07351303100586
    10. '	is' → logprob: -11.69851303100586

Token 110: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.12693734467029572
    2. ' is' → logprob: -2.1269373893737793
    3. '               ' → logprob: -12.126936912536621
    4. '           ' → logprob: -12.626936912536621
    5. '   ' → logprob: -15.126936912536621
    6. '	is' → logprob: -15.376936912536621
    7. ' ' → logprob: -16.751937866210938
    8. '                   ' → logprob: -16.876937866210938
    9. '```' → logprob: -17.751937866210938
    10. '       ' → logprob: -18.751937866210938

Token 111: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -2.0100624169572257e-05
    2. 'prime' → logprob: -10.875020027160645
    3. '_' → logprob: -14.375020027160645
    4. '_pr' → logprob: -15.000020027160645
    5. '```' → logprob: -16.75002098083496
    6. '_prior' → logprob: -18.00002098083496
    7. 'pr' → logprob: -18.37502098083496
    8. ' _' → logprob: -18.62502098083496
    9. '_primary' → logprob: -18.75002098083496
    10. 'r' → logprob: -18.87502098083496

Token 112: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.176947600673884e-05
    2. '[' → logprob: -10.750021934509277
    3. '[J' → logprob: -16.62502098083496
    4. '[i' → logprob: -16.62502098083496
    5. ' [' → logprob: -17.62502098083496
    6. '[js' → logprob: -17.62502098083496
    7. '```' → logprob: -19.12502098083496
    8. '\[' → logprob: -19.75002098083496
    9. '

' → logprob: -20.12502098083496
    10. '[...]' → logprob: -20.87502098083496

Token 113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009295677882619202
    2. ' ]' → logprob: -7.625929355621338
    3. ']=' → logprob: -8.000929832458496
    4. '=' → logprob: -9.500929832458496
    5. ' =' → logprob: -10.375929832458496
    6. ')' → logprob: -15.250929832458496
    7. ' ' → logprob: -16.25092887878418
    8. '=False' → logprob: -19.00092887878418
    9. '[' → logprob: -19.37592887878418
    10. '=True' → logprob: -19.75092887878418

Token 114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10039213299751282
    2. ' =' → logprob: -2.3503921031951904
    3. '=False' → logprob: -8.60039234161377
    4. ']=' → logprob: -14.60039234161377
    5. '=True' → logprob: -14.85039234161377
    6. 'False' → logprob: -15.47539234161377
    7. ']' → logprob: -15.47539234161377
    8. '=
' → logprob: -15.85039234161377
    9. '＝' → logprob: -16.725391387939453
    10. ')=' → logprob: -17.225391387939453

Token 115: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. '(False' → logprob: -19.00020408630371
    4. '=False' → logprob: -21.25020408630371
    5. '.False' → logprob: -23.00020408630371
    6. '_false' → logprob: -23.62520408630371
    7. 'F' → logprob: -24.12520408630371
    8. 'false' → logprob: -25.12520408630371
    9. 'FALSE' → logprob: -26.37520408630371
    10. 'Falsy' → logprob: -26.37520408630371

Token 116: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38411158323287964
    2. '#' → logprob: -1.7591116428375244
    3. '\n' → logprob: -2.5091116428375244
    4. '

' → logprob: -3.6341116428375244
    5. '<|end|>' → logprob: -4.634111404418945
    6. 'n' → logprob: -5.009111404418945
    7. '```' → logprob: -5.134111404418945
    8. 'def' → logprob: -5.634111404418945
    9. ' 
' → logprob: -5.759111404418945
    10. 'for' → logprob: -6.134111404418945

Token 117: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.056045807898044586
    2. 'def' → logprob: -3.0560457706451416
    3. '
' → logprob: -5.556046009063721
    4. 'N' → logprob: -6.056046009063721
    5. '\n' → logprob: -7.806046009063721
    6. 'for' → logprob: -9.056045532226562
    7. ' 
' → logprob: -9.181045532226562
    8. 't' → logprob: -9.181045532226562
    9. 'T' → logprob: -9.556045532226562
    10. 'num' → logprob: -9.556045532226562

Token 118: ' get' (ID: 717)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.43975019454956055
    2. ' count' → logprob: -2.1897501945495605
    3. ' factor' → logprob: -2.5647501945495605
    4. ' check' → logprob: -2.8147501945495605
    5. ' prime' → logprob: -3.3147501945495605
    6. ' solve' → logprob: -4.0647501945495605
    7. ' calculate' → logprob: -4.4397501945495605
    8. ' est' → logprob: -4.5647501945495605
    9. ' find' → logprob: -4.6897501945495605
    10. ' ' → logprob: -5.9397501945495605

Token 119: '_children' (ID: 78282)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.33316823840141296
    2. '_pr' → logprob: -1.5831682682037354
    3. '_div' → logprob: -2.8331682682037354
    4. '_next' → logprob: -4.583168029785156
    5. '_' → logprob: -5.583168029785156
    6. '_max' → logprob: -6.833168029785156
    7. '_factor' → logprob: -7.083168029785156
    8. '_f' → logprob: -7.083168029785156
    9. '_m' → logprob: -7.708168029785156
    10. '_n' → logprob: -7.958168029785156

Token 120: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006460986100137234
    2. '():' → logprob: -5.631461143493652
    3. '(node' → logprob: -6.506461143493652
    4. '(n' → logprob: -8.131461143493652
    5. '(x' → logprob: -8.506461143493652
    6. '(parent' → logprob: -8.506461143493652
    7. '(num' → logprob: -10.006461143493652
    8. '(root' → logprob: -10.131461143493652
    9. '(i' → logprob: -10.256461143493652
    10. '(a' → logprob: -10.381461143493652

Token 121: 'ave' (ID: 577)
  Prédit: 'ode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.7153896689414978
    2. 'ount' → logprob: -0.9653896689414978
    3. '):' → logprob: -2.7153897285461426
    4. 'h' → logprob: -3.7153897285461426
    5. 'urrent' → logprob: -4.840389728546143
    6. 'har' → logprob: -5.590389728546143
    7. 'ur' → logprob: -5.715389728546143
    8. ')' → logprob: -5.840389728546143
    9. 'olor' → logprob: -5.840389728546143
    10. 'ont' → logprob: -5.965389728546143

Token 122: '_num' (ID: 9834)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010450715199112892
    2. '_id' → logprob: -5.635450839996338
    3. '_size' → logprob: -6.260450839996338
    4. '):
' → logprob: -6.885450839996338
    5. ')' → logprob: -7.010450839996338
    6. ',' → logprob: -7.385450839996338
    7. '_depth' → logprob: -7.885450839996338
    8. '_count' → logprob: -8.13545036315918
    9. '_index' → logprob: -8.26045036315918
    10. '_ids' → logprob: -8.26045036315918

Token 123: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.41032400727272034
    2. '):
' → logprob: -1.410323977470398
    3. 'r' → logprob: -2.4103240966796875
    4. 'ber' → logprob: -7.0353240966796875
    5. 'er' → logprob: -7.5353240966796875
    6. ')' → logprob: -7.9103240966796875
    7. 't' → logprob: -8.035324096679688
    8. 's' → logprob: -8.285324096679688
    9. 'ts' → logprob: -9.785324096679688
    10. ':' → logprob: -9.785324096679688

Token 124: ' m' (ID: 284)
  Prédit: ' depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' depth' → logprob: -1.322272539138794
    2. 'depth' → logprob: -1.697272539138794
    3. ' max' → logprob: -2.947272539138794
    4. 'visited' → logprob: -2.947272539138794
    5. ' visited' → logprob: -3.072272539138794
    6. 'max' → logprob: -3.072272539138794
    7. ' caves' → logprob: -3.197272539138794
    8. 'M' → logprob: -3.572272539138794
    9. ' graph' → logprob: -3.697272539138794
    10. ' M' → logprob: -3.822272539138794

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08082816749811172
    2. 'ax' → logprob: -2.9558281898498535
    3. ')' → logprob: -4.3308281898498535
    4. '):
' → logprob: -4.7058281898498535
    5. '_' → logprob: -7.0808281898498535
    6. 'a' → logprob: -7.0808281898498535
    7. ' ):' → logprob: -7.8308281898498535
    8. ',' → logprob: -8.205827713012695
    9. '_ax' → logprob: -8.455827713012695
    10. '_a' → logprob: -8.455827713012695

Token 126: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035466957837343216
    2. '   ' → logprob: -3.4104669094085693
    3. ',' → logprob: -7.535467147827148
    4. ' :' → logprob: -7.660467147827148
    5. '):' → logprob: -7.660467147827148
    6. ':
' → logprob: -8.660467147827148
    7. '():' → logprob: -9.785467147827148
    8. '=' → logprob: -10.535467147827148
    9. ' =' → logprob: -10.660467147827148
    10. '(' → logprob: -11.410467147827148

Token 127: ' """
' (ID: 7037)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.12007827311754227
    2. '   ' → logprob: -2.2450783252716064
    3. ' children' → logprob: -5.120078086853027
    4. 'return' → logprob: -7.245078086853027
    5. '	children' → logprob: -8.620078086853027
    6. '
' → logprob: -9.745078086853027
    7. 'child' → logprob: -9.745078086853027
    8. '"""' → logprob: -10.620078086853027
    9. 'for' → logprob: -10.620078086853027
    10. '    
' → logprob: -10.745078086853027

Token 128: '   ' (ID: 271)
  Prédit: ' children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' children' → logprob: -0.7139567732810974
    2. '   ' → logprob: -1.0889568328857422
    3. 'children' → logprob: -1.8389568328857422
    4. ' res' → logprob: -6.463956832885742
    5. ' """
' → logprob: -6.463956832885742
    6. '"""
' → logprob: -6.463956832885742
    7. ' result' → logprob: -6.713956832885742
    8. ' child' → logprob: -6.838956832885742
    9. '"""' → logprob: -7.213956832885742
    10. '
' → logprob: -7.338956832885742

Token 129: ' Cal' (ID: 4453)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.2880631983280182
    2. ' children' → logprob: -1.4130631685256958
    3. '   ' → logprob: -5.163063049316406
    4. 'child' → logprob: -8.538063049316406
    5. ' enfants' → logprob: -8.913063049316406
    6. ' child' → logprob: -9.163063049316406
    7. '	children' → logprob: -9.288063049316406
    8. '"""' → logprob: -9.663063049316406
    9. 'neighbors' → logprob: -9.788063049316406
    10. 'return' → logprob: -9.913063049316406

Token 130: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.08009197562932968
    2. 'cule' → logprob: -3.330091953277588
    3. 'culated' → logprob: -3.705091953277588
    4. 'culate' → logprob: -4.955091953277588
    5. 'c' → logprob: -6.080091953277588
    6. 'cular' → logprob: -6.580091953277588
    7. '   ' → logprob: -6.705091953277588
    8. 'cules' → logprob: -6.955091953277588
    9. 'cula' → logprob: -6.955091953277588
    10. 'l' → logprob: -7.330091953277588

Token 131: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.26896294951438904
    2. '   ' → logprob: -2.143962860107422
    3. '[]' → logprob: -2.768962860107422
    4. ' la' → logprob: -4.393962860107422
    5. '_children' → logprob: -5.143962860107422
    6. 's' → logprob: -5.268962860107422
    7. ' l' → logprob: -5.768962860107422
    8. ' []' → logprob: -5.893962860107422
    9. 'children' → logprob: -5.893962860107422
    10. '_' → logprob: -6.018962860107422

Token 132: ' caves' (ID: 108455)
  Prédit: ' enfants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' enfants' → logprob: -0.13915149867534637
    2. 'en' → logprob: -2.6391515731811523
    3. 'children' → logprob: -3.1391515731811523
    4. ' children' → logprob: -4.639151573181152
    5. 'div' → logprob: -6.639151573181152
    6. ' enfant' → logprob: -6.764151573181152
    7. 'child' → logprob: -7.639151573181152
    8. 'f' → logprob: -7.889151573181152
    9. ' fils' → logprob: -8.389151573181152
    10. ' descendants' → logprob: -8.389151573181152

Token 133: ' "' (ID: 392)
  Prédit: ' accessibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' accessibles' → logprob: -0.8638262748718262
    2. '_' → logprob: -1.2388262748718262
    3. ' qui' → logprob: -3.238826274871826
    4. ' enfants' → logprob: -3.613826274871826
    5. ' pouvant' → logprob: -3.738826274871826
    6. ' auxqu' → logprob: -3.988826274871826
    7. '_en' → logprob: -4.113826274871826
    8. ' suivantes' → logprob: -4.113826274871826
    9. '_children' → logprob: -4.488826274871826
    10. '_access' → logprob: -4.613826274871826

Token 134: 'en' (ID: 262)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -1.2006173133850098
    2. 'en' → logprob: -2.0756173133850098
    3. 'fill' → logprob: -2.0756173133850098
    4. 'adj' → logprob: -2.3256173133850098
    5. 'access' → logprob: -2.8256173133850098
    6. 'poss' → logprob: -2.9506173133850098
    7. 'f' → logprob: -3.0756173133850098
    8. 'multip' → logprob: -3.4506173133850098
    9. 'qui' → logprob: -3.9506173133850098
    10. 'children' → logprob: -4.07561731338501

Token 135: ' dessous' (ID: 120954)
  Prédit: 'fants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fants' → logprob: -0.1771784871816635
    2. 'fant' → logprob: -1.9271785020828247
    3. ' relation' → logprob: -5.802178382873535
    4. 'distance' → logprob: -6.302178382873535
    5. 'chain' → logprob: -7.052178382873535
    6. ' distance' → logprob: -7.052178382873535
    7. 'f' → logprob: -7.177178382873535
    8. ' dessous' → logprob: -7.302178382873535
    9. 't' → logprob: -7.552178382873535
    10. 'relation' → logprob: -7.677178382873535

Token 136: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05670631676912308
    2. ' de' → logprob: -3.306706428527832
    3. 'de' → logprob: -4.306706428527832
    4. 'd' → logprob: -6.681706428527832
    5. '_de' → logprob: -6.806706428527832
    6. '_' → logprob: -7.556706428527832
    7. '"""' → logprob: -7.806706428527832
    8. ',' → logprob: -7.931706428527832
    9. ' "' → logprob: -8.181706428527832
    10. ' du' → logprob: -8.806706428527832

Token 137: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.12232505530118942
    2. ' (' → logprob: -3.2473249435424805
    3. 'de' → logprob: -3.4973249435424805
    4. ',' → logprob: -4.1223249435424805
    5. '(' → logprob: -4.2473249435424805
    6. '   ' → logprob: -5.3723249435424805
    7. '(c' → logprob: -5.9973249435424805
    8. 'def' → logprob: -6.7473249435424805
    9. ' of' → logprob: -6.8723249435424805
    10. '_' → logprob: -7.1223249435424805

Token 138: ' cave' (ID: 44365)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003165122354403138
    2. ' cave' → logprob: -5.878165245056152
    3. ' c' → logprob: -8.753165245056152
    4. 'm' → logprob: -9.378165245056152
    5. '   ' → logprob: -10.003165245056152
    6. '```' → logprob: -11.003165245056152
    7. '_c' → logprob: -11.503165245056152
    8. 'current' → logprob: -11.878165245056152
    9. 'def' → logprob: -12.503165245056152
    10. ')' → logprob: -12.628165245056152

Token 139: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.001352975727058947
    2. ' _' → logprob: -6.876352787017822
    3. '_' → logprob: -8.25135326385498
    4. 's' → logprob: -11.12635326385498
    5. '   ' → logprob: -12.12635326385498
    6. '_n' → logprob: -12.37635326385498
    7. '_s' → logprob: -12.75135326385498
    8. '```' → logprob: -12.75135326385498
    9. ''_' → logprob: -12.75135326385498
    10. '_nums' → logprob: -12.87635326385498

Token 140: ' selon' (ID: 27571)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22525274753570557
    2. ',' → logprob: -2.600252628326416
    3. ' :' → logprob: -2.975252628326416
    4. '(' → logprob: -3.725252628326416
    5. '   ' → logprob: -3.850252628326416
    6. ' =' → logprob: -4.850252628326416
    7. '(n' → logprob: -5.100252628326416
    8. '):' → logprob: -5.350252628326416
    9. '(s' → logprob: -5.725252628326416
    10. '(m' → logprob: -6.475252628326416

Token 141: ' la' (ID: 557)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.637377917766571
    2. ' lambda' → logprob: -1.7623779773712158
    3. ' la' → logprob: -2.137377977371216
    4. ' le' → logprob: -2.262377977371216
    5. ' l' → logprob: -3.762377977371216
    6. ' les' → logprob: -4.137377738952637
    7. ' c' → logprob: -4.887377738952637
    8. ' (' → logprob: -5.012377738952637
    9. 'm' → logprob: -5.512377738952637
    10. 'lambda' → logprob: -5.637377738952637

Token 142: ' règle' (ID: 115826)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9686548709869385
    2. ' m' → logprob: -1.0936548709869385
    3. '   ' → logprob: -2.3436548709869385
    4. ' math' → logprob: -2.9686548709869385
    5. '
' → logprob: -4.093654632568359
    6. ' formule' → logprob: -4.093654632568359
    7. 'def' → logprob: -4.343654632568359
    8. ' logique' → logprob: -4.718654632568359
    9. 'c' → logprob: -5.093654632568359
    10. ' (' → logprob: -5.093654632568359

Token 143: ' décr' (ID: 123041)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6112880706787109
    2. ' (' → logprob: -1.986288070678711
    3. '_' → logprob: -2.486288070678711
    4. '   ' → logprob: -2.611288070678711
    5. ' ' → logprob: -3.111288070678711
    6. '[' → logprob: -3.736288070678711
    7. '(s' → logprob: -3.736288070678711
    8. ',' → logprob: -3.861288070678711
    9. ':' → logprob: -3.986288070678711
    10. ')' → logprob: -5.111288070678711

Token 144: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.0006957544246688485
    2. 'it' → logprob: -7.875695705413818
    3. 'cr' → logprob: -9.250696182250977
    4. 'ites' → logprob: -9.625696182250977
    5. 'iv' → logprob: -9.750696182250977
    6. 'inie' → logprob: -10.750696182250977
    7. 'ivée' → logprob: -11.125696182250977
    8. 'ue' → logprob: -11.500696182250977
    9. 'ivit' → logprob: -12.125696182250977
    10. 'ita' → logprob: -12.375696182250977

Token 145: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26298758387565613
    2. ':' → logprob: -2.7629876136779785
    3. ' :' → logprob: -2.7629876136779785
    4. ' dans' → logprob: -3.0129876136779785
    5. ',' → logprob: -3.5129876136779785
    6. ' ' → logprob: -5.3879876136779785
    7. 's' → logprob: -5.5129876136779785
    8. '.' → logprob: -5.6379876136779785
    9. ' :
' → logprob: -5.6379876136779785
    10. ' ' → logprob: -6.3879876136779785

Token 146: ' l' (ID: 305)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4207507371902466
    2. 'range' → logprob: -1.5457507371902466
    3. ' la' → logprob: -3.420750617980957
    4. ' le' → logprob: -3.670750617980957
    5. ' m' → logprob: -3.920750617980957
    6. '   ' → logprob: -4.170750617980957
    7. ' l' → logprob: -4.420750617980957
    8. ' c' → logprob: -5.295750617980957
    9. 'm' → logprob: -5.420750617980957
    10. ' math' → logprob: -5.920750617980957

Token 147: ''' (ID: 6)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9695772528648376
    2. 'a' → logprob: -1.5945773124694824
    3. 'e' → logprob: -1.5945773124694824
    4. ' def' → logprob: -3.3445773124694824
    5. '   ' → logprob: -3.4695773124694824
    6. 'def' → logprob: -4.219577312469482
    7. ' a' → logprob: -4.219577312469482
    8. ''' → logprob: -4.219577312469482
    9. 'range' → logprob: -4.219577312469482
    10. ' code' → logprob: -4.469577312469482

Token 148: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.10425479710102081
    2. ''' → logprob: -3.229254722595215
    3. 'ex' → logprob: -3.354254722595215
    4. 'en' → logprob: -4.729254722595215
    5. ''ex' → logprob: -6.104254722595215
    6. 'é' → logprob: -6.479254722595215
    7. 'e' → logprob: -6.604254722595215
    8. 'doc' → logprob: -6.854254722595215
    9. '
' → logprob: -7.104254722595215
    10. '"""
' → logprob: -7.104254722595215

Token 149: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.009462691843509674
    2. 'onc' → logprob: -4.884462833404541
    3. 'ig' → logprob: -7.509462833404541
    4. 'once' → logprob: -7.634462833404541
    5. 'on' → logprob: -7.884462833404541
    6. 'non' → logprob: -8.009462356567383
    7. 'um' → logprob: -9.509462356567383
    8. 'oncer' → logprob: -10.384462356567383
    9. 'nonce' → logprob: -12.884462356567383
    10. 'onn' → logprob: -13.134462356567383

Token 150: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3175221085548401
    2. ':' → logprob: -1.4425220489501953
    3. ',' → logprob: -4.442522048950195
    4. '):' → logprob: -4.442522048950195
    5. ' :' → logprob: -4.692522048950195
    6. ')' → logprob: -6.567522048950195
    7. ':
' → logprob: -7.567522048950195
    8. '):
' → logprob: -7.942522048950195
    9. 's' → logprob: -9.067522048950195
    10. ' :
' → logprob: -9.317522048950195

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039468444883823395
    2. '
' → logprob: -6.378946781158447
    3. 'children' → logprob: -6.878946781158447
    4. '    
' → logprob: -7.503946781158447
    5. ' children' → logprob: -8.503947257995605
    6. '	children' → logprob: -9.378947257995605
    7. '```' → logprob: -10.128947257995605
    8. ',' → logprob: -10.378947257995605
    9. '_children' → logprob: -10.378947257995605
    10. ' 
' → logprob: -10.503947257995605

Token 152: ' Trou' (ID: 58947)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6805381178855896
    2. 'children' → logprob: -0.9305381178855896
    3. '
' → logprob: -2.9305381774902344
    4. ' children' → logprob: -3.6805381774902344
    5. '	children' → logprob: -5.555538177490234
    6. '_children' → logprob: -5.680538177490234
    7. '    
' → logprob: -5.805538177490234
    8. '"""' → logprob: -5.805538177490234
    9. 'child' → logprob: -7.055538177490234
    10. ' 
' → logprob: -7.180538177490234

Token 153: 've' (ID: 737)
  Prédit: 've'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.026047132909297943
    2. 'ver' → logprob: -4.901047229766846
    3. 'ves' → logprob: -5.276047229766846
    4. 'v' → logprob: -5.276047229766846
    5. 'vent' → logprob: -6.151047229766846
    6. 'nent' → logprob: -6.651047229766846
    7. 'ne' → logprob: -7.026047229766846
    8. 'vé' → logprob: -7.026047229766846
    9. 'e' → logprob: -7.776047229766846
    10. 'vez' → logprob: -8.526046752929688

Token 154: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9504519104957581
    2. '[]' → logprob: -1.0754518508911133
    3. ' children' → logprob: -2.4504518508911133
    4. '_children' → logprob: -2.4504518508911133
    5. ' []' → logprob: -3.7004518508911133
    6. '	children' → logprob: -4.325451850891113
    7. 'children' → logprob: -4.450451850891113
    8. ' enfants' → logprob: -4.700451850891113
    9. '   ' → logprob: -4.950451850891113
    10. 's' → logprob: -5.325451850891113

Token 155: ' ' (ID: 220)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.9076236486434937
    2. ' children' → logprob: -1.5326236486434937
    3. 'div' → logprob: -1.6576236486434937
    4. ' enfants' → logprob: -2.657623767852783
    5. ' multiples' → logprob: -3.657623767852783
    6. 'multip' → logprob: -3.907623767852783
    7. ' divis' → logprob: -4.282623767852783
    8. ' div' → logprob: -4.407623767852783
    9. 'c' → logprob: -5.157623767852783
    10. ' next' → logprob: -5.282623767852783

Token 156: '3' (ID: 18)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.35001832246780396
    2. 'multip' → logprob: -2.350018262863159
    3. 'div' → logprob: -3.100018262863159
    4. 'en' → logprob: -3.225018262863159
    5. 'c' → logprob: -3.225018262863159
    6. 'pr' → logprob: -4.100018501281738
    7. 'prem' → logprob: -4.475018501281738
    8. 'next' → logprob: -4.725018501281738
    9. 'f' → logprob: -4.975018501281738
    10. 'plus' → logprob: -5.225018501281738

Token 157: ' caves' (ID: 108455)
  Prédit: ' enfants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enfants' → logprob: -1.0813013315200806
    2. ' caves' → logprob: -1.5813013315200806
    3. ' premiers' → logprob: -1.9563013315200806
    4. '_' → logprob: -3.081301212310791
    5. ' _' → logprob: -3.081301212310791
    6. ' prochains' → logprob: -3.081301212310791
    7. ' espaces' → logprob: -3.331301212310791
    8. ' prochaines' → logprob: -3.456301212310791
    9. ' premières' → logprob: -4.331301212310791
    10. ' fils' → logprob: -4.956301212310791

Token 158: ' possibles' (ID: 97753)
  Prédit: ' suivantes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivantes' → logprob: -0.2501504421234131
    2. 's' → logprob: -3.625150442123413
    3. '[]' → logprob: -3.625150442123413
    4. ' _' → logprob: -3.625150442123413
    5. ' en' → logprob: -4.125150680541992
    6. ' suivante' → logprob: -4.500150680541992
    7. ' :' → logprob: -4.625150680541992
    8. '   ' → logprob: -4.625150680541992
    9. '_s' → logprob: -4.750150680541992
    10. '_' → logprob: -4.875150680541992

Token 159: ' directement' (ID: 52317)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1376173496246338
    2. ' suivantes' → logprob: -1.5126173496246338
    3. '   ' → logprob: -1.8876173496246338
    4. 's' → logprob: -2.512617349624634
    5. ':' → logprob: -2.762617349624634
    6. ',' → logprob: -3.512617349624634
    7. ' =' → logprob: -3.637617349624634
    8. '_children' → logprob: -4.012617111206055
    9. '=[]' → logprob: -4.637617111206055
    10. 'children' → logprob: -4.887617111206055

Token 160: ' sous' (ID: 14487)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.8966224193572998
    2. ' en' → logprob: -0.8966224193572998
    3. 'inf' → logprob: -2.7716224193573
    4. ' dessous' → logprob: -3.8966224193573
    5. 'below' → logprob: -3.8966224193573
    6. ' sous' → logprob: -3.8966224193573
    7. 's' → logprob: -4.021622657775879
    8. ' below' → logprob: -4.521622657775879
    9. ' accessibles' → logprob: -4.646622657775879
    10. 'connect' → logprob: -5.271622657775879

Token 161: ' cave' (ID: 44365)
  Prédit: ' cave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cave' → logprob: -0.28478702902793884
    2. ' caves' → logprob: -2.0347869396209717
    3. ' le' → logprob: -2.9097869396209717
    4. ' la' → logprob: -4.034787178039551
    5. 'c' → logprob: -4.409787178039551
    6. 'neath' → logprob: -5.034787178039551
    7. ' the' → logprob: -5.159787178039551
    8. ' c' → logprob: -5.534787178039551
    9. '```' → logprob: -6.034787178039551
    10. ' ' → logprob: -6.034787178039551

Token 162: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0022464848589152098
    2. '_' → logprob: -6.127246379852295
    3. ' _' → logprob: -10.127246856689453
    4. '_n' → logprob: -11.877246856689453
    5. '   ' → logprob: -12.627246856689453
    6. '_NUM' → logprob: -13.002246856689453
    7. '```' → logprob: -13.752246856689453
    8. '_nums' → logprob: -13.877246856689453
    9. '`' → logprob: -14.127246856689453
    10. ')' → logprob: -14.252246856689453

Token 163: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4969024956226349
    2. ':' → logprob: -1.1219024658203125
    3. ',' → logprob: -2.9969024658203125
    4. '(' → logprob: -4.9969024658203125
    5. ' =' → logprob: -6.2469024658203125
    6. ' :' → logprob: -6.6219024658203125
    7. ':
' → logprob: -6.9969024658203125
    8. ' (' → logprob: -6.9969024658203125
    9. '(c' → logprob: -7.1219024658203125
    10. '(s' → logprob: -7.3719024658203125

Token 164: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2976211607456207
    2. ' le' → logprob: -2.297621250152588
    3. ' les' → logprob: -2.922621250152588
    4. ' lambda' → logprob: -3.797621250152588
    5. ' l' → logprob: -4.172621250152588
    6. ' m' → logprob: -4.297621250152588
    7. ' the' → logprob: -5.047621250152588
    8. ' laquelle' → logprob: -5.172621250152588
    9. ' which' → logprob: -5.297621250152588
    10. ' c' → logprob: -5.672621250152588

Token 165: ' numéro' (ID: 65036)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.2461329698562622
    2. '   ' → logprob: -1.3711329698562622
    3. ' code' → logprob: -2.6211328506469727
    4. '```' → logprob: -2.9961328506469727
    5. 'm' → logprob: -3.1211328506469727
    6. ' def' → logprob: -3.2461328506469727
    7. ' calcul' → logprob: -3.6211328506469727
    8. 'def' → logprob: -3.8711328506469727
    9. ' crit' → logprob: -3.9961328506469727
    10. '
' → logprob: -3.9961328506469727

Token 166: ' des' (ID: 731)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4634598195552826
    2. ' *' → logprob: -2.3384597301483154
    3. '   ' → logprob: -2.5884597301483154
    4. '_c' → logprob: -2.7134597301483154
    5. '+' → logprob: -2.8384597301483154
    6. ' de' → logprob: -3.4634597301483154
    7. '*' → logprob: -4.2134599685668945
    8. 'de' → logprob: -5.4634599685668945
    9. 'c' → logprob: -5.5884599685668945
    10. '_' → logprob: -5.9634599685668945

Token 167: ' caves' (ID: 108455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4640202522277832
    2. 'prem' → logprob: -1.8390202522277832
    3. 'div' → logprob: -2.964020252227783
    4. 'multip' → logprob: -3.214020252227783
    5. 'en' → logprob: -4.339020252227783
    6. 'pr' → logprob: -4.839020252227783
    7. 'prime' → logprob: -4.839020252227783
    8. '   ' → logprob: -4.964020252227783
    9. 'pas' → logprob: -4.964020252227783
    10. ' caves' → logprob: -5.089020252227783

Token 168: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003787012305110693
    2. ':' → logprob: -6.003787040710449
    3. ',' → logprob: -7.503787040710449
    4. 'def' → logprob: -7.628787040710449
    5. ' :' → logprob: -9.25378704071045
    6. 's' → logprob: -10.12878704071045
    7. '    
' → logprob: -10.25378704071045
    8. ':
' → logprob: -11.00378704071045
    9. '
' → logprob: -11.12878704071045
    10. '   ' → logprob: -11.62878704071045

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006141257006675005
    2. ':' → logprob: -6.881141185760498
    3. 'children' → logprob: -7.381141185760498
    4. '
' → logprob: -7.506141185760498
    5. ' children' → logprob: -7.756141185760498
    6. ' res' → logprob: -7.756141185760498
    7. ',' → logprob: -7.881141185760498
    8. '```' → logprob: -8.006141662597656
    9. ')' → logprob: -8.256141662597656
    10. '    
' → logprob: -8.506141662597656

Token 170: ' Ren' (ID: 17631)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07539963722229004
    2. 'children' → logprob: -3.45039963722229
    3. ':' → logprob: -5.200399398803711
    4. 'def' → logprob: -5.575399398803711
    5. 'return' → logprob: -5.825399398803711
    6. 'possible' → logprob: -5.825399398803711
    7. '
' → logprob: -6.075399398803711
    8. ',' → logprob: -6.200399398803711
    9. '"""' → logprob: -6.200399398803711
    10. '```' → logprob: -6.450399398803711

Token 171: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.0007718668202869594
    2. 'v' → logprob: -7.625771999359131
    3. 'voy' → logprob: -8.875771522521973
    4. 'vo' → logprob: -10.000771522521973
    5. 'voi' → logprob: -10.500771522521973
    6. 'voit' → logprob: -11.000771522521973
    7. 'ver' → logprob: -11.250771522521973
    8. '
' → logprob: -11.500771522521973
    9. '```' → logprob: -12.000771522521973
    10. 'e' → logprob: -12.500771522521973

Token 172: ' une' (ID: 2463)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7158270478248596
    2. ' []' → logprob: -0.7158270478248596
    3. '[]' → logprob: -3.965826988220215
    4. '[' → logprob: -6.090826988220215
    5. ' [
' → logprob: -7.090826988220215
    6. ' [(' → logprob: -9.090826988220215
    7. ' ' → logprob: -9.215826988220215
    8. ' ' → logprob: -10.090826988220215
    9. '[m' → logprob: -10.590826988220215
    10. '[:]' → logprob: -11.215826988220215

Token 173: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.08590446412563324
    2. ' list' → logprob: -2.710904359817505
    3. 'liste' → logprob: -4.710904598236084
    4. ' []' → logprob: -5.335904598236084
    5. '[]' → logprob: -7.085904598236084
    6. 'list' → logprob: -7.460904598236084
    7. ' [' → logprob: -8.585904121398926
    8. ' ' → logprob: -8.835904121398926
    9. ' lista' → logprob: -9.835904121398926
    10. ' ' → logprob: -9.835904121398926

Token 174: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03997482731938362
    2. '[]' → logprob: -3.5399749279022217
    3. ' de' → logprob: -6.039974689483643
    4. '   ' → logprob: -6.664974689483643
    5. ' [' → logprob: -6.664974689483643
    6. ' of' → logprob: -6.914974689483643
    7. '[:]' → logprob: -7.164974689483643
    8. '<|end|>' → logprob: -7.164974689483643
    9. ' des' → logprob: -7.289974689483643
    10. ' []' → logprob: -7.539974689483643

Token 175: ' caves' (ID: 108455)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.739821195602417
    2. 'c' → logprob: -1.739821195602417
    3. '[c' → logprob: -1.739821195602417
    4. ' enfants' → logprob: -1.864821195602417
    5. ' [' → logprob: -2.239821195602417
    6. ' caves' → logprob: -2.239821195602417
    7. '[]' → logprob: -2.989821195602417
    8. '[num' → logprob: -4.239821434020996
    9. ' c' → logprob: -4.489821434020996
    10. '[int' → logprob: -4.614821434020996

Token 176: ' enfants' (ID: 24681)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3289409875869751
    2. '[' → logprob: -1.953940987586975
    3. ' des' → logprob: -2.9539408683776855
    4. '[num' → logprob: -3.5789408683776855
    5. ' [' → logprob: -3.8289408683776855
    6. '   ' → logprob: -5.2039408683776855
    7. ' []' → logprob: -5.8289408683776855
    8. 's' → logprob: -6.2039408683776855
    9. '[v' → logprob: -6.3289408683776855
    10. ' suivantes' → logprob: -6.4539408683776855

Token 177: ' val' (ID: 1459)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44229191541671753
    2. '   ' → logprob: -1.0672919750213623
    3. ',' → logprob: -4.942291736602783
    4. ' :' → logprob: -5.692291736602783
    5. ':
' → logprob: -7.442291736602783
    6. '):' → logprob: -7.567291736602783
    7. '[' → logprob: -7.692291736602783
    8. 'def' → logprob: -7.817291736602783
    9. '.' → logprob: -8.942292213439941
    10. ' ' → logprob: -9.067292213439941

Token 178: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.006043266039341688
    2. 'ide' → logprob: -5.131043434143066
    3. 'id' → logprob: -9.631043434143066
    4. '```' → logprob: -10.881043434143066
    5. 'ues' → logprob: -12.631043434143066
    6. '</' → logprob: -12.631043434143066
    7. '[' → logprob: -12.881043434143066
    8. '**' → logprob: -13.381043434143066
    9. '   ' → logprob: -13.631043434143066
    10. 'idez' → logprob: -13.631043434143066

Token 179: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1085100993514061
    2. ',' → logprob: -3.2335100173950195
    3. '   ' → logprob: -3.2335100173950195
    4. ' :' → logprob: -4.4835100173950195
    5. '):' → logprob: -5.4835100173950195
    6. 'def' → logprob: -6.3585100173950195
    7. '[' → logprob: -6.3585100173950195
    8. ')' → logprob: -6.9835100173950195
    9. '.' → logprob: -7.4835100173950195
    10. '(' → logprob: -7.6085100173950195

Token 180: '<=' (ID: 16672)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8441923260688782
    2. '[]' → logprob: -1.8441922664642334
    3. '[])' → logprob: -2.0941922664642334
    4. ' [])' → logprob: -2.2191922664642334
    5. ' )' → logprob: -2.9691922664642334
    6. '[' → logprob: -3.0941922664642334
    7. '[c' → logprob: -3.4691922664642334
    8. ' [' → logprob: -4.3441925048828125
    9. 'c' → logprob: -4.4691925048828125
    10. ' []' → logprob: -4.7191925048828125

Token 181: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.043048515915870667
    2. ' m' → logprob: -3.168048620223999
    3. 'c' → logprob: -10.668048858642578
    4. '   ' → logprob: -12.168048858642578
    5. 'MAX' → logprob: -12.293048858642578
    6. ' ' → logprob: -12.668048858642578
    7. 'max' → logprob: -13.293048858642578
    8. ')' → logprob: -13.418048858642578
    9. ')m' → logprob: -13.418048858642578
    10. 'M' → logprob: -13.543048858642578

Token 182: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014776713214814663
    2. '):' → logprob: -4.764776706695557
    3. ').' → logprob: -5.389776706695557
    4. ')
' → logprob: -7.764776706695557
    5. '):
' → logprob: -7.764776706695557
    6. '   ' → logprob: -8.014777183532715
    7. ']' → logprob: -9.014777183532715
    8. ' )' → logprob: -9.389777183532715
    9. ',' → logprob: -9.764777183532715
    10. 'def' → logprob: -10.139777183532715

Token 183: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00602099159732461
    2. '
' → logprob: -5.756021022796631
    3. '    
' → logprob: -7.131021022796631
    4. ')' → logprob: -7.506021022796631
    5. ' 
' → logprob: -8.131020545959473
    6. '```' → logprob: -8.381020545959473
    7. '  
' → logprob: -8.631020545959473
    8. 'def' → logprob: -8.881020545959473
    9. ':' → logprob: -9.006020545959473
    10. '"""
' → logprob: -9.506020545959473

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01075939740985632
    2. '"""' → logprob: -4.885759353637695
    3. ')' → logprob: -6.635759353637695
    4. ' """' → logprob: -7.385759353637695
    5. 'children' → logprob: -8.010759353637695
    6. '```' → logprob: -8.510759353637695
    7. ' children' → logprob: -8.635759353637695
    8. '"""
' → logprob: -9.135759353637695
    9. ' """
' → logprob: -9.260759353637695
    10. '
' → logprob: -9.885759353637695

Token 185: ' Pour' (ID: 13931)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.0016016254667192698
    2. ' children' → logprob: -7.126601696014404
    3. 'result' → logprob: -7.876601696014404
    4. 'child' → logprob: -8.626601219177246
    5. 'c' → logprob: -9.501601219177246
    6. '   ' → logprob: -10.251601219177246
    7. 'offset' → logprob: -10.376601219177246
    8. 'res' → logprob: -10.876601219177246
    9. 'results' → logprob: -11.126601219177246
    10. 'return' → logprob: -11.876601219177246

Token 186: ' trouver' (ID: 23195)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2237135171890259
    2. ' enfant' → logprob: -1.3487135171890259
    3. ' child' → logprob: -1.8487135171890259
    4. ' k' → logprob: -2.4737133979797363
    5. ' c' → logprob: -2.7237133979797363
    6. ' j' → logprob: -3.5987133979797363
    7. ' enfants' → logprob: -3.7237133979797363
    8. ' offset' → logprob: -4.098713397979736
    9. ' res' → logprob: -4.348713397979736
    10. 'child' → logprob: -5.098713397979736

Token 187: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6829745769500732
    2. ' k' → logprob: -1.5579745769500732
    3. 'k' → logprob: -2.6829745769500732
    4. 'les' → logprob: -2.8079745769500732
    5. ' le' → logprob: -3.6829745769500732
    6. 'child' → logprob: -3.9329745769500732
    7. ' next' → logprob: -4.307974815368652
    8. ' i' → logprob: -4.432974815368652
    9. 'c' → logprob: -4.682974815368652
    10. 'next' → logprob: -4.807974815368652

Token 188: ' enfants' (ID: 24681)
  Prédit: ' enfants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enfants' → logprob: -0.4928800165653229
    2. 'children' → logprob: -1.1178799867630005
    3. ' children' → logprob: -2.99288010597229
    4. 'c' → logprob: -5.367879867553711
    5. ' caves' → logprob: -6.242879867553711
    6. ' enfant' → logprob: -6.367879867553711
    7. '_children' → logprob: -7.117879867553711
    8. ' next' → logprob: -7.242879867553711
    9. 'en' → logprob: -7.492879867553711
    10. ' parents' → logprob: -8.617879867553711

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08822039514780045
    2. ':' → logprob: -2.7132203578948975
    3. '   ' → logprob: -4.838220596313477
    4. ' de' → logprob: -6.213220596313477
    5. ' :' → logprob: -6.588220596313477
    6. 'de' → logprob: -7.088220596313477
    7. ':
' → logprob: -7.213220596313477
    8. 'c' → logprob: -7.463220596313477
    9. ' of' → logprob: -7.838220596313477
    10. 'def' → logprob: -7.963220596313477

Token 190: ' on' (ID: 402)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.6776742339134216
    2. ' children' → logprob: -1.5526742935180664
    3. ' base' → logprob: -2.1776742935180664
    4. ' start' → logprob: -3.3026742935180664
    5. ' multiples' → logprob: -3.3026742935180664
    6. ' enfants' → logprob: -3.4276742935180664
    7. 'c' → logprob: -4.927674293518066
    8. 'start' → logprob: -5.052674293518066
    9. 'base' → logprob: -5.177674293518066
    10. 'result' → logprob: -5.677674293518066

Token 191: ' utilise' (ID: 70283)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1568483114242554
    2. 'continue' → logprob: -1.7818483114242554
    3. 'cherche' → logprob: -1.7818483114242554
    4. ' cherche' → logprob: -2.531848430633545
    5. ' ajoute' → logprob: -2.906848430633545
    6. 'for' → logprob: -3.531848430633545
    7. ' regarde' → logprob: -3.656848430633545
    8. ' recherche' → logprob: -3.656848430633545
    9. ' doit' → logprob: -4.031848430633545
    10. ' trouve' → logprob: -4.406848430633545

Token 192: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.0332776308059692
    2. ' les' → logprob: -1.7832776308059692
    3. 'la' → logprob: -2.0332775115966797
    4. 'le' → logprob: -2.4082775115966797
    5. ' la' → logprob: -2.6582775115966797
    6. ' des' → logprob: -3.2832775115966797
    7. 'des' → logprob: -3.6582775115966797
    8. ' le' → logprob: -3.9082775115966797
    9. 'l' → logprob: -3.9082775115966797
    10. 'une' → logprob: -4.53327751159668

Token 193: ' relation' (ID: 18075)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multip' → logprob: -1.7623913288116455
    2. 'prem' → logprob: -2.0123913288116455
    3. 'c' → logprob: -2.3873913288116455
    4. 'prime' → logprob: -2.8873913288116455
    5. 'following' → logprob: -2.8873913288116455
    6. 'next' → logprob: -2.8873913288116455
    7. 'fact' → logprob: -3.7623913288116455
    8. 'base' → logprob: -3.8873913288116455
    9. 'children' → logprob: -4.012391090393066
    10. ' following' → logprob: -4.012391090393066

Token 194: ' entre' (ID: 3853)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.09038326144218445
    2. ':' → logprob: -3.465383291244507
    3. '   ' → logprob: -4.340383052825928
    4. ' suivantes' → logprob: -4.590383052825928
    5. 'c' → logprob: -5.465383052825928
    6. ' =' → logprob: -5.590383052825928
    7. ' entre' → logprob: -5.840383052825928
    8. ' between' → logprob: -6.465383052825928
    9. ' de' → logprob: -6.590383052825928
    10. ' suivants' → logprob: -6.715383052825928

Token 195: ' num' (ID: 2269)
  Prédit: ' cave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cave' → logprob: -0.23088891804218292
    2. 'c' → logprob: -2.730888843536377
    3. ' le' → logprob: -2.730888843536377
    4. ' les' → logprob: -3.230888843536377
    5. 'le' → logprob: -4.105888843536377
    6. ' c' → logprob: -4.855888843536377
    7. ' caves' → logprob: -5.480888843536377
    8. 'les' → logprob: -5.855888843536377
    9. ' l' → logprob: -6.480888843536377
    10. 'l' → logprob: -6.730888843536377

Token 196: 'éros' (ID: 120888)
  Prédit: 'éro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.2444186955690384
    2. 'éros' → logprob: -1.619418740272522
    3. 's' → logprob: -4.869418621063232
    4. '+' → logprob: -6.369418621063232
    5. '_' → logprob: -6.494418621063232
    6. 'ero' → logprob: -6.744418621063232
    7. '*' → logprob: -6.744418621063232
    8. '_c' → logprob: -6.994418621063232
    9. 'é' → logprob: -7.119418621063232
    10. 'érique' → logprob: -7.494418621063232

Token 197: ' de' (ID: 334)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.574019193649292
    2. 'c' → logprob: -1.699019193649292
    3. '   ' → logprob: -1.699019193649292
    4. ' des' → logprob: -2.199019193649292
    5. 'de' → logprob: -2.949019193649292
    6. ' de' → logprob: -3.199019193649292
    7. 'des' → logprob: -3.449019193649292
    8. '*c' → logprob: -3.449019193649292
    9. '(c' → logprob: -3.699019193649292
    10. ' *' → logprob: -3.949019193649292

Token 198: ' caves' (ID: 108455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05971723794937134
    2. ' caves' → logprob: -4.059717178344727
    3. ' cave' → logprob: -4.309717178344727
    4. '2' → logprob: -4.309717178344727
    5. 'la' → logprob: -4.809717178344727
    6. ' la' → logprob: -6.434717178344727
    7. 'le' → logprob: -6.809717178344727
    8. 'l' → logprob: -7.434717178344727
    9. ' ' → logprob: -8.309717178344727
    10. 'de' → logprob: -8.434717178344727

Token 199: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16217824816703796
    2. ':' → logprob: -3.2871782779693604
    3. '[' → logprob: -3.4121782779693604
    4. ',' → logprob: -3.9121782779693604
    5. 'def' → logprob: -4.037178039550781
    6. '*' → logprob: -4.787178039550781
    7. ' :' → logprob: -5.537178039550781
    8. ' (' → logprob: -5.662178039550781
    9. ' *' → logprob: -5.787178039550781
    10. '[(' → logprob: -5.912178039550781

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3532484471797943
    2. ')' → logprob: -2.478248357772827
    3. '\n' → logprob: -2.853248357772827
    4. '[' → logprob: -3.853248357772827
    5. '
' → logprob: -3.978248357772827
    6. 'n' → logprob: -3.978248357772827
    7. '[
' → logprob: -4.478248596191406
    8. '    
' → logprob: -4.978248596191406
    9. ')
' → logprob: -5.103248596191406
    10. 'c' → logprob: -5.103248596191406

Token 201: ' d' (ID: 272)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.078616738319397
    2. 'return' → logprob: -1.203616738319397
    3. '[
' → logprob: -1.578616738319397
    4. '   ' → logprob: -2.8286166191101074
    5. '[' → logprob: -3.5786166191101074
    6. 'c' → logprob: -3.8286166191101074
    7. 'children' → logprob: -4.828616619110107
    8. '"""
' → logprob: -5.078616619110107
    9. ' [' → logprob: -5.453616619110107
    10. ' [
' → logprob: -5.578616619110107

Token 202: ''après' (ID: 105130)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6734715700149536
    2. '=' → logprob: -1.5484715700149536
    3. 'e' → logprob: -1.5484715700149536
    4. 'ef' → logprob: -4.423471450805664
    5. '_c' → logprob: -5.048471450805664
    6. '_' → logprob: -5.173471450805664
    7. 'é' → logprob: -5.423471450805664
    8. '*' → logprob: -5.798471450805664
    9. 'i' → logprob: -5.798471450805664
    10. 'own' → logprob: -5.923471450805664

Token 203: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6585519313812256
    2. 'le' → logprob: -2.0335519313812256
    3. ' le' → logprob: -2.0335519313812256
    4. ' l' → logprob: -2.2835519313812256
    5. 'l' → logprob: -2.5335519313812256
    6. 'la' → logprob: -4.283552169799805
    7. ' les' → logprob: -5.158552169799805
    8. 'c' → logprob: -5.158552169799805
    9. 'les' → logprob: -5.783552169799805
    10. 'i' → logprob: -6.033552169799805

Token 204: ' spir' (ID: 27189)
  Prédit: ' formule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' formule' → logprob: -0.5514301061630249
    2. 'form' → logprob: -1.676430106163025
    3. ' form' → logprob: -3.1764302253723145
    4. '   ' → logprob: -4.1764302253723145
    5. ' règle' → logprob: -4.3014302253723145
    6. 'multip' → logprob: -4.4264302253723145
    7. 'c' → logprob: -4.6764302253723145
    8. 'relation' → logprob: -4.8014302253723145
    9. 'num' → logprob: -4.9264302253723145
    10. ' code' → logprob: -4.9264302253723145

Token 205: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.1169179379940033
    2. 'al' → logprob: -2.366917848587036
    3. 'e' → logprob: -4.491918087005615
    4. 'ère' → logprob: -6.616918087005615
    5. 'alité' → logprob: -6.616918087005615
    6. '`' → logprob: -7.741918087005615
    7. 'èse' → logprob: -8.491917610168457
    8. 'é' → logprob: -8.866917610168457
    9. 'ème' → logprob: -8.991917610168457
    10. 'ène' → logprob: -8.991917610168457

Token 206: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13286083936691284
    2. '   ' → logprob: -2.8828608989715576
    3. ',
' → logprob: -3.7578608989715576
    4. ' :' → logprob: -4.1328606605529785
    5. ':' → logprob: -4.6328606605529785
    6. ' ,' → logprob: -5.3828606605529785
    7. ' :
' → logprob: -5.6328606605529785
    8. '_num' → logprob: -6.0078606605529785
    9. ' =' → logprob: -6.1328606605529785
    10. '[' → logprob: -7.0078606605529785

Token 207: ' carr' (ID: 18321)
  Prédit: 'spir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spir' → logprob: -1.645923137664795
    2. 'c' → logprob: -2.020923137664795
    3. ' bas' → logprob: -2.520923137664795
    4. 'bas' → logprob: -2.770923137664795
    5. ' spir' → logprob: -2.895923137664795
    6. ' ' → logprob: -3.020923137664795
    7. 'cours' → logprob: -3.270923137664795
    8. 'forme' → logprob: -3.395923137664795
    9. 'num' → logprob: -3.645923137664795
    10. 'rou' → logprob: -3.770923137664795

Token 208: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.06538339704275131
    2. 'e' → logprob: -2.8153834342956543
    3. 'és' → logprob: -5.815383434295654
    4. 'es' → logprob: -8.690382957458496
    5. 'ée' → logprob: -8.815382957458496
    6. 'er' → logprob: -10.315382957458496
    7. '2' → logprob: -10.815382957458496
    8. 'age' → logprob: -12.315382957458496
    9. 'ier' → logprob: -12.440382957458496
    10. 'ié' → logprob: -12.690382957458496

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30978161096572876
    2. ',
' → logprob: -1.809781551361084
    3. '   ' → logprob: -2.934781551361084
    4. '[' → logprob: -3.559781551361084
    5. ' ,' → logprob: -5.309781551361084
    6. '[
' → logprob: -5.309781551361084
    7. ':' → logprob: -5.809781551361084
    8. '[i' → logprob: -6.309781551361084
    9. ' (' → logprob: -6.559781551361084
    10. ',
' → logprob: -7.309781551361084

Token 210: ' on' (ID: 402)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5598201155662537
    2. ' on' → logprob: -2.3098201751708984
    3. ' le' → logprob: -2.4348201751708984
    4. ' la' → logprob: -2.4348201751708984
    5. 'le' → logprob: -3.3098201751708984
    6. 'les' → logprob: -3.3098201751708984
    7. 'c' → logprob: -3.6848201751708984
    8. '   ' → logprob: -4.309820175170898
    9. ' chaque' → logprob: -4.434820175170898
    10. 'la' → logprob: -5.184820175170898

Token 211: ' peut' (ID: 9216)
  Prédit: ' trouve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouve' → logprob: -1.3731745481491089
    2. '   ' → logprob: -1.4981745481491089
    3. 'a' → logprob: -2.1231746673583984
    4. 'tr' → logprob: -2.3731746673583984
    5. ' a' → logprob: -2.7481746673583984
    6. ' continue' → logprob: -3.1231746673583984
    7. ' ajoute' → logprob: -3.3731746673583984
    8. 'continue' → logprob: -3.4981746673583984
    9. 'cherche' → logprob: -4.373174667358398
    10. ' doit' → logprob: -4.498174667358398

Token 212: ' dé' (ID: 2393)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.6711105108261108
    2. ' continuer' → logprob: -1.5461105108261108
    3. ' calcul' → logprob: -1.9211105108261108
    4. ' obtenir' → logprob: -4.0461106300354
    5. ' retrouver' → logprob: -4.1711106300354
    6. ' retourner' → logprob: -4.2961106300354
    7. ' avoir' → logprob: -4.5461106300354
    8. ' return' → logprob: -4.7961106300354
    9. ' suivre' → logprob: -4.7961106300354
    10. ' explorer' → logprob: -4.9211106300354

Token 213: 'du' (ID: 698)
  Prédit: 'du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.15155500173568726
    2. 'termin' → logprob: -2.901555061340332
    3. 'f' → logprob: -3.651555061340332
    4. 'caler' → logprob: -4.026555061340332
    5. 'fin' → logprob: -4.651555061340332
    6. 'crire' → logprob: -4.901555061340332
    7. 'r' → logprob: -4.901555061340332
    8. 'river' → logprob: -5.276555061340332
    9. 'placer' → logprob: -5.401555061340332
    10. 'ter' → logprob: -6.151555061340332

Token 214: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.6436501741409302
    2. 'uire' → logprob: -0.7686501741409302
    3. 're' → logprob: -5.518650054931641
    4. '   ' → logprob: -6.768650054931641
    5. 'u' → logprob: -6.893650054931641
    6. 'it' → logprob: -7.268650054931641
    7. 'itre' → logprob: -7.393650054931641
    8. '```' → logprob: -7.643650054931641
    9. '       ' → logprob: -8.14365005493164
    10. 'ite' → logprob: -8.89365005493164

Token 215: ' la' (ID: 557)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7056992650032043
    2. ' les' → logprob: -0.8306992650032043
    3. ' la' → logprob: -3.7056992053985596
    4. '   ' → logprob: -4.080699443817139
    5. ' le' → logprob: -4.580699443817139
    6. 'les' → logprob: -5.580699443817139
    7. '[' → logprob: -6.080699443817139
    8. ' [' → logprob: -6.330699443817139
    9. ' l' → logprob: -6.830699443817139
    10. ' that' → logprob: -6.955699443817139

Token 216: ' position' (ID: 4010)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5534220933914185
    2. ' next' → logprob: -2.053421974182129
    3. ' position' → logprob: -2.678421974182129
    4. ' cave' → logprob: -2.928421974182129
    5. ' positions' → logprob: -2.928421974182129
    6. 'position' → logprob: -3.303421974182129
    7. 'children' → logprob: -3.428421974182129
    8. ' prochaine' → logprob: -3.428421974182129
    9. 'next' → logprob: -3.553421974182129
    10. ' offset' → logprob: -3.678421974182129

Token 217: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9857861399650574
    2. ' des' → logprob: -1.3607861995697021
    3. 's' → logprob: -1.9857861995697021
    4. ' suivante' → logprob: -1.9857861995697021
    5. ')' → logprob: -3.985786199569702
    6. 'des' → logprob: -4.110785961151123
    7. '(s' → logprob: -4.360785961151123
    8. ',' → logprob: -4.735785961151123
    9. ' )' → logprob: -4.735785961151123
    10. '    ' → logprob: -4.735785961151123

Token 218: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5602596998214722
    2. ')' → logprob: -1.0602596998214722
    3. ' x' → logprob: -3.5602598190307617
    4. ',' → logprob: -4.185259819030762
    5. ' )' → logprob: -4.935259819030762
    6. 'i' → logprob: -5.060259819030762
    7. ')x' → logprob: -5.310259819030762
    8. '_x' → logprob: -5.435259819030762
    9. '   ' → logprob: -5.935259819030762
    10. '(x' → logprob: -6.310259819030762

Token 219: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012624947121366858
    2. ',y' → logprob: -6.876262664794922
    3. ' ,' → logprob: -8.501262664794922
    4. 'y' → logprob: -12.001262664794922
    5. ',
' → logprob: -12.126262664794922
    6. '+' → logprob: -12.751262664794922
    7. '   ' → logprob: -13.001262664794922
    8. '
' → logprob: -13.251262664794922
    9. ')' → logprob: -13.376262664794922
    10. '-' → logprob: -13.876262664794922

Token 220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041111730970442295
    2. ')
' → logprob: -5.754111289978027
    3. '),' → logprob: -7.504111289978027
    4. ',' → logprob: -8.754111289978027
    5. ' )' → logprob: -9.254111289978027
    6. '   ' → logprob: -10.129111289978027
    7. '):
' → logprob: -10.254111289978027
    8. '):' → logprob: -11.879111289978027
    9. ')

' → logprob: -12.004111289978027
    10. '")' → logprob: -12.254111289978027

Token 221: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5267118215560913
    2. ')' → logprob: -1.6517118215560913
    3. ',' → logprob: -1.7767118215560913
    4. '):' → logprob: -3.901711940765381
    5. ' =' → logprob: -4.651711940765381
    6. 'def' → logprob: -4.651711940765381
    7. '),' → logprob: -6.276711940765381
    8. 'import' → logprob: -6.401711940765381
    9. ' ,' → logprob: -6.776711940765381
    10. '):
' → logprob: -7.026711940765381

Token 222: ' cave' (ID: 44365)
  Prédit: ' cave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cave' → logprob: -0.5761693716049194
    2. 'c' → logprob: -0.8261693716049194
    3. ' c' → logprob: -9.70116901397705
    4. 'token' → logprob: -10.20116901397705
    5. ' token' → logprob: -10.82616901397705
    6. ' point' → logprob: -11.20116901397705
    7. ' ' → logprob: -11.70116901397705
    8. ' caves' → logprob: -11.82616901397705
    9. 'point' → logprob: -12.07616901397705
    10. 'num' → logprob: -12.07616901397705

Token 223: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.019025202840566635
    2. ')' → logprob: -4.1440253257751465
    3. ' _' → logprob: -6.8940253257751465
    4. '_' → logprob: -7.5190253257751465
    5. ',' → logprob: -7.6440253257751465
    6. ')_' → logprob: -7.7690253257751465
    7. ' )' → logprob: -9.269024848937988
    8. '   ' → logprob: -9.394024848937988
    9. '_coords' → logprob: -9.769024848937988
    10. 's' → logprob: -10.144024848937988

Token 224: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4109707176685333
    2. ')' → logprob: -1.535970687866211
    3. ',' → logprob: -2.660970687866211
    4. 'def' → logprob: -4.160970687866211
    5. ' =' → logprob: -4.535970687866211
    6. ':' → logprob: -4.660970687866211
    7. '):' → logprob: -4.910970687866211
    8. '
' → logprob: -6.535970687866211
    9. '),' → logprob: -6.535970687866211
    10. ')
' → logprob: -6.660970687866211

Token 225: '   ' (ID: 271)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.06461160629987717
    2. ' et' → logprob: -3.4396116733551025
    3. '   ' → logprob: -3.8146116733551025
    4. ',' → logprob: -5.439611434936523
    5. '    ' → logprob: -7.439611434936523
    6. 'et' → logprob: -7.689611434936523
    7. ' def' → logprob: -7.939611434936523
    8. 'p' → logprob: -7.939611434936523
    9. ' then' → logprob: -8.064611434936523
    10. ' mais' → logprob: -8.439611434936523

Token 226: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.014294786378741264
    2. ')' → logprob: -5.889294624328613
    3. ' et' → logprob: -5.889294624328613
    4. 'p' → logprob: -6.264294624328613
    5. '   ' → logprob: -6.514294624328613
    6. 'def' → logprob: -6.764294624328613
    7. ' def' → logprob: -6.889294624328613
    8. ' y' → logprob: -7.264294624328613
    9. ',' → logprob: -8.014294624328613
    10. ' x' → logprob: -8.139294624328613

Token 227: ' ses' (ID: 6707)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7217580080032349
    2. ' calcul' → logprob: -1.4717580080032349
    3. 'calcul' → logprob: -1.7217580080032349
    4. 'tr' → logprob: -3.5967578887939453
    5. ' en' → logprob: -4.471757888793945
    6. ' on' → logprob: -4.596757888793945
    7. ' déterminer' → logprob: -4.971757888793945
    8. 'en' → logprob: -5.096757888793945
    9. ' les' → logprob: -5.346757888793945
    10. 'dé' → logprob: -5.596757888793945

Token 228: ' enfants' (ID: 24681)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.28362005949020386
    2. ' coordonnées' → logprob: -2.7836201190948486
    3. 'en' → logprob: -3.2836201190948486
    4. 'vo' → logprob: -3.2836201190948486
    5. ' neighbors' → logprob: -3.4086201190948486
    6. ' enfants' → logprob: -3.7836201190948486
    7. 'neighbors' → logprob: -3.9086201190948486
    8. 'c' → logprob: -4.9086198806762695
    9. ' vois' → logprob: -5.0336198806762695
    10. 'adj' → logprob: -5.1586198806762695

Token 229: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21631865203380585
    2. '   ' → logprob: -1.8413186073303223
    3. ':' → logprob: -3.8413186073303223
    4. ',' → logprob: -4.966318607330322
    5. ' :' → logprob: -6.341318607330322
    6. ' (' → logprob: -7.091318607330322
    7. ' en' → logprob: -7.216318607330322
    8. ')' → logprob: -7.466318607330322
    9. ' sont' → logprob: -7.716318607330322
    10. '=' → logprob: -7.841318607330322

Token 230: ' ceux' (ID: 26863)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.5752353668212891
    2. '[(' → logprob: -0.9502353668212891
    3. ' (' → logprob: -4.325235366821289
    4. '(x' → logprob: -4.450235366821289
    5. '[x' → logprob: -4.825235366821289
    6. '   ' → logprob: -4.950235366821289
    7. ' [' → logprob: -5.325235366821289
    8. '[
' → logprob: -6.075235366821289
    9. ' [
' → logprob: -6.700235366821289
    10. '[c' → logprob: -6.825235366821289

Token 231: ' situ' (ID: 4581)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0145944356918335
    2. ' dont' → logprob: -1.7645944356918335
    3. ' qui' → logprob: -2.264594554901123
    4. ' aux' → logprob: -2.889594554901123
    5. '   ' → logprob: -3.014594554901123
    6. ' (' → logprob: -3.014594554901123
    7. ' ayant' → logprob: -3.389594554901123
    8. ' de' → logprob: -3.639594554901123
    9. 'dont' → logprob: -3.639594554901123
    10. ' avec' → logprob: -3.889594554901123

Token 232: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -2.3795937522663735e-05
    2. 'es' → logprob: -10.75002384185791
    3. 'é' → logprob: -13.62502384185791
    4. '   ' → logprob: -14.50002384185791
    5. 'ées' → logprob: -15.75002384185791
    6. 'ès' → logprob: -16.000022888183594
    7. '#' → logprob: -16.000022888183594
    8. 'ÉS' → logprob: -16.500022888183594
    9. '```' → logprob: -17.500022888183594
    10. '(' → logprob: -18.750022888183594

Token 233: ' sous' (ID: 14487)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5784194469451904
    2. ' aux' → logprob: -1.2034194469451904
    3. ' en' → logprob: -3.0784194469451904
    4. 'à' → logprob: -3.2034194469451904
    5. 'sur' → logprob: -4.7034196853637695
    6. '(x' → logprob: -4.9534196853637695
    7. ' au' → logprob: -4.9534196853637695
    8. 'aux' → logprob: -5.0784196853637695
    9. ' at' → logprob: -5.2034196853637695
    10. ' sur' → logprob: -5.4534196853637695

Token 234: ' lui' (ID: 10623)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3093615770339966
    2. ' (' → logprob: -1.9343615770339966
    3. '(c' → logprob: -3.059361457824707
    4. 'la' → logprob: -4.309361457824707
    5. 'c' → logprob: -4.559361457824707
    6. ' la' → logprob: -4.684361457824707
    7. '(' → logprob: -4.684361457824707
    8. 'celle' → logprob: -5.059361457824707
    9. ' celle' → logprob: -5.184361457824707
    10. ' lui' → logprob: -5.559361457824707

Token 235: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0430190563201904
    2. ',' → logprob: -1.2930190563201904
    3. ' (' → logprob: -1.5430190563201904
    4. ' en' → logprob: -2.9180190563201904
    5. ':' → logprob: -3.1680190563201904
    6. '.' → logprob: -3.9180190563201904
    7. '(x' → logprob: -5.0430192947387695
    8. ' dans' → logprob: -5.2930192947387695
    9. '(' → logprob: -5.4180192947387695
    10. ' :' → logprob: -5.4180192947387695

Token 236: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.571563184261322
    2. ' (' → logprob: -1.5715632438659668
    3. ')' → logprob: -2.196563243865967
    4. ' x' → logprob: -3.946563243865967
    5. '(x' → logprob: -4.071563243865967
    6. '    ' → logprob: -4.571563243865967
    7. '#' → logprob: -5.196563243865967
    8. '    
' → logprob: -5.321563243865967
    9. '(' → logprob: -5.321563243865967
    10. '       ' → logprob: -5.446563243865967

Token 237: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015100972959771752
    2. ' x' → logprob: -6.501510143280029
    3. '(x' → logprob: -13.126509666442871
    4. '   ' → logprob: -13.126509666442871
    5. ')x' → logprob: -13.751509666442871
    6. ')' → logprob: -14.251509666442871
    7. '
' → logprob: -14.501509666442871
    8. '```' → logprob: -15.001509666442871
    9. '0' → logprob: -15.626509666442871
    10. ',' → logprob: -15.751509666442871

Token 238: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0329897478222847
    2. ',y' → logprob: -3.907989740371704
    3. '-' → logprob: -5.032989978790283
    4. '+' → logprob: -5.782989978790283
    5. '   ' → logprob: -6.907989978790283
    6. ' ,' → logprob: -7.032989978790283
    7. ' -' → logprob: -8.157989501953125
    8. ',x' → logprob: -8.657989501953125
    9. ' +' → logprob: -9.282989501953125
    10. '),' → logprob: -9.782989501953125

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006428572814911604
    2. '0' → logprob: -7.500642776489258
    3. ' ' → logprob: -9.375642776489258
    4. '   ' → logprob: -13.625642776489258
    5. '-' → logprob: -14.125642776489258
    6. 'y' → logprob: -14.250642776489258
    7. ',' → logprob: -14.250642776489258
    8. '2' → logprob: -14.375642776489258
    9. '```' → logprob: -14.625642776489258
    10. 'x' → logprob: -15.250642776489258

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014222737401723862
    2. ',y' → logprob: -4.264222621917725
    3. ' ,' → logprob: -10.639223098754883
    4. ',
' → logprob: -11.389223098754883
    5. '),' → logprob: -11.889223098754883
    6. ')' → logprob: -12.014223098754883
    7. '   ' → logprob: -12.264223098754883
    8. ',x' → logprob: -12.264223098754883
    9. '
' → logprob: -15.014223098754883
    10. ' ' → logprob: -15.764223098754883

Token 241: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132713735103607
    2. ' y' → logprob: -1.313271403312683
    3. '   ' → logprob: -12.438271522521973
    4. ' ' → logprob: -13.563271522521973
    5. '  ' → logprob: -13.688271522521973
    6. '    ' → logprob: -13.688271522521973
    7. ')y' → logprob: -14.563271522521973
    8. ')' → logprob: -14.813271522521973
    9. '	y' → logprob: -15.063271522521973
    10. '(y' → logprob: -15.438271522521973

Token 242: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43769630789756775
    2. '+' → logprob: -1.0626963376998901
    3. '),' → logprob: -5.56269645690918
    4. ' -' → logprob: -5.81269645690918
    5. ' +' → logprob: -6.93769645690918
    6. ')' → logprob: -7.06269645690918
    7. '   ' → logprob: -9.06269645690918
    8. ',' → logprob: -9.43769645690918
    9. '),
' → logprob: -9.68769645690918
    10. '
' → logprob: -11.68769645690918

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002042009960860014
    2. '-' → logprob: -6.377041816711426
    3. '0' → logprob: -8.377041816711426
    4. ' ' → logprob: -10.252041816711426
    5. '+' → logprob: -11.002041816711426
    6. 'c' → logprob: -11.252041816711426
    7. 'x' → logprob: -11.502041816711426
    8. ')' → logprob: -11.627041816711426
    9. '   ' → logprob: -12.002041816711426
    10. ' -' → logprob: -12.127041816711426

Token 244: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03280853107571602
    2. ')' → logprob: -3.907808542251587
    3. '),
' → logprob: -4.657808303833008
    4. ')
' → logprob: -6.532808303833008
    5. ',' → logprob: -7.532808303833008
    6. '   ' → logprob: -7.657808303833008
    7. ' ),' → logprob: -9.282808303833008
    8. '),(' → logprob: -9.407808303833008
    9. '),
' → logprob: -11.657808303833008
    10. ' ' → logprob: -11.657808303833008

Token 245: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.030686967074871063
    2. '(x' → logprob: -3.530686855316162
    3. '   ' → logprob: -7.530686855316162
    4. ' x' → logprob: -8.40568733215332
    5. '    ' → logprob: -9.90568733215332
    6. ' ' → logprob: -10.15568733215332
    7. ',' → logprob: -10.53068733215332
    8. 'x' → logprob: -10.78068733215332
    9. ' ' → logprob: -12.03068733215332
    10. ' et' → logprob: -12.15568733215332

Token 246: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804803267121315
    2. ' x' → logprob: -3.288048028945923
    3. '(x' → logprob: -12.913047790527344
    4. '   ' → logprob: -13.538047790527344
    5. '	x' → logprob: -14.413047790527344
    6. ')x' → logprob: -14.538047790527344
    7. ''x' → logprob: -15.163047790527344
    8. ' ' → logprob: -15.413047790527344
    9. '"x' → logprob: -15.663047790527344
    10. '+' → logprob: -15.663047790527344

Token 247: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006695479387417436
    2. ',' → logprob: -8.000669479370117
    3. '),' → logprob: -8.750669479370117
    4. '-' → logprob: -9.250669479370117
    5. ' +' → logprob: -9.750669479370117
    6. ')' → logprob: -11.625669479370117
    7. '   ' → logprob: -11.875669479370117
    8. '
' → logprob: -13.875669479370117
    9. ')+' → logprob: -13.875669479370117
    10. ' ' → logprob: -14.750669479370117

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04322560876607895
    2. '0' → logprob: -3.1682255268096924
    3. ' ' → logprob: -8.543225288391113
    4. ',' → logprob: -11.043225288391113
    5. '   ' → logprob: -12.168225288391113
    6. '
' → logprob: -13.168225288391113
    7. '+' → logprob: -13.418225288391113
    8. '```' → logprob: -13.418225288391113
    9. '2' → logprob: -13.543225288391113
    10. '  ' → logprob: -13.730725288391113

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014476180076599121
    2. '),' → logprob: -7.001447677612305
    3. ' ,' → logprob: -7.626447677612305
    4. ' ),' → logprob: -10.876447677612305
    5. ',y' → logprob: -11.126447677612305
    6. ')' → logprob: -12.251447677612305
    7. '+' → logprob: -12.626447677612305
    8. ',),' → logprob: -13.876447677612305
    9. '   ' → logprob: -14.126447677612305
    10. ' y' → logprob: -14.376447677612305

Token 250: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931512355804443
    2. ' y' → logprob: -0.6931512355804443
    3. '   ' → logprob: -13.068151473999023
    4. ' ' → logprob: -13.943151473999023
    5. '    ' → logprob: -14.818151473999023
    6. 'x' → logprob: -15.068151473999023
    7. '	y' → logprob: -15.693151473999023
    8. ' ' → logprob: -16.443151473999023
    9. '0' → logprob: -16.443151473999023
    10. '  ' → logprob: -16.943151473999023

Token 251: '),' (ID: 936)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6421588063240051
    2. '-' → logprob: -1.3921587467193604
    3. '),' → logprob: -1.5171587467193604
    4. ',' → logprob: -6.0171589851379395
    5. '),
' → logprob: -6.7671589851379395
    6. ')' → logprob: -7.0171589851379395
    7. ' +' → logprob: -7.5171589851379395
    8. '   ' → logprob: -8.267158508300781
    9. ' ),' → logprob: -8.517158508300781
    10. ' -' → logprob: -8.767158508300781

Token 252: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04683186486363411
    2. '   ' → logprob: -3.6718318462371826
    3. '(x' → logprob: -3.9218318462371826
    4. '#' → logprob: -9.171832084655762
    5. '(' → logprob: -9.171832084655762
    6. ' #' → logprob: -9.296832084655762
    7. '    ' → logprob: -9.296832084655762
    8. ' et' → logprob: -9.796832084655762
    9. ' ' → logprob: -11.421832084655762
    10. '           ' → logprob: -11.546832084655762

Token 253: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029944168403744698
    2. ' x' → logprob: -3.5299441814422607
    3. '(x' → logprob: -8.65494441986084
    4. ' (' → logprob: -10.90494441986084
    5. ')x' → logprob: -15.02994441986084
    6. '   ' → logprob: -15.40494441986084
    7. '"x' → logprob: -16.279943466186523
    8. ''x' → logprob: -16.404943466186523
    9. '	x' → logprob: -16.529943466186523
    10. '{x' → logprob: -16.529943466186523

Token 254: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010748496279120445
    2. ',' → logprob: -7.37607479095459
    3. '-' → logprob: -7.87607479095459
    4. '),' → logprob: -9.87607479095459
    5. ' +' → logprob: -11.62607479095459
    6. ' ' → logprob: -13.00107479095459
    7. ')' → logprob: -13.12607479095459
    8. '   ' → logprob: -13.62607479095459
    9. ' ,' → logprob: -14.12607479095459
    10. '  ' → logprob: -15.00107479095459

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025698295794427395
    2. '0' → logprob: -6.002569675445557
    3. '+' → logprob: -9.752570152282715
    4. ' ' → logprob: -10.377570152282715
    5. ')' → logprob: -12.877570152282715
    6. '-' → logprob: -13.627570152282715
    7. '2' → logprob: -15.877570152282715
    8. '(' → logprob: -16.0650691986084
    9. '```' → logprob: -16.3150691986084
    10. '   ' → logprob: -16.3775691986084

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001777960715116933
    2. ' ,' → logprob: -9.250177383422852
    3. ',y' → logprob: -10.250177383422852
    4. ')' → logprob: -10.375177383422852
    5. '),' → logprob: -11.375177383422852
    6. ' y' → logprob: -13.625177383422852
    7. ',
' → logprob: -14.625177383422852
    8. '   ' → logprob: -14.750177383422852
    9. '+' → logprob: -15.375177383422852
    10. 'import' → logprob: -15.500177383422852

Token 257: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.17975130677223206
    2. 'y' → logprob: -1.8047512769699097
    3. '   ' → logprob: -13.0547513961792
    4. '(y' → logprob: -13.1797513961792
    5. '    ' → logprob: -14.0547513961792
    6. ' ' → logprob: -14.5547513961792
    7. '	y' → logprob: -14.6797513961792
    8. ' (' → logprob: -15.0547513961792
    9. '     ' → logprob: -15.5547513961792
    10. '  ' → logprob: -16.054750442504883

Token 258: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005666513927280903
    2. '-' → logprob: -5.630666732788086
    3. ')' → logprob: -6.255666732788086
    4. ' +' → logprob: -9.380666732788086
    5. '),' → logprob: -9.880666732788086
    6. '   ' → logprob: -13.255666732788086
    7. ',' → logprob: -14.005666732788086
    8. ')
' → logprob: -14.005666732788086
    9. ' )' → logprob: -14.005666732788086
    10. ' -' → logprob: -14.005666732788086

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004801240866072476
    2. ' ' → logprob: -8.500479698181152
    3. '+' → logprob: -8.750479698181152
    4. '0' → logprob: -9.125479698181152
    5. ')' → logprob: -11.875479698181152
    6. '-' → logprob: -14.375479698181152
    7. ' +' → logprob: -15.312979698181152
    8. '   ' → logprob: -15.312979698181152
    9. '[' → logprob: -15.937979698181152
    10. '2' → logprob: -16.00048065185547

Token 260: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040183294913731515
    2. ')
' → logprob: -8.250401496887207
    3. '   ' → logprob: -9.500401496887207
    4. ' )' → logprob: -10.500401496887207
    5. '):' → logprob: -11.000401496887207
    6. '),' → logprob: -12.375401496887207
    7. ').' → logprob: -12.750401496887207
    8. '):
' → logprob: -12.750401496887207
    9. ')
' → logprob: -12.875401496887207
    10. ')

' → logprob: -13.250401496887207

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02207530103623867
    2. '"""' → logprob: -4.022075176239014
    3. ')' → logprob: -6.522075176239014
    4. 'def' → logprob: -6.897075176239014
    5. ' """' → logprob: -7.647075176239014
    6. '"""
' → logprob: -7.772075176239014
    7. '"' → logprob: -8.772075653076172
    8. ' """
' → logprob: -9.272075653076172
    9. '```' → logprob: -9.647075653076172
    10. '""' → logprob: -9.772075653076172

Token 262: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4443320333957672
    2. ')' → logprob: -1.6943320035934448
    3. '"""' → logprob: -1.9443320035934448
    4. ' """' → logprob: -4.194332122802734
    5. 'def' → logprob: -5.069332122802734
    6. ' """
' → logprob: -5.819332122802734
    7. '"""
' → logprob: -5.819332122802734
    8. '```' → logprob: -7.194332122802734
    9. '"' → logprob: -7.569332122802734
    10. ' )' → logprob: -7.694332122802734

Token 263: ' puisque' (ID: 66135)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.5132523775100708
    2. ' on' → logprob: -1.8882523775100708
    3. ' la' → logprob: -2.0132522583007812
    4. 'le' → logprob: -2.7632522583007812
    5. ' il' → logprob: -2.7632522583007812
    6. ' pour' → logprob: -2.8882522583007812
    7. ' for' → logprob: -3.2632522583007812
    8. ' les' → logprob: -3.8882522583007812
    9. ' dans' → logprob: -3.8882522583007812
    10. ' nous' → logprob: -3.8882522583007812

Token 264: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6185980439186096
    2. 'les' → logprob: -1.4935979843139648
    3. ' la' → logprob: -2.868597984313965
    4. ' nous' → logprob: -2.868597984313965
    5. 'le' → logprob: -3.118597984313965
    6. ' le' → logprob: -3.368597984313965
    7. 'nous' → logprob: -4.368597984313965
    8. 'la' → logprob: -4.743597984313965
    9. ' chaque' → logprob: -4.743597984313965
    10. ' we' → logprob: -6.118597984313965

Token 265: ' position' (ID: 4010)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.9199672341346741
    2. 'c' → logprob: -1.5449671745300293
    3. 'spir' → logprob: -1.5449671745300293
    4. ' cave' → logprob: -3.2949671745300293
    5. '#' → logprob: -3.7949671745300293
    6. 'position' → logprob: -3.9199671745300293
    7. ' num' → logprob: -4.294967174530029
    8. 'n' → logprob: -4.919967174530029
    9. 'code' → logprob: -5.044967174530029
    10. ' spir' → logprob: -5.169967174530029

Token 266: ' n' (ID: 297)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38626816868782043
    2. ' est' → logprob: -2.761268138885498
    3. ' des' → logprob: -3.136268138885498
    4. '_x' → logprob: -3.136268138885498
    5. '=' → logprob: -3.511268138885498
    6. ' n' → logprob: -3.886268138885498
    7. '=(' → logprob: -4.011268138885498
    8. ' ' → logprob: -4.511268138885498
    9. ' de' → logprob: -4.636268138885498
    10. ' is' → logprob: -4.761268138885498

Token 267: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.037046246230602264
    2. 'est' → logprob: -4.037046432495117
    3. 'pas' → logprob: -5.162046432495117
    4. ''a' → logprob: -5.537046432495117
    5. 'a' → logprob: -6.787046432495117
    6. ''' → logprob: -6.912046432495117
    7. '’est' → logprob: -6.912046432495117
    8. ' n' → logprob: -7.412046432495117
    9. ' est' → logprob: -7.412046432495117
    10. ' pas' → logprob: -7.537046432495117

Token 268: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.027220090851187706
    2. ' pas' → logprob: -3.6522200107574463
    3. 'plus' → logprob: -7.402220249176025
    4. ' plus' → logprob: -10.277219772338867
    5. ' jamais' → logprob: -10.777219772338867
    6. '   ' → logprob: -10.902219772338867
    7. 'not' → logprob: -11.027219772338867
    8. '
' → logprob: -11.027219772338867
    9. '

' → logprob: -11.027219772338867
    10. 'known' → logprob: -11.027219772338867

Token 269: ' donnée' (ID: 130126)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direct' → logprob: -1.4099152088165283
    2. 'explicit' → logprob: -1.7849152088165283
    3. 'simple' → logprob: -2.4099152088165283
    4. 'd' → logprob: -2.5349152088165283
    5. 'lin' → logprob: -2.5349152088165283
    6. 'stock' → logprob: -3.5349152088165283
    7. 'conn' → logprob: -3.5349152088165283
    8. 'uni' → logprob: -3.7849152088165283
    9. 'import' → logprob: -3.7849152088165283
    10. 'num' → logprob: -4.159914970397949

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008353102020919323
    2. ' en' → logprob: -5.883353233337402
    3. 'explicit' → logprob: -6.633353233337402
    4. 'en' → logprob: -6.758353233337402
    5. ' ,' → logprob: -7.133353233337402
    6. '),' → logprob: -7.258353233337402
    7. ' directement' → logprob: -7.383353233337402
    8. ',
' → logprob: -8.633353233337402
    9. 'exp' → logprob: -9.008353233337402
    10. '   ' → logprob: -9.258353233337402

Token 271: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.2069588005542755
    2. 'on' → logprob: -3.081958770751953
    3. '#' → logprob: -3.331958770751953
    4. ' #' → logprob: -3.581958770751953
    5. ' nous' → logprob: -3.831958770751953
    6. ' il' → logprob: -4.206958770751953
    7. '   ' → logprob: -4.206958770751953
    8. ' we' → logprob: -4.581958770751953
    9. 'nous' → logprob: -4.831958770751953
    10. 'we' → logprob: -6.581958770751953

Token 272: ' s' (ID: 265)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.16939868032932281
    2. 'continue' → logprob: -3.044398784637451
    3. ' calc' → logprob: -3.294398784637451
    4. ' utilise' → logprob: -4.169398784637451
    5. ' doit' → logprob: -4.294398784637451
    6. ' return' → logprob: -4.919398784637451
    7. ' va' → logprob: -5.544398784637451
    8. ' peux' → logprob: -5.544398784637451
    9. ' retourne' → logprob: -5.669398784637451
    10. 'util' → logprob: -5.669398784637451

Token 273: ''app' (ID: 41670)
  Prédit: 'plit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plit' → logprob: -0.3202788531780243
    2. 'tr' → logprob: -1.8202788829803467
    3. 'qrt' → logprob: -3.4452788829803467
    4. 'pace' → logprob: -4.070278644561768
    5. 'uite' → logprob: -4.945278644561768
    6. 'olve' → logprob: -5.070278644561768
    7. 'trip' → logprob: -5.070278644561768
    8. 'canf' → logprob: -5.195278644561768
    9. 'ub' → logprob: -5.320278644561768
    10. 'earch' → logprob: -5.570278644561768

Token 274: 'uie' (ID: 123775)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.07094600051641464
    2. 'ly' → logprob: -3.070945978164673
    3. 'rox' → logprob: -4.945946216583252
    4. 'ro' → logprob: -5.570946216583252
    5. 'endre' → logprob: -6.070946216583252
    6. 'endi' → logprob: -6.195946216583252
    7. 'e' → logprob: -7.570946216583252
    8. 'lied' → logprob: -7.570946216583252
    9. 'li' → logprob: -7.945946216583252
    10. 'ed' → logprob: -7.945946216583252

Token 275: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.10097689181566238
    2. 'sur' → logprob: -2.3509769439697266
    3. '_sur' → logprob: -8.225976943969727
    4. ' on' → logprob: -9.100976943969727
    5. ' =' → logprob: -9.225976943969727
    6. '   ' → logprob: -9.600976943969727
    7. ' uniquement' → logprob: -9.725976943969727
    8. '=' → logprob: -9.725976943969727
    9. 'on' → logprob: -10.225976943969727
    10. ')' → logprob: -10.725976943969727

Token 276: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4049820899963379
    2. 'la' → logprob: -2.279982089996338
    3. ' le' → logprob: -2.529982089996338
    4. 'le' → logprob: -2.779982089996338
    5. ' math' → logprob: -3.529982089996338
    6. ' les' → logprob: -4.279982089996338
    7. ' des' → logprob: -4.654982089996338
    8. 'les' → logprob: -4.654982089996338
    9. 'math' → logprob: -5.154982089996338
    10. 'l' → logprob: -5.154982089996338

Token 277: ' num' (ID: 2269)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9503818154335022
    2. 'math' → logprob: -1.5753817558288574
    3. 'c' → logprob: -2.7003817558288574
    4. 'position' → logprob: -3.0753817558288574
    5. 'def' → logprob: -3.3253817558288574
    6. 'import' → logprob: -3.3253817558288574
    7. ' formule' → logprob: -3.3253817558288574
    8. 'num' → logprob: -3.4503817558288574
    9. 'form' → logprob: -3.9503817558288574
    10. 'spir' → logprob: -4.700381755828857

Token 278: 'é' (ID: 377)
  Prédit: 'éro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.019194437190890312
    2. 'ero' → logprob: -4.394194602966309
    3. 'ération' → logprob: -5.644194602966309
    4. 'é' → logprob: -6.769194602966309
    5. 'éros' → logprob: -7.269194602966309
    6. '_' → logprob: -7.894194602966309
    7. '_num' → logprob: -8.019194602966309
    8. 'è' → logprob: -9.269194602966309
    9. ' _' → logprob: -9.394194602966309
    10. 'érique' → logprob: -9.644194602966309

Token 279: 'rotation' (ID: 27920)
  Prédit: 'ration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ration' → logprob: -0.052637550979852676
    2. 'rotation' → logprob: -3.5526375770568848
    3. 'r' → logprob: -4.427637577056885
    4. 'ro' → logprob: -4.552637577056885
    5. 'ra' → logprob: -10.677637100219727
    6. '_rotation' → logprob: -11.177637100219727
    7. 'vation' → logprob: -11.177637100219727
    8. 'raction' → logprob: -11.427637100219727
    9. 'mentation' → logprob: -11.677637100219727
    10. 'ération' → logprob: -11.802637100219727

Token 280: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8096762299537659
    2. ',' → logprob: -1.934676170349121
    3. ')' → logprob: -2.184676170349121
    4. '[' → logprob: -2.809676170349121
    5. '[i' → logprob: -2.934676170349121
    6. '_next' → logprob: -3.309676170349121
    7. ' +' → logprob: -3.434676170349121
    8. ' =' → logprob: -3.809676170349121
    9. ':' → logprob: -4.434676170349121
    10. '_' → logprob: -4.559676170349121

Token 281: ' spir' (ID: 27189)
  Prédit: 'spir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spir' → logprob: -0.0508691668510437
    2. 'c' → logprob: -3.4258692264556885
    3. 's' → logprob: -5.550868988037109
    4. ' spir' → logprob: -6.175868988037109
    5. 'n' → logprob: -6.800868988037109
    6. 'fonction' → logprob: -6.800868988037109
    7. 'sp' → logprob: -7.050868988037109
    8. 'range' → logprob: -7.050868988037109
    9. 'cube' → logprob: -7.050868988037109
    10. 'base' → logprob: -7.050868988037109

Token 282: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.06212397292256355
    2. 'al' → logprob: -2.812124013900757
    3. ')' → logprob: -10.312124252319336
    4. 'e' → logprob: -10.312124252319336
    5. '_' → logprob: -10.687124252319336
    6. ',' → logprob: -10.812124252319336
    7. '   ' → logprob: -11.937124252319336
    8. 'alité' → logprob: -12.187124252319336
    9. 'le' → logprob: -12.312124252319336
    10. ' spir' → logprob: -12.812124252319336

Token 283: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1904783397912979
    2. ':' → logprob: -2.4404783248901367
    3. ',' → logprob: -3.4404783248901367
    4. ')' → logprob: -3.5654783248901367
    5. '):' → logprob: -4.815478324890137
    6. 'def' → logprob: -4.940478324890137
    7. '.' → logprob: -5.565478324890137
    8. ' :' → logprob: -6.440478324890137
    9. ' ,' → logprob: -7.440478324890137
    10. ' )' → logprob: -7.440478324890137

Token 284: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050981439650058746
    2. ')' → logprob: -3.1759815216064453
    3. 'def' → logprob: -5.175981521606445
    4. ')
' → logprob: -7.675981521606445
    5. ' )' → logprob: -7.675981521606445
    6. '    
' → logprob: -8.675981521606445
    7. '
' → logprob: -8.800981521606445
    8. '```' → logprob: -8.925981521606445
    9. '"""' → logprob: -9.050981521606445
    10. ' def' → logprob: -9.300981521606445

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005059656221419573
    2. 'def' → logprob: -6.005059719085693
    3. ')' → logprob: -6.255059719085693
    4. '    
' → logprob: -8.255059242248535
    5. '
' → logprob: -9.755059242248535
    6. '#' → logprob: -9.755059242248535
    7. '"""' → logprob: -9.755059242248535
    8. ' )' → logprob: -10.005059242248535
    9. ' def' → logprob: -11.130059242248535
    10. 'import' → logprob: -11.255059242248535

Token 286: ' Cependant' (ID: 74480)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7701328992843628
    2. 'def' → logprob: -1.1451328992843628
    3. '   ' → logprob: -2.1451330184936523
    4. '"""
' → logprob: -3.0201330184936523
    5. 'n' → logprob: -3.7701330184936523
    6. 'x' → logprob: -5.270133018493652
    7. ')' → logprob: -5.645133018493652
    8. '"""' → logprob: -5.895133018493652
    9. 'start' → logprob: -6.145133018493652
    10. 'layer' → logprob: -6.145133018493652

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.130441352725029
    2. ' ,' → logprob: -2.130441427230835
    3. ' la' → logprob: -8.005441665649414
    4. '   ' → logprob: -8.130441665649414
    5. ' #' → logprob: -8.130441665649414
    6. ' c' → logprob: -8.130441665649414
    7. ' il' → logprob: -8.380441665649414
    8. ' on' → logprob: -8.380441665649414
    9. ' n' → logprob: -8.505441665649414
    10. ':' → logprob: -8.755441665649414

Token 288: ' ce' (ID: 2357)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.61529940366745
    2. ' m' → logprob: -1.9902994632720947
    3. ' il' → logprob: -1.9902994632720947
    4. ' cave' → logprob: -2.8652994632720947
    5. ' le' → logprob: -2.9902994632720947
    6. ' c' → logprob: -4.240299224853516
    7. 'm' → logprob: -4.740299224853516
    8. ' ce' → logprob: -4.865299224853516
    9. ' pour' → logprob: -4.990299224853516
    10. ' on' → logprob: -5.365299224853516

Token 289: ' problème' (ID: 35630)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.3898373544216156
    2. 'def' → logprob: -2.2648372650146484
    3. ' n' → logprob: -2.5148372650146484
    4. 'n' → logprob: -2.7648372650146484
    5. '#' → logprob: -4.014837265014648
    6. ' qui' → logprob: -4.389837265014648
    7. 'code' → logprob: -4.889837265014648
    8. ' def' → logprob: -5.389837265014648
    9. 's' → logprob: -5.639837265014648
    10. '_code' → logprob: -5.639837265014648

Token 290: ' est' (ID: 893)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0731756687164307
    2. ' n' → logprob: -1.1981756687164307
    3. ' reste' → logprob: -2.8231756687164307
    4. ' est' → logprob: -2.8231756687164307
    5. ' semble' → logprob: -3.4481756687164307
    6. 'continue' → logprob: -3.5731756687164307
    7. ' ne' → logprob: -3.5731756687164307
    8. '#' → logprob: -3.9481756687164307
    9. ' continues' → logprob: -4.198175430297852
    10. ' s' → logprob: -4.198175430297852

Token 291: ' un' (ID: 537)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complex' → logprob: -1.1633954048156738
    2. 'in' → logprob: -1.6633954048156738
    3. 'd' → logprob: -2.913395404815674
    4. 'tr' → logprob: -3.163395404815674
    5. ' incom' → logprob: -3.413395404815674
    6. 'non' → logprob: -3.538395404815674
    7. 'une' → logprob: -3.663395404815674
    8. 'intr' → logprob: -3.663395404815674
    9. 'class' → logprob: -3.913395404815674
    10. 'un' → logprob: -4.038395404815674

Token 292: ' classique' (ID: 76895)
  Prédit: ' problème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.7155460119247437
    2. 'pro' → logprob: -1.5905460119247437
    3. ' peu' → logprob: -2.590546131134033
    4. 'pe' → logprob: -2.590546131134033
    5. 'import' → logprob: -3.715546131134033
    6. '#' → logprob: -3.840546131134033
    7. 'iquement' → logprob: -4.965546131134033
    8. 'én' → logprob: -4.965546131134033
    9. 'é' → logprob: -5.090546131134033
    10. 's' → logprob: -5.340546131134033

Token 293: ' mod' (ID: 1812)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0968576669692993
    2. '   ' → logprob: -1.8468576669692993
    3. ':' → logprob: -2.4718575477600098
    4. ',' → logprob: -2.8468575477600098
    5. ' d' → logprob: -2.9718575477600098
    6. ' qui' → logprob: -3.3468575477600098
    7. ' en' → logprob: -3.5968575477600098
    8. ' dans' → logprob: -3.8468575477600098
    9. ' des' → logprob: -4.09685754776001
    10. ' à' → logprob: -4.09685754776001

Token 294: 'ifié' (ID: 49927)
  Prédit: 'ifié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifié' → logprob: -0.5258375406265259
    2. 'èle' → logprob: -1.2758375406265259
    3. 'é' → logprob: -3.0258374214172363
    4. 'ule' → logprob: -3.9008374214172363
    5. 'él' → logprob: -4.150837421417236
    6. 'el' → logprob: -4.650837421417236
    7. 'elé' → logprob: -5.275837421417236
    8. 'e' → logprob: -5.650837421417236
    9. 'ulé' → logprob: -5.650837421417236
    10. 'éré' → logprob: -6.025837421417236

Token 295: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.827654480934143
    2. ' par' → logprob: -2.0776543617248535
    3. ' de' → logprob: -2.2026543617248535
    4. '.' → logprob: -2.4526543617248535
    5. 'import' → logprob: -2.5776543617248535
    6. ' pour' → logprob: -2.5776543617248535
    7. ' qui' → logprob: -2.7026543617248535
    8. ':' → logprob: -2.8276543617248535
    9. 'e' → logprob: -2.8276543617248535
    10. ' dans' → logprob: -3.4526543617248535

Token 296: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10132510215044022
    2. '#' → logprob: -2.726325035095215
    3. 'def' → logprob: -4.601325035095215
    4. ' pass' → logprob: -5.101325035095215
    5. 'pass' → logprob: -5.476325035095215
    6. ' #' → logprob: -5.476325035095215
    7. ' return' → logprob: -6.601325035095215
    8. '    
' → logprob: -6.851325035095215
    9. 'return' → logprob: -7.101325035095215
    10. 'import' → logprob: -7.726325035095215

Token 297: ' enfants' (ID: 24681)
  Prédit: ' enfants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enfants' → logprob: -0.13674312829971313
    2. ' caves' → logprob: -3.8867430686950684
    3. 'en' → logprob: -4.261743068695068
    4. 'c' → logprob: -4.261743068695068
    5. ' num' → logprob: -4.386743068695068
    6. 'children' → logprob: -4.511743068695068
    7. ' positions' → logprob: -4.636743068695068
    8. ' parents' → logprob: -4.886743068695068
    9. ' children' → logprob: -5.261743068695068
    10. 'num' → logprob: -5.511743068695068

Token 298: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06061485782265663
    2. 's' → logprob: -3.810614824295044
    3. '=' → logprob: -4.310615062713623
    4. ' sont' → logprob: -4.685615062713623
    5. '_num' → logprob: -5.810615062713623
    6. 'indices' → logprob: -7.060615062713623
    7. ' ne' → logprob: -7.185615062713623
    8. '   ' → logprob: -7.185615062713623
    9. '_indices' → logprob: -7.185615062713623
    10. '_possible' → logprob: -7.185615062713623

Token 299: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8336398601531982
    2. 'u' → logprob: -0.9586398601531982
    3. ''' → logprob: -2.4586398601531982
    4. 'c' → logprob: -3.3336398601531982
    5. ''un' → logprob: -3.7086398601531982
    6. ''une' → logprob: -4.333640098571777
    7. 'ans' → logprob: -4.958640098571777
    8. '_c' → logprob: -5.083640098571777
    9. 'es' → logprob: -6.708640098571777
    10. 'efined' → logprob: -6.958640098571777

Token 300: ' cave' (ID: 44365)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.19967582821846008
    2. ' cave' → logprob: -2.6996757984161377
    3. 'case' → logprob: -2.8246757984161377
    4. 'node' → logprob: -4.449676036834717
    5. 'n' → logprob: -4.574676036834717
    6. ' case' → logprob: -5.074676036834717
    7. 'num' → logprob: -5.199676036834717
    8. 'no' → logprob: -5.699676036834717
    9. ' sommet' → logprob: -5.949676036834717
    10. ' node' → logprob: -6.074676036834717

Token 301: ' i' (ID: 575)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.7316255569458008
    2. '_num' → logprob: -1.1066255569458008
    3. 's' → logprob: -2.606625556945801
    4. 'num' → logprob: -3.106625556945801
    5. ' n' → logprob: -4.481625556945801
    6. ' num' → logprob: -4.606625556945801
    7. 'n' → logprob: -4.856625556945801
    8. ' se' → logprob: -5.106625556945801
    9. ' =' → logprob: -5.106625556945801
    10. ' ne' → logprob: -5.231625556945801

Token 302: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.24222232401371002
    2. ')' → logprob: -2.492222309112549
    3. '_num' → logprob: -3.492222309112549
    4. 's' → logprob: -4.242222309112549
    5. ' doivent' → logprob: -4.242222309112549
    6. ' =' → logprob: -4.742222309112549
    7. ''ont' → logprob: -4.867222309112549
    8. ',' → logprob: -4.867222309112549
    9. ''' → logprob: -4.992222309112549
    10. '+' → logprob: -5.367222309112549

Token 303: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06067374721169472
    2. '[' → logprob: -2.935673713684082
    3. ' [' → logprob: -5.435673713684082
    4. '[]' → logprob: -7.560673713684082
    5. '[(' → logprob: -7.685673713684082
    6. '[]
' → logprob: -8.435673713684082
    7. '[j' → logprob: -9.685673713684082
    8. '   ' → logprob: -10.060673713684082
    9. '[
' → logprob: -10.310673713684082
    10. 'i' → logprob: -10.810673713684082

Token 304: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3897629678249359
    2. '+' → logprob: -1.2647629976272583
    3. ' +' → logprob: -3.6397628784179688
    4. ' *' → logprob: -4.389762878417969
    5. '*i' → logprob: -7.014762878417969
    6. '-' → logprob: -7.639762878417969
    7. '+i' → logprob: -8.139762878417969
    8. ' -' → logprob: -9.889762878417969
    9. '*m' → logprob: -11.139762878417969
    10. '*(' → logprob: -11.389762878417969

Token 305: ' ligne' (ID: 19583)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15384677052497864
    2. '[' → logprob: -2.6538467407226562
    3. 'm' → logprob: -3.5288467407226562
    4. 'range' → logprob: -4.653846740722656
    5. ' ' → logprob: -5.528846740722656
    6. 'k' → logprob: -5.653846740722656
    7. ' [' → logprob: -5.778846740722656
    8. 'MAX' → logprob: -5.903846740722656
    9. 'i' → logprob: -6.028846740722656
    10. '(' → logprob: -6.153846740722656

Token 306: ',
' (ID: 412)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5183773636817932
    2. ' +' → logprob: -2.1433773040771484
    3. '_len' → logprob: -2.8933773040771484
    4. '_num' → logprob: -2.8933773040771484
    5. '_size' → logprob: -2.8933773040771484
    6. '+' → logprob: -3.5183773040771484
    7. '_number' → logprob: -3.7683773040771484
    8. '_lengths' → logprob: -3.7683773040771484
    9. '_' → logprob: -4.643377304077148
    10. '_offset' → logprob: -5.143377304077148

Token 307: '   ' (ID: 271)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9068446159362793
    2. ' i' → logprob: -1.9068446159362793
    3. ' where' → logprob: -2.0318446159362793
    4. '   ' → logprob: -2.1568446159362793
    5. ' où' → logprob: -2.6568446159362793
    6. '+' → logprob: -3.0318446159362793
    7. '1' → logprob: -3.6568446159362793
    8. ' ' → logprob: -4.531844615936279
    9. 'where' → logprob: -4.656844615936279
    10. 'i' → logprob: -4.906844615936279

Token 308: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5450457334518433
    2. '   ' → logprob: -1.2950457334518433
    3. 'i' (adapté à ' i') → logprob: -3.170045852661133
    4. ' ligne' → logprob: -3.170045852661133
    5. 'ligne' → logprob: -3.545045852661133
    6. ' où' → logprob: -5.295045852661133
    7. ' ' → logprob: -5.670045852661133
    8. ' where' → logprob: -5.920045852661133
    9. ' line' → logprob: -5.920045852661133
    10. ' et' → logprob: -5.920045852661133

Token 309: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04527705907821655
    2. '+' → logprob: -3.1702771186828613
    3. ',' → logprob: -7.045277118682861
    4. ' -' → logprob: -8.045276641845703
    5. ' *' → logprob: -8.420276641845703
    6. ' ,' → logprob: -8.670276641845703
    7. '   ' → logprob: -8.670276641845703
    8. ' ' → logprob: -8.795276641845703
    9. '*' → logprob: -9.295276641845703
    10. '  ' → logprob: -10.295276641845703

Token 310: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.09984015673398972
    2. '1' → logprob: -2.5998401641845703
    3. 'line' → logprob: -4.59984016418457
    4. ' ligne' → logprob: -5.09984016418457
    5. '(' → logprob: -6.09984016418457
    6. ' (' → logprob: -7.47484016418457
    7. '(i' → logprob: -7.84984016418457
    8. 'c' → logprob: -8.22484016418457
    9. 'i' → logprob: -8.34984016418457
    10. ' ' → logprob: -8.59984016418457

Token 311: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6355853080749512
    2. '+' → logprob: -1.2605853080749512
    3. ' +' → logprob: -1.7605853080749512
    4. ' ,' → logprob: -4.510585308074951
    5. '-' → logprob: -6.635585308074951
    6. '   ' → logprob: -6.760585308074951
    7. ' -' → logprob: -7.385585308074951
    8. ',
' → logprob: -7.885585308074951
    9. ',i' → logprob: -9.01058578491211
    10. ' ' → logprob: -9.38558578491211

Token 312: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04863085597753525
    2. ' ' → logprob: -3.048630952835083
    3. '2' → logprob: -10.048630714416504
    4. ' ' → logprob: -16.04863166809082
    5. '0' → logprob: -17.04863166809082
    6. '-' → logprob: -17.73613166809082
    7. '3' → logprob: -18.04863166809082
    8. '  ' → logprob: -18.67363166809082
    9. '   ' → logprob: -18.86113166809082
    10. 's' → logprob: -19.04863166809082

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010431708069518209
    2. ' ' → logprob: -6.876043319702148
    3. '2' → logprob: -11.501043319702148
    4. 'import' → logprob: -17.12604331970215
    5. '3' → logprob: -17.25104331970215
    6. '0' → logprob: -17.87604331970215
    7. '   ' → logprob: -18.06354331970215
    8. '  ' → logprob: -18.06354331970215
    9. '-' → logprob: -18.43854331970215
    10. ' ' → logprob: -18.50104331970215

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021963704377412796
    2. ',
' → logprob: -4.521963596343994
    3. ' ,' → logprob: -4.646963596343994
    4. '   ' → logprob: -7.146963596343994
    5. ',i' → logprob: -8.896964073181152
    6. ' +' → logprob: -9.146964073181152
    7. '+' → logprob: -9.771964073181152
    8. ')' → logprob: -9.896964073181152
    9. ' ,
' → logprob: -9.896964073181152
    10. '),' → logprob: -11.521964073181152

Token 315: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03606761246919632
    2. 'i' → logprob: -3.4110677242279053
    3. '   ' → logprob: -6.036067485809326
    4. '	i' → logprob: -11.411067962646484
    5. ' and' → logprob: -12.286067962646484
    6. ' ' → logprob: -12.536067962646484
    7. ',' → logprob: -12.786067962646484
    8. ' ' → logprob: -13.286067962646484
    9. '    ' → logprob: -13.661067962646484
    10. ',i' → logprob: -13.661067962646484

Token 316: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1731477677822113
    2. '+' → logprob: -2.173147678375244
    3. ' -' → logprob: -3.173147678375244
    4. '-' → logprob: -5.798147678375244
    5. ' ' → logprob: -9.048148155212402
    6. '   ' → logprob: -10.048148155212402
    7. ',' → logprob: -10.298148155212402
    8. ' +
' → logprob: -11.048148155212402
    9. ')' → logprob: -11.423148155212402
    10. ' plus' → logprob: -11.548148155212402

Token 317: ' ligne' (ID: 19583)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2926214635372162
    2. ' ' → logprob: -1.6676214933395386
    3. 'ligne' → logprob: -3.042621374130249
    4. '1' → logprob: -4.167621612548828
    5. ' ligne' → logprob: -7.417621612548828
    6. 'line' → logprob: -7.792621612548828
    7. ' (' → logprob: -7.792621612548828
    8. 'i' → logprob: -8.917621612548828
    9. '   ' → logprob: -9.792621612548828
    10. '(i' → logprob: -9.917621612548828

Token 318: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3517078757286072
    2. '+' → logprob: -2.101707935333252
    3. ' -' → logprob: -2.851707935333252
    4. ')' → logprob: -3.476707935333252
    5. '   ' → logprob: -3.726707935333252
    6. ',' → logprob: -4.226707935333252
    7. '-' → logprob: -4.351707935333252
    8. ' ' → logprob: -4.976707935333252
    9. 'def' → logprob: -4.976707935333252
    10. '
' → logprob: -5.601707935333252

Token 319: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10031892359256744
    2. ' ' → logprob: -2.3503189086914062
    3. '+' → logprob: -9.475318908691406
    4. '2' → logprob: -11.350318908691406
    5. '0' → logprob: -11.600318908691406
    6. ' +' → logprob: -11.725318908691406
    7. ',' → logprob: -12.850318908691406
    8. '   ' → logprob: -13.350318908691406
    9. '  ' → logprob: -14.600318908691406
    10. ' ' → logprob: -14.600318908691406

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003010233340319246
    2. ' ' → logprob: -8.125301361083984
    3. '+' → logprob: -12.625301361083984
    4. '0' → logprob: -14.000301361083984
    5. '2' → logprob: -14.875301361083984
    6. '```' → logprob: -15.125301361083984
    7. '
' → logprob: -16.750301361083984
    8. '   ' → logprob: -16.750301361083984
    9. ' ' → logprob: -16.750301361083984
    10. ' +' → logprob: -17.187801361083984

Token 321: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4897240698337555
    2. ' +' → logprob: -1.489724040031433
    3. ':' → logprob: -3.1147241592407227
    4. ',' → logprob: -3.6147241592407227
    5. '
' → logprob: -3.9897241592407227
    6. ' ' → logprob: -3.9897241592407227
    7. '+' → logprob: -4.239724159240723
    8. ')' → logprob: -4.739724159240723
    9. '    
' → logprob: -5.364724159240723
    10. ']' → logprob: -5.614724159240723

Token 322: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.2119094133377075
    2. ' cave' → logprob: -1.2119094133377075
    3. ' m' → logprob: -1.9619094133377075
    4. 'ligne' → logprob: -2.461909294128418
    5. ' line' → logprob: -2.836909294128418
    6. 'line' → logprob: -3.711909294128418
    7. ' i' → logprob: -4.211909294128418
    8. ' c' → logprob: -4.211909294128418
    9. ' (' → logprob: -4.461909294128418
    10. ' l' → logprob: -4.586909294128418

Token 323: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02694975957274437
    2. '=' → logprob: -4.401949882507324
    3. '_length' → logprob: -4.526949882507324
    4. '_len' → logprob: -6.526949882507324
    5. '_num' → logprob: -7.151949882507324
    6. ' +' → logprob: -8.276949882507324
    7. ' +=' → logprob: -8.401949882507324
    8. '_size' → logprob: -8.651949882507324
    9. '_' → logprob: -8.776949882507324
    10. ' ' → logprob: -8.901949882507324

Token 324: ' l' (ID: 305)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.36236903071403503
    2. 'int' → logprob: -1.2373690605163574
    3. '(int' → logprob: -5.112369060516357
    4. ' math' → logprob: -5.737369060516357
    5. 'c' → logprob: -6.612369060516357
    6. 'math' → logprob: -6.987369060516357
    7. ' c' → logprob: -7.112369060516357
    8. ' (' → logprob: -7.487369060516357
    9. '1' → logprob: -7.987369060516357
    10. ' i' → logprob: -8.7373685836792

Token 325: ''ind' (ID: 82245)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3584483861923218
    2. 'c' → logprob: -1.7334483861923218
    3. '(int' → logprob: -1.9834483861923218
    4. ' int' → logprob: -2.1084485054016113
    5. ' (' → logprob: -2.2334485054016113
    6. '   ' → logprob: -2.8584485054016113
    7. ' i' → logprob: -3.4834485054016113
    8. 'i' → logprob: -3.7334485054016113
    9. '(c' → logprob: -3.9834485054016113
    10. 'len' → logprob: -4.233448505401611

Token 326: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0003190193965565413
    2. 'ice' → logprob: -8.625319480895996
    3. 'ent' → logprob: -9.750319480895996
    4. 'e' → logprob: -10.000319480895996
    5. 'exe' → logprob: -11.000319480895996
    6. 'expl' → logprob: -13.000319480895996
    7. '   ' → logprob: -13.000319480895996
    8. 'line' → logprob: -13.375319480895996
    9. ' ex' → logprob: -13.375319480895996
    10. 'i' → logprob: -13.500319480895996

Token 327: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08846614509820938
    2. 'de' → logprob: -3.463466167449951
    3. '_de' → logprob: -3.463466167449951
    4. '_' → logprob: -5.213466167449951
    5. ' +' → logprob: -5.338466167449951
    6. ' _' → logprob: -6.213466167449951
    7. '   ' → logprob: -6.213466167449951
    8. ' d' → logprob: -6.213466167449951
    9. 'd' → logprob: -6.838466167449951
    10. ' du' → logprob: -6.963466167449951

Token 328: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21849901974201202
    2. 'la' → logprob: -2.093498945236206
    3. 'l' → logprob: -3.343498945236206
    4. ' l' → logprob: -3.968498945236206
    5. 'the' → logprob: -4.968499183654785
    6. 'c' → logprob: -5.468499183654785
    7. ' the' → logprob: -5.468499183654785
    8. 'ligne' → logprob: -6.468499183654785
    9. 'a' → logprob: -7.718499183654785
    10. 'current' → logprob: -8.593499183654785

Token 329: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.6575763821601868
    2. 'c' → logprob: -1.282576322555542
    3. ' ligne' → logprob: -2.657576322555542
    4. ' prochaine' → logprob: -2.782576322555542
    5. 'current' → logprob: -4.032576560974121
    6. 'plus' → logprob: -4.282576560974121
    7. 'spir' → logprob: -5.407576560974121
    8. 'prem' → logprob: -5.407576560974121
    9. ' current' → logprob: -5.657576560974121
    10. 'next' → logprob: -5.907576560974121

Token 330: ' descend' (ID: 47877)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7225464582443237
    2. ' suivante' → logprob: -0.7225464582443237
    3. '   ' → logprob: -4.597546577453613
    4. '+' → logprob: -5.222546577453613
    5. ' de' → logprob: -6.222546577453613
    6. ' _' → logprob: -6.347546577453613
    7. '_c' → logprob: -6.472546577453613
    8. '_num' → logprob: -6.597546577453613
    9. ' actuelle' → logprob: -7.097546577453613
    10. ',' → logprob: -7.597546577453613

Token 331: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0015354545321315527
    2. '   ' → logprob: -7.626535415649414
    3. 'ant' → logprob: -7.626535415649414
    4. 'a' → logprob: -8.876535415649414
    5. 'ente' → logprob: -9.126535415649414
    6. '
' → logprob: -9.501535415649414
    7. ' ante' → logprob: -9.626535415649414
    8. 'e' → logprob: -10.626535415649414
    9. 'ing' → logprob: -11.126535415649414
    10. ' ' → logprob: -11.626535415649414

Token 332: '.
' (ID: 558)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20275498926639557
    2. ':' → logprob: -2.8277549743652344
    3. '   ' → logprob: -2.9527549743652344
    4. '+' → logprob: -4.202754974365234
    5. ',' → logprob: -4.202754974365234
    6. '_' → logprob: -4.702754974365234
    7. '_line' → logprob: -5.077754974365234
    8. ')' → logprob: -5.827754974365234
    9. '_num' → logprob: -5.952754974365234
    10. 'def' → logprob: -6.077754974365234

Token 333: '    
' (ID: 1944)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5323879718780518
    2. '   ' → logprob: -0.9073879718780518
    3. '
' → logprob: -6.032387733459473
    4. '    
' → logprob: -6.157387733459473
    5. ' def' → logprob: -6.657387733459473
    6. 'ligne' → logprob: -6.907387733459473
    7. ' ligne' → logprob: -7.907387733459473
    8. ' line' → logprob: -7.907387733459473
    9. 'line' → logprob: -8.157387733459473
    10. '#' → logprob: -8.657387733459473

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058908164501190186
    2. 'def' → logprob: -2.933908224105835
    3. ' line' → logprob: -7.058907985687256
    4. '    
' → logprob: -7.308907985687256
    5. ' def' → logprob: -7.808907985687256
    6. ')' → logprob: -7.808907985687256
    7. '
' → logprob: -8.433908462524414
    8. '```' → logprob: -8.683908462524414
    9. '\n' → logprob: -8.933908462524414
    10. ':' → logprob: -8.933908462524414

Token 335: ' Or' (ID: 2604)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4704117178916931
    2. 'ligne' → logprob: -1.970411777496338
    3. 'def' → logprob: -2.470411777496338
    4. ' line' → logprob: -2.970411777496338
    5. '   ' → logprob: -3.470411777496338
    6. '#' → logprob: -3.845411777496338
    7. ' ligne' → logprob: -4.845411777496338
    8. 'n' → logprob: -4.845411777496338
    9. '"""
' → logprob: -4.970411777496338
    10. 'l' → logprob: -4.970411777496338

Token 336: ' ce' (ID: 2357)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9543973803520203
    2. '   ' → logprob: -0.9543973803520203
    3. ' ligne' → logprob: -2.204397439956665
    4. ' line' → logprob: -2.954397439956665
    5. ' la' → logprob: -3.954397439956665
    6. 'ligne' → logprob: -4.829397201538086
    7. 'def' → logprob: -4.829397201538086
    8. ' ,' → logprob: -5.204397201538086
    9. 'line' → logprob: -5.204397201538086
    10. ' on' → logprob: -5.579397201538086

Token 337: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8790062069892883
    2. '_' → logprob: -2.1290061473846436
    3. ' n' → logprob: -2.3790061473846436
    4. '_line' → logprob: -2.3790061473846436
    5. '   ' → logprob: -2.7540061473846436
    6. 'n' → logprob: -2.7540061473846436
    7. ' def' → logprob: -3.5040061473846436
    8. ' _' → logprob: -3.6290061473846436
    9. 'l' → logprob: -4.129006385803223
    10. ' =' → logprob: -4.129006385803223

Token 338: ''est' (ID: 6616)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0893605947494507
    2. 'n' → logprob: -1.7143605947494507
    3. '   ' → logprob: -2.2143607139587402
    4. '_line' → logprob: -2.3393607139587402
    5. 'e' → logprob: -2.7143607139587402
    6. 'est' → logprob: -2.9643607139587402
    7. ''est' → logprob: -3.3393607139587402
    8. ' =' → logprob: -3.3393607139587402
    9. ' line' → logprob: -3.7143607139587402
    10. ' est' → logprob: -3.9643607139587402

Token 339: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.22729475796222687
    2. 'pas' → logprob: -1.6022948026657104
    3. 'plus' → logprob: -7.102294921875
    4. '_pas' → logprob: -7.852294921875
    5. ' plus' → logprob: -8.227294921875
    6. ' que' → logprob: -9.227294921875
    7. 't' → logprob: -9.977294921875
    8. ' line' → logprob: -10.227294921875
    9. ' jamais' → logprob: -10.352294921875
    10. 'line' → logprob: -10.977294921875

Token 340: ' fourni' (ID: 163696)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.26430296897888184
    2. 'pas' → logprob: -1.6393029689788818
    3. ' possible' → logprob: -4.889303207397461
    4. 'possible' → logprob: -6.014303207397461
    5. ' plus' → logprob: -6.264303207397461
    6. ' simplement' → logprob: -6.389303207397461
    7. ' terminé' → logprob: -6.389303207397461
    8. 'clair' → logprob: -6.764303207397461
    9. 'line' → logprob: -6.764303207397461
    10. '   ' → logprob: -6.764303207397461

Token 341: ' directement' (ID: 52317)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5863566994667053
    2. '   ' → logprob: -1.0863566398620605
    3. ':' → logprob: -2.7113566398620605
    4. '.' → logprob: -4.3363566398620605
    5. 'def' → logprob: -5.3363566398620605
    6. '#' → logprob: -5.5863566398620605
    7. ')' → logprob: -5.7113566398620605
    8. ',
' → logprob: -6.0863566398620605
    9. '...' → logprob: -6.0863566398620605
    10. '<|end|>' → logprob: -6.2113566398620605

Token 342: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.527138888835907
    2. '   ' → logprob: -1.4021389484405518
    3. ':' → logprob: -2.1521389484405518
    4. '<|end|>' → logprob: -4.277138710021973
    5. '...' → logprob: -5.152138710021973
    6. '.' → logprob: -5.152138710021973
    7. ' ' → logprob: -5.652138710021973
    8. ',
' → logprob: -5.902138710021973
    9. ' :' → logprob: -6.027138710021973
    10. ')' → logprob: -6.152138710021973

Token 343: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01260265614837408
    2. 'def' → logprob: -4.762602806091309
    3. '    
' → logprob: -6.262602806091309
    4. ')' → logprob: -7.262602806091309
    5. ' 
' → logprob: -8.637602806091309
    6. '
' → logprob: -8.637602806091309
    7. ',' → logprob: -8.887602806091309
    8. ' line' → logprob: -8.887602806091309
    9. ' def' → logprob: -9.137602806091309
    10. '#' → logprob: -9.762602806091309

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16754601895809174
    2. 'def' → logprob: -2.167546033859253
    3. ' line' → logprob: -4.292545795440674
    4. '#' → logprob: -4.917545795440674
    5. ' def' → logprob: -5.167545795440674
    6. ' ligne' → logprob: -5.292545795440674
    7. 'ligne' → logprob: -5.792545795440674
    8. '    
' → logprob: -6.292545795440674
    9. 'line' → logprob: -7.667545795440674
    10. ')' → logprob: -7.792545795440674

Token 345: ' Appro' (ID: 24145)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.37289366126060486
    2. '#' → logprob: -1.9978936910629272
    3. ' line' → logprob: -2.8728935718536377
    4. 'ligne' → logprob: -3.2478935718536377
    5. 'def' → logprob: -3.6228935718536377
    6. 'n' → logprob: -4.122893810272217
    7. '   ' → logprob: -4.872893810272217
    8. 'pass' → logprob: -5.247893810272217
    9. 'return' → logprob: -5.372893810272217
    10. 'l' → logprob: -5.747893810272217

Token 346: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.10829349607229233
    2. 'x' → logprob: -3.4832935333251953
    3. 'ch' → logprob: -3.6082935333251953
    4. 'xim' → logprob: -4.108293533325195
    5. '#' → logprob: -4.233293533325195
    6. 'ches' → logprob: -6.108293533325195
    7. 'fond' → logprob: -6.233293533325195
    8. 'cher' → logprob: -6.358293533325195
    9. 'visionnement' → logprob: -6.358293533325195
    10. '   ' → logprob: -6.483293533325195

Token 347: ' simpl' (ID: 15693)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8849538564682007
    2. ' =' → logprob: -1.0099538564682007
    3. '   ' → logprob: -2.2599539756774902
    4. ' :' → logprob: -2.3849539756774902
    5. 'def' → logprob: -4.50995397567749
    6. ':
' → logprob: -5.00995397567749
    7. '=' → logprob: -5.50995397567749
    8. ' :
' → logprob: -6.50995397567749
    9. ',' → logprob: -7.00995397567749
    10. '    ' → logprob: -7.63495397567749

Token 348: 'ifiée' (ID: 88506)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6279033422470093
    2. 'ifiée' → logprob: -1.2529033422470093
    3. 'ée' → logprob: -1.8779033422470093
    4. 'ifié' → logprob: -5.377903461456299
    5. 'aire' → logprob: -5.502903461456299
    6. '   ' → logprob: -5.627903461456299
    7. 'ifie' → logprob: -5.877903461456299
    8. 'é' → logprob: -6.127903461456299
    9. 'ed' → logprob: -6.627903461456299
    10. 'ified' → logprob: -6.627903461456299

Token 349: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6988478899002075
    2. 'def' → logprob: -0.9488478899002075
    3. '   ' → logprob: -2.448847770690918
    4. ':
' → logprob: -3.948847770690918
    5. ' :' → logprob: -5.698847770690918
    6. ' def' → logprob: -6.448847770690918
    7. ',' → logprob: -6.823847770690918
    8. ':def' → logprob: -7.198847770690918
    9. '#' → logprob: -7.448847770690918
    10. ' =' → logprob: -7.823847770690918

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0886075347661972
    2. ' line' → logprob: -3.0886075496673584
    3. 'line' → logprob: -4.713607311248779
    4. ' ligne' → logprob: -5.088607311248779
    5. 'ligne' → logprob: -5.463607311248779
    6. ' n' → logprob: -5.463607311248779
    7. ' next' → logprob: -5.963607311248779
    8. 'def' → logprob: -5.963607311248779
    9. ' pass' → logprob: -5.963607311248779
    10. '#' → logprob: -6.088607311248779

Token 351: ' Comme' (ID: 53252)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2579459846019745
    2. '#' → logprob: -2.632946014404297
    3. 'ligne' → logprob: -2.882946014404297
    4. ' line' → logprob: -3.132946014404297
    5. '   ' → logprob: -4.007946014404297
    6. ' #' → logprob: -5.132946014404297
    7. 'pass' → logprob: -5.132946014404297
    8. ' ligne' → logprob: -5.507946014404297
    9. 'def' → logprob: -5.632946014404297
    10. ' pass' → logprob: -6.007946014404297

Token 352: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0348577499389648
    2. 'le' → logprob: -1.6598577499389648
    3. 'la' → logprob: -2.159857749938965
    4. ' la' → logprob: -2.409857749938965
    5. ' cave' → logprob: -2.659857749938965
    6. ' le' → logprob: -3.034857749938965
    7. 'ligne' → logprob: -3.659857749938965
    8. 'i' → logprob: -3.659857749938965
    9. ' c' → logprob: -3.784857749938965
    10. ' on' → logprob: -4.409857749938965

Token 353: ' grille' (ID: 99153)
  Prédit: ' cave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cave' → logprob: -0.9285978674888611
    2. 'ligne' → logprob: -1.5535979270935059
    3. ' ligne' → logprob: -2.178597927093506
    4. 'c' → logprob: -2.803597927093506
    5. 'i' → logprob: -3.303597927093506
    6. 'import' → logprob: -3.428597927093506
    7. 'def' → logprob: -3.803597927093506
    8. 'line' → logprob: -3.928597927093506
    9. ' i' → logprob: -4.053597927093506
    10. 'num' → logprob: -4.303597927093506

Token 354: ' est' (ID: 893)
  Prédit: ' carr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carr' → logprob: -1.172845721244812
    2. ' est' → logprob: -1.297845721244812
    3. ' n' → logprob: -2.0478458404541016
    4. ' is' → logprob: -2.2978458404541016
    5. ' carré' → logprob: -3.1728458404541016
    6. 'n' → logprob: -3.4228458404541016
    7. '   ' → logprob: -3.6728458404541016
    8. ' triang' → logprob: -3.9228458404541016
    9. ' de' → logprob: -4.172845840454102
    10. ' has' → logprob: -5.172845840454102

Token 355: ' carr' (ID: 18321)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.2650179862976074
    2. 'en' → logprob: -1.7650179862976074
    3. 'un' → logprob: -1.7650179862976074
    4. 'tri' → logprob: -2.0150179862976074
    5. ' triang' → logprob: -2.8900179862976074
    6. 'c' → logprob: -3.2650179862976074
    7. 'spir' → logprob: -4.140017986297607
    8. ' en' → logprob: -4.140017986297607
    9. ' carr' → logprob: -4.265017986297607
    10. ' une' → logprob: -4.390017986297607

Token 356: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.004665680229663849
    2. 'é' → logprob: -5.379665851593018
    3. 'ee' → logprob: -11.37966537475586
    4. 'et' → logprob: -11.75466537475586
    5. 'e' → logprob: -11.87966537475586
    6. 'uée' → logprob: -13.00466537475586
    7. 'ét' → logprob: -13.25466537475586
    8. 'at' → logprob: -13.62966537475586
    9. 'rée' → logprob: -13.62966537475586
    10. 'onnée' → logprob: -14.00466537475586

Token 357: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0405479334294796
    2. ' ,' → logprob: -3.5405478477478027
    3. ' de' → logprob: -5.790547847747803
    4. ',
' → logprob: -5.915547847747803
    5. ' et' → logprob: -6.665547847747803
    6. ' (' → logprob: -6.915547847747803
    7. 'de' → logprob: -7.165547847747803
    8. ' n' → logprob: -7.665547847747803
    9. '   ' → logprob: -7.915547847747803
    10. ' ' → logprob: -8.790548324584961

Token 358: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.4621635675430298
    2. ' num' → logprob: -2.5871634483337402
    3. 'que' → logprob: -3.0871634483337402
    4. 'spir' → logprob: -3.4621634483337402
    5. 'les' → logprob: -3.7121634483337402
    6. 'le' → logprob: -3.8371634483337402
    7. ' que' → logprob: -4.08716344833374
    8. 'l' → logprob: -4.33716344833374
    9. 'non' → logprob: -4.58716344833374
    10. 'la' → logprob: -4.83716344833374

Token 359: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.973320484161377
    2. 'éro' → logprob: -1.598320484161377
    3. 'érée' → logprob: -1.723320484161377
    4. 'érique' → logprob: -2.098320484161377
    5. '   ' → logprob: -3.723320484161377
    6. 'rée' → logprob: -3.973320484161377
    7. '__' → logprob: -4.223320484161377
    8. '  ' → logprob: -4.973320484161377
    9. '**' → logprob: -5.098320484161377
    10. 'ération' → logprob: -5.348320484161377

Token 360: 'rot' (ID: 8150)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.017028428614139557
    2. 'r' → logprob: -5.017028331756592
    3. 'rot' → logprob: -5.392028331756592
    4. 'ro' → logprob: -5.517028331756592
    5. 'br' → logprob: -7.142028331756592
    6. 'érée' → logprob: -8.51702880859375
    7. 'ré' → logprob: -8.76702880859375
    8. 'é' → logprob: -9.14202880859375
    9. 'ros' → logprob: -9.76702880859375
    10. 'rang' → logprob: -9.89202880859375

Token 361: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0008772778091952205
    2. 'é' → logprob: -7.125877380371094
    3. 'ee' → logprob: -10.125877380371094
    4. 'rée' → logprob: -10.875877380371094
    5. 'ées' → logprob: -12.125877380371094
    6. 'lée' → logprob: -13.250877380371094
    7. ' é' → logprob: -13.750877380371094
    8. 'és' → logprob: -13.875877380371094
    9. 'onnée' → logprob: -14.250877380371094
    10. '   ' → logprob: -14.375877380371094

Token 362: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4181234538555145
    2. 'en' → logprob: -1.418123483657837
    3. '   ' → logprob: -3.293123483657837
    4. ' de' → logprob: -4.168123245239258
    5. ',' → logprob: -4.418123245239258
    6. 'de' → logprob: -4.793123245239258
    7. ' lin' → logprob: -5.293123245239258
    8. 'from' → logprob: -5.543123245239258
    9. 'ligne' → logprob: -6.543123245239258
    10. ' line' → logprob: -6.793123245239258

Token 363: ' spir' (ID: 27189)
  Prédit: 'spir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spir' → logprob: -0.49591028690338135
    2. ' spir' → logprob: -1.3709102869033813
    3. 'ligne' → logprob: -2.745910167694092
    4. 'c' → logprob: -3.745910167694092
    5. ' ligne' → logprob: -4.995910167694092
    6. ' ' → logprob: -5.120910167694092
    7. ' lignes' → logprob: -5.370910167694092
    8. 'ser' → logprob: -5.870910167694092
    9. ' spiral' → logprob: -5.870910167694092
    10. 'esp' → logprob: -5.995910167694092

Token 364: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.054213233292102814
    2. 'ée' → logprob: -4.179213047027588
    3. 'érale' → logprob: -4.554213047027588
    4. 'ière' → logprob: -4.804213047027588
    5. 'iale' → logprob: -5.554213047027588
    6. 'ère' → logprob: -5.554213047027588
    7. 'al' → logprob: -6.054213047027588
    8. 'ielle' → logprob: -6.054213047027588
    9. 'onnée' → logprob: -6.304213047027588
    10. 'ar' → logprob: -7.179213047027588

Token 365: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02180146612226963
    2. ',
' → logprob: -4.021801471710205
    3. ' ,' → logprob: -6.271801471710205
    4. 'de' → logprob: -7.771801471710205
    5. ' de' → logprob: -8.646800994873047
    6. '   ' → logprob: -8.896800994873047
    7. ':' → logprob: -9.021800994873047
    8. ' autour' → logprob: -9.396800994873047
    9. ',

' → logprob: -9.521800994873047
    10. ' (' → logprob: -9.896800994873047

Token 366: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6398657560348511
    2. 'part' → logprob: -1.639865756034851
    3. 'c' → logprob: -2.5148658752441406
    4. 'sens' → logprob: -3.3898658752441406
    5. ' partir' → logprob: -3.8898658752441406
    6. 'ligne' → logprob: -4.014865875244141
    7. '1' → logprob: -4.139865875244141
    8. 'la' → logprob: -4.139865875244141
    9. 'layers' → logprob: -4.139865875244141
    10. 'pas' → logprob: -4.389865875244141

Token 367: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20681242644786835
    2. 'de' → logprob: -1.7068123817443848
    3. '1' → logprob: -6.331812381744385
    4. '0' → logprob: -6.956812381744385
    5. '   ' → logprob: -6.956812381744385
    6. 'd' → logprob: -7.581812381744385
    7. ' du' → logprob: -7.706812381744385
    8. 'du' → logprob: -8.206812858581543
    9. ' ' → logprob: -8.581812858581543
    10. ' d' → logprob: -8.706812858581543

Token 368: ' centre' (ID: 13268)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1661873310804367
    2. '0' → logprob: -2.416187286376953
    3. 'c' → logprob: -3.791187286376953
    4. ' ' → logprob: -3.791187286376953
    5. 'coin' → logprob: -4.541187286376953
    6. 'centre' → logprob: -5.416187286376953
    7. ' coin' → logprob: -6.791187286376953
    8. 'center' → logprob: -7.041187286376953
    9. ' centre' → logprob: -7.416187286376953
    10. ' center' → logprob: -8.791187286376953

Token 369: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03498441353440285
    2. ',
' → logprob: -3.7849843502044678
    3. ' ,' → logprob: -5.784984588623047
    4. 'def' → logprob: -6.284984588623047
    5. ' (' → logprob: -6.409984588623047
    6. '   ' → logprob: -7.034984588623047
    7. 'de' → logprob: -7.034984588623047
    8. ' et' → logprob: -7.409984588623047
    9. '#' → logprob: -7.659984588623047
    10. ' jusqu' → logprob: -8.034984588623047

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030514247715473175
    2. '#' → logprob: -4.405514240264893
    3. ' on' → logprob: -4.780514240264893
    4. ' la' → logprob: -5.530514240264893
    5. ' il' → logprob: -5.905514240264893
    6. ' #' → logprob: -7.280514240264893
    7. ' line' → logprob: -8.03051471710205
    8. 'def' → logprob: -8.03051471710205
    9. ' nous' → logprob: -8.15551471710205
    10. 'on' → logprob: -8.78051471710205

Token 371: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2736141681671143
    2. ' line' → logprob: -1.2736141681671143
    3. 'line' → logprob: -2.0236141681671143
    4. ' #' → logprob: -2.3986141681671143
    5. '   ' → logprob: -2.5236141681671143
    6. ' n' → logprob: -3.3986141681671143
    7. ' pass' → logprob: -3.7736141681671143
    8. 'n' → logprob: -3.7736141681671143
    9. 'ligne' → logprob: -4.023613929748535
    10. ' ligne' → logprob: -4.148613929748535

Token 372: ' remarque' (ID: 183406)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5358446836471558
    2. ' continue' → logprob: -1.6608446836471558
    3. ' peux' → logprob: -2.2858448028564453
    4. ' peut' → logprob: -2.4108448028564453
    5. ' can' → logprob: -2.4108448028564453
    6. ' va' → logprob: -2.5358448028564453
    7. ' suppose' → logprob: -2.6608448028564453
    8. 'continue' → logprob: -3.5358448028564453
    9. ' considère' → logprob: -4.035844802856445
    10. ' doit' → logprob: -4.285844802856445

Token 373: ' dans' (ID: 2671)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.024530045688152313
    2. '   ' → logprob: -3.7745299339294434
    3. ' qu' → logprob: -7.774529933929443
    4. 'que' → logprob: -8.274530410766602
    5. ' that' → logprob: -8.899530410766602
    6. ' ' → logprob: -9.024530410766602
    7. '    ' → logprob: -9.024530410766602
    8. ' ' → logprob: -9.774530410766602
    9. 'that' → logprob: -10.024530410766602
    10. '  ' → logprob: -10.399530410766602

Token 374: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6438069343566895
    2. 'le' → logprob: -1.7688069343566895
    3. ' la' → logprob: -2.1438069343566895
    4. 'les' → logprob: -2.7688069343566895
    5. ' le' → logprob: -3.6438069343566895
    6. 'l' → logprob: -3.8938069343566895
    7. 'une' → logprob: -3.8938069343566895
    8. 'range' → logprob: -4.3938069343566895
    9. ' cette' → logprob: -4.7688069343566895
    10. 'code' → logprob: -5.1438069343566895

Token 375: ' problème' (ID: 35630)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.7974085211753845
    2. 'code' → logprob: -1.1724085807800293
    3. 'def' → logprob: -2.5474085807800293
    4. '#' → logprob: -2.9224085807800293
    5. ' commentaire' → logprob: -3.7974085807800293
    6. ' problème' → logprob: -4.422408580780029
    7. 'get' → logprob: -4.547408580780029
    8. 'range' → logprob: -4.922408580780029
    9. 'for' → logprob: -4.922408580780029
    10. 'c' → logprob: -5.047408580780029

Token 376: ' original' (ID: 4756)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.1884487271308899
    2. '   ' → logprob: -1.8134486675262451
    3. ',' → logprob: -5.813448905944824
    4. ' ' → logprob: -6.688448905944824
    5. '    ' → logprob: -6.938448905944824
    6. '_' → logprob: -7.563448905944824
    7. ' ' → logprob: -7.563448905944824
    8. ' that' → logprob: -7.688448905944824
    9. 'que' → logprob: -7.813448905944824
    10. 'def' → logprob: -8.438448905944824

Token 377: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.4559589624404907
    2. '   ' → logprob: -1.0809589624404907
    3. ',' → logprob: -3.830958843231201
    4. ' qu' → logprob: -6.955958843231201
    5. 'que' → logprob: -7.080958843231201
    6. '    ' → logprob: -7.080958843231201
    7. ' ' → logprob: -7.955958843231201
    8. ' that' → logprob: -8.08095932006836
    9. ' ,' → logprob: -8.20595932006836
    10. 'def' → logprob: -8.58095932006836

Token 378: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.666117787361145
    2. 'ligne' → logprob: -1.416117787361145
    3. ' la' → logprob: -2.1661176681518555
    4. 'le' → logprob: -3.0411176681518555
    5. 'the' → logprob: -3.2911176681518555
    6. 'line' → logprob: -4.4161176681518555
    7. ' the' → logprob: -4.9161176681518555
    8. ' ligne' → logprob: -5.0411176681518555
    9. 'les' → logprob: -5.7911176681518555
    10. 'c' → logprob: -6.1661176681518555

Token 379: ' num' (ID: 2269)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.42207929491996765
    2. 'line' → logprob: -1.54707932472229
    3. ' ligne' → logprob: -2.79707932472229
    4. ' line' → logprob: -3.67207932472229
    5. 'def' → logprob: -3.67207932472229
    6. 'next' → logprob: -5.547079086303711
    7. '#' → logprob: -5.672079086303711
    8. ' next' → logprob: -6.297079086303711
    9. ' def' → logprob: -6.547079086303711
    10. 'import' → logprob: -6.672079086303711

Token 380: 'é' (ID: 377)
  Prédit: 'éro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.04513987526297569
    2. 'ero' → logprob: -3.920139789581299
    3. '_num' → logprob: -4.045139789581299
    4. 'é' → logprob: -5.545139789581299
    5. 'éros' → logprob: -6.920139789581299
    6. '   ' → logprob: -7.795139789581299
    7. 'er' → logprob: -8.295140266418457
    8. '_' → logprob: -8.545140266418457
    9. 'ber' → logprob: -9.170140266418457
    10. '_line' → logprob: -9.545140266418457

Token 381: 'rotation' (ID: 27920)
  Prédit: 'rotation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotation' → logprob: -0.1015273854136467
    2. 'ro' → logprob: -2.351527452468872
    3. 'ration' → logprob: -7.476527214050293
    4. ' rotation' → logprob: -8.726527214050293
    5. 'Rotation' → logprob: -8.851527214050293
    6. 'r' → logprob: -8.851527214050293
    7. '_rotation' → logprob: -9.226527214050293
    8. 'otation' → logprob: -9.601527214050293
    9. '_' → logprob: -11.226527214050293
    10. 'ération' → logprob: -11.476527214050293

Token 382: ' correspond' (ID: 11095)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8536136150360107
    2. ' continue' → logprob: -1.8536136150360107
    3. 'continue' → logprob: -2.1036136150360107
    4. ' de' → logprob: -2.6036136150360107
    5. 'de' → logprob: -2.9786136150360107
    6. ' suit' → logprob: -3.1036136150360107
    7. ' est' → logprob: -3.1036136150360107
    8. ' suivante' → logprob: -3.3536136150360107
    9. ' augmente' → logprob: -3.4786136150360107
    10. ' se' → logprob: -3.4786136150360107

Token 383: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.06735803186893463
    2. ' aux' → logprob: -3.5673580169677734
    3. '   ' → logprob: -4.067358016967773
    4. ' au' → logprob: -4.442358016967773
    5. ' to' → logprob: -5.692358016967773
    6. ' =' → logprob: -7.192358016967773
    7. 'rait' → logprob: -7.442358016967773
    8. 'à' → logprob: -7.442358016967773
    9. ' ' → logprob: -7.567358016967773
    10. '_' → logprob: -7.817358016967773

Token 384: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0090652704238892
    2. ' une' → logprob: -1.1340652704238892
    3. 'une' → logprob: -2.6340651512145996
    4. 'int' → logprob: -3.0090651512145996
    5. ' lambda' → logprob: -3.3840651512145996
    6. ' int' → logprob: -3.5090651512145996
    7. 'la' → logprob: -3.5090651512145996
    8. 'lambda' → logprob: -3.7590651512145996
    9. '(int' → logprob: -4.6340651512146
    10. ' l' → logprob: -4.7590651512146

Token 385: ' carré' (ID: 191546)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.22482460737228394
    2. 'certain' → logprob: -3.0998246669769287
    3. 'niveau' → logprob: -3.3498246669769287
    4. 'c' → logprob: -3.8498246669769287
    5. 'dé' → logprob: -3.9748246669769287
    6. ' pattern' → logprob: -3.9748246669769287
    7. 'triangle' → logprob: -5.22482442855835
    8. 'layer' → logprob: -5.34982442855835
    9. 'offset' → logprob: -5.47482442855835
    10. 'increment' → logprob: -5.84982442855835

Token 386: ' en' (ID: 469)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.5284958481788635
    2. '_root' → logprob: -1.7784957885742188
    3. ' root' → logprob: -1.7784957885742188
    4. ')' → logprob: -4.278495788574219
    5. 'de' → logprob: -4.778495788574219
    6. '_' → logprob: -4.778495788574219
    7. ' de' → logprob: -5.153495788574219
    8. '_size' → logprob: -5.528495788574219
    9. '   ' → logprob: -5.653495788574219
    10. 's' → logprob: -5.778495788574219

Token 387: ' spir' (ID: 27189)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9449672698974609
    2. 'spir' → logprob: -1.194967269897461
    3. 'ligne' → logprob: -2.944967269897461
    4. ' spir' → logprob: -3.069967269897461
    5. 'cro' → logprob: -3.444967269897461
    6. 'rac' → logprob: -3.694967269897461
    7. 'niveau' → logprob: -4.069967269897461
    8. 'n' → logprob: -4.569967269897461
    9. 'forme' → logprob: -4.569967269897461
    10. 'di' → logprob: -4.819967269897461

Token 388: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0016203110571950674
    2. 'al' → logprob: -6.751620292663574
    3. 'e' → logprob: -9.126620292663574
    4. 'are' → logprob: -9.501620292663574
    5. 'rale' → logprob: -10.126620292663574
    6. '```' → logprob: -10.376620292663574
    7. 'le' → logprob: -10.501620292663574
    8. 'ère' → logprob: -10.751620292663574
    9. '</' → logprob: -11.251620292663574
    10. 'cale' → logprob: -11.376620292663574

Token 389: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9910123944282532
    2. ',' → logprob: -1.3660123348236084
    3. ')' → logprob: -1.8660123348236084
    4. '.' → logprob: -2.7410123348236084
    5. 'def' → logprob: -2.7410123348236084
    6. '<|end|>' → logprob: -3.2410123348236084
    7. ':' → logprob: -4.4910125732421875
    8. '...' → logprob: -4.9910125732421875
    9. '#' → logprob: -5.1160125732421875
    10. ',
' → logprob: -5.2410125732421875

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1335945427417755
    2. 'def' → logprob: -2.883594512939453
    3. ' line' → logprob: -4.383594512939453
    4. '#' → logprob: -4.383594512939453
    5. 'line' → logprob: -4.383594512939453
    6. 'ligne' → logprob: -4.758594512939453
    7. '...' → logprob: -5.383594512939453
    8. 'n' → logprob: -6.008594512939453
    9. '<|end|>' → logprob: -6.133594512939453
    10. ' ligne' → logprob: -6.383594512939453

Token 391: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1048510074615479
    2. 'line' → logprob: -1.1048510074615479
    3. ' line' → logprob: -1.9798510074615479
    4. 'def' → logprob: -2.604851007461548
    5. 'ligne' → logprob: -3.354851007461548
    6. '#' → logprob: -3.479851007461548
    7. 'n' → logprob: -3.979851007461548
    8. ' ligne' → logprob: -4.604850769042969
    9. 'layer' → logprob: -5.729850769042969
    10. '    
' → logprob: -5.729850769042969

Token 392: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3914535641670227
    2. 'do' → logprob: -2.391453504562378
    3. ' va' → logprob: -3.016453504562378
    4. 'import' → logprob: -3.141453504562378
    5. ' doit' → logprob: -3.391453504562378
    6. ' continue' → logprob: -3.516453504562378
    7. 'continue' → logprob: -4.141453742980957
    8. ' do' → logprob: -4.641453742980957
    9. ' peut' → logprob: -5.266453742980957
    10. 'n' → logprob: -5.516453742980957

Token 393: ' trouver' (ID: 23195)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.829281747341156
    2. ' approx' → logprob: -1.7042818069458008
    3. ' continuer' → logprob: -2.079281806945801
    4. 'def' → logprob: -2.454281806945801
    5. 'contin' → logprob: -3.329281806945801
    6. 'tr' → logprob: -3.579281806945801
    7. ' calcul' → logprob: -3.954281806945801
    8. ' essayer' → logprob: -4.454281806945801
    9. 'approx' → logprob: -4.454281806945801
    10. 'dé' → logprob: -4.579281806945801

Token 394: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.04655654355883598
    2. 'la' → logprob: -4.17155647277832
    3. 'line' → logprob: -4.79655647277832
    4. 'ligne' → logprob: -5.42155647277832
    5. 'l' → logprob: -5.54655647277832
    6. ' the' → logprob: -5.92155647277832
    7. ' le' → logprob: -6.04655647277832
    8. 'le' → logprob: -6.29655647277832
    9. ' line' → logprob: -6.42155647277832
    10. 'the' → logprob: -6.67155647277832

Token 395: ' "' (ID: 392)
  Prédit: 'layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'layer' → logprob: -0.9545035362243652
    2. 'ligne' → logprob: -1.3295035362243652
    3. 'line' → logprob: -2.0795035362243652
    4. ' layer' → logprob: -2.5795035362243652
    5. 'def' → logprob: -3.0795035362243652
    6. ' line' → logprob: -3.4545035362243652
    7. 'import' → logprob: -3.9545035362243652
    8. ' ligne' → logprob: -3.9545035362243652
    9. ' def' → logprob: -4.829503536224365
    10. ' side' → logprob: -5.329503536224365

Token 396: 'coord' (ID: 54943)
  Prédit: 'layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'layer' → logprob: -0.8527098894119263
    2. 'ligne' → logprob: -1.3527098894119263
    3. 'line' → logprob: -1.4777098894119263
    4. 'import' → logprob: -3.1027097702026367
    5. ' layer' → logprob: -4.977709770202637
    6. 'def' → logprob: -5.227709770202637
    7. 'side' → logprob: -5.227709770202637
    8. ' line' → logprob: -5.352709770202637
    9. 'n' → logprob: -5.602709770202637
    10. 'l' → logprob: -5.602709770202637

Token 397: 'onnée' (ID: 91161)
  Prédit: 'onnée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onnée' → logprob: -0.7116798162460327
    2. 'onnées' → logprob: -0.7116798162460327
    3. 'onné' → logprob: -4.336679935455322
    4. 'on' → logprob: -5.961679935455322
    5. 'onne' → logprob: -6.086679935455322
    6. 'onn' → logprob: -8.086679458618164
    7. 'onnes' → logprob: -10.336679458618164
    8. 'onate' → logprob: -10.461679458618164
    9. 'o' → logprob: -10.961679458618164
    10. 'oon' → logprob: -11.461679458618164

Token 398: ' verticale' (ID: 199428)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4771306812763214
    2. '"' → logprob: -1.477130651473999
    3. '_x' → logprob: -3.477130651473999
    4. 'x' → logprob: -3.852130651473999
    5. ' x' → logprob: -4.102130889892578
    6. ' de' → logprob: -4.352130889892578
    7. ' "' → logprob: -4.602130889892578
    8. '")' → logprob: -4.727130889892578
    9. ' ")' → logprob: -5.227130889892578
    10. 'de' → logprob: -5.352130889892578

Token 399: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.037262413650751114
    2. '",' → logprob: -4.037262439727783
    3. ' "' → logprob: -4.912262439727783
    4. '")' → logprob: -5.537262439727783
    5. ',"' → logprob: -5.912262439727783
    6. 's' → logprob: -6.912262439727783
    7. ',' → logprob: -7.162262439727783
    8. ' et' → logprob: -7.912262439727783
    9. ' ")' → logprob: -8.037261962890625
    10. 'e' → logprob: -8.162261962890625

Token 400: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6931666731834412
    2. ')' → logprob: -2.318166732788086
    3. 's' → logprob: -2.568166732788086
    4. '   ' → logprob: -3.068166732788086
    5. ' =' → logprob: -3.193166732788086
    6. '_' → logprob: -3.443166732788086
    7. ' de' → logprob: -3.693166732788086
    8. ' ' → logprob: -3.943166732788086
    9. ' )' → logprob: -3.943166732788086
    10. ' et' → logprob: -4.068166732788086

Token 401: ' la' (ID: 557)
  Prédit: ' cave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cave' → logprob: -0.07710494101047516
    2. 'c' → logprob: -2.7021050453186035
    3. ' la' → logprob: -5.3271050453186035
    4. ' c' → logprob: -7.3271050453186035
    5. ' i' → logprob: -7.4521050453186035
    6. 'i' → logprob: -7.9521050453186035
    7. 'l' → logprob: -8.577104568481445
    8. ' l' → logprob: -9.077104568481445
    9. 'la' → logprob: -9.202104568481445
    10. ' le' → logprob: -9.327104568481445

Token 402: ' cave' (ID: 44365)
  Prédit: ' cave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cave' → logprob: -0.3908969759941101
    2. 'c' → logprob: -1.1408970355987549
    3. ' next' → logprob: -6.390896797180176
    4. ' c' → logprob: -7.890896797180176
    5. 'i' → logprob: -8.140896797180176
    6. 'ligne' → logprob: -8.265896797180176
    7. ' i' → logprob: -8.765896797180176
    8. 'next' → logprob: -8.765896797180176
    9. ' line' → logprob: -8.890896797180176
    10. ' ligne' → logprob: -9.265896797180176

Token 403: ' en' (ID: 469)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.01276073046028614
    2. ' _' → logprob: -5.887760639190674
    3. ',' → logprob: -6.262760639190674
    4. '_' → logprob: -6.387760639190674
    5. 'num' → logprob: -6.887760639190674
    6. ')' → logprob: -7.012760639190674
    7. ' =' → logprob: -7.137760639190674
    8. ' +' → logprob: -7.762760639190674
    9. ' en' → logprob: -8.012761116027832
    10. ' (' → logprob: -8.137761116027832

Token 404: ' fonction' (ID: 17610)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.8205685019493103
    2. ' int' → logprob: -1.820568561553955
    3. 'int' → logprob: -2.070568561553955
    4. ' math' → logprob: -2.445568561553955
    5. ' calcul' → logprob: -2.945568561553955
    6. 'math' → logprob: -3.570568561553955
    7. '0' → logprob: -4.070568561553955
    8. ' i' → logprob: -4.570568561553955
    9. 'ligne' → logprob: -4.570568561553955
    10. 'i' → logprob: -4.820568561553955

Token 405: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.058813635259866714
    2. 'de' → logprob: -3.1838135719299316
    3. ' du' → logprob: -5.558813571929932
    4. '=' → logprob: -5.808813571929932
    5. ' of' → logprob: -5.933813571929932
    6. ' d' → logprob: -6.433813571929932
    7. ' =' → logprob: -6.433813571929932
    8. '   ' → logprob: -7.558813571929932
    9. 'd' → logprob: -7.808813571929932
    10. ' des' → logprob: -7.933813571929932

Token 406: ' son' (ID: 2391)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1697502136230469
    2. 'int' → logprob: -1.6697502136230469
    3. 'l' → logprob: -2.044750213623047
    4. ' int' → logprob: -2.169750213623047
    5. 'i' → logprob: -3.044750213623047
    6. ' i' → logprob: -3.169750213623047
    7. ' l' → logprob: -3.294750213623047
    8. ' math' → logprob: -3.294750213623047
    9. 'la' → logprob: -3.669750213623047
    10. 'c' → logprob: -4.169750213623047

Token 407: ' numéro' (ID: 65036)
  Prédit: ' numéro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numéro' → logprob: -0.635623037815094
    2. 'num' → logprob: -1.2606229782104492
    3. 'ligne' → logprob: -3.385622978210449
    4. 'numero' → logprob: -3.385622978210449
    5. 'c' → logprob: -3.885622978210449
    6. 'n' → logprob: -4.135622978210449
    7. 'niveau' → logprob: -4.260622978210449
    8. ' position' → logprob: -4.385622978210449
    9. 'position' → logprob: -4.510622978210449
    10. ' number' → logprob: -4.635622978210449

Token 408: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7657137513160706
    2. ')' → logprob: -2.015713691711426
    3. ',' → logprob: -2.265713691711426
    4. ':' → logprob: -2.390713691711426
    5. ' ' → logprob: -3.140713691711426
    6. 'def' → logprob: -3.515713691711426
    7. '<|end|>' → logprob: -3.640713691711426
    8. ' ,' → logprob: -4.265713691711426
    9. '.' → logprob: -4.265713691711426
    10. ' )' → logprob: -4.515713691711426

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4055944085121155
    2. 'def' → logprob: -1.5305943489074707
    3. ')' → logprob: -3.4055943489074707
    4. '    
' → logprob: -4.280594348907471
    5. ' ' → logprob: -4.530594348907471
    6. ' 
' → logprob: -4.905594348907471
    7. '
' → logprob: -4.905594348907471
    8. ',' → logprob: -5.155594348907471
    9. '<|end|>' → logprob: -5.155594348907471
    10. ')
' → logprob: -5.530594348907471

Token 410: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33194199204444885
    2. 'def' → logprob: -1.4569419622421265
    3. '    
' → logprob: -4.706942081451416
    4. ' line' → logprob: -5.081942081451416
    5. ')' → logprob: -5.581942081451416
    6. '
' → logprob: -5.956942081451416
    7. ' ligne' → logprob: -5.956942081451416
    8. 'n' → logprob: -6.081942081451416
    9. 'ligne' → logprob: -6.206942081451416
    10. ' 
' → logprob: -6.206942081451416

Token 411: ' c' (ID: 274)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7531965970993042
    2. 'import' → logprob: -1.7531965970993042
    3. '   ' → logprob: -2.0031967163085938
    4. '#' → logprob: -2.6281967163085938
    5. 'return' → logprob: -3.7531967163085938
    6. ' return' → logprob: -3.7531967163085938
    7. ' #' → logprob: -3.8781967163085938
    8. ' def' → logprob: -4.378196716308594
    9. ' la' → logprob: -4.628196716308594
    10. ' il' → logprob: -4.878196716308594

Token 412: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.4182161092758179
    2. 'e' → logprob: -1.5432161092758179
    3. '#' → logprob: -1.6682161092758179
    4. '   ' → logprob: -1.7932161092758179
    5. 'def' → logprob: -3.6682162284851074
    6. 'urrent' → logprob: -3.6682162284851074
    7. 'on' → logprob: -4.043216228485107
    8. 'ould' → logprob: -4.293216228485107
    9. 'est' → logprob: -4.668216228485107
    10. ' n' → logprob: -4.668216228485107

Token 413: ' complexe' (ID: 78615)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.566091001033783
    2. ' complexe' → logprob: -1.9410910606384277
    3. ' compliqué' → logprob: -2.5660910606384277
    4. ' trop' → logprob: -2.8160910606384277
    5. ' assez' → logprob: -3.5660910606384277
    6. ' complex' → logprob: -3.6910910606384277
    7. ' un' → logprob: -4.316091060638428
    8. 'tr' → logprob: -4.566091060638428
    9. 'com' → logprob: -4.691091060638428
    10. 't' → logprob: -4.941091060638428

Token 414: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6036055088043213
    2. '...' → logprob: -1.4786055088043213
    3. '<|end|>' → logprob: -1.7286055088043213
    4. '.' → logprob: -3.9786055088043213
    5. ',' → logprob: -4.353605270385742
    6. '<|end|>' → logprob: -5.228605270385742
    7. ')' → logprob: -5.978605270385742
    8. '#' → logprob: -6.353605270385742
    9. 'def' → logprob: -6.853605270385742
    10. '
' → logprob: -6.978605270385742

Token 415: ' 
    
' (ID: 76267)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011227133683860302
    2. '<|end|>' → logprob: -6.511227130889893
    3. '    
' → logprob: -6.636227130889893
    4. 'def' → logprob: -6.761227130889893
    5. '...' → logprob: -6.761227130889893
    6. ')' → logprob: -6.886227130889893
    7. ' ' → logprob: -7.136227130889893
    8. ' 
' → logprob: -7.136227130889893
    9. '#' → logprob: -7.511227130889893
    10. '    ' → logprob: -7.886227130889893

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009650428779423237
    2. '    
' → logprob: -5.134650230407715
    3. '#' → logprob: -6.634650230407715
    4. '
' → logprob: -7.259650230407715
    5. 'def' → logprob: -7.259650230407715
    6. 'ligne' → logprob: -8.384650230407715
    7. ' 
' → logprob: -8.509650230407715
    8. 'line' → logprob: -9.634650230407715
    9. '...' → logprob: -9.884650230407715
    10. ')' → logprob: -9.884650230407715

Token 417: ' Heure' (ID: 176519)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6900040507316589
    2. 'line' → logprob: -1.6900041103363037
    3. ' line' → logprob: -2.4400041103363037
    4. '   ' → logprob: -2.5650041103363037
    5. 'n' → logprob: -2.9400041103363037
    6. 'ligne' → logprob: -4.190003871917725
    7. ' #' → logprob: -4.315003871917725
    8. 'return' → logprob: -4.440003871917725
    9. ' n' → logprob: -4.690003871917725
    10. 'size' → logprob: -5.315003871917725

Token 418: 'usement' (ID: 30201)
  Prédit: 'usement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usement' → logprob: -0.5282357335090637
    2. 'ure' → logprob: -1.528235673904419
    3. 'ur' → logprob: -2.153235673904419
    4. 'ment' → logprob: -4.028235912322998
    5. 'space' → logprob: -4.653235912322998
    6. '   ' → logprob: -4.903235912322998
    7. 'ux' → logprob: -5.028235912322998
    8. 'urement' → logprob: -5.153235912322998
    9. 'def' → logprob: -5.278235912322998
    10. 'use' → logprob: -5.403235912322998

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007427607662975788
    2. '   ' → logprob: -5.25742769241333
    3. ' ,' → logprob: -6.75742769241333
    4. ' que' → logprob: -7.75742769241333
    5. '    ' → logprob: -9.007427215576172
    6. 'def' → logprob: -9.132427215576172
    7. 'return' → logprob: -9.757427215576172
    8. '    
' → logprob: -10.132427215576172
    9. ' on' → logprob: -10.382427215576172
    10. ' for' → logprob: -10.757427215576172

Token 420: ' ce' (ID: 2357)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9954224228858948
    2. 'ligne' → logprob: -1.49542236328125
    3. ' ligne' → logprob: -1.49542236328125
    4. 'line' → logprob: -1.87042236328125
    5. 'import' → logprob: -5.24542236328125
    6. '#' → logprob: -5.37042236328125
    7. ' n' → logprob: -5.49542236328125
    8. ' on' → logprob: -5.87042236328125
    9. '   ' → logprob: -6.12042236328125
    10. 'l' → logprob: -6.24542236328125

Token 421: ' problème' (ID: 35630)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9011868834495544
    2. ' semble' → logprob: -1.4011869430541992
    3. ' m' → logprob: -2.401186943054199
    4. ' manque' → logprob: -2.526186943054199
    5. 'm' → logprob: -2.651186943054199
    6. ' n' → logprob: -3.651186943054199
    7. ' code' → logprob: -4.026186943054199
    8. 'n' → logprob: -4.401186943054199
    9. 'est' → logprob: -4.401186943054199
    10. ' reste' → logprob: -5.151186943054199

Token 422: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.288513720035553
    2. '   ' → logprob: -2.163513660430908
    3. ' =' → logprob: -2.913513660430908
    4. '=' → logprob: -4.163513660430908
    5. ' n' → logprob: -4.288513660430908
    6. ' continues' → logprob: -4.788513660430908
    7. 'n' → logprob: -5.663513660430908
    8. 'def' → logprob: -5.788513660430908
    9. '_continue' → logprob: -6.038513660430908
    10. 'continue' → logprob: -6.288513660430908

Token 423: ' classique' (ID: 76895)
  Prédit: 'simpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simpl' → logprob: -0.896079421043396
    2. 'class' → logprob: -2.1460795402526855
    3. ' connu' → logprob: -2.3960795402526855
    4. ' simpl' → logprob: -2.6460795402526855
    5. ' inspir' → logprob: -3.3960795402526855
    6. 'd' → logprob: -3.3960795402526855
    7. 'une' → logprob: -3.8960795402526855
    8. ' classique' → logprob: -3.8960795402526855
    9. 'part' → logprob: -4.1460795402526855
    10. 'import' → logprob: -4.3960795402526855

Token 424: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27551037073135376
    2. 'def' → logprob: -1.525510311126709
    3. ':' → logprob: -4.400510311126709
    4. ',' → logprob: -4.775510311126709
    5. ':
' → logprob: -7.775510311126709
    6. '    
' → logprob: -7.900510311126709
    7. '.' → logprob: -8.025510787963867
    8. ' def' → logprob: -8.275510787963867
    9. ' and' → logprob: -8.400510787963867
    10. '...' → logprob: -9.025510787963867

Token 425: ' ce' (ID: 2357)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0173296928405762
    2. 'les' → logprob: -1.0173296928405762
    3. 'l' → logprob: -2.267329692840576
    4. 'la' → logprob: -2.392329692840576
    5. 'ce' → logprob: -3.767329692840576
    6. 'd' → logprob: -4.267329692840576
    7. 'des' → logprob: -5.142329692840576
    8. 'Code' → logprob: -5.267329692840576
    9. 'une' → logprob: -5.517329692840576
    10. 'c' → logprob: -5.517329692840576

Token 426: ' concours' (ID: 79362)
  Prédit: ' contexte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contexte' → logprob: -1.2342649698257446
    2. 'def' → logprob: -1.6092649698257446
    3. 'cas' → logprob: -2.484264850616455
    4. 'code' → logprob: -2.484264850616455
    5. 'pro' → logprob: -2.859264850616455
    6. ' code' → logprob: -2.984264850616455
    7. 'jeu' → logprob: -2.984264850616455
    8. ' cas' → logprob: -3.484264850616455
    9. '#' → logprob: -3.609264850616455
    10. ' problème' → logprob: -3.859264850616455

Token 427: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42239701747894287
    2. 'def' → logprob: -1.1723970174789429
    3. ',' → logprob: -4.422397136688232
    4. ':' → logprob: -4.547397136688232
    5. '.' → logprob: -5.297397136688232
    6. ')' → logprob: -5.922397136688232
    7. '    
' → logprob: -6.422397136688232
    8. '...' → logprob: -6.672397136688232
    9. '#' → logprob: -7.797397136688232
    10. ' def' → logprob: -8.297396659851074

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5252429246902466
    2. 'def' → logprob: -0.9002429246902466
    3. '    
' → logprob: -7.275242805480957
    4. ' line' → logprob: -8.150242805480957
    5. ' def' → logprob: -8.650242805480957
    6. ')' → logprob: -8.650242805480957
    7. 'ligne' → logprob: -8.650242805480957
    8. '#' → logprob: -8.775242805480957
    9. '```' → logprob: -9.650242805480957
    10. ' ligne' → logprob: -9.650242805480957

Token 429: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46370917558670044
    2. 'line' → logprob: -1.5887091159820557
    3. 'ligne' → logprob: -2.9637091159820557
    4. 'def' → logprob: -3.0887091159820557
    5. ' line' → logprob: -3.4637091159820557
    6. 'n' → logprob: -4.213709354400635
    7. '#' → logprob: -4.713709354400635
    8. ' ligne' → logprob: -5.463709354400635
    9. 'l' → logprob: -6.213709354400635
    10. 'import' → logprob: -6.588709354400635

Token 430: ' relation' (ID: 18075)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2795323133468628
    2. '#' → logprob: -2.9045324325561523
    3. ' ligne' → logprob: -2.9045324325561523
    4. 'ligne' → logprob: -3.2795324325561523
    5. ' def' → logprob: -3.6545324325561523
    6. ' suite' → logprob: -5.029532432556152
    7. ' line' → logprob: -5.154532432556152
    8. ' next' → logprob: -5.279532432556152
    9. ' prochaine' → logprob: -5.404532432556152
    10. 'line' → logprob: -5.529532432556152

Token 431: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5672410726547241
    2. ' de' → logprob: -1.5672410726547241
    3. '_line' → logprob: -1.9422410726547241
    4. ' entre' → logprob: -2.4422411918640137
    5. ' suivante' → logprob: -2.8172411918640137
    6. ' =' → logprob: -2.9422411918640137
    7. 'def' → logprob: -3.4422411918640137
    8. ' between' → logprob: -3.5672411918640137
    9. 'line' → logprob: -3.8172411918640137
    10. 'de' → logprob: -3.9422411918640137

Token 432: ' un' (ID: 537)
  Prédit: ' cave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cave' → logprob: -0.8886116147041321
    2. 'c' → logprob: -1.1386115550994873
    3. 'ligne' → logprob: -2.1386115550994873
    4. ' la' → logprob: -3.7636115550994873
    5. ' ligne' → logprob: -3.7636115550994873
    6. 'i' → logprob: -4.263611793518066
    7. 'l' → logprob: -4.388611793518066
    8. 'm' → logprob: -4.513611793518066
    9. ' caves' → logprob: -4.888611793518066
    10. ' m' → logprob: -4.888611793518066

Token 433: ' noe' (ID: 49921)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7273122072219849
    2. 'c' → logprob: -1.4773122072219849
    3. 'i' → logprob: -2.6023120880126953
    4. '_' → logprob: -2.8523120880126953
    5. ' cave' → logprob: -3.1023120880126953
    6. 'l' → logprob: -3.9773120880126953
    7. ' line' → logprob: -4.352312088012695
    8. '_c' → logprob: -4.602312088012695
    9. 'ligne' → logprob: -4.602312088012695
    10. ' c' → logprob: -4.602312088012695

Token 434: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.24178087711334229
    2. 'u' → logprob: -2.4917807579040527
    3. ' ' → logprob: -3.6167807579040527
    4. '=' → logprob: -3.7417807579040527
    5. 'n' → logprob: -3.7417807579040527
    6. ',' → logprob: -3.9917807579040527
    7. 'd' → logprob: -4.866780757904053
    8. '   ' → logprob: -5.116780757904053
    9. 't' → logprob: -5.366780757904053
    10. 'm' → logprob: -5.616780757904053

Token 435: ' i' (ID: 575)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.43113481998443604
    2. ' =' → logprob: -2.4311347007751465
    3. ' et' → logprob: -2.8061347007751465
    4. '   ' → logprob: -3.1811347007751465
    5. 'et' → logprob: -3.6811347007751465
    6. ',' → logprob: -3.6811347007751465
    7. ' +' → logprob: -4.1811347007751465
    8. '+' → logprob: -4.4311347007751465
    9. ' _' → logprob: -4.5561347007751465
    10. ' de' → logprob: -4.8061347007751465

Token 436: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6899693608283997
    2. ' +' → logprob: -1.3149693012237549
    3. ' =' → logprob: -3.064969301223755
    4. ',' → logprob: -3.189969301223755
    5. '   ' → logprob: -3.564969301223755
    6. '_num' → logprob: -3.939969301223755
    7. '_line' → logprob: -4.564969539642334
    8. ' and' → logprob: -4.564969539642334
    9. '=' → logprob: -4.814969539642334
    10. ' et' → logprob: -4.939969539642334

Token 437: ' ses' (ID: 6707)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8577849864959717
    2. ' i' → logprob: -1.7327849864959717
    3. 'i' → logprob: -2.3577849864959717
    4. ' sa' → logprob: -2.7327849864959717
    5. 'la' → logprob: -2.8577849864959717
    6. 'm' → logprob: -3.3577849864959717
    7. ' ses' → logprob: -3.6077849864959717
    8. ' m' → logprob: -4.232785224914551
    9. 'le' → logprob: -4.232785224914551
    10. ' les' → logprob: -4.357785224914551

Token 438: ' enfants' (ID: 24681)
  Prédit: ' enfants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enfants' → logprob: -1.0477478504180908
    2. 'en' → logprob: -1.2977478504180908
    3. 'children' → logprob: -1.5477478504180908
    4. 'ligne' → logprob: -2.172747850418091
    5. '3' → logprob: -4.047747611999512
    6. 'line' → logprob: -5.672747611999512
    7. '1' → logprob: -5.672747611999512
    8. 'l' → logprob: -5.922747611999512
    9. 'desc' → logprob: -6.047747611999512
    10. ' children' → logprob: -6.047747611999512

Token 439: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7304419875144958
    2. ' =' → logprob: -0.8554419875144958
    3. 'est' → logprob: -3.7304420471191406
    4. '=' → logprob: -4.105442047119141
    5. 's' → logprob: -4.355442047119141
    6. ':' → logprob: -4.355442047119141
    7. '   ' → logprob: -4.480442047119141
    8. ' n' → logprob: -5.605442047119141
    9. ' is' → logprob: -6.980442047119141
    10. ',' → logprob: -7.105442047119141

Token 440: ' :
' (ID: 10039)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4155111610889435
    2. ' m' → logprob: -1.790511131286621
    3. '"' → logprob: -2.040511131286621
    4. '   ' → logprob: -4.540511131286621
    5. 'lambda' → logprob: -4.790511131286621
    6. ' lambda' → logprob: -5.165511131286621
    7. ' "' → logprob: -5.290511131286621
    8. ' (' → logprob: -6.165511131286621
    9. ':' → logprob: -6.540511131286621
    10. 'i' → logprob: -6.790511131286621

Token 441: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34928277134895325
    2. 'ligne' → logprob: -2.349282741546631
    3. 'line' → logprob: -2.974282741546631
    4. ' ligne' → logprob: -3.599282741546631
    5. ' line' → logprob: -3.599282741546631
    6. 'm' → logprob: -3.974282741546631
    7. '[' → logprob: -4.224282741546631
    8. ' m' → logprob: -4.224282741546631
    9. 'c' → logprob: -4.599282741546631
    10. '[
' → logprob: -4.974282741546631

Token 442: ' Les' (ID: 7029)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.6912404894828796
    2. 'line' → logprob: -1.4412405490875244
    3. '   ' → logprob: -2.4412405490875244
    4. 'm' → logprob: -2.5662405490875244
    5. 'i' → logprob: -4.066240310668945
    6. ' ligne' → logprob: -4.316240310668945
    7. '[
' → logprob: -4.566240310668945
    8. 'c' → logprob: -4.691240310668945
    9. '[' → logprob: -4.816240310668945
    10. '[m' → logprob: -4.941240310668945

Token 443: ' enfants' (ID: 24681)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.019080886617302895
    2. 'en' → logprob: -4.894081115722656
    3. 'line' → logprob: -5.519081115722656
    4. 'ligne' → logprob: -5.769081115722656
    5. 'l' → logprob: -7.394081115722656
    6. 'i' → logprob: -7.519081115722656
    7. ' enfants' → logprob: -7.519081115722656
    8. 'child' → logprob: -7.644081115722656
    9. 'next' → logprob: -7.894081115722656
    10. '   ' → logprob: -8.144081115722656

Token 444: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164921827614307
    2. 's' → logprob: -5.014164924621582
    3. '=' → logprob: -5.514164924621582
    4. ' sont' → logprob: -5.889164924621582
    5. '   ' → logprob: -8.889164924621582
    6. '[i' → logprob: -9.014164924621582
    7. ' i' → logprob: -9.514164924621582
    8. ':' → logprob: -9.639164924621582
    9. ' de' → logprob: -10.389164924621582
    10. '=i' → logprob: -10.514164924621582

Token 445: ' :' (ID: 712)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12961404025554657
    2. '[c' → logprob: -2.1296141147613525
    3. ' [' → logprob: -6.629613876342773
    4. '[' → logprob: -6.629613876342773
    5. 'i' → logprob: -11.504613876342773
    6. '   ' → logprob: -12.004613876342773
    7. '[l' → logprob: -12.004613876342773
    8. '[
' → logprob: -12.129613876342773
    9. 'c' → logprob: -12.254613876342773
    10. '{i' → logprob: -12.879613876342773

Token 446: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5793576240539551
    2. '[c' → logprob: -0.8293576240539551
    3. '[' → logprob: -6.704357624053955
    4. ' [' → logprob: -6.954357624053955
    5. 'i' → logprob: -7.454357624053955
    6. 'c' → logprob: -7.704357624053955
    7. '[
' → logprob: -9.329357147216797
    8. '   ' → logprob: -9.329357147216797
    9. ' i' → logprob: -12.579357147216797
    10. '```' → logprob: -12.704357147216797

Token 447: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38842684030532837
    2. ' +' → logprob: -1.1384267807006836
    3. '+i' → logprob: -6.513426780700684
    4. ',' → logprob: -10.138426780700684
    5. '+l' → logprob: -11.388426780700684
    6. '+,' → logprob: -12.263426780700684
    7. ' ,' → logprob: -12.263426780700684
    8. ' plus' → logprob: -13.013426780700684
    9. '+n' → logprob: -13.513426780700684
    10. '+m' → logprob: -14.013426780700684

Token 448: ' ligne' (ID: 19583)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5977332592010498
    2. '(m' → logprob: -1.4727332592010498
    3. 'ligne' → logprob: -2.34773325920105
    4. '(int' → logprob: -3.59773325920105
    5. '(' → logprob: -3.72273325920105
    6. '1' → logprob: -3.84773325920105
    7. 'line' → logprob: -4.597733497619629
    8. 'l' → logprob: -4.847733497619629
    9. 'int' → logprob: -5.097733497619629
    10. '(l' → logprob: -5.347733497619629

Token 449: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.058075256645679474
    2. '+' → logprob: -3.683075189590454
    3. ',' → logprob: -3.683075189590454
    4. '   ' → logprob: -5.933075428009033
    5. ' ,' → logprob: -6.933075428009033
    6. '_line' → logprob: -7.308075428009033
    7. '_num' → logprob: -7.808075428009033
    8. ' -' → logprob: -8.683074951171875
    9. '[line' → logprob: -8.933074951171875
    10. ' ' → logprob: -9.183074951171875

Token 450: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39492306113243103
    2. ' i' → logprob: -1.1449230909347534
    3. '   ' → logprob: -4.894923210144043
    4. 'ligne' → logprob: -8.144923210144043
    5. ' ' → logprob: -9.644923210144043
    6. ' ligne' → logprob: -10.394923210144043
    7. ',' → logprob: -10.644923210144043
    8. '    ' → logprob: -10.644923210144043
    9. '"' → logprob: -10.644923210144043
    10. '	i' → logprob: -11.144923210144043

Token 451: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11395984143018723
    2. '+' → logprob: -2.238959789276123
    3. ' -' → logprob: -6.988959789276123
    4. '-' → logprob: -9.113960266113281
    5. ' ' → logprob: -9.988960266113281
    6. ',' → logprob: -10.238960266113281
    7. ' ,' → logprob: -11.738960266113281
    8. '   ' → logprob: -12.363960266113281
    9. ' i' → logprob: -12.988960266113281
    10. '+i' → logprob: -13.238960266113281

Token 452: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.006377240642905235
    2. '1' → logprob: -5.631377220153809
    3. 'line' → logprob: -6.256377220153809
    4. ' ligne' → logprob: -7.256377220153809
    5. '(' → logprob: -8.881377220153809
    6. 'l' → logprob: -13.131377220153809
    7. '(line' → logprob: -13.756377220153809
    8. 'lin' → logprob: -14.006377220153809
    9. '
' → logprob: -14.131377220153809
    10. '(l' → logprob: -14.131377220153809

Token 453: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2255496382713318
    2. ' -' → logprob: -1.9755496978759766
    3. '+' → logprob: -3.2255496978759766
    4. ',' → logprob: -4.600549697875977
    5. ' +' → logprob: -4.600549697875977
    6. '   ' → logprob: -5.975549697875977
    7. ' ' → logprob: -8.225549697875977
    8. ' ,' → logprob: -8.475549697875977
    9. '```' → logprob: -9.600549697875977
    10. '  ' → logprob: -9.975549697875977

Token 454: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.500431060791016
    4. '```' → logprob: -17.000431060791016
    5. '  ' → logprob: -17.250431060791016
    6. ',' → logprob: -17.500431060791016
    7. '
' → logprob: -17.750431060791016
    8. ' ' → logprob: -18.937931060791016
    9. '2' → logprob: -19.375431060791016
    10. '    ' → logprob: -19.437931060791016

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -18.1250057220459
    4. '   ' → logprob: -18.2500057220459
    5. '
' → logprob: -18.3750057220459
    6. '```' → logprob: -19.3750057220459
    7. '  ' → logprob: -20.6250057220459
    8. 'import' → logprob: -20.6250057220459
    9. '

' → logprob: -21.1250057220459
    10. '0' → logprob: -21.1250057220459

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05687142163515091
    2. '   ' → logprob: -3.1818714141845703
    3. ',
' → logprob: -4.80687141418457
    4. ' ,' → logprob: -6.55687141418457
    5. ' +' → logprob: -6.68187141418457
    6. '+' → logprob: -7.18187141418457
    7. ']' → logprob: -7.30687141418457
    8. ')' → logprob: -7.43187141418457
    9. '}' → logprob: -8.43187141418457
    10. '```' → logprob: -8.80687141418457

Token 457: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4297129213809967
    2. 'i' → logprob: -1.0547128915786743
    3. '   ' → logprob: -6.929712772369385
    4. ' ' → logprob: -11.554713249206543
    5. '	i' → logprob: -11.804713249206543
    6. '    ' → logprob: -12.054713249206543
    7. ' ' → logprob: -12.179713249206543
    8. '  ' → logprob: -13.929713249206543
    9. ',' → logprob: -13.929713249206543
    10. ')' → logprob: -14.179713249206543

Token 458: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1427026391029358
    2. '+' → logprob: -2.017702579498291
    3. ' -' → logprob: -11.39270305633545
    4. '   ' → logprob: -12.14270305633545
    5. ' ' → logprob: -12.26770305633545
    6. '-' → logprob: -12.89270305633545
    7. ' +
' → logprob: -14.26770305633545
    8. '    ' → logprob: -14.39270305633545
    9. '[' → logprob: -14.76770305633545
    10. '  ' → logprob: -15.01770305633545

Token 459: ' ligne' (ID: 19583)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008559550042264163
    2. ' ' → logprob: -7.250855922698975
    3. 'ligne' → logprob: -8.875856399536133
    4. 'line' → logprob: -13.125856399536133
    5. '```' → logprob: -13.625856399536133
    6. '0' → logprob: -13.750856399536133
    7. ' ligne' → logprob: -14.000856399536133
    8. '   ' → logprob: -14.500856399536133
    9. '
' → logprob: -15.625856399536133
    10. '2' → logprob: -16.000856399536133

Token 460: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.635243833065033
    2. '+' → logprob: -0.760243833065033
    3. ' -' → logprob: -6.760243892669678
    4. '-' → logprob: -6.760243892669678
    5. '<|end|>' → logprob: -9.38524341583252
    6. 'def' → logprob: -10.26024341583252
    7. ' +
' → logprob: -10.63524341583252
    8. ' ' → logprob: -10.76024341583252
    9. '   ' → logprob: -10.76024341583252
    10. ',' → logprob: -11.38524341583252

Token 461: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.051349326968193054
    2. ' ' → logprob: -3.176349401473999
    3. '2' → logprob: -5.42634916305542
    4. '0' → logprob: -5.55134916305542
    5. '   ' → logprob: -11.426349639892578
    6. '```' → logprob: -11.426349639892578
    7. '  ' → logprob: -12.301349639892578
    8. '
' → logprob: -13.301349639892578
    9. '.' → logprob: -13.551349639892578
    10. '	' → logprob: -14.176349639892578

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002184045733883977
    2. ' ' → logprob: -6.25218391418457
    3. '0' → logprob: -8.62718391418457
    4. '2' → logprob: -9.50218391418457
    5. '```' → logprob: -14.00218391418457
    6. '   ' → logprob: -15.12718391418457
    7. '  ' → logprob: -15.50218391418457
    8. '
' → logprob: -15.87718391418457
    9. ',' → logprob: -16.75218391418457
    10. '+' → logprob: -17.00218391418457

Token 463: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11654222011566162
    2. ':' → logprob: -3.366542339324951
    3. 'def' → logprob: -3.616542339324951
    4. '
' → logprob: -4.616542339324951
    5. '\n' → logprob: -5.116542339324951
    6. '    
' → logprob: -5.241542339324951
    7. '_line' → logprob: -5.241542339324951
    8. '[line' → logprob: -5.616542339324951
    9. ',' → logprob: -5.741542339324951
    10. ' +' → logprob: -5.991542339324951

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006440380122512579
    2. 'def' → logprob: -6.006440162658691
    3. '\n' → logprob: -7.006440162658691
    4. '<|end|>' → logprob: -7.256440162658691
    5. '    
' → logprob: -7.881440162658691
    6. ':' → logprob: -7.881440162658691
    7. '.' → logprob: -8.131440162658691
    8. ')' → logprob: -8.256440162658691
    9. '
' → logprob: -8.506440162658691
    10. ',' → logprob: -8.631440162658691

Token 465: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001926374970935285
    2. 'def' → logprob: -7.126926422119141
    3. '    
' → logprob: -7.626926422119141
    4. '\n' → logprob: -8.75192642211914
    5. ')' → logprob: -9.87692642211914
    6. '<|end|>' → logprob: -9.87692642211914
    7. '
' → logprob: -10.00192642211914
    8. ':' → logprob: -10.12692642211914
    9. '	' → logprob: -10.62692642211914
    10. ',' → logprob: -10.62692642211914

Token 466: ' "' (ID: 392)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.1297551840543747
    2. 'line' → logprob: -2.7547552585601807
    3. ' ligne' → logprob: -3.0047552585601807
    4. '   ' → logprob: -5.004755020141602
    5. ' line' → logprob: -6.754755020141602
    6. 'l' → logprob: -7.754755020141602
    7. ' ' → logprob: -9.879755020141602
    8. 'linie' → logprob: -10.254755020141602
    9. ' ' → logprob: -11.004755020141602
    10. 'linha' → logprob: -11.379755020141602

Token 467: 'ligne' (ID: 94660)
  Prédit: 'ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.10126079618930817
    2. 'line' → logprob: -2.3512609004974365
    3. ' ligne' → logprob: -7.351260662078857
    4. 'l' → logprob: -8.851261138916016
    5. 'm' → logprob: -9.101261138916016
    6. 'c' → logprob: -10.101261138916016
    7. 'len' → logprob: -10.726261138916016
    8. 'row' → logprob: -11.601261138916016
    9. 'linie' → logprob: -11.601261138916016
    10. 'linha' → logprob: -11.726261138916016

Token 468: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0129328966140747
    2. '_line' → logprob: -1.6379328966140747
    3. '_length' → logprob: -1.7629328966140747
    4. '_len' → logprob: -1.8879328966140747
    5. '_num' → logprob: -2.512932777404785
    6. ' =' → logprob: -4.137932777404785
    7. '_size' → logprob: -4.637932777404785
    8. '_index' → logprob: -5.387932777404785
    9. '_' → logprob: -6.637932777404785
    10. '_l' → logprob: -6.762932777404785

Token 469: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013412326574325562
    2. '=' → logprob: -4.7634124755859375
    3. '_length' → logprob: -6.2634124755859375
    4. '_line' → logprob: -7.2634124755859375
    5. '   ' → logprob: -8.013412475585938
    6. '_size' → logprob: -8.013412475585938
    7. '=int' → logprob: -8.138412475585938
    8. '_num' → logprob: -8.263412475585938
    9. '_len' → logprob: -8.263412475585938
    10. ' is' → logprob: -9.388412475585938

Token 470: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6021990776062012
    2. ' à' → logprob: -0.9771990776062012
    3. ' au' → logprob: -3.102199077606201
    4. ' to' → logprob: -4.352199077606201
    5. '=' → logprob: -4.477199077606201
    6. ' ' → logprob: -6.352199077606201
    7. ' aux' → logprob: -6.852199077606201
    8. '   ' → logprob: -6.977199077606201
    9. '_to' → logprob: -7.227199077606201
    10. ' a' → logprob: -7.852199077606201

Token 471: ' la' (ID: 557)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07217194885015488
    2. 'int' → logprob: -2.822171926498413
    3. ' math' → logprob: -4.947172164916992
    4. '(int' → logprob: -6.822172164916992
    5. ' c' → logprob: -7.447172164916992
    6. ' i' → logprob: -7.572172164916992
    7. 'c' → logprob: -8.322172164916992
    8. ' (' → logprob: -8.447172164916992
    9. 'math' → logprob: -8.697172164916992
    10. ' l' → logprob: -9.697172164916992

Token 472: ' longueur' (ID: 104613)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7697765231132507
    2. ' int' → logprob: -1.0197765827178955
    3. 'c' → logprob: -1.8947765827178955
    4. ' cave' → logprob: -5.019776344299316
    5. ' math' → logprob: -5.394776344299316
    6. ' c' → logprob: -5.769776344299316
    7. '(int' → logprob: -5.894776344299316
    8. '1' → logprob: -6.019776344299316
    9. 'math' → logprob: -6.894776344299316
    10. ' i' → logprob: -7.269776344299316

Token 473: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9332958459854126
    2. ' +' → logprob: -1.6832958459854126
    3. 'de' → logprob: -2.183295726776123
    4. '_' → logprob: -2.183295726776123
    5. '_de' → logprob: -2.183295726776123
    6. '_c' → logprob: -3.808295726776123
    7. '+' → logprob: -4.308295726776123
    8. '_l' → logprob: -4.683295726776123
    9. '_d' → logprob: -4.933295726776123
    10. ' of' → logprob: -5.683295726776123

Token 474: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.0278407335281372
    2. ' la' → logprob: -1.4028407335281372
    3. 'int' → logprob: -1.5278407335281372
    4. ' int' → logprob: -1.9028407335281372
    5. 'l' → logprob: -4.777840614318848
    6. 'math' → logprob: -5.402840614318848
    7. '(int' → logprob: -5.527840614318848
    8. ' math' → logprob: -5.777840614318848
    9. 'le' → logprob: -6.402840614318848
    10. 'range' → logprob: -6.652840614318848

Token 475: ' ligne' (ID: 19583)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20058271288871765
    2. 'current' → logprob: -3.07558274269104
    3. 'int' → logprob: -3.07558274269104
    4. 'str' → logprob: -3.57558274269104
    5. '"' → logprob: -3.95058274269104
    6. 'range' → logprob: -4.575582504272461
    7. '   ' → logprob: -5.200582504272461
    8. ' ' → logprob: -5.325582504272461
    9. 'i' → logprob: -5.700582504272461
    10. 'ligne' → logprob: -5.825582504272461

Token 476: ' descend' (ID: 47877)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2861243188381195
    2. '_' → logprob: -2.2861242294311523
    3. '_length' → logprob: -3.1611242294311523
    4. ' =' → logprob: -3.7861242294311523
    5. '_line' → logprob: -4.161124229431152
    6. ')' → logprob: -4.411124229431152
    7. '_len' → logprob: -4.661124229431152
    8. '_num' → logprob: -5.036124229431152
    9. ' _' → logprob: -5.036124229431152
    10. '   ' → logprob: -5.286124229431152

Token 477: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.002677083481103182
    2. '   ' → logprob: -6.377676963806152
    3. ' ante' → logprob: -8.252676963806152
    4. 'ente' → logprob: -8.627676963806152
    5. 'ant' → logprob: -9.002676963806152
    6. 'ance' → logprob: -9.127676963806152
    7. '
' → logprob: -9.502676963806152
    8. 'a' → logprob: -9.627676963806152
    9. 's' → logprob: -10.127676963806152
    10. ' ' → logprob: -11.127676963806152

Token 478: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5274912714958191
    2. ' +' → logprob: -1.2774913311004639
    3. ')' → logprob: -3.527491331100464
    4. 'def' → logprob: -3.777491331100464
    5. ',' → logprob: -4.027491092681885
    6. '+' → logprob: -4.152491092681885
    7. '[' → logprob: -4.777491092681885
    8. ':' → logprob: -4.777491092681885
    9. ' ' → logprob: -5.027491092681885
    10. 's' → logprob: -5.777491092681885

Token 479: ' calcul' (ID: 7559)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10161557793617249
    2. ' =' → logprob: -3.8516156673431396
    3. ')' → logprob: -4.9766154289245605
    4. ' i' → logprob: -4.9766154289245605
    5. ' #' → logprob: -5.1016154289245605
    6. '#' → logprob: -5.1016154289245605
    7. '"' → logprob: -5.3516154289245605
    8. '    ' → logprob: -5.3516154289245605
    9. '\n' → logprob: -5.4766154289245605
    10. ' ' → logprob: -5.6016154289245605

Token 480: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.2247602492570877
    2. '=' → logprob: -2.3497602939605713
    3. ' =' → logprob: -3.0997602939605713
    4. '   ' → logprob: -3.2247602939605713
    5. 'é' → logprob: -4.474760055541992
    6. 'er' → logprob: -5.224760055541992
    7. '_' → logprob: -6.599760055541992
    8. '_line' → logprob: -7.474760055541992
    9. 'e' → logprob: -8.224760055541992
    10. '       ' → logprob: -8.474760055541992

Token 481: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0840868279337883
    2. '=' → logprob: -3.3340868949890137
    3. ' +' → logprob: -4.209086894989014
    4. ' +=' → logprob: -4.459086894989014
    5. '_line' → logprob: -5.709086894989014
    6. '   ' → logprob: -5.959086894989014
    7. '+' → logprob: -6.084086894989014
    8. '_par' → logprob: -6.459086894989014
    9. '_plus' → logprob: -6.584086894989014
    10. ' par' → logprob: -6.834086894989014

Token 482: '
' (ID: 198)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2837550640106201
    2. ' int' → logprob: -1.6587550640106201
    3. 'c' → logprob: -3.78375506401062
    4. '(int' → logprob: -3.90875506401062
    5. ' math' → logprob: -5.658755302429199
    6. 'math' → logprob: -6.033755302429199
    7. ' c' → logprob: -6.158755302429199
    8. ' (' → logprob: -6.533755302429199
    9. 'i' → logprob: -7.408755302429199
    10. '1' → logprob: -7.658755302429199

Token 483: '   ' (ID: 271)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.44809067249298096
    2. 'int' → logprob: -1.323090672492981
    3. ' math' → logprob: -4.073090553283691
    4. ' (' → logprob: -4.198090553283691
    5. '(int' → logprob: -4.323090553283691
    6. 'c' → logprob: -4.698090553283691
    7. ' c' → logprob: -4.698090553283691
    8. ' i' → logprob: -5.323090553283691
    9. ' cave' → logprob: -5.573090553283691
    10. '   ' → logprob: -5.698090553283691

Token 484: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07956653088331223
    2. ' int' → logprob: -3.204566478729248
    3. '(int' → logprob: -4.204566478729248
    4. 'c' → logprob: -4.579566478729248
    5. 'math' → logprob: -6.204566478729248
    6. 'line' → logprob: -6.704566478729248
    7. 'm' → logprob: -6.704566478729248
    8. ' (' → logprob: -6.954566478729248
    9. '(' → logprob: -6.954566478729248
    10. '   ' → logprob: -7.204566478729248

Token 485: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4291599988937378
    2. 'c' → logprob: -1.6791599988937378
    3. 'def' → logprob: -2.4291601181030273
    4. ' int' → logprob: -4.179160118103027
    5. 'math' → logprob: -4.304160118103027
    6. 'i' → logprob: -4.429160118103027
    7. ' math' → logprob: -5.179160118103027
    8. 'm' → logprob: -5.179160118103027
    9. '(int' → logprob: -5.554160118103027
    10. 'ligne' → logprob: -5.554160118103027

Token 486: ' suivante' (ID: 107439)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.1633961945772171
    2. 'get' → logprob: -2.413396120071411
    3. 'def' → logprob: -3.038396120071411
    4. ' line' → logprob: -5.41339635848999
    5. ' def' → logprob: -5.66339635848999
    6. 'line' → logprob: -7.28839635848999
    7. '(get' → logprob: -7.41339635848999
    8. ' find' → logprob: -7.53839635848999
    9. ' next' → logprob: -7.78839635848999
    10. '(' → logprob: -8.038395881652832

Token 487: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014706935733556747
    2. ':' → logprob: -5.139707088470459
    3. '
' → logprob: -6.014707088470459
    4. ' def' → logprob: -6.264707088470459
    5. '

' → logprob: -7.264707088470459
    6. '(n' → logprob: -7.264707088470459
    7. ':
' → logprob: -7.389707088470459
    8. '(
' → logprob: -7.764707088470459
    9. ':def' → logprob: -8.2647066116333
    10. '   ' → logprob: -8.6397066116333

Token 488: 'on' (ID: 263)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04192819818854332
    2. ')' → logprob: -3.916928291320801
    3. ' def' → logprob: -4.166928291320801
    4. ')
' → logprob: -6.166928291320801
    5. '   ' → logprob: -6.791928291320801
    6. '):
' → logprob: -7.416928291320801
    7. ')

' → logprob: -7.541928291320801
    8. '
' → logprob: -7.541928291320801
    9. '):

' → logprob: -8.7919282913208
    10. '):' → logprob: -9.0419282913208

Token 489: ' dé' (ID: 2393)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042975906282663345
    2. ' def' → logprob: -3.542975902557373
    3. 'import' → logprob: -4.792975902557373
    4. '
' → logprob: -6.292975902557373
    5. '   ' → logprob: -6.417975902557373
    6. ')' → logprob: -7.167975902557373
    7. ')
' → logprob: -8.292976379394531
    8. '    
' → logprob: -10.042976379394531
    9. '):
' → logprob: -10.167976379394531
    10. ' import' → logprob: -10.417976379394531

Token 490: 'term' (ID: 8044)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.002667926950380206
    2. 'term' → logprob: -6.8776679039001465
    3. 'fin' → logprob: -7.0026679039001465
    4. 'def' → logprob: -7.7526679039001465
    5. 'fn' → logprob: -9.752668380737305
    6. 'tail' → logprob: -10.002668380737305
    7. 'fi' → logprob: -10.252668380737305
    8. '#' → logprob: -10.377668380737305
    9. 'fine' → logprob: -11.127668380737305
    10. 'fl' → logprob: -11.252668380737305

Token 491: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.3976321518421173
    2. 'def' → logprob: -1.147632122039795
    3. 'ines' → logprob: -6.147632122039795
    4. 'e' → logprob: -6.522632122039795
    5. '   ' → logprob: -6.522632122039795
    6. 'te' → logprob: -6.897632122039795
    7. '```' → logprob: -7.272632122039795
    8. 'inate' → logprob: -7.397632122039795
    9. 'line' → logprob: -7.522632122039795
    10. 'ined' → logprob: -7.897632122039795

Token 492: ' pour' (ID: 1930)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5151312947273254
    2. 'la' → logprob: -2.1401312351226807
    3. 'def' → logprob: -2.2651312351226807
    4. 'ligne' → logprob: -2.8901312351226807
    5. 'le' → logprob: -3.3901312351226807
    6. ' le' → logprob: -3.7651312351226807
    7. ')' → logprob: -4.14013147354126
    8. 'l' → logprob: -4.39013147354126
    9. 'line' → logprob: -5.64013147354126
    10. ' def' → logprob: -5.76513147354126

Token 493: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.874191403388977
    2. ' i' → logprob: -1.749191403388977
    3. 'c' → logprob: -2.2491912841796875
    4. ')' → logprob: -3.1241912841796875
    5. 'n' → logprob: -3.1241912841796875
    6. 'ligne' → logprob: -3.3741912841796875
    7. 'def' → logprob: -3.4991912841796875
    8. 'l' → logprob: -3.6241912841796875
    9. 'm' → logprob: -3.7491912841796875
    10. 'line' → logprob: -4.2491912841796875

Token 494: ' le' (ID: 505)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.101715564727783
    2. ' //' → logprob: -2.226715564727783
    3. 'le' → logprob: -2.351715564727783
    4. '//' → logprob: -2.476715564727783
    5. '+' → logprob: -2.976715564727783
    6. '(n' → logprob: -3.476715564727783
    7. '   ' → logprob: -3.476715564727783
    8. ')' → logprob: -3.476715564727783
    9. ' >=' → logprob: -3.476715564727783
    10. ' =' → logprob: -3.601715564727783

Token 495: ' numéro' (ID: 65036)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.934035062789917
    2. 'line' → logprob: -1.934035062789917
    3. 'int' → logprob: -2.559035062789917
    4. 'next' → logprob: -2.809035062789917
    5. ')' → logprob: -3.059035062789917
    6. 'c' → logprob: -3.309035062789917
    7. ' next' → logprob: -3.434035062789917
    8. 'plus' → logprob: -3.684035062789917
    9. 'layer' → logprob: -3.934035062789917
    10. 'l' → logprob: -3.934035062789917

Token 496: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1769343614578247
    2. '_l' → logprob: -1.9269343614578247
    3. 'de' → logprob: -2.176934242248535
    4. '_line' → logprob: -2.426934242248535
    5. '_de' → logprob: -2.676934242248535
    6. '_' → logprob: -2.926934242248535
    7. ' +' → logprob: -3.301934242248535
    8. ' =' → logprob: -3.676934242248535
    9. '=' → logprob: -4.051934242248535
    10. '   ' → logprob: -4.176934242248535

Token 497: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.629187285900116
    2. ' la' → logprob: -1.3791873455047607
    3. 'l' → logprob: -2.1291873455047607
    4. 'ligne' → logprob: -2.5041873455047607
    5. 'line' → logprob: -5.629187107086182
    6. 'i' → logprob: -6.254187107086182
    7. '   ' → logprob: -6.379187107086182
    8. 'range' → logprob: -6.504187107086182
    9. ' ' → logprob: -7.254187107086182
    10. ' ligne' → logprob: -7.379187107086182

Token 498: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.09133747220039368
    2. 'c' → logprob: -3.3413374423980713
    3. 'plus' → logprob: -4.34133768081665
    4. 'line' → logprob: -4.71633768081665
    5. ' ligne' → logprob: -4.84133768081665
    6. ')' → logprob: -4.84133768081665
    7. 'next' → logprob: -5.59133768081665
    8. 'l' → logprob: -6.46633768081665
    9. 'range' → logprob: -6.59133768081665
    10. ' plus' → logprob: -7.59133768081665

Token 499: ' descend' (ID: 47877)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.275044709444046
    2. '   ' → logprob: -2.4000446796417236
    3. '):
' → logprob: -2.7750446796417236
    4. ' +' → logprob: -3.6500446796417236
    5. ')' → logprob: -4.275044918060303
    6. '):' → logprob: -4.525044918060303
    7. ' =' → logprob: -5.025044918060303
    8. '+' → logprob: -5.025044918060303
    9. ')
' → logprob: -5.400044918060303
    10. ' def' → logprob: -5.900044918060303

Token 500: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.015955299139022827
    2. 'ance' → logprob: -4.265955448150635
    3. '   ' → logprob: -6.890955448150635
    4. 'ente' → logprob: -7.890955448150635
    5. 'ant' → logprob: -8.515954971313477
    6. ')' → logprob: -10.140954971313477
    7. '
' → logprob: -10.140954971313477
    8. 'a' → logprob: -10.890954971313477
    9. '#' → logprob: -11.640954971313477
    10. ' =' → logprob: -11.765954971313477

Token 501: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8457253575325012
    2. 'def' → logprob: -1.3457252979278564
    3. '):' → logprob: -1.9707252979278564
    4. '   ' → logprob: -2.5957252979278564
    5. '):
' → logprob: -2.7207252979278564
    6. ')
' → logprob: -4.4707255363464355
    7. ' def' → logprob: -6.0957255363464355
    8. ' =' → logprob: -6.0957255363464355
    9. ',' → logprob: -6.2207255363464355
    10. ' +' → logprob: -6.4707255363464355

Token 502: '    
' (ID: 1944)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027740370482206345
    2. '   ' → logprob: -4.152740478515625
    3. '
' → logprob: -5.152740478515625
    4. 'import' → logprob: -6.027740478515625
    5. ' def' → logprob: -6.652740478515625
    6. '\n' → logprob: -7.652740478515625
    7. '    
' → logprob: -7.902740478515625
    8. '\' → logprob: -8.277740478515625
    9. ' 
' → logprob: -8.777740478515625
    10. '  
' → logprob: -9.152740478515625

Token 503: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12523755431175232
    2. '   ' → logprob: -2.375237464904785
    3. '
' → logprob: -4.000237464904785
    4. '    
' → logprob: -5.375237464904785
    5. ' def' → logprob: -7.750237464904785
    6. ' 
' → logprob: -8.250237464904785
    7. '```' → logprob: -8.250237464904785
    8. '  
' → logprob: -8.500237464904785
    9. '

' → logprob: -9.250237464904785
    10. ')' → logprob: -9.250237464904785

Token 504: ' En' (ID: 2130)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02631736546754837
    2. 'import' → logprob: -3.9013173580169678
    3. ' def' → logprob: -5.526317596435547
    4. '   ' → logprob: -6.526317596435547
    5. ')' → logprob: -9.526317596435547
    6. '
' → logprob: -9.776317596435547
    7. '    
' → logprob: -10.151317596435547
    8. '```' → logprob: -10.526317596435547
    9. ' import' → logprob: -10.901317596435547
    10. 'from' → logprob: -11.151317596435547

Token 505: ' résumé' (ID: 140184)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007124761585146189
    2. ' def' → logprob: -5.257124900817871
    3. 'suite' → logprob: -6.757124900817871
    4. 'import' → logprob: -8.507124900817871
    5. 'range' → logprob: -9.007124900817871
    6. '```' → logprob: -9.757124900817871
    7. 'return' → logprob: -10.632124900817871
    8. ' range' → logprob: -10.632124900817871
    9. '#' → logprob: -10.757124900817871
    10. 'ligne' → logprob: -10.757124900817871

Token 506: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7557523846626282
    2. 'def' → logprob: -0.8807523846626282
    3. ',' → logprob: -2.7557523250579834
    4. ':' → logprob: -3.1307523250579834
    5. ' def' → logprob: -6.0057525634765625
    6. ':
' → logprob: -6.3807525634765625
    7. '
' → logprob: -6.7557525634765625
    8. '    
' → logprob: -7.1307525634765625
    9. ' ,' → logprob: -7.6307525634765625
    10. '    ' → logprob: -8.255752563476562

Token 507: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6892728805541992
    2. 'def' → logprob: -0.8142728805541992
    3. ' def' → logprob: -3.564272880554199
    4. ' pass' → logprob: -4.314272880554199
    5. 'pass' → logprob: -5.314272880554199
    6. ' return' → logprob: -5.564272880554199
    7. 'return' → logprob: -6.189272880554199
    8. 'import' → logprob: -6.439272880554199
    9. '#' → logprob: -8.8142728805542
    10. 'from' → logprob: -9.0642728805542

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1365056186914444
    2. 'def' → logprob: -2.136505603790283
    3. ' def' → logprob: -5.011505603790283
    4. ' pass' → logprob: -7.511505603790283
    5. '    ' → logprob: -7.761505603790283
    6. 'ligne' → logprob: -7.886505603790283
    7. ' ligne' → logprob: -8.011506080627441
    8. 'pass' → logprob: -8.261506080627441
    9. '#' → logprob: -8.386506080627441
    10. ' line' → logprob: -8.761506080627441

Token 509: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4897826910018921
    2. '#' → logprob: -1.739782691001892
    3. 'pass' → logprob: -2.4897828102111816
    4. ' pass' → logprob: -2.7397828102111816
    5. '   ' → logprob: -3.6147828102111816
    6. ' def' → logprob: -3.7397828102111816
    7. ' #' → logprob: -5.489782810211182
    8. 'return' → logprob: -5.614782810211182
    9. ' return' → logprob: -5.989782810211182
    10. 'ligne' → logprob: -7.114782810211182

Token 510: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1904935985803604
    2. 'import' → logprob: -3.190493583679199
    3. 'line' → logprob: -3.190493583679199
    4. ' def' → logprob: -3.190493583679199
    5. 'ligne' → logprob: -3.940493583679199
    6. ' line' → logprob: -4.315493583679199
    7. ' ligne' → logprob: -5.690493583679199
    8. '   ' → logprob: -5.690493583679199
    9. 'from' → logprob: -5.940493583679199
    10. '#' → logprob: -5.940493583679199

Token 511: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4862208962440491
    2. ' i' → logprob: -1.3612208366394043
    3. 'l' → logprob: -2.6112208366394043
    4. ' l' → logprob: -3.8612208366394043
    5. 'line' → logprob: -4.861220836639404
    6. 'ligne' → logprob: -4.986220836639404
    7. ' n' → logprob: -5.486220836639404
    8. 'n' → logprob: -5.736220836639404
    9. ' line' → logprob: -5.986220836639404
    10. 'k' → logprob: -6.361220836639404

Token 512: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3471723794937134
    2. '_line' → logprob: -2.347172260284424
    3. ' =' → logprob: -2.722172260284424
    4. ' ==' → logprob: -3.472172260284424
    5. ',' → logprob: -3.972172260284424
    6. '=' → logprob: -4.347172260284424
    7. ' >=' → logprob: -4.472172260284424
    8. ' +' → logprob: -4.722172260284424
    9. '==' → logprob: -5.222172260284424
    10. '+' → logprob: -5.472172260284424

Token 513: ' déterminer' (ID: 122024)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8529106378555298
    2. ' n' → logprob: -1.1029106378555298
    3. ' ligne' → logprob: -2.7279105186462402
    4. 'n' → logprob: -3.1029105186462402
    5. 'ligne' → logprob: -3.3529105186462402
    6. 'line' → logprob: -3.3529105186462402
    7. ' on' → logprob: -3.7279105186462402
    8. '   ' → logprob: -4.35291051864624
    9. ' def' → logprob: -4.72791051864624
    10. ' l' → logprob: -5.85291051864624

Token 514: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3891657590866089
    2. 'line' → logprob: -2.0141658782958984
    3. 'ligne' → logprob: -2.2641658782958984
    4. 'la' → logprob: -3.1391658782958984
    5. ' line' → logprob: -4.264165878295898
    6. 'l' → logprob: -4.764165878295898
    7. ' ligne' → logprob: -5.014165878295898
    8. ' sa' → logprob: -5.514165878295898
    9. 'le' → logprob: -6.389165878295898
    10. ' l' → logprob: -6.514165878295898

Token 515: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.36145132780075073
    2. 'line' → logprob: -1.3614513874053955
    3. 'import' → logprob: -3.6114513874053955
    4. ' ligne' → logprob: -4.736451148986816
    5. ' line' → logprob: -5.486451148986816
    6. 'layer' → logprob: -6.111451148986816
    7. 'def' → logprob: -6.611451148986816
    8. 'l' → logprob: -7.361451148986816
    9. 'level' → logprob: -7.611451148986816
    10. 'row' → logprob: -7.986451148986816

Token 516: ' descend' (ID: 47877)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.1563907861709595
    2. ' =' → logprob: -1.2813907861709595
    3. '_' → logprob: -1.4063907861709595
    4. '_len' → logprob: -2.53139066696167
    5. '_num' → logprob: -2.90639066696167
    6. '   ' → logprob: -5.15639066696167
    7. ' _' → logprob: -5.40639066696167
    8. '_size' → logprob: -5.78139066696167
    9. '_index' → logprob: -5.90639066696167
    10. ',' → logprob: -6.03139066696167

Token 517: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.006228575482964516
    2. '   ' → logprob: -5.131228446960449
    3. ' ante' → logprob: -8.50622844696045
    4. 'ance' → logprob: -10.25622844696045
    5. '
' → logprob: -11.25622844696045
    6. ')' → logprob: -11.63122844696045
    7. 'a' → logprob: -12.00622844696045
    8. ' ' → logprob: -12.38122844696045
    9. 'anc' → logprob: -12.50622844696045
    10. 'ente' → logprob: -13.00622844696045

Token 518: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2246931791305542
    2. '   ' → logprob: -1.5996931791305542
    3. ',' → logprob: -1.8496931791305542
    4. ',
' → logprob: -2.7246932983398438
    5. ' (' → logprob: -3.0996932983398438
    6. '
' → logprob: -3.2246932983398438
    7. ' =' → logprob: -3.3496932983398438
    8. '_length' → logprob: -3.8496932983398438
    9. 'length' → logprob: -4.224693298339844
    10. '_num' → logprob: -4.349693298339844

Token 519: ' laquelle' (ID: 47998)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7185699939727783
    2. 'part' → logprob: -0.9685699939727783
    3. 'quel' → logprob: -2.8435699939727783
    4. 'la' → logprob: -3.3435699939727783
    5. 'which' → logprob: -4.593569755554199
    6. 'quelle' → logprob: -4.843569755554199
    7. ' laquelle' → logprob: -5.343569755554199
    8. 'c' → logprob: -5.843569755554199
    9. '(i' → logprob: -6.218569755554199
    10. 'su' → logprob: -6.468569755554199

Token 520: ' i' (ID: 575)
  Prédit: 'il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.37005510926246643
    2. ' il' → logprob: -1.245055079460144
    3. 'i' → logprob: -4.120055198669434
    4. ' i' → logprob: -5.370055198669434
    5. '   ' → logprob: -8.370055198669434
    6. ''il' → logprob: -8.870055198669434
    7. ' ' → logprob: -10.120055198669434
    8. 'it' → logprob: -10.745055198669434
    9. 'ils' → logprob: -11.745055198669434
    10. '  ' → logprob: -11.995055198669434

Token 521: ' appartient' (ID: 173806)
  Prédit: ' appartient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appartient' → logprob: -0.2685492932796478
    2. 'app' → logprob: -1.5185493230819702
    3. ' appart' → logprob: -4.14354944229126
    4. 'belongs' → logprob: -8.518548965454102
    5. ' app' → logprob: -9.018548965454102
    6. ' se' → logprob: -9.518548965454102
    7. 'se' → logprob: -9.643548965454102
    8. ' ' → logprob: -10.518548965454102
    9. ' pertence' → logprob: -11.143548965454102
    10. ' apparten' → logprob: -11.393548965454102

Token 522: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17386524379253387
    2. 'def' → logprob: -1.9238651990890503
    3. '.' → logprob: -5.17386531829834
    4. ',' → logprob: -6.54886531829834
    5. 'import' → logprob: -6.79886531829834
    6. ' (' → logprob: -6.92386531829834
    7. '
' → logprob: -7.17386531829834
    8. '.
' → logprob: -7.29886531829834
    9. '    
' → logprob: -7.42386531829834
    10. '#' → logprob: -7.92386531829834

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2401246428489685
    2. 'def' → logprob: -1.6151247024536133
    3. '<|end|>' → logprob: -5.490124702453613
    4. ' def' → logprob: -5.615124702453613
    5. '#' → logprob: -5.865124702453613
    6. ')' → logprob: -6.990124702453613
    7. 'import' → logprob: -7.365124702453613
    8. '    
' → logprob: -7.740124702453613
    9. '
' → logprob: -7.990124702453613
    10. '...' → logprob: -8.240124702453613

Token 524: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05377150699496269
    2. 'def' → logprob: -3.303771495819092
    3. '    
' → logprob: -5.928771495819092
    4. ' 
' → logprob: -6.053771495819092
    5. '
' → logprob: -6.178771495819092
    6. '<|end|>' → logprob: -6.303771495819092
    7. '  
' → logprob: -6.678771495819092
    8. ' def' → logprob: -6.803771495819092
    9. ' ' → logprob: -7.053771495819092
    10. ')' → logprob: -7.178771495819092

Token 525: ' La' (ID: 3038)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7751813530921936
    2. ' return' → logprob: -1.9001812934875488
    3. '   ' → logprob: -2.275181293487549
    4. ' def' → logprob: -2.400181293487549
    5. ' line' → logprob: -2.525181293487549
    6. 'return' → logprob: -2.900181293487549
    7. 'line' → logprob: -3.275181293487549
    8. 'ligne' → logprob: -4.775181293487549
    9. '#' → logprob: -5.025181293487549
    10. 'import' → logprob: -6.275181293487549

Token 526: ' ligne' (ID: 19583)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6526265740394592
    2. 'line' → logprob: -1.5276265144348145
    3. ' def' → logprob: -2.4026265144348145
    4. 'def' → logprob: -2.7776265144348145
    5. ' ligne' → logprob: -2.9026265144348145
    6. 'ligne' → logprob: -3.0276265144348145
    7. '   ' → logprob: -6.5276265144348145
    8. 'n' → logprob: -6.6526265144348145
    9. ' n' → logprob: -7.4026265144348145
    10. 'l' → logprob: -7.6526265144348145

Token 527: ' descend' (ID: 47877)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.684380829334259
    2. '_len' → logprob: -1.6843807697296143
    3. '_desc' → logprob: -1.9343807697296143
    4. '   ' → logprob: -3.0593807697296143
    5. ' descend' → logprob: -3.6843807697296143
    6. ' =' → logprob: -3.6843807697296143
    7. '_index' → logprob: -4.059381008148193
    8. '_' → logprob: -4.309381008148193
    9. '_num' → logprob: -4.434381008148193
    10. 'desc' → logprob: -5.309381008148193

Token 528: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.14913754165172577
    2. '   ' → logprob: -2.024137496948242
    3. 'ance' → logprob: -5.774137496948242
    4. '       ' → logprob: -7.399137496948242
    5. 'e' → logprob: -7.774137496948242
    6. 'ée' → logprob: -8.649137496948242
    7. 'anter' → logprob: -8.649137496948242
    8. 'ate' → logprob: -9.024137496948242
    9. '    ' → logprob: -9.274137496948242
    10. '#' → logprob: -9.274137496948242

Token 529: ' L' (ID: 451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7169049978256226
    2. ' est' → logprob: -2.216905117034912
    3. '_length' → logprob: -2.841905117034912
    4. 'def' → logprob: -2.966905117034912
    5. '_num' → logprob: -2.966905117034912
    6. ' n' → logprob: -3.216905117034912
    7. '_len' → logprob: -3.466905117034912
    8. '=' → logprob: -3.841905117034912
    9. 'n' → logprob: -4.091905117034912
    10. 'num' → logprob: -4.216905117034912

Token 530: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5092373490333557
    2. 'ine' → logprob: -1.384237289428711
    3. 'e' → logprob: -2.259237289428711
    4. '   ' → logprob: -4.509237289428711
    5. '=' → logprob: -4.634237289428711
    6. 'ength' → logprob: -5.134237289428711
    7. '_index' → logprob: -5.509237289428711
    8. '_num' → logprob: -5.759237289428711
    9. '_number' → logprob: -6.509237289428711
    10. '_length' → logprob: -6.634237289428711

Token 531: ' l' (ID: 305)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4220263361930847
    2. 'int' → logprob: -1.2970263957977295
    3. '(int' → logprob: -3.6720263957977295
    4. '1' → logprob: -4.29702615737915
    5. ' (' → logprob: -4.54702615737915
    6. ' lambda' → logprob: -5.17202615737915
    7. ' ' → logprob: -5.29702615737915
    8. 'lambda' → logprob: -5.67202615737915
    9. '(lambda' → logprob: -5.92202615737915
    10. '(L' → logprob: -7.04702615737915

Token 532: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.8771764039993286
    2. 'e' → logprob: -1.6271764039993286
    3. 'ent' → logprob: -2.252176284790039
    4. 'a' → logprob: -2.377176284790039
    5. 'ine' → logprob: -3.252176284790039
    6. '=int' → logprob: -4.127176284790039
    7. 'ambda' → logprob: -4.252176284790039
    8. 'plus' → logprob: -4.377176284790039
    9. '   ' → logprob: -4.377176284790039
    10. ' =' → logprob: -4.877176284790039

Token 533: 'ier' (ID: 905)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.36696165800094604
    2. 'ier' → logprob: -1.4919617176055908
    3. 'iere' → logprob: -3.741961717605591
    4. '   ' → logprob: -4.491961479187012
    5. 're' → logprob: -4.741961479187012
    6. 'ité' → logprob: -4.741961479187012
    7. 'i' → logprob: -4.741961479187012
    8. 'er' → logprob: -5.116961479187012
    9. '_line' → logprob: -5.616961479187012
    10. 'ire' → logprob: -5.741961479187012

Token 534: ' comme' (ID: 7971)
  Prédit: ' suivant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivant' → logprob: -1.055345892906189
    2. ' i' → logprob: -1.555345892906189
    3. ' suivante' → logprob: -2.1803460121154785
    4. 'su' → logprob: -3.5553460121154785
    5. '(i' → logprob: -3.5553460121154785
    6. ' (' → logprob: -4.0553460121154785
    7. ' =' → logprob: -4.0553460121154785
    8. ' +' → logprob: -4.1803460121154785
    9. ' supérieur' → logprob: -4.1803460121154785
    10. '(s' → logprob: -4.1803460121154785

Token 535: ' suit' (ID: 15170)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4619171619415283
    2. 'L' → logprob: -2.0869171619415283
    3. 'def' → logprob: -2.3369171619415283
    4. '[int' → logprob: -3.9619171619415283
    5. ' L' → logprob: -4.086916923522949
    6. '   ' → logprob: -4.211916923522949
    7. ' int' → logprob: -4.461916923522949
    8. '(int' → logprob: -4.586916923522949
    9. '=int' → logprob: -4.711916923522949
    10. 'import' → logprob: -4.961916923522949

Token 536: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7756524682044983
    2. '   ' → logprob: -2.0256524085998535
    3. ':' → logprob: -2.2756524085998535
    4. 'def' → logprob: -2.7756524085998535
    5. 'import' → logprob: -3.0256524085998535
    6. '(
' → logprob: -3.6506524085998535
    7. ':
' → logprob: -3.9006524085998535
    8. '
' → logprob: -4.1506524085998535
    9. ' (' → logprob: -4.1506524085998535
    10. '=' → logprob: -4.4006524085998535

Token 537: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5942376852035522
    2. '
' → logprob: -1.8442376852035522
    3. 'import' → logprob: -1.8442376852035522
    4. 'def' → logprob: -3.219237804412842
    5. ' def' → logprob: -3.969237804412842
    6. 'int' → logprob: -4.219237804412842
    7. ' line' → logprob: -4.719237804412842
    8. ' int' → logprob: -5.094237804412842
    9. 'from' → logprob: -5.219237804412842
    10. ' L' → logprob: -5.344237804412842

Token 538: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05001544579863548
    2. '=' → logprob: -3.050015449523926
    3. '=int' → logprob: -6.675015449523926
    4. 'import' → logprob: -9.050015449523926
    5. ' ' → logprob: -11.425015449523926
    6. '   ' → logprob: -11.675015449523926
    7. ' =
' → logprob: -11.800015449523926
    8. 'def' → logprob: -12.675015449523926
    9. '=
' → logprob: -12.675015449523926
    10. '
' → logprob: -13.300015449523926

Token 539: ' floor' (ID: 8350)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5601211190223694
    2. ' int' → logprob: -1.0601210594177246
    3. ' math' → logprob: -2.9351210594177246
    4. 'math' → logprob: -3.5601210594177246
    5. '(int' → logprob: -7.310121059417725
    6. '(math' → logprob: -9.810121536254883
    7. ' i' → logprob: -9.935121536254883
    8. 'c' → logprob: -10.685121536254883
    9. 'i' → logprob: -10.685121536254883
    10. ' ' → logprob: -11.060121536254883

Token 540: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014446251094341278
    2. '(' → logprob: -4.514446258544922
    3. '(i' → logprob: -6.264446258544922
    4. '(((' → logprob: -6.639446258544922
    5. '(s' → logprob: -8.889446258544922
    6. '(
' → logprob: -11.639446258544922
    7. '((_' → logprob: -11.764446258544922
    8. ' ((' → logprob: -11.889446258544922
    9. '((-' → logprob: -12.139446258544922
    10. '(math' → logprob: -12.389446258544922

Token 541: 'sqrt' (ID: 64991)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.7063226103782654
    2. '(i' → logprob: -1.4563226699829102
    3. 'math' → logprob: -2.20632266998291
    4. '(m' → logprob: -2.20632266998291
    5. 'm' → logprob: -4.33132266998291
    6. '(-' → logprob: -4.58132266998291
    7. 'i' → logprob: -4.70632266998291
    8. ' (' → logprob: -4.95632266998291
    9. '(' → logprob: -5.20632266998291
    10. '((' → logprob: -5.45632266998291

Token 542: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1462264060974121
    2. '(' → logprob: -2.146226406097412
    3. 'i' → logprob: -4.146226406097412
    4. '((' → logprob: -6.146226406097412
    5. '(
' → logprob: -8.27122688293457
    6. '1' → logprob: -8.52122688293457
    7. '{i' → logprob: -8.64622688293457
    8. ')i' → logprob: -8.64622688293457
    9. '(c' → logprob: -9.14622688293457
    10. '(n' → logprob: -10.14622688293457

Token 543: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49475008249282837
    2. ')' → logprob: -1.1197500228881836
    3. ')+' → logprob: -3.1197500228881836
    4. ' )' → logprob: -5.119750022888184
    5. '(i' → logprob: -5.494750022888184
    6. '(
' → logprob: -5.869750022888184
    7. ')-' → logprob: -6.619750022888184
    8. '((' → logprob: -7.244750022888184
    9. '))+' → logprob: -7.244750022888184
    10. '2' → logprob: -7.369750022888184

Token 544: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007324361358769238
    2. '0' → logprob: -7.375732421875
    3. '2' → logprob: -10.000732421875
    4. ')' → logprob: -10.500732421875
    5. '(' → logprob: -11.000732421875
    6. ' ' → logprob: -12.000732421875
    7. '
' → logprob: -12.750732421875
    8. '   ' → logprob: -13.375732421875
    9. '(i' → logprob: -13.750732421875
    10. 'i' → logprob: -14.000732421875

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010488852858543396
    2. '0' → logprob: -6.876049041748047
    3. '2' → logprob: -11.376049041748047
    4. '3' → logprob: -12.626049041748047
    5. ' ' → logprob: -14.251049041748047
    6. '
' → logprob: -15.126049041748047
    7. ')' → logprob: -16.376049041748047
    8. '-' → logprob: -16.626049041748047
    9. '4' → logprob: -16.626049041748047
    10. '   ' → logprob: -16.876049041748047

Token 546: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06296908855438232
    2. ')+' → logprob: -2.812969207763672
    3. ' )' → logprob: -7.187969207763672
    4. '))' → logprob: -9.062969207763672
    5. '))+' → logprob: -10.062969207763672
    6. ' +' → logprob: -11.062969207763672
    7. '+' → logprob: -11.062969207763672
    8. ')))' → logprob: -11.187969207763672
    9. '())' → logprob: -11.687969207763672
    10. '   ' → logprob: -11.687969207763672

Token 547: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20577922463417053
    2. ')+' → logprob: -1.7057791948318481
    3. '**' → logprob: -6.330779075622559
    4. ' )' → logprob: -6.580779075622559
    5. ')**' → logprob: -7.330779075622559
    6. '))' → logprob: -8.455779075622559
    7. '())' → logprob: -9.080779075622559
    8. '))+' → logprob: -9.330779075622559
    9. ')))' → logprob: -10.705779075622559
    10. '+' → logprob: -10.830779075622559

Token 548: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006519968155771494
    2. ' ' → logprob: -5.256519794464111
    3. '0' → logprob: -6.756519794464111
    4. ')' → logprob: -9.88152027130127
    5. '2' → logprob: -9.88152027130127
    6. '   ' → logprob: -12.63152027130127
    7. ' i' → logprob: -12.88152027130127
    8. '
' → logprob: -13.00652027130127
    9. ' )' → logprob: -13.38152027130127
    10. ' -' → logprob: -13.50652027130127

Token 549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029974356293678284
    2. '0' → logprob: -5.877997398376465
    3. ' ' → logprob: -9.502997398376465
    4. ')' → logprob: -10.377997398376465
    5. 'i' → logprob: -10.502997398376465
    6. '2' → logprob: -10.877997398376465
    7. '-' → logprob: -11.002997398376465
    8. '
' → logprob: -11.877997398376465
    9. '(' → logprob: -12.752997398376465
    10. ' i' → logprob: -13.252997398376465

Token 550: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05142825096845627
    2. ')//' → logprob: -3.0514283180236816
    3. '))' → logprob: -6.426428318023682
    4. ' )' → logprob: -7.051428318023682
    5. '//' → logprob: -8.301427841186523
    6. ')/' → logprob: -10.551427841186523
    7. ')))' → logprob: -10.676427841186523
    8. '())' → logprob: -11.051427841186523
    9. 'e' → logprob: -12.051427841186523
    10. '   ' → logprob: -12.301427841186523

Token 551: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07415962219238281
    2. ')//' → logprob: -2.949159622192383
    3. '))' → logprob: -4.324159622192383
    4. '//' → logprob: -6.074159622192383
    5. '())' → logprob: -6.449159622192383
    6. ' )' → logprob: -7.074159622192383
    7. '()' → logprob: -7.574159622192383
    8. '   ' → logprob: -9.199159622192383
    9. ' //' → logprob: -9.324159622192383
    10. ')))' → logprob: -9.449159622192383

Token 552: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017295641591772437
    2. ' ' → logprob: -7.001729488372803
    3. '1' → logprob: -7.126729488372803
    4. '3' → logprob: -11.626729965209961
    5. '   ' → logprob: -12.876729965209961
    6. '
' → logprob: -14.126729965209961
    7. '  ' → logprob: -14.501729965209961
    8. '4' → logprob: -14.751729965209961
    9. '0' → logprob: -15.314229965209961
    10. ')' → logprob: -15.939229965209961

Token 553: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029946710914373398
    2. '1' → logprob: -3.529946804046631
    3. ' ' → logprob: -8.779946327209473
    4. '3' → logprob: -10.279946327209473
    5. ')' → logprob: -13.029946327209473
    6. '
' → logprob: -13.529946327209473
    7. '4' → logprob: -13.779946327209473
    8. '   ' → logprob: -13.779946327209473
    9. '0' → logprob: -14.342446327209473
    10. '6' → logprob: -15.217446327209473

Token 554: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11335877329111099
    2. '))' → logprob: -2.238358736038208
    3. ')+' → logprob: -8.113358497619629
    4. ')))' → logprob: -9.113358497619629
    5. ')`' → logprob: -10.113358497619629
    6. ' )' → logprob: -10.238358497619629
    7. '))
' → logprob: -11.613358497619629
    8. ')**' → logprob: -11.988358497619629
    9. '))+' → logprob: -11.988358497619629
    10. ')
' → logprob: -12.363358497619629

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2957588732242584
    2. ')' → logprob: -1.920758843421936
    3. 'def' → logprob: -3.2957589626312256
    4. ' +' → logprob: -4.4207587242126465
    5. ' ' → logprob: -4.5457587242126465
    6. ':' → logprob: -4.9207587242126465
    7. ')
' → logprob: -5.1707587242126465
    8. ' 
' → logprob: -5.2957587242126465
    9. '\n' → logprob: -5.5457587242126465
    10. '
' → logprob: -5.7957587242126465

Token 556: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36091700196266174
    2. ')' → logprob: -1.6109169721603394
    3. 'def' → logprob: -2.485917091369629
    4. ')
' → logprob: -4.985917091369629
    5. '
' → logprob: -5.610917091369629
    6. ':' → logprob: -6.235917091369629
    7. '*' → logprob: -6.985917091369629
    8. ' +' → logprob: -7.110917091369629
    9. '):' → logprob: -7.360917091369629
    10. ' ' → logprob: -7.360917091369629

Token 557: ' Les' (ID: 7029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6693487167358398
    2. ' return' → logprob: -1.7943487167358398
    3. ' def' → logprob: -2.29434871673584
    4. 'def' → logprob: -2.29434871673584
    5. ' line' → logprob: -2.66934871673584
    6. ' ligne' → logprob: -3.91934871673584
    7. 'return' → logprob: -4.41934871673584
    8. 'ligne' → logprob: -5.16934871673584
    9. 'line' → logprob: -5.79434871673584
    10. '
' → logprob: -7.04434871673584

Token 558: ' enfants' (ID: 24681)
  Prédit: ' enfants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enfants' → logprob: -0.799408495426178
    2. ' children' → logprob: -1.1744084358215332
    3. ' line' → logprob: -1.9244084358215332
    4. ' next' → logprob: -3.799408435821533
    5. ' ligne' → logprob: -4.424408435821533
    6. 'children' → logprob: -4.549408435821533
    7. ' lignes' → logprob: -4.924408435821533
    8. ' L' → logprob: -5.799408435821533
    9. ' _' → logprob: -5.799408435821533
    10. ' i' → logprob: -5.799408435821533

Token 559: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04739978909492493
    2. '=' → logprob: -3.1723997592926025
    3. 's' → logprob: -5.672399997711182
    4. ' sont' → logprob: -8.047399520874023
    5. '   ' → logprob: -8.797399520874023
    6. '_' → logprob: -8.797399520874023
    7. '_num' → logprob: -9.797399520874023
    8. '_indices' → logprob: -9.922399520874023
    9. '_s' → logprob: -10.047399520874023
    10. ' are' → logprob: -10.672399520874023

Token 560: ' i' (ID: 575)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.019384562969207764
    2. '[i' → logprob: -4.019384384155273
    3. '[' → logprob: -6.769384384155273
    4. '   ' → logprob: -10.144384384155273
    5. ' [
' → logprob: -10.894384384155273
    6. '[
' → logprob: -10.894384384155273
    7. ' i' → logprob: -12.894384384155273
    8. '[int' → logprob: -13.019384384155273
    9. '[c' → logprob: -13.519384384155273
    10. ' =' → logprob: -13.769384384155273

Token 561: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.020569220185279846
    2. '+' → logprob: -3.895569324493408
    3. ' plus' → logprob: -10.64556884765625
    4. ' ' → logprob: -13.14556884765625
    5. ' +
' → logprob: -14.27056884765625
    6. ' ' → logprob: -15.02056884765625
    7. '+i' → logprob: -15.77056884765625
    8. ',' → logprob: -16.02056884765625
    9. 'plus' → logprob: -16.52056884765625
    10. ' ,' → logprob: -16.89556884765625

Token 562: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.020303966477513313
    2. ' L' → logprob: -4.645304203033447
    3. '2' → logprob: -5.145304203033447
    4. '(' → logprob: -5.645304203033447
    5. 'ligne' → logprob: -7.645304203033447
    6. 'line' → logprob: -8.270303726196289
    7. ' (' → logprob: -8.395303726196289
    8. ' ' → logprob: -9.645303726196289
    9. '4' → logprob: -10.770303726196289
    10. ' ligne' → logprob: -11.020303726196289

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040937744081020355
    2. ' ,' → logprob: -3.290937662124634
    3. ',
' → logprob: -6.290937900543213
    4. ' +' → logprob: -7.790937900543213
    5. ' -' → logprob: -8.040937423706055
    6. ' ' → logprob: -9.790937423706055
    7. '   ' → logprob: -10.165937423706055
    8. '-' → logprob: -10.415937423706055
    9. ' ,
' → logprob: -10.415937423706055
    10. ')' → logprob: -10.540937423706055

Token 564: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31328636407852173
    2. ' i' → logprob: -1.313286304473877
    3. '   ' → logprob: -11.313286781311035
    4. ' ' → logprob: -12.313286781311035
    5. ',' → logprob: -13.313286781311035
    6. '	i' → logprob: -13.313286781311035
    7. ',i' → logprob: -13.938286781311035
    8. ''i' → logprob: -14.188286781311035
    9. ' ' → logprob: -14.438286781311035
    10. '    ' → logprob: -14.688286781311035

Token 565: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11282432079315186
    2. '+' → logprob: -2.2378244400024414
    3. ' plus' → logprob: -13.737824440002441
    4. ' -' → logprob: -14.737824440002441
    5. ' ' → logprob: -15.987824440002441
    6. ' ' → logprob: -16.112823486328125
    7. '-' → logprob: -16.487823486328125
    8. ',' → logprob: -16.987823486328125
    9. '+i' → logprob: -17.237823486328125
    10. '＋' → logprob: -17.487823486328125

Token 566: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.20166456699371338
    2. ' L' → logprob: -1.7016645669937134
    3. '(L' → logprob: -8.951664924621582
    4. ' (' → logprob: -9.076664924621582
    5. '(' → logprob: -12.076664924621582
    6. ' ' → logprob: -14.076664924621582
    7. ' ' → logprob: -14.451664924621582
    8. '	L' → logprob: -15.076664924621582
    9. '   ' → logprob: -16.701663970947266
    10. '
' → logprob: -17.826663970947266

Token 567: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.21240662038326263
    2. '-' → logprob: -1.8374066352844238
    3. '+' → logprob: -4.087406635284424
    4. ' +' → logprob: -4.212406635284424
    5. ' ' → logprob: -8.337406158447266
    6. ',' → logprob: -8.462406158447266
    7. ' ,' → logprob: -9.962406158447266
    8. '   ' → logprob: -10.462406158447266
    9. ' ' → logprob: -12.212406158447266
    10. '  ' → logprob: -12.962406158447266

Token 568: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -16.5017032623291
    4. ' ' → logprob: -18.2517032623291
    5. '	' → logprob: -18.3767032623291
    6. '0' → logprob: -18.6267032623291
    7. '```' → logprob: -18.7517032623291
    8. '2' → logprob: -18.7517032623291
    9. ',' → logprob: -18.8767032623291
    10. '  ' → logprob: -19.7517032623291

Token 569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.625017166137695
    4. '
' → logprob: -18.500017166137695
    5. '```' → logprob: -18.500017166137695
    6. '	' → logprob: -19.750017166137695
    7. ' ' → logprob: -20.500017166137695
    8. '2' → logprob: -21.500017166137695
    9. '۱' → logprob: -21.500017166137695
    10. '    ' → logprob: -21.500017166137695

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011171156074851751
    2. ' ,' → logprob: -7.00111722946167
    3. ',
' → logprob: -9.126116752624512
    4. '   ' → logprob: -9.876116752624512
    5. ',i' → logprob: -10.501116752624512
    6. '```' → logprob: -11.501116752624512
    7. '`,' → logprob: -13.376116752624512
    8. 'i' → logprob: -13.501116752624512
    9. ' i' → logprob: -14.376116752624512
    10. ')' → logprob: -14.501116752624512

Token 571: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22547656297683716
    2. 'i' → logprob: -1.6004765033721924
    3. '"' → logprob: -10.725476264953613
    4. ' ' → logprob: -11.100476264953613
    5. ''' → logprob: -11.600476264953613
    6. ' ' → logprob: -11.850476264953613
    7. '   ' → logprob: -12.725476264953613
    8. '	i' → logprob: -12.850476264953613
    9. '`' → logprob: -13.600476264953613
    10. ''i' → logprob: -13.975476264953613

Token 572: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04882580414414406
    2. '+' → logprob: -3.048825740814209
    3. ' -' → logprob: -8.673826217651367
    4. ' ' → logprob: -10.548826217651367
    5. '-' → logprob: -10.923826217651367
    6. ',' → logprob: -12.298826217651367
    7. '   ' → logprob: -12.548826217651367
    8. ')' → logprob: -13.173826217651367
    9. ' ' → logprob: -13.173826217651367
    10. ' +
' → logprob: -13.423826217651367

Token 573: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5270267128944397
    2. '1' → logprob: -1.027026653289795
    3. ' L' → logprob: -3.027026653289795
    4. ' ' → logprob: -5.777026653289795
    5. '2' → logprob: -11.902027130126953
    6. '0' → logprob: -12.527027130126953
    7. '	L' → logprob: -13.527027130126953
    8. ' ' → logprob: -13.652027130126953
    9. '`' → logprob: -14.152027130126953
    10. '(L' → logprob: -14.652027130126953

Token 574: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9549334645271301
    2. '+' → logprob: -1.0799334049224854
    3. ',' → logprob: -2.5799334049224854
    4. ' -' → logprob: -3.0799334049224854
    5. ')' → logprob: -3.5799334049224854
    6. '<|end|>' → logprob: -3.5799334049224854
    7. '-' → logprob: -3.8299334049224854
    8. '   ' → logprob: -3.8299334049224854
    9. '[' → logprob: -4.2049336433410645
    10. ']' → logprob: -4.3299336433410645

Token 575: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14304199814796448
    2. ' ' → logprob: -2.0180420875549316
    3. '2' → logprob: -8.143041610717773
    4. '0' → logprob: -9.518041610717773
    5. ' ' → logprob: -13.643041610717773
    6. '  ' → logprob: -14.893041610717773
    7. '	' → logprob: -15.518041610717773
    8. '
' → logprob: -16.268041610717773
    9. '+' → logprob: -16.393041610717773
    10. '.' → logprob: -16.518041610717773

Token 576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006299942615441978
    2. ' ' → logprob: -7.375629901885986
    3. '2' → logprob: -12.750630378723145
    4. '0' → logprob: -15.500630378723145
    5. '
' → logprob: -16.125629425048828
    6. '```' → logprob: -16.375629425048828
    7. ' ' → logprob: -17.500629425048828
    8. '   ' → logprob: -17.625629425048828
    9. '+' → logprob: -17.750629425048828
    10. '  ' → logprob: -18.375629425048828

Token 577: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8176041841506958
    2. '
' → logprob: -0.9426041841506958
    3. '\n' → logprob: -2.1926040649414062
    4. '   ' → logprob: -4.192604064941406
    5. '

' → logprob: -4.192604064941406
    6. ':' → logprob: -5.442604064941406
    7. '```' → logprob: -5.567604064941406
    8. ':
' → logprob: -5.692604064941406
    9. ')
' → logprob: -5.942604064941406
    10. '.
' → logprob: -6.192604064941406

Token 578: 'fil' (ID: 7009)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006459566066041589
    2. '   ' → logprob: -7.750646114349365
    3. ' )' → logprob: -9.000645637512207
    4. 'def' → logprob: -10.250645637512207
    5. ')
' → logprob: -10.375645637512207
    6. '}' → logprob: -12.375645637512207
    7. '):' → logprob: -12.375645637512207
    8. '```' → logprob: -12.875645637512207
    9. ' ' → logprob: -13.000645637512207
    10. '.' → logprob: -13.000645637512207

Token 579: 'tr' (ID: 371)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2738072872161865
    2. ')' → logprob: -1.5238072872161865
    3. 'ne' → logprob: -5.773807525634766
    4. ')
' → logprob: -6.023807525634766
    5. 'es' → logprob: -6.148807525634766
    6. ']' → logprob: -6.273807525634766
    7. '+' → logprob: -6.398807525634766
    8. ',' → logprob: -6.648807525634766
    9. '   ' → logprob: -6.773807525634766
    10. '=' → logprob: -6.898807525634766

Token 580: 'és' (ID: 1756)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.9748431444168091
    2. 'tr' → logprob: -1.349843144416809
    3. 'ter' → logprob: -2.2248430252075195
    4. 't' → logprob: -2.3498430252075195
    5. 'rés' → logprob: -2.9748430252075195
    6. ')' → logprob: -3.4748430252075195
    7. 'tered' → logprob: -3.4748430252075195
    8. ']' → logprob: -4.7248430252075195
    9. 'tré' → logprob: -5.0998430252075195
    10. 'é' → logprob: -5.2248430252075195

Token 581: ' pour' (ID: 1930)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.477546364068985
    2. 'lambda' → logprob: -2.352546453475952
    3. ' lambda' → logprob: -2.477546453475952
    4. '=' → logprob: -2.602546453475952
    5. ',' → logprob: -2.727546453475952
    6. ')' → logprob: -4.352546215057373
    7. ' =' → logprob: -4.477546215057373
    8. '[i' → logprob: -4.727546215057373
    9. '(lambda' → logprob: -4.977546215057373
    10. '   ' → logprob: -5.477546215057373

Token 582: ' être' (ID: 9104)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7314400672912598
    2. ' i' → logprob: -1.8564400672912598
    3. '<=' → logprob: -1.8564400672912598
    4. ' lambda' → logprob: -1.9814400672912598
    5. 'lambda' → logprob: -1.9814400672912598
    6. ' <=' → logprob: -2.1064400672912598
    7. ' val' → logprob: -2.7314400672912598
    8. ' m' → logprob: -4.10644006729126
    9. ' x' → logprob: -4.60644006729126
    10. 'm' → logprob: -5.48144006729126

Token 583: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16029946506023407
    2. '<=' → logprob: -1.9102994203567505
    3. ' ≤' → logprob: -9.910299301147461
    4. '≤' → logprob: -11.035299301147461
    5. 'inf' → logprob: -13.035299301147461
    6. '```' → logprob: -13.410299301147461
    7. '<' → logprob: -13.535299301147461
    8. ' <' → logprob: -13.535299301147461
    9. 'valid' → logprob: -14.410299301147461
    10. ')' → logprob: -14.660299301147461

Token 584: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.2014182209968567
    2. 'm' → logprob: -1.701418161392212
    3. ' ' → logprob: -12.451417922973633
    4. ' ' → logprob: -14.201417922973633
    5. '	m' → logprob: -15.576417922973633
    6. ')' → logprob: -16.451417922973633
    7. '   ' → logprob: -17.701417922973633
    8. ' M' → logprob: -18.076417922973633
    9. ',' → logprob: -18.201417922973633
    10. ' ' → logprob: -18.201417922973633

Token 585: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007914882153272629
    2. '   ' → logprob: -5.257915019989014
    3. '])' → logprob: -6.382915019989014
    4. ']' → logprob: -7.632915019989014
    5. ' )' → logprob: -8.382914543151855
    6. ')]' → logprob: -9.132914543151855
    7. ')
' → logprob: -9.382914543151855
    8. ')])' → logprob: -10.882914543151855
    9. '))' → logprob: -11.257914543151855
    10. 'def' → logprob: -11.507914543151855

Token 586: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4413871169090271
    2. '   ' → logprob: -1.8163871765136719
    3. '
' → logprob: -1.9413871765136719
    4. ')' → logprob: -3.691387176513672
    5. ':' → logprob: -4.691387176513672
    6. '\n' → logprob: -5.441387176513672
    7. '    
' → logprob: -6.566387176513672
    8. '

' → logprob: -6.566387176513672
    9. ' def' → logprob: -6.691387176513672
    10. ':
' → logprob: -6.816387176513672

Token 587: ' """

' (ID: 28800)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21992549300193787
    2. '   ' → logprob: -2.2199254035949707
    3. '
' → logprob: -2.8449254035949707
    4. '\n' → logprob: -4.094925403594971
    5. '```' → logprob: -5.594925403594971
    6. ')' → logprob: -5.719925403594971
    7. '    
' → logprob: -6.094925403594971
    8. '  
' → logprob: -7.344925403594971
    9. ':' → logprob: -7.344925403594971
    10. ')
' → logprob: -7.469925403594971

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07704247534275055
    2. 'def' → logprob: -2.952042579650879
    3. 'n' → logprob: -4.202042579650879
    4. 'line' → logprob: -5.702042579650879
    5. 'L' → logprob: -6.202042579650879
    6. 'import' → logprob: -7.202042579650879
    7. ' def' → logprob: -8.452042579650879
    8. ' line' → logprob: -8.827042579650879
    9. 'l' → logprob: -8.952042579650879
    10. '    
' → logprob: -9.577042579650879

Token 589: ' #' (ID: 1069)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.18803848326206207
    2. 'line' → logprob: -2.0630385875701904
    3. 'import' → logprob: -3.6880385875701904
    4. 'ligne' → logprob: -4.313038349151611
    5. '   ' → logprob: -5.188038349151611
    6. 'from' → logprob: -8.93803882598877
    7. ' L' → logprob: -9.43803882598877
    8. 'l' → logprob: -9.68803882598877
    9. ' ligne' → logprob: -10.81303882598877
    10. 'layer' → logprob: -11.81303882598877

Token 590: ' Calcul' (ID: 57243)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6748037934303284
    2. 'line' → logprob: -1.2998037338256836
    3. 'import' → logprob: -1.7998037338256836
    4. '   ' → logprob: -4.049803733825684
    5. ' L' → logprob: -4.424803733825684
    6. 'ligne' → logprob: -4.549803733825684
    7. ' line' → logprob: -5.174803733825684
    8. ' import' → logprob: -5.799803733825684
    9. 'from' → logprob: -6.174803733825684
    10. ' ligne' → logprob: -7.424803733825684

Token 591: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2452816218137741
    2. ' =' → logprob: -2.24528169631958
    3. ' line' → logprob: -2.99528169631958
    4. '_line' → logprob: -3.87028169631958
    5. 'ine' → logprob: -4.62028169631958
    6. 'line' → logprob: -4.99528169631958
    7. '=' → logprob: -5.12028169631958
    8. 'er' → logprob: -5.49528169631958
    9. ' ligne' → logprob: -5.74528169631958
    10. ' de' → logprob: -6.24528169631958

Token 592: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2828887104988098
    2. ' L' → logprob: -2.407888650894165
    3. 'ligne' → logprob: -2.407888650894165
    4. 'line' → logprob: -2.907888650894165
    5. ' line' → logprob: -5.282888889312744
    6. ' ligne' → logprob: -5.782888889312744
    7. 'import' → logprob: -6.532888889312744
    8. '   ' → logprob: -7.282888889312744
    9. 'l' → logprob: -7.532888889312744
    10. 'int' → logprob: -7.782888889312744

Token 593: ' ligne' (ID: 19583)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.02920614369213581
    2. 'import' → logprob: -4.529206275939941
    3. 'line' → logprob: -4.654206275939941
    4. 'ligne' → logprob: -4.904206275939941
    5. ' L' → logprob: -7.029206275939941
    6. 'from' → logprob: -9.654206275939941
    7. 'l' → logprob: -10.654206275939941
    8. ' ligne' → logprob: -10.654206275939941
    9. ' line' → logprob: -10.779206275939941
    10. ' import' → logprob: -10.904206275939941

Token 594: ' descend' (ID: 47877)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07376838475465775
    2. '_desc' → logprob: -3.573768377304077
    3. '_line' → logprob: -3.823768377304077
    4. '=' → logprob: -4.198768615722656
    5. 'desc' → logprob: -6.448768615722656
    6. '   ' → logprob: -6.573768615722656
    7. '_l' → logprob: -6.698768615722656
    8. '=line' → logprob: -7.073768615722656
    9. 'L' → logprob: -8.573768615722656
    10. '_' → logprob: -8.698768615722656

Token 595: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.000763287884183228
    2. '   ' → logprob: -7.250763416290283
    3. ' ante' → logprob: -10.375762939453125
    4. 'ance' → logprob: -11.500762939453125
    5. 'anc' → logprob: -12.125762939453125
    6. 'nante' → logprob: -13.125762939453125
    7. 'ente' → logprob: -13.750762939453125
    8. 'an' → logprob: -14.500762939453125
    9. 'a' → logprob: -14.500762939453125
    10. ' ' → logprob: -14.625762939453125

Token 596: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17319247126579285
    2. ' =' → logprob: -2.4231925010681152
    3. 'L' → logprob: -3.0481925010681152
    4. ' L' → logprob: -4.173192501068115
    5. ' line' → logprob: -6.048192501068115
    6. 'line' → logprob: -6.423192501068115
    7. '=' → logprob: -6.548192501068115
    8. 'ligne' → logprob: -6.923192501068115
    9. ' ligne' → logprob: -8.173192024230957
    10. '_line' → logprob: -8.673192024230957

Token 597: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06803304702043533
    2. '   ' → logprob: -2.94303297996521
    3. '=' → logprob: -4.443033218383789
    4. 'L' → logprob: -7.818033218383789
    5. '
' → logprob: -7.943033218383789
    6. ' L' → logprob: -9.068033218383789
    7. 'import' → logprob: -9.193033218383789
    8. '=line' → logprob: -9.193033218383789
    9. 'line' → logprob: -10.318033218383789
    10. ' line' → logprob: -10.318033218383789

Token 598: ' partir' (ID: 12100)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28812795877456665
    2. '(int' → logprob: -2.163127899169922
    3. ' int' → logprob: -2.163127899169922
    4. ' (' → logprob: -4.413127899169922
    5. '(' → logprob: -5.663127899169922
    6. '(i' → logprob: -6.163127899169922
    7. '((' → logprob: -6.788127899169922
    8. ' i' → logprob: -7.413127899169922
    9. 'i' → logprob: -7.913127899169922
    10. 'math' → logprob: -8.413127899169922

Token 599: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23656854033470154
    2. ' de' → logprob: -1.986568570137024
    3. 'de' → logprob: -3.6115684509277344
    4. '=int' → logprob: -4.236568450927734
    5. '(int' → logprob: -5.111568450927734
    6. 'int' → logprob: -5.111568450927734
    7. '=' → logprob: -5.236568450927734
    8. ' =' → logprob: -5.361568450927734
    9. '(i' → logprob: -5.986568450927734
    10. 'import' → logprob: -6.486568450927734

Token 600: ' numéro' (ID: 65036)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4571111798286438
    2. ' i' → logprob: -1.707111120223999
    3. 'c' → logprob: -1.957111120223999
    4. 'int' → logprob: -4.207111358642578
    5. ' c' → logprob: -4.707111358642578
    6. ' math' → logprob: -4.957111358642578
    7. ' int' → logprob: -5.082111358642578
    8. 'math' → logprob: -5.332111358642578
    9. ' (' → logprob: -7.332111358642578
    10. ' cave' → logprob: -7.957111358642578

Token 601: ' cave' (ID: 44365)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14017152786254883
    2. ' =' → logprob: -2.140171527862549
    3. '_line' → logprob: -5.765171527862549
    4. '_desc' → logprob: -5.765171527862549
    5. ' de' → logprob: -6.265171527862549
    6. 'desc' → logprob: -6.890171527862549
    7. 'de' → logprob: -7.390171527862549
    8. '=' → logprob: -7.515171527862549
    9. '_l' → logprob: -7.765171527862549
    10. '_' → logprob: -7.765171527862549

Token 602: '_num' (ID: 9834)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00961985532194376
    2. 'desc' → logprob: -5.50961971282959
    3. '_desc' → logprob: -6.00961971282959
    4. '_line' → logprob: -6.88461971282959
    5. ' =' → logprob: -7.75961971282959
    6. 'line' → logprob: -8.00961971282959
    7. 'L' → logprob: -8.00961971282959
    8. 'ligne' → logprob: -8.63461971282959
    9. '_' → logprob: -9.13461971282959
    10. '    
' → logprob: -9.25961971282959

Token 603: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.287923663854599
    2. ' =' → logprob: -1.4129236936569214
    3. '
' → logprob: -6.162923812866211
    4. '=' → logprob: -6.287923812866211
    5. '    
' → logprob: -7.037923812866211
    6. 'L' → logprob: -7.412923812866211
    7. ' L' → logprob: -8.037923812866211
    8. ',' → logprob: -8.537923812866211
    9. '=line' → logprob: -8.787923812866211
    10. ' line' → logprob: -8.912923812866211

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002587192924693227
    2. '
' → logprob: -6.87758731842041
    3. '    
' → logprob: -7.12758731842041
    4. 'L' → logprob: -8.25258731842041
    5. ' line' → logprob: -8.62758731842041
    6. ' L' → logprob: -9.12758731842041
    7. 'line' → logprob: -9.50258731842041
    8. ' =' → logprob: -10.50258731842041
    9. '	line' → logprob: -10.62758731842041
    10. ',' → logprob: -11.37758731842041

Token 605: ' #' (ID: 1069)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.06891125440597534
    2. ' L' → logprob: -2.81891131401062
    3. '   ' → logprob: -5.318911075592041
    4. 'import' → logprob: -6.693911075592041
    5. 'line' → logprob: -7.693911075592041
    6. ' import' → logprob: -8.4439115524292
    7. ' line' → logprob: -9.3189115524292
    8. 'ligne' → logprob: -12.0689115524292
    9. 'from' → logprob: -12.6939115524292
    10. ' ' → logprob: -12.8189115524292

Token 606: ' Form' (ID: 5287)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.06533481180667877
    2. ' L' → logprob: -3.0653347969055176
    3. 'import' → logprob: -5.065334796905518
    4. '   ' → logprob: -5.065334796905518
    5. 'line' → logprob: -5.815334796905518
    6. ' import' → logprob: -7.690334796905518
    7. ' line' → logprob: -8.440335273742676
    8. 'ligne' → logprob: -8.440335273742676
    9. ' ' → logprob: -10.690335273742676
    10. 'from' → logprob: -10.815335273742676

Token 607: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.3114077150821686
    2. 'ula' → logprob: -2.0614078044891357
    3. '   ' → logprob: -2.4364078044891357
    4. '_line' → logprob: -3.6864078044891357
    5. 'line' → logprob: -4.436407566070557
    6. ' =' → logprob: -5.186407566070557
    7. '=' → logprob: -6.811407566070557
    8. 'at' → logprob: -6.936407566070557
    9. ' line' → logprob: -6.936407566070557
    10. '```' → logprob: -6.936407566070557

Token 608: ' dé' (ID: 2393)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0111273527145386
    2. 'L' → logprob: -1.1361273527145386
    3. '   ' → logprob: -2.136127471923828
    4. '=' → logprob: -2.386127471923828
    5. ' L' → logprob: -3.136127471923828
    6. 'import' → logprob: -3.386127471923828
    7. ':' → logprob: -4.761127471923828
    8. 'line' → logprob: -5.386127471923828
    9. '_line' → logprob: -5.636127471923828
    10. ' line' → logprob: -5.761127471923828

Token 609: 'du' (ID: 698)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6650304794311523
    2. '=' → logprob: -1.4150304794311523
    3. '   ' → logprob: -2.5400304794311523
    4. ' line' → logprob: -2.5400304794311523
    5. '_line' → logprob: -3.7900304794311523
    6. 'import' → logprob: -3.9150304794311523
    7. 'ule' → logprob: -4.290030479431152
    8. '=line' → logprob: -4.915030479431152
    9. 'line' → logprob: -5.290030479431152
    10. '=
' → logprob: -5.540030479431152

Token 610: 'ite' (ID: 651)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9883816242218018
    2. '=' → logprob: -1.3633816242218018
    3. 'u' → logprob: -2.4883816242218018
    4. 'uit' → logprob: -2.6133816242218018
    5. 'uite' → logprob: -2.8633816242218018
    6. 'uced' → logprob: -2.8633816242218018
    7. '   ' → logprob: -3.1133816242218018
    8. 'uire' → logprob: -4.988381385803223
    9. '       ' → logprob: -5.363381385803223
    10. 'x' → logprob: -5.613381385803223

Token 611: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11688759922981262
    2. '   ' → logprob: -2.6168875694274902
    3. '=' → logprob: -3.6168875694274902
    4. ':' → logprob: -4.99188756942749
    5. ' line' → logprob: -7.24188756942749
    6. ' :' → logprob: -7.61688756942749
    7. 'L' → logprob: -7.61688756942749
    8. '(line' → logprob: -8.116888046264648
    9. '=line' → logprob: -8.366888046264648
    10. 'line' → logprob: -8.366888046264648

Token 612: ' pattern' (ID: 8302)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6179083585739136
    2. 'math' → logprob: -1.1179083585739136
    3. ' int' → logprob: -3.242908477783203
    4. '(int' → logprob: -3.617908477783203
    5. 'c' → logprob: -3.867908477783203
    6. '(math' → logprob: -3.992908477783203
    7. ' math' → logprob: -4.117908477783203
    8. 'import' → logprob: -5.492908477783203
    9. '(' → logprob: -5.742908477783203
    10. 'i' → logprob: -6.117908477783203

Token 613: ' de' (ID: 334)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.4126507341861725
    2. 'L' → logprob: -1.53765070438385
    3. '   ' → logprob: -2.1626508235931396
    4. ' =' → logprob: -5.7876505851745605
    5. ' line' → logprob: -5.9126505851745605
    6. ':' → logprob: -7.4126505851745605
    7. 'import' → logprob: -7.9126505851745605
    8. 'line' → logprob: -8.162651062011719
    9. ' ligne' → logprob: -8.412651062011719
    10. ' :' → logprob: -8.787651062011719

Token 614: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6928282380104065
    2. '(' → logprob: -1.8178281784057617
    3. 'placement' → logprob: -2.5678281784057617
    4. ' la' → logprob: -3.0678281784057617
    5. 'spir' → logprob: -3.3178281784057617
    6. 'l' → logprob: -3.9428281784057617
    7. '((' → logprob: -4.067828178405762
    8. 'c' → logprob: -4.442828178405762
    9. '(c' → logprob: -4.442828178405762
    10. '(int' → logprob: -4.567828178405762

Token 615: ' spir' (ID: 27189)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.463822603225708
    2. 'c' → logprob: -1.588822603225708
    3. 'int' → logprob: -2.088822603225708
    4. 'spir' → logprob: -2.463822603225708
    5. 'math' → logprob: -2.838822603225708
    6. '(' → logprob: -2.838822603225708
    7. ' (' → logprob: -3.088822603225708
    8. 'ligne' → logprob: -3.213822603225708
    9. ' int' → logprob: -3.338822603225708
    10. '((' → logprob: -3.963822603225708

Token 616: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.21088406443595886
    2. 'al' → logprob: -1.7108840942382812
    3. '   ' → logprob: -6.335884094238281
    4. 'e' → logprob: -6.710884094238281
    5. 'nale' → logprob: -6.835884094238281
    6. 'alité' → logprob: -6.835884094238281
    7. 'rale' → logprob: -7.210884094238281
    8. 'alne' → logprob: -7.460884094238281
    9. 'érale' → logprob: -7.835884094238281
    10. 'ère' → logprob: -7.960884094238281

Token 617: ' carr' (ID: 18321)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10998847335577011
    2. 'L' → logprob: -3.1099884510040283
    3. '
' → logprob: -3.4849884510040283
    4. ' L' → logprob: -3.6099884510040283
    5. ' line' → logprob: -7.359988689422607
    6. '    
' → logprob: -7.734988689422607
    7. 'line' → logprob: -8.23498821258545
    8. 'import' → logprob: -9.48498821258545
    9. ' =' → logprob: -9.85998821258545
    10. ',' → logprob: -9.98498821258545

Token 618: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8113550543785095
    2. 'é' → logprob: -1.1863551139831543
    3. 'ée' → logprob: -2.8113551139831543
    4. '   ' → logprob: -2.9363551139831543
    5. 'ère' → logprob: -3.3113551139831543
    6. 'ine' → logprob: -3.4363551139831543
    7. 'er' → logprob: -4.311355113983154
    8. 'ere' → logprob: -5.311355113983154
    9. 'ice' → logprob: -5.311355113983154
    10. 'qrt' → logprob: -5.436355113983154

Token 619: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07897527515888214
    2. '
' → logprob: -3.078975200653076
    3. 'L' → logprob: -4.203975200653076
    4. ' L' → logprob: -4.828975200653076
    5. '    
' → logprob: -5.828975200653076
    6. ' line' → logprob: -6.328975200653076
    7. 'line' → logprob: -7.078975200653076
    8. '	line' → logprob: -8.453975677490234
    9. ' ligne' → logprob: -8.703975677490234
    10. 'ligne' → logprob: -8.828975677490234

Token 620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016314588487148285
    2. ' L' → logprob: -4.516314506530762
    3. 'L' → logprob: -5.516314506530762
    4. '
' → logprob: -7.266314506530762
    5. ' line' → logprob: -8.016314506530762
    6. '    
' → logprob: -9.516314506530762
    7. 'line' → logprob: -10.141314506530762
    8. '```' → logprob: -10.891314506530762
    9. 'import' → logprob: -11.141314506530762
    10. '	L' → logprob: -11.391314506530762

Token 621: ' #' (ID: 1069)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.22245897352695465
    2. ' L' → logprob: -1.8474589586257935
    3. '   ' → logprob: -3.222459077835083
    4. 'line' → logprob: -7.222458839416504
    5. 'import' → logprob: -7.347458839416504
    6. ' line' → logprob: -7.847458839416504
    7. ' import' → logprob: -8.972458839416504
    8. ' ' → logprob: -10.847458839416504
    9. 'ligne' → logprob: -11.347458839416504
    10. 'l' → logprob: -11.472458839416504

Token 622: ' D' (ID: 415)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.061755672097206116
    2. ' L' → logprob: -3.311755657196045
    3. '   ' → logprob: -4.061755657196045
    4. 'line' → logprob: -5.311755657196045
    5. 'import' → logprob: -7.311755657196045
    6. ' line' → logprob: -7.936755657196045
    7. 'ligne' → logprob: -8.811756134033203
    8. ' import' → logprob: -10.186756134033203
    9. ' ligne' → logprob: -11.061756134033203
    10. 'l' → logprob: -11.186756134033203

Token 623: 'ér' (ID: 2156)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.06878595799207687
    2. 'line' → logprob: -3.1937859058380127
    3. ' L' → logprob: -5.068786144256592
    4. 'ligne' → logprob: -5.068786144256592
    5. '   ' → logprob: -5.318786144256592
    6. 'import' → logprob: -5.818786144256592
    7. 'istance' → logprob: -6.693786144256592
    8. ' line' → logprob: -6.693786144256592
    9. 'n' → logprob: -7.818786144256592
    10. 'l' → logprob: -7.818786144256592

Token 624: 'ivé' (ID: 136240)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.4551240801811218
    2. '   ' → logprob: -1.5801241397857666
    3. 'L' → logprob: -2.2051241397857666
    4. ' =' → logprob: -4.2051239013671875
    5. 'import' → logprob: -5.3301239013671875
    6. '=' → logprob: -5.4551239013671875
    7. 'u' → logprob: -5.5801239013671875
    8. 'l' → logprob: -5.8301239013671875
    9. 'c' → logprob: -5.9551239013671875
    10. 'line' → logprob: -6.2051239013671875

Token 625: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4544961452484131
    2. '   ' → logprob: -1.704496145248413
    3. '=' → logprob: -1.829496145248413
    4. 'L' → logprob: -5.204496383666992
    5. 'from' → logprob: -5.579496383666992
    6. 'import' → logprob: -5.704496383666992
    7. '_line' → logprob: -5.704496383666992
    8. 'line' → logprob: -6.329496383666992
    9. ' L' → logprob: -6.579496383666992
    10. ' line' → logprob: -7.204496383666992

Token 626: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6744605302810669
    2. ' int' → logprob: -0.9244605302810669
    3. ' math' → logprob: -3.0494604110717773
    4. 'math' → logprob: -3.6744604110717773
    5. '(int' → logprob: -4.299460411071777
    6. 'line' → logprob: -6.174460411071777
    7. ' (' → logprob: -6.424460411071777
    8. '(math' → logprob: -6.674460411071777
    9. '(' → logprob: -7.049460411071777
    10. ' line' → logprob: -7.424460411071777

Token 627: ' rac' (ID: 12334)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2820645570755005
    2. 'line' → logprob: -1.6570645570755005
    3. 'ligne' → logprob: -1.7820645570755005
    4. 'L' → logprob: -2.032064437866211
    5. 'math' → logprob: -2.782064437866211
    6. ' L' → logprob: -3.032064437866211
    7. ' int' → logprob: -3.157064437866211
    8. 'import' → logprob: -3.532064437866211
    9. 'l' → logprob: -4.157064437866211
    10. ' line' → logprob: -4.282064437866211

Token 628: 'ine' (ID: 514)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5745146870613098
    2. '```' → logprob: -2.449514627456665
    3. 'ine' → logprob: -3.199514627456665
    4. '       ' → logprob: -3.324514627456665
    5. 'icale' → logprob: -3.324514627456665
    6. '``' → logprob: -3.699514627456665
    7. 'ic' → logprob: -4.199514865875244
    8. 'ique' → logprob: -4.324514865875244
    9. 'icule' → logprob: -4.449514865875244
    10. '
' → logprob: -4.574514865875244

Token 629: ' carr' (ID: 18321)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0520095825195312
    2. '_i' → logprob: -1.1770095825195312
    3. '_val' → logprob: -1.4270095825195312
    4. '_' → logprob: -3.4270095825195312
    5. 'i' → logprob: -3.8020095825195312
    6. '_c' → logprob: -4.802009582519531
    7. 'val' → logprob: -5.052009582519531
    8. '2' → logprob: -5.677009582519531
    9. '=' → logprob: -5.677009582519531
    10. '   ' → logprob: -5.802009582519531

Token 630: 'ée' (ID: 2894)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.026797505095601082
    2. 'ice' → logprob: -4.526797294616699
    3. 'ote' → logprob: -5.401797294616699
    4. 'ique' → logprob: -5.526797294616699
    5. '   ' → logprob: -6.776797294616699
    6. '2' → logprob: -6.901797294616699
    7. '(' → logprob: -7.276797294616699
    8. '```' → logprob: -7.526797294616699
    9. 'ïne' → logprob: -7.526797294616699
    10. 'îne' → logprob: -8.1517972946167

Token 631: ' correspond' (ID: 11095)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8653448224067688
    2. '(' → logprob: -1.490344762802124
    3. ' =' → logprob: -3.115344762802124
    4. '((' → logprob: -3.240344762802124
    5. '(i' → logprob: -3.365344762802124
    6. '(
' → logprob: -3.490344762802124
    7. '_val' → logprob: -3.490344762802124
    8. '_' → logprob: -3.865344762802124
    9. 'n' → logprob: -3.990344762802124
    10. 'import' → logprob: -4.240345001220703

Token 632: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3474859893321991
    2. '   ' → logprob: -1.8474860191345215
    3. '=' → logprob: -2.9724860191345215
    4. ' =' → logprob: -3.8474860191345215
    5. ' au' → logprob: -3.9724860191345215
    6. 'ant' → logprob: -4.0974860191345215
    7. 'ante' → logprob: -4.8474860191345215
    8. 'à' → logprob: -4.8474860191345215
    9. '(' → logprob: -6.0974860191345215
    10. 'ance' → logprob: -6.3474860191345215

Token 633: ' la' (ID: 557)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6587055325508118
    2. 'int' → logprob: -1.158705472946167
    3. ' math' → logprob: -2.658705472946167
    4. '(int' → logprob: -3.033705472946167
    5. ' (' → logprob: -3.783705472946167
    6. 'math' → logprob: -3.908705472946167
    7. '(math' → logprob: -5.908705711364746
    8. '(' → logprob: -6.408705711364746
    9. ' i' → logprob: -6.908705711364746
    10. ' ' → logprob: -7.408705711364746

Token 634: ' couche' (ID: 119016)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6126503348350525
    2. ' int' → logprob: -1.4876503944396973
    3. ' (' → logprob: -2.3626503944396973
    4. '(int' → logprob: -2.8626503944396973
    5. '(' → logprob: -3.9876503944396973
    6. 'c' → logprob: -4.487650394439697
    7. ' i' → logprob: -4.612650394439697
    8. 'i' → logprob: -4.987650394439697
    9. '1' → logprob: -5.237650394439697
    10. 'math' → logprob: -5.612650394439697

Token 635: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09262453764677048
    2. '=' → logprob: -3.8426244258880615
    3. '   ' → logprob: -3.8426244258880615
    4. '_' → logprob: -4.092624664306641
    5. '_layer' → logprob: -4.592624664306641
    6. '_l' → logprob: -5.717624664306641
    7. '_val' → logprob: -6.217624664306641
    8. '_line' → logprob: -6.342624664306641
    9. '=int' → logprob: -6.717624664306641
    10. '_num' → logprob: -6.717624664306641

Token 636: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4133791923522949
    2. ' la' → logprob: -2.163379192352295
    3. ' laquelle' → logprob: -2.288379192352295
    4. 'which' → logprob: -3.163379192352295
    5. ' which' → logprob: -3.538379192352295
    6. 'le' → logprob: -3.663379192352295
    7. 'l' → logprob: -4.163379192352295
    8. '2' → logprob: -6.163379192352295
    9. 'the' → logprob: -6.163379192352295
    10. 'int' → logprob: -6.913379192352295

Token 637: ' spir' (ID: 27189)
  Prédit: 'spir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spir' → logprob: -0.05818009003996849
    2. ' spir' → logprob: -3.308180093765259
    3. 'c' → logprob: -5.43317985534668
    4. ' spiral' → logprob: -5.43317985534668
    5. ' grille' → logprob: -6.05817985534668
    6. 'sp' → logprob: -6.18317985534668
    7. 'gr' → logprob: -6.18317985534668
    8. ' ' → logprob: -6.68317985534668
    9. '2' → logprob: -7.18317985534668
    10. 'square' → logprob: -7.93317985534668

Token 638: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0025064588990062475
    2. 'ère' → logprob: -6.752506256103516
    3. 'ple' → logprob: -7.252506256103516
    4. 'al' → logprob: -8.127506256103516
    5. 'p' → logprob: -9.127506256103516
    6. 'le' → logprob: -10.502506256103516
    7. 'cale' → logprob: -10.627506256103516
    8. 'érale' → logprob: -11.002506256103516
    9. 'èle' → logprob: -11.002506256103516
    10. 'icale' → logprob: -11.252506256103516

Token 639: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019611135125160217
    2. ' =' → logprob: -5.019611358642578
    3. ' L' → logprob: -5.519611358642578
    4. 'L' → logprob: -5.769611358642578
    5. ',' → logprob: -6.394611358642578
    6. '
' → logprob: -7.519611358642578
    7. '_line' → logprob: -7.519611358642578
    8. '    
' → logprob: -7.769611358642578
    9. ' line' → logprob: -7.769611358642578
    10. '	line' → logprob: -8.394611358642578

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006617080885916948
    2. ' L' → logprob: -5.631617069244385
    3. 'L' → logprob: -6.256617069244385
    4. ' line' → logprob: -7.256617069244385
    5. 'line' → logprob: -8.256617546081543
    6. '    
' → logprob: -10.131617546081543
    7. ' ligne' → logprob: -11.006617546081543
    8. 'ligne' → logprob: -11.131617546081543
    9. '
' → logprob: -11.381617546081543
    10. '	line' → logprob: -11.881617546081543

Token 641: ' layer' (ID: 10261)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.19862625002861023
    2. ' L' → logprob: -2.3236262798309326
    3. '   ' → logprob: -2.5736262798309326
    4. 'line' → logprob: -5.6986260414123535
    5. 'import' → logprob: -7.1986260414123535
    6. 'layer' (adapté à ' layer') → logprob: -7.3236260414123535
    7. ' line' → logprob: -7.3236260414123535
    8. 'ligne' → logprob: -8.323626518249512
    9. ' layer' → logprob: -9.323626518249512
    10. 'l' → logprob: -9.698626518249512

Token 642: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0002326224057469517
    2. '=' → logprob: -8.375232696533203
    3. ' ' → logprob: -14.375232696533203
    4. ' ' → logprob: -14.500232696533203
    5. '=int' → logprob: -14.750232696533203
    6. '_num' → logprob: -15.500232696533203
    7. '_' → logprob: -15.750232696533203
    8. 's' → logprob: -16.250232696533203
    9. '	' → logprob: -17.125232696533203
    10. ' =(' → logprob: -17.625232696533203

Token 643: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6989480257034302
    2. '(int' → logprob: -1.1989480257034302
    3. ' int' → logprob: -1.8239480257034302
    4. ' (' → logprob: -3.9489479064941406
    5. '(math' → logprob: -4.573947906494141
    6. 'math' → logprob: -5.073947906494141
    7. ' math' → logprob: -5.573947906494141
    8. '((' → logprob: -8.32394790649414
    9. ' ' → logprob: -9.94894790649414
    10. '(' → logprob: -10.44894790649414

Token 644: '(math' (ID: 86464)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03229574114084244
    2. '(math' → logprob: -3.5322957038879395
    3. '(((' → logprob: -6.0322957038879395
    4. '(' → logprob: -8.907296180725098
    5. ' ((' → logprob: -12.782296180725098
    6. '((((' → logprob: -12.907296180725098
    7. ' (' → logprob: -13.907296180725098
    8. 'math' → logprob: -15.282296180725098
    9. '(pow' → logprob: -16.40729522705078
    10. '((_' → logprob: -16.65729522705078

Token 645: '.floor' (ID: 23934)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.10649427771568298
    2. '.ceil' → logprob: -2.606494188308716
    3. '.floor' → logprob: -3.606494188308716
    4. 'sqrt' → logprob: -10.481493949890137
    5. '.is' → logprob: -10.731493949890137
    6. '((' → logprob: -11.481493949890137
    7. '.' → logprob: -11.606493949890137
    8. 'floor' → logprob: -12.106493949890137
    9. 'ceil' → logprob: -12.731493949890137
    10. '.pow' → logprob: -13.856493949890137

Token 646: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005335505120456219
    2. '(((' → logprob: -5.255335330963135
    3. '(' → logprob: -9.255335807800293
    4. '((((' → logprob: -12.880335807800293
    5. ' ((' → logprob: -12.880335807800293
    6. '(math' → logprob: -14.005335807800293
    7. '   ' → logprob: -16.380334854125977
    8. ' (' → logprob: -16.880334854125977
    9. '(
' → logprob: -18.005334854125977
    10. '((_' → logprob: -18.005334854125977

Token 647: 'math' (ID: 20310)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.20129646360874176
    2. 'math' → logprob: -1.8262964487075806
    3. '((' → logprob: -4.201296329498291
    4. '(c' → logprob: -5.701296329498291
    5. '(i' → logprob: -6.326296329498291
    6. '(int' → logprob: -7.826296329498291
    7. 'c' → logprob: -7.951296329498291
    8. ' (' → logprob: -8.95129680633545
    9. 'int' → logprob: -9.57629680633545
    10. '(' → logprob: -9.57629680633545

Token 648: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0020155981183052063
    2. '.is' → logprob: -6.252015590667725
    3. 'sqrt' → logprob: -10.127016067504883
    4. '.ceil' → logprob: -10.502016067504883
    5. '.floor' → logprob: -11.252016067504883
    6. 'is' → logprob: -13.002016067504883
    7. '(i' → logprob: -13.377016067504883
    8. '(s' → logprob: -13.877016067504883
    9. '.pow' → logprob: -14.502016067504883
    10. '
' → logprob: -15.377016067504883

Token 649: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.000157293034135364
    2. '(' → logprob: -8.875157356262207
    3. 'c' → logprob: -11.875157356262207
    4. '((' → logprob: -12.125157356262207
    5. ' (' → logprob: -12.500157356262207
    6. '(i' → logprob: -14.250157356262207
    7. '(
' → logprob: -15.500157356262207
    8. ')c' → logprob: -15.875157356262207
    9. '   ' → logprob: -16.25015640258789
    10. '(max' → logprob: -16.62515640258789

Token 650: 'ave' (ID: 577)
  Prédit: 'ave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ave' → logprob: -0.00016241880075540394
    2. 'c' → logprob: -9.750162124633789
    3. '(' → logprob: -10.750162124633789
    4. '   ' → logprob: -10.875162124633789
    5. '(c' → logprob: -11.125162124633789
    6. 'ape' → logprob: -11.875162124633789
    7. 've' → logprob: -12.375162124633789
    8. '{' → logprob: -12.375162124633789
    9. 'a' → logprob: -12.500162124633789
    10. '#' → logprob: -12.625162124633789

Token 651: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -4.143808109802194e-05
    2. 'num' → logprob: -10.375041007995605
    3. ' _' → logprob: -12.250041007995605
    4. ')_' → logprob: -13.750041007995605
    5. '
' → logprob: -14.125041007995605
    6. '{' → logprob: -14.750041007995605
    7. '_' → logprob: -15.000041007995605
    8. '_NUM' → logprob: -15.000041007995605
    9. '_nums' → logprob: -15.000041007995605
    10. '(num' → logprob: -15.125041007995605

Token 652: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3485088050365448
    2. '-' → logprob: -1.2235088348388672
    3. ')' → logprob: -9.848508834838867
    4. '   ' → logprob: -12.723508834838867
    5. ' ' → logprob: -12.848508834838867
    6. '1' → logprob: -13.223508834838867
    7. '-
' → logprob: -13.848508834838867
    8. '[' → logprob: -13.973508834838867
    9. '0' → logprob: -14.973508834838867
    10. ' -
' → logprob: -14.973508834838867

Token 653: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.750009536743164
    4. '
' → logprob: -16.875009536743164
    5. '0' → logprob: -18.250009536743164
    6. ')' → logprob: -18.625009536743164
    7. '  ' → logprob: -18.875009536743164
    8. '```' → logprob: -19.500009536743164
    9. '    ' → logprob: -20.500009536743164
    10. '2' → logprob: -20.500009536743164

Token 654: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.875004768371582
    3. '0' → logprob: -13.500004768371582
    4. '
' → logprob: -15.375004768371582
    5. '   ' → logprob: -16.000003814697266
    6. '2' → logprob: -17.000003814697266
    7. ')' → logprob: -17.062503814697266
    8. '

' → logprob: -17.687503814697266
    9. '```' → logprob: -17.750003814697266
    10. '  ' → logprob: -18.187503814697266

Token 655: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005817461642436683
    2. ')+' → logprob: -7.500581741333008
    3. ' )' → logprob: -10.625581741333008
    4. '))' → logprob: -13.000581741333008
    5. '   ' → logprob: -14.875581741333008
    6. ')
' → logprob: -15.000581741333008
    7. '")' → logprob: -15.375581741333008
    8. '')' → logprob: -15.500581741333008
    9. '`)' → logprob: -15.500581741333008
    10. '+' → logprob: -16.000581741333008

Token 656: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003539605299010873
    2. ')+' → logprob: -5.878539562225342
    3. '+' → logprob: -7.503539562225342
    4. ' +' → logprob: -9.2535400390625
    5. ' )' → logprob: -9.5035400390625
    6. '   ' → logprob: -13.2535400390625
    7. '```' → logprob: -13.2535400390625
    8. '}' → logprob: -13.5035400390625
    9. ']' → logprob: -13.8785400390625
    10. ' ' → logprob: -14.0035400390625

Token 657: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.250431060791016
    4. '
' → logprob: -18.625431060791016
    5. '  ' → logprob: -19.500431060791016
    6. '```' → logprob: -19.875431060791016
    7. '2' → logprob: -20.125431060791016
    8. ')' → logprob: -20.250431060791016
    9. '    ' → logprob: -20.625431060791016
    10. '0' → logprob: -20.625431060791016

Token 658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -16.5
    4. ')' → logprob: -18.875
    5. '2' → logprob: -19.25
    6. '   ' → logprob: -19.5
    7. '

' → logprob: -19.875
    8. '0' → logprob: -19.875
    9. '```' → logprob: -20.0
    10. '  ' → logprob: -20.8125

Token 659: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000241801084484905
    2. ' )' → logprob: -8.500242233276367
    3. ')/' → logprob: -10.500242233276367
    4. '))' → logprob: -12.625242233276367
    5. ')//' → logprob: -12.875242233276367
    6. '   ' → logprob: -13.250242233276367
    7. '")' → logprob: -14.000242233276367
    8. ')
' → logprob: -14.500242233276367
    9. '`)' → logprob: -14.750242233276367
    10. '())' → logprob: -14.875242233276367

Token 660: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001971934689208865
    2. ' )' → logprob: -6.37697172164917
    3. ')/' → logprob: -9.001972198486328
    4. '/' → logprob: -9.501972198486328
    5. ')//' → logprob: -9.876972198486328
    6. '))' → logprob: -11.751972198486328
    7. ' /' → logprob: -12.501972198486328
    8. '   ' → logprob: -12.751972198486328
    9. '//' → logprob: -13.001972198486328
    10. ')
' → logprob: -14.251972198486328

Token 661: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017024369444698095
    2. ' ' → logprob: -6.376702308654785
    3. '
' → logprob: -15.751702308654785
    4. '   ' → logprob: -15.876702308654785
    5. '	' → logprob: -18.5017032623291
    6. ')' → logprob: -18.6267032623291
    7. '۲' → logprob: -19.0017032623291
    8. '```' → logprob: -19.2517032623291
    9. '  ' → logprob: -19.5017032623291
    10. '1' → logprob: -19.7517032623291

Token 662: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. ')' → logprob: -18.125036239624023
    4. '1' → logprob: -18.500036239624023
    5. '
' → logprob: -18.625036239624023
    6. '   ' → logprob: -18.875036239624023
    7. '۲' → logprob: -19.250036239624023
    8. '２' → logprob: -20.625036239624023
    9. '	' → logprob: -20.750036239624023
    10. '  ' → logprob: -21.000036239624023

Token 663: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.062256716191768646
    2. '))
' → logprob: -2.8122568130493164
    3. '))

' → logprob: -8.437256813049316
    4. ' ))' → logprob: -10.562256813049316
    5. '))
' → logprob: -11.187256813049316
    6. ')' → logprob: -11.187256813049316
    7. ' ))
' → logprob: -11.437256813049316
    8. '))


' → logprob: -13.187256813049316
    9. '   ' → logprob: -13.312256813049316
    10. ')))' → logprob: -13.562256813049316

Token 664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022135386243462563
    2. '
' → logprob: -7.252213478088379
    3. 'children' → logprob: -7.502213478088379
    4. 'next' → logprob: -8.002213478088379
    5. '    
' → logprob: -8.127213478088379
    6. 'line' → logprob: -8.752213478088379
    7. ' children' → logprob: -10.002213478088379
    8. ' next' → logprob: -10.377213478088379
    9. ' line' → logprob: -11.002213478088379
    10. 'possible' → logprob: -11.627213478088379

Token 665: ' children' (ID: 3953)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2836654782295227
    2. 'children' (adapté à ' children') → logprob: -2.283665418624878
    3. ' line' → logprob: -3.033665418624878
    4. '   ' → logprob: -3.283665418624878
    5. 'ligne' → logprob: -3.783665418624878
    6. ' children' → logprob: -3.908665418624878
    7. 'L' → logprob: -4.908665657043457
    8. ' ligne' → logprob: -5.908665657043457
    9. ' L' → logprob: -6.533665657043457
    10. 'l' → logprob: -7.033665657043457

Token 666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25220221281051636
    2. '=' → logprob: -1.5022022724151611
    3. '_' → logprob: -8.877202033996582
    4. 's' → logprob: -9.377202033996582
    5. '_nums' → logprob: -10.877202033996582
    6. '_num' → logprob: -11.127202033996582
    7. '_candidates' → logprob: -12.752202033996582
    8. '_ids' → logprob: -12.752202033996582
    9. '=[]' → logprob: -13.002202033996582
    10. '_numbers' → logprob: -13.002202033996582

Token 667: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16277267038822174
    2. '[]
' → logprob: -1.9127726554870605
    3. '[' → logprob: -6.1627726554870605
    4. '[
' → logprob: -8.412773132324219
    5. '[]

' → logprob: -8.662773132324219
    6. ' []' → logprob: -11.162773132324219
    7. '[c' → logprob: -11.537773132324219
    8. '[i' → logprob: -11.912773132324219
    9. ' []
' → logprob: -12.912773132324219
    10. ' [' → logprob: -13.287773132324219

Token 668: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017469348385930061
    2. 'for' → logprob: -7.251747131347656
    3. '
' → logprob: -7.751747131347656
    4. '    
' → logprob: -7.876747131347656
    5. ' for' → logprob: -9.251747131347656
    6. 'line' → logprob: -10.001747131347656
    7. 'children' → logprob: -10.001747131347656
    8. '```' → logprob: -11.751747131347656
    9. ' line' → logprob: -12.126747131347656
    10. '	line' → logprob: -12.376747131347656

Token 669: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014377975836396217
    2. 'c' → logprob: -5.264378070831299
    3. 'line' → logprob: -5.264378070831299
    4. 'possible' → logprob: -6.389378070831299
    5. 'offset' → logprob: -6.889378070831299
    6. '   ' → logprob: -7.264378070831299
    7. 'children' → logprob: -9.26437759399414
    8. 'lines' → logprob: -9.38937759399414
    9. 'potential' → logprob: -9.38937759399414
    10. 'poss' → logprob: -9.51437759399414

Token 670: ' diff' (ID: 8868)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.49880731105804443
    2. 'delta' → logprob: -1.1238073110580444
    3. ' offset' → logprob: -3.748807430267334
    4. ' delta' → logprob: -3.873807430267334
    5. 'diff' → logprob: -4.123807430267334
    6. 'child' → logprob: -5.748807430267334
    7. 'd' → logprob: -6.748807430267334
    8. 'dx' → logprob: -7.373807430267334
    9. 'offs' → logprob: -7.998807430267334
    10. ' diff' → logprob: -8.248806953430176

Token 671: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16050255298614502
    2. 'in' → logprob: -1.910502552986145
    3. ' ' → logprob: -8.535502433776855
    4. '	in' → logprob: -10.160502433776855
    5. 'n' → logprob: -11.535502433776855
    6. '  ' → logprob: -12.035502433776855
    7. 'diff' → logprob: -12.160502433776855
    8. 's' → logprob: -12.410502433776855
    9. '   ' → logprob: -12.410502433776855
    10. '_in' → logprob: -12.535502433776855

Token 672: ' (' (ID: 350)
  Prédit: '[layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[layer' → logprob: -0.030120577663183212
    2. '[-' → logprob: -4.280120372772217
    3. '[' → logprob: -4.780120372772217
    4. '[L' → logprob: -5.530120372772217
    5. '[l' → logprob: -6.530120372772217
    6. '(layer' → logprob: -6.780120372772217
    7. '[line' → logprob: -8.030120849609375
    8. '[level' → logprob: -8.780120849609375
    9. '[label' → logprob: -9.655120849609375
    10. '(L' → logprob: -9.655120849609375

Token 673: 'layer' (ID: 19730)
  Prédit: 'layer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layer' → logprob: -0.0026981167029589415
    2. '-layer' → logprob: -6.127697944641113
    3. '0' → logprob: -8.127697944641113
    4. '-' → logprob: -8.877697944641113
    5. ' layer' → logprob: -10.002697944641113
    6. '-l' → logprob: -11.252697944641113
    7. '(layer' → logprob: -11.877697944641113
    8. '[layer' → logprob: -12.252697944641113
    9. '	layer' → logprob: -12.752697944641113
    10. 'lay' → logprob: -13.627697944641113

Token 674: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.36083483695983887
    2. ',' → logprob: -1.3608348369598389
    3. ' -' → logprob: -3.110834836959839
    4. '   ' → logprob: -7.110835075378418
    5. ' ,' → logprob: -7.860835075378418
    6. ',
' → logprob: -8.860835075378418
    7. ' ' → logprob: -9.110835075378418
    8. '0' → logprob: -9.610835075378418
    9. '	' → logprob: -9.610835075378418
    10. '):
' → logprob: -9.860835075378418

Token 675: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.37500762939453
    4. '0' → logprob: -18.37500762939453
    5. '
' → logprob: -18.43750762939453
    6. '  ' → logprob: -18.50000762939453
    7. '-' → logprob: -19.12500762939453
    8. '```' → logprob: -19.12500762939453
    9. '۱' → logprob: -19.37500762939453
    10. ')' → logprob: -19.62500762939453

Token 676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.875001907348633
    4. '```' → logprob: -19.187501907348633
    5. '
' → logprob: -19.375001907348633
    6. '-' → logprob: -19.375001907348633
    7. '۱' → logprob: -19.625001907348633
    8. '  ' → logprob: -19.687501907348633
    9. '0' → logprob: -19.750001907348633
    10. '' → logprob: -20.312501907348633

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001142718712799251
    2. ' ,' → logprob: -7.376142501831055
    3. ',
' → logprob: -7.626142501831055
    4. '   ' → logprob: -10.876142501831055
    5. '):
' → logprob: -13.501142501831055
    6. '),' → logprob: -13.751142501831055
    7. ')' → logprob: -13.876142501831055
    8. ',module' → logprob: -14.376142501831055
    9. ',

' → logprob: -14.626142501831055
    10. ',c' → logprob: -14.626142501831055

Token 678: ' layer' (ID: 10261)
  Prédit: 'layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layer' → logprob: -5.56233171664644e-05
    2. ' layer' → logprob: -9.875055313110352
    3. '   ' → logprob: -12.500055313110352
    4. '	layer' → logprob: -15.000055313110352
    5. 'lay' → logprob: -17.87505531311035
    6. '  ' → logprob: -18.25005531311035
    7. 'lane' → logprob: -18.62505531311035
    8. 'layers' → logprob: -19.00005531311035
    9. ' ' → logprob: -19.37505531311035
    10. '    ' → logprob: -19.62505531311035

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008706517517566681
    2. ' ,' → logprob: -4.758706569671631
    3. '+' → logprob: -9.883706092834473
    4. '   ' → logprob: -11.508706092834473
    5. ' +' → logprob: -11.883706092834473
    6. ' ' → logprob: -12.133706092834473
    7. 'layer' → logprob: -12.258706092834473
    8. '),' → logprob: -12.383706092834473
    9. ')' → logprob: -12.758706092834473
    10. ',
' → logprob: -12.883706092834473

Token 680: ' layer' (ID: 10261)
  Prédit: 'layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layer' → logprob: -0.0003361774142831564
    2. ' layer' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.375336647033691
    4. '	layer' → logprob: -16.125335693359375
    5. '(layer' → logprob: -18.125335693359375
    6. '    ' → logprob: -18.250335693359375
    7. ' ' → logprob: -19.250335693359375
    8. '       ' → logprob: -19.875335693359375
    9. '  ' → logprob: -20.000335693359375
    10. 'lay' → logprob: -20.250335693359375

Token 681: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022665798664093
    2. ' +' → logprob: -1.9102267026901245
    3. ')' → logprob: -14.035226821899414
    4. '1' → logprob: -14.410226821899414
    5. ',' → logprob: -15.035226821899414
    6. ' ' → logprob: -15.285226821899414
    7. '   ' → logprob: -15.410226821899414
    8. '+
' → logprob: -15.785226821899414
    9. '):
' → logprob: -16.035226821899414
    10. '):' → logprob: -16.910226821899414

Token 682: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014340966008603573
    2. '0' → logprob: -4.264340877532959
    3. ' ' → logprob: -8.639341354370117
    4. '+' → logprob: -14.889341354370117
    5. '   ' → logprob: -16.139341354370117
    6. ')' → logprob: -18.514341354370117
    7. '2' → logprob: -18.639341354370117
    8. ' +' → logprob: -19.014341354370117
    9. '  ' → logprob: -19.139341354370117
    10. '```' → logprob: -19.514341354370117

Token 683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.265633419388905e-05
    2. '0' → logprob: -9.750062942504883
    3. ' ' → logprob: -12.375062942504883
    4. '+' → logprob: -15.625062942504883
    5. '   ' → logprob: -18.250062942504883
    6. '2' → logprob: -18.875062942504883
    7. '```' → logprob: -19.250062942504883
    8. '
' → logprob: -19.500062942504883
    9. '-' → logprob: -20.000062942504883
    10. ')' → logprob: -20.250062942504883

Token 684: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014348366297781467
    2. '):' → logprob: -4.26434850692749
    3. '   ' → logprob: -8.764348030090332
    4. '):
' → logprob: -10.764348030090332
    5. ')' → logprob: -12.514348030090332
    6. '       ' → logprob: -13.014348030090332
    7. ':' → logprob: -14.764348030090332
    8. ' ):
' → logprob: -14.764348030090332
    9. '):

' → logprob: -15.139348030090332
    10. ',' → logprob: -15.264348030090332

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012573461048305035
    2. '   ' → logprob: -4.3875732421875
    3. ' if' → logprob: -10.2625732421875
    4. ',' → logprob: -12.1375732421875
    5. '	   ' → logprob: -12.3875732421875
    6. 'if' → logprob: -12.6375732421875
    7. '<|end|>' → logprob: -13.1375732421875
    8. '           ' → logprob: -13.2625732421875
    9. '	children' → logprob: -13.3875732421875
    10. '    
' → logprob: -13.7625732421875

Token 686: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' (adapté à ' child') → logprob: -0.22971922159194946
    2. '       ' → logprob: -1.8547191619873047
    3. ' child' → logprob: -3.4797191619873047
    4. 'next' → logprob: -4.604719161987305
    5. 'candidate' → logprob: -5.104719161987305
    6. 'n' → logprob: -7.229719161987305
    7. ' candidate' → logprob: -8.354719161987305
    8. '   ' → logprob: -8.729719161987305
    9. 'new' → logprob: -8.979719161987305
    10. 'c' → logprob: -8.979719161987305

Token 687: ' =' (ID: 314)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.035135895013809204
    2. ' =' → logprob: -3.6601359844207764
    3. '=' → logprob: -4.910135746002197
    4. 'num' → logprob: -7.785135746002197
    5. '_candidate' → logprob: -7.785135746002197
    6. '_id' → logprob: -8.035136222839355
    7. '_' → logprob: -8.660136222839355
    8. '_n' → logprob: -10.285136222839355
    9. '   ' → logprob: -10.660136222839355
    10. '_c' → logprob: -11.535136222839355

Token 688: ' cave' (ID: 44365)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11357810348272324
    2. ' cave' → logprob: -2.2385780811309814
    3. '   ' → logprob: -7.2385783195495605
    4. ' c' → logprob: -10.988577842712402
    5. '	c' → logprob: -11.363577842712402
    6. ' ' → logprob: -12.863577842712402
    7. '  ' → logprob: -13.863577842712402
    8. ' caves' → logprob: -13.863577842712402
    9. '       ' → logprob: -14.113577842712402
    10. '    ' → logprob: -14.113577842712402

Token 689: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.5048530030981055e-06
    2. 'num' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.375001907348633
    4. '+' → logprob: -17.625001907348633
    5. '_NUM' → logprob: -17.625001907348633
    6. 'Num' → logprob: -17.750001907348633
    7. '[num' → logprob: -19.875001907348633
    8. ' _' → logprob: -20.000001907348633
    9. '_Num' → logprob: -20.125001907348633
    10. 's' → logprob: -20.250001907348633

Token 690: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014165744185447693
    2. '+' → logprob: -4.264165878295898
    3. ' +
' → logprob: -13.139165878295898
    4. ' ' → logprob: -16.7641658782959
    5. '+
' → logprob: -16.8891658782959
    6. ' plus' → logprob: -17.0141658782959
    7. ' +
' → logprob: -17.2641658782959
    8. ' ' → logprob: -18.1391658782959
    9. '	' → logprob: -18.3891658782959
    10. '   ' → logprob: -18.3891658782959

Token 691: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00012035090912831947
    2. ' diff' → logprob: -9.500120162963867
    3. 'child' → logprob: -10.000120162963867
    4. '	diff' → logprob: -17.625120162963867
    5. ' child' → logprob: -17.750120162963867
    6. '(diff' → logprob: -18.125120162963867
    7. 'dif' → logprob: -18.750120162963867
    8. 'int' → logprob: -20.125120162963867
    9. '_diff' → logprob: -20.250120162963867
    10. '
' → logprob: -20.375120162963867

Token 692: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02094600722193718
    2. '
' → logprob: -3.8959460258483887
    3. '<|end|>' → logprob: -8.39594554901123
    4. '	' → logprob: -9.89594554901123
    5. '   ' → logprob: -10.27094554901123
    6. '        
' → logprob: -10.89594554901123
    7. ' if' → logprob: -11.52094554901123
    8. '
' → logprob: -11.52094554901123
    9. 'if' → logprob: -11.64594554901123
    10. '  
' → logprob: -11.89594554901123

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.666993507067673e-05
    2. '	' → logprob: -10.625036239624023
    3. '   ' → logprob: -11.750036239624023
    4. '
' → logprob: -13.875036239624023
    5. '	   ' → logprob: -14.000036239624023
    6. ' if' → logprob: -14.250036239624023
    7. '        
' → logprob: -14.250036239624023
    8. '           ' → logprob: -15.000036239624023
    9. '<|end|>' → logprob: -15.625036239624023
    10. '     ' → logprob: -16.250036239624023

Token 694: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002334568416699767
    2. ' if' → logprob: -8.75023365020752
    3. '       ' → logprob: -9.50023365020752
    4. '	if' → logprob: -16.625232696533203
    5. '   ' → logprob: -20.000232696533203
    6. '
' → logprob: -21.000232696533203
    7. '	' → logprob: -21.500232696533203
    8. 'If' → logprob: -21.625232696533203
    9. ' ' → logprob: -22.750232696533203
    10. '        
' → logprob: -23.125232696533203

Token 695: ' ' (ID: 220)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.05100703984498978
    2. '1' → logprob: -3.051007032394409
    3. ' child' → logprob: -6.051007270812988
    4. ' ' → logprob: -9.801007270812988
    5. '0' → logprob: -12.301007270812988
    6. '	child' → logprob: -14.301007270812988
    7. '(child' → logprob: -15.051007270812988
    8. '   ' → logprob: -15.051007270812988
    9. 'Child' → logprob: -17.051006317138672
    10. '```' → logprob: -17.676006317138672

Token 696: '1' (ID: 16)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.04865413159132004
    2. '1' → logprob: -3.048654079437256
    3. '0' → logprob: -10.298654556274414
    4. ' child' → logprob: -10.423654556274414
    5. ' ' → logprob: -13.173654556274414
    6. '(child' → logprob: -14.173654556274414
    7. '	child' → logprob: -14.798654556274414
    8. 'Child' → logprob: -15.798654556274414
    9. '   ' → logprob: -16.798654556274414
    10. '.child' → logprob: -16.923654556274414

Token 697: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3868754208087921
    2. '<=' → logprob: -1.1368753910064697
    3. 'child' → logprob: -13.51187515258789
    4. ' child' → logprob: -14.13687515258789
    5. ')<=' → logprob: -14.38687515258789
    6. '<' → logprob: -14.76187515258789
    7. ']<=' → logprob: -15.76187515258789
    8. ')' → logprob: -15.76187515258789
    9. ',' → logprob: -15.88687515258789
    10. ' <' → logprob: -15.88687515258789

Token 698: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -1.5048530030981055e-06
    2. ' child' → logprob: -13.500001907348633
    3. '	child' → logprob: -21.750001907348633
    4. '(child' → logprob: -22.125001907348633
    5. '.child' → logprob: -24.125001907348633
    6. '_child' → logprob: -24.875001907348633
    7. 'chat' → logprob: -25.125001907348633
    8. 'Child' → logprob: -25.875001907348633
    9. 'children' → logprob: -26.375001907348633
    10. 'ch' → logprob: -26.375001907348633

Token 699: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11940493434667587
    2. '<=' → logprob: -2.4944050312042236
    3. ' and' → logprob: -3.6194050312042236
    4. 'and' → logprob: -5.7444047927856445
    5. 'le' → logprob: -12.869404792785645
    6. ' ≤' → logprob: -13.744404792785645
    7. '<|end|>' → logprob: -13.744404792785645
    8. '       ' → logprob: -13.994404792785645
    9. '≤' → logprob: -15.244404792785645
    10. ' ' → logprob: -15.619404792785645

Token 700: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9361264946837764e-07
    2. ' m' → logprob: -15.75
    3. '	m' → logprob: -23.25
    4. '   ' → logprob: -25.375
    5. 'max' → logprob: -26.25
    6. 'м' → logprob: -26.375
    7. 'ｍ' → logprob: -26.375
    8. '_m' → logprob: -26.625
    9. 'math' → logprob: -27.125
    10. '[m' → logprob: -27.375

Token 701: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7125526666641235
    2. ':' → logprob: -0.8375526666641235
    3. ' and' → logprob: -2.587552547454834
    4. '           ' → logprob: -6.837552547454834
    5. '       ' → logprob: -8.337553024291992
    6. '):
' → logprob: -8.837553024291992
    7. 'and' → logprob: -8.962553024291992
    8. ':
' → logprob: -11.087553024291992
    9. ',' → logprob: -11.212553024291992
    10. '):' → logprob: -11.962553024291992

Token 702: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.9153885558771435e-06
    2. '	       ' → logprob: -12.500005722045898
    3. '               ' → logprob: -14.125005722045898
    4. '       ' → logprob: -14.750005722045898
    5. 'children' → logprob: -15.125005722045898
    6. '		' → logprob: -15.125005722045898
    7. '          ' → logprob: -15.750005722045898
    8. '```' → logprob: -16.2500057220459
    9. '	children' → logprob: -17.5000057220459
    10. ' children' → logprob: -17.6250057220459

Token 703: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' (adapté à ' children') → logprob: -0.003725257236510515
    2. ' children' → logprob: -6.003725051879883
    3. '           ' → logprob: -7.253725051879883
    4. '               ' → logprob: -8.378725051879883
    5. '	children' → logprob: -8.628725051879883
    6. '   ' → logprob: -9.128725051879883
    7. '       ' → logprob: -10.878725051879883
    8. '.children' → logprob: -12.878725051879883
    9. '(children' → logprob: -13.378725051879883
    10. '_children' → logprob: -14.253725051879883

Token 704: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.751746746478602e-05
    2. '.' → logprob: -10.00004768371582
    3. 'append' → logprob: -13.87504768371582
    4. '.app' → logprob: -14.87504768371582
    5. '.Append' → logprob: -15.37504768371582
    6. '.extend' → logprob: -15.75004768371582
    7. '.add' → logprob: -15.87504768371582
    8. '.insert' → logprob: -16.75004768371582
    9. '_append' → logprob: -17.12504768371582
    10. '.setdefault' → logprob: -17.12504768371582

Token 705: '(child' (ID: 34164)
  Prédit: '(child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(child' → logprob: -0.0040785204619169235
    2. 'child' → logprob: -5.504078388214111
    3. ' child' → logprob: -15.87907886505127
    4. '(' → logprob: -18.754077911376953
    5. '	child' → logprob: -19.004077911376953
    6. '(
' → logprob: -20.629077911376953
    7. '_child' → logprob: -21.254077911376953
    8. 'Child' → logprob: -21.379077911376953
    9. '(ch' → logprob: -22.004077911376953
    10. '(children' → logprob: -22.629077911376953

Token 706: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010986098641296849
    2. ')
' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.375109672546387
    4. ')return' → logprob: -15.625109672546387
    5. ' )' → logprob: -15.625109672546387
    6. ')
' → logprob: -17.250110626220703
    7. ')

' → logprob: -17.375110626220703
    8. '),' → logprob: -18.250110626220703
    9. '       ' → logprob: -19.125110626220703
    10. ')}' → logprob: -19.875110626220703

Token 707: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010102755390107632
    2. 'return' → logprob: -4.63510274887085
    3. ' return' → logprob: -8.385103225708008
    4. '
' → logprob: -9.385103225708008
    5. '    
' → logprob: -10.760103225708008
    6. '	return' → logprob: -11.510103225708008
    7. '<|end|>' → logprob: -14.135103225708008
    8. ':return' → logprob: -14.385103225708008
    9. '       ' → logprob: -14.760103225708008
    10. '  
' → logprob: -14.885103225708008

Token 708: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47495561838150024
    2. '   ' → logprob: -0.9749556183815002
    3. ' return' → logprob: -7.2249555587768555
    4. '	return' → logprob: -9.099955558776855
    5. '
' → logprob: -10.474955558776855
    6. '    
' → logprob: -11.849955558776855
    7. ':return' → logprob: -13.474955558776855
    8. '```' → logprob: -15.099955558776855
    9. 'eturn' → logprob: -15.224955558776855
    10. '       ' → logprob: -15.349955558776855

Token 709: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -1.8624639324116288e-06
    2. ' children' → logprob: -13.250001907348633
    3. '(children' → logprob: -19.250001907348633
    4. '	children' → logprob: -21.875001907348633
    5. 'child' → logprob: -22.875001907348633
    6. '.children' → logprob: -23.000001907348633
    7. '[' → logprob: -25.625001907348633
    8. '_children' → logprob: -25.875001907348633
    9. 'Children' → logprob: -25.875001907348633
    10. '   ' → logprob: -27.125001907348633

Token 710: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 711: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -13.500003814697266
    3. 'import' → logprob: -13.625003814697266
    4. '#' → logprob: -14.625003814697266
    5. 'max' → logprob: -16.000003814697266
    6. 'from' → logprob: -16.500003814697266
    7. 'sys' → logprob: -16.750003814697266
    8. ' def' → logprob: -16.875003814697266
    9. '    
' → logprob: -17.375003814697266
    10. 'm' → logprob: -18.125003814697266

Token 712: ' solve' (ID: 17722)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.282145380973816
    2. ' solve' → logprob: -1.532145380973816
    3. ' main' → logprob: -1.907145380973816
    4. ' find' → logprob: -2.2821455001831055
    5. ' bfs' → logprob: -2.5321455001831055
    6. 'solve' → logprob: -3.0321455001831055
    7. 'dfs' → logprob: -3.1571455001831055
    8. 'b' → logprob: -3.6571455001831055
    9. ' shortest' → logprob: -3.9071455001831055
    10. ' explore' → logprob: -4.5321455001831055

Token 713: '(m' (ID: 2145)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5981953740119934
    2. '(m' → logprob: -0.8481953740119934
    3. '(n' → logprob: -4.348195552825928
    4. '(' → logprob: -4.973195552825928
    5. '():
' → logprob: -7.723195552825928
    6. '(M' → logprob: -7.848195552825928
    7. '(N' → logprob: -8.59819507598877
    8. '(s' → logprob: -8.72319507598877
    9. '()' → logprob: -8.72319507598877
    10. '(c' → logprob: -8.97319507598877

Token 714: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34934404492378235
    2. ',' → logprob: -1.22434401512146
    3. '):
' → logprob: -7.224344253540039
    4. ')' → logprob: -9.099344253540039
    5. ':' → logprob: -10.724344253540039
    6. ' ):' → logprob: -11.349344253540039
    7. '):
' → logprob: -11.474344253540039
    8. ' ,' → logprob: -12.474344253540039
    9. '   ' → logprob: -12.849344253540039
    10. ',n' → logprob: -13.724344253540039

Token 715: ' n' (ID: 297)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.3924922943115234
    2. 'n' → logprob: -1.7674922943115234
    3. 'p' → logprob: -1.8924922943115234
    4. 's' → logprob: -1.8924922943115234
    5. 'k' → logprob: -2.0174922943115234
    6. 'is' → logprob: -3.3924922943115234
    7. 'pr' → logprob: -3.5174922943115234
    8. 'a' → logprob: -3.6424922943115234
    9. 'prime' → logprob: -4.392492294311523
    10. 'x' → logprob: -4.517492294311523

Token 716: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5775452256202698
    2. '):' → logprob: -0.8275452256202698
    3. '):
' → logprob: -6.577545166015625
    4. ')' → logprob: -8.702545166015625
    5. '):
' → logprob: -10.452545166015625
    6. ':' → logprob: -12.077545166015625
    7. '   ' → logprob: -12.452545166015625
    8. ' ,' → logprob: -14.327545166015625
    9. '),' → logprob: -14.327545166015625
    10. '):

' → logprob: -14.327545166015625

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4716074466705322
    2. '
' → logprob: -1.0966074466705322
    3. 'visited' → logprob: -4.596607208251953
    4. '```' → logprob: -4.596607208251953
    5. '    
' → logprob: -5.471607208251953
    6. 'def' → logprob: -5.596607208251953
    7. ':
' → logprob: -5.596607208251953
    8. 'queue' → logprob: -6.596607208251953
    9. '	queue' → logprob: -6.971607208251953
    10. ':' → logprob: -7.096607208251953

Token 718: ' """
' (ID: 7037)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1290380954742432
    2. '   ' → logprob: -1.3790380954742432
    3. 'dist' → logprob: -1.3790380954742432
    4. 'from' → logprob: -2.629038095474243
    5. 'visited' → logprob: -3.129038095474243
    6. 'import' → logprob: -3.629038095474243
    7. 'distance' → logprob: -4.379037857055664
    8. '
' → logprob: -4.504037857055664
    9. '#' → logprob: -6.254037857055664
    10. 'graph' → logprob: -7.004037857055664

Token 719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25335201621055603
    2. 'from' → logprob: -2.128351926803589
    3. 'dist' → logprob: -3.128351926803589
    4. 'dp' → logprob: -3.628351926803589
    5. 'import' → logprob: -4.128352165222168
    6. 'visited' → logprob: -4.753352165222168
    7. '#' → logprob: -5.878352165222168
    8. 'distance' → logprob: -6.003352165222168
    9. ' from' → logprob: -6.253352165222168
    10. '
' → logprob: -7.753352165222168

Token 720: ' Trou' (ID: 58947)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0261270999908447
    2. 'from' → logprob: -1.4011270999908447
    3. 'visited' → logprob: -1.7761270999908447
    4. 'import' → logprob: -2.9011270999908447
    5. '   ' → logprob: -3.0261270999908447
    6. 'dist' → logprob: -3.6511270999908447
    7. 'distance' → logprob: -3.7761270999908447
    8. ' from' → logprob: -4.401126861572266
    9. '#' → logprob: -4.401126861572266
    10. '
' → logprob: -4.526126861572266

Token 721: 've' (ID: 737)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0297521352767944
    2. 'x' → logprob: -1.0297521352767944
    3. '   ' → logprob: -2.779752254486084
    4. 'te' → logprob: -3.529752254486084
    5. 'pt' → logprob: -3.654752254486084
    6. 'ps' → logprob: -3.654752254486084
    7. 've' → logprob: -4.279752254486084
    8. 'pe' → logprob: -4.529752254486084
    9. 'pend' → logprob: -4.654752254486084
    10. 'ra' → logprob: -4.654752254486084

Token 722: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6033324599266052
    2. ' le' → logprob: -0.9783324599266052
    3. ' les' → logprob: -3.22833251953125
    4. ' l' → logprob: -4.22833251953125
    5. ' un' → logprob: -4.60333251953125
    6. 'le' → logprob: -5.60333251953125
    7. ' une' → logprob: -5.72833251953125
    8. 'la' → logprob: -6.72833251953125
    9. ' ' → logprob: -7.22833251953125
    10. 'les' → logprob: -7.60333251953125

Token 723: ' route' (ID: 9656)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.382215291261673
    2. 'distance' → logprob: -1.8822152614593506
    3. 'me' → logprob: -2.2572152614593506
    4. '#' → logprob: -4.50721549987793
    5. 'long' → logprob: -5.00721549987793
    6. 'prem' → logprob: -5.00721549987793
    7. 'nombre' → logprob: -5.38221549987793
    8. 'prob' → logprob: -5.38221549987793
    9. ' plus' → logprob: -5.75721549987793
    10. 's' → logprob: -5.75721549987793

Token 724: ' descendant' (ID: 145081)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.25382646918296814
    2. '   ' → logprob: -2.503826379776001
    3. '(' → logprob: -2.878826379776001
    4. '(
' → logprob: -3.628826379776001
    5. ' entre' → logprob: -3.878826379776001
    6. 'def' → logprob: -5.12882661819458
    7. ' (' → logprob: -5.25382661819458
    8. 'from' → logprob: -5.37882661819458
    9. ',' → logprob: -5.87882661819458
    10. 's' → logprob: -6.12882661819458

Token 725: ' maximum' (ID: 10562)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04051404073834419
    2. 'ante' → logprob: -4.04051399230957
    3. '   ' → logprob: -5.16551399230957
    4. 'du' → logprob: -5.66551399230957
    5. 'es' → logprob: -5.91551399230957
    6. 'dep' → logprob: -6.04051399230957
    7. 'def' → logprob: -6.66551399230957
    8. 'de' → logprob: -6.66551399230957
    9. 's' → logprob: -6.66551399230957
    10. 'dans' → logprob: -7.29051399230957

Token 726: ' en' (ID: 469)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22929145395755768
    2. ' possible' → logprob: -2.1042914390563965
    3. 'possible' → logprob: -3.4792914390563965
    4. ' en' → logprob: -4.6042914390563965
    5. ' entre' → logprob: -4.7292914390563965
    6. '   ' → logprob: -4.7292914390563965
    7. ' depuis' → logprob: -5.1042914390563965
    8. '_possible' → logprob: -5.9792914390563965
    9. ' du' → logprob: -6.3542914390563965
    10. ',' → logprob: -6.6042914390563965

Token 727: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5999249219894409
    2. ' longueur' → logprob: -2.5999250411987305
    3. 'long' → logprob: -2.7249250411987305
    4. 'part' → logprob: -2.9749250411987305
    5. ' nombre' → logprob: -3.4749250411987305
    6. 'm' → logprob: -3.4749250411987305
    7. 'n' → logprob: -3.5999250411987305
    8. 'ter' → logprob: -3.8499250411987305
    9. 'po' → logprob: -4.3499250411987305
    10. 'prime' → logprob: -4.4749250411987305

Token 728: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2878377437591553
    2. 'de' → logprob: -1.4128377437591553
    3. '   ' → logprob: -6.162837982177734
    4. '_de' → logprob: -6.537837982177734
    5. ' ' → logprob: -6.787837982177734
    6. 'def' → logprob: -7.037837982177734
    7. 'd' → logprob: -7.537837982177734
    8. ' d' → logprob: -8.412837982177734
    9. '	de' → logprob: -8.912837982177734
    10. '
' → logprob: -9.662837982177734

Token 729: ' caves' (ID: 108455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9053887128829956
    2. 's' → logprob: -1.2803887128829956
    3. 'ét' → logprob: -1.2803887128829956
    4. 'steps' → logprob: -4.530388832092285
    5. 'pas' → logprob: -4.530388832092285
    6. 'm' → logprob: -5.405388832092285
    7. ' étapes' → logprob: -5.405388832092285
    8. 'et' → logprob: -6.530388832092285
    9. 'no' → logprob: -6.905388832092285
    10. 'esc' → logprob: -6.905388832092285

Token 730: ' premières' (ID: 73562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1910448670387268
    2. 'visited' → logprob: -2.441044807434082
    3. ' visited' → logprob: -3.316044807434082
    4. ' (' → logprob: -4.816044807434082
    5. '(' → logprob: -5.441044807434082
    6. ',' → logprob: -5.566044807434082
    7. ' parcour' → logprob: -5.691044807434082
    8. ' visit' → logprob: -6.066044807434082
    9. 'entre' → logprob: -6.191044807434082
    10. '(vis' → logprob: -6.316044807434082

Token 731: ' en' (ID: 469)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.05207359790802
    2. '   ' → logprob: -1.55207359790802
    3. ' ' → logprob: -2.6770734786987305
    4. 's' → logprob: -2.8020734786987305
    5. ',' → logprob: -3.4270734786987305
    6. '(' → logprob: -3.4270734786987305
    7. 'dep' → logprob: -3.6770734786987305
    8. 'from' → logprob: -4.0520734786987305
    9. ' depuis' → logprob: -4.0520734786987305
    10. ' (' → logprob: -4.1770734786987305

Token 732: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.9741430282592773
    2. 'util' → logprob: -1.4741430282592773
    3. 'su' → logprob: -2.2241430282592773
    4. 'long' → logprob: -3.3491430282592773
    5. 'nombre' → logprob: -3.4741430282592773
    6. 'desc' → logprob: -3.4741430282592773
    7. 'suite' → logprob: -3.5991430282592773
    8. 'pass' → logprob: -3.7241430282592773
    9. 'cha' → logprob: -3.8491430282592773
    10. 'chain' → logprob: -4.474143028259277

Token 733: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.09238763153553009
    2. 'ie' → logprob: -2.4673876762390137
    3. 'ir' → logprob: -6.342387676239014
    4. '#' → logprob: -7.217387676239014
    5. '-' → logprob: -8.467387199401855
    6. 'out' → logprob: -8.592387199401855
    7. '_' → logprob: -9.592387199401855
    8. '```' → logprob: -9.717387199401855
    9. 'it' → logprob: -9.842387199401855
    10. 'age' → logprob: -9.967387199401855

Token 734: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.47699669003486633
    2. ' de' → logprob: -1.101996660232544
    3. '   ' → logprob: -3.351996660232544
    4. 'from' → logprob: -4.726996898651123
    5. ' from' → logprob: -6.976996898651123
    6. 'd' → logprob: -7.351996898651123
    7. 'def' → logprob: -7.726996898651123
    8. ' du' → logprob: -7.851996898651123
    9. '    ' → logprob: -7.976996898651123
    10. 'du' → logprob: -8.101996421813965

Token 735: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.43070173263549805
    2. '1' → logprob: -1.180701732635498
    3. 'c' → logprob: -3.680701732635498
    4. ' m' → logprob: -4.555701732635498
    5. 'une' → logprob: -6.555701732635498
    6. 'n' → logprob: -6.930701732635498
    7. 'range' → logprob: -6.930701732635498
    8. 'la' → logprob: -7.055701732635498
    9. '#' → logprob: -7.305701732635498
    10. 'l' → logprob: -7.555701732635498

Token 736: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5083643198013306
    2. ',' → logprob: -1.3833643198013306
    3. '.' → logprob: -4.008364200592041
    4. '):
' → logprob: -4.008364200592041
    5. ' (' → logprob: -4.133364200592041
    6. 'def' → logprob: -4.258364200592041
    7. '
' → logprob: -4.508364200592041
    8. '(m' → logprob: -4.508364200592041
    9. ':' → logprob: -4.633364200592041
    10. ')' → logprob: -4.758364200592041

Token 737: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19727222621440887
    2. '
' → logprob: -1.8222721815109253
    3. '    
' → logprob: -4.072272300720215
    4. 'def' → logprob: -9.197272300720215
    5. '   
' → logprob: -9.822272300720215
    6. ' 
' → logprob: -9.947272300720215
    7. '    
    
' → logprob: -10.572272300720215
    8. '  
' → logprob: -10.572272300720215
    9. '        
' → logprob: -11.322272300720215
    10. '<|end|>' → logprob: -11.572272300720215

Token 738: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4162617325782776
    2. '
' → logprob: -1.1662616729736328
    3. 'visited' → logprob: -4.041261672973633
    4. '    
' → logprob: -5.041261672973633
    5. ' visited' → logprob: -5.666261672973633
    6. 'dp' → logprob: -7.166261672973633
    7. 'from' → logprob: -8.541261672973633
    8. '   
' → logprob: -9.291261672973633
    9. '  
' → logprob: -9.416261672973633
    10. 'dist' → logprob: -9.791261672973633

Token 739: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.00010592726175673306
    2. 'rne' → logprob: -9.625105857849121
    3. 'e' → logprob: -11.000105857849121
    4. 'nant' → logprob: -11.500105857849121
    5. 'neur' → logprob: -12.250105857849121
    6. 'urne' → logprob: -12.625105857849121
    7. 'nne' → logprob: -12.875105857849121
    8. 'ner' → logprob: -14.000105857849121
    9. 'nent' → logprob: -14.875105857849121
    10. 'n' → logprob: -15.000105857849121

Token 740: ' (' (ID: 350)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8049956560134888
    2. ' la' → logprob: -0.8049956560134888
    3. ' len' → logprob: -2.554995536804199
    4. ' None' → logprob: -4.804995536804199
    5. ' l' → logprob: -5.304995536804199
    6. ' (' → logprob: -5.554995536804199
    7. ' max' → logprob: -6.054995536804199
    8. 'len' → logprob: -6.179995536804199
    9. '   ' → logprob: -6.554995536804199
    10. ' True' → logprob: -6.554995536804199

Token 741: 'nombre' (ID: 28576)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20115219056606293
    2. 'length' → logprob: -2.5761520862579346
    3. 'count' → logprob: -3.2011520862579346
    4. ' max' → logprob: -3.7011520862579346
    5. 'distance' → logprob: -4.951152324676514
    6. ' length' → logprob: -5.326152324676514
    7. ')' → logprob: -5.451152324676514
    8. 'len' → logprob: -5.451152324676514
    9. 'visited' → logprob: -5.951152324676514
    10. 'int' → logprob: -6.076152324676514

Token 742: '_de' (ID: 5047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6851584911346436
    2. '_max' → logprob: -1.3101584911346436
    3. '_de' → logprob: -1.9351584911346436
    4. ',' → logprob: -2.9351584911346436
    5. '_pr' → logprob: -4.935158729553223
    6. ')' → logprob: -5.435158729553223
    7. '_,' → logprob: -5.435158729553223
    8. '_p' → logprob: -5.685158729553223
    9. '_prime' → logprob: -5.685158729553223
    10. '_des' → logprob: -6.810158729553223

Token 743: '_c' (ID: 1303)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.6639760136604309
    2. '_pr' → logprob: -1.0389759540557861
    3. '_c' → logprob: -2.413975954055786
    4. 'c' → logprob: -4.163976192474365
    5. '_' → logprob: -4.913976192474365
    6. '_prime' → logprob: -5.413976192474365
    7. 'prem' → logprob: -5.413976192474365
    8. 'prime' → logprob: -5.913976192474365
    9. '_p' → logprob: -6.038976192474365
    10. '_pass' → logprob: -7.413976192474365

Token 744: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.024629957973957062
    2. 'r' → logprob: -4.149630069732666
    3. 'ases' → logprob: -5.774630069732666
    4. 'aches' → logprob: -6.649630069732666
    5. 'ar' → logprob: -7.774630069732666
    6. 'av' → logprob: -8.024629592895508
    7. 'onnes' → logprob: -8.024629592895508
    8. 'on' → logprob: -8.399629592895508
    9. 'onces' → logprob: -8.649629592895508
    10. 'h' → logprob: -8.774629592895508

Token 745: '_p' (ID: 1359)
  Prédit: '_pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.5122302174568176
    2. ',' → logprob: -2.012230157852173
    3. '_prime' → logprob: -2.137230157852173
    4. '_p' → logprob: -3.012230157852173
    5. '_' → logprob: -3.012230157852173
    6. '_par' → logprob: -4.137230396270752
    7. '_,' → logprob: -4.512230396270752
    8. '_vis' → logprob: -4.637230396270752
    9. '_max' → logprob: -5.012230396270752
    10. '_visit' → logprob: -6.012230396270752

Token 746: 'rem' (ID: 1935)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.019548829644918442
    2. 'rem' → logprob: -4.5195488929748535
    3. 'rim' → logprob: -4.8945488929748535
    4. '```' → logprob: -7.8945488929748535
    5. 'ré' → logprob: -8.644548416137695
    6. '`)' → logprob: -10.019548416137695
    7. 'rés' → logprob: -10.019548416137695
    8. '
' → logprob: -10.269548416137695
    9. 'ar' → logprob: -10.519548416137695
    10. 'rin' → logprob: -10.519548416137695

Token 747: 'ieres' (ID: 39219)
  Prédit: 'ières'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.11884259432554245
    2. 'i' → logprob: -2.243842601776123
    3. 'ière' → logprob: -6.743842601776123
    4. 'ié' → logprob: -6.868842601776123
    5. 'ises' → logprob: -6.993842601776123
    6. 'ieres' → logprob: -7.118842601776123
    7. 'iers' → logprob: -7.243842601776123
    8. 'is' → logprob: -7.743842601776123
    9. 'ier' → logprob: -8.243842124938965
    10. 'ies' → logprob: -8.618842124938965

Token 748: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008060562540777028
    2. '_par' → logprob: -7.375805854797363
    3. '_max' → logprob: -9.875805854797363
    4. ',
' → logprob: -10.000805854797363
    5. ' ,' → logprob: -10.500805854797363
    6. '_,' → logprob: -11.625805854797363
    7. ')' → logprob: -11.875805854797363
    8. '_vis' → logprob: -12.125805854797363
    9. '_' → logprob: -12.375805854797363
    10. '_visit' → logprob: -12.500805854797363

Token 749: ' dernier' (ID: 27982)
  Prédit: ' longueur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -1.6772966384887695
    2. '[' → logprob: -1.8022966384887695
    3. 'che' → logprob: -1.9272966384887695
    4. 'long' → logprob: -2.4272966384887695
    5. 'distance' → logprob: -2.5522966384887695
    6. ' chemin' → logprob: -2.9272966384887695
    7. 'nombre' → logprob: -3.0522966384887695
    8. 'route' → logprob: -3.4272966384887695
    9. 'liste' → logprob: -3.5522966384887695
    10. ' distance' → logprob: -4.1772966384887695

Token 750: '_no' (ID: 13575)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.013760767877101898
    2. '_' → logprob: -5.388760566711426
    3. '_no' → logprob: -5.638760566711426
    4. '_num' → logprob: -5.763760566711426
    5. ')' → logprob: -7.263760566711426
    6. '_point' → logprob: -7.638760566711426
    7. 'c' → logprob: -7.888760566711426
    8. '_node' → logprob: -8.388760566711426
    9. '_token' → logprob: -9.138760566711426
    10. '_s' → logprob: -9.513760566711426

Token 751: '_c' (ID: 1303)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4198549687862396
    2. 'm' → logprob: -1.544854998588562
    3. 'ud' → logprob: -2.4198548793792725
    4. 'd' → logprob: -3.5448548793792725
    5. 'de' → logprob: -5.294855117797852
    6. 'et' → logprob: -6.169855117797852
    7. 'n' → logprob: -6.794855117797852
    8. 'eur' → logprob: -7.419855117797852
    9. 'mb' → logprob: -7.669855117797852
    10. 'ed' → logprob: -7.919855117797852

Token 752: 'ave' (ID: 577)
  Prédit: 'ave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ave' → logprob: -0.5263639092445374
    2. 'de' → logprob: -1.2763638496398926
    3. 've' → logprob: -3.0263638496398926
    4. 'uve' → logprob: -3.5263638496398926
    5. 'av' → logprob: -3.6513638496398926
    6. 'd' → logprob: -5.401363849639893
    7. 'ar' → logprob: -5.401363849639893
    8. 'u' → logprob: -5.901363849639893
    9. 'ne' → logprob: -5.901363849639893
    10. 'r' → logprob: -6.026363849639893

Token 753: '_p' (ID: 1359)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028489813208580017
    2. 'r' → logprob: -4.278489589691162
    3. 'e' → logprob: -4.903489589691162
    4. ',' → logprob: -5.278489589691162
    5. '_' → logprob: -7.778489589691162
    6. 'm' → logprob: -8.77849006652832
    7. 'umer' → logprob: -8.77849006652832
    8. ',)' → logprob: -8.77849006652832
    9. '),' → logprob: -9.02849006652832
    10. 'de' → logprob: -9.15349006652832

Token 754: 'rem' (ID: 1935)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.019572211429476738
    2. 'oint' → logprob: -4.1445722579956055
    3. 'c' → logprob: -7.5195722579956055
    4. 'lace' → logprob: -7.7695722579956055
    5. 'ar' → logprob: -8.269572257995605
    6. 'rem' → logprob: -8.269572257995605
    7. 'ointe' → logprob: -8.269572257995605
    8. '_r' → logprob: -8.644572257995605
    9. 'ro' → logprob: -8.894572257995605
    10. 'orte' → logprob: -9.019572257995605

Token 755: 'iere' (ID: 19068)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.5081588625907898
    2. 'ière' → logprob: -1.2581589221954346
    3. 'iere' → logprob: -3.2581589221954346
    4. 'er' → logprob: -3.3831589221954346
    5. 'e' → logprob: -4.5081586837768555
    6. 're' → logprob: -4.8831586837768555
    7. 'ère' → logprob: -5.1331586837768555
    8. 'def' → logprob: -5.6331586837768555
    9. 'c' → logprob: -6.0081586837768555
    10. '_' → logprob: -6.3831586837768555

Token 756: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0080860061571002
    2. ',' → logprob: -5.008086204528809
    3. '_' → logprob: -7.383086204528809
    4. 'n' → logprob: -9.258086204528809
    5. '_n' → logprob: -9.258086204528809
    6. 'e' → logprob: -9.383086204528809
    7. '_)' → logprob: -9.383086204528809
    8. ')`' → logprob: -9.883086204528809
    9. '`)' → logprob: -10.133086204528809
    10. 's' → logprob: -10.508086204528809

Token 757: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018617747351527214
    2. '
' → logprob: -5.018617630004883
    3. ':' → logprob: -5.268617630004883
    4. ':
' → logprob: -6.018617630004883
    5. ',' → logprob: -6.643617630004883
    6. '):
' → logprob: -6.768617630004883
    7. 'def' → logprob: -7.018617630004883
    8. '):' → logprob: -7.893617630004883
    9. '    
' → logprob: -8.643617630004883
    10. ')' → logprob: -8.893617630004883

Token 758: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062367383390665054
    2. '
' → logprob: -3.3123674392700195
    3. ':
' → logprob: -4.6873674392700195
    4. '    
' → logprob: -4.6873674392700195
    5. ':' → logprob: -6.0623674392700195
    6. '):
' → logprob: -6.3123674392700195
    7. '```' → logprob: -7.6873674392700195
    8. '  
' → logprob: -8.31236743927002
    9. 'def' → logprob: -8.43736743927002
    10. ')' → logprob: -9.18736743927002

Token 759: ' (' (ID: 350)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.22709214687347412
    2. 'None' → logprob: -1.7270921468734741
    3. ' (' → logprob: -4.102092266082764
    4. '(None' → logprob: -5.102092266082764
    5. '(' → logprob: -6.602092266082764
    6. '
' → logprob: -7.477092266082764
    7. '(
' → logprob: -8.227091789245605
    8. '   ' → logprob: -8.977091789245605
    9. ' (
' → logprob: -9.227091789245605
    10. '_none' → logprob: -9.477091789245605

Token 760: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34997978806495667
    2. '-' → logprob: -1.9749797582626343
    3. 'None' → logprob: -1.9749797582626343
    4. '(' → logprob: -4.224979877471924
    5. 'nombre' → logprob: -6.724979877471924
    6. 'n' → logprob: -7.474979877471924
    7. '(None' → logprob: -8.099979400634766
    8. '(-' → logprob: -8.474979400634766
    9. 'm' → logprob: -8.724979400634766
    10. 'False' → logprob: -8.849979400634766

Token 761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001375089050270617
    2. ')' → logprob: -9.625137329101562
    3. ' ,' → logprob: -10.500137329101562
    4. '0' → logprob: -11.125137329101562
    5. ' if' → logprob: -11.375137329101562
    6. '   ' → logprob: -12.500137329101562
    7. ',None' → logprob: -12.500137329101562
    8. ',
' → logprob: -12.625137329101562
    9. 'if' → logprob: -13.125137329101562
    10. ')
' → logprob: -13.875137329101562

Token 762: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.151173934340477
    2. 'n' → logprob: -2.7761738300323486
    3. 'None' → logprob: -3.4011738300323486
    4. '-' → logprob: -3.5261738300323486
    5. ')' → logprob: -5.151174068450928
    6. 'm' → logprob: -5.276174068450928
    7. '(' → logprob: -6.401174068450928
    8. '1' → logprob: -6.776174068450928
    9. '(n' → logprob: -7.401174068450928
    10. ' ' → logprob: -8.27617359161377

Token 763: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1100270226597786
    2. '-' → logprob: -2.6100270748138428
    3. 'n' → logprob: -3.7350270748138428
    4. 'None' → logprob: -5.110026836395264
    5. '1' → logprob: -8.610027313232422
    6. ')' → logprob: -9.110027313232422
    7. 'm' → logprob: -9.235027313232422
    8. '(' → logprob: -9.360027313232422
    9. '-n' → logprob: -9.360027313232422
    10. '(n' → logprob: -9.860027313232422

Token 764: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.318681188422488e-05
    2. ')
' → logprob: -11.62501335144043
    3. '   ' → logprob: -13.12501335144043
    4. ')`' → logprob: -14.25001335144043
    5. ' )' → logprob: -14.75001335144043
    6. '):' → logprob: -14.75001335144043
    7. ')
' → logprob: -15.87501335144043
    8. ',' → logprob: -16.37501335144043
    9. ')**' → logprob: -16.50001335144043
    10. '0' → logprob: -16.87501335144043

Token 765: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032876938581466675
    2. ' if' → logprob: -4.032876968383789
    3. '
' → logprob: -4.532876968383789
    4. ',' → logprob: -6.657876968383789
    5. 'def' → logprob: -6.782876968383789
    6. '    
' → logprob: -7.907876968383789
    7. 'if' → logprob: -8.157876968383789
    8. '(' → logprob: -8.782876968383789
    9. '(
' → logprob: -8.907876968383789
    10. ')' → logprob: -9.407876968383789

Token 766: ' aucun' (ID: 41678)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5027069449424744
    2. 'm' → logprob: -1.1277070045471191
    3. ' n' → logprob: -3.127707004547119
    4. ' m' → logprob: -4.002707004547119
    5. 'not' → logprob: -5.377707004547119
    6. 'auc' → logprob: -6.377707004547119
    7. ' not' → logprob: -6.502707004547119
    8. ' aucun' → logprob: -8.002706527709961
    9. 'pas' → logprob: -8.377706527709961
    10. 'False' → logprob: -8.877706527709961

Token 767: ' chemin' (ID: 45035)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.9955831170082092
    2. ' prime' → logprob: -1.8705830574035645
    3. 'prem' → logprob: -1.9955830574035645
    4. ' n' → logprob: -2.2455830574035645
    5. 'n' → logprob: -2.3705830574035645
    6. 'c' → logprob: -3.2455830574035645
    7. ' premier' → logprob: -3.3705830574035645
    8. 'path' → logprob: -4.2455830574035645
    9. ' chemin' → logprob: -4.8705830574035645
    10. ' path' → logprob: -4.8705830574035645

Token 768: ' avec' (ID: 3937)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6887369751930237
    2. '   ' → logprob: -1.313736915588379
    3. 'possible' → logprob: -2.188736915588379
    4. ' n' → logprob: -3.063736915588379
    5. ' possible' → logprob: -3.813736915588379
    6. '_possible' → logprob: -4.313736915588379
    7. '```' → logprob: -4.688736915588379
    8. ')' → logprob: -5.063736915588379
    9. 'def' → logprob: -5.438736915588379
    10. 'ne' → logprob: -5.688736915588379

Token 769: ' des' (ID: 731)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.1703115701675415
    2. ' des' → logprob: -1.6703115701675415
    3. 'prem' → logprob: -1.9203115701675415
    4. 'des' → logprob: -2.170311450958252
    5. 'prime' → logprob: -2.295311450958252
    6. ' une' → logprob: -2.795311450958252
    7. ' primes' → logprob: -4.170311450958252
    8. 'un' → logprob: -4.420311450958252
    9. ' un' → logprob: -4.670311450958252
    10. 'pr' → logprob: -4.670311450958252

Token 770: ' caves' (ID: 108455)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.7555021643638611
    2. 'c' → logprob: -1.3805022239685059
    3. 'pr' → logprob: -1.8805022239685059
    4. ' primes' → logprob: -3.005502223968506
    5. 'prime' → logprob: -3.255502223968506
    6. ' caves' → logprob: -4.755502223968506
    7. 'n' → logprob: -5.255502223968506
    8. ' nombres' → logprob: -5.380502223968506
    9. 'nombre' → logprob: -5.380502223968506
    10. 'prim' → logprob: -5.880502223968506

Token 771: ' premières' (ID: 73562)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5754985809326172
    2. 'prem' → logprob: -1.7004985809326172
    3. ' n' → logprob: -1.8254985809326172
    4. 'pr' → logprob: -1.9504985809326172
    5. '_pr' → logprob: -2.075498580932617
    6. '_prime' → logprob: -2.200498580932617
    7. 'prime' → logprob: -3.950498580932617
    8. 'n' → logprob: -4.200498580932617
    9. '_p' → logprob: -4.450498580932617
    10. ' premières' → logprob: -5.825498580932617

Token 772: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026276845484972
    2. 'def' → logprob: -4.4012770652771
    3. ')' → logprob: -4.9012770652771
    4. '.' → logprob: -6.7762770652771
    5. 'n' → logprob: -6.7762770652771
    6. ':' → logprob: -6.9012770652771
    7. ',' → logprob: -7.0262770652771
    8. ' n' → logprob: -7.6512770652771
    9. '):
' → logprob: -7.7762770652771
    10. '  ' → logprob: -8.526276588439941

Token 773: ''ex' (ID: 23472)
  Prédit: ''ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.20917540788650513
    2. ''est' → logprob: -1.7091753482818604
    3. 'ex' → logprob: -5.2091755867004395
    4. ''' → logprob: -7.0841755867004395
    5. 'est' → logprob: -7.7091755867004395
    6. ''a' → logprob: -7.7091755867004395
    7. 'e' → logprob: -8.459175109863281
    8. 'a' → logprob: -9.334175109863281
    9. '’ex' → logprob: -10.209175109863281
    10. 'es' → logprob: -10.959175109863281

Token 774: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0015623578801751137
    2. 'ist' → logprob: -6.626562595367432
    3. '```' → logprob: -9.876562118530273
    4. 'ists' → logprob: -10.001562118530273
    5. '
' → logprob: -10.626562118530273
    6. '_' → logprob: -11.126562118530273
    7. '**' → logprob: -11.376562118530273
    8. 'i' → logprob: -11.626562118530273
    9. 'istent' → logprob: -12.001562118530273
    10. 'istes' → logprob: -12.126562118530273

Token 775: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010544737800955772
    2. 'def' → logprob: -4.760544776916504
    3. ':' → logprob: -7.510544776916504
    4. '.' → logprob: -7.760544776916504
    5. '
' → logprob: -8.635544776916504
    6. '):
' → logprob: -8.885544776916504
    7. ':
' → logprob: -9.135544776916504
    8. '(n' → logprob: -9.385544776916504
    9. '```' → logprob: -9.635544776916504
    10. '():
' → logprob: -9.760544776916504

Token 776: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021416589617729187
    2. '
' → logprob: -3.896416664123535
    3. '    
' → logprob: -7.271416664123535
    4. '```' → logprob: -9.396416664123535
    5. 'def' → logprob: -10.146416664123535
    6. ':' → logprob: -11.146416664123535
    7. ':
' → logprob: -11.771416664123535
    8. 'visited' → logprob: -12.021416664123535
    9. '  
' → logprob: -12.521416664123535
    10. '#' → logprob: -12.896416664123535

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011338639073073864
    2. '
' → logprob: -4.511338710784912
    3. '    
' → logprob: -8.636338233947754
    4. ')' → logprob: -9.261338233947754
    5. 'def' → logprob: -12.761338233947754
    6. '#' → logprob: -13.261338233947754
    7. 'n' → logprob: -13.261338233947754
    8. 'm' → logprob: -13.761338233947754
    9. 'from' → logprob: -13.761338233947754
    10. '```' → logprob: -13.886338233947754

Token 778: ' On' (ID: 2160)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.02113044448196888
    2. 'dp' → logprob: -4.521130561828613
    3. '   ' → logprob: -5.021130561828613
    4. '#' → logprob: -7.146130561828613
    5. 'queue' → logprob: -7.271130561828613
    6. 'if' → logprob: -7.646130561828613
    7. 'dist' → logprob: -8.021130561828613
    8. 'from' → logprob: -8.146130561828613
    9. 'path' → logprob: -8.896130561828613
    10. 'stack' → logprob: -9.021130561828613

Token 779: ' utilise' (ID: 70283)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2093593180179596
    2. 'def' → logprob: -1.8343592882156372
    3. 'import' → logprob: -5.209359169006348
    4. 'visited' → logprob: -5.209359169006348
    5. 'prime' → logprob: -6.709359169006348
    6. 'from' → logprob: -6.709359169006348
    7. ' =' → logprob: -6.834359169006348
    8. '#' → logprob: -6.834359169006348
    9. 'est' → logprob: -6.959359169006348
    10. '    ' → logprob: -7.084359169006348

Token 780: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.024665314704179764
    2. 'la' → logprob: -4.649665355682373
    3. 'un' → logprob: -4.774665355682373
    4. 'deque' → logprob: -6.274665355682373
    5. 'de' → logprob: -6.649665355682373
    6. ' une' → logprob: -6.899665355682373
    7. 'from' → logprob: -6.899665355682373
    8. 'import' → logprob: -8.024664878845215
    9. 'sys' → logprob: -8.024664878845215
    10. '```' → logprob: -9.399664878845215

Token 781: ' approche' (ID: 102373)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -1.0931425094604492
    2. 'def' → logprob: -1.7181425094604492
    3. ' memo' → logprob: -1.7181425094604492
    4. 'from' → logprob: -2.093142509460449
    5. '
' → logprob: -3.343142509460449
    6. 'cache' → logprob: -3.843142509460449
    7. 'deque' → logprob: -3.843142509460449
    8. 'dp' → logprob: -3.843142509460449
    9. ' cache' → logprob: -4.343142509460449
    10. 'dfs' → logprob: -4.593142509460449

Token 782: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2633061707019806
    2. 'de' → logprob: -1.5133061408996582
    3. ' par' → logprob: -6.013306140899658
    4. ' dynamique' → logprob: -6.013306140899658
    5. 'd' → logprob: -6.513306140899658
    6. 'par' → logprob: -6.763306140899658
    7. 'dfs' → logprob: -7.138306140899658
    8. '_' → logprob: -7.263306140899658
    9. ' réc' → logprob: -7.263306140899658
    10. '```' → logprob: -8.638306617736816

Token 783: ' programmation' (ID: 166376)
  Prédit: 'programm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programm' → logprob: -0.5757355690002441
    2. 'program' → logprob: -1.5757355690002441
    3. 'memo' → logprob: -1.5757355690002441
    4. 'dfs' → logprob: -4.325735569000244
    5. 'dp' → logprob: -5.950735569000244
    6. 'mé' → logprob: -5.950735569000244
    7. 'prog' → logprob: -6.075735569000244
    8. ' programmation' → logprob: -6.950735569000244
    9. '```' → logprob: -7.575735569000244
    10. 'dynamic' → logprob: -7.700735569000244

Token 784: ' dynamique' (ID: 98708)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8416147828102112
    2. ' dynamique' → logprob: -0.8416147828102112
    3. 'dynamic' → logprob: -2.0916147232055664
    4. 'def' → logprob: -4.841614723205566
    5. 'dyn' → logprob: -6.341614723205566
    6. ' dynamic' → logprob: -6.341614723205566
    7. '```' → logprob: -7.091614723205566
    8. '   ' → logprob: -7.466614723205566
    9. 'din' → logprob: -7.716614723205566
    10. ' dynam' → logprob: -8.216614723205566

Token 785: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08643882721662521
    2. ',' → logprob: -2.5864388942718506
    3. 'def' → logprob: -5.7114386558532715
    4. ' memo' → logprob: -6.9614386558532715
    5. 'import' → logprob: -7.3364386558532715
    6. ',
' → logprob: -7.8364386558532715
    7. '
' → logprob: -7.9614386558532715
    8. '.' → logprob: -8.08643913269043
    9. 'memo' → logprob: -8.21143913269043
    10. '(' → logprob: -8.71143913269043

Token 786: ' mém' (ID: 136981)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.11079659312963486
    2. 'l' → logprob: -3.3607966899871826
    3. 'mé' → logprob: -3.4857966899871826
    4. '@' → logprob: -4.2357964515686035
    5. 'sys' → logprob: -4.8607964515686035
    6. 'memor' → logprob: -5.6107964515686035
    7. 'import' → logprob: -5.7357964515686035
    8. 'cache' → logprob: -5.9857964515686035
    9. 'la' → logprob: -5.9857964515686035
    10. 'une' → logprob: -5.9857964515686035

Token 787: 'or' (ID: 267)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.03305329382419586
    2. 'or' → logprob: -3.908053398132324
    3. 'oire' → logprob: -5.783053398132324
    4. '```' → logprob: -5.908053398132324
    5. 'ois' → logprob: -6.158053398132324
    6. 'oi' → logprob: -6.658053398132324
    7. 'memo' → logprob: -7.158053398132324
    8. '
' → logprob: -7.283053398132324
    9. 'oz' → logprob: -7.658053398132324
    10. 'mo' → logprob: -8.408053398132324

Token 788: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.02383151277899742
    2. 'ization' → logprob: -4.273831367492676
    3. 'ation' → logprob: -4.898831367492676
    4. 'tion' → logprob: -6.398831367492676
    5. 'is' → logprob: -7.773831367492676
    6. 'i' → logprob: -11.023831367492676
    7. 'ise' → logprob: -11.148831367492676
    8. 't' → logprob: -11.398831367492676
    9. 's' → logprob: -12.023831367492676
    10. '```' → logprob: -12.023831367492676

Token 789: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05593636631965637
    2. ',' → logprob: -4.055936336517334
    3. '.' → logprob: -4.430936336517334
    4. 'def' → logprob: -4.555936336517334
    5. ' (' → logprob: -5.055936336517334
    6. ':' → logprob: -5.805936336517334
    7. '(n' → logprob: -6.805936336517334
    8. '(' → logprob: -7.555936336517334
    9. '(m' → logprob: -7.805936336517334
    10. ' pour' → logprob: -7.930936336517334

Token 790: ' on' (ID: 402)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8863765597343445
    2. ' sys' → logprob: -1.2613766193389893
    3. ' la' → logprob: -1.7613766193389893
    4. ' les' → logprob: -3.1363766193389893
    5. ' on' → logprob: -3.2613766193389893
    6. 'le' → logprob: -4.01137638092041
    7. 'sys' → logprob: -4.51137638092041
    8. 'la' → logprob: -5.38637638092041
    9. ' il' → logprob: -5.88637638092041
    10. '   ' → logprob: -5.88637638092041

Token 791: ' peut' (ID: 9216)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0835925340652466
    2. ' a' → logprob: -1.0835925340652466
    3. 'import' → logprob: -2.958592414855957
    4. ' n' → logprob: -3.208592414855957
    5. 'def' → logprob: -3.208592414855957
    6. 's' → logprob: -3.458592414855957
    7. 'n' → logprob: -3.583592414855957
    8. ' have' → logprob: -3.708592414855957
    9. ' sait' → logprob: -4.333592414855957
    10. '   ' → logprob: -4.708592414855957

Token 792: '
' (ID: 198)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.4773991107940674
    2. ' avoir' → logprob: -1.6023991107940674
    3. ' rencontrer' → logprob: -2.6023991107940674
    4. '   ' → logprob: -2.8523991107940674
    5. 'have' → logprob: -3.9773991107940674
    6. 'ren' → logprob: -4.852398872375488
    7. ' have' → logprob: -5.602398872375488
    8. '    ' → logprob: -5.977398872375488
    9. ''avoir' → logprob: -6.227398872375488
    10. 'enc' → logprob: -6.227398872375488

Token 793: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01301185879856348
    2. '    ' → logprob: -5.513011932373047
    3. ':' → logprob: -6.388011932373047
    4. ' avoir' → logprob: -6.388011932373047
    5. 'def' → logprob: -7.013011932373047
    6. ' utiliser' → logprob: -7.388011932373047
    7. ' continuer' → logprob: -7.763011932373047
    8. ' pas' → logprob: -7.763011932373047
    9. 'avoir' → logprob: -7.888011932373047
    10. '  ' → logprob: -8.138011932373047

Token 794: ' ré' (ID: 3146)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.23772448301315308
    2. '   ' → logprob: -2.237724542617798
    3. ' rencontrer' → logprob: -3.237724542617798
    4. ' avoir' → logprob: -3.737724542617798
    5. 'have' → logprob: -4.612724304199219
    6. 'ren' → logprob: -4.737724304199219
    7. 'enc' → logprob: -5.237724304199219
    8. 'être' → logprob: -5.487724304199219
    9. '    ' → logprob: -6.112724304199219
    10. 'voir' → logprob: -6.362724304199219

Token 795: 'util' (ID: 2056)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2743760943412781
    2. 'cur' → logprob: -1.8993761539459229
    3. 'curr' → logprob: -3.899376153945923
    4. 'util' → logprob: -4.024375915527344
    5. 'cup' → logprob: -4.024375915527344
    6. 'cu' → logprob: -4.149375915527344
    7. 'curse' → logprob: -6.024375915527344
    8. 'cc' → logprob: -6.274375915527344
    9. 'expl' → logprob: -6.524375915527344
    10. 's' → logprob: -6.524375915527344

Token 796: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.004516869783401489
    2. 'er' → logprob: -5.504517078399658
    3. 'ise' → logprob: -8.2545166015625
    4. 'iter' → logprob: -9.6295166015625
    5. 'ser' → logprob: -9.6295166015625
    6. 'érer' → logprob: -10.6295166015625
    7. 'izer' → logprob: -12.1295166015625
    8. 'user' → logprob: -12.2545166015625
    9. 'is' → logprob: -13.1295166015625
    10. '```' → logprob: -13.5045166015625

Token 797: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4838999807834625
    2. ' des' → logprob: -1.9838999509811401
    3. ' la' → logprob: -2.2339000701904297
    4. ' le' → logprob: -2.7339000701904297
    5. ' sys' → logprob: -3.8589000701904297
    6. '   ' → logprob: -4.48390007019043
    7. 'la' → logprob: -4.60890007019043
    8. 'def' → logprob: -5.10890007019043
    9. 'le' → logprob: -5.23390007019043
    10. ' l' → logprob: -5.35890007019043

Token 798: ' résultats' (ID: 48985)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.9949204921722412
    2. 'sys' → logprob: -1.6199204921722412
    3. ' results' → logprob: -2.494920492172241
    4. 'visited' → logprob: -2.619920492172241
    5. 'results' → logprob: -3.244920492172241
    6. 'cache' → logprob: -3.369920492172241
    7. 'memo' → logprob: -3.619920492172241
    8. ' visited' → logprob: -3.744920492172241
    9. 'c' → logprob: -3.994920492172241
    10. '```' → logprob: -4.11992073059082

Token 799: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24319371581077576
    2. ' des' → logprob: -2.4931936264038086
    3. ' de' → logprob: -2.7431936264038086
    4. 'def' → logprob: -3.3681936264038086
    5. ' pour' → logprob: -3.7431936264038086
    6. 'de' → logprob: -5.868193626403809
    7. ' dans' → logprob: -6.743193626403809
    8. ' for' → logprob: -7.243193626403809
    9. '.' → logprob: -7.368193626403809
    10. ' du' → logprob: -7.368193626403809

Token 800: ' sous' (ID: 14487)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7699512243270874
    2. ' appels' → logprob: -1.8949512243270874
    3. ' chemins' → logprob: -2.144951343536377
    4. 'calcul' → logprob: -3.019951343536377
    5. 'che' → logprob: -3.019951343536377
    6. 's' → logprob: -3.144951343536377
    7. 'calls' → logprob: -3.144951343536377
    8. 'appel' → logprob: -3.644951343536377
    9. 'paths' → logprob: -3.894951343536377
    10. 'cases' → logprob: -4.894951343536377

Token 801: '-che' (ID: 54887)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.4758511185646057
    2. '-pro' → logprob: -1.225851058959961
    3. '_pro' → logprob: -2.600851058959961
    4. '-' → logprob: -4.975851058959961
    5. 'proble' → logprob: -6.725851058959961
    6. '   ' → logprob: -7.725851058959961
    7. '-program' → logprob: -8.100851058959961
    8. 'def' → logprob: -8.475851058959961
    9. '_' → logprob: -8.725851058959961
    10. '_t' → logprob: -8.725851058959961

Token 802: 'mins' (ID: 74578)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08296909928321838
    2. 'înes' → logprob: -4.3329691886901855
    3. 'ries' → logprob: -4.9579691886901855
    4. 'quences' → logprob: -5.0829691886901855
    5. 'nes' → logprob: -5.4579691886901855
    6. 'res' → logprob: -5.4579691886901855
    7. 'ines' → logprob: -5.4579691886901855
    8. 'v' → logprob: -5.7079691886901855
    9. 'ins' → logprob: -5.7079691886901855
    10. '#' → logprob: -5.7079691886901855

Token 803: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05200229957699776
    2. '.' → logprob: -3.427002191543579
    3. 'def' → logprob: -4.177002429962158
    4. ':' → logprob: -6.302002429962158
    5. '.
' → logprob: -8.052001953125
    6. ',' → logprob: -8.052001953125
    7. ')' → logprob: -9.302001953125
    8. ' (' → logprob: -9.677001953125
    9. ' def' → logprob: -9.677001953125
    10. '
' → logprob: -10.802001953125

Token 804: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006217729533091187
    2. '
' → logprob: -7.875621795654297
    3. '    
' → logprob: -8.750621795654297
    4. 'def' → logprob: -10.125621795654297
    5. 'dp' → logprob: -10.875621795654297
    6. '   ' → logprob: -12.375621795654297
    7. ')' → logprob: -12.750621795654297
    8. '	dp' → logprob: -13.250621795654297
    9. '    ' → logprob: -13.375621795654297
    10. ' memo' → logprob: -13.500621795654297

Token 805: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002488737925887108
    2. 'memo' → logprob: -6.877488613128662
    3. 'dp' → logprob: -7.627488613128662
    4. ' memo' → logprob: -7.627488613128662
    5. '
' → logprob: -8.50248908996582
    6. '    
' → logprob: -8.87748908996582
    7. 'cache' → logprob: -9.75248908996582
    8. 'mem' → logprob: -10.50248908996582
    9. ')' → logprob: -11.00248908996582
    10. ' dp' → logprob: -11.25248908996582

Token 806: ' -' (ID: 533)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.052041687071323395
    2. 'cache' → logprob: -3.67704176902771
    3. 'dp' → logprob: -4.177041530609131
    4. 'visited' → logprob: -5.802041530609131
    5. 'mem' → logprob: -5.927041530609131
    6. ' memo' → logprob: -6.052041530609131
    7. '   ' → logprob: -6.552041530609131
    8. 'def' → logprob: -8.427042007446289
    9. 'sys' → logprob: -8.677042007446289
    10. 'memory' → logprob: -9.302042007446289

Token 807: ' Si' (ID: 7832)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.9544275999069214
    2. ' memo' → logprob: -1.3294275999069214
    3. 'dp' → logprob: -2.579427719116211
    4. 'from' → logprob: -3.079427719116211
    5. 'visited' → logprob: -3.204427719116211
    6. ' visited' → logprob: -3.329427719116211
    7. ' sys' → logprob: -3.329427719116211
    8. 'sys' → logprob: -3.704427719116211
    9. 'def' → logprob: -4.079427719116211
    10. 'import' → logprob: -4.204427719116211

Token 808: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0649371147155762
    2. 'n' → logprob: -1.3149371147155762
    3. ' not' → logprob: -1.5649371147155762
    4. 'not' → logprob: -2.689937114715576
    5. ' is' → logprob: -2.814937114715576
    6. 'is' → logprob: -3.439937114715576
    7. 'm' → logprob: -4.564937114715576
    8. ' m' → logprob: -4.939937114715576
    9. ' ' → logprob: -10.564937591552734
    10. '(not' → logprob: -10.627437591552734

Token 809: ' cave' (ID: 44365)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8835981488227844
    2. 'm' → logprob: -1.5085980892181396
    3. 'not' → logprob: -1.6335980892181396
    4. 'c' → logprob: -2.6335980892181396
    5. ' not' → logprob: -2.7585980892181396
    6. ' n' → logprob: -4.258598327636719
    7. ' m' → logprob: -4.258598327636719
    8. ' cave' → logprob: -5.633598327636719
    9. ' c' → logprob: -6.758598327636719
    10. 'is' → logprob: -7.133598327636719

Token 810: ' n' (ID: 297)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0013438044115900993
    2. 'num' → logprob: -7.251343727111816
    3. '_' → logprob: -8.251343727111816
    4. 'n' → logprob: -9.501343727111816
    5. ' is' → logprob: -9.501343727111816
    6. ' n' → logprob: -10.001343727111816
    7. '_n' → logprob: -10.376343727111816
    8. ' est' → logprob: -10.626343727111816
    9. ' _' → logprob: -10.626343727111816
    10. ' num' → logprob: -11.126343727111816

Token 811: ''est' (ID: 6616)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.025102417916059494
    2. 'o' → logprob: -4.775102615356445
    3. '>' → logprob: -5.275102615356445
    4. ' est' → logprob: -5.775102615356445
    5. ''est' → logprob: -6.150102615356445
    6. 'ot' → logprob: -6.775102615356445
    7. '_num' → logprob: -7.525102615356445
    8. 'u' → logprob: -7.775102615356445
    9. '==' → logprob: -7.775102615356445
    10. ')' → logprob: -7.775102615356445

Token 812: ' pas' (ID: 2173)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.6311493515968323
    2. 'pas' → logprob: -2.0061492919921875
    3. 'None' → logprob: -2.0061492919921875
    4. 'prem' → logprob: -2.0061492919921875
    5. '0' → logprob: -3.3811492919921875
    6. 'not' → logprob: -4.6311492919921875
    7. '1' → logprob: -5.5061492919921875
    8. '>' → logprob: -5.6311492919921875
    9. 'False' → logprob: -5.8811492919921875
    10. ' None' → logprob: -6.0061492919921875

Token 813: ' prime' (ID: 9197)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.184501051902771
    2. 'prime' → logprob: -1.809501051902771
    3. 'prima' → logprob: -5.5595011711120605
    4. 'is' → logprob: -7.9345011711120605
    5. '1' → logprob: -8.934500694274902
    6. 'une' → logprob: -9.059500694274902
    7. 'import' → logprob: -9.684500694274902
    8. 'un' → logprob: -9.934500694274902
    9. 'dans' → logprob: -10.059500694274902
    10. 'pr' → logprob: -10.059500694274902

Token 814: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0735589861869812
    2. ' or' → logprob: -2.948559045791626
    3. ':
' → logprob: -4.323558807373047
    4. ',' → logprob: -5.573558807373047
    5. '   ' → logprob: -7.573558807373047
    6. ' and' → logprob: -7.948558807373047
    7. '[' → logprob: -8.823558807373047
    8. ' :' → logprob: -9.198558807373047
    9. 'or' → logprob: -10.323558807373047
    10. ':return' → logprob: -10.448558807373047

Token 815: ' elle' (ID: 11451)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2948896884918213
    2. ' return' → logprob: -1.7948896884918213
    3. '   ' → logprob: -2.4198896884918213
    4. '   ' → logprob: -9.419889450073242
    5. ' retour' → logprob: -9.919889450073242
    6. '	return' → logprob: -9.919889450073242
    7. ' retourne' → logprob: -10.044889450073242
    8. ' retourner' → logprob: -11.169889450073242
    9. ' ' → logprob: -11.419889450073242
    10. '    ' → logprob: -11.669889450073242

Token 816: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05368417501449585
    2. 'n' → logprob: -3.5536842346191406
    3. ' est' → logprob: -4.428684234619141
    4. 'est' → logprob: -4.678684234619141
    5. ' is' → logprob: -6.803684234619141
    6. '   ' → logprob: -7.928684234619141
    7. ''est' → logprob: -8.05368423461914
    8. ' ==' → logprob: -9.42868423461914
    9. ' not' → logprob: -9.80368423461914
    10. ' return' → logprob: -9.80368423461914

Token 817: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.02490534819662571
    2. 'est' → logprob: -4.274905204772949
    3. ''' → logprob: -5.274905204772949
    4. 'e' → logprob: -6.399905204772949
    5. 'pas' → logprob: -7.149905204772949
    6. '’est' → logprob: -7.399905204772949
    7. ' est' → logprob: -7.649905204772949
    8. 'n' → logprob: -8.52490520477295
    9. 'o' → logprob: -8.52490520477295
    10. ''était' → logprob: -8.64990520477295

Token 818: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.2526223361492157
    2. ' pas' → logprob: -1.502622365951538
    3. '0' → logprob: -8.377622604370117
    4. 'p' → logprob: -8.627622604370117
    5. 'pass' → logprob: -9.627622604370117
    6. 'return' → logprob: -10.252622604370117
    7. ' jamais' → logprob: -10.502622604370117
    8. ' rien' → logprob: -10.627622604370117
    9. ' ' → logprob: -10.752622604370117
    10. '_pas' → logprob: -11.127622604370117

Token 819: ' compt' (ID: 39238)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.1918251514434814
    2. 'pr' → logprob: -1.3168251514434814
    3. 'un' → logprob: -1.9418251514434814
    4. 'prime' → logprob: -2.0668251514434814
    5. ' pas' → logprob: -3.1918251514434814
    6. 'valid' → logprob: -3.6918251514434814
    7. 'part' → logprob: -3.8168251514434814
    8. 'pass' → logprob: -4.316824913024902
    9. 'prise' → logprob: -5.191824913024902
    10. 'une' → logprob: -5.191824913024902

Token 820: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.03767063096165657
    2. 'uée' → logprob: -3.787670612335205
    3. 'é' → logprob: -5.037670612335205
    4. 'rée' → logprob: -6.162670612335205
    5. 'u' → logprob: -6.287670612335205
    6. 'urée' → logprob: -6.412670612335205
    7. 'érée' → logprob: -6.787670612335205
    8. 'ér' → logprob: -7.662670612335205
    9. 'ue' → logprob: -8.162671089172363
    10. 'e' → logprob: -9.412671089172363

Token 821: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4140859544277191
    2. ',' → logprob: -1.2890859842300415
    3. '.' → logprob: -3.039085865020752
    4. ':' → logprob: -4.664085865020752
    5. 'def' → logprob: -5.539085865020752
    6. '    ' → logprob: -7.914085865020752
    7. 'return' → logprob: -7.914085865020752
    8. '       ' → logprob: -8.53908634185791
    9. '  ' → logprob: -8.53908634185791
    10. ' ' → logprob: -8.91408634185791

Token 822: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3323177397251129
    2. 'la' → logprob: -1.7073177099227905
    3. ' la' → logprob: -2.83231782913208
    4. ' le' → logprob: -3.20731782913208
    5. 'les' → logprob: -6.58231782913208
    6. 'the' → logprob: -8.832317352294922
    7. 'len' → logprob: -8.832317352294922
    8. 'l' → logprob: -9.082317352294922
    9. 'une' → logprob: -9.957317352294922
    10. ' ' → logprob: -9.957317352294922

Token 823: ' longueur' (ID: 104613)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.2718980610370636
    2. 'che' → logprob: -2.271898031234741
    3. 'route' → logprob: -2.646898031234741
    4. 'solution' → logprob: -3.146898031234741
    5. 'chaine' → logprob: -4.02189826965332
    6. 'chain' → logprob: -7.64689826965332
    7. 'fonction' → logprob: -7.64689826965332
    8. 'cache' → logprob: -8.02189826965332
    9. 'c' → logprob: -8.52189826965332
    10. 'path' → logprob: -8.64689826965332

Token 824: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09971079230308533
    2. ',' → logprob: -2.599710702896118
    3. ' or' → logprob: -5.474710941314697
    4. ':' → logprob: -5.474710941314697
    5. 'def' → logprob: -5.974710941314697
    6. '
' → logprob: -6.349710941314697
    7. '.' → logprob: -6.724710941314697
    8. '_' → logprob: -6.974710941314697
    9. '    ' → logprob: -7.224710941314697
    10. '  ' → logprob: -7.224710941314697

Token 825: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007341461721807718
    2. ' return' → logprob: -5.882341384887695
    3. 'return' → logprob: -6.882341384887695
    4. '    ' → logprob: -7.132341384887695
    5. '    
' → logprob: -7.257341384887695
    6. ' et' → logprob: -7.507341384887695
    7. ' ' → logprob: -7.757341384887695
    8. '
' → logprob: -9.007341384887695
    9. ' 
' → logprob: -9.007341384887695
    10. '   
' → logprob: -9.257341384887695

Token 826: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0048439502716064
    2. 'on' → logprob: -1.3798439502716064
    3. ' return' → logprob: -1.5048439502716064
    4. 'return' → logprob: -1.8798439502716064
    5. ' il' → logprob: -6.629843711853027
    6. 'auc' → logprob: -6.629843711853027
    7. ' aucun' → logprob: -7.004843711853027
    8. '0' → logprob: -7.254843711853027
    9. ' retourne' → logprob: -7.379843711853027
    10. ' aucune' → logprob: -7.879843711853027

Token 827: ' doit' (ID: 21822)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3171490728855133
    2. ' continue' → logprob: -1.692149043083191
    3. 'return' → logprob: -3.1921491622924805
    4. '   ' → logprob: -4.0671491622924805
    5. ' peux' → logprob: -4.6921491622924805
    6. ' retourne' → logprob: -4.9421491622924805
    7. 'continue' → logprob: -5.1921491622924805
    8. ' considère' → logprob: -6.5671491622924805
    9. ' peut' → logprob: -6.8171491622924805
    10. ' can' → logprob: -6.9421491622924805

Token 828: ' continuer' (ID: 75597)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.252327561378479
    2. ' continuer' → logprob: -1.252327561378479
    3. ' explorer' → logprob: -1.502327561378479
    4. ' return' → logprob: -2.2523274421691895
    5. 'return' → logprob: -3.6273274421691895
    6. ' retourner' → logprob: -4.0023274421691895
    7. 'contin' → logprob: -4.2523274421691895
    8. ' vérifier' → logprob: -4.7523274421691895
    9. '    ' → logprob: -4.8773274421691895
    10. 'expl' → logprob: -5.2523274421691895

Token 829: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6017242074012756
    2. ',' → logprob: -1.1017241477966309
    3. ' à' → logprob: -2.601724147796631
    4. ')' → logprob: -3.976724147796631
    5. '.' → logprob: -4.851724147796631
    6. '  ' → logprob: -5.351724147796631
    7. '    ' → logprob: -6.101724147796631
    8. '    
' → logprob: -6.351724147796631
    9. '<|end|>' → logprob: -6.851724147796631
    10. '_' → logprob: -6.976724147796631

Token 830: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008560742135159671
    2. '
' → logprob: -7.750855922698975
    3. '    
' → logprob: -8.125856399536133
    4. ' if' → logprob: -10.125856399536133
    5. 'def' → logprob: -10.250856399536133
    6. ')' → logprob: -11.000856399536133
    7. 'if' → logprob: -11.875856399536133
    8. '   
' → logprob: -12.125856399536133
    9. ',' → logprob: -12.625856399536133
    10. '    ' → logprob: -12.625856399536133

Token 831: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015923460014164448
    2. '
' → logprob: -7.50159215927124
    3. 'def' → logprob: -7.50159215927124
    4. 'if' → logprob: -8.251592636108398
    5. '    
' → logprob: -9.626592636108398
    6. ' if' → logprob: -9.626592636108398
    7. ':' → logprob: -10.376592636108398
    8. ')' → logprob: -10.501592636108398
    9. '.' → logprob: -11.501592636108398
    10. '```' → logprob: -12.626592636108398

Token 832: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.032551884651184
    2. ' if' → logprob: -1.157551884651184
    3. 'Si' → logprob: -1.657551884651184
    4. ' Si' → logprob: -3.0325517654418945
    5. 'def' → logprob: -3.4075517654418945
    6. '   ' → logprob: -3.7825517654418945
    7. 'If' → logprob: -5.0325517654418945
    8. 'visited' → logprob: -5.4075517654418945
    9. '#' → logprob: -6.0325517654418945
    10. 'else' → logprob: -6.0325517654418945

Token 833: ' cherche' (ID: 52345)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6358358263969421
    2. ' continue' → logprob: -1.260835886001587
    3. 'def' → logprob: -2.885835886001587
    4. 'contin' → logprob: -2.885835886001587
    5. '_continue' → logprob: -3.635835886001587
    6. '   ' → logprob: -4.260835647583008
    7. ' peux' → logprob: -4.635835647583008
    8. ' ' → logprob: -5.385835647583008
    9. ' def' → logprob: -6.135835647583008
    10. 'expl' → logprob: -6.260835647583008

Token 834: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17622850835323334
    2. ' à' → logprob: -3.0512285232543945
    3. ' le' → logprob: -3.5512285232543945
    4. '   ' → logprob: -3.5512285232543945
    5. ' les' → logprob: -3.8012285232543945
    6. 'la' → logprob: -5.4262285232543945
    7. ' un' → logprob: -5.5512285232543945
    8. 'à' → logprob: -5.6762285232543945
    9. 'le' → logprob: -6.0512285232543945
    10. 'les' → logprob: -6.1762285232543945

Token 835: ' chemin' (ID: 45035)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28391143679618835
    2. 'maximum' → logprob: -2.1589114665985107
    3. ' maximum' → logprob: -2.9089114665985107
    4. ' max' → logprob: -3.6589114665985107
    5. 'nombre' → logprob: -3.9089114665985107
    6. 'me' → logprob: -4.533911228179932
    7. ' meilleur' → logprob: -5.033911228179932
    8. 'best' → logprob: -5.033911228179932
    9. ' nombre' → logprob: -5.783911228179932
    10. 'plus' → logprob: -6.283911228179932

Token 836: ' descendant' (ID: 145081)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.414831280708313
    2. ' le' → logprob: -1.414831280708313
    3. ' complet' → logprob: -1.539831280708313
    4. 'le' → logprob: -2.2898311614990234
    5. 'max' → logprob: -2.5398311614990234
    6. 'com' → logprob: -3.9148311614990234
    7. 'optimal' → logprob: -4.039831161499023
    8. 'desc' → logprob: -4.164831161499023
    9. ' maximal' → logprob: -4.289831161499023
    10. ' qui' → logprob: -4.914831161499023

Token 837: ' avec' (ID: 3937)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.4944403171539307
    2. ' maximal' → logprob: -1.8694403171539307
    3. ' avec' → logprob: -2.2444403171539307
    4. ' qui' → logprob: -2.4944403171539307
    5. ' complet' → logprob: -2.7444403171539307
    6. ',' → logprob: -2.8694403171539307
    7. ' jusqu' → logprob: -2.9944403171539307
    8. '   ' → logprob: -3.2444403171539307
    9. 'max' → logprob: -3.3694403171539307
    10. ' en' → logprob: -3.6194403171539307

Token 838: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2456997036933899
    2. 'la' → logprob: -1.7456996440887451
    3. 'max' → logprob: -3.495699644088745
    4. ' le' → logprob: -5.245699882507324
    5. 'plus' → logprob: -6.120699882507324
    6. ' la' → logprob: -6.370699882507324
    7. 'l' → logprob: -6.370699882507324
    8. 'maximum' → logprob: -7.995699882507324
    9. 'prime' → logprob: -7.995699882507324
    10. 'me' → logprob: -8.120699882507324

Token 839: ' maximum' (ID: 10562)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.2995575964450836
    2. 'max' → logprob: -2.049557685852051
    3. 'maximum' → logprob: -2.424557685852051
    4. ' maximum' → logprob: -3.924557685852051
    5. ' plus' → logprob: -4.049557685852051
    6. ' max' → logprob: -6.299557685852051
    7. 'nombre' → logprob: -7.174557685852051
    8. 'me' → logprob: -7.299557685852051
    9. '+' → logprob: -7.424557685852051
    10. '```' → logprob: -8.17455768585205

Token 840: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7186076641082764
    2. '_length' → logprob: -1.2186076641082764
    3. 'de' → logprob: -2.4686076641082764
    4. '_de' → logprob: -3.2186076641082764
    5. '   ' → logprob: -3.5936076641082764
    6. '_' → logprob: -3.9686076641082764
    7. '_possible' → logprob: -4.3436079025268555
    8. '_len' → logprob: -4.7186079025268555
    9. '_nombre' → logprob: -5.4686079025268555
    10. '_depth' → logprob: -5.9686079025268555

Token 841: ' caves' (ID: 108455)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.31013548374176025
    2. 'c' → logprob: -2.9351353645324707
    3. ' primes' → logprob: -2.9351353645324707
    4. 'nombre' → logprob: -3.0601353645324707
    5. 'prime' → logprob: -3.4351353645324707
    6. '1' → logprob: -4.060135364532471
    7. 'prem' → logprob: -4.685135364532471
    8. ' nombre' → logprob: -4.810135364532471
    9. ' nombres' → logprob: -4.810135364532471
    10. ' ' → logprob: -4.935135364532471

Token 842: ' premières' (ID: 73562)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.7702750563621521
    2. 'prem' → logprob: -1.2702751159667969
    3. '_pr' → logprob: -2.645275115966797
    4. ' premières' → logprob: -2.645275115966797
    5. '_prime' → logprob: -3.020275115966797
    6. 'pr' → logprob: -3.895275115966797
    7. '_' → logprob: -4.395275115966797
    8. 'prime' → logprob: -4.770275115966797
    9. ' p' → logprob: -5.145275115966797
    10. '   ' → logprob: -5.895275115966797

Token 843: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5034424066543579
    2. ',' → logprob: -1.628442406654358
    3. '.' → logprob: -1.878442406654358
    4. 'possible' → logprob: -5.003442287445068
    5. '_possible' → logprob: -5.003442287445068
    6. ' possible' → logprob: -5.503442287445068
    7. ':' → logprob: -5.753442287445068
    8. ' possibles' → logprob: -6.003442287445068
    9. ',
' → logprob: -6.128442287445068
    10. 'dans' → logprob: -6.253442287445068

Token 844: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003748179180547595
    2. 'def' → logprob: -6.253748416900635
    3. '
' → logprob: -6.878748416900635
    4. 'dp' → logprob: -7.628748416900635
    5. '    
' → logprob: -8.628747940063477
    6. 'if' → logprob: -10.378747940063477
    7. ' if' → logprob: -10.878747940063477
    8. '   ' → logprob: -11.628747940063477
    9. 'visited' → logprob: -11.628747940063477
    10. ' dp' → logprob: -11.753747940063477

Token 845: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015650922432541847
    2. 'dp' → logprob: -7.626564979553223
    3. 'if' → logprob: -7.876564979553223
    4. 'visited' → logprob: -8.501564979553223
    5. 'def' → logprob: -9.126564979553223
    6. '    
' → logprob: -9.501564979553223
    7. ' if' → logprob: -9.626564979553223
    8. '
' → logprob: -9.626564979553223
    9. 'memo' → logprob: -10.501564979553223
    10. ')' → logprob: -10.501564979553223

Token 846: ' En' (ID: 2130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03479526564478874
    2. 'def' → logprob: -4.90979528427124
    3. 'memo' → logprob: -5.03479528427124
    4. ' Si' → logprob: -5.40979528427124
    5. ' if' → logprob: -5.65979528427124
    6. ' memo' → logprob: -5.78479528427124
    7. 'Si' → logprob: -6.03479528427124
    8. 'if' → logprob: -6.53479528427124
    9. 'dp' → logprob: -6.78479528427124
    10. 'cache' → logprob: -7.03479528427124

Token 847: ' cas' (ID: 2108)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.46732664108276367
    2. 'def' → logprob: -2.8423266410827637
    3. '_cache' → logprob: -2.8423266410827637
    4. 'cache' → logprob: -2.9673266410827637
    5. ' cache' → logprob: -3.0923266410827637
    6. 'memo' → logprob: -3.5923266410827637
    7. ' suite' → logprob: -3.8423266410827637
    8. ' memo' → logprob: -3.9673266410827637
    9. ' passant' → logprob: -4.592326641082764
    10. '```' → logprob: -4.842326641082764

Token 848: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.013799566775560379
    2. 'de' → logprob: -5.138799667358398
    3. ' d' → logprob: -5.638799667358398
    4. 'def' → logprob: -6.013799667358398
    5. '_de' → logprob: -7.138799667358398
    6. '   ' → logprob: -7.888799667358398
    7. 'd' → logprob: -8.638799667358398
    8. '_' → logprob: -9.013799667358398
    9. ' of' → logprob: -10.013799667358398
    10. ' complet' → logprob: -10.013799667358398

Token 849: ''' (ID: 6)
  Prédit: 'égalité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'égalité' → logprob: -0.16442830860614777
    2. ' cas' → logprob: -3.039428234100342
    3. '_' → logprob: -3.789428234100342
    4. 'tie' → logprob: -4.664428234100342
    5. '_cache' → logprob: -4.789428234100342
    6. 'cache' → logprob: -4.914428234100342
    7. 'cas' → logprob: -4.914428234100342
    8. ' égal' → logprob: -4.914428234100342
    9. 't' → logprob: -5.039428234100342
    10. 'égal' → logprob: -5.539428234100342

Token 850: 'égalité' (ID: 165530)
  Prédit: 'égalité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égalité' → logprob: -0.0006232033483684063
    2. 'ég' → logprob: -8.375622749328613
    3. 'égal' → logprob: -8.625622749328613
    4. 'egal' → logprob: -9.625622749328613
    5. ' égal' → logprob: -9.625622749328613
    6. 'é' → logprob: -10.625622749328613
    7. '```' → logprob: -10.875622749328613
    8. 'ex' → logprob: -12.500622749328613
    9. '>' → logprob: -12.625622749328613
    10. '_' → logprob: -12.750622749328613

Token 851: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12888504564762115
    2. ' de' → logprob: -2.37888503074646
    3. ' ,' → logprob: -5.253885269165039
    4. '   ' → logprob: -5.503885269165039
    5. ':' → logprob: -5.503885269165039
    6. 'de' → logprob: -6.378885269165039
    7. ' of' → logprob: -6.628885269165039
    8. ' d' → logprob: -6.753885269165039
    9. ' du' → logprob: -6.878885269165039
    10. ' return' → logprob: -7.128885269165039

Token 852: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.34911468625068665
    2. 'on' → logprob: -1.3491146564483643
    3. 'return' → logprob: -4.224114894866943
    4. ' retourner' → logprob: -4.724114894866943
    5. ' return' → logprob: -5.474114894866943
    6. ' continuer' → logprob: -6.224114894866943
    7. ' le' → logprob: -6.724114894866943
    8. 'le' → logprob: -6.974114894866943
    9. 'ret' → logprob: -7.224114894866943
    10. ' choisir' → logprob: -7.849114894866943

Token 853: ' chois' (ID: 33475)
  Prédit: ' chois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chois' → logprob: -0.8287085890769958
    2. 'cho' → logprob: -1.2037086486816406
    3. ' privilég' → logprob: -2.3287086486816406
    4. 'return' → logprob: -3.5787086486816406
    5. '   ' → logprob: -3.7037086486816406
    6. ' préfère' → logprob: -3.8287086486816406
    7. 'choose' → logprob: -4.203708648681641
    8. ' return' → logprob: -4.578708648681641
    9. 'continue' → logprob: -4.578708648681641
    10. ' choisir' → logprob: -4.703708648681641

Token 854: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0003618024929892272
    2. 't' → logprob: -9.000361442565918
    3. 'is' → logprob: -9.250361442565918
    4. 'ит' → logprob: -10.875361442565918
    5. 'ert' → logprob: -10.875361442565918
    6. 'ira' → logprob: -11.000361442565918
    7. 'era' → logprob: -11.375361442565918
    8. '```' → logprob: -11.375361442565918
    9. 'rit' → logprob: -11.500361442565918
    10. 'ît' → logprob: -11.750361442565918

Token 855: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.19185717403888702
    2. 'le' → logprob: -2.191857099533081
    3. ' la' → logprob: -3.191857099533081
    4. ' celui' → logprob: -4.69185733795166
    5. ' celle' → logprob: -5.19185733795166
    6. '_le' → logprob: -6.06685733795166
    7. 'la' → logprob: -6.19185733795166
    8. 'the' → logprob: -6.69185733795166
    9. ' the' → logprob: -7.44185733795166
    10. 'celle' → logprob: -7.81685733795166

Token 856: ' chemin' (ID: 45035)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.44007399678230286
    2. ' cave' → logprob: -1.6900739669799805
    3. 'child' → logprob: -3.4400739669799805
    4. 'plus' → logprob: -3.6900739669799805
    5. ' smaller' → logprob: -3.6900739669799805
    6. ' plus' → logprob: -3.8150739669799805
    7. 'min' → logprob: -4.6900739669799805
    8. ' dernier' → logprob: -4.9400739669799805
    9. 'token' → logprob: -5.0650739669799805
    10. ' smallest' → logprob: -5.1900739669799805

Token 857: ' dont' (ID: 11562)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.2306668907403946
    2. ' with' → logprob: -2.8556668758392334
    3. 'with' → logprob: -3.3556668758392334
    4. ' qui' → logprob: -3.6056668758392334
    5. '   ' → logprob: -3.7306668758392334
    6. 'avec' → logprob: -3.9806668758392334
    7. ' ayant' → logprob: -5.2306671142578125
    8. 'def' → logprob: -5.4806671142578125
    9. ' le' → logprob: -5.4806671142578125
    10. ' dont' → logprob: -5.6056671142578125

Token 858: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9694430828094482
    2. 'last' → logprob: -1.5944430828094482
    3. ' le' → logprob: -1.7194430828094482
    4. 'la' → logprob: -2.5944430828094482
    5. 'dern' → logprob: -2.8444430828094482
    6. ' la' → logprob: -3.2194430828094482
    7. ' last' → logprob: -3.4694430828094482
    8. 'l' → logprob: -4.219443321228027
    9. ' dernier' → logprob: -4.344443321228027
    10. ' l' → logprob: -5.344443321228027

Token 859: ' dernière' (ID: 39497)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.184928297996521
    2. 'last' → logprob: -2.1849284172058105
    3. 'plus' → logprob: -4.0599284172058105
    4. ' dernier' → logprob: -4.0599284172058105
    5. 'num' → logprob: -4.3099284172058105
    6. ' last' → logprob: -5.4349284172058105
    7. 'numero' → logprob: -7.1849284172058105
    8. 'no' → logprob: -7.6849284172058105
    9. 'c' → logprob: -7.9349284172058105
    10. ' plus' → logprob: -8.184927940368652

Token 860: ' cave' (ID: 44365)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.6183158755302429
    2. '_' → logprob: -1.2433159351348877
    3. '_prime' → logprob: -2.3683159351348877
    4. 'c' → logprob: -3.8683159351348877
    5. '_p' → logprob: -3.9933159351348877
    6. ' cave' → logprob: -4.368315696716309
    7. 'prime' → logprob: -4.868315696716309
    8. '_token' → logprob: -5.243315696716309
    9. 'prem' → logprob: -5.618315696716309
    10. ' _' → logprob: -5.993315696716309

Token 861: ' première' (ID: 23423)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.24481259286403656
    2. 'prime' → logprob: -2.494812488555908
    3. '_pr' → logprob: -3.119812488555908
    4. '_p' → logprob: -3.619812488555908
    5. 'prem' → logprob: -3.619812488555908
    6. 'prima' → logprob: -4.244812488555908
    7. 'pr' → logprob: -4.619812488555908
    8. ' est' → logprob: -5.869812488555908
    9. '_' → logprob: -5.994812488555908
    10. '_num' → logprob: -6.369812488555908

Token 862: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.20786762237548828
    2. 'est' → logprob: -1.8328676223754883
    3. 'num' → logprob: -4.207867622375488
    4. '_num' → logprob: -5.457867622375488
    5. 'visited' → logprob: -6.082867622375488
    6. ' visited' → logprob: -6.957867622375488
    7. ' is' → logprob: -7.457867622375488
    8. 'a' → logprob: -7.457867622375488
    9. ' a' → logprob: -7.457867622375488
    10. 's' → logprob: -7.582867622375488

Token 863: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.016472071409225464
    2. ' la' → logprob: -4.641471862792969
    3. 'min' → logprob: -5.641471862792969
    4. 'plus' → logprob: -6.016471862792969
    5. 'le' → logprob: -7.891471862792969
    6. 'the' → logprob: -9.016471862792969
    7. 'max' → logprob: -9.766471862792969
    8. ' minimale' → logprob: -10.141471862792969
    9. 'minimal' → logprob: -10.266471862792969
    10. 'minimum' → logprob: -10.766471862792969

Token 864: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.0006927779759280384
    2. ' plus' → logprob: -7.500692844390869
    3. 'moins' → logprob: -9.875692367553711
    4. 'Plus' → logprob: -10.375692367553711
    5. '```' → logprob: -11.125692367553711
    6. 'min' → logprob: -11.750692367553711
    7. 'PLUS' → logprob: -11.875692367553711
    8. '+' → logprob: -12.375692367553711
    9. 'minimum' → logprob: -12.625692367553711
    10. 'sm' → logprob: -12.625692367553711

Token 865: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.37976953387260437
    2. 'pet' → logprob: -1.5047695636749268
    3. 'grand' → logprob: -2.3797695636749268
    4. 'é' → logprob: -6.879769325256348
    5. 'large' → logprob: -9.254769325256348
    6. 'pro' → logprob: -10.004769325256348
    7. '```' → logprob: -10.504769325256348
    8. 'import' → logprob: -10.629769325256348
    9. 'g' → logprob: -11.004769325256348
    10. 'loin' → logprob: -11.254769325256348

Token 866: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6014521718025208
    2. 'memo' → logprob: -1.101452112197876
    3. ' memo' → logprob: -3.601452112197876
    4. 'cache' → logprob: -3.601452112197876
    5. ':' → logprob: -4.726452350616455
    6. '):
' → logprob: -4.851452350616455
    7. '_cache' → logprob: -4.976452350616455
    8. 'dp' → logprob: -5.101452350616455
    9. ',' → logprob: -5.101452350616455
    10. 'def' → logprob: -5.351452350616455

Token 867: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008672603406012058
    2. 'dp' → logprob: -5.633672714233398
    3. 'memo' → logprob: -5.633672714233398
    4. ' memo' → logprob: -7.258672714233398
    5. 'mem' → logprob: -7.758672714233398
    6. 'cache' → logprob: -9.383672714233398
    7. ' dp' → logprob: -9.508672714233398
    8. '
' → logprob: -9.633672714233398
    9. 'def' → logprob: -9.758672714233398
    10. ' mem' → logprob: -10.383672714233398

Token 868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025707928463816643
    2. ':' → logprob: -4.775707721710205
    3. ')' → logprob: -5.275707721710205
    4. 'memo' → logprob: -5.650707721710205
    5. ' memo' → logprob: -6.025707721710205
    6. '_' → logprob: -6.150707721710205
    7. 'cache' → logprob: -6.775707721710205
    8. 'dp' → logprob: -6.900707721710205
    9. 'mem' → logprob: -8.025708198547363
    10. '):' → logprob: -8.400708198547363

Token 869: ' Pour' (ID: 13931)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.04734032228589058
    2. '   ' → logprob: -3.2973403930664062
    3. 'cache' → logprob: -5.297340393066406
    4. 'dp' → logprob: -6.047340393066406
    5. 'mem' → logprob: -6.547340393066406
    6. ' memo' → logprob: -8.047340393066406
    7. 'visited' → logprob: -9.672340393066406
    8. 'memory' → logprob: -9.797340393066406
    9. 'm' → logprob: -12.047340393066406
    10. 'sys' → logprob: -12.672340393066406

Token 870: ' cela' (ID: 17542)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.5499628186225891
    2. ' memo' → logprob: -1.5499627590179443
    3. 'cache' → logprob: -2.9249627590179443
    4. ' cache' → logprob: -3.7999627590179443
    5. ' i' → logprob: -3.9249627590179443
    6. 'l' → logprob: -3.9249627590179443
    7. '_' → logprob: -3.9249627590179443
    8. ' la' → logprob: -4.299962997436523
    9. ' l' → logprob: -4.549962997436523
    10. 'i' → logprob: -4.674962997436523

Token 871: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0270878076553345
    2. ',' → logprob: -1.5270878076553345
    3. '   ' → logprob: -1.9020878076553345
    4. ':' → logprob: -2.527087688446045
    5. 'cache' → logprob: -2.527087688446045
    6. 'memo' → logprob: -2.652087688446045
    7. ' memo' → logprob: -4.152087688446045
    8. 'dp' → logprob: -4.652087688446045
    9. '
' → logprob: -5.277087688446045
    10. 'visited' → logprob: -5.527087688446045

Token 872: ' on' (ID: 402)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.026256410405039787
    2. ' memo' → logprob: -4.026256561279297
    3. 'dp' → logprob: -5.276256561279297
    4. 'cache' → logprob: -6.026256561279297
    5. 'mem' → logprob: -7.651256561279297
    6. 'memory' → logprob: -11.026256561279297
    7. 'from' → logprob: -11.276256561279297
    8. ' mem' → logprob: -11.651256561279297
    9. 'def' → logprob: -12.026256561279297
    10. ' cache' → logprob: -12.026256561279297

Token 873: ' mém' (ID: 136981)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7912983894348145
    2. '_cache' → logprob: -1.2912983894348145
    3. 'cache' → logprob: -2.0412983894348145
    4. 'def' → logprob: -2.2912983894348145
    5. ' import' → logprob: -4.1662983894348145
    6. ' cache' → logprob: -4.5412983894348145
    7. 'return' → logprob: -6.4162983894348145
    8. 'continue' → logprob: -6.4162983894348145
    9. 'memo' → logprob: -6.4162983894348145
    10. ' continue' → logprob: -6.6662983894348145

Token 874: 'or' (ID: 267)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.6698516011238098
    2. 'or' → logprob: -0.9198516011238098
    3. 'cache' → logprob: -2.794851541519165
    4. 'def' → logprob: -5.044851779937744
    5. '```' → logprob: -5.669851779937744
    6. 'if' → logprob: -6.169851779937744
    7. '_cache' → logprob: -6.544851779937744
    8. 'mo' → logprob: -6.544851779937744
    9. 'memo' → logprob: -6.544851779937744
    10. 'import' → logprob: -6.794851779937744

Token 875: 'ise' (ID: 1096)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.003503969172015786
    2. 'ise' → logprob: -6.003503799438477
    3. 'is' → logprob: -7.753503799438477
    4. 'er' → logprob: -8.003503799438477
    5. 'izer' → logprob: -9.253503799438477
    6. 'isé' → logprob: -10.003503799438477
    7. 'ï' → logprob: -10.878503799438477
    8. '```' → logprob: -11.253503799438477
    9. 'ize' → logprob: -11.503503799438477
    10. 'isez' → logprob: -11.503503799438477

Token 876: ' pour' (ID: 1930)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.5965362787246704
    2. 'cache' → logprob: -1.8465362787246704
    3. 'dp' → logprob: -1.9715362787246704
    4. 'memo' → logprob: -2.471536159515381
    5. ' memo' → logprob: -4.221536159515381
    6. ' dp' → logprob: -4.721536159515381
    7. '={}' → logprob: -4.721536159515381
    8. '   ' → logprob: -5.221536159515381
    9. ' =' → logprob: -5.596536159515381
    10. ' {}' → logprob: -5.596536159515381

Token 877: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.17510664463043213
    2. 'n' → logprob: -3.0501065254211426
    3. ' each' → logprob: -3.1751065254211426
    4. ' n' → logprob: -3.4251065254211426
    5. 'each' → logprob: -3.5501065254211426
    6. ' chacune' → logprob: -6.425106525421143
    7. '[]' → logprob: -6.550106525421143
    8. '{}' → logprob: -6.800106525421143
    9. 'c' → logprob: -6.925106525421143
    10. ')' → logprob: -7.050106525421143

Token 878: ' cave' (ID: 44365)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.23842695355415344
    2. 'n' → logprob: -2.613426923751831
    3. ' cave' → logprob: -2.738426923751831
    4. 'node' → logprob: -3.363426923751831
    5. ' node' → logprob: -3.988426923751831
    6. 'num' → logprob: -4.98842716217041
    7. ' n' → logprob: -5.11342716217041
    8. 'no' → logprob: -6.11342716217041
    9. 'position' → logprob: -6.36342716217041
    10. ' c' → logprob: -6.73842716217041

Token 879: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1102313995361328
    2. '_num' → logprob: -1.7352313995361328
    3. 'def' → logprob: -2.485231399536133
    4. ' visited' → logprob: -2.860231399536133
    5. 'visited' → logprob: -3.110231399536133
    6. ' n' → logprob: -3.485231399536133
    7. 'num' → logprob: -3.610231399536133
    8. ' (' → logprob: -3.860231399536133
    9. ' num' → logprob: -3.985231399536133
    10. ':' → logprob: -4.110231399536133

Token 880: ' tuple' (ID: 31311)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.8124198317527771
    2. 'cache' → logprob: -1.0624198913574219
    3. 'None' → logprob: -2.187419891357422
    4. ' None' → logprob: -3.062419891357422
    5. 'memo' → logprob: -4.062419891357422
    6. ' cache' → logprob: -4.437419891357422
    7. 'dp' → logprob: -4.812419891357422
    8. ' memo' → logprob: -5.062419891357422
    9. 'result' → logprob: -6.187419891357422
    10. '_cache' → logprob: -6.187419891357422

Token 881: ' :' (ID: 712)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.012092930264770985
    2. '(n' → logprob: -6.0120930671691895
    3. ' =' → logprob: -6.2620930671691895
    4. '(max' → logprob: -6.6370930671691895
    5. '(' → logprob: -6.8870930671691895
    6. '   ' → logprob: -7.3870930671691895
    7. '(nb' → logprob: -7.3870930671691895
    8. ' de' → logprob: -7.5120930671691895
    9. ':' → logprob: -7.7620930671691895
    10. '(dp' → logprob: -8.137092590332031

Token 882: ' 
' (ID: 793)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7080591917037964
    2. ' dp' → logprob: -1.5830591917037964
    3. ' (' → logprob: -2.083059310913086
    4. '   ' → logprob: -3.208059310913086
    5. 'cache' → logprob: -3.583059310913086
    6. 'memo' → logprob: -3.583059310913086
    7. '(dp' → logprob: -3.583059310913086
    8. ' memo' → logprob: -4.083059310913086
    9. 'results' → logprob: -5.083059310913086
    10. ' cache' → logprob: -5.208059310913086

Token 883: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08513150364160538
    2. '   ' → logprob: -3.7101314067840576
    3. '(n' → logprob: -4.585131645202637
    4. '(dp' → logprob: -4.835131645202637
    5. '(' → logprob: -4.960131645202637
    6. '(cache' → logprob: -5.085131645202637
    7. '(c' → logprob: -5.210131645202637
    8. '(None' → logprob: -5.210131645202637
    9. '(m' → logprob: -6.085131645202637
    10. 'cache' → logprob: -6.210131645202637

Token 884: ' (' (ID: 350)
  Prédit: '(nb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nb' → logprob: -1.1059733629226685
    2. '(n' → logprob: -1.6059733629226685
    3. '(dp' → logprob: -1.7309733629226685
    4. ' (' → logprob: -2.355973243713379
    5. '(max' → logprob: -2.980973243713379
    6. '(' (adapté à ' (') → logprob: -3.605973243713379
    7. '   ' → logprob: -4.105973243713379
    8. '(nombre' → logprob: -4.355973243713379
    9. '(res' → logprob: -4.605973243713379
    10. 'dp' → logprob: -4.605973243713379

Token 885: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6378589272499084
    2. '(max' → logprob: -1.1378588676452637
    3. '(length' → logprob: -3.7628588676452637
    4. 'length' → logprob: -3.8878588676452637
    5. 'nombre' → logprob: -4.137858867645264
    6. ' (' → logprob: -4.137858867645264
    7. '(nb' → logprob: -4.137858867645264
    8. 'long' → logprob: -4.637858867645264
    9. '(long' → logprob: -4.887858867645264
    10. '(nombre' → logprob: -5.137858867645264

Token 886: '_nb' (ID: 107159)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.1748061329126358
    2. '_count' → logprob: -2.6748061180114746
    3. '_len' → logprob: -3.1748061180114746
    4. '_prime' → logprob: -4.174806118011475
    5. '_' → logprob: -4.549806118011475
    6. '_nb' → logprob: -4.799806118011475
    7. '_p' → logprob: -5.799806118011475
    8. '_depth' → logprob: -5.924806118011475
    9. '_dp' → logprob: -6.049806118011475
    10. '_pr' → logprob: -6.299806118011475

Token 887: '_pr' (ID: 18177)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.7644548416137695
    2. '_' → logprob: -1.5144548416137695
    3. '_prime' → logprob: -1.8894548416137695
    4. '_pr' → logprob: -2.0144548416137695
    5. '_de' → logprob: -3.7644548416137695
    6. '_c' → logprob: -5.8894548416137695
    7. '_first' → logprob: -6.7644548416137695
    8. ')' → logprob: -7.2644548416137695
    9. 'de' → logprob: -7.6394548416137695
    10. '_possible' → logprob: -9.13945484161377

Token 888: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.6941330432891846
    2. 'ime' → logprob: -1.4441330432891846
    3. 'im' → logprob: -1.6941330432891846
    4. 'em' → logprob: -4.0691328048706055
    5. 'és' → logprob: -4.8191328048706055
    6. 'é' → logprob: -4.9441328048706055
    7. 'imitives' → logprob: -5.3191328048706055
    8. '```' → logprob: -5.6941328048706055
    9. 'es' → logprob: -5.8191328048706055
    10. '   ' → logprob: -6.1941328048706055

Token 889: '_sur' (ID: 160451)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005314158275723457
    2. '_p' → logprob: -6.005314350128174
    3. '_c' → logprob: -7.255314350128174
    4. '_pr' → logprob: -7.505314350128174
    5. '_found' → logprob: -8.380313873291016
    6. '_en' → logprob: -8.505313873291016
    7. '_,' → logprob: -8.630313873291016
    8. '_par' → logprob: -8.880313873291016
    9. '_pres' → logprob: -9.005313873291016
    10. '   ' → logprob: -9.130313873291016

Token 890: '_che' (ID: 193742)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8976510763168335
    2. 'la' → logprob: -1.6476510763168335
    3. ',' → logprob: -2.272651195526123
    4. ')' → logprob: -2.647651195526123
    5. 'c' → logprob: -3.022651195526123
    6. '   ' → logprob: -3.147651195526123
    7. '_' → logprob: -3.772651195526123
    8. 'les' → logprob: -3.897651195526123
    9. '_,' → logprob: -4.147651195526123
    10. '_le' → logprob: -4.522651195526123

Token 891: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0016714917728677392
    2. 'mine' → logprob: -7.501671314239502
    3. 'que' → logprob: -7.751671314239502
    4. 'val' → logprob: -8.50167179107666
    5. '   ' → logprob: -8.75167179107666
    6. 'mins' → logprob: -9.50167179107666
    7. 'ck' → logprob: -10.25167179107666
    8. 'main' → logprob: -10.87667179107666
    9. 'max' → logprob: -10.87667179107666
    10. 'z' → logprob: -10.87667179107666

Token 892: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005577972042374313
    2. '_,' → logprob: -8.750557899475098
    3. '   ' → logprob: -9.125557899475098
    4. ' ,' → logprob: -9.750557899475098
    5. ',
' → logprob: -10.000557899475098
    6. '_par' → logprob: -10.250557899475098
    7. ')' → logprob: -10.250557899475098
    8. 'def' → logprob: -10.875557899475098
    9. '_possible' → logprob: -11.125557899475098
    10. '_p' → logprob: -11.250557899475098

Token 893: ' dernier' (ID: 27982)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7031261324882507
    2. ' max' → logprob: -1.3281261920928955
    3. 'dern' → logprob: -2.0781261920928955
    4. 'last' → logprob: -2.9531261920928955
    5. ' last' → logprob: -3.2031261920928955
    6. ' dernier' → logprob: -4.453125953674316
    7. 'plus' → logprob: -5.703125953674316
    8. ' plus' → logprob: -6.328125953674316
    9. '(max' → logprob: -6.953125953674316
    10. 'der' → logprob: -6.953125953674316

Token 894: '_prime' (ID: 98616)
  Prédit: '_no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.33718931674957275
    2. '_token' → logprob: -2.212189197540283
    3. '_' → logprob: -2.587189197540283
    4. '_c' → logprob: -2.962189197540283
    5. '_num' → logprob: -3.962189197540283
    6. '_prime' → logprob: -4.212189197540283
    7. '_p' → logprob: -5.212189197540283
    8. '_nb' → logprob: -5.837189197540283
    9. '_pr' → logprob: -6.462189197540283
    10. ')' → logprob: -6.837189197540283

Token 895: '_sur' (ID: 160451)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7523141503334045
    2. '_c' → logprob: -1.8773140907287598
    3. ',' → logprob: -2.2523140907287598
    4. '_prime' → logprob: -2.2523140907287598
    5. '_pr' → logprob: -2.6273140907287598
    6. '_p' → logprob: -3.2523140907287598
    7. '_' → logprob: -4.12731409072876
    8. '),' → logprob: -4.75231409072876
    9. 'ier' → logprob: -5.37731409072876
    10. '_num' → logprob: -5.50231409072876

Token 896: '_che' (ID: 193742)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3408212661743164
    2. '_le' → logprob: -1.8408212661743164
    3. '_che' → logprob: -2.4658212661743164
    4. 'che' → logprob: -3.2158212661743164
    5. '_' → logprob: -6.215821266174316
    6. '   ' → logprob: -6.840821266174316
    7. 'la' → logprob: -7.340821266174316
    8. '_la' → logprob: -8.340821266174316
    9. ')' → logprob: -8.590821266174316
    10. 'ce' → logprob: -8.965821266174316

Token 897: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001931696751853451
    2. 'main' → logprob: -9.50019359588623
    3. '   ' → logprob: -10.25019359588623
    4. '```' → logprob: -11.00019359588623
    5. '
' → logprob: -11.62519359588623
    6. '#' → logprob: -11.62519359588623
    7. '     ' → logprob: -12.50019359588623
    8. 'mine' → logprob: -12.87519359588623
    9. '_' → logprob: -13.00019359588623
    10. '\' → logprob: -13.12519359588623

Token 898: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035048185964114964
    2. '_)' → logprob: -9.875350952148438
    3. ',' → logprob: -10.125350952148438
    4. '_prime' → logprob: -10.250350952148438
    5. ')`' → logprob: -10.375350952148438
    6. ')
' → logprob: -10.375350952148438
    7. '   ' → logprob: -10.500350952148438
    8. '_' → logprob: -11.125350952148438
    9. ' )' → logprob: -11.250350952148438
    10. ')
' → logprob: -11.250350952148438

Token 899: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008301911875605583
    2. 'cache' → logprob: -6.133301734924316
    3. '
' → logprob: -6.508301734924316
    4. 'dp' → logprob: -7.008301734924316
    5. ')' → logprob: -7.133301734924316
    6. 'def' → logprob: -7.258301734924316
    7. '_cache' → logprob: -7.633301734924316
    8. '_dp' → logprob: -7.883301734924316
    9. ',' → logprob: -8.133301734924316
    10. ')
' → logprob: -8.258301734924316

Token 900: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0665341168642044
    2. 'memo' → logprob: -3.5665340423583984
    3. 'dp' → logprob: -3.6915340423583984
    4. 'cache' → logprob: -5.316534042358398
    5. 'mem' → logprob: -6.191534042358398
    6. '
' → logprob: -6.691534042358398
    7. ' memo' → logprob: -7.066534042358398
    8. '    
' → logprob: -7.816534042358398
    9. ')
' → logprob: -7.816534042358398
    10. ')' → logprob: -8.066534042358398

Token 901: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021265704184770584
    2. 'dp' → logprob: -4.271265506744385
    3. 'memo' → logprob: -5.021265506744385
    4. 'mem' → logprob: -8.521265983581543
    5. 'cache' → logprob: -8.896265983581543
    6. ' memo' → logprob: -9.271265983581543
    7. ' dp' → logprob: -10.646265983581543
    8. '    
' → logprob: -12.146265983581543
    9. 'if' → logprob: -12.396265983581543
    10. 'm' → logprob: -12.521265983581543

Token 902: ' from' (ID: 591)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.08773907274007797
    2. 'dp' → logprob: -2.5877389907836914
    3. 'if' → logprob: -5.837738990783691
    4. 'cache' → logprob: -6.087738990783691
    5. 'mem' → logprob: -6.587738990783691
    6. '   ' → logprob: -6.587738990783691
    7. ' memo' → logprob: -7.087738990783691
    8. 'visited' → logprob: -11.087738990783691
    9. 'memory' → logprob: -11.587738990783691
    10. 'from' (adapté à ' from') → logprob: -12.462738990783691

Token 903: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.1608838438987732
    2. 'collections' → logprob: -1.910883903503418
    3. ' functools' → logprob: -7.660883903503418
    4. 'sys' → logprob: -8.660883903503418
    5. 'math' → logprob: -12.160883903503418
    6. '_' → logprob: -12.410883903503418
    7. '_fun' → logprob: -12.535883903503418
    8. ' collections' → logprob: -13.410883903503418
    9. 'func' → logprob: -15.035883903503418
    10. 'heap' → logprob: -15.410883903503418

Token 904: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.27142155170440674
    2. ' import' → logprob: -1.6464215517044067
    3. '_import' → logprob: -3.271421432495117
    4. '_' → logprob: -5.771421432495117
    5. '   ' → logprob: -6.896421432495117
    6. '	import' → logprob: -7.146421432495117
    7. ' _' → logprob: -7.396421432495117
    8. '_cache' → logprob: -7.896421432495117
    9. ' l' → logprob: -8.021421432495117
    10. '_l' → logprob: -9.271421432495117

Token 905: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00021259987261146307
    2. 'cache' → logprob: -8.500212669372559
    3. ' l' → logprob: -11.625212669372559
    4. 'cached' → logprob: -16.250211715698242
    5. '	l' → logprob: -17.750211715698242
    6. 'wrap' → logprob: -17.875211715698242
    7. 'import' → logprob: -19.375211715698242
    8. '```' → logprob: -19.500211715698242
    9. 'reduce' → logprob: -19.625211715698242
    10. '_l' → logprob: -19.750211715698242

Token 906: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.6405310816480778e-05
    2. 'RU' → logprob: -11.125016212463379
    3. 'r' → logprob: -14.250016212463379
    4. 'Ru' → logprob: -14.625016212463379
    5. 'ruff' → logprob: -15.875016212463379
    6. 'ruz' → logprob: -16.000017166137695
    7. '_ru' → logprob: -16.250017166137695
    8. ' ru' → logprob: -16.375017166137695
    9. 'import' → logprob: -17.000017166137695
    10. 'fu' → logprob: -17.125017166137695

Token 907: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.004383367020636797
    2. 'cache' → logprob: -5.504383563995361
    3. 'ru' → logprob: -8.504383087158203
    4. 'u' → logprob: -10.629383087158203
    5. 'c' → logprob: -10.879383087158203
    6. 'r' → logprob: -11.254383087158203
    7. '_cached' → logprob: -12.004383087158203
    8. 'cached' → logprob: -12.129383087158203
    9. 'import' → logprob: -12.629383087158203
    10. 'w' → logprob: -12.629383087158203

Token 908: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5061622262001038
    2. '@' → logprob: -1.381162166595459
    3. '   ' → logprob: -2.006162166595459
    4. '    
' → logprob: -4.756162166595459
    5. '@
' → logprob: -6.631162166595459
    6. '

' → logprob: -6.881162166595459
    7. '  
' → logprob: -9.131162643432617
    8. '@return' → logprob: -9.756162643432617
    9. '   
' → logprob: -10.006162643432617
    10. ' @' → logprob: -10.006162643432617

Token 909: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.1718990057706833
    2. '   ' → logprob: -2.1718990802764893
    3. '
' → logprob: -3.1718990802764893
    4. '    
' → logprob: -6.29689884185791
    5. '@
' → logprob: -9.29689884185791
    6. '

' → logprob: -9.92189884185791
    7. '```' → logprob: -9.92189884185791
    8. ' @' → logprob: -12.42189884185791
    9. '  
' → logprob: -12.79689884185791
    10. '   
' → logprob: -13.04689884185791

Token 910: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0004896456957794726
    2. '   ' → logprob: -7.750489711761475
    3. '
' → logprob: -9.750489234924316
    4. '    
' → logprob: -15.000489234924316
    5. '@
' → logprob: -15.625489234924316
    6. ' @' → logprob: -15.625489234924316
    7. '```' → logprob: -17.125490188598633
    8. '

' → logprob: -18.375490188598633
    9. '@[' → logprob: -18.375490188598633
    10. '@n' → logprob: -18.625490188598633

Token 911: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -19.875
    3. 'cache' → logprob: -23.0
    4. 'lr' → logprob: -25.5
    5. '	l' → logprob: -25.875
    6. 'staticmethod' → logprob: -26.0
    7. '_l' → logprob: -26.5
    8. 'lf' → logprob: -26.875
    9. 'fun' → logprob: -27.5
    10. 'r' → logprob: -27.5

Token 912: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.002485288307070732
    2. 'r' → logprob: -6.002485275268555
    3. 'rl' → logprob: -11.627485275268555
    4. '@' → logprob: -15.002485275268555
    5. 'rr' → logprob: -16.252485275268555
    6. '   ' → logprob: -16.377485275268555
    7. '```' → logprob: -17.377485275268555
    8. 'l' → logprob: -18.002485275268555
    9. '1' → logprob: -18.252485275268555
    10. 'rum' → logprob: -18.377485275268555

Token 913: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00020210994989611208
    2. 'cache' → logprob: -8.625202178955078
    3. '_cached' → logprob: -11.000202178955078
    4. '_' → logprob: -13.500202178955078
    5. '   ' → logprob: -13.625202178955078
    6. 'cached' → logprob: -14.375202178955078
    7. '_c' → logprob: -14.875202178955078
    8. 'def' → logprob: -14.875202178955078
    9. '_CACHE' → logprob: -15.250202178955078
    10. '
' → logprob: -15.250202178955078

Token 914: '(None' (ID: 65126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6550982594490051
    2. '(None' → logprob: -1.2800981998443604
    3. '(max' → logprob: -1.6550981998443604
    4. 'max' → logprob: -4.9050984382629395
    5. '
' → logprob: -5.7800984382629395
    6. '()' → logprob: -7.9050984382629395
    7. '    
' → logprob: -9.030097961425781
    8. '()
' → logprob: -9.030097961425781
    9. '=None' → logprob: -9.030097961425781
    10. '(def' → logprob: -9.905097961425781

Token 915: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029773171991109848
    2. ')' → logprob: -3.529773235321045
    3. 'def' → logprob: -11.404772758483887
    4. '
' → logprob: -12.029772758483887
    5. ')
' → logprob: -12.404772758483887
    6. '   ' → logprob: -14.779772758483887
    7. '```' → logprob: -15.029772758483887
    8. ')`
' → logprob: -15.154772758483887
    9. '`)
' → logprob: -16.404773712158203
    10. ' )
' → logprob: -16.404773712158203

Token 916: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004243773873895407
    2. '
' → logprob: -5.504243850708008
    3. '   ' → logprob: -8.879243850708008
    4. ' def' → logprob: -11.004243850708008
    5. '	def' → logprob: -12.504243850708008
    6. '    
' → logprob: -13.629243850708008
    7. '(def' → logprob: -13.629243850708008
    8. ':def' → logprob: -14.254243850708008
    9. ' déf' → logprob: -14.504243850708008
    10. '
' → logprob: -14.629243850708008

Token 917: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3868817090988159
    2. '
' → logprob: -1.136881709098816
    3. '    
' → logprob: -12.261881828308105
    4. '
' → logprob: -13.136881828308105
    5. ' def' → logprob: -13.511881828308105
    6. ':def' → logprob: -13.886881828308105
    7. '   ' → logprob: -14.511881828308105
    8. '\' → logprob: -14.761881828308105
    9. '(def' → logprob: -15.136881828308105
    10. '#' → logprob: -16.01188087463379

Token 918: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.47873634099960327
    2. 'dp' → logprob: -0.9787363409996033
    3. ' dfs' → logprob: -5.478736400604248
    4. ' dp' → logprob: -7.728736400604248
    5. 'max' → logprob: -11.35373592376709
    6. 'search' → logprob: -12.10373592376709
    7. 'rec' → logprob: -12.22873592376709
    8. 'best' → logprob: -12.47873592376709
    9. 'f' → logprob: -13.22873592376709
    10. '_dp' → logprob: -13.72873592376709

Token 919: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.10406489670276642
    2. '(node' → logprob: -2.35406494140625
    3. '(i' → logprob: -6.47906494140625
    4. '(current' → logprob: -6.97906494140625
    5. '(' → logprob: -7.22906494140625
    6. '(n' → logprob: -7.47906494140625
    7. ' (' → logprob: -10.10406494140625
    8. '(num' → logprob: -11.10406494140625
    9. '(pos' → logprob: -11.35406494140625
    10. '(curr' → logprob: -12.10406494140625

Token 920: 'ave' (ID: 577)
  Prédit: 'ave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ave' → logprob: -0.24738489091396332
    2. 'c' → logprob: -1.8723849058151245
    3. '_c' → logprob: -3.747384786605835
    4. 'av' → logprob: -4.247385025024414
    5. '(c' → logprob: -4.497385025024414
    6. '_num' → logprob: -5.622385025024414
    7. 'num' → logprob: -6.497385025024414
    8. '   ' → logprob: -6.497385025024414
    9. '(n' → logprob: -6.497385025024414
    10. ' cave' → logprob: -6.622385025024414

Token 921: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.004028056748211384
    2. '):' → logprob: -5.754027843475342
    3. '):
' → logprob: -7.129027843475342
    4. ')' → logprob: -11.0040283203125
    5. 'num' → logprob: -12.1290283203125
    6. '):
' → logprob: -12.1290283203125
    7. '_n' → logprob: -12.3790283203125
    8. '_' → logprob: -12.3790283203125
    9. '   ' → logprob: -12.3790283203125
    10. '_NUM' → logprob: -12.8790283203125

Token 922: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07899951189756393
    2. '):
' → logprob: -2.5789995193481445
    3. '):
' → logprob: -9.953999519348145
    4. ',' → logprob: -10.578999519348145
    5. ')' → logprob: -10.703999519348145
    6. '   ' → logprob: -11.578999519348145
    7. ':' → logprob: -13.578999519348145
    8. ' ):' → logprob: -13.703999519348145
    9. '):

' → logprob: -13.703999519348145
    10. '(c' → logprob: -14.328999519348145

Token 923: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00388891133479774
    2. '   ' → logprob: -6.003889083862305
    3. ':' → logprob: -7.253889083862305
    4. '<|end|>' → logprob: -8.378889083862305
    5. ')' → logprob: -9.378889083862305
    6. '(' → logprob: -9.628889083862305
    7. '        
' → logprob: -9.753889083862305
    8. ' if' → logprob: -10.128889083862305
    9. '):
' → logprob: -10.503889083862305
    10. '):' → logprob: -10.503889083862305

Token 924: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4830939769744873
    2. 'if' → logprob: -0.9830939769744873
    3. ' if' → logprob: -5.358094215393066
    4. '   ' → logprob: -5.483094215393066
    5. 'token' → logprob: -10.483094215393066
    6. 'result' → logprob: -10.983094215393066
    7. 'prime' → logprob: -11.358094215393066
    8. 'non' → logprob: -11.608094215393066
    9. '	if' → logprob: -12.108094215393066
    10. '#' (adapté à ' #') → logprob: -12.108094215393066

Token 925: ' Recherche' (ID: 114815)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00757468119263649
    2. '       ' → logprob: -5.507574558258057
    3. 'max' → logprob: -6.257574558258057
    4. 'res' → logprob: -7.757574558258057
    5. ' if' → logprob: -7.757574558258057
    6. '   ' → logprob: -8.007575035095215
    7. 'non' → logprob: -8.882575035095215
    8. 'best' → logprob: -9.507575035095215
    9. 'result' → logprob: -9.757575035095215
    10. '#' → logprob: -10.007575035095215

Token 926: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04960067570209503
    2. ' if' → logprob: -3.424600601196289
    3. 'if' → logprob: -4.549600601196289
    4. '   ' → logprob: -5.549600601196289
    5. ':' → logprob: -8.049600601196289
    6. 'max' → logprob: -8.049600601196289
    7. '           ' → logprob: -8.549600601196289
    8. 'result' → logprob: -8.549600601196289
    9. 'res' → logprob: -10.049600601196289
    10. ' max' → logprob: -10.424600601196289

Token 927: ' meilleure' (ID: 52387)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07290555536746979
    2. 'if' → logprob: -3.6979055404663086
    3. '   ' → logprob: -4.322905540466309
    4. '(' → logprob: -4.697905540466309
    5. 'best' → logprob: -4.947905540466309
    6. ' max' → logprob: -5.822905540466309
    7. 'result' → logprob: -5.947905540466309
    8. '(max' → logprob: -6.447905540466309
    9. 'c' → logprob: -6.697905540466309
    10. 'nb' → logprob: -6.947905540466309

Token 928: ' route' (ID: 9656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45882919430732727
    2. 'route' → logprob: -1.9588291645050049
    3. 'res' → logprob: -2.583829164505005
    4. 'result' → logprob: -2.833829164505005
    5. 'c' → logprob: -4.208829402923584
    6. 'rés' → logprob: -4.208829402923584
    7. ' res' → logprob: -4.583829402923584
    8. 'val' → logprob: -4.833829402923584
    9. 'tuple' → logprob: -5.083829402923584
    10. '       ' → logprob: -5.333829402923584

Token 929: ' descendant' (ID: 145081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037367161363363266
    2. '   ' → logprob: -4.162367343902588
    3. '(' → logprob: -5.287367343902588
    4. ':' → logprob: -5.412367343902588
    5. ' (' → logprob: -5.787367343902588
    6. ' if' → logprob: -5.912367343902588
    7. 'result' → logprob: -6.162367343902588
    8. ',' → logprob: -6.537367343902588
    9. '(c' → logprob: -7.787367343902588
    10. 'if' → logprob: -7.912367343902588

Token 930: ' en' (ID: 469)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2020275592803955
    2. '       ' → logprob: -2.9520275592803955
    3. ':' → logprob: -3.3270275592803955
    4. '(' → logprob: -3.4520275592803955
    5. '   ' → logprob: -3.7020275592803955
    6. '(
' → logprob: -4.202027320861816
    7. ' (' → logprob: -4.827027320861816
    8. ',' → logprob: -5.077027320861816
    9. 'c' → logprob: -5.327027320861816
    10. ' =' → logprob: -7.327027320861816

Token 931: ' part' (ID: 997)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.4124578833580017
    2. 'pr' → logprob: -1.1624579429626465
    3. 'prime' → logprob: -4.4124579429626465
    4. 'nb' → logprob: -5.2874579429626465
    5. 'c' → logprob: -6.0374579429626465
    6. ' nombre' → logprob: -6.4124579429626465
    7. 'ter' → logprob: -6.9124579429626465
    8. '(pr' → logprob: -7.1624579429626465
    9. 'prem' → logprob: -7.5374579429626465
    10. 'term' → logprob: -8.412457466125488

Token 932: 'ant' (ID: 493)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.44124636054039
    2. 'from' → logprob: -1.8162463903427124
    3. 'def' → logprob: -2.691246271133423
    4. 'of' → logprob: -3.066246271133423
    5. '       ' → logprob: -3.316246271133423
    6. '           ' → logprob: -4.691246509552002
    7. 'à' → logprob: -4.816246509552002
    8. 'avant' → logprob: -5.316246509552002
    9. 'ent' → logprob: -5.816246509552002
    10. 'ant' → logprob: -6.066246509552002

Token 933: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2771683633327484
    2. '       ' → logprob: -1.7771683931350708
    3. 'from' → logprob: -3.1521682739257812
    4. ' de' → logprob: -3.5271682739257812
    5. '   ' → logprob: -8.152168273925781
    6. '(c' → logprob: -8.652168273925781
    7. ' from' → logprob: -9.152168273925781
    8. '        ' → logprob: -9.277168273925781
    9. 'c' → logprob: -10.277168273925781
    10. 'dep' → logprob: -10.402168273925781

Token 934: ' cave' (ID: 44365)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00466093048453331
    2. ' cave' → logprob: -5.3796610832214355
    3. '   ' → logprob: -10.504660606384277
    4. ' c' → logprob: -12.004660606384277
    5. '	c' → logprob: -12.629660606384277
    6. '_c' → logprob: -14.504660606384277
    7. '```' → logprob: -14.504660606384277
    8. '       ' → logprob: -14.754660606384277
    9. ' caves' → logprob: -14.879660606384277
    10. ')c' → logprob: -15.004660606384277

Token 935: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -2.47495681833243e-05
    2. 'num' → logprob: -11.125024795532227
    3. '   ' → logprob: -12.000024795532227
    4. '_' → logprob: -13.625024795532227
    5. '       ' → logprob: -14.250024795532227
    6. 'Num' → logprob: -14.750024795532227
    7. ' _' → logprob: -15.125024795532227
    8. '
' → logprob: -15.250024795532227
    9. ')' → logprob: -15.500024795532227
    10. '_NUM' → logprob: -16.000024795532227

Token 936: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004268338903784752
    2. '
' → logprob: -6.254268169403076
    3. ':' → logprob: -6.504268169403076
    4. '        
' → logprob: -8.004268646240234
    5. ':
' → logprob: -8.254268646240234
    6. '   ' → logprob: -9.754268646240234
    7. ',' → logprob: -9.754268646240234
    8. '):
' → logprob: -10.379268646240234
    9. '<|end|>' → logprob: -11.004268646240234
    10. '    
' → logprob: -11.254268646240234

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0054691326804459095
    2. ':' → logprob: -5.63046932220459
    3. '):' → logprob: -7.38046932220459
    4. '        
' → logprob: -7.50546932220459
    5. '   ' → logprob: -8.50546932220459
    6. '):
' → logprob: -8.88046932220459
    7. ':
' → logprob: -9.25546932220459
    8. ')' → logprob: -10.13046932220459
    9. '    
' → logprob: -10.13046932220459
    10. '
' → logprob: -10.25546932220459

Token 938: ' children' (ID: 3953)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07409365475177765
    2. 'if' → logprob: -2.6990935802459717
    3. ' if' → logprob: -5.949093818664551
    4. 'result' → logprob: -7.574093818664551
    5. 'max' → logprob: -7.824093818664551
    6. '   ' → logprob: -8.57409381866455
    7. 'res' → logprob: -8.57409381866455
    8. 'best' → logprob: -8.69909381866455
    9. 'children' (adapté à ' children') → logprob: -10.32409381866455
    10. '        
' → logprob: -11.57409381866455

Token 939: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5449702143669128
    2. '=' → logprob: -1.0449702739715576
    3. '   ' → logprob: -3.2949702739715576
    4. '_results' → logprob: -3.7949702739715576
    5. ')' → logprob: -5.6699700355529785
    6. '):' → logprob: -6.6699700355529785
    7. 's' → logprob: -6.7949700355529785
    8. ':' → logprob: -7.7949700355529785
    9. '):
' → logprob: -7.7949700355529785
    10. 'results' → logprob: -8.169970512390137

Token 940: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0004324573092162609
    2. ' get' → logprob: -7.75043249130249
    3. '[get' → logprob: -13.750432014465332
    4. '[]' → logprob: -15.250432014465332
    5. '[]
' → logprob: -15.500432014465332
    6. '   ' → logprob: -15.750432014465332
    7. '	get' → logprob: -16.00043296813965
    8. '(get' → logprob: -18.37543296813965
    9. '.get' → logprob: -19.00043296813965
    10. '=get' → logprob: -19.37543296813965

Token 941: '_children' (ID: 78282)
  Prédit: '_children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_children' → logprob: -0.00035906085395254195
    2. 'children' → logprob: -8.250359535217285
    3. '_c' → logprob: -10.000359535217285
    4. '(c' → logprob: -10.500359535217285
    5. '(children' → logprob: -11.250359535217285
    6. 'c' → logprob: -11.625359535217285
    7. '_' → logprob: -14.250359535217285
    8. '_child' → logprob: -14.375359535217285
    9. '```' → logprob: -14.625359535217285
    10. 'Children' → logprob: -15.125359535217285

Token 942: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. '(
' → logprob: -16.375001907348633
    4. 'c' → logprob: -16.625001907348633
    5. '(C' → logprob: -18.250001907348633
    6. ' (' → logprob: -18.250001907348633
    7. '(i' → logprob: -18.625001907348633
    8. ')c' → logprob: -18.875001907348633
    9. '(n' → logprob: -19.000001907348633
    10. ')' → logprob: -19.750001907348633

Token 943: 'ave' (ID: 577)
  Prédit: 'ave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ave' → logprob: -0.010426300577819347
    2. 'c' → logprob: -4.6354265213012695
    3. '(c' → logprob: -7.8854265213012695
    4. ' cave' → logprob: -9.26042652130127
    5. '_c' → logprob: -9.63542652130127
    6. 'av' → logprob: -10.51042652130127
    7. '```' → logprob: -11.38542652130127
    8. '   ' → logprob: -11.38542652130127
    9. 'num' → logprob: -11.51042652130127
    10. ')' → logprob: -11.51042652130127

Token 944: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.27099974633893e-05
    2. 'num' → logprob: -11.375012397766113
    3. '_' → logprob: -14.500012397766113
    4. 'Num' → logprob: -15.125012397766113
    5. ')' → logprob: -16.25001335144043
    6. ')_' → logprob: -16.37501335144043
    7. ' _' → logprob: -16.50001335144043
    8. '_NUM' → logprob: -16.50001335144043
    9. '-num' → logprob: -17.25001335144043
    10. '[num' → logprob: -17.75001335144043

Token 945: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005285223014652729
    2. ',m' → logprob: -5.255285263061523
    3. ' ,' → logprob: -10.255285263061523
    4. '(m' → logprob: -12.005285263061523
    5. 'm' → logprob: -12.130285263061523
    6. ')' → logprob: -13.755285263061523
    7. ',c' → logprob: -13.755285263061523
    8. '(' → logprob: -14.255285263061523
    9. '   ' → logprob: -14.630285263061523
    10. '       ' → logprob: -15.380285263061523

Token 946: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.5577775128767826e-06
    2. ' m' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.1250057220459
    4. ')m' → logprob: -19.8750057220459
    5. '	m' → logprob: -20.5000057220459
    6. 'max' → logprob: -21.2500057220459
    7. ')' → logprob: -21.6250057220459
    8. 'M' → logprob: -22.5000057220459
    9. '(m' → logprob: -23.1250057220459
    10. '       ' → logprob: -23.2500057220459

Token 947: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3138315677642822
    2. ')' → logprob: -1.3138315677642822
    3. '       ' → logprob: -7.688831329345703
    4. ')
' → logprob: -9.438831329345703
    5. '   ' → logprob: -10.438831329345703
    6. ')

' → logprob: -13.563831329345703
    7. ')`
' → logprob: -14.438831329345703
    8. ' )
' → logprob: -14.563831329345703
    9. ' )' → logprob: -15.313831329345703
    10. '
' → logprob: -15.813831329345703

Token 948: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004959543235599995
    2. '
' → logprob: -6.504959583282471
    3. '   ' → logprob: -7.004959583282471
    4. 'if' → logprob: -7.254959583282471
    5. 'max' → logprob: -7.629959583282471
    6. '        
' → logprob: -7.629959583282471
    7. 'result' → logprob: -7.754959583282471
    8. 'best' → logprob: -8.379959106445312
    9. '    
' → logprob: -9.129959106445312
    10. 'next' → logprob: -10.504959106445312

Token 949: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.588085412979126
    2. 'best' → logprob: -0.838085412979126
    3. 'max' → logprob: -4.588085174560547
    4. 'results' → logprob: -6.838085174560547
    5. 'res' → logprob: -7.463085174560547
    6. '       ' → logprob: -8.838085174560547
    7. ' best' → logprob: -10.338085174560547
    8. ' if' → logprob: -10.463085174560547
    9. '#' (adapté à ' #') → logprob: -10.713085174560547
    10. 'result' → logprob: -10.838085174560547

Token 950: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05142870545387268
    2. 'best' → logprob: -3.05142879486084
    3. 'max' → logprob: -6.17642879486084
    4. '       ' → logprob: -8.05142879486084
    5. 'results' → logprob: -8.42642879486084
    6. 'res' → logprob: -9.17642879486084
    7. ' if' → logprob: -9.67642879486084
    8. '#' → logprob: -11.17642879486084
    9. 'If' → logprob: -11.17642879486084
    10. 'result' → logprob: -11.42642879486084

Token 951: ' pas' (ID: 2173)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.126996248960495
    2. ' not' → logprob: -2.1269962787628174
    3. 'len' → logprob: -9.626996040344238
    4. ' len' → logprob: -14.376996040344238
    5. '	not' → logprob: -15.001996040344238
    6. '!' → logprob: -15.251996040344238
    7. 'n' → logprob: -15.501996040344238
    8. '
' → logprob: -15.501996040344238
    9. '(not' → logprob: -15.626996040344238
    10. 'c' → logprob: -15.876996040344238

Token 952: ' d' (ID: 272)
  Prédit: ' children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' children' → logprob: -0.3133801221847534
    2. 'children' → logprob: -1.3133801221847534
    3. '(children' → logprob: -9.813380241394043
    4. ' enfants' → logprob: -10.188380241394043
    5. '	children' → logprob: -10.688380241394043
    6. '.children' → logprob: -12.813380241394043
    7. '_children' → logprob: -15.313380241394043
    8. ' kids' → logprob: -16.438379287719727
    9. 'en' → logprob: -16.938379287719727
    10. ' kinderen' → logprob: -17.438379287719727

Token 953: ''en' (ID: 16740)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.02134903147816658
    2. ' children' → logprob: -4.64634895324707
    3. '(children' → logprob: -5.27134895324707
    4. 'en' → logprob: -5.39634895324707
    5. ' enfants' → logprob: -7.02134895324707
    6. '_children' → logprob: -7.77134895324707
    7. '	children' → logprob: -8.27134895324707
    8. ''en' → logprob: -9.14634895324707
    9. '_en' → logprob: -9.77134895324707
    10. 'e' → logprob: -10.27134895324707

Token 954: 'fants' (ID: 100575)
  Prédit: 'fants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fants' → logprob: -0.07889264822006226
    2. 'fant' → logprob: -2.578892707824707
    3. 'children' → logprob: -13.578892707824707
    4. 'f' → logprob: -14.203892707824707
    5. 'fans' → logprob: -14.703892707824707
    6. '_children' → logprob: -15.953892707824707
    7. 'fan' → logprob: -16.07889175415039
    8. '_f' → logprob: -16.20389175415039
    9. ' enfants' → logprob: -16.82889175415039
    10. '_' → logprob: -17.70389175415039

Token 955: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07454495131969452
    2. ':
' → logprob: -3.449544906616211
    3. '       ' → logprob: -3.824544906616211
    4. ',' → logprob: -4.449544906616211
    5. ' or' → logprob: -5.324544906616211
    6. ' and' → logprob: -7.074544906616211
    7. '   ' → logprob: -7.574544906616211
    8. ' :' → logprob: -8.949544906616211
    9. '           ' → logprob: -9.824544906616211
    10. ' if' → logprob: -10.074544906616211

Token 956: ' alors' (ID: 17971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09933007508516312
    2. ' if' → logprob: -2.599330186843872
    3. '       ' → logprob: -3.974330186843872
    4. 'prime' → logprob: -7.474329948425293
    5. 'return' → logprob: -7.849329948425293
    6. '           ' → logprob: -8.474329948425293
    7. '#' → logprob: -9.099329948425293
    8. '   ' → logprob: -10.474329948425293
    9. 'prem' → logprob: -10.724329948425293
    10. 'is' → logprob: -10.974329948425293

Token 957: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020785128697752953
    2. '       ' → logprob: -4.270785331726074
    3. ' if' → logprob: -5.645785331726074
    4. '           ' → logprob: -6.145785331726074
    5. 'prime' → logprob: -8.020785331726074
    6. 'return' → logprob: -8.145785331726074
    7. '#' → logprob: -8.645785331726074
    8. '   ' → logprob: -10.020785331726074
    9. 'is' → logprob: -10.520785331726074
    10. 'pr' → logprob: -11.270785331726074

Token 958: ' route' (ID: 9656)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09475046396255493
    2. ' if' → logprob: -3.46975040435791
    3. 'prime' → logprob: -3.59475040435791
    4. '   ' → logprob: -4.84475040435791
    5. 'best' → logprob: -4.96975040435791
    6. '       ' → logprob: -5.21975040435791
    7. 'max' → logprob: -5.34475040435791
    8. '#' → logprob: -6.09475040435791
    9. 'return' → logprob: -7.09475040435791
    10. 'pr' → logprob: -7.34475040435791

Token 959: ' se' (ID: 458)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17601919174194336
    2. '=' → logprob: -2.3010191917419434
    3. '       ' → logprob: -3.1760191917419434
    4. 'est' → logprob: -4.676019191741943
    5. ' est' → logprob: -5.301019191741943
    6. 's' → logprob: -6.926019191741943
    7. '=[]' → logprob: -7.176019191741943
    8. 'return' → logprob: -7.926019191741943
    9. '   ' → logprob: -7.926019191741943
    10. ' s' → logprob: -8.051019668579102

Token 960: ' termine' (ID: 76900)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.5562707185745239
    2. 'rés' → logprob: -1.681270718574524
    3. 'limit' → logprob: -2.5562705993652344
    4. 'lim' → logprob: -3.1812705993652344
    5. 't' → logprob: -3.4312705993652344
    6. 'ré' → logprob: -4.431270599365234
    7. 'arr' → logprob: -4.556270599365234
    8. 'compose' → logprob: -4.556270599365234
    9. 'stop' → logprob: -5.181270599365234
    10. '#' → logprob: -5.306270599365234

Token 961: ' ici' (ID: 27994)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006568653043359518
    2. ' if' → logprob: -5.631568431854248
    3. ',' → logprob: -6.256568431854248
    4. 'if' → logprob: -7.881568431854248
    5. ' (' → logprob: -8.506568908691406
    6. 'return' → logprob: -9.006568908691406
    7. '        
' → logprob: -9.381568908691406
    8. ':' → logprob: -9.631568908691406
    9. '
' → logprob: -10.256568908691406
    10. '           ' → logprob: -10.256568908691406

Token 962: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002787359117064625
    2. ',' → logprob: -8.87527847290039
    3. '
' → logprob: -9.25027847290039
    4. ' if' → logprob: -11.50027847290039
    5. '   ' → logprob: -11.62527847290039
    6. '           ' → logprob: -11.87527847290039
    7. '        
' → logprob: -12.12527847290039
    8. ':' → logprob: -12.75027847290039
    9. 'if' → logprob: -13.12527847290039
    10. ',
' → logprob: -13.50027847290039

Token 963: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.91732100979425e-05
    2. ',' → logprob: -11.000039100646973
    3. '   ' → logprob: -11.500039100646973
    4. '        
' → logprob: -12.250039100646973
    5. ':' → logprob: -12.875039100646973
    6. '
' → logprob: -13.250039100646973
    7. '```' → logprob: -13.750039100646973
    8. ' if' → logprob: -14.250039100646973
    9. '           ' → logprob: -14.375039100646973
    10. '<|end|>' → logprob: -15.250039100646973

Token 964: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02799391560256481
    2. '       ' → logprob: -3.77799391746521
    3. ' if' → logprob: -5.402993679046631
    4. 'prime' → logprob: -9.277994155883789
    5. 'best' → logprob: -9.777994155883789
    6. 'is' → logprob: -10.277994155883789
    7. 'max' → logprob: -10.652994155883789
    8. 'current' → logprob: -11.652994155883789
    9. '   ' → logprob: -12.027994155883789
    10. '#' (adapté à ' #') → logprob: -12.777994155883789

Token 965: ' Vale' (ID: 55242)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05400261655449867
    2. '       ' → logprob: -3.054002523422241
    3. ' if' → logprob: -5.30400276184082
    4. 'best' → logprob: -8.92900276184082
    5. 'is' → logprob: -9.30400276184082
    6. 'prime' → logprob: -9.30400276184082
    7. 'max' → logprob: -9.80400276184082
    8. 'current' → logprob: -10.92900276184082
    9. '#' → logprob: -11.42900276184082
    10. '   ' → logprob: -11.92900276184082

Token 966: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -5.466968650580384e-05
    2. 'urs' → logprob: -10.000054359436035
    3. '   ' → logprob: -12.625054359436035
    4. 'eur' → logprob: -12.875054359436035
    5. 'urn' → logprob: -13.875054359436035
    6. 'u' → logprob: -14.125054359436035
    7. 'urse' → logprob: -14.750054359436035
    8. '       ' → logprob: -14.875054359436035
    9. 'ure' → logprob: -15.500054359436035
    10. 'r' → logprob: -16.00005531311035

Token 967: ' dépend' (ID: 68660)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11403121054172516
    2. '=' → logprob: -2.2390313148498535
    3. '=(' → logprob: -7.2390313148498535
    4. 'if' → logprob: -8.739030838012695
    5. ' if' → logprob: -8.989030838012695
    6. '   ' → logprob: -10.114030838012695
    7. 'return' → logprob: -10.739030838012695
    8. 'max' → logprob: -10.864030838012695
    9. ':' → logprob: -11.114030838012695
    10. '_' → logprob: -11.364030838012695

Token 968: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4806869328022003
    2. '       ' → logprob: -1.480686902999878
    3. ' de' → logprob: -2.855686902999878
    4. ' if' → logprob: -3.480686902999878
    5. '    ' → logprob: -3.980686902999878
    6. ' du' → logprob: -4.605687141418457
    7. '           ' → logprob: -5.230687141418457
    8. ' des' → logprob: -5.230687141418457
    9. ' si' → logprob: -5.980687141418457
    10. 'if' → logprob: -6.105687141418457

Token 969: ' cave' (ID: 44365)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.22243884205818176
    2. ' is' → logprob: -1.8474388122558594
    3. '1' → logprob: -3.3474388122558594
    4. ' True' → logprob: -6.472438812255859
    5. 'True' → logprob: -6.472438812255859
    6. ' ' → logprob: -7.097438812255859
    7. 'int' → logprob: -7.722438812255859
    8. ' (' → logprob: -7.722438812255859
    9. ' int' → logprob: -7.722438812255859
    10. '   ' → logprob: -8.22243881225586

Token 970: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.003979854751378298
    2. '_prime' → logprob: -5.753979682922363
    3. '_' → logprob: -8.128979682922363
    4. 'num' → logprob: -8.503979682922363
    5. 'prime' → logprob: -9.628979682922363
    6. '_pr' → logprob: -9.753979682922363
    7. '   ' → logprob: -9.878979682922363
    8. ' =' → logprob: -10.503979682922363
    9. 'if' → logprob: -11.003979682922363
    10. '_val' → logprob: -11.253979682922363

Token 971: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013905855303164572
    2. '
' → logprob: -9.250139236450195
    3. '   ' → logprob: -11.125139236450195
    4. '        
' → logprob: -11.750139236450195
    5. ' if' → logprob: -11.875139236450195
    6. ',' → logprob: -12.250139236450195
    7. ':' → logprob: -12.375139236450195
    8. 'if' → logprob: -13.500139236450195
    9. '           ' → logprob: -14.250139236450195
    10. '    
' → logprob: -14.875139236450195

Token 972: 'prime' (ID: 46441)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.50910484790802
    2. '1' → logprob: -1.88410484790802
    3. ' is' → logprob: -1.88410484790802
    4. ')' → logprob: -2.0091047286987305
    5. ' True' → logprob: -3.0091047286987305
    6. ' (' → logprob: -3.0091047286987305
    7. '0' → logprob: -3.1341047286987305
    8. 'if' → logprob: -3.2591047286987305
    9. '   ' → logprob: -3.5091047286987305
    10. 'True' → logprob: -3.7591047286987305

Token 973: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24264992773532867
    2. ' if' → logprob: -2.242650032043457
    3. 'if' → logprob: -3.742650032043457
    4. '   ' → logprob: -3.742650032043457
    5. ',' → logprob: -3.867650032043457
    6. ')
' → logprob: -4.367650032043457
    7. ' =' → logprob: -4.867650032043457
    8. '       ' → logprob: -5.492650032043457
    9. '),' → logprob: -5.867650032043457
    10. ' and' → logprob: -6.242650032043457

Token 974: ' pas' (ID: 2173)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5839776992797852
    2. 'not' → logprob: -0.8339776992797852
    3. 'False' → logprob: -5.083977699279785
    4. 'pas' → logprob: -7.083977699279785
    5. 'non' → logprob: -8.083977699279785
    6. ' False' → logprob: -8.208977699279785
    7. ' pas' → logprob: -8.583977699279785
    8. ' non' → logprob: -9.208977699279785
    9. 'True' → logprob: -10.583977699279785
    10. '	not' → logprob: -10.708977699279785

Token 975: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2617429494857788
    2. '):
' → logprob: -2.2617430686950684
    3. ')
' → logprob: -2.3867430686950684
    4. '):' → logprob: -3.6367430686950684
    5. '       ' → logprob: -5.011743068695068
    6. ' )' → logprob: -8.01174259185791
    7. '   ' → logprob: -8.13674259185791
    8. ':' → logprob: -9.13674259185791
    9. '):

' → logprob: -9.13674259185791
    10. ' )
' → logprob: -9.51174259185791

Token 976: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015746140852570534
    2. '   ' → logprob: -7.001574516296387
    3. '
' → logprob: -7.501574516296387
    4. '        
' → logprob: -9.751574516296387
    5. '    
' → logprob: -10.501574516296387
    6. ' if' → logprob: -11.876574516296387
    7. '```' → logprob: -12.126574516296387
    8. '  
' → logprob: -12.876574516296387
    9. 'if' → logprob: -13.126574516296387
    10. '           ' → logprob: -13.251574516296387

Token 977: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008143364451825619
    2. '       ' → logprob: -5.508143424987793
    3. ' if' → logprob: -5.508143424987793
    4. '   ' → logprob: -13.508143424987793
    5. '```' → logprob: -14.633143424987793
    6. 'prime' → logprob: -15.008143424987793
    7. 'result' → logprob: -15.383143424987793
    8. 'If' → logprob: -16.258142471313477
    9. 'is' → logprob: -16.633142471313477
    10. 'current' → logprob: -17.008142471313477

Token 978: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.47745171189308167
    2. ' not' → logprob: -1.1024516820907593
    3. 'c' → logprob: -3.727451801300049
    4. 'is' → logprob: -4.227451801300049
    5. ' is' → logprob: -5.477451801300049
    6. 'len' → logprob: -5.977451801300049
    7. ' cave' → logprob: -6.852451801300049
    8. ' len' → logprob: -7.227451801300049
    9. ' c' → logprob: -8.85245132446289
    10. '(not' → logprob: -9.47745132446289

Token 979: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.003178901970386505
    2. ' children' → logprob: -5.75317907333374
    3. '(children' → logprob: -13.878178596496582
    4. '	children' → logprob: -16.5031795501709
    5. 'is' → logprob: -16.6281795501709
    6. 'child' → logprob: -17.3781795501709
    7. 'get' → logprob: -17.6281795501709
    8. '.children' → logprob: -19.0031795501709
    9. 'Children' → logprob: -19.1281795501709
    10. '_children' → logprob: -19.6281795501709

Token 980: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003413031517993659
    2. ':
' → logprob: -8.000341415405273
    3. ':return' → logprob: -12.375341415405273
    4. '):' → logprob: -14.000341415405273
    5. ' :' → logprob: -14.625341415405273
    6. ':
' → logprob: -15.750341415405273
    7. '=' → logprob: -16.125341415405273
    8. ':

' → logprob: -17.375341415405273
    9. '   ' → logprob: -17.375341415405273
    10. '.' → logprob: -18.000341415405273

Token 981: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15674301981925964
    2. ':' → logprob: -2.531743049621582
    3. ':
' → logprob: -2.781743049621582
    4. '
' → logprob: -5.906743049621582
    5. '           ' → logprob: -8.156743049621582
    6. '   ' → logprob: -8.406743049621582
    7. ',' → logprob: -8.906743049621582
    8. ':return' → logprob: -9.656743049621582
    9. '):
' → logprob: -10.281743049621582
    10. '        
' → logprob: -10.406743049621582

Token 982: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07451320439577103
    2. 'return' → logprob: -3.3245131969451904
    3. '       ' → logprob: -3.4495131969451904
    4. ' if' → logprob: -5.6995134353637695
    5. 'prime' → logprob: -7.6995134353637695
    6. '           ' → logprob: -8.82451343536377
    7. 'is' → logprob: -10.32451343536377
    8. ' return' → logprob: -10.82451343536377
    9. 'result' → logprob: -11.19951343536377
    10. '   ' → logprob: -11.32451343536377

Token 983: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1002630665898323
    2. ' is' → logprob: -2.3502631187438965
    3. '   ' → logprob: -10.475262641906738
    4. 'not' → logprob: -10.975262641906738
    5. ' not' → logprob: -12.600262641906738
    6. ' ' → logprob: -13.100262641906738
    7. '	is' → logprob: -13.350262641906738
    8. '(is' → logprob: -13.475262641906738
    9. '    ' → logprob: -14.350262641906738
    10. '           ' → logprob: -14.600262641906738

Token 984: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.1517960956552997e-05
    2. 'prime' → logprob: -11.500011444091797
    3. '_' → logprob: -14.000011444091797
    4. '[_' → logprob: -15.250011444091797
    5. ' _' → logprob: -16.250011444091797
    6. '```' → logprob: -16.750011444091797
    7. '
' → logprob: -17.000011444091797
    8. '[' → logprob: -17.000011444091797
    9. ' prime' → logprob: -17.500011444091797
    10. ''_' → logprob: -18.250011444091797

Token 985: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -4.0484450437361374e-05
    2. '[' → logprob: -10.125040054321289
    3. 'c' → logprob: -15.500040054321289
    4. ' [' → logprob: -15.875040054321289
    5. '[
' → logprob: -16.50004005432129
    6. '   ' → logprob: -17.50004005432129
    7. '(c' → logprob: -18.87504005432129
    8. '[int' → logprob: -19.12504005432129
    9. '```' → logprob: -19.37504005432129
    10. '[ch' → logprob: -19.50004005432129

Token 986: 'ave' (ID: 577)
  Prédit: 'ave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ave' → logprob: -0.0029718761797994375
    2. 'c' → logprob: -5.877971649169922
    3. '[c' → logprob: -9.502971649169922
    4. ' cave' → logprob: -10.627971649169922
    5. '[' → logprob: -11.002971649169922
    6. '   ' → logprob: -11.627971649169922
    7. '(c' → logprob: -11.752971649169922
    8. '{' → logprob: -12.252971649169922
    9. 'a' → logprob: -12.377971649169922
    10. '#' → logprob: -12.502971649169922

Token 987: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -4.370294846012257e-05
    2. 'num' → logprob: -10.125043869018555
    3. 'Num' → logprob: -13.375043869018555
    4. 'um' → logprob: -14.500043869018555
    5. '[' → logprob: -14.875043869018555
    6. '_' → logprob: -15.125043869018555
    7. '[num' → logprob: -15.250043869018555
    8. '_NUM' → logprob: -16.125043869018555
    9. '```' → logprob: -16.375043869018555
    10. 'm' → logprob: -16.750043869018555

Token 988: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.584134042263031
    2. ']:' → logprob: -0.834134042263031
    3. ']' → logprob: -4.959134101867676
    4. ' ]' → logprob: -7.584134101867676
    5. ']:
' → logprob: -7.959134101867676
    6. ']==' → logprob: -8.334134101867676
    7. ']:

' → logprob: -10.459134101867676
    8. '   ' → logprob: -12.584134101867676
    9. '       ' → logprob: -12.834134101867676
    10. ']>' → logprob: -12.959134101867676

Token 989: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008714557625353336
    2. 'return' → logprob: -5.00871467590332
    3. ' return' → logprob: -6.75871467590332
    4. '           ' → logprob: -7.13371467590332
    5. '       ' → logprob: -11.25871467590332
    6. ':return' → logprob: -11.25871467590332
    7. '
' → logprob: -12.50871467590332
    8. ',' → logprob: -13.13371467590332
    9. ':' → logprob: -13.63371467590332
    10. '	return' → logprob: -14.13371467590332

Token 990: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00010151672904612496
    2. ' return' → logprob: -9.750101089477539
    3. '               ' → logprob: -10.500101089477539
    4. '           ' → logprob: -11.125101089477539
    5. '   ' → logprob: -14.625101089477539
    6. '                   ' → logprob: -15.500101089477539
    7. '	return' → logprob: -16.37510108947754
    8. '{return' → logprob: -17.12510108947754
    9. ':return' → logprob: -17.50010108947754
    10. '       ' → logprob: -17.75010108947754

Token 991: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0802738870552275e-05
    2. '1' → logprob: -11.50001049041748
    3. ' (' → logprob: -14.25001049041748
    4. '(
' → logprob: -20.250011444091797
    5. ' ' → logprob: -20.500011444091797
    6. '   ' → logprob: -20.875011444091797
    7. '(True' → logprob: -23.250011444091797
    8. '[' → logprob: -23.875011444091797
    9. '((' → logprob: -24.750011444091797
    10. '{' → logprob: -24.875011444091797

Token 992: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '(' → logprob: -15.87500286102295
    4. '   ' → logprob: -17.875001907348633
    5. '
' → logprob: -20.625001907348633
    6. '１' → logprob: -21.000001907348633
    7. '۱' → logprob: -21.500001907348633
    8. '  ' → logprob: -22.250001907348633
    9. '```' → logprob: -22.250001907348633
    10. ' (' → logprob: -22.625001907348633

Token 993: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ',
' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -15.125001907348633
    4. ' ,' → logprob: -15.375001907348633
    5. '‌,' → logprob: -17.250001907348633
    6. ',c' → logprob: -17.625001907348633
    7. ',{
' → logprob: -18.500001907348633
    8. ',),' → logprob: -18.750001907348633
    9. '1' → logprob: -18.750001907348633
    10. ',

' → logprob: -18.875001907348633

Token 994: ' cave' (ID: 44365)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015053401002660394
    2. ' cave' → logprob: -6.501505374908447
    3. '   ' → logprob: -13.251504898071289
    4. ' c' → logprob: -14.376504898071289
    5. '	c' → logprob: -15.126504898071289
    6. ')c' → logprob: -15.876504898071289
    7. ' caves' → logprob: -16.37650489807129
    8. '```' → logprob: -17.00150489807129
    9. 'caf' → logprob: -17.37650489807129
    10. 'care' → logprob: -17.50150489807129

Token 995: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -5.080963092041202e-06
    2. 'num' → logprob: -12.250004768371582
    3. '_' → logprob: -16.6250057220459
    4. 'Num' → logprob: -16.7500057220459
    5. 'e' → logprob: -16.8750057220459
    6. '_NUM' → logprob: -17.3750057220459
    7. '[' → logprob: -18.2500057220459
    8. '```' → logprob: -18.6250057220459
    9. 'c' → logprob: -18.7500057220459
    10. '[num' → logprob: -18.8750057220459

Token 996: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132667541503906
    2. ')
' → logprob: -1.3132667541503906
    3. ')
' → logprob: -12.93826675415039
    4. '   ' → logprob: -13.68826675415039
    5. ')

' → logprob: -14.81326675415039
    6. '       ' → logprob: -14.81326675415039
    7. ' )
' → logprob: -14.93826675415039
    8. ' )' → logprob: -15.06326675415039
    9. '           ' → logprob: -15.93826675415039
    10. '),' → logprob: -18.06326675415039

Token 997: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013929695705883205
    2. 'else' → logprob: -9.500139236450195
    3. '       ' → logprob: -10.250139236450195
    4. 'return' → logprob: -11.500139236450195
    5. '            
' → logprob: -12.125139236450195
    6. '
' → logprob: -12.375139236450195
    7. '               ' → logprob: -13.250139236450195
    8. '          ' → logprob: -13.250139236450195
    9. '	       ' → logprob: -13.500139236450195
    10. '		' → logprob: -13.625139236450195

Token 998: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45918014645576477
    2. 'else' (adapté à ' else') → logprob: -1.0841801166534424
    3. '           ' → logprob: -3.9591801166534424
    4. ' else' → logprob: -5.4591803550720215
    5. '
' → logprob: -5.7091803550720215
    6. 'return' → logprob: -5.7091803550720215
    7. ' return' → logprob: -11.334179878234863
    8. '	       ' → logprob: -11.584179878234863
    9. '   ' → logprob: -11.959179878234863
    10. '        
' → logprob: -12.084179878234863

Token 999: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39805150032043457
    2. ':
' → logprob: -2.2730515003204346
    3. '       ' → logprob: -2.8980515003204346
    4. '(' → logprob: -3.5230515003204346
    5. ' return' → logprob: -3.5230515003204346
    6. ':' → logprob: -3.7730515003204346
    7. '               ' → logprob: -3.8980515003204346
    8. ' (' → logprob: -3.8980515003204346
    9. '	       ' → logprob: -4.1480512619018555
    10. 'return' → logprob: -4.6480512619018555

Token 1000: '               ' (ID: 506)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0849219262599945
    2. '           ' → logprob: -3.2099218368530273
    3. ' (' → logprob: -3.5849218368530273
    4. '               ' → logprob: -4.834921836853027
    5. 'return' → logprob: -6.084921836853027
    6. '       ' → logprob: -6.209921836853027
    7. ' return' → logprob: -6.959921836853027
    8. '0' → logprob: -9.334921836853027
    9. '   ' → logprob: -10.834921836853027
    10. '	       ' → logprob: -11.584921836853027

Token 1001: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03001265972852707
    2. ' return' → logprob: -3.530012607574463
    3. '(' → logprob: -8.280013084411621
    4. '               ' → logprob: -12.530013084411621
    5. '0' → logprob: -12.905013084411621
    6. ' (' → logprob: -13.530013084411621
    7. '
' → logprob: -14.155013084411621
    8. '           ' → logprob: -15.780013084411621
    9. '	return' → logprob: -16.280012130737305
    10. ' ' → logprob: -16.405012130737305

Token 1002: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015023599844425917
    2. ' (' → logprob: -6.501502513885498
    3. '0' → logprob: -17.501502990722656
    4. '(
' → logprob: -19.126502990722656
    5. ' ' → logprob: -21.876502990722656
    6. '（' → logprob: -23.126502990722656
    7. '(int' → logprob: -23.626502990722656
    8. '((' → logprob: -24.251502990722656
    9. '
' → logprob: -24.501502990722656
    10. '   ' → logprob: -24.501502990722656

Token 1003: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12693524360656738
    2. '(' → logprob: -2.1269352436065674
    3. ' ' → logprob: -12.251935005187988
    4. ' (' → logprob: -13.001935005187988
    5. '(
' → logprob: -17.001935958862305
    6. ')' → logprob: -17.001935958862305
    7. '   ' → logprob: -17.501935958862305
    8. '۰' → logprob: -18.751935958862305
    9. '00' → logprob: -19.751935958862305
    10. '[' → logprob: -20.376935958862305

Token 1004: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -13.625001907348633
    3. ' ,' → logprob: -14.250001907348633
    4. ',
' → logprob: -14.875001907348633
    5. '
' → logprob: -17.875001907348633
    6. '<|end|>' → logprob: -19.625001907348633
    7. '‌,' → logprob: -20.000001907348633
    8. '،' → logprob: -20.250001907348633
    9. ',\
' → logprob: -20.750001907348633
    10. ')' → logprob: -21.000001907348633

Token 1005: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. 'c' → logprob: -16.001171112060547
    4. ' ' → logprob: -18.751171112060547
    5. ')' → logprob: -20.001171112060547
    6. '000' → logprob: -20.001171112060547
    7. '00' → logprob: -20.126171112060547
    8. '۰' → logprob: -20.563671112060547
    9. ' c' → logprob: -20.626171112060547
    10. '  ' → logprob: -20.626171112060547

Token 1006: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'c' → logprob: -17.750001907348633
    4. '۰' → logprob: -19.937501907348633
    5. '00' → logprob: -20.125001907348633
    6. '(' → logprob: -20.312501907348633
    7. '000' → logprob: -20.312501907348633
    8. '```' → logprob: -20.375001907348633
    9. ')' → logprob: -20.750001907348633
    10. '
' → logprob: -20.937501907348633

Token 1007: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002568283583968878
    2. '       ' → logprob: -6.002568244934082
    3. ')
' → logprob: -9.377568244934082
    4. '
' → logprob: -13.252568244934082
    5. ')return' → logprob: -13.377568244934082
    6. ' )' → logprob: -13.502568244934082
    7. '   ' → logprob: -13.627568244934082
    8. '')' → logprob: -14.752568244934082
    9. '")' → logprob: -15.002568244934082
    10. '           ' → logprob: -15.252568244934082

Token 1008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05192070081830025
    2. '
' → logprob: -3.1769206523895264
    3. '        
' → logprob: -5.3019208908081055
    4. '    
' → logprob: -5.9269208908081055
    5. '   ' → logprob: -6.9269208908081055
    6. '  
' → logprob: -9.551920890808105
    7. '<|end|>' → logprob: -10.301920890808105
    8. '```' → logprob: -10.926920890808105
    9. '       
' → logprob: -11.301920890808105
    10. '		
' → logprob: -11.551920890808105

Token 1009: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.15213149785995483
    2. '       ' → logprob: -2.1521315574645996
    3. 'max' → logprob: -3.9021315574645996
    4. 'res' → logprob: -6.0271315574646
    5. 'result' → logprob: -6.7771315574646
    6. 'results' → logprob: -7.1521315574646
    7. ' best' → logprob: -8.152131080627441
    8. 'current' → logprob: -10.902131080627441
    9. '   ' → logprob: -11.527131080627441
    10. '
' → logprob: -11.777131080627441

Token 1010: ' Recherche' (ID: 114815)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.019887670874595642
    2. 'res' → logprob: -4.519887447357178
    3. 'max' → logprob: -5.269887447357178
    4. 'results' → logprob: -5.769887447357178
    5. ' best' → logprob: -7.644887447357178
    6. '#' → logprob: -10.769887924194336
    7. 'result' → logprob: -10.894887924194336
    8. '   ' → logprob: -12.019887924194336
    9. ' res' → logprob: -12.394887924194336
    10. 'me' → logprob: -13.269887924194336

Token 1011: ' réc' (ID: 36254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3285066783428192
    2. 'max' → logprob: -2.5785067081451416
    3. ' max' → logprob: -2.5785067081451416
    4. ' best' → logprob: -3.2035067081451416
    5. 'best' → logprob: -3.2035067081451416
    6. 'result' → logprob: -4.2035064697265625
    7. ' result' → logprob: -5.0785064697265625
    8. '_best' → logprob: -5.7035064697265625
    9. ' (' → logprob: -5.8285064697265625
    10. '(max' → logprob: -5.8285064697265625

Token 1012: 'ursive' (ID: 30543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5042098760604858
    2. 'urs' → logprob: -1.5042098760604858
    3. 'ursive' → logprob: -2.5042099952697754
    4. 'ur' → logprob: -3.1292099952697754
    5. 'ursion' → logprob: -3.7542099952697754
    6. '   ' → logprob: -4.254209995269775
    7. 'urrent' → logprob: -6.629209995269775
    8. 'up' → logprob: -6.629209995269775
    9. 'ursively' → logprob: -6.754209995269775
    10. 'def' → logprob: -7.004209995269775

Token 1013: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026169193908572197
    2. 'result' → logprob: -4.151169300079346
    3. 'max' → logprob: -5.151169300079346
    4. 'best' → logprob: -6.776169300079346
    5. ' result' → logprob: -7.151169300079346
    6. ' max' → logprob: -7.401169300079346
    7. ':' → logprob: -7.651169300079346
    8. 'results' → logprob: -7.776169300079346
    9. '   ' → logprob: -8.651168823242188
    10. ',' → logprob: -8.901168823242188

Token 1014: ' enfant' (ID: 52595)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.12530548870563507
    2. 'child' → logprob: -2.375305414199829
    3. ' children' → logprob: -4.000305652618408
    4. ' child' → logprob: -5.875305652618408
    5. ' enfants' → logprob: -6.500305652618408
    6. 'les' → logprob: -7.750305652618408
    7. 'en' → logprob: -7.875305652618408
    8. '       ' → logprob: -8.25030517578125
    9. '   ' → logprob: -8.37530517578125
    10. ' les' → logprob: -8.50030517578125

Token 1015: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028596051037311554
    2. 'max' → logprob: -4.528595924377441
    3. 's' → logprob: -4.778595924377441
    4. '
' → logprob: -6.278595924377441
    5. ' max' → logprob: -6.653595924377441
    6. ',' → logprob: -6.903595924377441
    7. ':' → logprob: -6.903595924377441
    8. '   ' → logprob: -7.153595924377441
    9. '(max' → logprob: -7.653595924377441
    10. 'best' → logprob: -7.653595924377441

Token 1016: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06708595901727676
    2. 's' → logprob: -3.0670859813690186
    3. 'max' → logprob: -5.1920857429504395
    4. '   ' → logprob: -6.0670857429504395
    5. ',' → logprob: -6.0670857429504395
    6. ' max' → logprob: -6.3170857429504395
    7. ':' → logprob: -6.8170857429504395
    8. 'result' → logprob: -7.0670857429504395
    9. '(s' → logprob: -7.3170857429504395
    10. '
' → logprob: -7.4420857429504395

Token 1017: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.18272517621517181
    2. '       ' → logprob: -1.932725191116333
    3. 'max' → logprob: -4.682724952697754
    4. 'results' → logprob: -4.807724952697754
    5. ' best' → logprob: -6.307724952697754
    6. 'res' → logprob: -6.307724952697754
    7. 'result' → logprob: -6.807724952697754
    8. '   ' → logprob: -10.557724952697754
    9. ' max' → logprob: -10.807724952697754
    10. ' results' → logprob: -11.182724952697754

Token 1018: ' =' (ID: 314)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.5203216075897217
    2. '_nb' → logprob: -1.6453216075897217
    3. ' =' → logprob: -2.3953216075897217
    4. '_result' → logprob: -2.7703216075897217
    5. '_len' → logprob: -4.020321846008301
    6. '_length' → logprob: -4.395321846008301
    7. '_num' → logprob: -4.895321846008301
    8. '_res' → logprob: -5.645321846008301
    9. '_path' → logprob: -5.645321846008301
    10. '_cnt' → logprob: -5.770321846008301

Token 1019: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005985465249978006
    2. ' (' → logprob: -7.500598430633545
    3. '(-' → logprob: -10.000598907470703
    4. '0' → logprob: -15.625598907470703
    5. '   ' → logprob: -16.750598907470703
    6. ' ' → logprob: -17.375598907470703
    7. '(None' → logprob: -17.875598907470703
    8. ' (-' → logprob: -18.125598907470703
    9. 'None' → logprob: -18.250598907470703
    10. '[' → logprob: -20.750598907470703

Token 1020: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038455575122497976
    2. '-' → logprob: -7.875384330749512
    3. '(' → logprob: -12.625384330749512
    4. ' ' → logprob: -14.625384330749512
    5. ' -' → logprob: -15.125384330749512
    6. '(-' → logprob: -16.250385284423828
    7. ')' → logprob: -16.750385284423828
    8. '-(' → logprob: -16.750385284423828
    9. '۰' → logprob: -17.250385284423828
    10. '   ' → logprob: -17.750385284423828

Token 1021: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8802491215174086e-05
    2. ' ,' → logprob: -11.375028610229492
    3. '0' → logprob: -11.750028610229492
    4. ',
' → logprob: -11.875028610229492
    5. '(' → logprob: -14.375028610229492
    6. ')' → logprob: -14.375028610229492
    7. ',)' → logprob: -15.125028610229492
    8. '   ' → logprob: -15.375028610229492
    9. ',None' → logprob: -16.125028610229492
    10. '<|end|>' → logprob: -16.250028610229492

Token 1022: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005235887598246336
    2. ' ' → logprob: -5.25523567199707
    3. '-' → logprob: -14.63023567199707
    4. ' ' → logprob: -14.81773567199707
    5. ' -' → logprob: -15.06773567199707
    6. '   ' → logprob: -15.25523567199707
    7. ')' → logprob: -15.25523567199707
    8. '000' → logprob: -15.56773567199707
    9. '  ' → logprob: -15.69273567199707
    10. '۰' → logprob: -16.94273567199707

Token 1023: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. '-' → logprob: -15.750001907348633
    4. ')' → logprob: -16.312501907348633
    5. '۰' → logprob: -17.187501907348633
    6. '000' → logprob: -17.562501907348633
    7. '   ' → logprob: -17.937501907348633
    8. '00' → logprob: -18.187501907348633
    9. ' -' → logprob: -18.312501907348633
    10. '```' → logprob: -18.937501907348633

Token 1024: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20438215136528015
    2. ')
' → logprob: -1.7043821811676025
    3. '       ' → logprob: -5.829381942749023
    4. '   ' → logprob: -11.954381942749023
    5. '
' → logprob: -12.079381942749023
    6. ')
' → logprob: -12.579381942749023
    7. ' )' → logprob: -12.954381942749023
    8. ')

' → logprob: -13.579381942749023
    9. '):
' → logprob: -13.954381942749023
    10. ' )
' → logprob: -14.204381942749023

Token 1025: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02041388675570488
    2. '       ' → logprob: -4.020413875579834
    3. '        
' → logprob: -6.645413875579834
    4. '  
' → logprob: -8.020414352416992
    5. ' for' → logprob: -8.520414352416992
    6. 'for' → logprob: -9.020414352416992
    7. '<|end|>' → logprob: -9.270414352416992
    8. '
' → logprob: -9.645414352416992
    9. '    
' → logprob: -9.770414352416992
    10. ' 
' → logprob: -10.270414352416992

Token 1026: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08509843796491623
    2. 'for' → logprob: -2.7100985050201416
    3. '       ' → logprob: -4.4600982666015625
    4. '        
' → logprob: -6.4600982666015625
    5. ' for' → logprob: -6.4600982666015625
    6. ' 
' → logprob: -9.085098266601562
    7. '
' → logprob: -9.710098266601562
    8. '    
' → logprob: -9.710098266601562
    9. '  
' → logprob: -9.835098266601562
    10. '   ' → logprob: -10.210098266601562

Token 1027: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09148869663476944
    2. '       ' → logprob: -2.8414885997772217
    3. ' for' → logprob: -3.8414885997772217
    4. '
' → logprob: -5.216488838195801
    5. ')' → logprob: -6.591488838195801
    6. '        
' → logprob: -8.4664888381958
    7. '   ' → logprob: -8.7164888381958
    8. '0' → logprob: -8.7164888381958
    9. ')
' → logprob: -9.3414888381958
    10. '    
' → logprob: -10.2164888381958

Token 1028: 'max' (ID: 3228)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009823163272812963
    2. 'max' → logprob: -7.500982284545898
    3. ')' → logprob: -8.750982284545898
    4. '-' → logprob: -9.375982284545898
    5. ' ' → logprob: -9.625982284545898
    6. 'nb' → logprob: -10.000982284545898
    7. 'number' → logprob: -11.125982284545898
    8. 'num' → logprob: -11.375982284545898
    9. '   ' → logprob: -11.500982284545898
    10. ',' → logprob: -11.625982284545898

Token 1029: '_prime' (ID: 98616)
  Prédit: '_nb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nb' → logprob: -0.0011527208844199777
    2. ',' → logprob: -7.501152515411377
    3. '_pr' → logprob: -8.001152992248535
    4. '_nombre' → logprob: -9.376152992248535
    5. '_' → logprob: -10.126152992248535
    6. '_,' → logprob: -10.626152992248535
    7. ')' → logprob: -10.751152992248535
    8. '_n' → logprob: -10.876152992248535
    9. '_count' → logprob: -11.251152992248535
    10. '_prime' → logprob: -11.376152992248535

Token 1030: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.44196295738220215
    2. 's' → logprob: -1.3169629573822021
    3. ',' → logprob: -2.441962957382202
    4. 'count' → logprob: -7.566963195800781
    5. ')' → logprob: -8.191963195800781
    6. '_s' → logprob: -8.316963195800781
    7. '_nb' → logprob: -8.441963195800781
    8. '_length' → logprob: -8.566963195800781
    9. ' ,' → logprob: -9.316963195800781
    10. '_,' → logprob: -9.441963195800781

Token 1031: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.466968650580384e-05
    2. ' ,' → logprob: -10.250054359436035
    3. '   ' → logprob: -11.750054359436035
    4. ',
' → logprob: -12.625054359436035
    5. '       ' → logprob: -13.125054359436035
    6. ')' → logprob: -13.250054359436035
    7. '_,' → logprob: -13.625054359436035
    8. '),' → logprob: -14.375054359436035
    9. ',)' → logprob: -14.750054359436035
    10. '    ' → logprob: -15.000054359436035

Token 1032: ' last' (ID: 2174)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.22598440945148468
    2. 'last' → logprob: -1.8509844541549683
    3. ' max' → logprob: -3.3509843349456787
    4. ' last' → logprob: -5.100984573364258
    5. 'best' → logprob: -5.850984573364258
    6. '0' → logprob: -7.225984573364258
    7. ' best' → logprob: -8.600984573364258
    8. 'largest' → logprob: -9.475984573364258
    9. ' ' → logprob: -9.600984573364258
    10. '-' → logprob: -10.100984573364258

Token 1033: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0003957608714699745
    2. 'prime' → logprob: -8.250395774841309
    3. ')' → logprob: -9.500395774841309
    4. '_last' → logprob: -10.125395774841309
    5. '_' → logprob: -11.375395774841309
    6. ' prime' → logprob: -13.375395774841309
    7. '_peak' → logprob: -14.000395774841309
    8. '_p' → logprob: -14.000395774841309
    9. 'Prime' → logprob: -14.250395774841309
    10. '_pr' → logprob: -14.250395774841309

Token 1034: '_number' (ID: 11733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040018122643232346
    2. ',' → logprob: -4.290018081665039
    3. '_c' → logprob: -4.290018081665039
    4. ')
' → logprob: -5.665018081665039
    5. '_child' → logprob: -5.915018081665039
    6. '_node' → logprob: -6.290018081665039
    7. '_prime' → logprob: -7.165018081665039
    8. '_number' → logprob: -7.665018081665039
    9. ')c' → logprob: -7.790018081665039
    10. '_sur' → logprob: -7.915018081665039

Token 1035: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030316278338432312
    2. ')
' → logprob: -3.5303163528442383
    3. '       ' → logprob: -7.655316352844238
    4. '   ' → logprob: -9.905316352844238
    5. ')
' → logprob: -10.780316352844238
    6. ')

' → logprob: -11.280316352844238
    7. ' )' → logprob: -12.405316352844238
    8. ')`
' → logprob: -13.905316352844238
    9. ',' → logprob: -14.155316352844238
    10. ' )
' → logprob: -14.905316352844238

Token 1036: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06031974032521248
    2. '       ' → logprob: -3.060319662094116
    3. ' for' → logprob: -4.935319900512695
    4. 'for' → logprob: -6.435319900512695
    5. '   ' → logprob: -6.685319900512695
    6. '        
' → logprob: -7.060319900512695
    7. '<|end|>' → logprob: -8.310319900512695
    8. '	for' → logprob: -8.810319900512695
    9. '    
' → logprob: -8.935319900512695
    10. ' 
' → logprob: -9.435319900512695

Token 1037: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010563378222286701
    2. '       ' → logprob: -4.760563373565674
    3. ' for' → logprob: -6.260563373565674
    4. '   ' → logprob: -10.510563850402832
    5. '
' → logprob: -11.760563850402832
    6. '	for' → logprob: -13.635563850402832
    7. '        
' → logprob: -14.635563850402832
    8. '    
' → logprob: -17.135562896728516
    9. '```' → logprob: -17.260562896728516
    10. '           ' → logprob: -18.635562896728516

Token 1038: ' c' (ID: 274)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.00020461321400944144
    2. ' child' → logprob: -8.500205039978027
    3. 'c' → logprob: -14.000205039978027
    4. 'ch' → logprob: -15.250205039978027
    5. 'next' → logprob: -16.75020408630371
    6. '	child' → logprob: -18.87520408630371
    7. 'chi' → logprob: -20.62520408630371
    8. '(child' → logprob: -21.25020408630371
    9. 'chil' → logprob: -21.25020408630371
    10. 'children' → logprob: -21.62520408630371

Token 1039: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012645380571484566
    2. 'in' → logprob: -4.387645244598389
    3. '_' → logprob: -10.012645721435547
    4. 'h' → logprob: -10.262645721435547
    5. ' ' → logprob: -11.262645721435547
    6. '_in' → logprob: -11.387645721435547
    7. '	in' → logprob: -11.762645721435547
    8. 'i' → logprob: -11.887645721435547
    9. '_child' → logprob: -12.887645721435547
    10. 'c' → logprob: -13.137645721435547

Token 1040: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -1.0280383548888494e-06
    2. ' children' → logprob: -13.875000953674316
    3. 'child' → logprob: -18.250001907348633
    4. '(children' → logprob: -18.250001907348633
    5. '	children' → logprob: -18.750001907348633
    6. 'get' → logprob: -19.375001907348633
    7. '.children' → logprob: -19.500001907348633
    8. '_children' → logprob: -21.250001907348633
    9. '   ' → logprob: -21.375001907348633
    10. 'c' → logprob: -21.750001907348633

Token 1041: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25527921319007874
    2. ':' → logprob: -1.5052791833877563
    3. '):
' → logprob: -6.880279064178467
    4. '       ' → logprob: -6.880279064178467
    5. '           ' → logprob: -7.130279064178467
    6. ',' → logprob: -8.005279541015625
    7. ' :
' → logprob: -9.755279541015625
    8. ':
' → logprob: -10.880279541015625
    9. '():
' → logprob: -11.005279541015625
    10. '=' → logprob: -11.005279541015625

Token 1042: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002585978072602302
    2. 'result' → logprob: -9.250258445739746
    3. 'candidate' → logprob: -10.250258445739746
    4. 'next' → logprob: -11.250258445739746
    5. ' res' → logprob: -11.250258445739746
    6. ' result' → logprob: -11.375258445739746
    7. 'res' → logprob: -11.500258445739746
    8. ' candidate' → logprob: -11.500258445739746
    9. 'score' → logprob: -11.625258445739746
    10. 'child' → logprob: -11.875258445739746

Token 1043: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.14175742864608765
    2. ' res' → logprob: -2.8917574882507324
    3. 'result' → logprob: -3.3917574882507324
    4. 'child' → logprob: -3.7667574882507324
    5. '           ' → logprob: -4.766757488250732
    6. 'score' → logprob: -5.641757488250732
    7. 'candidate' → logprob: -6.141757488250732
    8. 'cand' → logprob: -6.391757488250732
    9. 'path' → logprob: -6.891757488250732
    10. 'next' → logprob: -7.141757488250732

Token 1044: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022595763206482
    2. ' =' → logprob: -1.9102259874343872
    3. '_=' → logprob: -13.660225868225098
    4. '=res' → logprob: -15.035225868225098
    5. '=
' → logprob: -16.035226821899414
    6. '_' → logprob: -16.410226821899414
    7. '=

' → logprob: -17.160226821899414
    8. '=c' → logprob: -17.285226821899414
    9. '=_' → logprob: -18.035226821899414
    10. ',' → logprob: -18.035226821899414

Token 1045: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.018150994554162025
    2. ' dfs' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.39315128326416
    4. 'df' → logprob: -14.89315128326416
    5. 'd' → logprob: -16.268150329589844
    6. '
' → logprob: -16.893150329589844
    7. ' ' → logprob: -17.893150329589844
    8. 'DFS' → logprob: -18.268150329589844
    9. '	d' → logprob: -18.643150329589844
    10. 'ds' → logprob: -18.768150329589844

Token 1046: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0011718906462192535
    2. '(' → logprob: -6.751172065734863
    3. '(
' → logprob: -13.376172065734863
    4. 'c' → logprob: -15.876172065734863
    5. ' (' → logprob: -17.251171112060547
    6. ')c' → logprob: -18.001171112060547
    7. ')' → logprob: -18.126171112060547
    8. '©' → logprob: -18.376171112060547
    9. '((' → logprob: -19.376171112060547
    10. '(
' → logprob: -19.501171112060547

Token 1047: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25204676389694214
    2. ')' → logprob: -1.502046823501587
    3. ')
' → logprob: -9.627046585083008
    4. '           ' → logprob: -10.252046585083008
    5. ' )
' → logprob: -11.752046585083008
    6. '       ' → logprob: -12.377046585083008
    7. ' )' → logprob: -13.127046585083008
    8. ')

' → logprob: -13.877046585083008
    9. '):
' → logprob: -15.252046585083008
    10. '   ' → logprob: -15.377046585083008

Token 1048: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002194398082792759
    2. '<|end|>' → logprob: -7.002194404602051
    3. '	       ' → logprob: -8.12719440460205
    4. ' if' → logprob: -8.37719440460205
    5. '
' → logprob: -8.50219440460205
    6. '		' → logprob: -8.75219440460205
    7. '<|end|>' → logprob: -9.25219440460205
    8. '[' → logprob: -9.50219440460205
    9. '            
' → logprob: -10.12719440460205
    10. '```' → logprob: -10.37719440460205

Token 1049: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18145306408405304
    2. '           ' → logprob: -2.431452989578247
    3. ' if' → logprob: -2.556452989578247
    4. '       ' → logprob: -8.306452751159668
    5. '
' → logprob: -8.931452751159668
    6. '#' (adapté à ' #') → logprob: -10.306452751159668
    7. '```' → logprob: -10.681452751159668
    8. 'best' → logprob: -12.556452751159668
    9. 'for' → logprob: -13.056452751159668
    10. '               ' → logprob: -13.181452751159668

Token 1050: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01575806923210621
    2. '           ' → logprob: -4.765758037567139
    3. '       ' → logprob: -5.140758037567139
    4. ' if' → logprob: -6.765758037567139
    5. 'count' → logprob: -9.390758514404297
    6. '```' → logprob: -11.265758514404297
    7. '#' → logprob: -11.515758514404297
    8. 'for' → logprob: -13.890758514404297
    9. '   ' → logprob: -14.140758514404297
    10. 'max' → logprob: -14.265758514404297

Token 1051: ' veut' (ID: 41653)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11940609663724899
    2. '           ' → logprob: -2.86940598487854
    3. ' if' → logprob: -3.49440598487854
    4. '#' → logprob: -4.869406223297119
    5. 'count' → logprob: -5.744406223297119
    6. '       ' → logprob: -5.744406223297119
    7. '=' → logprob: -6.244406223297119
    8. 'f' → logprob: -6.244406223297119
    9. 'n' → logprob: -6.619406223297119
    10. 'nb' → logprob: -6.744406223297119

Token 1052: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8073471188545227
    2. '(res' → logprob: -1.057347059249878
    3. ' res' → logprob: -1.807347059249878
    4. 'if' → logprob: -3.932347059249878
    5. ' (' → logprob: -4.557347297668457
    6. 'max' → logprob: -5.682347297668457
    7. '(
' → logprob: -5.807347297668457
    8. '(c' → logprob: -6.557347297668457
    9. '           ' → logprob: -6.682347297668457
    10. '(max' → logprob: -7.307347297668457

Token 1053: ' meilleure' (ID: 52387)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0899074450135231
    2. 'res' → logprob: -2.58990740776062
    3. ' max' → logprob: -5.589907646179199
    4. '(max' → logprob: -5.839907646179199
    5. '(res' → logprob: -6.214907646179199
    6. 'if' → logprob: -7.339907646179199
    7. 'best' → logprob: -7.339907646179199
    8. ' res' → logprob: -7.964907646179199
    9. 'me' → logprob: -8.2149076461792
    10. '   ' → logprob: -9.2149076461792

Token 1054: ' sous' (ID: 14487)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5294456481933594
    2. ' if' → logprob: -1.1544456481933594
    3. '           ' → logprob: -2.4044456481933594
    4. 'token' → logprob: -5.904445648193359
    5. '       ' → logprob: -7.154445648193359
    6. '_token' → logprob: -7.529445648193359
    7. 'count' → logprob: -8.15444564819336
    8. '
' → logprob: -8.77944564819336
    9. ' =' → logprob: -9.52944564819336
    10. ')' → logprob: -9.52944564819336

Token 1055: '-route' (ID: 184270)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0072523355484009
    2. 'if' → logprob: -1.7572523355484009
    3. 'result' → logprob: -2.1322522163391113
    4. ' if' → logprob: -2.8822522163391113
    5. '_result' → logprob: -3.2572522163391113
    6. '_route' → logprob: -3.2572522163391113
    7. 'route' → logprob: -3.5072522163391113
    8. 'res' → logprob: -3.5072522163391113
    9. '_path' → logprob: -3.6322522163391113
    10. 'path' → logprob: -3.7572522163391113

Token 1056: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025390402879565954
    2. '
' → logprob: -6.627539157867432
    3. ',' → logprob: -7.252539157867432
    4. '            
' → logprob: -8.752538681030273
    5. ' if' → logprob: -9.127538681030273
    6. ' =' → logprob: -10.877538681030273
    7. '[' → logprob: -11.002538681030273
    8. '<|end|>' → logprob: -11.002538681030273
    9. '<|end|>' → logprob: -11.127538681030273
    10. '		' → logprob: -11.127538681030273

Token 1057: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002083881525322795
    2. '<|end|>' → logprob: -7.252083778381348
    3. ',' → logprob: -8.002083778381348
    4. '            
' → logprob: -8.502083778381348
    5. '       ' → logprob: -9.002083778381348
    6. '
' → logprob: -9.127083778381348
    7. '<|end|>' → logprob: -9.252083778381348
    8. ' if' → logprob: -9.252083778381348
    9. ' 
' → logprob: -9.377083778381348
    10. '               ' → logprob: -9.627083778381348

Token 1058: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009308690205216408
    2. ' if' → logprob: -5.009308815002441
    3. 'if' (adapté à ' if') → logprob: -6.009308815002441
    4. '       ' → logprob: -9.759308815002441
    5. '
' → logprob: -10.634308815002441
    6. '            
' → logprob: -11.009308815002441
    7. '```' → logprob: -11.509308815002441
    8. '               ' → logprob: -12.259308815002441
    9. '   ' → logprob: -12.259308815002441
    10. '          ' → logprob: -12.634308815002441

Token 1059: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03150596469640732
    2. '(res' → logprob: -3.531506061553955
    3. ' res' → logprob: -6.531506061553955
    4. '   ' → logprob: -8.281505584716797
    5. ' (' → logprob: -10.531505584716797
    6. '(
' → logprob: -12.031505584716797
    7. '(' → logprob: -12.656505584716797
    8. '  ' → logprob: -13.531505584716797
    9. '	res' → logprob: -13.531505584716797
    10. ' ' → logprob: -13.656505584716797

Token 1060: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1013198271393776
    2. '>' → logprob: -2.3513197898864746
    3. ' >' → logprob: -7.101319789886475
    4. '>[' → logprob: -8.226320266723633
    5. '>
' → logprob: -10.976320266723633
    6. ' >
' → logprob: -14.226320266723633
    7. '>`' → logprob: -14.351320266723633
    8. '[
' → logprob: -14.351320266723633
    9. ' ' → logprob: -15.101320266723633
    10. '
' → logprob: -15.101320266723633

Token 1061: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.875000953674316
    3. '[' → logprob: -15.000000953674316
    4. '1' → logprob: -16.125
    5. '   ' → logprob: -17.0
    6. '
' → logprob: -17.0
    7. '>' → logprob: -17.625
    8. '#' → logprob: -19.375
    9. '۰' → logprob: -19.5
    10. '(' → logprob: -20.0

Token 1062: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.043025560677051544
    2. ' >' → logprob: -3.168025493621826
    3. ',' → logprob: -11.793025970458984
    4. '>
' → logprob: -11.918025970458984
    5. ')>' → logprob: -12.918025970458984
    6. '+' → logprob: -13.668025970458984
    7. ' ' → logprob: -13.668025970458984
    8. ')' → logprob: -13.918025970458984
    9. ']>' → logprob: -14.043025970458984
    10. '   ' → logprob: -14.043025970458984

Token 1063: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0011734402505680919
    2. ' >' → logprob: -6.751173496246338
    3. '>
' → logprob: -13.50117301940918
    4. '>=' → logprob: -13.75117301940918
    5. ' ' → logprob: -15.87617301940918
    6. '>

' → logprob: -16.37617301940918
    7. '[' → logprob: -16.50117301940918
    8. '>
' → logprob: -16.50117301940918
    9. '&gt' → logprob: -16.50117301940918
    10. '>b' → logprob: -16.87617301940918

Token 1064: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0007101670489646494
    2. ' best' → logprob: -7.2507100105285645
    3. '	best' → logprob: -15.500710487365723
    4. '   ' → logprob: -17.250709533691406
    5. '(best' → logprob: -19.375709533691406
    6. '.best' → logprob: -19.875709533691406
    7. '_best' → logprob: -20.125709533691406
    8. '       ' → logprob: -20.750709533691406
    9. '           ' → logprob: -20.875709533691406
    10. 'Best' → logprob: -21.250709533691406

Token 1065: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -15.75
    3. '```' → logprob: -16.0
    4. '[
' → logprob: -17.375
    5. '   ' → logprob: -17.625
    6. '0' → logprob: -18.5
    7. '
' → logprob: -19.625
    8. '.' → logprob: -19.625
    9. ' ' → logprob: -19.625
    10. '<|end|>' → logprob: -21.0

Token 1066: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.875003814697266
    3. '1' → logprob: -14.250003814697266
    4. '   ' → logprob: -14.812503814697266
    5. '[' → logprob: -16.437503814697266
    6. '```' → logprob: -16.562503814697266
    7. '
' → logprob: -16.687503814697266
    8. '۰' → logprob: -17.062503814697266
    9. '০' → logprob: -18.375003814697266
    10. '  ' → logprob: -18.375003814697266

Token 1067: ']:
' (ID: 22152)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.014721974730491638
    2. 'or' → logprob: -4.264721870422363
    3. ')' → logprob: -7.639721870422363
    4. '	or' → logprob: -10.764721870422363
    5. ':' → logprob: -11.264721870422363
    6. '<|end|>' → logprob: -11.389721870422363
    7. '           ' → logprob: -12.014721870422363
    8. ',' → logprob: -12.264721870422363
    9. '):
' → logprob: -12.639721870422363
    10. '<|end|>' → logprob: -13.014721870422363

Token 1068: '               ' (ID: 506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.21751607954502106
    2. '               ' → logprob: -1.8425160646438599
    3. '           ' → logprob: -3.5925161838531494
    4. '            ' → logprob: -5.71751594543457
    5. ':' → logprob: -6.09251594543457
    6. 'or' → logprob: -6.59251594543457
    7. '                ' → logprob: -7.34251594543457
    8. ' ' → logprob: -8.21751594543457
    9. ' :' → logprob: -8.21751594543457
    10. '                       ' → logprob: -8.21751594543457

Token 1069: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.12053097039461136
    2. ' best' → logprob: -2.6205310821533203
    3. '               ' → logprob: -3.2455310821533203
    4. '	best' → logprob: -7.12053108215332
    5. '                   ' → logprob: -7.62053108215332
    6. '                ' → logprob: -8.37053108215332
    7. '           ' → logprob: -8.62053108215332
    8. '(best' → logprob: -9.87053108215332
    9. '                       ' → logprob: -10.87053108215332
    10. '_best' → logprob: -10.99553108215332

Token 1070: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023662686347961
    2. ' =' → logprob: -1.9102365970611572
    3. '=
' → logprob: -12.160236358642578
    4. ',' → logprob: -12.535236358642578
    5. '=res' → logprob: -13.535236358642578
    6. ')' → logprob: -14.035236358642578
    7. ')=' → logprob: -14.410236358642578
    8. '<|end|>' → logprob: -15.535236358642578
    9. '＝' → logprob: -15.660236358642578
    10. '[' → logprob: -16.410236358642578

Token 1071: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00033581978641450405
    2. ' res' → logprob: -8.000335693359375
    3. '(res' → logprob: -14.875335693359375
    4. '   ' → logprob: -19.250335693359375
    5. '	res' → logprob: -19.875335693359375
    6. '
' → logprob: -20.125335693359375
    7. '_res' → logprob: -20.250335693359375
    8. '(' → logprob: -21.000335693359375
    9. '$res' → logprob: -21.250335693359375
    10. 'r' → logprob: -21.500335693359375

Token 1072: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008319523185491562
    2. '
' → logprob: -5.38331937789917
    3. 'elif' → logprob: -6.25831937789917
    4. '<|end|>' → logprob: -7.38331937789917
    5. ' elif' → logprob: -7.88331937789917
    6. '            
' → logprob: -8.133319854736328
    7. '<|end|>' → logprob: -9.133319854736328
    8. '		' → logprob: -9.633319854736328
    9. ' 
' → logprob: -10.008319854736328
    10. '  
' → logprob: -10.258319854736328

Token 1073: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11153057217597961
    2. '               ' → logprob: -2.8615305423736572
    3. '<|end|>' → logprob: -4.361530780792236
    4. '            ' → logprob: -4.736530780792236
    5. '```' → logprob: -4.986530780792236
    6. '          ' → logprob: -5.486530780792236
    7. '              ' → logprob: -5.611530780792236
    8. ' elif' → logprob: -5.861530780792236
    9. '                ' → logprob: -6.611530780792236
    10. 'elif' → logprob: -6.861530780792236

Token 1074: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5377283096313477
    2. ' elif' → logprob: -1.1627283096313477
    3. 'elif' (adapté à ' elif') → logprob: -2.2877283096313477
    4. ' or' → logprob: -7.537728309631348
    5. '	elif' → logprob: -8.037728309631348
    6. '               ' → logprob: -8.162728309631348
    7. ' else' → logprob: -8.287728309631348
    8. '
' → logprob: -9.037728309631348
    9. '          ' → logprob: -9.412728309631348
    10. '       ' → logprob: -9.912728309631348

Token 1075: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06196802109479904
    2. ' res' → logprob: -2.8119680881500244
    3. '(res' → logprob: -15.436967849731445
    4. '	res' → logprob: -16.561967849731445
    5. '$res' → logprob: -18.186967849731445
    6. '   ' → logprob: -19.061967849731445
    7. '_res' → logprob: -19.186967849731445
    8. ' ' → logprob: -19.311967849731445
    9. '
' → logprob: -19.436967849731445
    10. 'rés' → logprob: -19.811967849731445

Token 1076: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. ' [' → logprob: -14.750000953674316
    3. '[
' → logprob: -15.125000953674316
    4. '   ' → logprob: -15.250000953674316
    5. '```' → logprob: -16.250001907348633
    6. '
' → logprob: -16.875001907348633
    7. '==' → logprob: -17.125001907348633
    8. '           ' → logprob: -17.125001907348633
    9. '	' → logprob: -17.250001907348633
    10. '       ' → logprob: -17.500001907348633

Token 1077: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.339776832144707e-05
    2. '[' → logprob: -9.500082969665527
    3. ' ' → logprob: -12.000082969665527
    4. '1' → logprob: -13.625082969665527
    5. '   ' → logprob: -14.500082969665527
    6. '```' → logprob: -15.500082969665527
    7. '
' → logprob: -16.625083923339844
    8. '۰' → logprob: -17.125083923339844
    9. '(' → logprob: -17.125083923339844
    10. '	' → logprob: -17.375083923339844

Token 1078: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19338905811309814
    2. '==' → logprob: -1.8183890581130981
    3. '[' → logprob: -4.318388938903809
    4. '=' → logprob: -9.068388938903809
    5. '           ' → logprob: -10.818388938903809
    6. ' >' → logprob: -10.818388938903809
    7. ']==' → logprob: -11.193388938903809
    8. '>' → logprob: -11.318388938903809
    9. '==
' → logprob: -11.943388938903809
    10. '        ' → logprob: -12.318388938903809

Token 1079: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.252540647983551
    2. ' ==' → logprob: -1.5025405883789062
    3. '[' → logprob: -7.502540588378906
    4. '=' → logprob: -10.502540588378906
    5. '==
' → logprob: -10.502540588378906
    6. '>=' → logprob: -13.252540588378906
    7. '>' → logprob: -14.002540588378906
    8. '===' → logprob: -14.752540588378906
    9. ' >=' → logprob: -15.002540588378906
    10. ' =' → logprob: -15.377540588378906

Token 1080: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.008615042082965374
    2. ' best' → logprob: -4.758615016937256
    3. '	best' → logprob: -15.383615493774414
    4. '       ' → logprob: -16.008615493774414
    5. '   ' → logprob: -16.633615493774414
    6. '           ' → logprob: -17.008615493774414
    7. '(best' → logprob: -17.758615493774414
    8. '_best' → logprob: -18.883615493774414
    9. 'b' → logprob: -19.008615493774414
    10. '               ' → logprob: -19.383615493774414

Token 1081: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.372294698550832e-06
    2. ' [' → logprob: -11.875009536743164
    3. '   ' → logprob: -13.875009536743164
    4. '0' → logprob: -14.875009536743164
    5. '       ' → logprob: -15.000009536743164
    6. '           ' → logprob: -15.250009536743164
    7. 'and' → logprob: -15.875009536743164
    8. '][' → logprob: -16.125009536743164
    9. '```' → logprob: -16.125009536743164
    10. '[
' → logprob: -16.875009536743164

Token 1082: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029589756741188467
    2. '[' → logprob: -8.500295639038086
    3. '1' → logprob: -9.500295639038086
    4. '   ' → logprob: -11.875295639038086
    5. ' ' → logprob: -12.000295639038086
    6. '```' → logprob: -12.875295639038086
    7. '
' → logprob: -14.875295639038086
    8. '(' → logprob: -15.125295639038086
    9. '``' → logprob: -16.062795639038086
    10. '     ' → logprob: -16.125295639038086

Token 1083: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11404311656951904
    2. 'and' → logprob: -2.2390432357788086
    3. '           ' → logprob: -7.239043235778809
    4. ':
' → logprob: -8.239043235778809
    5. '               ' → logprob: -9.364043235778809
    6. ',' → logprob: -9.739043235778809
    7. ':' → logprob: -9.739043235778809
    8. '       ' → logprob: -11.114043235778809
    9. ')' → logprob: -11.989043235778809
    10. '):
' → logprob: -12.489043235778809

Token 1084: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0035745303612202406
    2. ' and' → logprob: -5.753574371337891
    3. '           ' → logprob: -8.25357437133789
    4. ' if' → logprob: -10.12857437133789
    5. 'and' → logprob: -10.50357437133789
    6. '                   ' → logprob: -10.87857437133789
    7. ' ' → logprob: -11.87857437133789
    8. '   ' → logprob: -11.87857437133789
    9. '```' → logprob: -12.12857437133789
    10. '       ' → logprob: -12.37857437133789

Token 1085: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09381110221147537
    2. 'if' → logprob: -2.59381103515625
    3. '               ' → logprob: -4.21881103515625
    4. '                   ' → logprob: -9.46881103515625
    5. '           ' → logprob: -11.71881103515625
    6. '   ' → logprob: -11.84381103515625
    7. 'elif' → logprob: -14.84381103515625
    8. ' ' → logprob: -14.96881103515625
    9. '       ' → logprob: -15.34381103515625
    10. '                       ' → logprob: -15.84381103515625

Token 1086: ' En' (ID: 2130)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02607802487909794
    2. ' if' → logprob: -3.77607798576355
    3. '               ' → logprob: -5.901078224182129
    4. '                   ' → logprob: -9.401078224182129
    5. '           ' → logprob: -12.401078224182129
    6. '   ' → logprob: -12.526078224182129
    7. 'elif' → logprob: -13.651078224182129
    8. '       ' → logprob: -16.151077270507812
    9. ' ' → logprob: -16.151077270507812
    10. '	if' → logprob: -16.276077270507812

Token 1087: ' cas' (ID: 2108)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.12694784998893738
    2. 'if' → logprob: -2.5019478797912598
    3. 'elif' → logprob: -3.7519478797912598
    4. ' res' → logprob: -4.62694787979126
    5. '   ' → logprob: -6.50194787979126
    6. 'rés' → logprob: -6.75194787979126
    7. ' if' → logprob: -7.75194787979126
    8. '           ' → logprob: -8.376947402954102
    9. '```' → logprob: -8.751947402954102
    10. '_res' → logprob: -9.626947402954102

Token 1088: ' d' (ID: 272)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.034670449793338776
    2. '(res' → logprob: -4.159670352935791
    3. ' res' → logprob: -4.534670352935791
    4. '           ' → logprob: -5.534670352935791
    5. 'rés' → logprob: -6.659670352935791
    6. '               ' → logprob: -6.909670352935791
    7. ' de' → logprob: -7.284670352935791
    8. ' rés' → logprob: -8.65967082977295
    9. '=res' → logprob: -8.78467082977295
    10. '	res' → logprob: -9.78467082977295

Token 1089: ''' (ID: 6)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.010954086668789387
    2. ' res' → logprob: -5.260953903198242
    3. 'rés' → logprob: -5.260953903198242
    4. '(res' → logprob: -7.760953903198242
    5. 'best' → logprob: -9.885953903198242
    6. ' rés' → logprob: -12.510953903198242
    7. 'ress' → logprob: -12.635953903198242
    8. '```' → logprob: -12.635953903198242
    9. 'elif' → logprob: -12.760953903198242
    10. 'c' → logprob: -12.760953903198242

Token 1090: 'égalité' (ID: 165530)
  Prédit: 'égalité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égalité' → logprob: -0.044803570955991745
    2. 'rés' → logprob: -3.2948036193847656
    3. 'res' → logprob: -5.419803619384766
    4. 'égal' → logprob: -6.544803619384766
    5. 'tie' → logprob: -7.669803619384766
    6. 'egal' → logprob: -8.419803619384766
    7. 'ég' → logprob: -9.544803619384766
    8. 'c' → logprob: -10.419803619384766
    9. 'é' → logprob: -10.919803619384766
    10. 'best' → logprob: -11.169803619384766

Token 1091: ' sur' (ID: 1512)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33593812584877014
    2. '                   ' → logprob: -1.3359380960464478
    3. ',' → logprob: -4.710937976837158
    4. ':' → logprob: -5.460937976837158
    5. ' and' → logprob: -5.460937976837158
    6. ' if' → logprob: -5.960937976837158
    7. '           ' → logprob: -7.085937976837158
    8. 'and' → logprob: -7.085937976837158
    9. ':
' → logprob: -8.585938453674316
    10. '   ' → logprob: -9.335938453674316

Token 1092: ' le' (ID: 505)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0007601958932355046
    2. ' res' → logprob: -7.375760078430176
    3. 'rés' → logprob: -9.500760078430176
    4. 'best' → logprob: -10.250760078430176
    5. 'last' → logprob: -10.875760078430176
    6. 'la' → logprob: -13.875760078430176
    7. 'le' → logprob: -14.125760078430176
    8. '	res' → logprob: -14.250760078430176
    9. '   ' → logprob: -14.375760078430176
    10. 'dern' → logprob: -14.750760078430176

Token 1093: ' nombre' (ID: 9733)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.07929512113332748
    2. 'last' → logprob: -2.9542951583862305
    3. 'nombre' → logprob: -4.2042951583862305
    4. '0' → logprob: -5.4542951583862305
    5. 'count' → logprob: -5.8292951583862305
    6. 'prem' → logprob: -6.8292951583862305
    7. ' dernier' → logprob: -8.32929515838623
    8. '1' → logprob: -8.95429515838623
    9. 'second' → logprob: -9.07929515838623
    10. 'der' → logprob: -9.32929515838623

Token 1094: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.497847318649292
    2. 'de' → logprob: -1.997847318649292
    3. 'des' → logprob: -2.872847318649292
    4. '_pr' → logprob: -2.997847318649292
    5. '_de' → logprob: -3.372847318649292
    6. ' de' → logprob: -3.372847318649292
    7. '[' → logprob: -3.622847318649292
    8. '           ' → logprob: -3.997847318649292
    9. ',' → logprob: -4.497847557067871
    10. '_prime' → logprob: -4.747847557067871

Token 1095: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.007017633877694607
    2. 'prem' → logprob: -5.132017612457275
    3. 'prime' → logprob: -7.382017612457275
    4. ' primes' → logprob: -8.757018089294434
    5. '_pr' → logprob: -9.132018089294434
    6. 'prim' → logprob: -10.007018089294434
    7. '   ' → logprob: -10.257018089294434
    8. '_' → logprob: -10.507018089294434
    9. ' ' → logprob: -10.632018089294434
    10. 'c' → logprob: -11.757018089294434

Token 1096: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45589715242385864
    2. '               ' → logprob: -1.0808970928192139
    3. ':' → logprob: -4.580897331237793
    4. ' and' → logprob: -5.080897331237793
    5. '                   ' → logprob: -5.080897331237793
    6. ':
' → logprob: -5.830897331237793
    7. ' if' → logprob: -7.580897331237793
    8. 'and' → logprob: -8.580897331237793
    9. ' ,' → logprob: -8.705897331237793
    10. ',
' → logprob: -9.330897331237793

Token 1097: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43302732706069946
    2. ' if' → logprob: -1.4330272674560547
    3. '               ' → logprob: -2.1830272674560547
    4. '                   ' → logprob: -8.808027267456055
    5. 'elif' → logprob: -11.558027267456055
    6. '           ' → logprob: -12.058027267456055
    7. '   ' → logprob: -12.558027267456055
    8. '	if' → logprob: -14.058027267456055
    9. '                ' → logprob: -14.308027267456055
    10. '			' → logprob: -14.808027267456055

Token 1098: ' plus' (ID: 2932)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010408480651676655
    2. 'elif' → logprob: -4.885408401489258
    3. ' if' → logprob: -7.010408401489258
    4. '           ' → logprob: -7.010408401489258
    5. 'res' → logprob: -7.635408401489258
    6. '               ' → logprob: -8.260408401489258
    7. 'best' → logprob: -9.135408401489258
    8. '   ' → logprob: -10.135408401489258
    9. '                   ' → logprob: -10.260408401489258
    10. '       ' → logprob: -10.510408401489258

Token 1099: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.04261224344372749
    2. ' grand' → logprob: -4.167612075805664
    3. '[' → logprob: -4.792612075805664
    4. 'large' → logprob: -5.292612075805664
    5. 'gr' → logprob: -5.542612075805664
    6. 'é' → logprob: -6.917612075805664
    7. '```' → logprob: -7.292612075805664
    8. 'if' → logprob: -7.292612075805664
    9. 'dern' → logprob: -7.667612075805664
    10. '
' → logprob: -7.792612075805664

Token 1100: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.3906557857990265
    2. 'last' → logprob: -1.265655755996704
    3. 'res' → logprob: -4.765655994415283
    4. ' dernier' → logprob: -5.390655994415283
    5. 'second' → logprob: -5.515655994415283
    6. 'if' → logprob: -5.640655994415283
    7. '_last' → logprob: -5.640655994415283
    8. 'prime' → logprob: -5.640655994415283
    9. '[' → logprob: -5.890655994415283
    10. 'Dern' → logprob: -6.265655994415283

Token 1101: ' prime' (ID: 9197)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.07541953772306442
    2. '_' → logprob: -2.7004194259643555
    3. 'prime' → logprob: -5.9504194259643555
    4. '_pr' → logprob: -6.9504194259643555
    5. '_c' → logprob: -7.3254194259643555
    6. '_p' → logprob: -7.5754194259643555
    7. '```' → logprob: -8.075419425964355
    8. 'pr' → logprob: -9.950419425964355
    9. 'prim' → logprob: -9.950419425964355
    10. 'prem' → logprob: -9.950419425964355

Token 1102: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06255485117435455
    2. '>' → logprob: -3.3125548362731934
    3. 'est' → logprob: -5.187554836273193
    4. '                   ' → logprob: -5.312554836273193
    5. 'if' → logprob: -5.937554836273193
    6. ' if' → logprob: -6.062554836273193
    7. ' est' → logprob: -6.312554836273193
    8. ' >' → logprob: -6.937554836273193
    9. ',' → logprob: -7.687554836273193
    10. ' doit' → logprob: -7.812554836273193

Token 1103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04344591870903969
    2. '>' → logprob: -4.293446063995361
    3. '                   ' → logprob: -4.668446063995361
    4. ' >' → logprob: -5.668446063995361
    5. ' if' → logprob: -5.793446063995361
    6. '[' → logprob: -6.043446063995361
    7. ' =' → logprob: -6.168446063995361
    8. '           ' → logprob: -6.793446063995361
    9. '                ' → logprob: -6.793446063995361
    10. '```' → logprob: -7.043446063995361

Token 1104: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.264198899269104
    2. '               ' → logprob: -1.889198899269104
    3. 'if' (adapté à ' if') → logprob: -2.5141987800598145
    4. '                   ' → logprob: -10.014199256896973
    5. '	if' → logprob: -13.264199256896973
    6. 'elif' → logprob: -13.264199256896973
    7. '	           ' → logprob: -13.389199256896973
    8. '			' → logprob: -13.389199256896973
    9. ' ' → logprob: -13.639199256896973
    10. '   ' → logprob: -13.764199256896973

Token 1105: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.4498052223643754e-05
    2. ' res' → logprob: -11.250014305114746
    3. '   ' → logprob: -13.500014305114746
    4. '	res' → logprob: -18.000015258789062
    5. 'rés' → logprob: -19.125015258789062
    6. 'ress' → logprob: -19.125015258789062
    7. '
' → logprob: -19.250015258789062
    8. 'r' → logprob: -19.375015258789062
    9. ' ' → logprob: -19.750015258789062
    10. '       ' → logprob: -20.125015258789062

Token 1106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.375000953674316
    3. '>[' → logprob: -15.625000953674316
    4. ' [' → logprob: -15.750000953674316
    5. '>' → logprob: -16.75
    6. '[
' → logprob: -17.125
    7. '           ' → logprob: -17.625
    8. '   ' → logprob: -17.75
    9. '][' → logprob: -17.875
    10. ')[' → logprob: -18.125

Token 1107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3954463510308415e-05
    2. '[' → logprob: -9.875054359436035
    3. ' ' → logprob: -13.500054359436035
    4. '
' → logprob: -14.625054359436035
    5. '   ' → logprob: -15.500054359436035
    6. '```' → logprob: -15.750054359436035
    7. '۱' → logprob: -16.62505340576172
    8. '0' → logprob: -16.68755340576172
    9. '-' → logprob: -16.81255340576172
    10. '１' → logprob: -17.06255340576172

Token 1108: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.14268392324447632
    2. ' >' → logprob: -2.017683982849121
    3. '>
' → logprob: -13.017683982849121
    4. ']' → logprob: -13.642683982849121
    5. ')' → logprob: -14.142683982849121
    6. ' >
' → logprob: -14.142683982849121
    7. '[' → logprob: -14.392683982849121
    8. ']>' → logprob: -14.517683982849121
    9. ' ' → logprob: -14.642683982849121
    10. '&gt' → logprob: -14.892683982849121

Token 1109: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.011051944456994534
    2. ' >' → logprob: -4.511052131652832
    3. '>
' → logprob: -13.011052131652832
    4. '">' → logprob: -15.261052131652832
    5. '[' → logprob: -15.511052131652832
    6. '>C' → logprob: -15.761052131652832
    7. '&gt' → logprob: -15.761052131652832
    8. ' >
' → logprob: -16.011051177978516
    9. '>`' → logprob: -16.136051177978516
    10. ' ' → logprob: -16.261051177978516

Token 1110: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00020354038861114532
    2. ' best' → logprob: -8.500203132629395
    3. '	best' → logprob: -17.50020408630371
    4. '(best' → logprob: -18.87520408630371
    5. '_best' → logprob: -20.37520408630371
    6. '.best' → logprob: -20.37520408630371
    7. '
' → logprob: -21.37520408630371
    8. 'Best' → logprob: -21.75020408630371
    9. '   ' → logprob: -22.00020408630371
    10. 'b' → logprob: -22.00020408630371

Token 1111: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -14.125001907348633
    3. '   ' → logprob: -15.000001907348633
    4. ' [' → logprob: -15.250001907348633
    5. '[
' → logprob: -15.625001907348633
    6. '][' → logprob: -16.375001907348633
    7. '           ' → logprob: -17.500001907348633
    8. '1' → logprob: -17.500001907348633
    9. '.' → logprob: -17.625001907348633
    10. '
' → logprob: -18.000001907348633

Token 1112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.25
    5. '```' → logprob: -16.875
    6. '
' → logprob: -17.625
    7. '' → logprob: -18.25
    8. '۱' → logprob: -18.25
    9. '१' → logprob: -18.625
    10. '১' → logprob: -18.9375

Token 1113: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7735826373100281
    2. '                   ' → logprob: -1.5235826969146729
    3. ':
' → logprob: -2.023582696914673
    4. ':' → logprob: -2.648582696914673
    5. ']:
' → logprob: -2.773582696914673
    6. '               ' → logprob: -3.273582696914673
    7. '):' → logprob: -5.273582458496094
    8. '():
' → logprob: -5.773582458496094
    9. '                       ' → logprob: -6.023582458496094
    10. ']:' → logprob: -6.398582458496094

Token 1114: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006284133531153202
    2. '               ' → logprob: -5.381284236907959
    3. '                       ' → logprob: -7.506284236907959
    4. ':
' → logprob: -7.631284236907959
    5. ':' → logprob: -7.881284236907959
    6. '```' → logprob: -9.8812837600708
    7. '(best' → logprob: -10.1312837600708
    8. 'best' → logprob: -10.2562837600708
    9. ' best' → logprob: -10.2562837600708
    10. '):
' → logprob: -10.7562837600708

Token 1115: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.07891149073839188
    2. ' best' → logprob: -2.578911542892456
    3. '                   ' → logprob: -10.953911781311035
    4. '	best' → logprob: -13.078911781311035
    5. '                       ' → logprob: -13.703911781311035
    6. '(best' → logprob: -14.328911781311035
    7. '_best' → logprob: -15.703911781311035
    8. '               ' → logprob: -15.953911781311035
    9. '```' → logprob: -16.32891082763672
    10. '           ' → logprob: -17.32891082763672

Token 1116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141996443271637
    2. ' =' → logprob: -1.7014199495315552
    3. '=res' → logprob: -11.951419830322266
    4. '=
' → logprob: -15.576419830322266
    5. '                   ' → logprob: -17.951419830322266
    6. '＝' → logprob: -18.076419830322266
    7. ')=' → logprob: -18.326419830322266
    8. ' =
' → logprob: -18.701419830322266
    9. '=

' → logprob: -18.701419830322266
    10. ']=' → logprob: -18.826419830322266

Token 1117: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0015023599844425917
    2. ' res' → logprob: -6.501502513885498
    3. '(res' → logprob: -19.001502990722656
    4. '	res' → logprob: -19.626502990722656
    5. '_res' → logprob: -20.001502990722656
    6. '$res' → logprob: -21.126502990722656
    7. 'ress' → logprob: -21.126502990722656
    8. 'c' → logprob: -21.626502990722656
    9. '   ' → logprob: -21.751502990722656
    10. 'r' → logprob: -22.126502990722656

Token 1118: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5240126252174377
    2. '
' → logprob: -1.024012565612793
    3. '        
' → logprob: -3.149012565612793
    4. '    
' → logprob: -6.274012565612793
    5. '            
' → logprob: -7.274012565612793
    6. '  
' → logprob: -7.274012565612793
    7. '<|end|>' → logprob: -8.024012565612793
    8. '           ' → logprob: -8.399012565612793
    9. '
        
' → logprob: -8.399012565612793
    10. '   ' → logprob: -8.524012565612793

Token 1119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27686455845832825
    2. '
' → logprob: -1.5268645286560059
    3. '        
' → logprob: -3.901864528656006
    4. '    
' → logprob: -6.401864528656006
    5. '   ' → logprob: -7.151864528656006
    6. '  
' → logprob: -7.901864528656006
    7. '
        
' → logprob: -8.026865005493164
    8. ' 
' → logprob: -8.026865005493164
    9. '            
' → logprob: -8.276865005493164
    10. '           ' → logprob: -9.026865005493164

Token 1120: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12236291915178299
    2. 'current' → logprob: -2.3723628520965576
    3. '       ' → logprob: -4.122363090515137
    4. 'prime' → logprob: -6.372363090515137
    5. ' if' → logprob: -6.497363090515137
    6. '   ' → logprob: -6.622363090515137
    7. 'is' → logprob: -7.622363090515137
    8. 'curr' → logprob: -8.872363090515137
    9. 'c' → logprob: -9.122363090515137
    10. 'prefix' → logprob: -9.247363090515137

Token 1121: ' Ajouter' (ID: 165754)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.051482491195201874
    2. 'current' → logprob: -3.0514824390411377
    3. 'prime' → logprob: -7.176482677459717
    4. '   ' → logprob: -7.301482677459717
    5. 'curr' → logprob: -7.551482677459717
    6. '       ' → logprob: -7.926482677459717
    7. 'cur' → logprob: -8.426482200622559
    8. ' if' → logprob: -9.301482200622559
    9. 'result' → logprob: -9.426482200622559
    10. 'count' → logprob: -9.676482200622559

Token 1122: ' cette' (ID: 7696)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4747646450996399
    2. '(' → logprob: -0.9747646450996399
    3. '(
' → logprob: -8.224764823913574
    4. '((' → logprob: -8.474764823913574
    5. ' ' → logprob: -9.224764823913574
    6. ' (
' → logprob: -9.974764823913574
    7. ' =' → logprob: -11.849764823913574
    8. ' ((' → logprob: -11.849764823913574
    9. '   ' → logprob: -11.974764823913574
    10. '
' → logprob: -12.099764823913574

Token 1123: ' cave' (ID: 44365)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3168174922466278
    2. ' (' → logprob: -2.81681752204895
    3. 'if' → logprob: -2.94181752204895
    4. '   ' → logprob: -3.81681752204895
    5. 'def' → logprob: -4.066817283630371
    6. '_token' → logprob: -4.441817283630371
    7. '(' → logprob: -4.566817283630371
    8. '
' → logprob: -4.691817283630371
    9. '_' → logprob: -4.816817283630371
    10. '_c' → logprob: -4.941817283630371

Token 1124: ' si' (ID: 1784)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.808548629283905
    2. '_num' → logprob: -1.0585486888885498
    3. '_' → logprob: -2.18354868888855
    4. ' if' → logprob: -3.80854868888855
    5. '_count' → logprob: -3.93354868888855
    6. ',' → logprob: -4.308548450469971
    7. '_token' → logprob: -4.558548450469971
    8. '=' → logprob: -4.683548450469971
    9. 'if' → logprob: -4.683548450469971
    10. '_if' → logprob: -5.933548450469971

Token 1125: ' prime' (ID: 9197)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03805331513285637
    2. 'is' → logprob: -3.288053274154663
    3. '1' → logprob: -12.538053512573242
    4. ' ' → logprob: -13.163053512573242
    5. '(is' → logprob: -13.288053512573242
    6. ' ' → logprob: -13.413053512573242
    7. '_is' → logprob: -14.038053512573242
    8. ' (' → logprob: -14.788053512573242
    9. '(' → logprob: -15.038053512573242
    10. '_' → logprob: -15.288053512573242

Token 1126: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.504950225353241
    2. ',' → logprob: -1.5049502849578857
    3. '       ' → logprob: -2.0049502849578857
    4. '
' → logprob: -4.129950046539307
    5. 'if' → logprob: -5.254950046539307
    6. ' =' → logprob: -5.629950046539307
    7. '   ' → logprob: -6.004950046539307
    8. '        
' → logprob: -6.004950046539307
    9. ',
' → logprob: -6.254950046539307
    10. ' ,' → logprob: -6.879950046539307

Token 1127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7501593828201294
    2. ' if' → logprob: -0.7501593828201294
    3. 'if' → logprob: -3.37515926361084
    4. '   ' → logprob: -5.00015926361084
    5. '        
' → logprob: -5.50015926361084
    6. ',' → logprob: -5.75015926361084
    7. '
' → logprob: -6.50015926361084
    8. ' =' → logprob: -7.12515926361084
    9. '<|end|>' → logprob: -7.62515926361084
    10. '    
' → logprob: -7.87515926361084

Token 1128: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.032904621213674545
    2. 'if' (adapté à ' if') → logprob: -3.532904624938965
    3. '       ' → logprob: -6.282904624938965
    4. '   ' → logprob: -7.532904624938965
    5. '
' → logprob: -8.282904624938965
    6. ',' → logprob: -8.782904624938965
    7. ' =' → logprob: -9.532904624938965
    8. '        
' → logprob: -10.032904624938965
    9. 'return' → logprob: -10.157904624938965
    10. ')' → logprob: -10.657904624938965

Token 1129: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03804275393486023
    2. 'is' → logprob: -3.2880427837371826
    3. '(is' → logprob: -14.538043022155762
    4. '   ' → logprob: -15.538043022155762
    5. '	is' → logprob: -15.913043022155762
    6. ' ' → logprob: -15.913043022155762
    7. ' ' → logprob: -16.038042068481445
    8. '_is' → logprob: -16.038042068481445
    9. '    ' → logprob: -16.538042068481445
    10. '(' → logprob: -17.038042068481445

Token 1130: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.500003814697266
    3. '[_' → logprob: -13.750003814697266
    4. '```' → logprob: -15.250003814697266
    5. '[c' → logprob: -15.375003814697266
    6. ' _' → logprob: -15.625003814697266
    7. 'prime' → logprob: -15.875003814697266
    8. '
' → logprob: -17.125003814697266
    9. ''_' → logprob: -17.125003814697266
    10. 'Prime' → logprob: -18.000003814697266

Token 1131: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.500001907348633
    3. 'c' → logprob: -17.625001907348633
    4. '[
' → logprob: -17.875001907348633
    5. '   ' → logprob: -19.000001907348633
    6. ' [' → logprob: -19.125001907348633
    7. '[C' → logprob: -21.000001907348633
    8. '(c' → logprob: -21.375001907348633
    9. '```' → logprob: -21.500001907348633
    10. '[current' → logprob: -22.000001907348633

Token 1132: 'ave' (ID: 577)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.006585335824638605
    2. 'ave' → logprob: -5.256585121154785
    3. 'c' → logprob: -7.631585121154785
    4. '_c' → logprob: -8.131585121154785
    5. 'av' → logprob: -8.631585121154785
    6. 'num' → logprob: -9.256585121154785
    7. '_num' → logprob: -9.381585121154785
    8. '[' → logprob: -9.381585121154785
    9. '(c' → logprob: -11.006585121154785
    10. '_[' → logprob: -11.131585121154785

Token 1133: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -9.729906196298543e-06
    2. 'num' → logprob: -11.875009536743164
    3. 'Num' → logprob: -13.500009536743164
    4. '[' → logprob: -14.500009536743164
    5. '[_' → logprob: -15.750009536743164
    6. '[num' → logprob: -16.125009536743164
    7. '[c' → logprob: -16.250009536743164
    8. '_NUM' → logprob: -16.250009536743164
    9. '```' → logprob: -16.625009536743164
    10. '   ' → logprob: -17.000009536743164

Token 1134: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.02664499171078205
    2. '[' → logprob: -4.026645183563232
    3. ']:' → logprob: -5.276645183563232
    4. '):
' → logprob: -6.401645183563232
    5. ']:
' → logprob: -7.401645183563232
    6. '][' → logprob: -7.901645183563232
    7. '   ' → logprob: -8.401644706726074
    8. ']' → logprob: -8.526644706726074
    9. ':
' → logprob: -9.276644706726074
    10. ':' → logprob: -10.526644706726074

Token 1135: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9582023024559021
    2. '           ' → logprob: -1.2082023620605469
    3. 'return' → logprob: -1.2082023620605469
    4. ':
' → logprob: -4.333202362060547
    5. ':' → logprob: -5.583202362060547
    6. ':return' → logprob: -7.208202362060547
    7. '       ' → logprob: -7.333202362060547
    8. ',' → logprob: -8.458202362060547
    9. ' =' → logprob: -9.833202362060547
    10. '	return' → logprob: -9.958202362060547

Token 1136: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014986937865614891
    2. ' return' → logprob: -4.514986991882324
    3. '(' → logprob: -6.139986991882324
    4. '       ' → logprob: -6.889986991882324
    5. '           ' → logprob: -8.014986991882324
    6. 'best' → logprob: -8.264986991882324
    7. '(best' → logprob: -9.514986991882324
    8. ' (' → logprob: -9.639986991882324
    9. '(return' → logprob: -11.139986991882324
    10. 'result' → logprob: -12.264986991882324

Token 1137: ' compteur' (ID: 163344)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010568645084276795
    2. '           ' → logprob: -7.876056671142578
    3. 'best' → logprob: -8.001056671142578
    4. ' return' → logprob: -8.251056671142578
    5. 'result' → logprob: -9.626056671142578
    6. '       ' → logprob: -12.001056671142578
    7. 'res' → logprob: -12.876056671142578
    8. '(best' → logprob: -13.001056671142578
    9. 'new' → logprob: -13.501056671142578
    10. '(' → logprob: -14.251056671142578

Token 1138: ' +' (ID: 659)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03403913974761963
    2. ' =' → logprob: -3.40903902053833
    3. '=(' → logprob: -8.409039497375488
    4. '=
' → logprob: -9.034039497375488
    5. ',' → logprob: -10.784039497375488
    6. '           ' → logprob: -11.659039497375488
    7. '   ' → logprob: -12.034039497375488
    8. '       ' → logprob: -12.409039497375488
    9. 'return' → logprob: -13.659039497375488
    10. '
' → logprob: -13.909039497375488

Token 1139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.049175530672073364
    2. 'best' → logprob: -3.049175500869751
    3. ' best' → logprob: -8.174175262451172
    4. ' ' → logprob: -9.049175262451172
    5. '=' → logprob: -9.549175262451172
    6. '           ' → logprob: -10.049175262451172
    7. '   ' → logprob: -10.799175262451172
    8. '       ' → logprob: -11.174175262451172
    9. ' =' → logprob: -11.674175262451172
    10. '+' → logprob: -12.174175262451172

Token 1140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00048048171447589993
    2. 'best' → logprob: -7.750480651855469
    3. ' ' → logprob: -10.750480651855469
    4. 'res' → logprob: -11.500480651855469
    5. '   ' → logprob: -11.750480651855469
    6. '```' → logprob: -13.000480651855469
    7. '       ' → logprob: -13.125480651855469
    8. '           ' → logprob: -13.125480651855469
    9. '+' → logprob: -14.125480651855469
    10. ' best' → logprob: -14.750480651855469

Token 1141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028181932866573334
    2. '           ' → logprob: -7.0028181076049805
    3. ',
' → logprob: -7.1278181076049805
    4. ' ,' → logprob: -7.5028181076049805
    5. 'return' → logprob: -8.25281810760498
    6. ' =' → logprob: -9.50281810760498
    7. ' return' → logprob: -10.12781810760498
    8. '=' → logprob: -10.25281810760498
    9. ',b' → logprob: -10.50281810760498
    10. ',new' → logprob: -10.87781810760498

Token 1142: ' dernier' (ID: 27982)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.048206429928541183
    2. ' best' → logprob: -3.173206329345703
    3. '(best' → logprob: -5.298206329345703
    4. 'res' → logprob: -9.548206329345703
    5. ' (' → logprob: -10.048206329345703
    6. '   ' → logprob: -10.923206329345703
    7. '           ' → logprob: -11.048206329345703
    8. ' res' → logprob: -11.173206329345703
    9. '(' → logprob: -11.673206329345703
    10. '       ' → logprob: -11.923206329345703

Token 1143: ' prime' (ID: 9197)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.08437129855155945
    2. 'prime' → logprob: -2.834371328353882
    3. ' =' → logprob: -4.209371089935303
    4. '=' → logprob: -5.459371089935303
    5. 'c' → logprob: -7.084371089935303
    6. '_c' → logprob: -7.334371089935303
    7. '_' → logprob: -7.459371089935303
    8. '_pr' → logprob: -8.459371566772461
    9. 'prem' → logprob: -8.834371566772461
    10. ' prime' → logprob: -9.334371566772461

Token 1144: ' devient' (ID: 63488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6432289481163025
    2. '=' → logprob: -0.7682289481163025
    3. ',' → logprob: -4.893229007720947
    4. '=c' → logprob: -6.393229007720947
    5. '=(' → logprob: -7.393229007720947
    6. 'c' → logprob: -8.518228530883789
    7. ')' → logprob: -9.768228530883789
    8. 'res' → logprob: -9.768228530883789
    9. '           ' → logprob: -9.893228530883789
    10. ',c' → logprob: -10.018228530883789

Token 1145: ' cave' (ID: 44365)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.039261795580387115
    2. '(c' → logprob: -3.414261817932129
    3. ' cave' → logprob: -5.539261817932129
    4. '(' → logprob: -7.539261817932129
    5. '   ' → logprob: -7.664261817932129
    6. ' (' → logprob: -7.664261817932129
    7. ' c' → logprob: -9.039261817932129
    8. '(
' → logprob: -10.289261817932129
    9. '```' → logprob: -11.789261817932129
    10. '	c' → logprob: -11.914261817932129

Token 1146: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -8.537868779967539e-06
    2. 'num' → logprob: -12.250008583068848
    3. 'Num' → logprob: -13.875008583068848
    4. '_' → logprob: -14.375008583068848
    5. '```' → logprob: -14.750008583068848
    6. '_c' → logprob: -15.000008583068848
    7. '[num' → logprob: -15.375008583068848
    8. '`' → logprob: -15.875008583068848
    9. '_NUM' → logprob: -16.00000762939453
    10. '[_' → logprob: -16.12500762939453

Token 1147: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3206663131713867
    2. ',' → logprob: -1.5706663131713867
    3. ' return' → logprob: -3.6956663131713867
    4. 'return' → logprob: -3.6956663131713867
    5. ' =' → logprob: -5.445666313171387
    6. ',
' → logprob: -5.570666313171387
    7. '       ' → logprob: -6.570666313171387
    8. ')' → logprob: -7.070666313171387
    9. '               ' → logprob: -7.195666313171387
    10. '
' → logprob: -7.195666313171387

Token 1148: 'par' (ID: 796)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07136545330286026
    2. ')' → logprob: -3.9463653564453125
    3. 'c' → logprob: -4.0713653564453125
    4. ' ,' → logprob: -4.3213653564453125
    5. ' cave' → logprob: -4.8213653564453125
    6. ',c' → logprob: -4.9463653564453125
    7. '),' → logprob: -6.1963653564453125
    8. ',
' → logprob: -7.5713653564453125
    9. ')
' → logprob: -8.196365356445312
    10. ')c' → logprob: -8.446365356445312

Token 1149: 'ce' (ID: 400)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43812766671180725
    2. ')' → logprob: -2.8131277561187744
    3. '=' → logprob: -3.0631277561187744
    4. 'def' → logprob: -3.4381277561187744
    5. '   ' → logprob: -3.5631277561187744
    6. 'tuple' → logprob: -3.5631277561187744
    7. '```' → logprob: -3.6881277561187744
    8. ')c' → logprob: -4.688127517700195
    9. 'max' → logprob: -4.813127517700195
    10. ' cave' → logprob: -5.063127517700195

Token 1150: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0033198304008692503
    2. ' que' → logprob: -6.00331974029541
    3. 'c' → logprob: -8.12831974029541
    4. 'ce' → logprob: -8.25331974029541
    5. 'qu' → logprob: -8.37831974029541
    6. '   ' → logprob: -10.87831974029541
    7. 'cela' → logprob: -11.50331974029541
    8. '#' → logprob: -13.00331974029541
    9. 'def' → logprob: -13.37831974029541
    10. '       ' → logprob: -13.37831974029541

Token 1151: ' on' (ID: 402)
  Prédit: ' cave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cave' → logprob: -0.06226567551493645
    2. 'c' → logprob: -2.812265634536743
    3. ' c' → logprob: -9.062265396118164
    4. ' ' → logprob: -9.437265396118164
    5. ')' → logprob: -10.937265396118164
    6. ')c' → logprob: -11.062265396118164
    7. ' caves' → logprob: -11.562265396118164
    8. ' )' → logprob: -11.562265396118164
    9. '_c' → logprob: -11.937265396118164
    10. ' cage' → logprob: -12.062265396118164

Token 1152: ' est' (ID: 893)
  Prédit: ' ajoute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajoute' → logprob: -1.25848388671875
    2. 'c' → logprob: -1.38348388671875
    3. ' est' → logprob: -2.50848388671875
    4. ' considère' → logprob: -3.25848388671875
    5. ' part' → logprob: -3.63348388671875
    6. '_c' → logprob: -3.63348388671875
    7. ' c' → logprob: -3.75848388671875
    8. ' visite' → logprob: -4.00848388671875
    9. ' is' → logprob: -4.00848388671875
    10. ')' → logprob: -4.13348388671875

Token 1153: ' avant' (ID: 13339)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14620983600616455
    2. ' cave' → logprob: -2.896209716796875
    3. ' ici' → logprob: -3.521209716796875
    4. '   ' → logprob: -4.896209716796875
    5. 'ici' → logprob: -4.896209716796875
    6. '_c' → logprob: -5.646209716796875
    7. ' c' → logprob: -5.646209716796875
    8. '_prime' → logprob: -5.646209716796875
    9. 'prime' → logprob: -5.771209716796875
    10. '       ' → logprob: -5.771209716796875

Token 1154: ' enfants' (ID: 24681)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6299357414245605
    2. ' cave' → logprob: -1.3799357414245605
    3. '_c' → logprob: -2.6299357414245605
    4. 'le' → logprob: -3.3799357414245605
    5. ')' → logprob: -3.6299357414245605
    6. ' _' → logprob: -4.1299357414245605
    7. ' le' → logprob: -4.1299357414245605
    8. '_' → logprob: -4.5049357414245605
    9. ',' → logprob: -4.8799357414245605
    10. 'l' → logprob: -5.1299357414245605

Token 1155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3822574317455292
    2. '           ' → logprob: -1.8822574615478516
    3. ',' → logprob: -2.3822574615478516
    4. ')
' → logprob: -2.8822574615478516
    5. '),' → logprob: -4.882257461547852
    6. '):
' → logprob: -6.132257461547852
    7. ' ,' → logprob: -6.632257461547852
    8. '       ' → logprob: -6.632257461547852
    9. '
' → logprob: -7.007257461547852
    10. ' )' → logprob: -7.257257461547852

Token 1156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21718111634254456
    2. ':' → logprob: -2.4671812057495117
    3. '(' → logprob: -3.4671812057495117
    4. ')' → logprob: -4.467181205749512
    5. ' (' → logprob: -4.592181205749512
    6. ',' → logprob: -4.592181205749512
    7. '       ' → logprob: -4.842181205749512
    8. '(
' → logprob: -4.842181205749512
    9. ' =' → logprob: -5.092181205749512
    10. '   ' → logprob: -5.342181205749512

Token 1157: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03394327312707901
    2. ' return' → logprob: -3.5339431762695312
    3. '           ' → logprob: -5.533943176269531
    4. '(' → logprob: -9.033943176269531
    5. 'best' → logprob: -9.908943176269531
    6. '       ' → logprob: -10.283943176269531
    7. ' (' → logprob: -11.533943176269531
    8. '(best' → logprob: -11.658943176269531
    9. '   ' → logprob: -12.408943176269531
    10. ' best' → logprob: -12.658943176269531

Token 1158: ' (' (ID: 350)
  Prédit: '(best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.576094925403595
    2. '(' → logprob: -0.826094925403595
    3. ' (' → logprob: -8.826094627380371
    4. '           ' → logprob: -12.701094627380371
    5. '(b' → logprob: -13.451094627380371
    6. '(res' → logprob: -13.826094627380371
    7. '   ' → logprob: -13.951094627380371
    8. '       ' → logprob: -13.951094627380371
    9. '(max' → logprob: -15.076094627380371
    10. '(prev' → logprob: -15.201094627380371

Token 1159: 'best' (ID: 17844)
  Prédit: 'best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -5.512236498361744e-07
    2. ' best' → logprob: -15.250000953674316
    3. '1' → logprob: -16.125
    4. '(best' → logprob: -16.375
    5. '	best' → logprob: -18.5
    6. '           ' → logprob: -18.625
    7. '   ' → logprob: -18.75
    8. '       ' → logprob: -19.875
    9. '_best' → logprob: -21.25
    10. 'b' → logprob: -21.75

Token 1160: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1517960956552997e-05
    2. '0' → logprob: -11.750011444091797
    3. '   ' → logprob: -13.500011444091797
    4. '[
' → logprob: -14.125011444091797
    5. '
' → logprob: -14.750011444091797
    6. ' ' → logprob: -15.250011444091797
    7. ')' → logprob: -15.750011444091797
    8. ' [' → logprob: -15.875011444091797
    9. '(' → logprob: -16.125011444091797
    10. '	' → logprob: -16.250011444091797

Token 1161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.125003814697266
    3. '[' → logprob: -13.875003814697266
    4. '   ' → logprob: -14.500003814697266
    5. '
' → logprob: -17.875003814697266
    6. '۰' → logprob: -18.500003814697266
    7. '	' → logprob: -18.750003814697266
    8. '    ' → logprob: -19.250003814697266
    9. '  ' → logprob: -19.625003814697266
    10. '       ' → logprob: -19.750003814697266

Token 1162: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048602137714624405
    2. ' +' → logprob: -3.0486021041870117
    3. '[' → logprob: -12.048602104187012
    4. '+
' → logprob: -12.173602104187012
    5. ')+' → logprob: -13.923602104187012
    6. '
' → logprob: -14.048602104187012
    7. ',' → logprob: -14.423602104187012
    8. '+,' → logprob: -14.798602104187012
    9. ']+' → logprob: -15.548602104187012
    10. '+[' → logprob: -15.673602104187012

Token 1163: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014164566993713379
    2. ' +' → logprob: -4.264164447784424
    3. '+
' → logprob: -14.389164924621582
    4. '[' → logprob: -16.014163970947266
    5. '
' → logprob: -16.264163970947266
    6. '+,' → logprob: -16.264163970947266
    7. '   ' → logprob: -16.389163970947266
    8. '＋' → logprob: -17.139163970947266
    9. '()+' → logprob: -18.389163970947266
    10. '+[' → logprob: -18.389163970947266

Token 1164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '```' → logprob: -18.753177642822266
    4. '   ' → logprob: -19.253177642822266
    5. ' ' → logprob: -20.128177642822266
    6. '<|end|>' → logprob: -20.378177642822266
    7. ',' → logprob: -20.503177642822266
    8. ')' → logprob: -21.128177642822266
    9. '[' → logprob: -21.628177642822266
    10. '  ' → logprob: -21.753177642822266

Token 1165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -18.500003814697266
    4. '   ' → logprob: -19.000003814697266
    5. ')' → logprob: -20.375003814697266
    6. '+' → logprob: -20.500003814697266
    7. '
' → logprob: -20.625003814697266
    8. '`' → logprob: -20.750003814697266
    9. '  ' → logprob: -20.937503814697266
    10. ',' → logprob: -21.312503814697266

Token 1166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3954463510308415e-05
    2. ',c' → logprob: -9.875054359436035
    3. ' ,' → logprob: -13.125054359436035
    4. ',
' → logprob: -15.250054359436035
    5. 'c' → logprob: -15.750054359436035
    6. '‌,' → logprob: -17.25005340576172
    7. '   ' → logprob: -17.62505340576172
    8. '           ' → logprob: -18.87505340576172
    9. '),' → logprob: -19.12505340576172
    10. ',n' → logprob: -19.37505340576172

Token 1167: ' cave' (ID: 44365)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014164566993713379
    2. ' cave' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.889164924621582
    4. '	c' → logprob: -15.639164924621582
    5. '```' → logprob: -15.764164924621582
    6. ' c' → logprob: -15.889164924621582
    7. ' caves' → logprob: -16.139163970947266
    8. ')c' → logprob: -16.264163970947266
    9. '           ' → logprob: -17.514163970947266
    10. '
' → logprob: -17.639163970947266

Token 1168: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.5048530030981055e-06
    2. 'num' → logprob: -15.000001907348633
    3. 'Num' → logprob: -15.125001907348633
    4. '[' → logprob: -15.250001907348633
    5. '_' → logprob: -15.750001907348633
    6. '_prime' → logprob: -15.875001907348633
    7. 'c' → logprob: -16.250001907348633
    8. '_c' → logprob: -16.625001907348633
    9. '```' → logprob: -16.625001907348633
    10. '_NUM' → logprob: -16.750001907348633

Token 1169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.404745439183898e-05
    2. ')
' → logprob: -10.37503433227539
    3. '       ' → logprob: -13.37503433227539
    4. ' )' → logprob: -14.25003433227539
    5. '   ' → logprob: -14.50003433227539
    6. '	' → logprob: -16.87503433227539
    7. '}' → logprob: -17.75003433227539
    8. '),' → logprob: -18.37503433227539
    9. ')
' → logprob: -19.12503433227539
    10. ')

' → logprob: -19.12503433227539

Token 1170: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4870128035545349
    2. '       ' → logprob: -0.9870128035545349
    3. 'return' → logprob: -4.98701286315918
    4. '   ' → logprob: -5.23701286315918
    5. ' else' → logprob: -7.36201286315918
    6. '	else' → logprob: -10.61201286315918
    7. '
' → logprob: -11.36201286315918
    8. '<|end|>' → logprob: -11.61201286315918
    9. '```' → logprob: -11.98701286315918
    10. '	return' → logprob: -11.98701286315918

Token 1171: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.01409286167472601
    2. ' else' → logprob: -4.514092922210693
    3. '       ' → logprob: -6.014092922210693
    4. '   ' → logprob: -7.514092922210693
    5. '
' → logprob: -10.139092445373535
    6. '	else' → logprob: -11.514092445373535
    7. 'return' → logprob: -14.014092445373535
    8. '```' → logprob: -15.639092445373535
    9. '    
' → logprob: -15.889092445373535
    10. '_else' → logprob: -16.01409339904785

Token 1172: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09297177195549011
    2. '           ' → logprob: -2.9679718017578125
    3. ':
' → logprob: -3.9679718017578125
    4. 'return' → logprob: -5.0929718017578125
    5. ' return' → logprob: -5.3429718017578125
    6. ':' → logprob: -6.2179718017578125
    7. '   ' → logprob: -6.4679718017578125
    8. ':return' → logprob: -6.5929718017578125
    9. '	       ' → logprob: -6.7179718017578125
    10. '	return' → logprob: -7.4679718017578125

Token 1173: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6043921709060669
    2. ' return' → logprob: -1.104392170906067
    3. '       ' → logprob: -2.3543920516967773
    4. '   ' → logprob: -3.6043920516967773
    5. '	return' → logprob: -11.354392051696777
    6. '           ' → logprob: -11.729392051696777
    7. '{return' → logprob: -12.854392051696777
    8. ':return' → logprob: -13.979392051696777
    9. '    ' → logprob: -14.229392051696777
    10. ' ' → logprob: -14.479392051696777

Token 1174: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005079957190901041
    2. ' return' → logprob: -7.750507831573486
    3. '       ' → logprob: -9.500508308410645
    4. '   ' → logprob: -13.500508308410645
    5. '           ' → logprob: -13.750508308410645
    6. '	return' → logprob: -18.125507354736328
    7. '```' → logprob: -18.875507354736328
    8. '
' → logprob: -19.250507354736328
    9. '{return' → logprob: -19.875507354736328
    10. ':return' → logprob: -20.125507354736328

Token 1175: ' pas' (ID: 2173)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -2.15310683415737e-05
    2. ' return' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.50002098083496
    4. '       ' → logprob: -18.62502098083496
    5. '           ' → logprob: -20.50002098083496
    6. '	return' → logprob: -22.62502098083496
    7. '
' → logprob: -23.12502098083496
    8. ' ' → logprob: -23.87502098083496
    9. '```' → logprob: -24.75002098083496
    10. '{return' → logprob: -24.87502098083496

Token 1176: ' prime' (ID: 9197)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7018924355506897
    2. ' (' → logprob: -0.7018924355506897
    3. '(best' → logprob: -4.826892375946045
    4. ' return' → logprob: -8.201892852783203
    5. ' best' → logprob: -8.576892852783203
    6. 'best' → logprob: -9.076892852783203
    7. 'return' → logprob: -10.326892852783203
    8. '   ' → logprob: -10.826892852783203
    9. '(
' → logprob: -11.326892852783203
    10. '(return' → logprob: -11.701892852783203

Token 1177: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6632840037345886
    2. 'return' → logprob: -0.9132840037345886
    3. ' return' → logprob: -2.6632840633392334
    4. '           ' → logprob: -4.913283824920654
    5. '   ' → logprob: -5.413283824920654
    6. '
' → logprob: -6.413283824920654
    7. ':return' → logprob: -8.663284301757812
    8. '{return' → logprob: -9.413284301757812
    9. ':
' → logprob: -9.788284301757812
    10. '	return' → logprob: -9.788284301757812

Token 1178: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3889869153499603
    2. ' return' → logprob: -1.1389869451522827
    3. '       ' → logprob: -6.638987064361572
    4. '           ' → logprob: -7.138987064361572
    5. '   ' → logprob: -11.763986587524414
    6. '	return' → logprob: -12.888986587524414
    7. ' ' → logprob: -14.513986587524414
    8. '               ' → logprob: -15.263986587524414
    9. '        ' → logprob: -15.763986587524414
    10. ':return' → logprob: -16.013986587524414

Token 1179: ' ne' (ID: 453)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008673549629747868
    2. ' return' → logprob: -4.758673667907715
    3. '           ' → logprob: -9.883673667907715
    4. ':return' → logprob: -13.133673667907715
    5. '	return' → logprob: -13.258673667907715
    6. 'eturn' → logprob: -13.258673667907715
    7. '   ' → logprob: -13.633673667907715
    8. '{return' → logprob: -14.383673667907715
    9. '       ' → logprob: -15.008673667907715
    10. '_return' → logprob: -15.508673667907715

Token 1180: ' compte' (ID: 19657)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10038383305072784
    2. ' return' → logprob: -2.350383758544922
    3. 'continue' → logprob: -9.600383758544922
    4. '   ' → logprob: -10.475383758544922
    5. '           ' → logprob: -11.100383758544922
    6. 'eturn' → logprob: -11.475383758544922
    7. ' retourne' → logprob: -11.475383758544922
    8. '_return' → logprob: -11.600383758544922
    9. '       ' → logprob: -11.725383758544922
    10. ' continue' → logprob: -12.225383758544922

Token 1181: ' pas' (ID: 2173)
  Prédit: '(best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.3516031801700592
    2. ' (' → logprob: -1.3516031503677368
    3. '(' → logprob: -3.4766032695770264
    4. ' return' → logprob: -5.851603031158447
    5. '(return' → logprob: -6.726603031158447
    6. 'return' → logprob: -7.101603031158447
    7. '   ' → logprob: -7.226603031158447
    8. ' ' → logprob: -7.601603031158447
    9. 'best' → logprob: -8.726603507995605
    10. ' best' → logprob: -8.976603507995605

Token 1182: ' mais' (ID: 2899)
  Prédit: '(best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.17622052133083344
    2. ' (' → logprob: -2.301220417022705
    3. '(' → logprob: -3.551220417022705
    4. ' return' → logprob: -3.676220417022705
    5. 'return' → logprob: -5.801220417022705
    6. '(return' → logprob: -6.551220417022705
    7. ',' → logprob: -6.676220417022705
    8. ' best' → logprob: -6.926220417022705
    9. ' ,' → logprob: -8.051220893859863
    10. 'best' → logprob: -8.551220893859863

Token 1183: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06841976195573807
    2. ' return' → logprob: -2.8184196949005127
    3. '           ' → logprob: -5.068419933319092
    4. '       ' → logprob: -9.443419456481934
    5. '   ' → logprob: -10.068419456481934
    6. ' retourne' → logprob: -12.818419456481934
    7. '	return' → logprob: -12.943419456481934
    8. '               ' → logprob: -12.943419456481934
    9. 'continue' → logprob: -13.318419456481934
    10. ' ' → logprob: -13.568419456481934

Token 1184: ' garde' (ID: 65309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0550713948905468
    2. 'continue' → logprob: -3.1800713539123535
    3. ' return' → logprob: -4.5550713539123535
    4. ' continue' → logprob: -7.5550713539123535
    5. 'ret' → logprob: -7.8050713539123535
    6. '           ' → logprob: -8.430071830749512
    7. '   ' → logprob: -9.680071830749512
    8. '
' → logprob: -9.680071830749512
    9. 'contin' → logprob: -10.180071830749512
    10. ' retourne' → logprob: -10.180071830749512

Token 1185: ' le' (ID: 505)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.07238610088825226
    2. ' best' → logprob: -2.8223860263824463
    3. '(best' → logprob: -4.572386264801025
    4. ' (' → logprob: -10.697385787963867
    5. '(' → logprob: -12.572385787963867
    6. '	best' → logprob: -13.197385787963867
    7. '   ' → logprob: -13.447385787963867
    8. '_best' → logprob: -14.697385787963867
    9. '       ' → logprob: -15.197385787963867
    10. ' ' → logprob: -15.572385787963867

Token 1186: ' meilleur' (ID: 37552)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00038991993642412126
    2. ' best' → logprob: -7.87539005279541
    3. '(best' → logprob: -11.62539005279541
    4. 'me' → logprob: -15.00039005279541
    5. ' meilleur' → logprob: -16.000389099121094
    6. 'better' → logprob: -16.125389099121094
    7. '	best' → logprob: -16.125389099121094
    8. '```' → logprob: -16.375389099121094
    9. '_best' → logprob: -17.500389099121094
    10. '   ' → logprob: -17.625389099121094

Token 1187: ' chemin' (ID: 45035)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5559899806976318
    2. 'best' → logprob: -1.0559899806976318
    3. ' return' → logprob: -2.680989980697632
    4. ' best' → logprob: -5.305990219116211
    5. '(best' → logprob: -6.305990219116211
    6. ' =' → logprob: -6.805990219116211
    7. '   ' → logprob: -7.430990219116211
    8. '=' → logprob: -7.430990219116211
    9. ',' → logprob: -7.680990219116211
    10. '
' → logprob: -8.305990219116211

Token 1188: ' enfants' (ID: 24681)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7076629400253296
    2. ' return' → logprob: -0.9576629400253296
    3. 'return' → logprob: -2.457663059234619
    4. '           ' → logprob: -4.082663059234619
    5. '   ' → logprob: -4.207663059234619
    6. '
' → logprob: -5.582663059234619
    7. ',' → logprob: -6.457663059234619
    8. '{return' → logprob: -8.707662582397461
    9. '(return' → logprob: -9.457662582397461
    10. '```' → logprob: -9.832662582397461

Token 1189: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.735400378704071
    2. '           ' → logprob: -1.2354004383087158
    3. 'return' → logprob: -1.8604004383087158
    4. ' return' → logprob: -2.610400438308716
    5. '   ' → logprob: -7.610400199890137
    6. ',' → logprob: -9.110400199890137
    7. '
' → logprob: -9.735400199890137
    8. '	return' → logprob: -10.110400199890137
    9. ':return' → logprob: -10.235400199890137
    10. '```' → logprob: -10.360400199890137

Token 1190: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0203306674957275
    2. ' return' → logprob: -1.2703306674957275
    3. '   ' → logprob: -1.7703306674957275
    4. 'return' → logprob: -1.8953306674957275
    5. ':return' → logprob: -4.270330429077148
    6. '           ' → logprob: -4.895330429077148
    7. '```' → logprob: -5.270330429077148
    8. ':
' → logprob: -5.645330429077148
    9. '
' → logprob: -5.895330429077148
    10. '{return' → logprob: -6.645330429077148

Token 1191: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001322639436693862
    2. ' return' → logprob: -9.00013256072998
    3. '           ' → logprob: -12.00013256072998
    4. '       ' → logprob: -13.00013256072998
    5. '
' → logprob: -15.25013256072998
    6. '   ' → logprob: -15.50013256072998
    7. '```' → logprob: -17.875131607055664
    8. '	return' → logprob: -19.250131607055664
    9. '{return' → logprob: -19.625131607055664
    10. '               ' → logprob: -20.125131607055664

Token 1192: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.038134556263685226
    2. ' best' → logprob: -3.2881345748901367
    3. '(best' → logprob: -9.288134574890137
    4. '	best' → logprob: -15.413134574890137
    5. ' (' → logprob: -15.788134574890137
    6. '(' → logprob: -16.28813362121582
    7. '   ' → logprob: -16.66313362121582
    8. 'b' → logprob: -17.41313362121582
    9. ' ' → logprob: -17.78813362121582
    10. '_best' → logprob: -18.28813362121582

Token 1193: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1194: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.026734720915555954
    2. 'for' → logprob: -4.651734828948975
    3. '#' → logprob: -5.526734828948975
    4. '<|end|>' → logprob: -5.651734828948975
    5. 'return' → logprob: -5.776734828948975
    6. '```' → logprob: -5.901734828948975
    7. '
' → logprob: -6.276734828948975
    8. 'm' → logprob: -7.526734828948975
    9. 'def' → logprob: -7.901734828948975
    10. ' if' → logprob: -8.901734352111816

Token 1195: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0021023214794695377
    2. 'result' → logprob: -6.252102375030518
    3. '   ' → logprob: -8.75210189819336
    4. ' return' → logprob: -11.25210189819336
    5. 'if' → logprob: -13.50210189819336
    6. 'start' → logprob: -14.62710189819336
    7. 'res' (adapté à ' res') → logprob: -14.75210189819336
    8. 'ret' → logprob: -15.00210189819336
    9. 'results' → logprob: -17.12710189819336
    10. '```' → logprob: -17.12710189819336

Token 1196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.367201566696167
    2. '=' → logprob: -1.242201566696167
    3. '(' → logprob: -4.117201805114746
    4. '(res' → logprob: -7.367201805114746
    5. '=res' → logprob: -7.617201805114746
    6. ' ' → logprob: -8.242201805114746
    7. 'res' → logprob: -8.617201805114746
    8. '_' → logprob: -8.617201805114746
    9. '_res' → logprob: -8.742201805114746
    10. '   ' → logprob: -8.742201805114746

Token 1197: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.002187376143410802
    2. ' dfs' → logprob: -6.127187252044678
    3. '   ' → logprob: -13.377187728881836
    4. 'df' → logprob: -14.877187728881836
    5. 'd' → logprob: -15.377187728881836
    6. 'DFS' → logprob: -16.127187728881836
    7. '(d' → logprob: -18.252187728881836
    8. '  ' → logprob: -18.252187728881836
    9. ' ' → logprob: -18.752187728881836
    10. 'ds' → logprob: -19.252187728881836

Token 1198: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.7689099018462e-05
    2. '(' → logprob: -9.37508773803711
    3. '(
' → logprob: -12.87508773803711
    4. 'n' → logprob: -15.62508773803711
    5. '((' → logprob: -16.87508773803711
    6. ' (' → logprob: -18.25008773803711
    7. '(start' → logprob: -18.75008773803711
    8. '(m' → logprob: -19.75008773803711
    9. ' n' → logprob: -20.12508773803711
    10. '(int' → logprob: -20.12508773803711

Token 1199: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014163863845169544
    2. ')
' → logprob: -4.264163970947266
    3. ')
' → logprob: -15.264163970947266
    4. ' )' → logprob: -16.639163970947266
    5. ')

' → logprob: -17.389163970947266
    6. '   ' → logprob: -17.639163970947266
    7. ')return' → logprob: -19.264163970947266
    8. ')m' → logprob: -19.514163970947266
    9. ' )
' → logprob: -19.889163970947266
    10. '),' → logprob: -20.014163970947266

Token 1200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07892657816410065
    2. 'return' → logprob: -2.5789265632629395
    3. ' return' → logprob: -10.453927040100098
    4. '```' → logprob: -12.703927040100098
    5. '
' → logprob: -12.953927040100098
    6. '	return' → logprob: -13.453927040100098
    7. '    
' → logprob: -14.203927040100098
    8. '{return' → logprob: -15.203927040100098
    9. '#' → logprob: -16.57892608642578
    10. 'print' → logprob: -16.82892608642578

Token 1201: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03847885504364967
    2. '   ' → logprob: -3.2884788513183594
    3. 'if' → logprob: -7.788478851318359
    4. ' return' → logprob: -10.78847885131836
    5. '```' → logprob: -13.66347885131836
    6. '
' → logprob: -14.28847885131836
    7. '	return' → logprob: -14.66347885131836
    8. ' if' → logprob: -16.91347885131836
    9. '    
' → logprob: -17.41347885131836
    10. 'print' → logprob: -19.16347885131836

Token 1202: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0011893989285454154
    2. 'if' → logprob: -6.751189231872559
    3. '   ' → logprob: -11.001189231872559
    4. ' return' → logprob: -13.001189231872559
    5. '```' → logprob: -16.001190185546875
    6. 'print' → logprob: -16.126190185546875
    7. ' if' → logprob: -18.126190185546875
    8. 'ret' → logprob: -20.626190185546875
    9. '``' → logprob: -21.001190185546875
    10. '	return' → logprob: -21.126190185546875

Token 1203: ' pas' (ID: 2173)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.12692958116531372
    2. ' res' → logprob: -2.126929521560669
    3. 'is' → logprob: -14.75192928314209
    4. ' not' → logprob: -14.75192928314209
    5. '   ' → logprob: -15.25192928314209
    6. 'not' → logprob: -15.37692928314209
    7. '(res' → logprob: -15.50192928314209
    8. '	res' → logprob: -16.126930236816406
    9. ' is' → logprob: -16.876930236816406
    10. '_res' → logprob: -18.126930236816406

Token 1204: ' de' (ID: 334)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.2018681764602661
    2. 'res' → logprob: -1.7018681764602661
    3. '(res' → logprob: -9.201868057250977
    4. 'rés' → logprob: -9.201868057250977
    5. ' is' → logprob: -9.451868057250977
    6. '_res' → logprob: -9.576868057250977
    7. 'is' → logprob: -10.451868057250977
    8. ' rés' → logprob: -11.076868057250977
    9. '	res' → logprob: -11.201868057250977
    10. '_prime' → logprob: -11.826868057250977

Token 1205: ' chemin' (ID: 45035)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.38718149065971375
    2. ' res' → logprob: -1.1371815204620361
    3. 'prime' → logprob: -9.512181282043457
    4. 'rés' → logprob: -9.762181282043457
    5. 'is' → logprob: -10.012181282043457
    6. '(res' → logprob: -10.012181282043457
    7. '_res' → logprob: -10.887181282043457
    8. ' prime' → logprob: -10.887181282043457
    9. ' is' → logprob: -11.262181282043457
    10. '_prime' → logprob: -11.637181282043457

Token 1206: ' avec' (ID: 3937)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.0610506534576416
    2. ' or' → logprob: -1.3110506534576416
    3. '   ' → logprob: -1.4360506534576416
    4. 'res' → logprob: -2.9360506534576416
    5. ' ou' → logprob: -3.1860506534576416
    6. 'ou' → logprob: -3.6860506534576416
    7. 'with' → logprob: -4.6860504150390625
    8. ':' → logprob: -5.8110504150390625
    9. ' trouvé' → logprob: -5.8110504150390625
    10. 'found' → logprob: -6.1860504150390625

Token 1207: ' primes' (ID: 104042)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11986712366342545
    2. ' res' → logprob: -2.2448670864105225
    3. 'is' → logprob: -5.744867324829102
    4. '1' → logprob: -6.244867324829102
    5. '0' → logprob: -7.619867324829102
    6. '[' → logprob: -7.744867324829102
    7. 'rés' → logprob: -7.994867324829102
    8. 'prime' → logprob: -8.744867324829102
    9. ' is' → logprob: -8.994867324829102
    10. ' ' → logprob: -9.744867324829102

Token 1208: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6836256980895996
    2. '   ' → logprob: -1.0586256980895996
    3. ' if' → logprob: -2.1836256980895996
    4. '[' → logprob: -4.0586256980896
    5. '==' → logprob: -4.6836256980896
    6. ' ==' → logprob: -4.9336256980896
    7. ',' → logprob: -6.6836256980896
    8. ' =' → logprob: -8.808626174926758
    9. '=' → logprob: -9.308626174926758
    10. ':' → logprob: -9.433626174926758

Token 1209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016711721196770668
    2. ' if' → logprob: -4.266711711883545
    3. 'if' → logprob: -6.141711711883545
    4. '
' → logprob: -8.516712188720703
    5. ':' → logprob: -9.891712188720703
    6. ' =' → logprob: -10.391712188720703
    7. ',' → logprob: -10.641712188720703
    8. '[' → logprob: -11.141712188720703
    9. '	if' → logprob: -11.141712188720703
    10. '    
' → logprob: -11.516712188720703

Token 1210: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05582791939377785
    2. ' if' → logprob: -3.3058278560638428
    3. '   ' → logprob: -4.055828094482422
    4. 'return' → logprob: -8.180828094482422
    5. '
' → logprob: -10.805828094482422
    6. ' return' → logprob: -11.930828094482422
    7. '	if' → logprob: -14.430828094482422
    8. '```' → logprob: -14.680828094482422
    9. '    
' → logprob: -16.305828094482422
    10. ' 
' → logprob: -17.805828094482422

Token 1211: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03804171830415726
    2. ' res' → logprob: -3.288041830062866
    3. '   ' → logprob: -15.913042068481445
    4. '(res' → logprob: -16.163042068481445
    5. 'not' → logprob: -17.538042068481445
    6. '	res' → logprob: -17.663042068481445
    7. ' not' → logprob: -18.413042068481445
    8. '_res' → logprob: -19.288042068481445
    9. '0' → logprob: -20.663042068481445
    10. ' ' → logprob: -20.663042068481445

Token 1212: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017958412354346365
    2. '==' → logprob: -8.750179290771484
    3. ' ==' → logprob: -11.125179290771484
    4. '==(' → logprob: -12.000179290771484
    5. '==
' → logprob: -16.000179290771484
    6. ' [' → logprob: -18.000179290771484
    7. '```' → logprob: -18.625179290771484
    8. '
' → logprob: -18.750179290771484
    9. '[
' → logprob: -19.500179290771484
    10. '=' → logprob: -20.375179290771484

Token 1213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.875008583068848
    3. '[' → logprob: -13.750008583068848
    4. '1' → logprob: -14.750008583068848
    5. '==' → logprob: -16.500009536743164
    6. '=' → logprob: -16.750009536743164
    7. '۰' → logprob: -16.875009536743164
    8. '
' → logprob: -17.500009536743164
    9. '   ' → logprob: -17.500009536743164
    10. '```' → logprob: -17.687509536743164

Token 1214: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1429397165775299
    2. ' ==' → logprob: -2.017939805984497
    3. '=' → logprob: -8.892939567565918
    4. '==
' → logprob: -9.767939567565918
    5. ')' → logprob: -10.642939567565918
    6. ')==' → logprob: -10.767939567565918
    7. ']==' → logprob: -11.267939567565918
    8. '===' → logprob: -12.517939567565918
    9. '>' → logprob: -13.267939567565918
    10. ' =' → logprob: -13.642939567565918

Token 1215: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03804642707109451
    2. ' ==' → logprob: -3.288046360015869
    3. '==
' → logprob: -12.663046836853027
    4. '=' → logprob: -13.538046836853027
    5. '===' → logprob: -15.913046836853027
    6. '<=' → logprob: -16.03804588317871
    7. ')==' → logprob: -16.16304588317871
    8. ']==' → logprob: -16.28804588317871
    9. '()==' → logprob: -17.53804588317871
    10. '```' → logprob: -17.53804588317871

Token 1216: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.750001907348633
    4. '۰' → logprob: -21.000001907348633
    5. '```' → logprob: -21.750001907348633
    6. '00' → logprob: -23.375001907348633
    7. '=' → logprob: -23.750001907348633
    8. '０' → logprob: -23.750001907348633
    9. '  ' → logprob: -24.250001907348633
    10. '>' → logprob: -24.500001907348633

Token 1217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.625
    4. '۰' → logprob: -19.875
    5. '```' → logprob: -21.125
    6. '０' → logprob: -21.875
    7. '00' → logprob: -23.0
    8. '  ' → logprob: -23.25
    9. '٠' → logprob: -23.375
    10. '>' → logprob: -23.625

Token 1218: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4271796643733978
    2. '   ' → logprob: -1.6771796941757202
    3. ':' → logprob: -1.9271796941757202
    4. '       ' → logprob: -5.05217981338501
    5. ':return' → logprob: -5.05217981338501
    6. ' and' → logprob: -6.55217981338501
    7. ',' → logprob: -7.92717981338501
    8. ' return' → logprob: -8.177179336547852
    9. '	return' → logprob: -8.927179336547852
    10. '  ' → logprob: -10.552179336547852

Token 1219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020587904378771782
    2. '   ' → logprob: -3.895587921142578
    3. ' return' → logprob: -11.020587921142578
    4. 'return' → logprob: -11.395587921142578
    5. '	   ' → logprob: -12.395587921142578
    6. '
' → logprob: -12.645587921142578
    7. '	' → logprob: -12.895587921142578
    8. '	return' → logprob: -13.395587921142578
    9. '```' → logprob: -13.520587921142578
    10. '           ' → logprob: -13.770587921142578

Token 1220: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05696398392319679
    2. ' return' → logprob: -3.3069639205932617
    3. '       ' → logprob: -4.181963920593262
    4. '   ' → logprob: -6.056963920593262
    5. '	return' → logprob: -6.806963920593262
    6. 'print' (adapté à ' print') → logprob: -11.556963920593262
    7. '
' → logprob: -11.681963920593262
    8. '{return' → logprob: -12.556963920593262
    9. 'eturn' → logprob: -13.431963920593262
    10. '	   ' → logprob: -13.556963920593262

Token 1221: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018058160319924355
    2. '("' → logprob: -4.1430583000183105
    3. '0' → logprob: -6.6430583000183105
    4. '(-' → logprob: -7.5180583000183105
    5. '('' → logprob: -8.768057823181152
    6. '("-' → logprob: -11.143057823181152
    7. '"' → logprob: -12.893057823181152
    8. '(
' → logprob: -13.768057823181152
    9. '((' → logprob: -14.143057823181152
    10. '-' → logprob: -14.893057823181152

Token 1222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008292806334793568
    2. '"' → logprob: -5.5082926750183105
    3. '(' → logprob: -6.5082926750183105
    4. '-' → logprob: -6.5082926750183105
    5. 'auc' → logprob: -7.8832926750183105
    6. 'A' → logprob: -8.258293151855469
    7. 'None' → logprob: -9.008293151855469
    8. '"No' → logprob: -9.508293151855469
    9. 'No' → logprob: -9.633293151855469
    10. '"A' → logprob: -9.758293151855469

Token 1223: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05543404817581177
    2. '")' → logprob: -3.555433988571167
    3. '0' → logprob: -3.805433988571167
    4. '")
' → logprob: -6.055434226989746
    5. ' ")' → logprob: -7.680434226989746
    6. ' ")
' → logprob: -9.180434226989746
    7. '\n' → logprob: -9.555434226989746
    8. '")
' → logprob: -10.680434226989746
    9. '"' → logprob: -10.930434226989746
    10. '1' → logprob: -11.180434226989746

Token 1224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '")' → logprob: -17.5
    4. '"' → logprob: -17.625
    5. '00' → logprob: -17.625
    6. '000' → logprob: -18.125
    7. '")
' → logprob: -18.125
    8. '```' → logprob: -18.25
    9. '-' → logprob: -19.125
    10. '
' → logprob: -19.75

Token 1225: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.5761887431144714
    2. '")' → logprob: -0.8261887431144714
    3. '")
' → logprob: -8.451189041137695
    4. ')")
' → logprob: -10.451189041137695
    5. ')' → logprob: -12.451189041137695
    6. ')")' → logprob: -13.826189041137695
    7. ')
' → logprob: -14.201189041137695
    8. '')' → logprob: -14.951189041137695
    9. '')
' → logprob: -15.826189041137695
    10. '")

' → logprob: -15.951189041137695

Token 1226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006933739641681314
    2. '       ' → logprob: -7.375693321228027
    3. 'else' → logprob: -9.750693321228027
    4. 'return' → logprob: -12.000693321228027
    5. '
' → logprob: -14.250693321228027
    6. '```' → logprob: -14.750693321228027
    7. ' else' → logprob: -15.000693321228027
    8. '<|end|>' → logprob: -15.250693321228027
    9. '	return' → logprob: -15.875693321228027
    10. '    
' → logprob: -16.000694274902344

Token 1227: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16062286496162415
    2. 'else' (adapté à ' else') → logprob: -1.9106228351593018
    3. ' else' → logprob: -7.910623073577881
    4. 'elif' → logprob: -10.785622596740723
    5. '	else' → logprob: -11.910622596740723
    6. '
' → logprob: -12.910622596740723
    7. ' ' → logprob: -14.410622596740723
    8. '```' → logprob: -15.160622596740723
    9. '    
' → logprob: -15.410622596740723
    10. '       ' → logprob: -15.535622596740723

Token 1228: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5538477301597595
    2. ':' → logprob: -1.0538477897644043
    3. ':
' → logprob: -2.9288477897644043
    4. '   ' → logprob: -3.8038477897644043
    5. ' :' → logprob: -9.053847312927246
    6. ' :
' → logprob: -9.303847312927246
    7. '
' → logprob: -9.553847312927246
    8. ',' → logprob: -9.553847312927246
    9. '```' → logprob: -9.678847312927246
    10. '           ' → logprob: -9.678847312927246

Token 1229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008619539439678192
    2. '   ' → logprob: -4.75861930847168
    3. 'print' → logprob: -13.25861930847168
    4. '```' → logprob: -13.25861930847168
    5. ' print' → logprob: -13.88361930847168
    6. '           ' → logprob: -15.38361930847168
    7. '     ' → logprob: -16.00861930847168
    8. '	' → logprob: -16.88361930847168
    9. '      ' → logprob: -16.88361930847168
    10. '`' → logprob: -16.88361930847168

Token 1230: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.024408593773841858
    2. '   ' → logprob: -4.52440881729126
    3. ' print' → logprob: -4.52440881729126
    4. '       ' → logprob: -6.02440881729126
    5. '```' → logprob: -11.774408340454102
    6. '	print' → logprob: -12.649408340454102
    7. '`' → logprob: -15.524408340454102
    8. ' ' → logprob: -15.899408340454102
    9. '     ' → logprob: -16.0244083404541
    10. '           ' → logprob: -16.1494083404541

Token 1231: '(res' (ID: 8331)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.47422948479652405
    2. '(res' → logprob: -0.9742294549942017
    3. '(' → logprob: -8.84922981262207
    4. '(*' → logprob: -12.22422981262207
    5. '("{}' → logprob: -12.97422981262207
    6. '(str' → logprob: -14.34922981262207
    7. '("' → logprob: -14.97422981262207
    8. 'f' → logprob: -15.09922981262207
    9. '((' → logprob: -15.34922981262207
    10. 'res' → logprob: -15.47422981262207

Token 1232: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -13.750000953674316
    3. ')
' → logprob: -17.125001907348633
    4. '
' → logprob: -17.625001907348633
    5. '"' → logprob: -18.500001907348633
    6. '```' → logprob: -18.500001907348633
    7. ' [' → logprob: -18.625001907348633
    8. '(' → logprob: -19.125001907348633
    9. ' ' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.500001907348633

Token 1233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.375001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '
' → logprob: -16.250001907348633
    5. '1' → logprob: -16.875001907348633
    6. '   ' → logprob: -18.000001907348633
    7. ')' → logprob: -20.125001907348633
    8. '```' → logprob: -20.875001907348633
    9. '#' → logprob: -21.000001907348633
    10. '    ' → logprob: -21.250001907348633

Token 1234: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035536551149562
    2. ',res' → logprob: -8.00035572052002
    3. ' ,' → logprob: -10.87535572052002
    4. ',f' → logprob: -14.87535572052002
    5. ',"' → logprob: -15.25035572052002
    6. ',end' → logprob: -15.25035572052002
    7. ',
' → logprob: -16.750354766845703
    8. 'res' → logprob: -17.750354766845703
    9. ',len' → logprob: -17.875354766845703
    10. '   ' → logprob: -17.875354766845703

Token 1235: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00033546582562848926
    2. ' res' → logprob: -8.000335693359375
    3. '"' → logprob: -17.625335693359375
    4. '(res' → logprob: -19.000335693359375
    5. '$res' → logprob: -19.125335693359375
    6. 'r' → logprob: -19.375335693359375
    7. '	res' → logprob: -19.875335693359375
    8. 'resi' → logprob: -20.250335693359375
    9. ''' → logprob: -20.375335693359375
    10. 'ress' → logprob: -20.500335693359375

Token 1236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '.' → logprob: -18.375
    3. ')' → logprob: -18.75
    4. '[
' → logprob: -18.875
    5. '```' → logprob: -18.875
    6. ')[' → logprob: -19.5
    7. '-' → logprob: -20.0
    8. '   ' → logprob: -20.5
    9. '1' → logprob: -20.875
    10. '[-' → logprob: -21.25

Token 1237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. '
' → logprob: -16.75
    4. '0' → logprob: -17.375
    5. '```' → logprob: -17.875
    6. '   ' → logprob: -18.0
    7. '１' → logprob: -18.5
    8. ']' → logprob: -19.0
    9. '۱' → logprob: -19.625
    10. '-' → logprob: -19.625

Token 1238: '])


' (ID: 111091)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -13.25000286102295
    3. '")' → logprob: -13.75000286102295
    4. ')")' → logprob: -16.375003814697266
    5. ' )' → logprob: -17.375003814697266
    6. '))' → logprob: -18.125003814697266
    7. '}' → logprob: -18.125003814697266
    8. '})' → logprob: -18.375003814697266
    9. '),' → logprob: -18.375003814697266
    10. ')}' → logprob: -18.500003814697266

Token 1239: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0013816634891554713
    2. 'for' → logprob: -6.626381874084473
    3. ' if' → logprob: -10.876381874084473
    4. '```' → logprob: -11.501381874084473
    5. 'n' → logprob: -11.626381874084473
    6. 't' → logprob: -12.376381874084473
    7. 'm' → logprob: -12.376381874084473
    8. 'def' → logprob: -12.751381874084473
    9. 'data' → logprob: -13.001381874084473
    10. '#' → logprob: -13.126381874084473

Token 1240: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004110103938728571
    2. ' main' → logprob: -5.504110336303711
    3. '__' → logprob: -10.629110336303711
    4. 'input' → logprob: -12.629110336303711
    5. '_main' → logprob: -13.504110336303711
    6. 'int' → logprob: -13.629110336303711
    7. '	main' → logprob: -14.379110336303711
    8. 'process' → logprob: -15.004110336303711
    9. 'parse' → logprob: -15.629110336303711
    10. 'read' → logprob: -15.629110336303711

Token 1241: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.023289266973733902
    2. '():
' → logprob: -3.773289203643799
    3. ' ():' → logprob: -10.773289680480957
    4. '()' → logprob: -11.273289680480957
    5. '():
' → logprob: -11.773289680480957
    6. '():

' → logprob: -13.398289680480957
    7. '(' → logprob: -15.148289680480957
    8. '_' → logprob: -15.773289680480957
    9. ':' → logprob: -16.02328872680664
    10. '()>' → logprob: -16.14828872680664

Token 1242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015195594169199467
    2. '```' → logprob: -5.265195369720459
    3. 'import' → logprob: -5.515195369720459
    4. ' line' → logprob: -7.015195369720459
    5. '	line' → logprob: -7.515195369720459
    6. '    
' → logprob: -7.640195369720459
    7. 'for' → logprob: -7.765195369720459
    8. '<|end|>' → logprob: -7.890195369720459
    9. ' lines' → logprob: -8.265195846557617
    10. '	lines' → logprob: -8.390195846557617

Token 1243: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.4674177169799805
    2. '   ' → logprob: -1.5924177169799805
    3. 'import' → logprob: -1.7174177169799805
    4. ' for' → logprob: -1.7174177169799805
    5. 't' → logprob: -2.8424177169799805
    6. 'input' → logprob: -2.9674177169799805
    7. ' input' → logprob: -3.0924177169799805
    8. ' import' → logprob: -3.9674177169799805
    9. ' t' → logprob: -4.7174177169799805
    10. 'n' → logprob: -4.9674177169799805

Token 1244: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3134588897228241
    2. ' line' → logprob: -1.3134589195251465
    3. 'ligne' → logprob: -9.188458442687988
    4. '	line' → logprob: -10.063458442687988
    5. ' ligne' → logprob: -10.188458442687988
    6. 'l' → logprob: -11.438458442687988
    7. '(line' → logprob: -13.188458442687988
    8. '_line' → logprob: -13.813458442687988
    9. 'lin' → logprob: -15.563458442687988
    10. '=line' → logprob: -15.563458442687988

Token 1245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04867968335747719
    2. 'in' → logprob: -3.0486795902252197
    3. '()' → logprob: -9.79867935180664
    4. '_in' → logprob: -11.67367935180664
    5. ' =' → logprob: -12.17367935180664
    6. 's' → logprob: -12.42367935180664
    7. ' ' → logprob: -12.92367935180664
    8. '=' → logprob: -12.92367935180664
    9. '():
' → logprob: -13.17367935180664
    10. 'line' → logprob: -13.17367935180664

Token 1246: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0004311460361350328
    2. ' sys' → logprob: -7.750431060791016
    3. '=sys' → logprob: -14.500431060791016
    4. '	sys' → logprob: -16.750431060791016
    5. '(sys' → logprob: -17.500431060791016
    6. 'stdin' → logprob: -20.375431060791016
    7. '_sys' → logprob: -21.625431060791016
    8. 'import' → logprob: -22.375431060791016
    9. 'input' → logprob: -22.500431060791016
    10. '```' → logprob: -22.625431060791016

Token 1247: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0043251956813037395
    2. 'stdin' → logprob: -5.8793253898620605
    3. '.readline' → logprob: -6.7543253898620605
    4. '(stdin' → logprob: -8.129324913024902
    5. '.' → logprob: -10.004324913024902
    6. '.stdout' → logprob: -13.129324913024902
    7. ' stdin' → logprob: -13.129324913024902
    8. '_input' → logprob: -13.754324913024902
    9. 'import' → logprob: -14.004324913024902
    10. '.argv' → logprob: -14.004324913024902

Token 1248: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.15127384662628174
    2. '().' → logprob: -3.026273727416992
    3. '.readline' → logprob: -3.776273727416992
    4. '():' → logprob: -4.026273727416992
    5. ' in' → logprob: -4.776273727416992
    6. ':
' → logprob: -5.026273727416992
    7. ':' → logprob: -5.151273727416992
    8. '.rstrip' → logprob: -5.151273727416992
    9. '.strip' → logprob: -5.526273727416992
    10. '   ' → logprob: -5.526273727416992

Token 1249: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024406595912296325
    2. '    
' → logprob: -8.500244140625
    3. '       ' → logprob: -10.750244140625
    4. 'tokens' → logprob: -11.875244140625
    5. ' if' → logprob: -12.625244140625
    6. '```' → logprob: -12.625244140625
    7. '   ' → logprob: -14.000244140625
    8. ' line' → logprob: -14.500244140625
    9. '   
' → logprob: -14.750244140625
    10. '        
' → logprob: -14.750244140625

Token 1250: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4422781467437744
    2. 'if' (adapté à ' if') → logprob: -1.4422781467437744
    3. '   ' → logprob: -2.9422781467437744
    4. ' line' → logprob: -3.4422781467437744
    5. ' if' → logprob: -3.5672781467437744
    6. '       ' → logprob: -4.942277908325195
    7. '	line' → logprob: -7.317277908325195
    8. 'tokens' → logprob: -9.817277908325195
    9. '=line' → logprob: -10.067277908325195
    10. 'parts' → logprob: -10.317277908325195

Token 1251: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.049214668571949005
    2. ' line' → logprob: -3.5492146015167236
    3. 'not' → logprob: -4.049214839935303
    4. 'line' → logprob: -6.299214839935303
    5. '=line' → logprob: -13.299214363098145
    6. ' ' → logprob: -15.174214363098145
    7. '#line' → logprob: -16.04921531677246
    8. '	line' → logprob: -16.67421531677246
    9. '(line' → logprob: -17.54921531677246
    10. '	not' → logprob: -17.92421531677246

Token 1252: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.005857216659933329
    2. '.startswith' → logprob: -5.505856990814209
    3. '==' → logprob: -7.505856990814209
    4. '.' → logprob: -7.630856990814209
    5. '.rstrip' → logprob: -8.255857467651367
    6. 'strip' → logprob: -8.380857467651367
    7. ' ==' → logprob: -9.880857467651367
    8. 'startswith' → logprob: -10.130857467651367
    9. '_strip' → logprob: -10.380857467651367
    10. '(strip' → logprob: -10.880857467651367

Token 1253: '()' (ID: 416)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.1627381145954132
    2. '()' → logprob: -1.9127380847930908
    3. '==' → logprob: -6.03773832321167
    4. '():
' → logprob: -9.287737846374512
    5. ' ==' → logprob: -11.162737846374512
    6. '()=="' → logprob: -11.162737846374512
    7. '():' → logprob: -13.287737846374512
    8. '```' → logprob: -15.537737846374512
    9. ']==' → logprob: -15.787737846374512
    10. '===' → logprob: -15.787737846374512

Token 1254: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0068457345478236675
    2. ' ==' → logprob: -5.006845951080322
    3. '()==' → logprob: -9.131845474243164
    4. '==
' → logprob: -11.256845474243164
    5. '=="' → logprob: -13.006845474243164
    6. ')==' → logprob: -13.131845474243164
    7. '===' → logprob: -13.256845474243164
    8. '=='' → logprob: -13.631845474243164
    9. ']==' → logprob: -13.756845474243164
    10. '=' → logprob: -14.006845474243164

Token 1255: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7571989297866821
    2. '"":' → logprob: -1.0071989297866821
    3. '''' → logprob: -2.5071988105773926
    4. '""' → logprob: -2.7571988105773926
    5. ''' → logprob: -3.8821988105773926
    6. ''ex' → logprob: -8.88219928741455
    7. ' "":
' → logprob: -10.38219928741455
    8. ''end' → logprob: -11.75719928741455
    9. '":' → logprob: -12.25719928741455
    10. ''t' → logprob: -12.75719928741455

Token 1256: '':' (ID: 2337)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.856718122959137
    2. '""' → logprob: -1.2317180633544922
    3. ''' → logprob: -2.231718063354492
    4. '"":' → logprob: -2.856718063354492
    5. '"' → logprob: -2.981718063354492
    6. '':' → logprob: -3.106718063354492
    7. '':
' → logprob: -4.356718063354492
    8. '0' → logprob: -4.856718063354492
    9. '":' → logprob: -6.481718063354492
    10. ' "":
' → logprob: -7.856718063354492

Token 1257: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055003587156534195
    2. '       ' → logprob: -2.9300036430358887
    3. '	       ' → logprob: -10.18000316619873
    4. '		' → logprob: -10.80500316619873
    5. 'break' → logprob: -11.05500316619873
    6. ' break' → logprob: -11.18000316619873
    7. '               ' → logprob: -11.55500316619873
    8. '	   ' → logprob: -11.93000316619873
    9. '
' → logprob: -12.18000316619873
    10. '   ' → logprob: -12.93000316619873

Token 1258: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38825884461402893
    2. 'break' → logprob: -1.1382588148117065
    3. ' break' → logprob: -6.888258934020996
    4. '       ' → logprob: -9.013258934020996
    5. 'continue' → logprob: -9.138258934020996
    6. 'return' → logprob: -10.013258934020996
    7. '		' → logprob: -10.138258934020996
    8. '	break' → logprob: -10.513258934020996
    9. '               ' → logprob: -11.513258934020996
    10. '	       ' → logprob: -11.763258934020996

Token 1259: ' Ign' (ID: 50047)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.37818560004234314
    2. '       ' → logprob: -1.3781856298446655
    3. '           ' → logprob: -2.878185510635376
    4. ' break' → logprob: -5.878185749053955
    5. 'continue' → logprob: -6.003185749053955
    6. '	break' → logprob: -6.878185749053955
    7. 'return' → logprob: -9.128185272216797
    8. '	       ' → logprob: -9.753185272216797
    9. '		' → logprob: -10.378185272216797
    10. '```' → logprob: -10.628185272216797

Token 1260: 'orer' (ID: 13634)
  Prédit: 'ore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ore' → logprob: -0.029866881668567657
    2. 'orer' → logprob: -3.529866933822632
    3. 'or' → logprob: -9.404867172241211
    4. '```' → logprob: -11.904867172241211
    5. 'оре' → logprob: -12.154867172241211
    6. 'orre' → logprob: -12.529867172241211
    7. 'ORE' → logprob: -12.779867172241211
    8. 'orne' → logprob: -13.029867172241211
    9. 'oref' → logprob: -13.154867172241211
    10. 'ored' → logprob: -13.154867172241211

Token 1261: ' lignes' (ID: 81687)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.07702681422233582
    2. ' continue' → logprob: -3.202026844024658
    3. '
' → logprob: -3.952026844024658
    4. 'contin' → logprob: -5.077026844024658
    5. '   ' → logprob: -5.952026844024658
    6. '<|end|>' → logprob: -7.077026844024658
    7. '#' → logprob: -7.202026844024658
    8. '       ' → logprob: -7.327026844024658
    9. '    ' → logprob: -7.952026844024658
    10. '	continue' → logprob: -7.952026844024658

Token 1262: ' v' (ID: 323)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3693370521068573
    2. 'continue' → logprob: -1.2443370819091797
    3. ' continue' → logprob: -4.11933708190918
    4. '           ' → logprob: -5.99433708190918
    5. 'contin' → logprob: -7.74433708190918
    6. ',' → logprob: -7.99433708190918
    7. '	continue' → logprob: -8.36933708190918
    8. ' continues' → logprob: -8.86933708190918
    9. ':' → logprob: -8.99433708190918
    10. '   ' → logprob: -8.99433708190918

Token 1263: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.0019036511657759547
    2. 'ide' → logprob: -6.376903533935547
    3. 'id' → logprob: -9.001903533935547
    4. '
' → logprob: -10.876903533935547
    5. 'i' → logprob: -11.001903533935547
    6. 'a' → logprob: -11.126903533935547
    7. '```' → logprob: -11.626903533935547
    8. 'al' → logprob: -12.376903533935547
    9. 'identes' → logprob: -13.126903533935547
    10. '   ' → logprob: -13.376903533935547

Token 1264: ' évent' (ID: 80346)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014721262268722057
    2. '       ' → logprob: -6.751471996307373
    3. ' continue' → logprob: -8.876472473144531
    4. ':' → logprob: -9.501472473144531
    5. ':
' → logprob: -10.501472473144531
    6. 'continue' → logprob: -10.876472473144531
    7. '		' → logprob: -11.251472473144531
    8. ',' → logprob: -11.501472473144531
    9. '	       ' → logprob: -11.501472473144531
    10. '               ' → logprob: -13.501472473144531

Token 1265: 'uelles' (ID: 60819)
  Prédit: 'uelles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uelles' → logprob: -0.8321623802185059
    2. 'uellement' → logprob: -1.3321623802185059
    3. 'ent' → logprob: -2.582162380218506
    4. 'uelle' → logprob: -2.707162380218506
    5. 'uel' → logprob: -3.457162380218506
    6. 'u' → logprob: -3.582162380218506
    7. 'ue' → logprob: -3.707162380218506
    8. '   ' → logprob: -3.957162380218506
    9. 'ivement' → logprob: -4.207162380218506
    10. 'ues' → logprob: -4.707162380218506

Token 1266: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22948546707630157
    2. '       ' → logprob: -1.6044855117797852
    3. ':
' → logprob: -6.354485511779785
    4. ':' → logprob: -6.604485511779785
    5. ' continue' → logprob: -7.854485511779785
    6. ',' → logprob: -8.354485511779785
    7. 'continue' → logprob: -8.604485511779785
    8. '	       ' → logprob: -9.979485511779785
    9. '		' → logprob: -10.354485511779785
    10. '<|end|>' → logprob: -11.479485511779785

Token 1267: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.888114098226652e-05
    2. '           ' → logprob: -9.750088691711426
    3. '   ' → logprob: -11.625088691711426
    4. '<|end|>' → logprob: -12.250088691711426
    5. ',' → logprob: -12.375088691711426
    6. '```' → logprob: -12.875088691711426
    7. ' continue' → logprob: -13.375088691711426
    8. 'continue' → logprob: -13.500088691711426
    9. '        
' → logprob: -13.750088691711426
    10. '	' → logprob: -13.875088691711426

Token 1268: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.36615514755249023
    2. '       ' → logprob: -1.3661551475524902
    3. 'break' → logprob: -3.1161551475524902
    4. '           ' → logprob: -5.24115514755249
    5. ' continue' → logprob: -6.49115514755249
    6. '	continue' → logprob: -8.991155624389648
    7. '	' → logprob: -9.741155624389648
    8. '               ' → logprob: -9.991155624389648
    9. ' break' → logprob: -9.991155624389648
    10. '	break' → logprob: -10.616155624389648

Token 1269: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010270876373397186
    2. '        
' → logprob: -9.500102996826172
    3. '   ' → logprob: -11.500102996826172
    4. '
' → logprob: -11.875102996826172
    5. '<|end|>' → logprob: -12.125102996826172
    6. '           ' → logprob: -13.625102996826172
    7. ',' → logprob: -13.750102996826172
    8. 'tokens' → logprob: -14.625102996826172
    9. '    
' → logprob: -14.875102996826172
    10. '```' → logprob: -14.875102996826172

Token 1270: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5003604888916016
    2. '       ' → logprob: -1.0003604888916016
    3. 'tokens' → logprob: -3.8753604888916016
    4. '```' → logprob: -6.125360488891602
    5. ' tokens' → logprob: -7.375360488891602
    6. '        
' → logprob: -7.875360488891602
    7. 'token' → logprob: -7.875360488891602
    8. '    
' → logprob: -8.000360488891602
    9. ' parts' → logprob: -8.125360488891602
    10. '(tokens' → logprob: -9.125360488891602

Token 1271: ' m' (ID: 284)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.9442492127418518
    2. '       ' → logprob: -1.069249153137207
    3. 'tokens' → logprob: -2.194249153137207
    4. ' parts' → logprob: -2.819249153137207
    5. 'm' (adapté à ' m') → logprob: -3.194249153137207
    6. 'n' → logprob: -3.694249153137207
    7. 'params' → logprob: -4.319249153137207
    8. 'values' → logprob: -5.569249153137207
    9. 'args' → logprob: -5.819249153137207
    10. 'a' → logprob: -6.194249153137207

Token 1272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008623439818620682
    2. ',n' → logprob: -4.7586236000061035
    3. ' ,' → logprob: -12.508623123168945
    4. 'n' → logprob: -12.633623123168945
    5. ',num' → logprob: -14.008623123168945
    6. ',int' → logprob: -15.008623123168945
    7. ',
' → logprob: -15.633623123168945
    8. ',str' → logprob: -16.133623123168945
    9. ',m' → logprob: -16.508623123168945
    10. '_str' → logprob: -16.758623123168945

Token 1273: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014165864326059818
    2. ' n' → logprob: -4.264165878295898
    3. '_n' → logprob: -13.639165878295898
    4. '	n' → logprob: -14.889165878295898
    5. '=' → logprob: -15.514165878295898
    6. ' ' → logprob: -15.889165878295898
    7. ' =' → logprob: -16.6391658782959
    8. 's' → logprob: -17.0141658782959
    9. ',n' → logprob: -17.1391658782959
    10. 'space' → logprob: -17.1391658782959

Token 1274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269284337759018
    2. ' =' → logprob: -2.1269283294677734
    3. '＝' → logprob: -16.376928329467773
    4. '=int' → logprob: -16.501928329467773
    5. '=line' → logprob: -16.501928329467773
    6. ',' → logprob: -16.876928329467773
    7. ')' → logprob: -17.251928329467773
    8. ')=' → logprob: -18.001928329467773
    9. '=input' → logprob: -18.376928329467773
    10. '=parse' → logprob: -18.876928329467773

Token 1275: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0040785204619169235
    2. ' map' → logprob: -5.504078388214111
    3. '(map' → logprob: -15.75407886505127
    4. '	map' → logprob: -17.379077911376953
    5. '[' → logprob: -18.254077911376953
    6. 'list' → logprob: -19.504077911376953
    7. '   ' → logprob: -20.004077911376953
    8. 'line' → logprob: -20.879077911376953
    9. ' ' → logprob: -20.879077911376953
    10. '
' → logprob: -21.254077911376953

Token 1276: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002517277142032981
    2. '(str' → logprob: -6.252517223358154
    3. 'int' → logprob: -7.502517223358154
    4. '(' → logprob: -11.377517700195312
    5. 'str' → logprob: -11.627517700195312
    6. '(lambda' → logprob: -11.627517700195312
    7. '[int' → logprob: -12.377517700195312
    8. '=int' → logprob: -12.877517700195312
    9. '<int' → logprob: -15.252517700195312
    10. ' int' → logprob: -15.877517700195312

Token 1277: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.001698749023489654
    2. 'line' → logprob: -7.001698970794678
    3. ',line' → logprob: -7.876698970794678
    4. '=line' → logprob: -8.50169849395752
    5. ')' → logprob: -9.25169849395752
    6. ',' → logprob: -10.37669849395752
    7. '(' → logprob: -10.50169849395752
    8. '#line' → logprob: -10.87669849395752
    9. '[line' → logprob: -11.12669849395752
    10. ' line' → logprob: -11.25169849395752

Token 1278: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00033546582562848926
    2. ' line' → logprob: -8.000335693359375
    3. '(line' → logprob: -20.125335693359375
    4. '	line' → logprob: -21.000335693359375
    5. '=line' → logprob: -22.625335693359375
    6. 'Line' → logprob: -23.125335693359375
    7. '_line' → logprob: -23.125335693359375
    8. '#line' → logprob: -24.125335693359375
    9. '[line' → logprob: -24.375335693359375
    10. ',line' → logprob: -25.125335693359375

Token 1279: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08036944270133972
    2. '.strip' → logprob: -2.580369472503662
    3. '.split' → logprob: -6.580369472503662
    4. '.' → logprob: -9.830368995666504
    5. '.rstrip' → logprob: -11.080368995666504
    6. '.readline' → logprob: -11.205368995666504
    7. 'strip' → logprob: -13.080368995666504
    8. ' .' → logprob: -13.205368995666504
    9. '()' → logprob: -13.455368995666504
    10. '(strip' → logprob: -14.705368995666504

Token 1280: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -14.375000953674316
    3. '.split' → logprob: -14.375000953674316
    4. '()
' → logprob: -17.625001907348633
    5. '().'' → logprob: -18.500001907348633
    6. '()[' → logprob: -18.875001907348633
    7. '('').' → logprob: -18.875001907348633
    8. '(' → logprob: -19.125001907348633
    9. '().
' → logprob: -19.250001907348633
    10. 'split' → logprob: -19.250001907348633

Token 1281: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.375
    3. '(split' → logprob: -16.125
    4. '.split' → logprob: -18.5
    5. '_split' → logprob: -19.375
    6. 'spl' → logprob: -20.0
    7. 'plit' → logprob: -22.625
    8. 'rstrip' → logprob: -22.625
    9. ')' → logprob: -23.0
    10. 'Split' → logprob: -23.125

Token 1282: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.056688856333494186
    2. '()' → logprob: -3.0566887855529785
    3. '('' → logprob: -5.0566887855529785
    4. '(' → logprob: -6.5566887855529785
    5. ')' → logprob: -8.556689262390137
    6. '(','' → logprob: -9.806689262390137
    7. '())
' → logprob: -10.806689262390137
    8. '("' → logprob: -12.431689262390137
    9. '(',' → logprob: -13.181689262390137
    10. '()
' → logprob: -13.181689262390137

Token 1283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.7610454708337784e-05
    2. '<|end|>' → logprob: -11.250027656555176
    3. '        
' → logprob: -12.125027656555176
    4. '   ' → logprob: -12.125027656555176
    5. '```' → logprob: -13.500027656555176
    6. 'solve' → logprob: -13.625027656555176
    7. '           ' → logprob: -15.375027656555176
    8. '<|end|>' → logprob: -15.750027656555176
    9. ' solve' → logprob: -16.25002670288086
    10. '
' → logprob: -16.50002670288086

Token 1284: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12975120544433594
    2. 'solve' → logprob: -2.129751205444336
    3. 'if' (adapté à ' if') → logprob: -5.879751205444336
    4. ' solve' → logprob: -11.254751205444336
    5. ' if' → logprob: -11.754751205444336
    6. '   ' → logprob: -13.129751205444336
    7. '        
' → logprob: -15.004751205444336
    8. '```' → logprob: -16.129751205444336
    9. '           ' → logprob: -16.379751205444336
    10. '.solve' → logprob: -16.754751205444336

Token 1285: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.014164221473038197
    2. ' m' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.139163970947266
    4. ' not' → logprob: -17.514163970947266
    5. '	m' → logprob: -17.764163970947266
    6. '(m' → logprob: -17.889163970947266
    7. 'n' → logprob: -18.014163970947266
    8. 'not' → logprob: -19.389163970947266
    9. '       ' → logprob: -19.889163970947266
    10. '0' → logprob: -20.264163970947266

Token 1286: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34911850094795227
    2. '==' → logprob: -1.2241184711456299
    3. ' <=' → logprob: -8.09911823272705
    4. '<=' → logprob: -8.47411823272705
    5. ' <' → logprob: -9.47411823272705
    6. '=' → logprob: -10.47411823272705
    7. '<' → logprob: -10.72411823272705
    8. '   ' → logprob: -11.22411823272705
    9. '```' → logprob: -12.59911823272705
    10. '==
' → logprob: -12.84911823272705

Token 1287: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.25000762939453
    4. '۰' → logprob: -19.37500762939453
    5. 'n' → logprob: -20.25000762939453
    6. '```' → logprob: -20.62500762939453
    7. '  ' → logprob: -20.68750762939453
    8. '
' → logprob: -20.93750762939453
    9. '-' → logprob: -21.31250762939453
    10. '=' → logprob: -21.50000762939453

Token 1288: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '-' → logprob: -17.000003814697266
    4. ' -' → logprob: -19.750003814697266
    5. '۰' → logprob: -20.125003814697266
    6. 'n' → logprob: -20.250003814697266
    7. 'm' → logprob: -21.375003814697266
    8. '   ' → logprob: -21.500003814697266
    9. '```' → logprob: -21.750003814697266
    10. '０' → logprob: -22.500003814697266

Token 1289: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0380435548722744
    2. 'and' → logprob: -3.28804349899292
    3. '	and' → logprob: -13.663043975830078
    4. ' ' → logprob: -14.663043975830078
    5. '   ' → logprob: -15.413043975830078
    6. ' и' → logprob: -16.038043975830078
    7. ' và' → logprob: -16.788043975830078
    8. '<|end|>' → logprob: -17.538043975830078
    9. ' or' → logprob: -18.038043975830078
    10. '0' → logprob: -18.163043975830078

Token 1290: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009115827269852161
    2. ' n' → logprob: -7.000911712646484
    3. '	n' → logprob: -17.750911712646484
    4. '   ' → logprob: -20.500911712646484
    5. '  ' → logprob: -22.250911712646484
    6. '_n' → logprob: -23.125911712646484
    7. ' ' → logprob: -24.500911712646484
    8. ' ' → logprob: -24.625911712646484
    9. '    ' → logprob: -24.750911712646484
    10. '­n' → logprob: -25.125911712646484

Token 1291: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14271773397922516
    2. ' ==' → logprob: -2.0177178382873535
    3. '0' → logprob: -10.892717361450195
    4. '==
' → logprob: -11.892717361450195
    5. '=' → logprob: -12.142717361450195
    6. ')==' → logprob: -12.892717361450195
    7. ' ' → logprob: -13.267717361450195
    8. '()==' → logprob: -13.267717361450195
    9. '<|end|>' → logprob: -13.267717361450195
    10. '===' → logprob: -13.517717361450195

Token 1292: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -20.125001907348633
    4. '  ' → logprob: -22.125001907348633
    5. '০' → logprob: -22.125001907348633
    6. '<|end|>' → logprob: -22.625001907348633
    7. '=' → logprob: -22.750001907348633
    8. '   ' → logprob: -22.875001907348633
    9. '०' → logprob: -23.500001907348633
    10. '０' → logprob: -23.500001907348633

Token 1293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -20.625003814697266
    4. '  ' → logprob: -22.375003814697266
    5. '   ' → logprob: -22.375003814697266
    6. '০' → logprob: -22.875003814697266
    7. '０' → logprob: -23.750003814697266
    8. '०' → logprob: -24.000003814697266
    9. '٠' → logprob: -24.250003814697266
    10. '```' → logprob: -24.312503814697266

Token 1294: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6773614883422852
    2. ':' → logprob: -0.8023614883422852
    3. '           ' → logprob: -3.177361488342285
    4. '       ' → logprob: -6.302361488342285
    5. ':return' → logprob: -9.302361488342285
    6. '):
' → logprob: -10.427361488342285
    7. '		' → logprob: -10.802361488342285
    8. '():
' → logprob: -11.052361488342285
    9. '   ' → logprob: -11.177361488342285
    10. '	       ' → logprob: -11.427361488342285

Token 1295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011084247380495071
    2. '       ' → logprob: -7.001108646392822
    3. '	       ' → logprob: -9.751108169555664
    4. '		' → logprob: -9.876108169555664
    5. ':' → logprob: -10.251108169555664
    6. ':
' → logprob: -11.251108169555664
    7. '<|end|>' → logprob: -11.376108169555664
    8. '<|end|>' → logprob: -12.251108169555664
    9. '               ' → logprob: -12.376108169555664
    10. ' break' → logprob: -13.251108169555664

Token 1296: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.012266159988939762
    2. 'return' → logprob: -4.762266159057617
    3. '           ' → logprob: -5.887266159057617
    4. ' break' → logprob: -7.137266159057617
    5. '	break' → logprob: -9.887266159057617
    6. '               ' → logprob: -11.887266159057617
    7. '       ' → logprob: -12.012266159057617
    8. '_break' → logprob: -12.137266159057617
    9. ' return' → logprob: -13.012266159057617
    10. '		' → logprob: -13.137266159057617

Token 1297: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007376811117865145
    2. '<|end|>' → logprob: -7.87573766708374
    3. '        
' → logprob: -8.000738143920898
    4. '   ' → logprob: -11.875738143920898
    5. '<|end|>' → logprob: -12.125738143920898
    6. '
' → logprob: -12.625738143920898
    7. '```' → logprob: -13.000738143920898
    8. '           ' → logprob: -14.375738143920898
    9. '    
' → logprob: -14.625738143920898
    10. '  
' → logprob: -14.875738143920898

Token 1298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.4868770196917467e-05
    2. '   ' → logprob: -11.125024795532227
    3. 'solve' → logprob: -12.500024795532227
    4. '        
' → logprob: -12.750024795532227
    5. '```' → logprob: -13.625024795532227
    6. '<|end|>' → logprob: -13.875024795532227
    7. '           ' → logprob: -14.375024795532227
    8. ' solve' → logprob: -15.875024795532227
    9. '	' → logprob: -15.875024795532227
    10. '
' → logprob: -16.000024795532227

Token 1299: ' solve' (ID: 17722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04947996884584427
    2. 'solve' (adapté à ' solve') → logprob: -3.0494799613952637
    3. ' solve' → logprob: -7.049479961395264
    4. '   ' → logprob: -10.674480438232422
    5. '.solve' → logprob: -14.799480438232422
    6. '        
' → logprob: -15.299480438232422
    7. '```' → logprob: -15.799480438232422
    8. '	' → logprob: -16.549480438232422
    9. '           ' → logprob: -16.799480438232422
    10. '      ' → logprob: -16.924480438232422

Token 1300: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00023286080977413803
    2. '(' → logprob: -8.375232696533203
    3. '(
' → logprob: -13.750232696533203
    4. 'm' → logprob: -14.125232696533203
    5. ' (' → logprob: -15.375232696533203
    6. '(M' → logprob: -16.125232696533203
    7. '```' → logprob: -16.375232696533203
    8. ')m' → logprob: -17.250232696533203
    9. '
' → logprob: -18.125232696533203
    10. ')' → logprob: -18.625232696533203

Token 1301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013446388766169548
    2. ',n' → logprob: -6.626344680786133
    3. ' ,' → logprob: -11.001344680786133
    4. ',
' → logprob: -13.251344680786133
    5. '‌,' → logprob: -16.501344680786133
    6. '   ' → logprob: -16.626344680786133
    7. '       ' → logprob: -17.126344680786133
    8. '	' → logprob: -17.626344680786133
    9. ',m' → logprob: -17.626344680786133
    10. '<|end|>' → logprob: -18.126344680786133

Token 1302: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.054500666621607e-06
    2. ' n' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.375003814697266
    4. '	n' → logprob: -18.375003814697266
    5. '       ' → logprob: -19.875003814697266
    6. '
' → logprob: -20.375003814697266
    7. '_n' → logprob: -20.500003814697266
    8. ')n' → logprob: -20.500003814697266
    9. '(n' → logprob: -22.000003814697266
    10. '    ' → logprob: -22.000003814697266

Token 1303: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.7689099018462e-05
    2. '       ' → logprob: -10.00008773803711
    3. ')
' → logprob: -10.25008773803711
    4. '   ' → logprob: -12.87508773803711
    5. '<|end|>' → logprob: -13.62508773803711
    6. ' )' → logprob: -13.75008773803711
    7. '`)' → logprob: -14.00008773803711
    8. '	' → logprob: -15.87508773803711
    9. '")' → logprob: -15.87508773803711
    10. '))' → logprob: -16.00008773803711

Token 1304: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009399275877512991
    2. '```' → logprob: -7.875939846038818
    3. '
' → logprob: -8.250940322875977
    4. 'main' → logprob: -8.625940322875977
    5. '<|end|>' → logprob: -10.000940322875977
    6. ' if' → logprob: -10.375940322875977
    7. '\n' → logprob: -10.750940322875977
    8. '#' → logprob: -12.375940322875977
    9. '    
' → logprob: -12.625940322875977
    10. '        
' → logprob: -12.875940322875977

Token 1305: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16100318729877472
    2. '__' → logprob: -1.9110032320022583
    3. '_' → logprob: -7.786003112792969
    4. '___' → logprob: -8.161003112792969
    5. '_name' → logprob: -10.036003112792969
    6. '____' → logprob: -11.911003112792969
    7. '﻿' → logprob: -12.286003112792969
    8. ' ___' → logprob: -12.536003112792969
    9. ' ' → logprob: -12.661003112792969
    10. ' _' → logprob: -12.661003112792969

Token 1306: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10380155593156815
    2. '==' → logprob: -2.3538014888763428
    3. ' ==' → logprob: -5.728801727294922
    4. '__.__' → logprob: -9.353801727294922
    5. '=="' → logprob: -9.353801727294922
    6. 'name' → logprob: -10.603801727294922
    7. ' __' → logprob: -10.853801727294922
    8. '=='' → logprob: -11.103801727294922
    9. '```' → logprob: -11.103801727294922
    10. '==
' → logprob: -11.228801727294922

Token 1307: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.791440293658525e-05
    2. '__.__' → logprob: -10.250078201293945
    3. '==' → logprob: -10.750078201293945
    4. '___' → logprob: -11.750078201293945
    5. '=="' → logprob: -12.250078201293945
    6. '__
' → logprob: -13.000078201293945
    7. '____' → logprob: -13.875078201293945
    8. '_' → logprob: -14.375078201293945
    9. '```' → logprob: -14.375078201293945
    10. '__["' → logprob: -14.500078201293945

Token 1308: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.021936876699328423
    2. '==' → logprob: -3.8969368934631348
    3. ' ==' → logprob: -7.396936893463135
    4. '=="' → logprob: -7.396936893463135
    5. '=='' → logprob: -9.146936416625977
    6. '__.__' → logprob: -10.396936416625977
    7. '___' → logprob: -11.521936416625977
    8. '==
' → logprob: -11.896936416625977
    9. '____' → logprob: -12.521936416625977
    10. '__
' → logprob: -13.146936416625977

Token 1309: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03816404938697815
    2. ''' → logprob: -3.2881641387939453
    3. '__' → logprob: -9.038164138793945
    4. ' "__' → logprob: -12.538164138793945
    5. ' '__' → logprob: -16.038164138793945
    6. '"user' → logprob: -17.288164138793945
    7. '"name' → logprob: -17.663164138793945
    8. '("__' → logprob: -18.163164138793945
    9. '('__' → logprob: -18.288164138793945
    10. 'main' → logprob: -18.663164138793945

Token 1310: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.4881879400927573e-05
    2. '__' → logprob: -10.500035285949707
    3. 'name' → logprob: -11.875035285949707
    4. ' main' → logprob: -15.375035285949707
    5. '_main' → logprob: -17.50003433227539
    6. ''' → logprob: -17.87503433227539
    7. '"' → logprob: -18.62503433227539
    8. '	main' → logprob: -19.25003433227539
    9. '(main' → logprob: -19.25003433227539
    10. 'm' → logprob: -19.62503433227539

Token 1311: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.08941453695297241
    2. '__' → logprob: -2.464414596557617
    3. '__":
' → logprob: -7.714414596557617
    4. '__
' → logprob: -11.964414596557617
    5. '_' → logprob: -12.464414596557617
    6. ''' → logprob: -12.714414596557617
    7. '':
' → logprob: -12.964414596557617
    8. '('__' → logprob: -12.964414596557617
    9. '__:' → logprob: -12.964414596557617
    10. '```' → logprob: -13.714414596557617

Token 1312: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3928416073322296
    2. '   ' → logprob: -1.6428415775299072
    3. '	main' → logprob: -2.1428415775299072
    4. ' main' → logprob: -4.267841815948486
    5. '_main' → logprob: -10.017841339111328
    6. '<|end|>' → logprob: -11.642841339111328
    7. 'import' → logprob: -11.892841339111328
    8. '   ' → logprob: -12.017841339111328
    9. '```' → logprob: -12.142841339111328
    10. '    
' → logprob: -12.142841339111328

Token 1313: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.816093228830141e-06
    2. ' main' → logprob: -13.00000286102295
    3. '	main' → logprob: -14.75000286102295
    4. '   ' → logprob: -17.000001907348633
    5. '_main' → logprob: -21.000001907348633
    6. '.main' → logprob: -21.625001907348633
    7. '(main' → logprob: -21.750001907348633
    8. 'import' → logprob: -23.500001907348633
    9. 'Main' → logprob: -24.625001907348633
    10. '-main' → logprob: -25.250001907348633

Token 1314: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1312
Tokens correctement prédits (1ère position, stricte): 441
Tokens correctement prédits (1ère position, avec adaptation): 467
Tokens correctement prédits (top 10): 890
Précision stricte (1ère position): 33.61%
Précision adaptée (1ère position): 35.59%
Précision (top 10): 67.84%
================================================================================
