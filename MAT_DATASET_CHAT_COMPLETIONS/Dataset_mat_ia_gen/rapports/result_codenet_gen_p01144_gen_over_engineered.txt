================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Tuple, Iterator


class Segment:
    """Représente un segment entre deux stations avec distance et probabilité d'attaque par unité de distance."""

    __slots__ = ('distance', 'attack_probability')

    def __init__(self, distance: int, attack_probability: float) -> None:
        self.distance = distance
        self.attack_probability = attack_probability

    def maximal_cost(self) -> int:
        """Calcule le coût maximal pour protéger entièrement ce segment."""
        return self.distance

    def maximal_expected_attack(self) -> float:
        """Calcule l'attaque attendue maximale sans protection."""
        return self.distance * self.attack_probability


class Dataset:
    """Encapsule un ensemble de segments ainsi que le budget disponible."""

    def __init__(self, n_segments: int, budget: int, segments: List[Segment]) -> None:
        self.n_segments = n_segments
        self.budget = budget
        self.segments = segments

    def total_distance(self) -> int:
        return sum(segment.distance for segment in self.segments)


class InputParser(ABC):
    """Interface abstraite pour le parsing des entrées."""

    @abstractmethod
    def parse(self) -> Iterator[Dataset]:
        pass


class StdInputParser(InputParser):
    """Parseur qui lit depuis l'entrée standard."""

    def parse(self) -> Iterator[Dataset]:
        import sys

        while True:
            line = sys.stdin.readline()
            if not line:
                break
            n_m = line.strip()
            if not n_m:
                continue
            n, m = map(int, n_m.split())
            if n == 0 and m == 0:
                break
            segments = []
            for _ in range(n):
                d_p_line = sys.stdin.readline().strip()
                d, p = d_p_line.split()
                segments.append(Segment(int(d), float(p)))
            yield Dataset(n, m, segments)


class ProtectorStrategy(ABC):
    """Stratégie pour minimiser les attaques par budget donné."""

    @abstractmethod
    def minimize_expected_attack(self, dataset: Dataset) -> float:
        pass


class GreedyProtectorStrategy(ProtectorStrategy):
    """
    Implémentation sophistiquée avec abstractions.
    Pour minimiser l'attaque : investir budget dans les segments avec la plus forte probabilité d'attaque par unité.
    Le protection coûte 1 unité d'argent par distance protégée, paie une distance partielle sur un segment est possible.
    """

    def minimize_expected_attack(self, dataset: Dataset) -> float:
        budget = dataset.budget
        # Segments triés par probabilité décroissante (car plus P_i élevé, mieux vaut protéger)
        sorted_segments = sorted(dataset.segments, key=lambda s: s.attack_probability, reverse=True)

        total_expected_attack = sum(s.maximal_expected_attack() for s in dataset.segments)
        remaining_budget = budget

        protected_distance = 0

        for segment in sorted_segments:
            if remaining_budget <= 0:
                break
            protectable = min(segment.distance, remaining_budget)
            # Réduction de l'attaque = P_i * distance protégée
            reduction = protectable * segment.attack_probability
            total_expected_attack -= reduction
            remaining_budget -= protectable
            protected_distance += protectable

        return total_expected_attack


class OutputPrinter(ABC):
    """Interface abstraite d'impression des résultats."""

    @abstractmethod
    def print_result(self, result: float) -> None:
        pass


class StdOutputPrinter(OutputPrinter):
    def print_result(self, result: float) -> None:
        # Le résultat est un float mais les exemples montrent un entier => conversion en int
        print(int(result))


class PrincessMarriageSolver:
    """Orchestration complète du problème."""

    def __init__(self,
                 input_parser: InputParser,
                 protector_strategy: ProtectorStrategy,
                 output_printer: OutputPrinter) -> None:
        self.input_parser = input_parser
        self.protector_strategy = protector_strategy
        self.output_printer = output_printer

    def solve_all(self) -> None:
        for dataset in self.input_parser.parse():
            result = self.protector_strategy.minimize_expected_attack(dataset)
            self.output_printer.print_result(result)


def main():
    solver = PrincessMarriageSolver(
        input_parser=StdInputParser(),
        protector_strategy=GreedyProtectorStrategy(),
        output_printer=StdOutputPrinter()
    )
    solver.solve_all()


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1855143904685974
    2. 'ABC' → logprob: -1.8105144500732422
    3. ' ' → logprob: -6.310514450073242
    4. 'ABCDE' → logprob: -6.935514450073242
    5. 'abc' → logprob: -7.310514450073242
    6. ' abc' → logprob: -7.685514450073242
    7. ' A' → logprob: -7.685514450073242
    8. 'import' → logprob: -8.435514450073242
    9. ' ' → logprob: -8.560514450073242
    10. 'abstract' → logprob: -8.685514450073242

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3359279930591583
    2. '.' → logprob: -1.335927963256836
    3. ':' → logprob: -4.335927963256836
    4. '```' → logprob: -5.710927963256836
    5. 'import' → logprob: -6.335927963256836
    6. ',
' → logprob: -7.460927963256836
    7. '\' → logprob: -7.460927963256836
    8. '' → logprob: -7.960927963256836
    9. ' ' → logprob: -8.085927963256836
    10. ' ,' → logprob: -8.210927963256836

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.6972059607505798
    2. ' abstract' → logprob: -0.8222059607505798
    3. 'Abstract' → logprob: -2.8222060203552246
    4. ' ' → logprob: -6.822206020355225
    5. 'Meta' → logprob: -6.822206020355225
    6. '```' → logprob: -8.572205543518066
    7. '.abstract' → logprob: -8.822205543518066
    8. ' A' → logprob: -9.322205543518066
    9. ' Abstract' → logprob: -9.447205543518066
    10. ' ABC' → logprob: -10.447205543518066

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -7.898723561083898e-05
    2. 'm' → logprob: -10.000079154968262
    3. 'classmethod' → logprob: -11.375079154968262
    4. 'meth' → logprob: -11.500079154968262
    5. '_method' → logprob: -12.500079154968262
    6. 'me' → logprob: -12.625079154968262
    7. 'staticmethod' → logprob: -13.625079154968262
    8. 'met' → logprob: -13.750079154968262
    9. '```' → logprob: -14.125079154968262
    10. ' method' → logprob: -14.750079154968262

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4196794033050537
    2. '```' → logprob: -1.4196794033050537
    3. 'class' → logprob: -2.9196794033050537
    4. '

' → logprob: -4.044679641723633
    5. '\n' → logprob: -5.044679641723633
    6. '' → logprob: -5.044679641723633
    7. '<|end|>' → logprob: -5.169679641723633
    8. '
' → logprob: -5.794679641723633
    9. '``' → logprob: -5.919679641723633
    10. '\' → logprob: -6.419679641723633

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.050074297934770584
    2. '

' → logprob: -3.550074338912964
    3. 'class' → logprob: -4.675074100494385
    4. '```' → logprob: -5.175074100494385
    5. '
' → logprob: -6.675074100494385
    6. '' → logprob: -7.050074100494385
    7. '\n' → logprob: -7.425074100494385
    8. '  
' → logprob: -7.425074100494385
    9. ' 
' → logprob: -7.925074100494385
    10. '``' → logprob: -8.175074577331543

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.11298394203186035
    2. ' collections' → logprob: -2.4879839420318604
    3. 'typing' → logprob: -4.487983703613281
    4. ' dat' → logprob: -4.987983703613281
    5. 'collections' → logprob: -6.362983703613281
    6. ' os' → logprob: -6.487983703613281
    7. ' math' → logprob: -7.612983703613281
    8. ' sys' → logprob: -7.737983703613281
    9. ' datetime' → logprob: -7.737983703613281
    10. ' io' → logprob: -8.112983703613281

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04280390217900276
    2. 'import' → logprob: -3.292804002761841
    3. '<|end|>' → logprob: -6.042803764343262
    4. '.' → logprob: -6.542803764343262
    5. ' ' → logprob: -7.542803764343262
    6. '<|end|>' → logprob: -9.542803764343262
    7. ' as' → logprob: -9.667803764343262
    8. '[' → logprob: -9.917803764343262
    9. '```' → logprob: -10.292803764343262
    10. ' .' → logprob: -10.417803764343262

Token 11: ' List' (ID: 2655)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.22597166895866394
    2. ' Any' → logprob: -1.8509716987609863
    3. 'List' → logprob: -4.475971698760986
    4. ' List' → logprob: -4.975971698760986
    5. 'Union' → logprob: -5.100971698760986
    6. 'Callable' → logprob: -5.350971698760986
    7. ' Union' → logprob: -5.475971698760986
    8. 'Protocol' → logprob: -5.600971698760986
    9. ' Callable' → logprob: -5.725971698760986
    10. ' Protocol' → logprob: -5.975971698760986

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5872101783752441
    2. '
' → logprob: -0.8372101783752441
    3. 'class' → logprob: -4.837210178375244
    4. '


' → logprob: -6.837210178375244
    5. '```' → logprob: -6.837210178375244
    6. '\n' → logprob: -7.337210178375244
    7. '
' → logprob: -8.212209701538086
    8. '``' → logprob: -9.712209701538086
    9. '`

' → logprob: -10.587209701538086
    10. '



' → logprob: -10.837209701538086

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Callable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Callable' → logprob: -1.0375897884368896
    2. ' Union' → logprob: -1.4125897884368896
    3. ' Optional' → logprob: -1.4125897884368896
    4. ' Any' → logprob: -3.1625897884368896
    5. 'Optional' → logprob: -3.4125897884368896
    6. 'Any' → logprob: -4.037590026855469
    7. 'Callable' → logprob: -4.162590026855469
    8. ' Protocol' → logprob: -4.662590026855469
    9. ' Tuple' → logprob: -4.662590026855469
    10. 'Union' → logprob: -4.787590026855469

Token 14: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6561242341995239
    2. '

' → logprob: -1.281124234199524
    3. '
' → logprob: -1.906124234199524
    4. '```' → logprob: -3.0311241149902344
    5. '\n' → logprob: -5.781124114990234
    6. '``' → logprob: -6.156124114990234
    7. ' class' → logprob: -8.031124114990234
    8. '


' → logprob: -8.156124114990234
    9. '
' → logprob: -8.531124114990234
    10. '<class' → logprob: -8.656124114990234

Token 15: ' Iterator' (ID: 41994)
  Prédit: ' Callable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Callable' → logprob: -1.562107801437378
    2. ' Union' → logprob: -1.812107801437378
    3. 'Callable' → logprob: -2.062107801437378
    4. 'Any' → logprob: -2.187107801437378
    5. 'Optional' → logprob: -2.312107801437378
    6. ' Optional' → logprob: -2.687107801437378
    7. 'Union' → logprob: -2.687107801437378
    8. 'Dict' → logprob: -2.937107801437378
    9. ' Any' → logprob: -3.312107801437378
    10. ' Dict' → logprob: -3.437107801437378

Token 16: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6164982318878174
    2. '
' → logprob: -1.1164982318878174
    3. '

' → logprob: -2.1164982318878174
    4. '```' → logprob: -4.866497993469238
    5. '\n' → logprob: -5.616497993469238
    6. '``' → logprob: -8.241497993469238
    7. ' class' → logprob: -8.616497993469238
    8. '


' → logprob: -8.866497993469238
    9. '<class' → logprob: -8.866497993469238
    10. '
' → logprob: -9.241497993469238

Token 17: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.7968066206085496e-05
    2. ' class' → logprob: -11.250027656555176
    3. '```' → logprob: -11.875027656555176
    4. 'c' → logprob: -12.375027656555176
    5. 'clas' → logprob: -13.875027656555176
    6. '"class' → logprob: -13.875027656555176
    7. 'cla' → logprob: -14.500027656555176
    8. '<class' → logprob: -14.875027656555176
    9. '@' → logprob: -15.250027656555176
    10. '-class' → logprob: -15.750027656555176

Token 18: ' Segment' (ID: 64922)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02595433220267296
    2. ' Abstract' → logprob: -4.150954246520996
    3. ' Space' → logprob: -5.650954246520996
    4. ' Shape' → logprob: -7.150954246520996
    5. ' Iterable' → logprob: -7.150954246520996
    6. ' Base' → logprob: -7.275954246520996
    7. ' Serializer' → logprob: -7.275954246520996
    8. ' ABC' → logprob: -8.150954246520996
    9. ' Basic' → logprob: -8.275954246520996
    10. ' My' → logprob: -8.275954246520996

Token 19: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018871380016207695
    2. ':' → logprob: -4.018871307373047
    3. '(Abstract' → logprob: -7.643871307373047
    4. '(S' → logprob: -8.518871307373047
    5. '():' → logprob: -11.518871307373047
    6. '(Base' → logprob: -12.143871307373047
    7. 'Base' → logprob: -12.393871307373047
    8. 'Segment' → logprob: -13.143871307373047
    9. 'Abstract' → logprob: -13.143871307373047
    10. '):' → logprob: -13.768871307373047

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3829090893268585
    2. ':' → logprob: -1.2579090595245361
    3. ' ' → logprob: -4.632909297943115
    4. '(' → logprob: -5.132909297943115
    5. '<|end|>' → logprob: -5.132909297943115
    6. ' :' → logprob: -5.507909297943115
    7. '    ' → logprob: -6.007909297943115
    8. '(object' → logprob: -6.507909297943115
    9. ' (' → logprob: -7.007909297943115
    10. '```' → logprob: -7.007909297943115

Token 21: ' """' (ID: 9280)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7345676422119141
    2. '   ' → logprob: -1.234567642211914
    3. 'def' → logprob: -1.484567642211914
    4. 'class' → logprob: -6.359567642211914
    5. '```' → logprob: -7.984567642211914
    6. ' pass' → logprob: -8.609567642211914
    7. ' """' → logprob: -8.859567642211914
    8. '    ' → logprob: -9.234567642211914
    9. '    
' → logprob: -9.734567642211914
    10. ' class' → logprob: -10.109567642211914

Token 22: 'Re' (ID: 720)
  Prédit: 'Rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rep' → logprob: -0.7914820313453674
    2. 'A' → logprob: -0.9164820313453674
    3. ' A' → logprob: -3.2914819717407227
    4. ' Represents' → logprob: -3.4164819717407227
    5. 'Segment' → logprob: -3.6664819717407227
    6. '"""' → logprob: -3.7914819717407227
    7. ' """' → logprob: -5.166481971740723
    8. 'An' → logprob: -5.416481971740723
    9. 'Class' → logprob: -5.416481971740723
    10. ' represents' → logprob: -5.791481971740723

Token 23: 'prés' (ID: 61592)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20999909937381744
    2. 'presentation' → logprob: -1.7099990844726562
    3. 'present' → logprob: -5.084999084472656
    4. 'pr' → logprob: -7.084999084472656
    5. 'pres' → logprob: -7.334999084472656
    6. 's' → logprob: -8.834999084472656
    7. 'f' → logprob: -8.834999084472656
    8. ' presents' → logprob: -9.334999084472656
    9. 'ad' → logprob: -9.584999084472656
    10. 'resents' → logprob: -9.584999084472656

Token 24: 'ente' (ID: 1576)
  Prédit: 'entation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entation' → logprob: -0.025628572329878807
    2. 'ent' → logprob: -3.7756285667419434
    3. 'en' → logprob: -7.900628566741943
    4. 'enta' → logprob: -8.025629043579102
    5. 'umé' → logprob: -8.025629043579102
    6. 'ént' → logprob: -8.150629043579102
    7. 'ente' → logprob: -8.900629043579102
    8. 'én' → logprob: -9.025629043579102
    9. 'ented' → logprob: -9.275629043579102
    10. 'é' → logprob: -9.275629043579102

Token 25: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.24691247940063477
    2. ' une' → logprob: -1.7469124794006348
    3. 'une' → logprob: -3.6219124794006348
    4. 'un' → logprob: -4.121912479400635
    5. ' segment' → logprob: -7.246912479400635
    6. 'segment' → logprob: -8.371912002563477
    7. ' la' → logprob: -8.621912002563477
    8. ' a' → logprob: -8.621912002563477
    9. 'a' → logprob: -9.871912002563477
    10. ' ' → logprob: -10.246912002563477

Token 26: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.47634008526802063
    2. 'segment' → logprob: -0.9763400554656982
    3. ' fragment' → logprob: -7.226340293884277
    4. ' morceau' → logprob: -7.726340293884277
    5. 'élé' → logprob: -8.351340293884277
    6. 'fragment' → logprob: -8.476340293884277
    7. '_segment' → logprob: -9.351340293884277
    8. 'seg' → logprob: -9.476340293884277
    9. 'point' → logprob: -9.726340293884277
    10. ' point' → logprob: -9.976340293884277

Token 27: ' entre' (ID: 3853)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.13644926249980927
    2. ' d' → logprob: -2.2614493370056152
    3. '```' → logprob: -5.261449337005615
    4. '   ' → logprob: -5.636449337005615
    5. '"""' → logprob: -5.636449337005615
    6. ' """' → logprob: -5.761449337005615
    7. '.' → logprob: -6.386449337005615
    8. ' ' → logprob: -6.886449337005615
    9. '<|end|>' → logprob: -7.136449337005615
    10. 'de' → logprob: -7.511449337005615

Token 28: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.2849949598312378
    2. 'de' → logprob: -1.4099949598312378
    3. ' two' → logprob: -5.784995079040527
    4. 'two' → logprob: -7.784995079040527
    5. 'Deux' → logprob: -9.534995079040527
    6. '2' → logprob: -9.534995079040527
    7. '```' → logprob: -9.659995079040527
    8. ' ' → logprob: -9.784995079040527
    9. '	de' → logprob: -11.159995079040527
    10. ' ' → logprob: -11.659995079040527

Token 29: ' stations' (ID: 26061)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.03380902111530304
    2. 'points' → logprob: -3.408808946609497
    3. ' point' → logprob: -10.033808708190918
    4. 'point' → logprob: -10.783808708190918
    5. '_points' → logprob: -10.783808708190918
    6. ' ' → logprob: -11.033808708190918
    7. '	points' → logprob: -11.283808708190918
    8. 'positions' → logprob: -11.908808708190918
    9. 's' → logprob: -12.033808708190918
    10. ' segments' → logprob: -12.283808708190918

Token 30: ' avec' (ID: 3937)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.37143462896347046
    2. ',' → logprob: -2.1214346885681152
    3. ' de' → logprob: -2.2464346885681152
    4. ' d' → logprob: -3.6214346885681152
    5. ' """' → logprob: -3.9964346885681152
    6. ' .' → logprob: -4.871434688568115
    7. ' ,' → logprob: -5.121434688568115
    8. ' :' → logprob: -5.496434688568115
    9. 's' → logprob: -5.621434688568115
    10. ':' → logprob: -5.746434688568115

Token 31: ' distance' (ID: 9324)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.15944862365722656
    2. ' un' → logprob: -2.6594486236572266
    3. 'une' → logprob: -3.4094486236572266
    4. ' des' → logprob: -4.284448623657227
    5. ' deux' → logprob: -4.284448623657227
    6. ' les' → logprob: -5.034448623657227
    7. 'de' → logprob: -5.784448623657227
    8. 'un' → logprob: -6.409448623657227
    9. ' two' → logprob: -7.284448623657227
    10. ' ' → logprob: -7.284448623657227

Token 32: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8579315543174744
    2. '.' → logprob: -1.8579316139221191
    3. ' ' → logprob: -2.107931613922119
    4. ' et' → logprob: -2.107931613922119
    5. ' ,' → logprob: -2.607931613922119
    6. '   ' → logprob: -3.482931613922119
    7. ' """' → logprob: -3.607931613922119
    8. ' entre' → logprob: -4.982931613922119
    9. ' and' → logprob: -5.107931613922119
    10. ' :' → logprob: -5.357931613922119

Token 33: ' prob' (ID: 4921)
  Prédit: ' durée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' durée' → logprob: -1.1444627046585083
    2. ' temps' → logprob: -1.5194627046585083
    3. ' une' → logprob: -2.2694625854492188
    4. ' le' → logprob: -2.6444625854492188
    5. ' direction' → logprob: -3.2694625854492188
    6. 'dur' → logprob: -3.5194625854492188
    7. ' dur' → logprob: -3.5194625854492188
    8. 'temps' → logprob: -3.7694625854492188
    9. ' dure' → logprob: -3.7694625854492188
    10. ' la' → logprob: -3.8944625854492188

Token 34: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.0015380734112113714
    2. 'abil' → logprob: -6.501538276672363
    3. 'ab' → logprob: -11.126538276672363
    4. 'alité' → logprob: -11.876538276672363
    5. 'a' → logprob: -12.001538276672363
    6. 'ilité' → logprob: -13.001538276672363
    7. 'ablement' → logprob: -13.376538276672363
    8. 'abilidad' → logprob: -14.001538276672363
    9. 'abl' → logprob: -14.126538276672363
    10. 'abilidade' → logprob: -14.626538276672363

Token 35: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.29703187942504883
    2. ' de' → logprob: -2.172031879425049
    3. ' ' → logprob: -2.672031879425049
    4. 'd' → logprob: -3.047031879425049
    5. '.' → logprob: -4.297031879425049
    6. '   ' → logprob: -5.422031879425049
    7. 's' → logprob: -5.672031879425049
    8. 'de' → logprob: -6.547031879425049
    9. ',' → logprob: -6.922031879425049
    10. '  ' → logprob: -7.422031879425049

Token 36: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5216352939605713
    2. 'e' → logprob: -1.7716352939605713
    3. ''é' → logprob: -2.0216352939605713
    4. 'é' → logprob: -2.7716352939605713
    5. ''arrêt' → logprob: -4.771635055541992
    6. 'a' → logprob: -4.896635055541992
    7. ''accès' → logprob: -4.896635055541992
    8. ''arrivée' → logprob: -5.521635055541992
    9. ''espace' → logprob: -6.021635055541992
    10. '_' → logprob: -6.146635055541992

Token 37: 'attaque' (ID: 153350)
  Prédit: ''arrêt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''arrêt' → logprob: -1.1527363061904907
    2. 'a' → logprob: -1.5277363061904907
    3. 'arr' → logprob: -1.7777363061904907
    4. 'é' → logprob: -2.027736186981201
    5. 'être' → logprob: -2.902736186981201
    6. ''arrivée' → logprob: -3.902736186981201
    7. ' arrêt' → logprob: -4.027736186981201
    8. 'e' → logprob: -4.402736186981201
    9. 'éc' → logprob: -4.652736186981201
    10. 'exist' → logprob: -5.152736186981201

Token 38: ' par' (ID: 686)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4691177308559418
    2. '"""' → logprob: -2.2191176414489746
    3. '."""' → logprob: -2.2191176414489746
    4. '   ' → logprob: -2.3441176414489746
    5. '"""
' → logprob: -3.7191176414489746
    6. '."""
' → logprob: -4.719117641448975
    7. ' ' → logprob: -4.844117641448975
    8. '."' → logprob: -5.219117641448975
    9. '```' → logprob: -5.844117641448975
    10. ',' → logprob: -6.094117641448975

Token 39: ' unité' (ID: 181741)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2470211535692215
    2. ' des' → logprob: -2.247021198272705
    3. 'un' → logprob: -2.747021198272705
    4. ' pirate' → logprob: -4.122021198272705
    5. ' une' → logprob: -5.622021198272705
    6. ' an' → logprob: -5.622021198272705
    7. ' bateau' → logprob: -6.122021198272705
    8. ' les' → logprob: -6.122021198272705
    9. ' pirates' → logprob: -6.497021198272705
    10. ' jour' → logprob: -6.684521198272705

Token 40: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7412397265434265
    2. ' ' → logprob: -1.6162397861480713
    3. ' d' → logprob: -2.3662397861480713
    4. ' ```' → logprob: -2.7412397861480713
    5. ' """' → logprob: -2.8662397861480713
    6. '.' → logprob: -3.6162397861480713
    7. ' `' → logprob: -4.116239547729492
    8. '_' → logprob: -4.366239547729492
    9. 'de' → logprob: -4.741239547729492
    10. '_de' → logprob: -4.991239547729492

Token 41: ' distance' (ID: 9324)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.14551255106925964
    2. 'esp' → logprob: -3.145512580871582
    3. ' temps' → logprob: -3.395512580871582
    4. 'es' → logprob: -4.520512580871582
    5. 'distance' → logprob: -4.645512580871582
    6. 'd' → logprob: -4.770512580871582
    7. 'ris' → logprob: -5.520512580871582
    8. ' ' → logprob: -5.770512580871582
    9. ' espace' → logprob: -5.895512580871582
    10. 'attaque' → logprob: -5.895512580871582

Token 42: '."""

' (ID: 68934)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4829610586166382
    2. '"""' → logprob: -1.6079610586166382
    3. '   ' → logprob: -2.7329611778259277
    4. '."""' → logprob: -2.8579611778259277
    5. '"""
' → logprob: -3.6079611778259277
    6. '"' → logprob: -4.857961177825928
    7. '."' → logprob: -4.857961177825928
    8. '."""
' → logprob: -5.107961177825928
    9. ' """' → logprob: -5.857961177825928
    10. ',' → logprob: -5.857961177825928

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6925879716873169
    2. '   ' → logprob: -1.192587971687317
    3. ' 
' → logprob: -2.1925878524780273
    4. '    
' → logprob: -3.1925878524780273
    5. '   
' → logprob: -4.067587852478027
    6. '```' → logprob: -4.692587852478027
    7. 'class' → logprob: -4.942587852478027
    8. '  
' → logprob: -5.692587852478027
    9. ' ' → logprob: -6.317587852478027
    10. '     
' → logprob: -6.942587852478027

Token 44: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5823767185211182
    2. ' def' → logprob: -0.8323767185211182
    3. '   ' → logprob: -5.457376480102539
    4. 'class' → logprob: -6.832376480102539
    5. '```' → logprob: -7.832376480102539
    6. '__' (adapté à ' __') → logprob: -8.582376480102539
    7. ' __' → logprob: -8.832376480102539
    8. ' ' → logprob: -9.707376480102539
    9. 'distance' → logprob: -9.832376480102539
    10. ' 
' → logprob: -9.832376480102539

Token 45: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.04862472042441368
    2. 'init' → logprob: -3.0486247539520264
    3. 'slot' → logprob: -10.923624992370605
    4. ' slots' → logprob: -11.548624992370605
    5. '_slots' → logprob: -12.423624992370605
    6. 'def' → logprob: -13.923624992370605
    7. 'tablename' → logprob: -14.173624992370605
    8. '```' → logprob: -14.423624992370605
    9. 'name' → logprob: -14.548624992370605
    10. 'doc' → logprob: -14.798624992370605

Token 46: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0042544580064713955
    2. '=' → logprob: -5.879254341125488
    3. ' =' → logprob: -7.254254341125488
    4. '=['' → logprob: -7.379254341125488
    5. '___' → logprob: -10.504254341125488
    6. '__('' → logprob: -10.629254341125488
    7. '__[' → logprob: -10.754254341125488
    8. '__["' → logprob: -11.129254341125488
    9. '__*/' → logprob: -12.254254341125488
    10. '=["' → logprob: -12.629254341125488

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6944804787635803
    2. '__' → logprob: -0.8194804787635803
    3. ' =' → logprob: -2.9444804191589355
    4. '=['' → logprob: -4.9444804191589355
    5. '=["' → logprob: -9.194480895996094
    6. '=('' → logprob: -10.444480895996094
    7. '['' → logprob: -10.569480895996094
    8. '=[' → logprob: -11.069480895996094
    9. '__[' → logprob: -11.069480895996094
    10. '___' → logprob: -11.069480895996094

Token 48: ' ('' (ID: 9906)
  Prédit: '('_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('_' → logprob: -0.9924570918083191
    2. ''' → logprob: -1.8674571514129639
    3. ''_' → logprob: -1.8674571514129639
    4. '"_' → logprob: -2.492457151412964
    5. '("_' → logprob: -3.242457151412964
    6. ''s' → logprob: -3.242457151412964
    7. '['_' → logprob: -3.367457151412964
    8. '"' → logprob: -3.617457151412964
    9. '('' → logprob: -3.742457151412964
    10. '['' → logprob: -3.867457151412964

Token 49: 'distance' (ID: 40614)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.5727059841156006
    2. 'start' → logprob: -1.1977059841156006
    3. 'departure' → logprob: -3.1977059841156006
    4. '_depart' → logprob: -3.5727059841156006
    5. '_station' → logprob: -4.07270622253418
    6. '_origin' → logprob: -4.44770622253418
    7. 'origin' → logprob: -4.94770622253418
    8. 'station' → logprob: -4.94770622253418
    9. '_source' → logprob: -5.32270622253418
    10. ' start' → logprob: -6.19770622253418

Token 50: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.004534200299531221
    2. ',' → logprob: -5.6295342445373535
    3. '_',' → logprob: -7.6295342445373535
    4. ' ',' → logprob: -8.629533767700195
    5. '_distance' → logprob: -8.879533767700195
    6. '')' → logprob: -10.879533767700195
    7. '','' → logprob: -10.879533767700195
    8. ''' → logprob: -11.129533767700195
    9. '_length' → logprob: -11.379533767700195
    10. '   ' → logprob: -11.629533767700195

Token 51: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.056786056607961655
    2. ' '' → logprob: -2.931786060333252
    3. 'prob' → logprob: -7.556786060333252
    4. ''espace' → logprob: -7.931786060333252
    5. ''s' → logprob: -8.056785583496094
    6. ' probability' → logprob: -8.931785583496094
    7. 'space' → logprob: -9.806785583496094
    8. ''esp' → logprob: -10.181785583496094
    9. ' ' → logprob: -10.306785583496094
    10. ')' → logprob: -10.306785583496094

Token 52: 'attack' (ID: 43104)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.30115261673927307
    2. 'attack' → logprob: -1.4261525869369507
    3. 'p' → logprob: -5.05115270614624
    4. 'attaque' → logprob: -5.17615270614624
    5. 'pro' → logprob: -6.17615270614624
    6. 'risk' → logprob: -6.67615270614624
    7. ' attack' → logprob: -6.67615270614624
    8. ' probability' → logprob: -6.92615270614624
    9. 'att' → logprob: -7.67615270614624
    10. ' prob' → logprob: -8.176152229309082

Token 53: '_probability' (ID: 182299)
  Prédit: '_probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_probability' → logprob: -0.1606956422328949
    2. '_prob' → logprob: -1.9106956720352173
    3. '_pro' → logprob: -8.910696029663086
    4. '_r' → logprob: -8.910696029663086
    5. '_rate' → logprob: -9.535696029663086
    6. '_distance' → logprob: -9.785696029663086
    7. '_ch' → logprob: -10.285696029663086
    8. '_' → logprob: -11.035696029663086
    9. '_probs' → logprob: -12.035696029663086
    10. '_p' → logprob: -12.160696029663086

Token 54: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.04132706671953201
    2. '',' → logprob: -3.7913269996643066
    3. '_per' → logprob: -4.041326999664307
    4. ' ')' → logprob: -9.416327476501465
    5. '_rate' → logprob: -9.666327476501465
    6. '_distance' → logprob: -9.791327476501465
    7. ''' → logprob: -10.666327476501465
    8. '_probability' → logprob: -10.666327476501465
    9. 'per' → logprob: -10.916327476501465
    10. ')' → logprob: -11.166327476501465

Token 55: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0548880398273468
    2. ' =' → logprob: -3.0548880100250244
    3. '   ' → logprob: -5.9298882484436035
    4. ',' → logprob: -6.1798882484436035
    5. ' :' → logprob: -7.6798882484436035
    6. '
' → logprob: -8.179887771606445
    7. '    
' → logprob: -8.304887771606445
    8. '=' → logprob: -8.554887771606445
    9. '

' → logprob: -9.054887771606445
    10. ')' → logprob: -9.804887771606445

Token 56: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0040952586568892
    2. '
' → logprob: -6.629095077514648
    3. ' def' → logprob: -6.629095077514648
    4. '   ' → logprob: -6.629095077514648
    5. 'distance' → logprob: -9.379095077514648
    6. '    
' → logprob: -10.629095077514648
    7. '	def' → logprob: -12.629095077514648
    8. ':' → logprob: -13.379095077514648
    9. '```' → logprob: -13.504095077514648
    10. 'de' → logprob: -13.754095077514648

Token 57: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.001339527778327465
    2. '__' → logprob: -6.876339435577393
    3. ' def' → logprob: -8.75133991241455
    4. ' ' → logprob: -10.12633991241455
    5. '_init' → logprob: -10.37633991241455
    6. ' init' → logprob: -10.37633991241455
    7. '_' → logprob: -11.37633991241455
    8. 'def' → logprob: -12.12633991241455
    9. ' distance' → logprob: -12.12633991241455
    10. ' initialize' → logprob: -12.37633991241455

Token 58: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.6931820511817932
    2. 'slots' → logprob: -0.6931820511817932
    3. 'slot' → logprob: -10.443181991577148
    4. '   ' → logprob: -13.318181991577148
    5. ' slots' → logprob: -13.693181991577148
    6. 'sl' → logprob: -14.068181991577148
    7. '_slots' → logprob: -14.068181991577148
    8. '  ' → logprob: -15.068181991577148
    9. 'ini' → logprob: -15.568181991577148
    10. ' ' → logprob: -15.693181991577148

Token 59: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.11442562192678452
    2. '__' → logprob: -2.2394256591796875
    3. '__(
' → logprob: -6.9894256591796875
    4. '(' → logprob: -7.8644256591796875
    5. '__((' → logprob: -8.989425659179688
    6. '__('' → logprob: -9.364425659179688
    7. '__(*' → logprob: -9.989425659179688
    8. '(self' → logprob: -11.489425659179688
    9. '__("' → logprob: -12.239425659179688
    10. '__(/*!' → logprob: -12.239425659179688

Token 60: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001503313542343676
    2. ' self' → logprob: -6.5015034675598145
    3. 'distance' → logprob: -14.376502990722656
    4. '   ' → logprob: -15.751502990722656
    5. ' ' → logprob: -15.876502990722656
    6. '(self' → logprob: -17.001502990722656
    7. '	self' → logprob: -17.251502990722656
    8. '       ' → logprob: -17.626502990722656
    9. '_self' → logprob: -17.876502990722656
    10. ',' → logprob: -18.126502990722656

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25435423851013184
    2. ' ,' → logprob: -1.5043542385101318
    3. ')' → logprob: -7.004354476928711
    4. 'self' → logprob: -7.504354476928711
    5. ' )' → logprob: -8.129354476928711
    6. ' self' → logprob: -8.504354476928711
    7. '(self' → logprob: -8.629354476928711
    8. ' (' → logprob: -9.379354476928711
    9. '<|end|>' → logprob: -9.754354476928711
    10. ' ' → logprob: -10.129354476928711

Token 62: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4326600730419159
    2. 'self' → logprob: -1.1826601028442383
    3. ' distance' → logprob: -3.6826601028442383
    4. ' self' → logprob: -3.9326601028442383
    5. '   ' → logprob: -12.557660102844238
    6. ' ' → logprob: -13.807660102844238
    7. '       ' → logprob: -13.807660102844238
    8. 'dist' → logprob: -14.057660102844238
    9. 'Distance' → logprob: -14.807660102844238
    10. ' ' → logprob: -15.057660102844238

Token 63: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04743776097893715
    2. '=' → logprob: -3.6724376678466797
    3. ',' → logprob: -3.9224376678466797
    4. ' :' → logprob: -7.17243766784668
    5. ':int' → logprob: -8.92243766784668
    6. ' ,' → logprob: -9.17243766784668
    7. ')' → logprob: -10.04743766784668
    8. ' =' → logprob: -10.04743766784668
    9. '):' → logprob: -10.79743766784668
    10. ' )' → logprob: -12.79743766784668

Token 64: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.07019539922475815
    2. 'float' → logprob: -3.195195436477661
    3. ' int' → logprob: -3.820195436477661
    4. 'int' → logprob: -5.320195198059082
    5. ' ' → logprob: -12.195195198059082
    6. '=float' → logprob: -12.945195198059082
    7. ' ' → logprob: -13.570195198059082
    8. '	float' → logprob: -13.570195198059082
    9. ')' → logprob: -13.945195198059082
    10. '(float' → logprob: -14.320195198059082

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.394135612528771e-05
    2. ' ,' → logprob: -10.125043869018555
    3. '):' → logprob: -13.250043869018555
    4. ')' → logprob: -13.875043869018555
    5. ':' → logprob: -15.000043869018555
    6. '<|end|>' → logprob: -15.375043869018555
    7. '=' → logprob: -16.000043869018555
    8. '<|end|>' → logprob: -16.125043869018555
    9. '‌,' → logprob: -16.625043869018555
    10. ',
' → logprob: -16.875043869018555

Token 66: ' attack' (ID: 10192)
  Prédit: ' attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' attack' → logprob: -0.10269393771886826
    2. 'attack' → logprob: -2.352694034576416
    3. ' ' → logprob: -6.352694034576416
    4. 'space' → logprob: -8.102693557739258
    5. ' ' → logprob: -8.352693557739258
    6. ' space' → logprob: -9.352693557739258
    7. '_attack' → logprob: -10.477693557739258
    8. ')' → logprob: -10.852693557739258
    9. '.attack' → logprob: -10.977693557739258
    10. ' )' → logprob: -12.102693557739258

Token 67: '_probability' (ID: 182299)
  Prédit: '_probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_probability' → logprob: -0.000533136713784188
    2. '_' → logprob: -7.750533103942871
    3. '_prob' → logprob: -9.375533103942871
    4. '_frequency' → logprob: -12.500533103942871
    5. '_p' → logprob: -12.500533103942871
    6. '_pro' → logprob: -12.625533103942871
    7. ' _' → logprob: -12.875533103942871
    8. '_amount' → logprob: -14.250533103942871
    9. '_density' → logprob: -14.625533103942871
    10. '_possible' → logprob: -14.875533103942871

Token 68: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002036595979006961
    2. ')' → logprob: -9.500204086303711
    3. ' :' → logprob: -9.625204086303711
    4. '):' → logprob: -9.750204086303711
    5. ' ):' → logprob: -13.250204086303711
    6. ' )' → logprob: -13.625204086303711
    7. '=' → logprob: -14.000204086303711
    8. ':int' → logprob: -15.125204086303711
    9. ' ' → logprob: -16.62520408630371
    10. ',' → logprob: -17.25020408630371

Token 69: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.693162202835083
    2. 'float' → logprob: -0.693162202835083
    3. ')' → logprob: -11.818161964416504
    4. ' ' → logprob: -12.568161964416504
    5. '	float' → logprob: -13.318161964416504
    6. 'int' → logprob: -14.318161964416504
    7. '=float' → logprob: -14.318161964416504
    8. '```' → logprob: -15.193161964416504
    9. '(float' → logprob: -15.443161964416504
    10. 'flo' → logprob: -15.568161964416504

Token 70: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009782060980796814
    2. ')' → logprob: -4.634781837463379
    3. '):
' → logprob: -10.759781837463379
    4. ':' → logprob: -12.759781837463379
    5. ' ):' → logprob: -13.384781837463379
    6. '):
' → logprob: -16.259782791137695
    7. ',' → logprob: -16.384782791137695
    8. ')->' → logprob: -16.384782791137695
    9. '   ' → logprob: -16.634782791137695
    10. ' )' → logprob: -17.009782791137695

Token 71: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009333750349469483
    2. '):' → logprob: -7.0009331703186035
    3. ')' → logprob: -11.750933647155762
    4. '->' → logprob: -12.375933647155762
    5. ':
' → logprob: -12.500933647155762
    6. ' :' → logprob: -13.250933647155762
    7. ' ->' → logprob: -13.250933647155762
    8. '():' → logprob: -14.375933647155762
    9. ':**' → logprob: -14.875933647155762
    10. ':return' → logprob: -14.875933647155762

Token 72: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0007110013975761831
    2. 'None' → logprob: -7.250710964202881
    3. ' ' → logprob: -13.875711441040039
    4. ' none' → logprob: -17.75071144104004
    5. ' ' → logprob: -18.50071144104004
    6. ' )' → logprob: -18.87571144104004
    7. ' float' → logprob: -19.00071144104004
    8. ' '' → logprob: -19.12571144104004
    9. '_None' → logprob: -19.62571144104004
    10. ')' → logprob: -20.12571144104004

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006344011635519564
    2. '):' → logprob: -7.37563419342041
    3. ':
' → logprob: -12.62563419342041
    4. ' :' → logprob: -13.50063419342041
    5. ',' → logprob: -14.12563419342041
    6. '       ' → logprob: -14.37563419342041
    7. '():' → logprob: -14.62563419342041
    8. ':**' → logprob: -15.00063419342041
    9. ':return' → logprob: -15.37563419342041
    10. ')' → logprob: -15.50063419342041

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006042646709829569
    2. 'self' → logprob: -7.500604152679443
    3. ' self' → logprob: -10.375604629516602
    4. '   ' → logprob: -11.500604629516602
    5. ' ' → logprob: -13.125604629516602
    6. '    ' → logprob: -13.125604629516602
    7. '      ' → logprob: -13.500604629516602
    8. '```' → logprob: -13.500604629516602
    9. '<|end|>' → logprob: -14.375604629516602
    10. ')' → logprob: -14.375604629516602

Token 75: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6941375732421875
    2. ' self' → logprob: -0.9441375732421875
    3. 'self' (adapté à ' self') → logprob: -2.1941375732421875
    4. ' ' → logprob: -11.569137573242188
    5. ' ' → logprob: -12.194137573242188
    6. '	self' → logprob: -12.569137573242188
    7. '   ' → logprob: -12.694137573242188
    8. '        ' → logprob: -13.069137573242188
    9. 'super' → logprob: -14.194137573242188
    10. '      ' → logprob: -14.944137573242188

Token 76: '.distance' (ID: 65482)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004092766437679529
    2. '.distance' → logprob: -5.504092693328857
    3. 'distance' → logprob: -12.504093170166016
    4. '.space' → logprob: -13.504093170166016
    5. ' .' → logprob: -14.004093170166016
    6. ').' → logprob: -14.129093170166016
    7. '.dist' → logprob: -14.629093170166016
    8. ':' → logprob: -14.629093170166016
    9. '.py' → logprob: -14.879093170166016
    10. '.value' → logprob: -15.129093170166016

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.579544723033905
    2. ' =' → logprob: -0.829544723033905
    3. ',' → logprob: -5.954544544219971
    4. ':' → logprob: -7.329544544219971
    5. ' ,' → logprob: -9.329545021057129
    6. ')' → logprob: -9.579545021057129
    7. '<|end|>' → logprob: -9.704545021057129
    8. '_' → logprob: -10.329545021057129
    9. ' ' → logprob: -11.079545021057129
    10. '<|end|>' → logprob: -11.329545021057129

Token 78: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4740773141384125
    2. ' distance' → logprob: -0.9740773439407349
    3. '(distance' → logprob: -15.599077224731445
    4. 'int' → logprob: -16.099077224731445
    5. ' ' → logprob: -18.099077224731445
    6. ' distancia' → logprob: -18.974077224731445
    7. '距离' → logprob: -19.224077224731445
    8. ' int' → logprob: -19.474077224731445
    9. 'space' → logprob: -19.474077224731445
    10. 'dist' → logprob: -19.599077224731445

Token 79: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022996552288532257
    2. 'self' → logprob: -6.377299785614014
    3. '<|end|>' → logprob: -8.002299308776855
    4. '        ' → logprob: -9.127299308776855
    5. ' self' → logprob: -9.877299308776855
    6. '
' → logprob: -10.252299308776855
    7. ',' → logprob: -11.002299308776855
    8. '        
' → logprob: -11.002299308776855
    9. ' ' → logprob: -11.252299308776855
    10. ' 
' → logprob: -12.752299308776855

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002333428245037794
    2. 'self' → logprob: -6.627333641052246
    3. ' self' → logprob: -7.877333641052246
    4. '<|end|>' → logprob: -8.377333641052246
    5. '        ' → logprob: -8.502333641052246
    6. ' ' → logprob: -9.377333641052246
    7. ',' → logprob: -10.377333641052246
    8. '
' → logprob: -10.502333641052246
    9. ' 
' → logprob: -11.627333641052246
    10. '        
' → logprob: -11.877333641052246

Token 81: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2607002854347229
    2. ' self' → logprob: -1.5107002258300781
    3. '       ' → logprob: -4.760700225830078
    4. ' ' → logprob: -9.510700225830078
    5. '	self' → logprob: -9.885700225830078
    6. '   ' → logprob: -11.010700225830078
    7. '
' → logprob: -11.260700225830078
    8. ' ' → logprob: -12.010700225830078
    9. '        ' → logprob: -12.760700225830078
    10. ' 
' → logprob: -13.635700225830078

Token 82: '.attack' (ID: 117247)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.746380237629637e-05
    2. '.attack' → logprob: -9.375097274780273
    3. ' .' → logprob: -12.125097274780273
    4. '.space' → logprob: -12.250097274780273
    5. 'space' → logprob: -15.125097274780273
    6. '.period' → logprob: -15.500097274780273
    7. 'attack' → logprob: -15.500097274780273
    8. ' ' → logprob: -16.000097274780273
    9. '.​' → logprob: -16.125097274780273
    10. ')' → logprob: -16.625097274780273

Token 83: '_probability' (ID: 182299)
  Prédit: '_probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_probability' → logprob: -0.0012915473198518157
    2. '_' → logprob: -6.751291751861572
    3. '_prob' → logprob: -9.251291275024414
    4. ' _' → logprob: -11.251291275024414
    5. '_type' → logprob: -12.501291275024414
    6. '_frequency' → logprob: -13.251291275024414
    7. '_pro' → logprob: -13.501291275024414
    8. '_p' → logprob: -13.751291275024414
    9. '_possible' → logprob: -14.126291275024414
    10. '_space' → logprob: -15.126291275024414

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0728694275021553
    2. ' ' → logprob: -3.3228695392608643
    3. '=' → logprob: -3.5728695392608643
    4. '<|end|>' → logprob: -5.322869300842285
    5. '_' → logprob: -7.572869300842285
    6. ' *' → logprob: -7.947869300842285
    7. ')' → logprob: -8.697869300842285
    8. ' ' → logprob: -10.072869300842285
    9. '_space' → logprob: -10.697869300842285
    10. '<|end|>' → logprob: -10.697869300842285

Token 85: ' attack' (ID: 10192)
  Prédit: ' attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' attack' → logprob: -0.005234475247561932
    2. 'attack' → logprob: -5.255234241485596
    3. ' ' → logprob: -14.755234718322754
    4. ' ' → logprob: -15.630234718322754
    5. ' float' → logprob: -15.880234718322754
    6. 'att' → logprob: -17.630233764648438
    7. ' ataque' → logprob: -17.755233764648438
    8. '_attack' → logprob: -17.880233764648438
    9. '.attack' → logprob: -18.130233764648438
    10. ' attaque' → logprob: -19.255233764648438

Token 86: '_probability' (ID: 182299)
  Prédit: '_probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_probability' → logprob: -0.25245311856269836
    2. '_' → logprob: -1.502453088760376
    3. '_prob' → logprob: -7.752453327178955
    4. '_p' → logprob: -10.252452850341797
    5. ' _' → logprob: -10.877452850341797
    6. '_pro' → logprob: -12.502452850341797
    7. '_
' → logprob: -12.502452850341797
    8. 'ed' → logprob: -12.627452850341797
    9. 's' → logprob: -12.627452850341797
    10. 'ing' → logprob: -13.002452850341797

Token 87: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5055966377258301
    2. '<|end|>' → logprob: -1.00559663772583
    3. '<|end|>' → logprob: -4.63059663772583
    4. '

' → logprob: -5.00559663772583
    5. '   ' → logprob: -5.13059663772583
    6. ':' → logprob: -6.00559663772583
    7. '' → logprob: -6.75559663772583
    8. '```' → logprob: -6.88059663772583
    9. ' ' → logprob: -7.25559663772583
    10. '.' → logprob: -7.38059663772583

Token 88: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02440359629690647
    2. 'class' → logprob: -4.6494035720825195
    3. '

' → logprob: -5.1494035720825195
    4. '<|end|>' → logprob: -5.5244035720825195
    5. '<|end|>' → logprob: -6.8994035720825195
    6. '.' → logprob: -7.1494035720825195
    7. '   ' → logprob: -7.6494035720825195
    8. ':' → logprob: -7.7744035720825195
    9. '' → logprob: -7.8994035720825195
    10. '\n' → logprob: -8.02440357208252

Token 89: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004317603074014187
    2. '
' → logprob: -6.754317760467529
    3. ' class' → logprob: -6.879317760467529
    4. '@' → logprob: -7.129317760467529
    5. 'def' (adapté à ' def') → logprob: -7.629317760467529
    6. '   ' → logprob: -7.629317760467529
    7. '@property' → logprob: -9.504317283630371
    8. '

' → logprob: -9.879317283630371
    9. ' ' → logprob: -9.879317283630371
    10. '```' → logprob: -10.879317283630371

Token 90: ' maximal' (ID: 65414)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3096446394920349
    2. '_probability' → logprob: -1.5596446990966797
    3. ' _' → logprob: -4.30964469909668
    4. '_prob' → logprob: -4.55964469909668
    5. '_space' → logprob: -4.80964469909668
    6. ' ' → logprob: -5.30964469909668
    7. '_repr' → logprob: -5.93464469909668
    8. '_total' → logprob: -6.30964469909668
    9. ' __' → logprob: -6.43464469909668
    10. '_max' → logprob: -6.55964469909668

Token 91: '_cost' (ID: 36820)
  Prédit: '_probability'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_probability' → logprob: -0.7706635594367981
    2. '_' → logprob: -1.0206634998321533
    3. '_attack' → logprob: -2.1456634998321533
    4. '_distance' → logprob: -3.7706634998321533
    5. '_r' → logprob: -4.020663738250732
    6. '_prob' → logprob: -4.770663738250732
    7. '_segment' → logprob: -6.520663738250732
    8. '_possible' → logprob: -6.645663738250732
    9. '_value' → logprob: -7.645663738250732
    10. '_score' → logprob: -7.645663738250732

Token 92: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0089277233928442
    2. '(' → logprob: -4.883927822113037
    3. '_per' → logprob: -7.008927822113037
    4. '_' → logprob: -8.383927345275879
    5. 's' → logprob: -9.883927345275879
    6. '_self' → logprob: -11.133927345275879
    7. '_between' → logprob: -11.258927345275879
    8. '()' → logprob: -11.508927345275879
    9. 'self' → logprob: -11.508927345275879
    10. '_est' → logprob: -11.883927345275879

Token 93: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021303746849298477
    2. '(self' → logprob: -4.646303653717041
    3. ' )' → logprob: -5.771303653717041
    4. 'self' → logprob: -5.771303653717041
    5. ',' → logprob: -5.896303653717041
    6. '):' → logprob: -7.396303653717041
    7. ' ->' → logprob: -8.3963041305542
    8. '(' → logprob: -8.5213041305542
    9. '<|end|>' → logprob: -8.5213041305542
    10. ':' → logprob: -8.8963041305542

Token 94: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02388215810060501
    2. '(' → logprob: -3.7738821506500244
    3. ' ->' → logprob: -8.273881912231445
    4. ':' → logprob: -9.398881912231445
    5. 'self' → logprob: -9.648881912231445
    6. ' (' → logprob: -9.773881912231445
    7. ')' → logprob: -9.898881912231445
    8. '->' → logprob: -10.023881912231445
    9. '(
' → logprob: -10.773881912231445
    10. '()' → logprob: -10.773881912231445

Token 95: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.04634362831711769
    2. 'float' → logprob: -3.5463435649871826
    3. ' int' → logprob: -4.171343803405762
    4. 'int' → logprob: -6.921343803405762
    5. ' ' → logprob: -10.796343803405762
    6. ' None' → logprob: -12.296343803405762
    7. '	float' → logprob: -12.796343803405762
    8. ' flo' → logprob: -12.921343803405762
    9. '(float' → logprob: -13.296343803405762
    10. 'flo' → logprob: -13.796343803405762

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006500058807432652
    2. ' :' → logprob: -8.375650405883789
    3. ':
' → logprob: -8.750650405883789
    4. '   ' → logprob: -9.375650405883789
    5. ':return' → logprob: -9.500650405883789
    6. ' ->' → logprob: -10.250650405883789
    7. ')' → logprob: -10.750650405883789
    8. '->' → logprob: -11.250650405883789
    9. '():' → logprob: -11.875650405883789
    10. ',' → logprob: -12.250650405883789

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03275500610470772
    2. ' ' → logprob: -5.157754898071289
    3. ':' → logprob: -5.407754898071289
    4. '<|end|>' → logprob: -5.407754898071289
    5. '    ' → logprob: -5.657754898071289
    6. '        ' → logprob: -5.657754898071289
    7. ' return' → logprob: -6.032754898071289
    8. ' 
' → logprob: -6.407754898071289
    9. ':return' → logprob: -6.782754898071289
    10. '   ' → logprob: -7.032754898071289

Token 98: ' """' (ID: 9280)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47584906220436096
    2. 'return' → logprob: -0.9758490324020386
    3. '       ' → logprob: -6.600849151611328
    4. 'int' → logprob: -8.475849151611328
    5. '   ' → logprob: -9.350849151611328
    6. '```' → logprob: -10.100849151611328
    7. 'import' → logprob: -10.475849151611328
    8. ' int' → logprob: -11.600849151611328
    9. '	return' → logprob: -11.725849151611328
    10. '    ' → logprob: -12.225849151611328

Token 99: 'Cal' (ID: 7712)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2901284694671631
    2. ' return' → logprob: -1.665128469467163
    3. '       ' → logprob: -2.790128469467163
    4. '"""' → logprob: -7.290128707885742
    5. '```' → logprob: -8.415128707885742
    6. '#' → logprob: -8.540128707885742
    7. 'distance' → logprob: -10.415128707885742
    8. ' """' → logprob: -10.540128707885742
    9. '{return' → logprob: -11.290128707885742
    10. 'Return' → logprob: -11.415128707885742

Token 100: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.7200469970703125
    2. 'cule' → logprob: -0.7200469970703125
    3. 'c' → logprob: -4.3450469970703125
    4. 'culate' → logprob: -4.4700469970703125
    5. 'cula' → logprob: -6.5950469970703125
    6. '```' → logprob: -8.345046997070312
    7. 'cular' → logprob: -9.345046997070312
    8. '   ' → logprob: -9.470046997070312
    9. 'culator' → logprob: -9.845046997070312
    10. 'cu' → logprob: -10.095046997070312

Token 101: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.13271324336528778
    2. ' la' → logprob: -2.3827133178710938
    3. ' the' → logprob: -4.132713317871094
    4. 'le' → logprob: -5.382713317871094
    5. ' return' → logprob: -5.382713317871094
    6. ' self' → logprob: -6.132713317871094
    7. 's' → logprob: -6.882713317871094
    8. ' l' → logprob: -7.257713317871094
    9. 'the' → logprob: -7.382713317871094
    10. 'self' → logprob: -7.882713317871094

Token 102: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -0.08394654095172882
    2. ' cout' → logprob: -3.208946466445923
    3. 'co' → logprob: -4.083946704864502
    4. ' maximum' → logprob: -4.208946704864502
    5. 'cout' → logprob: -5.833946704864502
    6. ' maximal' → logprob: -6.958946704864502
    7. 'maximum' → logprob: -6.958946704864502
    8. ' max' → logprob: -6.958946704864502
    9. 'max' → logprob: -7.208946704864502
    10. 'c' → logprob: -8.083946228027344

Token 103: ' maximal' (ID: 65414)
  Prédit: ' maximal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.021265236660838127
    2. ' maximale' → logprob: -4.271265029907227
    3. 'max' → logprob: -5.646265029907227
    4. ' maximum' → logprob: -6.146265029907227
    5. ' max' → logprob: -7.396265029907227
    6. '_max' → logprob: -7.771265029907227
    7. 'maximum' → logprob: -8.896265029907227
    8. ' максим' → logprob: -10.271265029907227
    9. ' maksimal' → logprob: -10.271265029907227
    10. ' minimal' → logprob: -10.396265029907227

Token 104: ' pour' (ID: 1930)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.30012235045433044
    2. 'possible' → logprob: -2.5501222610473633
    3. ' du' → logprob: -3.5501222610473633
    4. ' =' → logprob: -3.8001222610473633
    5. ' )' → logprob: -3.8001222610473633
    6. ')' → logprob: -3.9251222610473633
    7. ' en' → logprob: -4.175122261047363
    8. '_possible' → logprob: -4.425122261047363
    9. ' entre' → logprob: -4.550122261047363
    10. ' maximal' → logprob: -4.925122261047363

Token 105: ' protéger' (ID: 79796)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38849541544914246
    2. ' un' → logprob: -1.5134954452514648
    3. 'self' → logprob: -3.263495445251465
    4. ' le' → logprob: -3.263495445251465
    5. ' ce' → logprob: -4.263495445251465
    6. ' une' → logprob: -5.638495445251465
    7. ' ' → logprob: -6.013495445251465
    8. ' la' → logprob: -6.388495445251465
    9. 'un' → logprob: -7.138495445251465
    10. ' a' → logprob: -7.388495445251465

Token 106: ' entièrement' (ID: 79300)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.6057696342468262
    2. ' le' → logprob: -0.8557696342468262
    3. ' un' → logprob: -4.605769634246826
    4. ' la' → logprob: -4.980769634246826
    5. 'le' → logprob: -5.480769634246826
    6. ' the' → logprob: -6.480769634246826
    7. ' toute' → logprob: -6.480769634246826
    8. 'the' → logprob: -6.980769634246826
    9. ' cette' → logprob: -7.105769634246826
    10. ' une' → logprob: -7.355769634246826

Token 107: ' ce' (ID: 2357)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.33973729610443115
    2. ' ce' → logprob: -1.5897372961044312
    3. 'le' → logprob: -2.8397374153137207
    4. ' un' → logprob: -4.089737415313721
    5. ' la' → logprob: -6.089737415313721
    6. ' the' → logprob: -6.214737415313721
    7. 'the' → logprob: -6.839737415313721
    8. 'ce' → logprob: -7.214737415313721
    9. ' ' → logprob: -7.714737415313721
    10. 'un' → logprob: -7.964737415313721

Token 108: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.026709189638495445
    2. 'segment' → logprob: -3.6517090797424316
    3. ' trajet' → logprob: -8.65170955657959
    4. '_segment' → logprob: -9.52670955657959
    5. 'Segment' → logprob: -10.52670955657959
    6. ' territoire' → logprob: -11.02670955657959
    7. 'seg' → logprob: -11.15170955657959
    8. ' Segment' → logprob: -11.27670955657959
    9. ' espace' → logprob: -11.40170955657959
    10. ' segmento' → logprob: -11.65170955657959

Token 109: '."""
' (ID: 33044)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9312397837638855
    2. ',' → logprob: -2.0562398433685303
    3. '.' → logprob: -2.6812398433685303
    4. ')' → logprob: -2.6812398433685303
    5. '       ' → logprob: -2.8062398433685303
    6. '<|end|>' → logprob: -2.8062398433685303
    7. '```' → logprob: -2.8062398433685303
    8. ':' → logprob: -3.0562398433685303
    9. ' ' → logprob: -4.306239604949951
    10. '*' → logprob: -4.431239604949951

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07762306928634644
    2. ' return' → logprob: -3.077623128890991
    3. 'return' → logprob: -4.327622890472412
    4. '<|end|>' → logprob: -5.452622890472412
    5. '   ' → logprob: -5.952622890472412
    6. ' ' → logprob: -6.202622890472412
    7. ':return' → logprob: -6.702622890472412
    8. '
' → logprob: -7.077622890472412
    9. '        ' → logprob: -7.202622890472412
    10. '#' → logprob: -7.327622890472412

Token 111: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003872277680784464
    2. '       ' → logprob: -6.253872394561768
    3. ' return' → logprob: -6.378872394561768
    4. 'import' → logprob: -8.37887191772461
    5. 'from' → logprob: -11.87887191772461
    6. '
' → logprob: -13.00387191772461
    7. '```' → logprob: -13.00387191772461
    8. 'distance' → logprob: -13.25387191772461
    9. '   ' → logprob: -14.25387191772461
    10. '#' → logprob: -14.62887191772461

Token 112: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31153297424316406
    2. ' int' → logprob: -1.436532974243164
    3. 'self' → logprob: -4.186532974243164
    4. 'int' → logprob: -4.311532974243164
    5. ' max' → logprob: -6.686532974243164
    6. ' round' → logprob: -10.936532974243164
    7. 'max' → logprob: -11.311532974243164
    8. '       ' → logprob: -11.686532974243164
    9. '   ' → logprob: -12.311532974243164
    10. ' ' → logprob: -12.311532974243164

Token 113: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -1.2113979209971149e-05
    2. 'distance' → logprob: -12.125012397766113
    3. ' .' → logprob: -12.875012397766113
    4. '.dist' → logprob: -13.375012397766113
    5. '.' → logprob: -13.500012397766113
    6. '.attack' → logprob: -14.875012397766113
    7. '.damage' → logprob: -15.125012397766113
    8. '.segment' → logprob: -15.250012397766113
    9. '.cost' → logprob: -15.625012397766113
    10. '.length' → logprob: -17.750011444091797

Token 114: '

' (ID: 279)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0026670924853533506
    2. '*' → logprob: -6.00266695022583
    3. ' ' → logprob: -9.127667427062988
    4. '<|end|>' → logprob: -9.877667427062988
    5. ' +' → logprob: -12.002667427062988
    6. '*self' → logprob: -12.002667427062988
    7. '  ' → logprob: -12.377667427062988
    8. '*object' → logprob: -12.877667427062988
    9. ')' → logprob: -13.002667427062988
    10. ' ' → logprob: -13.127667427062988

Token 115: '   ' (ID: 271)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7784026265144348
    2. '*' → logprob: -1.27840256690979
    3. '<|end|>' → logprob: -1.65340256690979
    4. '   ' → logprob: -2.90340256690979
    5. '+' → logprob: -5.278402805328369
    6. '<|end|>' → logprob: -5.403402805328369
    7. ' ' → logprob: -5.653402805328369
    8. ' +' → logprob: -7.403402805328369
    9. ' ' → logprob: -8.153402328491211
    10. '  ' → logprob: -8.153402328491211

Token 116: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ' maximal' (ID: 65414)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -1.271884799003601
    2. 'minimal' → logprob: -1.646884799003601
    3. ' expected' → logprob: -1.771884799003601
    4. 'expected' → logprob: -1.896884799003601
    5. 'def' → logprob: -3.1468849182128906
    6. ' average' → logprob: -3.5218849182128906
    7. 'prob' → logprob: -3.6468849182128906
    8. 'average' → logprob: -3.8968849182128906
    9. ' attack' → logprob: -4.146884918212891
    10. 'attack' → logprob: -4.146884918212891

Token 118: '_expected' (ID: 79906)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.15308764576911926
    2. '_probability' → logprob: -2.653087615966797
    3. '_attack' → logprob: -3.278087615966797
    4. '_' → logprob: -4.778087615966797
    5. '_r' → logprob: -4.903087615966797
    6. '_prob' → logprob: -5.278087615966797
    7. '_pro' → logprob: -5.653087615966797
    8. '_distance' → logprob: -6.778087615966797
    9. '_loss' → logprob: -6.903087615966797
    10. '_co' → logprob: -7.153087615966797

Token 119: '_attack' (ID: 118945)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.010051772929728031
    2. '_' → logprob: -5.385051727294922
    3. '_value' → logprob: -5.385051727294922
    4. '_loss' → logprob: -7.385051727294922
    5. '_r' → logprob: -9.135051727294922
    6. '_co' → logprob: -10.510051727294922
    7. ' _' → logprob: -10.760051727294922
    8. '_probability' → logprob: -11.635051727294922
    9. '_damage' → logprob: -11.635051727294922
    10. '_return' → logprob: -12.010051727294922

Token 120: '(self' (ID: 2402)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.11064066737890244
    2. '_probability' → logprob: -2.86064076423645
    3. '_r' → logprob: -3.86064076423645
    4. '_' → logprob: -4.485640525817871
    5. '()' → logprob: -5.110640525817871
    6. '_value' → logprob: -5.985640525817871
    7. '_damage' → logprob: -5.985640525817871
    8. '_prob' → logprob: -6.610640525817871
    9. '_loss' → logprob: -6.735640525817871
    10. '_rate' → logprob: -8.235640525817871

Token 121: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017880193889141083
    2. ')' → logprob: -4.517879962921143
    3. '())' → logprob: -6.017879962921143
    4. '():' → logprob: -6.267879962921143
    5. '()*' → logprob: -6.767879962921143
    6. ' ()' → logprob: -7.142879962921143
    7. '(' → logprob: -8.7678804397583
    8. ' )' → logprob: -9.7678804397583
    9. '()
' → logprob: -10.0178804397583
    10. '*' → logprob: -10.1428804397583

Token 122: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015078396536409855
    2. ' ()' → logprob: -6.751507759094238
    3. '()*' → logprob: -9.251507759094238
    4. '():' → logprob: -9.376507759094238
    5. '(' → logprob: -9.876507759094238
    6. ')' → logprob: -10.376507759094238
    7. '()->' → logprob: -10.626507759094238
    8. ' ->' → logprob: -10.751507759094238
    9. '*' → logprob: -11.501507759094238
    10. '()>' → logprob: -12.751507759094238

Token 123: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.020935729146003723
    2. 'float' → logprob: -3.8959357738494873
    3. '(float' → logprob: -9.145936012268066
    4. ' int' → logprob: -9.145936012268066
    5. ' ' → logprob: -9.270936012268066
    6. '_float' → logprob: -10.270936012268066
    7. 'int' → logprob: -10.895936012268066
    8. '	float' → logprob: -11.770936012268066
    9. '=float' → logprob: -12.270936012268066
    10. ' (' → logprob: -12.520936012268066

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08148492872714996
    2. '():' → logprob: -2.8314850330352783
    3. ' *' → logprob: -4.706484794616699
    4. ' :' → logprob: -4.956484794616699
    5. ' ():' → logprob: -6.581484794616699
    6. '*' → logprob: -6.956484794616699
    7. '()' → logprob: -7.706484794616699
    8. ':
' → logprob: -9.5814847946167
    9. '   ' → logprob: -9.9564847946167
    10. ' =' → logprob: -10.0814847946167

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7902324199676514
    2. ':' → logprob: -0.9152324199676514
    3. '   ' → logprob: -2.6652324199676514
    4. '<|end|>' → logprob: -3.5402324199676514
    5. '    ' → logprob: -4.1652326583862305
    6. '*' → logprob: -4.2902326583862305
    7. ')' → logprob: -5.7902326583862305
    8. ' ' → logprob: -5.9152326583862305
    9. ' return' → logprob: -5.9152326583862305
    10. ' *' → logprob: -6.7902326583862305

Token 126: ' """' (ID: 9280)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06210717186331749
    2. ' return' → logprob: -2.8121070861816406
    3. '       ' → logprob: -9.43710708618164
    4. 'self' → logprob: -9.93710708618164
    5. '
' → logprob: -12.56210708618164
    6. '   ' → logprob: -12.81210708618164
    7. ' self' → logprob: -13.18710708618164
    8. '{return' → logprob: -13.81210708618164
    9. ':return' → logprob: -14.18710708618164
    10. 'def' → logprob: -14.43710708618164

Token 127: 'Cal' (ID: 7712)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0016147232381626964
    2. ' return' → logprob: -6.501614570617676
    3. 'Return' → logprob: -10.126614570617676
    4. 'Calculate' → logprob: -10.376614570617676
    5. 'Calcul' → logprob: -10.876614570617676
    6. 'Retour' → logprob: -12.251614570617676
    7. 'def' → logprob: -12.376614570617676
    8. ':return' → logprob: -12.626614570617676
    9. 'eturn' → logprob: -13.501614570617676
    10. '@return' → logprob: -13.751614570617676

Token 128: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.07200823724269867
    2. 'ule' → logprob: -2.6970081329345703
    3. 'cul' → logprob: -6.94700813293457
    4. 'ul' → logprob: -7.69700813293457
    5. 'c' → logprob: -8.19700813293457
    6. 'ulate' → logprob: -8.82200813293457
    7. 'culate' → logprob: -9.32200813293457
    8. 'ulte' → logprob: -9.69700813293457
    9. '       ' → logprob: -10.94700813293457
    10. '```' → logprob: -11.32200813293457

Token 129: ' l' (ID: 305)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8831954002380371
    2. 'self' → logprob: -1.133195400238037
    3. ' the' → logprob: -1.758195400238037
    4. '(self' → logprob: -2.508195400238037
    5. 'the' → logprob: -5.133195400238037
    6. 'max' → logprob: -6.258195400238037
    7. '(' → logprob: -7.258195400238037
    8. 's' → logprob: -7.508195400238037
    9. ' max' → logprob: -8.508195877075195
    10. '
' → logprob: -8.508195877075195

Token 130: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4364440441131592
    2. ''' → logprob: -2.186444044113159
    3. 'a' → logprob: -2.186444044113159
    4. '   ' → logprob: -3.686444044113159
    5. '_' → logprob: -4.061444282531738
    6. ' a' → logprob: -4.186444282531738
    7. 'es' → logprob: -4.686444282531738
    8. ' expected' → logprob: -5.186444282531738
    9. ' '' → logprob: -5.186444282531738
    10. ' e' → logprob: -5.311444282531738

Token 131: 'attaque' (ID: 153350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3283061385154724
    2. 'expected' → logprob: -1.9533061981201172
    3. ' self' → logprob: -2.953306198120117
    4. 'attaque' → logprob: -3.703306198120117
    5. 'attack' → logprob: -4.203306198120117
    6. ' expected' → logprob: -4.578306198120117
    7. 'float' → logprob: -4.953306198120117
    8. 'max' → logprob: -5.453306198120117
    9. 'att' → logprob: -5.578306198120117
    10. ' attaque' → logprob: -5.578306198120117

Token 132: ' attend' (ID: 13384)
  Prédit: '_probability'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_probability' → logprob: -0.6859656572341919
    2. '_prob' → logprob: -1.185965657234192
    3. '_expected' → logprob: -3.1859655380249023
    4. 'prob' → logprob: -3.6859655380249023
    5. ' par' → logprob: -4.060965538024902
    6. ' maximale' → logprob: -4.060965538024902
    7. ' attend' → logprob: -4.310965538024902
    8. '   ' → logprob: -4.560965538024902
    9. '_possible' → logprob: -4.810965538024902
    10. 's' → logprob: -4.810965538024902

Token 133: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0003326049481984228
    2. 'u' → logprob: -8.500332832336426
    3. 'e' → logprob: -9.875332832336426
    4. 'ed' → logprob: -10.250332832336426
    5. ' ue' → logprob: -11.125332832336426
    6. 'ance' → logprob: -11.875332832336426
    7. 'ie' → logprob: -13.000332832336426
    8. 'ée' → logprob: -13.000332832336426
    9. 'a' → logprob: -13.500332832336426
    10. 'ues' → logprob: -13.625332832336426

Token 134: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.05464889109134674
    2. 'max' → logprob: -3.4296488761901855
    3. ' maximal' → logprob: -5.0546488761901855
    4. ' maxim' → logprob: -5.8046488761901855
    5. ' sur' → logprob: -5.8046488761901855
    6. ' max' → logprob: -6.1796488761901855
    7. '_max' → logprob: -6.5546488761901855
    8. ' maximum' → logprob: -6.6796488761901855
    9. ' au' → logprob: -6.8046488761901855
    10. ' complète' → logprob: -7.4296488761901855

Token 135: ' sans' (ID: 9828)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.475413978099823
    2. ' possible' → logprob: -2.2254140377044678
    3. ' pour' → logprob: -2.7254140377044678
    4. ' si' → logprob: -2.8504140377044678
    5. ' en' → logprob: -3.4754140377044678
    6. ' du' → logprob: -3.6004140377044678
    7. ' ' → logprob: -3.8504140377044678
    8. ' if' → logprob: -3.9754140377044678
    9. 'possible' → logprob: -5.100413799285889
    10. ' ' → logprob: -5.350413799285889

Token 136: ' protection' (ID: 11137)
  Prédit: ' protection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' protection' → logprob: -0.30972597002983093
    2. 'pro' → logprob: -1.5597259998321533
    3. 'inter' → logprob: -4.809725761413574
    4. 'prote' → logprob: -4.934725761413574
    5. ' intervention' → logprob: -5.184725761413574
    6. ' aucune' → logprob: -5.184725761413574
    7. ' défense' → logprob: -5.184725761413574
    8. ' protections' → logprob: -5.559725761413574
    9. 'def' → logprob: -5.684725761413574
    10. '_pro' → logprob: -6.059725761413574

Token 137: '."""
' (ID: 33044)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.808002233505249
    2. '.' → logprob: -1.433002233505249
    3. ' sur' → logprob: -2.433002233505249
    4. ' ' → logprob: -2.683002233505249
    5. '*' → logprob: -3.058002233505249
    6. ',' → logprob: -4.058002471923828
    7. ' pour' → logprob: -4.308002471923828
    8. ' .' → logprob: -4.308002471923828
    9. ' multip' → logprob: -4.308002471923828
    10. ' du' → logprob: -4.808002471923828

Token 138: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4357222020626068
    2. '       ' → logprob: -2.0607221126556396
    3. 'return' → logprob: -2.1857221126556396
    4. ' return' → logprob: -2.3107221126556396
    5. '   ' → logprob: -5.560722351074219
    6. '<|end|>' → logprob: -5.935722351074219
    7. ' 
' → logprob: -6.310722351074219
    8. '	return' → logprob: -6.810722351074219
    9. '        
' → logprob: -6.935722351074219
    10. '```' → logprob: -6.935722351074219

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007189844618551433
    2. ' return' → logprob: -7.25071907043457
    3. '       ' → logprob: -11.75071907043457
    4. '
' → logprob: -14.37571907043457
    5. 'ret' → logprob: -15.25071907043457
    6. '```' → logprob: -16.12571907043457
    7. '   ' → logprob: -16.75071907043457
    8. 'result' → logprob: -16.75071907043457
    9. 'distance' → logprob: -18.25071907043457
    10. ':return' → logprob: -18.37571907043457

Token 140: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693145871162415
    2. ' self' → logprob: -2.1269314289093018
    3. '(self' → logprob: -13.376931190490723
    4. '   ' → logprob: -14.376931190490723
    5. '	self' → logprob: -15.126931190490723
    6. '0' → logprob: -15.126931190490723
    7. ' ' → logprob: -15.376931190490723
    8. '       ' → logprob: -15.876931190490723
    9. '_self' → logprob: -16.87693214416504
    10. '1' → logprob: -17.25193214416504

Token 141: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.00018041854491457343
    2. 'distance' → logprob: -9.1251802444458
    3. '.attack' → logprob: -9.8751802444458
    4. '.' → logprob: -10.8751802444458
    5. ' .' → logprob: -14.5001802444458
    6. '.dist' → logprob: -15.6251802444458
    7. ' distance' → logprob: -15.7501802444458
    8. 'attack' → logprob: -16.875181198120117
    9. '.damage' → logprob: -17.250181198120117
    10. '.Distance' → logprob: -18.000181198120117

Token 142: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.006715967319905758
    2. '*' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.131715774536133
    4. ' ' → logprob: -15.381715774536133
    5. '*self' → logprob: -17.631715774536133
    6. 's' → logprob: -18.381715774536133
    7. '*object' → logprob: -18.756715774536133
    8. '#' → logprob: -18.756715774536133
    9. ' **' → logprob: -19.131715774536133
    10. '   ' → logprob: -19.131715774536133

Token 143: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.023253168910741806
    2. 'self' → logprob: -3.7732532024383545
    3. ' ' → logprob: -12.273253440856934
    4. ' ' → logprob: -13.523253440856934
    5. '	self' → logprob: -13.773253440856934
    6. '(self' → logprob: -15.023253440856934
    7. '*self' → logprob: -16.898252487182617
    8. ' 
' → logprob: -17.023252487182617
    9. '<|end|>' → logprob: -17.273252487182617
    10. '_self' → logprob: -17.773252487182617

Token 144: '.attack' (ID: 117247)
  Prédit: '.attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.attack' → logprob: -0.008691980503499508
    2. '.' → logprob: -4.758691787719727
    3. 'attack' → logprob: -9.758691787719727
    4. ' .' → logprob: -11.133691787719727
    5. '.att' → logprob: -13.633691787719727
    6. '.attach' → logprob: -14.383691787719727
    7. '.ass' → logprob: -14.508691787719727
    8. '._' → logprob: -14.758691787719727
    9. '​.' → logprob: -15.258691787719727
    10. '.at' → logprob: -15.383691787719727

Token 145: '_probability' (ID: 182299)
  Prédit: '_probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_probability' → logprob: -1.318681188422488e-05
    2. '_prob' → logprob: -11.25001335144043
    3. '_' → logprob: -17.12501335144043
    4. '_frequency' → logprob: -18.12501335144043
    5. '_p' → logprob: -18.37501335144043
    6. '_pro' → logprob: -18.50001335144043
    7. 'Probability' → logprob: -18.50001335144043
    8. '._' → logprob: -18.75001335144043
    9. '_distance' → logprob: -18.75001335144043
    10. '\' → logprob: -18.75001335144043

Token 146: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16990895569324493
    2. '<|end|>' → logprob: -1.9199090003967285
    3. '<|end|>' → logprob: -5.7949090003967285
    4. '   ' → logprob: -6.0449090003967285
    5. '```' → logprob: -6.7949090003967285
    6. '

' → logprob: -7.0449090003967285
    7. '\n' → logprob: -7.6699090003967285
    8. '    
' → logprob: -8.16990852355957
    9. '
' → logprob: -8.41990852355957
    10. ' 
' → logprob: -8.54490852355957

Token 147: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.20939326286315918
    2. '
' → logprob: -1.7093932628631592
    3. '

' → logprob: -5.334393501281738
    4. ' 
' → logprob: -6.709393501281738
    5. ' class' → logprob: -7.209393501281738
    6. '' → logprob: -8.209393501281738
    7. '\n' → logprob: -8.459393501281738
    8. ' ' → logprob: -8.459393501281738
    9. '  
' → logprob: -8.584393501281738
    10. '```' → logprob: -9.709393501281738

Token 148: ' Dataset' (ID: 79063)
  Prédit: ' Route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Route' → logprob: -0.8431052565574646
    2. ' Segment' → logprob: -1.7181053161621094
    3. ' Path' → logprob: -2.3431053161621094
    4. ' Line' → logprob: -2.7181053161621094
    5. ' Network' → logprob: -3.2181053161621094
    6. ' Railway' → logprob: -3.4681053161621094
    7. ' Train' → logprob: -3.5931053161621094
    8. ' Protection' → logprob: -3.8431053161621094
    9. ' Patrol' → logprob: -4.218105316162109
    10. ' Transport' → logprob: -4.468105316162109

Token 149: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015312091272789985
    2. '(Abstract' → logprob: -9.500153541564941
    3. ':' → logprob: -9.875153541564941
    4. ' (' → logprob: -10.875153541564941
    5. '(
' → logprob: -12.625153541564941
    6. ':
' → logprob: -13.875153541564941
    7. 'Abstract' → logprob: -14.000153541564941
    8. ',' → logprob: -14.750153541564941
    9. ' :' → logprob: -14.875153541564941
    10. '```' → logprob: -14.875153541564941

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01134900376200676
    2. ':' → logprob: -5.136349201202393
    3. ':
' → logprob: -5.636349201202393
    4. '(' → logprob: -6.511349201202393
    5. '(Abstract' → logprob: -9.511348724365234
    6. '    
' → logprob: -9.886348724365234
    7. ',' → logprob: -10.386348724365234
    8. 'ABC' → logprob: -10.511348724365234
    9. '):
' → logprob: -10.636348724365234
    10. 'Segment' → logprob: -10.761348724365234

Token 151: ' """' (ID: 9280)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4879039227962494
    2. '   ' → logprob: -1.4879039525985718
    3. ' """' → logprob: -2.2379038333892822
    4. 'def' → logprob: -3.1129038333892822
    5. '"""' (adapté à ' """') → logprob: -5.362904071807861
    6. ' __' → logprob: -5.862904071807861
    7. ' """
' → logprob: -7.737904071807861
    8. 'class' → logprob: -7.862904071807861
    9. '__' → logprob: -7.862904071807861
    10. '    ' → logprob: -9.112903594970703

Token 152: 'Enc' (ID: 11465)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.32674384117126465
    2. ' """' → logprob: -1.8267438411712646
    3. 'class' → logprob: -2.4517438411712646
    4. 'def' → logprob: -5.201744079589844
    5. ' def' → logprob: -5.451744079589844
    6. '"""
' → logprob: -6.326744079589844
    7. 'Classe' → logprob: -6.326744079589844
    8. 'La' → logprob: -6.326744079589844
    9. ' La' → logprob: -6.451744079589844
    10. ' class' → logprob: -6.451744079589844

Token 153: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.01525606494396925
    2. 'ode' → logprob: -5.765255928039551
    3. 'lasse' → logprob: -5.890255928039551
    4. 'ar' → logprob: -6.640255928039551
    5. 'l' → logprob: -6.765255928039551
    6. 'erne' → logprob: -6.890255928039551
    7. 'er' → logprob: -7.640255928039551
    8. 'eps' → logprob: -7.765255928039551
    9. 'lude' → logprob: -7.765255928039551
    10. 'lass' → logprob: -7.765255928039551

Token 154: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0005527943139895797
    2. 'ules' → logprob: -7.750552654266357
    3. 'ulates' → logprob: -9.625553131103516
    4. 'ulate' → logprob: -10.250553131103516
    5. 'ure' → logprob: -11.625553131103516
    6. 'u' → logprob: -13.000553131103516
    7. '```' → logprob: -13.000553131103516
    8. 'ulé' → logprob: -13.625553131103516
    9. 'uler' → logprob: -13.875553131103516
    10. 'le' → logprob: -13.875553131103516

Token 155: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7180624604225159
    2. ' les' → logprob: -0.9680624604225159
    3. ' un' → logprob: -3.093062400817871
    4. ' the' → logprob: -3.593062400817871
    5. ' une' → logprob: -3.843062400817871
    6. ' l' → logprob: -4.468062400817871
    7. ' des' → logprob: -4.593062400817871
    8. ' le' → logprob: -5.093062400817871
    9. '   ' → logprob: -5.718062400817871
    10. ' a' → logprob: -6.343062400817871

Token 156: ' ensemble' (ID: 33081)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.6475380659103394
    2. ' List' → logprob: -1.2725380659103394
    3. 'ensemble' → logprob: -2.647538185119629
    4. 'collection' → logprob: -4.147538185119629
    5. 'segment' → logprob: -4.272538185119629
    6. 'Liste' → logprob: -4.272538185119629
    7. ' collection' → logprob: -4.522538185119629
    8. 'list' → logprob: -4.647538185119629
    9. '_list' → logprob: -4.647538185119629
    10. 'dataset' → logprob: -5.147538185119629

Token 157: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08421922475099564
    2. ' des' → logprob: -2.834219217300415
    3. ' d' → logprob: -4.334219455718994
    4. 'de' → logprob: -4.959219455718994
    5. ' of' → logprob: -7.459219455718994
    6. ' complet' → logprob: -8.334218978881836
    7. 'd' → logprob: -8.834218978881836
    8. ' ' → logprob: -8.834218978881836
    9. '   ' → logprob: -8.959218978881836
    10. '_de' → logprob: -9.459218978881836

Token 158: ' segments' (ID: 33749)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.4915006458759308
    2. 'segments' → logprob: -1.7415006160736084
    3. 'Segments' → logprob: -2.1165006160736084
    4. 'List' → logprob: -2.8665006160736084
    5. ' segments' → logprob: -3.9915006160736084
    6. ' Segment' → logprob: -4.6165008544921875
    7. 'Tuple' → logprob: -5.3665008544921875
    8. ' List' → logprob: -6.4915008544921875
    9. 'Seg' → logprob: -9.116500854492188
    10. ' Tuple' → logprob: -9.241500854492188

Token 159: ' ainsi' (ID: 16371)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48391181230545044
    2. '   ' → logprob: -1.3589117527008057
    3. '.' → logprob: -2.9839117527008057
    4. ',' → logprob: -3.3589117527008057
    5. ')' → logprob: -4.358911991119385
    6. '):' → logprob: -4.733911991119385
    7. ':
' → logprob: -5.358911991119385
    8. ' entre' → logprob: -5.358911991119385
    9. ' :' → logprob: -6.108911991119385
    10. ' between' → logprob: -6.233911991119385

Token 160: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.0022637327201664448
    2. '   ' → logprob: -7.37726354598999
    3. ':' → logprob: -7.75226354598999
    4. 'que' → logprob: -8.127264022827148
    5. ' des' → logprob: -8.127264022827148
    6. 'class' → logprob: -8.252264022827148
    7. ',' → logprob: -9.252264022827148
    8. ' ' → logprob: -9.752264022827148
    9. '<|end|>' → logprob: -9.877264022827148
    10. '  ' → logprob: -10.502264022827148

Token 161: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.3443408012390137
    2. ' leur' → logprob: -1.4693408012390137
    3. ' la' → logprob: -1.8443408012390137
    4. ' leurs' → logprob: -2.2193408012390137
    5. ' des' → logprob: -2.5943408012390137
    6. ' l' → logprob: -2.9693408012390137
    7. '   ' → logprob: -3.5943408012390137
    8. ' their' → logprob: -3.8443408012390137
    9. 'leur' → logprob: -3.9693408012390137
    10. ' une' → logprob: -4.219340801239014

Token 162: ' budget' (ID: 9946)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.41509899497032166
    2. 'max' → logprob: -2.5400989055633545
    3. 'budget' → logprob: -2.5400989055633545
    4. 'co' → logprob: -2.9150989055633545
    5. 'points' → logprob: -3.6650989055633545
    6. 'point' → logprob: -4.040099143981934
    7. 'c' → logprob: -4.165099143981934
    8. 'maximum' → logprob: -4.165099143981934
    9. 'total' → logprob: -4.915099143981934
    10. 'name' → logprob: -5.415099143981934

Token 163: ' disponible' (ID: 32165)
  Prédit: ' disponible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' disponible' → logprob: -0.2620446979999542
    2. ' available' → logprob: -2.137044668197632
    3. ' d' → logprob: -3.637044668197632
    4. ' et' → logprob: -4.012044906616211
    5. ' de' → logprob: -4.387044906616211
    6. ' maximal' → logprob: -4.387044906616211
    7. 'available' → logprob: -4.887044906616211
    8. ' total' → logprob: -5.512044906616211
    9. '_available' → logprob: -5.637044906616211
    10. ',' → logprob: -5.637044906616211

Token 164: '."""

' (ID: 68934)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.9859346747398376
    2. ',' → logprob: -1.6109347343444824
    3. '.' → logprob: -1.7359347343444824
    4. ' et' → logprob: -2.1109347343444824
    5. ' for' → logprob: -2.9859347343444824
    6. ' ,' → logprob: -3.6109347343444824
    7. ' ' → logprob: -4.360934734344482
    8. 'pour' → logprob: -4.860934734344482
    9. ' d' → logprob: -5.110934734344482
    10. ' en' → logprob: -5.485934734344482

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5282362103462219
    2. '
' → logprob: -0.9032362103462219
    3. '    
' → logprob: -5.778236389160156
    4. 'class' → logprob: -7.403236389160156
    5. ' 
' → logprob: -7.528236389160156
    6. 'def' → logprob: -7.653236389160156
    7. '

' → logprob: -8.903236389160156
    8. ' def' → logprob: -9.653236389160156
    9. '   
' → logprob: -10.153236389160156
    10. '    ' → logprob: -10.403236389160156

Token 166: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.31656894087791443
    2. ' def' → logprob: -1.3165689706802368
    3. '__' → logprob: -6.066568851470947
    4. ' __' → logprob: -7.191568851470947
    5. '   ' → logprob: -8.441569328308105
    6. 'class' → logprob: -13.066569328308105
    7. '
' → logprob: -13.066569328308105
    8. 'slots' → logprob: -13.316569328308105
    9. 'from' → logprob: -13.441569328308105
    10. 'budget' → logprob: -13.691569328308105

Token 167: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.003018353134393692
    2. 'init' → logprob: -6.378018379211426
    3. '__' → logprob: -7.003018379211426
    4. '_init' → logprob: -8.503018379211426
    5. ' init' → logprob: -8.628018379211426
    6. ' def' → logprob: -11.128018379211426
    7. ' ' → logprob: -12.253018379211426
    8. ' ' → logprob: -13.753018379211426
    9. 'def' → logprob: -14.003018379211426
    10. ' _' → logprob: -14.128018379211426

Token 168: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.003601974807679653
    2. 'slots' → logprob: -5.628602027893066
    3. 'slot' → logprob: -14.253602027893066
    4. '_init' → logprob: -15.003602027893066
    5. '_slots' → logprob: -15.003602027893066
    6. ' init' → logprob: -15.503602027893066
    7. '   ' → logprob: -16.00360107421875
    8. 'sl' → logprob: -16.62860107421875
    9. ' slots' → logprob: -17.00360107421875
    10. '	init' → logprob: -17.50360107421875

Token 169: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008473681285977364
    2. '__(
' → logprob: -4.883473873138428
    3. '__' → logprob: -7.633473873138428
    4. '(self' → logprob: -8.50847339630127
    5. '(' → logprob: -9.13347339630127
    6. '__((' → logprob: -10.88347339630127
    7. ' (' → logprob: -11.00847339630127
    8. '<|end|>' → logprob: -11.63347339630127
    9. '__(*' → logprob: -11.63347339630127
    10. '_(' → logprob: -12.88347339630127

Token 170: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007438759785145521
    2. ' self' → logprob: -7.250743865966797
    3. '
' → logprob: -10.500743865966797
    4. '(self' → logprob: -13.125743865966797
    5. '   ' → logprob: -13.750743865966797
    6. '       ' → logprob: -14.125743865966797
    7. ' ' → logprob: -14.250743865966797
    8. '0' → logprob: -14.375743865966797
    9. '<|end|>' → logprob: -15.000743865966797
    10. ',' → logprob: -15.500743865966797

Token 171: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6620829105377197
    2. 'self' → logprob: -1.0370829105377197
    3. '__(' → logprob: -2.5370829105377197
    4. ',' → logprob: -3.2870829105377197
    5. ' (' → logprob: -5.287082672119141
    6. ' self' → logprob: -6.037082672119141
    7. '   ' → logprob: -6.162082672119141
    8. '
' → logprob: -6.662082672119141
    9. '__(
' → logprob: -7.162082672119141
    10. '(
' → logprob: -7.537082672119141

Token 172: ' n' (ID: 297)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.07779866456985474
    2. ' segments' → logprob: -2.70279860496521
    3. 'self' → logprob: -5.202798843383789
    4. 'budget' → logprob: -6.827798843383789
    5. ' budget' → logprob: -7.452798843383789
    6. ' self' → logprob: -7.577798843383789
    7. '   ' → logprob: -9.452798843383789
    8. 'segment' → logprob: -11.327798843383789
    9. '       ' → logprob: -12.202798843383789
    10. ' ' → logprob: -12.265298843383789

Token 173: '_segments' (ID: 142925)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6343465447425842
    2. '_segments' → logprob: -0.7593465447425842
    3. 'segments' → logprob: -7.3843464851379395
    4. '_st' → logprob: -8.634346961975098
    5. ' :' → logprob: -8.884346961975098
    6. ':int' → logprob: -9.009346961975098
    7. '_budget' → logprob: -9.634346961975098
    8. '_samples' → logprob: -10.009346961975098
    9. ',' → logprob: -10.134346961975098
    10. '_:' → logprob: -10.259346961975098

Token 174: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003751423500943929
    2. ':int' → logprob: -8.500374794006348
    3. ' :' → logprob: -9.000374794006348
    4. ',' → logprob: -10.125374794006348
    5. 'int' → logprob: -12.625374794006348
    6. '=' → logprob: -13.000374794006348
    7. '   ' → logprob: -14.375374794006348
    8. ' ,' → logprob: -14.625374794006348
    9. ')' → logprob: -14.875374794006348
    10. '):' → logprob: -15.375374794006348

Token 175: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0620100311934948
    2. ' int' → logprob: -2.8120100498199463
    3. ':int' → logprob: -11.312009811401367
    4. ' ' → logprob: -11.937009811401367
    5. ')' → logprob: -12.187009811401367
    6. '=int' → logprob: -12.312009811401367
    7. ':' → logprob: -12.437009811401367
    8. '   ' → logprob: -12.562009811401367
    9. '	int' → logprob: -13.312009811401367
    10. '(int' → logprob: -14.062009811401367

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014776040916331112
    2. ')' → logprob: -9.375147819519043
    3. ' ,' → logprob: -9.750147819519043
    4. ':' → logprob: -13.500147819519043
    5. ',
' → logprob: -13.625147819519043
    6. ',b' → logprob: -14.750147819519043
    7. ' ' → logprob: -14.750147819519043
    8. '   ' → logprob: -15.000147819519043
    9. '):' → logprob: -15.500147819519043
    10. '=' → logprob: -15.625147819519043

Token 177: ' budget' (ID: 9946)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.27192237973213196
    2. ' segments' → logprob: -2.0219223499298096
    3. 'budget' → logprob: -2.5219223499298096
    4. ' budget' → logprob: -3.7719223499298096
    5. 'max' → logprob: -7.396922588348389
    6. '   ' → logprob: -8.39692211151123
    7. 'total' → logprob: -8.39692211151123
    8. 'n' → logprob: -8.52192211151123
    9. 'segment' → logprob: -8.64692211151123
    10. ' max' → logprob: -9.14692211151123

Token 178: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002692032721824944
    2. ')' → logprob: -9.000268936157227
    3. '):' → logprob: -10.000268936157227
    4. ':int' → logprob: -10.500268936157227
    5. ',' → logprob: -10.625268936157227
    6. '_budget' → logprob: -10.875268936157227
    7. ' :' → logprob: -11.250268936157227
    8. ' )' → logprob: -12.125268936157227
    9. ' ):' → logprob: -12.250268936157227
    10. '<|end|>' → logprob: -13.500268936157227

Token 179: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2889031171798706
    2. 'int' → logprob: -1.5389031171798706
    3. ':' → logprob: -3.41390323638916
    4. ':int' → logprob: -5.91390323638916
    5. ' float' → logprob: -8.03890323638916
    6. ')' → logprob: -9.78890323638916
    7. ' ' → logprob: -9.91390323638916
    8. 'float' → logprob: -9.91390323638916
    9. '	int' → logprob: -10.03890323638916
    10. '[int' → logprob: -10.41390323638916

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02094286121428013
    2. ')' → logprob: -4.020942687988281
    3. '):' → logprob: -5.895942687988281
    4. '):
' → logprob: -11.520942687988281
    5. ',
' → logprob: -11.645942687988281
    6. ':' → logprob: -11.895942687988281
    7. ',)' → logprob: -12.270942687988281
    8. ' ,' → logprob: -12.395942687988281
    9. ' )' → logprob: -13.645942687988281
    10. ' ' → logprob: -14.583442687988281

Token 181: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.11311415582895279
    2. 'segments' → logprob: -2.23811411857605
    3. ' segment' → logprob: -9.863114356994629
    4. 'segment' → logprob: -9.863114356994629
    5. ' distances' → logprob: -10.363114356994629
    6. ' data' → logprob: -10.488114356994629
    7. ' segmentos' → logprob: -10.988114356994629
    8. '   ' → logprob: -11.363114356994629
    9. ' 
' → logprob: -11.488114356994629
    10. '_segments' → logprob: -11.488114356994629

Token 182: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.392202976712724e-06
    2. ' :' → logprob: -12.125006675720215
    3. '_:' → logprob: -14.625006675720215
    4. ')' → logprob: -15.750006675720215
    5. '):' → logprob: -15.750006675720215
    6. '```' → logprob: -17.1250057220459
    7. ':
' → logprob: -18.1250057220459
    8. ':list' → logprob: -18.6250057220459
    9. '_list' → logprob: -18.7500057220459
    10. '
' → logprob: -19.0000057220459

Token 183: ' List' (ID: 2655)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14121609926223755
    2. 'List' → logprob: -2.1412160396575928
    3. ' List' → logprob: -4.391216278076172
    4. ')' → logprob: -7.266216278076172
    5. ' :' → logprob: -8.266216278076172
    6. '[List' → logprob: -8.766216278076172
    7. ' [])' → logprob: -9.016216278076172
    8. '[]' → logprob: -9.141216278076172
    9. ' )' → logprob: -9.516216278076172
    10. ' []' → logprob: -9.516216278076172

Token 184: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8193366486229934e-05
    2. '[
' → logprob: -11.875018119812012
    3. ')' → logprob: -12.375018119812012
    4. 'Segment' → logprob: -12.500018119812012
    5. '```' → logprob: -13.500018119812012
    6. ' [' → logprob: -14.250018119812012
    7. '
' → logprob: -15.375018119812012
    8. '[List' → logprob: -15.500018119812012
    9. '):
' → logprob: -16.375019073486328
    10. '[Index' → logprob: -16.500019073486328

Token 185: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.00012678056373260915
    2. ' Segment' → logprob: -9.000126838684082
    3. 'Tuple' → logprob: -13.250126838684082
    4. '[' → logprob: -13.625126838684082
    5. ')' → logprob: -14.750126838684082
    6. '   ' → logprob: -18.125125885009766
    7. 'Seg' → logprob: -18.375125885009766
    8. '_segment' → logprob: -18.750125885009766
    9. ']' → logprob: -19.250125885009766
    10. 'Segments' → logprob: -19.250125885009766

Token 186: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0010119688231498003
    2. ')' → logprob: -7.251011848449707
    3. ']):' → logprob: -8.626011848449707
    4. ']):
' → logprob: -9.251011848449707
    5. ']' → logprob: -11.251011848449707
    6. ''])' → logprob: -11.626011848449707
    7. ' ])' → logprob: -13.001011848449707
    8. '):' → logprob: -14.751011848449707
    9. '[' → logprob: -15.001011848449707
    10. '],' → logprob: -15.376011848449707

Token 187: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008277330780401826
    2. ')' → logprob: -8.37582778930664
    3. ':
' → logprob: -8.37582778930664
    4. '->' → logprob: -8.50082778930664
    5. ' ->' → logprob: -9.00082778930664
    6. '):' → logprob: -10.37582778930664
    7. '   ' → logprob: -12.50082778930664
    8. ')->' → logprob: -12.75082778930664
    9. ',' → logprob: -14.50082778930664
    10. '):
' → logprob: -14.62582778930664

Token 188: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4740770161151886
    2. ' None' → logprob: -0.9740769863128662
    3. '_None' → logprob: -19.349077224731445
    4. '   ' → logprob: -19.474077224731445
    5. ' ' → logprob: -19.974077224731445
    6. ' ' → logprob: -20.599077224731445
    7. '=None' → logprob: -21.349077224731445
    8. '(None' → logprob: -21.474077224731445
    9. 'none' → logprob: -21.474077224731445
    10. '_none' → logprob: -21.974077224731445

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005930931773036718
    2. ':
' → logprob: -5.1309309005737305
    3. '):' → logprob: -13.88093090057373
    4. '   ' → logprob: -14.50593090057373
    5. '):
' → logprob: -15.63093090057373
    6. ':def' → logprob: -15.88093090057373
    7. ')' → logprob: -16.005931854248047
    8. ':

' → logprob: -16.130931854248047
    9. ':return' → logprob: -16.380931854248047
    10. ':void' → logprob: -16.755931854248047

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022439735766965896
    2. ':' → logprob: -9.625224113464355
    3. '
' → logprob: -10.125224113464355
    4. 'self' → logprob: -10.375224113464355
    5. '```' → logprob: -10.750224113464355
    6. '<|end|>' → logprob: -10.750224113464355
    7. '   ' → logprob: -11.375224113464355
    8. ')' → logprob: -11.750224113464355
    9. ',' → logprob: -12.750224113464355
    10. '	' → logprob: -12.875224113464355

Token 191: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07086771726608276
    2. '       ' → logprob: -3.0708677768707275
    3. ' self' → logprob: -3.8208677768707275
    4. '   ' → logprob: -9.195867538452148
    5. '	self' → logprob: -10.945867538452148
    6. ' ' → logprob: -12.445867538452148
    7. '     ' → logprob: -14.820867538452148
    8. '	' → logprob: -15.070867538452148
    9. ' ' → logprob: -15.445867538452148
    10. '
' → logprob: -15.570867538452148

Token 192: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.05602416768670082
    2. '.' → logprob: -2.9310240745544434
    3. ' .' → logprob: -7.056024074554443
    4. 'n' → logprob: -8.306024551391602
    5. '.b' → logprob: -11.306024551391602
    6. '._' → logprob: -11.931024551391602
    7. ' n' → logprob: -13.556024551391602
    8. '.__' → logprob: -13.681024551391602
    9. '.
' → logprob: -14.056024551391602
    10. '.nb' → logprob: -14.056024551391602

Token 193: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -7.052377623040229e-05
    2. '_' → logprob: -9.625070571899414
    3. '_seg' → logprob: -13.875070571899414
    4. ' _' → logprob: -13.875070571899414
    5. '_s' → logprob: -14.000070571899414
    6. '_sections' → logprob: -15.250070571899414
    7. '_segment' → logprob: -15.500070571899414
    8. 'segments' → logprob: -15.625070571899414
    9. '_points' → logprob: -16.125070571899414
    10. '_frag' → logprob: -16.250070571899414

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328216195106506
    2. '=' → logprob: -1.3132821321487427
    3. ' ' → logprob: -11.313282012939453
    4. ',' → logprob: -12.688282012939453
    5. '   ' → logprob: -13.188282012939453
    6. '=int' → logprob: -13.188282012939453
    7. '=n' → logprob: -15.188282012939453
    8. ':' → logprob: -15.313282012939453
    9. '       ' → logprob: -15.813282012939453
    10. ' =
' → logprob: -15.813282012939453

Token 195: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07889363914728165
    2. 'n' → logprob: -2.5788936614990234
    3. '	n' → logprob: -12.578893661499023
    4. '_n' → logprob: -15.453893661499023
    5. '<|end|>' → logprob: -16.328893661499023
    6. ' ' → logprob: -16.953893661499023
    7. 'segments' → logprob: -17.078893661499023
    8. ')n' → logprob: -17.578893661499023
    9. '    ' → logprob: -17.703893661499023
    10. ' н' → logprob: -17.828893661499023

Token 196: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.5213274309644476e-05
    2. 'segments' → logprob: -11.125015258789062
    3. '_' → logprob: -15.625015258789062
    4. 'Segments' → logprob: -17.375015258789062
    5. '_sections' → logprob: -17.625015258789062
    6. '_seg' → logprob: -18.000015258789062
    7. '   ' → logprob: -18.250015258789062
    8. ' _' → logprob: -18.250015258789062
    9. '_points' → logprob: -18.625015258789062
    10. '```' → logprob: -18.750015258789062

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07931482791900635
    2. '<|end|>' → logprob: -3.079314708709717
    3. '
' → logprob: -4.079314708709717
    4. ',' → logprob: -4.454314708709717
    5. '        ' → logprob: -7.579314708709717
    6. '=' → logprob: -8.079315185546875
    7. '        
' → logprob: -8.079315185546875
    8. ' ' → logprob: -9.079315185546875
    9. ',
' → logprob: -9.454315185546875
    10. ' =' → logprob: -9.829315185546875

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00389484572224319
    2. ' self' → logprob: -6.253894805908203
    3. 'self' → logprob: -6.378894805908203
    4. '        ' → logprob: -9.378894805908203
    5. ',' → logprob: -9.503894805908203
    6. '
' → logprob: -10.003894805908203
    7. ' ' → logprob: -10.878894805908203
    8. '<|end|>' → logprob: -11.503894805908203
    9. '_budget' → logprob: -12.003894805908203
    10. 'budget' → logprob: -12.128894805908203

Token 199: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023867372423410416
    2. ' self' → logprob: -4.148867607116699
    3. 'budget' → logprob: -4.898867607116699
    4. ' budget' → logprob: -8.0238676071167
    5. '       ' → logprob: -11.3988676071167
    6. '   ' → logprob: -12.6488676071167
    7. '_budget' → logprob: -12.7738676071167
    8. ' ' → logprob: -14.6488676071167
    9. '	self' → logprob: -14.7738676071167
    10. '
' → logprob: -15.1488676071167

Token 200: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.015622181817889214
    2. '.' → logprob: -5.390622138977051
    3. ' .' → logprob: -5.515622138977051
    4. 'budget' → logprob: -5.890622138977051
    5. ' =' → logprob: -6.140622138977051
    6. '_budget' → logprob: -7.515622138977051
    7. '=' → logprob: -7.640622138977051
    8. '.segment' → logprob: -8.51562213897705
    9. ' budget' → logprob: -8.89062213897705
    10. 'segments' → logprob: -9.01562213897705

Token 201: 'udget' (ID: 36671)
  Prédit: 'udget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udget' → logprob: -0.0009131324477493763
    2. 'ud' → logprob: -7.875913143157959
    3. '_budget' → logprob: -8.2509126663208
    4. '_segments' → logprob: -8.7509126663208
    5. 'budget' → logprob: -9.5009126663208
    6. 'udge' → logprob: -11.1259126663208
    7. 'segments' → logprob: -12.0009126663208
    8. '_' → logprob: -12.2509126663208
    9. '```' → logprob: -12.5009126663208
    10. '__' → logprob: -13.7509126663208

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858827963471413
    2. '=' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.173588752746582
    4. ' =
' → logprob: -16.298587799072266
    5. ',' → logprob: -17.923587799072266
    6. '<|end|>' → logprob: -18.298587799072266
    7. ')' → logprob: -18.423587799072266
    8. '_' → logprob: -18.548587799072266
    9. ' ' → logprob: -18.673587799072266
    10. ' =)' → logprob: -19.298587799072266

Token 203: ' budget' (ID: 9946)
  Prédit: ' budget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' budget' → logprob: -0.00862143188714981
    2. 'budget' → logprob: -4.7586212158203125
    3. ' ' → logprob: -12.633621215820312
    4. ' ' → logprob: -12.883621215820312
    5. '_budget' → logprob: -14.508621215820312
    6. ' presupuesto' → logprob: -16.258621215820312
    7. ' b' → logprob: -16.383621215820312
    8. 'b' → logprob: -17.008621215820312
    9. ' 
' → logprob: -17.133621215820312
    10. '    ' → logprob: -17.258621215820312

Token 204: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031650029122829437
    2. 'self' → logprob: -6.003164768218994
    3. ' self' → logprob: -7.378164768218994
    4. '
' → logprob: -10.378165245056152
    5. ',' → logprob: -11.503165245056152
    6. '<|end|>' → logprob: -12.003165245056152
    7. '	self' → logprob: -12.253165245056152
    8. '   ' → logprob: -12.503165245056152
    9. '	' → logprob: -13.378165245056152
    10. ',self' → logprob: -13.753165245056152

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007749183103442192
    2. 'self' → logprob: -5.007749080657959
    3. ' self' → logprob: -6.882749080657959
    4. '	self' → logprob: -12.632749557495117
    5. '   ' → logprob: -13.007749557495117
    6. '	' → logprob: -14.757749557495117
    7. '      ' → logprob: -14.882749557495117
    8. '
' → logprob: -14.882749557495117
    9. '[self' → logprob: -15.632749557495117
    10. ',self' → logprob: -15.632749557495117

Token 206: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09239143878221512
    2. ' self' → logprob: -2.4673914909362793
    3. '       ' → logprob: -5.717391490936279
    4. 'segments' → logprob: -8.842391014099121
    5. ' segments' → logprob: -11.842391014099121
    6. '	self' → logprob: -12.592391014099121
    7. '   ' → logprob: -14.592391014099121
    8. '(self' → logprob: -15.217391014099121
    9. 'segment' → logprob: -15.467391014099121
    10. 'Segments' → logprob: -15.467391014099121

Token 207: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.0731460228562355
    2. '.' → logprob: -2.698146104812622
    3. ' =' → logprob: -6.698145866394043
    4. ' .' → logprob: -6.823145866394043
    5. '.segment' → logprob: -7.698145866394043
    6. 'segments' → logprob: -8.573145866394043
    7. '=' → logprob: -8.698145866394043
    8. '.seg' → logprob: -10.823145866394043
    9. '_segments' → logprob: -11.323145866394043
    10. '.s' → logprob: -11.323145866394043

Token 208: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -4.0126840758603066e-05
    2. 'g' → logprob: -10.250040054321289
    3. 'gements' → logprob: -13.000040054321289
    4. 'gment' → logprob: -13.500040054321289
    5. 'ments' → logprob: -14.500040054321289
    6. 'gm' → logprob: -14.750040054321289
    7. 'quences' → logprob: -16.37504005432129
    8. 'r' → logprob: -16.75004005432129
    9. '```' → logprob: -16.75004005432129
    10. '   ' → logprob: -17.75004005432129

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519330680370331
    2. '=' → logprob: -1.5019330978393555
    3. '.' → logprob: -14.126933097839355
    4. '.extend' → logprob: -14.376933097839355
    5. ':' → logprob: -14.501933097839355
    6. '[:]' → logprob: -14.501933097839355
    7. '[' → logprob: -14.626933097839355
    8. ' ' → logprob: -15.001933097839355
    9. ')' → logprob: -15.501933097839355
    10. '.append' → logprob: -15.751933097839355

Token 210: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.2519306540489197
    2. ' segments' → logprob: -1.5019307136535645
    3. 'segment' → logprob: -14.001930236816406
    4. 'Segments' → logprob: -15.251930236816406
    5. 'seg' → logprob: -15.751930236816406
    6. '_segments' → logprob: -16.001930236816406
    7. ' segmentos' → logprob: -16.251930236816406
    8. ' segment' → logprob: -16.626930236816406
    9. '   ' → logprob: -18.251930236816406
    10. 's' → logprob: -18.501930236816406

Token 211: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16558785736560822
    2. '   ' → logprob: -2.415587902069092
    3. '<|end|>' → logprob: -2.790587902069092
    4. '    
' → logprob: -7.040587902069092
    5. '<|end|>' → logprob: -7.665587902069092
    6. '

' → logprob: -8.790587425231934
    7. 'def' → logprob: -8.915587425231934
    8. ')' → logprob: -9.165587425231934
    9. '\n' → logprob: -10.290587425231934
    10. ':' → logprob: -10.915587425231934

Token 212: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20531564950942993
    2. '   ' → logprob: -1.7053155899047852
    3. '<|end|>' → logprob: -6.080315589904785
    4. '    
' → logprob: -6.705315589904785
    5. '

' → logprob: -8.705315589904785
    6. ')' → logprob: -9.455315589904785
    7. 'class' → logprob: -9.830315589904785
    8. ' 
' → logprob: -10.955315589904785
    9. '<|end|>' → logprob: -11.205315589904785
    10. 'def' → logprob: -11.330315589904785

Token 213: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.2524021157296374e-05
    2. ' def' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.375052452087402
    4. '@' → logprob: -15.125052452087402
    5. '@property' → logprob: -16.37505340576172
    6. 'de' → logprob: -17.37505340576172
    7. '	def' → logprob: -17.50005340576172
    8. 'from' → logprob: -17.87505340576172
    9. '
' → logprob: -18.50005340576172
    10. '```' → logprob: -18.62505340576172

Token 214: ' total' (ID: 3609)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3504427969455719
    2. '__' → logprob: -1.2254427671432495
    3. '_iter' → logprob: -6.600442886352539
    4. ' def' → logprob: -8.475442886352539
    5. ' ' → logprob: -9.350442886352539
    6. ' iter' → logprob: -9.350442886352539
    7. 'def' → logprob: -9.600442886352539
    8. '_segments' → logprob: -10.100442886352539
    9. '  ' → logprob: -10.850442886352539
    10. '_' → logprob: -10.850442886352539

Token 215: '_distance' (ID: 45537)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.1385195255279541
    2. '_max' → logprob: -2.638519525527954
    3. '_distance' → logprob: -2.888519525527954
    4. '_segments' → logprob: -6.513519287109375
    5. '_' → logprob: -8.388519287109375
    6. '_budget' → logprob: -8.763519287109375
    7. '_length' → logprob: -9.013519287109375
    8. '_expected' → logprob: -9.388519287109375
    9. 'cost' → logprob: -10.138519287109375
    10. '_pro' → logprob: -10.388519287109375

Token 216: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.690834273584187e-05
    2. '(' → logprob: -10.25003719329834
    3. '()' → logprob: -14.00003719329834
    4. ' (' → logprob: -14.50003719329834
    5. '   ' → logprob: -17.000036239624023
    6. 'self' → logprob: -17.125036239624023
    7. ')' → logprob: -18.125036239624023
    8. ' ' → logprob: -19.500036239624023
    9. '(
' → logprob: -19.625036239624023
    10. ' self' → logprob: -19.750036239624023

Token 217: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06993098556995392
    2. '(self' → logprob: -2.8199310302734375
    3. '()' → logprob: -5.1949310302734375
    4. ' )' → logprob: -6.3199310302734375
    5. 'self' → logprob: -8.444931030273438
    6. '())' → logprob: -8.569931030273438
    7. '   ' → logprob: -9.194931030273438
    8. '(' → logprob: -10.069931030273438
    9. ' ' → logprob: -11.444931030273438
    10. 'def' → logprob: -11.819931030273438

Token 218: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03179030865430832
    2. '()' → logprob: -4.031790256500244
    3. '(' → logprob: -4.406790256500244
    4. ')' → logprob: -7.531790256500244
    5. ' ->' → logprob: -7.531790256500244
    6. '->' → logprob: -8.906790733337402
    7. 'self' → logprob: -9.156790733337402
    8. ':' → logprob: -11.031790733337402
    9. 'def' → logprob: -11.656790733337402
    10. '   ' → logprob: -12.406790733337402

Token 219: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.26336708664894104
    2. ' sum' → logprob: -1.7633670568466187
    3. 'int' → logprob: -2.888367176055908
    4. 'sum' → logprob: -5.763367176055908
    5. '   ' → logprob: -7.388367176055908
    6. ')' → logprob: -8.38836669921875
    7. ' ' → logprob: -8.51336669921875
    8. ' return' → logprob: -9.63836669921875
    9. '  ' → logprob: -10.13836669921875
    10. ' self' → logprob: -10.26336669921875

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018598537426441908
    2. '():' → logprob: -6.751859664916992
    3. '       ' → logprob: -8.501859664916992
    4. ' ->' → logprob: -9.001859664916992
    5. '(self' → logprob: -9.376859664916992
    6. ')' → logprob: -9.751859664916992
    7. '):' → logprob: -9.751859664916992
    8. '->' → logprob: -10.126859664916992
    9. '   ' → logprob: -10.251859664916992
    10. ':
' → logprob: -10.626859664916992

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012725738633889705
    2. ' return' → logprob: -9.750126838684082
    3. '   ' → logprob: -10.125126838684082
    4. 'return' → logprob: -11.500126838684082
    5. '    ' → logprob: -12.000126838684082
    6. '      ' → logprob: -12.500126838684082
    7. '        
' → logprob: -13.250126838684082
    8. '        ' → logprob: -13.625126838684082
    9. '     ' → logprob: -13.625126838684082
    10. ':' → logprob: -14.250126838684082

Token 222: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03484040126204491
    2. ' return' → logprob: -3.5348403453826904
    3. '       ' → logprob: -5.2848405838012695
    4. '"""' → logprob: -12.28484058380127
    5. '   ' → logprob: -13.03484058380127
    6. 'sum' → logprob: -13.40984058380127
    7. '```' → logprob: -14.40984058380127
    8. '	return' → logprob: -16.159839630126953
    9. 'total' → logprob: -16.784839630126953
    10. 'result' → logprob: -16.909839630126953

Token 223: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5759421586990356
    2. 'sum' → logprob: -0.8259421586990356
    3. 'self' → logprob: -13.325942039489746
    4. ' self' → logprob: -13.950942039489746
    5. '(sum' → logprob: -16.075942993164062
    6. '	sum' → logprob: -16.825942993164062
    7. '   ' → logprob: -16.950942993164062
    8. ' ' → logprob: -18.200942993164062
    9. '=sum' → logprob: -18.450942993164062
    10. ' ' → logprob: -19.075942993164062

Token 224: '(segment' (ID: 144369)
  Prédit: '(segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(segment' → logprob: -0.0662551149725914
    2. '(seg' → logprob: -3.0662550926208496
    3. '(s' → logprob: -4.06625509262085
    4. '(' → logprob: -7.94125509262085
    5. 'segment' → logprob: -12.066255569458008
    6. 's' → logprob: -12.691255569458008
    7. '((' → logprob: -13.066255569458008
    8. '([' → logprob: -13.941255569458008
    9. '(x' → logprob: -14.066255569458008
    10. '(se' → logprob: -14.066255569458008

Token 225: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.015956120565533638
    2. '.' → logprob: -4.765955924987793
    3. '.segment' → logprob: -5.015955924987793
    4. ' .' → logprob: -7.390955924987793
    5. '.dist' → logprob: -10.765955924987793
    6. '.token' → logprob: -11.390955924987793
    7. '.cost' → logprob: -11.890955924987793
    8. '.space' → logprob: -12.640955924987793
    9. '.s' → logprob: -12.890955924987793
    10. '.position' → logprob: -13.265955924987793

Token 226: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02325339801609516
    2. 'for' → logprob: -3.7732534408569336
    3. ')' → logprob: -12.023253440856934
    4. ' ' → logprob: -13.898253440856934
    5. '	for' → logprob: -13.898253440856934
    6. '   ' → logprob: -17.023252487182617
    7. ' )' → logprob: -17.148252487182617
    8. '    ' → logprob: -18.273252487182617
    9. '  ' → logprob: -18.773252487182617
    10. ' ' → logprob: -19.023252487182617

Token 227: ' segment' (ID: 14806)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6057027578353882
    2. ' self' → logprob: -0.8557027578353882
    3. 'segment' → logprob: -4.105702877044678
    4. ' segment' → logprob: -4.355702877044678
    5. ' ' → logprob: -12.48070240020752
    6. ' s' → logprob: -12.73070240020752
    7. '	self' → logprob: -12.85570240020752
    8. 'seg' → logprob: -13.48070240020752
    9. 's' → logprob: -14.23070240020752
    10. '   ' → logprob: -14.48070240020752

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01428126823157072
    2. 'in' → logprob: -4.264281272888184
    3. 's' → logprob: -9.264281272888184
    4. ' s' → logprob: -11.639281272888184
    5. ')' → logprob: -12.264281272888184
    6. ' ' → logprob: -12.514281272888184
    7. '.' → logprob: -13.139281272888184
    8. '<|end|>' → logprob: -14.014281272888184
    9. ' )' → logprob: -14.639281272888184
    10. 'segments' → logprob: -14.889281272888184

Token 229: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687145709991455
    2. ' self' → logprob: -1.1368714570999146
    3. '	self' → logprob: -14.886871337890625
    4. '(self' → logprob: -16.886871337890625
    5. ' ' → logprob: -18.011871337890625
    6. '=self' → logprob: -18.136871337890625
    7. ' ' → logprob: -18.636871337890625
    8. '[self' → logprob: -18.886871337890625
    9. '
' → logprob: -19.011871337890625
    10. '   ' → logprob: -19.511871337890625

Token 230: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.000206401280593127
    2. '.' → logprob: -9.000205993652344
    3. 'segments' → logprob: -9.750205993652344
    4. '.seg' → logprob: -11.500205993652344
    5. '.segment' → logprob: -11.750205993652344
    6. '.s' → logprob: -12.125205993652344
    7. ' .' → logprob: -14.375205993652344
    8. 'Segments' → logprob: -15.875205993652344
    9. '_segments' → logprob: -16.000205993652344
    10. '.sections' → logprob: -16.500205993652344

Token 231: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -7.481510692741722e-05
    2. 'g' → logprob: -9.75007438659668
    3. 'gment' → logprob: -11.25007438659668
    4. 'gements' → logprob: -13.50007438659668
    5. 'ments' → logprob: -13.75007438659668
    6. 'gm' → logprob: -14.87507438659668
    7. 'segments' → logprob: -15.62507438659668
    8. 'gs' → logprob: -15.75007438659668
    9. '.g' → logprob: -16.50007438659668
    10. 'nts' → logprob: -17.12507438659668

Token 232: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.839121826691553e-05
    2. ' )' → logprob: -9.875078201293945
    3. ')
' → logprob: -10.750078201293945
    4. '   ' → logprob: -12.625078201293945
    5. '       ' → logprob: -13.250078201293945
    6. ' ' → logprob: -16.000078201293945
    7. ')

' → logprob: -16.250078201293945
    8. ')
' → logprob: -16.750078201293945
    9. '        ' → logprob: -17.125078201293945
    10. '    ' → logprob: -17.250078201293945

Token 233: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1753191500902176
    2. '
' → logprob: -1.9253191947937012
    3. '   ' → logprob: -4.300319194793701
    4. '

' → logprob: -7.175319194793701
    5. ' class' → logprob: -8.425318717956543
    6. '<|end|>' → logprob: -8.800318717956543
    7. '    
' → logprob: -9.800318717956543
    8. ' ' → logprob: -9.800318717956543
    9. ')' → logprob: -10.425318717956543
    10. '
    
' → logprob: -11.050318717956543

Token 234: ' Input' (ID: 10090)
  Prédit: ' Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Problem' → logprob: -1.457668662071228
    2. ' Budget' → logprob: -1.832668662071228
    3. 'Problem' → logprob: -2.0826687812805176
    4. ' Solver' → logprob: -2.4576687812805176
    5. ' Solution' → logprob: -2.5826687812805176
    6. 'Solver' → logprob: -2.9576687812805176
    7. ' Protection' → logprob: -3.7076687812805176
    8. 'Solution' → logprob: -3.7076687812805176
    9. ' Strategy' → logprob: -3.7076687812805176
    10. 'Budget' → logprob: -3.7076687812805176

Token 235: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.35511326789855957
    2. 'Data' → logprob: -1.6051132678985596
    3. 'Parser' → logprob: -3.1051132678985596
    4. 'Processor' → logprob: -4.1051130294799805
    5. 'Dataset' → logprob: -4.6051130294799805
    6. 'Handler' → logprob: -4.7301130294799805
    7. ':' → logprob: -5.2301130294799805
    8. 'Generator' → logprob: -5.4801130294799805
    9. 'Iterator' → logprob: -5.8551130294799805
    10. 'Provider' → logprob: -6.1051130294799805

Token 236: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002083166502416134
    2. '(' → logprob: -6.2520833015441895
    3. ':
' → logprob: -9.502082824707031
    4. '(Abstract' → logprob: -9.752082824707031
    5. ' :' → logprob: -11.502082824707031
    6. '():' → logprob: -12.002082824707031
    7. '):' → logprob: -14.002082824707031
    8. ':**' → logprob: -14.502082824707031
    9. '<|end|>' → logprob: -14.627082824707031
    10. '(object' → logprob: -14.752082824707031

Token 237: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.00031532408320344985
    2. ' ABC' → logprob: -8.12531566619873
    3. '):
' → logprob: -11.37531566619873
    4. ')' → logprob: -12.87531566619873
    5. 'Iterator' → logprob: -13.62531566619873
    6. 'abc' → logprob: -14.00031566619873
    7. '):' → logprob: -14.12531566619873
    8. 'AB' → logprob: -14.50031566619873
    9. '):

' → logprob: -14.62531566619873
    10. 'Abstract' → logprob: -14.87531566619873

Token 238: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004879915213678032
    2. ':' → logprob: -8.37548828125
    3. '):
' → logprob: -8.87548828125
    4. ' ):' → logprob: -9.75048828125
    5. ')' → logprob: -9.87548828125
    6. '):
' → logprob: -12.37548828125
    7. ',' → logprob: -13.37548828125
    8. '):

' → logprob: -14.25048828125
    9. '():' → logprob: -15.75048828125
    10. '[' → logprob: -15.87548828125

Token 239: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01907421089708805
    2. '   ' → logprob: -4.144074440002441
    3. ':
' → logprob: -6.144074440002441
    4. ' :' → logprob: -8.019074440002441
    5. '<|end|>' → logprob: -8.644074440002441
    6. '
' → logprob: -9.394074440002441
    7. ' indentation' → logprob: -10.144074440002441
    8. '<|end|>' → logprob: -10.394074440002441
    9. '    
' → logprob: -10.644074440002441
    10. ' ind' → logprob: -10.769074440002441

Token 240: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04887859523296356
    2. '    
' → logprob: -3.7988786697387695
    3. '
' → logprob: -4.0488786697387695
    4. ' @' → logprob: -5.5488786697387695
    5. '@' → logprob: -6.1738786697387695
    6. ' 
' → logprob: -6.7988786697387695
    7. '   
' → logprob: -8.54887866973877
    8. '    ' → logprob: -9.42387866973877
    9. '  ' → logprob: -9.42387866973877
    10. ' ind' → logprob: -9.42387866973877

Token 241: 'Interface' (ID: 7078)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.19507840275764465
    2. ' @' → logprob: -2.4450783729553223
    3. 'class' → logprob: -3.5700783729553223
    4. 'abstract' → logprob: -3.5700783729553223
    5. '"""' → logprob: -3.9450783729553223
    6. 'from' → logprob: -5.070078372955322
    7. '   ' → logprob: -5.570078372955322
    8. 'def' → logprob: -5.945078372955322
    9. ' """' → logprob: -7.445078372955322
    10. '
' → logprob: -7.445078372955322

Token 242: ' abstra' (ID: 186216)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27571144700050354
    2. '   ' → logprob: -1.7757114171981812
    3. ' pour' → logprob: -3.4007115364074707
    4. 'class' → logprob: -5.025711536407471
    5. 'for' → logprob: -5.150711536407471
    6. ':' → logprob: -5.275711536407471
    7. ' des' → logprob: -5.525711536407471
    8. '):
' → logprob: -5.775711536407471
    9. ' class' → logprob: -5.900711536407471
    10. '
' → logprob: -6.025711536407471

Token 243: 'ite' (ID: 651)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -1.2632700204849243
    2. 'ite' → logprob: -1.3882700204849243
    3. 'te' → logprob: -1.7632700204849243
    4. 'class' → logprob: -2.3882699012756348
    5. 'cte' → logprob: -2.5132699012756348
    6. 't' → logprob: -2.7632699012756348
    7. 'it' → logprob: -3.1382699012756348
    8. 'tte' → logprob: -5.138269901275635
    9. 'def' → logprob: -6.263269901275635
    10. 'ction' → logprob: -6.763269901275635

Token 244: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8417482972145081
    2. ' pour' → logprob: -1.0917482376098633
    3. '   ' → logprob: -1.8417482376098633
    4. ':' → logprob: -2.9667482376098633
    5. ' des' → logprob: -4.966748237609863
    6. ' ' → logprob: -5.841748237609863
    7. '  ' → logprob: -6.091748237609863
    8. 'for' → logprob: -6.091748237609863
    9. ' de' → logprob: -6.341748237609863
    10. ' :' → logprob: -6.716748237609863

Token 245: ' le' (ID: 505)
  Prédit: ' parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parser' → logprob: -0.5057320594787598
    2. ' la' → logprob: -1.7557320594787598
    3. 'parser' → logprob: -2.6307320594787598
    4. 'la' → logprob: -2.8807320594787598
    5. 'l' → logprob: -3.2557320594787598
    6. ' l' → logprob: -4.38073205947876
    7. ' lire' → logprob: -4.75573205947876
    8. ' les' → logprob: -4.75573205947876
    9. 'an' → logprob: -5.38073205947876
    10. 'les' → logprob: -5.63073205947876

Token 246: ' parsing' (ID: 51039)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.019057489931583405
    2. 'parse' → logprob: -4.644057273864746
    3. 'parser' → logprob: -4.894057273864746
    4. ' parsing' → logprob: -7.644057273864746
    5. 'pars' → logprob: -8.019057273864746
    6. 'Parsing' → logprob: -8.644057273864746
    7. 'charg' → logprob: -8.769057273864746
    8. 'lecture' → logprob: -8.894057273864746
    9. 'lect' → logprob: -9.144057273864746
    10. '解析' → logprob: -9.519057273864746

Token 247: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.15667666494846344
    2. ' d' → logprob: -2.031676769256592
    3. ' de' → logprob: -4.781676769256592
    4. 'd' → logprob: -6.031676769256592
    5. 'des' → logprob: -6.406676769256592
    6. 'de' → logprob: -6.906676769256592
    7. ' ' → logprob: -8.781676292419434
    8. ' du' → logprob: -9.156676292419434
    9. ')' → logprob: -9.656676292419434
    10. '   ' → logprob: -10.531676292419434

Token 248: ' entr' (ID: 7072)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.05893602967262268
    2. ' entr' → logprob: -3.05893611907959
    3. ' inputs' → logprob: -5.80893611907959
    4. 'd' → logprob: -6.18393611907959
    5. ' input' → logprob: -6.43393611907959
    6. 'entr' → logprob: -7.18393611907959
    7. 'entrée' → logprob: -7.68393611907959
    8. ' fichiers' → logprob: -7.68393611907959
    9. ' lignes' → logprob: -8.05893611907959
    10. ' jeux' → logprob: -8.05893611907959

Token 249: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.002524053445085883
    2. 'ée' → logprob: -6.002523899078369
    3. 'êtes' → logprob: -10.877524375915527
    4. 'és' → logprob: -11.002524375915527
    5. 'é' → logprob: -11.502524375915527
    6. '```' → logprob: -14.002524375915527
    7. 'ees' → logprob: -14.377524375915527
    8. 'es' → logprob: -15.252524375915527
    9. 'er' → logprob: -15.252524375915527
    10. 'êts' → logprob: -15.627524375915527

Token 250: '."""

' (ID: 68934)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5850479006767273
    2. ':' → logprob: -1.460047960281372
    3. '.' → logprob: -2.585047960281372
    4. ')' → logprob: -2.960047960281372
    5. ' :' → logprob: -3.085047960281372
    6. '."""' → logprob: -4.335047721862793
    7. '):
' → logprob: -4.710047721862793
    8. '   ' → logprob: -5.085047721862793
    9. '"""' → logprob: -5.210047721862793
    10. ':
' → logprob: -6.710047721862793

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07131128013134003
    2. '@' → logprob: -3.3213112354278564
    3. '    
' → logprob: -4.0713114738464355
    4. '
' → logprob: -4.1963114738464355
    5. ' @' → logprob: -7.9463114738464355
    6. ' 
' → logprob: -9.446310997009277
    7. '   
' → logprob: -10.321310997009277
    8. '  ' → logprob: -10.446310997009277
    9. 'abstract' → logprob: -10.821310997009277
    10. '        
' → logprob: -10.821310997009277

Token 252: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -3.5954712075181305e-05
    2. ' @' → logprob: -11.000036239624023
    3. '
' → logprob: -11.250036239624023
    4. '   ' → logprob: -13.000036239624023
    5. '    
' → logprob: -13.125036239624023
    6. '@
' → logprob: -13.625036239624023
    7. '@property' → logprob: -14.750036239624023
    8. '@index' → logprob: -16.375036239624023
    9. 'abstract' → logprob: -16.500036239624023
    10. 'def' → logprob: -16.875036239624023

Token 253: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -5.3596853831550106e-05
    2. 'staticmethod' → logprob: -9.875053405761719
    3. 'classmethod' → logprob: -13.375053405761719
    4. ' abstract' → logprob: -15.000053405761719
    5. 'property' → logprob: -15.500053405761719
    6. 'ab' → logprob: -18.00005340576172
    7. 'abc' → logprob: -18.12505340576172
    8. 'abs' → logprob: -18.50005340576172
    9. 'static' → logprob: -19.12505340576172
    10. '.abstract' → logprob: -19.25005340576172

Token 254: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00043281487887725234
    2. '_method' → logprob: -7.750432968139648
    3. 'meth' → logprob: -14.250432968139648
    4. 'classmethod' → logprob: -14.500432968139648
    5. ' method' → logprob: -14.875432968139648
    6. 'abstract' → logprob: -15.500432968139648
    7. 'm' → logprob: -16.25043296813965
    8. '_' → logprob: -16.50043296813965
    9. 'staticmethod' → logprob: -16.62543296813965
    10. '	method' → logprob: -16.87543296813965

Token 255: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30959585309028625
    2. 'def' → logprob: -1.5595958232879639
    3. '(' → logprob: -3.559595823287964
    4. ' def' → logprob: -3.684595823287964
    5. '    
' → logprob: -6.934596061706543
    6. '(
' → logprob: -7.809596061706543
    7. '   ' → logprob: -8.434596061706543
    8. 'method' → logprob: -8.559596061706543
    9. '
' → logprob: -8.684596061706543
    10. ' ' → logprob: -8.684596061706543

Token 256: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32127606868743896
    2. ' def' → logprob: -2.0712761878967285
    3. '
' → logprob: -2.1962761878967285
    4. '(' → logprob: -3.5712761878967285
    5. 'method' → logprob: -5.9462761878967285
    6. '    
' → logprob: -6.3212761878967285
    7. ' ' → logprob: -6.4462761878967285
    8. '   ' → logprob: -6.9462761878967285
    9. '(
' → logprob: -7.6962761878967285
    10. '	def' → logprob: -8.19627571105957

Token 257: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005721147637814283
    2. 'staticmethod' → logprob: -5.630721092224121
    3. 'classmethod' → logprob: -7.005721092224121
    4. 'property' → logprob: -7.005721092224121
    5. 'method' → logprob: -8.505721092224121
    6. ' def' → logprob: -9.505721092224121
    7. '
' → logprob: -11.380721092224121
    8. 'abc' → logprob: -12.380721092224121
    9. 'abstract' → logprob: -12.630721092224121
    10. 'call' → logprob: -12.880721092224121

Token 258: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.5760010480880737
    2. ' parse' → logprob: -0.8260010480880737
    3. ' read' → logprob: -10.451001167297363
    4. 'read' → logprob: -10.951001167297363
    5. 'def' → logprob: -11.451001167297363
    6. ' def' → logprob: -12.826001167297363
    7. '	parse' → logprob: -14.326001167297363
    8. ' parses' → logprob: -15.326001167297363
    9. ' iter' → logprob: -15.451001167297363
    10. '__' → logprob: -16.076000213623047

Token 259: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.8828707804204896e-05
    2. '(' → logprob: -10.375048637390137
    3. '_input' → logprob: -11.375048637390137
    4. 'self' → logprob: -12.375048637390137
    5. '()' → logprob: -14.375048637390137
    6. '(s' → logprob: -15.250048637390137
    7. '(
' → logprob: -15.375048637390137
    8. ' self' → logprob: -15.875048637390137
    9. '(sel' → logprob: -16.250049591064453
    10. '(cls' → logprob: -16.375049591064453

Token 260: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02681397832930088
    2. ')' → logprob: -3.6518139839172363
    3. 'self' → logprob: -8.151813507080078
    4. '_input' → logprob: -9.026813507080078
    5. ',input' → logprob: -9.901813507080078
    6. ' ,' → logprob: -11.276813507080078
    7. 'input' → logprob: -11.526813507080078
    8. '):' → logprob: -12.651813507080078
    9. '_,' → logprob: -12.776813507080078
    10. '(self' → logprob: -12.901813507080078

Token 261: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005622646771371365
    2. ' ->' → logprob: -5.880622863769531
    3. '()' → logprob: -6.255622863769531
    4. 'self' → logprob: -8.005622863769531
    5. ')' → logprob: -8.505622863769531
    6. '(' → logprob: -8.505622863769531
    7. '->' → logprob: -9.130622863769531
    8. ' (' → logprob: -11.255622863769531
    9. ' self' → logprob: -11.505622863769531
    10. '(s' → logprob: -12.380622863769531

Token 262: ' Iterator' (ID: 41994)
  Prédit: 'Dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dataset' → logprob: -1.2265437841415405
    2. 'Tuple' → logprob: -1.8515437841415405
    3. ''' → logprob: -1.9765437841415405
    4. ' Dataset' → logprob: -1.9765437841415405
    5. ' Tuple' → logprob: -2.22654390335083
    6. ' '' → logprob: -2.60154390335083
    7. 'Iterator' → logprob: -3.35154390335083
    8. ' Iterator' → logprob: -3.97654390335083
    9. 'List' → logprob: -4.47654390335083
    10. ''T' → logprob: -4.85154390335083

Token 263: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006640645442530513
    2. ' [' → logprob: -7.750664234161377
    3. ':' → logprob: -9.125663757324219
    4. '['' → logprob: -9.875663757324219
    5. ' ' → logprob: -11.375663757324219
    6. '[[' → logprob: -11.625663757324219
    7. '[
' → logprob: -11.625663757324219
    8. '["' → logprob: -11.750663757324219
    9. '[List' → logprob: -12.000663757324219
    10. '   ' → logprob: -12.125663757324219

Token 264: 'Dataset' (ID: 37685)
  Prédit: 'Dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dataset' → logprob: -0.00017886889690998942
    2. 'Tuple' → logprob: -8.750179290771484
    3. 'str' → logprob: -11.125179290771484
    4. ' Dataset' → logprob: -12.375179290771484
    5. 'Segment' → logprob: -14.625179290771484
    6. 'int' → logprob: -15.250179290771484
    7. ''' → logprob: -15.250179290771484
    8. 'List' → logprob: -16.000179290771484
    9. 'Data' → logprob: -16.250179290771484
    10. '"' → logprob: -17.375179290771484

Token 265: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.024731608107686043
    2. ']' → logprob: -3.7747316360473633
    3. ']:
' → logprob: -7.399731636047363
    4. ']>' → logprob: -7.399731636047363
    5. '):' → logprob: -9.024731636047363
    6. '[' → logprob: -9.149731636047363
    7. ']:
' → logprob: -11.149731636047363
    8. '>' → logprob: -12.149731636047363
    9. '>:' → logprob: -12.774731636047363
    10. ']):' → logprob: -12.774731636047363

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7053924798965454
    2. ':' → logprob: -1.2053924798965454
    3. '   ' → logprob: -2.580392360687256
    4. '
' → logprob: -2.580392360687256
    5. '\n' → logprob: -3.580392360687256
    6. '():' → logprob: -4.830392360687256
    7. '<|end|>' → logprob: -5.205392360687256
    8. ':
' → logprob: -5.580392360687256
    9. ':return' → logprob: -5.955392360687256
    10. '    
' → logprob: -6.705392360687256

Token 267: ' pass' (ID: 1853)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.04360227286815643
    2. '       ' → logprob: -3.293602228164673
    3. ' ...' → logprob: -5.668602466583252
    4. 'pass' (adapté à ' pass') → logprob: -6.793602466583252
    5. '   ' → logprob: -8.043601989746094
    6. ' pass' → logprob: -8.043601989746094
    7. '...
' → logprob: -8.168601989746094
    8. '...\' → logprob: -11.168601989746094
    9. 'yield' → logprob: -11.793601989746094
    10. '"""' → logprob: -12.293601989746094

Token 268: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0914396345615387
    2. '\n' → logprob: -3.216439723968506
    3. '<|end|>' → logprob: -3.216439723968506
    4. '

' → logprob: -6.091439723968506
    5. '    
' → logprob: -6.341439723968506
    6. '   ' → logprob: -6.466439723968506
    7. 'newline' → logprob: -8.091439247131348
    8. ' 
' → logprob: -8.216439247131348
    9. '  
' → logprob: -8.466439247131348
    10. '<|end|>' → logprob: -8.591439247131348

Token 269: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.017100032418966293
    2. '
' → logprob: -4.892099857330322
    3. '   ' → logprob: -5.267099857330322
    4. '\n' → logprob: -5.892099857330322
    5. ' 
' → logprob: -7.892099857330322
    6. ' class' → logprob: -8.14210033416748
    7. '    
' → logprob: -8.26710033416748
    8. ' ' → logprob: -8.89210033416748
    9. 'c' → logprob: -8.89210033416748
    10. '\' → logprob: -9.76710033416748

Token 270: ' Std' (ID: 74505)
  Prédit: ' File'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' File' → logprob: -0.5780280232429504
    2. 'File' → logprob: -1.3280279636383057
    3. ' List' → logprob: -3.3280279636383057
    4. ' Console' → logprob: -3.7030279636383057
    5. ' Random' → logprob: -3.9530279636383057
    6. ' Segment' → logprob: -4.578028202056885
    7. ' Text' → logprob: -4.703028202056885
    8. ' Simple' → logprob: -4.703028202056885
    9. ' Concrete' → logprob: -4.828028202056885
    10. 'List' → logprob: -4.953028202056885

Token 271: 'Input' (ID: 3275)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4863012433052063
    2. 'In' → logprob: -1.2363011837005615
    3. 'Input' → logprob: -2.3613011837005615
    4. 'input' → logprob: -8.23630142211914
    5. 'Inp' → logprob: -10.73630142211914
    6. 'inp' → logprob: -10.98630142211914
    7. 'I' → logprob: -11.11130142211914
    8. 'IN' → logprob: -11.98630142211914
    9. 'i' → logprob: -12.11130142211914
    10. 'out' → logprob: -12.23630142211914

Token 272: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.006004994735121727
    2. 'Input' → logprob: -5.506004810333252
    3. 'Reader' → logprob: -6.256004810333252
    4. ':' → logprob: -14.00600528717041
    5. 'Handler' → logprob: -14.00600528717041
    6. 'Adapter' → logprob: -14.00600528717041
    7. '(Input' → logprob: -14.25600528717041
    8. '(Parser' → logprob: -14.38100528717041
    9. 'Parse' → logprob: -14.75600528717041
    10. 'er' → logprob: -14.88100528717041

Token 273: '(Input' (ID: 52522)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.7053759519476444e-05
    2. ':
' → logprob: -10.250057220458984
    3. ' :' → logprob: -11.625057220458984
    4. '():' → logprob: -11.875057220458984
    5. '(Input' → logprob: -12.750057220458984
    6. '(' → logprob: -13.625057220458984
    7. ':`' → logprob: -14.000057220458984
    8. '):' → logprob: -14.750057220458984
    9. '(Abstract' → logprob: -15.625057220458984
    10. '：' → logprob: -16.750057220458984

Token 274: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.014301493763923645
    2. 'Input' → logprob: -4.264301300048828
    3. 'Put' → logprob: -9.389301300048828
    4. 'put' → logprob: -10.764301300048828
    5. ')' → logprob: -12.014301300048828
    6. 'Reader' → logprob: -12.264301300048828
    7. 'Method' → logprob: -12.764301300048828
    8. 'Processor' → logprob: -12.889301300048828
    9. '):' → logprob: -13.139301300048828
    10. 'In' → logprob: -13.264301300048828

Token 275: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010661551496014
    2. '):
' → logprob: -6.876066207885742
    3. ':' → logprob: -10.626066207885742
    4. ' ):' → logprob: -12.251066207885742
    5. ')' → logprob: -12.876066207885742
    6. '):
' → logprob: -14.126066207885742
    7. '():' → logprob: -14.626066207885742
    8. '):

' → logprob: -15.376066207885742
    9. '   ' → logprob: -15.626066207885742
    10. ']:' → logprob: -16.751066207885742

Token 276: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0108612896874547
    2. ':
' → logprob: -5.010861396789551
    3. '   ' → logprob: -5.510861396789551
    4. '):' → logprob: -10.88586139678955
    5. ':def' → logprob: -10.88586139678955
    6. ' :' → logprob: -11.01086139678955
    7. 'def' → logprob: -11.51086139678955
    8. '):
' → logprob: -11.63586139678955
    9. ' def' → logprob: -11.76086139678955
    10. ')' → logprob: -13.01086139678955

Token 277: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05912415310740471
    2. ' def' → logprob: -2.934124231338501
    3. 'def' → logprob: -6.184123992919922
    4. '
' → logprob: -6.309123992919922
    5. '    
' → logprob: -8.059123992919922
    6. '    ' → logprob: -11.309123992919922
    7. '	def' → logprob: -11.434123992919922
    8. ' 
' → logprob: -12.684123992919922
    9. 'import' → logprob: -12.809123992919922
    10. ' indentation' → logprob: -13.434123992919922

Token 278: 'Parse' (ID: 11432)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7890874147415161
    2. 'def' → logprob: -1.1640874147415161
    3. 'class' → logprob: -1.5390874147415161
    4. ' def' → logprob: -4.539087295532227
    5. ' """' → logprob: -5.164087295532227
    6. '   ' → logprob: -7.539087295532227
    7. ' class' → logprob: -8.039087295532227
    8. '"""
' → logprob: -8.289087295532227
    9. 'Classe' → logprob: -8.414087295532227
    10. 'Class' → logprob: -8.664087295532227

Token 279: 'ur' (ID: 330)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5203669667243958
    2. 'r' → logprob: -1.645366907119751
    3. ' les' → logprob: -2.645366907119751
    4. ' standard' → logprob: -3.270366907119751
    5. ' from' → logprob: -3.520366907119751
    6. 's' → logprob: -4.64536714553833
    7. ' input' → logprob: -4.77036714553833
    8. 'from' → logprob: -5.02036714553833
    9. ' the' → logprob: -5.02036714553833
    10. ':' → logprob: -5.14536714553833

Token 280: ' qui' (ID: 2780)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.05264275521039963
    2. ' d' → logprob: -3.802642822265625
    3. ' de' → logprob: -3.802642822265625
    4. ' pour' → logprob: -5.927642822265625
    5. ' for' → logprob: -6.927642822265625
    6. ' standard' → logprob: -7.302642822265625
    7. 'des' → logprob: -7.552642822265625
    8. ' ' → logprob: -7.552642822265625
    9. 'de' → logprob: -8.052642822265625
    10. '(stdin' → logprob: -8.552642822265625

Token 281: ' lit' (ID: 11980)
  Prédit: ' lit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.013763119466602802
    2. 'lit' → logprob: -5.263762950897217
    3. ' parse' → logprob: -5.638762950897217
    4. ' utilise' → logprob: -5.888762950897217
    5. 'parse' → logprob: -6.888762950897217
    6. ' récup' → logprob: -8.013763427734375
    7. ' reads' → logprob: -8.888763427734375
    8. ' lire' → logprob: -8.888763427734375
    9. ' read' → logprob: -9.013763427734375
    10. ':' → logprob: -9.013763427734375

Token 282: ' depuis' (ID: 16277)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9270281791687012
    2. ' from' → logprob: -1.4270281791687012
    3. ' les' → logprob: -2.052028179168701
    4. ' des' → logprob: -2.302028179168701
    5. ' à' → logprob: -2.427028179168701
    6. ' depuis' → logprob: -4.427028179168701
    7. ' input' → logprob: -5.052028179168701
    8. ' le' → logprob: -5.177028179168701
    9. ' ' → logprob: -5.177028179168701
    10. 'from' → logprob: -5.427028179168701

Token 283: ' l' (ID: 305)
  Prédit: ' standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.895367443561554
    2. ' stdin' → logprob: -1.6453673839569092
    3. ' l' → logprob: -1.8953673839569092
    4. 'stdin' → logprob: -2.145367383956909
    5. ' input' → logprob: -3.145367383956909
    6. 'standard' → logprob: -3.395367383956909
    7. 'l' → logprob: -4.270367622375488
    8. ' std' → logprob: -4.645367622375488
    9. ' la' → logprob: -4.645367622375488
    10. 'input' → logprob: -5.020367622375488

Token 284: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.6643100380897522
    2. ''' → logprob: -1.0393099784851074
    3. 'a' → logprob: -2.4143099784851074
    4. 'e' → logprob: -3.9143099784851074
    5. 'es' → logprob: -4.664309978485107
    6. 'input' → logprob: -5.039309978485107
    7. 'stdin' → logprob: -5.789309978485107
    8. ''import' → logprob: -6.914309978485107
    9. '''' → logprob: -7.664309978485107
    10. ''''' → logprob: -8.164310455322266

Token 285: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.07895345985889435
    2. 'standard' → logprob: -2.578953504562378
    3. ' standart' → logprob: -11.078953742980957
    4. 'stand' → logprob: -11.328953742980957
    5. '_standard' → logprob: -11.828953742980957
    6. 'std' → logprob: -11.953953742980957
    7. 'stdin' → logprob: -12.203953742980957
    8. ' std' → logprob: -12.203953742980957
    9. ' stdin' → logprob: -12.703953742980957
    10. ' стандарт' → logprob: -13.078953742980957

Token 286: '."""

' (ID: 68934)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.36616969108581543
    2. ':' → logprob: -1.7411696910858154
    3. ' :' → logprob: -2.3661696910858154
    4. '   ' → logprob: -4.1161699295043945
    5. ' .' → logprob: -5.1161699295043945
    6. ' """' → logprob: -5.8661699295043945
    7. '```' → logprob: -5.8661699295043945
    8. '"""' → logprob: -6.4911699295043945
    9. '."""' → logprob: -6.4911699295043945
    10. ',' → logprob: -6.8661699295043945

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004098108503967524
    2. 'def' → logprob: -6.379097938537598
    3. ' def' → logprob: -6.504097938537598
    4. '    
' → logprob: -7.504097938537598
    5. '
' → logprob: -8.004097938537598
    6. '	def' → logprob: -12.629097938537598
    7. '    ' → logprob: -13.004097938537598
    8. 'import' → logprob: -13.129097938537598
    9. ' ind' → logprob: -14.379097938537598
    10. ' 
' → logprob: -14.504097938537598

Token 288: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.848420551046729e-05
    2. ' def' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.7500581741333
    4. 'import' → logprob: -18.000059127807617
    5. 'from' → logprob: -20.000059127807617
    6. '	def' → logprob: -20.500059127807617
    7. 'de' → logprob: -22.375059127807617
    8. '
' → logprob: -22.500059127807617
    9. '```' → logprob: -24.750059127807617
    10. ' ' → logprob: -24.750059127807617

Token 289: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.2420949935913086
    2. ' def' → logprob: -1.6170949935913086
    3. 'parse' → logprob: -4.867094993591309
    4. 'def' → logprob: -4.992094993591309
    5. ' __' → logprob: -6.367094993591309
    6. ' ' → logprob: -8.867094993591309
    7. '__' → logprob: -9.117094993591309
    8. ' define' → logprob: -9.992094993591309
    9. ' iter' → logprob: -10.617094993591309
    10. '_' → logprob: -11.617094993591309

Token 290: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.991464786347933e-05
    2. '(' → logprob: -9.750060081481934
    3. ' (' → logprob: -13.750060081481934
    4. 'self' → logprob: -15.375060081481934
    5. '   ' → logprob: -16.500059127807617
    6. '(
' → logprob: -16.750059127807617
    7. '(s' → logprob: -17.125059127807617
    8. ' ' → logprob: -17.625059127807617
    9. '       ' → logprob: -17.750059127807617
    10. ' self' → logprob: -18.875059127807617

Token 291: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3760010004043579
    2. ')' → logprob: -1.251001000404358
    3. '):' → logprob: -4.751000881195068
    4. '(self' → logprob: -5.001000881195068
    5. '   ' → logprob: -5.251000881195068
    6. '       ' → logprob: -5.501000881195068
    7. '):
' → logprob: -7.126000881195068
    8. '
' → logprob: -7.251000881195068
    9. ' self' → logprob: -7.626000881195068
    10. ' ' → logprob: -8.501001358032227

Token 292: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0689840242266655
    2. ':' → logprob: -3.068984031677246
    3. 'self' → logprob: -4.443984031677246
    4. '   ' → logprob: -6.193984031677246
    5. ' ->' → logprob: -6.193984031677246
    6. ' self' → logprob: -6.443984031677246
    7. '       ' → logprob: -6.818984031677246
    8. '(' → logprob: -7.568984031677246
    9. ' ' → logprob: -7.693984031677246
    10. '->' → logprob: -8.943984031677246

Token 293: ' Iterator' (ID: 41994)
  Prédit: ' Iterator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Iterator' → logprob: -0.31326398253440857
    2. 'Iterator' → logprob: -1.313264012336731
    3. '	Iterator' → logprob: -13.813263893127441
    4. '   ' → logprob: -14.813263893127441
    5. ' ' → logprob: -14.938263893127441
    6. '_iterator' → logprob: -15.563263893127441
    7. 'Iterable' → logprob: -15.563263893127441
    8. ' iter' → logprob: -16.563264846801758
    9. ' Iterable' → logprob: -16.938264846801758
    10. ' iterator' → logprob: -17.438264846801758

Token 294: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2113979209971149e-05
    2. '[
' → logprob: -11.500012397766113
    3. '[List' → logprob: -13.875012397766113
    4. ' [' → logprob: -14.250012397766113
    5. '[[' → logprob: -16.250011444091797
    6. '[self' → logprob: -16.500011444091797
    7. 'Dataset' → logprob: -16.875011444091797
    8. '\[' → logprob: -17.125011444091797
    9. '[`' → logprob: -17.625011444091797
    10. '[(' → logprob: -17.625011444091797

Token 295: 'Dataset' (ID: 37685)
  Prédit: 'Dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dataset' → logprob: -4.842555426876061e-06
    2. ' Dataset' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.7500057220459
    4. 'Datas' → logprob: -20.3750057220459
    5. 'ataset' → logprob: -21.2500057220459
    6. 'dataset' → logprob: -21.5000057220459
    7. '  ' → logprob: -22.1250057220459
    8. '.Dataset' → logprob: -22.3750057220459
    9. 'Data' → logprob: -22.5000057220459
    10. '_dataset' → logprob: -22.5000057220459

Token 296: ']:
' (ID: 22152)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6625141501426697
    2. ':' → logprob: -1.1625142097473145
    3. '):' → logprob: -1.7875142097473145
    4. ']:' → logprob: -5.6625142097473145
    5. '():
' → logprob: -8.412513732910156
    6. ':
' → logprob: -8.787513732910156
    7. '):
' → logprob: -8.787513732910156
    8. '(self' → logprob: -8.787513732910156
    9. '   ' → logprob: -9.412513732910156
    10. '>:' → logprob: -9.912513732910156

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017820450011640787
    2. '    ' → logprob: -7.626781940460205
    3. 'import' → logprob: -8.001782417297363
    4. '        ' → logprob: -8.376782417297363
    5. ' import' → logprob: -9.001782417297363
    6. '   ' → logprob: -9.001782417297363
    7. '    ' → logprob: -9.501782417297363
    8. '        
' → logprob: -9.626782417297363
    9. ' while' → logprob: -10.126782417297363
    10. ' for' → logprob: -10.126782417297363

Token 298: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.5768508315086365
    2. ' import' → logprob: -0.8268508315086365
    3. ' while' → logprob: -7.826850891113281
    4. 'while' → logprob: -7.826850891113281
    5. ' n' → logprob: -10.076850891113281
    6. 'n' → logprob: -10.076850891113281
    7. '       ' → logprob: -10.576850891113281
    8. '   ' → logprob: -13.076850891113281
    9. '```' → logprob: -14.576850891113281
    10. 'from' → logprob: -14.826850891113281

Token 299: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.061967913061380386
    2. ' sys' → logprob: -2.8119678497314453
    3. '	sys' → logprob: -15.811967849731445
    4. '=sys' → logprob: -16.561967849731445
    5. '_sys' → logprob: -17.686967849731445
    6. 'built' → logprob: -18.811967849731445
    7. '(sys' → logprob: -19.061967849731445
    8. '.sys' → logprob: -20.686967849731445
    9. 'stdin' → logprob: -21.936967849731445
    10. 'io' → logprob: -22.436967849731445

Token 300: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04427535831928253
    2. '        
' → logprob: -3.6692752838134766
    3. '
' → logprob: -4.169275283813477
    4. 'for' → logprob: -7.669275283813477
    5. '    
' → logprob: -8.044275283813477
    6. '  
' → logprob: -8.419275283813477
    7. ' for' → logprob: -8.544275283813477
    8. '       
' → logprob: -8.794275283813477
    9. '	' → logprob: -9.044275283813477
    10. '        ' → logprob: -9.169275283813477

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038178914692252874
    2. ' for' → logprob: -6.253818035125732
    3. ' line' → logprob: -7.503818035125732
    4. 'for' → logprob: -7.503818035125732
    5. '        
' → logprob: -8.753817558288574
    6. 'line' → logprob: -8.878817558288574
    7. ' lines' → logprob: -8.878817558288574
    8. '        ' → logprob: -9.378817558288574
    9. ' readline' → logprob: -9.503817558288574
    10. '      ' → logprob: -9.753817558288574

Token 302: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6937135457992554
    2. 'lines' → logprob: -1.1937135457992554
    3. 'n' → logprob: -1.6937135457992554
    4. 'line' → logprob: -5.068713665008545
    5. ' lines' → logprob: -6.193713665008545
    6. '       ' → logprob: -6.443713665008545
    7. 'input' → logprob: -6.443713665008545
    8. ' for' → logprob: -7.568713665008545
    9. ' n' → logprob: -7.693713665008545
    10. 'first' → logprob: -7.943713665008545

Token 303: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.20147502422332764
    2. 'True' → logprob: -1.7014750242233276
    3. '(True' → logprob: -9.701475143432617
    4. '   ' → logprob: -15.451475143432617
    5. '=True' → logprob: -15.576475143432617
    6. ' ' → logprob: -16.826475143432617
    7. ' Tru' → logprob: -16.951475143432617
    8. '1' → logprob: -17.451475143432617
    9. ' line' → logprob: -17.576475143432617
    10. 'line' → logprob: -17.826475143432617

Token 304: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001296662027016282
    2. ':
' → logprob: -6.876296520233154
    3. '           ' → logprob: -8.626296997070312
    4. ' :' → logprob: -9.501296997070312
    5. ',' → logprob: -12.501296997070312
    6. '():' → logprob: -13.251296997070312
    7. '):' → logprob: -13.501296997070312
    8. '       ' → logprob: -14.751296997070312
    9. ':

' → logprob: -14.876296997070312
    10. ':
' → logprob: -15.126296997070312

Token 305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0051741087809205055
    2. ' line' → logprob: -5.630174160003662
    3. 'line' → logprob: -6.505174160003662
    4. 'try' → logprob: -9.880173683166504
    5. ' try' → logprob: -11.630173683166504
    6. ' readline' → logprob: -12.130173683166504
    7. '       ' → logprob: -13.130173683166504
    8. '          ' → logprob: -13.505173683166504
    9. '               ' → logprob: -13.630173683166504
    10. '            
' → logprob: -13.755173683166504

Token 306: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.03813019394874573
    2. ' line' → logprob: -3.288130283355713
    3. '           ' → logprob: -9.538129806518555
    4. 'ligne' → logprob: -11.538129806518555
    5. 'try' → logprob: -12.788129806518555
    6. ' ligne' → logprob: -13.163129806518555
    7. 'lin' → logprob: -14.413129806518555
    8. 'raw' → logprob: -15.163129806518555
    9. 'header' → logprob: -15.163129806518555
    10. '_line' → logprob: -15.288129806518555

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197351589798927
    2. '=' → logprob: -2.8119735717773438
    3. '=line' → logprob: -12.186973571777344
    4. 's' → logprob: -14.436973571777344
    5. ' =
' → logprob: -16.561973571777344
    6. '=input' → logprob: -16.686973571777344
    7. ':' → logprob: -17.186973571777344
    8. '=
' → logprob: -17.561973571777344
    9. ' ' → logprob: -17.686973571777344
    10. 'line' → logprob: -17.936973571777344

Token 308: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759995579719543
    2. ' sys' → logprob: -0.8259995579719543
    3. 'input' → logprob: -9.95099925994873
    4. ' input' → logprob: -11.57599925994873
    5. '(sys' → logprob: -14.07599925994873
    6. 'import' → logprob: -14.07599925994873
    7. '	sys' → logprob: -14.82599925994873
    8. '=sys' → logprob: -14.95099925994873
    9. 'next' → logprob: -15.32599925994873
    10. ' ' → logprob: -16.451000213623047

Token 309: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.003212888026610017
    2. '.' → logprob: -5.753212928771973
    3. '.stdout' → logprob: -11.003212928771973
    4. '.readline' → logprob: -11.628212928771973
    5. 'stdin' → logprob: -11.753212928771973
    6. '.std' → logprob: -13.878212928771973
    7. ' stdin' → logprob: -14.378212928771973
    8. '.argv' → logprob: -16.878211975097656
    9. '(stdin' → logprob: -17.003211975097656
    10. ' .' → logprob: -17.253211975097656

Token 310: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.9146995327901095e-05
    2. '.' → logprob: -10.875019073486328
    3. ' readline' → logprob: -16.375019073486328
    4. '.read' → logprob: -19.250019073486328
    5. '.stdin' → logprob: -20.875019073486328
    6. 'read' → logprob: -21.125019073486328
    7. '.readlines' → logprob: -21.375019073486328
    8. '().' → logprob: -21.625019073486328
    9. ' .' → logprob: -22.375019073486328
    10. '.\' → logprob: -22.625019073486328

Token 311: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07077554613351822
    2. '()
' → logprob: -3.0707755088806152
    3. '().' → logprob: -3.8207755088806152
    4. '()
' → logprob: -10.695775985717773
    5. '()

' → logprob: -12.195775985717773
    6. '(' → logprob: -12.570775985717773
    7. '()\' → logprob: -14.070775985717773
    8. '.strip' → logprob: -14.570775985717773
    9. '       ' → logprob: -15.570775985717773
    10. '           ' → logprob: -16.070775985717773

Token 312: '           ' (ID: 352)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.2772738039493561
    2. '           ' → logprob: -2.0272738933563232
    3. '.rstrip' → logprob: -2.9022738933563232
    4. '().' → logprob: -3.0272738933563232
    5. '
' → logprob: -6.027273654937744
    6. '.' → logprob: -6.277273654937744
    7. '()
' → logprob: -7.277273654937744
    8. '       ' → logprob: -7.527273654937744
    9. 'rstrip' → logprob: -7.527273654937744
    10. 'strip' → logprob: -7.652273654937744

Token 313: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5841667652130127
    2. 'if' (adapté à ' if') → logprob: -0.8341667652130127
    3. '           ' → logprob: -4.834166526794434
    4. '
' → logprob: -8.459166526794434
    5. '            
' → logprob: -11.709166526794434
    6. '.strip' → logprob: -12.334166526794434
    7. '            ' → logprob: -12.584166526794434
    8. '       ' → logprob: -12.709166526794434
    9. '               ' → logprob: -13.459166526794434
    10. 'strip' → logprob: -13.584166526794434

Token 314: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.026912396773695946
    2. 'not' → logprob: -3.6519124507904053
    3. ' line' → logprob: -7.651912212371826
    4. 'line' → logprob: -8.901912689208984
    5. ' ' → logprob: -14.651912689208984
    6. '	not' → logprob: -16.526912689208984
    7. ' ' → logprob: -17.026912689208984
    8. '!' → logprob: -17.401912689208984
    9. '#line' → logprob: -17.526912689208984
    10. '(line' → logprob: -18.401912689208984

Token 315: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1602243334054947
    2. 'line' → logprob: -1.9102243185043335
    3. '	line' → logprob: -16.53522491455078
    4. '(line' → logprob: -16.91022491455078
    5. ' ' → logprob: -18.03522491455078
    6. '=line' → logprob: -18.41022491455078
    7. '#line' → logprob: -18.91022491455078
    8. '[line' → logprob: -19.66022491455078
    9. ' ' → logprob: -20.41022491455078
    10. ' lin' → logprob: -20.66022491455078

Token 316: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.13804705440998077
    2. ':' → logprob: -2.388046979904175
    3. '.' → logprob: -3.388046979904175
    4. ':
' → logprob: -5.888047218322754
    5. ' or' → logprob: -8.888047218322754
    6. '.rstrip' → logprob: -9.013047218322754
    7. ' .' → logprob: -9.513047218322754
    8. ' :' → logprob: -9.513047218322754
    9. 'strip' → logprob: -9.638047218322754
    10. '.readline' → logprob: -10.263047218322754

Token 317: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008261834154836833
    2. ':' → logprob: -7.500826358795166
    3. ':
' → logprob: -8.750825881958008
    4. '           ' → logprob: -9.500825881958008
    5. ' or' → logprob: -10.625825881958008
    6. '              ' → logprob: -12.875825881958008
    7. ' break' → logprob: -13.000825881958008
    8. ' :' → logprob: -13.375825881958008
    9. '	           ' → logprob: -13.500825881958008
    10. '                   ' → logprob: -13.750825881958008

Token 318: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.43040525913238525
    2. ' break' → logprob: -1.1804052591323853
    3. '               ' → logprob: -3.1804051399230957
    4. 'return' → logprob: -7.055405139923096
    5. ' return' → logprob: -9.430405616760254
    6. '	break' → logprob: -10.430405616760254
    7. '                   ' → logprob: -10.430405616760254
    8. '
' → logprob: -11.430405616760254
    9. '           ' → logprob: -11.680405616760254
    10. '_break' → logprob: -12.305405616760254

Token 319: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24068179726600647
    2. '
' → logprob: -2.2406818866729736
    3. '            
' → logprob: -2.2406818866729736
    4. '        
' → logprob: -7.8656816482543945
    5. '           
' → logprob: -8.740681648254395
    6. ' 
' → logprob: -9.115681648254395
    7. '    
' → logprob: -9.365681648254395
    8. '  
' → logprob: -9.615681648254395
    9. '       ' → logprob: -10.365681648254395
    10. '                
' → logprob: -10.490681648254395

Token 320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006001909729093313
    2. '            
' → logprob: -5.381001949310303
    3. '
' → logprob: -6.631001949310303
    4. '        
' → logprob: -10.756001472473145
    5. '       ' → logprob: -11.631001472473145
    6. '           
' → logprob: -12.006001472473145
    7. '          ' → logprob: -12.381001472473145
    8. ',' → logprob: -12.756001472473145
    9. ' line' → logprob: -12.881001472473145
    10. '            ' → logprob: -13.006001472473145

Token 321: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6954317092895508
    2. ' parts' → logprob: -1.6954317092895508
    3. 'n' (adapté à ' n') → logprob: -1.8204317092895508
    4. ' line' → logprob: -3.070431709289551
    5. '           ' → logprob: -3.195431709289551
    6. 'parts' → logprob: -3.320431709289551
    7. 'line' → logprob: -4.195431709289551
    8. ' try' → logprob: -4.695431709289551
    9. 'tokens' → logprob: -6.195431709289551
    10. 'try' → logprob: -6.820431709289551

Token 322: '_m' (ID: 1285)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.10868697613477707
    2. ',' → logprob: -2.358686923980713
    3. '_' → logprob: -5.358686923980713
    4. '_tokens' → logprob: -6.858686923980713
    5. '_,' → logprob: -6.983686923980713
    6. 'segments' → logprob: -7.358686923980713
    7. ',_' → logprob: -7.858686923980713
    8. ' ,' → logprob: -8.858687400817871
    9. ' =' → logprob: -9.358687400817871
    10. '_s' → logprob: -9.483687400817871

Token 323: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004031383898109198
    2. '=' → logprob: -6.004031181335449
    3. ' =' → logprob: -6.879031181335449
    4. ' ,' → logprob: -8.37903118133545
    5. '_segments' → logprob: -9.00403118133545
    6. '_str' → logprob: -9.87903118133545
    7. 's' → logprob: -10.87903118133545
    8. ')' → logprob: -11.25403118133545
    9. '_tokens' → logprob: -11.25403118133545
    10. '_,' → logprob: -11.62903118133545

Token 324: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0013423740165308118
    2. 'list' → logprob: -7.251342296600342
    3. ' line' → logprob: -7.376342296600342
    4. '[line' → logprob: -12.6263427734375
    5. 'tuple' → logprob: -13.2513427734375
    6. ' list' → logprob: -14.2513427734375
    7. '(line' → logprob: -14.8763427734375
    8. '=line' → logprob: -16.1263427734375
    9. '	line' → logprob: -16.7513427734375
    10. 'lin' → logprob: -17.1263427734375

Token 325: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.004529211670160294
    2. '.' → logprob: -5.504528999328613
    3. '.split' → logprob: -7.754528999328613
    4. '.rstrip' → logprob: -11.254528999328613
    5. ' .' → logprob: -12.004528999328613
    6. 'strip' → logprob: -13.004528999328613
    7. ' =' → logprob: -14.879528999328613
    8. '=' → logprob: -16.25452995300293
    9. '.trim' → logprob: -17.62952995300293
    10. '.str' → logprob: -18.12952995300293

Token 326: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0026383185759186745
    2. '.split' → logprob: -6.002638339996338
    3. '()' → logprob: -8.87763786315918
    4. '()
' → logprob: -11.37763786315918
    5. '.' → logprob: -11.62763786315918
    6. ' .' → logprob: -13.87763786315918
    7. 'split' → logprob: -14.00263786315918
    8. ' ().' → logprob: -14.25263786315918
    9. '()

' → logprob: -16.12763786315918
    10. ').' → logprob: -16.87763786315918

Token 327: '           ' (ID: 352)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.5008046627044678
    2. ' ==' → logprob: -1.3758046627044678
    3. '==' → logprob: -2.2508046627044678
    4. '           ' → logprob: -4.875804901123047
    5. '.' → logprob: -5.125804901123047
    6. ' if' → logprob: -5.250804901123047
    7. ' =' → logprob: -5.500804901123047
    8. 'if' → logprob: -5.750804901123047
    9. '       ' → logprob: -5.875804901123047
    10. '=' → logprob: -6.125804901123047

Token 328: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.24562567472457886
    2. ' if' → logprob: -1.6206257343292236
    3. ' ==' → logprob: -4.9956254959106445
    4. '           ' → logprob: -4.9956254959106445
    5. '==' → logprob: -5.4956254959106445
    6. '
' → logprob: -7.2456254959106445
    7. ' =' → logprob: -7.6206254959106445
    8. '=' → logprob: -7.9956254959106445
    9. '            
' → logprob: -7.9956254959106445
    10. '.split' → logprob: -8.495625495910645

Token 329: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06210504099726677
    2. 'not' → logprob: -2.8121049404144287
    3. 'n' → logprob: -9.312105178833008
    4. ' n' → logprob: -10.812105178833008
    5. ' ' → logprob: -10.937105178833008
    6. '   ' → logprob: -12.187105178833008
    7. '""' → logprob: -13.687105178833008
    8. 'n't' → logprob: -13.687105178833008
    9. '	not' → logprob: -14.062105178833008
    10. '  ' → logprob: -15.187105178833008

Token 330: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3868749439716339
    2. ' n' → logprob: -1.1368749141693115
    3. '	n' → logprob: -12.88687515258789
    4. '_n' → logprob: -13.76187515258789
    5. ' ' → logprob: -16.38687515258789
    6. '(n' → logprob: -16.88687515258789
    7. ' н' → logprob: -17.01187515258789
    8. 'line' → logprob: -17.51187515258789
    9. ')n' → logprob: -17.51187515258789
    10. ' ' → logprob: -17.88687515258789

Token 331: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -12.750003814697266
    3. 'm' → logprob: -14.500003814697266
    4. '_segments' → logprob: -17.000003814697266
    5. '```' → logprob: -17.500003814697266
    6. ')' → logprob: -17.625003814697266
    7. '_n' → logprob: -17.625003814697266
    8. ' _' → logprob: -18.000003814697266
    9. '_
' → logprob: -18.375003814697266
    10. '.' → logprob: -18.625003814697266

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6341230273246765
    2. ':
' → logprob: -1.0091230869293213
    3. ' or' → logprob: -2.2591230869293213
    4. '.split' → logprob: -9.259122848510742
    5. 'or' → logprob: -9.634122848510742
    6. '.' → logprob: -9.759122848510742
    7. ':return' → logprob: -9.759122848510742
    8. '   ' → logprob: -9.884122848510742
    9. ')' → logprob: -10.134122848510742
    10. ':
' → logprob: -10.384122848510742

Token 333: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001817386015318334
    2. ':
' → logprob: -7.001817226409912
    3. ':' → logprob: -7.251817226409912
    4. ' or' → logprob: -9.50181770324707
    5. '           ' → logprob: -10.12681770324707
    6. 'continue' → logprob: -10.25181770324707
    7. ' continue' → logprob: -10.75181770324707
    8. '                   ' → logprob: -11.50181770324707
    9. '              ' → logprob: -12.50181770324707
    10. ',' → logprob: -13.25181770324707

Token 334: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.47979727387428284
    2. ' continue' → logprob: -0.9797972440719604
    3. '               ' → logprob: -5.22979736328125
    4. ' break' → logprob: -8.72979736328125
    5. 'break' → logprob: -9.60479736328125
    6. '                   ' → logprob: -9.72979736328125
    7. '	continue' → logprob: -10.97979736328125
    8. '           ' → logprob: -11.35479736328125
    9. '
' → logprob: -11.60479736328125
    10. '_continue' → logprob: -11.85479736328125

Token 335: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15762268006801605
    2. ' =' → logprob: -2.2826225757598877
    3. '
' → logprob: -3.6576225757598877
    4. '            
' → logprob: -4.907622814178467
    5. '=' → logprob: -5.782622814178467
    6. '.split' → logprob: -6.032622814178467
    7. ')' → logprob: -6.907622814178467
    8. '               ' → logprob: -7.032622814178467
    9. ' 
' → logprob: -7.657622814178467
    10. ',' → logprob: -8.032622337341309

Token 336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10057099908590317
    2. ' =' → logprob: -2.6005709171295166
    3. '            
' → logprob: -4.225571155548096
    4. '=' → logprob: -6.475571155548096
    5. '
' → logprob: -6.725571155548096
    6. ' n' → logprob: -6.975571155548096
    7. 'n' → logprob: -7.100571155548096
    8. '               ' → logprob: -7.475571155548096
    9. '            ' → logprob: -8.225570678710938
    10. ' 
' → logprob: -8.475570678710938

Token 337: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0173100084066391
    2. '           ' → logprob: -4.64231014251709
    3. ' n' → logprob: -5.26731014251709
    4. 'tokens' → logprob: -7.14231014251709
    5. 'parts' → logprob: -7.39231014251709
    6. '=' → logprob: -8.14231014251709
    7. 'try' → logprob: -8.39231014251709
    8. '_n' → logprob: -9.01731014251709
    9. ' parts' → logprob: -9.39231014251709
    10. ' =' → logprob: -9.76731014251709

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002456034068018198
    2. '_segments' → logprob: -6.252456188201904
    3. '_,' → logprob: -8.127455711364746
    4. '_m' → logprob: -9.502455711364746
    5. ',_' → logprob: -9.752455711364746
    6. '_tokens' → logprob: -10.252455711364746
    7. '_s' → logprob: -11.002455711364746
    8. '_' → logprob: -11.127455711364746
    9. ' ,' → logprob: -11.877455711364746
    10. ',m' → logprob: -12.252455711364746

Token 339: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6937296986579895
    2. ' m' → logprob: -0.6937296986579895
    3. ' ' → logprob: -8.068729400634766
    4. ' budget' → logprob: -9.318729400634766
    5. 'budget' → logprob: -9.693729400634766
    6. '=' → logprob: -10.443729400634766
    7. '_m' → logprob: -10.818729400634766
    8. 'b' → logprob: -10.943729400634766
    9. 'space' → logprob: -11.568729400634766
    10. ' =' → logprob: -12.193729400634766

Token 340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132932484149933
    2. '=' → logprob: -1.313293218612671
    3. ',' → logprob: -11.56329345703125
    4. ')' → logprob: -11.68829345703125
    5. '<|end|>' → logprob: -11.68829345703125
    6. ' ' → logprob: -12.68829345703125
    7. '<|end|>' → logprob: -14.06329345703125
    8. ')=' → logprob: -15.68829345703125
    9. ']' → logprob: -15.81329345703125
    10. '=int' → logprob: -16.18829345703125

Token 341: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.09653348475694656
    2. 'map' → logprob: -2.7215335369110107
    3. ' n' → logprob: -3.8465335369110107
    4. 'n' → logprob: -5.346533298492432
    5. 'm' → logprob: -10.47153377532959
    6. ' [' → logprob: -10.97153377532959
    7. '[' → logprob: -11.09653377532959
    8. ' m' → logprob: -11.09653377532959
    9. ' tuple' → logprob: -11.22153377532959
    10. '[n' → logprob: -11.59653377532959

Token 342: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0037644514814019203
    2. '(' → logprob: -5.628764629364014
    3. '(str' → logprob: -9.253764152526855
    4. '(lambda' → logprob: -10.628764152526855
    5. 'int' → logprob: -10.753764152526855
    6. '(
' → logprob: -10.878764152526855
    7. ' (' → logprob: -13.753764152526855
    8. '[int' → logprob: -14.128764152526855
    9. '<int' → logprob: -14.878764152526855
    10. '(

' → logprob: -14.878764152526855

Token 343: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.020192403346300125
    2. ')' → logprob: -4.145192623138428
    3. '(' → logprob: -6.520192623138428
    4. ' n' → logprob: -7.020192623138428
    5. ')n' → logprob: -7.270192623138428
    6. 'n' → logprob: -7.645192623138428
    7. ',' → logprob: -8.02019214630127
    8. ',n' → logprob: -8.77019214630127
    9. '(m' → logprob: -9.52019214630127
    10. 'm' → logprob: -10.77019214630127

Token 344: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1602717489004135
    2. ' n' → logprob: -1.9102717638015747
    3. ')n' → logprob: -10.410271644592285
    4. ')' → logprob: -11.160271644592285
    5. '	n' → logprob: -13.285271644592285
    6. '(n' → logprob: -14.035271644592285
    7. '           ' → logprob: -15.035271644592285
    8. 'line' → logprob: -15.660271644592285
    9. ')
' → logprob: -16.2852725982666
    10. '[n' → logprob: -16.4102725982666

Token 345: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -6.897412822581828e-05
    2. '_n' → logprob: -10.500068664550781
    3. ')' → logprob: -11.125068664550781
    4. 'm' → logprob: -11.375068664550781
    5. '_' → logprob: -11.875068664550781
    6. ' m' → logprob: -12.875068664550781
    7. '(m' → logprob: -13.750068664550781
    8. ' _' → logprob: -14.000068664550781
    9. ' ' → logprob: -14.750068664550781
    10. ' n' → logprob: -14.750068664550781

Token 346: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6967319250106812
    2. '.split' → logprob: -0.6967319250106812
    3. '.strip' → logprob: -5.821732044219971
    4. '.' → logprob: -7.946732044219971
    5. ' .' → logprob: -8.946731567382812
    6. ')' → logprob: -9.446731567382812
    7. '()' → logprob: -10.571731567382812
    8. 'split' → logprob: -10.946731567382812
    9. '(split' → logprob: -12.946731567382812
    10. '.readline' → logprob: -13.446731567382812

Token 347: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03090791590511799
    2. '()' → logprob: -3.5309078693389893
    3. '())
' → logprob: -7.280908107757568
    4. '('' → logprob: -8.28090763092041
    5. '(' → logprob: -9.15590763092041
    6. ')' → logprob: -9.53090763092041
    7. '()
' → logprob: -11.53090763092041
    8. '())

' → logprob: -12.15590763092041
    9. ' ())' → logprob: -12.15590763092041
    10. '()]' → logprob: -12.53090763092041

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6087568998336792
    2. '<|end|>' → logprob: -0.8587568998336792
    3. '<|end|>' → logprob: -4.858757019042969
    4. '
' → logprob: -5.233757019042969
    5. '       ' → logprob: -5.233757019042969
    6. '            
' → logprob: -5.608757019042969
    7. ')' → logprob: -6.733757019042969
    8. '#' → logprob: -6.858757019042969
    9. '               ' → logprob: -6.983757019042969
    10. '            ' → logprob: -7.108757019042969

Token 349: ' if' (ID: 538)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.0037327378522604704
    2. '           ' → logprob: -5.753732681274414
    3. ' segments' → logprob: -8.003732681274414
    4. 'if' (adapté à ' if') → logprob: -8.878732681274414
    5. '       ' → logprob: -10.628732681274414
    6. '_segments' → logprob: -11.003732681274414
    7. '            
' → logprob: -11.128732681274414
    8. 'seg' → logprob: -12.128732681274414
    9. '
' → logprob: -12.753732681274414
    10. 'Segments' → logprob: -13.003732681274414

Token 350: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005324477795511484
    2. ' n' → logprob: -5.255324363708496
    3. 'm' → logprob: -10.005324363708496
    4. '           ' → logprob: -10.380324363708496
    5. '(n' → logprob: -12.005324363708496
    6. '   ' → logprob: -12.630324363708496
    7. 'not' → logprob: -12.880324363708496
    8. '	n' → logprob: -14.130324363708496
    9. ' not' → logprob: -14.255324363708496
    10. '0' → logprob: -15.505324363708496

Token 351: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5761479735374451
    2. '==' → logprob: -0.8261479735374451
    3. '<=' → logprob: -9.07614803314209
    4. ' <=' → logprob: -9.82614803314209
    5. ' ' → logprob: -10.70114803314209
    6. '=' → logprob: -12.07614803314209
    7. '<' → logprob: -13.32614803314209
    8. '===' → logprob: -13.70114803314209
    9. ' <' → logprob: -13.82614803314209
    10. '==
' → logprob: -13.82614803314209

Token 352: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005239445250481367
    2. ' ' → logprob: -5.255239486694336
    3. 'm' → logprob: -12.505239486694336
    4. '-' → logprob: -14.130239486694336
    5. ' m' → logprob: -14.630239486694336
    6. ' -' → logprob: -15.130239486694336
    7. '  ' → logprob: -15.942739486694336
    8. '   ' → logprob: -16.755239486694336
    9. 'n' → logprob: -17.130239486694336
    10. '    ' → logprob: -17.317739486694336

Token 353: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.8351892473874614e-05
    2. ' ' → logprob: -10.250048637390137
    3. '-' → logprob: -11.750048637390137
    4. 'm' → logprob: -12.250048637390137
    5. ' -' → logprob: -15.750048637390137
    6. ' m' → logprob: -16.75004768371582
    7. '
' → logprob: -17.43754768371582
    8. '```' → logprob: -17.56254768371582
    9. '۰' → logprob: -17.93754768371582
    10. 'n' → logprob: -18.00004768371582

Token 354: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1002107709646225
    2. 'and' → logprob: -2.350210666656494
    3. '	and' → logprob: -13.100211143493652
    4. ' or' → logprob: -14.350211143493652
    5. '           ' → logprob: -14.975211143493652
    6. ' ' → logprob: -14.975211143493652
    7. '   ' → logprob: -15.100211143493652
    8. '0' → logprob: -15.850211143493652
    9. '<|end|>' → logprob: -15.975211143493652
    10. ' и' → logprob: -16.475210189819336

Token 355: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12692853808403015
    2. ' m' → logprob: -2.1269285678863525
    3. '	m' → logprob: -15.126928329467773
    4. '   ' → logprob: -15.876928329467773
    5. '  ' → logprob: -17.626928329467773
    6. ' ' → logprob: -18.001928329467773
    7. '    ' → logprob: -18.626928329467773
    8. '           ' → logprob: -18.751928329467773
    9. '0' → logprob: -20.626928329467773
    10. ' ' → logprob: -21.251928329467773

Token 356: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04861529543995857
    2. '==' → logprob: -3.0486152172088623
    3. '0' → logprob: -11.423615455627441
    4. '<|end|>' → logprob: -11.548615455627441
    5. ' ' → logprob: -12.798615455627441
    6. ' =' → logprob: -12.798615455627441
    7. '<|end|>' → logprob: -14.548615455627441
    8. ' ' → logprob: -15.048615455627441
    9. '=' → logprob: -15.298615455627441
    10. ')==' → logprob: -15.673615455627441

Token 357: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993810087442398
    2. ' ' → logprob: -2.6949381828308105
    3. '  ' → logprob: -13.694937705993652
    4. '<|end|>' → logprob: -15.569937705993652
    5. '   ' → logprob: -16.06993865966797
    6. ' ' → logprob: -16.25743865966797
    7. '۰' → logprob: -16.81993865966797
    8. '<|end|>' → logprob: -17.44493865966797
    9. '
' → logprob: -18.06993865966797
    10. ')' → logprob: -18.13243865966797

Token 358: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '  ' → logprob: -15.875204086303711
    4. '   ' → logprob: -17.06270408630371
    5. '۰' → logprob: -18.31270408630371
    6. 'o' → logprob: -18.87520408630371
    7. '
' → logprob: -18.93770408630371
    8. '1' → logprob: -19.12520408630371
    9. '    ' → logprob: -19.18770408630371
    10. '00' → logprob: -19.37520408630371

Token 359: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47416383028030396
    2. ':' → logprob: -0.974163830280304
    3. '               ' → logprob: -10.099164009094238
    4. '           ' → logprob: -10.599164009094238
    5. ':return' → logprob: -11.599164009094238
    6. '):
' → logprob: -12.474164009094238
    7. ':
' → logprob: -13.349164009094238
    8. ' :
' → logprob: -13.599164009094238
    9. ':

' → logprob: -13.974164009094238
    10. '<|end|>' → logprob: -14.224164009094238

Token 360: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003010233340319246
    2. ':' → logprob: -8.375301361083984
    3. ':
' → logprob: -10.125301361083984
    4. '           ' → logprob: -10.750301361083984
    5. '              ' → logprob: -13.000301361083984
    6. ' break' → logprob: -13.125301361083984
    7. '                   ' → logprob: -13.500301361083984
    8. '                ' → logprob: -14.375301361083984
    9. ',' → logprob: -14.750301361083984
    10. '):
' → logprob: -15.125301361083984

Token 361: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.262935996055603
    2. 'break' (adapté à ' break') → logprob: -1.512935996055603
    3. ' break' → logprob: -4.762936115264893
    4. 'return' → logprob: -6.262936115264893
    5. '                   ' → logprob: -7.762936115264893
    6. '           ' → logprob: -10.137935638427734
    7. ' return' → logprob: -11.012935638427734
    8. '	break' → logprob: -11.512935638427734
    9. '
' → logprob: -12.512935638427734
    10. '   ' → logprob: -13.637935638427734

Token 362: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17062745988368988
    2. '
' → logprob: -2.0456273555755615
    3. '            
' → logprob: -3.7956273555755615
    4. '		' → logprob: -6.795627593994141
    5. '    
' → logprob: -7.045627593994141
    6. '<|end|>' → logprob: -7.420627593994141
    7. '			
' → logprob: -7.920627593994141
    8. '       ' → logprob: -8.04562759399414
    9. '        
' → logprob: -8.42062759399414
    10. '		
' → logprob: -8.92062759399414

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3567071259021759
    2. 'segments' → logprob: -1.2317070960998535
    3. '       ' → logprob: -4.9817070960998535
    4. ' segments' → logprob: -7.1067070960998535
    5. '            
' → logprob: -8.231707572937012
    6. '   ' → logprob: -8.856707572937012
    7. '
' → logprob: -10.356707572937012
    8. '        
' → logprob: -10.481707572937012
    9. '_segments' → logprob: -10.731707572937012
    10. 'seg' → logprob: -11.731707572937012

Token 364: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' (adapté à ' segments') → logprob: -0.004410178866237402
    2. '           ' → logprob: -5.629410266876221
    3. ' segments' → logprob: -7.254410266876221
    4. '       ' → logprob: -9.504409790039062
    5. '            
' → logprob: -11.629409790039062
    6. '
' → logprob: -11.629409790039062
    7. 'seg' → logprob: -12.754409790039062
    8. '_segments' → logprob: -13.004409790039062
    9. 'se' → logprob: -13.254409790039062
    10. '   ' → logprob: -13.879409790039062

Token 365: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02509579248726368
    2. '=' → logprob: -3.9000957012176514
    3. ':' → logprob: -5.4000959396362305
    4. '=[]' → logprob: -11.02509593963623
    5. ' :' → logprob: -12.02509593963623
    6. 's' → logprob: -13.77509593963623
    7. ',' → logprob: -13.90009593963623
    8. '=[]
' → logprob: -13.90009593963623
    9. ' ' → logprob: -14.77509593963623
    10. ')' → logprob: -14.77509593963623

Token 366: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16265535354614258
    2. ' []' → logprob: -1.9126553535461426
    3. '[]
' → logprob: -6.662655353546143
    4. '[' → logprob: -7.162655353546143
    5. ' []
' → logprob: -8.537654876708984
    6. ' [' → logprob: -8.662654876708984
    7. '[
' → logprob: -12.662654876708984
    8. '[]}' → logprob: -14.162654876708984
    9. '[]

' → logprob: -14.287654876708984
    10. '[]>' → logprob: -14.662654876708984

Token 367: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02146431803703308
    2. ' for' → logprob: -4.5214643478393555
    3. 'for' → logprob: -5.0214643478393555
    4. '	       ' → logprob: -6.1464643478393555
    5. '		' → logprob: -7.0214643478393555
    6. '	   ' → logprob: -8.146464347839355
    7. '       ' → logprob: -9.521464347839355
    8. '	for' → logprob: -9.646464347839355
    9. '	           ' → logprob: -9.646464347839355
    10. '            
' → logprob: -9.771464347839355

Token 368: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009137284359894693
    2. ' for' → logprob: -7.250913619995117
    3. '           ' → logprob: -8.500913619995117
    4. '	for' → logprob: -15.125913619995117
    5. '               ' → logprob: -16.125913619995117
    6. '       ' → logprob: -16.250913619995117
    7. '   ' → logprob: -17.500913619995117
    8. '            
' → logprob: -17.625913619995117
    9. '_for' → logprob: -18.625913619995117
    10. '```' → logprob: -18.875913619995117

Token 369: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20181812345981598
    2. ' _' → logprob: -1.7018181085586548
    3. ' i' → logprob: -8.576818466186523
    4. '_i' → logprob: -8.576818466186523
    5. 'i' → logprob: -10.576818466186523
    6. '_segment' → logprob: -13.326818466186523
    7. '_
' → logprob: -15.951818466186523
    8. '_=' → logprob: -16.076818466186523
    9. '_j' → logprob: -16.576818466186523
    10. ' in' → logprob: -16.701818466186523

Token 370: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009762698784470558
    2. 'in' → logprob: -4.634762763977051
    3. 'range' → logprob: -12.63476276397705
    4. ' ' → logprob: -13.25976276397705
    5. 'int' → logprob: -14.88476276397705
    6. 'import' → logprob: -15.00976276397705
    7. 'i' → logprob: -15.00976276397705
    8. 'n' → logprob: -15.63476276397705
    9. '
' → logprob: -16.259761810302734
    10. '	in' → logprob: -16.384761810302734

Token 371: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.923874702304602e-05
    2. ' range' → logprob: -9.375089645385742
    3. '   ' → logprob: -14.125089645385742
    4. 'ange' → logprob: -14.250089645385742
    5. 'rang' → logprob: -14.625089645385742
    6. '	range' → logprob: -14.625089645385742
    7. '(range' → logprob: -15.500089645385742
    8. 'r' → logprob: -15.500089645385742
    9. ' ' → logprob: -15.500089645385742
    10. '  ' → logprob: -15.625089645385742

Token 372: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.700132997939363e-05
    2. 'n' → logprob: -11.250017166137695
    3. '(' → logprob: -12.500017166137695
    4. ' n' → logprob: -16.500017166137695
    5. '	n' → logprob: -17.250017166137695
    6. ' (' → logprob: -17.750017166137695
    7. '(
' → logprob: -18.125017166137695
    8. '_n' → logprob: -19.000017166137695
    9. '(int' → logprob: -19.750017166137695
    10. 's' → logprob: -20.000017166137695

Token 373: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6329694390296936
    2. '):
' → logprob: -0.7579694390296936
    3. '):
' → logprob: -8.757969856262207
    4. '           ' → logprob: -9.507969856262207
    5. ')' → logprob: -10.132969856262207
    6. '       ' → logprob: -10.507969856262207
    7. ':' → logprob: -10.757969856262207
    8. ' ):' → logprob: -11.007969856262207
    9. '               ' → logprob: -12.007969856262207
    10. ' ):
' → logprob: -12.132969856262207

Token 374: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019730038475245237
    2. '<|end|>' → logprob: -7.3769731521606445
    3. '	           ' → logprob: -7.8769731521606445
    4. ' line' → logprob: -8.126973152160645
    5. ')' → logprob: -9.501973152160645
    6. '                
' → logprob: -9.626973152160645
    7. '           ' → logprob: -9.751973152160645
    8. '		       ' → logprob: -9.876973152160645
    9. ' ' → logprob: -10.001973152160645
    10. '   ' → logprob: -10.376973152160645

Token 375: ' d' (ID: 272)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3499738872051239
    2. ' line' → logprob: -2.0999739170074463
    3. 'dist' → logprob: -2.5999739170074463
    4. 'segment' → logprob: -2.9749739170074463
    5. 'distance' → logprob: -3.5999739170074463
    6. ' segment' → logprob: -5.474973678588867
    7. 'd' (adapté à ' d') → logprob: -5.724973678588867
    8. 'seg' → logprob: -5.849973678588867
    9. '               ' → logprob: -5.849973678588867
    10. 'data' → logprob: -6.224973678588867

Token 376: '_p' (ID: 1359)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35628610849380493
    2. '_line' → logprob: -1.4812860488891602
    3. 'istance' → logprob: -3.35628604888916
    4. 'ist' → logprob: -3.73128604888916
    5. 'line' → logprob: -5.10628604888916
    6. ' line' → logprob: -5.60628604888916
    7. ' ,' → logprob: -6.60628604888916
    8. ',line' → logprob: -6.98128604888916
    9. ' =' → logprob: -8.10628604888916
    10. '=line' → logprob: -8.23128604888916

Token 377: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08683759719133377
    2. '=' → logprob: -2.7118375301361084
    3. ',' → logprob: -4.5868377685546875
    4. '=line' → logprob: -5.9618377685546875
    5. '_line' → logprob: -6.3368377685546875
    6. 'line' → logprob: -7.5868377685546875
    7. ' ' → logprob: -7.9618377685546875
    8. 'iece' → logprob: -8.086837768554688
    9. '   ' → logprob: -8.836837768554688
    10. 'ieces' → logprob: -8.961837768554688

Token 378: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007607816252857447
    2. '=' → logprob: -4.882607936859131
    3. '           ' → logprob: -14.382607460021973
    4. '=line' → logprob: -14.757607460021973
    5. ' ' → logprob: -15.257607460021973
    6. '               ' → logprob: -15.507607460021973
    7. '=sys' → logprob: -16.13260841369629
    8. '            ' → logprob: -16.38260841369629
    9. '                ' → logprob: -17.00760841369629
    10. '                   ' → logprob: -17.50760841369629

Token 379: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.038487233221530914
    2. ' sys' → logprob: -3.538487195968628
    3. 'input' → logprob: -4.788487434387207
    4. ' input' → logprob: -7.913487434387207
    5. '           ' → logprob: -12.913487434387207
    6. '	sys' → logprob: -13.663487434387207
    7. '=sys' → logprob: -13.913487434387207
    8. 'import' → logprob: -14.538487434387207
    9. 'next' → logprob: -15.038487434387207
    10. '   ' → logprob: -15.163487434387207

Token 380: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.350386295001954e-05
    2. '.' → logprob: -9.875073432922363
    3. 'stdin' → logprob: -11.250073432922363
    4. '.stdout' → logprob: -11.750073432922363
    5. '.std' → logprob: -14.250073432922363
    6. '(stdin' → logprob: -15.875073432922363
    7. '.readline' → logprob: -15.875073432922363
    8. '.stderr' → logprob: -16.87507438659668
    9. '.argv' → logprob: -17.87507438659668
    10. '.__' → logprob: -18.12507438659668

Token 381: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.190178904333152e-05
    2. '.' → logprob: -10.375031471252441
    3. '           ' → logprob: -15.375031471252441
    4. '.stdin' → logprob: -15.375031471252441
    5. '().' → logprob: -16.500032424926758
    6. ' =' → logprob: -17.375032424926758
    7. ' readline' → logprob: -17.500032424926758
    8. '=' → logprob: -17.875032424926758
    9. '.readlines' → logprob: -18.250032424926758
    10. 'line' → logprob: -18.500032424926758

Token 382: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43512123823165894
    2. '().' → logprob: -1.1851212978363037
    3. '               ' → logprob: -3.1851212978363037
    4. '()
' → logprob: -5.310121059417725
    5. '<|end|>' → logprob: -7.685121059417725
    6. '<|end|>' → logprob: -9.310121536254883
    7. ')' → logprob: -9.935121536254883
    8. '.strip' → logprob: -10.060121536254883
    9. '           ' → logprob: -10.185121536254883
    10. '();' → logprob: -11.310121536254883

Token 383: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.002127779880538583
    2. '               ' → logprob: -7.377127647399902
    3. 'split' → logprob: -7.377127647399902
    4. ' strip' → logprob: -7.502127647399902
    5. 'rstrip' → logprob: -8.627127647399902
    6. '           ' → logprob: -8.877127647399902
    7. '.strip' → logprob: -13.502127647399902
    8. '_strip' → logprob: -13.877127647399902
    9. '                
' → logprob: -14.252127647399902
    10. '            
' → logprob: -15.002127647399902

Token 384: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15173283219337463
    2. '()
' → logprob: -2.026732921600342
    3. '               ' → logprob: -4.901732921600342
    4. '().' → logprob: -6.901732921600342
    5. '           ' → logprob: -8.776732444763184
    6. '(),' → logprob: -9.401732444763184
    7. ',' → logprob: -9.776732444763184
    8. ')' → logprob: -9.901732444763184
    9. '())' → logprob: -10.151732444763184
    10. '()
' → logprob: -10.276732444763184

Token 385: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019384797662496567
    2. 'd' → logprob: -4.019384860992432
    3. ' d' → logprob: -6.894384860992432
    4. '<|end|>' → logprob: -9.144384384155273
    5. 'tokens' → logprob: -10.269384384155273
    6. '		       ' → logprob: -11.519384384155273
    7. ' ' → logprob: -11.644384384155273
    8. ',' → logprob: -11.894384384155273
    9. 'token' → logprob: -11.894384384155273
    10. '                
' → logprob: -11.894384384155273

Token 386: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0008915711659938097
    2. 'distance' → logprob: -7.75089168548584
    3. ' d' → logprob: -8.00089168548584
    4. '               ' → logprob: -9.00089168548584
    5. 'if' → logprob: -14.37589168548584
    6. ' distance' → logprob: -14.62589168548584
    7. '           ' → logprob: -14.75089168548584
    8. '	d' → logprob: -15.12589168548584
    9. '                   ' → logprob: -15.50089168548584
    10. 'dist' → logprob: -15.75089168548584

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019809757359325886
    2. ',p' → logprob: -6.626980781555176
    3. ' ,' → logprob: -7.376980781555176
    4. '_,' → logprob: -11.001980781555176
    5. '_p' → logprob: -11.876980781555176
    6. 'p' → logprob: -13.626980781555176
    7. 's' → logprob: -14.126980781555176
    8. '<|end|>' → logprob: -14.501980781555176
    9. ' ' → logprob: -14.876980781555176
    10. '_tokens' → logprob: -15.001980781555176

Token 388: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.054891426116228104
    2. ' p' → logprob: -2.929891347885132
    3. 'f' → logprob: -11.804891586303711
    4. 'q' → logprob: -14.804891586303711
    5. ' ' → logprob: -15.179891586303711
    6. ' f' → logprob: -15.429891586303711
    7. 'fp' → logprob: -15.679891586303711
    8. 'prob' → logprob: -15.804891586303711
    9. 's' → logprob: -16.42989158630371
    10. '_p' → logprob: -16.55489158630371

Token 389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07892867922782898
    2. ' =' → logprob: -2.5789287090301514
    3. ',' → logprob: -11.70392894744873
    4. '_tokens' → logprob: -11.70392894744873
    5. '_' → logprob: -12.32892894744873
    6. ')' → logprob: -12.32892894744873
    7. '_=' → logprob: -12.32892894744873
    8. '<|end|>' → logprob: -13.07892894744873
    9. 'tokens' → logprob: -13.20392894744873
    10. 'token' → logprob: -14.20392894744873

Token 390: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5345973968505859
    2. ' d' → logprob: -0.9095973968505859
    3. ' map' → logprob: -4.909597396850586
    4. 'map' → logprob: -5.534597396850586
    5. 'p' → logprob: -10.909597396850586
    6. ' ' → logprob: -11.409597396850586
    7. ' p' → logprob: -11.534597396850586
    8. '_map' → logprob: -11.534597396850586
    9. '_d' → logprob: -11.909597396850586
    10. '<|end|>' → logprob: -12.034597396850586

Token 391: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.28249481320381165
    2. '_line' → logprob: -1.4074947834014893
    3. ' =' → logprob: -7.907495021820068
    4. 'line' → logprob: -8.28249454498291
    5. '_' → logprob: -8.53249454498291
    6. '=' → logprob: -8.65749454498291
    7. 'ine' → logprob: -9.28249454498291
    8. '_l' → logprob: -10.40749454498291
    9. '   ' → logprob: -10.53249454498291
    10. ',' → logprob: -10.78249454498291

Token 392: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00976919662207365
    2. 'line' → logprob: -4.634768962860107
    3. '=' → logprob: -12.384769439697266
    4. ' =' → logprob: -12.509769439697266
    5. 'split' → logprob: -13.384769439697266
    6. '=line' → logprob: -14.134769439697266
    7. '   ' → logprob: -14.259769439697266
    8. '_LINE' → logprob: -14.509769439697266
    9. 'Line' → logprob: -14.509769439697266
    10. ' line' → logprob: -15.009769439697266

Token 393: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16031703352928162
    2. ' =' → logprob: -1.910317063331604
    3. 'split' → logprob: -10.160317420959473
    4. '.split' → logprob: -10.535317420959473
    5. '.' → logprob: -11.910317420959473
    6. ')' → logprob: -11.910317420959473
    7. 's' → logprob: -12.535317420959473
    8. ')=' → logprob: -13.035317420959473
    9. 'spl' → logprob: -13.410317420959473
    10. '_split' → logprob: -13.410317420959473

Token 394: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00019221604452468455
    2. '(' → logprob: -9.375192642211914
    3. '<|end|>' → logprob: -9.750192642211914
    4. '()
' → logprob: -11.125192642211914
    5. '('' → logprob: -11.625192642211914
    6. ',' → logprob: -12.250192642211914
    7. ')' → logprob: -12.250192642211914
    8. '<|end|>' → logprob: -12.375192642211914
    9. '(),' → logprob: -13.125192642211914
    10. '();' → logprob: -13.125192642211914

Token 395: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: ' segments' (ID: 33749)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5658643245697021
    2. ' d' → logprob: -2.065864324569702
    3. ' distance' → logprob: -2.565864324569702
    4. 'distance' → logprob: -2.565864324569702
    5. '                ' → logprob: -2.690864324569702
    6. 'd' → logprob: -3.440864324569702
    7. ' ' → logprob: -4.065864562988281
    8. ' segments' → logprob: -4.440864562988281
    9. 'segments' (adapté à ' segments') → logprob: -5.065864562988281
    10. ' distances' → logprob: -5.065864562988281

Token 397: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.016271304339170456
    2. '=' → logprob: -4.266271114349365
    3. ' =' → logprob: -6.266271114349365
    4. '.' → logprob: -8.641271591186523
    5. ')' → logprob: -11.016271591186523
    6. 'append' → logprob: -12.516271591186523
    7. '.=' → logprob: -12.641271591186523
    8. ').' → logprob: -12.891271591186523
    9. ',' → logprob: -13.641271591186523
    10. '),' → logprob: -14.391271591186523

Token 398: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -6.408677290892228e-05
    2. '(' → logprob: -10.5000638961792
    3. 'Segment' → logprob: -10.5000638961792
    4. '(
' → logprob: -12.1250638961792
    5. ' Segment' → logprob: -12.7500638961792
    6. '               ' → logprob: -14.6250638961792
    7. ' (' → logprob: -16.500064849853516
    8. '(Session' → logprob: -17.500064849853516
    9. '   ' → logprob: -17.875064849853516
    10. '                   ' → logprob: -18.000064849853516

Token 399: 'egment' (ID: 132263)
  Prédit: 'egment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'egment' → logprob: -1.8624639324116288e-06
    2. 'Segment' → logprob: -13.875001907348633
    3. 'eg' → logprob: -14.000001907348633
    4. 'gment' → logprob: -17.375001907348633
    5. 'segment' → logprob: -19.250001907348633
    6. ' Segment' → logprob: -20.250001907348633
    7. '_segment' → logprob: -20.625001907348633
    8. 'e' → logprob: -20.750001907348633
    9. 't' → logprob: -22.750001907348633
    10. '(segment' → logprob: -23.125001907348633

Token 400: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03814786672592163
    2. 'int' → logprob: -3.2881479263305664
    3. '(' → logprob: -9.288147926330566
    4. ' int' → logprob: -12.663147926330566
    5. '[int' → logprob: -12.913147926330566
    6. '(distance' → logprob: -13.288147926330566
    7. '(
' → logprob: -13.538147926330566
    8. '   ' → logprob: -13.663147926330566
    9. ')' → logprob: -13.788147926330566
    10. 'distance' → logprob: -14.163147926330566

Token 401: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.407366916188039e-05
    2. '(' → logprob: -9.875054359436035
    3. 'd' → logprob: -13.250054359436035
    4. '(
' → logprob: -14.750054359436035
    5. ')d' → logprob: -15.000054359436035
    6. ')' → logprob: -17.37505340576172
    7. '	d' → logprob: -17.87505340576172
    8. ' d' → logprob: -18.00005340576172
    9. ',d' → logprob: -18.12505340576172
    10. ' (' → logprob: -18.25005340576172

Token 402: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04989796131849289
    2. ',' → logprob: -3.0498979091644287
    3. ')' → logprob: -6.674898147583008
    4. '),(' → logprob: -10.799898147583008
    5. ' ,' → logprob: -12.049898147583008
    6. ' ),' → logprob: -12.299898147583008
    7. ',),' → logprob: -12.424898147583008
    8. ' ' → logprob: -13.549898147583008
    9. '),
' → logprob: -13.924898147583008
    10. '<|end|>' → logprob: -13.924898147583008

Token 403: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.7697225252486533e-06
    2. ' float' → logprob: -12.500003814697266
    3. 'flo' → logprob: -19.250003814697266
    4. '<float' → logprob: -19.625003814697266
    5. '(float' → logprob: -20.125003814697266
    6. '=float' → logprob: -20.250003814697266
    7. '	float' → logprob: -20.375003814697266
    8. '.float' → logprob: -21.250003814697266
    9. '_float' → logprob: -21.250003814697266
    10. '
' → logprob: -21.875003814697266

Token 404: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.469590491382405e-05
    2. 'p' → logprob: -9.62507438659668
    3. '(' → logprob: -12.12507438659668
    4. '(
' → logprob: -13.37507438659668
    5. ')' → logprob: -14.37507438659668
    6. ' p' → logprob: -14.75007438659668
    7. ')p' → logprob: -15.00007438659668
    8. ' (' → logprob: -15.62507438659668
    9. '	p' → logprob: -16.75007438659668
    10. '
' → logprob: -18.12507438659668

Token 405: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0017480077221989632
    2. ')' → logprob: -6.501748085021973
    3. ')))
' → logprob: -9.001748085021973
    4. '))' → logprob: -9.126748085021973
    5. ' ' → logprob: -12.501748085021973
    6. ')))

' → logprob: -13.001748085021973
    7. '')))' → logprob: -13.001748085021973
    8. '))))' → logprob: -13.126748085021973
    9. ')));' → logprob: -13.376748085021973
    10. '())))' → logprob: -14.001748085021973

Token 406: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03310312330722809
    2. '       ' → logprob: -3.9081032276153564
    3. '<|end|>' → logprob: -4.908102989196777
    4. '
' → logprob: -5.908102989196777
    5. ')' → logprob: -7.283102989196777
    6. 'return' → logprob: -7.408102989196777
    7. '		' → logprob: -7.783102989196777
    8. '          ' → logprob: -8.533102989196777
    9. ' return' → logprob: -9.158102989196777
    10. '<|end|>' → logprob: -9.658102989196777

Token 407: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.028433263301849365
    2. '           ' → logprob: -3.778433322906494
    3. ' yield' → logprob: -5.278433322906494
    4. '
' → logprob: -10.278432846069336
    5. '	yield' → logprob: -10.653432846069336
    6. '       ' → logprob: -11.653432846069336
    7. 'y' → logprob: -12.528432846069336
    8. '   ' → logprob: -13.528432846069336
    9. 'm' → logprob: -14.028432846069336
    10. '```' → logprob: -14.653432846069336

Token 408: ' Dataset' (ID: 79063)
  Prédit: 'Dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dataset' → logprob: -0.002475777640938759
    2. ' Dataset' → logprob: -6.002475738525391
    3. 'Data' → logprob: -17.00247573852539
    4. 'Datas' → logprob: -17.50247573852539
    5. 'Segment' → logprob: -19.62747573852539
    6. '   ' → logprob: -19.87747573852539
    7. '.Dataset' → logprob: -20.25247573852539
    8. 'dataset' → logprob: -20.37747573852539
    9. '_dataset' → logprob: -20.75247573852539
    10. 'Dat' → logprob: -21.00247573852539

Token 409: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.925185440806672e-05
    2. '(' → logprob: -10.250099182128906
    3. 'n' → logprob: -10.375099182128906
    4. ' (' → logprob: -10.500099182128906
    5. '(
' → logprob: -13.250099182128906
    6. ' n' → logprob: -13.375099182128906
    7. '(len' → logprob: -14.125099182128906
    8. '(_,' → logprob: -14.875099182128906
    9. '(self' → logprob: -15.250099182128906
    10. '(_' → logprob: -16.250099182128906

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010105705820024014
    2. '_segments' → logprob: -4.635105609893799
    3. 'segments' → logprob: -9.135106086730957
    4. ' ,' → logprob: -9.510106086730957
    5. ',_' → logprob: -10.010106086730957
    6. '_,' → logprob: -10.135106086730957
    7. ',n' → logprob: -10.635106086730957
    8. ',
' → logprob: -10.635106086730957
    9. ',m' → logprob: -11.135106086730957
    10. '=' → logprob: -12.135106086730957

Token 411: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02324594371020794
    2. ' m' → logprob: -3.7732460498809814
    3. '<|end|>' → logprob: -15.273245811462402
    4. '           ' → logprob: -16.27324676513672
    5. ')m' → logprob: -16.64824676513672
    6. ')' → logprob: -17.14824676513672
    7. '	m' → logprob: -17.77324676513672
    8. ' ' → logprob: -18.14824676513672
    9. '
' → logprob: -18.14824676513672
    10. '[m' → logprob: -18.27324676513672

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.60414821645827e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ')' → logprob: -15.750004768371582
    4. 'segments' → logprob: -16.250003814697266
    5. '),' → logprob: -17.375003814697266
    6. ',
' → logprob: -17.750003814697266
    7. '   ' → logprob: -17.875003814697266
    8. ' segments' → logprob: -18.125003814697266
    9. '```' → logprob: -19.375003814697266
    10. '[' → logprob: -19.500003814697266

Token 413: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.0019287518225610256
    2. ' segments' → logprob: -6.251928806304932
    3. 'segment' → logprob: -16.376928329467773
    4. 'Segments' → logprob: -17.251928329467773
    5. '   ' → logprob: -17.376928329467773
    6. '_segments' → logprob: -17.501928329467773
    7. '           ' → logprob: -17.626928329467773
    8. 'seg' → logprob: -18.001928329467773
    9. ')' → logprob: -18.251928329467773
    10. 'se' → logprob: -18.876928329467773

Token 414: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.412610233994201e-05
    2. ')
' → logprob: -9.750094413757324
    3. '<|end|>' → logprob: -10.375094413757324
    4. ' )' → logprob: -12.875094413757324
    5. '       ' → logprob: -14.250094413757324
    6. ')return' → logprob: -14.750094413757324
    7. '<|end|>' → logprob: -15.375094413757324
    8. ')}' → logprob: -16.250093460083008
    9. '   ' → logprob: -16.375093460083008
    10. ' ' → logprob: -16.500093460083008

Token 415: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12211648374795914
    2. '<|end|>' → logprob: -2.2471165657043457
    3. '#' → logprob: -5.497116565704346
    4. '```' → logprob: -5.747116565704346
    5. 'def' → logprob: -7.247116565704346
    6. ' class' → logprob: -7.997116565704346
    7. '<|end|>' → logprob: -8.247116088867188
    8. '
' → logprob: -8.622116088867188
    9. 'from' → logprob: -8.872116088867188
    10. '[' → logprob: -9.622116088867188

Token 416: ' Protector' (ID: 158803)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -1.6359680891036987
    2. 'Solution' → logprob: -2.3859682083129883
    3. 'Budget' → logprob: -2.5109682083129883
    4. 'Segment' → logprob: -2.5109682083129883
    5. 'Std' → logprob: -3.0109682083129883
    6. 'Optimal' → logprob: -3.0109682083129883
    7. 'Gre' → logprob: -3.3859682083129883
    8. ' Budget' → logprob: -3.3859682083129883
    9. 'Br' → logprob: -3.5109682083129883
    10. 'File' → logprob: -3.6359682083129883

Token 417: 'Strategy' (ID: 21488)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028482675552368164
    2. '(' → logprob: -6.002848148345947
    3. ':
' → logprob: -8.752848625183105
    4. '(Abstract' → logprob: -9.127848625183105
    5. '():' → logprob: -10.502848625183105
    6. '(S' → logprob: -10.502848625183105
    7. '):' → logprob: -11.252848625183105
    8. '<|end|>' → logprob: -11.377848625183105
    9. 'Segment' → logprob: -12.002848625183105
    10. 'Strategy' → logprob: -13.252848625183105

Token 418: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003855093673337251
    2. ':' → logprob: -7.875385284423828
    3. '(Abstract' → logprob: -12.375385284423828
    4. ':
' → logprob: -14.000385284423828
    5. ' (' → logprob: -15.250385284423828
    6. '():' → logprob: -16.250385284423828
    7. '(
' → logprob: -17.750385284423828
    8. '(S' → logprob: -18.250385284423828
    9. '(Adapter' → logprob: -18.875385284423828
    10. '```' → logprob: -18.875385284423828

Token 419: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -9.088346359931165e-07
    2. ' ABC' → logprob: -14.000000953674316
    3. '(' → logprob: -17.5
    4. ')' → logprob: -17.875
    5. '):
' → logprob: -18.0
    6. 'AB' → logprob: -18.0
    7. 'Segment' → logprob: -18.625
    8. 'abc' → logprob: -18.625
    9. 'Abstract' → logprob: -18.75
    10. 'ABCDE' → logprob: -19.25

Token 420: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20154041051864624
    2. '):
' → logprob: -1.701540470123291
    3. ':' → logprob: -9.826539993286133
    4. ')' → logprob: -10.701539993286133
    5. '):
' → logprob: -10.701539993286133
    6. '):

' → logprob: -11.201539993286133
    7. '   ' → logprob: -11.576539993286133
    8. ' ):' → logprob: -13.701539993286133
    9. ':
' → logprob: -13.701539993286133
    10. '[' → logprob: -14.201539993286133

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5512956380844116
    2. ':' → logprob: -0.9262956380844116
    3. ':
' → logprob: -3.801295757293701
    4. '
' → logprob: -5.676295757293701
    5. '):
' → logprob: -7.551295757293701
    6. '<|end|>' → logprob: -7.551295757293701
    7. ' :' → logprob: -8.176295280456543
    8. '(' → logprob: -8.676295280456543
    9. '(Abstract' → logprob: -9.051295280456543
    10. '):' → logprob: -9.551295280456543

Token 422: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10551999509334564
    2. '@' → logprob: -3.105520009994507
    3. ' @' → logprob: -3.105520009994507
    4. '
' → logprob: -4.855519771575928
    5. '    
' → logprob: -6.480519771575928
    6. ' 
' → logprob: -7.230519771575928
    7. '    ' → logprob: -8.480520248413086
    8. '  ' → logprob: -9.730520248413086
    9. ' ' → logprob: -9.855520248413086
    10. '	' → logprob: -10.230520248413086

Token 423: 'Str' (ID: 3504)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.05910617113113403
    2. ' abstract' → logprob: -3.8091061115264893
    3. 'Abstract' → logprob: -3.8091061115264893
    4. 'class' → logprob: -4.809106349945068
    5. '   ' → logprob: -6.059106349945068
    6. '"""' → logprob: -6.809106349945068
    7. 'ABC' → logprob: -8.05910587310791
    8. '@' → logprob: -8.05910587310791
    9. ' Abstract' → logprob: -8.55910587310791
    10. '
' → logprob: -8.80910587310791

Token 424: 'atég' (ID: 25440)
  Prédit: 'ategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ategy' → logprob: -0.006270982325077057
    2. 'atég' → logprob: -5.256270885467529
    3. '   ' → logprob: -7.506270885467529
    4. 'ateg' → logprob: -8.256271362304688
    5. 'ate' → logprob: -9.631271362304688
    6. 'ict' → logprob: -9.756271362304688
    7. 'uct' → logprob: -9.881271362304688
    8. 'ength' → logprob: -11.256271362304688
    9. 'a' → logprob: -11.756271362304688
    10. 'e' → logprob: -12.006271362304688

Token 425: 'ie' (ID: 396)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4816790819168091
    2. 'atég' → logprob: -1.481679081916809
    3. 'ategy' → logprob: -2.3566789627075195
    4. 'e' → logprob: -3.9816789627075195
    5. 'ate' → logprob: -3.9816789627075195
    6. 'eg' → logprob: -4.7316789627075195
    7. 'ège' → logprob: -5.8566789627075195
    8. 'at' → logprob: -6.3566789627075195
    9. 'egy' → logprob: -6.4816789627075195
    10. '  ' → logprob: -6.6066789627075195

Token 426: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8786887526512146
    2. ' de' → logprob: -1.2536888122558594
    3. ' d' → logprob: -2.5036888122558594
    4. '<|end|>' → logprob: -2.7536888122558594
    5. 'abstract' → logprob: -3.7536888122558594
    6. ' for' → logprob: -3.7536888122558594
    7. 'protect' → logprob: -3.7536888122558594
    8. 'def' → logprob: -4.003688812255859
    9. ' abstract' → logprob: -4.253688812255859
    10. 'd' → logprob: -4.878688812255859

Token 427: ' minim' (ID: 23874)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.08932165056467056
    2. ' protéger' → logprob: -2.8393216133117676
    3. 'la' → logprob: -4.214321613311768
    4. ' la' → logprob: -6.464321613311768
    5. 'placer' → logprob: -6.589321613311768
    6. 'prote' → logprob: -6.589321613311768
    7. 'def' → logprob: -6.714321613311768
    8. 'prot' → logprob: -6.964321613311768
    9. 'protect' → logprob: -6.964321613311768
    10. 'class' → logprob: -7.214321613311768

Token 428: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0014533287612721324
    2. 'al' → logprob: -7.001453399658203
    3. 'er' → logprob: -8.376453399658203
    4. 'um' → logprob: -9.126453399658203
    5. 'izer' → logprob: -9.501453399658203
    6. 'ser' → logprob: -10.001453399658203
    7. 'is' → logprob: -10.126453399658203
    8. 'isation' → logprob: -11.751453399658203
    9. 'ise' → logprob: -12.626453399658203
    10. 'isser' → logprob: -12.876453399658203

Token 429: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9967126250267029
    2. 'l' → logprob: -1.3717126846313477
    3. ' le' → logprob: -1.6217126846313477
    4. 'la' → logprob: -2.6217126846313477
    5. ' la' → logprob: -2.7467126846313477
    6. ' l' → logprob: -3.3717126846313477
    7. ' les' → logprob: -5.871712684631348
    8. 'les' → logprob: -6.496712684631348
    9. 'the' → logprob: -7.246712684631348
    10. ' the' → logprob: -7.246712684631348

Token 430: ' attaques' (ID: 194884)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8507452607154846
    2. 'co' → logprob: -1.3507452011108398
    3. 'le' → logprob: -2.10074520111084
    4. 'expected' → logprob: -3.35074520111084
    5. 'la' → logprob: -3.47574520111084
    6. ' le' → logprob: -3.72574520111084
    7. 'cout' → logprob: -3.85074520111084
    8. ' coût' → logprob: -3.97574520111084
    9. ' l' → logprob: -4.35074520111084
    10. 'att' → logprob: -4.85074520111084

Token 431: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.8892072439193726
    2. ' sur' → logprob: -1.5142072439193726
    3. '"""' → logprob: -2.264207363128662
    4. '   ' → logprob: -2.514207363128662
    5. 'sur' → logprob: -2.764207363128662
    6. '.' → logprob: -2.889207363128662
    7. ' en' → logprob: -4.639207363128662
    8. ' ' → logprob: -4.639207363128662
    9. ' ' → logprob: -5.139207363128662
    10. 'par' → logprob: -5.514207363128662

Token 432: ' budget' (ID: 9946)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.8324570655822754
    2. 'une' → logprob: -1.8324570655822754
    3. ' une' → logprob: -2.0824570655822754
    4. 'segment' → logprob: -2.7074570655822754
    5. 'segments' → logprob: -2.9574570655822754
    6. ' segments' → logprob: -2.9574570655822754
    7. ' des' → logprob: -3.0824570655822754
    8. ' la' → logprob: -3.3324570655822754
    9. ' segment' → logprob: -3.4574570655822754
    10. 'un' → logprob: -3.5824570655822754

Token 433: ' donné' (ID: 52079)
  Prédit: ' disponible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' disponible' → logprob: -0.35891011357307434
    2. '."""' → logprob: -2.358910083770752
    3. '"""' → logprob: -2.983910083770752
    4. ' """' → logprob: -3.358910083770752
    5. '<|end|>' → logprob: -3.733910083770752
    6. '.' → logprob: -3.858910083770752
    7. ' disponibles' → logprob: -4.483910083770752
    8. ' available' → logprob: -4.733910083770752
    9. ' ' → logprob: -4.858910083770752
    10. 'available' → logprob: -4.983910083770752

Token 434: '."""

' (ID: 68934)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4845556914806366
    2. '."""' → logprob: -1.109555721282959
    3. '"""' → logprob: -4.234555721282959
    4. ':' → logprob: -4.609555721282959
    5. '."""

' → logprob: -4.984555721282959
    6. ' """' → logprob: -4.984555721282959
    7. ' :' → logprob: -6.234555721282959
    8. ' en' → logprob: -6.359555721282959
    9. ' .' → logprob: -6.484555721282959
    10. '."' → logprob: -6.484555721282959

Token 435: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025916345417499542
    2. '   ' → logprob: -3.900916337966919
    3. '    
' → logprob: -5.275916576385498
    4. ' 
' → logprob: -9.02591609954834
    5. '

' → logprob: -10.02591609954834
    6. '   
' → logprob: -10.52591609954834
    7. '  
' → logprob: -10.52591609954834
    8. '@' → logprob: -12.02591609954834
    9. '        
' → logprob: -12.27591609954834
    10. '<|end|>' → logprob: -12.52591609954834

Token 436: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0011477179359644651
    2. '   ' → logprob: -7.126147747039795
    3. 'abstract' → logprob: -8.376147270202637
    4. '
' → logprob: -9.501147270202637
    5. ' @' → logprob: -10.626147270202637
    6. '    
' → logprob: -12.501147270202637
    7. 'def' → logprob: -12.626147270202637
    8. '

' → logprob: -13.001147270202637
    9. '@property' → logprob: -13.126147270202637
    10. '@
' → logprob: -13.501147270202637

Token 437: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -7.703443770878948e-06
    2. ' abstract' → logprob: -12.000007629394531
    3. 'property' → logprob: -13.875007629394531
    4. 'ab' → logprob: -15.375007629394531
    5. 'abc' → logprob: -15.375007629394531
    6. 'staticmethod' → logprob: -15.625007629394531
    7. 'classmethod' → logprob: -17.37500762939453
    8. '.abstract' → logprob: -18.12500762939453
    9. 'abs' → logprob: -18.87500762939453
    10. 'Abstract' → logprob: -20.00000762939453

Token 438: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.09595022350549698
    2. 'def' → logprob: -2.470950126647949
    3. '_method' → logprob: -5.220950126647949
    4. '   ' → logprob: -6.720950126647949
    5. ' def' → logprob: -8.84595012664795
    6. '
' → logprob: -9.22095012664795
    7. '_token' → logprob: -10.59595012664795
    8. '	def' → logprob: -10.59595012664795
    9. '    
' → logprob: -10.84595012664795
    10. ' method' → logprob: -11.47095012664795

Token 439: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12509597837924957
    2. 'def' → logprob: -2.875096082687378
    3. ' def' → logprob: -2.875096082687378
    4. '   ' → logprob: -5.500095844268799
    5. '    
' → logprob: -8.000096321105957
    6. '<|end|>' → logprob: -9.000096321105957
    7. '	def' → logprob: -9.750096321105957
    8. '
' → logprob: -10.500096321105957
    9. '<|end|>' → logprob: -10.500096321105957
    10. ' 
' → logprob: -10.750096321105957

Token 440: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.042952485382556915
    2. 'def' → logprob: -3.292952537536621
    3. '   ' → logprob: -6.042952537536621
    4. ' def' → logprob: -6.167952537536621
    5. '    
' → logprob: -8.667952537536621
    6. '
' → logprob: -9.042952537536621
    7. '	def' → logprob: -10.042952537536621
    8. '  
' → logprob: -11.292952537536621
    9. '<|end|>' → logprob: -11.417952537536621
    10. '_token' → logprob: -11.667952537536621

Token 441: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.013004332780838013
    2. '
' → logprob: -4.388004302978516
    3. 'method' → logprob: -7.888004302978516
    4. ' def' → logprob: -10.013004302978516
    5. '   ' → logprob: -10.138004302978516
    6. 'staticmethod' → logprob: -10.763004302978516
    7. 'classmethod' → logprob: -12.513004302978516
    8. '```' → logprob: -12.638004302978516
    9. 'property' → logprob: -13.388004302978516
    10. '  ' → logprob: -14.138004302978516

Token 442: ' minimize' (ID: 41776)
  Prédit: 'protect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'protect' → logprob: -0.2573354244232178
    2. ' protect' → logprob: -1.8823354244232178
    3. 'opt' → logprob: -3.1323354244232178
    4. 'compute' → logprob: -5.007335662841797
    5. 'def' → logprob: -5.132335662841797
    6. 'pro' → logprob: -5.382335662841797
    7. 'solve' → logprob: -6.132335662841797
    8. 'find' → logprob: -6.257335662841797
    9. 'choose' → logprob: -6.257335662841797
    10. ' minimize' → logprob: -6.382335662841797

Token 443: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -0.46075528860092163
    2. '_attack' → logprob: -1.7107553482055664
    3. '_att' → logprob: -2.2107553482055664
    4. '(self' → logprob: -2.8357553482055664
    5. '_' → logprob: -4.460755348205566
    6. '_cost' → logprob: -5.835755348205566
    7. '_max' → logprob: -6.460755348205566
    8. 'self' → logprob: -6.460755348205566
    9. '_at' → logprob: -7.460755348205566
    10. 'expected' → logprob: -7.585755348205566

Token 444: '_attack' (ID: 118945)
  Prédit: '_attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attack' → logprob: -0.000329386442899704
    2. '_' → logprob: -8.50032901763916
    3. '_cost' → logprob: -9.50032901763916
    4. '_att' → logprob: -10.25032901763916
    5. '_expected' → logprob: -11.75032901763916
    6. ' _' → logprob: -12.62532901763916
    7. '_r' → logprob: -14.00032901763916
    8. '_damage' → logprob: -14.25032901763916
    9. 'attack' → logprob: -14.25032901763916
    10. '_loss' → logprob: -14.37532901763916

Token 445: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0028879677411168814
    2. '(' → logprob: -5.877888202667236
    3. ' (' → logprob: -9.752887725830078
    4. '(
' → logprob: -11.127887725830078
    5. 'self' → logprob: -12.377887725830078
    6. '   ' → logprob: -13.002887725830078
    7. '_amount' → logprob: -14.377887725830078
    8. ' ' → logprob: -14.377887725830078
    9. '       ' → logprob: -14.877887725830078
    10. 's' → logprob: -14.877887725830078

Token 446: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12378862500190735
    2. ')' → logprob: -2.248788595199585
    3. 'self' → logprob: -5.123788833618164
    4. '(self' → logprob: -5.623788833618164
    5. ' ,' → logprob: -7.748788833618164
    6. '   ' → logprob: -7.873788833618164
    7. ')(' → logprob: -8.623788833618164
    8. ',
' → logprob: -9.123788833618164
    9. '       ' → logprob: -9.498788833618164
    10. '):' → logprob: -10.123788833618164

Token 447: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.09189733117818832
    2. ' dataset' → logprob: -2.4668972492218018
    3. 'budget' → logprob: -6.216897487640381
    4. ' budget' → logprob: -8.216897010803223
    5. 'datasets' → logprob: -8.466897010803223
    6. 'self' → logprob: -9.091897010803223
    7. '   ' → logprob: -9.216897010803223
    8. 'data' → logprob: -9.591897010803223
    9. 'segments' → logprob: -9.591897010803223
    10. ' datasets' → logprob: -9.841897010803223

Token 448: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002918446552939713
    2. ')' → logprob: -8.25029182434082
    3. 'self' → logprob: -11.25029182434082
    4. '   ' → logprob: -12.00029182434082
    5. ',' → logprob: -12.62529182434082
    6. '(self' → logprob: -12.75029182434082
    7. ' :' → logprob: -12.87529182434082
    8. ' )' → logprob: -14.25029182434082
    9. '):' → logprob: -14.50029182434082
    10. ':self' → logprob: -14.87529182434082

Token 449: ' Dataset' (ID: 79063)
  Prédit: 'Dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dataset' → logprob: -0.20146986842155457
    2. ' Dataset' → logprob: -1.701469898223877
    3. ')' → logprob: -9.951469421386719
    4. '   ' → logprob: -11.951469421386719
    5. ' ' → logprob: -13.576469421386719
    6. '_dataset' → logprob: -14.951469421386719
    7. '.Dataset' → logprob: -15.326469421386719
    8. '  ' → logprob: -16.07646942138672
    9. 'dataset' → logprob: -16.20146942138672
    10. ' dataset' → logprob: -16.45146942138672

Token 450: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003179465711582452
    2. ',' → logprob: -8.125317573547363
    3. ' )' → logprob: -10.875317573547363
    4. '   ' → logprob: -12.875317573547363
    5. ',)' → logprob: -14.875317573547363
    6. '`)' → logprob: -17.37531852722168
    7. ')->' → logprob: -17.62531852722168
    8. ' ,' → logprob: -17.87531852722168
    9. ':' → logprob: -18.00031852722168
    10. '       ' → logprob: -18.12531852722168

Token 451: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.20373398065567017
    2. ')' → logprob: -1.7037339210510254
    3. '->' → logprob: -6.203733921051025
    4. ')->' → logprob: -8.453734397888184
    5. ' )' → logprob: -10.203734397888184
    6. '   ' → logprob: -10.578734397888184
    7. ':' → logprob: -11.953734397888184
    8. ' )->' → logprob: -12.328734397888184
    9. ',' → logprob: -12.453734397888184
    10. '       ' → logprob: -12.953734397888184

Token 452: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0074679553508758545
    2. 'List' → logprob: -5.882467746734619
    3. ' float' → logprob: -6.007467746734619
    4. 'Tuple' → logprob: -6.507467746734619
    5. 'Dataset' → logprob: -8.257468223571777
    6. 'int' → logprob: -8.507468223571777
    7. 'Segment' → logprob: -8.757468223571777
    8. 'Iterator' → logprob: -10.382468223571777
    9. '   ' → logprob: -10.882468223571777
    10. '	float' → logprob: -11.882468223571777

Token 453: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03197956085205078
    2. '<|end|>' → logprob: -3.531979560852051
    3. '   ' → logprob: -7.156979560852051
    4. ':
' → logprob: -7.406979560852051
    5. ':return' → logprob: -7.781979560852051
    6. ')' → logprob: -9.28197956085205
    7. '):' → logprob: -9.28197956085205
    8. '<|end|>' → logprob: -9.53197956085205
    9. '       ' → logprob: -9.78197956085205
    10. ' ' → logprob: -10.53197956085205

Token 454: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6428782343864441
    2. '<|end|>' → logprob: -0.7678782343864441
    3. '       ' → logprob: -5.51787805557251
    4. ' 
' → logprob: -5.89287805557251
    5. '   ' → logprob: -7.01787805557251
    6. '    ' → logprob: -7.26787805557251
    7. '  ' → logprob: -7.76787805557251
    8. ' )' → logprob: -7.76787805557251
    9. ')' → logprob: -8.142878532409668
    10. '<|end|>' → logprob: -8.892878532409668

Token 455: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -1.0142343044281006
    2. '       ' → logprob: -1.2642343044281006
    3. '...' → logprob: -1.5142343044281006
    4. ' pass' → logprob: -2.0142343044281006
    5. ' ...' → logprob: -7.26423454284668
    6. '   ' → logprob: -7.76423454284668
    7. 'raise' → logprob: -9.38923454284668
    8. '"""' → logprob: -10.01423454284668
    9. '        ' → logprob: -10.26423454284668
    10. '<|end|>' → logprob: -10.26423454284668

Token 456: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 457: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.28498050570487976
    2. '
' → logprob: -1.4099805355072021
    3. '<|end|>' → logprob: -6.034980297088623
    4. ' class' → logprob: -7.409980297088623
    5. '

' → logprob: -8.409980773925781
    6. ' 
' → logprob: -8.534980773925781
    7. 'c' → logprob: -8.784980773925781
    8. ' ' → logprob: -9.409980773925781
    9. '\n' → logprob: -9.659980773925781
    10. '' → logprob: -11.159980773925781

Token 458: ' Gre' (ID: 6454)
  Prédit: 'Budget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Budget' → logprob: -0.8917149305343628
    2. 'Dynamic' → logprob: -1.7667149305343628
    3. 'Gre' → logprob: -2.0167150497436523
    4. 'Kn' → logprob: -2.8917150497436523
    5. ' Budget' → logprob: -3.6417150497436523
    6. 'Segment' → logprob: -3.8917150497436523
    7. ' Protector' → logprob: -3.8917150497436523
    8. 'Na' → logprob: -4.016715049743652
    9. 'Linear' → logprob: -4.141715049743652
    10. 'Br' → logprob: -4.266715049743652

Token 459: 'edy' (ID: 12442)
  Prédit: 'edy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edy' → logprob: -0.0003598952607717365
    2. 'dy' → logprob: -8.125359535217285
    3. 'ddy' → logprob: -10.250359535217285
    4. 'd' → logprob: -11.125359535217285
    5. 'e' → logprob: -12.250359535217285
    6. 'ed' → logprob: -12.625359535217285
    7. 'ady' → logprob: -13.000359535217285
    8. 'epy' → logprob: -14.375359535217285
    9. 'di' → logprob: -14.625359535217285
    10. 'y' → logprob: -15.125359535217285

Token 460: 'Prote' (ID: 45643)
  Prédit: 'Prote'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prote' → logprob: -0.039060842245817184
    2. 'Strategy' → logprob: -3.4140608310699463
    3. 'Protect' → logprob: -6.164061069488525
    4. 'Segment' → logprob: -6.164061069488525
    5. 'Protection' → logprob: -8.039060592651367
    6. ' Protector' → logprob: -8.164060592651367
    7. 'Optimizer' → logprob: -9.789060592651367
    8. 'Cost' → logprob: -9.789060592651367
    9. 'Def' → logprob: -10.039060592651367
    10. 'Str' → logprob: -10.289060592651367

Token 461: 'ctor' (ID: 4558)
  Prédit: 'ctor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctor' → logprob: -3.7697225252486533e-06
    2. 'ct' → logprob: -12.625003814697266
    3. 'ctors' → logprob: -15.250003814697266
    4. ' ctor' → logprob: -15.875003814697266
    5. 'CTOR' → logprob: -17.250003814697266
    6. 'ction' → logprob: -18.375003814697266
    7. 'cctor' → logprob: -18.750003814697266
    8. 'cto' → logprob: -19.250003814697266
    9. 'cter' → logprob: -19.750003814697266
    10. 'Ctor' → logprob: -20.000003814697266

Token 462: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.48120540380477905
    2. '(' → logprob: -0.981205403804779
    3. ':' → logprob: -5.231205463409424
    4. 'Prote' → logprob: -6.981205463409424
    5. '():' → logprob: -7.231205463409424
    6. 'Protect' → logprob: -10.731204986572266
    7. 'Strateg' → logprob: -11.106204986572266
    8. 'Protection' → logprob: -11.231204986572266
    9. '):' → logprob: -11.606204986572266
    10. 'Strategies' → logprob: -11.856204986572266

Token 463: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06252416223287582
    2. '(' → logprob: -2.8125240802764893
    3. ':
' → logprob: -8.06252384185791
    4. '(Abstract' → logprob: -8.93752384185791
    5. ' :' → logprob: -10.18752384185791
    6. '():' → logprob: -10.31252384185791
    7. '(S' → logprob: -10.56252384185791
    8. ':`' → logprob: -12.56252384185791
    9. '(Pro' → logprob: -13.43752384185791
    10. '):' → logprob: -13.68752384185791

Token 464: 'Prote' (ID: 45643)
  Prédit: 'Prote'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prote' → logprob: -0.003849009284749627
    2. 'Protect' → logprob: -6.003849029541016
    3. ' Protector' → logprob: -7.003849029541016
    4. 'Prot' → logprob: -8.128849029541016
    5. '(' → logprob: -9.253849029541016
    6. ')' → logprob: -11.128849029541016
    7. 'Protection' → logprob: -11.253849029541016
    8. 'ABC' → logprob: -11.378849029541016
    9. ' protector' → logprob: -11.628849029541016
    10. 'Pro' → logprob: -12.253849029541016

Token 465: 'ctor' (ID: 4558)
  Prédit: 'ctor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctor' → logprob: -6.704273118884885e-07
    2. 'ct' → logprob: -14.250000953674316
    3. ' ctor' → logprob: -17.5
    4. 'ctors' → logprob: -17.625
    5. 'CTOR' → logprob: -18.125
    6. 'cctor' → logprob: -18.875
    7. 'ction' → logprob: -19.375
    8. 'cter' → logprob: -20.125
    9. '   ' → logprob: -20.5
    10. 'ector' → logprob: -20.75

Token 466: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -4.723352049040841e-06
    2. 'Strateg' → logprob: -12.875004768371582
    3. ' Strategy' → logprob: -13.750004768371582
    4. '_strategy' → logprob: -14.875004768371582
    5. 'Stra' → logprob: -15.500004768371582
    6. 'strategy' → logprob: -16.250003814697266
    7. 'Str' → logprob: -16.500003814697266
    8. ' strategy' → logprob: -16.625003814697266
    9. 'S' → logprob: -16.625003814697266
    10. '   ' → logprob: -17.125003814697266

Token 467: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1269623339176178
    2. '):
' → logprob: -2.126962423324585
    3. ':' → logprob: -11.126962661743164
    4. ')' → logprob: -11.876962661743164
    5. '):
' → logprob: -12.001962661743164
    6. '):

' → logprob: -12.126962661743164
    7. '   ' → logprob: -14.376962661743164
    8. ' ):' → logprob: -15.376962661743164
    9. ':
' → logprob: -15.751962661743164
    10. ' ):
' → logprob: -17.251962661743164

Token 468: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12506231665611267
    2. ':
' → logprob: -2.6250622272491455
    3. '   ' → logprob: -3.1250622272491455
    4. ' def' → logprob: -7.875062465667725
    5. ':def' → logprob: -8.375061988830566
    6. ' :' → logprob: -8.625061988830566
    7. ' :
' → logprob: -9.000061988830566
    8. 'def' → logprob: -9.250061988830566
    9. '):
' → logprob: -9.500061988830566
    10. '):' → logprob: -9.875061988830566

Token 469: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7123803496360779
    2. '   ' → logprob: -0.8373803496360779
    3. 'def' → logprob: -2.5873804092407227
    4. '
' → logprob: -7.212380409240723
    5. '    ' → logprob: -8.337380409240723
    6. ':' → logprob: -8.462380409240723
    7. ' """' → logprob: -9.462380409240723
    8. '    
' → logprob: -9.712380409240723
    9. '"""' → logprob: -10.712380409240723
    10. ' ' → logprob: -10.837380409240723

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08918699622154236
    2. ' """' → logprob: -2.589186906814575
    3. '    ' → logprob: -5.214187145233154
    4. ' def' → logprob: -6.339187145233154
    5. 'class' → logprob: -7.089187145233154
    6. '"""' → logprob: -7.339187145233154
    7. ' class' → logprob: -7.839187145233154
    8. 'def' → logprob: -7.964187145233154
    9. ' ' → logprob: -8.589186668395996
    10. ' """
' → logprob: -8.839186668395996

Token 471: ' Impl' (ID: 144563)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11918443441390991
    2. ' def' → logprob: -2.4941844940185547
    3. '"""' → logprob: -4.119184494018555
    4. 'class' → logprob: -5.244184494018555
    5. ' """' → logprob: -6.119184494018555
    6. '   ' → logprob: -6.119184494018555
    7. 'Impl' (adapté à ' Impl') → logprob: -7.119184494018555
    8. 'Dé' → logprob: -7.994184494018555
    9. 'Cette' → logprob: -8.119184494018555
    10. 'Implement' → logprob: -8.119184494018555

Token 472: 'ément' (ID: 17645)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.09772234410047531
    2. 'ément' → logprob: -2.597722291946411
    3. 'emente' → logprob: -4.34772253036499
    4. 'ements' → logprob: -5.72272253036499
    5. 'ement' → logprob: -6.72272253036499
    6. 'éments' → logprob: -6.72272253036499
    7. 'mente' → logprob: -10.597722053527832
    8. '```' → logprob: -12.847722053527832
    9. '   ' → logprob: -13.097722053527832
    10. 'ém' → logprob: -13.222722053527832

Token 473: 'ation' (ID: 387)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.39414480328559875
    2. 'ation' → logprob: -1.3941447734832764
    3. 'er' → logprob: -3.0191447734832764
    4. 'es' → logprob: -4.1441450119018555
    5. 'ent' → logprob: -5.7691450119018555
    6. 'ement' → logprob: -6.2691450119018555
    7. 'ed' → logprob: -6.3941450119018555
    8. 'entation' → logprob: -6.5191450119018555
    9. '```' → logprob: -6.6441450119018555
    10. 'é' → logprob: -7.2691450119018555

Token 474: ' sophist' (ID: 96686)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.19423551857471466
    2. ' de' → logprob: -2.1942355632781982
    3. ' of' → logprob: -3.4442355632781982
    4. ' part' → logprob: -4.569235324859619
    5. '   ' → logprob: -4.944235324859619
    6. ' du' → logprob: -5.944235324859619
    7. 'd' → logprob: -6.319235324859619
    8. ' incom' → logprob: -6.444235324859619
    9. ' complète' → logprob: -6.569235324859619
    10. ' incomplete' → logprob: -6.569235324859619

Token 475: 'iqu' (ID: 8966)
  Prédit: 'iqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iqu' → logprob: -0.00033069768687710166
    2. 'ique' → logprob: -8.375330924987793
    3. 'iqué' → logprob: -9.375330924987793
    4. 'i' → logprob: -11.500330924987793
    5. 'ic' → logprob: -13.000330924987793
    6. 'quée' → logprob: -13.750330924987793
    7. 'iq' → logprob: -14.750330924987793
    8. 'iquement' → logprob: -15.000330924987793
    9. 'ée' → logprob: -15.500330924987793
    10. 'érée' → logprob: -15.625330924987793

Token 476: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0003088871017098427
    2. 'e' → logprob: -8.750308990478516
    3. 'ee' → logprob: -9.250308990478516
    4. 'ante' → logprob: -10.625308990478516
    5. 'é' → logprob: -11.125308990478516
    6. 'quée' → logprob: -12.750308990478516
    7. 'lée' → logprob: -13.125308990478516
    8. '{' → logprob: -13.250308990478516
    9. 'ed' → logprob: -13.750308990478516
    10. 'ate' → logprob: -14.000308990478516

Token 477: ' avec' (ID: 3937)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8838144540786743
    2. '   ' → logprob: -1.2588144540786743
    3. ' du' → logprob: -2.0088143348693848
    4. ':' → logprob: -2.8838143348693848
    5. ' of' → logprob: -3.6338143348693848
    6. '.' → logprob: -4.133814334869385
    7. ' basée' → logprob: -4.133814334869385
    8. '  ' → logprob: -4.633814334869385
    9. ' :' → logprob: -5.258814334869385
    10. ',' → logprob: -5.258814334869385

Token 478: ' abstra' (ID: 186216)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7900911569595337
    2. 'une' → logprob: -1.2900911569595337
    3. ' une' → logprob: -2.165091037750244
    4. 'un' → logprob: -2.415091037750244
    5. ' tri' → logprob: -4.040091037750244
    6. ' la' → logprob: -4.665091037750244
    7. 'la' → logprob: -4.665091037750244
    8. 'heur' → logprob: -5.540091037750244
    9. 'tri' → logprob: -5.915091037750244
    10. ' dynamic' → logprob: -5.915091037750244

Token 479: 'ctions' (ID: 2620)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.003924045246094465
    2. 'cte' → logprob: -6.1289238929748535
    3. 'it' → logprob: -6.6289238929748535
    4. 'cts' → logprob: -8.878924369812012
    5. 'ction' → logprob: -9.253924369812012
    6. 'ctions' → logprob: -10.003924369812012
    7. 't' → logprob: -10.503924369812012
    8. '
' → logprob: -10.628924369812012
    9. 'ite' → logprob: -11.128924369812012
    10. 'act' → logprob: -11.128924369812012

Token 480: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9934212565422058
    2. '<|end|>' → logprob: -1.7434213161468506
    3. '   ' → logprob: -1.8684213161468506
    4. ':' → logprob: -2.4934213161468506
    5. ' et' → logprob: -2.8684213161468506
    6. ' de' → logprob: -3.3684213161468506
    7. ' pour' → logprob: -3.8684213161468506
    8. ' des' → logprob: -4.1184210777282715
    9. ',' → logprob: -4.2434210777282715
    10. ' for' → logprob: -4.3684210777282715

Token 481: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08321636915206909
    2. '<|end|>' → logprob: -3.458216428756714
    3. '   ' → logprob: -3.583216428756714
    4. '    
' → logprob: -4.958216190338135
    5. ' 
' → logprob: -5.208216190338135
    6. '<|end|>' → logprob: -6.083216190338135
    7. ')' → logprob: -6.458216190338135
    8. '    ' → logprob: -7.208216190338135
    9. ' ' → logprob: -7.208216190338135
    10. '"""' → logprob: -7.458216190338135

Token 482: ' Pour' (ID: 13931)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09927242994308472
    2. '   ' → logprob: -2.5992724895477295
    3. '    
' → logprob: -5.34927225112915
    4. '<|end|>' → logprob: -5.34927225112915
    5. ')' → logprob: -5.59927225112915
    6. ' 
' → logprob: -6.09927225112915
    7. '"""' → logprob: -6.09927225112915
    8. '<|end|>' → logprob: -7.72427225112915
    9. '  
' → logprob: -7.97427225112915
    10. '

' → logprob: -8.099272727966309

Token 483: ' minim' (ID: 23874)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.622920036315918
    2. 'min' → logprob: -1.497920036315918
    3. ' maxim' → logprob: -3.622920036315918
    4. ' minim' → logprob: -3.872920036315918
    5. 'l' → logprob: -3.997920036315918
    6. 'each' → logprob: -4.122920036315918
    7. ' each' → logprob: -4.122920036315918
    8. ' le' → logprob: -4.247920036315918
    9. '"""' → logprob: -4.247920036315918
    10. 'max' → logprob: -4.497920036315918

Token 484: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5065721273422241
    2. 'iser' → logprob: -1.2565721273422241
    3. 'al' → logprob: -2.6315722465515137
    4. 'ize' → logprob: -4.256572246551514
    5. 'izer' → logprob: -4.631572246551514
    6. 'um' → logprob: -5.006572246551514
    7. 'e' → logprob: -5.006572246551514
    8. 'ale' → logprob: -7.006572246551514
    9. 'a' → logprob: -7.381572246551514
    10. 'ser' → logprob: -7.756572246551514

Token 485: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8115147352218628
    2. ' l' → logprob: -0.8115147352218628
    3. ' les' → logprob: -3.4365148544311523
    4. '_expected' → logprob: -3.8115148544311523
    5. ' la' → logprob: -3.9365148544311523
    6. 'les' → logprob: -4.686514854431152
    7. 'expected' → logprob: -4.811514854431152
    8. ' le' → logprob: -5.436514854431152
    9. '   ' → logprob: -5.686514854431152
    10. ' expected' → logprob: -5.811514854431152

Token 486: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20590612292289734
    2. 'a' → logprob: -2.3309061527252197
    3. 'es' → logprob: -2.9559061527252197
    4. 'e' → logprob: -3.9559061527252197
    5. ''att' → logprob: -5.080905914306641
    6. '_expected' → logprob: -5.955905914306641
    7. 'expected' → logprob: -6.955905914306641
    8. '_' → logprob: -7.205905914306641
    9. ''effet' → logprob: -7.205905914306641
    10. ''_' → logprob: -7.330905914306641

Token 487: 'attaque' (ID: 153350)
  Prédit: 'attaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attaque' → logprob: -0.1468532234430313
    2. 'expected' → logprob: -2.39685320854187
    3. ''' → logprob: -3.39685320854187
    4. 'attack' → logprob: -5.521853446960449
    5. 'atta' → logprob: -5.521853446960449
    6. ' attaque' → logprob: -6.521853446960449
    7. 'att' → logprob: -6.646853446960449
    8. 'expect' → logprob: -8.39685344696045
    9. ' expected' → logprob: -8.64685344696045
    10. ''att' → logprob: -8.64685344696045

Token 488: ' :' (ID: 712)
  Prédit: ' attend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' attend' → logprob: -0.6245731115341187
    2. 'att' → logprob: -2.249573230743408
    3. '_expected' → logprob: -2.249573230743408
    4. '_att' → logprob: -2.499573230743408
    5. 's' → logprob: -2.749573230743408
    6. 'expected' → logprob: -3.249573230743408
    7. '_' → logprob: -3.749573230743408
    8. ',' → logprob: -4.374573230743408
    9. '   ' → logprob: -5.124573230743408
    10. ' attendu' → logprob: -5.249573230743408

Token 489: ' investir' (ID: 79950)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.14592501521110535
    2. '   ' → logprob: -2.8959250450134277
    3. 'def' → logprob: -4.145925045013428
    4. ' return' → logprob: -5.020925045013428
    5. '
' → logprob: -5.395925045013428
    6. ' class' → logprob: -5.520925045013428
    7. '```' → logprob: -5.520925045013428
    8. 'class' → logprob: -5.770925045013428
    9. ' pass' → logprob: -5.895925045013428
    10. ' on' → logprob: -6.020925045013428

Token 490: ' budget' (ID: 9946)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.4136738181114197
    2. 'dans' → logprob: -1.1636738777160645
    3. ' sur' → logprob: -4.4136738777160645
    4. 'sur' → logprob: -4.9136738777160645
    5. ' progressivement' → logprob: -5.9136738777160645
    6. ' jud' → logprob: -6.7886738777160645
    7. ' en' → logprob: -7.7886738777160645
    8. ' le' → logprob: -8.413673400878906
    9. ' partout' → logprob: -8.663673400878906
    10. '_sur' → logprob: -8.663673400878906

Token 491: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.9285078048706055
    2. ' ' → logprob: -2.0535078048706055
    3. ' au' → logprob: -2.4285078048706055
    4. ' sur' → logprob: -2.6785078048706055
    5. ' jud' → logprob: -3.0535078048706055
    6. ' en' → logprob: -3.0535078048706055
    7. '_' → logprob: -3.1785078048706055
    8. 'sur' → logprob: -3.1785078048706055
    9. 'dans' → logprob: -3.3035078048706055
    10. 'au' → logprob: -3.6785078048706055

Token 492: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.140261173248291
    2. ' segments' → logprob: -1.515261173248291
    3. ' les' → logprob: -1.765261173248291
    4. ' la' → logprob: -2.265261173248291
    5. 'segments' → logprob: -2.640261173248291
    6. 'la' → logprob: -2.765261173248291
    7. ' des' → logprob: -3.765261173248291
    8. ' chaque' → logprob: -5.140261173248291
    9. ' protection' → logprob: -5.265261173248291
    10. 'des' → logprob: -5.765261173248291

Token 493: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.11406620591878891
    2. ' segments' → logprob: -2.2390661239624023
    3. 'segment' → logprob: -7.114066123962402
    4. 'seg' → logprob: -8.739066123962402
    5. 'sections' → logprob: -9.989066123962402
    6. ' segment' → logprob: -10.239066123962402
    7. '_segments' → logprob: -10.489066123962402
    8. 'points' → logprob: -11.364066123962402
    9. 'zones' → logprob: -11.489066123962402
    10. '```' → logprob: -11.489066123962402

Token 494: ' avec' (ID: 3937)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.9430389404296875
    2. ' qui' → logprob: -1.5680389404296875
    3. ' les' → logprob: -1.8180389404296875
    4. ' proportion' → logprob: -3.0680389404296875
    5. ' de' → logprob: -3.3180389404296875
    6. ' avec' → logprob: -3.4430389404296875
    7. ' selon' → logprob: -4.0680389404296875
    8. ',' → logprob: -4.0680389404296875
    9. ' où' → logprob: -4.1930389404296875
    10. 'pro' → logprob: -4.1930389404296875

Token 495: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2829445600509644
    2. 'la' → logprob: -1.4079445600509644
    3. ' highest' → logprob: -1.6579445600509644
    4. 'highest' → logprob: -2.407944679260254
    5. ' le' → logprob: -3.032944679260254
    6. 'le' → logprob: -3.407944679260254
    7. ' maximal' → logprob: -4.032944679260254
    8. ' plus' → logprob: -4.407944679260254
    9. ' meilleur' → logprob: -4.532944679260254
    10. 'plus' → logprob: -4.532944679260254

Token 496: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8651770353317261
    2. ' plus' → logprob: -1.115177035331726
    3. ' meilleure' → logprob: -1.990177035331726
    4. ' meilleur' → logprob: -3.4901771545410156
    5. 'highest' → logprob: -3.7401771545410156
    6. ' highest' → logprob: -3.9901771545410156
    7. 'me' → logprob: -4.115177154541016
    8. 'best' → logprob: -4.865177154541016
    9. ' best' → logprob: -5.740177154541016
    10. 'max' → logprob: -5.740177154541016

Token 497: ' forte' (ID: 31258)
  Prédit: ' haute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' haute' → logprob: -0.11678259819746017
    2. ' grande' → logprob: -2.3667826652526855
    3. ' élevée' → logprob: -5.7417826652526855
    4. ' grand' → logprob: -5.8667826652526855
    5. ' haut' → logprob: -6.1167826652526855
    6. ' forte' → logprob: -6.2417826652526855
    7. ' high' → logprob: -6.3667826652526855
    8. ' élevé' → logprob: -7.1167826652526855
    9. '```' → logprob: -7.8667826652526855
    10. 'grand' → logprob: -8.116782188415527

Token 498: ' prob' (ID: 4921)
  Prédit: 'attaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attaque' → logprob: -0.790189266204834
    2. ' attaque' → logprob: -1.165189266204834
    3. ' réduction' → logprob: -2.665189266204834
    4. 'attack' → logprob: -2.915189266204834
    5. 'prob' → logprob: -3.290189266204834
    6. ' attack' → logprob: -3.665189266204834
    7. 'ratio' → logprob: -5.165189266204834
    8. 'att' → logprob: -5.165189266204834
    9. ' prob' → logprob: -5.665189266204834
    10. ' efficacité' → logprob: -5.790189266204834

Token 499: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.0001398929744027555
    2. 'ilité' → logprob: -9.125140190124512
    3. 'alité' → logprob: -11.125140190124512
    4. 'abil' → logprob: -11.250140190124512
    5. 'ab' → logprob: -13.750140190124512
    6. 'a' → logprob: -14.875140190124512
    7. 'ability' → logprob: -15.125140190124512
    8. 'abilidade' → logprob: -15.375140190124512
    9. '```' → logprob: -15.750140190124512
    10. 'ité' → logprob: -15.750140190124512

Token 500: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7798882722854614
    2. 'd' → logprob: -1.0298882722854614
    3. '<|end|>' → logprob: -2.154888153076172
    4. '.' → logprob: -3.404888153076172
    5. '_d' → logprob: -3.904888153076172
    6. '_' → logprob: -5.404888153076172
    7. ' _' → logprob: -6.279888153076172
    8. ',' → logprob: -6.279888153076172
    9. '_attack' → logprob: -6.654888153076172
    10. ' *' → logprob: -6.779888153076172

Token 501: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08887042850255966
    2. '_' → logprob: -2.8388705253601074
    3. 'attaque' → logprob: -3.9638705253601074
    4. '_attack' → logprob: -5.838870525360107
    5. ' attaque' → logprob: -6.338870525360107
    6. ''_' → logprob: -7.088870525360107
    7. '_at' → logprob: -7.838870525360107
    8. 'atta' → logprob: -8.08887004852295
    9. ' ataque' → logprob: -8.46387004852295
    10. ''att' → logprob: -8.71387004852295

Token 502: 'attaque' (ID: 153350)
  Prédit: 'attaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attaque' → logprob: -0.039756953716278076
    2. ''' → logprob: -3.789757013320923
    3. ' attaque' → logprob: -4.539756774902344
    4. 'atta' → logprob: -5.914756774902344
    5. 'attack' → logprob: -6.039756774902344
    6. 'att' → logprob: -8.289756774902344
    7. ' ataque' → logprob: -8.789756774902344
    8. '`' → logprob: -9.789756774902344
    9. ''att' → logprob: -10.164756774902344
    10. ' attack' → logprob: -11.414756774902344

Token 503: ' par' (ID: 686)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21155065298080444
    2. ' par' → logprob: -2.586550712585449
    3. ',' → logprob: -2.836550712585449
    4. ' .' → logprob: -3.711550712585449
    5. ' d' → logprob: -5.336550712585449
    6. '   ' → logprob: -5.461550712585449
    7. 'par' → logprob: -5.711550712585449
    8. '<|end|>' → logprob: -5.711550712585449
    9. ' per' → logprob: -6.586550712585449
    10. ' ,' → logprob: -6.586550712585449

Token 504: ' unité' (ID: 181741)
  Prédit: ' unité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unité' → logprob: -0.8367927670478821
    2. 'distance' → logprob: -1.5867927074432373
    3. 'unit' → logprob: -1.7117927074432373
    4. 'un' → logprob: -2.3367927074432373
    5. ' distance' → logprob: -3.3367927074432373
    6. ' unit' → logprob: -3.4617927074432373
    7. ' un' → logprob: -4.211792945861816
    8. ' ' → logprob: -6.961792945861816
    9. ' unite' → logprob: -8.211792945861816
    10. ' unidade' → logprob: -8.461792945861816

Token 505: '.
' (ID: 558)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10217024385929108
    2. 'de' → logprob: -2.35217022895813
    3. 'distance' → logprob: -7.227170467376709
    4. '<|end|>' → logprob: -8.47716999053955
    5. '.' → logprob: -8.60216999053955
    6. ' d' → logprob: -8.60216999053955
    7. 'd' → logprob: -8.85216999053955
    8. ',' → logprob: -9.22716999053955
    9. ' of' → logprob: -9.47716999053955
    10. '_distance' → logprob: -9.97716999053955

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05108724161982536
    2. '"""' → logprob: -3.9260871410369873
    3. '
' → logprob: -4.551087379455566
    4. ')' → logprob: -5.176087379455566
    5. '    ' → logprob: -5.801087379455566
    6. ' """' → logprob: -6.176087379455566
    7. '.' → logprob: -6.301087379455566
    8. '  ' → logprob: -6.676087379455566
    9. ' ' → logprob: -6.801087379455566
    10. '    
' → logprob: -7.176087379455566

Token 507: ' Le' (ID: 2018)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6250627040863037
    2. '   ' → logprob: -1.1250627040863037
    3. '"""' → logprob: -2.0000627040863037
    4. ' """' → logprob: -6.500062942504883
    5. '```' → logprob: -7.000062942504883
    6. '    
' → logprob: -7.500062942504883
    7. ')' → logprob: -7.750062942504883
    8. '
' → logprob: -8.250062942504883
    9. '    ' → logprob: -8.250062942504883
    10. '"""
' → logprob: -8.500062942504883

Token 508: ' protection' (ID: 11137)
  Prédit: ' budget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' budget' → logprob: -0.5545486211776733
    2. 'budget' → logprob: -2.554548740386963
    3. ' code' → logprob: -2.929548740386963
    4. ' doc' → logprob: -3.304548740386963
    5. ' def' → logprob: -3.554548740386963
    6. ' """' → logprob: -3.804548740386963
    7. ' space' → logprob: -3.929548740386963
    8. ' """
' → logprob: -4.304548740386963
    9. ' class' → logprob: -4.492048740386963
    10. ' ' → logprob: -4.554548740386963

Token 509: ' coûte' (ID: 118994)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.504538655281067
    2. 's' → logprob: -1.754538655281067
    3. ' maximale' → logprob: -2.2545385360717773
    4. ' ' → logprob: -2.3795385360717773
    5. ' est' → logprob: -2.6295385360717773
    6. '_max' → logprob: -3.1295385360717773
    7. ' s' → logprob: -3.5045385360717773
    8. ' consiste' → logprob: -3.5045385360717773
    9. ' maximal' → logprob: -3.6295385360717773
    10. '   ' → logprob: -3.8795385360717773

Token 510: ' ' (ID: 220)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4757029414176941
    2. 'e' → logprob: -2.850703001022339
    3. ' ' → logprob: -2.975703001022339
    4. '1' → logprob: -2.975703001022339
    5. ' exactement' → logprob: -2.975703001022339
    6. ' une' → logprob: -3.350703001022339
    7. ' chaque' → logprob: -3.975703001022339
    8. ' en' → logprob: -4.10070276260376
    9. 'un' → logprob: -4.35070276260376
    10. 's' → logprob: -4.85070276260376

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26629534363746643
    2. ' ' → logprob: -1.766295313835144
    3. ' un' → logprob: -3.8912954330444336
    4. 'une' → logprob: -4.641295433044434
    5. ' une' → logprob: -5.141295433044434
    6. 'un' → logprob: -5.266295433044434
    7. ' exactement' → logprob: -5.266295433044434
    8. ' distance' → logprob: -5.891295433044434
    9. 'distance' → logprob: -6.016295433044434
    10. ' le' → logprob: -6.516295433044434

Token 512: ' unité' (ID: 181741)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.8506283164024353
    2. ' unité' → logprob: -0.9756283164024353
    3. ' unit' → logprob: -2.47562837600708
    4. ' ' → logprob: -3.35062837600708
    5. ' )' → logprob: -4.60062837600708
    6. '_' → logprob: -4.72562837600708
    7. 'unit' → logprob: -4.72562837600708
    8. ' _' → logprob: -4.97562837600708
    9. '.' → logprob: -5.22562837600708
    10. '  ' → logprob: -5.47562837600708

Token 513: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03321082890033722
    2. ' par' → logprob: -3.9082107543945312
    3. 'de' → logprob: -4.783210754394531
    4. ' d' → logprob: -6.158210754394531
    5. ' ' → logprob: -7.533210754394531
    6. 'd' → logprob: -8.158210754394531
    7. ' of' → logprob: -8.283210754394531
    8. 's' → logprob: -8.658210754394531
    9. 'par' → logprob: -9.033210754394531
    10. ' pour' → logprob: -9.158210754394531

Token 514: ''argent' (ID: 93204)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4022478461265564
    2. ''invest' → logprob: -1.9022479057312012
    3. ''énergie' → logprob: -2.527247905731201
    4. ''' → logprob: -3.402247905731201
    5. ''argent' → logprob: -4.527247905731201
    6. 'distance' → logprob: -4.527247905731201
    7. 'es' → logprob: -4.527247905731201
    8. 'budget' → logprob: -5.152247905731201
    9. 'é' → logprob: -5.527247905731201
    10. ''espace' → logprob: -5.777247905731201

Token 515: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.005682984367012978
    2. ' pour' → logprob: -6.255682945251465
    3. 'par' → logprob: -6.380682945251465
    4. ' de' → logprob: -7.130682945251465
    5. '.' → logprob: -7.880682945251465
    6. '   ' → logprob: -9.005682945251465
    7. 'pour' → logprob: -9.005682945251465
    8. '```' → logprob: -9.380682945251465
    9. ',' → logprob: -9.505682945251465
    10. '<|end|>' → logprob: -9.505682945251465

Token 516: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.41054385900497437
    2. ' unité' → logprob: -1.9105439186096191
    3. 'un' → logprob: -2.035543918609619
    4. 'unit' → logprob: -3.285543918609619
    5. ' distance' → logprob: -4.535543918609619
    6. 'segment' → logprob: -5.160543918609619
    7. '```' → logprob: -7.035543918609619
    8. '1' → logprob: -7.285543918609619
    9. 'une' → logprob: -7.535543918609619
    10. ' ' → logprob: -8.160543441772461

Token 517: ' protég' (ID: 161134)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07909302413463593
    2. '.' → logprob: -2.8290929794311523
    3. ' de' → logprob: -5.579092979431152
    4. 'def' → logprob: -6.829092979431152
    5. ',' → logprob: -6.954092979431152
    6. 'de' → logprob: -7.079092979431152
    7. '    ' → logprob: -7.204092979431152
    8. '       ' → logprob: -7.204092979431152
    9. ')' → logprob: -7.454092979431152
    10. '_pro' → logprob: -7.704092979431152

Token 518: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.07290954142808914
    2. 'é' → logprob: -2.6979095935821533
    3. 'e' → logprob: -6.447909355163574
    4. 'ection' → logprob: -8.072909355163574
    5. 'rée' → logprob: -8.697909355163574
    6. 'urée' → logprob: -8.697909355163574
    7. '```' → logprob: -9.072909355163574
    8. '}' → logprob: -9.072909355163574
    9. 'ee' → logprob: -9.697909355163574
    10. 'ect' → logprob: -9.947909355163574

Token 519: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20795738697052002
    2. '.' → logprob: -2.3329572677612305
    3. '
' → logprob: -3.4579572677612305
    4. ':' → logprob: -3.8329572677612305
    5. ',' → logprob: -4.2079572677612305
    6. '<|end|>' → logprob: -4.9579572677612305
    7. '  ' → logprob: -6.2079572677612305
    8. '    ' → logprob: -6.3329572677612305
    9. ')' → logprob: -6.3329572677612305
    10. ' ' → logprob: -6.3329572677612305

Token 520: ' pa' (ID: 2428)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.16934393346309662
    2. ' donc' → logprob: -2.919343948364258
    3. ' mais' → logprob: -3.169343948364258
    4. ' and' → logprob: -3.919343948364258
    5. 'et' → logprob: -4.544343948364258
    6. ' avec' → logprob: -5.919343948364258
    7. ' en' → logprob: -6.169343948364258
    8. ' le' → logprob: -6.169343948364258
    9. ' car' → logprob: -6.294343948364258
    10. ' c' → logprob: -6.294343948364258

Token 521: 'ie' (ID: 396)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006391456816345453
    2. 'rt' → logprob: -5.506391525268555
    3. 's' → logprob: -6.381391525268555
    4. 'y' → logprob: -8.381391525268555
    5. 'ral' → logprob: -9.506391525268555
    6. 'ra' → logprob: -9.631391525268555
    7. 'rl' → logprob: -10.006391525268555
    8. 'rs' → logprob: -10.131391525268555
    9. 'rf' → logprob: -10.381391525268555
    10. 'rent' → logprob: -10.756391525268555

Token 522: ' une' (ID: 2463)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0663729906082153
    2. 'r' → logprob: -1.1913729906082153
    3. 'y' → logprob: -1.1913729906082153
    4. 'ying' → logprob: -4.816372871398926
    5. 'rt' → logprob: -4.941372871398926
    6. 'nt' → logprob: -5.066372871398926
    7. 'ra' → logprob: -5.191372871398926
    8. 'ie' → logprob: -5.316372871398926
    9. 'rant' → logprob: -5.441372871398926
    10. 'e' → logprob: -6.816372871398926

Token 523: ' distance' (ID: 9324)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.4577385485172272
    2. 'r' → logprob: -2.4577386379241943
    3. 'distance' → logprob: -2.9577386379241943
    4. 'ss' → logprob: -3.5827386379241943
    5. 'portion' → logprob: -3.5827386379241943
    6. 't' → logprob: -3.5827386379241943
    7. ' distance' → logprob: -3.8327386379241943
    8. 'part' → logprob: -4.332738399505615
    9. 'rob' → logprob: -4.457738399505615
    10. 's' → logprob: -4.582738399505615

Token 524: ' part' (ID: 997)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.0532302856445312
    2. '<|end|>' → logprob: -1.5532302856445312
    3. ' de' → logprob: -2.5532302856445312
    4. ' maximale' → logprob: -3.0532302856445312
    5. '.' → logprob: -3.8032302856445312
    6. ' protég' → logprob: -3.8032302856445312
    7. ' for' → logprob: -3.9282302856445312
    8. ' complète' → logprob: -4.053230285644531
    9. ' ' → logprob: -4.178230285644531
    10. ')' → logprob: -4.303230285644531

Token 525: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -0.2760656177997589
    2. 'e' → logprob: -2.5260655879974365
    3. 'iellement' → logprob: -2.5260655879974365
    4. 't' → logprob: -3.6510655879974365
    5. 'agée' → logprob: -3.7760655879974365
    6. 'ée' → logprob: -4.526065826416016
    7. 'ie' → logprob: -5.026065826416016
    8. 'iale' → logprob: -5.901065826416016
    9. 'ial' → logprob: -6.276065826416016
    10. 'iel' → logprob: -6.526065826416016

Token 526: ' sur' (ID: 1512)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.172000527381897
    2. ' de' → logprob: -1.797000527381897
    3. ' par' → logprob: -2.4220004081726074
    4. ')' → logprob: -2.5470004081726074
    5. 'de' → logprob: -2.5470004081726074
    6. '_' → logprob: -3.4220004081726074
    7. ',' → logprob: -3.5470004081726074
    8. ' protég' → logprob: -3.5470004081726074
    9. ' ' → logprob: -3.6720004081726074
    10. 'e' → logprob: -3.9220004081726074

Token 527: ' un' (ID: 537)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6462551951408386
    2. 'le' → logprob: -1.3962552547454834
    3. ' chaque' → logprob: -1.8962552547454834
    4. ' un' → logprob: -4.271255016326904
    5. ' ce' → logprob: -4.271255016326904
    6. ' la' → logprob: -4.521255016326904
    7. 'ce' → logprob: -4.771255016326904
    8. 'la' → logprob: -5.146255016326904
    9. ' les' → logprob: -5.271255016326904
    10. 'segment' → logprob: -5.521255016326904

Token 528: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.04908790439367294
    2. 'segment' → logprob: -3.0490880012512207
    3. '_segment' → logprob: -8.299087524414062
    4. ' ' → logprob: -9.424087524414062
    5. ' seg' → logprob: -10.049087524414062
    6. 'seg' → logprob: -10.424087524414062
    7. ' segmento' → logprob: -11.174087524414062
    8. ' Segment' → logprob: -11.424087524414062
    9. '(segment' → logprob: -11.424087524414062
    10. 'egment' → logprob: -11.799087524414062

Token 529: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19869250059127808
    2. '.' → logprob: -1.9486925601959229
    3. ',' → logprob: -4.198692321777344
    4. ' .' → logprob: -4.823692321777344
    5. ' ,' → logprob: -5.573692321777344
    6. ')' → logprob: -5.823692321777344
    7. '...' → logprob: -7.198692321777344
    8. ':' → logprob: -7.198692321777344
    9. '  ' → logprob: -7.323692321777344
    10. ' ' → logprob: -7.448692321777344

Token 530: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.1186433807015419
    2. ' ' → logprob: -4.118643283843994
    3. 'n' → logprob: -4.243643283843994
    4. 'possible' → logprob: -4.493643283843994
    5. 'd' → logprob: -5.118643283843994
    6. ' impossible' → logprob: -5.743643283843994
    7. ' toujours' → logprob: -5.743643283843994
    8. 'r' → logprob: -5.868643283843994
    9. 's' → logprob: -5.993643283843994
    10. ' part' → logprob: -5.993643283843994

Token 531: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4989610016345978
    2. '   ' → logprob: -0.9989609718322754
    3. ',' → logprob: -4.248960971832275
    4. ':' → logprob: -5.248960971832275
    5. '
' → logprob: -6.498960971832275
    6. '       ' → logprob: -7.123960971832275
    7. ' .' → logprob: -7.998960971832275
    8. ')' → logprob: -8.123961448669434
    9. '.
' → logprob: -8.123961448669434
    10. '  ' → logprob: -8.248961448669434

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16098999977111816
    2. '"""' → logprob: -2.160989999771118
    3. '
' → logprob: -3.660989999771118
    4. ' """' → logprob: -5.285989761352539
    5. ')' → logprob: -6.910989761352539
    6. ' 
' → logprob: -7.910989761352539
    7. '    
' → logprob: -7.910989761352539
    8. '```' → logprob: -8.410989761352539
    9. ' ' → logprob: -9.160989761352539
    10. '"' → logprob: -9.410989761352539

Token 533: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0028454139828681946
    2. '   ' → logprob: -6.252845287322998
    3. '"""' → logprob: -7.877845287322998
    4. ' 
' → logprob: -8.377845764160156
    5. '    
' → logprob: -9.002845764160156
    6. '

' → logprob: -9.627845764160156
    7. '
' → logprob: -10.752845764160156
    8. ' def' → logprob: -10.752845764160156
    9. 'def' → logprob: -11.002845764160156
    10. ')' → logprob: -11.377845764160156

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0067633334547281265
    2. 'def' → logprob: -5.256763458251953
    3. ' def' → logprob: -7.131763458251953
    4. '
' → logprob: -7.256763458251953
    5. '    
' → logprob: -11.006763458251953
    6. '  ' → logprob: -12.631763458251953
    7. '    ' → logprob: -13.006763458251953
    8. ' ' → logprob: -14.881763458251953
    9. '   
' → logprob: -15.256763458251953
    10. 'indent' → logprob: -15.256763458251953

Token 535: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00015860427811276168
    2. ' def' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.250158309936523
    4. '
' → logprob: -20.250158309936523
    5. 'class' → logprob: -20.625158309936523
    6. '	def' → logprob: -21.250158309936523
    7. 'de' → logprob: -22.625158309936523
    8. 'from' → logprob: -22.875158309936523
    9. '    
' → logprob: -23.250158309936523
    10. ' ' → logprob: -23.875158309936523

Token 536: ' minimize' (ID: 41776)
  Prédit: ' minimize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimize' → logprob: -0.35119354724884033
    2. ' def' → logprob: -1.4761935472488403
    3. 'min' → logprob: -3.476193428039551
    4. ' __' → logprob: -4.226193428039551
    5. 'def' → logprob: -4.351193428039551
    6. ' minimal' → logprob: -5.226193428039551
    7. ' maximize' → logprob: -6.476193428039551
    8. 'minimal' → logprob: -6.851193428039551
    9. ' min' → logprob: -7.851193428039551
    10. 'maximize' → logprob: -7.976193428039551

Token 537: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -15.125000953674316
    3. '_possible' → logprob: -15.375000953674316
    4. '_existing' → logprob: -15.875000953674316
    5. '_expect' → logprob: -16.375001907348633
    6. '   ' → logprob: -16.500001907348633
    7. '_current' → logprob: -16.875001907348633
    8. '```' → logprob: -17.000001907348633
    9. '_des' → logprob: -17.125001907348633
    10. '_best' → logprob: -17.625001907348633

Token 538: '_attack' (ID: 118945)
  Prédit: '_attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attack' → logprob: -1.676292231422849e-05
    2. '_expected' → logprob: -11.250017166137695
    3. '_' → logprob: -12.750017166137695
    4. '_att' → logprob: -14.500017166137695
    5. 'attack' → logprob: -15.500017166137695
    6. '   ' → logprob: -16.625017166137695
    7. '_ATTACK' → logprob: -17.250017166137695
    8. 'Attack' → logprob: -18.375017166137695
    9. '_answer' → logprob: -18.500017166137695
    10. '_attention' → logprob: -18.500017166137695

Token 539: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.125000953674316
    3. '(
' → logprob: -16.375001907348633
    4. ' (' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.625001907348633
    6. 'self' → logprob: -16.875001907348633
    7. '       ' → logprob: -17.500001907348633
    8. '(s' → logprob: -17.875001907348633
    9. '(sel' → logprob: -18.000001907348633
    10. '(se' → logprob: -19.875001907348633

Token 540: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.013647767715156078
    2. ')' → logprob: -5.138647556304932
    3. 'self' → logprob: -5.513647556304932
    4. '(' → logprob: -5.763647556304932
    5. ',' → logprob: -8.51364803314209
    6. '   ' → logprob: -8.51364803314209
    7. '       ' → logprob: -10.01364803314209
    8. ' self' → logprob: -10.76364803314209
    9. ')(' → logprob: -11.01364803314209
    10. ' (' → logprob: -11.38864803314209

Token 541: ' dataset' (ID: 20830)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00879809819161892
    2. ' self' → logprob: -4.758798122406006
    3. 'dataset' → logprob: -8.758797645568848
    4. '       ' → logprob: -10.883797645568848
    5. ' dataset' → logprob: -12.008797645568848
    6. '   ' → logprob: -13.758797645568848
    7. '(self' → logprob: -15.008797645568848
    8. ')' → logprob: -16.758798599243164
    9. '
' → logprob: -17.133798599243164
    10. '	self' → logprob: -17.258798599243164

Token 542: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30553725361824036
    2. ':' → logprob: -1.680537223815918
    3. ',' → logprob: -2.680537223815918
    4. '):' → logprob: -5.805537223815918
    5. '   ' → logprob: -6.055537223815918
    6. '       ' → logprob: -6.555537223815918
    7. ' )' → logprob: -7.555537223815918
    8. 'self' → logprob: -7.680537223815918
    9. '(self' → logprob: -7.930537223815918
    10. ' self' → logprob: -8.680537223815918

Token 543: ' Dataset' (ID: 79063)
  Prédit: 'Dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dataset' → logprob: -0.47527217864990234
    2. ' Dataset' → logprob: -0.9752721786499023
    3. 'float' → logprob: -7.600272178649902
    4. 'self' → logprob: -8.100272178649902
    5. ' float' → logprob: -8.350272178649902
    6. ' self' → logprob: -9.100272178649902
    7. ')' → logprob: -11.225272178649902
    8. ' dataset' → logprob: -11.475272178649902
    9. '   ' → logprob: -11.725272178649902
    10. 'dataset' → logprob: -12.225272178649902

Token 544: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. '   ' → logprob: -11.75001335144043
    3. '):' → logprob: -12.62501335144043
    4. ' )' → logprob: -13.87501335144043
    5. '       ' → logprob: -14.37501335144043
    6. ':' → logprob: -15.00001335144043
    7. 'self' → logprob: -15.37501335144043
    8. ',' → logprob: -16.00001335144043
    9. ' ->' → logprob: -16.62501335144043
    10. ')->' → logprob: -16.75001335144043

Token 545: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.06013478338718414
    2. '->' → logprob: -2.9351348876953125
    3. ')' → logprob: -5.9351348876953125
    4. ':' → logprob: -6.0601348876953125
    5. '   ' → logprob: -8.310134887695312
    6. '       ' → logprob: -12.435134887695312
    7. ' ' → logprob: -12.435134887695312
    8. ')->' → logprob: -12.560134887695312
    9. ':
' → logprob: -14.810134887695312
    10. '```' → logprob: -15.060134887695312

Token 546: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0007105246186256409
    2. ' float' → logprob: -7.250710487365723
    3. 'flo' → logprob: -15.250710487365723
    4. ' ' → logprob: -16.25071144104004
    5. '   ' → logprob: -16.62571144104004
    6. '(float' → logprob: -17.00071144104004
    7. 'fl' → logprob: -17.75071144104004
    8. 'f' → logprob: -18.25071144104004
    9. '	float' → logprob: -18.37571144104004
    10. 'Float' → logprob: -18.37571144104004

Token 547: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00027825910365208983
    2. ':
' → logprob: -8.75027847290039
    3. '       ' → logprob: -9.25027847290039
    4. '):' → logprob: -10.87527847290039
    5. ' :' → logprob: -13.37527847290039
    6. '():' → logprob: -13.50027847290039
    7. '   ' → logprob: -15.12527847290039
    8. '):
' → logprob: -15.25027847290039
    9. ',' → logprob: -15.37527847290039
    10. ':**' → logprob: -15.50027847290039

Token 548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055748097598552704
    2. 'budget' → logprob: -2.9307479858398438
    3. ' budget' → logprob: -7.305747985839844
    4. 'remaining' → logprob: -9.180747985839844
    5. 'total' → logprob: -10.805747985839844
    6. '   ' → logprob: -11.055747985839844
    7. '    ' → logprob: -11.555747985839844
    8. 'b' → logprob: -12.180747985839844
    9. '_budget' → logprob: -12.180747985839844
    10. '      ' → logprob: -12.305747985839844

Token 549: ' budget' (ID: 9946)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7127522826194763
    2. 'budget' (adapté à ' budget') → logprob: -0.7127522826194763
    3. 'remaining' → logprob: -4.087752342224121
    4. 'segments' → logprob: -6.462752342224121
    5. 'sorted' → logprob: -8.462752342224121
    6. 'available' → logprob: -8.837752342224121
    7. '#' → logprob: -9.087752342224121
    8. 'total' → logprob: -9.337752342224121
    9. '   ' → logprob: -9.587752342224121
    10. 'b' → logprob: -9.837752342224121

Token 550: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018702102825045586
    2. '=' → logprob: -4.018702030181885
    3. '_remaining' → logprob: -7.643702030181885
    4. '_budget' → logprob: -10.393702507019043
    5. '   ' → logprob: -10.893702507019043
    6. 'remaining' → logprob: -11.893702507019043
    7. '    ' → logprob: -12.018702507019043
    8. '_left' → logprob: -13.018702507019043
    9. '_available' → logprob: -13.393702507019043
    10. '       ' → logprob: -13.893702507019043

Token 551: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.4741813540458679
    2. ' dataset' → logprob: -0.9741813540458679
    3. 'float' → logprob: -10.099181175231934
    4. '       ' → logprob: -10.099181175231934
    5. ' float' → logprob: -10.974181175231934
    6. 'ataset' → logprob: -13.599181175231934
    7. '        ' → logprob: -13.724181175231934
    8. '.dataset' → logprob: -13.849181175231934
    9. '(dataset' → logprob: -14.599181175231934
    10. '   ' → logprob: -15.724181175231934

Token 552: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.00016599490481894463
    2. '.' → logprob: -8.750165939331055
    3. ' .' → logprob: -12.000165939331055
    4. 'budget' → logprob: -13.750165939331055
    5. '
' → logprob: -16.000165939331055
    6. '.B' → logprob: -17.500165939331055
    7. '_budget' → logprob: -17.875165939331055
    8. '.pro' → logprob: -18.625165939331055
    9. '.remaining' → logprob: -18.750165939331055
    10. '   ' → logprob: -18.750165939331055

Token 553: 'udget' (ID: 36671)
  Prédit: 'udget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udget' → logprob: -4.320199877838604e-07
    2. 'ud' → logprob: -15.25
    3. 'udge' → logprob: -16.375
    4. 'budget' → logprob: -16.625
    5. '   ' → logprob: -17.875
    6. 'u' → logprob: -18.625
    7. '       ' → logprob: -18.875
    8. '_budget' → logprob: -19.375
    9. '\' → logprob: -19.625
    10. '```' → logprob: -19.875

Token 554: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4878040850162506
    2. '
' → logprob: -0.9878040552139282
    3. ',' → logprob: -5.612803936004639
    4. '        
' → logprob: -5.862803936004639
    5. 'segments' → logprob: -5.987803936004639
    6. 'remaining' → logprob: -6.487803936004639
    7. '
' → logprob: -6.862803936004639
    8. 'total' → logprob: -7.112803936004639
    9. ' 
' → logprob: -9.237804412841797
    10. ' /' → logprob: -9.487804412841797

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14330440759658813
    2. 'segments' → logprob: -2.0183043479919434
    3. 'sorted' → logprob: -8.768304824829102
    4. 'remaining' → logprob: -8.893304824829102
    5. ' segments' → logprob: -9.393304824829102
    6. 'total' → logprob: -10.268304824829102
    7. ',' → logprob: -10.268304824829102
    8. 'segment' → logprob: -10.643304824829102
    9. 'seg' → logprob: -10.768304824829102
    10. '
' → logprob: -10.893304824829102

Token 556: ' #' (ID: 1069)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.019056320190429688
    2. 'remaining' → logprob: -5.01905632019043
    3. 'sorted' → logprob: -5.39405632019043
    4. 'expected' → logprob: -5.76905632019043
    5. '#' (adapté à ' #') → logprob: -5.89405632019043
    6. 'attack' → logprob: -8.01905632019043
    7. 'seg' → logprob: -8.14405632019043
    8. 'total' → logprob: -8.26905632019043
    9. 'att' → logprob: -8.51905632019043
    10. 'self' → logprob: -8.76905632019043

Token 557: ' Seg' (ID: 13616)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.0663418099284172
    2. 'sorted' → logprob: -3.5663418769836426
    3. 'remaining' → logprob: -3.9413418769836426
    4. '#' → logprob: -5.066341876983643
    5. 'expected' → logprob: -5.066341876983643
    6. 'attack' → logprob: -7.191341876983643
    7. 'seg' → logprob: -7.441341876983643
    8. 'att' → logprob: -7.816341876983643
    9. 'prob' → logprob: -8.066341400146484
    10. 'pro' → logprob: -8.066341400146484

Token 558: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -3.690834273584187e-05
    2. '       ' → logprob: -10.75003719329834
    3. 'ment' → logprob: -11.37503719329834
    4. 'mented' → logprob: -12.87503719329834
    5. 'segments' → logprob: -15.25003719329834
    6. '   ' → logprob: -15.37503719329834
    7. 'ements' → logprob: -15.50003719329834
    8. 'gments' → logprob: -15.87503719329834
    9. '#' → logprob: -16.125036239624023
    10. 'm' → logprob: -16.250036239624023

Token 559: ' tri' (ID: 12665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6129534244537354
    2. '_sorted' → logprob: -1.1129534244537354
    3. '       ' → logprob: -2.2379534244537354
    4. 'sorted' → logprob: -4.237953186035156
    5. '=' → logprob: -4.987953186035156
    6. ' sorted' → logprob: -7.362953186035156
    7. 's' → logprob: -7.737953186035156
    8. '.sort' → logprob: -8.862953186035156
    9. '_sort' → logprob: -8.862953186035156
    10. 'sort' → logprob: -8.987953186035156

Token 560: 'és' (ID: 1756)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.0223997831344604
    2. 'g' → logprob: -1.7723997831344604
    3. '=' → logprob: -2.14739990234375
    4. '_sorted' → logprob: -2.14739990234375
    5. ' =' → logprob: -2.89739990234375
    6. 'rt' → logprob: -3.14739990234375
    7. 'orted' → logprob: -3.77239990234375
    8. 'ég' → logprob: -4.02239990234375
    9. 'segments' → logprob: -4.27239990234375
    10. '   ' → logprob: -4.39739990234375

Token 561: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2072807252407074
    2. ' =' → logprob: -1.9572807550430298
    3. '       ' → logprob: -3.4572806358337402
    4. 'by' → logprob: -5.45728063583374
    5. 'sorted' → logprob: -5.70728063583374
    6. 'segments' → logprob: -5.70728063583374
    7. '_sorted' → logprob: -7.20728063583374
    8. '_by' → logprob: -7.20728063583374
    9. ' by' → logprob: -7.33228063583374
    10. '_segments' → logprob: -7.33228063583374

Token 562: ' prob' (ID: 4921)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6694276928901672
    2. 'lambda' → logprob: -1.4194276332855225
    3. 'attack' → logprob: -1.6694276332855225
    4. '-' → logprob: -3.9194276332855225
    5. ' lambda' → logprob: -4.544427871704102
    6. ' segment' → logprob: -4.919427871704102
    7. ' attack' → logprob: -5.669427871704102
    8. '=lambda' → logprob: -6.044427871704102
    9. '-s' → logprob: -6.169427871704102
    10. ' -' → logprob: -6.169427871704102

Token 563: 'abilité' (ID: 49097)
  Prédit: 'ability'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.00232712528668344
    2. 'ility' → logprob: -7.002326965332031
    3. '_probability' → logprob: -7.377326965332031
    4. 'abil' → logprob: -8.377326965332031
    5. 'ality' → logprob: -8.377326965332031
    6. 'abilité' → logprob: -9.002326965332031
    7. 'ab' → logprob: -10.252326965332031
    8. 'ob' → logprob: -10.252326965332031
    9. ',' → logprob: -10.627326965332031
    10. '_' → logprob: -11.127326965332031

Token 564: ' décro' (ID: 176854)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.681932270526886
    2. ',' → logprob: -1.8069322109222412
    3. 's' → logprob: -2.306932210922241
    4. ' =' → logprob: -3.181932210922241
    5. '=' → logprob: -3.306932210922241
    6. '_probability' → logprob: -3.806932210922241
    7. '_segments' → logprob: -4.18193244934082
    8. 'segment' → logprob: -4.30693244934082
    9. '.' → logprob: -4.43193244934082
    10. '   ' → logprob: -4.43193244934082

Token 565: 'issante' (ID: 80061)
  Prédit: 'ability'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.6750320792198181
    2. 'abilité' → logprob: -0.8000320792198181
    3. 'ité' → logprob: -4.550032138824463
    4. 'ab' → logprob: -5.175032138824463
    5. 'ility' → logprob: -5.300032138824463
    6. '=' → logprob: -5.925032138824463
    7. 'abil' → logprob: -6.050032138824463
    8. 'ution' → logprob: -6.050032138824463
    9. 'sort' → logprob: -6.300032138824463
    10. 'ity' → logprob: -6.425032138824463

Token 566: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8924107551574707
    2. ' =' → logprob: -1.3924107551574707
    3. 'segments' → logprob: -2.5174107551574707
    4. 'sorted' → logprob: -2.6424107551574707
    5. ',' → logprob: -2.7674107551574707
    6. '=' → logprob: -2.8924107551574707
    7. '_sorted' → logprob: -3.2674107551574707
    8. '_segments' → logprob: -4.267410755157471
    9. '(sorted' → logprob: -4.517410755157471
    10. '.' → logprob: -6.142410755157471

Token 567: 'car' (ID: 6830)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.510861873626709
    2. 'key' → logprob: -1.635861873626709
    3. 'sorted' → logprob: -2.635861873626709
    4. 'segments' → logprob: -3.010861873626709
    5. '       ' → logprob: -3.385861873626709
    6. ',' → logprob: -4.260861873626709
    7. ' key' → logprob: -4.260861873626709
    8. 'reverse' → logprob: -4.635861873626709
    9. ' segment' → logprob: -5.135861873626709
    10. '=' → logprob: -6.760861873626709

Token 568: ' plus' (ID: 2932)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.10265089571475983
    2. ' segment' → logprob: -3.3526508808135986
    3. 'reverse' → logprob: -4.227651119232178
    4. 's' → logprob: -4.477651119232178
    5. 'lambda' → logprob: -4.727651119232178
    6. 'key' → logprob: -5.477651119232178
    7. '       ' → logprob: -5.602651119232178
    8. 'p' → logprob: -5.602651119232178
    9. 'attack' → logprob: -5.727651119232178
    10. 'x' → logprob: -6.352651119232178

Token 569: ' P' (ID: 398)
  Prédit: ' élevée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' élevée' → logprob: -1.5749585628509521
    2. ' rentable' → logprob: -1.8249585628509521
    3. 'atta' → logprob: -2.074958562850952
    4. ' d' → logprob: -2.949958562850952
    5. ' profitable' → logprob: -3.199958562850952
    6. ' à' → logprob: -3.199958562850952
    7. ' on' → logprob: -3.449958562850952
    8. 'attaque' → logprob: -3.449958562850952
    9. ' importante' → logprob: -3.574958562850952
    10. 'import' → logprob: -3.699958562850952

Token 570: '_i' (ID: 10853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2182044982910156
    2. '       ' → logprob: -2.7182044982910156
    3. ' =' → logprob: -2.8432044982910156
    4. 'rob' → logprob: -2.8432044982910156
    5. 'attaque' → logprob: -3.0932044982910156
    6. '   ' → logprob: -3.3432044982910156
    7. 'd' → logprob: -3.3432044982910156
    8. ')' → logprob: -3.3432044982910156
    9. '_attack' → logprob: -3.4682044982910156
    10. 'attack' → logprob: -3.4682044982910156

Token 571: ' élevé' (ID: 95488)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1201251745224
    2. ' /' → logprob: -1.1201251745224
    3. '/' → logprob: -2.3701252937316895
    4. ')' → logprob: -3.6201252937316895
    5. '/pro' → logprob: -3.6201252937316895
    6. 'attack' → logprob: -3.8701252937316895
    7. '   ' → logprob: -3.8701252937316895
    8. '),' → logprob: -4.2451252937316895
    9. '=' → logprob: -4.4951252937316895
    10. '       ' → logprob: -4.6201252937316895

Token 572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03664766252040863
    2. ')' → logprob: -4.536647796630859
    3. '),' → logprob: -4.786647796630859
    4. '       ' → logprob: -5.411647796630859
    5. ' ,' → logprob: -6.161647796630859
    6. '=' → logprob: -6.161647796630859
    7. '   ' → logprob: -6.411647796630859
    8. '.' → logprob: -6.536647796630859
    9. ' =' → logprob: -7.786647796630859
    10. '           ' → logprob: -7.911647796630859

Token 573: ' mieux' (ID: 26345)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.39094921946525574
    2. ' plus' → logprob: -1.2659492492675781
    3. 'segments' → logprob: -4.140949249267578
    4. 'segment' → logprob: -5.140949249267578
    5. ' meilleure' → logprob: -6.140949249267578
    6. ' segment' → logprob: -6.265949249267578
    7. 'me' → logprob: -6.390949249267578
    8. '#' → logprob: -6.515949249267578
    9. ' meilleur' → logprob: -6.515949249267578
    10. ' mieux' → logprob: -6.640949249267578

Token 574: ' vaut' (ID: 83004)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17222860455513
    2. '),' → logprob: -3.0472285747528076
    3. ' à' → logprob: -3.5472285747528076
    4. ' )' → logprob: -4.297228813171387
    5. 'à' → logprob: -4.422228813171387
    6. ',' → logprob: -4.422228813171387
    7. ' de' → logprob: -5.172228813171387
    8. 'protect' → logprob: -5.297228813171387
    9. 'de' → logprob: -5.672228813171387
    10. ' to' → logprob: -5.672228813171387

Token 575: ' protéger' (ID: 79796)
  Prédit: 'protect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'protect' → logprob: -0.811491072177887
    2. 'pro' → logprob: -1.5614910125732422
    3. 'invest' → logprob: -1.8114910125732422
    4. ' protéger' → logprob: -2.436491012573242
    5. ' investir' → logprob: -3.311491012573242
    6. 'prote' → logprob: -4.561491012573242
    7. 'segment' → logprob: -4.811491012573242
    8. ' proteger' → logprob: -4.811491012573242
    9. ' protect' → logprob: -5.311491012573242
    10. '_pro' → logprob: -6.061491012573242

Token 576: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43255043029785156
    2. ')' → logprob: -1.4325504302978516
    3. 'segment' → logprob: -3.3075504302978516
    4. 'segments' → logprob: -4.182550430297852
    5. '.' → logprob: -4.557550430297852
    6. '_segments' → logprob: -4.807550430297852
    7. ' )' → logprob: -5.307550430297852
    8. ' ,' → logprob: -5.432550430297852
    9. ' segments' → logprob: -5.682550430297852
    10. '),' → logprob: -5.807550430297852

Token 577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016428573057055473
    2. 'segments' → logprob: -4.266428470611572
    3. 'sorted' → logprob: -6.266428470611572
    4. ',' → logprob: -8.76642894744873
    5. ' sorted' → logprob: -10.01642894744873
    6. ' segments' → logprob: -10.26642894744873
    7. '(sorted' → logprob: -10.39142894744873
    8. '_sorted' → logprob: -11.01642894744873
    9. ')' → logprob: -11.51642894744873
    10. 'sort' → logprob: -11.51642894744873

Token 578: ' sorted' (ID: 20099)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.16939133405685425
    2. 'sorted' (adapté à ' sorted') → logprob: -2.294391393661499
    3. '       ' → logprob: -2.919391393661499
    4. ' sorted' → logprob: -7.91939115524292
    5. ' segments' → logprob: -8.044391632080078
    6. 'seg' → logprob: -8.794391632080078
    7. 'sort' → logprob: -9.794391632080078
    8. 'segment' → logprob: -10.544391632080078
    9. 'remaining' → logprob: -10.919391632080078
    10. '   ' → logprob: -10.919391632080078

Token 579: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -4.1318875446449965e-05
    2. 'segments' → logprob: -10.500041007995605
    3. '=' → logprob: -12.500041007995605
    4. ' =' → logprob: -12.500041007995605
    5. 's' → logprob: -13.125041007995605
    6. 'Segments' → logprob: -13.625041007995605
    7. '_sorted' → logprob: -14.250041007995605
    8. '_segment' → logprob: -14.500041007995605
    9. '_' → logprob: -15.125041007995605
    10. '_seg' → logprob: -15.250041007995605

Token 580: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519329786300659
    2. '=' → logprob: -1.501932978630066
    3. 'sorted' → logprob: -13.751933097839355
    4. '   ' → logprob: -13.751933097839355
    5. '_sorted' → logprob: -14.626933097839355
    6. '=self' → logprob: -15.251933097839355
    7. '(sorted' → logprob: -15.251933097839355
    8. 's' → logprob: -16.00193214416504
    9. '       ' → logprob: -16.00193214416504
    10. ')' → logprob: -16.50193214416504

Token 581: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00016229959146585315
    2. ' sorted' → logprob: -8.750162124633789
    3. '   ' → logprob: -12.500162124633789
    4. '(sorted' → logprob: -17.87516212463379
    5. '       ' → logprob: -18.00016212463379
    6. '           ' → logprob: -20.75016212463379
    7. '.sorted' → logprob: -20.75016212463379
    8. 'list' → logprob: -22.50016212463379
    9. '  ' → logprob: -22.50016212463379
    10. 'Sorted' → logprob: -22.75016212463379

Token 582: '(dataset' (ID: 67333)
  Prédit: '(dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dataset' → logprob: -9.984787902794778e-05
    2. '(' → logprob: -9.500100135803223
    3. '(
' → logprob: -10.625100135803223
    4. '(self' → logprob: -14.875100135803223
    5. 'dataset' → logprob: -15.375100135803223
    6. '((' → logprob: -18.000099182128906
    7. '(

' → logprob: -19.000099182128906
    8. '(database' → logprob: -19.500099182128906
    9. ' dataset' → logprob: -20.750099182128906
    10. '(
' → logprob: -20.875099182128906

Token 583: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -1.0683535037969705e-05
    2. '.s' → logprob: -12.12501049041748
    3. ' .' → logprob: -13.37501049041748
    4. '(self' → logprob: -13.62501049041748
    5. '.' → logprob: -14.25001049041748
    6. '.segment' → logprob: -14.50001049041748
    7. '(' → logprob: -14.87501049041748
    8. '.seg' → logprob: -15.12501049041748
    9. '(se' → logprob: -15.25001049041748
    10. '(.' → logprob: -16.250011444091797

Token 584: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -0.0018595107831060886
    2. 'g' → logprob: -6.876859664916992
    3. '.se' → logprob: -7.376859664916992
    4. 'ments' → logprob: -9.376859664916992
    5. 'segments' → logprob: -9.626859664916992
    6. 'gment' → logprob: -11.001859664916992
    7. 'nts' → logprob: -11.626859664916992
    8. 'gements' → logprob: -11.626859664916992
    9. '.g' → logprob: -12.501859664916992
    10. 'ts' → logprob: -12.501859664916992

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6047699318733066e-05
    2. ',key' → logprob: -11.250016212463379
    3. 'key' → logprob: -13.000016212463379
    4. ' ,' → logprob: -14.750016212463379
    5. '   ' → logprob: -15.500016212463379
    6. ',
' → logprob: -16.000015258789062
    7. 'reverse' → logprob: -18.250015258789062
    8. '(),' → logprob: -18.375015258789062
    9. ' key' → logprob: -19.125015258789062
    10. '       ' → logprob: -19.250015258789062

Token 586: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.00015920029545668513
    2. ' key' → logprob: -8.75015926361084
    3. 'reverse' → logprob: -14.25015926361084
    4. '   ' → logprob: -17.000158309936523
    5. '	key' → logprob: -17.875158309936523
    6. '       ' → logprob: -19.125158309936523
    7. '(key' → logprob: -19.750158309936523
    8. ',key' → logprob: -21.125158309936523
    9. '           ' → logprob: -21.500158309936523
    10. '
' → logprob: -22.000158309936523

Token 587: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -6.2729995988775045e-06
    2. '=' → logprob: -12.000006675720215
    3. 'lambda' → logprob: -17.0000057220459
    4. '=_' → logprob: -19.6250057220459
    5. '(lambda' → logprob: -20.1250057220459
    6. '=\' → logprob: -20.8750057220459
    7. ' lambda' → logprob: -22.1250057220459
    8. '=
' → logprob: -22.2500057220459
    9. '_lambda' → logprob: -22.6250057220459
    10. ' =' → logprob: -23.6250057220459

Token 588: ' s' (ID: 265)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.5408076643943787
    2. 'segment' → logprob: -1.2908077239990234
    3. 's' → logprob: -2.0408077239990234
    4. ' segment' → logprob: -5.165807723999023
    5. ' seg' → logprob: -5.665807723999023
    6. ' s' → logprob: -6.165807723999023
    7. 'x' → logprob: -6.540807723999023
    8. ' x' → logprob: -10.290807723999023
    9. '(seg' → logprob: -14.415807723999023
    10. 'sg' → logprob: -14.540807723999023

Token 589: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018233058974146843
    2. 's' → logprob: -4.018232822418213
    3. ' :' → logprob: -10.018233299255371
    4. ' s' → logprob: -10.393233299255371
    5. ':s' → logprob: -11.893233299255371
    6. ':
' → logprob: -15.018233299255371
    7. '.s' → logprob: -15.518233299255371
    8. 't' → logprob: -16.643232345581055
    9. 'e' → logprob: -16.893232345581055
    10. '.' → logprob: -16.893232345581055

Token 590: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005148723721504211
    2. '-s' → logprob: -5.380148887634277
    3. ' s' → logprob: -8.005148887634277
    4. '-' → logprob: -8.630148887634277
    5. ' -' → logprob: -11.130148887634277
    6. '(-' → logprob: -14.755148887634277
    7. '	s' → logprob: -15.130148887634277
    8. '   ' → logprob: -15.630148887634277
    9. '_s' → logprob: -16.25514793395996
    10. '(s' → logprob: -16.25514793395996

Token 591: '.attack' (ID: 117247)
  Prédit: '.attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.attack' → logprob: -0.01401893887668848
    2. '.' → logprob: -4.389019012451172
    3. 'attack' → logprob: -7.264019012451172
    4. ':' → logprob: -7.514019012451172
    5. '.s' → logprob: -8.639019012451172
    6. '-' → logprob: -10.264019012451172
    7. '.att' → logprob: -10.889019012451172
    8. '.p' → logprob: -12.014019012451172
    9. '.pro' → logprob: -12.139019012451172
    10. ',' → logprob: -12.389019012451172

Token 592: '_probability' (ID: 182299)
  Prédit: '_probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_probability' → logprob: 0.0
    2. '_prob' → logprob: -18.625
    3. '_' → logprob: -20.625
    4. '_pro' → logprob: -20.75
    5. '_percentage' → logprob: -21.125
    6. 'Probability' → logprob: -21.25
    7. ' probability' → logprob: -21.375
    8. '_frequency' → logprob: -21.625
    9. 'prob' → logprob: -22.125
    10. '_property' → logprob: -22.875

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. ' ,' → logprob: -10.62502670288086
    3. '),' → logprob: -13.75002670288086
    4. 'reverse' → logprob: -14.50002670288086
    5. ')' → logprob: -15.00002670288086
    6. '[::-' → logprob: -15.12502670288086
    7. ',
' → logprob: -15.75002670288086
    8. ',re' → logprob: -16.75002670288086
    9. '_,' → logprob: -17.37502670288086
    10. '*,' → logprob: -18.00002670288086

Token 594: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.0005530327325686812
    2. ' reverse' → logprob: -7.500553131103516
    3. '   ' → logprob: -19.625553131103516
    4. '_reverse' → logprob: -20.625553131103516
    5. '.reverse' → logprob: -20.625553131103516
    6. '(reverse' → logprob: -20.875553131103516
    7. 'Reverse' → logprob: -21.625553131103516
    8. '           ' → logprob: -22.375553131103516
    9. '    ' → logprob: -22.750553131103516
    10. '       ' → logprob: -22.750553131103516

Token 595: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.00021688752167392522
    2. '=' → logprob: -8.500216484069824
    3. ')' → logprob: -11.375216484069824
    4. '=False' → logprob: -13.875216484069824
    5. '<|end|>' → logprob: -14.625216484069824
    6. ')=' → logprob: -15.500216484069824
    7. ' =' → logprob: -16.12521743774414
    8. '(True' → logprob: -16.75021743774414
    9. '=
' → logprob: -17.62521743774414
    10. '   ' → logprob: -18.37521743774414

Token 596: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.339776832144707e-05
    2. ')
' → logprob: -9.500082969665527
    3. '       ' → logprob: -12.250082969665527
    4. ' )' → logprob: -12.750082969665527
    5. ')

' → logprob: -14.875082969665527
    6. ',' → logprob: -15.125082969665527
    7. ')
' → logprob: -16.500083923339844
    8. '   ' → logprob: -16.625083923339844
    9. '),' → logprob: -18.000083923339844
    10. ')`' → logprob: -18.125083923339844

Token 597: '       ' (ID: 309)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.7617616057395935
    2. '       ' → logprob: -0.8867616057395935
    3. 'total' → logprob: -3.1367616653442383
    4. 'for' → logprob: -3.1367616653442383
    5. 'result' → logprob: -4.011761665344238
    6. 'attack' → logprob: -5.136761665344238
    7. 'protected' → logprob: -6.136761665344238
    8. 'remain' → logprob: -6.761761665344238
    9. 'budget' → logprob: -6.886761665344238
    10. '   ' → logprob: -7.011761665344238

Token 598: ' total' (ID: 3609)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.35066890716552734
    2. 'for' → logprob: -1.9756689071655273
    3. 'total' (adapté à ' total') → logprob: -2.6006689071655273
    4. 'expected' → logprob: -2.7256689071655273
    5. 'attack' → logprob: -4.350668907165527
    6. 'result' → logprob: -6.350668907165527
    7. 'protected' → logprob: -6.600668907165527
    8. 'pro' → logprob: -7.225668907165527
    9. 'cost' → logprob: -9.225668907165527
    10. 'spent' → logprob: -9.350668907165527

Token 599: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -0.479489266872406
    2. '_attack' → logprob: -0.979489266872406
    3. '_un' → logprob: -6.229489326477051
    4. '_remaining' → logprob: -6.979489326477051
    5. '_cost' → logprob: -7.229489326477051
    6. '_distance' → logprob: -7.229489326477051
    7. '_expect' → logprob: -8.22948932647705
    8. ' =' → logprob: -8.22948932647705
    9. '_pro' → logprob: -8.72948932647705
    10. '_att' → logprob: -10.10448932647705

Token 600: '_attack' (ID: 118945)
  Prédit: '_attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attack' → logprob: -0.00015455135144293308
    2. ' =' → logprob: -9.250154495239258
    3. '=' → logprob: -10.125154495239258
    4. 'attack' → logprob: -11.750154495239258
    5. '_' → logprob: -12.125154495239258
    6. '_att' → logprob: -13.500154495239258
    7. '_cost' → logprob: -14.000154495239258
    8. '_expected' → logprob: -14.125154495239258
    9. '_loss' → logprob: -14.250154495239258
    10. '_damage' → logprob: -14.625154495239258

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193077325820923
    2. ' =' → logprob: -1.5019307136535645
    3. ':' → logprob: -13.501931190490723
    4. '   ' → logprob: -16.001930236816406
    5. '=float' → logprob: -16.376930236816406
    6. '       ' → logprob: -17.001930236816406
    7. ' ' → logprob: -17.501930236816406
    8. ')' → logprob: -17.751930236816406
    9. ',' → logprob: -18.376930236816406
    10. 's' → logprob: -18.876930236816406

Token 602: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6639680862426758
    2. 'dataset' → logprob: -1.0389680862426758
    3. 'sum' → logprob: -2.038968086242676
    4. ' sum' → logprob: -8.038968086242676
    5. ' dataset' → logprob: -8.038968086242676
    6. '   ' → logprob: -8.413968086242676
    7. ' ' → logprob: -8.663968086242676
    8. 'sorted' → logprob: -10.163968086242676
    9. '       ' → logprob: -10.413968086242676
    10. '(dataset' → logprob: -11.288968086242676

Token 603: '(s' (ID: 1858)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.1604205071926117
    2. 's' → logprob: -2.2854204177856445
    3. '(segment' → logprob: -3.4104204177856445
    4. 'seg' → logprob: -4.7854204177856445
    5. '(s' → logprob: -5.4104204177856445
    6. '(seg' → logprob: -7.5354204177856445
    7. '(' → logprob: -10.535420417785645
    8. ' segment' → logprob: -10.660420417785645
    9. '((' → logprob: -10.785420417785645
    10. '(
' → logprob: -11.285420417785645

Token 604: '.max' (ID: 11883)
  Prédit: '.distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.008053015917539597
    2. '.segment' → logprob: -5.133052825927734
    3. '.max' → logprob: -6.258052825927734
    4. 'istance' → logprob: -9.258052825927734
    5. '.s' → logprob: -10.133052825927734
    6. 'imal' → logprob: -11.008052825927734
    7. '.attack' → logprob: -11.133052825927734
    8. '.dist' → logprob: -11.508052825927734
    9. 'distance' → logprob: -11.633052825927734
    10. '.expected' → logprob: -12.383052825927734

Token 605: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.017545247450470924
    2. 'al' → logprob: -4.142545223236084
    3. '_expected' → logprob: -6.892545223236084
    4. 'expected' → logprob: -8.267545700073242
    5. 'ax' → logprob: -9.642545700073242
    6. 'inal' → logprob: -9.767545700073242
    7. 'mal' → logprob: -10.017545700073242
    8. 'ial' → logprob: -10.767545700073242
    9. 'ected' → logprob: -11.517545700073242
    10. 'onal' → logprob: -11.892545700073242

Token 606: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -3.03521392197581e-05
    2. '_cost' → logprob: -10.750030517578125
    3. 'expected' → logprob: -11.750030517578125
    4. 'Expected' → logprob: -13.875030517578125
    5. 'cost' → logprob: -17.500030517578125
    6. '_' → logprob: -17.625030517578125
    7. '_possible' → logprob: -18.125030517578125
    8. '_attack' → logprob: -18.375030517578125
    9. '_required' → logprob: -18.500030517578125
    10. '_actual' → logprob: -18.875030517578125

Token 607: '_attack' (ID: 118945)
  Prédit: '_attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attack' → logprob: -2.463036435074173e-05
    2. '_expected' → logprob: -10.875024795532227
    3. 'attack' → logprob: -13.125024795532227
    4. '_cost' → logprob: -13.250024795532227
    5. '_att' → logprob: -14.125024795532227
    6. '_' → logprob: -14.625024795532227
    7. 'Attack' → logprob: -15.750024795532227
    8. '_ATTACK' → logprob: -15.875024795532227
    9. '```' → logprob: -16.000024795532227
    10. ' attack' → logprob: -16.875024795532227

Token 608: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005406403914093971
    2. '())' → logprob: -5.255406379699707
    3. ')' → logprob: -8.880406379699707
    4. ' ()' → logprob: -10.630406379699707
    5. '()
' → logprob: -12.880406379699707
    6. '(),' → logprob: -13.505406379699707
    7. ' ())' → logprob: -13.505406379699707
    8. '()]' → logprob: -14.005406379699707
    9. '()*' → logprob: -14.130406379699707
    10. '(' → logprob: -15.005406379699707

Token 609: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04990794137120247
    2. '())' → logprob: -3.049907922744751
    3. ')' → logprob: -6.67490816116333
    4. '()
' → logprob: -10.924907684326172
    5. ' ()' → logprob: -11.549907684326172
    6. '(),' → logprob: -11.799907684326172
    7. ' ())' → logprob: -11.799907684326172
    8. 'for' → logprob: -12.049907684326172
    9. '())
' → logprob: -12.799907684326172
    10. ' for' → logprob: -13.049907684326172

Token 610: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2392076998949051
    2. 's' → logprob: -1.6142077445983887
    3. ' sorted' → logprob: -4.989207744598389
    4. 'sorted' → logprob: -4.989207744598389
    5. '	s' → logprob: -10.86420726776123
    6. 'segment' → logprob: -11.36420726776123
    7. 'seg' → logprob: -11.73920726776123
    8. '_s' → logprob: -11.86420726776123
    9. '(sorted' → logprob: -11.86420726776123
    10. ' ' → logprob: -12.23920726776123

Token 611: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.036593418568372726
    2. 'in' → logprob: -3.786593437194824
    3. 's' → logprob: -4.411593437194824
    4. ' s' → logprob: -7.411593437194824
    5. '<|end|>' → logprob: -8.911593437194824
    6. ' ' → logprob: -9.036593437194824
    7. '.' → logprob: -9.661593437194824
    8. 'sorted' → logprob: -9.661593437194824
    9. ')' → logprob: -10.036593437194824
    10. ' ' → logprob: -10.911593437194824

Token 612: ' dataset' (ID: 20830)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.030158178880810738
    2. ' sorted' → logprob: -3.530158281326294
    3. 'dataset' → logprob: -7.905158042907715
    4. ' dataset' → logprob: -10.280158042907715
    5. '(sorted' → logprob: -12.780158042907715
    6. '.sorted' → logprob: -14.780158042907715
    7. 's' → logprob: -14.905158042907715
    8. ' ' → logprob: -15.405158042907715
    9. ')' → logprob: -15.780158042907715
    10. '_sorted' → logprob: -15.780158042907715

Token 613: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -4.0484450437361374e-05
    2. '.' → logprob: -10.750040054321289
    3. '.s' → logprob: -11.375040054321289
    4. ' .' → logprob: -12.875040054321289
    5. 'segments' → logprob: -13.375040054321289
    6. ')' → logprob: -13.875040054321289
    7. '.segment' → logprob: -13.875040054321289
    8. '.seg' → logprob: -14.000040054321289
    9. ').' → logprob: -15.000040054321289
    10. 'Segments' → logprob: -15.750040054321289

Token 614: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -5.796184723294573e-06
    2. 'g' → logprob: -12.750005722045898
    3. 'gements' → logprob: -13.250005722045898
    4. 'ments' → logprob: -14.125005722045898
    5. 'gment' → logprob: -15.250005722045898
    6. 'segments' → logprob: -17.0000057220459
    7. '```' → logprob: -18.1250057220459
    8. 'gm' → logprob: -18.3750057220459
    9. 'quences' → logprob: -18.3750057220459
    10. 'nts' → logprob: -18.3750057220459

Token 615: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033723425585776567
    2. ' )' → logprob: -5.8783721923828125
    3. ' -' → logprob: -8.253372192382812
    4. '       ' → logprob: -8.503372192382812
    5. '-' → logprob: -9.378372192382812
    6. '        ' → logprob: -11.628372192382812
    7. '),' → logprob: -13.378372192382812
    8. '-)' → logprob: -13.378372192382812
    9. ')-' → logprob: -13.503372192382812
    10. ' ' → logprob: -13.503372192382812

Token 616: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25105565786361694
    2. ' for' → logprob: -2.1260557174682617
    3. '
' → logprob: -2.8760557174682617
    4. 'for' → logprob: -3.2510557174682617
    5. '        
' → logprob: -5.251055717468262
    6. ',' → logprob: -7.751055717468262
    7. 'budget' → logprob: -8.126055717468262
    8. '        ' → logprob: -8.251055717468262
    9. '   ' → logprob: -8.626055717468262
    10. 'remaining' → logprob: -9.251055717468262

Token 617: ' remaining' (ID: 15448)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006284446571953595
    2. 'remaining' (adapté à ' remaining') → logprob: -8.500628471374512
    3. 'protected' → logprob: -8.500628471374512
    4. 'pro' → logprob: -9.000628471374512
    5. 'allocated' → logprob: -10.625628471374512
    6. '   ' → logprob: -11.000628471374512
    7. 'spent' → logprob: -11.250628471374512
    8. 'allocation' → logprob: -11.500628471374512
    9. ' for' → logprob: -11.750628471374512
    10. 'covered' → logprob: -12.375628471374512

Token 618: '_budget' (ID: 184538)
  Prédit: '_budget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_budget' → logprob: -0.00023894020705483854
    2. '_' → logprob: -8.375239372253418
    3. ' =' → logprob: -12.500239372253418
    4. '_b' → logprob: -13.125239372253418
    5. 'budget' → logprob: -14.000239372253418
    6. ' _' → logprob: -14.250239372253418
    7. '_space' → logprob: -15.250239372253418
    8. '=' → logprob: -15.500239372253418
    9. '_amount' → logprob: -15.625239372253418
    10. '_money' → logprob: -16.0002384185791

Token 619: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619683600962162
    2. '=' → logprob: -2.8119683265686035
    3. ' -=' → logprob: -14.811968803405762
    4. ' ' → logprob: -15.311968803405762
    5. ' +=' → logprob: -16.686967849731445
    6. ',' → logprob: -17.936967849731445
    7. '-=' → logprob: -18.436967849731445
    8. '   ' → logprob: -18.561967849731445
    9. '=int' → logprob: -19.061967849731445
    10. ':' → logprob: -19.061967849731445

Token 620: ' budget' (ID: 9946)
  Prédit: 'budget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'budget' → logprob: -0.000432695698691532
    2. ' budget' → logprob: -7.75043249130249
    3. '   ' → logprob: -13.500432968139648
    4. 'float' → logprob: -15.250432968139648
    5. 'b' → logprob: -15.750432968139648
    6. '
' → logprob: -16.50043296813965
    7. '	b' → logprob: -16.75043296813965
    8. 'bud' → logprob: -17.00043296813965
    9. 'dataset' → logprob: -17.50043296813965
    10. '       ' → logprob: -17.75043296813965

Token 621: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.047730907797813416
    2. 'for' → logprob: -4.172730922698975
    3. ' for' → logprob: -4.547730922698975
    4. '       ' → logprob: -4.922730922698975
    5. '        
' → logprob: -5.297730922698975
    6. '<|end|>' → logprob: -6.297730922698975
    7. ' 
' → logprob: -6.422730922698975
    8. '        ' → logprob: -6.547730922698975
    9. '    
' → logprob: -6.922730922698975
    10. '
' → logprob: -7.297730922698975

Token 622: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04739717021584511
    2. ' for' → logprob: -3.5473971366882324
    3. '       ' → logprob: -4.047397136688232
    4. 'protected' → logprob: -11.92239761352539
    5. '        
' → logprob: -12.17239761352539
    6. '
' → logprob: -12.29739761352539
    7. '   ' → logprob: -12.79739761352539
    8. '	for' → logprob: -13.79739761352539
    9. '.' → logprob: -14.17239761352539
    10. ',' → logprob: -14.17239761352539

Token 623: ' protected' (ID: 4348)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.3199920178740285e-05
    2. 'protected' (adapté à ' protected') → logprob: -11.375022888183594
    3. 'expected' → logprob: -12.000022888183594
    4. ' for' → logprob: -13.500022888183594
    5. 'pro' → logprob: -13.500022888183594
    6. 'result' → logprob: -14.250022888183594
    7. '   ' → logprob: -14.500022888183594
    8. 'attack' → logprob: -14.500022888183594
    9. 're' → logprob: -15.000022888183594
    10. 'current' → logprob: -15.250022888183594

Token 624: '_distance' (ID: 45537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.682573676109314
    2. '_distance' → logprob: -1.557573676109314
    3. '_amount' → logprob: -2.3075737953186035
    4. '_segments' → logprob: -2.6825737953186035
    5. ' =' → logprob: -2.8075737953186035
    6. '_fraction' → logprob: -3.4325737953186035
    7. '=' → logprob: -4.5575737953186035
    8. '_budget' → logprob: -5.5575737953186035
    9. 'ed' → logprob: -5.6825737953186035
    10. '_length' → logprob: -6.5575737953186035

Token 625: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740816056728363
    2. ' =' → logprob: -0.9740816354751587
    3. ' ' → logprob: -13.474081993103027
    4. ':' → logprob: -13.599081993103027
    5. 's' → logprob: -13.599081993103027
    6. '_' → logprob: -15.474081993103027
    7. ',' → logprob: -15.474081993103027
    8. ' +=' → logprob: -16.84908103942871
    9. '  ' → logprob: -17.47408103942871
    10. '   ' → logprob: -17.59908103942871

Token 626: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.875335693359375
    4. '{}' → logprob: -18.125335693359375
    5. '{' → logprob: -18.625335693359375
    6. ' ' → logprob: -18.625335693359375
    7. '  ' → logprob: -19.125335693359375
    8. '{}
' → logprob: -20.000335693359375
    9. '[' → logprob: -20.625335693359375
    10. '۰' → logprob: -20.750335693359375

Token 627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. '{}' → logprob: -12.500004768371582
    3. '{' → logprob: -13.875004768371582
    4. ' ' → logprob: -15.000004768371582
    5. 'dict' → logprob: -17.0000057220459
    6. '[' → logprob: -17.8750057220459
    7. '{}
' → logprob: -18.3750057220459
    8. '   ' → logprob: -19.6250057220459
    9. 'default' → logprob: -20.1250057220459
    10. 'float' → logprob: -20.1250057220459

Token 628: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005459286272525787
    2. '       ' → logprob: -6.505459308624268
    3. '.' → logprob: -7.005459308624268
    4. '<|end|>' → logprob: -7.005459308624268
    5. '        
' → logprob: -7.755459308624268
    6. ' 
' → logprob: -7.755459308624268
    7. 'for' → logprob: -8.00545883178711
    8. '
' → logprob: -8.38045883178711
    9. ' for' → logprob: -8.63045883178711
    10. '        ' → logprob: -9.25545883178711

Token 629: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8306862711906433
    2. '
' → logprob: -0.9556862711906433
    3. 'for' → logprob: -2.205686330795288
    4. ' for' → logprob: -3.330686330795288
    5. '        
' → logprob: -4.705686092376709
    6. '<|end|>' → logprob: -5.080686092376709
    7. '   ' → logprob: -5.330686092376709
    8. ' ' → logprob: -5.705686092376709
    9. '.' → logprob: -5.830686092376709
    10. ' 
' → logprob: -6.330686092376709

Token 630: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.2603901015827432e-05
    2. ' for' → logprob: -10.750022888183594
    3. '       ' → logprob: -13.750022888183594
    4. '   ' → logprob: -17.000022888183594
    5. 'result' → logprob: -18.000022888183594
    6. 'protected' → logprob: -18.625022888183594
    7. '	for' → logprob: -19.000022888183594
    8. 'f' → logprob: -20.000022888183594
    9. '
' → logprob: -20.000022888183594
    10. 'float' → logprob: -20.750022888183594

Token 631: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.22883914411067963
    2. ' segment' → logprob: -1.6038391590118408
    3. 'seg' → logprob: -6.228838920593262
    4. 's' → logprob: -6.728838920593262
    5. ' s' → logprob: -8.728838920593262
    6. ' seg' → logprob: -9.353838920593262
    7. 'Segment' → logprob: -13.978838920593262
    8. '_segment' → logprob: -14.228838920593262
    9. '(segment' → logprob: -14.228838920593262
    10. '   ' → logprob: -14.603838920593262

Token 632: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008664678782224655
    2. 'in' → logprob: -4.758664608001709
    3. 's' → logprob: -10.008665084838867
    4. ',' → logprob: -13.883665084838867
    5. '   ' → logprob: -14.133665084838867
    6. ' ' → logprob: -14.383665084838867
    7. '_in' → logprob: -14.383665084838867
    8. '  ' → logprob: -14.508665084838867
    9. ':' → logprob: -14.508665084838867
    10. 'import' → logprob: -15.008665084838867

Token 633: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.014164448715746403
    2. ' sorted' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.264164924621582
    4. '(sorted' → logprob: -15.639164924621582
    5. '.sorted' → logprob: -16.139163970947266
    6. ' ' → logprob: -17.639163970947266
    7. '
' → logprob: -18.264163970947266
    8. '_sorted' → logprob: -18.389163970947266
    9. '       ' → logprob: -18.889163970947266
    10. 'Sorted' → logprob: -19.514163970947266

Token 634: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -5.319370302458992e-06
    2. '_sorted' → logprob: -12.750005722045898
    3. '(sorted' → logprob: -14.000005722045898
    4. 'sorted' → logprob: -14.375005722045898
    5. 'segments' → logprob: -14.750005722045898
    6. '_segment' → logprob: -16.0000057220459
    7. '```' → logprob: -16.1250057220459
    8. 's' → logprob: -16.6250057220459
    9. 'Segments' → logprob: -17.0000057220459
    10. '_sections' → logprob: -17.1250057220459

Token 635: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033536863047629595
    2. ':
' → logprob: -5.753353595733643
    3. ',' → logprob: -8.8783540725708
    4. '       ' → logprob: -11.7533540725708
    5. '):' → logprob: -11.7533540725708
    6. ' :' → logprob: -12.1283540725708
    7. '<|end|>' → logprob: -12.5033540725708
    8. '.' → logprob: -13.2533540725708
    9. '   ' → logprob: -13.5033540725708
    10. '{' → logprob: -13.7533540725708

Token 636: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004497296642512083
    2. '       ' → logprob: -6.004497528076172
    3. ' if' → logprob: -6.754497528076172
    4. '<|end|>' → logprob: -8.379497528076172
    5. ',' → logprob: -8.629497528076172
    6. '   ' → logprob: -8.879497528076172
    7. ':' → logprob: -9.129497528076172
    8. '            
' → logprob: -9.754497528076172
    9. '<|end|>' → logprob: -10.504497528076172
    10. 'if' → logprob: -11.129497528076172

Token 637: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05875340476632118
    2. ' if' → logprob: -3.808753490447998
    3. 'to' → logprob: -4.308753490447998
    4. 'protect' → logprob: -4.433753490447998
    5. 'pro' → logprob: -5.683753490447998
    6. '           ' → logprob: -5.808753490447998
    7. 'alloc' → logprob: -7.058753490447998
    8. 'allocate' → logprob: -7.433753490447998
    9. 'available' → logprob: -7.933753490447998
    10. ' to' → logprob: -8.43375301361084

Token 638: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.3489921987056732
    2. ' remaining' → logprob: -1.2239922285079956
    3. ' segment' → logprob: -8.098992347717285
    4. 'segment' → logprob: -8.473992347717285
    5. '.remaining' → logprob: -10.973992347717285
    6. ' not' → logprob: -12.223992347717285
    7. '   ' → logprob: -12.598992347717285
    8. '_remaining' → logprob: -12.723992347717285
    9. '0' → logprob: -13.348992347717285
    10. 'Remaining' → logprob: -13.723992347717285

Token 639: '_budget' (ID: 184538)
  Prédit: '_budget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_budget' → logprob: -0.00015419373812619597
    2. '_' → logprob: -8.875154495239258
    3. 'Budget' → logprob: -12.750154495239258
    4. '==' → logprob: -13.125154495239258
    5. ' _' → logprob: -13.375154495239258
    6. ' ==' → logprob: -13.500154495239258
    7. '>' → logprob: -13.500154495239258
    8. ' >' → logprob: -14.250154495239258
    9. 'budget' → logprob: -14.500154495239258
    10. '```' → logprob: -14.500154495239258

Token 640: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4755080044269562
    2. ' <=' → logprob: -0.9755079746246338
    3. '==' → logprob: -6.850508213043213
    4. ' ==' → logprob: -7.975508213043213
    5. '>=' → logprob: -10.850507736206055
    6. ' >=' → logprob: -11.850507736206055
    7. '>' → logprob: -15.350507736206055
    8. '   ' → logprob: -15.850507736206055
    9. '=' → logprob: -15.975507736206055
    10. ' ' → logprob: -16.225507736206055

Token 641: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -19.125051498413086
    4. '00' → logprob: -20.875051498413086
    5. ' ' → logprob: -21.000051498413086
    6. '۰' → logprob: -21.375051498413086
    7. '  ' → logprob: -22.375051498413086
    8. '٠' → logprob: -22.625051498413086
    9. ' ' → logprob: -23.250051498413086
    10. '000' → logprob: -23.375051498413086

Token 642: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '00' → logprob: -21.125
    4. '   ' → logprob: -21.75
    5. '000' → logprob: -22.25
    6. '```' → logprob: -23.125
    7. '۰' → logprob: -23.25
    8. '  ' → logprob: -23.875
    9. '٠' → logprob: -24.0
    10. '  ' → logprob: -24.625

Token 643: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4819315969944
    2. ':
' → logprob: -1.2319315671920776
    3. '               ' → logprob: -2.481931686401367
    4. ' or' → logprob: -5.106931686401367
    5. '           ' → logprob: -6.981931686401367
    6. ':
' → logprob: -10.481931686401367
    7. '       ' → logprob: -11.106931686401367
    8. ' :
' → logprob: -11.231931686401367
    9. '   ' → logprob: -11.356931686401367
    10. ' :' → logprob: -11.481931686401367

Token 644: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002117785159498453
    2. '           ' → logprob: -7.37711763381958
    3. ':' → logprob: -7.50211763381958
    4. ' break' → logprob: -7.62711763381958
    5. ':
' → logprob: -7.87711763381958
    6. ' or' → logprob: -11.252118110656738
    7. '                ' → logprob: -11.627118110656738
    8. 'break' → logprob: -11.627118110656738
    9. ' :
' → logprob: -11.877118110656738
    10. '       ' → logprob: -12.127118110656738

Token 645: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.046371400356292725
    2. '               ' → logprob: -3.2963714599609375
    3. ' break' → logprob: -4.7963714599609375
    4. '	break' → logprob: -10.546371459960938
    5. '           ' → logprob: -11.921371459960938
    6. '                   ' → logprob: -13.796371459960938
    7. '   ' → logprob: -14.046371459960938
    8. '_break' → logprob: -14.796371459960938
    9. 'return' → logprob: -14.921371459960938
    10. '                ' → logprob: -16.671371459960938

Token 646: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11740151792764664
    2. ' 
' → logprob: -2.992401599884033
    3. ' ' → logprob: -3.742401599884033
    4. '            
' → logprob: -3.867401599884033
    5. '            ' → logprob: -4.617401599884033
    6. '<|end|>' → logprob: -6.367401599884033
    7. '       ' → logprob: -6.992401599884033
    8. '        ' → logprob: -7.867401599884033
    9. '               ' → logprob: -7.992401599884033
    10. '    ' → logprob: -8.117401123046875

Token 647: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0842055231332779
    2. '
' → logprob: -3.2092056274414062
    3. ' 
' → logprob: -3.7092056274414062
    4. '            
' → logprob: -4.334205627441406
    5. '        
' → logprob: -7.084205627441406
    6. '    
' → logprob: -7.084205627441406
    7. '       ' → logprob: -7.709205627441406
    8. ' if' → logprob: -8.959205627441406
    9. '            ' → logprob: -9.084205627441406
    10. '  
' → logprob: -9.584205627441406

Token 648: ' protect' (ID: 3319)
  Prédit: 'protect'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'protect' (adapté à ' protect') → logprob: -0.4131600558757782
    2. 'to' → logprob: -1.6631600856781006
    3. 'pro' → logprob: -2.4131600856781006
    4. '           ' → logprob: -3.5381600856781006
    5. 'allocate' → logprob: -4.7881598472595215
    6. 'distance' → logprob: -5.0381598472595215
    7. 'take' → logprob: -6.0381598472595215
    8. ' to' → logprob: -6.1631598472595215
    9. 'alloc' → logprob: -6.4131598472595215
    10. ' protect' → logprob: -6.4131598472595215

Token 649: 'able' (ID: 562)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.01902637630701065
    2. '_amount' → logprob: -4.894026279449463
    3. '_distance' → logprob: -5.144026279449463
    4. 'ion' → logprob: -5.894026279449463
    5. 'able' → logprob: -6.519026279449463
    6. '_length' → logprob: -6.894026279449463
    7. '_len' → logprob: -9.144026756286621
    8. '_pro' → logprob: -10.394026756286621
    9. ' =' → logprob: -10.644026756286621
    10. '_dist' → logprob: -10.894026756286621

Token 650: ' =' (ID: 314)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.026717301458120346
    2. ' =' → logprob: -3.776717185974121
    3. '_length' → logprob: -6.276717185974121
    4. '=' → logprob: -7.151717185974121
    5. '_amount' → logprob: -7.776717185974121
    6. '_dist' → logprob: -7.901717185974121
    7. '_' → logprob: -12.026717185974121
    8. 'distance' → logprob: -13.651717185974121
    9. 'Distance' → logprob: -13.651717185974121
    10. '_len' → logprob: -13.776717185974121

Token 651: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.127016082406044
    2. ' min' → logprob: -2.127016067504883
    3. 'segment' → logprob: -9.377016067504883
    4. ' segment' → logprob: -13.002016067504883
    5. '	min' → logprob: -14.752016067504883
    6. 'max' → logprob: -14.752016067504883
    7. '(min' → logprob: -15.752016067504883
    8. '=min' → logprob: -15.877016067504883
    9. '[min' → logprob: -17.252016067504883
    10. '.min' → logprob: -18.377016067504883

Token 652: '(segment' (ID: 144369)
  Prédit: '(segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(segment' → logprob: -0.003223583335056901
    2. '(' → logprob: -5.753223419189453
    3. 'segment' → logprob: -10.003223419189453
    4. 'remaining' → logprob: -15.003223419189453
    5. '(seg' → logprob: -15.128223419189453
    6. ' segment' → logprob: -18.003223419189453
    7. '(
' → logprob: -18.128223419189453
    8. ' (' → logprob: -18.378223419189453
    9. '(section' → logprob: -19.003223419189453
    10. '(region' → logprob: -19.003223419189453

Token 653: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -1.27099974633893e-05
    2. 'distance' → logprob: -12.000012397766113
    3. ' .' → logprob: -12.750012397766113
    4. '.' → logprob: -13.125012397766113
    5. ').' → logprob: -14.250012397766113
    6. '.dist' → logprob: -15.250012397766113
    7. '.quantity' → logprob: -16.12501335144043
    8. '.length' → logprob: -16.37501335144043
    9. '.Distance' → logprob: -16.37501335144043
    10. '.amount' → logprob: -16.50001335144043

Token 654: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024819616228342056
    2. ' ,' → logprob: -6.002481937408447
    3. ' -' → logprob: -12.877482414245605
    4. ')' → logprob: -12.877482414245605
    5. 'remaining' → logprob: -15.252482414245605
    6. ',
' → logprob: -15.627482414245605
    7. '),' → logprob: -15.752482414245605
    8. '-' → logprob: -15.877482414245605
    9. '(),' → logprob: -16.62748146057129
    10. '           ' → logprob: -16.62748146057129

Token 655: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.31326937675476074
    2. ' remaining' → logprob: -1.3132693767547607
    3. '_remaining' → logprob: -12.81326961517334
    4. 'Remaining' → logprob: -12.93826961517334
    5. '.remaining' → logprob: -13.06326961517334
    6. 'remain' → logprob: -15.68826961517334
    7. 'rest' → logprob: -16.188268661499023
    8. '剩' → logprob: -17.188268661499023
    9. 'int' → logprob: -17.938268661499023
    10. '           ' → logprob: -18.063268661499023

Token 656: '_budget' (ID: 184538)
  Prédit: '_budget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_budget' → logprob: -0.00017123986617662013
    2. 'budget' → logprob: -9.250171661376953
    3. 'Budget' → logprob: -9.500171661376953
    4. 'remaining' → logprob: -16.500171661376953
    5. '_remaining' → logprob: -16.875171661376953
    6. '_balance' → logprob: -17.000171661376953
    7. '-budget' → logprob: -17.375171661376953
    8. '预算' → logprob: -17.625171661376953
    9. '_segment' → logprob: -17.625171661376953
    10. '_capacity' → logprob: -18.000171661376953

Token 657: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31346002221107483
    2. ')
' → logprob: -1.3134599924087524
    3. ' )
' → logprob: -9.188460350036621
    4. '           ' → logprob: -9.813460350036621
    5. ' )' → logprob: -10.438460350036621
    6. ')
' → logprob: -11.438460350036621
    7. ')

' → logprob: -14.188460350036621
    8. '               ' → logprob: -15.063460350036621
    9. '),' → logprob: -17.188459396362305
    10. '
' → logprob: -17.313459396362305

Token 658: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003393610240891576
    2. '            
' → logprob: -6.378393650054932
    3. '
' → logprob: -7.753393650054932
    4. 'protected' → logprob: -7.878393650054932
    5. '       ' → logprob: -8.128393173217773
    6. 'remaining' → logprob: -8.503393173217773
    7. ' protected' → logprob: -9.378393173217773
    8. ' remaining' → logprob: -9.753393173217773
    9. '               ' → logprob: -10.003393173217773
    10. '        
' → logprob: -10.253393173217773

Token 659: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.908521831035614
    2. 'remaining' → logprob: -0.908521831035614
    3. 'expected' → logprob: -2.158521890640259
    4. 'protected' → logprob: -2.658521890640259
    5. 'pro' → logprob: -5.90852165222168
    6. 're' → logprob: -5.90852165222168
    7. 'attack' → logprob: -6.78352165222168
    8. 'damage' → logprob: -8.15852165222168
    9. 'partial' → logprob: -8.78352165222168
    10. 'segment' → logprob: -8.78352165222168

Token 660: ' Ré' (ID: 27181)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4803798198699951
    2. 'expected' → logprob: -1.4803798198699951
    3. 'protected' → logprob: -2.605379819869995
    4. 'remaining' → logprob: -3.230379819869995
    5. 're' → logprob: -3.480379819869995
    6. 'attack' → logprob: -5.355380058288574
    7. 'pro' → logprob: -5.980380058288574
    8. 'saved' → logprob: -7.480380058288574
    9. 'partial' → logprob: -8.105380058288574
    10. 'damage' → logprob: -8.105380058288574

Token 661: 'duction' (ID: 23838)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4047023057937622
    2. 'du' → logprob: -2.0297021865844727
    3. 'm' → logprob: -2.7797021865844727
    4. 'mainder' → logprob: -3.5297021865844727
    5. 'st' → logprob: -3.6547021865844727
    6. 'duit' → logprob: -3.6547021865844727
    7. 'server' → logprob: -4.404702186584473
    8. 'duced' → logprob: -4.654702186584473
    9. 'served' → logprob: -4.904702186584473
    10. 'protected' → logprob: -5.154702186584473

Token 662: ' de' (ID: 334)
  Prédit: '_expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -0.3037461042404175
    2. ' =' → logprob: -2.178746223449707
    3. '           ' → logprob: -3.178746223449707
    4. ' de' → logprob: -3.678746223449707
    5. 'expected' → logprob: -3.803746223449707
    6. 'de' → logprob: -4.678746223449707
    7. ' +=' → logprob: -4.678746223449707
    8. '_attack' → logprob: -4.803746223449707
    9. ' du' → logprob: -4.928746223449707
    10. 'du' → logprob: -5.303746223449707

Token 663: ' l' (ID: 305)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1812123954296112
    2. ' total' → logprob: -2.3062124252319336
    3. 'expected' → logprob: -3.5562124252319336
    4. 'l' → logprob: -4.556212425231934
    5. ' expected' → logprob: -5.056212425231934
    6. ' la' → logprob: -5.306212425231934
    7. 'the' → logprob: -5.431212425231934
    8. ' l' → logprob: -5.556212425231934
    9. 'la' → logprob: -5.806212425231934
    10. ' the' → logprob: -6.556212425231934

Token 664: ''' (ID: 6)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.2838466465473175
    2. '_expected' → logprob: -1.5338466167449951
    3. ''' → logprob: -4.783846855163574
    4. 'a' → logprob: -5.033846855163574
    5. 'attack' → logprob: -5.908846855163574
    6. '_' → logprob: -6.158846855163574
    7. ' expected' → logprob: -6.158846855163574
    8. 'total' → logprob: -6.408846855163574
    9. '_attack' → logprob: -6.408846855163574
    10. 'e' → logprob: -6.783846855163574

Token 665: 'attaque' (ID: 153350)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.6228283047676086
    2. 'attaque' → logprob: -0.8728283047676086
    3. 'attack' → logprob: -3.247828245162964
    4. 'att' → logprob: -5.747828483581543
    5. 'atta' → logprob: -6.372828483581543
    6. '(expected' → logprob: -7.747828483581543
    7. ' expected' → logprob: -7.872828483581543
    8. 'expect' → logprob: -7.997828483581543
    9. ' attaque' → logprob: -8.122828483581543
    10. 'at' → logprob: -8.747828483581543

Token 666: ' =' (ID: 314)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3627384901046753
    2. 'expected' → logprob: -1.4877384901046753
    3. '_expected' → logprob: -3.987738609313965
    4. ' expected' → logprob: -4.112738609313965
    5. ' =' → logprob: -4.737738609313965
    6. 'pro' → logprob: -4.987738609313965
    7. '=' → logprob: -5.487738609313965
    8. '_attack' → logprob: -5.737738609313965
    9. 'attack' → logprob: -6.237738609313965
    10. 'att' → logprob: -6.362738609313965

Token 667: ' P' (ID: 398)
  Prédit: ' protect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' protect' → logprob: -0.2034393846988678
    2. 'protect' → logprob: -1.7034393548965454
    3. ' segment' → logprob: -6.453439235687256
    4. 'segment' → logprob: -8.078439712524414
    5. 'pro' → logprob: -9.453439712524414
    6. 'protected' → logprob: -11.078439712524414
    7. ' protected' → logprob: -11.328439712524414
    8. '
' → logprob: -12.328439712524414
    9. 'prot' → logprob: -12.328439712524414
    10. ' protection' → logprob: -12.578439712524414

Token 668: '_i' (ID: 10853)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.2315496951341629
    2. 'ro' → logprob: -1.7315497398376465
    3. '(segment' → logprob: -4.8565497398376465
    4. '_segment' → logprob: -5.1065497398376465
    5. 'rob' → logprob: -5.4815497398376465
    6. ' segment' → logprob: -5.8565497398376465
    7. 'protect' → logprob: -6.8565497398376465
    8. 'ython' → logprob: -7.1065497398376465
    9. 'rote' → logprob: -7.2315497398376465
    10. 'egment' → logprob: -7.7315497398376465

Token 669: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12695194780826569
    2. '*' → logprob: -2.1269519329071045
    3. 's' → logprob: -11.251952171325684
    4. '[' → logprob: -12.751952171325684
    5. '           ' → logprob: -13.376952171325684
    6. 'segment' → logprob: -14.001952171325684
    7. ' ' → logprob: -14.251952171325684
    8. ')' → logprob: -14.376952171325684
    9. '               ' → logprob: -14.751952171325684
    10. ' ' → logprob: -14.751952171325684

Token 670: ' distance' (ID: 9324)
  Prédit: 'protect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'protect' → logprob: -0.07005980610847473
    2. ' protect' → logprob: -2.6950597763061523
    3. 'pro' → logprob: -9.445059776306152
    4. 'protected' → logprob: -10.445059776306152
    5. '```' → logprob: -12.570059776306152
    6. 'prote' → logprob: -12.945059776306152
    7. '
' → logprob: -12.945059776306152
    8. ' protected' → logprob: -13.320059776306152
    9. 'predict' → logprob: -13.820059776306152
    10. 'prot' → logprob: -14.195059776306152

Token 671: ' protég' (ID: 161134)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2897811532020569
    2. '*' → logprob: -1.414781093597412
    3. '           ' → logprob: -5.289781093597412
    4. '_pro' → logprob: -5.914781093597412
    5. '_' → logprob: -9.16478157043457
    6. '            ' → logprob: -9.28978157043457
    7. ')' → logprob: -9.53978157043457
    8. 's' → logprob: -9.53978157043457
    9. 'protected' → logprob: -9.66478157043457
    10. '_segment' → logprob: -9.78978157043457

Token 672: 'ée' (ID: 2894)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.638517439365387
    2. 'ect' → logprob: -1.6385173797607422
    3. 'eg' → logprob: -1.8885173797607422
    4. 'ée' → logprob: -2.638517379760742
    5. 'ection' → logprob: -4.138517379760742
    6. 'ected' → logprob: -4.263517379760742
    7. 'é' → logprob: -4.763517379760742
    8. 'e' → logprob: -4.888517379760742
    9. 'ed' → logprob: -6.263517379760742
    10. 'égé' → logprob: -6.388517379760742

Token 673: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01188291609287262
    2. '*' → logprob: -4.511882781982422
    3. '           ' → logprob: -7.136882781982422
    4. '            
' → logprob: -11.261882781982422
    5. '            ' → logprob: -12.011882781982422
    6. '
' → logprob: -12.511882781982422
    7. '               ' → logprob: -12.886882781982422
    8. ' *
' → logprob: -13.011882781982422
    9. ')' → logprob: -13.011882781982422
    10. ' ' → logprob: -13.386882781982422

Token 674: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024668595287948847
    2. ' *' → logprob: -7.127466678619385
    3. '            
' → logprob: -7.252466678619385
    4. '*' → logprob: -7.502466678619385
    5. ',' → logprob: -9.627467155456543
    6. ')' → logprob: -9.752467155456543
    7. '       ' → logprob: -9.877467155456543
    8. ' 
' → logprob: -10.127467155456543
    9. '<|end|>' → logprob: -10.127467155456543
    10. '
' → logprob: -10.627467155456543

Token 675: ' reduction' (ID: 21441)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2127981185913086
    2. 're' → logprob: -1.7127981185913086
    3. 'remaining' → logprob: -4.837798118591309
    4. 'attack' → logprob: -6.712798118591309
    5. 'expected' → logprob: -7.212798118591309
    6. '           ' → logprob: -7.712798118591309
    7. 'pro' → logprob: -8.337798118591309
    8. '   ' → logprob: -8.462798118591309
    9. 'redu' → logprob: -8.837798118591309
    10. ' total' → logprob: -9.587798118591309

Token 676: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31372949481010437
    2. ' =' → logprob: -1.3137295246124268
    3. '_amount' → logprob: -7.813729286193848
    4. 'amount' → logprob: -11.313729286193848
    5. '_probability' → logprob: -11.813729286193848
    6. '           ' → logprob: -11.938729286193848
    7. '_' → logprob: -12.813729286193848
    8. '   ' → logprob: -12.938729286193848
    9. '+=' → logprob: -13.063729286193848
    10. ' +=' → logprob: -13.063729286193848

Token 677: ' protect' (ID: 3319)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.055434275418519974
    2. 'protect' → logprob: -3.555434226989746
    3. ' segment' → logprob: -3.805434226989746
    4. ' protect' → logprob: -5.805434226989746
    5. 'pro' → logprob: -9.430434226989746
    6. 'protected' → logprob: -12.555434226989746
    7. '(segment' → logprob: -13.180434226989746
    8. 'prot' → logprob: -13.305434226989746
    9. 'Protect' → logprob: -13.805434226989746
    10. '   ' → logprob: -13.930434226989746

Token 678: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.00033677343162707984
    2. 'ed' → logprob: -8.125336647033691
    3. 'ect' → logprob: -10.625336647033691
    4. 'ected' → logprob: -12.125336647033691
    5. 'segment' → logprob: -12.375336647033691
    6. '           ' → logprob: -13.375336647033691
    7. 'ection' → logprob: -14.125336647033691
    8. 'e' → logprob: -14.250336647033691
    9. 'protected' → logprob: -14.500336647033691
    10. 'abl' → logprob: -14.625336647033691

Token 679: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005234713666141033
    2. '*' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.505234718322754
    4. ' ' → logprob: -15.505234718322754
    5. '           ' → logprob: -16.130233764648438
    6. 's' → logprob: -17.130233764648438
    7. '   ' → logprob: -17.630233764648438
    8. '*object' → logprob: -17.630233764648438
    9. '_' → logprob: -17.755233764648438
    10. '=' → logprob: -17.880233764648438

Token 680: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.014163628220558167
    2. ' segment' → logprob: -4.264163494110107
    3. '(segment' → logprob: -16.139163970947266
    4. '.segment' → logprob: -18.014163970947266
    5. '           ' → logprob: -19.014163970947266
    6. '_segment' → logprob: -19.014163970947266
    7. '   ' → logprob: -19.389163970947266
    8. 'Segment' → logprob: -19.889163970947266
    9. ' ' → logprob: -20.264163970947266
    10. ' segmento' → logprob: -20.389163970947266

Token 681: '.attack' (ID: 117247)
  Prédit: '.attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.attack' → logprob: -0.00011391390580683947
    2. '.' → logprob: -9.125113487243652
    3. 'attack' → logprob: -12.875113487243652
    4. ' .' → logprob: -13.500113487243652
    5. '_attack' → logprob: -14.625113487243652
    6. '.att' → logprob: -15.000113487243652
    7. '._' → logprob: -17.12511444091797
    8. ' attack' → logprob: -17.50011444091797
    9. '```' → logprob: -17.87511444091797
    10. '_.' → logprob: -18.12511444091797

Token 682: '_probability' (ID: 182299)
  Prédit: '_probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_probability' → logprob: -1.9361264946837764e-07
    2. '_prob' → logprob: -15.875
    3. 'prob' → logprob: -17.75
    4. '_frequency' → logprob: -18.875
    5. 'Probability' → logprob: -19.75
    6. '_pro' → logprob: -19.875
    7. ' probability' → logprob: -19.875
    8. '_' → logprob: -20.375
    9. '\' → logprob: -20.625
    10. ' _' → logprob: -21.0

Token 683: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10110651701688766
    2. '<|end|>' → logprob: -3.1011064052581787
    3. ')' → logprob: -3.8511064052581787
    4. '       ' → logprob: -4.351106643676758
    5. '
' → logprob: -5.476106643676758
    6. '            
' → logprob: -5.601106643676758
    7. '               ' → logprob: -5.976106643676758
    8. ' 
' → logprob: -6.226106643676758
    9. '<|end|>' → logprob: -7.601106643676758
    10. ' total' → logprob: -7.601106643676758

Token 684: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09097225964069366
    2. 'total' → logprob: -3.8409721851348877
    3. '<|end|>' → logprob: -3.8409721851348877
    4. '       ' → logprob: -4.215972423553467
    5. ' total' → logprob: -4.840972423553467
    6. ')' → logprob: -4.965972423553467
    7. '
' → logprob: -5.590972423553467
    8. '            
' → logprob: -5.715972423553467
    9. ' 
' → logprob: -6.215972423553467
    10. 'remaining' → logprob: -6.715972423553467

Token 685: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.002608237089589238
    2. '           ' → logprob: -6.127608299255371
    3. '       ' → logprob: -8.252608299255371
    4. 'remaining' → logprob: -9.252608299255371
    5. ' total' → logprob: -10.127608299255371
    6. 'protected' → logprob: -11.002608299255371
    7. '
' → logprob: -12.127608299255371
    8. '   ' → logprob: -13.127608299255371
    9. '	total' → logprob: -14.002608299255371
    10. '            
' → logprob: -14.752608299255371

Token 686: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -3.128163257315464e-07
    2. 'expected' → logprob: -15.25
    3. 'Expected' → logprob: -17.5
    4. '_possible' → logprob: -18.25
    5. '_' → logprob: -18.75
    6. '_total' → logprob: -19.5
    7. '	expected' → logprob: -19.75
    8. '_required' → logprob: -19.75
    9. '_requested' → logprob: -20.0
    10. '_allowed' → logprob: -20.125

Token 687: '_attack' (ID: 118945)
  Prédit: '_attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attack' → logprob: -8.65707261255011e-06
    2. 'attack' → logprob: -12.000008583068848
    3. '_expected' → logprob: -13.875008583068848
    4. '_att' → logprob: -14.375008583068848
    5. '_' → logprob: -14.625008583068848
    6. '_cost' → logprob: -15.375008583068848
    7. 'Attack' → logprob: -16.000009536743164
    8. '-' → logprob: -16.250009536743164
    9. '_damage' → logprob: -17.875009536743164
    10. ' attack' → logprob: -17.875009536743164

Token 688: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.20250734686851501
    2. ' -=' → logprob: -1.7025073766708374
    3. '-' → logprob: -6.827507495880127
    4. '=' → logprob: -11.952507019042969
    5. ' -' → logprob: -13.202507019042969
    6. '+=' → logprob: -14.827507019042969
    7. ')' → logprob: -15.077507019042969
    8. '   ' → logprob: -15.827507019042969
    9. '	' → logprob: -15.827507019042969
    10. ')-' → logprob: -15.952507019042969

Token 689: ' reduction' (ID: 21441)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -2.15310683415737e-05
    2. ' reduction' → logprob: -10.750021934509277
    3. 'redu' → logprob: -18.62502098083496
    4. '	re' → logprob: -19.12502098083496
    5. 'Reduction' → logprob: -19.62502098083496
    6. 'reduce' → logprob: -20.25002098083496
    7. '   ' → logprob: -20.50002098083496
    8. 'replacement' → logprob: -20.62502098083496
    9. '(re' → logprob: -21.37502098083496
    10. 'r' → logprob: -21.87502098083496

Token 690: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001783702871762216
    2. '            
' → logprob: -7.251783847808838
    3. '
' → logprob: -7.626783847808838
    4. '               ' → logprob: -8.12678337097168
    5. ' 
' → logprob: -9.50178337097168
    6. '       ' → logprob: -9.75178337097168
    7. '  
' → logprob: -10.12678337097168
    8. '            ' → logprob: -10.50178337097168
    9. '    
' → logprob: -11.37678337097168
    10. '                   ' → logprob: -11.37678337097168

Token 691: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018968943506479263
    2. 'remaining' → logprob: -4.0189690589904785
    3. ' remaining' → logprob: -7.6439690589904785
    4. '               ' → logprob: -9.26896858215332
    5. '            
' → logprob: -9.26896858215332
    6. '
' → logprob: -9.89396858215332
    7. '       ' → logprob: -9.89396858215332
    8. ' 
' → logprob: -10.64396858215332
    9. '   ' → logprob: -12.01896858215332
    10. 'rest' → logprob: -13.01896858215332

Token 692: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' (adapté à ' remaining') → logprob: -0.00027897433028556406
    2. ' remaining' → logprob: -8.500279426574707
    3. '           ' → logprob: -9.500279426574707
    4. 'protected' → logprob: -14.625279426574707
    5. 'remain' → logprob: -16.62527847290039
    6. '               ' → logprob: -16.62527847290039
    7. '.remaining' → logprob: -16.87527847290039
    8. '       ' → logprob: -17.75027847290039
    9. '   ' → logprob: -18.00027847290039
    10. '            
' → logprob: -18.12527847290039

Token 693: '_budget' (ID: 184538)
  Prédit: '_budget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_budget' → logprob: -1.6240566083070007e-06
    2. 'Budget' → logprob: -13.750001907348633
    3. '_' → logprob: -14.500001907348633
    4. '_cost' → logprob: -17.125001907348633
    5. 'budget' → logprob: -17.750001907348633
    6. '_B' → logprob: -18.750001907348633
    7. '_balance' → logprob: -18.875001907348633
    8. '_b' → logprob: -19.125001907348633
    9. ' _' → logprob: -19.375001907348633
    10. '```' → logprob: -19.875001907348633

Token 694: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.47426316142082214
    2. '-=' → logprob: -0.9742631912231445
    3. '-' → logprob: -8.599263191223145
    4. ' -' → logprob: -13.474263191223145
    5. '   ' → logprob: -15.474263191223145
    6. '=' → logprob: -15.599263191223145
    7. '	' → logprob: -16.599262237548828
    8. '    ' → logprob: -16.724262237548828
    9. '```' → logprob: -17.224262237548828
    10. ' ' → logprob: -17.599262237548828

Token 695: ' protect' (ID: 3319)
  Prédit: 'protect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'protect' → logprob: -8.792751032160595e-05
    2. ' protect' → logprob: -9.37508773803711
    3. 'pro' → logprob: -13.25008773803711
    4. 'protected' → logprob: -13.87508773803711
    5. 'prote' → logprob: -15.50008773803711
    6. 'prot' → logprob: -16.87508773803711
    7. 'int' → logprob: -17.25008773803711
    8. 'predict' → logprob: -18.87508773803711
    9. '   ' → logprob: -19.25008773803711
    10. 'Protect' → logprob: -19.75008773803711

Token 696: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -3.128163257315464e-07
    2. '_pro' → logprob: -15.75
    3. '(pro' → logprob: -17.75
    4. 'protect' → logprob: -18.125
    5. '{' → logprob: -18.25
    6. 'ed' → logprob: -18.25
    7. '[' → logprob: -18.25
    8. 'ab' → logprob: -18.375
    9. 'ect' → logprob: -18.875
    10. 'actable' → logprob: -19.0

Token 697: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 698: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35884007811546326
    2. 'return' → logprob: -1.2338401079177856
    3. ' return' → logprob: -4.983839988708496
    4. '           ' → logprob: -6.108839988708496
    5. '        
' → logprob: -7.233839988708496
    6. '<|end|>' → logprob: -8.608839988708496
    7. '```' → logprob: -9.483839988708496
    8. '
' → logprob: -9.733839988708496
    9. ' 
' → logprob: -10.108839988708496
    10. '            
' → logprob: -10.108839988708496

Token 699: ' protected' (ID: 4348)
  Prédit: 'protected'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'protected' (adapté à ' protected') → logprob: -0.0009031229419633746
    2. ' protected' → logprob: -7.125903129577637
    3. '           ' → logprob: -10.125903129577637
    4. 'return' → logprob: -10.500903129577637
    5. 'segment' → logprob: -11.250903129577637
    6. '       ' → logprob: -11.500903129577637
    7. '```' → logprob: -12.750903129577637
    8. 'protect' → logprob: -13.000903129577637
    9. 'pro' → logprob: -14.875903129577637
    10. 'continue' → logprob: -15.000903129577637

Token 700: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -2.4868770196917467e-05
    2. 'distance' → logprob: -10.625024795532227
    3. 'Distance' → logprob: -14.875024795532227
    4. '_DISTANCE' → logprob: -16.625024795532227
    5. '距离' → logprob: -17.375024795532227
    6. '_dist' → logprob: -17.375024795532227
    7. '=' → logprob: -17.500024795532227
    8. '\' → logprob: -18.250024795532227
    9. ' distance' → logprob: -18.625024795532227
    10. 'istance' → logprob: -19.125024795532227

Token 701: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038046542555093765
    2. ' +=' → logprob: -3.2880465984344482
    3. '+' → logprob: -12.288046836853027
    4. '=' → logprob: -15.288046836853027
    5. ']+=' → logprob: -16.41304588317871
    6. '+=(' → logprob: -17.03804588317871
    7. '+='' → logprob: -18.28804588317871
    8. '+="' → logprob: -19.16304588317871
    9. '   ' → logprob: -19.28804588317871
    10. ' +' → logprob: -19.41304588317871

Token 702: ' protect' (ID: 3319)
  Prédit: 'protect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'protect' → logprob: -0.0009137284359894693
    2. ' protect' → logprob: -7.000913619995117
    3. 'protected' → logprob: -13.875913619995117
    4. 'pro' → logprob: -14.000913619995117
    5. 'prote' → logprob: -15.000913619995117
    6. 'prot' → logprob: -16.750913619995117
    7. 'predict' → logprob: -18.250913619995117
    8. ' ' → logprob: -18.750913619995117
    9. '   ' → logprob: -18.750913619995117
    10. 'prevent' → logprob: -19.000913619995117

Token 703: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -1.0280383548888494e-06
    2. 'ect' → logprob: -15.125000953674316
    3. 'ed' → logprob: -15.375000953674316
    4. 'actable' → logprob: -15.500000953674316
    5. 'protect' → logprob: -16.750001907348633
    6. 'protected' → logprob: -16.750001907348633
    7. '```' → logprob: -18.375001907348633
    8. 'ab' → logprob: -18.625001907348633
    9. 'ct' → logprob: -18.750001907348633
    10. '_pro' → logprob: -19.750001907348633

Token 704: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10232090204954147
    2. '       ' → logprob: -2.602320909500122
    3. 'return' → logprob: -3.977320909500122
    4. '<|end|>' → logprob: -5.852320671081543
    5. ' return' → logprob: -7.227320671081543
    6. '
' → logprob: -8.102320671081543
    7. '        
' → logprob: -8.352320671081543
    8. '' → logprob: -9.727320671081543
    9. '  
' → logprob: -10.352320671081543
    10. ' 
' → logprob: -10.352320671081543

Token 705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38067626953125
    2. 'return' → logprob: -1.50567626953125
    3. '
' → logprob: -2.50567626953125
    4. '<|end|>' → logprob: -5.00567626953125
    5. ' return' → logprob: -5.50567626953125
    6. '        
' → logprob: -7.13067626953125
    7. '```' → logprob: -8.25567626953125
    8. '   ' → logprob: -8.25567626953125
    9. '' → logprob: -8.50567626953125
    10. '	return' → logprob: -8.63067626953125

Token 706: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023428086191415787
    2. '       ' → logprob: -3.773428201675415
    3. ' return' → logprob: -8.773427963256836
    4. '
' → logprob: -10.898427963256836
    5. '   ' → logprob: -12.023427963256836
    6. '	return' → logprob: -13.148427963256836
    7. '        
' → logprob: -14.523427963256836
    8. '```' → logprob: -15.023427963256836
    9. 'eturn' → logprob: -15.398427963256836
    10. ':return' → logprob: -16.523427963256836

Token 707: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.057271476835012436
    2. ' total' → logprob: -3.0572714805603027
    3. 'max' → logprob: -4.932271480560303
    4. ' max' → logprob: -6.557271480560303
    5. 'round' → logprob: -11.432271003723145
    6. 'float' → logprob: -12.432271003723145
    7. '0' → logprob: -14.557271003723145
    8. ' round' → logprob: -14.807271003723145
    9. 'tot' → logprob: -15.432271003723145
    10. '(total' → logprob: -15.432271003723145

Token 708: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -2.5776860184123507e-06
    2. 'expected' → logprob: -13.62500286102295
    3. '_total' → logprob: -14.37500286102295
    4. 'Expected' → logprob: -15.75000286102295
    5. '_' → logprob: -15.87500286102295
    6. '_expect' → logprob: -16.375001907348633
    7. '_token' → logprob: -16.375001907348633
    8. '_possible' → logprob: -17.000001907348633
    9. '_required' → logprob: -17.625001907348633
    10. '_allowed' → logprob: -18.000001907348633

Token 709: '_attack' (ID: 118945)
  Prédit: '_attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attack' → logprob: -0.0003794336807914078
    2. '_expected' → logprob: -8.50037956237793
    3. 'attack' → logprob: -8.75037956237793
    4. 'expected' → logprob: -11.00037956237793
    5. 'Attack' → logprob: -14.50037956237793
    6. '_att' → logprob: -16.00037956237793
    7. '_cost' → logprob: -16.50037956237793
    8. '_expect' → logprob: -17.12537956237793
    9. '```' → logprob: -17.37537956237793
    10. 'ed' → logprob: -17.50037956237793

Token 710: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 711: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 712: ' Output' (ID: 18315)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0587882995605469
    2. 'Random' → logprob: -1.4337882995605469
    3. 'Optimal' → logprob: -2.308788299560547
    4. 'Unit' → logprob: -2.683788299560547
    5. 'Na' → logprob: -2.808788299560547
    6. 'Advanced' → logprob: -3.808788299560547
    7. 'Test' → logprob: -3.933788299560547
    8. 'Br' → logprob: -4.058788299560547
    9. 'Exact' → logprob: -4.433788299560547
    10. 'DP' → logprob: -4.558788299560547

Token 713: 'Printer' (ID: 54325)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.05562034249305725
    2. 'Formatter' → logprob: -3.8056204319000244
    3. 'Handler' → logprob: -3.9306204319000244
    4. 'ter' → logprob: -4.930620193481445
    5. 'Printer' → logprob: -5.805620193481445
    6. 'Generator' → logprob: -6.555620193481445
    7. 'Processor' → logprob: -7.930620193481445
    8. 'Parser' → logprob: -9.805620193481445
    9. 'Builder' → logprob: -10.180620193481445
    10. 'Manager' → logprob: -10.680620193481445

Token 714: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.338466093642637e-05
    2. ':
' → logprob: -10.125073432922363
    3. '<|end|>' → logprob: -11.500073432922363
    4. '(' → logprob: -11.625073432922363
    5. '(Abstract' → logprob: -12.375073432922363
    6. ':

' → logprob: -13.125073432922363
    7. '(Output' → logprob: -13.500073432922363
    8. '():' → logprob: -13.500073432922363
    9. '):' → logprob: -13.500073432922363
    10. ':def' → logprob: -13.750073432922363

Token 715: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.00013393278641160578
    2. '):' → logprob: -9.625133514404297
    3. '):
' → logprob: -10.500133514404297
    4. ')' → logprob: -10.875133514404297
    5. 'object' → logprob: -11.500133514404297
    6. 'Abstract' → logprob: -12.500133514404297
    7. 'abc' → logprob: -13.000133514404297
    8. '```' → logprob: -13.125133514404297
    9. ' ABC' → logprob: -13.500133514404297
    10. 'Output' → logprob: -14.875133514404297

Token 716: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13068585097789764
    2. ':' → logprob: -2.130685806274414
    3. '):
' → logprob: -5.755685806274414
    4. ')' → logprob: -8.255685806274414
    5. '():' → logprob: -8.755685806274414
    6. '(' → logprob: -9.755685806274414
    7. ':
' → logprob: -10.630685806274414
    8. '   ' → logprob: -11.005685806274414
    9. '(Abstract' → logprob: -11.380685806274414
    10. '[' → logprob: -11.630685806274414

Token 717: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04729802906513214
    2. ':
' → logprob: -3.547297954559326
    3. '   ' → logprob: -4.172297954559326
    4. '(Abstract' → logprob: -6.672297954559326
    5. '):
' → logprob: -8.672298431396484
    6. '):' → logprob: -8.672298431396484
    7. '<|end|>' → logprob: -9.172298431396484
    8. '(' → logprob: -9.172298431396484
    9. 'class' → logprob: -10.047298431396484
    10. '```' → logprob: -10.922298431396484

Token 718: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009341521188616753
    2. '"""' (adapté à ' """') → logprob: -4.759341716766357
    3. '@' → logprob: -7.509341716766357
    4. 'class' → logprob: -9.2593412399292
    5. 'ABC' → logprob: -10.8843412399292
    6. ' """' → logprob: -11.3843412399292
    7. '
' → logprob: -11.7593412399292
    8. ':' → logprob: -11.7593412399292
    9. '  ' → logprob: -11.8843412399292
    10. 'def' → logprob: -11.8843412399292

Token 719: 'Interface' (ID: 7078)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.026460185647010803
    2. 'class' → logprob: -4.77646017074585
    3. 'abstract' → logprob: -4.77646017074585
    4. 'ABC' → logprob: -4.90146017074585
    5. 'Abstract' → logprob: -6.77646017074585
    6. '"' → logprob: -8.401460647583008
    7. 'def' → logprob: -8.651460647583008
    8. '   ' → logprob: -8.901460647583008
    9. '```' → logprob: -10.276460647583008
    10. 'abc' → logprob: -10.776460647583008

Token 720: ' abstra' (ID: 186216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.565653383731842
    2. ' for' → logprob: -1.9406533241271973
    3. '   ' → logprob: -2.0656533241271973
    4. 'abstract' → logprob: -2.4406533241271973
    5. '<|end|>' → logprob: -3.1906533241271973
    6. '```' → logprob: -4.565653324127197
    7. 'class' → logprob: -4.690653324127197
    8. '(Abstract' → logprob: -5.440653324127197
    9. ' abstract' → logprob: -6.315653324127197
    10. '  ' → logprob: -6.565653324127197

Token 721: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.011242104694247246
    2. 'cte' → logprob: -4.636241912841797
    3. 'te' → logprob: -6.886241912841797
    4. 'ct' → logprob: -8.011241912841797
    5. 'it' → logprob: -10.011241912841797
    6. '
' → logprob: -11.011241912841797
    7. '#' → logprob: -11.136241912841797
    8. '   ' → logprob: -11.886241912841797
    9. 'tte' → logprob: -12.011241912841797
    10. '```' → logprob: -12.136241912841797

Token 722: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6753608584403992
    2. ' for' → logprob: -0.9253608584403992
    3. ' pour' → logprob: -2.800360918045044
    4. 'pour' → logprob: -4.175360679626465
    5. '<|end|>' → logprob: -4.425360679626465
    6. '   ' → logprob: -5.425360679626465
    7. 'class' → logprob: -7.175360679626465
    8. ':' → logprob: -7.425360679626465
    9. '```' → logprob: -7.800360679626465
    10. '  ' → logprob: -10.050360679626465

Token 723: ''impression' (ID: 121766)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10920718312263489
    2. 'for' → logprob: -2.4842071533203125
    3. ' for' → logprob: -5.3592071533203125
    4. '```' → logprob: -5.4842071533203125
    5. 'es' → logprob: -6.4842071533203125
    6. 'éf' → logprob: -6.7342071533203125
    7. 'pour' → logprob: -6.7342071533203125
    8. 'ef' → logprob: -7.1092071533203125
    9. 'é' → logprob: -7.1092071533203125
    10. 'escription' → logprob: -7.3592071533203125

Token 724: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3442716598510742
    2. '<|end|>' → logprob: -1.3442716598510742
    3. ' des' → logprob: -2.469271659851074
    4. 'des' → logprob: -2.594271659851074
    5. '.' → logprob: -2.719271659851074
    6. 'for' → logprob: -3.094271659851074
    7. 'pour' → logprob: -3.219271659851074
    8. 'def' → logprob: -3.469271659851074
    9. ' for' → logprob: -3.844271659851074
    10. '```' → logprob: -3.844271659851074

Token 725: ' résultats' (ID: 48985)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.0980590432882309
    2. ' résultats' → logprob: -2.4730589389801025
    3. 'result' → logprob: -5.348059177398682
    4. 'results' → logprob: -5.723059177398682
    5. 'outputs' → logprob: -7.223059177398682
    6. 'r' → logprob: -8.348058700561523
    7. 'ré' → logprob: -10.723058700561523
    8. 'Rés' → logprob: -11.098058700561523
    9. 'solutions' → logprob: -11.473058700561523
    10. ' results' → logprob: -11.723058700561523

Token 726: '."""

' (ID: 68934)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6827319860458374
    2. '.' → logprob: -0.9327319860458374
    3. '."""' → logprob: -2.807732105255127
    4. '):' → logprob: -4.432732105255127
    5. ':

' → logprob: -4.682732105255127
    6. '<|end|>' → logprob: -5.307732105255127
    7. '"""' → logprob: -5.682732105255127
    8. '   ' → logprob: -6.057732105255127
    9. '."""

' → logprob: -6.307732105255127
    10. '):

' → logprob: -6.307732105255127

Token 727: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08981156349182129
    2. '   ' → logprob: -2.4648115634918213
    3. '    
' → logprob: -7.714811325073242
    4. 'class' → logprob: -8.339811325073242
    5. '@' → logprob: -9.214811325073242
    6. ' 
' → logprob: -10.339811325073242
    7. '

' → logprob: -10.714811325073242
    8. '<|end|>' → logprob: -11.839811325073242
    9. '   
' → logprob: -12.089811325073242
    10. '
' → logprob: -12.714811325073242

Token 728: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -2.8921695047756657e-05
    2. '
' → logprob: -10.625028610229492
    3. '   ' → logprob: -12.750028610229492
    4. 'from' → logprob: -14.500028610229492
    5. 'abstract' → logprob: -15.000028610229492
    6. '    
' → logprob: -15.125028610229492
    7. '@
' → logprob: -15.375028610229492
    8. 'def' → logprob: -15.875028610229492
    9. ' @' → logprob: -16.375028610229492
    10. '@property' → logprob: -16.750028610229492

Token 729: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: 0.0
    2. 'staticmethod' → logprob: -17.25
    3. ' abstract' → logprob: -17.5
    4. 'abc' → logprob: -17.75
    5. 'ab' → logprob: -19.25
    6. 'property' → logprob: -20.125
    7. 'classmethod' → logprob: -20.5
    8. '.abstract' → logprob: -21.875
    9. 'abs' → logprob: -22.5
    10. 'Abstract' → logprob: -22.625

Token 730: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.03819296881556511
    2. 'def' → logprob: -3.4131929874420166
    3. '_method' → logprob: -5.6631927490234375
    4. '   ' → logprob: -6.9131927490234375
    5. 'ethod' → logprob: -11.413192749023438
    6. ' method' → logprob: -11.538192749023438
    7. 'abstract' → logprob: -11.663192749023438
    8. ' def' → logprob: -12.038192749023438
    9. 'classmethod' → logprob: -12.038192749023438
    10. 'meth' → logprob: -12.538192749023438

Token 731: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34699392318725586
    2. '
' → logprob: -1.5969939231872559
    3. '   ' → logprob: -2.471993923187256
    4. ' def' → logprob: -5.096993923187256
    5. '    
' → logprob: -10.221994400024414
    6. '	def' → logprob: -10.221994400024414
    7. '```' → logprob: -10.346994400024414
    8. '
' → logprob: -10.846994400024414
    9. 'method' → logprob: -11.846994400024414
    10. '  ' → logprob: -12.471994400024414

Token 732: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022658411413431168
    2. '
' → logprob: -4.272658348083496
    3. '   ' → logprob: -4.897658348083496
    4. 'method' → logprob: -7.022658348083496
    5. 'staticmethod' → logprob: -10.147658348083496
    6. ' def' → logprob: -10.772658348083496
    7. 'classmethod' → logprob: -11.022658348083496
    8. '    
' → logprob: -11.397658348083496
    9. '```' → logprob: -12.522658348083496
    10. '
' → logprob: -12.772658348083496

Token 733: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.027575477957725525
    2. 'staticmethod' → logprob: -4.277575492858887
    3. 'method' → logprob: -4.527575492858887
    4. '
' → logprob: -6.527575492858887
    5. 'classmethod' → logprob: -7.527575492858887
    6. 'property' → logprob: -7.902575492858887
    7. 'print' → logprob: -9.527575492858887
    8. 'abstract' → logprob: -10.277575492858887
    9. 'abc' → logprob: -11.652575492858887
    10. '   ' → logprob: -12.277575492858887

Token 734: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.250000953674316
    3. 'write' → logprob: -17.75
    4. 'output' → logprob: -18.625
    5. 'display' → logprob: -18.625
    6. 'println' → logprob: -19.0
    7. 'def' → logprob: -21.0
    8. 'Print' → logprob: -21.0
    9. '	print' → logprob: -21.125
    10. 'pr' → logprob: -21.125

Token 735: '_result' (ID: 11623)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004032214637845755
    2. '_result' → logprob: -5.629032135009766
    3. '(' → logprob: -8.004032135009766
    4. 'result' → logprob: -10.254032135009766
    5. '_results' → logprob: -10.379032135009766
    6. '(result' → logprob: -11.129032135009766
    7. ' (' → logprob: -12.254032135009766
    8. '_output' → logprob: -12.629032135009766
    9. '(s' → logprob: -13.379032135009766
    10. 'self' → logprob: -13.379032135009766

Token 736: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.875001907348633
    3. 'self' → logprob: -14.625001907348633
    4. ' (' → logprob: -14.750001907348633
    5. '   ' → logprob: -16.500001907348633
    6. 's' → logprob: -18.125001907348633
    7. '(s' → logprob: -18.375001907348633
    8. '(
' → logprob: -18.375001907348633
    9. '
' → logprob: -19.000001907348633
    10. ' ' → logprob: -19.000001907348633

Token 737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ' ,' → logprob: -10.875021934509277
    3. 'self' → logprob: -12.875021934509277
    4. ')' → logprob: -15.125021934509277
    5. ',result' → logprob: -15.375021934509277
    6. ',
' → logprob: -17.375022888183594
    7. ',d' → logprob: -17.500022888183594
    8. ',data' → logprob: -17.750022888183594
    9. '   ' → logprob: -18.125022888183594
    10. ',value' → logprob: -18.750022888183594

Token 738: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07423322647809982
    2. 'self' → logprob: -2.949233293533325
    3. 'expected' → logprob: -4.449233055114746
    4. ' result' → logprob: -5.574233055114746
    5. 'dataset' → logprob: -6.324233055114746
    6. 'value' → logprob: -6.699233055114746
    7. 'results' → logprob: -8.199233055114746
    8. ' self' → logprob: -8.824233055114746
    9. 'float' → logprob: -9.449233055114746
    10. ' expected' → logprob: -9.574233055114746

Token 739: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000932421418838203
    2. ')' → logprob: -7.000932216644287
    3. '):' → logprob: -11.375932693481445
    4. 'self' → logprob: -12.875932693481445
    5. ' :' → logprob: -13.625932693481445
    6. 'result' → logprob: -13.750932693481445
    7. '   ' → logprob: -13.750932693481445
    8. '```' → logprob: -13.750932693481445
    9. ' ' → logprob: -14.125932693481445
    10. ' )' → logprob: -14.875932693481445

Token 740: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00015860427811276168
    2. ' float' → logprob: -8.750158309936523
    3. '(float' → logprob: -16.500158309936523
    4. ')' → logprob: -16.875158309936523
    5. 'flo' → logprob: -17.125158309936523
    6. '   ' → logprob: -17.500158309936523
    7. '	float' → logprob: -17.875158309936523
    8. '```' → logprob: -18.000158309936523
    9. '=float' → logprob: -18.875158309936523
    10. ',float' → logprob: -18.875158309936523

Token 741: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8074162653647363e-05
    2. '):' → logprob: -11.500018119812012
    3. ' )' → logprob: -12.125018119812012
    4. '   ' → logprob: -13.125018119812012
    5. ')->' → logprob: -15.250018119812012
    6. '):
' → logprob: -15.750018119812012
    7. ',)' → logprob: -16.625017166137695
    8. ':' → logprob: -17.250017166137695
    9. ',' → logprob: -17.375017166137695
    10. '`)' → logprob: -18.000017166137695

Token 742: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005230325274169445
    2. ')->' → logprob: -6.13023042678833
    3. ' ->' → logprob: -7.00523042678833
    4. '   ' → logprob: -7.13023042678833
    5. '->' → logprob: -7.38023042678833
    6. ':' → logprob: -7.75523042678833
    7. ',' → logprob: -8.380229949951172
    8. '):' → logprob: -11.130229949951172
    9. '<|end|>' → logprob: -11.880229949951172
    10. ' )' → logprob: -12.005229949951172

Token 743: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.306760805164231e-05
    2. ' None' → logprob: -11.25001335144043
    3. 'none' → logprob: -19.25001335144043
    4. 'Abstract' → logprob: -20.87501335144043
    5. '_None' → logprob: -21.00001335144043
    6. '(None' → logprob: -21.50001335144043
    7. 'abstract' → logprob: -22.00001335144043
    8. '_none' → logprob: -22.87501335144043
    9. '   ' → logprob: -23.00001335144043
    10. 'float' → logprob: -23.50001335144043

Token 744: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 745: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8553913831710815
    2. '       ' → logprob: -1.2303913831710815
    3. '<|end|>' → logprob: -1.7303913831710815
    4. '   ' → logprob: -2.355391502380371
    5. '\n' → logprob: -5.355391502380371
    6. '    
' → logprob: -6.230391502380371
    7. '        
' → logprob: -6.980391502380371
    8. ' 
' → logprob: -7.230391502380371
    9. ':' → logprob: -7.730391502380371
    10. '\' → logprob: -7.855391502380371

Token 746: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20424559712409973
    2. 'pass' (adapté à ' pass') → logprob: -1.7042455673217773
    3. ' pass' → logprob: -5.954245567321777
    4. '   ' → logprob: -8.454245567321777
    5. '...' → logprob: -11.079245567321777
    6. '	pass' → logprob: -12.329245567321777
    7. '     ' → logprob: -16.454246520996094
    8. '      ' → logprob: -16.579246520996094
    9. '```' → logprob: -16.579246520996094
    10. 'raise' → logprob: -16.829246520996094

Token 747: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2043742686510086
    2. '
' → logprob: -1.7043743133544922
    3. '

' → logprob: -5.829374313354492
    4. '
' → logprob: -11.954374313354492
    5. '<|end|>' → logprob: -12.704374313354492
    6. ' class' → logprob: -13.454374313354492
    7. '


' → logprob: -13.454374313354492
    8. '<class' → logprob: -13.454374313354492
    9. 'newline' → logprob: -13.954374313354492
    10. '```' → logprob: -14.704374313354492

Token 748: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.018352219834923744
    2. '
' → logprob: -4.018352031707764
    3. '

' → logprob: -8.518352508544922
    4. '


' → logprob: -14.268352508544922
    5. '<class' → logprob: -14.518352508544922
    6. '
' → logprob: -14.643352508544922
    7. ' class' → logprob: -14.893352508544922
    8. '"class' → logprob: -15.893352508544922
    9. '  
' → logprob: -16.143352508544922
    10. 'newline' → logprob: -16.143352508544922

Token 749: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Std' → logprob: -0.01559941191226244
    2. 'Console' → logprob: -4.265599250793457
    3. 'Formatted' → logprob: -7.390599250793457
    4. 'Simple' → logprob: -7.390599250793457
    5. 'Decimal' → logprob: -10.265599250793457
    6. 'Plain' → logprob: -10.265599250793457
    7. 'Float' → logprob: -10.390599250793457
    8. 'Fixed' → logprob: -10.515599250793457
    9. 'Concrete' → logprob: -11.015599250793457
    10. 'Rounded' → logprob: -11.265599250793457

Token 750: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -1.1994775377388578e-05
    2. 'Input' → logprob: -11.375012397766113
    3. 'Print' → logprob: -15.500012397766113
    4. 'output' → logprob: -16.250011444091797
    5. 'Out' → logprob: -16.625011444091797
    6. ' Output' → logprob: -17.500011444091797
    7. '	Output' → logprob: -18.000011444091797
    8. 'out' → logprob: -18.125011444091797
    9. 'print' → logprob: -18.250011444091797
    10. '_output' → logprob: -18.500011444091797

Token 751: 'Printer' (ID: 54325)
  Prédit: 'Printer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -3.128163257315464e-07
    2. 'Output' → logprob: -16.0
    3. 'Print' → logprob: -16.875
    4. 'Parser' → logprob: -17.625
    5. 'printer' → logprob: -17.625
    6. 'Writer' → logprob: -17.875
    7. 'Painter' → logprob: -17.875
    8. 'Pr' → logprob: -17.875
    9. 'Formatter' → logprob: -19.375
    10. 'Processor' → logprob: -19.875

Token 752: '(Output' (ID: 132866)
  Prédit: '(Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Output' → logprob: -0.0007200572872534394
    2. '(' → logprob: -7.250720024108887
    3. '(Print' → logprob: -12.375720024108887
    4. '(Input' → logprob: -12.500720024108887
    5. '(Standard' → logprob: -13.750720024108887
    6. '(Abstract' → logprob: -14.625720024108887
    7. ':' → logprob: -14.750720024108887
    8. '(Open' → logprob: -17.250720977783203
    9. '(Console' → logprob: -17.375720977783203
    10. '	Output' → logprob: -17.750720977783203

Token 753: 'Printer' (ID: 54325)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.6932604908943176
    2. 'Printer' → logprob: -0.6932604908943176
    3. 'Input' → logprob: -9.193260192871094
    4. 'Print' → logprob: -12.068260192871094
    5. '   ' → logprob: -13.693260192871094
    6. 'Parser' → logprob: -14.193260192871094
    7. 'Printing' → logprob: -14.193260192871094
    8. 'Writer' → logprob: -14.318260192871094
    9. ')' → logprob: -14.568260192871094
    10. 'printer' → logprob: -14.943260192871094

Token 754: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035334397107362747
    2. '):
' → logprob: -5.878533363342285
    3. ':' → logprob: -7.253533363342285
    4. '   ' → logprob: -11.503533363342285
    5. ')' → logprob: -12.003533363342285
    6. '):
' → logprob: -13.003533363342285
    7. '):

' → logprob: -14.378533363342285
    8. ']:' → logprob: -14.878533363342285
    9. '():' → logprob: -15.003533363342285
    10. '}:' → logprob: -15.378533363342285

Token 755: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06370680779218674
    2. ':' → logprob: -2.813706874847412
    3. ':
' → logprob: -6.438706874847412
    4. '
' → logprob: -10.438706398010254
    5. 'def' → logprob: -10.688706398010254
    6. '```' → logprob: -10.813706398010254
    7. '  ' → logprob: -10.938706398010254
    8. 'class' → logprob: -11.438706398010254
    9. '<|end|>' → logprob: -11.938706398010254
    10. ' def' → logprob: -11.938706398010254

Token 756: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013100019423291087
    2. '
' → logprob: -6.751309871673584
    3. 'def' (adapté à ' def') → logprob: -9.626310348510742
    4. ' def' → logprob: -9.876310348510742
    5. '```' → logprob: -11.751310348510742
    6. 'class' → logprob: -12.126310348510742
    7. '    
' → logprob: -12.876310348510742
    8. '"""' → logprob: -13.126310348510742
    9. ' indentation' → logprob: -13.751310348510742
    10. 'indent' → logprob: -14.126310348510742

Token 757: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5246416926383972
    2. 'def' → logprob: -1.274641752243042
    3. ' print' → logprob: -2.524641752243042
    4. ' def' → logprob: -3.024641752243042
    5. '   ' → logprob: -10.899641990661621
    6. 'ef' → logprob: -11.774641990661621
    7. '_print' → logprob: -12.274641990661621
    8. 'class' → logprob: -13.274641990661621
    9. ' ' → logprob: -13.524641990661621
    10. '_' → logprob: -13.774641990661621

Token 758: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.5048530030981055e-06
    2. 'result' → logprob: -14.625001907348633
    3. '("_' → logprob: -15.125001907348633
    4. '(' → logprob: -15.625001907348633
    5. '(self' → logprob: -15.875001907348633
    6. '_' → logprob: -16.000001907348633
    7. '_results' → logprob: -16.250001907348633
    8. '   ' → logprob: -17.125001907348633
    9. '(f' → logprob: -17.125001907348633
    10. '_res' → logprob: -17.250001907348633

Token 759: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: 0.0
    2. ' (' → logprob: -17.75
    3. '(' → logprob: -18.375
    4. 'self' → logprob: -21.25
    5. '   ' → logprob: -21.875
    6. '(result' → logprob: -23.0
    7. '(
' → logprob: -23.625
    8. ' ' → logprob: -24.125
    9. '       ' → logprob: -24.25
    10. '(s' → logprob: -25.375

Token 760: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018530222587287426
    2. ' ,' → logprob: -9.375185012817383
    3. 'self' → logprob: -9.500185012817383
    4. '(self' → logprob: -10.875185012817383
    5. ',self' → logprob: -12.875185012817383
    6. ')' → logprob: -13.125185012817383
    7. '   ' → logprob: -14.125185012817383
    8. ',result' → logprob: -14.375185012817383
    9. ' ' → logprob: -15.375185012817383
    10. ' self' → logprob: -15.625185012817383

Token 761: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5816105008125305
    2. 'self' → logprob: -0.8316105008125305
    3. ' result' → logprob: -5.456610679626465
    4. ' self' → logprob: -6.581610679626465
    5. '   ' → logprob: -13.956610679626465
    6. '(self' → logprob: -15.331610679626465
    7. '       ' → logprob: -16.70660972595215
    8. ' ' → logprob: -17.20660972595215
    9. ')' → logprob: -17.45660972595215
    10. 'round' → logprob: -17.70660972595215

Token 762: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009443086571991444
    2. '(self' → logprob: -4.759443283081055
    3. ')' → logprob: -7.384443283081055
    4. 'self' → logprob: -8.634443283081055
    5. '   ' → logprob: -11.009443283081055
    6. ':self' → logprob: -12.634443283081055
    7. ' self' → logprob: -13.009443283081055
    8. '       ' → logprob: -13.134443283081055
    9. '):' → logprob: -13.509443283081055
    10. ' :' → logprob: -13.884443283081055

Token 763: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5764467120170593
    2. ' float' → logprob: -0.8264467120170593
    3. ')' → logprob: -8.076446533203125
    4. '   ' → logprob: -9.201446533203125
    5. ' ' → logprob: -10.326446533203125
    6. '.' → logprob: -10.951446533203125
    7. '(float' → logprob: -11.326446533203125
    8. ':' → logprob: -11.701446533203125
    9. 'f' → logprob: -11.826446533203125
    10. '{' → logprob: -13.201446533203125

Token 764: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. '):' → logprob: -12.000008583068848
    3. 'self' → logprob: -14.000008583068848
    4. ':' → logprob: -14.500008583068848
    5. ' )' → logprob: -15.000008583068848
    6. '   ' → logprob: -15.250008583068848
    7. '):
' → logprob: -15.375008583068848
    8. ',' → logprob: -16.25000762939453
    9. '(self' → logprob: -16.87500762939453
    10. '):
' → logprob: -17.25000762939453

Token 765: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08434829115867615
    2. ':
' → logprob: -2.584348201751709
    3. '->' → logprob: -6.334348201751709
    4. ')' → logprob: -6.834348201751709
    5. '(self' → logprob: -6.959348201751709
    6. '       ' → logprob: -7.209348201751709
    7. ' ->' → logprob: -7.459348201751709
    8. '   ' → logprob: -8.959348678588867
    9. ':
' → logprob: -9.459348678588867
    10. '):' → logprob: -9.834348678588867

Token 766: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4762301445007324
    2. 'print' → logprob: -0.9762301445007324
    3. ' None' → logprob: -6.226230144500732
    4. ' ' → logprob: -9.10123062133789
    5. ')' → logprob: -10.97623062133789
    6. ' print' → logprob: -11.47623062133789
    7. '   ' → logprob: -11.85123062133789
    8. '...' → logprob: -11.97623062133789
    9. '```' → logprob: -12.22623062133789
    10. '(None' → logprob: -12.35123062133789

Token 767: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0346389077603817
    2. ':' → logprob: -3.6596388816833496
    3. '(' → logprob: -5.15963888168335
    4. '       ' → logprob: -6.15963888168335
    5. '   ' → logprob: -8.909639358520508
    6. ':
' → logprob: -9.159639358520508
    7. '(result' → logprob: -9.784639358520508
    8. '):' → logprob: -10.034639358520508
    9. 'self' → logprob: -10.409639358520508
    10. '(print' → logprob: -11.159639358520508

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2352385965641588e-05
    2. 'print' → logprob: -12.000012397766113
    3. ' print' → logprob: -12.125012397766113
    4. '```' → logprob: -14.750012397766113
    5. '           ' → logprob: -15.750012397766113
    6. '   ' → logprob: -16.500011444091797
    7. '    ' → logprob: -16.500011444091797
    8. '	' → logprob: -17.625011444091797
    9. '               ' → logprob: -18.000011444091797
    10. '      ' → logprob: -18.625011444091797

Token 769: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011950644664466381
    2. ' print' → logprob: -4.511950492858887
    3. '       ' → logprob: -7.011950492858887
    4. '```' → logprob: -13.761950492858887
    5. 'import' → logprob: -15.511950492858887
    6. '	print' → logprob: -17.511951446533203
    7. '   ' → logprob: -18.136951446533203
    8. 'printf' → logprob: -18.386951446533203
    9. '
' → logprob: -19.386951446533203
    10. '           ' → logprob: -20.386951446533203

Token 770: ' Le' (ID: 2018)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.057743949990254e-05
    2. '       ' → logprob: -11.000020980834961
    3. 'import' → logprob: -13.125020980834961
    4. ' print' → logprob: -13.250020980834961
    5. 'from' → logprob: -18.12502098083496
    6. '           ' → logprob: -19.25002098083496
    7. '   ' → logprob: -19.75002098083496
    8. '```' → logprob: -19.87502098083496
    9. 'Print' → logprob: -20.12502098083496
    10. 'printf' → logprob: -20.87502098083496

Token 771: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002703953068703413
    2. ' print' → logprob: -8.37527084350586
    3. '   ' → logprob: -10.62527084350586
    4. '       ' → logprob: -12.00027084350586
    5. 'import' → logprob: -13.00027084350586
    6. 'format' → logprob: -13.00027084350586
    7. 'result' → logprob: -13.50027084350586
    8. 'def' → logprob: -14.37527084350586
    9. 'prin' → logprob: -14.37527084350586
    10. 'pass' → logprob: -14.62527084350586

Token 772: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20363624393939972
    2. '       ' → logprob: -2.0786361694335938
    3. ' =' → logprob: -3.4536361694335938
    4. '=' → logprob: -3.7036361694335938
    5. ':' → logprob: -6.953636169433594
    6. '           ' → logprob: -7.328636169433594
    7. ' print' → logprob: -8.328636169433594
    8. 'import' → logprob: -8.578636169433594
    9. 'format' → logprob: -8.703636169433594
    10. '{' → logprob: -8.953636169433594

Token 773: ' un' (ID: 537)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.030709048733115196
    2. ' f' → logprob: -3.5307090282440186
    3. '{' → logprob: -7.280709266662598
    4. 'format' → logprob: -8.780709266662598
    5. 'round' → logprob: -10.155709266662598
    6. '(f' → logprob: -10.530709266662598
    7. '   ' → logprob: -10.655709266662598
    8. '"{' → logprob: -11.280709266662598
    9. 'print' → logprob: -12.030709266662598
    10. '	f' → logprob: -13.030709266662598

Token 774: ' float' (ID: 4428)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5716058611869812
    2. 'print' → logprob: -1.321605920791626
    3. '"{' → logprob: -1.946605920791626
    4. ' f' → logprob: -4.571605682373047
    5. 'format' → logprob: -4.946605682373047
    6. '{' → logprob: -5.571605682373047
    7. ''{' → logprob: -6.821605682373047
    8. 'float' → logprob: -7.071605682373047
    9. ':.' → logprob: -7.571605682373047
    10. ':' → logprob: -7.696605682373047

Token 775: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14653296768665314
    2. 'print' → logprob: -2.0215330123901367
    3. ',' → logprob: -6.396533012390137
    4. ' print' → logprob: -6.521533012390137
    5. ':' → logprob: -7.771533012390137
    6. '{' → logprob: -8.646533012390137
    7. '```' → logprob: -10.646533012390137
    8. ' =' → logprob: -11.521533012390137
    9. '.' → logprob: -11.646533012390137
    10. '           ' → logprob: -11.771533012390137

Token 776: ' les' (ID: 1341)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06242651492357254
    2. '       ' → logprob: -2.8124265670776367
    3. ' print' → logprob: -8.687426567077637
    4. 'with' → logprob: -9.062426567077637
    5. '#' → logprob: -9.687426567077637
    6. '           ' → logprob: -9.812426567077637
    7. 'format' → logprob: -10.937426567077637
    8. ':' → logprob: -11.437426567077637
    9. 'avec' → logprob: -11.937426567077637
    10. ' with' → logprob: -12.312426567077637

Token 777: ' exemples' (ID: 105138)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05614273622632027
    2. 'result' → logprob: -3.806142807006836
    3. ':' → logprob: -4.556142807006836
    4. 'rés' → logprob: -5.806142807006836
    5. 'val' → logprob: -6.056142807006836
    6. '2' → logprob: -6.056142807006836
    7. 'int' → logprob: -6.306142807006836
    8. '   ' → logprob: -6.431142807006836
    9. 'de' → logprob: -6.556142807006836
    10. 'float' → logprob: -6.681142807006836

Token 778: ' montrent' (ID: 178953)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061459992080926895
    2. 'print' → logprob: -3.061460018157959
    3. 'format' → logprob: -5.936460018157959
    4. ' print' → logprob: -6.061460018157959
    5. ',' → logprob: -6.561460018157959
    6. 'import' → logprob: -6.811460018157959
    7. '   ' → logprob: -7.061460018157959
    8. '#' → logprob: -7.061460018157959
    9. ' format' → logprob: -7.061460018157959
    10. ':' → logprob: -7.561460018157959

Token 779: ' un' (ID: 537)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6056820750236511
    2. '       ' → logprob: -1.480682134628296
    3. ' f' → logprob: -1.980682134628296
    4. '"{' → logprob: -3.355682134628296
    5. '{' → logprob: -3.605682134628296
    6. 'format' → logprob: -4.855681896209717
    7. 'print' → logprob: -5.355681896209717
    8. '(f' → logprob: -5.730681896209717
    9. 'round' → logprob: -6.480681896209717
    10. ' "{' → logprob: -6.480681896209717

Token 780: ' entier' (ID: 80473)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24862898886203766
    2. 'format' → logprob: -2.748629093170166
    3. 'f' → logprob: -2.998629093170166
    4. 'arr' → logprob: -3.873629093170166
    5. '{' → logprob: -4.123629093170166
    6. '2' → logprob: -4.248629093170166
    7. '"{' → logprob: -4.373629093170166
    8. '6' → logprob: -4.748629093170166
    9. 'é' → logprob: -5.748629093170166
    10. 'int' → logprob: -5.998629093170166

Token 781: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050842318683862686
    2. 'print' → logprob: -3.05084228515625
    3. ',' → logprob: -6.80084228515625
    4. ':' → logprob: -7.42584228515625
    5. ' print' → logprob: -7.92584228515625
    6. 'import' → logprob: -9.55084228515625
    7. '```' → logprob: -10.80084228515625
    8. '           ' → logprob: -11.17584228515625
    9. '.' → logprob: -11.42584228515625
    10. 'def' → logprob: -11.67584228515625

Token 782: ' conversion' (ID: 22165)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08997564017772675
    2. '       ' → logprob: -2.839975595474243
    3. ' print' → logprob: -3.589975595474243
    4. '           ' → logprob: -11.839975357055664
    5. '
' → logprob: -12.214975357055664
    6. '```' → logprob: -12.589975357055664
    7. 'import' → logprob: -13.214975357055664
    8. '        ' → logprob: -13.964975357055664
    9. '	print' → logprob: -14.089975357055664
    10. 'result' → logprob: -15.214975357055664

Token 783: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07463866472244263
    2. '(int' → logprob: -2.949638605117798
    3. 'int' → logprob: -4.574638843536377
    4. 'print' → logprob: -5.574638843536377
    5. '(round' → logprob: -5.824638843536377
    6. '(' → logprob: -7.199638843536377
    7. '()' → logprob: -7.949638843536377
    8. '=int' → logprob: -8.074638366699219
    9. ',' → logprob: -8.324638366699219
    10. ':' → logprob: -8.699638366699219

Token 784: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00019471932318992913
    2. ' int' → logprob: -9.000194549560547
    3. 'ent' → logprob: -9.625194549560547
    4. '```' → logprob: -12.625194549560547
    5. '   ' → logprob: -14.125194549560547
    6. 'round' → logprob: -15.500194549560547
    7. ' entier' → logprob: -15.625194549560547
    8. ' ' → logprob: -15.875194549560547
    9. '
' → logprob: -16.250194549560547
    10. '=int' → logprob: -16.375194549560547

Token 785: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037190807051956654
    2. 'print' → logprob: -5.628718852996826
    3. ',' → logprob: -9.878719329833984
    4. '(' → logprob: -11.003719329833984
    5. 'result' → logprob: -11.003719329833984
    6. '```' → logprob: -12.003719329833984
    7. '(print' → logprob: -12.378719329833984
    8. '(int' → logprob: -12.378719329833984
    9. '()' → logprob: -12.503719329833984
    10. ' print' → logprob: -12.628719329833984

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.4987974029500037e-05
    2. 'print' → logprob: -10.750024795532227
    3. ' print' → logprob: -12.875024795532227
    4. ',' → logprob: -14.875024795532227
    5. '```' → logprob: -15.625024795532227
    6. ':' → logprob: -16.125024795532227
    7. '   ' → logprob: -16.250024795532227
    8. '           ' → logprob: -16.625024795532227
    9. '      ' → logprob: -18.125024795532227
    10. '()' → logprob: -18.375024795532227

Token 787: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007152695674449205
    2. '       ' → logprob: -5.257152557373047
    3. ' print' → logprob: -6.257152557373047
    4. 'result' → logprob: -15.257152557373047
    5. '```' → logprob: -16.507152557373047
    6. '	print' → logprob: -17.632152557373047
    7. 'int' → logprob: -18.132152557373047
    8. '   ' → logprob: -18.382152557373047
    9. '           ' → logprob: -19.007152557373047
    10. '	' → logprob: -19.507152557373047

Token 788: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002868417650461197
    2. 'int' → logprob: -8.250287055969238
    3. '(round' → logprob: -10.625287055969238
    4. '(' → logprob: -14.000287055969238
    5. '(f' → logprob: -15.375287055969238
    6. ' int' → logprob: -16.500286102294922
    7. 'round' → logprob: -16.750286102294922
    8. '<int' → logprob: -17.750286102294922
    9. '=int' → logprob: -18.125286102294922
    10. '[int' → logprob: -18.250286102294922

Token 789: '(result' (ID: 8111)
  Prédit: '(round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(round' → logprob: -0.4742073714733124
    2. '(result' → logprob: -0.9742074012756348
    3. '(' → logprob: -9.724206924438477
    4. 'round' → logprob: -10.099206924438477
    5. 'result' → logprob: -10.474206924438477
    6. '(max' → logprob: -14.974206924438477
    7. '(abs' → logprob: -15.349206924438477
    8. ' round' → logprob: -15.349206924438477
    9. ')' → logprob: -15.849206924438477
    10. '(results' → logprob: -16.724206924438477

Token 790: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31339406967163086
    2. ')' → logprob: -1.3133940696716309
    3. '())' → logprob: -9.313394546508789
    4. '()))' → logprob: -10.313394546508789
    5. ')))' → logprob: -12.063394546508789
    6. '()' → logprob: -13.563394546508789
    7. ')}' → logprob: -14.313394546508789
    8. '))
' → logprob: -15.063394546508789
    9. ' ))' → logprob: -15.188394546508789
    10. '})' → logprob: -15.563394546508789

Token 791: 'class' (ID: 1444)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15603558719158173
    2. '```' → logprob: -2.6560356616973877
    3. 'def' → logprob: -3.0310356616973877
    4. '<|end|>' → logprob: -4.031035423278809
    5. '#' → logprob: -5.281035423278809
    6. '
' → logprob: -6.656035423278809
    7. ' if' → logprob: -7.406035423278809
    8. 'class' → logprob: -7.906035423278809
    9. 'from' → logprob: -8.406035423278809
    10. 'import' → logprob: -8.906035423278809

Token 792: ' Princess' (ID: 46404)
  Prédit: 'Main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Main' → logprob: -1.0801129341125488
    2. 'Gre' → logprob: -1.7051129341125488
    3. 'main' → logprob: -1.9551129341125488
    4. 'Runner' → logprob: -2.580112934112549
    5. 'Solution' → logprob: -2.705112934112549
    6. 'Solver' → logprob: -2.830112934112549
    7. 'def' → logprob: -2.955112934112549
    8. 'Prote' → logprob: -3.830112934112549
    9. 'Protection' → logprob: -4.330112934112549
    10. 'Application' → logprob: -4.580112934112549

Token 793: 'Marriage' (ID: 191584)
  Prédit: 'Prote'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Prote' → logprob: -0.008394713513553143
    2. 'Protection' → logprob: -5.258394718170166
    3. 'Protect' → logprob: -6.258394718170166
    4. 'Def' → logprob: -8.133394241333008
    5. 'Defense' → logprob: -8.883394241333008
    6. 'Guard' → logprob: -9.383394241333008
    7. 'Guardian' → logprob: -9.383394241333008
    8. 'Solver' → logprob: -9.508394241333008
    9. 'Saver' → logprob: -10.133394241333008
    10. 'Save' → logprob: -10.383394241333008

Token 794: 'Solver' (ID: 70484)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -0.12101832032203674
    2. 'Solver' → logprob: -2.871018409729004
    3. 'Protection' → logprob: -3.621018409729004
    4. 'Prote' → logprob: -3.746018409729004
    5. 'Optimizer' → logprob: -6.121018409729004
    6. 'Strategy' → logprob: -6.871018409729004
    7. 'Scheduler' → logprob: -6.996018409729004
    8. 'Proposal' → logprob: -7.496018409729004
    9. 'Algorithm' → logprob: -7.871018409729004
    10. 'Allocator' → logprob: -8.246018409729004

Token 795: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18397259712219238
    2. '(' → logprob: -1.8089725971221924
    3. ':
' → logprob: -5.683972358703613
    4. '(Abstract' → logprob: -7.308972358703613
    5. '(S' → logprob: -10.308972358703613
    6. '():' → logprob: -10.683972358703613
    7. ' :' → logprob: -10.933972358703613
    8. '```' → logprob: -12.058972358703613
    9. '(PR' → logprob: -12.058972358703613
    10. '(Standard' → logprob: -12.058972358703613

Token 796: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2767048180103302
    2. ':
' → logprob: -1.6517047882080078
    3. '   ' → logprob: -3.026704788208008
    4. '(' → logprob: -7.401704788208008
    5. '```' → logprob: -8.151704788208008
    6. '(Abstract' → logprob: -8.276704788208008
    7. '<|end|>' → logprob: -9.401704788208008
    8. '**' → logprob: -10.151704788208008
    9. 'def' → logprob: -10.151704788208008
    10. '
' → logprob: -10.776704788208008

Token 797: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7171463370323181
    2. 'def' → logprob: -0.7171463370323181
    3. ' def' → logprob: -3.967146396636963
    4. ':
' → logprob: -6.342146396636963
    5. ':' → logprob: -6.467146396636963
    6. '
' → logprob: -7.092146396636963
    7. 'ABC' → logprob: -8.717145919799805
    8. '"""' (adapté à ' """') → logprob: -8.842145919799805
    9. '```' → logprob: -9.217145919799805
    10. 'class' → logprob: -9.592145919799805

Token 798: 'Or' (ID: 2251)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39805305004119873
    2. 'class' → logprob: -1.2730530500411987
    3. '"""' → logprob: -3.7730531692504883
    4. '   ' → logprob: -3.8980531692504883
    5. 'ABC' → logprob: -5.523053169250488
    6. ' def' → logprob: -7.648053169250488
    7. '
' → logprob: -8.523053169250488
    8. '"""
' → logprob: -8.898053169250488
    9. 'Class' → logprob: -9.773053169250488
    10. 'Solver' → logprob: -10.023053169250488

Token 799: 'ches' (ID: 7235)
  Prédit: 'don'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'don' → logprob: -1.2165764570236206
    2. 'chestr' → logprob: -1.5915764570236206
    3. 'ch' → logprob: -1.7165764570236206
    4. 'ches' → logprob: -2.34157657623291
    5. 'd' → logprob: -2.71657657623291
    6. 'p' → logprob: -3.34157657623291
    7. 'dre' → logprob: -3.34157657623291
    8. 'gan' → logprob: -4.21657657623291
    9. 'igin' → logprob: -4.59157657623291
    10. 'chestra' → logprob: -5.09157657623291

Token 800: 'tration' (ID: 43602)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.15874281525611877
    2. 'tre' → logprob: -2.158742904663086
    3. 'trate' → logprob: -4.908742904663086
    4. 'tra' → logprob: -5.158742904663086
    5. 'tration' → logprob: -5.408742904663086
    6. 'trer' → logprob: -5.908742904663086
    7. 'trait' → logprob: -6.033742904663086
    8. 't' → logprob: -6.033742904663086
    9. 'tré' → logprob: -6.783742904663086
    10. 'trade' → logprob: -6.908742904663086

Token 801: ' complète' (ID: 75660)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0644109845161438
    2. ':
' → logprob: -2.939410924911499
    3. 'class' → logprob: -5.314411163330078
    4. '   ' → logprob: -5.689411163330078
    5. ' des' → logprob: -8.439411163330078
    6. '(' → logprob: -8.564411163330078
    7. 'def' → logprob: -8.689411163330078
    8. ' class' → logprob: -9.189411163330078
    9. ':

' → logprob: -9.564411163330078
    10. '<|end|>' → logprob: -10.064411163330078

Token 802: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07081452012062073
    2. ':
' → logprob: -2.820814609527588
    3. '   ' → logprob: -4.945814609527588
    4. 'class' → logprob: -7.445814609527588
    5. ':

' → logprob: -8.07081413269043
    6. ' des' → logprob: -8.32081413269043
    7. '(' → logprob: -8.82081413269043
    8. '):' → logprob: -9.07081413269043
    9. 'def' → logprob: -9.07081413269043
    10. '```' → logprob: -10.94581413269043

Token 803: ' problème' (ID: 35630)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.41215959191322327
    2. 'process' → logprob: -1.4121595621109009
    3. 'code' → logprob: -4.037159442901611
    4. 'flux' → logprob: -4.162159442901611
    5. 'solve' → logprob: -4.162159442901611
    6. 'sol' → logprob: -5.162159442901611
    7. 'programme' → logprob: -5.412159442901611
    8. 'pro' → logprob: -5.537159442901611
    9. 'proble' → logprob: -5.662159442901611
    10. 'Solver' → logprob: -5.787159442901611

Token 804: '."""

' (ID: 68934)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014543168246746063
    2. ':
' → logprob: -4.264543056488037
    3. '):' → logprob: -8.139543533325195
    4. '   ' → logprob: -10.014543533325195
    5. ':

' → logprob: -10.264543533325195
    6. '):
' → logprob: -12.889543533325195
    7. ')' → logprob: -13.514543533325195
    8. ' :' → logprob: -13.889543533325195
    9. ',' → logprob: -14.139543533325195
    10. '():' → logprob: -14.764543533325195

Token 805: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008820906281471252
    2. 'def' → logprob: -4.7588210105896
    3. ' def' → logprob: -8.883820533752441
    4. 'class' → logprob: -9.633820533752441
    5. '    
' → logprob: -13.758820533752441
    6. '```' → logprob: -14.008820533752441
    7. '
' → logprob: -15.633820533752441
    8. '   ' → logprob: -16.758821487426758
    9. '	def' → logprob: -16.883821487426758
    10. ' class' → logprob: -17.133821487426758

Token 806: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.583550642360933e-05
    2. ' def' → logprob: -10.250036239624023
    3. '   ' → logprob: -15.375036239624023
    4. 'dataset' → logprob: -16.125036239624023
    5. '__' → logprob: -18.875036239624023
    6. '
' → logprob: -19.625036239624023
    7. '	def' → logprob: -19.750036239624023
    8. 'class' → logprob: -20.875036239624023
    9. 'datasets' → logprob: -20.875036239624023
    10. '_def' → logprob: -21.125036239624023

Token 807: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13135883212089539
    2. ' __' → logprob: -2.1313588619232178
    3. 'def' → logprob: -6.131358623504639
    4. 'init' → logprob: -6.506358623504639
    5. '_init' → logprob: -7.631358623504639
    6. '_' → logprob: -8.631359100341797
    7. ' def' → logprob: -9.756359100341797
    8. ' _' → logprob: -11.131359100341797
    9. '___' → logprob: -11.756359100341797
    10. ' init' → logprob: -12.381359100341797

Token 808: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'def' → logprob: -17.875
    3. ' init' → logprob: -19.0
    4. '	init' → logprob: -21.75
    5. '```' → logprob: -22.125
    6. 'new' → logprob: -22.25
    7. '(init' → logprob: -22.25
    8. '   ' → logprob: -22.25
    9. 'inite' → logprob: -22.625
    10. 'int' → logprob: -22.625

Token 809: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000840715249069035
    2. '(self' → logprob: -7.125840663909912
    3. '__(
' → logprob: -10.37584114074707
    4. '__' → logprob: -12.75084114074707
    5. '_(' → logprob: -14.00084114074707
    6. '<>(' → logprob: -14.75084114074707
    7. '(' → logprob: -15.00084114074707
    8. '   ' → logprob: -15.37584114074707
    9. 'self' → logprob: -16.12584114074707
    10. '
' → logprob: -16.12584114074707

Token 810: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.107425062713446e-06
    2. ' self' → logprob: -12.750006675720215
    3. '   ' → logprob: -13.250006675720215
    4. '
' → logprob: -13.375006675720215
    5. '       ' → logprob: -14.875006675720215
    6. '(self' → logprob: -15.125006675720215
    7. ')' → logprob: -15.500006675720215
    8. ',' → logprob: -16.50000762939453
    9. ' ' → logprob: -17.75000762939453
    10. '```' → logprob: -18.12500762939453

Token 811: ',
' (ID: 412)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6669421792030334
    2. ',' → logprob: -0.9169421792030334
    3. '(self' → logprob: -2.5419421195983887
    4. '   ' → logprob: -5.416942119598389
    5. '__(' → logprob: -6.166942119598389
    6. ' self' → logprob: -7.166942119598389
    7. '
' → logprob: -8.041942596435547
    8. ' (' → logprob: -8.291942596435547
    9. ',self' → logprob: -9.666942596435547
    10. '       ' → logprob: -9.791942596435547

Token 812: '                ' (ID: 408)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0046503725461661816
    2. '       ' → logprob: -5.504650592803955
    3. ' self' → logprob: -7.504650592803955
    4. '(self' → logprob: -11.879650115966797
    5. 'n' → logprob: -12.004650115966797
    6. '           ' → logprob: -12.754650115966797
    7. '   ' → logprob: -13.004650115966797
    8. ')' → logprob: -14.129650115966797
    9. '	self' → logprob: -14.254650115966797
    10. 'dataset' → logprob: -14.879650115966797

Token 813: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.47947126626968384
    2. 'parser' → logprob: -0.9794712662696838
    3. 'strategy' → logprob: -5.979471206665039
    4. 'dataset' → logprob: -6.354471206665039
    5. 'datasets' → logprob: -7.354471206665039
    6. 'self' → logprob: -8.479471206665039
    7. '   ' → logprob: -9.854471206665039
    8. 'data' → logprob: -9.979471206665039
    9. 'prote' → logprob: -10.229471206665039
    10. ' parser' → logprob: -10.354471206665039

Token 814: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -1.27099974633893e-05
    2. 'Parser' → logprob: -12.500012397766113
    3. 'parser' → logprob: -12.750012397766113
    4. ':' → logprob: -13.000012397766113
    5. '_source' → logprob: -13.250012397766113
    6. '_reader' → logprob: -14.000012397766113
    7. '   ' → logprob: -15.125012397766113
    8. '_handler' → logprob: -15.500012397766113
    9. '_processor' → logprob: -15.875012397766113
    10. '_parse' → logprob: -16.12501335144043

Token 815: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.191489642835222e-05
    2. ' :' → logprob: -10.250041961669922
    3. ',' → logprob: -12.250041961669922
    4. '   ' → logprob: -13.500041961669922
    5. '       ' → logprob: -15.625041961669922
    6. '=' → logprob: -16.875041961669922
    7. ',
' → logprob: -17.875041961669922
    8. '_:' → logprob: -17.875041961669922
    9. 'input' → logprob: -18.000041961669922
    10. ' ' → logprob: -18.000041961669922

Token 816: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.00524075236171484
    2. ' Input' → logprob: -5.2552409172058105
    3. ' ' → logprob: -13.005240440368652
    4. '   ' → logprob: -13.130240440368652
    5. 'Std' → logprob: -13.630240440368652
    6. 'input' → logprob: -14.755240440368652
    7. '	Input' → logprob: -14.880240440368652
    8. '  ' → logprob: -15.005240440368652
    9. '    ' → logprob: -16.13024139404297
    10. '     ' → logprob: -16.88024139404297

Token 817: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.9361264946837764e-07
    2. '_parser' → logprob: -16.625
    3. 'Processor' → logprob: -16.875
    4. ')' → logprob: -18.5
    5. 'Parse' → logprob: -18.75
    6. ' Parser' → logprob: -18.875
    7. '   ' → logprob: -19.625
    8. 'Handler' → logprob: -19.75
    9. 'parser' → logprob: -19.75
    10. 'Reader' → logprob: -20.0

Token 818: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10023148357868195
    2. ',
' → logprob: -2.350231409072876
    3. '                ' → logprob: -11.850231170654297
    4. ',
' → logprob: -11.975231170654297
    5. ' ,' → logprob: -12.725231170654297
    6. ' ,
' → logprob: -12.975231170654297
    7. ',

' → logprob: -13.350231170654297
    8. ')' → logprob: -13.475231170654297
    9. '   ' → logprob: -13.475231170654297
    10. '       ' → logprob: -14.225231170654297

Token 819: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.005223444197326899
    2. 'output' → logprob: -5.380223274230957
    3. '                    ' → logprob: -8.005223274230957
    4. ' output' → logprob: -9.130223274230957
    5. '       ' → logprob: -9.630223274230957
    6. '            ' → logprob: -10.255223274230957
    7. '        ' → logprob: -11.255223274230957
    8. '                 ' → logprob: -11.380223274230957
    9. '               ' → logprob: -11.505223274230957
    10. '                   ' → logprob: -11.630223274230957

Token 820: ' protector' (ID: 92120)
  Prédit: 'prote'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prote' → logprob: -0.013057404197752476
    2. 'output' → logprob: -4.638057231903076
    3. ' protector' → logprob: -6.263057231903076
    4. 'protect' → logprob: -7.388057231903076
    5. 'strategy' → logprob: -7.513057231903076
    6. 'pro' → logprob: -9.638057708740234
    7. ' output' → logprob: -9.638057708740234
    8. '   ' → logprob: -10.888057708740234
    9. 'strateg' → logprob: -11.263057708740234
    10. 'prot' → logprob: -11.763057708740234

Token 821: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -8.061054359131958e-06
    2. 'Strategy' → logprob: -12.250007629394531
    3. '_str' → logprob: -12.875007629394531
    4. 'strategy' → logprob: -15.000007629394531
    5. ':' → logprob: -15.375007629394531
    6. 's' → logprob: -16.75000762939453
    7. '_s' → logprob: -17.62500762939453
    8. ' strategy' → logprob: -18.00000762939453
    9. '_' → logprob: -18.12500762939453
    10. '   ' → logprob: -18.25000762939453

Token 822: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.36574100604048e-06
    2. ' :' → logprob: -12.625004768371582
    3. ')' → logprob: -14.875004768371582
    4. '):' → logprob: -15.375004768371582
    5. '   ' → logprob: -15.875004768371582
    6. '=' → logprob: -16.000003814697266
    7. ',' → logprob: -16.500003814697266
    8. '       ' → logprob: -17.750003814697266
    9. ' ' → logprob: -18.500003814697266
    10. '):
' → logprob: -19.375003814697266

Token 823: ' Protector' (ID: 158803)
  Prédit: 'Prote'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prote' → logprob: -0.023432863876223564
    2. ' Protector' → logprob: -3.773432970046997
    3. 'Protect' → logprob: -8.648432731628418
    4. '   ' → logprob: -12.148432731628418
    5. ' Prote' → logprob: -12.523432731628418
    6. ' ' → logprob: -13.648432731628418
    7. 'Prot' → logprob: -14.273432731628418
    8. 'prote' → logprob: -14.898432731628418
    9. '       ' → logprob: -15.523432731628418
    10. ' protector' → logprob: -15.648432731628418

Token 824: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -3.166338137816638e-05
    2. '_strategy' → logprob: -10.375031471252441
    3. 'strategy' → logprob: -15.875031471252441
    4. 'Strateg' → logprob: -16.125032424926758
    5. ' Strategy' → logprob: -16.750032424926758
    6. '   ' → logprob: -16.750032424926758
    7. 'Strategies' → logprob: -17.500032424926758
    8. '       ' → logprob: -18.500032424926758
    9. ')' → logprob: -19.125032424926758
    10. ' strategy' → logprob: -19.125032424926758

Token 825: ',
' (ID: 412)
  Prédit: ',
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.12936048209667206
    2. ',' → logprob: -2.1293604373931885
    3. '                ' → logprob: -6.129360675811768
    4. ')' → logprob: -8.87936019897461
    5. '   ' → logprob: -10.25436019897461
    6. '               ' → logprob: -10.62936019897461
    7. ',
' → logprob: -10.75436019897461
    8. '       ' → logprob: -11.25436019897461
    9. '):
' → logprob: -12.25436019897461
    10. ' ,
' → logprob: -12.50436019897461

Token 826: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.012515541166067123
    2. 'output' → logprob: -4.762515544891357
    3. ' output' → logprob: -5.637515544891357
    4. '   ' → logprob: -8.1375150680542
    5. '    ' → logprob: -10.8875150680542
    6. '        ' → logprob: -11.8875150680542
    7. '                    ' → logprob: -12.6375150680542
    8. '                 ' → logprob: -12.7625150680542
    9. '               ' → logprob: -12.8875150680542
    10. '            ' → logprob: -13.2625150680542

Token 827: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.02975824475288391
    2. ' output' → logprob: -3.5297582149505615
    3. '                ' → logprob: -11.90475845336914
    4. '    ' → logprob: -15.15475845336914
    5. '   ' → logprob: -15.27975845336914
    6. '	output' → logprob: -15.65475845336914
    7. '                 ' → logprob: -16.52975845336914
    8. '_output' → logprob: -16.65475845336914
    9. '                    ' → logprob: -16.90475845336914
    10. 'Output' → logprob: -17.15475845336914

Token 828: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.0009621966164559126
    2. '_writer' → logprob: -7.250962257385254
    3. '_parser' → logprob: -8.750962257385254
    4. '_print' → logprob: -10.250962257385254
    5. '_formatter' → logprob: -10.375962257385254
    6. '_output' → logprob: -12.250962257385254
    7. '_encoder' → logprob: -12.500962257385254
    8. '_processor' → logprob: -12.875962257385254
    9. '_Pr' → logprob: -13.125962257385254
    10. '_' → logprob: -13.625962257385254

Token 829: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -3.702754474943504e-05
    2. 'int' → logprob: -10.25003719329834
    3. '```' → logprob: -14.50003719329834
    4. '   ' → logprob: -15.37503719329834
    5. ' inter' → logprob: -15.50003719329834
    6. 'ointer' → logprob: -15.62503719329834
    7. '_inter' → logprob: -15.87503719329834
    8. '#' → logprob: -16.625036239624023
    9. 'INTER' → logprob: -16.875036239624023
    10. '``' → logprob: -17.125036239624023

Token 830: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007881867350079119
    2. '):' → logprob: -7.75078821182251
    3. ')' → logprob: -8.000787734985352
    4. ' :' → logprob: -11.625787734985352
    5. '=' → logprob: -12.250787734985352
    6. '):
' → logprob: -12.250787734985352
    7. '   ' → logprob: -13.125787734985352
    8. '=None' → logprob: -14.875787734985352
    9. ' ):' → logprob: -14.875787734985352
    10. ' )' → logprob: -15.000787734985352

Token 831: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.00033558503491804004
    2. ' Output' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.625335693359375
    4. ' ' → logprob: -16.875335693359375
    5. 'output' → logprob: -17.375335693359375
    6. '  ' → logprob: -17.500335693359375
    7. '	Output' → logprob: -18.125335693359375
    8. ' output' → logprob: -19.625335693359375
    9. '       ' → logprob: -20.500335693359375
    10. '    ' → logprob: -20.500335693359375

Token 832: 'Printer' (ID: 54325)
  Prédit: 'Printer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -1.9361264946837764e-07
    2. 'Writer' → logprob: -17.125
    3. 'Parser' → logprob: -17.25
    4. 'Painter' → logprob: -17.25
    5. 'Output' → logprob: -17.875
    6. 'printer' → logprob: -18.5
    7. ' Printer' → logprob: -18.75
    8. 'Prin' → logprob: -19.0
    9. '_pr' → logprob: -20.0
    10. 'Processor' → logprob: -20.125

Token 833: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04240111634135246
    2. '):
' → logprob: -3.667401075363159
    3. '):' → logprob: -4.167401313781738
    4. '   ' → logprob: -7.792401313781738
    5. '                ' → logprob: -11.042401313781738
    6. ',' → logprob: -11.042401313781738
    7. '       ' → logprob: -11.292401313781738
    8. '):

' → logprob: -12.792401313781738
    9. ' )' → logprob: -13.042401313781738
    10. '):
' → logprob: -13.042401313781738

Token 834: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4273102879524231
    2. ':
' → logprob: -1.1773102283477783
    3. '       ' → logprob: -3.9273102283477783
    4. '   ' → logprob: -4.177310466766357
    5. ')' → logprob: -6.427310466766357
    6. '->' → logprob: -6.552310466766357
    7. ' ->' → logprob: -7.052310466766357
    8. '):
' → logprob: -7.802310466766357
    9. '(self' → logprob: -9.8023099899292
    10. 'def' → logprob: -10.4273099899292

Token 835: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.061967797577381134
    2. ' None' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.561967849731445
    4. '_None' → logprob: -17.061967849731445
    5. '(None' → logprob: -17.936967849731445
    6. '=None' → logprob: -19.061967849731445
    7. ',None' → logprob: -19.436967849731445
    8. 'No' → logprob: -19.561967849731445
    9. ' ' → logprob: -20.311967849731445
    10. '_none' → logprob: -21.436967849731445

Token 836: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48792967200279236
    2. ':' → logprob: -1.2379297018051147
    3. ':
' → logprob: -2.362929582595825
    4. ',' → logprob: -7.362929821014404
    5. '   ' → logprob: -7.612929821014404
    6. '):
' → logprob: -7.737929821014404
    7. '<|end|>' → logprob: -8.862929344177246
    8. ')' → logprob: -9.737929344177246
    9. '):' → logprob: -10.362929344177246
    10. '():
' → logprob: -10.487929344177246

Token 837: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010330478107789531
    2. 'self' → logprob: -9.250102996826172
    3. ' self' → logprob: -12.250102996826172
    4. '   ' → logprob: -13.500102996826172
    5. '      ' → logprob: -14.500102996826172
    6. '```' → logprob: -15.750102996826172
    7. '     ' → logprob: -16.625102996826172
    8. '           ' → logprob: -16.750102996826172
    9. '        ' → logprob: -17.000102996826172
    10. '        
' → logprob: -17.625102996826172

Token 838: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10023190826177597
    2. 'self' (adapté à ' self') → logprob: -2.350231885910034
    3. ' self' → logprob: -11.225232124328613
    4. '   ' → logprob: -11.350232124328613
    5. 'def' → logprob: -16.475231170654297
    6. '	self' → logprob: -16.475231170654297
    7. '      ' → logprob: -17.975231170654297
    8. '(self' → logprob: -17.975231170654297
    9. '           ' → logprob: -18.600231170654297
    10. '     ' → logprob: -18.850231170654297

Token 839: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.006748289801180363
    2. '.' → logprob: -5.006748199462891
    3. '._' → logprob: -11.38174819946289
    4. '   ' → logprob: -11.63174819946289
    5. 'input' → logprob: -12.75674819946289
    6. ' .' → logprob: -12.88174819946289
    7. '=input' → logprob: -13.38174819946289
    8. '.INPUT' → logprob: -13.38174819946289
    9. '.__' → logprob: -13.88174819946289
    10. '.in' → logprob: -14.88174819946289

Token 840: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -1.580929347255733e-05
    2. '   ' → logprob: -11.875016212463379
    3. '_' → logprob: -13.000016212463379
    4. 'parser' → logprob: -13.250016212463379
    5. '       ' → logprob: -13.500016212463379
    6. 'Parser' → logprob: -14.500016212463379
    7. '_parse' → logprob: -14.500016212463379
    8. ' _' → logprob: -15.500016212463379
    9. '_reader' → logprob: -15.625016212463379
    10. '_par' → logprob: -15.875016212463379

Token 841: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16173721849918365
    2. ' =' → logprob: -1.9117372035980225
    3. '       ' → logprob: -6.911737442016602
    4. '   ' → logprob: -7.661737442016602
    5. ':' → logprob: -11.161737442016602
    6. ' ' → logprob: -11.286737442016602
    7. '    ' → logprob: -12.286737442016602
    8. ',' → logprob: -12.536737442016602
    9. '=self' → logprob: -12.786737442016602
    10. '        ' → logprob: -13.161737442016602

Token 842: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047814972698689
    2. ' input' → logprob: -4.511047840118408
    3. '=input' → logprob: -17.51104736328125
    4. '_input' → logprob: -17.88604736328125
    5. '<input' → logprob: -17.88604736328125
    6. '	input' → logprob: -18.01104736328125
    7. '(input' → logprob: -18.01104736328125
    8. 'Input' → logprob: -18.38604736328125
    9. '.input' → logprob: -20.01104736328125
    10. 'import' → logprob: -20.26104736328125

Token 843: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: 0.0
    2. 'parser' → logprob: -17.25
    3. 'Parser' → logprob: -17.375
    4. '_par' → logprob: -20.125
    5. '_parse' → logprob: -21.375
    6. '-parser' → logprob: -21.375
    7. '_processor' → logprob: -21.75
    8. '_serializer' → logprob: -22.0
    9. '.parser' → logprob: -22.25
    10. '_pr' → logprob: -22.25

Token 844: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.900034299585968e-05
    2. 'self' → logprob: -9.375088691711426
    3. '
' → logprob: -13.500088691711426
    4. ' self' → logprob: -14.000088691711426
    5. '<|end|>' → logprob: -14.125088691711426
    6. ',' → logprob: -14.375088691711426
    7. '   ' → logprob: -15.125088691711426
    8. ',
' → logprob: -16.250089645385742
    9. '      ' → logprob: -16.250089645385742
    10. '(self' → logprob: -16.500089645385742

Token 845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001345115713775158
    2. 'self' → logprob: -6.626345157623291
    3. '   ' → logprob: -11.251344680786133
    4. ' self' → logprob: -12.251344680786133
    5. '        ' → logprob: -14.376344680786133
    6. '           ' → logprob: -15.126344680786133
    7. '      ' → logprob: -16.001344680786133
    8. ',' → logprob: -16.376344680786133
    9. '     ' → logprob: -16.376344680786133
    10. '               ' → logprob: -16.751344680786133

Token 846: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.868328920158092e-05
    2. '       ' → logprob: -10.500028610229492
    3. ' self' → logprob: -13.750028610229492
    4. '   ' → logprob: -18.250028610229492
    5. 'prote' → logprob: -20.125028610229492
    6. '	self' → logprob: -20.250028610229492
    7. 'protect' → logprob: -20.750028610229492
    8. '        ' → logprob: -21.500028610229492
    9. '           ' → logprob: -22.000028610229492
    10. '=self' → logprob: -22.625028610229492

Token 847: '.pro' (ID: 3231)
  Prédit: '.pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -0.0003323665587231517
    2. '.' → logprob: -8.125332832336426
    3. 'prote' → logprob: -11.125332832336426
    4. ' .' → logprob: -11.375332832336426
    5. '.output' → logprob: -12.125332832336426
    6. '.prof' → logprob: -13.125332832336426
    7. '.protocol' → logprob: -14.625332832336426
    8. '._' → logprob: -15.250332832336426
    9. '.p' → logprob: -15.500332832336426
    10. 'pro' → logprob: -15.625332832336426

Token 848: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -1.0683535037969705e-05
    2. 't' → logprob: -12.25001049041748
    3. 'tect' → logprob: -13.50001049041748
    4. 'cess' → logprob: -13.87501049041748
    5. 'ject' → logprob: -14.12501049041748
    6. 'tection' → logprob: -14.50001049041748
    7. 'tec' → logprob: -14.62501049041748
    8. 'text' → logprob: -14.75001049041748
    9. 'selector' → logprob: -15.37501049041748
    10. 'f' → logprob: -15.50001049041748

Token 849: 'ctor' (ID: 4558)
  Prédit: 'ctor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctor' → logprob: -4.961759259458631e-06
    2. 'ct' → logprob: -12.375004768371582
    3. 'ctors' → logprob: -14.500004768371582
    4. 'ction' → logprob: -17.2500057220459
    5. 'CTOR' → logprob: -17.2500057220459
    6. 'cctor' → logprob: -17.7500057220459
    7. ' ctor' → logprob: -18.7500057220459
    8. '   ' → logprob: -19.3750057220459
    9. 'cto' → logprob: -19.3750057220459
    10. 'ector' → logprob: -19.5000057220459

Token 850: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -0.007781483698636293
    2. 'ctor' → logprob: -4.882781505584717
    3. 'strategy' → logprob: -9.257781028747559
    4. '_str' → logprob: -10.757781028747559
    5. 'or' → logprob: -11.132781028747559
    6. 'c' → logprob: -11.757781028747559
    7. 'ct' → logprob: -11.757781028747559
    8. 'strateg' → logprob: -12.007781028747559
    9. '   ' → logprob: -12.632781028747559
    10. 'tor' → logprob: -12.632781028747559

Token 851: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252054363489151
    2. ' =' → logprob: -1.5020543336868286
    3. '   ' → logprob: -9.502054214477539
    4. '       ' → logprob: -10.252054214477539
    5. '=self' → logprob: -11.627054214477539
    6. '    ' → logprob: -13.127054214477539
    7. '        ' → logprob: -13.502054214477539
    8. 'self' → logprob: -14.252054214477539
    9. ' ' → logprob: -14.377054214477539
    10. '     ' → logprob: -14.752054214477539

Token 852: ' protector' (ID: 92120)
  Prédit: 'prote'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prote' → logprob: -0.0007535241893492639
    2. 'protect' → logprob: -7.750753402709961
    3. ' protector' → logprob: -8.125753402709961
    4. 'prot' → logprob: -10.875753402709961
    5. 'pro' → logprob: -12.625753402709961
    6. ' prote' → logprob: -13.250753402709961
    7. 'prof' → logprob: -14.500753402709961
    8. '   ' → logprob: -15.000753402709961
    9. 'Prote' → logprob: -15.125753402709961
    10. 'protein' → logprob: -15.125753402709961

Token 853: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -9.729906196298543e-06
    2. 'strategy' → logprob: -11.625009536743164
    3. 'Strategy' → logprob: -14.625009536743164
    4. '_str' → logprob: -15.375009536743164
    5. 'strateg' → logprob: -17.625009536743164
    6. ' strategy' → logprob: -17.875009536743164
    7. 'ator' → logprob: -18.375009536743164
    8. '   ' → logprob: -18.750009536743164
    9. '_pro' → logprob: -18.750009536743164
    10. 'ctor' → logprob: -19.000009536743164

Token 854: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007724452763795853
    2. 'self' → logprob: -4.882724285125732
    3. ' self' → logprob: -9.75772476196289
    4. '   ' → logprob: -10.00772476196289
    5. '
' → logprob: -11.50772476196289
    6. ',' → logprob: -13.50772476196289
    7. '<|end|>' → logprob: -14.00772476196289
    8. '(self' → logprob: -14.25772476196289
    9. '	self' → logprob: -14.63272476196289
    10. '        ' → logprob: -14.75772476196289

Token 855: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001483564410591498
    2. 'self' → logprob: -9.12514877319336
    3. '   ' → logprob: -10.37514877319336
    4. ' self' → logprob: -11.87514877319336
    5. 'def' → logprob: -14.62514877319336
    6. '
' → logprob: -15.25014877319336
    7. '```' → logprob: -15.50014877319336
    8. 'from' → logprob: -16.62514877319336
    9. '      ' → logprob: -16.62514877319336
    10. ',' → logprob: -17.37514877319336

Token 856: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015060516307130456
    2. '       ' → logprob: -6.7515058517456055
    3. ' self' → logprob: -8.001505851745605
    4. '   ' → logprob: -14.126505851745605
    5. '	self' → logprob: -16.501506805419922
    6. 'def' → logprob: -18.126506805419922
    7. '(self' → logprob: -18.251506805419922
    8. ' ' → logprob: -18.876506805419922
    9. '           ' → logprob: -19.001506805419922
    10. '      ' → logprob: -19.251506805419922

Token 857: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.00022165567497722805
    2. 'output' → logprob: -8.500221252441406
    3. '.' → logprob: -11.000221252441406
    4. '.input' → logprob: -13.750221252441406
    5. ' .' → logprob: -15.125221252441406
    6. ' output' → logprob: -16.625221252441406
    7. '_output' → logprob: -17.750221252441406
    8. '._' → logprob: -18.000221252441406
    9. '.Output' → logprob: -18.375221252441406
    10. '$output' → logprob: -18.625221252441406

Token 858: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.00036679807817563415
    2. '_parser' → logprob: -8.000367164611816
    3. 'printer' → logprob: -10.625367164611816
    4. '   ' → logprob: -13.000367164611816
    5. '_writer' → logprob: -13.875367164611816
    6. '=' → logprob: -14.000367164611816
    7. '_strategy' → logprob: -14.125367164611816
    8. '_print' → logprob: -14.250367164611816
    9. 'pr' → logprob: -14.500367164611816
    10. ' =' → logprob: -15.250367164611816

Token 859: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.0003697781648952514
    2. 'int' → logprob: -8.250370025634766
    3. '_inter' → logprob: -9.375370025634766
    4. 'ointer' → logprob: -11.625370025634766
    5. '_int' → logprob: -12.500370025634766
    6. '_' → logprob: -13.125370025634766
    7. '   ' → logprob: -13.250370025634766
    8. '```' → logprob: -13.250370025634766
    9. 'interface' → logprob: -13.875370025634766
    10. '#' → logprob: -14.000370025634766

Token 860: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03412013128399849
    2. ' =' → logprob: -3.4091200828552246
    3. '.print' → logprob: -8.409120559692383
    4. '.' → logprob: -8.409120559692383
    5. '   ' → logprob: -11.034120559692383
    6. ' ' → logprob: -12.284120559692383
    7. 'print' → logprob: -13.159120559692383
    8. ')' → logprob: -13.409120559692383
    9. '.=' → logprob: -14.284120559692383
    10. 's' → logprob: -14.534120559692383

Token 861: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.03804275393486023
    2. ' output' → logprob: -3.2880427837371826
    3. 'input' → logprob: -14.038043022155762
    4. '(output' → logprob: -15.038043022155762
    5. '	output' → logprob: -16.538042068481445
    6. '_output' → logprob: -16.913042068481445
    7. '$output' → logprob: -17.038042068481445
    8. ' input' → logprob: -18.288042068481445
    9. '.output' → logprob: -18.413042068481445
    10. 'out' → logprob: -19.788042068481445

Token 862: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -1.652451464906335e-05
    2. '_parser' → logprob: -11.250016212463379
    3. 'printer' → logprob: -13.625016212463379
    4. 'Printer' → logprob: -14.000016212463379
    5. '_print' → logprob: -14.250016212463379
    6. '_writer' → logprob: -14.625016212463379
    7. '   ' → logprob: -16.625017166137695
    8. '_' → logprob: -17.000017166137695
    9. '._' → logprob: -17.125017166137695
    10. '_Pr' → logprob: -17.500017166137695

Token 863: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.3782830137643032e-05
    2. '_inter' → logprob: -11.62501335144043
    3. 'int' → logprob: -13.37501335144043
    4. 'iter' → logprob: -13.75001335144043
    5. 'ter' → logprob: -14.37501335144043
    6. 'enter' → logprob: -15.37501335144043
    7. '.inter' → logprob: -15.37501335144043
    8. 'n' → logprob: -15.75001335144043
    9. '   ' → logprob: -16.00001335144043
    10. 'ointer' → logprob: -16.25001335144043

Token 864: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1022450402379036
    2. '
' → logprob: -2.3522450923919678
    3. '    
' → logprob: -6.852244853973389
    4. '

' → logprob: -7.602244853973389
    5. '<|end|>' → logprob: -8.102245330810547
    6. 'def' → logprob: -8.977245330810547
    7. ' def' → logprob: -11.602245330810547
    8. '        
' → logprob: -11.727245330810547
    9. '<|end|>' → logprob: -11.977245330810547
    10. '  
' → logprob: -12.102245330810547

Token 865: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34294581413269043
    2. '   ' → logprob: -1.7179458141326904
    3. 'def' → logprob: -2.2179458141326904
    4. ' def' → logprob: -6.7179460525512695
    5. '    
' → logprob: -7.8429460525512695
    6. '

' → logprob: -8.21794605255127
    7. '<|end|>' → logprob: -9.46794605255127
    8. '	def' → logprob: -9.96794605255127
    9. '```' → logprob: -11.09294605255127
    10. '
' → logprob: -11.34294605255127

Token 866: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.3902033970225602e-05
    2. ' def' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.000014305114746
    4. '	def' → logprob: -17.37501335144043
    5. 'de' → logprob: -19.62501335144043
    6. '
' → logprob: -20.75001335144043
    7. 'd' → logprob: -21.50001335144043
    8. '    
' → logprob: -21.75001335144043
    9. '_def' → logprob: -22.62501335144043
    10. ':def' → logprob: -22.75001335144043

Token 867: ' solve' (ID: 17722)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.126943439245224
    2. 'solve' → logprob: -2.126943349838257
    3. ' run' → logprob: -12.126943588256836
    4. 'def' → logprob: -12.251943588256836
    5. 'execute' → logprob: -12.501943588256836
    6. ' solve' → logprob: -14.001943588256836
    7. 'process' → logprob: -14.751943588256836
    8. '_run' → logprob: -16.626943588256836
    9. '.run' → logprob: -16.751943588256836
    10. '.solve' → logprob: -17.251943588256836

Token 868: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.73314929776825e-05
    2. '(' → logprob: -9.37508773803711
    3. ' (' → logprob: -13.25008773803711
    4. '()' → logprob: -15.37508773803711
    5. '(
' → logprob: -15.37508773803711
    6. '   ' → logprob: -16.25008773803711
    7. 'self' → logprob: -16.25008773803711
    8. '       ' → logprob: -17.37508773803711
    9. '(sel' → logprob: -18.00008773803711
    10. '(s' → logprob: -18.75008773803711

Token 869: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9743012671824545e-05
    2. '(' → logprob: -10.875020027160645
    3. ' (' → logprob: -15.250020027160645
    4. '():' → logprob: -16.375019073486328
    5. '(
' → logprob: -16.375019073486328
    6. '   ' → logprob: -16.500019073486328
    7. '(s' → logprob: -16.625019073486328
    8. 'self' → logprob: -17.125019073486328
    9. '(sel' → logprob: -17.250019073486328
    10. '()' → logprob: -17.750019073486328

Token 870: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4635300934314728
    2. ')' → logprob: -1.4635300636291504
    3. '(self' → logprob: -2.7135300636291504
    4. '):
' → logprob: -3.0885300636291504
    5. 'self' → logprob: -3.8385300636291504
    6. ',' → logprob: -5.83853006362915
    7. '   ' → logprob: -6.83853006362915
    8. '       ' → logprob: -6.96353006362915
    9. '):
' → logprob: -7.21353006362915
    10. ')(' → logprob: -8.463530540466309

Token 871: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0069701592437922955
    2. ' ->' → logprob: -5.631969928741455
    3. '->' → logprob: -6.131969928741455
    4. '(' → logprob: -7.506969928741455
    5. ':' → logprob: -8.131970405578613
    6. '(
' → logprob: -9.506970405578613
    7. '():' → logprob: -9.631970405578613
    8. '       ' → logprob: -10.131970405578613
    9. ')' → logprob: -10.131970405578613
    10. 'self' → logprob: -10.506970405578613

Token 872: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.030458979308605194
    2. ' None' → logprob: -3.530458927154541
    3. 'Iterator' → logprob: -7.280458927154541
    4. '   ' → logprob: -11.6554594039917
    5. ' Iterator' → logprob: -11.7804594039917
    6. ')' → logprob: -13.5304594039917
    7. 'void' → logprob: -14.6554594039917
    8. 'self' → logprob: -15.0304594039917
    9. 'Iterable' → logprob: -15.1554594039917
    10. 'iter' → logprob: -15.5304594039917

Token 873: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09488112479448318
    2. '(self' → logprob: -3.094881057739258
    3. '   ' → logprob: -3.344881057739258
    4. ':' → logprob: -5.344881057739258
    5. ':
' → logprob: -5.719881057739258
    6. 'self' → logprob: -6.844881057739258
    7. ',' → logprob: -8.719881057739258
    8. ' self' → logprob: -8.969881057739258
    9. '        
' → logprob: -9.469881057739258
    10. '):
' → logprob: -9.594881057739258

Token 874: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001029471677611582
    2. '
' → logprob: -9.750102996826172
    3. ' for' → logprob: -10.500102996826172
    4. 'for' → logprob: -12.000102996826172
    5. '   ' → logprob: -12.375102996826172
    6. '        
' → logprob: -13.000102996826172
    7. '```' → logprob: -13.250102996826172
    8. '
' → logprob: -14.625102996826172
    9. ',' → logprob: -14.625102996826172
    10. '           ' → logprob: -14.875102996826172

Token 875: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.48099344968795776
    2. '       ' → logprob: -0.9809934496879578
    3. ' for' → logprob: -4.980993270874023
    4. '   ' → logprob: -10.605993270874023
    5. '	for' → logprob: -15.355993270874023
    6. ' ' → logprob: -15.855993270874023
    7. '```' → logprob: -16.230993270874023
    8. '           ' → logprob: -16.605993270874023
    9. '      ' → logprob: -16.605993270874023
    10. '    ' → logprob: -17.355993270874023

Token 876: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -1.306760805164231e-05
    2. ' dataset' → logprob: -11.25001335144043
    3. 'data' → logprob: -16.75001335144043
    4. '   ' → logprob: -21.87501335144043
    5. 'Dataset' → logprob: -22.50001335144043
    6. '.dataset' → logprob: -22.75001335144043
    7. '_dataset' → logprob: -22.75001335144043
    8. '(dataset' → logprob: -23.00001335144043
    9. 'datum' → logprob: -23.25001335144043
    10. 'dat' → logprob: -24.00001335144043

Token 877: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018152983859181404
    2. 'in' → logprob: -4.018153190612793
    3. '_in' → logprob: -13.893153190612793
    4. '	in' → logprob: -14.018153190612793
    5. ',' → logprob: -15.018153190612793
    6. '       ' → logprob: -15.268153190612793
    7. '        ' → logprob: -15.643153190612793
    8. 'import' → logprob: -16.018152236938477
    9. '   ' → logprob: -16.643152236938477
    10. 'In' → logprob: -16.893152236938477

Token 878: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019289902411401272
    2. ' self' → logprob: -6.251928806304932
    3. '       ' → logprob: -15.25192928314209
    4. '(self' → logprob: -16.501928329467773
    5. '           ' → logprob: -17.001928329467773
    6. '   ' → logprob: -19.876928329467773
    7. '	self' → logprob: -21.376928329467773
    8. '               ' → logprob: -21.751928329467773
    9. '=self' → logprob: -22.751928329467773
    10. 'this' → logprob: -23.001928329467773

Token 879: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.0005532711511477828
    2. 'input' → logprob: -7.500553131103516
    3. '.' → logprob: -15.125553131103516
    4. '   ' → logprob: -17.625553131103516
    5. ' .' → logprob: -17.750553131103516
    6. '=input' → logprob: -17.750553131103516
    7. '<input' → logprob: -17.875553131103516
    8. ' input' → logprob: -18.125553131103516
    9. '.in' → logprob: -18.750553131103516
    10. '       ' → logprob: -18.750553131103516

Token 880: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -0.0007942587835714221
    2. '._' → logprob: -7.250794410705566
    3. '_.' → logprob: -11.000794410705566
    4. 's' → logprob: -11.000794410705566
    5. 'Parser' → logprob: -11.375794410705566
    6. '   ' → logprob: -11.500794410705566
    7. '_' → logprob: -11.625794410705566
    8. '.' → logprob: -12.125794410705566
    9. '__' → logprob: -13.125794410705566
    10. 'parser' → logprob: -13.250794410705566

Token 881: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -14.500000953674316
    3. '().' → logprob: -14.750000953674316
    4. 'parse' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.375001907348633
    6. ' .' → logprob: -17.250001907348633
    7. '       ' → logprob: -20.125001907348633
    8. ').' → logprob: -20.625001907348633
    9. '	parse' → logprob: -21.000001907348633
    10. '.Parse' → logprob: -21.625001907348633

Token 882: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.236549335066229e-05
    2. '():
' → logprob: -11.250021934509277
    3. ' ():' → logprob: -12.000021934509277
    4. '()' → logprob: -13.375021934509277
    5. ':' → logprob: -13.875021934509277
    6. '(' → logprob: -15.250021934509277
    7. '(dataset' → logprob: -15.250021934509277
    8. '):' → logprob: -16.125022888183594
    9. '():
' → logprob: -17.125022888183594
    10. '(":' → logprob: -18.250022888183594

Token 883: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.613945101387799e-05
    2. '       ' → logprob: -9.500085830688477
    3. 'result' → logprob: -12.625085830688477
    4. 'self' → logprob: -12.750085830688477
    5. '```' → logprob: -12.875085830688477
    6. '               ' → logprob: -14.750085830688477
    7. '<|end|>' → logprob: -14.750085830688477
    8. ':' → logprob: -15.375085830688477
    9. ',' → logprob: -15.750085830688477
    10. '	       ' → logprob: -15.750085830688477

Token 884: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.014210401102900505
    2. '           ' → logprob: -4.514210224151611
    3. ' result' → logprob: -5.764210224151611
    4. 'res' → logprob: -11.51421070098877
    5. 'expected' → logprob: -11.88921070098877
    6. '_result' → logprob: -14.13921070098877
    7. '               ' → logprob: -14.38921070098877
    8. '	result' → logprob: -14.63921070098877
    9. '   ' → logprob: -15.26421070098877
    10. 'total' → logprob: -15.63921070098877

Token 885: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048054322600365
    2. '=' → logprob: -4.511047840118408
    3. '        ' → logprob: -16.63604736328125
    4. '_result' → logprob: -16.76104736328125
    5. '=result' → logprob: -16.88604736328125
    6. '       ' → logprob: -17.26104736328125
    7. '   ' → logprob: -17.76104736328125
    8. ' ' → logprob: -18.01104736328125
    9. '           ' → logprob: -18.01104736328125
    10. '=self' → logprob: -18.01104736328125

Token 886: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002478273818269372
    2. ' self' → logprob: -6.002478122711182
    3. '           ' → logprob: -12.87747859954834
    4. '               ' → logprob: -17.127477645874023
    5. '(self' → logprob: -17.502477645874023
    6. '=self' → logprob: -19.752477645874023
    7. '	self' → logprob: -20.002477645874023
    8. '       ' → logprob: -20.502477645874023
    9. '   ' → logprob: -20.627477645874023
    10. '                   ' → logprob: -20.752477645874023

Token 887: '.pro' (ID: 3231)
  Prédit: '.pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -3.392824874026701e-05
    2. 'prote' → logprob: -10.62503433227539
    3. ' .' → logprob: -12.25003433227539
    4. '.' → logprob: -13.62503433227539
    5. '   ' → logprob: -13.75003433227539
    6. '           ' → logprob: -13.87503433227539
    7. '       ' → logprob: -14.00003433227539
    8. 'pro' → logprob: -15.37503433227539
    9. 'protect' → logprob: -16.50003433227539
    10. '..' → logprob: -16.62503433227539

Token 888: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -7.85104202805087e-05
    2. 'tect' → logprob: -10.000078201293945
    3. 't' → logprob: -10.875078201293945
    4. 'ctor' → logprob: -12.250078201293945
    5. 'tec' → logprob: -12.375078201293945
    6. 'ct' → logprob: -13.125078201293945
    7. 'text' → logprob: -13.875078201293945
    8. 'tection' → logprob: -14.750078201293945
    9. 'lector' → logprob: -15.500078201293945
    10. 'prote' → logprob: -15.500078201293945

Token 889: 'ctor' (ID: 4558)
  Prédit: 'ctor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctor' → logprob: -1.4259644558478612e-05
    2. 'ct' → logprob: -11.250014305114746
    3. 'tor' → logprob: -14.500014305114746
    4. 'ector' → logprob: -14.625014305114746
    5. 'te' → logprob: -16.00001335144043
    6. 'cter' → logprob: -17.12501335144043
    7. 'cctor' → logprob: -17.25001335144043
    8. 'CTOR' → logprob: -17.50001335144043
    9. 'c' → logprob: -17.75001335144043
    10. 'ction' → logprob: -17.87501335144043

Token 890: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -4.36574100604048e-06
    2. 'strategy' → logprob: -12.375004768371582
    3. 'Strategy' → logprob: -17.000003814697266
    4. 'strateg' → logprob: -19.875003814697266
    5. ' strategy' → logprob: -20.125003814697266
    6. '_str' → logprob: -20.625003814697266
    7. '   ' → logprob: -21.000003814697266
    8. 'strategie' → logprob: -21.250003814697266
    9. '.strategy' → logprob: -21.625003814697266
    10. 'ator' → logprob: -21.750003814697266

Token 891: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -16.0
    3. '.max' → logprob: -16.125
    4. ' .' → logprob: -17.375
    5. 'min' → logprob: -18.375
    6. ':min' → logprob: -18.75
    7. '.Min' → logprob: -19.25
    8. '=min' → logprob: -19.625
    9. ',min' → logprob: -19.875
    10. '.optimize' → logprob: -19.875

Token 892: 'imize' (ID: 16368)
  Prédit: 'imize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imize' → logprob: -3.214019307051785e-05
    2. 'im' → logprob: -11.000032424926758
    3. 'imal' → logprob: -11.625032424926758
    4. 'imiz' → logprob: -13.000032424926758
    5. 'imized' → logprob: -13.500032424926758
    6. '_im' → logprob: -14.250032424926758
    7. 'imise' → logprob: -14.375032424926758
    8. '_' → logprob: -15.125032424926758
    9. '```' → logprob: -15.375032424926758
    10. 'ize' → logprob: -15.500032424926758

Token 893: '_expected' (ID: 79906)
  Prédit: '_expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expected' → logprob: -4.320199877838604e-07
    2. 'expected' → logprob: -15.0
    3. '_possible' → logprob: -16.5
    4. '_requested' → logprob: -18.375
    5. '_' → logprob: -18.5
    6. '_current' → logprob: -18.875
    7. '_existing' → logprob: -19.0
    8. '_total' → logprob: -19.0
    9. 'Expected' → logprob: -19.5
    10. '_required' → logprob: -19.625

Token 894: '_attack' (ID: 118945)
  Prédit: '_attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attack' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -13.375003814697266
    3. '_att' → logprob: -13.750003814697266
    4. 'attack' → logprob: -14.500003814697266
    5. '_expected' → logprob: -14.625003814697266
    6. ' attack' → logprob: -18.500003814697266
    7. '_at' → logprob: -19.000003814697266
    8. '_ATTACK' → logprob: -19.250003814697266
    9. ' _' → logprob: -19.625003814697266
    10. '_attention' → logprob: -19.750003814697266

Token 895: '(dataset' (ID: 67333)
  Prédit: '(dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dataset' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -15.250004768371582
    4. '(data' → logprob: -17.125003814697266
    5. '(
' → logprob: -17.625003814697266
    6. '(device' → logprob: -18.500003814697266
    7. '   ' → logprob: -18.750003814697266
    8. '(ds' → logprob: -18.750003814697266
    9. '```' → logprob: -19.000003814697266
    10. '(d' → logprob: -19.125003814697266

Token 896: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.060456421226263046
    2. '           ' → logprob: -3.1854565143585205
    3. ')' → logprob: -4.060456275939941
    4. ')
' → logprob: -10.685456275939941
    5. '               ' → logprob: -11.185456275939941
    6. '       ' → logprob: -11.810456275939941
    7. ' )
' → logprob: -11.810456275939941
    8. '          ' → logprob: -13.310456275939941
    9. '            
' → logprob: -13.310456275939941
    10. '
' → logprob: -13.560456275939941

Token 897: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014239625306800008
    2. 'self' → logprob: -8.875142097473145
    3. '       ' → logprob: -13.250142097473145
    4. ' self' → logprob: -14.625142097473145
    5. '               ' → logprob: -15.875142097473145
    6. '   ' → logprob: -16.62514305114746
    7. '          ' → logprob: -17.00014305114746
    8. '		' → logprob: -17.37514305114746
    9. '            
' → logprob: -18.00014305114746
    10. '                   ' → logprob: -18.37514305114746

Token 898: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.38735392689704895
    2. '           ' → logprob: -1.1373538970947266
    3. ' self' → logprob: -7.637353897094727
    4. '       ' → logprob: -15.137353897094727
    5. '   ' → logprob: -15.512353897094727
    6. '               ' → logprob: -15.887353897094727
    7. '(self' → logprob: -16.762353897094727
    8. '          ' → logprob: -17.762353897094727
    9. '	self' → logprob: -17.762353897094727
    10. '[self' → logprob: -18.637353897094727

Token 899: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -1.1472419600977446e-06
    2. 'output' → logprob: -13.750000953674316
    3. '.input' → logprob: -17.125001907348633
    4. '_output' → logprob: -17.375001907348633
    5. '.' → logprob: -17.500001907348633
    6. '._' → logprob: -18.500001907348633
    7. '	output' → logprob: -19.625001907348633
    8. '$output' → logprob: -20.125001907348633
    9. ' .' → logprob: -20.625001907348633
    10. '.result' → logprob: -20.750001907348633

Token 900: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -3.47626737493556e-05
    2. '_parser' → logprob: -10.75003433227539
    3. '_writer' → logprob: -12.12503433227539
    4. '_output' → logprob: -12.50003433227539
    5. '_print' → logprob: -13.50003433227539
    6. 'Printer' → logprob: -13.75003433227539
    7. 'printer' → logprob: -14.37503433227539
    8. '_formatter' → logprob: -15.62503433227539
    9. '   ' → logprob: -15.75003433227539
    10. '._' → logprob: -16.00003433227539

Token 901: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.0007855643052607775
    2. 'int' → logprob: -7.2507853507995605
    3. 'output' → logprob: -9.750785827636719
    4. '_inter' → logprob: -11.500785827636719
    5. 'ointer' → logprob: -13.500785827636719
    6. '   ' → logprob: -13.750785827636719
    7. 'ot' → logprob: -14.000785827636719
    8. '_output' → logprob: -14.125785827636719
    9. 'iter' → logprob: -14.375785827636719
    10. '_int' → logprob: -14.625785827636719

Token 902: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -2.2007883671903983e-05
    2. '.' → logprob: -10.750021934509277
    3. 'print' → logprob: -15.125021934509277
    4. ' .' → logprob: -16.375022888183594
    5. '._' → logprob: -17.000022888183594
    6. '.println' → logprob: -18.250022888183594
    7. '.save' → logprob: -19.000022888183594
    8. '.
' → logprob: -19.250022888183594
    9. '_print' → logprob: -19.375022888183594
    10. '.write' → logprob: -19.500022888183594

Token 903: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.375
    3. 'result' → logprob: -16.75
    4. '(result' → logprob: -17.875
    5. '_results' → logprob: -17.875
    6. 's' → logprob: -18.5
    7. '_RESULT' → logprob: -19.375
    8. '_res' → logprob: -19.75
    9. '(_' → logprob: -19.875
    10. ' _' → logprob: -20.5

Token 904: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -8.895480277715251e-06
    2. '(' → logprob: -12.000008583068848
    3. 'result' → logprob: -13.500008583068848
    4. '(
' → logprob: -13.875008583068848
    5. '(results' → logprob: -15.250008583068848
    6. '(resultado' → logprob: -17.125009536743164
    7. '=result' → logprob: -17.875009536743164
    8. ' (' → logprob: -18.250009536743164
    9. '(res' → logprob: -18.625009536743164
    10. ' result' → logprob: -18.750009536743164

Token 905: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021646523382514715
    2. '()' → logprob: -6.502164840698242
    3. '())' → logprob: -7.502164840698242
    4. ')
' → logprob: -10.002164840698242
    5. '<|end|>' → logprob: -10.002164840698242
    6. '()
' → logprob: -11.752164840698242
    7. '       ' → logprob: -12.377164840698242
    8. ' )' → logprob: -13.127164840698242
    9. '(' → logprob: -13.752164840698242
    10. '           ' → logprob: -14.502164840698242

Token 906: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002681304467841983
    2. '```' → logprob: -8.75026798248291
    3. ' if' → logprob: -9.87526798248291
    4. 'def' → logprob: -10.12526798248291
    5. '#' → logprob: -11.25026798248291
    6. '
' → logprob: -12.62526798248291
    7. 'import' → logprob: -14.00026798248291
    8. '#!/' → logprob: -15.12526798248291
    9. '  
' → logprob: -15.75026798248291
    10. '    
' → logprob: -15.87526798248291

Token 907: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0009357591043226421
    2. ' run' → logprob: -7.2509355545043945
    3. 'main' → logprob: -9.000935554504395
    4. '_main' → logprob: -9.625935554504395
    5. '_' → logprob: -11.125935554504395
    6. ' _' → logprob: -11.625935554504395
    7. ' __' → logprob: -12.250935554504395
    8. '_run' → logprob: -12.625935554504395
    9. ' solve' → logprob: -13.625935554504395
    10. '__' → logprob: -13.875935554504395

Token 908: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.511406809295295e-06
    2. '():
' → logprob: -12.125006675720215
    3. ' ():' → logprob: -14.250006675720215
    4. '()' → logprob: -14.875006675720215
    5. '():
' → logprob: -17.3750057220459
    6. '():

' → logprob: -19.5000057220459
    7. '()->' → logprob: -20.2500057220459
    8. '()>' → logprob: -20.5000057220459
    9. '().' → logprob: -20.7500057220459
    10. '(' → logprob: -21.1250057220459

Token 909: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004938193131238222
    2. ' input' → logprob: -5.629938125610352
    3. 'input' → logprob: -6.754938125610352
    4. ' parser' → logprob: -9.129938125610352
    5. '   ' → logprob: -9.879938125610352
    6. 'import' → logprob: -12.629938125610352
    7. 'parser' → logprob: -12.879938125610352
    8. ' stdin' → logprob: -13.379938125610352
    9. 'stdin' → logprob: -13.629938125610352
    10. ' import' → logprob: -13.754938125610352

Token 910: ' solver' (ID: 63271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3318903148174286
    2. 'parser' → logprob: -1.331890344619751
    3. 'import' → logprob: -4.581890106201172
    4. '   ' → logprob: -5.331890106201172
    5. ' parser' → logprob: -6.956890106201172
    6. ' input' → logprob: -6.956890106201172
    7. 'solver' (adapté à ' solver') → logprob: -6.956890106201172
    8. 'if' → logprob: -7.706890106201172
    9. 'stdin' → logprob: -10.081890106201172
    10. 'from' → logprob: -10.581890106201172

Token 911: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02613331750035286
    2. '=' → logprob: -3.7761332988739014
    3. '   ' → logprob: -6.0261335372924805
    4. '.' → logprob: -7.9011335372924805
    5. ')' → logprob: -10.52613353729248
    6. '(' → logprob: -11.15113353729248
    7. '.solve' → logprob: -11.27613353729248
    8. '    ' → logprob: -11.52613353729248
    9. '  ' → logprob: -12.02613353729248
    10. ' ' → logprob: -12.77613353729248

Token 912: ' Princess' (ID: 46404)
  Prédit: 'Princess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Princess' → logprob: -0.06197104603052139
    2. ' Princess' → logprob: -2.8119709491729736
    3. 'Prin' → logprob: -12.811970710754395
    4. ' princess' → logprob: -14.936970710754395
    5. 'Prince' → logprob: -16.43697166442871
    6. 'Principal' → logprob: -16.93697166442871
    7. 'Pr' → logprob: -17.06197166442871
    8. '_Pr' → logprob: -17.18697166442871
    9. ' Prin' → logprob: -17.68697166442871
    10. ' Princes' → logprob: -17.68697166442871

Token 913: 'Marriage' (ID: 191584)
  Prédit: 'Marriage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Marriage' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.750000953674316
    3. ' Marriage' → logprob: -16.125
    4. 'Mar' → logprob: -16.875
    5. '```' → logprob: -16.875
    6. 'Solver' → logprob: -17.0
    7. '
' → logprob: -17.375
    8. '`' → logprob: -17.5
    9. 'M' → logprob: -17.625
    10. '_M' → logprob: -17.625

Token 914: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.6240566083070007e-06
    2. 'solver' → logprob: -13.750001907348633
    3. '_solver' → logprob: -15.000001907348633
    4. '
' → logprob: -17.250001907348633
    5. ' Solver' → logprob: -18.000001907348633
    6. '```' → logprob: -18.125001907348633
    7. 'Solve' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.375001907348633
    9. 'Sol' → logprob: -19.125001907348633
    10. '(S' → logprob: -19.250001907348633

Token 915: '(
' (ID: 1607)
  Prédit: '(
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.20154938101768494
    2. '(' → logprob: -1.7015494108200073
    3. '(
' → logprob: -9.701549530029297
    4. '(Standard' → logprob: -10.201549530029297
    5. 'Std' → logprob: -10.576549530029297
    6. '   ' → logprob: -12.076549530029297
    7. '(

' → logprob: -12.201549530029297
    8. '(std' → logprob: -13.701549530029297
    9. '(`
' → logprob: -15.826549530029297
    10. '(St' → logprob: -16.326549530029297

Token 916: '       ' (ID: 309)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -0.031091900542378426
    2. '       ' → logprob: -3.5310919284820557
    3. 'input' → logprob: -6.906091690063477
    4. '   ' → logprob: -8.281091690063477
    5. ' Std' → logprob: -9.656091690063477
    6. 'Input' → logprob: -10.906091690063477
    7. 'std' → logprob: -13.906091690063477
    8. 'Standard' → logprob: -14.406091690063477
    9. 'stdin' → logprob: -14.781091690063477
    10. 'Sys' → logprob: -15.406091690063477

Token 917: ' input' (ID: 3422)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -0.00043496055877767503
    2. 'input' (adapté à ' input') → logprob: -7.750434875488281
    3. ' Std' → logprob: -12.625434875488281
    4. 'Sys' → logprob: -14.750434875488281
    5. '   ' → logprob: -15.875434875488281
    6. 'Input' → logprob: -16.25043487548828
    7. 'std' → logprob: -16.87543487548828
    8. '       ' → logprob: -16.87543487548828
    9. 'Standard' → logprob: -17.37543487548828
    10. 'St' → logprob: -17.50043487548828

Token 918: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -0.00018530222587287426
    2. 'Parser' → logprob: -8.625185012817383
    3. '=' → logprob: -12.625185012817383
    4. 'parser' → logprob: -13.500185012817383
    5. '_' → logprob: -14.375185012817383
    6. '=_' → logprob: -15.375185012817383
    7. '_input' → logprob: -16.625185012817383
    8. '\' → logprob: -17.250185012817383
    9. '   ' → logprob: -17.500185012817383
    10. '_=' → logprob: -17.625185012817383

Token 919: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: 0.0
    2. '   ' → logprob: -18.625
    3. '=
' → logprob: -18.625
    4. 'Std' → logprob: -19.375
    5. '=sys' → logprob: -19.375
    6. '=

' → logprob: -20.0
    7. ' =' → logprob: -20.125
    8. '=None' → logprob: -20.25
    9. '=_' → logprob: -21.5
    10. '=`' → logprob: -21.625

Token 920: 'Std' (ID: 37829)
  Prédit: 'Std'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: 0.0
    2. ' Std' → logprob: -18.375
    3. '   ' → logprob: -19.125
    4. 'std' → logprob: -20.625
    5. 'Sys' → logprob: -22.625
    6. '.Std' → logprob: -22.625
    7. '       ' → logprob: -22.75
    8. 'St' → logprob: -23.375
    9. '           ' → logprob: -24.125
    10. 'Standard' → logprob: -24.875

Token 921: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. '	Input' → logprob: -21.875
    3. ' Input' → logprob: -22.5
    4. 'Inp' → logprob: -23.25
    5. '<Input' → logprob: -24.0
    6. 'Output' → logprob: -24.125
    7. 'In' → logprob: -24.5
    8. '\Input' → logprob: -24.875
    9. '_Input' → logprob: -25.5
    10. '_input' → logprob: -25.875

Token 922: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'parser' → logprob: -20.125
    3. '_parser' → logprob: -21.0
    4. 'Printer' → logprob: -21.5
    5. '.Parser' → logprob: -22.25
    6. ' Parser' → logprob: -22.5
    7. 'Processor' → logprob: -22.5
    8. '-parser' → logprob: -23.0
    9. 'Reader' → logprob: -23.125
    10. '(Parser' → logprob: -23.625

Token 923: '(),
' (ID: 5757)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000995060196146369
    2. '(),' → logprob: -7.37599515914917
    3. '       ' → logprob: -8.125994682312012
    4. ',
' → logprob: -9.875994682312012
    5. '   ' → logprob: -11.625994682312012
    6. '(' → logprob: -11.625994682312012
    7. '(),
' → logprob: -13.750994682312012
    8. ')' → logprob: -14.250994682312012
    9. ' ,' → logprob: -14.625994682312012
    10. '()' → logprob: -15.000994682312012

Token 924: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06227273866534233
    2. 'prote' → logprob: -2.812272787094116
    3. 'protect' → logprob: -8.437273025512695
    4. 'prot' → logprob: -9.437273025512695
    5. ' protector' → logprob: -12.687273025512695
    6. '           ' → logprob: -13.187273025512695
    7. 'pro' → logprob: -13.437273025512695
    8. '   ' → logprob: -14.062273025512695
    9. 'pat' → logprob: -14.937273025512695
    10. '```' → logprob: -15.062273025512695

Token 925: ' protector' (ID: 92120)
  Prédit: 'prote'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prote' → logprob: -0.003457167884334922
    2. '       ' → logprob: -5.753457069396973
    3. 'protect' → logprob: -8.253457069396973
    4. 'prot' → logprob: -11.503457069396973
    5. 'pro' → logprob: -11.753457069396973
    6. '           ' → logprob: -14.628457069396973
    7. ' protector' → logprob: -14.753457069396973
    8. '   ' → logprob: -15.878457069396973
    9. 'protected' → logprob: -16.25345802307129
    10. 'pat' → logprob: -16.50345802307129

Token 926: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -5.9153885558771435e-06
    2. 'Strategy' → logprob: -12.125005722045898
    3. 'strategy' → logprob: -15.375005722045898
    4. '=' → logprob: -15.625005722045898
    5. '_str' → logprob: -16.5000057220459
    6. '=_' → logprob: -17.7500057220459
    7. ' strategy' → logprob: -19.5000057220459
    8. 'er' → logprob: -19.7500057220459
    9. '   ' → logprob: -19.7500057220459
    10. '
' → logprob: -19.7500057220459

Token 927: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: 0.0
    2. '=
' → logprob: -20.125
    3. '=

' → logprob: -21.0
    4. '(G' → logprob: -22.125
    5. ')=' → logprob: -23.375
    6. '=}' → logprob: -23.625
    7. '=(' → logprob: -23.75
    8. '=lambda' → logprob: -24.0
    9. '=True' → logprob: -24.125
    10. ' =' → logprob: -24.125

Token 928: 'Gre' (ID: 32147)
  Prédit: 'Gre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gre' → logprob: 0.0
    2. ' Gre' → logprob: -18.75
    3. '   ' → logprob: -22.25
    4. 'Gro' → logprob: -22.5
    5. 'Green' → logprob: -23.125
    6. '       ' → logprob: -24.75
    7. 'Gr' → logprob: -25.25
    8. 'G' → logprob: -25.5
    9. '
' → logprob: -26.125
    10. 'GRE' → logprob: -26.625

Token 929: 'edy' (ID: 12442)
  Prédit: 'edy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edy' → logprob: 0.0
    2. 'dy' → logprob: -17.0
    3. 'e' → logprob: -18.5
    4. 'ed' → logprob: -19.125
    5. 're' → logprob: -20.625
    6. 'eddy' → logprob: -21.375
    7. 'epy' → logprob: -21.5
    8. 'ady' → logprob: -21.5
    9. 'y' → logprob: -21.625
    10. 'ev' → logprob: -22.25

Token 930: 'Prote' (ID: 45643)
  Prédit: 'Prote'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prote' → logprob: -1.1472419600977446e-06
    2. 'Protect' → logprob: -13.750000953674316
    3. ' Prote' → logprob: -18.625001907348633
    4. 'Prot' → logprob: -20.500001907348633
    5. 'prote' → logprob: -20.625001907348633
    6. 'Protection' → logprob: -21.500001907348633
    7. ' Protector' → logprob: -23.250001907348633
    8. 'Pro' → logprob: -24.500001907348633
    9. ' protector' → logprob: -25.000001907348633
    10. 'P' → logprob: -25.875001907348633

Token 931: 'ctor' (ID: 4558)
  Prédit: 'ctor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctor' → logprob: -3.128163257315464e-07
    2. 'ct' → logprob: -15.375
    3. 'tor' → logprob: -17.0
    4. 'CTOR' → logprob: -18.25
    5. 'ctors' → logprob: -18.25
    6. 'ction' → logprob: -18.875
    7. 'ector' → logprob: -20.0
    8. 'cctor' → logprob: -20.0
    9. ' ctor' → logprob: -20.375
    10. 'ktor' → logprob: -21.75

Token 932: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -1.7432603272027336e-06
    2. 'Protect' → logprob: -14.000001907348633
    3. 'Prote' → logprob: -15.000001907348633
    4. 'ator' → logprob: -15.375001907348633
    5. 'Strateg' → logprob: -15.625001907348633
    6. '_strategy' → logprob: -17.250001907348633
    7. 'er' → logprob: -17.500001907348633
    8. 'strategy' → logprob: -17.500001907348633
    9. 'Str' → logprob: -18.625001907348633
    10. ' Strategy' → logprob: -18.625001907348633

Token 933: '(),
' (ID: 5757)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.301498144865036
    2. ',' → logprob: -1.4264981746673584
    3. '(),
' → logprob: -4.176497936248779
    4. '       ' → logprob: -6.301497936248779
    5. '(' → logprob: -6.426497936248779
    6. '()' → logprob: -7.551497936248779
    7. ',
' → logprob: -8.176498413085938
    8. '   ' → logprob: -8.301498413085938
    9. '(
' → logprob: -8.551498413085938
    10. '(),

' → logprob: -9.801498413085938

Token 934: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006716555915772915
    2. 'output' → logprob: -5.006716728210449
    3. ' output' → logprob: -14.00671672821045
    4. '   ' → logprob: -14.75671672821045
    5. '	output' → logprob: -18.256715774536133
    6. '      ' → logprob: -18.881715774536133
    7. '           ' → logprob: -19.256715774536133
    8. '        ' → logprob: -19.506715774536133
    9. '     ' → logprob: -19.881715774536133
    10. '_output' → logprob: -20.631715774536133

Token 935: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -9.372294698550832e-06
    2. ' output' → logprob: -11.750009536743164
    3. '       ' → logprob: -13.500009536743164
    4. '   ' → logprob: -19.000009536743164
    5. '	output' → logprob: -21.625009536743164
    6. '           ' → logprob: -23.625009536743164
    7. ' ' → logprob: -24.125009536743164
    8. '(output' → logprob: -24.250009536743164
    9. '     ' → logprob: -24.500009536743164
    10. '        ' → logprob: -24.875009536743164

Token 936: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.0015599739272147417
    2. '_parser' → logprob: -6.501560211181641
    3. 'Printer' → logprob: -10.25156021118164
    4. '_output' → logprob: -11.87656021118164
    5. '_writer' → logprob: -11.87656021118164
    6. '_formatter' → logprob: -12.12656021118164
    7. 'Pr' → logprob: -14.25156021118164
    8. '   ' → logprob: -15.12656021118164
    9. '_processor' → logprob: -15.12656021118164
    10. 'printer' → logprob: -15.25156021118164

Token 937: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -3.762356209335849e-05
    2. 'ter' → logprob: -10.75003719329834
    3. 'int' → logprob: -12.12503719329834
    4. 'iter' → logprob: -12.25003719329834
    5. '_inter' → logprob: -12.25003719329834
    6. 'n' → logprob: -15.62503719329834
    7. 'enter' → logprob: -16.125038146972656
    8. 'riter' → logprob: -16.125038146972656
    9. 'ointer' → logprob: -16.250038146972656
    10. 't' → logprob: -16.500038146972656

Token 938: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: 0.0
    2. '=
' → logprob: -20.875
    3. '=

' → logprob: -21.75
    4. '=subprocess' → logprob: -22.5
    5. '='' → logprob: -22.625
    6. '(' → logprob: -22.875
    7. '=C' → logprob: -22.875
    8. '=sys' → logprob: -23.375
    9. '=}' → logprob: -23.75
    10. '=UTF' → logprob: -24.375

Token 939: 'Std' (ID: 37829)
  Prédit: 'Std'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -3.128163257315464e-07
    2. ' Std' → logprob: -15.25
    3. '   ' → logprob: -21.625
    4. 'Sys' → logprob: -22.25
    5. '.Std' → logprob: -22.875
    6. '
' → logprob: -23.125
    7. ' ' → logprob: -23.875
    8. '       ' → logprob: -24.375
    9. 'std' → logprob: -24.625
    10. '     ' → logprob: -24.75

Token 940: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. 'Out' → logprob: -16.75
    3. '	Output' → logprob: -19.25
    4. ' Output' → logprob: -20.0
    5. 'Ou' → logprob: -20.25
    6. 'O' → logprob: -20.375
    7. '_Output' → logprob: -22.0
    8. '(Output' → logprob: -22.125
    9. '.Output' → logprob: -22.25
    10. 'Input' → logprob: -23.0

Token 941: 'Printer' (ID: 54325)
  Prédit: 'Printer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -0.0005535095697268844
    2. 'Output' → logprob: -7.500553607940674
    3. 'Parser' → logprob: -15.375553131103516
    4. 'Writer' → logprob: -16.375553131103516
    5. 'Processor' → logprob: -16.500553131103516
    6. 'printer' → logprob: -18.000553131103516
    7. 'Print' → logprob: -18.250553131103516
    8. 'Painter' → logprob: -18.625553131103516
    9. 'Prin' → logprob: -19.000553131103516
    10. 'Pr' → logprob: -19.375553131103516

Token 942: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.44312649965286255
    2. '())' → logprob: -1.1931264400482178
    3. '   ' → logprob: -2.9431264400482178
    4. '()
' → logprob: -6.568126678466797
    5. ')' → logprob: -7.568126678466797
    6. '())
' → logprob: -10.318126678466797
    7. '(),' → logprob: -10.568126678466797
    8. '(),
' → logprob: -11.443126678466797
    9. '()]' → logprob: -12.693126678466797
    10. '()),' → logprob: -12.943126678466797

Token 943: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08898047357797623
    2. ')' → logprob: -2.4639804363250732
    3. ')
' → logprob: -10.338980674743652
    4. ' ' → logprob: -12.588980674743652
    5. ' )' → logprob: -13.463980674743652
    6. '<|end|>' → logprob: -13.588980674743652
    7. '  ' → logprob: -14.463980674743652
    8. '       ' → logprob: -14.588980674743652
    9. '    
' → logprob: -15.088980674743652
    10. '	' → logprob: -15.463980674743652

Token 944: ' )
' (ID: 3270)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33512434363365173
    2. ')
' (adapté à ' )
') → logprob: -1.3351243734359741
    3. ')' → logprob: -3.8351242542266846
    4. ' ' → logprob: -11.210124015808105
    5. ')
' → logprob: -12.335124015808105
    6. '	' → logprob: -12.960124015808105
    7. ' )
' → logprob: -13.210124015808105
    8. '       ' → logprob: -13.210124015808105
    9. '    
' → logprob: -14.460124015808105
    10. '  ' → logprob: -14.710124015808105

Token 945: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02346104383468628
    2. '
' → logprob: -3.773461103439331
    3. '    
' → logprob: -8.89846134185791
    4. 'solver' → logprob: -9.52346134185791
    5. '
' → logprob: -12.77346134185791
    6. '	s' → logprob: -13.89846134185791
    7. '_solver' → logprob: -14.77346134185791
    8. '  
' → logprob: -14.89846134185791
    9. '```' → logprob: -15.02346134185791
    10. '\n' → logprob: -15.39846134185791

Token 946: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.002492183819413185
    2. '   ' → logprob: -6.0024919509887695
    3. ' solver' → logprob: -11.12749195098877
    4. '
' → logprob: -14.25249195098877
    5. '_solver' → logprob: -14.37749195098877
    6. '    
' → logprob: -15.62749195098877
    7. 'solve' → logprob: -16.252492904663086
    8. 'sol' → logprob: -16.252492904663086
    9. '	s' → logprob: -17.002492904663086
    10. '  ' → logprob: -17.127492904663086

Token 947: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -12.75000286102295
    3. 'solve' → logprob: -17.500003814697266
    4. '.run' → logprob: -18.250003814697266
    5. ' .' → logprob: -19.125003814697266
    6. '.resolve' → logprob: -19.625003814697266
    7. '.sol' → logprob: -19.625003814697266
    8. '   ' → logprob: -19.625003814697266
    9. '().' → logprob: -20.125003814697266
    10. '.
' → logprob: -20.375003814697266

Token 948: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -4.008129963040119e-06
    2. '()' → logprob: -12.500003814697266
    3. 'All' → logprob: -15.625003814697266
    4. '_' → logprob: -17.125003814697266
    5. '()
' → logprob: -17.750003814697266
    6. '_ALL' → logprob: -19.250003814697266
    7. '_All' → logprob: -19.750003814697266
    8. '_al' → logprob: -20.125003814697266
    9. '_one' → logprob: -20.500003814697266
    10. 'all' → logprob: -20.750003814697266

Token 949: '()


' (ID: 29771)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03933434933423996
    2. '<|end|>' → logprob: -3.664334297180176
    3. 'if' → logprob: -4.664334297180176
    4. '\n' → logprob: -6.539334297180176
    5. '()' → logprob: -6.914334297180176
    6. '()
' → logprob: -7.414334297180176
    7. '(
' → logprob: -8.789334297180176
    8. '```' → logprob: -9.039334297180176
    9. '<|end|>' → logprob: -10.039334297180176
    10. ' if' → logprob: -10.539334297180176

Token 950: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.0219828002154827e-05
    2. '
' → logprob: -11.875020027160645
    3. 'main' → logprob: -11.875020027160645
    4. '```' → logprob: -12.500020027160645
    5. ' if' → logprob: -13.125020027160645
    6. '<|end|>' → logprob: -15.625020027160645
    7. '#' → logprob: -16.37502098083496
    8. '	if' → logprob: -17.37502098083496
    9. '\' → logprob: -17.50002098083496
    10. '    
' → logprob: -17.50002098083496

Token 951: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5770654678344727
    2. ' __' → logprob: -0.8270654678344727
    3. 'name' → logprob: -7.827065467834473
    4. ''' → logprob: -8.077065467834473
    5. ' ' → logprob: -9.077065467834473
    6. '_' → logprob: -9.077065467834473
    7. ' ' → logprob: -9.952065467834473
    8. '"' → logprob: -10.077065467834473
    9. '_name' → logprob: -10.327065467834473
    10. '___' → logprob: -11.202065467834473

Token 952: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3734990954399109
    2. '==' → logprob: -1.2484991550445557
    3. ' ==' → logprob: -3.8734991550445557
    4. '=='' → logprob: -6.123498916625977
    5. '=="' → logprob: -6.748498916625977
    6. 'name' → logprob: -8.123498916625977
    7. '=' → logprob: -9.623498916625977
    8. '[' → logprob: -9.998498916625977
    9. ' __' → logprob: -10.248498916625977
    10. '_' → logprob: -10.373498916625977

Token 953: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00011236425780225545
    2. '==' → logprob: -9.125112533569336
    3. '=="' → logprob: -13.375112533569336
    4. ' ==' → logprob: -13.500112533569336
    5. '__.__' → logprob: -15.625112533569336
    6. 'name' → logprob: -16.625112533569336
    7. '=='' → logprob: -17.125112533569336
    8. '_' → logprob: -17.250112533569336
    9. '__.' → logprob: -18.125112533569336
    10. '___' → logprob: -18.125112533569336

Token 954: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07973287254571915
    2. '==' → logprob: -2.579732894897461
    3. ' ==' → logprob: -7.329732894897461
    4. '=="' → logprob: -8.829732894897461
    5. '=='' → logprob: -10.329732894897461
    6. '===' → logprob: -12.829732894897461
    7. '=' → logprob: -13.079732894897461
    8. '__.__' → logprob: -13.329732894897461
    9. '___' → logprob: -14.704732894897461
    10. '.__' → logprob: -15.204732894897461

Token 955: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3132663369178772
    2. ''' → logprob: -1.3132662773132324
    3. '__' → logprob: -13.06326675415039
    4. ' "__' → logprob: -13.06326675415039
    5. ' '__' → logprob: -15.06326675415039
    6. ''"' → logprob: -16.93826675415039
    7. '"name' → logprob: -17.31326675415039
    8. '   ' → logprob: -17.43826675415039
    9. ''name' → logprob: -17.81326675415039
    10. '"user' → logprob: -17.93826675415039

Token 956: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002659847668837756
    2. '__' → logprob: -8.250266075134277
    3. 'name' → logprob: -12.750266075134277
    4. '_main' → logprob: -13.375266075134277
    5. ' main' → logprob: -15.375266075134277
    6. '"' → logprob: -17.12526512145996
    7. 'py' → logprob: -18.50026512145996
    8. '-main' → logprob: -18.50026512145996
    9. 'python' → logprob: -18.87526512145996
    10. 'm' → logprob: -19.25026512145996

Token 957: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.25197339057922363
    2. '__' → logprob: -1.5019733905792236
    3. '__':
' → logprob: -10.251973152160645
    4. '_' → logprob: -11.751973152160645
    5. '__:' → logprob: -15.126973152160645
    6. '__["' → logprob: -15.251973152160645
    7. '__.__' → logprob: -15.876973152160645
    8. '__",' → logprob: -15.876973152160645
    9. '__
' → logprob: -16.25197410583496
    10. '__
' → logprob: -16.37697410583496

Token 958: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.27113598585128784
    2. '__' → logprob: -1.5211360454559326
    3. ''' → logprob: -4.0211358070373535
    4. 'main' → logprob: -7.1461358070373535
    5. '   ' → logprob: -8.771136283874512
    6. '__":
' → logprob: -9.771136283874512
    7. ' "__' → logprob: -10.896136283874512
    8. '____' → logprob: -10.896136283874512
    9. '___' → logprob: -11.646136283874512
    10. '_main' → logprob: -11.896136283874512

Token 959: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.0
    3. '	main' → logprob: -23.5
    4. '(main' → logprob: -26.375
    5. '.main' → logprob: -26.5
    6. '_main' → logprob: -26.625
    7. 'import' → logprob: -27.875
    8. '   ' → logprob: -29.25
    9. 'Main' → logprob: -30.375
    10. 'mai' → logprob: -30.75

Token 960: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 958
Tokens correctement prédits (1ère position, stricte): 416
Tokens correctement prédits (1ère position, avec adaptation): 466
Tokens correctement prédits (top 10): 787
Précision stricte (1ère position): 43.42%
Précision adaptée (1ère position): 48.64%
Précision (top 10): 82.15%
================================================================================
