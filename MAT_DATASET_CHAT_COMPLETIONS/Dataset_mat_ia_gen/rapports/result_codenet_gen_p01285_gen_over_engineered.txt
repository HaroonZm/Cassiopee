================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Tuple, Optional
import sys
import math

class Point:
    def __init__(self, x: float, y: float):
        self.x = x
        self.y = y

    def distance_to_line(self, line: 'Line') -> float:
        return line.distance_to_point(self)

    def __repr__(self):
        return f"Point({self.x:.10f}, {self.y:.10f})"

class Line(ABC):
    @abstractmethod
    def distance_to_point(self, point: Point) -> float:
        pass

    @abstractmethod
    def normal_vector(self) -> Tuple[float,float]:
        pass

class EuclideanLine(Line):
    def __init__(self, p1: Point, p2: Point):
        self.p1 = p1
        self.p2 = p2
        self._A = p2.y - p1.y
        self._B = p1.x - p2.x
        self._C = -(self._A * p1.x + self._B * p1.y)
        self._normalize()

    def _normalize(self):
        norm = math.hypot(self._A, self._B)
        if norm == 0:
            self._A = self._B = self._C = 0.0
        else:
            self._A /= norm
            self._B /= norm
            self._C /= norm

    def distance_to_point(self, point: Point) -> float:
        # Distance = |A x + B y + C| / sqrt(A^2 + B^2) but normalized already
        return abs(self._A * point.x + self._B * point.y + self._C)

    def normal_vector(self) -> Tuple[float,float]:
        return (self._A, self._B)

    def __repr__(self):
        return f"Line(A={self._A:.10f}, B={self._B:.10f}, C={self._C:.10f})"

class SystemOfEqualDistance(ABC):
    @abstractmethod
    def find_point(self) -> Optional[Point]:
        pass

    @abstractmethod
    def has_multiple_solutions(self) -> bool:
        pass

class EqualDistanceFromLinesSolver(SystemOfEqualDistance):
    def __init__(self, lines: List[EuclideanLine]):
        self.lines = lines

    def find_point(self) -> Optional[Point]:
        # If only one line, infinite points at same distance (distance == distance to line)
        n = len(self.lines)
        if n == 0:
            return None
        if n == 1:
            # Many points equally distant to one line (distance is arbitrary)
            return None

        # We want: distance(point, line_i) == distance(point, line_j) for all i,j
        # Using line_0 as reference:
        # |A_i x + B_i y + C_i| = |A_0 x + B_0 y + C_0| for all i
        # Which can be written as:
        # (A_i x + B_i y + C_i)^2 = (A_0 x + B_0 y + C_0)^2

        # Define f_i(x,y) = (A_i x + B_i y + C_i)^2 - (A_0 x + B_0 y + C_0)^2 = 0

        # This is a quadratic equation in x,y

        # We'll try to reduce system and solve simultaneously:
        # f_i(x,y) = 0 for i=1,...,n-1

        # Expand f_i:

        # (A_i x + B_i y + C_i)^2 - (A_0 x + B_0 y + C_0)^2 = 0
        # = ((A_i x + B_i y + C_i) - (A_0 x + B_0 y + C_0)) *
        #   ((A_i x + B_i y + C_i) + (A_0 x + B_0 y + C_0)) = 0

        # So for each i, either:
        # (A_i - A_0) x + (B_i - B_0) y + (C_i - C_0) = 0
        # OR
        # (A_i + A_0) x + (B_i + B_0) y + (C_i + C_0) = 0

        # Each f_i = 0 defines two possible lines
        # We must find a point (x,y) satisfying one of the two lines for each i simultaneously

        # This is combinatorial (2^(n-1) possible sign patterns)

        # If n is large, 2^(n-1) is too big, but as n ≤ 100, we must find a safe way.

        # But max input is 100 lines -> huge brute force impossible.

        # Try a better approach:
        # Check if all lines are parallel to line_0: Then infinite points along a line perpendicular to them? -> Many

        # Otherwise, try a heuristic using linear system for one sign pattern

        # We will try systematic solving:

        # Each combination is choices[i] in {+1, -1} for i in 1..n-1:

        # For i=1..n-1: (A_i + s_i A_0) x + (B_i + s_i B_0) y + (C_i + s_i C_0) = 0 where s_i = choices[i]

        # We'll solve the linear system for a choice vector s

        # If a unique solution exists:

        # Check if this point satisfies all f_i=0 by the definition using absolute distances

        # Because the squared equality is equivalent to absolute value equality and the lines of constraints

        # Try all sign choices:

        # This is too large for all, but we optimize:

        # Observation: If two lines are parallel, their normals are proportional, so a special case.

        # Illegal case is no solution or many solutions

        # Algorithm:

        # 1) Check if all lines are parallel: if yes Many if not no
        # 2) Otherwise, try all sign patterns for n-1 lines (try only the two sign patterns with all + and all - to quickly check Many)
        # 3) If none of these works, print None.
        # 4) If exactly one unique solution across all sign patterns, print it.
        # 5) If more than one unique solution, print Many.

        # Because of complexity, let's try only 2 sign patterns: all + and all -

        # Because multiple solutions if solution set is a line

        # So let's implement the above simplified approach.

        base = self.lines[0]

        n = len(self.lines)
        # Check if all lines are parallel to base:
        parallel_count = 0
        for i in range(1, n):
            n0 = base.normal_vector()
            ni = self.lines[i].normal_vector()
            cross = n0[0]*ni[1] - n0[1]*ni[0]
            if abs(cross) < 1e-15:
                parallel_count += 1

        if parallel_count == n-1 and n > 1:
            # All lines parallel to base -> infinite solutions "Many"
            return None

        # Build matrices for equation based on sign pattern
        def solve_for_signs(signs: List[int]) -> Optional[Point]:
            # shape: n-1 equations
            # Each equation: (A_i + s_i A_0) x + (B_i + s_i B_0) y + (C_i + s_i C_0) = 0
            A0, B0, C0 = base._A, base._B, base._C
            rows = []
            for i, s in enumerate(signs, 1):
                li = self.lines[i]
                Ai, Bi, Ci = li._A, li._B, li._C
                a = Ai + s*A0
                b = Bi + s*B0
                c = Ci + s*C0
                rows.append((a,b,c))
            # Now solve linear system: M * [x y]^T = -C vector
            M = []
            C_vec = []
            for a,b,c in rows:
                M.append([a,b])
                C_vec.append(-c)
            # Solve Mx = C_vec with least squares or exact if possible
            # If rank < 2 no uniq solution
            det = M[0][0]*M[1][1] - M[0][1]*M[1][0] if len(M)>=2 else None

            if len(M) < 2:
                # Only one equation: line of solutions
                # We cannot define unique point; many solutions but must check consistency
                # If M empty (n=1), many solutions
                # For single line: infinite solutions
                return None

            # For n>2 lines, solve least squares
            # Check exact by normal equations
            has_exact = len(M) == 2

            if has_exact:
                if abs(det) < 1e-15:
                    # No unique solution
                    return None
                x = (C_vec[0]*M[1][1] - C_vec[1]*M[0][1]) / det
                y = (M[0][0]*C_vec[1] - M[1][0]*C_vec[0]) / det
                return Point(x,y)
            else:
                # More than 2 equations: solve least squares
                # Use numpy if allowed else solve manually via normal equations

                # Manual normal equations:
                AtA = [[0.0,0.0],[0.0,0.0]]
                Atb = [0.0,0.0]
                for (a,b),c in zip(M,C_vec):
                    AtA[0][0] += a*a
                    AtA[0][1] += a*b
                    AtA[1][0] += b*a
                    AtA[1][1] += b*b
                    Atb[0] += a*c
                    Atb[1] += b*c

                det2 = AtA[0][0]*AtA[1][1] - AtA[0][1]*AtA[1][0]
                if abs(det2) < 1e-15:
                    return None

                x = (Atb[0]*AtA[1][1] - Atb[1]*AtA[0][1]) / det2
                y = (AtA[0][0]*Atb[1] - AtA[1][0]*Atb[0]) / det2
                return Point(x,y)

        candidates = []
        # Try sign patterns: all +1 and all -1
        for pattern in [[1]*(len(self.lines)-1), [-1]*(len(self.lines)-1)]:
            pt = solve_for_signs(pattern)
            if pt is None:
                continue

            # Check if pt is equally distant to all lines with tolerance 1e-7
            dist0 = self.lines[0].distance_to_point(pt)
            ok = True
            for line in self.lines[1:]:
                dist = line.distance_to_point(pt)
                if abs(dist - dist0) > 1e-7:
                    ok = False
                    break
            if ok:
                candidates.append(pt)

        if len(candidates) == 0:
            # No solution with patterns tried => None
            return None

        # Check if multiple distinct candidate points
        def close(p1: Point, p2: Point) -> bool:
            return abs(p1.x - p2.x) < 1e-7 and abs(p1.y - p2.y) < 1e-7

        unique_pts = []
        for c in candidates:
            if not any(close(c, up) for up in unique_pts):
                unique_pts.append(c)

        if len(unique_pts) > 1:
            # More than one distinct solution => Many
            return None

        return unique_pts[0]

    def has_multiple_solutions(self) -> bool:
        # Because find_point returns None for None or Many, we detect Many as None with some internal logic
        # This interface would need extra info; so we don't implement here
        return False


class DatasetParser:
    def __init__(self, input_stream):
        self.input_stream = input_stream

    def __iter__(self):
        return self

    def __next__(self) -> Optional[List[EuclideanLine]]:
        line = ''
        while True:
            line = self.input_stream.readline()
            if line == '':
                raise StopIteration
            line=line.strip()
            if line != '':
                break
        if line == '0':
            raise StopIteration
        n = int(line)
        points = []
        total_coords = n*4
        while len(points) < total_coords:
            line2 = ''
            while True:
                line2 = self.input_stream.readline()
                if line2 == '':
                    raise StopIteration
                line2=line2.strip()
                if line2 != '':
                    break
            points += list(map(int,line2.split()))
        # parse lines
        lines = []
        for i in range(n):
            x1 = points[4*i]
            y1 = points[4*i+1]
            x2 = points[4*i+2]
            y2 = points[4*i+3]
            p1 = Point(x1, y1)
            p2 = Point(x2, y2)
            lines.append(EuclideanLine(p1, p2))
        return lines

class ProblemCSolver:
    def __init__(self, input_stream):
        self.parser = DatasetParser(input_stream)

    def solve(self):
        for lines in self.parser:
            solver = EqualDistanceFromLinesSolver(lines)
            res = solver.find_point()
            if res is None:
                # Determine if Many or None

                # Detect all lines parallel:
                base = lines[0]
                n = len(lines)
                if n == 1:
                    # infinite solutions => Many
                    print("Many")
                    continue
                parallel_count = 0
                for i in range(1, n):
                    n0 = base.normal_vector()
                    ni = lines[i].normal_vector()
                    cross = n0[0]*ni[1] - n0[1]*ni[0]
                    if abs(cross) < 1e-15:
                        parallel_count += 1
                if parallel_count == n-1:
                    print("Many")
                else:
                    print("None")
            else:
                # print point with accuracy 1e-4
                print(f"{res.x:.4f} {res.y:.4f}")

if __name__ == "__main__":
    solver = ProblemCSolver(sys.stdin)
    solver.solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1855143904685974
    2. 'ABC' → logprob: -1.8105144500732422
    3. ' ' → logprob: -6.310514450073242
    4. 'ABCDE' → logprob: -6.935514450073242
    5. 'abc' → logprob: -7.310514450073242
    6. ' abc' → logprob: -7.685514450073242
    7. ' A' → logprob: -7.685514450073242
    8. 'import' → logprob: -8.435514450073242
    9. ' ' → logprob: -8.560514450073242
    10. 'abstract' → logprob: -8.685514450073242

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21777556836605072
    2. ',' → logprob: -1.717775583267212
    3. 'import' → logprob: -5.342775344848633
    4. '' → logprob: -5.967775344848633
    5. ':' → logprob: -6.092775344848633
    6. '```' → logprob: -6.217775344848633
    7. ' ' → logprob: -7.217775344848633
    8. ' ,' → logprob: -7.342775344848633
    9. '<|end|>' → logprob: -7.967775344848633
    10. '\' → logprob: -7.967775344848633

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.6972059607505798
    2. ' abstract' → logprob: -0.8222059607505798
    3. 'Abstract' → logprob: -2.8222060203552246
    4. ' ' → logprob: -6.822206020355225
    5. 'Meta' → logprob: -6.822206020355225
    6. '```' → logprob: -8.572205543518066
    7. '.abstract' → logprob: -8.822205543518066
    8. ' A' → logprob: -9.322205543518066
    9. ' Abstract' → logprob: -9.447205543518066
    10. ' ABC' → logprob: -10.447205543518066

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.002648071153089404
    2. 'm' → logprob: -6.002647876739502
    3. 'classmethod' → logprob: -9.50264835357666
    4. 'meth' → logprob: -10.00264835357666
    5. '_method' → logprob: -10.87764835357666
    6. 'staticmethod' → logprob: -11.75264835357666
    7. 'met' → logprob: -11.75264835357666
    8. 'me' → logprob: -12.12764835357666
    9. '_' → logprob: -12.75264835357666
    10. 'abstract' → logprob: -13.00264835357666

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47552168369293213
    2. '```' → logprob: -1.7255216836929321
    3. 'class' → logprob: -1.8505216836929321
    4. '\n' → logprob: -4.475521564483643
    5. '

' → logprob: -4.600521564483643
    6. ' class' → logprob: -5.350521564483643
    7. '' → logprob: -5.475521564483643
    8. '
' → logprob: -6.100521564483643
    9. '<|end|>' → logprob: -6.225521564483643
    10. '``' → logprob: -6.475521564483643

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27644455432891846
    2. '

' → logprob: -1.6514445543289185
    3. 'class' → logprob: -3.401444435119629
    4. '```' → logprob: -4.401444435119629
    5. '' → logprob: -6.776444435119629
    6. '
' → logprob: -7.276444435119629
    7. ' 

' → logprob: -7.776444435119629
    8. ' class' → logprob: -7.776444435119629
    9. '\n' → logprob: -8.026444435119629
    10. '``' → logprob: -8.151444435119629

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.04854433238506317
    2. ' collections' → logprob: -3.298544406890869
    3. 'typing' → logprob: -5.173544406890869
    4. ' dat' → logprob: -5.798544406890869
    5. 'collections' → logprob: -7.048544406890869
    6. ' math' → logprob: -8.423543930053711
    7. ' sys' → logprob: -8.673543930053711
    8. ' io' → logprob: -9.298543930053711
    9. ' datetime' → logprob: -9.298543930053711
    10. ' os' → logprob: -9.548543930053711

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04280390217900276
    2. 'import' → logprob: -3.292804002761841
    3. '<|end|>' → logprob: -6.042803764343262
    4. '.' → logprob: -6.542803764343262
    5. ' ' → logprob: -7.542803764343262
    6. '<|end|>' → logprob: -9.542803764343262
    7. ' as' → logprob: -9.667803764343262
    8. '[' → logprob: -9.917803764343262
    9. '```' → logprob: -10.292803764343262
    10. ' .' → logprob: -10.417803764343262

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.4760826826095581
    2. ' List' → logprob: -1.601082682609558
    3. 'Any' → logprob: -2.1010828018188477
    4. ' Union' → logprob: -3.7260828018188477
    5. ' Callable' → logprob: -4.226082801818848
    6. 'List' → logprob: -5.101082801818848
    7. ' Protocol' → logprob: -5.601082801818848
    8. ' Optional' → logprob: -6.101082801818848
    9. 'Union' → logprob: -6.851082801818848
    10. 'Callable' → logprob: -6.976082801818848

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5872132778167725
    2. '
' → logprob: -0.8372132778167725
    3. 'class' → logprob: -4.837213516235352
    4. '


' → logprob: -6.837213516235352
    5. '```' → logprob: -6.837213516235352
    6. '\n' → logprob: -7.337213516235352
    7. '
' → logprob: -8.212213516235352
    8. '``' → logprob: -9.712213516235352
    9. '`

' → logprob: -10.587213516235352
    10. '



' → logprob: -10.837213516235352

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Callable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Callable' → logprob: -1.0891209840774536
    2. ' Union' → logprob: -1.3391209840774536
    3. ' Optional' → logprob: -1.4641209840774536
    4. ' Any' → logprob: -3.089120864868164
    5. 'Optional' → logprob: -3.339120864868164
    6. 'Any' → logprob: -3.964120864868164
    7. 'Callable' → logprob: -4.089120864868164
    8. ' Protocol' → logprob: -4.589120864868164
    9. ' Tuple' → logprob: -4.589120864868164
    10. 'Union' → logprob: -4.714120864868164

Token 14: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6561242341995239
    2. '

' → logprob: -1.281124234199524
    3. '
' → logprob: -1.906124234199524
    4. '```' → logprob: -3.0311241149902344
    5. '\n' → logprob: -5.781124114990234
    6. '``' → logprob: -6.156124114990234
    7. ' class' → logprob: -8.031124114990234
    8. '


' → logprob: -8.156124114990234
    9. '
' → logprob: -8.531124114990234
    10. '<class' → logprob: -8.656124114990234

Token 15: ' Optional' (ID: 19351)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.7136119604110718
    2. ' Optional' → logprob: -2.2136120796203613
    3. ' Callable' → logprob: -2.2136120796203613
    4. ' Any' → logprob: -2.3386120796203613
    5. 'Any' → logprob: -2.7136120796203613
    6. 'Union' → logprob: -2.9636120796203613
    7. 'Optional' → logprob: -3.4636120796203613
    8. 'Callable' → logprob: -3.8386120796203613
    9. ' Protocol' → logprob: -4.463612079620361
    10. ' Dict' → logprob: -5.463612079620361

Token 16: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5244128108024597
    2. '

' → logprob: -1.6494128704071045
    3. '
' → logprob: -1.8994128704071045
    4. '```' → logprob: -2.8994128704071045
    5. '\n' → logprob: -4.649412631988525
    6. '``' → logprob: -7.524412631988525
    7. ' class' → logprob: -8.024413108825684
    8. '


' → logprob: -8.274413108825684
    9. '
' → logprob: -8.649413108825684
    10. '<class' → logprob: -8.899413108825684

Token 17: 'import' (ID: 561)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25696301460266113
    2. '
' → logprob: -1.7569630146026611
    3. '

' → logprob: -3.131963014602661
    4. '```' → logprob: -4.756962776184082
    5. '\n' → logprob: -6.756962776184082
    6. '``' → logprob: -8.256962776184082
    7. '
' → logprob: -8.881962776184082
    8. '<class' → logprob: -9.631962776184082
    9. '


' → logprob: -9.756962776184082
    10. ' class' → logprob: -10.131962776184082

Token 18: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.12661316990852356
    2. ' typing' → logprob: -2.251613140106201
    3. ' re' → logprob: -6.126613140106201
    4. ' sys' → logprob: -6.251613140106201
    5. ' numpy' → logprob: -6.251613140106201
    6. ' abc' → logprob: -6.376613140106201
    7. ' pandas' → logprob: -6.626613140106201
    8. ' math' → logprob: -6.751613140106201
    9. ' datetime' → logprob: -6.876613140106201
    10. ' dat' → logprob: -7.126613140106201

Token 19: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8078657388687134
    2. '
' → logprob: -1.1828657388687134
    3. 'class' → logprob: -1.4328657388687134
    4. '```' → logprob: -5.057865619659424
    5. '\n' → logprob: -6.557865619659424
    6. ' class' → logprob: -7.807865619659424
    7. '
' → logprob: -8.307866096496582
    8. '


' → logprob: -8.432866096496582
    9. '``' → logprob: -9.057866096496582
    10. 'import' → logprob: -9.057866096496582

Token 20: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6043398380279541
    2. 'class' → logprob: -0.9793398380279541
    3. '

' → logprob: -2.604339838027954
    4. '```' → logprob: -5.729339599609375
    5. '\n' → logprob: -8.604339599609375
    6. ' class' → logprob: -8.729339599609375
    7. 'import' → logprob: -9.104339599609375
    8. '``' → logprob: -9.604339599609375
    9. '
' → logprob: -9.729339599609375
    10. '


' → logprob: -9.854339599609375

Token 21: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.013229521922767162
    2. 'os' → logprob: -4.5132293701171875
    3. ' io' → logprob: -6.2632293701171875
    4. ' typing' → logprob: -8.888229370117188
    5. 'io' → logprob: -9.513229370117188
    6. ' pathlib' → logprob: -11.013229370117188
    7. ' traceback' → logprob: -11.263229370117188
    8. ' re' → logprob: -11.888229370117188
    9. ' subprocess' → logprob: -11.888229370117188
    10. ' argparse' → logprob: -12.388229370117188

Token 22: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.04754200950264931
    2. '
' → logprob: -3.672542095184326
    3. 'class' → logprob: -3.922542095184326
    4. '\n' → logprob: -7.547542095184326
    5. '```' → logprob: -7.922542095184326
    6. '


' → logprob: -9.047541618347168
    7. ' class' → logprob: -9.797541618347168
    8. '
' → logprob: -9.922541618347168
    9. 'import' → logprob: -10.047541618347168
    10. '\' → logprob: -11.422541618347168

Token 23: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.026196490973234177
    2. 'c' → logprob: -3.9011964797973633
    3. '
' → logprob: -5.276196479797363
    4. '```' → logprob: -8.401196479797363
    5. '\n' → logprob: -9.401196479797363
    6. '

' → logprob: -9.526196479797363
    7. '' → logprob: -10.651196479797363
    8. 'cla' → logprob: -10.651196479797363
    9. ' class' → logprob: -10.901196479797363
    10. 'cl' → logprob: -11.526196479797363

Token 24: ' Point' (ID: 9971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17988325655460358
    2. ' Abstract' → logprob: -2.8048832416534424
    3. ' Shape' → logprob: -3.3048832416534424
    4. ' Base' → logprob: -3.8048832416534424
    5. ' Basic' → logprob: -4.0548834800720215
    6. ' Space' → logprob: -4.6798834800720215
    7. ' Geometry' → logprob: -5.5548834800720215
    8. ' My' → logprob: -5.9298834800720215
    9. ' Calculator' → logprob: -6.1798834800720215
    10. ' Object' → logprob: -6.3048834800720215

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029982002452015877
    2. '(' → logprob: -3.529982089996338
    3. '):' → logprob: -9.52998161315918
    4. '<|end|>' → logprob: -10.02998161315918
    5. '():' → logprob: -10.15498161315918
    6. '(Abstract' → logprob: -10.40498161315918
    7. ':
' → logprob: -11.15498161315918
    8. ' :' → logprob: -11.40498161315918
    9. ')' → logprob: -12.40498161315918
    10. ':**' → logprob: -12.77998161315918

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46630266308784485
    2. '(' → logprob: -1.8413026332855225
    3. ':' → logprob: -1.8413026332855225
    4. ' ' → logprob: -3.3413026332855225
    5. '    ' → logprob: -4.966302871704102
    6. ' :' → logprob: -5.716302871704102
    7. '  ' → logprob: -6.216302871704102
    8. ' (' → logprob: -6.341302871704102
    9. '```' → logprob: -6.591302871704102
    10. '(object' → logprob: -7.091302871704102

Token 27: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.23830147087574005
    2. '   ' → logprob: -2.4883015155792236
    3. ' ' → logprob: -3.2383015155792236
    4. '    ' → logprob: -3.2383015155792236
    5. 'def' (adapté à ' def') → logprob: -3.2383015155792236
    6. ' )' → logprob: -5.2383012771606445
    7. ')' → logprob: -6.3633012771606445
    8. ' (' → logprob: -6.6133012771606445
    9. ' ```' → logprob: -7.6133012771606445
    10. '```' → logprob: -7.9883012771606445

Token 28: ' __' (ID: 2516)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.7642467021942139
    2. ' __' → logprob: -1.7642467021942139
    3. ' def' → logprob: -2.389246702194214
    4. 'init' → logprob: -2.514246702194214
    5. '_init' → logprob: -2.889246702194214
    6. 'itialize' → logprob: -3.139246702194214
    7. 'def' → logprob: -3.514246702194214
    8. 'nit' → logprob: -3.889246702194214
    9. '__' → logprob: -4.139246940612793
    10. 't' → logprob: -5.639246940612793

Token 29: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7432603272027336e-06
    2. 'ini' → logprob: -13.500001907348633
    3. 'in' → logprob: -16.000001907348633
    4. 'i' → logprob: -17.000001907348633
    5. 'int' → logprob: -17.625001907348633
    6. '_init' → logprob: -17.750001907348633
    7. ' init' → logprob: -18.125001907348633
    8. 'inite' → logprob: -18.625001907348633
    9. 'inti' → logprob: -18.875001907348633
    10. '	init' → logprob: -20.750001907348633

Token 30: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.46666041016578674
    2. ' (' → logprob: -1.8416603803634644
    3. '(' → logprob: -2.091660499572754
    4. '<|end|>' → logprob: -2.591660499572754
    5. '__(' → logprob: -4.716660499572754
    6. '<|end|>' → logprob: -5.966660499572754
    7. 'self' → logprob: -6.091660499572754
    8. ' self' → logprob: -7.591660499572754
    9. ')' → logprob: -8.591660499572754
    10. ' ' → logprob: -8.841660499572754

Token 31: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016432604752480984
    2. ' self' → logprob: -8.750164031982422
    3. 'x' → logprob: -12.125164031982422
    4. '(self' → logprob: -15.750164031982422
    5. '	self' → logprob: -15.750164031982422
    6. '0' → logprob: -16.750164031982422
    7. ' ' → logprob: -17.750164031982422
    8. ')' → logprob: -17.750164031982422
    9. 'sel' → logprob: -18.000164031982422
    10. '_self' → logprob: -18.625164031982422

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2522531747817993
    2. ' ,' → logprob: -1.5022531747817993
    3. 'self' → logprob: -8.627253532409668
    4. ' )' → logprob: -10.377253532409668
    5. '<|end|>' → logprob: -10.627253532409668
    6. ' self' → logprob: -10.877253532409668
    7. ')' → logprob: -11.252253532409668
    8. ' ' → logprob: -11.377253532409668
    9. '_coordinates' → logprob: -11.627253532409668
    10. ',self' → logprob: -11.627253532409668

Token 33: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8060686588287354
    2. ' self' → logprob: -1.0560686588287354
    3. 'x' → logprob: -2.0560686588287354
    4. ' x' → logprob: -2.5560686588287354
    5. ' ' → logprob: -12.806068420410156
    6. '	self' → logprob: -15.306068420410156
    7. '(self' → logprob: -15.306068420410156
    8. '```' → logprob: -15.806068420410156
    9. '   ' → logprob: -16.056068420410156
    10. '_x' → logprob: -16.306068420410156

Token 34: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03664111718535423
    2. ':' → logprob: -3.4116411209106445
    3. ')' → logprob: -7.0366411209106445
    4. '<|end|>' → logprob: -7.0366411209106445
    5. ':int' → logprob: -7.2866411209106445
    6. ' ,' → logprob: -8.036641120910645
    7. '<|end|>' → logprob: -9.161641120910645
    8. '):' → logprob: -10.161641120910645
    9. ',int' → logprob: -10.536641120910645
    10. '=' → logprob: -11.161641120910645

Token 35: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.10094176232814789
    2. 'float' → logprob: -2.3509416580200195
    3. ' int' → logprob: -7.8509416580200195
    4. 'int' → logprob: -8.10094165802002
    5. '=float' → logprob: -11.47594165802002
    6. ' ' → logprob: -11.47594165802002
    7. ' )' → logprob: -11.60094165802002
    8. '	float' → logprob: -12.72594165802002
    9. '(float' → logprob: -12.85094165802002
    10. ',float' → logprob: -13.10094165802002

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003712085890583694
    2. ' ,' → logprob: -8.250370979309082
    3. '<|end|>' → logprob: -9.875370979309082
    4. ')' → logprob: -10.250370979309082
    5. '):' → logprob: -11.250370979309082
    6. ',x' → logprob: -13.000370979309082
    7. '<|end|>' → logprob: -13.000370979309082
    8. ',int' → logprob: -13.625370979309082
    9. ',float' → logprob: -13.750370979309082
    10. ' ' → logprob: -14.500370979309082

Token 37: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10025638341903687
    2. 'y' → logprob: -2.3502564430236816
    3. ' ' → logprob: -10.100255966186523
    4. ' ' → logprob: -12.100255966186523
    5. '	y' → logprob: -13.100255966186523
    6. '<|end|>' → logprob: -14.600255966186523
    7. ')' → logprob: -15.475255966186523
    8. 'space' → logprob: -16.225255966186523
    9. ' )' → logprob: -16.850255966186523
    10. ')y' → logprob: -17.225255966186523

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012615831568837166
    2. '):' → logprob: -4.76261568069458
    3. ')' → logprob: -5.63761568069458
    4. '<|end|>' → logprob: -7.88761568069458
    5. '<|end|>' → logprob: -10.137616157531738
    6. '):
' → logprob: -12.637616157531738
    7. ' ):' → logprob: -12.762616157531738
    8. ' :' → logprob: -12.887616157531738
    9. '=' → logprob: -13.262616157531738
    10. ':int' → logprob: -13.512616157531738

Token 39: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.16488614678382874
    2. ' ' → logprob: -2.289886236190796
    3. 'float' → logprob: -3.039886236190796
    4. ' )' → logprob: -6.539885997772217
    5. ')' → logprob: -7.039885997772217
    6. '=float' → logprob: -8.539886474609375
    7. '<|end|>' → logprob: -8.664886474609375
    8. ',float' → logprob: -9.539886474609375
    9. '<float' → logprob: -10.414886474609375
    10. '_float' → logprob: -10.914886474609375

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005261629819869995
    2. ')' → logprob: -5.255261421203613
    3. ':' → logprob: -11.005261421203613
    4. ' ):' → logprob: -11.755261421203613
    5. '):
' → logprob: -13.005261421203613
    6. '   ' → logprob: -15.505261421203613
    7. ',' → logprob: -15.630261421203613
    8. ' ' → logprob: -15.880261421203613
    9. ')**' → logprob: -16.25526237487793
    10. '**' → logprob: -16.38026237487793

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006841989234089851
    2. 'self' → logprob: -8.000683784484863
    3. ' self' → logprob: -8.750683784484863
    4. ' ' → logprob: -10.000683784484863
    5. '        ' → logprob: -10.500683784484863
    6. '   ' → logprob: -10.625683784484863
    7. ')' → logprob: -11.000683784484863
    8. '```' → logprob: -11.000683784484863
    9. ' ' → logprob: -11.250683784484863
    10. ',' → logprob: -11.625683784484863

Token 42: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4013136625289917
    2. 'self' (adapté à ' self') → logprob: -1.1513136625289917
    3. '       ' → logprob: -4.276313781738281
    4. ' ' → logprob: -8.026313781738281
    5. '        ' → logprob: -9.776313781738281
    6. ' ' → logprob: -10.401313781738281
    7. '   ' → logprob: -10.651313781738281
    8. '	self' → logprob: -13.276313781738281
    9. '    ' → logprob: -13.401313781738281
    10. '     ' → logprob: -14.026313781738281

Token 43: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01417996734380722
    2. '.x' → logprob: -4.2641801834106445
    3. ' .' → logprob: -11.514180183410645
    4. '.)' → logprob: -14.014180183410645
    5. ' ' → logprob: -14.139180183410645
    6. 'x' → logprob: -14.264180183410645
    7. '<|end|>' → logprob: -14.264180183410645
    8. '.

' → logprob: -14.764180183410645
    9. '._' → logprob: -14.764180183410645
    10. '.user' → logprob: -15.014180183410645

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932055950164795
    2. ' =' → logprob: -0.6932055950164795
    3. '<|end|>' → logprob: -10.693205833435059
    4. ' ' → logprob: -11.693205833435059
    5. ',' → logprob: -11.818205833435059
    6. ')' → logprob: -12.068205833435059
    7. '<|end|>' → logprob: -12.193205833435059
    8. ' =)' → logprob: -13.068205833435059
    9. ' =
' → logprob: -13.193205833435059
    10. '=}' → logprob: -13.693205833435059

Token 45: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4740772247314453
    2. 'x' → logprob: -0.9740772247314453
    3. '	x' → logprob: -15.974077224731445
    4. ')x' → logprob: -17.099077224731445
    5. ' ' → logprob: -17.349077224731445
    6. ' ' → logprob: -18.224077224731445
    7. '(x' → logprob: -18.724077224731445
    8. '"x' → logprob: -19.849077224731445
    9. '$x' → logprob: -19.849077224731445
    10. ' float' → logprob: -20.224077224731445

Token 46: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3526862859725952
    2. '<|end|>' → logprob: -1.2276862859725952
    3. ' ' → logprob: -6.477686405181885
    4. '
' → logprob: -6.977686405181885
    5. '<|end|>' → logprob: -7.102686405181885
    6. '  ' → logprob: -8.852685928344727
    7. '   ' → logprob: -8.852685928344727
    8. '        
' → logprob: -9.102685928344727
    9. ' 
' → logprob: -9.227685928344727
    10. '        ' → logprob: -9.227685928344727

Token 47: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061778079718351364
    2. '
' → logprob: -3.6867780685424805
    3. 'self' (adapté à ' self') → logprob: -3.9367780685424805
    4. '<|end|>' → logprob: -4.3117780685424805
    5. '        
' → logprob: -7.4367780685424805
    6. '   ' → logprob: -7.5617780685424805
    7. '    
' → logprob: -8.31177806854248
    8. ' ' → logprob: -9.31177806854248
    9. ' self' → logprob: -9.43677806854248
    10. '  
' → logprob: -9.81177806854248

Token 49: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.0629870858974755e-05
    2. '.y' → logprob: -10.25006103515625
    3. '.x' → logprob: -11.62506103515625
    4. '<|end|>' → logprob: -11.75006103515625
    5. ' .' → logprob: -12.75006103515625
    6. ' ' → logprob: -13.37506103515625
    7. '<|end|>' → logprob: -13.62506103515625
    8. ')' → logprob: -13.75006103515625
    9. 'y' → logprob: -14.62506103515625
    10. '.
' → logprob: -15.12506103515625

Token 50: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931478977203369
    2. ' y' → logprob: -0.6931478977203369
    3. '	y' → logprob: -14.818147659301758
    4. ' ' → logprob: -14.818147659301758
    5. ' ' → logprob: -16.318147659301758
    6. '‘y' → logprob: -18.318147659301758
    7. ')y' → logprob: -18.568147659301758
    8. '    ' → logprob: -18.943147659301758
    9. '(y' → logprob: -19.193147659301758
    10. ''y' → logprob: -19.318147659301758

Token 52: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030930567532777786
    2. '<|end|>' → logprob: -4.155930519104004
    3. '   ' → logprob: -5.030930519104004
    4. '    
' → logprob: -5.905930519104004
    5. ' 
' → logprob: -6.655930519104004
    6. '

' → logprob: -6.905930519104004
    7. ' ' → logprob: -7.155930519104004
    8. '\n' → logprob: -7.530930519104004
    9. '```' → logprob: -7.655930519104004
    10. '' → logprob: -7.655930519104004

Token 53: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0020348725374788046
    2. '

' → logprob: -6.377034664154053
    3. ' 
' → logprob: -9.377035140991211
    4. '   ' → logprob: -9.377035140991211
    5. '    
' → logprob: -9.377035140991211
    6. '```' → logprob: -9.877035140991211
    7. 'class' → logprob: -12.127035140991211
    8. '  
' → logprob: -12.127035140991211
    9. '\n' → logprob: -12.752035140991211
    10. '
' → logprob: -13.127035140991211

Token 54: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01749299466609955
    2. ' def' → logprob: -4.892492771148682
    3. '   ' → logprob: -5.267492771148682
    4. ' ' → logprob: -6.017492771148682
    5. ' 
' → logprob: -7.392492771148682
    6. '    
' → logprob: -7.642492771148682
    7. ' 

' → logprob: -8.01749324798584
    8. 'd' → logprob: -8.64249324798584
    9. '
' → logprob: -8.64249324798584
    10. ')' → logprob: -9.89249324798584

Token 55: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.33777904510498047
    2. '_distance' → logprob: -1.9627790451049805
    3. 'distance' → logprob: -1.9627790451049805
    4. '_' → logprob: -6.5877790451049805
    5. ' ' → logprob: -6.5877790451049805
    6. ' def' → logprob: -7.0877790451049805
    7. 'Distance' → logprob: -7.5877790451049805
    8. '_dist' → logprob: -8.08777904510498
    9. ' distances' → logprob: -8.21277904510498
    10. ' ' → logprob: -8.83777904510498

Token 56: '_to' (ID: 5089)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0905420258641243
    2. '_to' → logprob: -2.5905420780181885
    3. '(self' → logprob: -4.840541839599609
    4. '<|end|>' → logprob: -6.215541839599609
    5. 'To' → logprob: -7.715541839599609
    6. '_' → logprob: -7.840541839599609
    7. 'to' → logprob: -8.09054183959961
    8. ' (' → logprob: -8.71554183959961
    9. '<|end|>' → logprob: -8.71554183959961
    10. '(to' → logprob: -10.21554183959961

Token 57: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7884092330932617
    2. '(self' → logprob: -1.0384092330932617
    3. '<|end|>' → logprob: -1.6634092330932617
    4. '<|end|>' → logprob: -6.538409233093262
    5. ' (' → logprob: -8.913409233093262
    6. '(
' → logprob: -9.038409233093262
    7. '(Point' → logprob: -10.038409233093262
    8. 'self' → logprob: -10.288409233093262
    9. '```' → logprob: -10.413409233093262
    10. ')' → logprob: -10.663409233093262

Token 58: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.17038197815418243
    2. '(' → logprob: -1.920382022857666
    3. '<|end|>' → logprob: -4.920382022857666
    4. '(
' → logprob: -6.170382022857666
    5. '(Point' → logprob: -8.670381546020508
    6. '_point' → logprob: -9.170381546020508
    7. 'self' → logprob: -9.295381546020508
    8. ' (' → logprob: -9.295381546020508
    9. '<|end|>' → logprob: -9.420381546020508
    10. '(line' → logprob: -9.795381546020508

Token 59: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5576658248901367
    2. ')' → logprob: -2.1826658248901367
    3. '(self' → logprob: -2.4326658248901367
    4. '(line' → logprob: -2.8076658248901367
    5. '<|end|>' → logprob: -3.1826658248901367
    6. ',' → logprob: -3.3076658248901367
    7. ' (' → logprob: -3.5576658248901367
    8. '(Point' → logprob: -3.8076658248901367
    9. '(point' → logprob: -4.182665824890137
    10. '_point' → logprob: -4.932665824890137

Token 60: ' line' (ID: 2543)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3858806788921356
    2. 'self' → logprob: -1.385880708694458
    3. ' other' → logprob: -3.135880708694458
    4. 'other' → logprob: -4.260880470275879
    5. ' p' → logprob: -5.135880470275879
    6. ' point' → logprob: -6.135880470275879
    7. ' line' → logprob: -6.510880470275879
    8. 'point' → logprob: -6.885880470275879
    9. ')' → logprob: -7.260880470275879
    10. 'p' → logprob: -8.260880470275879

Token 61: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6978733539581299
    2. ')' → logprob: -1.1978733539581299
    3. '):' → logprob: -1.9478733539581299
    4. ':' → logprob: -4.822873115539551
    5. '_segment' → logprob: -4.822873115539551
    6. '<|end|>' → logprob: -4.822873115539551
    7. '<|end|>' → logprob: -5.072873115539551
    8. ' ):' → logprob: -5.197873115539551
    9. '_point' → logprob: -5.697873115539551
    10. ' )' → logprob: -5.822873115539551

Token 62: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.02641698718070984
    2. ''' → logprob: -3.9014170169830322
    3. ')' → logprob: -5.901416778564453
    4. ' Tuple' → logprob: -7.276416778564453
    5. 'Tuple' → logprob: -7.651416778564453
    6. ' ' → logprob: -7.901416778564453
    7. ''T' → logprob: -8.401416778564453
    8. ' "' → logprob: -8.526416778564453
    9. ''s' → logprob: -8.651416778564453
    10. '<|end|>' → logprob: -8.651416778564453

Token 63: 'Line' (ID: 3665)
  Prédit: 'Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -0.0007790116942487657
    2. ' Line' → logprob: -7.750779151916504
    3. 'Point' → logprob: -8.125779151916504
    4. 'Linear' → logprob: -10.625779151916504
    5. 'Lin' → logprob: -12.000779151916504
    6. 'Segment' → logprob: -12.000779151916504
    7. 'Polyline' → logprob: -12.625779151916504
    8. 'line' → logprob: -13.250779151916504
    9. 'L' → logprob: -13.250779151916504
    10. 'Vector' → logprob: -13.375779151916504

Token 64: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0075377789326012135
    2. ''):' → logprob: -5.382537841796875
    3. ')' → logprob: -6.882537841796875
    4. '',' → logprob: -7.007537841796875
    5. ''' → logprob: -7.382537841796875
    6. ''):
' → logprob: -8.507537841796875
    7. 'Segment' → logprob: -9.757537841796875
    8. ' ')' → logprob: -10.257537841796875
    9. '`)' → logprob: -11.757537841796875
    10. '':' → logprob: -11.882537841796875

Token 65: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11277438700199127
    2. ')' → logprob: -2.86277437210083
    3. '):' → logprob: -4.36277437210083
    4. '->' → logprob: -4.48777437210083
    5. ',' → logprob: -4.73777437210083
    6. ' ->' → logprob: -4.73777437210083
    7. ')->' → logprob: -5.23777437210083
    8. '(' → logprob: -6.98777437210083
    9. '=' → logprob: -7.61277437210083
    10. '<|end|>' → logprob: -7.86277437210083

Token 66: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.0028105827514082193
    2. 'float' → logprob: -5.877810478210449
    3. ' Optional' → logprob: -13.25281047821045
    4. ' ' → logprob: -13.50281047821045
    5. '	float' → logprob: -13.87781047821045
    6. ' flo' → logprob: -14.37781047821045
    7. ' None' → logprob: -15.37781047821045
    8. ' ' → logprob: -15.75281047821045
    9. '(float' → logprob: -16.377811431884766
    10. '=float' → logprob: -16.502811431884766

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022690063633490354
    2. '):' → logprob: -8.625226974487305
    3. ':
' → logprob: -11.375226974487305
    4. '():' → logprob: -11.500226974487305
    5. ':**' → logprob: -12.125226974487305
    6. ' :' → logprob: -12.125226974487305
    7. ',' → logprob: -12.500226974487305
    8. '<|end|>' → logprob: -12.625226974487305
    9. ':return' → logprob: -12.750226974487305
    10. ':def' → logprob: -13.500226974487305

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017029719427227974
    2. ' ' → logprob: -4.642029762268066
    3. '        ' → logprob: -5.892029762268066
    4. '    ' → logprob: -6.017029762268066
    5. ' 
' → logprob: -7.892029762268066
    6. '   ' → logprob: -8.017029762268066
    7. '        
' → logprob: -8.392029762268066
    8. '     ' → logprob: -8.517029762268066
    9. '      ' → logprob: -8.517029762268066
    10. '0' → logprob: -9.142029762268066

Token 69: ' return' (ID: 622)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.9003342390060425
    2. 'num' → logprob: -1.4003342390060425
    3. '       ' → logprob: -1.7753342390060425
    4. ' numerator' → logprob: -2.025334358215332
    5. '   ' → logprob: -4.275334358215332
    6. 'dx' → logprob: -4.775334358215332
    7. 'return' (adapté à ' return') → logprob: -5.025334358215332
    8. 'line' → logprob: -5.275334358215332
    9. 'abs' → logprob: -5.525334358215332
    10. 'px' → logprob: -5.650334358215332

Token 70: ' line' (ID: 2543)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.6998621821403503
    2. 'abs' → logprob: -0.8248621821403503
    3. 'line' → logprob: -3.199862241744995
    4. ' line' → logprob: -3.824862241744995
    5. ' math' → logprob: -6.949862003326416
    6. ' self' → logprob: -7.699862003326416
    7. 'self' → logprob: -7.949862003326416
    8. 'math' → logprob: -7.949862003326416
    9. '(abs' → logprob: -8.824862480163574
    10. '   ' → logprob: -9.324862480163574

Token 71: '.distance' (ID: 65482)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03634687513113022
    2. '.distance' → logprob: -3.411346912384033
    3. '.get' → logprob: -7.286346912384033
    4. '.calculate' → logprob: -7.661346912384033
    5. '.point' → logprob: -7.661346912384033
    6. '.dist' → logprob: -7.911346912384033
    7. '.abs' → logprob: -8.411346435546875
    8. '.closest' → logprob: -9.536346435546875
    9. '.
' → logprob: -10.036346435546875
    10. ').' → logprob: -10.161346435546875

Token 72: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.01487466599792242
    2. '_from' → logprob: -4.389874458312988
    3. '_' → logprob: -6.514874458312988
    4. '_point' → logprob: -7.139874458312988
    5. ' _' → logprob: -10.889874458312988
    6. '_points' → logprob: -11.014874458312988
    7. '(' → logprob: -11.889874458312988
    8. '_between' → logprob: -12.014874458312988
    9. 's' → logprob: -12.139874458312988
    10. '_t' → logprob: -12.389874458312988

Token 73: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.027572693303227425
    2. '_' → logprob: -3.7775726318359375
    3. '(' → logprob: -6.0275726318359375
    4. '_(' → logprob: -6.6525726318359375
    5. '(self' → logprob: -8.902572631835938
    6. '(point' → logprob: -8.902572631835938
    7. '_p' → logprob: -9.277572631835938
    8. '(Point' → logprob: -9.652572631835938
    9. ' (' → logprob: -10.027572631835938
    10. 's' → logprob: -10.777572631835938

Token 74: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000476786372018978
    2. '(self' → logprob: -7.875476837158203
    3. '(
' → logprob: -10.500476837158203
    4. '((' → logprob: -10.625476837158203
    5. '(Point' → logprob: -10.875476837158203
    6. ' (' → logprob: -11.500476837158203
    7. '(this' → logprob: -12.000476837158203
    8. '(

' → logprob: -13.125476837158203
    9. '(x' → logprob: -13.250476837158203
    10. '(s' → logprob: -13.250476837158203

Token 75: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ' )' → logprob: -12.250005722045898
    3. ')
' → logprob: -14.750005722045898
    4. '<|end|>' → logprob: -15.500005722045898
    5. '))' → logprob: -17.0000057220459
    6. ',' → logprob: -17.2500057220459
    7. ').' → logprob: -17.3750057220459
    8. '.' → logprob: -17.7500057220459
    9. ')

' → logprob: -17.7500057220459
    10. ' ' → logprob: -17.7500057220459

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025282016023993492
    2. 'class' → logprob: -4.15028190612793
    3. ' 
' → logprob: -5.15028190612793
    4. '

' → logprob: -6.15028190612793
    5. '    
' → logprob: -8.27528190612793
    6. '   ' → logprob: -8.77528190612793
    7. '' → logprob: -8.77528190612793
    8. '  
' → logprob: -9.02528190612793
    9. ' ' → logprob: -9.27528190612793
    10. '```' → logprob: -9.52528190612793

Token 77: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.021372953429818153
    2. '   ' → logprob: -4.7713727951049805
    3. '
' → logprob: -4.8963727951049805
    4. ' ' → logprob: -6.1463727951049805
    5. ' class' → logprob: -6.2713727951049805
    6. ' 
' → logprob: -7.7713727951049805
    7. '    
' → logprob: -8.27137279510498
    8. '    ' → logprob: -8.89637279510498
    9. 'c' → logprob: -9.27137279510498
    10. '```' → logprob: -10.14637279510498

Token 78: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.11040926724672318
    2. ' __' → logprob: -2.4854092597961426
    3. ' ' → logprob: -4.860409259796143
    4. '_' → logprob: -5.110409259796143
    5. ' distance' → logprob: -5.110409259796143
    6. 'distance' → logprob: -8.3604097366333
    7. ' move' → logprob: -8.4854097366333
    8. 'def' → logprob: -8.6104097366333
    9. '__' → logprob: -8.6104097366333
    10. ' vector' → logprob: -9.2354097366333

Token 79: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.21333053708076477
    2. 'repr' → logprob: -1.9633305072784424
    3. 'str' → logprob: -2.9633305072784424
    4. 'lt' → logprob: -10.838330268859863
    5. 'e' → logprob: -10.963330268859863
    6. 'init' → logprob: -11.588330268859863
    7. 's' → logprob: -11.963330268859863
    8. 'd' → logprob: -12.713330268859863
    9. 'rep' → logprob: -13.213330268859863
    10. 'r' → logprob: -13.213330268859863

Token 80: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3224029839038849
    2. '__(' → logprob: -1.3224029541015625
    3. '__('' → logprob: -5.4474029541015625
    4. '__(
' → logprob: -5.4474029541015625
    5. '__("' → logprob: -8.322402954101562
    6. '_' → logprob: -9.697402954101562
    7. '__((' → logprob: -9.697402954101562
    8. '(' → logprob: -9.822402954101562
    9. '___' → logprob: -10.197402954101562
    10. '__(*' → logprob: -11.822402954101562

Token 81: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001805377542041242
    2. ')' → logprob: -8.6251802444458
    3. ' self' → logprob: -15.5001802444458
    4. '
' → logprob: -15.7501802444458
    5. '_self' → logprob: -15.7501802444458
    6. '')' → logprob: -17.250181198120117
    7. '(self' → logprob: -17.250181198120117
    8. 'Self' → logprob: -17.375181198120117
    9. '),' → logprob: -17.625181198120117
    10. ')
' → logprob: -17.750181198120117

Token 82: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01351524330675602
    2. '__' → logprob: -5.138515472412109
    3. '__)' → logprob: -5.888515472412109
    4. '<|end|>' → logprob: -6.013515472412109
    5. '):' → logprob: -6.888515472412109
    6. ')__' → logprob: -7.763515472412109
    7. '):
' → logprob: -8.76351547241211
    8. ').__' → logprob: -9.13851547241211
    9. 'self' → logprob: -9.26351547241211
    10. ' )' → logprob: -9.38851547241211

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017337289173156023
    2. 'return' → logprob: -7.376733779907227
    3. ' return' → logprob: -7.751733779907227
    4. ' f' → logprob: -7.751733779907227
    5. 'f' → logprob: -8.751733779907227
    6. ''' → logprob: -10.251733779907227
    7. '        ' → logprob: -10.626733779907227
    8. '      ' → logprob: -12.126733779907227
    9. '   ' → logprob: -12.251733779907227
    10. '"' → logprob: -12.376733779907227

Token 84: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07039185613393784
    2. 'f' → logprob: -2.820391893386841
    3. '       ' → logprob: -5.070391654968262
    4. ' return' → logprob: -6.320391654968262
    5. '   ' → logprob: -8.445391654968262
    6. ' f' → logprob: -9.320391654968262
    7. '```' → logprob: -13.445391654968262
    8. '           ' → logprob: -13.820391654968262
    9. '
' → logprob: -14.320391654968262
    10. '{return' → logprob: -14.445391654968262

Token 85: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.10020752996206284
    2. 'f' → logprob: -2.350207567214966
    3. ''f' → logprob: -15.100207328796387
    4. ' ' → logprob: -15.600207328796387
    5. '	f' → logprob: -16.225208282470703
    6. '(f' → logprob: -16.475208282470703
    7. '   ' → logprob: -16.850208282470703
    8. ' F' → logprob: -16.850208282470703
    9. 'F' → logprob: -16.975208282470703
    10. ''' → logprob: -17.225208282470703

Token 86: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5004075765609741
    2. '(Point' → logprob: -1.8754075765609741
    3. 'f' → logprob: -2.5004076957702637
    4. '(f' → logprob: -2.5004076957702637
    5. ''' → logprob: -3.6254076957702637
    6. '(' → logprob: -4.250407695770264
    7. 'Point' → logprob: -4.375407695770264
    8. '("' → logprob: -4.500407695770264
    9. '("("' → logprob: -5.125407695770264
    10. '<Point' → logprob: -6.250407695770264

Token 87: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0003436872211750597
    2. '(Point' → logprob: -8.250343322753906
    3. '<Point' → logprob: -10.375343322753906
    4. '"' → logprob: -10.375343322753906
    5. ' Point' → logprob: -11.875343322753906
    6. ''' → logprob: -12.625343322753906
    7. 'P' → logprob: -13.000343322753906
    8. '.Point' → logprob: -13.250343322753906
    9. '	Point' → logprob: -13.250343322753906
    10. 'Points' → logprob: -14.125343322753906

Token 88: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.018549054861068726
    2. '(' → logprob: -4.143548965454102
    3. '(x' → logprob: -6.018548965454102
    4. '{' → logprob: -11.018548965454102
    5. '(
' → logprob: -11.268548965454102
    6. '({
' → logprob: -11.268548965454102
    7. '(({' → logprob: -11.393548965454102
    8. '(self' → logprob: -11.643548965454102
    9. '(f' → logprob: -12.393548965454102
    10. '{x' → logprob: -12.518548965454102

Token 89: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1875571544806007e-05
    2. ' self' → logprob: -12.000011444091797
    3. '{' → logprob: -12.125011444091797
    4. 'sel' → logprob: -16.125011444091797
    5. 'x' → logprob: -17.750011444091797
    6. 's' → logprob: -18.625011444091797
    7. ' ' → logprob: -18.750011444091797
    8. '(self' → logprob: -19.000011444091797
    9. 'repr' → logprob: -19.125011444091797
    10. 'Self' → logprob: -19.250011444091797

Token 90: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.20143409073352814
    2. '.' → logprob: -1.7014341354370117
    3. ' .' → logprob: -11.326434135437012
    4. '.
' → logprob: -12.326434135437012
    5. '<|end|>' → logprob: -13.701434135437012
    6. ').' → logprob: -14.201434135437012
    7. ' ' → logprob: -14.576434135437012
    8. 'x' → logprob: -14.701434135437012
    9. ',' → logprob: -14.826434135437012
    10. ')' → logprob: -15.951434135437012

Token 91: ':.' (ID: 27474)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.129266067640856e-05
    2. ' ,' → logprob: -11.375020980834961
    3. ',
' → logprob: -12.000020980834961
    4. '<|end|>' → logprob: -13.750020980834961
    5. ',

' → logprob: -14.000020980834961
    6. ')' → logprob: -14.125020980834961
    7. '},' → logprob: -14.500020980834961
    8. '}' → logprob: -16.00002098083496
    9. '‌,' → logprob: -16.12502098083496
    10. ',f' → logprob: -16.25002098083496

Token 92: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20739109814167023
    2. '3' → logprob: -1.9573911428451538
    3. '6' → logprob: -3.2073910236358643
    4. '4' → logprob: -5.207391262054443
    5. '1' → logprob: -8.957390785217285
    6. '5' → logprob: -12.457390785217285
    7. ')' → logprob: -15.332390785217285
    8. '```' → logprob: -15.457390785217285
    9. '{' → logprob: -15.832390785217285
    10. ' ' → logprob: -15.957390785217285

Token 93: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.027225754223764e-05
    2. 'g' → logprob: -9.875060081481934
    3. '}' → logprob: -12.500060081481934
    4. 'e' → logprob: -13.000060081481934
    5. '})' → logprob: -13.625060081481934
    6. ',' → logprob: -14.250060081481934
    7. '```' → logprob: -14.875060081481934
    8. '
' → logprob: -15.375060081481934
    9. ' f' → logprob: -16.12506103515625
    10. '}")' → logprob: -16.25006103515625

Token 94: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044926130794920027
    2. ')' → logprob: -8.625449180603027
    3. '}' → logprob: -9.125449180603027
    4. ' ,' → logprob: -9.500449180603027
    5. ',
' → logprob: -10.250449180603027
    6. '},' → logprob: -10.875449180603027
    7. ')}' → logprob: -11.375449180603027
    8. '<|end|>' → logprob: -11.500449180603027
    9. ',

' → logprob: -12.625449180603027
    10. '})' → logprob: -13.250449180603027

Token 95: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5759473443031311
    2. ' {' → logprob: -0.8259473443031311
    3. ' ' → logprob: -13.200947761535645
    4. ' ' → logprob: -13.200947761535645
    5. '{return' → logprob: -13.325947761535645
    6. '{x' → logprob: -13.700947761535645
    7. ' f' → logprob: -14.825947761535645
    8. '{lng' → logprob: -15.200947761535645
    9. 'f' → logprob: -15.450947761535645
    10. ' ){' → logprob: -15.575947761535645

Token 96: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013722646981477737
    2. ' self' → logprob: -6.626372337341309
    3. '{' → logprob: -10.001372337341309
    4. '	self' → logprob: -15.001372337341309
    5. '   ' → logprob: -16.376371383666992
    6. '       ' → logprob: -16.376371383666992
    7. ' ' → logprob: -16.626371383666992
    8. ',self' → logprob: -16.626371383666992
    9. '(self' → logprob: -16.751371383666992
    10. '$self' → logprob: -16.876371383666992

Token 97: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.38967785239219666
    2. '.' → logprob: -1.139677882194519
    3. '.x' → logprob: -5.889678001403809
    4. ' .' → logprob: -11.139678001403809
    5. '.
' → logprob: -11.764678001403809
    6. ' ' → logprob: -12.389678001403809
    7. ')' → logprob: -12.764678001403809
    8. '
' → logprob: -13.764678001403809
    9. ').' → logprob: -14.389678001403809
    10. '}' → logprob: -14.514678001403809

Token 98: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.0016870817635208368
    2. '.' → logprob: -6.751687049865723
    3. ')' → logprob: -8.501687049865723
    4. '}' → logprob: -9.251687049865723
    5. ':' → logprob: -9.626687049865723
    6. '):' → logprob: -10.126687049865723
    7. '<|end|>' → logprob: -10.376687049865723
    8. ' :.' → logprob: -11.251687049865723
    9. ')}' → logprob: -11.376687049865723
    10. '.:' → logprob: -11.626687049865723

Token 99: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.1080467781284824e-05
    2. 'f' → logprob: -10.375041007995605
    3. '6' → logprob: -12.500041007995605
    4. ' ' → logprob: -13.000041007995605
    5. '```' → logprob: -13.125041007995605
    6. ')' → logprob: -14.750041007995605
    7. '0' → logprob: -15.000041007995605
    8. '{' → logprob: -15.375041007995605
    9. '}' → logprob: -15.500041007995605
    10. '1' → logprob: -16.125041961669922

Token 100: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. '
' → logprob: -17.5
    4. 'g' → logprob: -17.875
    5. ' f' → logprob: -18.625
    6. '}' → logprob: -18.75
    7. '

' → logprob: -19.125
    8. ')' → logprob: -19.375
    9. '	f' → logprob: -19.875
    10. 'ff' → logprob: -20.0

Token 101: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.001184276770800352
    2. ')' → logprob: -6.751184463500977
    3. '}"' → logprob: -12.126184463500977
    4. ')")' → logprob: -12.876184463500977
    5. '")' → logprob: -13.001184463500977
    6. ')">' → logprob: -13.376184463500977
    7. '')"' → logprob: -14.251184463500977
    8. ')}' → logprob: -14.751184463500977
    9. ')"
' → logprob: -15.001184463500977
    10. '"' → logprob: -15.501184463500977

Token 102: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.010944414883852005
    2. ')' → logprob: -5.260944366455078
    3. '<|end|>' → logprob: -6.385944366455078
    4. '
' → logprob: -6.510944366455078
    5. '```' → logprob: -6.510944366455078
    6. '"""' → logprob: -8.385944366455078
    7. '   ' → logprob: -8.885944366455078
    8. '\n' → logprob: -9.010944366455078
    9. '`' → logprob: -9.260944366455078
    10. '")' → logprob: -9.510944366455078

Token 103: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.09793032705783844
    2. '
' → logprob: -2.597930431365967
    3. '

' → logprob: -3.972930431365967
    4. ' class' → logprob: -11.222929954528809
    5. '
' → logprob: -11.347929954528809
    6. '


' → logprob: -11.972929954528809
    7. '```' → logprob: -12.972929954528809
    8. '  
' → logprob: -13.472929954528809
    9. '<class' → logprob: -13.472929954528809
    10. ' 
' → logprob: -13.972929954528809

Token 104: ' Line' (ID: 11342)
  Prédit: ' Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Line' → logprob: -0.0005094261723570526
    2. 'Line' → logprob: -7.625509262084961
    3. ' Point' → logprob: -11.500509262084961
    4. ' ' → logprob: -12.375509262084961
    5. ' ' → logprob: -13.500509262084961
    6. ' Linear' → logprob: -13.750509262084961
    7. ' Circle' → logprob: -14.125509262084961
    8. ' Vector' → logprob: -14.625509262084961
    9. ' Lin' → logprob: -14.625509262084961
    10. ' line' → logprob: -14.625509262084961

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04303755611181259
    2. ':' → logprob: -3.1680376529693604
    3. '(Abstract' → logprob: -10.543037414550781
    4. ':
' → logprob: -11.543037414550781
    5. '():' → logprob: -13.918037414550781
    6. '):' → logprob: -15.168037414550781
    7. '(
' → logprob: -15.168037414550781
    8. '```' → logprob: -15.543037414550781
    9. ':**' → logprob: -16.04303741455078
    10. 'Abstract' → logprob: -16.04303741455078

Token 106: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.08961117267608643
    2. ' ABC' → logprob: -2.464611053466797
    3. '):
' → logprob: -8.339611053466797
    4. ')' → logprob: -8.964611053466797
    5. '):' → logprob: -9.214611053466797
    6. '   ' → logprob: -9.964611053466797
    7. ' ' → logprob: -10.089611053466797
    8. 'AB' → logprob: -10.464611053466797
    9. '(' → logprob: -10.589611053466797
    10. 'abc' → logprob: -10.839611053466797

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003819332632701844
    2. '):
' → logprob: -8.625381469726562
    3. ')' → logprob: -8.875381469726562
    4. ':' → logprob: -9.875381469726562
    5. ',' → logprob: -11.875381469726562
    6. ' ):' → logprob: -12.875381469726562
    7. '):

' → logprob: -14.375381469726562
    8. '):
' → logprob: -15.250381469726562
    9. '():' → logprob: -15.875381469726562
    10. '>:' → logprob: -16.625381469726562

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038310715463012457
    2. ':' → logprob: -5.753830909729004
    3. '):' → logprob: -8.128830909729004
    4. '):
' → logprob: -9.253830909729004
    5. ')' → logprob: -9.378830909729004
    6. '    
' → logprob: -9.503830909729004
    7. '
' → logprob: -9.878830909729004
    8. '(' → logprob: -11.503830909729004
    9. ':
' → logprob: -11.628830909729004
    10. ' :' → logprob: -12.253830909729004

Token 109: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22797119617462158
    2. '@' (adapté à ' @') → logprob: -1.9779711961746216
    3. ' @' → logprob: -2.727971076965332
    4. ' def' → logprob: -9.477971076965332
    5. 'def' → logprob: -9.852971076965332
    6. '    
' → logprob: -11.227971076965332
    7. '@property' → logprob: -12.852971076965332
    8. ' 
' → logprob: -13.727971076965332
    9. '@param' → logprob: -13.727971076965332
    10. '
' → logprob: -14.227971076965332

Token 110: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -7.612634362885728e-05
    2. 'property' → logprob: -10.375076293945312
    3. 'ab' → logprob: -10.500076293945312
    4. 'abs' → logprob: -11.625076293945312
    5. 'abc' → logprob: -12.250076293945312
    6. 'staticmethod' → logprob: -13.125076293945312
    7. 'classmethod' → logprob: -13.750076293945312
    8. ' abstract' → logprob: -15.000076293945312
    9. 'a' → logprob: -15.750076293945312
    10. '.abstract' → logprob: -17.125076293945312

Token 111: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0011834424221888185
    2. '_method' → logprob: -6.75118350982666
    3. 'classmethod' → logprob: -12.00118350982666
    4. 'meth' → logprob: -12.12618350982666
    5. '_' → logprob: -14.50118350982666
    6. 'm' → logprob: -14.87618350982666
    7. 'staticmethod' → logprob: -15.25118350982666
    8. '_m' → logprob: -15.87618350982666
    9. 'def' → logprob: -15.87618350982666
    10. 'property' → logprob: -16.376182556152344

Token 112: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004147018771618605
    2. 'def' → logprob: -5.504147052764893
    3. '    
' → logprob: -10.504146575927734
    4. '<|end|>' → logprob: -11.254146575927734
    5. '
' → logprob: -12.004146575927734
    6. ' def' → logprob: -12.129146575927734
    7. '  
' → logprob: -12.754146575927734
    8. '   ' → logprob: -12.879146575927734
    9. '(
' → logprob: -13.129146575927734
    10. '<|end|>' → logprob: -13.254146575927734

Token 113: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.273196816444397
    2. 'method' → logprob: -2.3981966972351074
    3. '    
' → logprob: -2.7731966972351074
    4. '
' → logprob: -3.5231966972351074
    5. '<|end|>' → logprob: -4.023196697235107
    6. ' def' → logprob: -4.148196697235107
    7. '_method' → logprob: -5.023196697235107
    8. '   
' → logprob: -5.648196697235107
    9. '  
' → logprob: -5.648196697235107
    10. '  ' → logprob: -6.648196697235107

Token 114: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009343532845377922
    2. 'classmethod' → logprob: -5.50934362411499
    3. 'method' → logprob: -6.13434362411499
    4. 'property' → logprob: -7.00934362411499
    5. 'staticmethod' → logprob: -7.13434362411499
    6. '
' → logprob: -7.13434362411499
    7. ' def' → logprob: -7.63434362411499
    8. 'float' → logprob: -9.884343147277832
    9. 'abstract' → logprob: -11.509343147277832
    10. '    
' → logprob: -11.884343147277832

Token 115: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.016361022368073463
    2. 'distance' → logprob: -4.141361236572266
    3. ' length' → logprob: -8.641361236572266
    4. ' get' → logprob: -10.266361236572266
    5. ' intersection' → logprob: -10.766361236572266
    6. ' point' → logprob: -11.016361236572266
    7. ' def' → logprob: -11.016361236572266
    8. ' ' → logprob: -11.266361236572266
    9. ' draw' → logprob: -12.516361236572266
    10. ' evaluate' → logprob: -12.516361236572266

Token 116: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.263011578586884e-05
    2. '_' → logprob: -10.125042915344238
    3. 'to' → logprob: -14.125042915344238
    4. '(self' → logprob: -14.250042915344238
    5. '_t' → logprob: -15.000042915344238
    6. ' _' → logprob: -16.125041961669922
    7. 'To' → logprob: -16.250041961669922
    8. ' to' → logprob: -16.250041961669922
    9. '##_' → logprob: -16.375041961669922
    10. '_TO' → logprob: -16.750041961669922

Token 117: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -3.297462171758525e-05
    2. '_' → logprob: -10.875033378601074
    3. '_line' → logprob: -11.875033378601074
    4. '_points' → logprob: -13.375033378601074
    5. 'point' → logprob: -13.500033378601074
    6. 'self' → logprob: -13.750033378601074
    7. '(self' → logprob: -14.000033378601074
    8. '_Point' → logprob: -14.500033378601074
    9. '_p' → logprob: -14.875033378601074
    10. '_self' → logprob: -15.125033378601074

Token 118: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009312293259426951
    2. '(' → logprob: -7.000931262969971
    3. ' (' → logprob: -11.375930786132812
    4. '(
' → logprob: -12.250930786132812
    5. '(s' → logprob: -12.750930786132812
    6. 'self' → logprob: -14.750930786132812
    7. '
' → logprob: -17.000930786132812
    8. ' self' → logprob: -17.000930786132812
    9. '   ' → logprob: -17.625930786132812
    10. '(sel' → logprob: -17.750930786132812

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.32654589228332e-05
    2. 'self' → logprob: -10.000073432922363
    3. ' ,' → logprob: -10.750073432922363
    4. ')' → logprob: -12.875073432922363
    5. ':' → logprob: -12.875073432922363
    6. ',
' → logprob: -14.375073432922363
    7. ' self' → logprob: -15.250073432922363
    8. ' ' → logprob: -16.375072479248047
    9. '       ' → logprob: -16.375072479248047
    10. 's' → logprob: -16.625072479248047

Token 120: ' point' (ID: 2438)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11294475197792053
    2. ' self' → logprob: -2.2379448413848877
    3. 'point' → logprob: -9.487944602966309
    4. ' point' → logprob: -10.737944602966309
    5. '   ' → logprob: -11.612944602966309
    6. ' ' → logprob: -11.987944602966309
    7. '       ' → logprob: -12.612944602966309
    8. ')' → logprob: -13.362944602966309
    9. 'p' → logprob: -14.237944602966309
    10. 'Point' → logprob: -14.362944602966309

Token 121: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003910865169018507
    2. '):' → logprob: -5.753911018371582
    3. ')' → logprob: -7.503911018371582
    4. ' :' → logprob: -8.753911018371582
    5. ' ):' → logprob: -11.503911018371582
    6. '):
' → logprob: -12.503911018371582
    7. ' ' → logprob: -12.628911018371582
    8. '   ' → logprob: -14.003911018371582
    9. ' )' → logprob: -14.003911018371582
    10. '<Point' → logprob: -14.253911018371582

Token 122: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.01148985419422388
    2. 'Point' → logprob: -4.5114898681640625
    3. ' ' → logprob: -8.636489868164062
    4. ' '' → logprob: -9.011489868164062
    5. '	Point' → logprob: -9.636489868164062
    6. ')' → logprob: -10.261489868164062
    7. ''' → logprob: -11.511489868164062
    8. '(Point' → logprob: -11.636489868164062
    9. '<Point' → logprob: -11.636489868164062
    10. '_Point' → logprob: -12.261489868164062

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ' )' → logprob: -11.375014305114746
    3. '):' → logprob: -13.375014305114746
    4. ':' → logprob: -14.625014305114746
    5. ')->' → logprob: -15.750014305114746
    6. '')' → logprob: -16.37501335144043
    7. ' ' → logprob: -16.37501335144043
    8. '   ' → logprob: -16.50001335144043
    9. '`)' → logprob: -17.25001335144043
    10. '):
' → logprob: -18.37501335144043

Token 124: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007429503370076418
    2. ' ->' → logprob: -5.382429599761963
    3. '->' → logprob: -6.632429599761963
    4. ')->' → logprob: -7.132429599761963
    5. ':' → logprob: -7.507429599761963
    6. '):' → logprob: -9.382429122924805
    7. ' )' → logprob: -10.007429122924805
    8. '   ' → logprob: -12.882429122924805
    9. ' )->' → logprob: -13.007429122924805
    10. '>' → logprob: -13.132429122924805

Token 125: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.12693557143211365
    2. 'float' → logprob: -2.1269354820251465
    3. '	float' → logprob: -12.126935958862305
    4. '<float' → logprob: -14.376935958862305
    5. '=float' → logprob: -14.876935958862305
    6. '(float' → logprob: -14.876935958862305
    7. ',float' → logprob: -15.126935958862305
    8. 'flo' → logprob: -15.126935958862305
    9. ' flo' → logprob: -16.501935958862305
    10. 'f' → logprob: -16.626935958862305

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1350964903831482
    2. '<|end|>' → logprob: -2.135096549987793
    3. ')' → logprob: -6.010096549987793
    4. ':
' → logprob: -6.385096549987793
    5. ':return' → logprob: -6.760096549987793
    6. '<|end|>' → logprob: -6.885096549987793
    7. '):' → logprob: -7.010096549987793
    8. '
' → logprob: -7.510096549987793
    9. '   ' → logprob: -8.635096549987793
    10. ' ' → logprob: -10.260096549987793

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.138419970870018
    2. '<|end|>' → logprob: -2.8884198665618896
    3. ' ' → logprob: -3.2634198665618896
    4. '
' → logprob: -3.6384198665618896
    5. ' pass' → logprob: -6.388420104980469
    6. '...' → logprob: -6.513420104980469
    7. ' 
' → logprob: -6.638420104980469
    8. '    ' → logprob: -6.763420104980469
    9. '   ' → logprob: -6.763420104980469
    10. '        ' → logprob: -7.763420104980469

Token 128: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.2218715250492096
    2. 'pass' (adapté à ' pass') → logprob: -1.7218714952468872
    3. '       ' → logprob: -3.9718716144561768
    4. '...' → logprob: -6.846871376037598
    5. '    ' → logprob: -9.221871376037598
    6. ' ' → logprob: -9.721871376037598
    7. '   ' → logprob: -10.096871376037598
    8. '        ' → logprob: -10.221871376037598
    9. ' ...' → logprob: -10.596871376037598
    10. '	pass' → logprob: -10.596871376037598

Token 129: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3879915773868561
    2. '

' → logprob: -1.1379915475845337
    3. '<|end|>' → logprob: -7.387991428375244
    4. 'class' → logprob: -8.512991905212402
    5. '


' → logprob: -9.012991905212402
    6. '
    
' → logprob: -9.512991905212402
    7. '    
' → logprob: -10.387991905212402
    8. '\n' → logprob: -11.262991905212402
    9. '   ' → logprob: -11.387991905212402
    10. '<|end|>' → logprob: -11.512991905212402

Token 130: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5495277047157288
    2. 'class' → logprob: -0.9245277047157288
    3. '

' → logprob: -4.049527645111084
    4. '<|end|>' → logprob: -4.924527645111084
    5. '  
' → logprob: -8.424528121948242
    6. '\n' → logprob: -8.549528121948242
    7. ' class' → logprob: -8.674528121948242
    8. ' 
' → logprob: -8.674528121948242
    9. '    
' → logprob: -8.799528121948242
    10. '   ' → logprob: -8.924528121948242

Token 131: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00023917861108202487
    2. 'def' → logprob: -8.625239372253418
    3. '
' → logprob: -10.750239372253418
    4. 'pass' → logprob: -10.750239372253418
    5. '@dat' → logprob: -12.625239372253418
    6. '@' (adapté à ' @') → logprob: -12.750239372253418
    7. ' class' → logprob: -13.000239372253418
    8. '   ' → logprob: -13.000239372253418
    9. '

' → logprob: -13.125239372253418
    10. '```' → logprob: -14.125239372253418

Token 132: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.5271463990211487
    2. 'classmethod' → logprob: -1.652146339416504
    3. 'staticmethod' → logprob: -2.527146339416504
    4. 'class' → logprob: -2.527146339416504
    5. 'property' → logprob: -2.902146339416504
    6. 'abc' → logprob: -5.777146339416504
    7. ' abstract' → logprob: -9.777146339416504
    8. 'abs' → logprob: -10.402146339416504
    9. 'dat' → logprob: -10.527146339416504
    10. 'point' → logprob: -10.902146339416504

Token 133: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.013057404197752476
    2. 'def' → logprob: -4.888057231903076
    3. '_method' → logprob: -5.263057231903076
    4. 'classmethod' → logprob: -9.263057708740234
    5. '<|end|>' → logprob: -10.013057708740234
    6. 'staticmethod' → logprob: -10.138057708740234
    7. 'token' → logprob: -11.013057708740234
    8. '_token' → logprob: -11.388057708740234
    9. ' method' → logprob: -11.888057708740234
    10. '   ' → logprob: -11.888057708740234

Token 134: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18942472338676453
    2. '
' → logprob: -1.814424753189087
    3. ' def' → logprob: -5.189424514770508
    4. '   ' → logprob: -5.564424514770508
    5. '<|end|>' → logprob: -8.564424514770508
    6. '    
' → logprob: -12.064424514770508
    7. '<|end|>' → logprob: -12.064424514770508
    8. '
' → logprob: -12.439424514770508
    9. '	def' → logprob: -12.689424514770508
    10. ' ' → logprob: -12.814424514770508

Token 135: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14851102232933044
    2. '   ' → logprob: -2.1485109329223633
    3. '
' → logprob: -3.8985109329223633
    4. ' def' → logprob: -6.898510932922363
    5. '<|end|>' → logprob: -10.523510932922363
    6. '    
' → logprob: -11.523510932922363
    7. '  ' → logprob: -11.648510932922363
    8. '	def' → logprob: -12.523510932922363
    9. ' ' → logprob: -13.023510932922363
    10. '    ' → logprob: -13.273510932922363

Token 136: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.787507714354433e-05
    2. ' def' → logprob: -10.00004768371582
    3. 'classmethod' → logprob: -13.25004768371582
    4. 'class' → logprob: -15.12504768371582
    5. 'staticmethod' → logprob: -15.62504768371582
    6. 'property' → logprob: -16.12504768371582
    7. '   ' → logprob: -16.37504768371582
    8. ' ' → logprob: -18.00004768371582
    9. '```' → logprob: -18.00004768371582
    10. 'repr' → logprob: -18.50004768371582

Token 137: ' normal' (ID: 6078)
  Prédit: ' intersect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intersect' → logprob: -0.6960941553115845
    2. ' intersection' → logprob: -1.0710941553115845
    3. ' intersections' → logprob: -2.946094036102295
    4. ' intersects' → logprob: -3.571094036102295
    5. ' project' → logprob: -3.946094036102295
    6. ' closest' → logprob: -4.571094036102295
    7. ' get' → logprob: -5.071094036102295
    8. ' bounding' → logprob: -5.071094036102295
    9. ' points' → logprob: -5.321094036102295
    10. ' contains' → logprob: -5.696094036102295

Token 138: '_vector' (ID: 29530)
  Prédit: '_vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -0.04054952412843704
    2. 'ize' → logprob: -3.4155495166778564
    3. 'ized' → logprob: -6.9155497550964355
    4. 'vector' → logprob: -6.9155497550964355
    5. '<|end|>' → logprob: -7.1655497550964355
    6. '(self' → logprob: -7.2905497550964355
    7. ' vector' → logprob: -7.4155497550964355
    8. '_vect' → logprob: -7.5405497550964355
    9. '_vectors' → logprob: -7.6655497550964355
    10. '   ' → logprob: -7.9155497550964355

Token 139: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001817297888919711
    2. '(' → logprob: -9.000182151794434
    3. 'self' → logprob: -10.625182151794434
    4. ' (' → logprob: -11.000182151794434
    5. '<|end|>' → logprob: -11.750182151794434
    6. '(s' → logprob: -12.875182151794434
    7. ' self' → logprob: -13.125182151794434
    8. '(
' → logprob: -13.500182151794434
    9. 's' → logprob: -13.875182151794434
    10. '   ' → logprob: -13.875182151794434

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008259357884526253
    2. '):' → logprob: -5.633259296417236
    3. ',' → logprob: -6.133259296417236
    4. 'self' → logprob: -6.758259296417236
    5. '):
' → logprob: -6.883259296417236
    6. '(self' → logprob: -8.758259773254395
    7. ')->' → logprob: -9.258259773254395
    8. '   ' → logprob: -11.258259773254395
    9. '<|end|>' → logprob: -11.758259773254395
    10. ' self' → logprob: -12.883259773254395

Token 141: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002132656052708626
    2. 'self' → logprob: -6.752132892608643
    3. '(' → logprob: -7.127132892608643
    4. '   ' → logprob: -9.752132415771484
    5. ')' → logprob: -10.377132415771484
    6. ' (' → logprob: -10.877132415771484
    7. ' self' → logprob: -11.127132415771484
    8. '       ' → logprob: -11.502132415771484
    9. ':' → logprob: -12.002132415771484
    10. '(
' → logprob: -12.127132415771484

Token 142: ' Tuple' (ID: 50841)
  Prédit: ' Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tuple' → logprob: -0.13349013030529022
    2. 'Tuple' → logprob: -2.5084900856018066
    3. ' Point' → logprob: -4.133490085601807
    4. ' tuple' → logprob: -4.883490085601807
    5. ' List' → logprob: -5.008490085601807
    6. ' '' → logprob: -5.258490085601807
    7. ' None' → logprob: -6.008490085601807
    8. 'List' → logprob: -6.383490085601807
    9. 'Point' → logprob: -6.883490085601807
    10. ' ' → logprob: -7.383490085601807

Token 143: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022116350010037422
    2. '[int' → logprob: -6.127211570739746
    3. 'float' → logprob: -11.752211570739746
    4. ',float' → logprob: -11.752211570739746
    5. ' [' → logprob: -12.252211570739746
    6. '(float' → logprob: -13.252211570739746
    7. '   ' → logprob: -13.627211570739746
    8. '<float' → logprob: -13.627211570739746
    9. '[
' → logprob: -14.127211570739746
    10. ' float' → logprob: -14.752211570739746

Token 144: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00026622318546287715
    2. 'flo' → logprob: -8.500266075134277
    3. ' float' → logprob: -10.125266075134277
    4. 'int' → logprob: -11.125266075134277
    5. 'fl' → logprob: -13.375266075134277
    6. '	float' → logprob: -13.500266075134277
    7. '   ' → logprob: -13.750266075134277
    8. 'f' → logprob: -13.875266075134277
    9. '```' → logprob: -14.125266075134277
    10. ' ' → logprob: -14.375266075134277

Token 145: ',float' (ID: 119642)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011868956498801708
    2. ',float' → logprob: -6.751186847686768
    3. ' ,' → logprob: -11.251187324523926
    4. ',
' → logprob: -13.126187324523926
    5. ',int' → logprob: -13.876187324523926
    6. ',double' → logprob: -14.626187324523926
    7. ',bool' → logprob: -16.37618637084961
    8. '<|end|>' → logprob: -16.37618637084961
    9. '‌,' → logprob: -17.25118637084961
    10. ',List' → logprob: -17.75118637084961

Token 146: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00017267030489165336
    2. ']' → logprob: -9.12517261505127
    3. '):' → logprob: -10.25017261505127
    4. ']:
' → logprob: -11.12517261505127
    5. '']:' → logprob: -12.37517261505127
    6. ']>' → logprob: -12.50017261505127
    7. ']:
' → logprob: -13.12517261505127
    8. '>:' → logprob: -13.50017261505127
    9. ',' → logprob: -14.12517261505127
    10. ':' → logprob: -14.37517261505127

Token 147: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21696284413337708
    2. '<|end|>' → logprob: -1.9669628143310547
    3. ')' → logprob: -3.5919628143310547
    4. '):' → logprob: -4.591962814331055
    5. '   ' → logprob: -4.966962814331055
    6. ' ' → logprob: -5.466962814331055
    7. ' :' → logprob: -5.466962814331055
    8. ':return' → logprob: -8.216962814331055
    9. '\' → logprob: -8.466962814331055
    10. '#' → logprob: -8.716962814331055

Token 148: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5484058260917664
    2. 'pass' (adapté à ' pass') → logprob: -1.4234058856964111
    3. '   ' → logprob: -2.548405885696411
    4. ' ' → logprob: -3.048405885696411
    5. '       ' → logprob: -4.048405647277832
    6. '    ' → logprob: -4.673405647277832
    7. ')' → logprob: -4.923405647277832
    8. '):' → logprob: -5.298405647277832
    9. '
' → logprob: -5.673405647277832
    10. '  ' → logprob: -5.923405647277832

Token 149: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03731444478034973
    2. '
' → logprob: -3.5373144149780273
    3. '   ' → logprob: -5.287314414978027
    4. '<|end|>' → logprob: -6.287314414978027
    5. '

' → logprob: -7.787314414978027
    6. ' class' → logprob: -9.162314414978027
    7. '    
' → logprob: -9.912314414978027
    8. '  
' → logprob: -11.287314414978027
    9. '<|end|>' → logprob: -11.537314414978027
    10. ' 
' → logprob: -11.787314414978027

Token 150: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12970837950706482
    2. '   ' → logprob: -2.7547082901000977
    3. 'class' → logprob: -3.6297082901000977
    4. '<|end|>' → logprob: -3.6297082901000977
    5. '

' → logprob: -6.004708290100098
    6. '    
' → logprob: -6.754708290100098
    7. ' 
' → logprob: -7.254708290100098
    8. '  
' → logprob: -8.629708290100098
    9. '<|end|>' → logprob: -8.629708290100098
    10. ' class' → logprob: -10.004708290100098

Token 151: ' Eu' (ID: 10237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8151103258132935
    2. ' Segment' → logprob: -1.9401103258132935
    3. ' Vertical' → logprob: -2.190110206604004
    4. ' Point' → logprob: -2.315110206604004
    5. ' Straight' → logprob: -2.315110206604004
    6. ' Line' → logprob: -2.815110206604004
    7. 'Segment' → logprob: -2.815110206604004
    8. 'Vertical' → logprob: -3.190110206604004
    9. ' Circle' → logprob: -3.440110206604004
    10. ' Vector' → logprob: -3.565110206604004

Token 152: 'clidean' (ID: 116188)
  Prédit: 'clidean'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clidean' → logprob: -0.029140494763851166
    2. 'clid' → logprob: -4.029140472412109
    3. 'cl' → logprob: -4.529140472412109
    4. 'cli' → logprob: -9.52914047241211
    5. 'cline' → logprob: -10.27914047241211
    6. 'c' → logprob: -11.52914047241211
    7. 'l' → logprob: -11.65414047241211
    8. 'ler' → logprob: -11.90414047241211
    9. 'cler' → logprob: -13.15414047241211
    10. 'Cl' → logprob: -13.77914047241211

Token 153: 'Line' (ID: 3665)
  Prédit: 'Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -0.009914509952068329
    2. 'Distance' → logprob: -4.634914398193359
    3. 'Circle' → logprob: -9.63491439819336
    4. 'Segment' → logprob: -10.25991439819336
    5. 'Dist' → logprob: -11.13491439819336
    6. 'Norm' → logprob: -11.63491439819336
    7. 'Straight' → logprob: -11.88491439819336
    8. 'Point' → logprob: -12.38491439819336
    9. 'Plane' → logprob: -12.75991439819336
    10. 'line' → logprob: -12.75991439819336

Token 154: '(Line' (ID: 170362)
  Prédit: '(Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Line' → logprob: -0.017123591154813766
    2. '(' → logprob: -4.392123699188232
    3. ':' → logprob: -5.392123699188232
    4. '):' → logprob: -10.767123222351074
    5. '(Point' → logprob: -11.767123222351074
    6. ' :' → logprob: -11.892123222351074
    7. '(Abstract' → logprob: -12.392123222351074
    8. ':
' → logprob: -12.642123222351074
    9. ')' → logprob: -13.142123222351074
    10. ' (' → logprob: -13.392123222351074

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012607842683792114
    2. '):
' → logprob: -4.387608051300049
    3. ')' → logprob: -9.38760757446289
    4. '):

' → logprob: -12.38760757446289
    5. ':' → logprob: -12.51260757446289
    6. ' ):' → logprob: -12.63760757446289
    7. ',' → logprob: -13.88760757446289
    8. '(Line' → logprob: -14.13760757446289
    9. '):
' → logprob: -14.51260757446289
    10. '   ' → logprob: -14.88760757446289

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1281377077102661
    2. ':' → logprob: -2.3781375885009766
    3. ':
' → logprob: -3.7531375885009766
    4. '):' → logprob: -6.003137588500977
    5. '):
' → logprob: -6.753137588500977
    6. 'def' → logprob: -8.628137588500977
    7. ' def' → logprob: -8.878137588500977
    8. '    
' → logprob: -10.253137588500977
    9. ')' → logprob: -10.503137588500977
    10. ',' → logprob: -10.878137588500977

Token 157: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10103260725736618
    2. 'def' (adapté à ' def') → logprob: -2.3510324954986572
    3. '   ' → logprob: -7.101032733917236
    4. ' ' → logprob: -14.476032257080078
    5. '    ' → logprob: -15.101032257080078
    6. '	def' → logprob: -15.476032257080078
    7. ' __' → logprob: -15.601032257080078
    8. 'class' → logprob: -17.101032257080078
    9. '  ' → logprob: -17.101032257080078
    10. '```' → logprob: -17.476032257080078

Token 158: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -7.52919222577475e-05
    2. '__' → logprob: -9.625075340270996
    3. ' def' → logprob: -12.375075340270996
    4. ' ' → logprob: -12.750075340270996
    5. '_init' → logprob: -13.875075340270996
    6. ' init' → logprob: -14.375075340270996
    7. 'def' → logprob: -15.125075340270996
    8. 'init' → logprob: -15.750075340270996
    9. ' ' → logprob: -15.875075340270996
    10. ' _' → logprob: -16.62507438659668

Token 159: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.18655803799629211
    2. 'nit' → logprob: -1.8115580081939697
    3. 'it' → logprob: -5.686558246612549
    4. '__' → logprob: -6.311558246612549
    5. 'def' → logprob: -7.811558246612549
    6. '   ' → logprob: -8.06155776977539
    7. 't' → logprob: -8.31155776977539
    8. '_init' → logprob: -8.43655776977539
    9. 'int' → logprob: -9.56155776977539
    10. '(init' → logprob: -9.68655776977539

Token 160: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.020679805427789688
    2. '(self' → logprob: -3.8956797122955322
    3. '__' → logprob: -9.395679473876953
    4. '(' → logprob: -10.395679473876953
    5. '__(
' → logprob: -11.645679473876953
    6. 'self' → logprob: -12.145679473876953
    7. ' (' → logprob: -12.395679473876953
    8. '__((' → logprob: -12.645679473876953
    9. '_(' → logprob: -13.270679473876953
    10. ',' → logprob: -15.145679473876953

Token 161: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018157554790377617
    2. ' self' → logprob: -4.018157482147217
    3. ',' → logprob: -13.018157958984375
    4. '   ' → logprob: -13.268157958984375
    5. 'x' → logprob: -13.518157958984375
    6. '	self' → logprob: -14.018157958984375
    7. '(self' → logprob: -14.018157958984375
    8. ')' → logprob: -15.393157958984375
    9. '0' → logprob: -15.518157958984375
    10. ',self' → logprob: -15.518157958984375

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028767617186531425
    2. 'self' → logprob: -8.375288009643555
    3. '__,' → logprob: -10.125288009643555
    4. ' ,' → logprob: -11.125288009643555
    5. ',self' → logprob: -13.625288009643555
    6. '_,' → logprob: -15.000288009643555
    7. '(self' → logprob: -15.250288009643555
    8. ' self' → logprob: -16.125288009643555
    9. '‌,' → logprob: -16.500288009643555
    10. '__(' → logprob: -16.750288009643555

Token 163: ' p' (ID: 275)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7483395934104919
    2. 'a' → logprob: -1.4983396530151367
    3. ' p' → logprob: -1.7483396530151367
    4. 'p' → logprob: -2.9983396530151367
    5. ' point' → logprob: -3.7483396530151367
    6. ' x' → logprob: -4.123339653015137
    7. ' A' → logprob: -4.498339653015137
    8. 'x' → logprob: -4.623339653015137
    9. 'A' → logprob: -4.873339653015137
    10. ' ' → logprob: -5.373339653015137

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003202114312443882
    2. 'oint' → logprob: -8.375320434570312
    3. '0' → logprob: -9.625320434570312
    4. ':' → logprob: -10.750320434570312
    5. 'oints' → logprob: -13.750320434570312
    6. 'a' → logprob: -15.500320434570312
    7. ')' → logprob: -16.375320434570312
    8. '```' → logprob: -16.500320434570312
    9. '_point' → logprob: -16.625320434570312
    10. 'r' → logprob: -16.875320434570312

Token 165: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005931758787482977
    2. ',' → logprob: -5.130931854248047
    3. ' :' → logprob: -13.505931854248047
    4. ':p' → logprob: -14.880931854248047
    5. ',p' → logprob: -15.005931854248047
    6. ' ,' → logprob: -15.505931854248047
    7. ':,' → logprob: -15.630931854248047
    8. 'p' → logprob: -15.755931854248047
    9. '_:' → logprob: -16.255931854248047
    10. '1' → logprob: -16.505931854248047

Token 166: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.011049000546336174
    2. ' Point' → logprob: -4.511048793792725
    3. '	Point' → logprob: -13.761049270629883
    4. '_Point' → logprob: -16.136049270629883
    5. '_point' → logprob: -16.761049270629883
    6. '(Point' → logprob: -17.011049270629883
    7. '<Point' → logprob: -17.511049270629883
    8. '.Point' → logprob: -17.761049270629883
    9. ' ' → logprob: -18.511049270629883
    10. ')' → logprob: -18.886049270629883

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ',p' → logprob: -12.500004768371582
    3. ' ,' → logprob: -13.750004768371582
    4. ',
' → logprob: -17.5000057220459
    5. '‌,' → logprob: -18.3750057220459
    6. 'p' → logprob: -18.5000057220459
    7. ' p' → logprob: -19.3750057220459
    8. ',

' → logprob: -19.7500057220459
    9. ')' → logprob: -20.1250057220459
    10. '_,' → logprob: -20.5000057220459

Token 168: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.03365238755941391
    2. 'p' → logprob: -3.4086523056030273
    3. ' ' → logprob: -12.033652305603027
    4. ' ' → logprob: -14.783652305603027
    5. ',' → logprob: -16.408653259277344
    6. '	p' → logprob: -16.408653259277344
    7. '    ' → logprob: -17.033653259277344
    8. '   ' → logprob: -17.158653259277344
    9. 'point' → logprob: -17.658653259277344
    10. ' п' → logprob: -17.908653259277344

Token 169: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. 'oint' → logprob: -13.62500286102295
    3. ')' → logprob: -14.87500286102295
    4. ' ' → logprob: -15.00000286102295
    5. 'oints' → logprob: -15.75000286102295
    6. '۲' → logprob: -15.93750286102295
    7. ',' → logprob: -16.125003814697266
    8. '₂' → logprob: -16.437503814697266
    9. ':' → logprob: -16.625003814697266
    10. '２' → logprob: -17.062503814697266

Token 170: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01857631839811802
    2. ':' → logprob: -4.143576145172119
    3. ')' → logprob: -6.143576145172119
    4. '):
' → logprob: -8.143576622009277
    5. ' ):' → logprob: -10.268576622009277
    6. '<|end|>' → logprob: -10.643576622009277
    7. ',' → logprob: -10.768576622009277
    8. '<|end|>' → logprob: -11.893576622009277
    9. '   ' → logprob: -12.643576622009277
    10. ' ' → logprob: -12.893576622009277

Token 171: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.2014806866645813
    2. ' Point' → logprob: -1.7014806270599365
    3. ' p' → logprob: -10.201480865478516
    4. 'p' → logprob: -11.701480865478516
    5. ')' → logprob: -11.951480865478516
    6. ' point' → logprob: -12.201480865478516
    7. '	Point' → logprob: -12.826480865478516
    8. '_point' → logprob: -12.951480865478516
    9. 'point' → logprob: -13.451480865478516
    10. ' ' → logprob: -13.576480865478516

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004152993205934763
    2. '):
' → logprob: -8.000414848327637
    3. ')' → logprob: -9.875414848327637
    4. ':' → logprob: -10.625414848327637
    5. ' ):' → logprob: -12.625414848327637
    6. '):
' → logprob: -14.625414848327637
    7. '   ' → logprob: -15.375414848327637
    8. '       ' → logprob: -16.875415802001953
    9. '():' → logprob: -17.125415802001953
    10. ',' → logprob: -17.375415802001953

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.583550642360933e-05
    2. ':' → logprob: -11.000036239624023
    3. '   ' → logprob: -12.000036239624023
    4. 'self' → logprob: -12.500036239624023
    5. ',' → logprob: -12.625036239624023
    6. ' self' → logprob: -13.000036239624023
    7. '      ' → logprob: -14.000036239624023
    8. ' if' → logprob: -14.500036239624023
    9. '):
' → logprob: -14.750036239624023
    10. '     ' → logprob: -15.375036239624023

Token 174: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4105055332183838
    2. ' self' → logprob: -1.4105055332183838
    3. '       ' → logprob: -2.410505533218384
    4. 'dx' → logprob: -6.660505294799805
    5. ' dx' → logprob: -7.160505294799805
    6. ' if' → logprob: -8.035505294799805
    7. 'if' → logprob: -8.285505294799805
    8. 'super' → logprob: -8.910505294799805
    9. ' super' → logprob: -9.660505294799805
    10. '   ' → logprob: -10.910505294799805

Token 175: '.p' (ID: 1201)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5365817546844482
    2. '.p' → logprob: -0.9115817546844482
    3. ' .' → logprob: -4.661581993103027
    4. ':' → logprob: -6.411581993103027
    5. '.x' → logprob: -7.411581993103027
    6. '   ' → logprob: -8.036581993103027
    7. '       ' → logprob: -8.161581993103027
    8. '._' → logprob: -8.411581993103027
    9. ' ' → logprob: -9.036581993103027
    10. 'p' → logprob: -9.536581993103027

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012928384239785373
    2. 'oints' → logprob: -9.375129699707031
    3. 'oint' → logprob: -10.250129699707031
    4. '_' → logprob: -12.625129699707031
    5. 'r' → logprob: -13.125129699707031
    6. '   ' → logprob: -14.375129699707031
    7. ' ' → logprob: -14.500129699707031
    8. '
' → logprob: -15.625129699707031
    9. '2' → logprob: -15.750129699707031
    10. '=' → logprob: -15.750129699707031

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4451524317264557
    2. ' =' → logprob: -1.0701524019241333
    3. ',' → logprob: -4.195152282714844
    4. '<|end|>' → logprob: -7.445152282714844
    5. ')' → logprob: -8.570152282714844
    6. ' ' → logprob: -8.570152282714844
    7. '=p' → logprob: -8.695152282714844
    8. '.' → logprob: -10.570152282714844
    9. 'p' → logprob: -11.320152282714844
    10. '<|end|>' → logprob: -11.445152282714844

Token 178: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4740792512893677
    2. ' p' → logprob: -0.9740792512893677
    3. ' ' → logprob: -14.349079132080078
    4. '	p' → logprob: -14.849079132080078
    5. '
' → logprob: -15.099079132080078
    6. '_p' → logprob: -15.349079132080078
    7. '<|end|>' → logprob: -15.349079132080078
    8. ' 
' → logprob: -16.474079132080078
    9. ' ' → logprob: -16.599079132080078
    10. ' п' → logprob: -16.849079132080078

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018661346985027194
    2. '2' → logprob: -8.875186920166016
    3. 'oint' → logprob: -10.125186920166016
    4. 'oints' → logprob: -12.375186920166016
    5. '   ' → logprob: -14.500186920166016
    6. '.' → logprob: -14.500186920166016
    7. ',' → logprob: -14.625186920166016
    8. 'oin' → logprob: -15.625186920166016
    9. ' ' → logprob: -15.875186920166016
    10. 'p' → logprob: -16.125186920166016

Token 180: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012553498381748796
    2. '
' → logprob: -6.751255512237549
    3. 'self' → logprob: -9.62625503540039
    4. ' self' → logprob: -12.25125503540039
    5. '        
' → logprob: -12.62625503540039
    6. '   ' → logprob: -12.75125503540039
    7. ',' → logprob: -13.37625503540039
    8. '  
' → logprob: -13.75125503540039
    9. '      ' → logprob: -14.12625503540039
    10. ' 
' → logprob: -14.25125503540039

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4855663721391466e-05
    2. '   ' → logprob: -12.125015258789062
    3. 'self' → logprob: -12.625015258789062
    4. '
' → logprob: -13.000015258789062
    5. '      ' → logprob: -13.625015258789062
    6. ',' → logprob: -14.125015258789062
    7. ' ' → logprob: -14.625015258789062
    8. ' self' → logprob: -14.875015258789062
    9. '        
' → logprob: -15.375015258789062
    10. '     ' → logprob: -15.750015258789062

Token 182: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03012590855360031
    2. ' self' → logprob: -3.530125856399536
    3. '       ' → logprob: -7.905126094818115
    4. 'p' → logprob: -12.405125617980957
    5. '   ' → logprob: -13.780125617980957
    6. ' ' → logprob: -14.780125617980957
    7. ' p' → logprob: -15.155125617980957
    8. '        ' → logprob: -15.530125617980957
    9. '	self' → logprob: -15.530125617980957
    10. 's' → logprob: -16.530126571655273

Token 183: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.07927794009447098
    2. '.' → logprob: -3.079277992248535
    3. 'p' → logprob: -4.204277992248535
    4. '2' → logprob: -4.454277992248535
    5. '   ' → logprob: -6.704277992248535
    6. ' p' → logprob: -7.204277992248535
    7. ' .' → logprob: -7.829277992248535
    8. '.
' → logprob: -8.329277992248535
    9. ' ' → logprob: -8.454277992248535
    10. '_p' → logprob: -9.079277992248535

Token 184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -16.25
    3. '۲' → logprob: -16.375
    4. 'oints' → logprob: -16.375
    5. 'p' → logprob: -16.5
    6. '   ' → logprob: -17.6875
    7. '２' → logprob: -17.9375
    8. 'oint' → logprob: -18.0
    9. '₂' → logprob: -18.1875
    10. '```' → logprob: -18.1875

Token 185: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38687291741371155
    2. ' p' → logprob: -1.1368728876113892
    3. ' ' → logprob: -13.761873245239258
    4. ' ' → logprob: -15.136873245239258
    5. '	p' → logprob: -15.511873245239258
    6. '   ' → logprob: -16.386873245239258
    7. 'Point' → logprob: -16.886873245239258
    8. 'point' → logprob: -17.324373245239258
    9. '  ' → logprob: -17.386873245239258
    10. '<p' → logprob: -17.636873245239258

Token 187: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.423219696851447e-05
    2. 'oint' → logprob: -10.250083923339844
    3. '1' → logprob: -10.375083923339844
    4. 'oints' → logprob: -11.250083923339844
    5. 'p' → logprob: -13.750083923339844
    6. 't' → logprob: -13.937583923339844
    7. ' ' → logprob: -15.312583923339844
    8. '```' → logprob: -15.562583923339844
    9. '   ' → logprob: -15.812583923339844
    10. 'int' → logprob: -15.875083923339844

Token 188: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8337323069572449
    2. '
' → logprob: -1.0837323665618896
    3. '<|end|>' → logprob: -2.0837323665618896
    4. '       ' → logprob: -2.5837323665618896
    5. '    
' → logprob: -4.3337321281433105
    6. '  
' → logprob: -5.4587321281433105
    7. 'def' → logprob: -6.0837321281433105
    8. ' ' → logprob: -6.4587321281433105
    9. '        
' → logprob: -6.5837321281433105
    10. '<|end|>' → logprob: -6.7087321281433105

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43274617195129395
    2. '   ' → logprob: -1.057746171951294
    3. '
' → logprob: -6.557745933532715
    4. '    
' → logprob: -6.932745933532715
    5. 'def' → logprob: -7.807745933532715
    6. '        
' → logprob: -7.807745933532715
    7. ' def' → logprob: -8.057745933532715
    8. ' ' → logprob: -8.932745933532715
    9. '  
' → logprob: -9.182745933532715
    10. '    ' → logprob: -10.057745933532715

Token 190: ' self' (ID: 1051)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.07462062686681747
    2. 'self' (adapté à ' self') → logprob: -3.0746207237243652
    3. 'def' → logprob: -4.699620723724365
    4. '   ' → logprob: -5.324620723724365
    5. '       ' → logprob: -5.574620723724365
    6. 'if' → logprob: -5.574620723724365
    7. ' dx' → logprob: -6.074620723724365
    8. ' self' → logprob: -7.824620723724365
    9. 'delta' → logprob: -7.949620723724365
    10. 'diff' → logprob: -8.199620246887207

Token 191: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.8293404579162598
    2. '.dx' → logprob: -1.3293404579162598
    3. '.' → logprob: -1.4543404579162598
    4. '.length' → logprob: -4.45434045791626
    5. '.vector' → logprob: -4.57934045791626
    6. '.v' → logprob: -4.95434045791626
    7. '.a' → logprob: -5.07934045791626
    8. 'def' → logprob: -5.20434045791626
    9. '.x' → logprob: -5.57934045791626
    10. 'import' → logprob: -6.20434045791626

Token 192: 'A' (ID: 32)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.09990402311086655
    2. 'normal' → logprob: -3.7249040603637695
    3. 'nx' → logprob: -3.8499040603637695
    4. 'a' → logprob: -3.9749040603637695
    5. 'length' → logprob: -4.3499040603637695
    6. '_dx' → logprob: -5.8499040603637695
    7. 'A' → logprob: -5.9749040603637695
    8. 'compute' → logprob: -6.0999040603637695
    9. 'calculate' → logprob: -6.3499040603637695
    10. 'vx' → logprob: -6.3499040603637695

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05520688369870186
    2. '=' → logprob: -2.930206775665283
    3. ',' → logprob: -8.180207252502441
    4. ' ' → logprob: -10.305207252502441
    5. ' =
' → logprob: -12.680207252502441
    6. 'x' → logprob: -13.430207252502441
    7. '   ' → logprob: -13.805207252502441
    8. ' ,' → logprob: -13.805207252502441
    9. '<|end|>' → logprob: -14.555207252502441
    10. '_' → logprob: -14.680207252502441

Token 194: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07628970593214035
    2. 'self' → logprob: -2.826289653778076
    3. ' p' → logprob: -4.701289653778076
    4. ' self' → logprob: -5.326289653778076
    5. '(p' → logprob: -8.951290130615234
    6. '(self' → logprob: -9.701290130615234
    7. 'y' → logprob: -10.326290130615234
    8. ' (' → logprob: -11.201290130615234
    9. '   ' → logprob: -11.201290130615234
    10. '	p' → logprob: -11.826290130615234

Token 195: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009758567437529564
    2. '2' → logprob: -4.634758472442627
    3. 'p' → logprob: -14.009758949279785
    4. '.y' → logprob: -14.759758949279785
    5. 'y' → logprob: -15.634758949279785
    6. '```' → logprob: -15.822258949279785
    7. '.x' → logprob: -15.947258949279785
    8. '
' → logprob: -16.25975799560547
    9. '._' → logprob: -16.32225799560547
    10. '.' → logprob: -16.38475799560547

Token 196: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.6935736536979675
    2. '.y' → logprob: -0.6935736536979675
    3. '.' → logprob: -7.818573474884033
    4. 'y' → logprob: -11.318573951721191
    5. 'x' → logprob: -11.568573951721191
    6. ' .' → logprob: -13.318573951721191
    7. ').' → logprob: -15.693573951721191
    8. '```' → logprob: -16.068572998046875
    9. '.
' → logprob: -16.318572998046875
    10. ' ' → logprob: -16.443572998046875

Token 197: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038086701184511185
    2. '-' → logprob: -3.2880866527557373
    3. '-p' → logprob: -10.288086891174316
    4. ' ' → logprob: -11.538086891174316
    5. ' ' → logprob: -14.538086891174316
    6. '-self' → logprob: -14.538086891174316
    7. ' -
' → logprob: -16.0380859375
    8. '-m' → logprob: -16.2880859375
    9. '   ' → logprob: -16.9130859375
    10. '-
' → logprob: -16.9130859375

Token 198: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14267989993095398
    2. ' p' → logprob: -2.0176799297332764
    3. 'self' → logprob: -13.017680168151855
    4. '	p' → logprob: -14.392680168151855
    5. '<|end|>' → logprob: -14.517680168151855
    6. ' ' → logprob: -14.767680168151855
    7. ' self' → logprob: -15.017680168151855
    8. '<p' → logprob: -15.517680168151855
    9. '   ' → logprob: -15.767680168151855
    10. '       ' → logprob: -16.39267921447754

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. 'self' → logprob: -15.000000953674316
    3. 'p' → logprob: -16.125
    4. ' ' → logprob: -16.375
    5. '.' → logprob: -16.625
    6. 'ublic' → logprob: -17.375
    7. '2' → logprob: -17.5
    8. '```' → logprob: -17.5
    9. 'oints' → logprob: -17.8125
    10. 'y' → logprob: -18.0625

Token 200: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0014883159892633557
    2. '.x' → logprob: -7.001488208770752
    3. '.' → logprob: -7.501488208770752
    4. 'y' → logprob: -10.62648868560791
    5. ' .' → logprob: -16.126487731933594
    6. ' y' → logprob: -16.876487731933594
    7. '.py' → logprob: -17.251487731933594
    8. '	y' → logprob: -17.626487731933594
    9. 'x' → logprob: -17.751487731933594
    10. '.
' → logprob: -17.876487731933594

Token 201: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06675727665424347
    2. '<|end|>' → logprob: -3.3167572021484375
    3. 'self' → logprob: -3.9417572021484375
    4. '
' → logprob: -5.6917572021484375
    5. '   ' → logprob: -5.6917572021484375
    6. ' self' → logprob: -7.3167572021484375
    7. ' ' → logprob: -7.9417572021484375
    8. ')' → logprob: -8.441757202148438
    9. '        
' → logprob: -8.816757202148438
    10. ',' → logprob: -8.816757202148438

Token 203: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2815915644168854
    2. ' self' → logprob: -1.406591534614563
    3. '       ' → logprob: -8.031591415405273
    4. '-self' → logprob: -9.781591415405273
    5. ' ' → logprob: -10.531591415405273
    6. '	self' → logprob: -11.031591415405273
    7. '-' → logprob: -12.031591415405273
    8. '_self' → logprob: -12.906591415405273
    9. '   ' → logprob: -13.406591415405273
    10. ' -' → logprob: -13.531591415405273

Token 204: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.11573334783315659
    2. '.' → logprob: -2.2407333850860596
    3. ' .' → logprob: -6.6157331466674805
    4. '.x' → logprob: -6.7407331466674805
    5. '.A' → logprob: -8.36573314666748
    6. ' ' → logprob: -10.24073314666748
    7. '_' → logprob: -10.74073314666748
    8. '.__' → logprob: -10.86573314666748
    9. '
' → logprob: -12.11573314666748
    10. 'A' → logprob: -12.24073314666748

Token 205: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.2246291337069124e-05
    2. 'B' → logprob: -11.125021934509277
    3. ' A' → logprob: -12.625021934509277
    4. 'p' → logprob: -12.750021934509277
    5. 'x' → logprob: -14.500021934509277
    6. '
' → logprob: -16.000022888183594
    7. '1' → logprob: -16.125022888183594
    8. '_A' → logprob: -16.375022888183594
    9. '	A' → logprob: -16.500022888183594
    10. '.A' → logprob: -16.625022888183594

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022484004497528
    2. '=' → logprob: -1.9102247953414917
    3. ' ' → logprob: -14.535224914550781
    4. '=p' → logprob: -16.66022491455078
    5. 'p' → logprob: -17.66022491455078
    6. ')' → logprob: -17.66022491455078
    7. '<|end|>' → logprob: -17.78522491455078
    8. '0' → logprob: -18.28522491455078
    9. '.' → logprob: -18.41022491455078
    10. ',' → logprob: -18.41022491455078

Token 207: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06205081567168236
    2. ' p' → logprob: -2.8120508193969727
    3. '-(' → logprob: -9.812050819396973
    4. '(p' → logprob: -11.437050819396973
    5. '-p' → logprob: -11.687050819396973
    6. ' -(' → logprob: -12.687050819396973
    7. 'self' → logprob: -13.437050819396973
    8. '	p' → logprob: -13.937050819396973
    9. '-' → logprob: -14.187050819396973
    10. ' ' → logprob: -14.687050819396973

Token 208: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009151478880085051
    2. '1' → logprob: -7.000915050506592
    3. 'oint' → logprob: -13.37591552734375
    4. 'oints' → logprob: -14.37591552734375
    5. '
' → logprob: -14.68841552734375
    6. '```' → logprob: -15.31341552734375
    7. 't' → logprob: -16.56341552734375
    8. 'p' → logprob: -16.75091552734375
    9. '₂' → logprob: -16.75091552734375
    10. 'ython' → logprob: -16.87591552734375

Token 209: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0019446993246674538
    2. '.' → logprob: -6.251944541931152
    3. 'x' → logprob: -11.126944541931152
    4. ' .' → logprob: -13.626944541931152
    5. '.y' → logprob: -16.50194549560547
    6. '._' → logprob: -18.00194549560547
    7. ' x' → logprob: -18.00194549560547
    8. ' ' → logprob: -19.25194549560547
    9. '[' → logprob: -19.37694549560547
    10. '<|end|>' → logprob: -19.50194549560547

Token 210: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20142242312431335
    2. '-' → logprob: -1.7014224529266357
    3. '-p' → logprob: -12.201422691345215
    4. ' ' → logprob: -13.451422691345215
    5. 'p' → logprob: -13.576422691345215
    6. '<|end|>' → logprob: -15.326422691345215
    7. ' ' → logprob: -15.576422691345215
    8. ' p' → logprob: -15.576422691345215
    9. ' -
' → logprob: -16.2014217376709
    10. '-
' → logprob: -16.2014217376709

Token 211: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005233882926404476
    2. ' p' → logprob: -5.2552337646484375
    3. '   ' → logprob: -18.755233764648438
    4. '	p' → logprob: -18.755233764648438
    5. ' ' → logprob: -19.380233764648438
    6. '  ' → logprob: -21.130233764648438
    7. '       ' → logprob: -21.130233764648438
    8. '    ' → logprob: -21.505233764648438
    9. '<p' → logprob: -21.880233764648438
    10. 'self' → logprob: -22.255233764648438

Token 212: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.036524842376821e-05
    2. 'p' → logprob: -10.125040054321289
    3. ' ' → logprob: -16.12504005432129
    4. ' p' → logprob: -16.12504005432129
    5. '₂' → logprob: -18.00004005432129
    6. '۲' → logprob: -18.75004005432129
    7. 's' → logprob: -18.87504005432129
    8. '```' → logprob: -19.12504005432129
    9. '.' → logprob: -19.25004005432129
    10. '_' → logprob: -19.37504005432129

Token 213: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -5.085517113911919e-05
    2. 'x' → logprob: -10.37505054473877
    3. '.' → logprob: -10.87505054473877
    4. ' .' → logprob: -15.50005054473877
    5. '0' → logprob: -15.75005054473877
    6. '1' → logprob: -16.375051498413086
    7. '[' → logprob: -16.500051498413086
    8. '2' → logprob: -17.125051498413086
    9. '```' → logprob: -17.375051498413086
    10. ' x' → logprob: -17.625051498413086

Token 214: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0339166522026062
    2. '<|end|>' → logprob: -3.533916711807251
    3. 'self' → logprob: -5.658916473388672
    4. ' self' → logprob: -8.033916473388672
    5. '   ' → logprob: -8.658916473388672
    6. '        
' → logprob: -10.033916473388672
    7. ' ' → logprob: -10.658916473388672
    8. '<|end|>' → logprob: -10.783916473388672
    9. ',' → logprob: -11.158916473388672
    10. ')' → logprob: -11.533916473388672

Token 216: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009838967584073544
    2. ' self' → logprob: -4.634839057922363
    3. '       ' → logprob: -9.509839057922363
    4. ' ' → logprob: -12.509839057922363
    5. '	self' → logprob: -13.259839057922363
    6. '
' → logprob: -13.634839057922363
    7. '   ' → logprob: -14.134839057922363
    8. '_self' → logprob: -15.134839057922363
    9. '(self' → logprob: -15.259839057922363
    10. '0' → logprob: -15.384839057922363

Token 217: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.11846888065338135
    2. '.' → logprob: -2.243468761444092
    3. ' .' → logprob: -5.743468761444092
    4. ' ' → logprob: -7.368468761444092
    5. '   ' → logprob: -7.493468761444092
    6. '.C' → logprob: -7.743468761444092
    7. ' C' → logprob: -9.11846923828125
    8. '_' → logprob: -9.24346923828125
    9. 'C' → logprob: -9.36846923828125
    10. '*' → logprob: -9.36846923828125

Token 218: 'C' (ID: 34)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0005356363253667951
    2. 'p' → logprob: -7.625535488128662
    3. '_A' → logprob: -11.00053596496582
    4. '1' → logprob: -11.25053596496582
    5. 'y' → logprob: -11.62553596496582
    6. ' A' → logprob: -12.37553596496582
    7. '```' → logprob: -13.75053596496582
    8. 'a' → logprob: -14.25053596496582
    9. '	A' → logprob: -14.25053596496582
    10. '   ' → logprob: -14.37553596496582

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804183006286621
    2. '=' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.538042068481445
    4. ' =(' → logprob: -16.413042068481445
    5. ':' → logprob: -17.038042068481445
    6. ' =
' → logprob: -18.163042068481445
    7. '0' → logprob: -18.663042068481445
    8. ')' → logprob: -18.663042068481445
    9. '1' → logprob: -18.788042068481445
    10. '=p' → logprob: -19.038042068481445

Token 220: ' -(' (ID: 66319)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2546927034854889
    2. ' p' → logprob: -1.5046926736831665
    3. ' self' → logprob: -7.004692554473877
    4. '-(' → logprob: -7.504692554473877
    5. '(p' → logprob: -7.879692554473877
    6. 'self' → logprob: -8.254693031311035
    7. '-p' → logprob: -8.379693031311035
    8. ' (' → logprob: -8.629693031311035
    9. '-' → logprob: -9.504693031311035
    10. '(' → logprob: -10.129693031311035

Token 221: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006267666816711426
    2. 'p' → logprob: -5.631267547607422
    3. ' self' → logprob: -6.131267547607422
    4. '(self' → logprob: -7.756267547607422
    5. '(p' → logprob: -10.631267547607422
    6. ' p' → logprob: -10.881267547607422
    7. '   ' → logprob: -11.131267547607422
    8. ' (' → logprob: -13.256267547607422
    9. '	self' → logprob: -13.506267547607422
    10. '(' → logprob: -14.506267547607422

Token 222: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0001684981834841892
    2. '.p' → logprob: -9.000168800354004
    3. '_p' → logprob: -10.250168800354004
    4. '.' → logprob: -11.750168800354004
    5. 'p' → logprob: -14.250168800354004
    6. '.x' → logprob: -14.750168800354004
    7. ' .' → logprob: -15.500168800354004
    8. '_' → logprob: -16.000167846679688
    9. '   ' → logprob: -16.250167846679688
    10. ')._' → logprob: -16.625167846679688

Token 223: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9361264946837764e-07
    2. ' A' → logprob: -16.375
    3. '.A' → logprob: -18.0
    4. '
' → logprob: -18.875
    5. '	A' → logprob: -19.0
    6. '_A' → logprob: -19.125
    7. 'p' → logprob: -19.625
    8. 'Ax' → logprob: -20.125
    9. 'Ａ' → logprob: -21.125
    10. 'А' → logprob: -21.125

Token 224: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08026779443025589
    2. '*p' → logprob: -2.705267906188965
    3. '*' → logprob: -4.580267906188965
    4. ')' → logprob: -11.580267906188965
    5. 'p' → logprob: -12.080267906188965
    6. ')*' → logprob: -12.455267906188965
    7. ' ' → logprob: -12.455267906188965
    8. '*x' → logprob: -13.830267906188965
    9. ' p' → logprob: -14.205267906188965
    10. '*self' → logprob: -14.455267906188965

Token 225: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03810185194015503
    2. ' p' → logprob: -3.2881019115448
    3. 'self' → logprob: -10.038102149963379
    4. ' self' → logprob: -11.038102149963379
    5. ')p' → logprob: -15.788102149963379
    6. '	p' → logprob: -16.413101196289062
    7. '   ' → logprob: -16.538101196289062
    8. ')' → logprob: -16.788101196289062
    9. '<|end|>' → logprob: -16.913101196289062
    10. ' ' → logprob: -17.038101196289062

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -15.000000953674316
    3. 'p' → logprob: -15.500000953674316
    4. 'oint' → logprob: -16.5625
    5. 'oints' → logprob: -16.9375
    6. '```' → logprob: -17.1875
    7. '
' → logprob: -17.5
    8. '' → logprob: -17.625
    9. 'self' → logprob: -17.6875
    10. 'r' → logprob: -17.8125

Token 227: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0001601539261173457
    2. '.' → logprob: -8.750160217285156
    3. ' .' → logprob: -13.750160217285156
    4. 'x' → logprob: -14.500160217285156
    5. ').' → logprob: -17.875160217285156
    6. '<|end|>' → logprob: -18.375160217285156
    7. '.
' → logprob: -19.000160217285156
    8. '}.' → logprob: -20.375160217285156
    9. '().' → logprob: -20.500160217285156
    10. '[' → logprob: -20.500160217285156

Token 228: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03432437777519226
    2. '+' → logprob: -3.4093244075775146
    3. ')' → logprob: -8.284324645996094
    4. ' ' → logprob: -8.409324645996094
    5. ' -' → logprob: -9.284324645996094
    6. '+self' → logprob: -9.409324645996094
    7. ' )' → logprob: -11.659324645996094
    8. '       ' → logprob: -11.909324645996094
    9. '-' → logprob: -12.659324645996094
    10. 'self' → logprob: -12.784324645996094

Token 229: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602330505847931
    2. ' self' → logprob: -1.9102330207824707
    3. '(self' → logprob: -12.910233497619629
    4. ' ' → logprob: -13.535233497619629
    5. '	self' → logprob: -13.660233497619629
    6. '
' → logprob: -13.660233497619629
    7. '       ' → logprob: -14.285233497619629
    8. ')' → logprob: -14.660233497619629
    9. '   ' → logprob: -14.785233497619629
    10. '  ' → logprob: -15.160233497619629

Token 230: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0009158630855381489
    2. '.y' → logprob: -7.250916004180908
    3. '.' → logprob: -8.87591552734375
    4. '1' → logprob: -10.87591552734375
    5. ' .' → logprob: -11.00091552734375
    6. '.x' → logprob: -11.50091552734375
    7. '_' → logprob: -12.37591552734375
    8. '.p' → logprob: -12.87591552734375
    9. ' ' → logprob: -13.37591552734375
    10. '   ' → logprob: -13.62591552734375

Token 231: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05128931254148483
    2. 'p' → logprob: -3.5512893199920654
    3. 'C' → logprob: -3.9262893199920654
    4. 'A' → logprob: -6.801289081573486
    5. 'y' → logprob: -8.051289558410645
    6. '_B' → logprob: -10.301289558410645
    7. '
' → logprob: -10.551289558410645
    8. '1' → logprob: -10.926289558410645
    9. '.B' → logprob: -11.176289558410645
    10. ' B' → logprob: -11.426289558410645

Token 232: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0010374527191743255
    2. '*' → logprob: -6.87603759765625
    3. '*p' → logprob: -12.62603759765625
    4. ' ' → logprob: -14.00103759765625
    5. ')' → logprob: -15.12603759765625
    6. '*y' → logprob: -16.75103759765625
    7. 'p' → logprob: -16.87603759765625
    8. ' p' → logprob: -17.12603759765625
    9. ' *
' → logprob: -17.25103759765625
    10. '<|end|>' → logprob: -17.62603759765625

Token 233: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0699438825249672
    2. ' p' → logprob: -2.694943904876709
    3. ')' → logprob: -13.69494342803955
    4. '
' → logprob: -13.81994342803955
    5. ' ' → logprob: -13.81994342803955
    6. '   ' → logprob: -14.19494342803955
    7. ')p' → logprob: -14.50744342803955
    8. '1' → logprob: -14.63244342803955
    9. '```' → logprob: -14.69494342803955
    10. 'point' → logprob: -15.06994342803955

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.722539834911004e-05
    2. 'y' → logprob: -9.625097274780273
    3. '.y' → logprob: -10.625097274780273
    4. 'p' → logprob: -13.125097274780273
    5. '```' → logprob: -13.750097274780273
    6. ' y' → logprob: -13.875097274780273
    7. '.' → logprob: -14.750097274780273
    8. 'x' → logprob: -15.187597274780273
    9. ')' → logprob: -15.437597274780273
    10. ' ' → logprob: -15.500097274780273

Token 235: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00044783088378608227
    2. '.' → logprob: -8.000448226928711
    3. 'y' → logprob: -9.125448226928711
    4. ' .' → logprob: -13.500448226928711
    5. '.x' → logprob: -13.750448226928711
    6. ')' → logprob: -14.875448226928711
    7. ' y' → logprob: -15.000448226928711
    8. '	y' → logprob: -16.12544822692871
    9. '.py' → logprob: -16.50044822692871
    10. '<|end|>' → logprob: -16.62544822692871

Token 236: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. ')
' → logprob: -11.37501335144043
    3. ' )' → logprob: -13.50001335144043
    4. '       ' → logprob: -15.00001335144043
    5. '   ' → logprob: -16.12501335144043
    6. '<|end|>' → logprob: -16.75001335144043
    7. ')}' → logprob: -16.87501335144043
    8. '))' → logprob: -17.25001335144043
    9. ')`' → logprob: -17.50001335144043
    10. ')

' → logprob: -17.75001335144043

Token 237: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00421207444742322
    2. '
' → logprob: -6.504211902618408
    3. '    
' → logprob: -6.504211902618408
    4. 'def' → logprob: -7.254211902618408
    5. '<|end|>' → logprob: -8.254212379455566
    6. '  
' → logprob: -9.254212379455566
    7. ' def' → logprob: -10.004212379455566
    8. '        
' → logprob: -10.379212379455566
    9. ' ' → logprob: -10.754212379455566
    10. '	def' → logprob: -11.754212379455566

Token 238: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23361864686012268
    2. '   ' → logprob: -1.6086186170578003
    3. ' def' → logprob: -4.98361873626709
    4. '    
' → logprob: -7.98361873626709
    5. ' ' → logprob: -8.35861873626709
    6. '<|end|>' → logprob: -8.60861873626709
    7. '       ' → logprob: -9.10861873626709
    8. '@property' → logprob: -9.23361873626709
    9. '        
' → logprob: -9.35861873626709
    10. '  
' → logprob: -9.35861873626709

Token 239: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.05896199122071266
    2. '.' → logprob: -3.808962106704712
    3. '.length' → logprob: -4.058961868286133
    4. '.norm' → logprob: -4.558961868286133
    5. '.is' → logprob: -6.433961868286133
    6. '.distance' → logprob: -7.058961868286133
    7. '.normal' → logprob: -7.183961868286133
    8. '.dist' → logprob: -7.433961868286133
    9. '.len' → logprob: -7.558961868286133
    10. '.def' → logprob: -8.308961868286133

Token 240: 'normalize' (ID: 62699)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.6086733937263489
    2. 'length' → logprob: -1.108673334121704
    3. 'normal' → logprob: -2.858673334121704
    4. 'den' → logprob: -2.983673334121704
    5. 'A' → logprob: -5.108673572540283
    6. 'len' → logprob: -5.483673572540283
    7. 'normalize' → logprob: -5.733673572540283
    8. 'D' → logprob: -6.608673572540283
    9. 'm' → logprob: -7.358673572540283
    10. 'C' → logprob: -7.983673572540283

Token 241: '()

' (ID: 5874)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14904798567295074
    2. '()' → logprob: -2.149048089981079
    3. '_factor' → logprob: -4.0240478515625
    4. '_' → logprob: -6.2740478515625
    5. 'ed' → logprob: -6.6490478515625
    6. '_vector' → logprob: -8.5240478515625
    7. '()
' → logprob: -8.8990478515625
    8. 'factor' → logprob: -9.0240478515625
    9. '_d' → logprob: -9.6490478515625
    10. 's' → logprob: -9.6490478515625

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6646118760108948
    2. '
' → logprob: -0.7896118760108948
    3. '    
' → logprob: -3.91461181640625
    4. '  
' → logprob: -5.28961181640625
    5. 'def' → logprob: -6.16461181640625
    6. '<|end|>' → logprob: -6.28961181640625
    7. ' 
' → logprob: -6.41461181640625
    8. ' ' → logprob: -8.28961181640625
    9. '   
' → logprob: -8.53961181640625
    10. '  ' → logprob: -9.03961181640625

Token 243: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006801456678658724
    2. ' def' → logprob: -5.256801605224609
    3. '   ' → logprob: -6.506801605224609
    4. '
' → logprob: -9.88180160522461
    5. '    
' → logprob: -11.13180160522461
    6. ' ' → logprob: -12.50680160522461
    7. '	def' → logprob: -13.25680160522461
    8. '  
' → logprob: -13.75680160522461
    9. '

' → logprob: -15.00680160522461
    10. ' 
' → logprob: -15.25680160522461

Token 244: ' _' (ID: 1175)
  Prédit: '_normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_normal' → logprob: -0.006843241862952709
    2. ' _' → logprob: -5.006843090057373
    3. '_distance' → logprob: -9.131843566894531
    4. '_' → logprob: -11.131843566894531
    5. '_norm' → logprob: -12.756843566894531
    6. ' normal' → logprob: -14.256843566894531
    7. '_Normal' → logprob: -15.131843566894531
    8. '_NORMAL' → logprob: -15.631843566894531
    9. '_define' → logprob: -15.756843566894531
    10. ' def' → logprob: -15.881843566894531

Token 245: 'normalize' (ID: 62699)
  Prédit: 'normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -5.796184723294573e-06
    2. 'A' → logprob: -13.375005722045898
    3. ' normalize' → logprob: -13.625005722045898
    4. '.normalize' → logprob: -14.125005722045898
    5. 'def' → logprob: -14.375005722045898
    6. 'normal' → logprob: -14.500005722045898
    7. '_normal' → logprob: -15.000005722045898
    8. 'length' → logprob: -15.875005722045898
    9. '
' → logprob: -16.0000057220459
    10. '  ' → logprob: -16.1250057220459

Token 246: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000552555953618139
    2. '(' → logprob: -7.625552654266357
    3. 'self' → logprob: -9.8755521774292
    4. '(
' → logprob: -12.3755521774292
    5. '   ' → logprob: -12.8755521774292
    6. ' (' → logprob: -13.1255521774292
    7. ' self' → logprob: -13.2505521774292
    8. '(s' → logprob: -14.0005521774292
    9. '	self' → logprob: -14.5005521774292
    10. ' ' → logprob: -15.6255521774292

Token 247: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2064857929944992
    2. '):
' → logprob: -1.7064857482910156
    3. ')' → logprob: -5.581485748291016
    4. 'self' → logprob: -6.956485748291016
    5. '(self' → logprob: -8.456485748291016
    6. '):
' → logprob: -10.456485748291016
    7. ')->' → logprob: -10.706485748291016
    8. '):

' → logprob: -10.831485748291016
    9. ':' → logprob: -11.081485748291016
    10. '   ' → logprob: -11.456485748291016

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020840009674429893
    2. '   ' → logprob: -7.127083778381348
    3. ' norm' → logprob: -7.127083778381348
    4. 'norm' → logprob: -8.502083778381348
    5. 'n' → logprob: -9.252083778381348
    6. ' length' → logprob: -9.502083778381348
    7. 'd' → logprob: -10.752083778381348
    8. ' divisor' → logprob: -11.252083778381348
    9. ' n' → logprob: -12.002083778381348
    10. 'm' → logprob: -12.002083778381348

Token 249: ' norm' (ID: 7882)
  Prédit: ' norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' norm' → logprob: -0.6937792897224426
    2. '       ' → logprob: -1.1937792301177979
    3. 'norm' (adapté à ' norm') → logprob: -1.6937792301177979
    4. ' length' → logprob: -5.193779468536377
    5. 'length' → logprob: -5.818779468536377
    6. ' mag' → logprob: -6.693779468536377
    7. 'den' → logprob: -6.818779468536377
    8. ' denom' → logprob: -6.943779468536377
    9. 'dist' → logprob: -7.443779468536377
    10. 'd' → logprob: -8.193778991699219

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804366663098335
    2. '=' → logprob: -3.288043737411499
    3. '_' → logprob: -13.663043975830078
    4. ' ' → logprob: -15.163043975830078
    5. '   ' → logprob: -15.163043975830078
    6. ':' → logprob: -15.413043975830078
    7. '	' → logprob: -15.538043975830078
    8. ' =
' → logprob: -16.913043975830078
    9. '_value' → logprob: -17.538043975830078
    10. ' ' → logprob: -17.538043975830078

Token 251: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4742622971534729
    2. ' math' → logprob: -0.9742622971534729
    3. '(math' → logprob: -8.599262237548828
    4. ' (' → logprob: -14.599262237548828
    5. '   ' → logprob: -14.849262237548828
    6. '       ' → logprob: -16.474262237548828
    7. ' ' → logprob: -16.724262237548828
    8. '.math' → logprob: -16.849262237548828
    9. '/math' → logprob: -17.724262237548828
    10. '(' → logprob: -18.099262237548828

Token 252: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.003513595089316368
    2. '.h' → logprob: -5.753513813018799
    3. '.' → logprob: -8.00351333618164
    4. '.Sqrt' → logprob: -14.62851333618164
    5. '.atan' → logprob: -14.87851333618164
    6. 'sqrt' → logprob: -15.12851333618164
    7. '.dist' → logprob: -15.50351333618164
    8. '.s' → logprob: -15.87851333618164
    9. ' .' → logprob: -17.00351333618164
    10. '.f' → logprob: -17.75351333618164

Token 253: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.00010139751975657418
    2. 'sqrt' → logprob: -9.750101089477539
    3. 'ot' → logprob: -11.250101089477539
    4. 'hyp' → logprob: -11.500101089477539
    5. '.sqrt' → logprob: -11.625101089477539
    6. 'y' → logprob: -12.500101089477539
    7. 'at' → logprob: -12.625101089477539
    8. 's' → logprob: -14.000101089477539
    9. 'sq' → logprob: -14.250101089477539
    10. 'op' → logprob: -14.875101089477539

Token 254: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -9.078839502763003e-05
    2. 'at' → logprob: -10.125090599060059
    3. 't' → logprob: -10.250090599060059
    4. 'sqrt' → logprob: -12.250090599060059
    5. 'o' → logprob: -13.250090599060059
    6. '2' → logprob: -13.250090599060059
    7. '1' → logprob: -13.875090599060059
    8. 'oton' → logprob: -13.875090599060059
    9. '(' → logprob: -13.875090599060059
    10. '[' → logprob: -14.500090599060059

Token 255: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2948405128554441e-05
    2. '(' → logprob: -11.37501335144043
    3. 'self' → logprob: -13.50001335144043
    4. '(
' → logprob: -18.37501335144043
    5. '(this' → logprob: -18.62501335144043
    6. ' self' → logprob: -18.87501335144043
    7. '(s' → logprob: -19.87501335144043
    8. '((' → logprob: -19.87501335144043
    9. ' (' → logprob: -20.00001335144043
    10. ',self' → logprob: -20.12501335144043

Token 256: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.2729995988775045e-06
    2. 'self' → logprob: -13.250006675720215
    3. '.A' → logprob: -13.500006675720215
    4. '.' → logprob: -14.125006675720215
    5. '_A' → logprob: -14.125006675720215
    6. ' .' → logprob: -14.875006675720215
    7. '(self' → logprob: -15.000006675720215
    8. '_self' → logprob: -15.125006675720215
    9. 'A' → logprob: -16.2500057220459
    10. ' self' → logprob: -16.5000057220459

Token 257: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0280383548888494e-06
    2. '_A' → logprob: -14.500000953674316
    3. ' A' → logprob: -14.750000953674316
    4. '.A' → logprob: -16.875001907348633
    5. 'B' → logprob: -17.625001907348633
    6. '	A' → logprob: -17.750001907348633
    7. '```' → logprob: -18.375001907348633
    8. '(A' → logprob: -18.500001907348633
    9. '
' → logprob: -18.625001907348633
    10. 'А' → logprob: -18.750001907348633

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005930667975917459
    2. ' ,' → logprob: -8.125593185424805
    3. ',self' → logprob: -8.125593185424805
    4. 'self' → logprob: -14.375593185424805
    5. ',
' → logprob: -15.875593185424805
    6. ' ' → logprob: -16.500593185424805
    7. '<|end|>' → logprob: -16.750593185424805
    8. ',float' → logprob: -17.000593185424805
    9. '```' → logprob: -17.000593185424805
    10. '‌,' → logprob: -17.375593185424805

Token 259: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011050650849938393
    2. ' self' → logprob: -4.511050701141357
    3. '	self' → logprob: -13.7610502243042
    4. '(self' → logprob: -13.8860502243042
    5. '       ' → logprob: -14.8860502243042
    6. '[self' → logprob: -15.7610502243042
    7. '<|end|>' → logprob: -16.511051177978516
    8. '=self' → logprob: -16.636051177978516
    9. ' ' → logprob: -17.386051177978516
    10. '
' → logprob: -17.511051177978516

Token 260: '._' (ID: 2697)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -6.749814019713085e-06
    2. 'B' → logprob: -12.500006675720215
    3. ' _' → logprob: -13.000006675720215
    4. '._' → logprob: -15.375006675720215
    5. '_A' → logprob: -15.875006675720215
    6. '_C' → logprob: -16.37500762939453
    7. '_' → logprob: -16.87500762939453
    8. '```' → logprob: -17.25000762939453
    9. '_BGR' → logprob: -17.62500762939453
    10. '   ' → logprob: -17.87500762939453

Token 261: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.881560041918419e-05
    2. '_B' → logprob: -10.750039100646973
    3. ' B' → logprob: -11.000039100646973
    4. '	B' → logprob: -15.875039100646973
    5. '   ' → logprob: -16.250038146972656
    6. ' ' → logprob: -16.500038146972656
    7. '```' → logprob: -17.125038146972656
    8. 'Б' → logprob: -17.250038146972656
    9. '-B' → logprob: -17.250038146972656
    10. '.B' → logprob: -17.312538146972656

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11293496191501617
    2. ')
' → logprob: -2.2379350662231445
    3. ' )' → logprob: -9.987935066223145
    4. '       ' → logprob: -10.362935066223145
    5. ' )
' → logprob: -10.862935066223145
    6. ')
' → logprob: -11.737935066223145
    7. ')

' → logprob: -12.737935066223145
    8. ',' → logprob: -14.237935066223145
    9. '),' → logprob: -14.737935066223145
    10. '):
' → logprob: -14.862935066223145

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011618655174970627
    2. ' if' → logprob: -4.511618614196777
    3. 'if' → logprob: -8.886618614196777
    4. '<|end|>' → logprob: -9.261618614196777
    5. ' self' → logprob: -9.636618614196777
    6. 'self' → logprob: -9.761618614196777
    7. ',' → logprob: -9.761618614196777
    8. '
' → logprob: -10.011618614196777
    9. '        
' → logprob: -10.261618614196777
    10. '```' → logprob: -11.011618614196777

Token 264: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06285233795642853
    2. ' self' → logprob: -3.187852382659912
    3. 'if' (adapté à ' if') → logprob: -4.562852382659912
    4. '       ' → logprob: -4.937852382659912
    5. 'self' → logprob: -6.187852382659912
    6. 'If' → logprob: -14.812851905822754
    7. '        ' → logprob: -15.562851905822754
    8. ' ' → logprob: -16.18785285949707
    9. '	if' → logprob: -16.56285285949707
    10. '   ' → logprob: -16.56285285949707

Token 265: ' norm' (ID: 7882)
  Prédit: ' norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' norm' → logprob: -0.0297548845410347
    2. 'norm' → logprob: -3.529754877090454
    3. '(norm' → logprob: -12.404754638671875
    4. ' ' → logprob: -15.779754638671875
    5. '.norm' → logprob: -17.029754638671875
    6. '   ' → logprob: -17.029754638671875
    7. ' math' → logprob: -17.279754638671875
    8. '_norm' → logprob: -17.654754638671875
    9. ' not' → logprob: -17.904754638671875
    10. 'n' → logprob: -18.029754638671875

Token 266: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5790639519691467
    2. ' ==' → logprob: -1.329063892364502
    3. ' !=' → logprob: -2.329063892364502
    4. '>' → logprob: -3.204063892364502
    5. '==' → logprob: -3.454063892364502
    6. '!=' → logprob: -5.329063892364502
    7. ':' → logprob: -8.57906436920166
    8. '<|end|>' → logprob: -9.57906436920166
    9. '=' → logprob: -9.95406436920166
    10. '0' → logprob: -10.32906436920166

Token 267: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. '1' → logprob: -16.752185821533203
    4. '   ' → logprob: -16.752185821533203
    5. '۰' → logprob: -17.627185821533203
    6. '  ' → logprob: -17.752185821533203
    7. '```' → logprob: -17.752185821533203
    8. ' ' → logprob: -18.314685821533203
    9. '
' → logprob: -19.064685821533203
    10. '>' → logprob: -19.377185821533203

Token 268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '۰' → logprob: -17.625123977661133
    4. '1' → logprob: -17.812623977661133
    5. '   ' → logprob: -18.125123977661133
    6. '  ' → logprob: -18.625123977661133
    7. '```' → logprob: -18.812623977661133
    8. '
' → logprob: -19.000123977661133
    9. '<|end|>' → logprob: -19.125123977661133
    10. '٠' → logprob: -19.625123977661133

Token 269: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08940602838993073
    2. ':
' → logprob: -2.4644060134887695
    3. ':return' → logprob: -8.33940601348877
    4. '<|end|>' → logprob: -9.21440601348877
    5. ' :' → logprob: -9.46440601348877
    6. ' :
' → logprob: -10.83940601348877
    7. ' or' → logprob: -11.08940601348877
    8. '):
' → logprob: -12.71440601348877
    9. '<|end|>' → logprob: -12.71440601348877
    10. '):' → logprob: -13.21440601348877

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038601476699113846
    2. ' return' → logprob: -3.5386013984680176
    3. ' raise' → logprob: -4.913601398468018
    4. 'return' → logprob: -7.288601398468018
    5. 'raise' → logprob: -8.288601875305176
    6. ':return' → logprob: -9.038601875305176
    7. ',' → logprob: -9.538601875305176
    8. ':' → logprob: -9.913601875305176
    9. '            
' → logprob: -10.038601875305176
    10. '
' → logprob: -10.038601875305176

Token 271: ' self' (ID: 1051)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.38201287388801575
    2. 'return' → logprob: -1.7570128440856934
    3. ' raise' → logprob: -2.0070128440856934
    4. 'raise' → logprob: -4.632012844085693
    5. '           ' → logprob: -8.257013320922852
    6. ' self' → logprob: -8.757013320922852
    7. ' norm' → logprob: -9.007013320922852
    8. '       ' → logprob: -9.257013320922852
    9. 'self' (adapté à ' self') → logprob: -9.257013320922852
    10. 'norm' → logprob: -9.757013320922852

Token 272: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0004026673559565097
    2. '.A' → logprob: -8.375402450561523
    3. '.' → logprob: -9.625402450561523
    4. ' .' → logprob: -10.875402450561523
    5. '_norm' → logprob: -11.250402450561523
    6. '_' → logprob: -11.500402450561523
    7. '.Normal' → logprob: -11.875402450561523
    8. '_A' → logprob: -12.125402450561523
    9. ' raise' → logprob: -12.375402450561523
    10. '
' → logprob: -12.375402450561523

Token 273: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00376101303845644
    2. 'normalize' → logprob: -6.003760814666748
    3. 'raise' → logprob: -7.003760814666748
    4. 'C' → logprob: -8.378761291503906
    5. 'norm' → logprob: -9.128761291503906
    6. 'normalized' → logprob: -11.503761291503906
    7. ' A' → logprob: -12.128761291503906
    8. 'normal' → logprob: -12.628761291503906
    9. '
' → logprob: -12.753761291503906
    10. 'B' → logprob: -13.753761291503906

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28853729367256165
    2. '=' → logprob: -1.4135372638702393
    3. ',' → logprob: -5.038537502288818
    4. ' ' → logprob: -7.788537502288818
    5. ' ,' → logprob: -9.03853702545166
    6. ' +=' → logprob: -9.28853702545166
    7. ' /=' → logprob: -9.41353702545166
    8. ' =
' → logprob: -10.16353702545166
    9. '<|end|>' → logprob: -10.53853702545166
    10. '+=' → logprob: -10.66353702545166

Token 275: ' self' (ID: 1051)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.856408536899835e-05
    2. ' ' → logprob: -10.750028610229492
    3. '1' → logprob: -11.875028610229492
    4. '
' → logprob: -18.000028610229492
    5. '   ' → logprob: -18.125028610229492
    6. ' ' → logprob: -18.312528610229492
    7. '۰' → logprob: -18.312528610229492
    8. 'float' → logprob: -18.312528610229492
    9. '  ' → logprob: -18.375028610229492
    10. '```' → logprob: -18.750028610229492

Token 276: '._' (ID: 2697)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41800540685653687
    2. '._' → logprob: -1.1680054664611816
    3. '.' → logprob: -3.6680054664611816
    4. '.B' → logprob: -6.168005466461182
    5. '_' → logprob: -7.168005466461182
    6. ' ' → logprob: -7.668005466461182
    7. ',' → logprob: -7.793005466461182
    8. '1' → logprob: -8.168004989624023
    9. '.A' → logprob: -8.418004989624023
    10. '<|end|>' → logprob: -8.668004989624023

Token 277: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5951060652732849
    2. '0' → logprob: -0.8451060652732849
    3. 'A' → logprob: -4.72010612487793
    4. '1' → logprob: -4.72010612487793
    5. 'C' → logprob: -6.84510612487793
    6. ' B' → logprob: -11.47010612487793
    7. ' ' → logprob: -11.72010612487793
    8. 'p' → logprob: -11.84510612487793
    9. '
' → logprob: -11.84510612487793
    10. ' ' → logprob: -12.03260612487793

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16086871922016144
    2. '=' → logprob: -1.910868763923645
    3. '0' → logprob: -7.4108686447143555
    4. ' ' → logprob: -10.285868644714355
    5. '           ' → logprob: -13.660868644714355
    6. '<|end|>' → logprob: -14.285868644714355
    7. '       ' → logprob: -14.535868644714355
    8. ' and' → logprob: -14.535868644714355
    9. ',' → logprob: -14.785868644714355
    10. '
' → logprob: -14.910868644714355

Token 279: ' self' (ID: 1051)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0051916553638875484
    2. 'self' → logprob: -5.380191802978516
    3. ' ' → logprob: -7.880191802978516
    4. '1' → logprob: -8.880191802978516
    5. ' self' → logprob: -9.880191802978516
    6. '   ' → logprob: -13.880191802978516
    7. '=' → logprob: -15.067691802978516
    8. '=self' → logprob: -15.317691802978516
    9. '	self' → logprob: -15.380191802978516
    10. '  ' → logprob: -15.567691802978516

Token 280: '._' (ID: 2697)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6192668080329895
    2. '._' → logprob: -0.8692668080329895
    3. '.' → logprob: -3.4942667484283447
    4. ' ' → logprob: -5.244266986846924
    5. '.C' → logprob: -6.244266986846924
    6. '1' → logprob: -6.369266986846924
    7. ' .' → logprob: -7.619266986846924
    8. '_' → logprob: -7.744266986846924
    9. 'C' → logprob: -7.869266986846924
    10. '=' → logprob: -7.994266986846924

Token 281: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.3306015716807451e-05
    2. '0' → logprob: -11.62501335144043
    3. ' C' → logprob: -13.37501335144043
    4. 'c' → logprob: -13.75001335144043
    5. '1' → logprob: -14.37501335144043
    6. 'A' → logprob: -14.50001335144043
    7. '
' → logprob: -15.12501335144043
    8. ' ' → logprob: -16.00001335144043
    9. '_C' → logprob: -16.00001335144043
    10. '  ' → logprob: -17.12501335144043

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7739496827125549
    2. ' =' → logprob: -1.1489496231079102
    3. '0' → logprob: -1.5239496231079102
    4. ' ' → logprob: -5.52394962310791
    5. '           ' → logprob: -13.89894962310791
    6. ' ' → logprob: -14.89894962310791
    7. '   ' → logprob: -15.64894962310791
    8. '000' → logprob: -15.77394962310791
    9. '	' → logprob: -15.89894962310791
    10. '       ' → logprob: -16.148950576782227

Token 283: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002476135268807411
    2. ' ' → logprob: -6.002476215362549
    3. '1' → logprob: -16.50247573852539
    4. ' ' → logprob: -16.50247573852539
    5. 'float' → logprob: -16.62747573852539
    6. '  ' → logprob: -17.12747573852539
    7. '۰' → logprob: -17.62747573852539
    8. ' float' → logprob: -17.93997573852539
    9. '   ' → logprob: -18.43997573852539
    10. '```' → logprob: -19.00247573852539

Token 284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.375012397766113
    3. 'float' → logprob: -14.250012397766113
    4. '1' → logprob: -17.31251335144043
    5. '۰' → logprob: -17.75001335144043
    6. 'math' → logprob: -17.75001335144043
    7. '```' → logprob: -18.25001335144043
    8. ' float' → logprob: -18.25001335144043
    9. 'None' → logprob: -18.31251335144043
    10. 'nan' → logprob: -18.43751335144043

Token 285: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006133671849966049
    2. '
' → logprob: -5.381133556365967
    3. '           ' → logprob: -6.756133556365967
    4. '<|end|>' → logprob: -9.006134033203125
    5. ' else' → logprob: -9.381134033203125
    6. 'else' → logprob: -9.881134033203125
    7. '   ' → logprob: -10.756134033203125
    8. '        
' → logprob: -11.006134033203125
    9. '<|end|>' → logprob: -11.881134033203125
    10. ',' → logprob: -12.131134033203125

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008383725769817829
    2. '       ' → logprob: -5.008383750915527
    3. '   ' → logprob: -7.133383750915527
    4. 'else' → logprob: -7.383383750915527
    5. '
' → logprob: -9.258383750915527
    6. ' ' → logprob: -10.008383750915527
    7. ' else' → logprob: -10.133383750915527
    8. 'return' → logprob: -10.883383750915527
    9. '        
' → logprob: -11.383383750915527
    10. '  ' → logprob: -12.008383750915527

Token 287: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002812601625919342
    2. '
' → logprob: -6.127812385559082
    3. '           ' → logprob: -7.877812385559082
    4. ' else' → logprob: -9.627812385559082
    5. '<|end|>' → logprob: -9.627812385559082
    6. 'else' → logprob: -10.002812385559082
    7. '        
' → logprob: -11.002812385559082
    8. '   ' → logprob: -11.377812385559082
    9. ',' → logprob: -11.752812385559082
    10. '    
' → logprob: -11.877812385559082

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022314980160444975
    2. ' else' → logprob: -6.502231597900391
    3. 'else' → logprob: -7.627231597900391
    4. '           ' → logprob: -8.62723159790039
    5. '<|end|>' → logprob: -10.62723159790039
    6. '
' → logprob: -10.87723159790039
    7. '   ' → logprob: -11.87723159790039
    8. '        
' → logprob: -12.87723159790039
    9. ',' → logprob: -13.12723159790039
    10. 'return' → logprob: -13.37723159790039

Token 289: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2747505009174347
    2. 'else' (adapté à ' else') → logprob: -1.7747504711151123
    3. ' else' → logprob: -2.6497504711151123
    4. '   ' → logprob: -10.399750709533691
    5. 'self' → logprob: -12.274750709533691
    6. '           ' → logprob: -13.024750709533691
    7. '```' → logprob: -13.274750709533691
    8. '	else' → logprob: -13.524750709533691
    9. ',' → logprob: -14.649750709533691
    10. '     ' → logprob: -14.899750709533691

Token 290: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14278356730937958
    2. ':' → logprob: -2.0177836418151855
    3. '           ' → logprob: -9.892783164978027
    4. '       ' → logprob: -10.392783164978027
    5. ' :
' → logprob: -11.392783164978027
    6. '):
' → logprob: -12.142783164978027
    7. ':

' → logprob: -12.642783164978027
    8. ':
' → logprob: -12.767783164978027
    9. ',' → logprob: -12.892783164978027
    10. '   ' → logprob: -14.517783164978027

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05760665982961655
    2. ' self' → logprob: -2.9326066970825195
    3. '   ' → logprob: -6.6826066970825195
    4. '       ' → logprob: -7.1826066970825195
    5. 'self' → logprob: -7.3076066970825195
    6. ' ' → logprob: -10.80760669708252
    7. '  ' → logprob: -12.68260669708252
    8. '               ' → logprob: -12.93260669708252
    9. '         ' → logprob: -13.30760669708252
    10. '	       ' → logprob: -13.43260669708252

Token 292: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04872986674308777
    2. 'self' (adapté à ' self') → logprob: -3.04872989654541
    3. '           ' → logprob: -8.92372989654541
    4. '   ' → logprob: -11.92372989654541
    5. ' ' → logprob: -13.92372989654541
    6. '       ' → logprob: -14.04872989654541
    7. '	self' → logprob: -15.17372989654541
    8. '               ' → logprob: -15.42372989654541
    9. '  ' → logprob: -16.048728942871094
    10. 'Self' → logprob: -16.173728942871094

Token 293: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00017445837147533894
    2. '.' → logprob: -9.000174522399902
    3. ' .' → logprob: -11.125174522399902
    4. '.A' → logprob: -11.125174522399902
    5. '_' → logprob: -12.250174522399902
    6. '   ' → logprob: -12.625174522399902
    7. ':' → logprob: -13.125174522399902
    8. ')._' → logprob: -13.500174522399902
    9. '
' → logprob: -13.875174522399902
    10. '_A' → logprob: -14.000174522399902

Token 294: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.320199877838604e-07
    2. ' A' → logprob: -15.125
    3. '_A' → logprob: -17.0
    4. 'А' → logprob: -17.875
    5. '	A' → logprob: -18.75
    6. '   ' → logprob: -18.75
    7. '
' → logprob: -19.125
    8. '  ' → logprob: -19.25
    9. '=' → logprob: -19.875
    10. '

' → logprob: -19.875

Token 295: ' /=' (ID: 37808)
  Prédit: ' /='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /=' → logprob: -0.0450051873922348
    2. '/=' → logprob: -3.1700050830841064
    3. ' /' → logprob: -6.4200053215026855
    4. '/' → logprob: -7.9200053215026855
    5. '=' → logprob: -11.795004844665527
    6. '   ' → logprob: -13.420004844665527
    7. ' =' → logprob: -13.670004844665527
    8. ' ' → logprob: -14.045004844665527
    9. ',' → logprob: -15.420004844665527
    10. '  ' → logprob: -15.920004844665527

Token 296: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.2519293427467346
    2. ' norm' → logprob: -1.5019292831420898
    3. '(norm' → logprob: -15.00192928314209
    4. '
' → logprob: -17.751930236816406
    5. '_norm' → logprob: -17.876930236816406
    6. 'orm' → logprob: -18.126930236816406
    7. 'n' → logprob: -18.876930236816406
    8. '.norm' → logprob: -19.376930236816406
    9. 'Norm' → logprob: -20.626930236816406
    10. 'normal' → logprob: -21.251930236816406

Token 297: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37888848781585693
    2. '<|end|>' → logprob: -1.503888487815857
    3. '       ' → logprob: -3.3788886070251465
    4. ',' → logprob: -3.5038886070251465
    5. 'self' → logprob: -4.2538886070251465
    6. '
' → logprob: -5.0038886070251465
    7. '<|end|>' → logprob: -5.5038886070251465
    8. ',
' → logprob: -6.5038886070251465
    9. ' self' → logprob: -7.1288886070251465
    10. '   ' → logprob: -8.003888130187988

Token 298: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008983621373772621
    2. 'self' → logprob: -7.750898361206055
    3. '       ' → logprob: -8.125898361206055
    4. ',' → logprob: -9.875898361206055
    5. ' self' → logprob: -9.875898361206055
    6. '   ' → logprob: -11.000898361206055
    7. '
' → logprob: -11.750898361206055
    8. '          ' → logprob: -11.750898361206055
    9. '               ' → logprob: -11.875898361206055
    10. '<|end|>' → logprob: -12.000898361206055

Token 299: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011206500232219696
    2. ' self' → logprob: -4.51120662689209
    3. '           ' → logprob: -8.76120662689209
    4. '	self' → logprob: -14.26120662689209
    5. '       ' → logprob: -14.38620662689209
    6. '   ' → logprob: -16.011205673217773
    7. '_self' → logprob: -16.261205673217773
    8. 'Self' → logprob: -16.511205673217773
    9. '               ' → logprob: -16.636205673217773
    10. ' ' → logprob: -16.636205673217773

Token 300: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0005724519141949713
    2. '.B' → logprob: -7.750572681427002
    3. '_B' → logprob: -9.625572204589844
    4. '.' → logprob: -9.875572204589844
    5. ' _' → logprob: -11.625572204589844
    6. ' .' → logprob: -11.750572204589844
    7. '_' → logprob: -13.125572204589844
    8. '   ' → logprob: -13.375572204589844
    9. ' ' → logprob: -13.500572204589844
    10. '<|end|>' → logprob: -14.625572204589844

Token 301: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.319370302458992e-06
    2. ' B' → logprob: -12.250005722045898
    3. '_B' → logprob: -15.125005722045898
    4. 'A' → logprob: -16.2500057220459
    5. 'b' → logprob: -16.8750057220459
    6. '	B' → logprob: -17.1250057220459
    7. '```' → logprob: -17.3750057220459
    8. '   ' → logprob: -17.6250057220459
    9. ' ' → logprob: -17.8750057220459
    10. '
' → logprob: -18.4375057220459

Token 302: ' /=' (ID: 37808)
  Prédit: ' /='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /=' → logprob: -0.163518488407135
    2. '/=' → logprob: -1.9135184288024902
    3. '/' → logprob: -5.78851842880249
    4. ' /' → logprob: -8.663518905639648
    5. '<|end|>' → logprob: -9.913518905639648
    6. ' ' → logprob: -13.788518905639648
    7. '```' → logprob: -13.913518905639648
    8. '<|end|>' → logprob: -14.538518905639648
    9. '=' → logprob: -15.413518905639648
    10. '       ' → logprob: -15.663518905639648

Token 303: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.018150413408875465
    2. ' norm' → logprob: -4.018150329589844
    3. '(norm' → logprob: -14.643150329589844
    4. '_norm' → logprob: -18.518150329589844
    5. '.norm' → logprob: -19.018150329589844
    6. '
' → logprob: -19.643150329589844
    7. ' ' → logprob: -20.893150329589844
    8. 'n' → logprob: -20.893150329589844
    9. 'orm' → logprob: -20.893150329589844
    10. '   ' → logprob: -22.143150329589844

Token 304: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010759611177491024
    2. 'self' → logprob: -9.375107765197754
    3. ' self' → logprob: -11.750107765197754
    4. '
' → logprob: -12.000107765197754
    5. '       ' → logprob: -12.875107765197754
    6. '   ' → logprob: -13.500107765197754
    7. ',' → logprob: -13.625107765197754
    8. '          ' → logprob: -13.750107765197754
    9. '               ' → logprob: -14.500107765197754
    10. '		' → logprob: -14.500107765197754

Token 305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.037835580878891e-05
    2. ' self' → logprob: -10.25005054473877
    3. 'self' → logprob: -11.37505054473877
    4. '       ' → logprob: -13.62505054473877
    5. '```' → logprob: -14.37505054473877
    6. '   ' → logprob: -14.50005054473877
    7. ',' → logprob: -15.25005054473877
    8. '               ' → logprob: -15.37505054473877
    9. '          ' → logprob: -15.50005054473877
    10. '		' → logprob: -15.62505054473877

Token 306: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5760285258293152
    2. ' self' → logprob: -0.8260285258293152
    3. '           ' → logprob: -9.451028823852539
    4. '	self' → logprob: -12.326028823852539
    5. ' ' → logprob: -12.701028823852539
    6. '   ' → logprob: -14.326028823852539
    7. ' ' → logprob: -14.826028823852539
    8. '(self' → logprob: -14.951028823852539
    9. '_self' → logprob: -14.951028823852539
    10. '  ' → logprob: -15.326028823852539

Token 307: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.01329152099788189
    2. '_C' → logprob: -4.388291358947754
    3. '.C' → logprob: -7.263291358947754
    4. '.' → logprob: -10.388291358947754
    5. '_B' → logprob: -11.638291358947754
    6. ' _' → logprob: -11.638291358947754
    7. '_' → logprob: -11.888291358947754
    8. ' .' → logprob: -12.263291358947754
    9. '
' → logprob: -12.388291358947754
    10. '<|end|>' → logprob: -12.638291358947754

Token 308: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.9361264946837764e-07
    2. ' C' → logprob: -15.875
    3. '_C' → logprob: -16.875
    4. 'B' → logprob: -17.75
    5. 'c' → logprob: -18.375
    6. 'A' → logprob: -18.75
    7. '	C' → logprob: -20.5
    8. 'С' → logprob: -20.625
    9. '  ' → logprob: -20.6875
    10. '   ' → logprob: -20.875

Token 309: ' /=' (ID: 37808)
  Prédit: ' /='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /=' → logprob: -0.08031202107667923
    2. '/=' → logprob: -2.5803120136260986
    3. '/' → logprob: -7.080312252044678
    4. ' /' → logprob: -7.455312252044678
    5. '<|end|>' → logprob: -14.45531177520752
    6. ' ' → logprob: -14.83031177520752
    7. '=' → logprob: -15.95531177520752
    8. '<|end|>' → logprob: -16.580312728881836
    9. ' ' → logprob: -16.705312728881836
    10. '  ' → logprob: -17.080312728881836

Token 310: ' norm' (ID: 7882)
  Prédit: ' norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' norm' → logprob: -0.10021066665649414
    2. 'norm' → logprob: -2.350210666656494
    3. '(norm' → logprob: -12.475210189819336
    4. '_norm' → logprob: -16.475210189819336
    5. '.norm' → logprob: -16.725210189819336
    6. 'orm' → logprob: -18.100210189819336
    7. ' ' → logprob: -18.975210189819336
    8. ' norme' → logprob: -19.475210189819336
    9. ' norma' → logprob: -19.725210189819336
    10. 'Norm' → logprob: -19.975210189819336

Token 311: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009703203104436398
    2. 'def' → logprob: -5.259703159332275
    3. ' def' → logprob: -5.634703159332275
    4. ' ' → logprob: -7.759703159332275
    5. '
' → logprob: -8.509703636169434
    6. '    
' → logprob: -9.634703636169434
    7. '```' → logprob: -9.759703636169434
    8. '  ' → logprob: -9.884703636169434
    9. '  
' → logprob: -10.634703636169434
    10. '	def' → logprob: -11.009703636169434

Token 313: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.688212614681106e-05
    2. ' def' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.875017166137695
    4. '@property' → logprob: -18.000017166137695
    5. '@' → logprob: -20.250017166137695
    6. 'de' → logprob: -20.875017166137695
    7. '	def' → logprob: -21.625017166137695
    8. '```' → logprob: -22.375017166137695
    9. ' ' → logprob: -23.750017166137695
    10. '    
' → logprob: -23.875017166137695

Token 314: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.4748656749725342
    2. 'distance' → logprob: -0.9748656749725342
    3. ' normal' → logprob: -7.474865913391113
    4. 'normal' → logprob: -8.474865913391113
    5. 'def' → logprob: -11.724865913391113
    6. '   ' → logprob: -13.474865913391113
    7. ' def' → logprob: -14.224865913391113
    8. '_distance' → logprob: -14.599865913391113
    9. ' ' → logprob: -15.099865913391113
    10. '.distance' → logprob: -15.349865913391113

Token 315: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.306760805164231e-05
    2. '_' → logprob: -11.25001335144043
    3. '_t' → logprob: -17.37501335144043
    4. ' _' → logprob: -17.37501335144043
    5. '_
' → logprob: -18.37501335144043
    6. '##_' → logprob: -19.37501335144043
    7. '   ' → logprob: -19.87501335144043
    8. ')_' → logprob: -19.87501335144043
    9. '_TO' → logprob: -20.25001335144043
    10. ' to' → logprob: -21.12501335144043

Token 316: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.3856492842023727e-06
    2. 'point' → logprob: -14.250000953674316
    3. '_line' → logprob: -14.375000953674316
    4. '_points' → logprob: -16.375001907348633
    5. '_' → logprob: -17.750001907348633
    6. ' point' → logprob: -18.000001907348633
    7. 'Point' → logprob: -18.250001907348633
    8. '_Point' → logprob: -18.375001907348633
    9. '_p' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.625001907348633

Token 317: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.125006675720215
    3. ' (' → logprob: -14.000006675720215
    4. '(
' → logprob: -15.500006675720215
    5. ' self' → logprob: -17.2500057220459
    6. 'self' → logprob: -17.6250057220459
    7. '(s' → logprob: -18.3750057220459
    8. '   ' → logprob: -19.5000057220459
    9. ' ' → logprob: -20.0000057220459
    10. '	self' → logprob: -20.5000057220459

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002907227724790573
    2. 'self' → logprob: -5.8779072761535645
    3. '(self' → logprob: -9.877906799316406
    4. '       ' → logprob: -10.502906799316406
    5. ' ,' → logprob: -11.627906799316406
    6. ' self' → logprob: -12.377906799316406
    7. ',self' → logprob: -12.377906799316406
    8. ',
' → logprob: -13.002906799316406
    9. '   ' → logprob: -13.377906799316406
    10. ')' → logprob: -13.377906799316406

Token 319: ' point' (ID: 2438)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032977282535284758
    2. ' self' → logprob: -5.753297805786133
    3. 'point' → logprob: -9.128297805786133
    4. '       ' → logprob: -11.753297805786133
    5. ' point' → logprob: -13.503297805786133
    6. '(self' → logprob: -13.753297805786133
    7. '   ' → logprob: -13.878297805786133
    8. 'Point' → logprob: -17.003297805786133
    9. ' ' → logprob: -17.253297805786133
    10. '	self' → logprob: -17.378297805786133

Token 320: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001802746090106666
    2. ')' → logprob: -6.501802921295166
    3. '):' → logprob: -8.376802444458008
    4. '       ' → logprob: -10.376802444458008
    5. '   ' → logprob: -10.876802444458008
    6. 'self' → logprob: -12.001802444458008
    7. ' :' → logprob: -12.501802444458008
    8. '):
' → logprob: -12.626802444458008
    9. '(self' → logprob: -13.376802444458008
    10. '(point' → logprob: -13.751802444458008

Token 321: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.12692958116531372
    2. ' Point' → logprob: -2.126929521560669
    3. ')' → logprob: -14.37692928314209
    4. ' point' → logprob: -15.37692928314209
    5. '   ' → logprob: -15.62692928314209
    6. '_point' → logprob: -15.87692928314209
    7. ' ' → logprob: -16.126930236816406
    8. '	Point' → logprob: -16.126930236816406
    9. 'point' → logprob: -16.251930236816406
    10. '(Point' → logprob: -17.001930236816406

Token 322: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. ' )' → logprob: -11.125027656555176
    3. '):
' → logprob: -11.875027656555176
    4. '   ' → logprob: -12.875027656555176
    5. '):' → logprob: -13.125027656555176
    6. ')->' → logprob: -14.750027656555176
    7. ':' → logprob: -15.500027656555176
    8. '       ' → logprob: -15.875027656555176
    9. '):
' → logprob: -17.37502670288086
    10. '`)' → logprob: -17.62502670288086

Token 323: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.6377918720245361
    2. ':' → logprob: -1.1377918720245361
    3. '->' → logprob: -2.012791872024536
    4. ')' → logprob: -4.387791633605957
    5. ')->' → logprob: -5.637791633605957
    6. '   ' → logprob: -7.137791633605957
    7. '       ' → logprob: -8.387791633605957
    8. '):' → logprob: -8.637791633605957
    9. ':
' → logprob: -9.512791633605957
    10. '):
' → logprob: -10.387791633605957

Token 324: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.038084860891103745
    2. ' float' → logprob: -3.2880847454071045
    3. 'abs' → logprob: -10.163084983825684
    4. '   ' → logprob: -13.288084983825684
    5. '(float' → logprob: -14.038084983825684
    6. ' abs' → logprob: -14.038084983825684
    7. '	float' → logprob: -14.538084983825684
    8. '=float' → logprob: -15.163084983825684
    9. '<float' → logprob: -15.538084983825684
    10. 'flo' → logprob: -15.913084983825684

Token 325: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0843033716082573
    2. ':
' → logprob: -2.584303379058838
    3. '       ' → logprob: -5.334303379058838
    4. '(self' → logprob: -8.70930290222168
    5. '):
' → logprob: -8.70930290222168
    6. '   ' → logprob: -9.33430290222168
    7. ':return' → logprob: -10.08430290222168
    8. 'self' → logprob: -10.58430290222168
    9. '):' → logprob: -10.70930290222168
    10. ':
' → logprob: -11.33430290222168

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004129152512177825
    2. 'return' → logprob: -8.500412940979004
    3. ' return' → logprob: -8.500412940979004
    4. 'abs' → logprob: -13.625412940979004
    5. '```' → logprob: -13.750412940979004
    6. '        
' → logprob: -13.750412940979004
    7. '   ' → logprob: -15.125412940979004
    8. ':' → logprob: -15.375412940979004
    9. ' abs' → logprob: -15.375412940979004
    10. 'float' → logprob: -15.375412940979004

Token 327: ' #' (ID: 1069)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.030236948281526566
    2. 'return' → logprob: -3.5302369594573975
    3. '       ' → logprob: -7.780236721038818
    4. ' abs' → logprob: -9.655237197875977
    5. ' return' → logprob: -12.655237197875977
    6. 'fabs' → logprob: -14.405237197875977
    7. '        
' → logprob: -15.280237197875977
    8. '.abs' → logprob: -15.905237197875977
    9. '(abs' → logprob: -16.530237197875977
    10. '```' → logprob: -17.030237197875977

Token 328: ' Distance' (ID: 53583)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09292832762002945
    2. 'abs' → logprob: -2.592928409576416
    3. ' return' → logprob: -4.342928409576416
    4. ' abs' → logprob: -7.092928409576416
    5. '       ' → logprob: -9.217927932739258
    6. 'distance' → logprob: -12.467927932739258
    7. 'result' → logprob: -12.842927932739258
    8. 'dist' → logprob: -13.342927932739258
    9. '   ' → logprob: -13.592927932739258
    10. 'fabs' → logprob: -13.592927932739258

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11994072049856186
    2. '=' → logprob: -2.494940757751465
    3. '       ' → logprob: -3.619940757751465
    4. ':' → logprob: -6.369940757751465
    5. '   ' → logprob: -7.369940757751465
    6. 'return' → logprob: -7.369940757751465
    7. ' return' → logprob: -7.494940757751465
    8. '(abs' → logprob: -9.744940757751465
    9. '        ' → logprob: -10.119940757751465
    10. 'abs' → logprob: -11.244940757751465

Token 330: ' |' (ID: 1022)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00012415809032972902
    2. ' abs' → logprob: -9.000123977661133
    3. '(abs' → logprob: -14.875123977661133
    4. '   ' → logprob: -15.375123977661133
    5. 'fabs' → logprob: -16.125123977661133
    6. '.abs' → logprob: -17.625123977661133
    7. '_abs' → logprob: -18.750123977661133
    8. 'math' → logprob: -19.250123977661133
    9. '       ' → logprob: -19.375123977661133
    10. '
' → logprob: -20.375123977661133

Token 331: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011152983643114567
    2. ' self' → logprob: -9.25011157989502
    3. '(self' → logprob: -11.12511157989502
    4. '
' → logprob: -15.50011157989502
    5. '   ' → logprob: -16.000110626220703
    6. 'A' → logprob: -16.250110626220703
    7. '```' → logprob: -16.625110626220703
    8. '

' → logprob: -17.125110626220703
    9. ' ' → logprob: -17.125110626220703
    10. '	self' → logprob: -17.625110626220703

Token 332: ' x' (ID: 1215)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.006723302416503429
    2. ' *' → logprob: -5.006723403930664
    3. 'point' → logprob: -11.756723403930664
    4. ' point' → logprob: -16.506723403930664
    5. '*object' → logprob: -17.881723403930664
    6. '*x' → logprob: -18.006723403930664
    7. '(point' → logprob: -18.131723403930664
    8. 'x' → logprob: -18.756723403930664
    9. '*self' → logprob: -18.756723403930664
    10. '   ' → logprob: -19.881723403930664

Token 333: ' +' (ID: 659)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.7638742327690125
    2. '+' → logprob: -1.2638742923736572
    3. ' +' → logprob: -1.3888742923736572
    4. 'p' → logprob: -7.263874053955078
    5. '(point' → logprob: -7.388874053955078
    6. ' point' → logprob: -8.138874053955078
    7. '0' → logprob: -8.388874053955078
    8. '	point' → logprob: -8.763874053955078
    9. '_point' → logprob: -9.013874053955078
    10. '.point' → logprob: -10.513874053955078

Token 334: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00696104671806097
    2. '+' → logprob: -6.131960868835449
    3. ' B' → logprob: -6.131960868835449
    4. '+B' → logprob: -7.006960868835449
    5. 'point' → logprob: -7.131960868835449
    6. ' +' → logprob: -7.256960868835449
    7. '(point' → logprob: -9.38196086883545
    8. 'A' → logprob: -9.63196086883545
    9. ' point' → logprob: -11.63196086883545
    10. 'y' → logprob: -12.13196086883545

Token 335: ' y' (ID: 342)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4866957366466522
    2. 'x' → logprob: -1.6116957664489746
    3. ' +' → logprob: -2.4866957664489746
    4. 'y' → logprob: -2.9866957664489746
    5. ' y' → logprob: -3.8616957664489746
    6. '*' → logprob: -3.9866957664489746
    7. ' x' → logprob: -4.736695766448975
    8. 'point' → logprob: -6.486695766448975
    9. ' point' → logprob: -7.111695766448975
    10. ' *' → logprob: -7.986695766448975

Token 336: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740833044052124
    2. ' +' → logprob: -0.9740833044052124
    3. ' ' → logprob: -13.099082946777344
    4. '
' → logprob: -14.099082946777344
    5. '+
' → logprob: -14.349082946777344
    6. '```' → logprob: -14.474082946777344
    7. '<|end|>' → logprob: -14.599082946777344
    8. '<|end|>' → logprob: -14.974082946777344
    9. '=' → logprob: -15.724082946777344
    10. ' plus' → logprob: -15.724082946777344

Token 337: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0006273718317970634
    2. ' C' → logprob: -7.375627517700195
    3. 'self' → logprob: -14.250627517700195
    4. '   ' → logprob: -17.250627517700195
    5. ' self' → logprob: -17.875627517700195
    6. ' ' → logprob: -18.125627517700195
    7. '
' → logprob: -19.125627517700195
    8. '*C' → logprob: -19.125627517700195
    9. '	C' → logprob: -19.375627517700195
    10. '_C' → logprob: -19.375627517700195

Token 338: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -2.1888679839321412e-05
    2. ' |' → logprob: -10.875021934509277
    3. '|
' → logprob: -12.875021934509277
    4. 'point' → logprob: -16.37502098083496
    5. '|

' → logprob: -16.50002098083496
    6. '|`
' → logprob: -17.12502098083496
    7. '(point' → logprob: -17.25002098083496
    8. ')|' → logprob: -17.25002098083496
    9. ')' → logprob: -17.37502098083496
    10. ' ' → logprob: -17.75002098083496

Token 339: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.006484557408839464
    2. '/' → logprob: -5.256484508514404
    3. '       ' → logprob: -7.006484508514404
    4. '<|end|>' → logprob: -9.131484985351562
    5. 'abs' → logprob: -9.756484985351562
    6. '(point' → logprob: -10.381484985351562
    7. '   ' → logprob: -10.381484985351562
    8. ' /
' → logprob: -10.881484985351562
    9. ' abs' → logprob: -11.131484985351562
    10. '<|end|>' → logprob: -11.256484985351562

Token 340: ' sqrt' (ID: 44237)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7209445834159851
    2. 'math' → logprob: -0.7209445834159851
    3. '1' → logprob: -3.72094464302063
    4. '(math' → logprob: -6.345944404602051
    5. ' ' → logprob: -6.970944404602051
    6. '(' → logprob: -9.22094440460205
    7. 'sqrt' → logprob: -9.47094440460205
    8. 'norm' → logprob: -9.59594440460205
    9. '/math' → logprob: -9.59594440460205
    10. ' (' → logprob: -9.84594440460205

Token 341: '(A' (ID: 10706)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16989728808403015
    2. '(A' → logprob: -1.9198973178863525
    3. '(' → logprob: -4.669897079467773
    4. 'self' → logprob: -9.044897079467773
    5. '(_' → logprob: -9.419897079467773
    6. '{' → logprob: -10.169897079467773
    7. '((' → logprob: -12.919897079467773
    8. '(
' → logprob: -13.169897079467773
    9. '(E' → logprob: -13.419897079467773
    10. ' (' → logprob: -13.544897079467773

Token 342: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.06467016041278839
    2. '*' → logprob: -3.0646700859069824
    3. '*A' → logprob: -5.189670085906982
    4. '2' → logprob: -5.314670085906982
    5. '^' → logprob: -5.814670085906982
    6. '²' → logprob: -6.189670085906982
    7. '*self' → logprob: -8.93967056274414
    8. ' **' → logprob: -9.43967056274414
    9. '*x' → logprob: -9.93967056274414
    10. ' *' → logprob: -10.31467056274414

Token 343: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.195421494543552e-05
    2. ' ' → logprob: -9.87507152557373
    3. '
' → logprob: -11.25007152557373
    4. '**' → logprob: -13.25007152557373
    5. '²' → logprob: -13.75007152557373
    6. '```' → logprob: -13.75007152557373
    7. '

' → logprob: -14.87507152557373
    8. '(' → logprob: -14.93757152557373
    9. '۲' → logprob: -15.00007152557373
    10. '
' → logprob: -15.06257152557373

Token 344: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02976854331791401
    2. ' +' → logprob: -3.529768466949463
    3. '<|end|>' → logprob: -11.654768943786621
    4. '+B' → logprob: -12.529768943786621
    5. '*' → logprob: -12.904768943786621
    6. '+
' → logprob: -14.404768943786621
    7. ')' → logprob: -14.654768943786621
    8. '()+' → logprob: -14.779768943786621
    9. '+A' → logprob: -14.779768943786621
    10. '+self' → logprob: -15.279768943786621

Token 345: ' B' (ID: 418)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024623559787869453
    2. 'A' → logprob: -4.024623394012451
    3. 'B' → logprob: -5.899623394012451
    4. '(' → logprob: -6.024623394012451
    5. '(A' → logprob: -6.899623394012451
    6. '(B' → logprob: -8.64962387084961
    7. '0' → logprob: -10.27462387084961
    8. ' ' → logprob: -10.89962387084961
    9. 'self' → logprob: -11.14962387084961
    10. ' A' → logprob: -11.64962387084961

Token 346: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2747937738895416
    2. ')' → logprob: -1.8997937440872192
    3. '^' → logprob: -2.774793863296509
    4. '²' → logprob: -3.774793863296509
    5. '<|end|>' → logprob: -5.64979362487793
    6. '(' → logprob: -6.64979362487793
    7. '**' → logprob: -9.27479362487793
    8. 'x' → logprob: -9.39979362487793
    9. '<|end|>' → logprob: -9.89979362487793
    10. ' ' → logprob: -9.89979362487793

Token 347: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.500001907348633
    3. '
' → logprob: -15.750001907348633
    4. '²' → logprob: -15.750001907348633
    5. 'A' → logprob: -16.250001907348633
    6. '(' → logprob: -16.625001907348633
    7. '```' → logprob: -17.062501907348633
    8. '

' → logprob: -17.375001907348633
    9. '۲' → logprob: -17.750001907348633
    10. ',' → logprob: -17.875001907348633

Token 348: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011307948443572968
    2. '       ' → logprob: -10.000113487243652
    3. ')
' → logprob: -10.000113487243652
    4. '<|end|>' → logprob: -11.625113487243652
    5. ' )' → logprob: -11.875113487243652
    6. '   ' → logprob: -12.500113487243652
    7. '}' → logprob: -14.875113487243652
    8. ')return' → logprob: -14.875113487243652
    9. '),' → logprob: -15.125113487243652
    10. '<|end|>' → logprob: -15.500113487243652

Token 349: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0058047170750796795
    2. ' return' → logprob: -6.380804538726807
    3. 'return' → logprob: -6.505804538726807
    4. '<|end|>' → logprob: -6.505804538726807
    5. ')' → logprob: -8.130805015563965
    6. '
' → logprob: -8.630805015563965
    7. ',' → logprob: -9.255805015563965
    8. '   ' → logprob: -9.255805015563965
    9. '<|end|>' → logprob: -9.380805015563965
    10. '        
' → logprob: -9.380805015563965

Token 350: ' normalized' (ID: 59625)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.374354362487793
    2. 'self' → logprob: -1.624354362487793
    3. ' since' → logprob: -1.874354362487793
    4. ' ' → logprob: -2.374354362487793
    5. ' math' → logprob: -2.499354362487793
    6. '       ' → logprob: -2.499354362487793
    7. ' not' → logprob: -3.249354362487793
    8. 'math' → logprob: -3.999354362487793
    9. 'since' → logprob: -4.249354362487793
    10. '   ' → logprob: -4.749354362487793

Token 351: ' already' (ID: 4279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.617384135723114
    2. 'return' → logprob: -1.9923841953277588
    3. ':' → logprob: -2.367384195327759
    4. ' return' → logprob: -2.742384195327759
    5. '(abs' → logprob: -2.867384195327759
    6. ',' → logprob: -3.742384195327759
    7. '   ' → logprob: -4.11738395690918
    8. '(self' → logprob: -4.49238395690918
    9. ' *' → logprob: -4.74238395690918
    10. 'abs' → logprob: -5.24238395690918

Token 352: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005173631943762302
    2. ' return' → logprob: -6.130173683166504
    3. 'return' → logprob: -6.255173683166504
    4. '
' → logprob: -7.130173683166504
    5. ',' → logprob: -9.255173683166504
    6. ':' → logprob: -10.130173683166504
    7. '        
' → logprob: -10.380173683166504
    8. '  
' → logprob: -10.630173683166504
    9. '   ' → logprob: -11.005173683166504
    10. '<|end|>' → logprob: -11.880173683166504

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003442832676228136
    2. ' return' → logprob: -8.125344276428223
    3. 'return' → logprob: -10.000344276428223
    4. ',' → logprob: -13.750344276428223
    5. ':' → logprob: -14.500344276428223
    6. '   ' → logprob: -14.750344276428223
    7. '      ' → logprob: -15.125344276428223
    8. '           ' → logprob: -15.750344276428223
    9. '        ' → logprob: -15.875344276428223
    10. '        
' → logprob: -16.25034523010254

Token 354: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012684474932029843
    2. ' return' → logprob: -7.25126838684082
    3. '       ' → logprob: -7.50126838684082
    4. 'dist' → logprob: -13.00126838684082
    5. 'abs' → logprob: -13.00126838684082
    6. 'distance' → logprob: -13.62626838684082
    7. '   ' → logprob: -16.50126838684082
    8. '	return' → logprob: -17.37626838684082
    9. 'result' → logprob: -17.50126838684082
    10. '```' → logprob: -17.87626838684082

Token 355: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0001600347168277949
    2. ' abs' → logprob: -8.750160217285156
    3. '   ' → logprob: -13.625160217285156
    4. '(abs' → logprob: -15.375160217285156
    5. 'fabs' → logprob: -16.250160217285156
    6. '       ' → logprob: -18.500160217285156
    7. '.abs' → logprob: -19.500160217285156
    8. 'float' → logprob: -19.875160217285156
    9. '_abs' → logprob: -19.875160217285156
    10. 'math' → logprob: -20.000160217285156

Token 356: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.000006675720215
    3. 'self' → logprob: -15.875006675720215
    4. '((' → logprob: -16.1250057220459
    5. '(
' → logprob: -16.3750057220459
    6. '(point' → logprob: -17.1250057220459
    7. '(s' → logprob: -19.8750057220459
    8. ' (' → logprob: -20.3750057220459
    9. '(this' → logprob: -20.7500057220459
    10. ' self' → logprob: -21.2500057220459

Token 357: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.375000953674316
    3. '.A' → logprob: -16.25
    4. 'A' → logprob: -16.75
    5. ' .' → logprob: -16.875
    6. '   ' → logprob: -17.375
    7. '_' → logprob: -17.625
    8. '_A' → logprob: -18.125
    9. ')._' → logprob: -18.75
    10. ' ' → logprob: -19.0

Token 358: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9361264946837764e-07
    2. ' A' → logprob: -16.125
    3. '_A' → logprob: -17.125
    4. '.A' → logprob: -18.5
    5. 'a' → logprob: -18.75
    6. '	A' → logprob: -19.0
    7. '{' → logprob: -19.375
    8. '   ' → logprob: -19.375
    9. '(A' → logprob: -19.5
    10. 'C' → logprob: -19.75

Token 359: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0015023599844425917
    2. '*' → logprob: -6.501502513885498
    3. ')' → logprob: -16.876502990722656
    4. ' ' → logprob: -17.376502990722656
    5. '*object' → logprob: -17.751502990722656
    6. 'point' → logprob: -19.251502990722656
    7. '   ' → logprob: -19.251502990722656
    8. ' **' → logprob: -19.751502990722656
    9. ' ' → logprob: -19.751502990722656
    10. ')*' → logprob: -19.876502990722656

Token 360: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.00020354038861114532
    2. ' point' → logprob: -8.500203132629395
    3. '(point' → logprob: -19.12520408630371
    4. '	point' → logprob: -22.00020408630371
    5. 'points' → logprob: -23.62520408630371
    6. '.point' → logprob: -23.87520408630371
    7. 'Point' → logprob: -24.00020408630371
    8. '
' → logprob: -24.00020408630371
    9. ' ' → logprob: -24.00020408630371
    10. '-point' → logprob: -24.00020408630371

Token 361: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0020542622078210115
    2. '.' → logprob: -6.252054214477539
    3. 'x' → logprob: -9.002054214477539
    4. ' .' → logprob: -13.127054214477539
    5. ' x' → logprob: -15.252054214477539
    6. ' ' → logprob: -16.37705421447754
    7. '.
' → logprob: -16.62705421447754
    8. '	x' → logprob: -18.12705421447754
    9. '.point' → logprob: -18.75205421447754
    10. '<|end|>' → logprob: -19.00205421447754

Token 362: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03804229199886322
    2. '+' → logprob: -3.2880423069000244
    3. ' ' → logprob: -15.163042068481445
    4. ' ' → logprob: -15.663042068481445
    5. ' +
' → logprob: -15.913042068481445
    6. ')' → logprob: -16.413042068481445
    7. '       ' → logprob: -17.163042068481445
    8. '    ' → logprob: -17.413042068481445
    9. '        ' → logprob: -17.788042068481445
    10. '   ' → logprob: -18.038042068481445

Token 363: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759631395339966
    2. 'self' → logprob: -0.8259631395339966
    3. ' ' → logprob: -11.200963020324707
    4. '<|end|>' → logprob: -12.325963020324707
    5. '(self' → logprob: -13.200963020324707
    6. '	self' → logprob: -13.825963020324707
    7. 'point' → logprob: -14.700963020324707
    8. ' ' → logprob: -14.700963020324707
    9. '  ' → logprob: -15.075963020324707
    10. '0' → logprob: -15.075963020324707

Token 364: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.957014556974173e-05
    2. '.' → logprob: -10.250069618225098
    3. '_B' → logprob: -10.625069618225098
    4. '.B' → logprob: -12.625069618225098
    5. '_point' → logprob: -12.875069618225098
    6. ' ' → logprob: -13.750069618225098
    7. ' .' → logprob: -13.875069618225098
    8. ' _' → logprob: -14.000069618225098
    9. '_' → logprob: -15.125069618225098
    10. '   ' → logprob: -15.250069618225098

Token 365: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00318163656629622
    2. '_B' → logprob: -5.753181457519531
    3. ' B' → logprob: -13.128181457519531
    4. 'Б' → logprob: -14.503181457519531
    5. '.B' → logprob: -15.128181457519531
    6. 'A' → logprob: -15.378181457519531
    7. '```' → logprob: -16.00318145751953
    8. 'b' → logprob: -16.25318145751953
    9. ' ' → logprob: -16.62818145751953
    10. 'C' → logprob: -16.75318145751953

Token 366: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0011752246646210551
    2. '*' → logprob: -6.751175403594971
    3. ' point' → logprob: -12.751174926757812
    4. ' ' → logprob: -14.376174926757812
    5. '<|end|>' → logprob: -14.626174926757812
    6. '(point' → logprob: -14.751174926757812
    7. '*object' → logprob: -15.251174926757812
    8. 'point' → logprob: -15.251174926757812
    9. ')' → logprob: -15.376174926757812
    10. '```' → logprob: -18.126174926757812

Token 367: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.38688117265701294
    2. 'point' → logprob: -1.1368811130523682
    3. '(point' → logprob: -11.636880874633789
    4. '	point' → logprob: -14.511880874633789
    5. '.point' → logprob: -15.011880874633789
    6. '_point' → logprob: -15.136880874633789
    7. 'Point' → logprob: -16.13688087463379
    8. ' ' → logprob: -16.51188087463379
    9. '<|end|>' → logprob: -16.76188087463379
    10. '```' → logprob: -18.13688087463379

Token 368: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.002585051115602255
    2. 'y' → logprob: -6.002584934234619
    3. '.' → logprob: -9.127585411071777
    4. '<|end|>' → logprob: -15.127585411071777
    5. '.x' → logprob: -16.12758445739746
    6. '	y' → logprob: -16.50258445739746
    7. ' y' → logprob: -16.75258445739746
    8. ')' → logprob: -16.87758445739746
    9. '.py' → logprob: -17.12758445739746
    10. '*y' → logprob: -17.12758445739746

Token 369: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022564470767975
    2. '+' → logprob: -1.9102256298065186
    3. '+self' → logprob: -15.035225868225098
    4. ' ' → logprob: -15.160225868225098
    5. ' ' → logprob: -15.160225868225098
    6. ')' → logprob: -15.285225868225098
    7. ' +
' → logprob: -16.28522491455078
    8. '+
' → logprob: -16.53522491455078
    9. '```' → logprob: -16.53522491455078
    10. '+C' → logprob: -16.66022491455078

Token 370: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038046084344387054
    2. ' self' → logprob: -3.28804612159729
    3. '(self' → logprob: -13.038045883178711
    4. '	self' → logprob: -14.163045883178711
    5. ' ' → logprob: -14.413045883178711
    6. '   ' → logprob: -15.663045883178711
    7. '[self' → logprob: -16.03804588317871
    8. 's' → logprob: -16.16304588317871
    9. '       ' → logprob: -16.16304588317871
    10. '```' → logprob: -16.41304588317871

Token 371: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0022720585111528635
    2. '_C' → logprob: -6.127272129058838
    3. '.' → logprob: -10.12727165222168
    4. '.C' → logprob: -10.12727165222168
    5. ' .' → logprob: -12.62727165222168
    6. ')._' → logprob: -13.62727165222168
    7. '_' → logprob: -13.87727165222168
    8. ']._' → logprob: -15.00227165222168
    9. ' ' → logprob: -15.25227165222168
    10. '   ' → logprob: -15.62727165222168

Token 372: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.3856492842023727e-06
    2. ' C' → logprob: -14.375000953674316
    3. '_C' → logprob: -14.500000953674316
    4. '.C' → logprob: -16.625001907348633
    5. 'c' → logprob: -16.750001907348633
    6. ')' → logprob: -16.875001907348633
    7. '	C' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.687501907348633
    9. '{' → logprob: -18.750001907348633
    10. '.' → logprob: -18.750001907348633

Token 373: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ' )' → logprob: -12.000007629394531
    3. ')
' → logprob: -14.375007629394531
    4. ')return' → logprob: -15.750007629394531
    5. '   ' → logprob: -16.00000762939453
    6. '<|end|>' → logprob: -16.87500762939453
    7. ')}' → logprob: -17.00000762939453
    8. '       ' → logprob: -17.75000762939453
    9. '))' → logprob: -17.87500762939453
    10. '}' → logprob: -18.12500762939453

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023220552131533623
    2. 'def' → logprob: -4.148220539093018
    3. ')' → logprob: -5.648220539093018
    4. '(' → logprob: -6.773220539093018
    5. ' def' → logprob: -6.898220539093018
    6. ' ' → logprob: -7.148220539093018
    7. '  ' → logprob: -8.648221015930176
    8. '<|end|>' → logprob: -8.648221015930176
    9. ',' → logprob: -9.148221015930176
    10. '    ' → logprob: -9.273221015930176

Token 375: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00034869377850554883
    2. ' def' → logprob: -8.000349044799805
    3. '   ' → logprob: -11.250349044799805
    4. ' ' → logprob: -15.875349044799805
    5. '	def' → logprob: -16.875349044799805
    6. '  ' → logprob: -18.875349044799805
    7. '@' → logprob: -20.750349044799805
    8. '    ' → logprob: -21.000349044799805
    9. 'de' → logprob: -21.250349044799805
    10. '    
' → logprob: -21.375349044799805

Token 376: ' normal' (ID: 6078)
  Prédit: ' normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' normal' → logprob: -0.006719282828271389
    2. 'normal' → logprob: -5.00671911239624
    3. '_normal' → logprob: -12.506719589233398
    4. ' def' → logprob: -16.1317195892334
    5. '.normal' → logprob: -18.1317195892334
    6. 'ormal' → logprob: -18.5067195892334
    7. 'def' → logprob: -18.5067195892334
    8. ' ' → logprob: -18.7567195892334
    9. ' ' → logprob: -19.2567195892334
    10. ' normale' → logprob: -19.8817195892334

Token 377: '_vector' (ID: 29530)
  Prédit: '_vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -4.320199877838604e-07
    2. '_vec' → logprob: -15.625
    3. 'vector' → logprob: -16.625
    4. '_Vector' → logprob: -16.75
    5. '_' → logprob: -17.0
    6. '_vectors' → logprob: -17.125
    7. '_vect' → logprob: -17.25
    8. '_VECTOR' → logprob: -18.375
    9. ' vector' → logprob: -18.875
    10. 'Vector' → logprob: -19.125

Token 378: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.750001907348633
    3. '(s' → logprob: -14.250001907348633
    4. ' (' → logprob: -16.125001907348633
    5. 'self' → logprob: -17.125001907348633
    6. 's' → logprob: -18.500001907348633
    7. '(se' → logprob: -19.000001907348633
    8. '(sel' → logprob: -19.000001907348633
    9. '(
' → logprob: -19.375001907348633
    10. '   ' → logprob: -20.125001907348633

Token 379: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1689286082983017
    2. '(self' → logprob: -1.918928623199463
    3. 'self' → logprob: -5.418928623199463
    4. '):' → logprob: -6.168928623199463
    5. '):
' → logprob: -6.293928623199463
    6. ')->' → logprob: -9.168928146362305
    7. ')(' → logprob: -9.168928146362305
    8. '   ' → logprob: -10.668928146362305
    9. '       ' → logprob: -11.168928146362305
    10. ' ' → logprob: -11.793928146362305

Token 380: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001557831885293126
    2. '(' → logprob: -6.50155782699585
    3. '()' → logprob: -10.626558303833008
    4. 'self' → logprob: -10.626558303833008
    5. '(s' → logprob: -13.001558303833008
    6. '(
' → logprob: -13.626558303833008
    7. ' (' → logprob: -14.376558303833008
    8. ')' → logprob: -14.626558303833008
    9. '():' → logprob: -14.626558303833008
    10. 'return' → logprob: -14.751558303833008

Token 381: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.5766140818595886
    2. ' Tuple' → logprob: -0.8266140818595886
    3. '()' → logprob: -7.826613903045654
    4. ' tuple' → logprob: -8.451614379882812
    5. 'tuple' → logprob: -10.826614379882812
    6. ' (' → logprob: -11.326614379882812
    7. '(' → logprob: -12.326614379882812
    8. ' ->' → logprob: -12.326614379882812
    9. '(T' → logprob: -12.451614379882812
    10. '_tuple' → logprob: -12.951614379882812

Token 382: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05560726299881935
    2. '(float' → logprob: -2.930607318878174
    3. '(' → logprob: -7.555607318878174
    4. ' (' → logprob: -9.180606842041016
    5. '(self' → logprob: -9.805606842041016
    6. '<float' → logprob: -10.555606842041016
    7. '[self' → logprob: -12.430606842041016
    8. '   ' → logprob: -12.930606842041016
    9. '[
' → logprob: -13.055606842041016
    10. '[(' → logprob: -13.430606842041016

Token 383: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.816093228830141e-06
    2. ' float' → logprob: -13.00000286102295
    3. 'flo' → logprob: -15.25000286102295
    4. '(float' → logprob: -15.50000286102295
    5. '<float' → logprob: -18.125001907348633
    6. '	float' → logprob: -19.500001907348633
    7. ',float' → logprob: -19.625001907348633
    8. 'fl' → logprob: -19.625001907348633
    9. 'f' → logprob: -19.875001907348633
    10. '=float' → logprob: -20.625001907348633

Token 384: ',float' (ID: 119642)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47411277890205383
    2. ',float' → logprob: -0.9741127490997314
    3. ',double' → logprob: -11.599112510681152
    4. ' ,' → logprob: -11.849112510681152
    5. ',f' → logprob: -11.849112510681152
    6. ',int' → logprob: -11.974112510681152
    7. ',(' → logprob: -13.349112510681152
    8. ',bool' → logprob: -13.349112510681152
    9. ',
' → logprob: -13.599112510681152
    10. ',None' → logprob: -15.474112510681152

Token 385: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0065872324630618095
    2. ']:
' → logprob: -5.131587028503418
    3. '):' → logprob: -7.756587028503418
    4. ']:
' → logprob: -8.631587028503418
    5. '>:' → logprob: -10.631587028503418
    6. ']' → logprob: -11.381587028503418
    7. '):
' → logprob: -12.131587028503418
    8. ':' → logprob: -12.506587028503418
    9. '}:' → logprob: -12.631587028503418
    10. '']:' → logprob: -13.756587028503418

Token 386: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27763211727142334
    2. '       ' → logprob: -2.152632236480713
    3. ' (' → logprob: -2.652632236480713
    4. '(self' → logprob: -3.402632236480713
    5. ' return' → logprob: -4.402632236480713
    6. 'return' → logprob: -5.402632236480713
    7. '(
' → logprob: -5.902632236480713
    8. ':return' → logprob: -6.777632236480713
    9. '   ' → logprob: -7.027632236480713
    10. '(return' → logprob: -7.777632236480713

Token 387: ' return' (ID: 622)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13239021599292755
    2. 'return' (adapté à ' return') → logprob: -2.132390260696411
    3. ' return' → logprob: -5.507390022277832
    4. '(' → logprob: -7.257390022277832
    5. '(return' → logprob: -7.757390022277832
    6. '       ' → logprob: -8.507390022277832
    7. ' (' → logprob: -10.382390022277832
    8. '(
' → logprob: -11.257390022277832
    9. '   ' → logprob: -12.632390022277832
    10. 'self' → logprob: -13.007390022277832

Token 388: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001867326645879075
    2. ' (' → logprob: -9.000186920166016
    3. '(-' → logprob: -9.875186920166016
    4. 'self' → logprob: -11.625186920166016
    5. ' self' → logprob: -13.125186920166016
    6. '(' → logprob: -14.000186920166016
    7. '(this' → logprob: -17.750186920166016
    8. ' (-' → logprob: -18.000186920166016
    9. '(s' → logprob: -18.000186920166016
    10. '(
' → logprob: -18.000186920166016

Token 389: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00022034443099983037
    2. ' self' → logprob: -8.50022029876709
    3. '-self' → logprob: -11.00022029876709
    4. '(self' → logprob: -15.87522029876709
    5. '-' → logprob: -17.875221252441406
    6. '	self' → logprob: -18.000221252441406
    7. '   ' → logprob: -18.625221252441406
    8. ' -' → logprob: -19.000221252441406
    9. '+self' → logprob: -19.625221252441406
    10. ' ' → logprob: -19.750221252441406

Token 390: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -16.0
    3. '_' → logprob: -18.5
    4. ' .' → logprob: -18.75
    5. '.\' → logprob: -19.25
    6. '_A' → logprob: -19.375
    7. '._
' → logprob: -19.375
    8. 'A' → logprob: -19.375
    9. '.A' → logprob: -20.0
    10. ')._' → logprob: -20.125

Token 391: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9361264946837764e-07
    2. ' A' → logprob: -16.625
    3. 'B' → logprob: -17.75
    4. '_A' → logprob: -18.25
    5. '	A' → logprob: -20.875
    6. 'А' → logprob: -21.5
    7. 'a' → logprob: -21.75
    8. '.A' → logprob: -21.75
    9. '"A' → logprob: -22.5
    10. '-A' → logprob: -22.5

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.306760805164231e-05
    2. ' ,' → logprob: -11.50001335144043
    3. ',self' → logprob: -13.00001335144043
    4. ',
' → logprob: -14.25001335144043
    5. ',n' → logprob: -20.75001335144043
    6. ',

' → logprob: -21.12501335144043
    7. ',\
' → logprob: -21.12501335144043
    8. 'self' → logprob: -21.25001335144043
    9. ',s' → logprob: -21.50001335144043
    10. '),' → logprob: -21.62501335144043

Token 393: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029750604182481766
    2. ' self' → logprob: -3.5297505855560303
    3. '	self' → logprob: -16.52975082397461
    4. '(self' → logprob: -17.65475082397461
    5. ' ' → logprob: -18.15475082397461
    6. '-self' → logprob: -18.15475082397461
    7. '[self' → logprob: -18.90475082397461
    8. '_self' → logprob: -19.02975082397461
    9. '*self' → logprob: -19.02975082397461
    10. '   ' → logprob: -19.65475082397461

Token 394: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0011726059019565582
    2. '_B' → logprob: -6.7511725425720215
    3. '.' → logprob: -13.75117301940918
    4. '   ' → logprob: -14.62617301940918
    5. '.B' → logprob: -14.62617301940918
    6. ',_' → logprob: -15.50117301940918
    7. ' ' → logprob: -16.75117301940918
    8. ',' → logprob: -17.12617301940918
    9. ' .' → logprob: -17.12617301940918
    10. ')._' → logprob: -17.62617301940918

Token 395: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0005545823951251805
    2. '_B' → logprob: -7.50055456161499
    3. ' B' → logprob: -13.500555038452148
    4. '-B' → logprob: -16.12555503845215
    5. '	B' → logprob: -16.87555503845215
    6. '.B' → logprob: -17.62555503845215
    7. 'b' → logprob: -17.75055503845215
    8. ')' → logprob: -18.12555503845215
    9. '   ' → logprob: -18.25055503845215
    10. '_b' → logprob: -18.37555503845215

Token 396: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.875001907348633
    4. '<|end|>' → logprob: -16.875001907348633
    5. '}' → logprob: -17.375001907348633
    6. ')}' → logprob: -18.250001907348633
    7. '),' → logprob: -18.375001907348633
    8. ')#' → logprob: -18.500001907348633
    9. ')

' → logprob: -19.000001907348633
    10. ')return' → logprob: -19.500001907348633

Token 397: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12103068083524704
    2. '<|end|>' → logprob: -2.246030569076538
    3. 'def' (adapté à ' def') → logprob: -4.996030807495117
    4. '
' → logprob: -7.371030807495117
    5. '#' → logprob: -8.621030807495117
    6. ')' → logprob: -8.871030807495117
    7. '<|end|>' → logprob: -8.996030807495117
    8. '   ' → logprob: -9.371030807495117
    9. ' class' → logprob: -9.496030807495117
    10. '```' → logprob: -9.746030807495117

Token 399: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2839590013027191
    2. '__' → logprob: -2.033958911895752
    3. ' intersection' → logprob: -3.658958911895752
    4. ' intersect' → logprob: -4.158958911895752
    5. ' project' → logprob: -4.283958911895752
    6. 'inter' → logprob: -4.658958911895752
    7. ' line' → logprob: -4.908958911895752
    8. ' is' → logprob: -5.158958911895752
    9. ' midpoint' → logprob: -5.283958911895752
    10. ' contains' → logprob: -5.533958911895752

Token 400: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.0007163656409829855
    2. 'str' → logprob: -7.250716209411621
    3. 'eq' → logprob: -12.000716209411621
    4. '_repr' → logprob: -15.750716209411621
    5. ' repr' → logprob: -16.250717163085938
    6. 'rep' → logprob: -16.875717163085938
    7. 'init' → logprob: -19.000717163085938
    8. ' str' → logprob: -19.625717163085938
    9. 'lt' → logprob: -20.625717163085938
    10. 're' → logprob: -21.000717163085938

Token 401: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0022414892446249723
    2. '(self' → logprob: -6.627241611480713
    3. '__' → logprob: -7.502241611480713
    4. '__(
' → logprob: -8.127241134643555
    5. '__((' → logprob: -10.627241134643555
    6. '__('' → logprob: -10.752241134643555
    7. '(' → logprob: -11.377241134643555
    8. '__("' → logprob: -11.877241134643555
    9. '_(' → logprob: -13.627241134643555
    10. '__(*' → logprob: -14.127241134643555

Token 402: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00025394887779839337
    2. ')' → logprob: -8.375253677368164
    3. 'f' → logprob: -11.000253677368164
    4. '')' → logprob: -12.875253677368164
    5. ' self' → logprob: -13.250253677368164
    6. '")' → logprob: -13.750253677368164
    7. '
' → logprob: -14.375253677368164
    8. ''' → logprob: -15.625253677368164
    9. ')
' → logprob: -16.375253677368164
    10. '):
' → logprob: -16.625253677368164

Token 403: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.053062714636325836
    2. '__)' → logprob: -3.928062677383423
    3. ')' → logprob: -4.803062915802002
    4. 'self' → logprob: -5.053062915802002
    5. '__(' → logprob: -5.178062915802002
    6. '):' → logprob: -5.428062915802002
    7. '__:' → logprob: -6.053062915802002
    8. '__('' → logprob: -6.928062915802002
    9. '__((' → logprob: -7.428062915802002
    10. '__).' → logprob: -7.553062915802002

Token 404: '       ' (ID: 309)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.9057415127754211
    2. '       ' → logprob: -0.9057415127754211
    3. 'f' → logprob: -1.6557414531707764
    4. ' return' → logprob: -7.9057416915893555
    5. 'return' → logprob: -8.655741691589355
    6. '   ' → logprob: -11.155741691589355
    7. '      ' → logprob: -13.030741691589355
    8. '     ' → logprob: -13.155741691589355
    9. '    ' → logprob: -14.280741691589355
    10. 'self' → logprob: -14.405741691589355

Token 405: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10105545073747635
    2. 'f' → logprob: -2.351055383682251
    3. ' return' → logprob: -7.10105562210083
    4. ' f' → logprob: -10.851055145263672
    5. '   ' → logprob: -12.476055145263672
    6. '       ' → logprob: -13.851055145263672
    7. '	return' → logprob: -17.726055145263672
    8. '
' → logprob: -17.976055145263672
    9. '           ' → logprob: -18.601055145263672
    10. ' ' → logprob: -18.976055145263672

Token 406: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4740775227546692
    2. ' f' → logprob: -0.9740775227546692
    3. '"' → logprob: -15.474077224731445
    4. ' ' → logprob: -16.099077224731445
    5. '	f' → logprob: -16.349077224731445
    6. '   ' → logprob: -16.349077224731445
    7. '(f' → logprob: -16.599077224731445
    8. ''f' → logprob: -17.474077224731445
    9. 'F' → logprob: -18.849077224731445
    10. '$f' → logprob: -19.349077224731445

Token 407: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4116986393928528
    2. 'f' → logprob: -1.161698579788208
    3. '"(' → logprob: -3.786698579788208
    4. '"E' → logprob: -6.911698818206787
    5. '(f' → logprob: -8.161698341369629
    6. '"<' → logprob: -8.661698341369629
    7. ' f' → logprob: -8.786698341369629
    8. ''' → logprob: -9.786698341369629
    9. 'Eu' → logprob: -10.036698341369629
    10. '(E' → logprob: -10.286698341369629

Token 408: 'Line' (ID: 3665)
  Prédit: 'Eu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Eu' → logprob: -0.009694593027234077
    2. ''' → logprob: -5.134694576263428
    3. 'f' → logprob: -5.634694576263428
    4. 'Euro' → logprob: -9.884695053100586
    5. '"' → logprob: -10.259695053100586
    6. 'eu' → logprob: -10.384695053100586
    7. ''E' → logprob: -10.759695053100586
    8. '\"' → logprob: -10.884695053100586
    9. 'Line' → logprob: -11.509695053100586
    10. ' Eu' → logprob: -12.384695053100586

Token 409: '(A' (ID: 10706)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '({' → logprob: -0.052853092551231384
    2. '(Point' → logprob: -3.3028531074523926
    3. '(({' → logprob: -4.302853107452393
    4. '{' → logprob: -7.427853107452393
    5. 'from' → logprob: -8.302852630615234
    6. '((' → logprob: -9.302852630615234
    7. '(' → logprob: -9.302852630615234
    8. '(from' → logprob: -10.052852630615234
    9. '([{' → logprob: -10.302852630615234
    10. '[{' → logprob: -10.427852630615234

Token 410: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.006999400909990072
    2. '{' → logprob: -5.256999492645264
    3. '=' → logprob: -6.631999492645264
    4. ',' → logprob: -7.756999492645264
    5. ':' → logprob: -11.381999015808105
    6. '({' → logprob: -12.631999015808105
    7. ' =' → logprob: -13.506999015808105
    8. ':{' → logprob: -14.381999015808105
    9. ',{' → logprob: -14.631999015808105
    10. '=self' → logprob: -14.631999015808105

Token 411: 'self' (ID: 1156)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0007100477814674377
    2. 'self' → logprob: -7.2507100105285645
    3. ' self' → logprob: -18.000709533691406
    4. '{x' → logprob: -18.125709533691406
    5. '0' → logprob: -18.875709533691406
    6. '{-' → logprob: -19.125709533691406
    7. '{return' → logprob: -19.750709533691406
    8. '{
' → logprob: -19.750709533691406
    9. '"{' → logprob: -20.125709533691406
    10. ' {' → logprob: -20.250709533691406

Token 412: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.000656081538181752
    2. '{' → logprob: -7.6256561279296875
    3. 'self' → logprob: -9.500656127929688
    4. '_A' → logprob: -10.125656127929688
    5. '_' → logprob: -11.000656127929688
    6. '.' → logprob: -11.750656127929688
    7. 'A' → logprob: -12.375656127929688
    8. '.{' → logprob: -12.500656127929688
    9. '_.' → logprob: -12.750656127929688
    10. ' .' → logprob: -12.875656127929688

Token 413: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.512236498361744e-07
    2. '{' → logprob: -15.625000953674316
    3. 'А' → logprob: -15.625000953674316
    4. ' A' → logprob: -16.25
    5. '_A' → logprob: -17.625
    6. ')' → logprob: -17.875
    7. 'B' → logprob: -18.0
    8. ',' → logprob: -18.125
    9. '	A' → logprob: -18.75
    10. 'a' → logprob: -18.875

Token 414: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.13720206916332245
    2. ',' → logprob: -2.137202024459839
    3. '},' → logprob: -4.637202262878418
    4. ',.' → logprob: -7.887202262878418
    5. ':,' → logprob: -8.887202262878418
    6. '.' → logprob: -11.887202262878418
    7. '{' → logprob: -13.012202262878418
    8. '},{' → logprob: -13.137202262878418
    9. ':' → logprob: -13.262202262878418
    10. ' :.' → logprob: -13.262202262878418

Token 415: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00041458409396000206
    2. '.' → logprob: -8.500414848327637
    3. '6' → logprob: -8.500414848327637
    4. '{' → logprob: -12.500414848327637
    5. '7' → logprob: -13.375414848327637
    6. '9' → logprob: -14.250414848327637
    7. '8' → logprob: -14.750414848327637
    8. '1' → logprob: -14.875414848327637
    9. '0' → logprob: -15.125414848327637
    10. ' ' → logprob: -15.375414848327637

Token 416: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.128163257315464e-07
    2. 'e' → logprob: -16.125
    3. 'g' → logprob: -16.875
    4. '
' → logprob: -17.625
    5. '```' → logprob: -17.875
    6. ' f' → logprob: -18.25
    7. ',f' → logprob: -19.125
    8. ',' → logprob: -19.25
    9. 'lf' → logprob: -19.375
    10. 'float' → logprob: -20.5

Token 417: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -5.32392441527918e-05
    2. ' ,' → logprob: -9.875053405761719
    3. ',B' → logprob: -13.750053405761719
    4. ',A' → logprob: -14.500053405761719
    5. ',
' → logprob: -16.62505340576172
    6. '),' → logprob: -17.37505340576172
    7. '",' → logprob: -17.75005340576172
    8. ',\
' → logprob: -17.87505340576172
    9. 'A' → logprob: -18.00005340576172
    10. ' ' → logprob: -18.87505340576172

Token 418: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.014163628220558167
    2. ' B' → logprob: -4.264163494110107
    3. '{' → logprob: -16.764163970947266
    4. ',' → logprob: -18.014163970947266
    5. 'b' → logprob: -18.514163970947266
    6. ' ' → logprob: -19.389163970947266
    7. '"B' → logprob: -19.889163970947266
    8. ',B' → logprob: -20.514163970947266
    9. '   ' → logprob: -20.514163970947266
    10. '	B' → logprob: -20.639163970947266

Token 419: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.0029237528797239065
    2. '=' → logprob: -5.877923965454102
    3. '{' → logprob: -9.252923965454102
    4. ',' → logprob: -12.377923965454102
    5. '={}' → logprob: -12.502923965454102
    6. '={},' → logprob: -12.627923965454102
    7. '={'' → logprob: -12.877923965454102
    8. ']={' → logprob: -13.002923965454102
    9. '<|end|>' → logprob: -13.252923965454102
    10. '={
' → logprob: -13.752923965454102

Token 420: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001717166742309928
    2. '{' → logprob: -8.875171661376953
    3. ' self' → logprob: -10.375171661376953
    4. '(self' → logprob: -15.125171661376953
    5. '	self' → logprob: -16.375171661376953
    6. '-self' → logprob: -16.500171661376953
    7. '[self' → logprob: -17.000171661376953
    8. '{
' → logprob: -17.500171661376953
    9. '$self' → logprob: -17.750171661376953
    10. '=self' → logprob: -17.750171661376953

Token 421: '._' (ID: 2697)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.12698280811309814
    2. '._' → logprob: -2.1269826889038086
    3. '   ' → logprob: -11.251982688903809
    4. '.' → logprob: -11.376982688903809
    5. '_' → logprob: -12.001982688903809
    6. '.B' → logprob: -12.126982688903809
    7. '_b' → logprob: -12.126982688903809
    8. ' _' → logprob: -12.501982688903809
    9. ' ' → logprob: -13.501982688903809
    10. '```' → logprob: -13.501982688903809

Token 422: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.7835754988482222e-05
    2. '_B' → logprob: -11.125018119812012
    3. ' B' → logprob: -13.250018119812012
    4. 'A' → logprob: -14.625018119812012
    5. '10' → logprob: -15.375018119812012
    6. '```' → logprob: -16.125017166137695
    7. 'b' → logprob: -16.500017166137695
    8. '{' → logprob: -16.875017166137695
    9. '_' → logprob: -16.875017166137695
    10. '   ' → logprob: -17.000017166137695

Token 423: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.01572580076754093
    2. '{' → logprob: -4.890725612640381
    3. ',' → logprob: -5.140725612640381
    4. '.' → logprob: -6.765725612640381
    5. ' {:.' → logprob: -7.640725612640381
    6. ',.' → logprob: -8.515726089477539
    7. ':' → logprob: -9.015726089477539
    8. '%.' → logprob: -10.140726089477539
    9. '=.' → logprob: -10.390726089477539
    10. ' :.' → logprob: -10.390726089477539

Token 424: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -15.125000953674316
    4. '0' → logprob: -15.750000953674316
    5. 'f' → logprob: -16.375001907348633
    6. '{' → logprob: -16.875001907348633
    7. '010' → logprob: -17.500001907348633
    8. '1' → logprob: -17.625001907348633
    9. '-' → logprob: -18.375001907348633
    10. '``' → logprob: -18.375001907348633

Token 425: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.246537173457909e-06
    2. '```' → logprob: -13.000003814697266
    3. ' f' → logprob: -14.750003814697266
    4. '10' → logprob: -15.250003814697266
    5. ' ' → logprob: -15.875003814697266
    6. '	f' → logprob: -16.125003814697266
    7. '
' → logprob: -16.250003814697266
    8. '}' → logprob: -16.375003814697266
    9. '   ' → logprob: -16.375003814697266
    10. '``' → logprob: -16.500003814697266

Token 426: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7968066206085496e-05
    2. ' ,' → logprob: -10.625027656555176
    3. '),' → logprob: -13.000027656555176
    4. '},' → logprob: -14.250027656555176
    5. '",' → logprob: -15.250027656555176
    6. ')' → logprob: -15.375027656555176
    7. '<|end|>' → logprob: -16.250028610229492
    8. 'f' → logprob: -16.625028610229492
    9. '`,' → logprob: -17.125028610229492
    10. ',
' → logprob: -17.125028610229492

Token 427: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001172129064798355
    2. ' C' → logprob: -6.751172065734863
    3. ',' → logprob: -13.376172065734863
    4. '   ' → logprob: -15.501172065734863
    5. 'self' → logprob: -16.37617301940918
    6. ',C' → logprob: -17.12617301940918
    7. ' ' → logprob: -17.87617301940918
    8. '_C' → logprob: -18.37617301940918
    9. '     ' → logprob: -18.37617301940918
    10. '  ' → logprob: -19.00117301940918

Token 428: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.00022189407900441438
    2. '=' → logprob: -8.750222206115723
    3. '{' → logprob: -10.000222206115723
    4. '=f' → logprob: -11.625222206115723
    5. ']={' → logprob: -12.125222206115723
    6. '={
' → logprob: -14.000222206115723
    7. 'f' → logprob: -14.125222206115723
    8. ' ={' → logprob: -14.125222206115723
    9. '={`' → logprob: -15.000222206115723
    10. '=#{' → logprob: -15.125222206115723

Token 429: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014274569228291512
    2. '{' → logprob: -4.264274597167969
    3. ' self' → logprob: -9.389274597167969
    4. '-self' → logprob: -10.889274597167969
    5. '{-' → logprob: -12.389274597167969
    6. '-' → logprob: -13.639274597167969
    7. '	self' → logprob: -14.139274597167969
    8. '   ' → logprob: -14.264274597167969
    9. '0' → logprob: -14.639274597167969
    10. 'f' → logprob: -14.764274597167969

Token 430: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.12997543811798096
    2. ':.' → logprob: -2.1299753189086914
    3. '.C' → logprob: -6.629975318908691
    4. '.:' → logprob: -7.379975318908691
    5. '.' → logprob: -7.629975318908691
    6. 'C' → logprob: -8.254975318908691
    7. '_C' → logprob: -8.754975318908691
    8. ':C' → logprob: -10.129975318908691
    9. ' .' → logprob: -10.254975318908691
    10. '   ' → logprob: -10.379975318908691

Token 431: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -8.327856630785391e-05
    2. '_C' → logprob: -10.250082969665527
    3. 'A' → logprob: -11.125082969665527
    4. 'f' → logprob: -11.750082969665527
    5. '}' → logprob: -12.250082969665527
    6. 'B' → logprob: -13.000082969665527
    7. ')' → logprob: -13.125082969665527
    8. '```' → logprob: -13.125082969665527
    9. '{' → logprob: -13.250082969665527
    10. '_' → logprob: -13.250082969665527

Token 432: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -3.9650025428272784e-05
    2. '{' → logprob: -10.625040054321289
    3. '.' → logprob: -11.250040054321289
    4. ' :.' → logprob: -14.500040054321289
    5. '}' → logprob: -15.125040054321289
    6. '   ' → logprob: -15.500040054321289
    7. '```' → logprob: -15.875040054321289
    8. ':{' → logprob: -16.12504005432129
    9. '):' → logprob: -16.12504005432129
    10. ' {:.' → logprob: -16.12504005432129

Token 433: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.750000953674316
    3. '{' → logprob: -15.875000953674316
    4. '010' → logprob: -15.875000953674316
    5. '```' → logprob: -16.125001907348633
    6. 'f' → logprob: -16.500001907348633
    7. '-' → logprob: -17.375001907348633
    8. '0' → logprob: -17.625001907348633
    9. '``' → logprob: -18.000001907348633
    10. '   ' → logprob: -18.250001907348633

Token 434: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.438573680294212e-06
    2. '```' → logprob: -12.750005722045898
    3. '10' → logprob: -13.750005722045898
    4. ' f' → logprob: -15.000005722045898
    5. '``' → logprob: -15.625005722045898
    6. '   ' → logprob: -15.750005722045898
    7. '
' → logprob: -16.1250057220459
    8. '       ' → logprob: -16.5000057220459
    9. ' ' → logprob: -16.6250057220459
    10. '	f' → logprob: -16.6250057220459

Token 435: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.021893836557865143
    2. ')' → logprob: -4.0218939781188965
    3. ')">' → logprob: -6.0218939781188965
    4. ')")' → logprob: -6.6468939781188965
    5. '")' → logprob: -12.646893501281738
    6. ')”' → logprob: -13.146893501281738
    7. ')`' → logprob: -13.271893501281738
    8. ')">
' → logprob: -13.646893501281738
    9. ')",' → logprob: -13.896893501281738
    10. '')"' → logprob: -14.021893501281738

Token 436: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.56233171664644e-05
    2. ' class' → logprob: -10.375055313110352
    3. '
' → logprob: -10.875055313110352
    4. '\n' → logprob: -13.500055313110352
    5. '<class' → logprob: -13.875055313110352
    6. '<|end|>' → logprob: -14.000055313110352
    7. '"class' → logprob: -14.375055313110352
    8. 'c' → logprob: -15.375055313110352
    9. '```' → logprob: -15.750055313110352
    10. '\' → logprob: -15.750055313110352

Token 438: ' System' (ID: 1219)
  Prédit: 'Vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vertical' → logprob: -0.7688751220703125
    2. 'Parallel' → logprob: -2.1438751220703125
    3. 'Par' → logprob: -2.2688751220703125
    4. 'Line' → logprob: -3.1438751220703125
    5. ' Vertical' → logprob: -3.1438751220703125
    6. 'Per' → logprob: -3.3938751220703125
    7. ' Par' → logprob: -3.7688751220703125
    8. 'Circle' → logprob: -3.8938751220703125
    9. 'Horizontal' → logprob: -4.1438751220703125
    10. 'Point' → logprob: -4.2688751220703125

Token 439: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -0.8371630907058716
    2. 'Line' → logprob: -0.8371630907058716
    3. 'Point' → logprob: -3.087162971496582
    4. 'Solution' → logprob: -3.337162971496582
    5. 'Solver' → logprob: -4.337162971496582
    6. '(Line' → logprob: -5.212162971496582
    7. 'Lines' → logprob: -5.337162971496582
    8. 'Linear' → logprob: -5.837162971496582
    9. 'of' → logprob: -6.212162971496582
    10. 'Vector' → logprob: -6.337162971496582

Token 440: 'Equal' (ID: 5676)
  Prédit: 'Lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Lines' → logprob: -0.0890488475561142
    2. 'Equ' → logprob: -3.2140488624572754
    3. 'Linear' → logprob: -3.3390488624572754
    4. 'Line' → logprob: -5.339048862457275
    5. 'Two' → logprob: -5.964048862457275
    6. 'Points' → logprob: -7.339048862457275
    7. 'Eu' → logprob: -7.589048862457275
    8. ' Lines' → logprob: -7.964048862457275
    9. 'Equation' → logprob: -8.589048385620117
    10. 'equ' → logprob: -9.214048385620117

Token 441: 'Distance' (ID: 17525)
  Prédit: 'ities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -0.1773427277803421
    2. 'ity' → logprob: -2.052342653274536
    3. 'Lines' → logprob: -3.427342653274536
    4. 'Distance' → logprob: -7.427342891693115
    5. 'Distances' → logprob: -7.677342891693115
    6. 'Angles' → logprob: -8.177342414855957
    7. '_lines' → logprob: -9.677342414855957
    8. 'Linear' → logprob: -10.427342414855957
    9. 'itys' → logprob: -10.927342414855957
    10. 'lines' → logprob: -11.177342414855957

Token 442: '(' (ID: 7)
  Prédit: 'Lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lines' → logprob: -0.020739475265145302
    2. '(L' → logprob: -4.395739555358887
    3. ':' → logprob: -6.270739555358887
    4. '(Line' → logprob: -6.395739555358887
    5. 's' → logprob: -6.520739555358887
    6. '(' → logprob: -6.645739555358887
    7. 'Points' → logprob: -6.895739555358887
    8. ':
' → logprob: -8.020739555358887
    9. 'Constraints' → logprob: -8.395739555358887
    10. 'To' → logprob: -9.395739555358887

Token 443: 'ABC' (ID: 44197)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -0.0291580893099308
    2. 'ABC' → logprob: -3.779158115386963
    3. 'Lines' → logprob: -6.154158115386963
    4. 'object' → logprob: -6.779158115386963
    5. '):
' → logprob: -7.029158115386963
    6. ')' → logprob: -7.154158115386963
    7. '):' → logprob: -7.904158115386963
    8. '(Line' → logprob: -8.404157638549805
    9. 'Object' → logprob: -8.904157638549805
    10. 'System' → logprob: -10.029157638549805

Token 444: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10143141448497772
    2. '):
' → logprob: -2.351431369781494
    3. ')' → logprob: -6.976431369781494
    4. ':' → logprob: -8.726431846618652
    5. '):
' → logprob: -9.726431846618652
    6. '):

' → logprob: -10.976431846618652
    7. '(Line' → logprob: -10.976431846618652
    8. 'Line' → logprob: -11.351431846618652
    9. '   ' → logprob: -11.976431846618652
    10. ',' → logprob: -12.226431846618652

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13635511696338654
    2. ':' → logprob: -2.51135516166687
    3. '):' → logprob: -3.26135516166687
    4. '(' → logprob: -5.636354923248291
    5. '):
' → logprob: -6.011354923248291
    6. ':
' → logprob: -6.886354923248291
    7. ')' → logprob: -7.886354923248291
    8. '(Abstract' → logprob: -8.51135540008545
    9. '  ' → logprob: -9.13635540008545
    10. '():' → logprob: -9.63635540008545

Token 446: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5868720412254333
    2. ' def' → logprob: -0.8368720412254333
    3. 'def' → logprob: -4.711872100830078
    4. ' @' → logprob: -6.336872100830078
    5. '@' (adapté à ' @') → logprob: -9.211872100830078
    6. '    ' → logprob: -12.211872100830078
    7. '    
' → logprob: -12.461872100830078
    8. '	def' → logprob: -12.836872100830078
    9. '  ' → logprob: -13.586872100830078
    10. ' ' → logprob: -13.836872100830078

Token 447: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -2.093505099765025e-05
    2. 'property' → logprob: -11.375020980834961
    3. 'staticmethod' → logprob: -12.125020980834961
    4. 'abc' → logprob: -13.125020980834961
    5. 'classmethod' → logprob: -13.500020980834961
    6. ' abstract' → logprob: -14.875020980834961
    7. 'ab' → logprob: -15.625020980834961
    8. 'abs' → logprob: -15.875020980834961
    9. 'def' → logprob: -18.25002098083496
    10. 'class' → logprob: -18.75002098083496

Token 448: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0002991160727106035
    2. '_method' → logprob: -8.125299453735352
    3. 'classmethod' → logprob: -13.250299453735352
    4. 'def' → logprob: -14.875299453735352
    5. 'staticmethod' → logprob: -15.000299453735352
    6. 'ethod' → logprob: -15.500299453735352
    7. 'meth' → logprob: -15.625299453735352
    8. '	method' → logprob: -16.50029945373535
    9. ' method' → logprob: -16.75029945373535
    10. 'property' → logprob: -16.87529945373535

Token 449: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5485028624534607
    2. 'def' → logprob: -1.0485029220581055
    3. '   ' → logprob: -2.7985029220581055
    4. ' def' → logprob: -5.2985029220581055
    5. '(' → logprob: -5.7985029220581055
    6. '	def' → logprob: -7.0485029220581055
    7. '    
' → logprob: -7.4235029220581055
    8. '<|end|>' → logprob: -7.9235029220581055
    9. '
' → logprob: -8.548502922058105
    10. '<|end|>' → logprob: -9.298502922058105

Token 450: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3781956434249878
    2. '
' → logprob: -1.2531956434249878
    3. ' def' → logprob: -4.128195762634277
    4. '   ' → logprob: -4.378195762634277
    5. '	def' → logprob: -8.003195762634277
    6. '    
' → logprob: -8.753195762634277
    7. '<|end|>' → logprob: -10.253195762634277
    8. '```' → logprob: -10.378195762634277
    9. '(def' → logprob: -10.878195762634277
    10. '<|end|>' → logprob: -11.253195762634277

Token 451: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001693388563580811
    2. 'property' → logprob: -7.126693248748779
    3. ' def' → logprob: -7.376693248748779
    4. 'classmethod' → logprob: -9.126693725585938
    5. 'staticmethod' → logprob: -9.126693725585938
    6. 'method' → logprob: -10.626693725585938
    7. 'class' → logprob: -11.626693725585938
    8. '   ' → logprob: -12.126693725585938
    9. '
' → logprob: -12.251693725585938
    10. '  ' → logprob: -15.001693725585938

Token 452: ' find' (ID: 1646)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.4086354374885559
    2. ' lines' → logprob: -2.783635377883911
    3. ' solve' → logprob: -2.908635377883911
    4. 'distance' → logprob: -3.283635377883911
    5. 'lines' → logprob: -3.408635377883911
    6. 'add' → logprob: -3.408635377883911
    7. 'find' → logprob: -4.15863561630249
    8. 'get' → logprob: -4.28363561630249
    9. ' add' → logprob: -4.78363561630249
    10. 'def' → logprob: -4.90863561630249

Token 453: '_point' (ID: 15466)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.5021001100540161
    2. '_solution' → logprob: -1.6271001100540161
    3. '_lines' → logprob: -3.0020999908447266
    4. '_point' → logprob: -3.0020999908447266
    5. '_inter' → logprob: -4.127099990844727
    6. '_all' → logprob: -4.252099990844727
    7. '_equ' → logprob: -4.502099990844727
    8. '_line' → logprob: -4.627099990844727
    9. '_ro' → logprob: -4.627099990844727
    10. '_s' → logprob: -5.127099990844727

Token 454: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002589454175904393
    2. 's' → logprob: -6.002589225769043
    3. '(s' → logprob: -10.127589225769043
    4. 'self' → logprob: -10.377589225769043
    5. '(
' → logprob: -10.502589225769043
    6. '(' → logprob: -11.752589225769043
    7. ' (' → logprob: -12.127589225769043
    8. '()' → logprob: -13.752589225769043
    9. ' self' → logprob: -15.627589225769043
    10. '(sel' → logprob: -16.12759017944336

Token 455: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1188771054148674
    2. ',' → logprob: -2.2438771724700928
    3. 'self' → logprob: -5.618876934051514
    4. '):' → logprob: -6.368876934051514
    5. ')->' → logprob: -7.743876934051514
    6. ':' → logprob: -9.493877410888672
    7. ' )' → logprob: -10.118877410888672
    8. '       ' → logprob: -10.743877410888672
    9. '   ' → logprob: -10.743877410888672
    10. '(self' → logprob: -10.993877410888672

Token 456: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002098633674904704
    2. ' ->' → logprob: -7.002098560333252
    3. '->' → logprob: -7.752098560333252
    4. '(' → logprob: -7.752098560333252
    5. 'self' → logprob: -8.87709903717041
    6. ' (' → logprob: -9.00209903717041
    7. '       ' → logprob: -11.00209903717041
    8. ')' → logprob: -11.37709903717041
    9. ':' → logprob: -11.75209903717041
    10. ' self' → logprob: -11.87709903717041

Token 457: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.005509907845407724
    2. ' Optional' → logprob: -5.755509853363037
    3. 'Point' → logprob: -6.130509853363037
    4. 'Tuple' → logprob: -9.005510330200195
    5. 'List' → logprob: -11.255510330200195
    6. 'None' → logprob: -12.005510330200195
    7. ' Point' → logprob: -12.005510330200195
    8. '	Optional' → logprob: -13.380510330200195
    9. 'optional' → logprob: -13.505510330200195
    10. '(Optional' → logprob: -14.130510330200195

Token 458: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. 'Point' → logprob: -13.000004768371582
    3. '(Point' → logprob: -14.000004768371582
    4. '<Point' → logprob: -14.625004768371582
    5. '[
' → logprob: -15.000004768371582
    6. '['' → logprob: -15.250004768371582
    7. '[List' → logprob: -15.375004768371582
    8. '	Point' → logprob: -15.625004768371582
    9. '   ' → logprob: -15.875004768371582
    10. ' [' → logprob: -16.5000057220459

Token 459: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.36574100604048e-06
    2. ' Point' → logprob: -12.875004768371582
    3. 'float' → logprob: -13.875004768371582
    4. 'Tuple' → logprob: -14.750004768371582
    5. '	Point' → logprob: -15.250004768371582
    6. '[' → logprob: -15.875004768371582
    7. 'List' → logprob: -16.750003814697266
    8. '(Point' → logprob: -17.875003814697266
    9. '   ' → logprob: -19.125003814697266
    10. '_point' → logprob: -19.375003814697266

Token 460: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06403357535600662
    2. ':' → logprob: -3.8140335083007812
    3. ']:' → logprob: -3.9390335083007812
    4. '   ' → logprob: -4.314033508300781
    5. '):
' → logprob: -5.689033508300781
    6. '():' → logprob: -6.814033508300781
    7. ')' → logprob: -6.939033508300781
    8. ']' → logprob: -7.939033508300781
    9. '<|end|>' → logprob: -8.189033508300781
    10. ' ' → logprob: -8.564033508300781

Token 461: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 462: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.5732679963111877
    2. '       ' → logprob: -1.073267936706543
    3. '   ' → logprob: -2.573267936706543
    4. ' pass' → logprob: -4.073267936706543
    5. '...' → logprob: -7.073267936706543
    6. '	pass' → logprob: -9.073267936706543
    7. '    ' → logprob: -9.698267936706543
    8. '  ' → logprob: -9.823267936706543
    9. '      ' → logprob: -11.073267936706543
    10. '     ' → logprob: -11.448267936706543

Token 463: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0019023398635908961
    2. '

' → logprob: -6.751902103424072
    3. '
' → logprob: -7.626902103424072
    4. '<|end|>' → logprob: -8.37690258026123
    5. ' class' → logprob: -12.87690258026123
    6. '```' → logprob: -13.12690258026123
    7. '<|end|>' → logprob: -13.12690258026123
    8. '   ' → logprob: -13.25190258026123
    9. '<class' → logprob: -13.75190258026123
    10. '    
' → logprob: -14.00190258026123

Token 464: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00016349162615370005
    2. '
' → logprob: -8.750163078308105
    3. '

' → logprob: -12.750163078308105
    4. ' class' → logprob: -13.500163078308105
    5. '<|end|>' → logprob: -15.125163078308105
    6. '<class' → logprob: -15.625163078308105
    7. '```' → logprob: -16.625164031982422
    8. '"class' → logprob: -17.125164031982422
    9. '  
' → logprob: -17.500164031982422
    10. '@class' → logprob: -18.000164031982422

Token 465: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -9.877503907773644e-05
    2. 'def' → logprob: -10.250099182128906
    3. '@' (adapté à ' @') → logprob: -10.875099182128906
    4. '@dat' → logprob: -11.375099182128906
    5. 'abstract' → logprob: -11.500099182128906
    6. 'pass' → logprob: -12.000099182128906
    7. '@property' → logprob: -12.000099182128906
    8. '   ' → logprob: -12.875099182128906
    9. 'from' → logprob: -13.125099182128906
    10. 'classmethod' → logprob: -13.250099182128906

Token 466: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.002700377954170108
    2. 'property' → logprob: -6.502700328826904
    3. 'staticmethod' → logprob: -7.377700328826904
    4. 'abc' → logprob: -7.752700328826904
    5. 'classmethod' → logprob: -9.252700805664062
    6. 'dat' → logprob: -10.002700805664062
    7. 'ABC' → logprob: -14.002700805664062
    8. ' abstract' → logprob: -14.752700805664062
    9. 'class' → logprob: -15.877700805664062
    10. 'abs' → logprob: -16.377700805664062

Token 467: 'method' (ID: 8697)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10311948508024216
    2. 'method' → logprob: -2.353119373321533
    3. ' def' → logprob: -7.103119373321533
    4. '   ' → logprob: -7.228119373321533
    5. '_method' → logprob: -7.728119373321533
    6. '
' → logprob: -7.728119373321533
    7. 'classmethod' → logprob: -9.603119850158691
    8. 'user' → logprob: -10.103119850158691
    9. '<|end|>' → logprob: -10.103119850158691
    10. ':' → logprob: -10.228119850158691

Token 468: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013528411276638508
    2. '   ' → logprob: -4.513528347015381
    3. '
' → logprob: -6.388528347015381
    4. ' def' → logprob: -7.138528347015381
    5. '	def' → logprob: -13.513528823852539
    6. '    
' → logprob: -14.763528823852539
    7. '  ' → logprob: -15.013528823852539
    8. 'from' → logprob: -15.763528823852539
    9. '```' → logprob: -16.01352882385254
    10. '    ' → logprob: -16.51352882385254

Token 469: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0045441691763699055
    2. '   ' → logprob: -5.629544258117676
    3. ' def' → logprob: -7.129544258117676
    4. '
' → logprob: -8.879544258117676
    5. '	def' → logprob: -13.504544258117676
    6. ':def' → logprob: -14.754544258117676
    7. '```' → logprob: -15.004544258117676
    8. 'd' → logprob: -15.629544258117676
    9. '    
' → logprob: -15.754544258117676
    10. ':' → logprob: -15.754544258117676

Token 470: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00025108797126449645
    2. 'property' → logprob: -9.375250816345215
    3. ' def' → logprob: -9.625250816345215
    4. 'classmethod' → logprob: -9.875250816345215
    5. 'class' → logprob: -10.500250816345215
    6. 'staticmethod' → logprob: -11.125250816345215
    7. '
' → logprob: -12.875250816345215
    8. '@property' → logprob: -13.625250816345215
    9. 'from' → logprob: -14.375250816345215
    10. '   ' → logprob: -15.000250816345215

Token 471: ' has' (ID: 853)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.9423503279685974
    2. 'lines' → logprob: -1.9423503875732422
    3. 'add' → logprob: -2.442350387573242
    4. '_lines' → logprob: -2.692350387573242
    5. 'set' → logprob: -3.067350387573242
    6. 'get' → logprob: -3.192350387573242
    7. 'normal' → logprob: -3.442350387573242
    8. 'validate' → logprob: -3.692350387573242
    9. '__' → logprob: -4.067350387573242
    10. 'dist' → logprob: -4.192350387573242

Token 472: '_multiple' (ID: 111487)
  Prédit: '_solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_solution' → logprob: -0.022501062601804733
    2. '_point' → logprob: -4.272500991821289
    3. '_unique' → logprob: -4.897500991821289
    4. '_equal' → logprob: -8.772500991821289
    5. '_' → logprob: -9.022500991821289
    6. 'solution' → logprob: -9.147500991821289
    7. '_s' → logprob: -9.272500991821289
    8. '_exact' → logprob: -9.522500991821289
    9. '_fixed' → logprob: -10.022500991821289
    10. '_valid' → logprob: -10.397500991821289

Token 473: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.004562919028103352
    2. '_points' → logprob: -5.504562854766846
    3. '_solution' → logprob: -8.879563331604004
    4. '_' → logprob: -9.254563331604004
    5. '_answers' → logprob: -9.629563331604004
    6. '_results' → logprob: -9.754563331604004
    7. 'solutions' → logprob: -9.754563331604004
    8. 's' → logprob: -11.004563331604004
    9. '_sources' → logprob: -11.254563331604004
    10. '_ro' → logprob: -11.629563331604004

Token 474: 'olutions' (ID: 83919)
  Prédit: 'olutions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olutions' → logprob: -0.0006367852329276502
    2. 'olution' → logprob: -7.625636577606201
    3. 'ol' → logprob: -9.62563705444336
    4. 'ols' → logprob: -10.37563705444336
    5. 'solutions' → logprob: -11.25063705444336
    6. '{' → logprob: -12.25063705444336
    7. '

' → logprob: -12.37563705444336
    8. '>' → logprob: -12.37563705444336
    9. '```' → logprob: -12.62563705444336
    10. '   ' → logprob: -13.25063705444336

Token 475: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015115165151655674
    2. '(' → logprob: -4.515115261077881
    3. 'self' → logprob: -5.640115261077881
    4. ' (' → logprob: -9.015114784240723
    5. '(
' → logprob: -9.140114784240723
    6. 's' → logprob: -9.140114784240723
    7. '()' → logprob: -9.515114784240723
    8. '   ' → logprob: -10.140114784240723
    9. ' self' → logprob: -11.015114784240723
    10. '
' → logprob: -11.015114784240723

Token 476: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11674515902996063
    2. '(self' → logprob: -2.7417452335357666
    3. 'self' → logprob: -3.1167452335357666
    4. '):
' → logprob: -7.3667449951171875
    5. '):' → logprob: -8.116744995117188
    6. '   ' → logprob: -8.116744995117188
    7. '
' → logprob: -9.866744995117188
    8. '       ' → logprob: -10.491744995117188
    9. ' self' → logprob: -10.991744995117188
    10. 's' → logprob: -11.116744995117188

Token 477: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00047261794679798186
    2. '(' → logprob: -8.000473022460938
    3. ' (' → logprob: -9.625473022460938
    4. 'self' → logprob: -10.375473022460938
    5. '()' → logprob: -11.375473022460938
    6. '(s' → logprob: -11.625473022460938
    7. '(
' → logprob: -12.250473022460938
    8. ')' → logprob: -13.000473022460938
    9. '->' → logprob: -13.000473022460938
    10. '   ' → logprob: -13.125473022460938

Token 478: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.012226948514580727
    2. ' bool' → logprob: -4.5122270584106445
    3. ')' → logprob: -7.2622270584106445
    4. 'True' → logprob: -8.512227058410645
    5. 'self' → logprob: -8.637227058410645
    6. 'None' → logprob: -10.887227058410645
    7. '()' → logprob: -11.012227058410645
    8. 'Optional' → logprob: -11.512227058410645
    9. ' ->' → logprob: -11.887227058410645
    10. ' True' → logprob: -11.887227058410645

Token 479: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7940576672554016
    2. ':' → logprob: -0.9190576672554016
    3. '   ' → logprob: -2.919057607650757
    4. '(' → logprob: -2.919057607650757
    5. 'self' → logprob: -4.169057846069336
    6. '(
' → logprob: -5.044057846069336
    7. '       ' → logprob: -5.169057846069336
    8. ':
' → logprob: -5.419057846069336
    9. '
' → logprob: -5.669057846069336
    10. '():' → logprob: -6.169057846069336

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03665031120181084
    2. '   ' → logprob: -3.9116504192352295
    3. '<|end|>' → logprob: -4.91165018081665
    4. '
' → logprob: -5.16165018081665
    5. ':' → logprob: -6.78665018081665
    6. '\n' → logprob: -8.161650657653809
    7. '    ' → logprob: -8.411650657653809
    8. '        
' → logprob: -8.411650657653809
    9. '```' → logprob: -8.661650657653809
    10. ' pass' → logprob: -9.036650657653809

Token 481: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36582934856414795
    2. 'pass' (adapté à ' pass') → logprob: -1.365829348564148
    3. '...' → logprob: -3.7408294677734375
    4. ' pass' → logprob: -3.9908294677734375
    5. '   ' → logprob: -4.7408294677734375
    6. '...
' → logprob: -9.365829467773438
    7. ' ...' → logprob: -9.490829467773438
    8. '	pass' → logprob: -11.240829467773438
    9. '0' → logprob: -11.365829467773438
    10. '  ' → logprob: -11.490829467773438

Token 482: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.438573680294212e-06
    2. '
' → logprob: -12.875005722045898
    3. '<|end|>' → logprob: -13.375005722045898
    4. ' class' → logprob: -14.750005722045898
    5. '   ' → logprob: -15.375005722045898
    6. '```' → logprob: -15.500005722045898
    7. 'from' → logprob: -15.750005722045898
    8. 'import' → logprob: -15.875005722045898
    9. '

' → logprob: -17.5000057220459
    10. '<class' → logprob: -17.5000057220459

Token 483: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.704273118884885e-07
    2. 'from' → logprob: -15.125000953674316
    3. 'import' → logprob: -15.375000953674316
    4. '#' → logprob: -17.0
    5. '<|end|>' → logprob: -17.5
    6. ' class' → logprob: -17.625
    7. '   ' → logprob: -18.0
    8. '
' → logprob: -18.0
    9. '```' → logprob: -18.0
    10. '<class' → logprob: -18.5

Token 484: ' Equal' (ID: 67921)
  Prédit: 'System'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -1.197777271270752
    2. 'Two' → logprob: -1.447777271270752
    3. 'Equal' → logprob: -1.822777271270752
    4. ' System' → logprob: -2.322777271270752
    5. 'Three' → logprob: -3.447777271270752
    6. ' Two' → logprob: -3.572777271270752
    7. ' Equal' → logprob: -3.697777271270752
    8. 'Equ' → logprob: -4.072777271270752
    9. 'Line' → logprob: -4.447777271270752
    10. ' Three' → logprob: -4.822777271270752

Token 485: 'Distance' (ID: 17525)
  Prédit: 'Distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Distance' → logprob: -0.004775191657245159
    2. 'Distances' → logprob: -5.629775047302246
    3. 'distance' → logprob: -7.879775047302246
    4. 'Angle' → logprob: -9.254775047302246
    5. 'Difference' → logprob: -9.379775047302246
    6. 'Sides' → logprob: -9.754775047302246
    7. 'Dist' → logprob: -9.754775047302246
    8. 'Side' → logprob: -9.754775047302246
    9. 'Angles' → logprob: -10.004775047302246
    10. 'Segments' → logprob: -10.129775047302246

Token 486: 'From' (ID: 3879)
  Prédit: 'System'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.025688411667943
    2. 'Lines' → logprob: -4.275688648223877
    3. '(System' → logprob: -5.400688648223877
    4. 'From' → logprob: -6.275688648223877
    5. 'Between' → logprob: -6.525688648223877
    6. 'To' → logprob: -6.650688648223877
    7. 'Line' → logprob: -7.025688648223877
    8. 'Solver' → logprob: -7.775688648223877
    9. 'Points' → logprob: -8.400688171386719
    10. 'Two' → logprob: -9.275688171386719

Token 487: 'Lines' (ID: 22204)
  Prédit: 'Lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lines' → logprob: -0.10127006471157074
    2. 'Two' → logprob: -2.6012699604034424
    3. 'Line' → logprob: -4.3512701988220215
    4. 'Three' → logprob: -5.7262701988220215
    5. 'System' → logprob: -6.1012701988220215
    6. 'Points' → logprob: -6.9762701988220215
    7. 'Eu' → logprob: -7.3512701988220215
    8. '2' → logprob: -7.4762701988220215
    9. 'Segments' → logprob: -7.8512701988220215
    10. 'Multiple' → logprob: -8.601269721984863

Token 488: 'Solver' (ID: 70484)
  Prédit: '(System'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(System' → logprob: -8.721228368813172e-05
    2. '(' → logprob: -9.875086784362793
    3. ':System' → logprob: -10.625086784362793
    4. '(S' → logprob: -11.875086784362793
    5. ' (' → logprob: -13.250086784362793
    6. ':' → logprob: -13.375086784362793
    7. '(system' → logprob: -14.625086784362793
    8. '(Sys' → logprob: -15.375086784362793
    9. '<System' → logprob: -15.750086784362793
    10. '(
' → logprob: -16.50008773803711

Token 489: '(System' (ID: 16432)
  Prédit: '(System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(System' → logprob: -0.0063376761972904205
    2. ':' → logprob: -5.756337642669678
    3. '(' → logprob: -5.881337642669678
    4. ':System' → logprob: -8.381338119506836
    5. '(S' → logprob: -9.006338119506836
    6. ':
' → logprob: -12.256338119506836
    7. '(system' → logprob: -13.506338119506836
    8. '(Abstract' → logprob: -13.756338119506836
    9. ' :' → logprob: -14.006338119506836
    10. '(Sys' → logprob: -14.131338119506836

Token 490: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -0.0009585086372680962
    2. 'of' → logprob: -7.000958442687988
    3. '_of' → logprob: -10.625958442687988
    4. 'O' → logprob: -12.000958442687988
    5. 'System' → logprob: -12.250958442687988
    6. '   ' → logprob: -12.625958442687988
    7. ')' → logprob: -13.250958442687988
    8. ' of' → logprob: -13.750958442687988
    9. 'OF' → logprob: -13.875958442687988
    10. '<System' → logprob: -14.125958442687988

Token 491: 'Equal' (ID: 5676)
  Prédit: 'Equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Equal' → logprob: -5.431207682704553e-05
    2. 'Line' → logprob: -10.375054359436035
    3. 'Eu' → logprob: -11.750054359436035
    4. 'Distance' → logprob: -12.500054359436035
    5. 'Lines' → logprob: -13.125054359436035
    6. 'equal' → logprob: -13.250054359436035
    7. ' Equal' → logprob: -13.625054359436035
    8. '[' → logprob: -13.625054359436035
    9. ')' → logprob: -14.250054359436035
    10. 'Exact' → logprob: -14.250054359436035

Token 492: 'Distance' (ID: 17525)
  Prédit: 'Distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Distance' → logprob: -0.00046296243090182543
    2. 'distance' → logprob: -7.875463008880615
    3. '_distance' → logprob: -9.875462532043457
    4. 'Distances' → logprob: -10.875462532043457
    5. 'class' → logprob: -12.500462532043457
    6. ' Distance' → logprob: -12.750462532043457
    7. '
' → logprob: -13.500462532043457
    8. '   ' → logprob: -13.750462532043457
    9. 'import' → logprob: -14.625462532043457
    10. '_DISTANCE' → logprob: -14.875462532043457

Token 493: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760260820388794
    2. '):
' → logprob: -0.8260260820388794
    3. '   ' → logprob: -9.82602596282959
    4. '):
' → logprob: -11.07602596282959
    5. ')' → logprob: -11.95102596282959
    6. ':' → logprob: -12.70102596282959
    7. '):

' → logprob: -12.82602596282959
    8. ' ):' → logprob: -13.32602596282959
    9. '[' → logprob: -13.95102596282959
    10. '  ' → logprob: -14.95102596282959

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029816102236509323
    2. ' def' → logprob: -3.779816150665283
    3. 'def' → logprob: -5.029816150665283
    4. '):
' → logprob: -12.529815673828125
    5. ')' → logprob: -13.154815673828125
    6. '	def' → logprob: -13.904815673828125
    7. ':' → logprob: -14.029815673828125
    8. '):' → logprob: -14.654815673828125
    9. ' lines' → logprob: -15.279815673828125
    10. ':def' → logprob: -15.404815673828125

Token 495: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07114285975694656
    2. ' def' → logprob: -2.8211429119110107
    3. '   ' → logprob: -4.696142673492432
    4. ' ' → logprob: -13.19614315032959
    5. '	def' → logprob: -15.44614315032959
    6. '  ' → logprob: -15.69614315032959
    7. 'de' → logprob: -15.82114315032959
    8. 'class' → logprob: -16.196142196655273
    9. ':def' → logprob: -16.321142196655273
    10. '    ' → logprob: -16.571142196655273

Token 496: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0008478637901134789
    2. ' def' → logprob: -7.750847816467285
    3. '__' → logprob: -7.875847816467285
    4. 'def' → logprob: -10.375847816467285
    5. '_init' → logprob: -12.375847816467285
    6. 'init' → logprob: -14.000847816467285
    7. ' init' → logprob: -14.250847816467285
    8. ' ' → logprob: -16.1258487701416
    9. '   ' → logprob: -16.7508487701416
    10. '```' → logprob: -17.1258487701416

Token 497: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00022678142704535276
    2. 'it' → logprob: -8.750226974487305
    3. 'def' → logprob: -9.875226974487305
    4. 'nit' → logprob: -11.500226974487305
    5. 'in' → logprob: -12.875226974487305
    6. '_init' → logprob: -13.375226974487305
    7. '   ' → logprob: -14.125226974487305
    8. '(init' → logprob: -14.625226974487305
    9. 'i' → logprob: -15.500226974487305
    10. 'int' → logprob: -15.625226974487305

Token 498: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06236592307686806
    2. '(self' → logprob: -2.812366008758545
    3. '__(
' → logprob: -8.687365531921387
    4. '_(' → logprob: -9.562365531921387
    5. ' (' → logprob: -9.687365531921387
    6. 'self' → logprob: -10.187365531921387
    7. '(' → logprob: -10.687365531921387
    8. '__' → logprob: -10.937365531921387
    9. '   ' → logprob: -11.937365531921387
    10. ' ' → logprob: -12.687365531921387

Token 499: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.0536883615423e-05
    2. ' self' → logprob: -9.500080108642578
    3. '   ' → logprob: -12.375080108642578
    4. '
' → logprob: -14.375080108642578
    5. '       ' → logprob: -14.375080108642578
    6. ' ' → logprob: -16.500080108642578
    7. ',' → logprob: -17.125080108642578
    8. '  ' → logprob: -18.000080108642578
    9. '(self' → logprob: -18.750080108642578
    10. '    ' → logprob: -18.875080108642578

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056243833154439926
    2. 'self' → logprob: -2.931243896484375
    3. '(self' → logprob: -7.431243896484375
    4. '       ' → logprob: -7.556243896484375
    5. ',self' → logprob: -9.431243896484375
    6. '__(' → logprob: -9.556243896484375
    7. ' self' → logprob: -10.306243896484375
    8. '   ' → logprob: -10.556243896484375
    9. ' ,' → logprob: -11.306243896484375
    10. ',
' → logprob: -12.056243896484375

Token 501: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3476485311985016
    2. ' lines' → logprob: -1.3476485013961792
    3. 'self' → logprob: -3.5976486206054688
    4. ' self' → logprob: -5.097648620605469
    5. '   ' → logprob: -8.722648620605469
    6. '	lines' → logprob: -10.222648620605469
    7. 'line' → logprob: -10.347648620605469
    8. ' ' → logprob: -10.722648620605469
    9. '       ' → logprob: -11.222648620605469
    10. ' line' → logprob: -12.097648620605469

Token 502: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.034592388459714e-06
    2. '_:' → logprob: -12.125005722045898
    3. ' :' → logprob: -15.625005722045898
    4. '):' → logprob: -15.875005722045898
    5. '```' → logprob: -17.3750057220459
    6. '   ' → logprob: -18.0000057220459
    7. '__:' → logprob: -18.0000057220459
    8. ':list' → logprob: -18.5000057220459
    9. '       ' → logprob: -19.0000057220459
    10. '           ' → logprob: -19.2500057220459

Token 503: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00020377879263833165
    2. ' List' → logprob: -8.500204086303711
    3. '[List' → logprob: -15.500204086303711
    4. ')' → logprob: -16.87520408630371
    5. '   ' → logprob: -16.87520408630371
    6. '	List' → logprob: -17.50020408630371
    7. '       ' → logprob: -18.62520408630371
    8. 'list' → logprob: -18.75020408630371
    9. '```' → logprob: -19.50020408630371
    10. ' ' → logprob: -19.50020408630371

Token 504: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '[
' → logprob: -15.750000953674316
    3. ')' → logprob: -15.875000953674316
    4. '```' → logprob: -16.375
    5. ' [' → logprob: -16.5
    6. '[line' → logprob: -16.5
    7. '[E' → logprob: -16.875
    8. '['' → logprob: -17.25
    9. '
' → logprob: -17.375
    10. '[List' → logprob: -17.375

Token 505: 'Eu' (ID: 29824)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -0.3135492503643036
    2. 'Eu' → logprob: -1.313549280166626
    3. 'Tuple' → logprob: -9.188549041748047
    4. ' Eu' → logprob: -9.313549041748047
    5. ' Line' → logprob: -10.688549041748047
    6. 'Union' → logprob: -11.313549041748047
    7. 'Euro' → logprob: -11.563549041748047
    8. 'Point' → logprob: -12.063549041748047
    9. '[' → logprob: -12.188549041748047
    10. 'eu' → logprob: -12.188549041748047

Token 506: 'clidean' (ID: 116188)
  Prédit: 'clidean'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clidean' → logprob: -9.088346359931165e-07
    2. 'clid' → logprob: -14.125000953674316
    3. 'cl' → logprob: -15.875000953674316
    4. '```' → logprob: -19.75
    5. 'c' → logprob: -20.25
    6. '``' → logprob: -21.375
    7. '클' → logprob: -22.5
    8. 'clic' → logprob: -23.0
    9. 'cli' → logprob: -23.0
    10. 'cline' → logprob: -23.375

Token 507: 'Line' (ID: 3665)
  Prédit: 'Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -1.9361264946837764e-07
    2. 'Point' → logprob: -16.0
    3. 'line' → logprob: -17.0
    4. '```' → logprob: -17.75
    5. 'Lin' → logprob: -18.25
    6. 'L' → logprob: -19.75
    7. '_line' → logprob: -19.875
    8. 'Lines' → logprob: -19.875
    9. ' Line' → logprob: -20.25
    10. 'Li' → logprob: -20.625

Token 508: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.14809086918830872
    2. '):' → logprob: -2.3980908393859863
    3. ']):
' → logprob: -3.5230908393859863
    4. ')' → logprob: -4.648090839385986
    5. '])' → logprob: -5.398090839385986
    6. ']' → logprob: -6.273090839385986
    7. '):
' → logprob: -7.023090839385986
    8. '[' → logprob: -9.023091316223145
    9. ']:' → logprob: -9.648091316223145
    10. ')]' → logprob: -10.273091316223145

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023226479243021458
    2. ' self' → logprob: -8.875232696533203
    3. 'self' → logprob: -10.000232696533203
    4. ':' → logprob: -10.500232696533203
    5. ',' → logprob: -11.875232696533203
    6. '   ' → logprob: -12.250232696533203
    7. '):
' → logprob: -12.750232696533203
    8. '):' → logprob: -13.750232696533203
    9. '      ' → logprob: -14.000232696533203
    10. ')' → logprob: -14.375232696533203

Token 510: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08791158348321915
    2. ' self' → logprob: -2.587911605834961
    3. '       ' → logprob: -4.712911605834961
    4. '	self' → logprob: -13.962911605834961
    5. '   ' → logprob: -14.337911605834961
    6. '(self' → logprob: -14.837911605834961
    7. ' ' → logprob: -15.462911605834961
    8. 'import' → logprob: -15.837911605834961
    9. 'super' → logprob: -16.08791160583496
    10. '[self' → logprob: -16.96291160583496

Token 511: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0003122247871942818
    2. '.' → logprob: -8.250311851501465
    3. '.l' → logprob: -10.875311851501465
    4. ' .' → logprob: -11.125311851501465
    5. '.points' → logprob: -12.250311851501465
    6. '.layers' → logprob: -13.750311851501465
    7. '       ' → logprob: -13.875311851501465
    8. '.s' → logprob: -13.875311851501465
    9. '	lines' → logprob: -13.875311851501465
    10. '   ' → logprob: -14.125311851501465

Token 512: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28116223216056824
    2. ' =' → logprob: -1.4061622619628906
    3. ':' → logprob: -11.65616226196289
    4. ')' → logprob: -13.90616226196289
    5. '   ' → logprob: -14.28116226196289
    6. ' ' → logprob: -14.78116226196289
    7. '.' → logprob: -15.03116226196289
    8. 's' → logprob: -15.53116226196289
    9. ' :' → logprob: -15.65616226196289
    10. '=self' → logprob: -15.65616226196289

Token 513: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.31326815485954285
    2. ' lines' → logprob: -1.3132681846618652
    3. '	lines' → logprob: -12.938267707824707
    4. '(lines' → logprob: -13.063267707824707
    5. 'line' → logprob: -14.438267707824707
    6. '   ' → logprob: -14.813267707824707
    7. '.lines' → logprob: -15.938267707824707
    8. '[]' → logprob: -16.063268661499023
    9. ' ' → logprob: -16.188268661499023
    10. '[' → logprob: -16.188268661499023

Token 514: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0206720617134124e-05
    2. ' def' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.750009536743164
    4. 'from' → logprob: -19.875009536743164
    5. 'import' → logprob: -21.000009536743164
    6. '
' → logprob: -21.625009536743164
    7. '	def' → logprob: -22.875009536743164
    8. '#' → logprob: -23.000009536743164
    9. 'de' → logprob: -23.500009536743164
    10. ':def' → logprob: -23.875009536743164

Token 517: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.007609824184328318
    2. ' find' → logprob: -5.007609844207764
    3. 'def' → logprob: -7.507609844207764
    4. 'has' → logprob: -8.132609367370605
    5. '_find' → logprob: -10.632609367370605
    6. ' has' → logprob: -11.632609367370605
    7. ' def' → logprob: -12.257609367370605
    8. '   ' → logprob: -13.257609367370605
    9. '=find' → logprob: -13.257609367370605
    10. 'have' → logprob: -13.507609367370605

Token 518: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -7.183501293184236e-05
    2. '_points' → logprob: -9.75007152557373
    3. '_' → logprob: -12.12507152557373
    4. '_p' → logprob: -13.00007152557373
    5. ' _' → logprob: -13.75007152557373
    6. '```' → logprob: -14.25007152557373
    7. '_line' → logprob: -14.37507152557373
    8. '_pt' → logprob: -14.75007152557373
    9. '_token' → logprob: -14.75007152557373
    10. '_po' → logprob: -15.00007152557373

Token 519: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.500000953674316
    3. ' (' → logprob: -14.875000953674316
    4. 'self' → logprob: -16.250001907348633
    5. '(s' → logprob: -16.875001907348633
    6. '       ' → logprob: -18.375001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '(sel' → logprob: -18.375001907348633
    9. '()' → logprob: -18.625001907348633
    10. ' self' → logprob: -19.625001907348633

Token 520: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05881431698799133
    2. 'self' → logprob: -3.558814287185669
    3. '):' → logprob: -4.058814525604248
    4. '(self' → logprob: -5.183814525604248
    5. '):
' → logprob: -5.433814525604248
    6. ',' → logprob: -7.683814525604248
    7. '   ' → logprob: -8.05881404876709
    8. '       ' → logprob: -8.05881404876709
    9. 's' → logprob: -9.55881404876709
    10. '
' → logprob: -9.80881404876709

Token 521: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016837897419463843
    2. 'self' → logprob: -9.750168800354004
    3. '(' → logprob: -10.000168800354004
    4. ' (' → logprob: -10.125168800354004
    5. ' self' → logprob: -11.875168800354004
    6. ')' → logprob: -12.375168800354004
    7. '       ' → logprob: -12.750168800354004
    8. '   ' → logprob: -12.875168800354004
    9. ':' → logprob: -13.375168800354004
    10. 's' → logprob: -13.375168800354004

Token 522: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.029751179739832878
    2. ' Optional' → logprob: -3.5297510623931885
    3. '(Optional' → logprob: -15.27975082397461
    4. '   ' → logprob: -15.52975082397461
    5. '	Optional' → logprob: -15.52975082397461
    6. 'Point' → logprob: -17.77975082397461
    7. '_optional' → logprob: -18.02975082397461
    8. '```' → logprob: -18.40475082397461
    9. '       ' → logprob: -18.52975082397461
    10. '[' → logprob: -19.40475082397461

Token 523: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009698220528662205
    2. '(Point' → logprob: -7.375969886779785
    3. '[
' → logprob: -8.375969886779785
    4. '<Point' → logprob: -9.250969886779785
    5. 'Point' → logprob: -11.625969886779785
    6. '[(' → logprob: -13.375969886779785
    7. '[self' → logprob: -13.375969886779785
    8. '[List' → logprob: -13.750969886779785
    9. '```' → logprob: -14.000969886779785
    10. ' [' → logprob: -14.500969886779785

Token 524: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -8.41866585687967e-06
    2. ' Point' → logprob: -12.125008583068848
    3. 'float' → logprob: -13.000008583068848
    4. ')' → logprob: -14.625008583068848
    5. '	Point' → logprob: -16.37500762939453
    6. '(Point' → logprob: -16.87500762939453
    7. 'Po' → logprob: -17.37500762939453
    8. '_point' → logprob: -17.37500762939453
    9. '```' → logprob: -17.75000762939453
    10. 'point' → logprob: -17.75000762939453

Token 525: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5446351766586304
    2. ':' → logprob: -1.1696351766586304
    3. '):
' → logprob: -2.66963529586792
    4. ':
' → logprob: -3.29463529586792
    5. ']:' → logprob: -6.41963529586792
    6. '():' → logprob: -7.41963529586792
    7. '   ' → logprob: -8.169634819030762
    8. ')' → logprob: -8.669634819030762
    9. '():
' → logprob: -8.669634819030762
    10. '       ' → logprob: -9.669634819030762

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010163593105971813
    2. ' if' → logprob: -9.375102043151855
    3. 'n' → logprob: -11.875102043151855
    4. ' n' → logprob: -12.250102043151855
    5. '```' → logprob: -13.750102043151855
    6. '#' → logprob: -14.125102043151855
    7. ' lines' → logprob: -14.125102043151855
    8. ')' → logprob: -14.875102043151855
    9. 'if' → logprob: -15.000102043151855
    10. '   ' → logprob: -15.125102043151855

Token 527: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6033570170402527
    2. 'if' → logprob: -0.8533570170402527
    3. '#' (adapté à ' #') → logprob: -3.9783570766448975
    4. '       ' → logprob: -4.853356838226318
    5. 'import' → logprob: -8.478357315063477
    6. '"""
' → logprob: -9.353357315063477
    7. ' if' → logprob: -9.603357315063477
    8. 'A' → logprob: -10.603357315063477
    9. 'num' → logprob: -10.603357315063477
    10. 'raise' → logprob: -10.728357315063477

Token 528: ' If' (ID: 1843)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6774122714996338
    2. ' if' → logprob: -1.4274122714996338
    3. 'if' → logprob: -1.8024122714996338
    4. ' n' → logprob: -2.677412271499634
    5. '       ' → logprob: -4.552412033081055
    6. '   ' → logprob: -5.552412033081055
    7. 'num' → logprob: -6.927412033081055
    8. 'import' → logprob: -7.052412033081055
    9. '#' → logprob: -7.677412033081055
    10. ' lines' → logprob: -7.802412033081055

Token 529: ' only' (ID: 1606)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.49521735310554504
    2. ' not' → logprob: -0.9952173233032227
    3. 'len' → logprob: -3.9952173233032227
    4. ' len' → logprob: -5.995217323303223
    5. '   ' → logprob: -10.870217323303223
    6. '       ' → logprob: -12.620217323303223
    7. ' ' → logprob: -14.870217323303223
    8. '```' → logprob: -14.995217323303223
    9. '	not' → logprob: -15.495217323303223
    10. '!' → logprob: -15.495217323303223

Token 530: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.0004789320519194007
    2. 'one' → logprob: -8.250478744506836
    3. ' len' → logprob: -8.625478744506836
    4. ' not' → logprob: -10.625478744506836
    5. 'len' → logprob: -11.375478744506836
    6. ' ' → logprob: -14.125478744506836
    7. '_one' → logprob: -14.125478744506836
    8. 'not' → logprob: -14.625478744506836
    9. '1' → logprob: -15.125478744506836
    10. ' self' → logprob: -16.000478744506836

Token 531: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.006979987490922213
    2. 'line' → logprob: -5.006979942321777
    3. ' self' → logprob: -9.006979942321777
    4. ' lines' → logprob: -10.506979942321777
    5. '       ' → logprob: -10.756979942321777
    6. '_line' → logprob: -10.756979942321777
    7. ' ' → logprob: -11.256979942321777
    8. 'self' → logprob: -11.381979942321777
    9. '   ' → logprob: -11.881979942321777
    10. '	line' → logprob: -12.006979942321777

Token 532: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1401095688343048
    2. ':
' → logprob: -2.2651095390319824
    3. '       ' → logprob: -4.390109539031982
    4. ' or' → logprob: -5.265109539031982
    5. ',' → logprob: -5.515109539031982
    6. ' is' → logprob: -6.515109539031982
    7. ':return' → logprob: -6.765109539031982
    8. ' line' → logprob: -7.390109539031982
    9. ' and' → logprob: -7.515109539031982
    10. ' if' → logprob: -7.890109539031982

Token 533: ' infinite' (ID: 48413)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.246303915977478
    2. 'return' → logprob: -1.621303915977478
    3. 'line' → logprob: -1.621303915977478
    4. ' if' → logprob: -1.621303915977478
    5. '       ' → logprob: -2.8713040351867676
    6. ' line' → logprob: -3.2463040351867676
    7. ' return' → logprob: -4.496304035186768
    8. '           ' → logprob: -4.871304035186768
    9. 'l' → logprob: -5.871304035186768
    10. ' l' → logprob: -6.621304035186768

Token 534: ' points' (ID: 5571)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.4700338840484619
    2. ' solutions' → logprob: -1.595033884048462
    3. '<|end|>' → logprob: -1.845033884048462
    4. 'return' → logprob: -5.345033645629883
    5. ' possibilities' → logprob: -6.095033645629883
    6. '#' → logprob: -6.470033645629883
    7. 'distance' → logprob: -6.845033645629883
    8. ' return' → logprob: -7.095033645629883
    9. 'points' → logprob: -7.345033645629883
    10. '
' → logprob: -7.595033645629883

Token 535: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040297653526067734
    2. ':' → logprob: -3.790297746658325
    3. ' return' → logprob: -4.665297508239746
    4. ' if' → logprob: -6.290297508239746
    5. 'return' → logprob: -6.540297508239746
    6. ' or' → logprob: -6.790297508239746
    7. ':return' → logprob: -7.290297508239746
    8. ',' → logprob: -7.540297508239746
    9. ' in' → logprob: -8.040297508239746
    10. ' and' → logprob: -8.290297508239746

Token 536: ' same' (ID: 2684)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.10337643325328827
    2. 'any' → logprob: -2.3533763885498047
    3. 'zero' → logprob: -6.978376388549805
    4. 'all' → logprob: -7.228376388549805
    5. 'in' → logprob: -7.478376388549805
    6. 'line' → logprob: -8.103376388549805
    7. ' distance' → logprob: -8.978376388549805
    8. ' any' → logprob: -9.103376388549805
    9. 'every' → logprob: -9.228376388549805
    10. 'a' → logprob: -9.478376388549805

Token 537: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.055083017796278
    2. ' distance' → logprob: -2.9300830364227295
    3. ' distances' → logprob: -9.805083274841309
    4. '   ' → logprob: -10.180083274841309
    5. '(distance' → logprob: -10.930083274841309
    6. '
' → logprob: -11.055083274841309
    7. 'dist' → logprob: -11.555083274841309
    8. ' ' → logprob: -11.805083274841309
    9. '```' → logprob: -11.805083274841309
    10. '0' → logprob: -12.180083274841309

Token 538: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6903139352798462
    2. ' return' → logprob: -1.5653139352798462
    3. ',' → logprob: -1.6903139352798462
    4. 'from' → logprob: -3.3153138160705566
    5. ':' → logprob: -4.065313816070557
    6. ' from' → logprob: -4.440313816070557
    7. 'return' → logprob: -4.815313816070557
    8. '.' → logprob: -5.065313816070557
    9. ' (' → logprob: -5.315313816070557
    10. ' to' → logprob: -5.315313816070557

Token 539: 'distance' (ID: 40614)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03142614662647247
    2. ' return' → logprob: -4.781425952911377
    3. 'None' → logprob: -5.281425952911377
    4. 'any' → logprob: -5.406425952911377
    5. 'True' → logprob: -5.406425952911377
    6. 'self' → logprob: -6.281425952911377
    7. '#' → logprob: -6.531425952911377
    8. ')' → logprob: -7.406425952911377
    9. 'not' → logprob: -7.531425952911377
    10. 'all' → logprob: -7.781425952911377

Token 540: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47969019412994385
    2. ')' → logprob: -2.3546900749206543
    3. ' to' → logprob: -2.6046900749206543
    4. '_to' → logprob: -2.8546900749206543
    5. 's' → logprob: -3.4796900749206543
    6. ' is' → logprob: -3.4796900749206543
    7. 'to' → logprob: -3.7296900749206543
    8. 'from' → logprob: -3.8546900749206543
    9. ' =' → logprob: -3.8546900749206543
    10. ' from' → logprob: -4.979690074920654

Token 541: ' distance' (ID: 9324)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021269454155117273
    2. 'self' → logprob: -7.127127170562744
    3. 'abs' → logprob: -7.502127170562744
    4. ' ' → logprob: -7.877127170562744
    5. 'line' → logprob: -9.252126693725586
    6. 'None' → logprob: -9.752126693725586
    7. ' self' → logprob: -10.377126693725586
    8. ')' → logprob: -10.502126693725586
    9. ' abs' → logprob: -10.502126693725586
    10. 'float' → logprob: -10.627126693725586

Token 542: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8260292410850525
    2. ' to' → logprob: -1.3260293006896973
    3. 'to' → logprob: -2.3260293006896973
    4. 'from' → logprob: -2.8260293006896973
    5. '_to' → logprob: -3.4510293006896973
    6. ' from' → logprob: -3.7010293006896973
    7. '),' → logprob: -3.8260293006896973
    8. '=' → logprob: -4.076029300689697
    9. ')
' → logprob: -4.576029300689697
    10. '0' → logprob: -5.451029300689697

Token 543: ' line' (ID: 2543)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.897514283657074
    2. 'lines' → logprob: -1.3975143432617188
    3. 'the' → logprob: -1.8975143432617188
    4. 'line' → logprob: -2.0225143432617188
    5. ' lines' → logprob: -3.5225143432617188
    6. 'that' → logprob: -4.022514343261719
    7. ' the' → logprob: -5.522514343261719
    8. ' self' → logprob: -5.897514343261719
    9. ')' → logprob: -5.897514343261719
    10. ' line' → logprob: -6.272514343261719

Token 544: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012332926504313946
    2. '),' → logprob: -4.887332916259766
    3. ')
' → logprob: -6.637332916259766
    4. ').' → logprob: -6.762332916259766
    5. ' )' → logprob: -6.887332916259766
    6. ',' → logprob: -8.512332916259766
    7. '#' → logprob: -9.137332916259766
    8. ' itself' → logprob: -9.262332916259766
    9. '   ' → logprob: -9.512332916259766
    10. '       ' → logprob: -9.512332916259766

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011528400937095284
    2. ' if' → logprob: -7.001152992248535
    3. ',' → logprob: -9.376152992248535
    4. '   ' → logprob: -9.751152992248535
    5. 'if' → logprob: -10.626152992248535
    6. '           ' → logprob: -11.376152992248535
    7. ')' → logprob: -11.751152992248535
    8. '        
' → logprob: -11.751152992248535
    9. 'return' → logprob: -11.876152992248535
    10. ' return' → logprob: -12.001152992248535

Token 546: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.026868527755141258
    2. '       ' → logprob: -4.4018683433532715
    3. 'return' → logprob: -4.7768683433532715
    4. ' if' → logprob: -5.1518683433532715
    5. ' return' → logprob: -10.52686882019043
    6. 'None' → logprob: -11.27686882019043
    7. '   ' → logprob: -12.90186882019043
    8. '```' → logprob: -13.27686882019043
    9. ' None' → logprob: -14.40186882019043
    10. 'for' → logprob: -15.65186882019043

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14662562310695648
    2. '=' → logprob: -2.396625518798828
    3. '_lines' → logprob: -3.146625518798828
    4. '=len' → logprob: -7.021625518798828
    5. 'um' → logprob: -7.396625518798828
    6. '   ' → logprob: -7.771625518798828
    7. '       ' → logprob: -8.646625518798828
    8. 'lines' → logprob: -9.271625518798828
    9. '_' → logprob: -10.271625518798828
    10. ' lines' → logprob: -10.896625518798828

Token 548: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011047814972698689
    2. ' len' → logprob: -4.511047840118408
    3. '(len' → logprob: -17.88604736328125
    4. '   ' → logprob: -19.13604736328125
    5. '=len' → logprob: -19.63604736328125
    6. '	len' → logprob: -19.88604736328125
    7. '[len' → logprob: -21.63604736328125
    8. '
' → logprob: -21.76104736328125
    9. ' ' → logprob: -22.13604736328125
    10. '       ' → logprob: -22.51104736328125

Token 549: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.00000286102295
    3. 'self' → logprob: -14.37500286102295
    4. ' (' → logprob: -18.375003814697266
    5. '(this' → logprob: -19.125003814697266
    6. '(
' → logprob: -19.500003814697266
    7. ' self' → logprob: -19.625003814697266
    8. '(s' → logprob: -20.625003814697266
    9. '(sel' → logprob: -21.250003814697266
    10. '=self' → logprob: -21.750003814697266

Token 550: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -9.567575034452602e-05
    2. 'self' → logprob: -9.87509536743164
    3. '.' → logprob: -11.12509536743164
    4. '(lines' → logprob: -11.25009536743164
    5. '.self' → logprob: -11.87509536743164
    6. 'lines' → logprob: -12.25009536743164
    7. '(self' → logprob: -13.00009536743164
    8. ').' → logprob: -14.50009536743164
    9. '	lines' → logprob: -14.62509536743164
    10. ' lines' → logprob: -14.87509536743164

Token 551: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003902775060851127
    2. ')
' → logprob: -7.87539005279541
    3. ' )' → logprob: -11.62539005279541
    4. '       ' → logprob: -14.87539005279541
    5. ')
' → logprob: -15.00039005279541
    6. '   ' → logprob: -15.87539005279541
    7. ')

' → logprob: -16.125391006469727
    8. ' ' → logprob: -16.375391006469727
    9. ')return' → logprob: -17.125391006469727
    10. '<|end|>' → logprob: -17.125391006469727

Token 552: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004901650827378035
    2. 'if' → logprob: -5.754901885986328
    3. ' if' → logprob: -6.754901885986328
    4. '
' → logprob: -8.504901885986328
    5. '        
' → logprob: -9.004901885986328
    6. '<|end|>' → logprob: -9.254901885986328
    7. '   ' → logprob: -9.879901885986328
    8. ' ' → logprob: -10.754901885986328
    9. ',' → logprob: -11.629901885986328
    10. '        ' → logprob: -11.754901885986328

Token 553: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00030674142180942
    2. '       ' → logprob: -8.250307083129883
    3. ' if' → logprob: -10.000307083129883
    4. '   ' → logprob: -16.750307083129883
    5. '```' → logprob: -18.000307083129883
    6. '
' → logprob: -18.125307083129883
    7. 'i' → logprob: -18.375307083129883
    8. '	if' → logprob: -18.375307083129883
    9. 'for' → logprob: -18.875307083129883
    10. 'If' → logprob: -19.375307083129883

Token 554: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.575950562953949
    2. ' n' → logprob: -0.825950562953949
    3. '	n' → logprob: -12.075950622558594
    4. '0' → logprob: -13.075950622558594
    5. '1' → logprob: -13.450950622558594
    6. '   ' → logprob: -14.075950622558594
    7. ' ' → logprob: -14.700950622558594
    8. '(n' → logprob: -15.950950622558594
    9. ' ' → logprob: -16.575950622558594
    10. ' н' → logprob: -17.200950622558594

Token 555: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14829561114311218
    2. ' <' → logprob: -2.8982956409454346
    3. '==' → logprob: -2.8982956409454346
    4. ' <=' → logprob: -3.7732956409454346
    5. '<' → logprob: -5.7732954025268555
    6. '<=' → logprob: -7.1482954025268555
    7. ' ' → logprob: -7.3982954025268555
    8. '1' → logprob: -10.148295402526855
    9. '=' → logprob: -10.648295402526855
    10. ' !=' → logprob: -10.773295402526855

Token 556: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20436356961727142
    2. '0' → logprob: -1.7043635845184326
    3. ' ' → logprob: -5.8293633460998535
    4. '   ' → logprob: -12.204363822937012
    5. '  ' → logprob: -15.016863822937012
    6. '    ' → logprob: -16.204362869262695
    7. '2' → logprob: -16.579362869262695
    8. '```' → logprob: -16.579362869262695
    9. '     ' → logprob: -16.766862869262695
    10. '       ' → logprob: -16.954362869262695

Token 557: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11374995112419128
    2. '0' → logprob: -2.2387499809265137
    3. ' ' → logprob: -6.988749980926514
    4. '   ' → logprob: -13.363749504089355
    5. '2' → logprob: -14.238749504089355
    6. '=' → logprob: -14.613749504089355
    7. '  ' → logprob: -14.863749504089355
    8. '
' → logprob: -14.988749504089355
    9. '01' → logprob: -15.363749504089355
    10. '```' → logprob: -15.613749504089355

Token 558: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014340372756123543
    2. ':
' → logprob: -4.264340400695801
    3. ':return' → logprob: -8.7643404006958
    4. ' :' → logprob: -11.1393404006958
    5. ' or' → logprob: -12.1393404006958
    6. ' :
' → logprob: -15.0143404006958
    7. ':
' → logprob: -15.2643404006958
    8. ':

' → logprob: -16.514339447021484
    9. 'or' → logprob: -16.889339447021484
    10. '   ' → logprob: -17.014339447021484

Token 559: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023195505142211914
    2. 'return' → logprob: -3.898195505142212
    3. ' return' → logprob: -6.398195266723633
    4. '       ' → logprob: -7.148195266723633
    5. '   ' → logprob: -8.648195266723633
    6. ':return' → logprob: -11.773195266723633
    7. '	return' → logprob: -12.398195266723633
    8. '
' → logprob: -13.273195266723633
    9. '{return' → logprob: -13.273195266723633
    10. ' None' → logprob: -13.773195266723633

Token 560: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.5690089639974758e-05
    2. ' return' → logprob: -11.750015258789062
    3. '       ' → logprob: -12.250015258789062
    4. '           ' → logprob: -12.875015258789062
    5. '   ' → logprob: -15.875015258789062
    6. 'None' → logprob: -16.125015258789062
    7. '
' → logprob: -16.250015258789062
    8. '               ' → logprob: -18.500015258789062
    9. '{return' → logprob: -18.500015258789062
    10. '```' → logprob: -18.875015258789062

Token 561: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.15310683415737e-05
    2. ' None' → logprob: -10.750021934509277
    3. '
' → logprob: -18.87502098083496
    4. 'none' → logprob: -20.12502098083496
    5. '(None' → logprob: -21.62502098083496
    6. '   ' → logprob: -21.75002098083496
    7. '=None' → logprob: -22.12502098083496
    8. '_None' → logprob: -22.12502098083496
    9. ',None' → logprob: -23.00002098083496
    10. '_none' → logprob: -24.00002098083496

Token 562: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5806900858879089
    2. '       ' → logprob: -0.8306900858879089
    3. '        
' → logprob: -5.580689907073975
    4. '<|end|>' → logprob: -7.330689907073975
    5. ',' → logprob: -9.705690383911133
    6. '\n' → logprob: -9.830690383911133
    7. ',
' → logprob: -10.705690383911133
    8. '\
' → logprob: -11.080690383911133
    9. '
' → logprob: -11.205690383911133
    10. '.' → logprob: -11.330690383911133

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017137357499450445
    2. '
' → logprob: -6.501713752746582
    3. '        
' → logprob: -8.751713752746582
    4. '   ' → logprob: -11.751713752746582
    5. '      ' → logprob: -11.751713752746582
    6. '<|end|>' → logprob: -11.876713752746582
    7. 'elif' → logprob: -12.376713752746582
    8. ')' → logprob: -12.501713752746582
    9. 'n' → logprob: -12.626713752746582
    10. ',' → logprob: -12.876713752746582

Token 564: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07737750560045242
    2. '       ' → logprob: -3.0773775577545166
    3. ' if' → logprob: -3.5773775577545166
    4. 'elif' → logprob: -7.8273773193359375
    5. '   ' → logprob: -11.327377319335938
    6. '
' → logprob: -11.827377319335938
    7. '        
' → logprob: -13.202377319335938
    8. ' elif' → logprob: -13.202377319335938
    9. '	if' → logprob: -13.452377319335938
    10. 'If' → logprob: -13.577377319335938

Token 565: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1797516942024231
    2. 'n' → logprob: -1.8047516345977783
    3. '1' → logprob: -12.8047513961792
    4. ' ' → logprob: -13.1797513961792
    5. '	n' → logprob: -13.3047513961792
    6. '   ' → logprob: -15.0547513961792
    7. '    ' → logprob: -16.054752349853516
    8. 'self' → logprob: -17.429752349853516
    9. '_n' → logprob: -17.492252349853516
    10. '
' → logprob: -17.554752349853516

Token 566: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005288311280310154
    2. '==' → logprob: -5.255288124084473
    3. ' ' → logprob: -10.880288124084473
    4. ' <=' → logprob: -10.880288124084473
    5. '1' → logprob: -11.880288124084473
    6. ' ==
' → logprob: -12.630288124084473
    7. ' =' → logprob: -12.755288124084473
    8. '=' → logprob: -13.380288124084473
    9. ' <' → logprob: -14.130288124084473
    10. '==
' → logprob: -14.380288124084473

Token 567: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00862036645412445
    2. ' ' → logprob: -4.758620262145996
    3. '   ' → logprob: -12.508620262145996
    4. '  ' → logprob: -14.008620262145996
    5. '2' → logprob: -14.946120262145996
    6. '0' → logprob: -15.196120262145996
    7. '    ' → logprob: -15.321120262145996
    8. '     ' → logprob: -16.821121215820312
    9. '       ' → logprob: -16.821121215820312
    10. '
' → logprob: -17.508621215820312

Token 568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005573204252868891
    2. ' ' → logprob: -7.5005574226379395
    3. '2' → logprob: -13.625556945800781
    4. '0' → logprob: -13.625556945800781
    5. '  ' → logprob: -14.000556945800781
    6. '   ' → logprob: -14.500556945800781
    7. '
' → logprob: -15.625556945800781
    8. '    ' → logprob: -16.18805694580078
    9. '     ' → logprob: -17.31305694580078
    10. '１' → logprob: -17.43805694580078

Token 569: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.027370311319828033
    2. ':' → logprob: -3.6523702144622803
    3. ' :
' → logprob: -7.027370452880859
    4. ' :' → logprob: -9.77737045288086
    5. ':return' → logprob: -10.40237045288086
    6. '           ' → logprob: -10.52737045288086
    7. '):
' → logprob: -10.65237045288086
    8. '       ' → logprob: -10.65237045288086
    9. ':
' → logprob: -11.65237045288086
    10. ' or' → logprob: -13.02737045288086

Token 570: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4885168671607971
    2. '       ' → logprob: -1.4885168075561523
    3. '           ' → logprob: -1.8635168075561523
    4. ' return' → logprob: -5.238516807556152
    5. 'None' → logprob: -8.988516807556152
    6. '#' → logprob: -9.363516807556152
    7. '   ' → logprob: -10.363516807556152
    8. '        ' → logprob: -11.238516807556152
    9. 'raise' → logprob: -11.238516807556152
    10. '	return' → logprob: -11.363516807556152

Token 571: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005407353863120079
    2. '           ' → logprob: -5.755407333374023
    3. 'None' → logprob: -6.630407333374023
    4. ' return' → logprob: -7.255407333374023
    5. '       ' → logprob: -8.630407333374023
    6. '#' (adapté à ' #') → logprob: -12.005407333374023
    7. 'self' → logprob: -12.255407333374023
    8. ' None' → logprob: -12.505407333374023
    9. '   ' → logprob: -13.255407333374023
    10. 'raise' → logprob: -13.755407333374023

Token 572: ' Many' (ID: 11048)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00011629798245849088
    2. ' return' → logprob: -9.375116348266602
    3. '#' → logprob: -11.375116348266602
    4. '       ' → logprob: -11.625116348266602
    5. 'None' → logprob: -11.625116348266602
    6. '           ' → logprob: -13.500116348266602
    7. 'raise' → logprob: -15.875116348266602
    8. 'Return' → logprob: -16.0001163482666
    9. '   ' → logprob: -16.2501163482666
    10. 'from' → logprob: -16.6251163482666

Token 573: ' points' (ID: 5571)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21259640157222748
    2. 'None' → logprob: -2.3375964164733887
    3. ' points' → logprob: -3.3375964164733887
    4. ' return' → logprob: -3.7125964164733887
    5. 'points' → logprob: -3.8375964164733887
    6. 'solutions' → logprob: -5.462596416473389
    7. ' solutions' → logprob: -6.087596416473389
    8. '(None' → logprob: -6.337596416473389
    9. ' None' → logprob: -6.587596416473389
    10. '#' → logprob: -7.212596416473389

Token 574: ' equally' (ID: 29293)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1952058970928192
    2. 'return' → logprob: -2.1952059268951416
    3. ' return' → logprob: -3.9452059268951416
    4. '           ' → logprob: -3.9452059268951416
    5. ':' → logprob: -4.1952056884765625
    6. ':return' → logprob: -5.6952056884765625
    7. '(None' → logprob: -5.8202056884765625
    8. ',' → logprob: -6.1952056884765625
    9. 'None' → logprob: -6.9452056884765625
    10. '
' → logprob: -7.0702056884765625

Token 575: ' distant' (ID: 51041)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.031725868582725525
    2. ' distant' → logprob: -4.531725883483887
    3. 'valid' → logprob: -4.656725883483887
    4. ' valid' → logprob: -5.406725883483887
    5. 'distance' → logprob: -5.906725883483887
    6. 'dist' → logprob: -6.281725883483887
    7. 'sp' → logprob: -7.406725883483887
    8. 'far' → logprob: -7.781725883483887
    9. ' spaced' → logprob: -7.781725883483887
    10. ' d' → logprob: -9.031725883483887

Token 576: ' to' (ID: 316)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3128342032432556
    2. 'return' → logprob: -1.4378342628479004
    3. '           ' → logprob: -4.8128342628479
    4. ' to' → logprob: -4.9378342628479
    5. 'from' → logprob: -5.0628342628479
    6. ' from' → logprob: -5.6878342628479
    7. ':return' → logprob: -6.6878342628479
    8. ' (' → logprob: -6.8128342628479
    9. '       ' → logprob: -6.9378342628479
    10. ',' → logprob: -7.0628342628479

Token 577: ' one' (ID: 1001)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009117336943745613
    2. ' self' → logprob: -4.759117126464844
    3. 'the' → logprob: -7.634117126464844
    4. ' the' → logprob: -11.134117126464844
    5. 'line' → logprob: -13.259117126464844
    6. '(self' → logprob: -14.134117126464844
    7. '
' → logprob: -15.259117126464844
    8. 'Line' → logprob: -15.384117126464844
    9. ' ' → logprob: -15.509117126464844
    10. 'this' → logprob: -15.759117126464844

Token 578: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3487665355205536
    2. 'line' → logprob: -1.223766565322876
    3. ' lines' → logprob: -9.223766326904297
    4. '_line' → logprob: -9.598766326904297
    5. 'Line' → logprob: -9.848766326904297
    6. 'lines' → logprob: -10.223766326904297
    7. 'self' → logprob: -11.348766326904297
    8. 'point' → logprob: -11.473766326904297
    9. ' ' → logprob: -12.223766326904297
    10. ' point' → logprob: -12.348766326904297

Token 579: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039969559758901596
    2. ',' → logprob: -4.164969444274902
    3. ' return' → logprob: -4.664969444274902
    4. 'return' → logprob: -5.289969444274902
    5. '           ' → logprob: -6.039969444274902
    6. ' (' → logprob: -6.664969444274902
    7. '
' → logprob: -6.789969444274902
    8. ':' → logprob: -6.914969444274902
    9. '.' → logprob: -7.164969444274902
    10. '        
' → logprob: -7.539969444274902

Token 580: 'distance' (ID: 40614)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23198898136615753
    2. 'None' → logprob: -1.6069890260696411
    3. 'self' → logprob: -5.481988906860352
    4. ' return' → logprob: -6.606988906860352
    5. ' None' → logprob: -7.606988906860352
    6. 'Point' → logprob: -8.481988906860352
    7. '#' → logprob: -9.231988906860352
    8. '       ' → logprob: -9.856988906860352
    9. 'raise' → logprob: -9.981988906860352
    10. '   ' → logprob: -10.106988906860352

Token 581: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8216084241867065
    2. ' is' → logprob: -2.071608543395996
    3. ' ==' → logprob: -2.321608543395996
    4. '==' → logprob: -2.571608543395996
    5. ' >=' → logprob: -2.946608543395996
    6. ' can' → logprob: -3.196608543395996
    7. ' =' → logprob: -3.446608543395996
    8. ')' → logprob: -3.571608543395996
    9. '>=' → logprob: -3.571608543395996
    10. 'is' → logprob: -4.946608543395996

Token 582: ' arbitrary' (ID: 56424)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27209869027137756
    2. 'self' → logprob: -1.6470986604690552
    3. 'any' → logprob: -4.272098541259766
    4. 'abs' → logprob: -4.647098541259766
    5. ' self' → logprob: -5.022098541259766
    6. 'lambda' → logprob: -5.772098541259766
    7. 'ar' → logprob: -6.397098541259766
    8. 'in' → logprob: -6.522098541259766
    9. 'float' → logprob: -6.772098541259766
    10. ' ' → logprob: -6.772098541259766

Token 583: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25834572315216064
    2. ')
' → logprob: -2.633345603942871
    3. ',' → logprob: -2.883345603942871
    4. '       ' → logprob: -3.258345603942871
    5. '),' → logprob: -3.258345603942871
    6. ' return' → logprob: -4.633345603942871
    7. 'return' → logprob: -5.383345603942871
    8. ' to' → logprob: -6.133345603942871
    9. '           ' → logprob: -6.383345603942871
    10. 'distance' → logprob: -6.758345603942871

Token 584: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05039196088910103
    2. 'return' → logprob: -3.425391912460327
    3. '       ' → logprob: -4.675392150878906
    4. ' return' → logprob: -4.925392150878906
    5. '               ' → logprob: -11.925392150878906
    6. '          ' → logprob: -12.425392150878906
    7. '   ' → logprob: -13.050392150878906
    8. '        ' → logprob: -13.175392150878906
    9. '#' → logprob: -13.550392150878906
    10. '
' → logprob: -13.800392150878906

Token 585: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020602114964276552
    2. 'None' → logprob: -6.252060413360596
    3. ' return' → logprob: -9.627059936523438
    4. '       ' → logprob: -10.877059936523438
    5. '           ' → logprob: -10.877059936523438
    6. '   ' → logprob: -11.502059936523438
    7. '#' → logprob: -11.877059936523438
    8. 'self' → logprob: -12.502059936523438
    9. 'Point' → logprob: -12.752059936523438
    10. 'point' → logprob: -14.377059936523438

Token 586: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.013557104393839836
    2. 'self' → logprob: -4.388556957244873
    3. 'Point' → logprob: -6.888556957244873
    4. ' None' → logprob: -10.763557434082031
    5. '(None' → logprob: -13.388557434082031
    6. '
' → logprob: -14.263557434082031
    7. 'Self' → logprob: -14.513557434082031
    8. 'No' → logprob: -14.888557434082031
    9. 'Points' → logprob: -14.888557434082031
    10. 'none' → logprob: -15.013557434082031

Token 587: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0852973461151123
    2. '
' → logprob: -3.2102973461151123
    3. '<|end|>' → logprob: -3.4602973461151123
    4. '        
' → logprob: -4.710297584533691
    5. '<|end|>' → logprob: -7.960297584533691
    6. ')' → logprob: -8.835297584533691
    7. '        ' → logprob: -9.835297584533691
    8. '      ' → logprob: -9.960297584533691
    9. '.' → logprob: -10.210297584533691
    10. ',' → logprob: -10.210297584533691

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00495550874620676
    2. '        
' → logprob: -6.129955291748047
    3. '
' → logprob: -6.254955291748047
    4. '<|end|>' → logprob: -7.879955291748047
    5. '#' → logprob: -8.629955291748047
    6. 'import' → logprob: -8.754955291748047
    7. '```' → logprob: -10.879955291748047
    8. ',' → logprob: -11.254955291748047
    9. '<|end|>' → logprob: -11.629955291748047
    10. '  
' → logprob: -11.754955291748047

Token 589: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.32240021228790283
    2. '#' (adapté à ' #') → logprob: -1.3224002122879028
    3. 'if' → logprob: -5.822400093078613
    4. '   ' → logprob: -6.572400093078613
    5. '       ' → logprob: -6.822400093078613
    6. 'coeff' → logprob: -6.947400093078613
    7. 'import' → logprob: -7.072400093078613
    8. 'a' → logprob: -7.197400093078613
    9. 'from' → logprob: -8.072400093078613
    10. 'points' → logprob: -8.947400093078613

Token 590: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.634939432144165
    2. 'A' → logprob: -1.134939432144165
    3. 'if' → logprob: -2.134939432144165
    4. 'coeff' → logprob: -4.509939193725586
    5. 'from' → logprob: -5.759939193725586
    6. 'import' → logprob: -6.134939193725586
    7. 'a' → logprob: -6.384939193725586
    8. 'for' → logprob: -6.634939193725586
    9. 'matrix' → logprob: -7.009939193725586
    10. 'n' → logprob: -7.009939193725586

Token 591: ' want' (ID: 1682)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5292093753814697
    2. '#' → logprob: -2.1542093753814697
    3. 'import' → logprob: -2.1542093753814697
    4. '       ' → logprob: -2.4042093753814697
    5. 'def' → logprob: -2.4042093753814697
    6. 're' → logprob: -2.5292093753814697
    7. 'try' → logprob: -2.6542093753814697
    8. ' try' → logprob: -3.0292093753814697
    9. 'f' → logprob: -3.2792093753814697
    10. 't' → logprob: -4.529209136962891

Token 592: ':' (ID: 25)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03664766252040863
    2. 'to' → logprob: -3.4116475582122803
    3. '       ' → logprob: -6.411647796630859
    4. '#' → logprob: -7.786647796630859
    5. ' a' → logprob: -8.66164779663086
    6. ' the' → logprob: -9.28664779663086
    7. 'A' → logprob: -9.41164779663086
    8. 't' → logprob: -9.53664779663086
    9. 'a' → logprob: -9.66164779663086
    10. '   ' → logprob: -9.66164779663086

Token 593: ' distance' (ID: 9324)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30493244528770447
    2. 'A' → logprob: -2.1799323558807373
    3. ' A' → logprob: -2.9299323558807373
    4. ' lines' → logprob: -3.9299323558807373
    5. ' #' → logprob: -4.179932594299316
    6. 'from' → logprob: -4.304932594299316
    7. '       ' → logprob: -4.679932594299316
    8. 'coeff' → logprob: -5.804932594299316
    9. ' distances' → logprob: -5.804932594299316
    10. '   ' → logprob: -6.054932594299316

Token 594: '(point' (ID: 46989)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.20455113053321838
    2. ' to' → logprob: -2.3295512199401855
    3. 's' → logprob: -3.2045512199401855
    4. 'from' → logprob: -3.9545512199401855
    5. '_to' → logprob: -4.8295512199401855
    6. '1' → logprob: -5.7045512199401855
    7. ' between' → logprob: -5.7045512199401855
    8. '   ' → logprob: -6.0795512199401855
    9. ' from' → logprob: -6.5795512199401855
    10. '_' → logprob: -6.5795512199401855

Token 595: ',' (ID: 11)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6083966493606567
    2. 'to' → logprob: -1.2333966493606567
    3. ')' → logprob: -2.358396530151367
    4. ',' → logprob: -2.858396530151367
    5. '1' → logprob: -5.483396530151367
    6. '_to' → logprob: -5.983396530151367
    7. '=' → logprob: -6.358396530151367
    8. '   ' → logprob: -6.733396530151367
    9. ' ' → logprob: -7.733396530151367
    10. ')^' → logprob: -8.233396530151367

Token 596: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.25578516721725464
    2. 'lines' → logprob: -1.8807852268218994
    3. 'self' → logprob: -3.6307852268218994
    4. ' line' → logprob: -4.25578498840332
    5. ' lines' → logprob: -4.50578498840332
    6. ')' → logprob: -4.75578498840332
    7. 'l' → logprob: -4.88078498840332
    8. ' self' → logprob: -6.38078498840332
    9. 'p' → logprob: -6.88078498840332
    10. 'point' → logprob: -7.63078498840332

Token 597: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6393845081329346
    2. ')' → logprob: -1.2643845081329346
    3. '1' → logprob: -2.6393845081329346
    4. ')^' → logprob: -3.0143845081329346
    5. '[i' → logprob: -3.6393845081329346
    6. 'i' → logprob: -3.7643845081329346
    7. ')**' → logprob: -4.5143842697143555
    8. '_' → logprob: -5.6393842697143555
    9. '0' → logprob: -5.8893842697143555
    10. ' i' → logprob: -6.8893842697143555

Token 598: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031123533844947815
    2. ')**' → logprob: -6.003112316131592
    3. ')^' → logprob: -7.503112316131592
    4. ')==' → logprob: -10.62811279296875
    5. ' )' → logprob: -10.75311279296875
    6. '())' → logprob: -10.87811279296875
    7. '))' → logprob: -12.62811279296875
    8. ')`' → logprob: -12.75311279296875
    9. '**)' → logprob: -13.00311279296875
    10. ')=' → logprob: -13.25311279296875

Token 599: ' ==' (ID: 951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3012019991874695
    2. ' ==' → logprob: -2.1762020587921143
    3. '=' → logprob: -2.5512020587921143
    4. ' -' → logprob: -4.176201820373535
    5. 's' → logprob: -4.426201820373535
    6. ' to' → logprob: -4.801201820373535
    7. '**' → logprob: -5.051201820373535
    8. ')' → logprob: -5.176201820373535
    9. '==' → logprob: -5.301201820373535
    10. ' for' → logprob: -5.676201820373535

Token 600: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.03367900848388672
    2. ' distance' → logprob: -3.4086790084838867
    3. 'self' → logprob: -10.783679008483887
    4. '(distance' → logprob: -12.158679008483887
    5. ' ' → logprob: -13.783679008483887
    6. '0' → logprob: -13.908679008483887
    7. '=' → logprob: -14.033679008483887
    8. ' ' → logprob: -14.408679008483887
    9. ' self' → logprob: -14.408679008483887
    10. '
' → logprob: -14.658679008483887

Token 601: '(point' (ID: 46989)
  Prédit: '(point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -0.01806003227829933
    2. '(self' → logprob: -4.268060207366943
    3. '_to' → logprob: -6.018060207366943
    4. '(line' → logprob: -7.143060207366943
    5. '(' → logprob: -8.393059730529785
    6. 's' → logprob: -8.893059730529785
    7. 'to' → logprob: -9.268059730529785
    8. 'To' → logprob: -9.393059730529785
    9. '(
' → logprob: -9.768059730529785
    10. ' to' → logprob: -11.518059730529785

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011307948443572968
    2. ',
' → logprob: -9.500113487243652
    3. ')' → logprob: -10.500113487243652
    4. 's' → logprob: -13.000113487243652
    5. ' ,' → logprob: -13.125113487243652
    6. ',

' → logprob: -13.750113487243652
    7. ',)' → logprob: -13.875113487243652
    8. 'to' → logprob: -14.250113487243652
    9. ',line' → logprob: -14.500113487243652
    10. '<|end|>' → logprob: -14.750113487243652

Token 603: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0980411171913147
    2. 'self' → logprob: -2.59804105758667
    3. ' line' → logprob: -4.09804105758667
    4. ' self' → logprob: -6.34804105758667
    5. ')' → logprob: -7.84804105758667
    6. 'lines' → logprob: -10.473041534423828
    7. ' ' → logprob: -10.473041534423828
    8. '   ' → logprob: -10.598041534423828
    9. '           ' → logprob: -10.723041534423828
    10. '(self' → logprob: -11.098041534423828

Token 604: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00486975722014904
    2. '_i' → logprob: -6.0048699378967285
    3. '_' → logprob: -7.1298699378967285
    4. 'j' → logprob: -7.2548699378967285
    5. '1' → logprob: -7.8798699378967285
    6. '0' → logprob: -8.50486946105957
    7. ')' → logprob: -8.75486946105957
    8. 's' → logprob: -9.62986946105957
    9. 'i' → logprob: -11.37986946105957
    10. ')_' → logprob: -11.50486946105957

Token 605: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006765736034139991
    2. ' )' → logprob: -7.87567663192749
    3. ' for' → logprob: -8.750676155090332
    4. 'for' → logprob: -9.125676155090332
    5. ')
' → logprob: -11.500676155090332
    6. ',' → logprob: -12.125676155090332
    7. 's' → logprob: -12.625676155090332
    8. '   ' → logprob: -13.250676155090332
    9. '=' → logprob: -13.625676155090332
    10. ' ' → logprob: -13.750676155090332

Token 606: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02028679847717285
    2. 'for' → logprob: -4.770286560058594
    3. '       ' → logprob: -5.270286560058594
    4. '
' → logprob: -5.395286560058594
    5. ',' → logprob: -6.770286560058594
    6. ' ' → logprob: -8.270286560058594
    7. '        ' → logprob: -8.645286560058594
    8. '        
' → logprob: -9.020286560058594
    9. ')' → logprob: -10.520286560058594
    10. '<|end|>' → logprob: -10.645286560058594

Token 607: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.2037101686000824
    2. 'all' → logprob: -1.7037101984024048
    3. 'i' → logprob: -6.953710079193115
    4. ' i' → logprob: -7.703710079193115
    5. ' every' → logprob: -8.328710556030273
    6. ' ' → logprob: -8.828710556030273
    7. 'every' → logprob: -9.078710556030273
    8. '0' → logprob: -9.328710556030273
    9. '	all' → logprob: -9.703710556030273
    10. '1' → logprob: -9.828710556030273

Token 608: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5023856163024902
    2. ' j' → logprob: -1.7523856163024902
    3. ' i' → logprob: -2.0023856163024902
    4. 'i' → logprob: -2.8773856163024902
    5. ' lines' → logprob: -4.25238561630249
    6. ' ' → logprob: -5.25238561630249
    7. '<|end|>' → logprob: -5.62738561630249
    8. '_j' → logprob: -5.75238561630249
    9. 'lines' → logprob: -6.62738561630249
    10. '<|end|>' → logprob: -7.37738561630249

Token 609: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6581960916519165
    2. ' and' → logprob: -1.0331960916519165
    3. ',j' → logprob: -2.783195972442627
    4. '<|end|>' → logprob: -3.658195972442627
    5. 'and' → logprob: -4.158195972442627
    6. ' ,' → logprob: -4.408195972442627
    7. ' j' → logprob: -5.658195972442627
    8. ' for' → logprob: -5.908195972442627
    9. ' ' → logprob: -6.533195972442627
    10. ' i' → logprob: -7.658195972442627

Token 610: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1373041272163391
    2. '
' → logprob: -2.3873040676116943
    3. '        
' → logprob: -4.137304306030273
    4. ' for' → logprob: -4.762304306030273
    5. ',' → logprob: -5.137304306030273
    6. '        ' → logprob: -6.387304306030273
    7. 'for' → logprob: -7.012304306030273
    8. '.' → logprob: -7.137304306030273
    9. '<|end|>' → logprob: -7.137304306030273
    10. ',
' → logprob: -8.762304306030273

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02874038740992546
    2. '
' → logprob: -3.653740406036377
    3. '        
' → logprob: -6.153740406036377
    4. ',' → logprob: -9.653739929199219
    5. '#' → logprob: -10.153739929199219
    6. 'import' → logprob: -10.403739929199219
    7. 'from' → logprob: -10.528739929199219
    8. '<|end|>' → logprob: -10.528739929199219
    9. '  
' → logprob: -11.278739929199219
    10. '   ' → logprob: -11.528739929199219

Token 612: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11825009435415268
    2. '#' (adapté à ' #') → logprob: -2.7432501316070557
    3. ' n' → logprob: -3.7432501316070557
    4. 'n' → logprob: -4.493249893188477
    5. ' #' → logprob: -5.368249893188477
    6. ' A' → logprob: -5.618249893188477
    7. 'A' → logprob: -6.368249893188477
    8. ' if' → logprob: -7.618249893188477
    9. ' lines' → logprob: -7.743249893188477
    10. '
' → logprob: -8.743249893188477

Token 613: ' Using' (ID: 17511)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2901131808757782
    2. 'A' → logprob: -1.9151132106781006
    3. '       ' → logprob: -2.4151132106781006
    4. 'n' → logprob: -5.6651129722595215
    5. ' #' → logprob: -6.4151129722595215
    6. ' A' → logprob: -6.6651129722595215
    7. 'if' → logprob: -6.9151129722595215
    8. 'import' → logprob: -7.0401129722595215
    9. '
' → logprob: -7.1651129722595215
    10. 'Let's' → logprob: -7.4151129722595215

Token 614: ' line' (ID: 2543)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2410222887992859
    2. ' the' → logprob: -2.2410223484039307
    3. '#' → logprob: -3.2410223484039307
    4. 'self' → logprob: -3.6160223484039307
    5. 'two' → logprob: -5.241022109985352
    6. 'linear' → logprob: -5.616022109985352
    7. 'abs' → logprob: -5.991022109985352
    8. ' linear' → logprob: -6.116022109985352
    9. ' two' → logprob: -6.116022109985352
    10. 'def' → logprob: -6.116022109985352

Token 615: '_' (ID: 62)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.056529682129621506
    2. '0' → logprob: -3.6815297603607178
    3. '1' → logprob: -5.181529521942139
    4. ' =' → logprob: -5.306529521942139
    5. '_i' → logprob: -5.681529521942139
    6. 'ar' → logprob: -5.806529521942139
    7. 'A' → logprob: -5.806529521942139
    8. '_vectors' → logprob: -6.306529521942139
    9. '_' → logprob: -6.556529521942139
    10. '   ' → logprob: -7.056529521942139

Token 616: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00917084887623787
    2. '_vectors' → logprob: -5.759171009063721
    3. '0' → logprob: -6.134171009063721
    4. ' =' → logprob: -7.009171009063721
    5. '1' → logprob: -7.134171009063721
    6. 'ar' → logprob: -7.509171009063721
    7. '=' → logprob: -8.259170532226562
    8. '_' → logprob: -8.384170532226562
    9. ' s' → logprob: -9.134170532226562
    10. 'A' → logprob: -9.259170532226562

Token 617: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.7719790935516357
    2. ',' → logprob: -1.2719790935516357
    3. ':' → logprob: -2.5219790935516357
    4. '.' → logprob: -3.3969790935516357
    5. ' =' → logprob: -3.5219790935516357
    6. 'A' → logprob: -4.021979331970215
    7. '.A' → logprob: -4.396979331970215
    8. '
' → logprob: -4.396979331970215
    9. ' for' → logprob: -4.396979331970215
    10. 'as' → logprob: -5.021979331970215

Token 618: ' reference' (ID: 9682)
  Prédit: 'reference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reference' → logprob: -0.0023880181834101677
    2. 'base' → logprob: -6.502388000488281
    3. 'baseline' → logprob: -7.127388000488281
    4. ' reference' → logprob: -10.502388000488281
    5. 'the' → logprob: -10.877388000488281
    6. 'basis' → logprob: -11.127388000488281
    7. 'a' → logprob: -11.752388000488281
    8. 'anchor' → logprob: -12.502388000488281
    9. '
' → logprob: -13.002388000488281
    10. 'ref' → logprob: -13.127388000488281

Token 619: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07787597179412842
    2. ',' → logprob: -3.202876091003418
    3. '
' → logprob: -4.827876091003418
    4. 'A' → logprob: -5.577876091003418
    5. ' A' → logprob: -5.577876091003418
    6. ' for' → logprob: -5.827876091003418
    7. '        
' → logprob: -6.202876091003418
    8. ':' → logprob: -6.327876091003418
    9. ' lines' → logprob: -6.327876091003418
    10. ' and' → logprob: -6.702876091003418

Token 620: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03381028771400452
    2. 'A' → logprob: -4.158810138702393
    3. 'ref' → logprob: -5.283810138702393
    4. ' A' → logprob: -5.783810138702393
    5. ' ref' → logprob: -6.033810138702393
    6. 'a' → logprob: -6.658810138702393
    7. 'line' → logprob: -6.783810138702393
    8. 'n' → logprob: -6.908810138702393
    9. 'l' → logprob: -7.283810138702393
    10. 'reference' → logprob: -7.908810138702393

Token 621: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10004229843616486
    2. 'for' → logprob: -3.4750423431396484
    3. '#' (adapté à ' #') → logprob: -4.350042343139648
    4. '   ' → logprob: -4.475042343139648
    5. 'a' → logprob: -4.725042343139648
    6. ' A' → logprob: -4.850042343139648
    7. 'ref' → logprob: -5.475042343139648
    8. 'line' → logprob: -5.475042343139648
    9. 'p' → logprob: -6.100042343139648
    10. 'l' → logprob: -6.225042343139648

Token 622: ' |' (ID: 1022)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6015699505805969
    2. '#' → logprob: -1.4765698909759521
    3. 'for' → logprob: -2.101569890975952
    4. 'ref' → logprob: -3.476569890975952
    5. 'results' → logprob: -4.976570129394531
    6. 'equ' → logprob: -5.101570129394531
    7. 'reference' → logprob: -5.101570129394531
    8. 'coeff' → logprob: -5.226570129394531
    9. 'eq' → logprob: -5.476570129394531
    10. 'refs' → logprob: -5.726570129394531

Token 623: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.042781177908182144
    2. 'A' → logprob: -3.792781114578247
    3. '(self' → logprob: -4.667781352996826
    4. 'abs' → logprob: -5.417781352996826
    5. '(' → logprob: -5.667781352996826
    6. ' self' → logprob: -7.292781352996826
    7. '(A' → logprob: -7.792781352996826
    8. 'distance' → logprob: -8.542780876159668
    9. ' (' → logprob: -9.292780876159668
    10. 'line' → logprob: -9.417780876159668

Token 624: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34289276599884033
    2. '0' → logprob: -1.3428927659988403
    3. '_i' → logprob: -4.217892646789551
    4. 'self' → logprob: -5.217892646789551
    5. '1' → logprob: -6.092892646789551
    6. 'i' → logprob: -6.592892646789551
    7. ' _' → logprob: -6.842892646789551
    8. ' ' → logprob: -7.467892646789551
    9. 'x' → logprob: -7.592892646789551
    10. '_j' → logprob: -7.842892646789551

Token 625: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.30892542004585266
    2. ' x' → logprob: -2.3089253902435303
    3. ' *' → logprob: -2.3089253902435303
    4. '*' → logprob: -3.1839253902435303
    5. '*x' → logprob: -3.8089253902435303
    6. ',' → logprob: -6.933925628662109
    7. '|' → logprob: -7.308925628662109
    8. ' -' → logprob: -7.308925628662109
    9. '   ' → logprob: -8.80892562866211
    10. '(x' → logprob: -8.93392562866211

Token 626: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.055278174579143524
    2. '+' → logprob: -2.9302780628204346
    3. ' ' → logprob: -8.430277824401855
    4. ' -' → logprob: -9.180277824401855
    5. '+B' → logprob: -11.180277824401855
    6. '0' → logprob: -11.305277824401855
    7. ' plus' → logprob: -11.680277824401855
    8. ' +
' → logprob: -12.055277824401855
    9. 'plus' → logprob: -12.617777824401855
    10. ',' → logprob: -12.617777824401855

Token 627: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4815851151943207
    2. ' B' → logprob: -1.231585144996643
    3. 'self' → logprob: -2.7315850257873535
    4. ' self' → logprob: -3.7315850257873535
    5. 'y' → logprob: -7.8565850257873535
    6. ' y' → logprob: -7.9815850257873535
    7. ' ' → logprob: -8.731585502624512
    8. 'point' → logprob: -9.356585502624512
    9. ' point' → logprob: -9.731585502624512
    10. '(self' → logprob: -10.106585502624512

Token 628: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5222916007041931
    2. '_i' → logprob: -1.272291660308838
    3. ' _' → logprob: -3.397291660308838
    4. '*' → logprob: -3.647291660308838
    5. ' *' → logprob: -3.897291660308838
    6. 'i' → logprob: -4.022291660308838
    7. '   ' → logprob: -4.647291660308838
    8. ' ' → logprob: -4.897291660308838
    9. '  ' → logprob: -5.272291660308838
    10. '|' → logprob: -6.272291660308838

Token 629: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3068407475948334
    2. ' ' → logprob: -2.056840658187866
    3. 'y' → logprob: -2.681840658187866
    4. '*' → logprob: -3.806840658187866
    5. '   ' → logprob: -3.931840658187866
    6. ' *' → logprob: -5.181840896606445
    7. '  ' → logprob: -5.306840896606445
    8. ' point' → logprob: -5.681840896606445
    9. '|' → logprob: -6.181840896606445
    10. '    ' → logprob: -6.306840896606445

Token 630: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31355804204940796
    2. '+' → logprob: -1.3135581016540527
    3. ' ' → logprob: -8.688557624816895
    4. ' -' → logprob: -10.313557624816895
    5. '+C' → logprob: -10.313557624816895
    6. '   ' → logprob: -11.313557624816895
    7. '  ' → logprob: -11.688557624816895
    8. '-' → logprob: -11.813557624816895
    9. '+
' → logprob: -12.313557624816895
    10. ' +
' → logprob: -12.313557624816895

Token 631: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0019357812125235796
    2. ' C' → logprob: -6.251935958862305
    3. '|' → logprob: -13.501935958862305
    4. ' ' → logprob: -13.876935958862305
    5. '  ' → logprob: -14.501935958862305
    6. '>C' → logprob: -14.626935958862305
    7. '   ' → logprob: -14.626935958862305
    8. '
' → logprob: -14.626935958862305
    9. 'self' → logprob: -14.876935958862305
    10. '```' → logprob: -14.876935958862305

Token 632: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6849238276481628
    2. '|' → logprob: -1.0599238872528076
    3. '0' → logprob: -2.0599238872528076
    4. '_j' → logprob: -5.0599236488342285
    5. '_i' → logprob: -5.1849236488342285
    6. ' -' → logprob: -5.3099236488342285
    7. ' |' → logprob: -7.0599236488342285
    8. ' _' → logprob: -7.1849236488342285
    9. '_|' → logprob: -7.4349236488342285
    10. '   ' → logprob: -8.059924125671387

Token 633: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0561942458152771
    2. ' -' → logprob: -3.306194305419922
    3. '+' → logprob: -5.181194305419922
    4. ' +' → logprob: -5.181194305419922
    5. '-' → logprob: -5.681194305419922
    6. ' |' → logprob: -6.056194305419922
    7. ' ' → logprob: -8.056194305419922
    8. '   ' → logprob: -8.681194305419922
    9. '|-' → logprob: -9.118694305419922
    10. ')' → logprob: -9.743694305419922

Token 634: ' =' (ID: 314)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.022267447784543037
    2. '-' → logprob: -4.8972673416137695
    3. ' ==' → logprob: -4.8972673416137695
    4. ' =' → logprob: -5.1472673416137695
    5. '=' → logprob: -7.1472673416137695
    6. '==' → logprob: -8.02226734161377
    7. ' ' → logprob: -9.02226734161377
    8. '   ' → logprob: -12.02226734161377
    9. ' -=' → logprob: -12.02226734161377
    10. 's' → logprob: -12.52226734161377

Token 635: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0004343645414337516
    2. 'abs' → logprob: -7.875434398651123
    3. ' |' → logprob: -9.875433921813965
    4. ' abs' → logprob: -13.875433921813965
    5. '
' → logprob: -15.500433921813965
    6. '   ' → logprob: -15.625433921813965
    7. '|
' → logprob: -16.00043487548828
    8. '(abs' → logprob: -16.00043487548828
    9. '│' → logprob: -16.25043487548828
    10. '|(' → logprob: -16.25043487548828

Token 636: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03539056330919266
    2. 'A' → logprob: -3.410390615463257
    3. '(self' → logprob: -7.035390377044678
    4. ' self' → logprob: -7.410390377044678
    5. '
' → logprob: -9.660390853881836
    6. '   ' → logprob: -10.785390853881836
    7. '

' → logprob: -11.160390853881836
    8. '(A' → logprob: -11.160390853881836
    9. '-self' → logprob: -11.285390853881836
    10. '-A' → logprob: -11.410390853881836

Token 637: '_' (ID: 62)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2526158392429352
    2. '_' → logprob: -1.6276158094406128
    3. 'self' → logprob: -3.7526159286499023
    4. '_j' → logprob: -6.127615928649902
    5. '[' → logprob: -8.377615928649902
    6. ' ' → logprob: -8.627615928649902
    7. '
' → logprob: -8.752615928649902
    8. '_i' → logprob: -9.127615928649902
    9. 'j' → logprob: -9.377615928649902
    10. '(self' → logprob: -9.502615928649902

Token 638: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0043396796099841595
    2. '_' → logprob: -5.629339694976807
    3. ' ' → logprob: -8.754339218139648
    4. 'j' → logprob: -9.004339218139648
    5. 'i' → logprob: -9.129339218139648
    6. 'self' → logprob: -9.504339218139648
    7. '_j' → logprob: -9.504339218139648
    8. '[' → logprob: -10.379339218139648
    9. '_i' → logprob: -10.379339218139648
    10. '
' → logprob: -10.504339218139648

Token 639: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3872646987438202
    2. 'x' → logprob: -1.1372647285461426
    3. '*' → logprob: -8.887264251708984
    4. ' ' → logprob: -10.012264251708984
    5. ' *' → logprob: -10.012264251708984
    6. '   ' → logprob: -10.137264251708984
    7. '*x' → logprob: -10.512264251708984
    8. ' (' → logprob: -10.887264251708984
    9. '(' → logprob: -11.012264251708984
    10. '(x' → logprob: -11.512264251708984

Token 640: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6327114105224609
    2. ' +' → logprob: -0.7577114105224609
    3. '+B' → logprob: -9.632711410522461
    4. ' ' → logprob: -11.257711410522461
    5. '+y' → logprob: -12.132711410522461
    6. '+x' → logprob: -12.632711410522461
    7. '```' → logprob: -12.632711410522461
    8. ',' → logprob: -12.882711410522461
    9. '+b' → logprob: -13.257711410522461
    10. ' plus' → logprob: -13.257711410522461

Token 641: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0006050990778021514
    2. ' B' → logprob: -7.50060510635376
    3. 'y' → logprob: -10.125604629516602
    4. 'point' → logprob: -11.750604629516602
    5. ' ' → logprob: -13.750604629516602
    6. '(point' → logprob: -14.500604629516602
    7. 'x' → logprob: -14.625604629516602
    8. ' y' → logprob: -14.625604629516602
    9. ' point' → logprob: -14.875604629516602
    10. 'Point' → logprob: -15.375604629516602

Token 642: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006349880713969469
    2. '_i' → logprob: -5.381350040435791
    3. '0' → logprob: -6.756350040435791
    4. ' _' → logprob: -7.756350040435791
    5. 'i' → logprob: -9.256349563598633
    6. ' ' → logprob: -10.631349563598633
    7. ' i' → logprob: -12.381349563598633
    8. ',' → logprob: -12.506349563598633
    9. '_
' → logprob: -13.381349563598633
    10. 'x' → logprob: -14.006349563598633

Token 643: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21735647320747375
    2. '_' → logprob: -1.7173564434051514
    3. ' ' → logprob: -4.4673566818237305
    4. 'y' → logprob: -6.8423566818237305
    5. '_i' → logprob: -7.3423566818237305
    6. 'i' → logprob: -7.4673566818237305
    7. 'x' → logprob: -7.7173566818237305
    8. ' point' → logprob: -7.9673566818237305
    9. '  ' → logprob: -8.59235668182373
    10. 'point' → logprob: -8.59235668182373

Token 644: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12694081664085388
    2. ' y' → logprob: -2.1269407272338867
    3. ' ' → logprob: -13.126940727233887
    4. 'x' → logprob: -13.251940727233887
    5. '_y' → logprob: -13.501940727233887
    6. '
' → logprob: -13.626940727233887
    7. '

' → logprob: -14.126940727233887
    8. '```' → logprob: -14.626940727233887
    9. '
' → logprob: -14.689440727233887
    10. ',' → logprob: -14.751940727233887

Token 645: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08941038697957993
    2. ' +' → logprob: -2.5894103050231934
    3. 'y' → logprob: -4.964410305023193
    4. '+y' → logprob: -6.214410305023193
    5. ' y' → logprob: -6.589410305023193
    6. '+B' → logprob: -10.839410781860352
    7. ' ' → logprob: -11.339410781860352
    8. '+C' → logprob: -11.339410781860352
    9. '```' → logprob: -11.651910781860352
    10. '<|end|>' → logprob: -11.776910781860352

Token 646: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0008246336947195232
    2. ' C' → logprob: -7.125824451446533
    3. '+' → logprob: -12.250824928283691
    4. ' ' → logprob: -12.875824928283691
    5. '|' → logprob: -13.000824928283691
    6. '```' → logprob: -13.375824928283691
    7. '+C' → logprob: -13.500824928283691
    8. '
' → logprob: -14.000824928283691
    9. '`' → logprob: -14.125824928283691
    10. '_C' → logprob: -14.250824928283691

Token 647: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04704330861568451
    2. '_i' → logprob: -3.1720433235168457
    3. '0' → logprob: -5.547043323516846
    4. 'i' → logprob: -10.172042846679688
    5. ' _' → logprob: -11.047042846679688
    6. '|' → logprob: -11.047042846679688
    7. '```' → logprob: -11.422042846679688
    8. '_
' → logprob: -11.547042846679688
    9. '_|' → logprob: -11.547042846679688
    10. '_j' → logprob: -12.297042846679688

Token 648: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10313273221254349
    2. '_' → logprob: -3.353132724761963
    3. 'i' → logprob: -3.353132724761963
    4. '_i' → logprob: -3.603132724761963
    5. '|' → logprob: -7.978132724761963
    6. '```' → logprob: -9.103133201599121
    7. ' i' → logprob: -9.978133201599121
    8. ' ' → logprob: -10.415633201599121
    9. '<|end|>' → logprob: -10.665633201599121
    10. '`' → logprob: -10.728133201599121

Token 649: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0005552975926548243
    2. '|
' → logprob: -8.125555038452148
    3. ')|' → logprob: -9.625555038452148
    4. '|\' → logprob: -10.000555038452148
    5. ' |' → logprob: -10.125555038452148
    6. '|`
' → logprob: -10.750555038452148
    7. '|

' → logprob: -11.000555038452148
    8. '|"' → logprob: -11.125555038452148
    9. ')' → logprob: -11.250555038452148
    10. '|)
' → logprob: -11.750555038452148

Token 650: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 651: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18497495353221893
    2. ' i' → logprob: -1.9349749088287354
    3. ' all' → logprob: -3.8099749088287354
    4. 'all' → logprob: -6.1849751472473145
    5. '   ' → logprob: -9.434974670410156
    6. ' each' → logprob: -9.684974670410156
    7. 'each' → logprob: -10.309974670410156
    8. ' ' → logprob: -10.559974670410156
    9. '	i' → logprob: -11.934974670410156
    10. '  ' → logprob: -12.309974670410156

Token 652: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4744075536727905
    2. 'i' → logprob: -0.9744075536727905
    3. '_i' → logprob: -8.099407196044922
    4. ' ' → logprob: -11.849407196044922
    5. '
' → logprob: -12.224407196044922
    6. ' lines' → logprob: -13.099407196044922
    7. '1' → logprob: -13.099407196044922
    8. '	i' → logprob: -13.349407196044922
    9. '   ' → logprob: -13.474407196044922
    10. ' _' → logprob: -13.599407196044922

Token 653: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21383726596832275
    2. '<|end|>' → logprob: -2.838837146759033
    3. ' for' → logprob: -3.713837146759033
    4. ')' → logprob: -3.713837146759033
    5. '<|end|>' → logprob: -4.088837146759033
    6. ' in' → logprob: -4.713837146759033
    7. '=' → logprob: -4.963837146759033
    8. ':' → logprob: -5.088837146759033
    9. '        ' → logprob: -5.338837146759033
    10. 'for' → logprob: -5.338837146759033

Token 654: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010008103214204311
    2. '        
' → logprob: -5.885008335113525
    3. '<|end|>' → logprob: -6.010008335113525
    4. '.' → logprob: -6.885008335113525
    5. ',' → logprob: -7.260008335113525
    6. ')' → logprob: -7.510008335113525
    7. '
' → logprob: -7.510008335113525
    8. '        ' → logprob: -8.135007858276367
    9. ' for' → logprob: -8.260007858276367
    10. '   ' → logprob: -8.260007858276367

Token 655: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055674463510513306
    2. ' lines' → logprob: -4.3056745529174805
    3. ' for' → logprob: -4.5556745529174805
    4. '#' (adapté à ' #') → logprob: -5.5556745529174805
    5. 'for' → logprob: -5.9306745529174805
    6. '
' → logprob: -6.3056745529174805
    7. ' A' → logprob: -6.4306745529174805
    8. '        
' → logprob: -6.5556745529174805
    9. ' solutions' → logprob: -6.6806745529174805
    10. ' #' → logprob: -6.6806745529174805

Token 656: ' Which' (ID: 21580)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.23117031157016754
    2. '#' → logprob: -2.106170415878296
    3. 'from' → logprob: -3.231170415878296
    4. 'import' → logprob: -3.981170415878296
    5. 'solutions' → logprob: -5.231170177459717
    6. '   ' → logprob: -5.356170177459717
    7. ' A' → logprob: -5.731170177459717
    8. 'results' → logprob: -5.981170177459717
    9. '       ' → logprob: -6.106170177459717
    10. 'points' → logprob: -6.606170177459717

Token 657: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.9406983852386475
    2. ' means' → logprob: -1.6906983852386475
    3. ' is' → logprob: -1.8156983852386475
    4. ' leads' → logprob: -2.6906983852386475
    5. 'means' → logprob: -2.8156983852386475
    6. 'def' → logprob: -3.5656983852386475
    7. ' def' → logprob: -3.5656983852386475
    8. 'can' → logprob: -4.440698623657227
    9. ' implies' → logprob: -4.940698623657227
    10. '#' → logprob: -4.940698623657227

Token 658: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0381641685962677
    2. 'be' → logprob: -3.2881641387939453
    3. ' also' → logprob: -10.413164138793945
    4. '	be' → logprob: -11.413164138793945
    5. ' only' → logprob: -11.788164138793945
    6. ' lead' → logprob: -11.913164138793945
    7. 'rewrite' → logprob: -11.913164138793945
    8. '#' → logprob: -11.913164138793945
    9. ' ' → logprob: -12.288164138793945
    10. 'also' → logprob: -12.413164138793945

Token 659: ' written' (ID: 7582)
  Prédit: ' rewritten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rewritten' → logprob: -0.9740139842033386
    2. 'rew' → logprob: -1.3490140438079834
    3. 'written' → logprob: -1.8490140438079834
    4. 're' → logprob: -2.3490140438079834
    5. ' written' → logprob: -3.3490140438079834
    6. 'represented' → logprob: -4.724013805389404
    7. 'converted' → logprob: -4.724013805389404
    8. ' transformed' → logprob: -4.849013805389404
    9. 's' → logprob: -4.849013805389404
    10. 'trans' → logprob: -5.099013805389404

Token 660: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.018961574882268906
    2. 'as' → logprob: -4.018961429595947
    3. '       ' → logprob: -8.018961906433105
    4. ':' → logprob: -8.518961906433105
    5. '=' → logprob: -9.768961906433105
    6. ' =' → logprob: -10.143961906433105
    7. '#' → logprob: -10.143961906433105
    8. ' in' → logprob: -10.268961906433105
    9. ' for' → logprob: -10.268961906433105
    10. 'for' → logprob: -10.768961906433105

Token 661: ':
' (ID: 734)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.3885868787765503
    2. 'a' → logprob: -1.8885868787765503
    3. 'linear' → logprob: -2.38858699798584
    4. '[
' → logprob: -2.63858699798584
    5. 'abs' → logprob: -2.76358699798584
    6. ' a' → logprob: -2.88858699798584
    7. '[A' → logprob: -3.13858699798584
    8. 'A' → logprob: -3.88858699798584
    9. ' linear' → logprob: -4.01358699798584
    10. '[(' → logprob: -4.01358699798584

Token 662: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21976178884506226
    2. ' for' → logprob: -1.969761848449707
    3. '#' → logprob: -3.969761848449707
    4. 'for' → logprob: -4.219761848449707
    5. 'from' → logprob: -5.344761848449707
    6. 'import' → logprob: -5.469761848449707
    7. ' lines' → logprob: -5.469761848449707
    8. ' x' → logprob: -6.094761848449707
    9. ' from' → logprob: -6.219761848449707
    10. '```' → logprob: -7.094761848449707

Token 663: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8822005987167358
    2. 'A' → logprob: -2.5072007179260254
    3. 'results' → logprob: -2.6322007179260254
    4. ' A' → logprob: -3.0072007179260254
    5. 'result' → logprob: -3.0072007179260254
    6. ' solutions' → logprob: -3.1322007179260254
    7. 'for' → logprob: -3.3822007179260254
    8. 'solutions' → logprob: -3.5072007179260254
    9. ' for' → logprob: -3.6322007179260254
    10. ' equations' → logprob: -3.8822007179260254

Token 664: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2780739963054657
    2. 'A' → logprob: -2.403074026107788
    3. 'for' → logprob: -3.153074026107788
    4. 'from' → logprob: -3.903074026107788
    5. ' equations' → logprob: -4.403073787689209
    6. ' A' → logprob: -4.653073787689209
    7. 'lines' → logprob: -4.903073787689209
    8. ' for' → logprob: -4.903073787689209
    9. ' #' → logprob: -5.153073787689209
    10. 'equ' → logprob: -5.278073787689209

Token 665: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4656665623188019
    2. 'self' → logprob: -1.0906665325164795
    3. '(self' → logprob: -4.090666770935059
    4. '(A' → logprob: -4.090666770935059
    5. ' self' → logprob: -7.465666770935059
    6. ' (' → logprob: -7.590666770935059
    7. 'abs' → logprob: -7.715666770935059
    8. ' A' → logprob: -8.340666770935059
    9. '((' → logprob: -8.840666770935059
    10. ')' → logprob: -8.965666770935059

Token 666: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.14482134580612183
    2. '_' → logprob: -2.1448214054107666
    3. 'i' → logprob: -4.6448211669921875
    4. '0' → logprob: -4.8948211669921875
    5. ' i' → logprob: -8.519821166992188
    6. '_j' → logprob: -8.644821166992188
    7. '[i' → logprob: -10.144821166992188
    8. ' _' → logprob: -10.144821166992188
    9. '_
' → logprob: -10.519821166992188
    10. ')' → logprob: -10.769821166992188

Token 667: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7298309803009033
    2. 'x' → logprob: -1.4798309803009033
    3. ' *' → logprob: -2.3548309803009033
    4. ' -' → logprob: -2.3548309803009033
    5. ' (' → logprob: -3.6048309803009033
    6. ',' → logprob: -3.7298309803009033
    7. ')' → logprob: -3.9798309803009033
    8. '*' → logprob: -5.104830741882324
    9. ' ' → logprob: -5.354830741882324
    10. '_' → logprob: -5.729830741882324

Token 668: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.27073466777801514
    2. '+' → logprob: -1.5207346677780151
    3. ' -' → logprob: -4.520734786987305
    4. ')' → logprob: -5.145734786987305
    5. ' ' → logprob: -7.145734786987305
    6. '-' → logprob: -7.395734786987305
    7. '   ' → logprob: -8.770734786987305
    8. ' )' → logprob: -9.520734786987305
    9. ',' → logprob: -10.020734786987305
    10. '+B' → logprob: -10.270734786987305

Token 669: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.14270678162574768
    2. ' B' → logprob: -2.017706871032715
    3. ' ' → logprob: -12.017706871032715
    4. ')' → logprob: -12.017706871032715
    5. 'self' → logprob: -12.142706871032715
    6. '	B' → logprob: -12.892706871032715
    7. '```' → logprob: -13.017706871032715
    8. ' ' → logprob: -13.330206871032715
    9. '   ' → logprob: -13.392706871032715
    10. '`' → logprob: -14.892706871032715

Token 670: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.26535648107528687
    2. '_' → logprob: -1.5153565406799316
    3. ' _' → logprob: -4.640356540679932
    4. ')' → logprob: -6.765356540679932
    5. ' x' → logprob: -7.265356540679932
    6. 'i' → logprob: -7.390356540679932
    7. ' ' → logprob: -7.515356540679932
    8. ' i' → logprob: -8.765356063842773
    9. '_j' → logprob: -9.390356063842773
    10. '[' → logprob: -9.640356063842773

Token 671: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1317349523305893
    2. 'y' → logprob: -2.131734848022461
    3. ')' → logprob: -5.881734848022461
    4. '*' → logprob: -6.631734848022461
    5. ' *' → logprob: -8.256734848022461
    6. ' ' → logprob: -9.006734848022461
    7. '*y' → logprob: -9.256734848022461
    8. '   ' → logprob: -9.631734848022461
    9. '    ' → logprob: -10.256734848022461
    10. ')y' → logprob: -10.631734848022461

Token 672: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25363391637802124
    2. '+' → logprob: -1.503633975982666
    3. ')' → logprob: -7.003633975982666
    4. '+C' → logprob: -7.378633975982666
    5. ')+' → logprob: -9.253633499145508
    6. ' ' → logprob: -10.878633499145508
    7. ' )' → logprob: -11.878633499145508
    8. ' +
' → logprob: -12.128633499145508
    9. '   ' → logprob: -12.253633499145508
    10. '<|end|>' → logprob: -12.378633499145508

Token 673: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.02983229048550129
    2. ' C' → logprob: -3.529832363128662
    3. ' ' → logprob: -10.654831886291504
    4. '
' → logprob: -10.779831886291504
    5. ')' → logprob: -11.029831886291504
    6. '   ' → logprob: -12.404831886291504
    7. '  ' → logprob: -12.654831886291504
    8. '+C' → logprob: -13.467331886291504
    9. '```' → logprob: -13.717331886291504
    10. '     ' → logprob: -13.717331886291504

Token 674: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00043221889063715935
    2. '_' → logprob: -8.875432014465332
    3. ')_' → logprob: -9.125432014465332
    4. '_j' → logprob: -9.500432014465332
    5. 'i' → logprob: -10.000432014465332
    6. ')' → logprob: -10.625432014465332
    7. ' _' → logprob: -11.750432014465332
    8. '[i' → logprob: -12.125432014465332
    9. '_
' → logprob: -12.250432014465332
    10. '[' → logprob: -12.625432014465332

Token 675: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021384384483098984
    2. ' -' → logprob: -4.021384239196777
    3. ' )' → logprob: -6.521384239196777
    4. '-' → logprob: -7.521384239196777
    5. ')**' → logprob: -7.771384239196777
    6. ')^' → logprob: -8.021384239196777
    7. ')-' → logprob: -9.396384239196777
    8. ')-(' → logprob: -9.396384239196777
    9. '-)' → logprob: -9.521384239196777
    10. '_)' → logprob: -9.896384239196777

Token 676: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001931696751853451
    2. '**' → logprob: -9.00019359588623
    3. ' ' → logprob: -9.75019359588623
    4. '
' → logprob: -12.12519359588623
    5. '²' → logprob: -13.00019359588623
    6. '=' → logprob: -13.75019359588623
    7. ')' → logprob: -14.50019359588623
    8. '​' → logprob: -15.00019359588623
    9. '20' → logprob: -15.25019359588623
    10. '_' → logprob: -15.25019359588623

Token 677: ' =' (ID: 314)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5258163809776306
    2. ' ==' → logprob: -1.1508164405822754
    3. ' =' → logprob: -2.4008164405822754
    4. '=' → logprob: -7.150816440582275
    5. '==' → logprob: -7.275816440582275
    6. '-' → logprob: -8.525815963745117
    7. ' -=' → logprob: -9.275815963745117
    8. ' ' → logprob: -9.525815963745117
    9. ')' → logprob: -11.275815963745117
    10. '   ' → logprob: -11.275815963745117

Token 678: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2538756728172302
    2. '(A' → logprob: -1.503875732421875
    3. '(' → logprob: -6.378875732421875
    4. '(self' → logprob: -9.253875732421875
    5. ' ' → logprob: -9.753875732421875
    6. '((' → logprob: -10.753875732421875
    7. '   ' → logprob: -11.378875732421875
    8. '(x' → logprob: -11.628875732421875
    9. '
' → logprob: -12.128875732421875
    10. ' ((' → logprob: -12.253875732421875

Token 679: 'A' (ID: 32)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.05122191831469536
    2. '(self' → logprob: -3.4262218475341797
    3. 'A' → logprob: -4.67622184753418
    4. 'self' → logprob: -5.17622184753418
    5. ' (' → logprob: -6.17622184753418
    6. '(' → logprob: -8.17622184753418
    7. ' self' → logprob: -10.42622184753418
    8. '((' → logprob: -10.92622184753418
    9. '(
' → logprob: -11.42622184753418
    10. ' A' → logprob: -11.42622184753418

Token 680: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006006922340020537
    2. '0' → logprob: -7.500600814819336
    3. '_i' → logprob: -10.625600814819336
    4. ' _' → logprob: -12.750600814819336
    5. '[' → logprob: -12.875600814819336
    6. '_
' → logprob: -12.875600814819336
    7. '```' → logprob: -13.125600814819336
    8. '
' → logprob: -13.500600814819336
    9. '(' → logprob: -13.500600814819336
    10. '_j' → logprob: -13.625600814819336

Token 681: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03397472947835922
    2. '_' → logprob: -3.4089746475219727
    3. ' ' → logprob: -8.283974647521973
    4. '```' → logprob: -10.908974647521973
    5. 'self' → logprob: -11.283974647521973
    6. '[' → logprob: -11.533974647521973
    7. ' _' → logprob: -11.658974647521973
    8. '`' → logprob: -12.721474647521973
    9. '   ' → logprob: -12.971474647521973
    10. '\xe2\x82' → logprob: -13.158974647521973

Token 682: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3869082033634186
    2. 'x' → logprob: -1.1369081735610962
    3. '_x' → logprob: -11.761908531188965
    4. ' ' → logprob: -11.761908531188965
    5. ' ' → logprob: -11.886908531188965
    6. '*' → logprob: -13.261908531188965
    7. '	x' → logprob: -13.386908531188965
    8. '```' → logprob: -13.386908531188965
    9. '*x' → logprob: -13.386908531188965
    10. ')' → logprob: -13.699408531188965

Token 683: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8444900512695312
    2. ' x' → logprob: -1.0944900512695312
    3. '+' → logprob: -1.9694900512695312
    4. 'x' → logprob: -2.4694900512695312
    5. '<|end|>' → logprob: -5.594490051269531
    6. '*' → logprob: -5.969490051269531
    7. ' *' → logprob: -5.969490051269531
    8. ' ' → logprob: -6.219490051269531
    9. '*x' → logprob: -8.469490051269531
    10. '```' → logprob: -9.094490051269531

Token 684: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11289108544588089
    2. ' B' → logprob: -2.23789119720459
    3. ' ' → logprob: -9.98789119720459
    4. '<|end|>' → logprob: -11.23789119720459
    5. ')' → logprob: -13.48789119720459
    6. '(' → logprob: -13.86289119720459
    7. '`' → logprob: -14.11289119720459
    8. '+' → logprob: -14.11289119720459
    9. '+B' → logprob: -14.48789119720459
    10. '[' → logprob: -14.55039119720459

Token 685: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47479066252708435
    2. '_i' → logprob: -0.9747906923294067
    3. 'i' → logprob: -7.474790573120117
    4. '_j' → logprob: -9.974790573120117
    5. ' _' → logprob: -11.224790573120117
    6. '<|end|>' → logprob: -11.224790573120117
    7. 'x' → logprob: -11.849790573120117
    8. '_
' → logprob: -11.849790573120117
    9. '0' → logprob: -11.974790573120117
    10. ',' → logprob: -11.974790573120117

Token 686: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13331164419651031
    2. '_' → logprob: -2.1333117485046387
    3. 'B' → logprob: -5.133311748504639
    4. ' ' → logprob: -8.63331127166748
    5. ' B' → logprob: -9.38331127166748
    6. '```' → logprob: -9.88331127166748
    7. 'y' → logprob: -10.50831127166748
    8. 'i' → logprob: -10.75831127166748
    9. '_i' → logprob: -11.00831127166748
    10. 'x' → logprob: -11.38331127166748

Token 687: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6319408416748047
    2. ' x' → logprob: -1.0069408416748047
    3. ' y' → logprob: -2.5069408416748047
    4. 'y' → logprob: -3.8819408416748047
    5. ' ' → logprob: -7.756940841674805
    6. '+' → logprob: -8.256940841674805
    7. '```' → logprob: -9.256940841674805
    8. 'point' → logprob: -10.381940841674805
    9. ' point' → logprob: -10.506940841674805
    10. ' +' → logprob: -10.631940841674805

Token 688: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07890311628580093
    2. '+' → logprob: -2.5789031982421875
    3. '<|end|>' → logprob: -11.953903198242188
    4. ')' → logprob: -13.078903198242188
    5. '+C' → logprob: -13.578903198242188
    6. ' ' → logprob: -13.953903198242188
    7. ' +
' → logprob: -14.578903198242188
    8. '```' → logprob: -14.703903198242188
    9. ' ' → logprob: -15.078903198242188
    10. 'y' → logprob: -15.203903198242188

Token 689: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03569038212299347
    2. ' C' → logprob: -3.4106903076171875
    3. '+' → logprob: -6.6606903076171875
    4. '+C' → logprob: -7.6606903076171875
    5. ' +' → logprob: -8.285690307617188
    6. ' ' → logprob: -11.160690307617188
    7. 'x' → logprob: -11.660690307617188
    8. 'y' → logprob: -12.660690307617188
    9. '```' → logprob: -12.660690307617188
    10. ')' → logprob: -13.598190307617188

Token 690: '_' (ID: 62)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.2820146977901459
    2. '_' → logprob: -1.4070147275924683
    3. '0' → logprob: -7.282014846801758
    4. '_)' → logprob: -9.157014846801758
    5. ')' → logprob: -10.782014846801758
    6. ' _' → logprob: -11.407014846801758
    7. '_
' → logprob: -11.407014846801758
    8. 'i' → logprob: -12.157014846801758
    9. '_j' → logprob: -12.157014846801758
    10. 'C' → logprob: -12.907014846801758

Token 691: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09197202324867249
    2. '_i' → logprob: -3.0919721126556396
    3. '_' → logprob: -3.3419721126556396
    4. 'C' → logprob: -5.4669718742370605
    5. 'i' → logprob: -6.5919718742370605
    6. '2' → logprob: -7.5919718742370605
    7. '_C' → logprob: -7.8419718742370605
    8. ' ' → logprob: -8.091972351074219
    9. ')' → logprob: -10.216972351074219
    10. '```' → logprob: -10.341972351074219

Token 692: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17133758962154388
    2. ')^' → logprob: -2.171337604522705
    3. ')**' → logprob: -3.171337604522705
    4. '+' → logprob: -7.421337604522705
    5. ' )' → logprob: -7.796337604522705
    6. ' +' → logprob: -8.546337127685547
    7. '```' → logprob: -9.171337127685547
    8. '+)' → logprob: -10.296337127685547
    9. 'x' → logprob: -10.671337127685547
    10. '
' → logprob: -10.671337127685547

Token 693: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -15.25001049041748
    4. '**' → logprob: -15.62501049041748
    5. '²' → logprob: -16.500011444091797
    6. ')' → logprob: -16.875011444091797
    7. '```' → logprob: -16.875011444091797
    8. '   ' → logprob: -17.625011444091797
    9. '

' → logprob: -18.625011444091797
    10. '۲' → logprob: -18.875011444091797

Token 694: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0708842277526855
    2. '<|end|>' → logprob: -1.0708842277526855
    3. '       ' → logprob: -1.4458842277526855
    4. '<|end|>' → logprob: -3.6958842277526855
    5. '\n' → logprob: -4.0708842277526855
    6. ')' → logprob: -4.8208842277526855
    7. '        
' → logprob: -4.8208842277526855
    8. ',' → logprob: -4.9458842277526855
    9. ' for' → logprob: -5.4458842277526855
    10. '.' → logprob: -7.0708842277526855

Token 695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002566383685916662
    2. '        
' → logprob: -7.002566337585449
    3. '<|end|>' → logprob: -7.127566337585449
    4. '
' → logprob: -8.37756633758545
    5. '   ' → logprob: -8.50256633758545
    6. ',' → logprob: -9.25256633758545
    7. '#' → logprob: -10.12756633758545
    8. '\' → logprob: -10.12756633758545
    9. '```' → logprob: -10.25256633758545
    10. '<|end|>' → logprob: -10.87756633758545

Token 696: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12953874468803406
    2. 'from' → logprob: -3.6295387744903564
    3. 'import' → logprob: -3.7545387744903564
    4. '       ' → logprob: -3.8795387744903564
    5. '#' (adapté à ' #') → logprob: -4.129538536071777
    6. 'results' → logprob: -4.629538536071777
    7. 'lines' → logprob: -5.004538536071777
    8. ' A' → logprob: -5.379538536071777
    9. ' lines' → logprob: -5.754538536071777
    10. 'solutions' → logprob: -6.004538536071777

Token 697: ' Define' (ID: 38966)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.150157168507576
    2. '#' → logprob: -2.4001572132110596
    3. 'from' → logprob: -4.0251569747924805
    4. 'import' → logprob: -4.1501569747924805
    5. 'def' → logprob: -5.6501569747924805
    6. 'Let's' → logprob: -6.2751569747924805
    7. 'lines' → logprob: -6.5251569747924805
    8. 'results' → logprob: -6.6501569747924805
    9. 'coeff' → logprob: -6.9001569747924805
    10. 'ref' → logprob: -7.0251569747924805

Token 698: ' f' (ID: 285)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.025929469615221024
    2. 'def' → logprob: -4.9009294509887695
    3. 'ref' → logprob: -5.0259294509887695
    4. ' A' → logprob: -5.7759294509887695
    5. 'results' → logprob: -6.1509294509887695
    6. '   ' → logprob: -6.2759294509887695
    7. 'reference' → logprob: -7.1509294509887695
    8. 'equ' → logprob: -7.1509294509887695
    9. 'solutions' → logprob: -7.6509294509887695
    10. 'refs' → logprob: -7.7759294509887695

Token 699: '_i' (ID: 10853)
  Prédit: 'unction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unction' → logprob: -0.45491257309913635
    2. 's' → logprob: -1.579912543296814
    3. '_values' → logprob: -2.4549126625061035
    4. 'orm' → logprob: -4.0799126625061035
    5. 'irst' → logprob: -4.8299126625061035
    6. 'or' → logprob: -5.0799126625061035
    7. '_lines' → logprob: -5.2049126625061035
    8. '_vectors' → logprob: -5.5799126625061035
    9. '_vars' → logprob: -5.8299126625061035
    10. 'A' → logprob: -5.8299126625061035

Token 700: '(x' (ID: 4061)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13970503211021423
    2. ' =' → logprob: -2.764704942703247
    3. '_values' → logprob: -3.264704942703247
    4. '_results' → logprob: -5.014705181121826
    5. '=' → logprob: -5.139705181121826
    6. '_lines' → logprob: -5.639705181121826
    7. 'unction' → logprob: -6.014705181121826
    8. '_s' → logprob: -6.264705181121826
    9. '_points' → logprob: -6.389705181121826
    10. 'results' → logprob: -7.139705181121826

Token 701: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012586837401613593
    2. ' ,' → logprob: -7.376258850097656
    3. ',y' → logprob: -8.001258850097656
    4. ')' → logprob: -8.626258850097656
    5. '   ' → logprob: -10.501258850097656
    6. ':' → logprob: -11.126258850097656
    7. '       ' → logprob: -11.251258850097656
    8. 'def' → logprob: -11.501258850097656
    9. '=' → logprob: -11.626258850097656
    10. ' =' → logprob: -11.751258850097656

Token 702: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018846115563064814
    2. '):' → logprob: -6.501884460449219
    3. ' )' → logprob: -9.251884460449219
    4. ')=' → logprob: -9.251884460449219
    5. 's' → logprob: -9.626884460449219
    6. '):
' → logprob: -10.501884460449219
    7. '   ' → logprob: -10.626884460449219
    8. ',' → logprob: -10.626884460449219
    9. '       ' → logprob: -11.126884460449219
    10. ' =' → logprob: -12.001884460449219

Token 703: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3754344582557678
    2. 's' → logprob: -1.375434398651123
    3. '=' → logprob: -3.500434398651123
    4. '       ' → logprob: -3.875434398651123
    5. ':' → logprob: -6.500434398651123
    6. 'def' → logprob: -6.625434398651123
    7. ' s' → logprob: -6.875434398651123
    8. 'results' → logprob: -7.125434398651123
    9. '   ' → logprob: -7.750434398651123
    10. ',' → logprob: -7.875434398651123

Token 704: ' (' (ID: 350)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.0913457870483398
    2. '(lambda' → logprob: -1.5913457870483398
    3. ' (' → logprob: -2.09134578704834
    4. 'self' → logprob: -2.21634578704834
    5. '(self' → logprob: -2.21634578704834
    6. '(A' → logprob: -2.96634578704834
    7. ' lambda' → logprob: -3.59134578704834
    8. ' self' → logprob: -3.96634578704834
    9. '[]' → logprob: -5.59134578704834
    10. '[(' → logprob: -5.96634578704834

Token 705: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010607132688164711
    2. '(self' → logprob: -4.7606072425842285
    3. 'A' → logprob: -7.3856072425842285
    4. ' self' → logprob: -7.5106072425842285
    5. 'lambda' → logprob: -7.8856072425842285
    6. '(A' → logprob: -9.38560676574707
    7. 'line' → logprob: -9.51060676574707
    8. '(lambda' → logprob: -10.26060676574707
    9. '   ' → logprob: -10.63560676574707
    10. ' (' → logprob: -10.88560676574707

Token 706: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.06656980514526367
    2. 'self' → logprob: -3.0665698051452637
    3. 'i' → logprob: -4.191569805145264
    4. '[i' → logprob: -6.691569805145264
    5. '       ' → logprob: -7.941569805145264
    6. '[self' → logprob: -8.691570281982422
    7. '[' → logprob: -8.816570281982422
    8. '*self' → logprob: -8.816570281982422
    9. '   ' → logprob: -9.316570281982422
    10. '_' → logprob: -9.566570281982422

Token 707: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7537873983383179
    2. ' *' → logprob: -1.5037873983383179
    3. '*' → logprob: -1.7537873983383179
    4. ' x' → logprob: -2.1287875175476074
    5. '*x' → logprob: -4.378787517547607
    6. ')' → logprob: -7.128787517547607
    7. ' ' → logprob: -8.12878704071045
    8. '_' → logprob: -8.12878704071045
    9. '   ' → logprob: -8.50378704071045
    10. ',' → logprob: -8.75378704071045

Token 708: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933979392051697
    2. ' +' → logprob: -0.6933979392051697
    3. '<|end|>' → logprob: -8.693397521972656
    4. '*' → logprob: -11.193397521972656
    5. '+self' → logprob: -11.318397521972656
    6. ' ' → logprob: -11.443397521972656
    7. ')' → logprob: -11.568397521972656
    8. '```' → logprob: -11.943397521972656
    9. '  ' → logprob: -12.443397521972656
    10. '+B' → logprob: -12.693397521972656

Token 709: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6340432167053223
    2. ' B' → logprob: -0.7590432167053223
    3. 'self' → logprob: -6.884043216705322
    4. ' self' → logprob: -8.384042739868164
    5. ' ' → logprob: -9.509042739868164
    6. '    ' → logprob: -10.759042739868164
    7. ')' → logprob: -11.384042739868164
    8. '"' → logprob: -11.759042739868164
    9. '`' → logprob: -11.884042739868164
    10. '"B' → logprob: -11.884042739868164

Token 710: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.47453466057777405
    2. '_' → logprob: -0.9745346307754517
    3. ' _' → logprob: -8.34953498840332
    4. '_
' → logprob: -9.47453498840332
    5. 'i' → logprob: -9.59953498840332
    6. ')_' → logprob: -10.34953498840332
    7. '_j' → logprob: -11.34953498840332
    8. ')' → logprob: -12.09953498840332
    9. '_)' → logprob: -12.72453498840332
    10. '
' → logprob: -12.97453498840332

Token 711: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1269538253545761
    2. 'y' → logprob: -2.1269538402557373
    3. '*y' → logprob: -12.126954078674316
    4. ',' → logprob: -12.251954078674316
    5. ' ' → logprob: -12.876954078674316
    6. ' ' → logprob: -13.251954078674316
    7. '<|end|>' → logprob: -13.376954078674316
    8. '*' → logprob: -13.501954078674316
    9. ')' → logprob: -13.626954078674316
    10. '	y' → logprob: -13.751954078674316

Token 712: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933203935623169
    2. ' +' → logprob: -0.6933203935623169
    3. '<|end|>' → logprob: -8.943320274353027
    4. '+C' → logprob: -11.193320274353027
    5. ')' → logprob: -11.693320274353027
    6. '```' → logprob: -12.193320274353027
    7. ' ' → logprob: -12.693320274353027
    8. ',' → logprob: -13.443320274353027
    9. '<|end|>' → logprob: -13.443320274353027
    10. ')+' → logprob: -14.068320274353027

Token 713: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0053268433548510075
    2. ' C' → logprob: -5.255326747894287
    3. ' ' → logprob: -10.505327224731445
    4. '+C' → logprob: -10.755327224731445
    5. ' +' → logprob: -11.130327224731445
    6. '+' → logprob: -11.630327224731445
    7. '   ' → logprob: -11.880327224731445
    8. '  ' → logprob: -12.255327224731445
    9. '
' → logprob: -13.380327224731445
    10. '```' → logprob: -13.692827224731445

Token 714: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0004290003562346101
    2. '_' → logprob: -8.125429153442383
    3. 'i' → logprob: -9.375429153442383
    4. ')_' → logprob: -11.125429153442383
    5. '[i' → logprob: -11.750429153442383
    6. '_
' → logprob: -12.125429153442383
    7. '
' → logprob: -12.375429153442383
    8. '```' → logprob: -12.750429153442383
    9. ')' → logprob: -13.000429153442383
    10. '[' → logprob: -13.375429153442383

Token 715: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1440219283103943
    2. ')**' → logprob: -2.519021987915039
    3. ' -' → logprob: -3.144021987915039
    4. ')^' → logprob: -5.519021987915039
    5. '_)' → logprob: -6.394021987915039
    6. '-)' → logprob: -6.644021987915039
    7. '-' → logprob: -6.894021987915039
    8. ' )' → logprob: -6.894021987915039
    9. '   ' → logprob: -7.519021987915039
    10. ')-(' → logprob: -8.144021987915039

Token 716: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.186122770188376e-05
    2. ' ' → logprob: -9.750091552734375
    3. '
' → logprob: -10.375091552734375
    4. '**' → logprob: -13.750091552734375
    5. '

' → logprob: -15.000091552734375
    6. ')' → logprob: -15.625091552734375
    7. '=' → logprob: -15.875091552734375
    8. '```' → logprob: -16.000091552734375
    9. '
' → logprob: -16.500091552734375
    10. '   ' → logprob: -16.875091552734375

Token 717: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26186057925224304
    2. ' -' → logprob: -2.1368606090545654
    3. ' for' → logprob: -3.3868606090545654
    4. '
' → logprob: -4.511860370635986
    5. 'for' → logprob: -4.511860370635986
    6. 'from' → logprob: -4.511860370635986
    7. ')' → logprob: -4.886860370635986
    8. 'import' → logprob: -4.886860370635986
    9. ',' → logprob: -5.011860370635986
    10. '-' → logprob: -5.511860370635986

Token 718: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.22661420702934265
    2. ' (' → logprob: -1.601614236831665
    3. '(self' → logprob: -7.351613998413086
    4. '((' → logprob: -8.101613998413086
    5. '(' → logprob: -9.101613998413086
    6. '   ' → logprob: -9.601613998413086
    7. ' ' → logprob: -10.351613998413086
    8. '
' → logprob: -10.976613998413086
    9. ' ((' → logprob: -12.351613998413086
    10. '  ' → logprob: -12.851613998413086

Token 719: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011452846229076385
    2. '(self' → logprob: -4.636452674865723
    3. ' self' → logprob: -7.136452674865723
    4. 'A' → logprob: -7.386452674865723
    5. ' (' → logprob: -8.886452674865723
    6. '(A' → logprob: -9.636452674865723
    7. '   ' → logprob: -10.761452674865723
    8. '(' → logprob: -11.886452674865723
    9. '       ' → logprob: -12.011452674865723
    10. '_A' → logprob: -12.261452674865723

Token 720: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000700641714502126
    2. '0' → logprob: -7.5007004737854
    3. '[' → logprob: -9.375700950622559
    4. 'self' → logprob: -10.500700950622559
    5. ' _' → logprob: -11.750700950622559
    6. '```' → logprob: -12.250700950622559
    7. ')_' → logprob: -12.875700950622559
    8. '._' → logprob: -12.875700950622559
    9. ')' → logprob: -13.000700950622559
    10. 'def' → logprob: -13.625700950622559

Token 721: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024424651637673378
    2. '_' → logprob: -3.7744245529174805
    3. 'self' → logprob: -7.2744245529174805
    4. ' ' → logprob: -8.27442455291748
    5. '[' → logprob: -9.14942455291748
    6. '```' → logprob: -10.64942455291748
    7. '`' → logprob: -11.02442455291748
    8. '
' → logprob: -11.39942455291748
    9. 'lines' → logprob: -11.52442455291748
    10. '_lines' → logprob: -11.64942455291748

Token 722: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07217550277709961
    2. 'x' → logprob: -2.6971755027770996
    3. ' *' → logprob: -6.5721755027771
    4. '*' → logprob: -8.072175979614258
    5. '*x' → logprob: -9.572175979614258
    6. ' ' → logprob: -9.697175979614258
    7. '(x' → logprob: -9.697175979614258
    8. '   ' → logprob: -9.947175979614258
    9. ')' → logprob: -10.072175979614258
    10. '(' → logprob: -10.197175979614258

Token 723: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5809661149978638
    2. ' +' → logprob: -0.8309661149978638
    3. '<|end|>' → logprob: -5.455965995788574
    4. 'x' → logprob: -8.455965995788574
    5. ' ' → logprob: -8.705965995788574
    6. '*' → logprob: -8.955965995788574
    7. ' x' → logprob: -9.330965995788574
    8. '```' → logprob: -10.205965995788574
    9. ')' → logprob: -10.830965995788574
    10. ' *' → logprob: -10.830965995788574

Token 724: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.001605197903700173
    2. ' B' → logprob: -6.501605033874512
    3. ' ' → logprob: -9.751605033874512
    4. '<|end|>' → logprob: -10.501605033874512
    5. 'self' → logprob: -12.751605033874512
    6. '`' → logprob: -13.001605033874512
    7. ')' → logprob: -13.126605033874512
    8. '  ' → logprob: -13.251605033874512
    9. 'Line' → logprob: -13.751605033874512
    10. ''' → logprob: -14.001605033874512

Token 725: '_' (ID: 62)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.02180379070341587
    2. '_' → logprob: -3.896803855895996
    3. 'i' → logprob: -7.146803855895996
    4. '_B' → logprob: -7.896803855895996
    5. ' _' → logprob: -10.771803855895996
    6. '0' → logprob: -10.896803855895996
    7. 'B' → logprob: -10.896803855895996
    8. '_j' → logprob: -11.396803855895996
    9. '_b' → logprob: -12.146803855895996
    10. ',' → logprob: -12.396803855895996

Token 726: '0' (ID: 15)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5747721791267395
    2. '0' → logprob: -1.0747721195220947
    3. '_' → logprob: -2.4497721195220947
    4. '_B' → logprob: -5.074772357940674
    5. 'y' → logprob: -6.574772357940674
    6. ' ' → logprob: -7.324772357940674
    7. ' B' → logprob: -7.824772357940674
    8. '   ' → logprob: -9.074771881103516
    9. '<|end|>' → logprob: -9.324771881103516
    10. '```' → logprob: -9.449771881103516

Token 727: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.11796494573354721
    2. 'y' → logprob: -2.24296498298645
    3. 'x' → logprob: -6.117964744567871
    4. ' x' → logprob: -6.367964744567871
    5. '<|end|>' → logprob: -6.992964744567871
    6. ' ' → logprob: -9.242964744567871
    7. '*y' → logprob: -9.742964744567871
    8. '*' → logprob: -9.867964744567871
    9. ')' → logprob: -11.117964744567871
    10. ',' → logprob: -11.117964744567871

Token 728: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5421134829521179
    2. '+' → logprob: -0.9171134829521179
    3. ' y' → logprob: -4.542113304138184
    4. 'y' → logprob: -4.917113304138184
    5. '<|end|>' → logprob: -8.042113304138184
    6. ')' → logprob: -8.917113304138184
    7. ' x' → logprob: -9.167113304138184
    8. 'x' → logprob: -9.292113304138184
    9. ' ' → logprob: -9.667113304138184
    10. '+y' → logprob: -9.792113304138184

Token 729: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0015279557555913925
    2. ' C' → logprob: -6.501527786254883
    3. '+' → logprob: -11.376527786254883
    4. '+C' → logprob: -12.001527786254883
    5. '
' → logprob: -13.001527786254883
    6. ' ' → logprob: -13.501527786254883
    7. ' +' → logprob: -13.751527786254883
    8. ')' → logprob: -14.126527786254883
    9. 'y' → logprob: -14.251527786254883
    10. 'x' → logprob: -15.501527786254883

Token 730: '_' (ID: 62)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00938970223069191
    2. '_' → logprob: -5.759389877319336
    3. 'i' → logprob: -6.509389877319336
    4. '0' → logprob: -6.634389877319336
    5. '_C' → logprob: -7.009389877319336
    6. 'C' → logprob: -7.384389877319336
    7. ')' → logprob: -7.634389877319336
    8. '   ' → logprob: -8.009389877319336
    9. '_c' → logprob: -8.759389877319336
    10. ' _' → logprob: -8.884389877319336

Token 731: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17907260358333588
    2. 'y' → logprob: -2.304072618484497
    3. 'C' → logprob: -3.804072618484497
    4. '_' → logprob: -3.929072618484497
    5. '_C' → logprob: -4.804072380065918
    6. ' ' → logprob: -5.304072380065918
    7. '   ' → logprob: -5.929072380065918
    8. ' y' → logprob: -6.429072380065918
    9. 'x' → logprob: -6.804072380065918
    10. '  ' → logprob: -7.179072380065918

Token 732: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.7337048649787903
    2. ')' → logprob: -0.8587048649787903
    3. ')^' → logprob: -2.3587048053741455
    4. ' )' → logprob: -7.108705043792725
    5. '   ' → logprob: -8.858704566955566
    6. 'x' → logprob: -8.983704566955566
    7. '```' → logprob: -9.108704566955566
    8. '(x' → logprob: -9.483704566955566
    9. ' +' → logprob: -9.483704566955566
    10. '+' → logprob: -9.983704566955566

Token 733: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.652451464906335e-05
    2. ' ' → logprob: -11.750016212463379
    3. '**' → logprob: -12.750016212463379
    4. '(' → logprob: -13.125016212463379
    5. '```' → logprob: -13.625016212463379
    6. '
' → logprob: -14.125016212463379
    7. '   ' → logprob: -14.375016212463379
    8. ')' → logprob: -14.750016212463379
    9. '  ' → logprob: -16.312517166137695
    10. '{' → logprob: -16.312517166137695

Token 734: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05060775950551033
    2. 's' → logprob: -4.550607681274414
    3. ' for' → logprob: -5.050607681274414
    4. ',' → logprob: -5.175607681274414
    5. '
' → logprob: -5.675607681274414
    6. ')' → logprob: -5.675607681274414
    7. 'for' → logprob: -5.800607681274414
    8. '<|end|>' → logprob: -6.175607681274414
    9. '<|end|>' → logprob: -6.300607681274414
    10. ' lines' → logprob: -6.425607681274414

Token 735: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10022101551294327
    2. ' ' → logprob: -2.3502209186553955
    3. ')' → logprob: -12.225220680236816
    4. '   ' → logprob: -13.100220680236816
    5. ' x' → logprob: -13.350220680236816
    6. '  ' → logprob: -14.350220680236816
    7. '"' → logprob: -14.537720680236816
    8. ' )' → logprob: -14.662720680236816
    9. 's' → logprob: -14.725220680236816
    10. ' zero' → logprob: -14.787720680236816

Token 736: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005058500682935119
    2. ' ' → logprob: -7.6255059242248535
    3. 'lambda' → logprob: -11.750505447387695
    4. '[' → logprob: -13.250505447387695
    5. '
' → logprob: -13.250505447387695
    6. '   ' → logprob: -13.500505447387695
    7. '[]
' → logprob: -14.375505447387695
    8. ' lambda' → logprob: -14.375505447387695
    9. '"' → logprob: -14.625505447387695
    10. ')' → logprob: -14.750505447387695

Token 737: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043328236788511276
    2. '
' → logprob: -3.793328285217285
    3. '<|end|>' → logprob: -4.668328285217285
    4. '        
' → logprob: -6.168328285217285
    5. '<|end|>' → logprob: -6.418328285217285
    6. 'import' → logprob: -6.418328285217285
    7. ',' → logprob: -6.668328285217285
    8. 'n' → logprob: -7.418328285217285
    9. ')' → logprob: -7.543328285217285
    10. ' lines' → logprob: -7.543328285217285

Token 738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021713634952902794
    2. '
' → logprob: -4.146713733673096
    3. '        
' → logprob: -5.771713733673096
    4. '   ' → logprob: -7.146713733673096
    5. '\n' → logprob: -8.271713256835938
    6. '\' → logprob: -8.646713256835938
    7. '    
' → logprob: -8.646713256835938
    8. '  
' → logprob: -8.896713256835938
    9. ')' → logprob: -9.021713256835938
    10. '<|end|>' → logprob: -9.146713256835938

Token 739: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.19203005731105804
    2. '       ' → logprob: -1.9420300722122192
    3. ' A' → logprob: -4.44202995300293
    4. '#' (adapté à ' #') → logprob: -5.81702995300293
    5. 'results' → logprob: -5.81702995300293
    6. 'import' → logprob: -5.94202995300293
    7. 'def' → logprob: -6.44202995300293
    8. 'a' → logprob: -6.44202995300293
    9. 'solutions' → logprob: -6.56702995300293
    10. ' lines' → logprob: -6.69202995300293

Token 740: ' This' (ID: 1328)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1404007226228714
    2. '#' → logprob: -2.5154006481170654
    3. 'def' → logprob: -4.2654008865356445
    4. '   ' → logprob: -5.1404008865356445
    5. 'results' → logprob: -5.1404008865356445
    6. 'from' → logprob: -5.1404008865356445
    7. ' A' → logprob: -5.7654008865356445
    8. 'if' → logprob: -5.8904008865356445
    9. 'coeff' → logprob: -5.8904008865356445
    10. 'import' → logprob: -6.3904008865356445

Token 741: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.129453420639038
    2. ' is' → logprob: -1.504453420639038
    3. ' def' → logprob: -2.254453420639038
    4. ' can' → logprob: -2.379453420639038
    5. ' code' → logprob: -2.879453420639038
    6. ' lines' → logprob: -3.629453420639038
    7. '   ' → logprob: -3.754453420639038
    8. '#' → logprob: -3.754453420639038
    9. ' leads' → logprob: -3.879453420639038
    10. 'results' → logprob: -4.629453659057617

Token 742: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2767941355705261
    2. 'a' → logprob: -1.526794195175171
    3. ' quadratic' → logprob: -4.526793956756592
    4. ' equivalent' → logprob: -5.776793956756592
    5. 'equ' → logprob: -6.151793956756592
    6. '   ' → logprob: -6.401793956756592
    7. ' an' → logprob: -6.651793956756592
    8. 'quadr' → logprob: -7.026793956756592
    9. ' not' → logprob: -7.276793956756592
    10. 'import' → logprob: -7.401793956756592

Token 743: ' quadratic' (ID: 178997)
  Prédit: ' system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.32326942682266235
    2. ' quadratic' → logprob: -1.4482693672180176
    3. 'system' → logprob: -4.323269367218018
    4. 'n' → logprob: -4.823269367218018
    5. 'quadr' → logprob: -4.948269367218018
    6. ' nonlinear' → logprob: -5.448269367218018
    7. ' non' → logprob: -6.698269367218018
    8. ' linear' → logprob: -6.823269367218018
    9. 'def' → logprob: -7.073269367218018
    10. ' bit' → logprob: -7.073269367218018

Token 744: ' equation' (ID: 42006)
  Prédit: ' system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.21662567555904388
    2. ' equation' → logprob: -1.966625690460205
    3. ' form' → logprob: -3.966625690460205
    4. ' problem' → logprob: -4.091625690460205
    5. '<|end|>' → logprob: -4.966625690460205
    6. 'system' → logprob: -5.341625690460205
    7. 'equ' → logprob: -6.091625690460205
    8. '<|end|>' → logprob: -6.966625690460205
    9. ' constraint' → logprob: -7.341625690460205
    10. ' expression' → logprob: -7.716625690460205

Token 745: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34610554575920105
    2. ' in' → logprob: -1.4711055755615234
    3. ',' → logprob: -3.3461055755615234
    4. '.' → logprob: -4.846105575561523
    5. 's' → logprob: -5.346105575561523
    6. ' for' → logprob: -5.596105575561523
    7. '   ' → logprob: -5.971105575561523
    8. ')' → logprob: -6.721105575561523
    9. 'import' → logprob: -6.971105575561523
    10. ':' → logprob: -7.221105575561523

Token 746: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001600347168277949
    2. ' x' → logprob: -8.875160217285156
    3. '(x' → logprob: -11.625160217285156
    4. 'variables' → logprob: -12.000160217285156
    5. 'terms' → logprob: -13.500160217285156
    6. '```' → logprob: -14.375160217285156
    7. ' variables' → logprob: -14.500160217285156
    8. '"x' → logprob: -14.750160217285156
    9. '   ' → logprob: -15.000160217285156
    10. ' terms' → logprob: -15.125160217285156

Token 747: ',y' (ID: 16103)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31857702136039734
    2. ',' → logprob: -1.3185770511627197
    3. 'and' → logprob: -6.068576812744141
    4. '       ' → logprob: -6.068576812744141
    5. ' ,' → logprob: -8.06857681274414
    6. ')' → logprob: -8.94357681274414
    7. '.' → logprob: -9.44357681274414
    8. ',y' → logprob: -9.94357681274414
    9. ',
' → logprob: -10.44357681274414
    10. ' ' → logprob: -11.31857681274414

Token 748: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2648448050022125
    2. ',' → logprob: -2.5148448944091797
    3. '<|end|>' → logprob: -3.0148448944091797
    4. '
' → logprob: -3.1398448944091797
    5. '        
' → logprob: -4.01484489440918
    6. '.' → logprob: -4.13984489440918
    7. '<|end|>' → logprob: -4.88984489440918
    8. 'import' → logprob: -5.13984489440918
    9. ' lines' → logprob: -6.13984489440918
    10. ' and' → logprob: -6.13984489440918

Token 749: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003585102967917919
    2. 'import' → logprob: -6.378585338592529
    3. ' lines' → logprob: -7.003585338592529
    4. 'from' → logprob: -8.003584861755371
    5. ' A' → logprob: -8.753584861755371
    6. ',' → logprob: -9.503584861755371
    7. 'A' → logprob: -9.503584861755371
    8. ')' → logprob: -9.628584861755371
    9. ' from' → logprob: -9.628584861755371
    10. 'n' → logprob: -10.628584861755371

Token 750: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11977629363536835
    2. '       ' → logprob: -2.9947762489318848
    3. '#' (adapté à ' #') → logprob: -3.4947762489318848
    4. ' A' → logprob: -4.744776248931885
    5. 'import' → logprob: -4.869776248931885
    6. '   ' → logprob: -5.869776248931885
    7. 'def' → logprob: -5.869776248931885
    8. 'from' → logprob: -5.869776248931885
    9. 'coeff' → logprob: -6.244776248931885
    10. 'results' → logprob: -6.619776248931885

Token 751: ' We'll' (ID: 46830)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09516048431396484
    2. '#' → logprob: -3.595160484313965
    3. ' A' → logprob: -3.595160484313965
    4. 'from' → logprob: -4.595160484313965
    5. 'import' → logprob: -4.970160484313965
    6. 'if' → logprob: -5.470160484313965
    7. 'def' → logprob: -5.470160484313965
    8. '   ' → logprob: -6.220160484313965
    9. ' if' → logprob: -6.720160484313965
    10. ' lines' → logprob: -6.720160484313965

Token 752: ' try' (ID: 2075)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3632889986038208
    2. ' try' → logprob: -1.9882889986038208
    3. ' continue' → logprob: -2.3632888793945312
    4. ' find' → logprob: -2.4882888793945312
    5. ' import' → logprob: -3.1132888793945312
    6. 'solve' → logprob: -3.2382888793945312
    7. 'continue' → logprob: -3.2382888793945312
    8. 'def' → logprob: -3.4882888793945312
    9. 'find' → logprob: -3.4882888793945312
    10. '#' → logprob: -3.6132888793945312

Token 753: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6158564686775208
    2. ':' → logprob: -1.490856409072876
    3. 'to' → logprob: -1.490856409072876
    4. ':
' → logprob: -4.865856647491455
    5. '   ' → logprob: -6.615856647491455
    6. 'import' → logprob: -9.365856170654297
    7. 'ing' → logprob: -9.740856170654297
    8. 'for' → logprob: -10.365856170654297
    9. 'def' → logprob: -10.740856170654297
    10. '    ' → logprob: -10.865856170654297

Token 754: ' reduce' (ID: 10389)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.7113250494003296
    2. 'find' → logprob: -1.0863250494003296
    3. ' find' → logprob: -2.461325168609619
    4. 'linear' → logprob: -2.961325168609619
    5. ' solve' → logprob: -3.836325168609619
    6. 'combine' → logprob: -5.586325168609619
    7. ' linear' → logprob: -5.711325168609619
    8. 'set' → logprob: -6.586325168609619
    9. 'build' → logprob: -6.711325168609619
    10. 'construct' → logprob: -7.586325168609619

Token 755: ' system' (ID: 2420)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1320255994796753
    2. 'the' → logprob: -1.2570255994796753
    3. ' this' → logprob: -2.007025718688965
    4. ' it' → logprob: -2.132025718688965
    5. ' to' → logprob: -3.132025718688965
    6. 'this' → logprob: -3.257025718688965
    7. 'it' → logprob: -3.632025718688965
    8. ' them' → logprob: -4.507025718688965
    9. 'to' → logprob: -5.382025718688965
    10. ' code' → logprob: -5.882025718688965

Token 756: ' and' (ID: 326)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2448120415210724
    2. '<|end|>' → logprob: -2.61981201171875
    3. '<|end|>' → logprob: -2.86981201171875
    4. '       ' → logprob: -3.99481201171875
    5. ',' → logprob: -4.74481201171875
    6. ' lines' → logprob: -4.86981201171875
    7. '   ' → logprob: -5.11981201171875
    8. ')' → logprob: -5.36981201171875
    9. '...' → logprob: -5.36981201171875
    10. ' for' → logprob: -5.49481201171875

Token 757: ' solve' (ID: 17722)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.9412906169891357
    2. 'solve' → logprob: -1.3162906169891357
    3. 'find' → logprob: -1.6912906169891357
    4. ' solve' → logprob: -2.4412906169891357
    5. 'return' → logprob: -3.4412906169891357
    6. '#' → logprob: -4.066290855407715
    7. ' return' → logprob: -4.691290855407715
    8. 'import' → logprob: -6.191290855407715
    9. ' check' → logprob: -6.441290855407715
    10. 'check' → logprob: -6.691290855407715

Token 758: ' simultaneously' (ID: 38328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6605058312416077
    2. ' for' → logprob: -1.410505771636963
    3. ' lines' → logprob: -1.910505771636963
    4. 'import' → logprob: -3.660505771636963
    5. ' x' → logprob: -4.285505771636963
    6. ' to' → logprob: -5.035505771636963
    7. 'x' → logprob: -5.285505771636963
    8. ' from' → logprob: -5.660505771636963
    9. ' n' → logprob: -5.660505771636963
    10. '#' → logprob: -5.910505771636963

Token 759: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04939975589513779
    2. ' lines' → logprob: -4.2993998527526855
    3. '
' → logprob: -4.5493998527526855
    4. '<|end|>' → logprob: -4.6743998527526855
    5. 'import' → logprob: -5.6743998527526855
    6. ',' → logprob: -5.6743998527526855
    7. '        
' → logprob: -6.1743998527526855
    8. ')' → logprob: -7.1743998527526855
    9. '#' → logprob: -7.1743998527526855
    10. 'from' → logprob: -7.4243998527526855

Token 760: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005225813947618008
    2. ' A' → logprob: -5.755225658416748
    3. 'A' → logprob: -7.130225658416748
    4. ' lines' → logprob: -7.505225658416748
    5. 'import' → logprob: -8.380226135253906
    6. '        
' → logprob: -9.005226135253906
    7. 'n' → logprob: -9.630226135253906
    8. '```' → logprob: -10.130226135253906
    9. 'from' → logprob: -10.255226135253906
    10. '#' → logprob: -10.255226135253906

Token 761: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8692151308059692
    2. ' A' → logprob: -0.9942151308059692
    3. '       ' → logprob: -2.1192150115966797
    4. ' lines' → logprob: -3.2442150115966797
    5. 'results' → logprob: -4.61921501159668
    6. ' results' → logprob: -5.11921501159668
    7. ' solutions' → logprob: -5.36921501159668
    8. ' res' → logprob: -5.36921501159668
    9. 'result' → logprob: -5.61921501159668
    10. ' result' → logprob: -5.74421501159668

Token 762: ' f' (ID: 285)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.48871031403541565
    2. 'A' → logprob: -1.9887102842330933
    3. '       ' → logprob: -1.9887102842330933
    4. ' lines' → logprob: -2.863710403442383
    5. ' solutions' → logprob: -4.488710403442383
    6. ' results' → logprob: -4.738710403442383
    7. 'results' → logprob: -5.363710403442383
    8. ' result' → logprob: -5.738710403442383
    9. ' equations' → logprob: -5.863710403442383
    10. ' coeff' → logprob: -6.238710403442383

Token 763: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13520480692386627
    2. '_i' → logprob: -2.135204792022705
    3. 's' → logprob: -5.260204792022705
    4. '_
' → logprob: -6.885204792022705
    5. 'i' → logprob: -7.885204792022705
    6. '_s' → logprob: -8.010205268859863
    7. '1' → logprob: -8.135205268859863
    8. '0' → logprob: -8.885205268859863
    9. ' =' → logprob: -9.010205268859863
    10. '   ' → logprob: -9.260205268859863

Token 764: '(x' (ID: 4061)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42833301424980164
    2. '_results' → logprob: -2.928333044052124
    3. '_points' → logprob: -3.178333044052124
    4. '_s' → logprob: -3.303333044052124
    5. 'for' → logprob: -3.428333044052124
    6. '_tokens' → logprob: -3.553333044052124
    7. '_lines' → logprob: -3.553333044052124
    8. '_values' → logprob: -3.678333044052124
    9. ' =' → logprob: -3.928333044052124
    10. '_coeff' → logprob: -4.053332805633545

Token 765: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25309455394744873
    2. ',y' → logprob: -1.5030945539474487
    3. ',
' → logprob: -7.628094673156738
    4. ' ,' → logprob: -8.003094673156738
    5. ',x' → logprob: -9.253094673156738
    6. ')' → logprob: -9.628094673156738
    7. '_,' → logprob: -10.628094673156738
    8. '
' → logprob: -10.753094673156738
    9. '   ' → logprob: -11.128094673156738
    10. '=' → logprob: -11.378094673156738

Token 766: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011513189412653446
    2. '):' → logprob: -5.0115132331848145
    3. ')=' → logprob: -5.6365132331848145
    4. 's' → logprob: -7.7615132331848145
    5. ' =' → logprob: -8.511512756347656
    6. 'for' → logprob: -8.886512756347656
    7. '):
' → logprob: -8.886512756347656
    8. '=' → logprob: -9.761512756347656
    9. ':' → logprob: -10.011512756347656
    10. ' )' → logprob: -10.386512756347656

Token 767: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1759651154279709
    2. ' =' → logprob: -2.4259650707244873
    3. '=' → logprob: -3.4259650707244873
    4. 'for' → logprob: -4.550965309143066
    5. 'results' → logprob: -4.675965309143066
    6. '_results' → logprob: -5.550965309143066
    7. ' for' → logprob: -5.800965309143066
    8. '_lines' → logprob: -6.050965309143066
    9. ' s' → logprob: -6.175965309143066
    10. '_points' → logprob: -6.300965309143066

Token 768: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5542635321617126
    2. '(A' → logprob: -1.8042635917663574
    3. ' (' → logprob: -2.5542635917663574
    4. '(lambda' → logprob: -2.8042635917663574
    5. 'lambda' → logprob: -2.9292635917663574
    6. '((' → logprob: -3.6792635917663574
    7. ' ' → logprob: -4.554263591766357
    8. '(self' → logprob: -4.554263591766357
    9. ' lambda' → logprob: -5.304263591766357
    10. '(' → logprob: -5.304263591766357

Token 769: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.546127438545227
    2. '(lambda' → logprob: -2.0461273193359375
    3. 'lambda' → logprob: -2.2961273193359375
    4. '(A' → logprob: -2.5461273193359375
    5. '[]' → logprob: -3.4211273193359375
    6. '(' → logprob: -3.7961273193359375
    7. '(self' → logprob: -4.4211273193359375
    8. '(
' → logprob: -4.6711273193359375
    9. '[]
' → logprob: -5.0461273193359375
    10. '((' → logprob: -5.1711273193359375

Token 770: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00431677233427763
    2. ' for' → logprob: -6.379316806793213
    3. ',' → logprob: -7.004316806793213
    4. 'for' → logprob: -7.879316806793213
    5. '<|end|>' → logprob: -8.379316329956055
    6. ')' → logprob: -9.004316329956055
    7. ' =' → logprob: -9.129316329956055
    8. 'import' → logprob: -9.129316329956055
    9. '<|end|>' → logprob: -9.379316329956055
    10. '   ' → logprob: -9.379316329956055

Token 771: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016312669031322002
    2. ' i' → logprob: -6.501631259918213
    3. 'all' → logprob: -9.251631736755371
    4. 'each' → logprob: -11.251631736755371
    5. ' all' → logprob: -11.376631736755371
    6. '   ' → logprob: -13.001631736755371
    7. ' ' → logprob: -13.126631736755371
    8. '1' → logprob: -13.876631736755371
    9. '	i' → logprob: -14.376631736755371
    10. '```' → logprob: -14.501631736755371

Token 772: '=' (ID: 28)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08217398077249527
    2. 'in' → logprob: -2.582174062728882
    3. '=' → logprob: -6.332173824310303
    4. 'i' → logprob: -7.457173824310303
    5. '1' → logprob: -7.957173824310303
    6. ' i' → logprob: -8.207174301147461
    7. 'from' → logprob: -9.457174301147461
    8. ' ' → logprob: -9.957174301147461
    9. 's' → logprob: -10.082174301147461
    10. '
' → logprob: -10.082174301147461

Token 773: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009602494537830353
    2. 'range' → logprob: -5.3846025466918945
    3. ' range' → logprob: -5.3846025466918945
    4. ' ' → logprob: -7.8846025466918945
    5. '2' → logprob: -12.009602546691895
    6. '
' → logprob: -16.009601593017578
    7. '   ' → logprob: -16.509601593017578
    8. '(range' → logprob: -16.884601593017578
    9. ' in' → logprob: -17.009601593017578
    10. '	range' → logprob: -17.259601593017578

Token 774: ',...' (ID: 35229)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3031027317047119
    2. ' to' → logprob: -1.428102731704712
    3. 'to' → logprob: -4.178102493286133
    4. ',n' → logprob: -5.928102493286133
    5. ',
' → logprob: -6.553102493286133
    6. '..' → logprob: -8.178102493286133
    7. '<|end|>' → logprob: -8.178102493286133
    8. ':' → logprob: -8.303102493286133
    9. ' ,' → logprob: -8.428102493286133
    10. ',...' → logprob: -8.553102493286133

Token 775: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30758902430534363
    2. ',n' → logprob: -1.557589054107666
    3. ' to' → logprob: -3.182589054107666
    4. 'n' → logprob: -5.432589054107666
    5. 'to' → logprob: -6.057589054107666
    6. '...' → logprob: -6.432589054107666
    7. ' n' → logprob: -7.182589054107666
    8. '       ' → logprob: -7.307589054107666
    9. ' ,' → logprob: -7.557589054107666
    10. '<|end|>' → logprob: -7.557589054107666

Token 776: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007615032605826855
    2. ' n' → logprob: -4.882615089416504
    3. '
' → logprob: -12.382615089416504
    4. '(n' → logprob: -13.507615089416504
    5. '	n' → logprob: -14.007615089416504
    6. '```' → logprob: -14.757615089416504
    7. '{' → logprob: -14.882615089416504
    8. '   ' → logprob: -15.132615089416504
    9. '[n' → logprob: -15.257615089416504
    10. '`' → logprob: -15.257615089416504

Token 777: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20851951837539673
    2. ':' → logprob: -2.583519458770752
    3. 'for' → logprob: -3.708519458770752
    4. '   ' → logprob: -4.333519458770752
    5. ',' → logprob: -4.333519458770752
    6. '-' → logprob: -4.458519458770752
    7. ')' → logprob: -4.583519458770752
    8. '
' → logprob: -4.583519458770752
    9. ' for' → logprob: -4.708519458770752
    10. '           ' → logprob: -5.583519458770752

Token 778: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.375001907348633
    3. '-' → logprob: -14.375001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '2' → logprob: -18.375001907348633
    6. ' -' → logprob: -18.750001907348633
    7. '  ' → logprob: -19.000001907348633
    8. ')' → logprob: -19.250001907348633
    9. '
' → logprob: -19.500001907348633
    10. '```' → logprob: -19.500001907348633

Token 779: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005460355430841446
    2. '        
' → logprob: -6.630460262298584
    3. ' lines' → logprob: -6.755460262298584
    4. 'import' → logprob: -6.755460262298584
    5. '
' → logprob: -7.380460262298584
    6. '<|end|>' → logprob: -8.380460739135742
    7. ',' → logprob: -8.505460739135742
    8. '   ' → logprob: -9.380460739135742
    9. 'from' → logprob: -9.630460739135742
    10. '#' → logprob: -9.630460739135742

Token 780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010131607996299863
    2. '        
' → logprob: -7.626013278961182
    3. ' lines' → logprob: -8.376012802124023
    4. '
' → logprob: -9.126012802124023
    5. 'import' → logprob: -9.376012802124023
    6. ',' → logprob: -11.001012802124023
    7. '```' → logprob: -11.126012802124023
    8. 'from' → logprob: -11.626012802124023
    9. '   ' → logprob: -11.626012802124023
    10. '           ' → logprob: -12.126012802124023

Token 781: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33846917748451233
    2. 'A' → logprob: -1.46346914768219
    3. ' A' → logprob: -3.9634692668914795
    4. 'results' → logprob: -4.3384690284729
    5. ' solutions' → logprob: -4.9634690284729
    6. 'solutions' → logprob: -5.4634690284729
    7. ' lines' → logprob: -5.9634690284729
    8. 'a' → logprob: -6.3384690284729
    9. 'import' → logprob: -6.4634690284729
    10. ' results' → logprob: -6.8384690284729

Token 782: ' Expand' (ID: 81299)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.040962230414152145
    2. '#' → logprob: -4.290962219238281
    3. 'def' → logprob: -5.290962219238281
    4. 'coeff' → logprob: -5.415962219238281
    5. 'from' → logprob: -5.540962219238281
    6. 'results' → logprob: -5.790962219238281
    7. ' A' → logprob: -5.915962219238281
    8. 'import' → logprob: -7.040962219238281
    9. 'As' → logprob: -7.165962219238281
    10. '   ' → logprob: -7.165962219238281

Token 783: ' f' (ID: 285)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7855973839759827
    2. ' for' → logprob: -1.535597324371338
    3. 'for' → logprob: -1.910597324371338
    4. 'f' → logprob: -3.035597324371338
    5. ' lines' → logprob: -3.660597324371338
    6. ' f' → logprob: -4.035597324371338
    7. 'A' → logprob: -4.160597324371338
    8. ' A' → logprob: -4.285597324371338
    9. 'i' → logprob: -4.410597324371338
    10. ' i' → logprob: -5.035597324371338

Token 784: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.015395511873066425
    2. 'for' → logprob: -5.015395641326904
    3. 'i' → logprob: -5.765395641326904
    4. 'def' → logprob: -6.390395641326904
    5. '_' → logprob: -6.765395641326904
    6. 'or' → logprob: -7.765395641326904
    7. ' =' → logprob: -7.890395641326904
    8. ' for' → logprob: -7.890395641326904
    9. 's' → logprob: -8.515395164489746
    10. '       ' → logprob: -8.640395164489746

Token 785: ':

' (ID: 1402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4504540264606476
    2. '_i' → logprob: -2.450453996658325
    3. '_results' → logprob: -2.700453996658325
    4. '_lines' → logprob: -3.075453996658325
    5. '_s' → logprob: -3.200453996658325
    6. '_terms' → logprob: -3.575453996658325
    7. '_tokens' → logprob: -4.450454235076904
    8. '_values' → logprob: -4.575454235076904
    9. ' =' → logprob: -4.575454235076904
    10. '_' → logprob: -4.950454235076904

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024963367730379105
    2. ' for' → logprob: -4.14996337890625
    3. ' lines' → logprob: -6.02496337890625
    4. 'for' → logprob: -6.39996337890625
    5. 'results' → logprob: -6.64996337890625
    6. ' results' → logprob: -6.89996337890625
    7. '   ' → logprob: -7.39996337890625
    8. 'def' → logprob: -8.02496337890625
    9. ' solutions' → logprob: -8.14996337890625
    10. 'result' → logprob: -8.27496337890625

Token 787: ' #' (ID: 1069)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.6339066624641418
    2. '       ' → logprob: -1.633906602859497
    3. 'result' → logprob: -2.508906602859497
    4. 'solutions' → logprob: -2.758906602859497
    5. ' results' → logprob: -3.258906602859497
    6. 'res' → logprob: -3.383906602859497
    7. ' solutions' → logprob: -3.758906602859497
    8. 'A' → logprob: -4.633906841278076
    9. '   ' → logprob: -5.258906841278076
    10. ' result' → logprob: -5.633906841278076

Token 788: ' (' (ID: 350)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.6288043260574341
    2. 'result' → logprob: -2.1288042068481445
    3. 'solutions' → logprob: -2.1288042068481445
    4. 'res' → logprob: -2.3788042068481445
    5. 'A' → logprob: -2.8788042068481445
    6. 'def' → logprob: -4.1288042068481445
    7. 'lines' → logprob: -4.7538042068481445
    8. 'As' → logprob: -5.0038042068481445
    9. 'f' → logprob: -5.1288042068481445
    10. '   ' → logprob: -5.1288042068481445

Token 789: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06544112414121628
    2. 'A' → logprob: -3.315441131591797
    3. '(self' → logprob: -3.940441131591797
    4. '(A' → logprob: -5.190441131591797
    5. 'Ai' → logprob: -7.815441131591797
    6. '((' → logprob: -8.065441131591797
    7. 'line' → logprob: -8.190441131591797
    8. 'lambda' → logprob: -8.940441131591797
    9. ' self' → logprob: -9.190441131591797
    10. 'def' → logprob: -9.190441131591797

Token 790: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00013977376511320472
    2. 'i' → logprob: -9.000140190124512
    3. '[i' → logprob: -11.875140190124512
    4. '_' → logprob: -12.375140190124512
    5. 'self' → logprob: -13.750140190124512
    6. '_j' → logprob: -13.750140190124512
    7. '```' → logprob: -14.250140190124512
    8. '}_' → logprob: -14.750140190124512
    9. '
' → logprob: -15.625140190124512
    10. 's' → logprob: -15.750140190124512

Token 791: ' x' (ID: 1215)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1042887419462204
    2. '*' → logprob: -2.8542888164520264
    3. ' x' → logprob: -4.479288578033447
    4. 'x' → logprob: -4.604288578033447
    5. '_i' → logprob: -4.854288578033447
    6. '*x' → logprob: -5.479288578033447
    7. '_' → logprob: -5.979288578033447
    8. 'i' → logprob: -6.479288578033447
    9. ' ' → logprob: -7.479288578033447
    10. '   ' → logprob: -7.479288578033447

Token 792: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5305481553077698
    2. '*' → logprob: -2.030548095703125
    3. ' x' → logprob: -2.030548095703125
    4. ' +' → logprob: -2.530548095703125
    5. 'x' → logprob: -3.530548095703125
    6. '+' → logprob: -4.155548095703125
    7. ')' → logprob: -4.530548095703125
    8. ' ' → logprob: -5.155548095703125
    9. '*x' → logprob: -5.905548095703125
    10. '   ' → logprob: -6.530548095703125

Token 793: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.23305262625217438
    2. ' B' → logprob: -1.6080526113510132
    3. 'self' → logprob: -4.983052730560303
    4. ' self' → logprob: -7.233052730560303
    5. ' ' → logprob: -11.733052253723145
    6. ')' → logprob: -12.233052253723145
    7. '`' → logprob: -12.733052253723145
    8. '_B' → logprob: -12.858052253723145
    9. '(B' → logprob: -12.983052253723145
    10. '```' → logprob: -12.983052253723145

Token 794: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.011174440383911133
    2. '_' → logprob: -4.511174201965332
    3. ' _' → logprob: -9.386174201965332
    4. 'i' → logprob: -10.261174201965332
    5. '_
' → logprob: -13.261174201965332
    6. ')' → logprob: -13.636174201965332
    7. '_j' → logprob: -14.136174201965332
    8. ')_' → logprob: -14.136174201965332
    9. '```' → logprob: -14.511174201965332
    10. ' i' → logprob: -14.886174201965332

Token 795: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.05511888489127159
    2. 'y' → logprob: -2.9301187992095947
    3. '*y' → logprob: -9.680118560791016
    4. '*' → logprob: -9.805118560791016
    5. ' ' → logprob: -10.180118560791016
    6. ')' → logprob: -10.680118560791016
    7. ' *' → logprob: -11.180118560791016
    8. ' ' → logprob: -11.430118560791016
    9. '```' → logprob: -12.430118560791016
    10. '   ' → logprob: -12.680118560791016

Token 796: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2521910071372986
    2. '+' → logprob: -1.5021910667419434
    3. ')' → logprob: -9.127190589904785
    4. '```' → logprob: -10.002190589904785
    5. '+C' → logprob: -10.752190589904785
    6. ')^' → logprob: -10.752190589904785
    7. '+)' → logprob: -11.252190589904785
    8. '   ' → logprob: -11.502190589904785
    9. ' +
' → logprob: -12.127190589904785
    10. ' ' → logprob: -12.252190589904785

Token 797: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0013369088992476463
    2. ' C' → logprob: -6.626337051391602
    3. 'self' → logprob: -12.376337051391602
    4. ')' → logprob: -13.626337051391602
    5. 'B' → logprob: -13.626337051391602
    6. ' ' → logprob: -14.001337051391602
    7. '+C' → logprob: -14.126337051391602
    8. '```' → logprob: -14.126337051391602
    9. '+' → logprob: -14.751337051391602
    10. '   ' → logprob: -15.001337051391602

Token 798: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0071285502053797245
    2. '_' → logprob: -5.007128715515137
    3. 'i' → logprob: -8.507128715515137
    4. ' _' → logprob: -9.382128715515137
    5. '_
' → logprob: -10.132128715515137
    6. ')_' → logprob: -10.257128715515137
    7. '```' → logprob: -11.632128715515137
    8. ')' → logprob: -11.757128715515137
    9. '_j' → logprob: -11.882128715515137
    10. '
' → logprob: -12.257128715515137

Token 799: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.14254418015480042
    2. ')' → logprob: -2.1425442695617676
    3. ')^' → logprob: -4.267544269561768
    4. '   ' → logprob: -8.01754379272461
    5. '")' → logprob: -8.14254379272461
    6. '**' → logprob: -8.26754379272461
    7. '```' → logprob: -8.39254379272461
    8. ' )' → logprob: -9.01754379272461
    9. '`)' → logprob: -9.89254379272461
    10. '``' → logprob: -10.64254379272461

Token 800: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026848804554902017
    2. ' ' → logprob: -8.500268936157227
    3. '**' → logprob: -10.000268936157227
    4. '```' → logprob: -11.875268936157227
    5. '(' → logprob: -12.500268936157227
    6. ')' → logprob: -13.000268936157227
    7. '
' → logprob: -13.500268936157227
    8. '*' → logprob: -14.000268936157227
    9. '`' → logprob: -14.000268936157227
    10. '²' → logprob: -14.375268936157227

Token 801: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.027202928438782692
    2. '-' → logprob: -3.777202844619751
    3. ' =' → logprob: -5.90220308303833
    4. '=' → logprob: -6.90220308303833
    5. '#' → logprob: -9.152202606201172
    6. ')' → logprob: -10.652202606201172
    7. ' -=' → logprob: -11.152202606201172
    8. ' ' → logprob: -11.277202606201172
    9. '
' → logprob: -11.777202606201172
    10. '       ' → logprob: -11.902202606201172

Token 802: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.12590162456035614
    2. ' (' → logprob: -2.250901699066162
    3. '(self' → logprob: -4.500901699066162
    4. '((' → logprob: -6.875901699066162
    5. '(' → logprob: -7.250901699066162
    6. 'self' → logprob: -10.000901222229004
    7. '(B' → logprob: -10.125901222229004
    8. '   ' → logprob: -11.500901222229004
    9. ' ' → logprob: -11.875901222229004
    10. ' ((' → logprob: -12.250901222229004

Token 803: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10040400177240372
    2. 'A' → logprob: -2.4754040241241455
    3. '(self' → logprob: -4.725403785705566
    4. '(A' → logprob: -6.100403785705566
    5. ' self' → logprob: -8.975403785705566
    6. ' (' → logprob: -10.100403785705566
    7. '(' → logprob: -10.975403785705566
    8. ')' → logprob: -11.225403785705566
    9. '_A' → logprob: -11.350403785705566
    10. '(
' → logprob: -11.600403785705566

Token 804: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000605933484621346
    2. '0' → logprob: -7.500606060028076
    3. ' _' → logprob: -10.750605583190918
    4. '_i' → logprob: -11.250605583190918
    5. '[' → logprob: -12.375605583190918
    6. '_
' → logprob: -12.625605583190918
    7. '```' → logprob: -13.375605583190918
    8. '
' → logprob: -13.875605583190918
    9. '__' → logprob: -14.125605583190918
    10. '}_' → logprob: -14.375605583190918

Token 805: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03813467174768448
    2. '_' → logprob: -3.2881345748901367
    3. '
' → logprob: -11.038134574890137
    4. ' ' → logprob: -11.038134574890137
    5. '_i' → logprob: -11.163134574890137
    6. '[' → logprob: -11.288134574890137
    7. '```' → logprob: -11.663134574890137
    8. 'i' → logprob: -11.913134574890137
    9. 'self' → logprob: -12.913134574890137
    10. '`' → logprob: -13.163134574890137

Token 806: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0702168419957161
    2. 'x' → logprob: -2.6952168941497803
    3. '*' → logprob: -9.94521713256836
    4. '```' → logprob: -9.94521713256836
    5. ')' → logprob: -10.07021713256836
    6. ' ' → logprob: -10.69521713256836
    7. '*x' → logprob: -10.69521713256836
    8. ' ' → logprob: -10.94521713256836
    9. ' *' → logprob: -11.32021713256836
    10. '(x' → logprob: -11.94521713256836

Token 807: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42873892188072205
    2. ' +' → logprob: -1.0537389516830444
    3. '<|end|>' → logprob: -11.303738594055176
    4. '+B' → logprob: -11.803738594055176
    5. '```' → logprob: -12.303738594055176
    6. '+
' → logprob: -12.928738594055176
    7. ' ' → logprob: -13.303738594055176
    8. ' +
' → logprob: -13.678738594055176
    9. '*' → logprob: -13.803738594055176
    10. ')' → logprob: -13.928738594055176

Token 808: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008636788465082645
    2. ' B' → logprob: -4.758636951446533
    3. 'self' → logprob: -12.008636474609375
    4. ' ' → logprob: -12.633636474609375
    5. '
' → logprob: -12.883636474609375
    6. '[' → logprob: -13.633636474609375
    7. 'Line' → logprob: -13.758636474609375
    8. '...' → logprob: -14.133636474609375
    9. '(' → logprob: -14.258636474609375
    10. ')' → logprob: -14.383636474609375

Token 809: '_' (ID: 62)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.35239946842193604
    2. '_' → logprob: -1.227399468421936
    3. '_B' → logprob: -6.7273993492126465
    4. 'i' → logprob: -6.9773993492126465
    5. '0' → logprob: -7.6023993492126465
    6. ' _' → logprob: -7.9773993492126465
    7. '_j' → logprob: -8.602399826049805
    8. '-' → logprob: -8.977399826049805
    9. '```' → logprob: -8.977399826049805
    10. '_
' → logprob: -9.352399826049805

Token 810: '0' (ID: 15)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.21591393649578094
    2. '0' → logprob: -1.8409138917922974
    3. '_' → logprob: -4.090913772583008
    4. '_B' → logprob: -4.340913772583008
    5. ' B' → logprob: -5.715913772583008
    6. ' ' → logprob: -7.465913772583008
    7. 'y' → logprob: -8.090913772583008
    8. '_i' → logprob: -8.090913772583008
    9. '```' → logprob: -8.465913772583008
    10. 'i' → logprob: -8.840913772583008

Token 811: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.06995132565498352
    2. 'y' → logprob: -2.694951295852661
    3. ')' → logprob: -13.319951057434082
    4. ' ' → logprob: -13.569951057434082
    5. '_y' → logprob: -13.819951057434082
    6. ' ' → logprob: -14.132451057434082
    7. ',' → logprob: -14.257451057434082
    8. ',y' → logprob: -14.319951057434082
    9. '```' → logprob: -14.319951057434082
    10. 'line' → logprob: -14.507451057434082

Token 812: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12696905434131622
    2. '+' → logprob: -2.1269690990448
    3. ' ' → logprob: -11.126969337463379
    4. '+y' → logprob: -11.751969337463379
    5. ' y' → logprob: -12.376969337463379
    6. 'y' → logprob: -12.501969337463379
    7. ')' → logprob: -13.376969337463379
    8. ' -' → logprob: -13.376969337463379
    9. '<|end|>' → logprob: -13.376969337463379
    10. '```' → logprob: -14.001969337463379

Token 813: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.012007187120616436
    2. ' C' → logprob: -4.512007236480713
    3. 'y' → logprob: -7.012007236480713
    4. ' y' → logprob: -10.637006759643555
    5. ' ' → logprob: -11.887006759643555
    6. ')' → logprob: -12.137006759643555
    7. '```' → logprob: -12.887006759643555
    8. 'self' → logprob: -13.012006759643555
    9. '_C' → logprob: -13.012006759643555
    10. '
' → logprob: -13.262006759643555

Token 814: '_' (ID: 62)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.47641289234161377
    2. '_' → logprob: -0.9764128923416138
    3. ' _' → logprob: -7.226412773132324
    4. '0' → logprob: -7.601412773132324
    5. 'y' → logprob: -8.101412773132324
    6. '_)' → logprob: -8.351412773132324
    7. ')_' → logprob: -9.101412773132324
    8. ')' → logprob: -9.226412773132324
    9. 'i' → logprob: -9.351412773132324
    10. '_y' → logprob: -9.726412773132324

Token 815: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007672215579077601
    2. '_' → logprob: -7.625767230987549
    3. 'i' → logprob: -8.87576675415039
    4. 'C' → logprob: -9.75076675415039
    5. '_i' → logprob: -9.75076675415039
    6. ' ' → logprob: -12.00076675415039
    7. '_C' → logprob: -12.12576675415039
    8. 'y' → logprob: -13.62576675415039
    9. '```' → logprob: -13.62576675415039
    10. '   ' → logprob: -13.75076675415039

Token 816: ')^' (ID: 73602)
  Prédit: ')^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')^' → logprob: -0.10803437232971191
    2. ')**' → logprob: -2.483034372329712
    3. ')' → logprob: -3.983034372329712
    4. '```' → logprob: -8.858034133911133
    5. ' )' → logprob: -10.483034133911133
    6. '')' → logprob: -10.608034133911133
    7. '#' → logprob: -10.608034133911133
    8. '`)' → logprob: -11.108034133911133
    9. '   ' → logprob: -11.358034133911133
    10. '")' → logprob: -11.358034133911133

Token 817: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.64839569455944e-05
    2. ' ' → logprob: -10.125076293945312
    3. '**' → logprob: -11.625076293945312
    4. '
' → logprob: -11.875076293945312
    5. ')' → logprob: -12.250076293945312
    6. '(' → logprob: -12.500076293945312
    7. '{' → logprob: -12.750076293945312
    8. '=' → logprob: -13.250076293945312
    9. '```' → logprob: -13.375076293945312
    10. '   ' → logprob: -14.250076293945312

Token 818: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39496511220932007
    2. ' for' → logprob: -2.394965171813965
    3. '=' → logprob: -2.519965171813965
    4. ' =' → logprob: -2.519965171813965
    5. 'for' → logprob: -2.894965171813965
    6. ':' → logprob: -5.019965171813965
    7. ' lines' → logprob: -6.144965171813965
    8. '
' → logprob: -6.394965171813965
    9. ',' → logprob: -6.894965171813965
    10. '        
' → logprob: -7.019965171813965

Token 819: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05520022660493851
    2. '"' → logprob: -3.8052003383636475
    3. ' ' → logprob: -3.8052003383636475
    4. ' f' → logprob: -5.805200099945068
    5. ' (' → logprob: -6.055200099945068
    6. '(' → logprob: -7.055200099945068
    7. 'f' → logprob: -7.180200099945068
    8. '((' → logprob: -8.055200576782227
    9. '[]' → logprob: -8.555200576782227
    10. '[' → logprob: -8.555200576782227

Token 820: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007059415802359581
    2. '((' → logprob: -5.257059574127197
    3. '(A' → logprob: -6.507059574127197
    4. '(' → logprob: -8.507059097290039
    5. '(
' → logprob: -10.382059097290039
    6. '(self' → logprob: -10.507059097290039
    7. ' ' → logprob: -10.507059097290039
    8. ' (' → logprob: -11.132059097290039
    9. ' ((' → logprob: -12.007059097290039
    10. '(((' → logprob: -12.132059097290039

Token 821: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022670065984129906
    2. '\n' → logprob: -4.397670269012451
    3. '
' → logprob: -5.772670269012451
    4. '<|end|>' → logprob: -6.147670269012451
    5. '        
' → logprob: -6.897670269012451
    6. '\' → logprob: -7.022670269012451
    7. ' for' → logprob: -7.022670269012451
    8. '   ' → logprob: -7.897670269012451
    9. 'for' → logprob: -8.147669792175293
    10. ',' → logprob: -8.147669792175293

Token 822: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006251106387935579
    2. '        
' → logprob: -8.375624656677246
    3. ',' → logprob: -9.500624656677246
    4. '           ' → logprob: -10.000624656677246
    5. ')' → logprob: -10.000624656677246
    6. '   ' → logprob: -10.125624656677246
    7. '\n' → logprob: -10.625624656677246
    8. ' =' → logprob: -10.750624656677246
    9. '  
' → logprob: -10.875624656677246
    10. '
' → logprob: -11.125624656677246

Token 823: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020629495847970247
    2. '        
' → logprob: -7.752062797546387
    3. '\n' → logprob: -8.127062797546387
    4. '
' → logprob: -8.252062797546387
    5. ' for' → logprob: -8.627062797546387
    6. '   ' → logprob: -8.877062797546387
    7. ',' → logprob: -9.002062797546387
    8. '<|end|>' → logprob: -9.002062797546387
    9. ')' → logprob: -9.752062797546387
    10. '           ' → logprob: -9.877062797546387

Token 824: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030384398996829987
    2. ' for' → logprob: -6.25303840637207
    3. 'for' → logprob: -8.00303840637207
    4. '   ' → logprob: -9.12803840637207
    5. 'n' → logprob: -9.25303840637207
    6. '        
' → logprob: -9.37803840637207
    7. '           ' → logprob: -9.62803840637207
    8. ',' → logprob: -9.62803840637207
    9. '=' → logprob: -10.50303840637207
    10. ')' → logprob: -10.50303840637207

Token 825: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.40591874718666077
    2. '(A' → logprob: -1.4059187173843384
    3. ' (' → logprob: -3.030918836593628
    4. '(self' → logprob: -3.530918836593628
    5. ' ((' → logprob: -4.780918598175049
    6. '(' → logprob: -6.905918598175049
    7. '(
' → logprob: -7.405918598175049
    8. 'self' → logprob: -7.780918598175049
    9. '(((' → logprob: -8.405919075012207
    10. '(x' → logprob: -9.405919075012207

Token 826: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004451008513569832
    2. '(self' → logprob: -5.754450798034668
    3. 'A' → logprob: -6.879450798034668
    4. ' self' → logprob: -8.879450798034668
    5. '(A' → logprob: -9.754450798034668
    6. 'line' → logprob: -11.504450798034668
    7. '   ' → logprob: -12.129450798034668
    8. 'lines' → logprob: -12.504450798034668
    9. ' (' → logprob: -12.629450798034668
    10. '((' → logprob: -12.879450798034668

Token 827: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0003855093673337251
    2. '_' → logprob: -8.250385284423828
    3. '[i' → logprob: -9.375385284423828
    4. 'i' → logprob: -10.375385284423828
    5. 'self' → logprob: -12.875385284423828
    6. '_j' → logprob: -13.125385284423828
    7. '[' → logprob: -14.375385284423828
    8. '{i' → logprob: -14.750385284423828
    9. '}_' → logprob: -14.875385284423828
    10. '*_' → logprob: -15.125385284423828

Token 828: ' x' (ID: 1215)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5987797975540161
    2. '*' → logprob: -1.0987797975540161
    3. 'x' → logprob: -2.8487796783447266
    4. '*x' → logprob: -3.3487796783447266
    5. ' x' → logprob: -3.9737796783447266
    6. ')' → logprob: -6.223779678344727
    7. '*self' → logprob: -7.098779678344727
    8. ' ' → logprob: -7.348779678344727
    9. '   ' → logprob: -7.848779678344727
    10. '**' → logprob: -8.223779678344727

Token 829: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25243517756462097
    2. '+' → logprob: -1.5024352073669434
    3. ')' → logprob: -8.377434730529785
    4. '+B' → logprob: -9.377434730529785
    5. '+
' → logprob: -10.502434730529785
    6. ' +
' → logprob: -10.627434730529785
    7. ')+' → logprob: -10.877434730529785
    8. ' ' → logprob: -11.002434730529785
    9. '+)' → logprob: -11.002434730529785
    10. '   ' → logprob: -11.377434730529785

Token 830: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.030267365276813507
    2. ' B' → logprob: -3.5302674770355225
    3. 'self' → logprob: -7.655267238616943
    4. ' self' → logprob: -10.155267715454102
    5. 'line' → logprob: -13.905267715454102
    6. ' ' → logprob: -14.280267715454102
    7. '(B' → logprob: -14.280267715454102
    8. '_B' → logprob: -15.280267715454102
    9. ' line' → logprob: -15.280267715454102
    10. 'Line' → logprob: -15.280267715454102

Token 831: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.19128531217575073
    2. '_' → logprob: -1.8162853717803955
    3. ' _' → logprob: -4.691285133361816
    4. ')' → logprob: -7.066285133361816
    5. '_j' → logprob: -7.941285133361816
    6. 'i' → logprob: -8.316285133361816
    7. '*' → logprob: -8.316285133361816
    8. '_
' → logprob: -8.941285133361816
    9. ')_' → logprob: -9.316285133361816
    10. '```' → logprob: -9.566285133361816

Token 832: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.008273652754724026
    2. ')' → logprob: -5.133273601531982
    3. 'y' → logprob: -6.133273601531982
    4. ')y' → logprob: -9.63327407836914
    5. ' )' → logprob: -9.75827407836914
    6. ' ' → logprob: -11.63327407836914
    7. ' ' → logprob: -11.75827407836914
    8. ')*' → logprob: -11.88327407836914
    9. '),' → logprob: -12.25827407836914
    10. '*y' → logprob: -12.25827407836914

Token 833: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11296404153108597
    2. '+' → logprob: -2.237964153289795
    3. ')' → logprob: -9.112963676452637
    4. '+C' → logprob: -11.737963676452637
    5. '```' → logprob: -12.237963676452637
    6. ')+' → logprob: -12.612963676452637
    7. ' +
' → logprob: -12.987963676452637
    8. ' ' → logprob: -13.112963676452637
    9. '       ' → logprob: -13.112963676452637
    10. ' ' → logprob: -13.612963676452637

Token 834: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2254919558763504
    2. ' C' → logprob: -1.600492000579834
    3. '+' → logprob: -10.850491523742676
    4. '+C' → logprob: -10.850491523742676
    5. ' ' → logprob: -11.350491523742676
    6. '
' → logprob: -11.600491523742676
    7. ' +' → logprob: -12.537991523742676
    8. ')' → logprob: -12.725491523742676
    9. '```' → logprob: -13.100491523742676
    10. ' ' → logprob: -13.537991523742676

Token 835: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -12.000006675720215
    3. 'i' → logprob: -14.250006675720215
    4. ')' → logprob: -17.50000762939453
    5. '_x' → logprob: -18.00000762939453
    6. ' _' → logprob: -18.12500762939453
    7. '   ' → logprob: -18.12500762939453
    8. '_j' → logprob: -18.37500762939453
    9. '```' → logprob: -18.75000762939453
    10. 'x' → logprob: -19.37500762939453

Token 836: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20555056631565094
    2. ')**' → logprob: -1.7055505514144897
    3. ' )' → logprob: -6.955550670623779
    4. ' +' → logprob: -6.955550670623779
    5. ')^' → logprob: -6.955550670623779
    6. '))' → logprob: -7.205550670623779
    7. '+' → logprob: -8.705550193786621
    8. '+)' → logprob: -9.455550193786621
    9. '   ' → logprob: -9.955550193786621
    10. ')+' → logprob: -10.205550193786621

Token 837: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8525315523147583
    2. ')' → logprob: -1.4775315523147583
    3. ' -' → logprob: -1.7275315523147583
    4. ')**' → logprob: -2.7275314331054688
    5. '+' → logprob: -2.8525314331054688
    6. ' )' → logprob: -3.6025314331054688
    7. '**' → logprob: -4.977531433105469
    8. '-' → logprob: -5.602531433105469
    9. '```' → logprob: -6.477531433105469
    10. '+)' → logprob: -6.477531433105469

Token 838: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.07977105677127838
    2. ' (' → logprob: -2.579771041870117
    3. '(self' → logprob: -7.829771041870117
    4. '((' → logprob: -8.204771041870117
    5. '(' → logprob: -8.704771041870117
    6. '(B' → logprob: -11.454771041870117
    7. ' ' → logprob: -11.954771041870117
    8. '(p' → logprob: -12.704771041870117
    9. ' ((' → logprob: -12.954771041870117
    10. '(_' → logprob: -13.079771041870117

Token 839: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.37001264095306396
    2. '(self' → logprob: -1.370012640953064
    3. ' (' → logprob: -3.7450127601623535
    4. 'A' → logprob: -4.1200127601623535
    5. '(A' → logprob: -4.4950127601623535
    6. ' self' → logprob: -5.6200127601623535
    7. '(' → logprob: -8.245012283325195
    8. '((' → logprob: -9.495012283325195
    9. ' A' → logprob: -9.495012283325195
    10. '(
' → logprob: -11.370012283325195

Token 840: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004590330645442009
    2. '0' → logprob: -5.6295905113220215
    3. '_i' → logprob: -7.0045905113220215
    4. '[' → logprob: -10.754590034484863
    5. 'i' → logprob: -12.004590034484863
    6. ' ' → logprob: -12.129590034484863
    7. ' _' → logprob: -12.129590034484863
    8. '(' → logprob: -12.379590034484863
    9. '_{' → logprob: -12.629590034484863
    10. '_o' → logprob: -12.629590034484863

Token 841: '0' (ID: 15)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6326733231544495
    2. '0' → logprob: -0.7576733231544495
    3. '[' → logprob: -9.757673263549805
    4. ' ' → logprob: -12.257673263549805
    5. '\xe2\x82' → logprob: -13.132673263549805
    6. 'self' → logprob: -13.382673263549805
    7. '```' → logprob: -13.632673263549805
    8. '_i' → logprob: -13.757673263549805
    9. '`' → logprob: -14.382673263549805
    10. '{' → logprob: -14.632673263549805

Token 842: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04323554039001465
    2. 'x' → logprob: -3.1682355403900146
    3. ' ' → logprob: -9.043235778808594
    4. '_x' → logprob: -10.543235778808594
    5. '_' → logprob: -10.793235778808594
    6. '<|end|>' → logprob: -11.168235778808594
    7. ')' → logprob: -11.293235778808594
    8. '```' → logprob: -11.793235778808594
    9. '  ' → logprob: -12.293235778808594
    10. 'space' → logprob: -12.293235778808594

Token 843: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5284954309463501
    2. '+' → logprob: -0.9034954309463501
    3. ' -' → logprob: -5.4034953117370605
    4. '-' → logprob: -7.5284953117370605
    5. ')' → logprob: -8.278495788574219
    6. ' ' → logprob: -11.028495788574219
    7. '```' → logprob: -11.528495788574219
    8. ',' → logprob: -12.028495788574219
    9. '+)' → logprob: -12.153495788574219
    10. '<|end|>' → logprob: -12.403495788574219

Token 844: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12700748443603516
    2. ' B' → logprob: -2.127007484436035
    3. ' ' → logprob: -10.252007484436035
    4. 'Point' → logprob: -10.877007484436035
    5. 'Line' → logprob: -12.377007484436035
    6. ')' → logprob: -12.502007484436035
    7. '  ' → logprob: -12.752007484436035
    8. '0' → logprob: -13.502007484436035
    9. ' line' → logprob: -13.752007484436035
    10. '
' → logprob: -13.752007484436035

Token 845: '_' (ID: 62)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3548442125320435
    2. '_' → logprob: -1.4798442125320435
    3. '0' → logprob: -1.7298442125320435
    4. '_i' → logprob: -2.104844093322754
    5. ' +' → logprob: -2.229844093322754
    6. 'i' → logprob: -2.979844093322754
    7. 'B' → logprob: -3.604844093322754
    8. ' ' → logprob: -4.604844093322754
    9. '+B' → logprob: -5.729844093322754
    10. '  ' → logprob: -5.729844093322754

Token 846: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016588972881436348
    2. 'i' → logprob: -5.391589164733887
    3. '_' → logprob: -5.641589164733887
    4. ')' → logprob: -6.016589164733887
    5. 'y' → logprob: -6.266589164733887
    6. 'B' → logprob: -6.391589164733887
    7. ',' → logprob: -7.516589164733887
    8. '_i' → logprob: -7.766589164733887
    9. ' ' → logprob: -7.891589164733887
    10. '  ' → logprob: -8.516589164733887

Token 847: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.062133267521858215
    2. 'y' → logprob: -2.812133312225342
    3. ')' → logprob: -9.562132835388184
    4. '<|end|>' → logprob: -10.187132835388184
    5. ',' → logprob: -10.937132835388184
    6. ')y' → logprob: -11.062132835388184
    7. ',y' → logprob: -11.937132835388184
    8. '```' → logprob: -12.812132835388184
    9. '	y' → logprob: -12.937132835388184
    10. ' ' → logprob: -13.312132835388184

Token 848: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6415853500366211
    2. '+' → logprob: -0.7665853500366211
    3. 'y' → logprob: -5.266585350036621
    4. ')' → logprob: -6.516585350036621
    5. ' y' → logprob: -6.891585350036621
    6. ' -' → logprob: -7.641585350036621
    7. '+y' → logprob: -7.766585350036621
    8. '-' → logprob: -9.391585350036621
    9. '```' → logprob: -9.391585350036621
    10. ')y' → logprob: -9.641585350036621

Token 849: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.033652618527412415
    2. ' C' → logprob: -3.4086525440216064
    3. ' ' → logprob: -12.533652305603027
    4. ')' → logprob: -14.158652305603027
    5. '   ' → logprob: -14.158652305603027
    6. '  ' → logprob: -14.658652305603027
    7. '	C' → logprob: -14.783652305603027
    8. '_C' → logprob: -14.908652305603027
    9. ' ' → logprob: -15.783652305603027
    10. 'y' → logprob: -15.908652305603027

Token 850: '_' (ID: 62)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7302443981170654
    2. '_i' → logprob: -0.7302443981170654
    3. ' y' → logprob: -4.3552446365356445
    4. 'i' → logprob: -4.7302446365356445
    5. ')' → logprob: -5.6052446365356445
    6. '0' → logprob: -5.8552446365356445
    7. '_' → logprob: -6.1052446365356445
    8. '   ' → logprob: -6.7302446365356445
    9. ',' → logprob: -6.8552446365356445
    10. '_y' → logprob: -7.1052446365356445

Token 851: '0' (ID: 15)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.32050731778144836
    2. 'y' → logprob: -2.320507287979126
    3. '0' → logprob: -2.820507287979126
    4. 'i' → logprob: -3.070507287979126
    5. 'C' → logprob: -3.195507287979126
    6. ')' → logprob: -4.445507526397705
    7. '_C' → logprob: -5.320507526397705
    8. ' y' → logprob: -5.570507526397705
    9. '_' → logprob: -5.820507526397705
    10. ' C' → logprob: -6.445507526397705

Token 852: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09000320732593536
    2. '))' → logprob: -2.590003252029419
    3. ')**' → logprob: -5.71500301361084
    4. ')*(' → logprob: -6.09000301361084
    5. ' )' → logprob: -6.21500301361084
    6. ')((' → logprob: -6.59000301361084
    7. ')*' → logprob: -6.59000301361084
    8. ')(' → logprob: -8.46500301361084
    9. '))*' → logprob: -8.96500301361084
    10. ')))' → logprob: -9.09000301361084

Token 853: ' *
' (ID: 2099)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08044347912073135
    2. '*' → logprob: -2.5804433822631836
    3. '*((' → logprob: -7.580443382263184
    4. ' *
' → logprob: -7.955443382263184
    5. '       ' → logprob: -9.080443382263184
    6. ')' → logprob: -9.205443382263184
    7. '*(' → logprob: -9.330443382263184
    8. ' ' → logprob: -9.455443382263184
    9. ' ((' → logprob: -9.830443382263184
    10. '   ' → logprob: -10.080443382263184

Token 854: '       ' (ID: 309)
  Prédit: ' (('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ((' → logprob: -0.1425699144601822
    2. '((' → logprob: -2.3925700187683105
    3. '       ' → logprob: -3.2675700187683105
    4. '      ' → logprob: -6.6425700187683105
    5. '        ' → logprob: -6.8925700187683105
    6. '    ' → logprob: -8.392569541931152
    7. '               ' → logprob: -9.267569541931152
    8. ' ' → logprob: -9.392569541931152
    9. '          ' → logprob: -9.517569541931152
    10. '     ' → logprob: -9.517569541931152

Token 855: ' #' (ID: 1069)
  Prédit: ' (('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ((' → logprob: -0.1344561129808426
    2. '((' → logprob: -2.134456157684326
    3. '       ' → logprob: -5.259456157684326
    4. '      ' → logprob: -7.259456157684326
    5. ' ' → logprob: -8.134455680847168
    6. '     ' → logprob: -8.384455680847168
    7. ' (' → logprob: -8.634455680847168
    8. '   ' → logprob: -8.884455680847168
    9. '    ' → logprob: -8.884455680847168
    10. '        ' → logprob: -9.134455680847168

Token 856: '  ' (ID: 256)
  Prédit: ' (('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ((' → logprob: -0.05494987964630127
    2. '((' → logprob: -3.0549497604370117
    3. '       ' → logprob: -5.304949760437012
    4. ' (' → logprob: -7.679949760437012
    5. '      ' → logprob: -8.679949760437012
    6. ' ' → logprob: -8.804949760437012
    7. '        ' → logprob: -9.054949760437012
    8. ' ' → logprob: -9.054949760437012
    9. '(' → logprob: -9.429949760437012
    10. '    ' → logprob: -9.929949760437012

Token 857: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' (adapté à ' ((') → logprob: -0.4313182532787323
    2. ' ((' → logprob: -1.0563182830810547
    3. ' ' → logprob: -6.556318283081055
    4. '  ' → logprob: -7.431318283081055
    5. '      ' → logprob: -8.556318283081055
    6. '   ' → logprob: -9.181318283081055
    7. '    ' → logprob: -9.556318283081055
    8. '       ' → logprob: -9.806318283081055
    9. '     ' → logprob: -9.931318283081055
    10. '(' → logprob: -10.431318283081055

Token 858: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.052551254630088806
    2. '(A' → logprob: -3.05255126953125
    3. 'self' → logprob: -5.80255126953125
    4. ' (' → logprob: -8.05255126953125
    5. '(self' → logprob: -8.17755126953125
    6. ' A' → logprob: -9.05255126953125
    7. 'Ai' → logprob: -9.55255126953125
    8. 'line' → logprob: -10.30255126953125
    9. '(
' → logprob: -10.67755126953125
    10. '   ' → logprob: -10.92755126953125

Token 859: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0029042549431324005
    2. '_' → logprob: -5.877904415130615
    3. 'i' → logprob: -9.377903938293457
    4. '0' → logprob: -12.377903938293457
    5. '_
' → logprob: -13.002903938293457
    6. ' _' → logprob: -13.127903938293457
    7. '[i' → logprob: -13.252903938293457
    8. '_)' → logprob: -14.002903938293457
    9. ')' → logprob: -14.502903938293457
    10. '
' → logprob: -15.127903938293457

Token 860: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0036948511842638254
    2. 'x' → logprob: -5.628695011138916
    3. ' ' → logprob: -9.753694534301758
    4. 'space' → logprob: -11.253694534301758
    5. ' space' → logprob: -11.628694534301758
    6. 'token' → logprob: -12.878694534301758
    7. '	x' → logprob: -13.253694534301758
    8. ' ' → logprob: -13.753694534301758
    9. 'def' → logprob: -13.753694534301758
    10. ' *' → logprob: -14.003694534301758

Token 861: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06349124014377594
    2. '+' → logprob: -2.8134913444519043
    3. ' ' → logprob: -7.688491344451904
    4. ' *' → logprob: -7.938491344451904
    5. ' x' → logprob: -8.188490867614746
    6. ' -' → logprob: -8.938490867614746
    7. 'x' → logprob: -9.188490867614746
    8. '<|end|>' → logprob: -9.813490867614746
    9. '*' → logprob: -10.313490867614746
    10. '  ' → logprob: -10.813490867614746

Token 862: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00611909432336688
    2. ' B' → logprob: -5.131119251251221
    3. 'self' → logprob: -9.256118774414062
    4. 'point' → logprob: -10.131118774414062
    5. 'Point' → logprob: -11.881118774414062
    6. 'p' → logprob: -11.881118774414062
    7. ' ' → logprob: -12.381118774414062
    8. ' self' → logprob: -12.756118774414062
    9. '(' → logprob: -12.756118774414062
    10. '  ' → logprob: -13.006118774414062

Token 863: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06780137121677399
    2. '_i' → logprob: -2.9428014755249023
    3. '0' → logprob: -4.692801475524902
    4. 'x' → logprob: -6.442801475524902
    5. 'i' → logprob: -7.442801475524902
    6. ' ' → logprob: -7.817801475524902
    7. '   ' → logprob: -8.567801475524902
    8. 'y' → logprob: -8.692801475524902
    9. ' -' → logprob: -9.192801475524902
    10. ' x' → logprob: -9.317801475524902

Token 864: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07293214648962021
    2. 'y' → logprob: -3.197932243347168
    3. ' x' → logprob: -3.697932243347168
    4. '<|end|>' → logprob: -6.197932243347168
    5. 'x' → logprob: -6.947932243347168
    6. ')' → logprob: -7.197932243347168
    7. ' point' → logprob: -7.947932243347168
    8. ' ' → logprob: -8.072932243347168
    9. ',' → logprob: -9.572932243347168
    10. 'point' → logprob: -9.822932243347168

Token 865: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05959078669548035
    2. '+' → logprob: -2.9345908164978027
    3. ' y' → logprob: -5.559590816497803
    4. 'y' → logprob: -7.434590816497803
    5. ' ' → logprob: -8.934590339660645
    6. '+y' → logprob: -9.809590339660645
    7. '```' → logprob: -11.684590339660645
    8. ' -' → logprob: -11.684590339660645
    9. ')' → logprob: -11.934590339660645
    10. ',' → logprob: -12.059590339660645

Token 866: ' C' (ID: 363)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.14319531619548798
    2. ' B' → logprob: -2.018195390701294
    3. 'y' → logprob: -8.643195152282715
    4. 'C' → logprob: -9.018195152282715
    5. ' ' → logprob: -9.518195152282715
    6. 'self' → logprob: -10.143195152282715
    7. 'point' → logprob: -10.143195152282715
    8. ' y' → logprob: -11.268195152282715
    9. ' C' → logprob: -11.393195152282715
    10. '
' → logprob: -11.893195152282715

Token 867: '_i' (ID: 10853)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3485906720161438
    2. ' y' → logprob: -1.223590612411499
    3. '_y' → logprob: -9.723590850830078
    4. '   ' → logprob: -9.973590850830078
    5. ')' → logprob: -11.598590850830078
    6. ' ' → logprob: -11.848590850830078
    7. '	y' → logprob: -12.098590850830078
    8. '_i' → logprob: -12.848590850830078
    9. '.y' → logprob: -12.848590850830078
    10. ',y' → logprob: -13.473590850830078

Token 868: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0069659012369811535
    2. ' -' → logprob: -5.2569661140441895
    3. '-' → logprob: -7.1319661140441895
    4. ')-(' → logprob: -7.6319661140441895
    5. ' )' → logprob: -8.381965637207031
    6. ')-' → logprob: -8.756965637207031
    7. ' ' → logprob: -10.631965637207031
    8. '   ' → logprob: -11.381965637207031
    9. '-)' → logprob: -12.131965637207031
    10. 'def' → logprob: -12.756965637207031

Token 869: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01843799464404583
    2. '-' → logprob: -4.01843786239624
    3. ' ' → logprob: -8.768438339233398
    4. '  ' → logprob: -9.768438339233398
    5. ' -
' → logprob: -10.643438339233398
    6. '   ' → logprob: -10.768438339233398
    7. ' -(' → logprob: -12.143438339233398
    8. ' +' → logprob: -12.393438339233398
    9. ')-(' → logprob: -12.643438339233398
    10. ')' → logprob: -12.768438339233398

Token 870: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0770203024148941
    2. '(' → logprob: -3.0770204067230225
    3. '(A' → logprob: -3.5770204067230225
    4. ')' → logprob: -11.077020645141602
    5. ' ' → logprob: -11.077020645141602
    6. '(Line' → logprob: -11.077020645141602
    7. ' ' → logprob: -12.452020645141602
    8. '((' → logprob: -12.452020645141602
    9. ',' → logprob: -12.702020645141602
    10. ''' → logprob: -12.952020645141602

Token 871: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018317917361855507
    2. '(A' → logprob: -4.018317699432373
    3. ' A' → logprob: -9.143318176269531
    4. ' (' → logprob: -10.018318176269531
    5. 'self' → logprob: -12.393318176269531
    6. '_A' → logprob: -13.143318176269531
    7. ' ' → logprob: -13.268318176269531
    8. '(' → logprob: -13.393318176269531
    9. '   ' → logprob: -13.518318176269531
    10. ')' → logprob: -13.518318176269531

Token 872: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006865793839097023
    2. '_i' → logprob: -7.5006866455078125
    3. '0' → logprob: -9.125686645507812
    4. ')_' → logprob: -12.000686645507812
    5. ' _' → logprob: -12.125686645507812
    6. '_
' → logprob: -12.375686645507812
    7. '[' → logprob: -13.750686645507812
    8. '_A' → logprob: -14.000686645507812
    9. '_o' → logprob: -14.750686645507812
    10. '_{' → logprob: -14.750686645507812

Token 873: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12718522548675537
    2. '_' → logprob: -2.127185344696045
    3. '_i' → logprob: -9.127184867858887
    4. 'A' → logprob: -10.127184867858887
    5. 'i' → logprob: -10.752184867858887
    6. ' ' → logprob: -11.127184867858887
    7. 'O' → logprob: -11.377184867858887
    8. '[' → logprob: -12.002184867858887
    9. '_line' → logprob: -12.189684867858887
    10. '_A' → logprob: -12.564684867858887

Token 874: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04873236268758774
    2. 'x' → logprob: -3.048732280731201
    3. '_x' → logprob: -9.67373275756836
    4. ')' → logprob: -10.17373275756836
    5. ' ' → logprob: -11.04873275756836
    6. ' ' → logprob: -11.67373275756836
    7. '```' → logprob: -11.79873275756836
    8. '	x' → logprob: -13.67373275756836
    9. ')x' → logprob: -13.67373275756836
    10. '<|end|>' → logprob: -13.79873275756836

Token 875: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5762189030647278
    2. '+' → logprob: -0.8262189030647278
    3. '*' → logprob: -9.326218605041504
    4. 'x' → logprob: -9.701218605041504
    5. ',' → logprob: -10.326218605041504
    6. '<|end|>' → logprob: -10.576218605041504
    7. ' ' → logprob: -10.951218605041504
    8. ' *' → logprob: -11.076218605041504
    9. ' x' → logprob: -11.201218605041504
    10. ')' → logprob: -11.701218605041504

Token 876: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03809450939297676
    2. ' B' → logprob: -3.2880945205688477
    3. ')' → logprob: -10.913094520568848
    4. ' ' → logprob: -11.788094520568848
    5. 'self' → logprob: -12.288094520568848
    6. ''' → logprob: -12.913094520568848
    7. 'Line' → logprob: -12.913094520568848
    8. '`' → logprob: -13.038094520568848
    9. 'def' → logprob: -13.538094520568848
    10. '...' → logprob: -13.538094520568848

Token 877: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03421149030327797
    2. '0' → logprob: -3.4092113971710205
    3. '_i' → logprob: -7.9092116355896
    4. '_B' → logprob: -9.409211158752441
    5. '```' → logprob: -10.534211158752441
    6. ' _' → logprob: -10.784211158752441
    7. 'i' → logprob: -11.284211158752441
    8. '_
' → logprob: -11.909211158752441
    9. 'B' → logprob: -12.034211158752441
    10. ')' → logprob: -12.159211158752441

Token 878: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015779070556163788
    2. 'B' → logprob: -4.2657790184021
    3. '_' → logprob: -6.7657790184021
    4. ' B' → logprob: -8.515779495239258
    5. '_B' → logprob: -8.640779495239258
    6. ' ' → logprob: -10.265779495239258
    7. ')' → logprob: -11.515779495239258
    8. '
' → logprob: -12.265779495239258
    9. '```' → logprob: -12.328279495239258
    10. '`' → logprob: -12.640779495239258

Token 879: ' y' (ID: 342)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14971193671226501
    2. 'x' → logprob: -2.024711847305298
    3. ' y' → logprob: -5.274712085723877
    4. 'y' → logprob: -6.649712085723877
    5. ')' → logprob: -8.399711608886719
    6. '```' → logprob: -8.524711608886719
    7. ',' → logprob: -10.149711608886719
    8. ' ' → logprob: -10.399711608886719
    9. '*' → logprob: -11.024711608886719
    10. ' ' → logprob: -11.399711608886719

Token 880: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3137941360473633
    2. ' +' → logprob: -1.3137941360473633
    3. 'y' → logprob: -8.063794136047363
    4. ' y' → logprob: -8.688794136047363
    5. 'x' → logprob: -10.563794136047363
    6. '+y' → logprob: -11.688794136047363
    7. ' ' → logprob: -12.438794136047363
    8. ' x' → logprob: -12.938794136047363
    9. '+
' → logprob: -13.188794136047363
    10. '```' → logprob: -13.438794136047363

Token 881: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.09036485850811005
    2. ' C' → logprob: -2.465364933013916
    3. 'B' → logprob: -7.965364933013916
    4. 'y' → logprob: -8.340364456176758
    5. 'point' → logprob: -8.590364456176758
    6. ')' → logprob: -9.090364456176758
    7. ' ' → logprob: -9.715364456176758
    8. '   ' → logprob: -9.840364456176758
    9. '(point' → logprob: -9.965364456176758
    10. ' B' → logprob: -9.965364456176758

Token 882: '_' (ID: 62)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.07206602394580841
    2. '_' → logprob: -2.947066068649292
    3. '0' → logprob: -5.572065830230713
    4. ')' → logprob: -5.947065830230713
    5. '_C' → logprob: -5.947065830230713
    6. 'C' → logprob: -6.072065830230713
    7. 'i' → logprob: -6.197065830230713
    8. ',' → logprob: -6.572065830230713
    9. '+' → logprob: -7.072065830230713
    10. '+C' → logprob: -7.947065830230713

Token 883: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10296980291604996
    2. 'C' → logprob: -2.3529698848724365
    3. '_C' → logprob: -6.852969646453857
    4. '_' → logprob: -7.227969646453857
    5. '_i' → logprob: -7.977969646453857
    6. 'y' → logprob: -8.477970123291016
    7. ')' → logprob: -8.852970123291016
    8. ' C' → logprob: -8.977970123291016
    9. 'i' → logprob: -9.477970123291016
    10. '_c' → logprob: -10.352970123291016

Token 884: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006889634532853961
    2. '))' → logprob: -7.8756890296936035
    3. ' )' → logprob: -9.250688552856445
    4. ')`' → logprob: -9.375688552856445
    5. ')=' → logprob: -10.500688552856445
    6. ')
' → logprob: -10.625688552856445
    7. '`)' → logprob: -11.250688552856445
    8. '")' → logprob: -11.500688552856445
    9. '       ' → logprob: -12.125688552856445
    10. ')))' → logprob: -12.250688552856445

Token 885: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021163583733141422
    2. ')' → logprob: -7.2521162033081055
    3. '
' → logprob: -7.7521162033081055
    4. ',' → logprob: -8.502116203308105
    5. '        
' → logprob: -8.502116203308105
    6. '\n' → logprob: -8.627116203308105
    7. '\' → logprob: -9.502116203308105
    8. '<|end|>' → logprob: -9.502116203308105
    9. 'n' → logprob: -9.752116203308105
    10. '   ' → logprob: -10.127116203308105

Token 886: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6233581304550171
    2. ' ' → logprob: -1.373358130455017
    3. '\n' → logprob: -2.4983582496643066
    4. ' True' → logprob: -3.2483582496643066
    5. ' \' → logprob: -3.8733582496643066
    6. ')' → logprob: -4.123358249664307
    7. '"' → logprob: -4.498358249664307
    8. '1' → logprob: -4.748358249664307
    9. '\' → logprob: -4.998358249664307
    10. 'True' → logprob: -5.748358249664307

Token 887: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '
' → logprob: -17.751928329467773
    4. '   ' → logprob: -18.001928329467773
    5. '(' → logprob: -18.876928329467773
    6. '\
' → logprob: -19.001928329467773
    7. ' (' → logprob: -19.314428329467773
    8. ' ' → logprob: -19.439428329467773
    9. '  ' → logprob: -19.564428329467773
    10. ',' → logprob: -19.689428329467773

Token 888: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000627610192168504
    2. '        
' → logprob: -8.125627517700195
    3. '
' → logprob: -9.250627517700195
    4. '<|end|>' → logprob: -9.625627517700195
    5. '   ' → logprob: -10.375627517700195
    6. '\' → logprob: -10.875627517700195
    7. ',' → logprob: -11.000627517700195
    8. ' ' → logprob: -11.125627517700195
    9. '\n' → logprob: -11.250627517700195
    10. '           ' → logprob: -11.375627517700195

Token 889: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004285553470253944
    2. '
' → logprob: -6.3792853355407715
    3. '        
' → logprob: -6.3792853355407715
    4. 'import' → logprob: -7.3792853355407715
    5. 'from' → logprob: -9.62928581237793
    6. '```' → logprob: -10.00428581237793
    7. '           ' → logprob: -10.37928581237793
    8. '        ' → logprob: -11.00428581237793
    9. ',' → logprob: -11.37928581237793
    10. '   ' → logprob: -11.62928581237793

Token 890: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003149789059534669
    2. '        
' → logprob: -6.62814998626709
    3. ' lines' → logprob: -7.87814998626709
    4. '
' → logprob: -8.50314998626709
    5. '           ' → logprob: -8.75314998626709
    6. 'for' → logprob: -8.75314998626709
    7. ' for' → logprob: -8.87814998626709
    8. '        ' → logprob: -9.00314998626709
    9. '   ' → logprob: -9.00314998626709
    10. 'import' → logprob: -9.12814998626709

Token 891: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08910872042179108
    2. 'from' → logprob: -4.214108943939209
    3. ' lines' → logprob: -4.339108943939209
    4. 'import' → logprob: -4.589108943939209
    5. 'for' → logprob: -4.589108943939209
    6. ' for' → logprob: -4.964108943939209
    7. 'def' → logprob: -5.089108943939209
    8. '#' → logprob: -5.214108943939209
    9. ' solutions' → logprob: -6.089108943939209
    10. '
' → logprob: -6.214108943939209

Token 892: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08558869361877441
    2. '       ' → logprob: -3.0855886936187744
    3. 'for' → logprob: -3.7105886936187744
    4. ' i' → logprob: -5.335588455200195
    5. '        ' → logprob: -6.210588455200195
    6. ' ' → logprob: -6.960588455200195
    7. '    ' → logprob: -7.460588455200195
    8. ',' → logprob: -7.585588455200195
    9. '   ' → logprob: -7.710588455200195
    10. ' lines' → logprob: -7.835588455200195

Token 893: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0564628839492798
    2. ' each' → logprob: -1.0564628839492798
    3. 'each' → logprob: -1.6814628839492798
    4. 'i' → logprob: -2.1814627647399902
    5. ' line' → logprob: -5.93146276473999
    6. ' all' → logprob: -6.68146276473999
    7. 'all' → logprob: -7.80646276473999
    8. ' every' → logprob: -7.93146276473999
    9. 'line' → logprob: -8.056463241577148
    10. ' ' → logprob: -9.431463241577148

Token 894: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.349456787109375
    2. 'i' → logprob: -1.224456787109375
    3. ' line' → logprob: -7.349456787109375
    4. '_i' → logprob: -8.224456787109375
    5. 'line' → logprob: -10.849456787109375
    6. ' ' → logprob: -11.099456787109375
    7. ' f' → logprob: -11.224456787109375
    8. '   ' → logprob: -11.349456787109375
    9. '
' → logprob: -11.849456787109375
    10. ' _' → logprob: -12.099456787109375

Token 895: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.747617781162262
    2. '       ' → logprob: -0.997617781162262
    3. ',' → logprob: -2.497617721557617
    4. ' for' → logprob: -2.872617721557617
    5. ':' → logprob: -5.247617721557617
    6. 'for' → logprob: -5.622617721557617
    7. ' i' → logprob: -5.747617721557617
    8. '           ' → logprob: -6.247617721557617
    9. '   ' → logprob: -6.997617721557617
    10. 'in' → logprob: -7.247617721557617

Token 896: ' either' (ID: 4784)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5531629323959351
    2. 'for' → logprob: -1.303162932395935
    3. '       ' → logprob: -2.0531630516052246
    4. '#' → logprob: -5.428163051605225
    5. ' lines' → logprob: -5.428163051605225
    6. ' line' → logprob: -6.053163051605225
    7. ' A' → logprob: -6.053163051605225
    8. 'A' → logprob: -6.178163051605225
    9. '   ' → logprob: -6.803163051605225
    10. ' Ai' → logprob: -6.803163051605225

Token 897: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0816148519515991
    2. '((' → logprob: -1.3316148519515991
    3. '(A' → logprob: -1.4566148519515991
    4. 'for' → logprob: -3.2066149711608887
    5. ' ((' → logprob: -3.9566149711608887
    6. '       ' → logprob: -3.9566149711608887
    7. '(self' → logprob: -4.331614971160889
    8. '           ' → logprob: -4.706614971160889
    9. 'term' → logprob: -4.831614971160889
    10. '(line' → logprob: -4.831614971160889

Token 898: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004663065075874329
    2. ' for' → logprob: -6.004662990570068
    3. 'for' → logprob: -6.254662990570068
    4. '           ' → logprob: -9.254663467407227
    5. '```' → logprob: -9.629663467407227
    6. '   ' → logprob: -10.379663467407227
    7. '#' → logprob: -10.879663467407227
    8. ' (' → logprob: -12.004663467407227
    9. '
' → logprob: -12.004663467407227
    10. '        
' → logprob: -12.004663467407227

Token 899: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07901471108198166
    2. ' for' → logprob: -2.954014778137207
    3. 'for' → logprob: -4.204014778137207
    4. ' (' → logprob: -6.079014778137207
    5. '           ' → logprob: -6.579014778137207
    6. '#' (adapté à ' #') → logprob: -6.704014778137207
    7. ' i' → logprob: -6.954014778137207
    8. '        ' → logprob: -7.204014778137207
    9. ' #' → logprob: -7.204014778137207
    10. ' return' → logprob: -8.204014778137207

Token 900: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5420147180557251
    2. ' (' → logprob: -1.417014718055725
    3. '       ' → logprob: -2.4170145988464355
    4. '(' → logprob: -3.9170145988464355
    5. ' for' → logprob: -4.2920145988464355
    6. 'for' → logprob: -4.2920145988464355
    7. '#' → logprob: -5.4170145988464355
    8. ' line' → logprob: -5.7920145988464355
    9. '((' → logprob: -5.7920145988464355
    10. ' i' → logprob: -5.9170145988464355

Token 901: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7901836633682251
    2. 'self' → logprob: -0.7901836633682251
    3. '(A' → logprob: -2.6651835441589355
    4. '(self' → logprob: -3.7901835441589355
    5. '((' → logprob: -9.415184020996094
    6. 'Ai' → logprob: -9.665184020996094
    7. ' (' → logprob: -10.040184020996094
    8. ' self' → logprob: -10.790184020996094
    9. '   ' → logprob: -11.540184020996094
    10. 'line' → logprob: -11.790184020996094

Token 902: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0012714238837361336
    2. '_' → logprob: -6.8762712478637695
    3. 'i' → logprob: -8.62627124786377
    4. ')' → logprob: -11.50127124786377
    5. '_
' → logprob: -11.87627124786377
    6. ' _' → logprob: -11.87627124786377
    7. '[i' → logprob: -12.12627124786377
    8. '_)' → logprob: -12.12627124786377
    9. ')_' → logprob: -12.62627124786377
    10. '0' → logprob: -12.87627124786377

Token 903: ' -' (ID: 533)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0706234872341156
    2. 'x' → logprob: -3.0706233978271484
    3. '_' → logprob: -4.820623397827148
    4. ' ' → logprob: -5.195623397827148
    5. ' _' → logprob: -5.320623397827148
    6. ' *' → logprob: -7.195623397827148
    7. '```' → logprob: -7.445623397827148
    8. 'i' → logprob: -8.320623397827148
    9. ')' → logprob: -8.445623397827148
    10. '   ' → logprob: -8.570623397827148

Token 904: ' A' (ID: 355)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14292390644550323
    2. ' self' → logprob: -2.0179238319396973
    3. 'A' → logprob: -9.267924308776855
    4. ' A' → logprob: -10.517924308776855
    5. '`' → logprob: -10.642924308776855
    6. '	self' → logprob: -11.017924308776855
    7. ' ' → logprob: -11.017924308776855
    8. '```' → logprob: -11.267924308776855
    9. '(self' → logprob: -11.392924308776855
    10. '[self' → logprob: -11.892924308776855

Token 905: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6351594924926758
    2. '_i' → logprob: -0.7601594924926758
    3. '_j' → logprob: -7.010159492492676
    4. ' _' → logprob: -7.510159492492676
    5. '_)' → logprob: -8.510159492492676
    6. 'i' → logprob: -8.510159492492676
    7. ')' → logprob: -8.635159492492676
    8. '_
' → logprob: -8.635159492492676
    9. '0' → logprob: -9.385159492492676
    10. '_,' → logprob: -9.510159492492676

Token 906: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1373143047094345
    2. 'i' → logprob: -2.3873143196105957
    3. '_' → logprob: -3.5123143196105957
    4. '_i' → logprob: -5.262314319610596
    5. ')' → logprob: -7.637314319610596
    6. '`' → logprob: -8.762313842773438
    7. ' i' → logprob: -9.387313842773438
    8. '```' → logprob: -9.387313842773438
    9. ' ' → logprob: -9.512313842773438
    10. 'self' → logprob: -9.762313842773438

Token 907: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010463453829288483
    2. ')*' → logprob: -4.885463237762451
    3. ')x' → logprob: -6.510463237762451
    4. ' )' → logprob: -7.510463237762451
    5. ',' → logprob: -8.13546371459961
    6. '   ' → logprob: -8.38546371459961
    7. '```' → logprob: -9.76046371459961
    8. ')i' → logprob: -10.01046371459961
    9. 'x' → logprob: -10.38546371459961
    10. 'i' → logprob: -10.63546371459961

Token 908: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01819630153477192
    2. ')*' → logprob: -4.518196105957031
    3. ')x' → logprob: -5.643196105957031
    4. ',' → logprob: -6.143196105957031
    5. ' )' → logprob: -8.018196105957031
    6. '   ' → logprob: -8.018196105957031
    7. ' x' → logprob: -8.393196105957031
    8. 'x' → logprob: -8.893196105957031
    9. '```' → logprob: -9.018196105957031
    10. ')*(' → logprob: -9.393196105957031

Token 909: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03394604101777077
    2. '+' → logprob: -3.6589460372924805
    3. ' *' → logprob: -5.0339460372924805
    4. '*' → logprob: -7.4089460372924805
    5. ')' → logprob: -7.9089460372924805
    6. ' ' → logprob: -10.03394603729248
    7. ',' → logprob: -11.40894603729248
    8. '```' → logprob: -11.40894603729248
    9. ' -' → logprob: -11.78394603729248
    10. '    ' → logprob: -11.78394603729248

Token 910: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.03083186037838459
    2. ' (' → logprob: -3.530831813812256
    3. '(' → logprob: -7.030831813812256
    4. '<|end|>' → logprob: -9.155832290649414
    5. 'B' → logprob: -9.655832290649414
    6. ' ' → logprob: -11.405832290649414
    7. ' B' → logprob: -12.655832290649414
    8. '(A' → logprob: -13.155832290649414
    9. '  ' → logprob: -13.405832290649414
    10. '    ' → logprob: -13.655832290649414

Token 911: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0008827611454762518
    2. ' B' → logprob: -7.250882625579834
    3. '(B' → logprob: -9.125883102416992
    4. '<|end|>' → logprob: -10.250883102416992
    5. 'self' → logprob: -11.375883102416992
    6. ' (' → logprob: -12.250883102416992
    7. '	B' → logprob: -13.125883102416992
    8. '_B' → logprob: -13.250883102416992
    9. '(' → logprob: -13.750883102416992
    10. '       ' → logprob: -14.000883102416992

Token 912: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.013003863394260406
    2. '_' → logprob: -4.388003826141357
    3. 'i' → logprob: -7.763003826141357
    4. '<|end|>' → logprob: -10.138004302978516
    5. ' _' → logprob: -11.263004302978516
    6. '[i' → logprob: -11.763004302978516
    7. ')' → logprob: -13.138004302978516
    8. '<|end|>' → logprob: -13.638004302978516
    9. ')_' → logprob: -14.013004302978516
    10. '_
' → logprob: -14.013004302978516

Token 913: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8093894720077515
    2. '-' → logprob: -1.1843894720077515
    3. '<|end|>' → logprob: -1.5593894720077515
    4. ')' → logprob: -4.184389591217041
    5. '<|end|>' → logprob: -4.934389591217041
    6. '_i' → logprob: -5.434389591217041
    7. '[' → logprob: -5.684389591217041
    8. ' ' → logprob: -6.059389591217041
    9. '_' → logprob: -6.059389591217041
    10. 'i' → logprob: -6.809389591217041

Token 914: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02001761458814144
    2. ' B' → logprob: -4.520017623901367
    3. '<|end|>' → logprob: -5.020017623901367
    4. '_' → logprob: -6.520017623901367
    5. '_B' → logprob: -8.020017623901367
    6. ' ' → logprob: -8.145017623901367
    7. '<|end|>' → logprob: -9.770017623901367
    8. ')' → logprob: -10.270017623901367
    9. ' _' → logprob: -10.395017623901367
    10. 'self' → logprob: -11.145017623901367

Token 915: '_' (ID: 62)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -12.875003814697266
    3. 'i' → logprob: -13.875003814697266
    4. ')_' → logprob: -15.000003814697266
    5. ')' → logprob: -15.875003814697266
    6. '_j' → logprob: -16.500003814697266
    7. '[i' → logprob: -17.875003814697266
    8. ' _' → logprob: -18.250003814697266
    9. '```' → logprob: -18.250003814697266
    10. '}_' → logprob: -19.250003814697266

Token 916: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026354411616921425
    2. '_' → logprob: -3.6513543128967285
    3. ' ' → logprob: -11.151354789733887
    4. '_i' → logprob: -11.276354789733887
    5. 'i' → logprob: -11.901354789733887
    6. ')' → logprob: -12.151354789733887
    7. '<|end|>' → logprob: -12.401354789733887
    8. '```' → logprob: -13.401354789733887
    9. '[' → logprob: -13.651354789733887
    10. '   ' → logprob: -13.901354789733887

Token 917: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002760295057669282
    2. ')x' → logprob: -6.377760410308838
    3. ')y' → logprob: -8.00275993347168
    4. '<|end|>' → logprob: -8.00275993347168
    5. ' )' → logprob: -8.12775993347168
    6. ')*' → logprob: -10.50275993347168
    7. ' x' → logprob: -11.12775993347168
    8. 'x' → logprob: -11.62775993347168
    9. '),' → logprob: -12.12775993347168
    10. ')i' → logprob: -12.25275993347168

Token 918: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.001623291289433837
    2. 'y' → logprob: -6.501623153686523
    3. ')' → logprob: -9.751623153686523
    4. '*y' → logprob: -10.626623153686523
    5. '```' → logprob: -11.126623153686523
    6. ')y' → logprob: -11.876623153686523
    7. '*' → logprob: -12.251623153686523
    8. ' x' → logprob: -13.001623153686523
    9. ',' → logprob: -13.126623153686523
    10. ' *' → logprob: -13.126623153686523

Token 919: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.033932674676179886
    2. '+' → logprob: -3.408932685852051
    3. '<|end|>' → logprob: -8.53393268585205
    4. ' ' → logprob: -9.90893268585205
    5. ')' → logprob: -11.28393268585205
    6. ' +
' → logprob: -11.78393268585205
    7. ' +(' → logprob: -11.90893268585205
    8. '```' → logprob: -12.78393268585205
    9. ' +=' → logprob: -13.40893268585205
    10. '...' → logprob: -13.65893268585205

Token 920: ' (' (ID: 350)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.011393691413104534
    2. ' (' → logprob: -4.5113935470581055
    3. '(' → logprob: -8.011393547058105
    4. 'C' → logprob: -11.886393547058105
    5. '(self' → logprob: -12.386393547058105
    6. ' C' → logprob: -13.636393547058105
    7. '(Cs' → logprob: -15.011393547058105
    8. '<|end|>' → logprob: -15.136393547058105
    9. '(CC' → logprob: -15.386393547058105
    10. '(
' → logprob: -15.511393547058105

Token 921: 'C' (ID: 34)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0915018618106842
    2. 'C' → logprob: -2.4665019512176514
    3. '(self' → logprob: -6.716501712799072
    4. ' self' → logprob: -6.716501712799072
    5. ' C' → logprob: -10.21650218963623
    6. '(C' → logprob: -10.34150218963623
    7. 'Self' → logprob: -11.71650218963623
    8. '<|end|>' → logprob: -11.71650218963623
    9. '[self' → logprob: -11.96650218963623
    10. '
' → logprob: -12.09150218963623

Token 922: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -2.176947600673884e-05
    2. '_' → logprob: -11.500021934509277
    3. 'i' → logprob: -12.125021934509277
    4. ')_' → logprob: -12.875021934509277
    5. '[i' → logprob: -13.750021934509277
    6. '_j' → logprob: -14.500021934509277
    7. ''_' → logprob: -15.125021934509277
    8. ' _' → logprob: -15.375021934509277
    9. '<|end|>' → logprob: -15.500021934509277
    10. '
' → logprob: -15.625021934509277

Token 923: ' -' (ID: 533)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.4547271132469177
    2. '-' → logprob: -1.0797271728515625
    3. ' -' → logprob: -4.7047271728515625
    4. '_' → logprob: -4.8297271728515625
    5. 'i' → logprob: -5.5797271728515625
    6. '<|end|>' → logprob: -5.9547271728515625
    7. '-i' → logprob: -6.8297271728515625
    8. ')' → logprob: -8.079727172851562
    9. '[i' → logprob: -8.829727172851562
    10. '-_' → logprob: -8.954727172851562

Token 924: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01865413412451744
    2. ' C' → logprob: -4.0186543464660645
    3. 'self' → logprob: -7.7686543464660645
    4. ' self' → logprob: -10.768653869628906
    5. '(C' → logprob: -11.143653869628906
    6. ' (' → logprob: -11.143653869628906
    7. '(self' → logprob: -11.268653869628906
    8. ' ' → logprob: -12.518653869628906
    9. '<|end|>' → logprob: -12.893653869628906
    10. '_C' → logprob: -13.268653869628906

Token 925: '_' (ID: 62)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00014811802248004824
    2. '_' → logprob: -8.875147819519043
    3. 'i' → logprob: -12.125147819519043
    4. ')_' → logprob: -14.000147819519043
    5. '[i' → logprob: -14.625147819519043
    6. ')' → logprob: -14.875147819519043
    7. '<|end|>' → logprob: -15.000147819519043
    8. '}_' → logprob: -15.500147819519043
    9. '_)' → logprob: -16.00014877319336
    10. '_o' → logprob: -16.12514877319336

Token 926: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011094745248556137
    2. '_' → logprob: -4.511094570159912
    3. '_i' → logprob: -10.88609504699707
    4. 'i' → logprob: -11.51109504699707
    5. 'C' → logprob: -13.01109504699707
    6. ')' → logprob: -13.01109504699707
    7. '```' → logprob: -13.01109504699707
    8. ' ' → logprob: -13.26109504699707
    9. 'O' → logprob: -13.38609504699707
    10. '[' → logprob: -13.63609504699707

Token 927: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006460270844399929
    2. ')==' → logprob: -5.756460189819336
    3. ')=' → logprob: -6.256460189819336
    4. '=' → logprob: -7.131460189819336
    5. '')' → logprob: -8.631460189819336
    6. ' )' → logprob: -8.756460189819336
    7. ' =' → logprob: -9.506460189819336
    8. '")' → logprob: -9.881460189819336
    9. ' ==' → logprob: -10.881460189819336
    10. '==' → logprob: -10.881460189819336

Token 928: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1676958203315735
    2. ' =' → logprob: -2.9176957607269287
    3. '=' → logprob: -3.0426957607269287
    4. '==' → logprob: -3.6676957607269287
    5. ')' → logprob: -3.6676957607269287
    6. ')==' → logprob: -6.792695999145508
    7. ')=' → logprob: -8.792695999145508
    8. ' ' → logprob: -9.167695999145508
    9. ' )' → logprob: -9.542695999145508
    10. ' or' → logprob: -10.792695999145508

Token 929: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269317865371704
    2. ' ' → logprob: -2.126931667327881
    3. ' ' → logprob: -13.376932144165039
    4. '=' → logprob: -14.439432144165039
    5. 's' → logprob: -15.126932144165039
    6. ' ' → logprob: -15.564432144165039
    7. ')' → logprob: -15.689432144165039
    8. '۰' → logprob: -16.12693214416504
    9. '"' → logprob: -16.25193214416504
    10. '  ' → logprob: -16.87693214416504

Token 930: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '=' → logprob: -17.000295639038086
    4. '۰' → logprob: -19.000295639038086
    5. '```' → logprob: -19.000295639038086
    6. ' ' → logprob: -19.125295639038086
    7. 's' → logprob: -19.250295639038086
    8. ' ' → logprob: -19.375295639038086
    9. ')' → logprob: -19.750295639038086
    10. '"' → logprob: -19.750295639038086

Token 931: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20195400714874268
    2. ' or' → logprob: -2.076953887939453
    3. '<|end|>' → logprob: -2.951953887939453
    4. ')' → logprob: -6.076953887939453
    5. ',' → logprob: -6.826953887939453
    6. 'or' → logprob: -7.826953887939453
    7. '           ' → logprob: -7.951953887939453
    8. '   ' → logprob: -8.326953887939453
    9. ' ' → logprob: -8.451953887939453
    10. '<|end|>' → logprob: -8.826953887939453

Token 932: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 933: ' #' (ID: 1069)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.43153807520866394
    2. '<|end|>' → logprob: -1.1815381050109863
    3. ' ' → logprob: -3.5565381050109863
    4. '       ' → logprob: -4.306538105010986
    5. 'or' → logprob: -7.181538105010986
    6. ' )' → logprob: -8.431537628173828
    7. ')' → logprob: -8.931537628173828
    8. '        ' → logprob: -9.056537628173828
    9. '<|end|>' → logprob: -9.431537628173828
    10. '    ' → logprob: -9.556537628173828

Token 934: ' OR' (ID: 4917)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2828478515148163
    2. ' or' → logprob: -1.4078478813171387
    3. ' for' → logprob: -7.407847881317139
    4. 'or' → logprob: -7.407847881317139
    5. '           ' → logprob: -8.40784740447998
    6. 'for' → logprob: -9.65784740447998
    7. ',' → logprob: -10.03284740447998
    8. '   ' → logprob: -10.40784740447998
    9. '<|end|>' → logprob: -10.53284740447998
    10. ')' → logprob: -11.40784740447998

Token 935: '
' (ID: 198)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08750045299530029
    2. '(A' → logprob: -2.58750057220459
    3. ' ((' → logprob: -5.58750057220459
    4. '       ' → logprob: -5.71250057220459
    5. '((' → logprob: -6.58750057220459
    6. '(' → logprob: -9.46250057220459
    7. '           ' → logprob: -11.58750057220459
    8. '        ' → logprob: -11.71250057220459
    9. '(
' → logprob: -11.83750057220459
    10. ' ' → logprob: -12.08750057220459

Token 936: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049509018659591675
    2. ' (' → logprob: -3.799509048461914
    3. '(A' → logprob: -3.924509048461914
    4. '(' → logprob: -5.299509048461914
    5. '((' → logprob: -8.174509048461914
    6. '           ' → logprob: -8.424509048461914
    7. 'for' → logprob: -8.799509048461914
    8. '#' → logprob: -8.924509048461914
    9. '(
' → logprob: -9.674509048461914
    10. ' for' → logprob: -9.799509048461914

Token 937: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2298475056886673
    2. '       ' → logprob: -2.2298474311828613
    3. '(A' → logprob: -2.9798474311828613
    4. '(' → logprob: -3.1048474311828613
    5. '((' → logprob: -7.604847431182861
    6. ' ((' → logprob: -7.729847431182861
    7. ' for' → logprob: -8.35484790802002
    8. 'for' → logprob: -8.60484790802002
    9. '           ' → logprob: -8.97984790802002
    10. '(
' → logprob: -9.10484790802002

Token 938: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3496452569961548
    2. '(A' → logprob: -1.2246452569961548
    3. '(' → logprob: -7.099645137786865
    4. '((' → logprob: -8.349645614624023
    5. ' ((' → logprob: -9.349645614624023
    6. '(self' → logprob: -11.724645614624023
    7. ' ' → logprob: -11.974645614624023
    8. '       ' → logprob: -12.224645614624023
    9. ' ' → logprob: -12.349645614624023
    10. '+' → logprob: -12.474645614624023

Token 939: 'A' (ID: 32)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.34877797961235046
    2. 'A' → logprob: -1.2237780094146729
    3. 'self' → logprob: -8.848777770996094
    4. 'Ai' → logprob: -9.598777770996094
    5. ' (' → logprob: -10.223777770996094
    6. '(self' → logprob: -10.473777770996094
    7. ' A' → logprob: -11.348777770996094
    8. '(' → logprob: -11.598777770996094
    9. '   ' → logprob: -12.098777770996094
    10. 'AI' → logprob: -12.223777770996094

Token 940: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0002624086628202349
    2. 'i' → logprob: -8.875262260437012
    3. '_' → logprob: -9.125262260437012
    4. '_j' → logprob: -12.250262260437012
    5. '_
' → logprob: -13.375262260437012
    6. ' _' → logprob: -13.500262260437012
    7. ')_' → logprob: -13.625262260437012
    8. '
' → logprob: -13.750262260437012
    9. ')' → logprob: -13.875262260437012
    10. '}_' → logprob: -14.875262260437012

Token 941: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7866446375846863
    2. ' -' → logprob: -1.161644697189331
    3. '+' → logprob: -1.536644697189331
    4. '-' → logprob: -4.286644458770752
    5. '_' → logprob: -6.286644458770752
    6. ' ' → logprob: -7.911644458770752
    7. ' _' → logprob: -8.66164493560791
    8. ' x' → logprob: -9.53664493560791
    9. '_i' → logprob: -9.78664493560791
    10. ')' → logprob: -9.91164493560791

Token 942: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4758491814136505
    2. ' A' → logprob: -0.9758491516113281
    3. '_A' → logprob: -7.100849151611328
    4. '_' → logprob: -7.475849151611328
    5. ' ' → logprob: -8.975849151611328
    6. 'self' → logprob: -8.975849151611328
    7. ' _' → logprob: -9.725849151611328
    8. '_i' → logprob: -10.725849151611328
    9. '_a' → logprob: -11.475849151611328
    10. ' self' → logprob: -11.600849151611328

Token 943: '_' (ID: 62)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.029756855219602585
    2. '_' → logprob: -3.529756784439087
    3. ')_' → logprob: -13.154756546020508
    4. 'i' → logprob: -13.529756546020508
    5. ' _' → logprob: -13.654756546020508
    6. '0' → logprob: -13.779756546020508
    7. '_
' → logprob: -15.529756546020508
    8. '}_' → logprob: -15.654756546020508
    9. '_j' → logprob: -16.154756546020508
    10. '```' → logprob: -16.279756546020508

Token 944: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034966040402650833
    2. '_' → logprob: -6.1284966468811035
    3. 'i' → logprob: -7.0034966468811035
    4. '_i' → logprob: -8.128496170043945
    5. '[' → logprob: -10.003496170043945
    6. ' ' → logprob: -11.003496170043945
    7. '[i' → logprob: -11.753496170043945
    8. ')' → logprob: -12.003496170043945
    9. 'user' → logprob: -12.003496170043945
    10. '<|end|>' → logprob: -12.253496170043945

Token 945: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1689596148207784e-05
    2. ' )' → logprob: -10.750051498413086
    3. ',' → logprob: -11.250051498413086
    4. ')x' → logprob: -11.625051498413086
    5. '```' → logprob: -13.500051498413086
    6. ')i' → logprob: -13.625051498413086
    7. ')
' → logprob: -14.375051498413086
    8. 'i' → logprob: -14.375051498413086
    9. ')*' → logprob: -14.500051498413086
    10. '),' → logprob: -14.625051498413086

Token 946: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.064888596534729
    2. ')' → logprob: -2.8148884773254395
    3. 'x' → logprob: -6.5648884773254395
    4. ',' → logprob: -7.9398884773254395
    5. '```' → logprob: -8.189888954162598
    6. '<|end|>' → logprob: -8.314888954162598
    7. ')x' → logprob: -8.689888954162598
    8. ' )' → logprob: -9.189888954162598
    9. ' ' → logprob: -9.189888954162598
    10. '`' → logprob: -9.939888954162598

Token 947: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.012520132586359978
    2. '+' → logprob: -4.3875203132629395
    3. ')' → logprob: -12.262519836425781
    4. '<|end|>' → logprob: -13.012519836425781
    5. ' ' → logprob: -13.262519836425781
    6. '```' → logprob: -14.637519836425781
    7. ' ' → logprob: -15.387519836425781
    8. ',' → logprob: -15.512519836425781
    9. ' plus' → logprob: -16.01251983642578
    10. '+B' → logprob: -16.38751983642578

Token 948: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.25201719999313354
    2. ' (' → logprob: -1.5020172595977783
    3. '(' → logprob: -9.3770170211792
    4. 's' → logprob: -13.3770170211792
    5. '<|end|>' → logprob: -14.8770170211792
    6. '(A' → logprob: -15.3770170211792
    7. ')' → logprob: -15.6270170211792
    8. ' ' → logprob: -15.6270170211792
    9. '...' → logprob: -16.252017974853516
    10. '(By' → logprob: -16.252017974853516

Token 949: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6943681240081787
    2. '(B' → logprob: -0.6943681240081787
    3. ' (' → logprob: -6.944368362426758
    4. ' B' → logprob: -8.444368362426758
    5. '(' → logprob: -11.569368362426758
    6. '+B' → logprob: -12.569368362426758
    7. '[B' → logprob: -12.944368362426758
    8. '_B' → logprob: -12.944368362426758
    9. '	B' → logprob: -13.194368362426758
    10. ')' → logprob: -13.444368362426758

Token 950: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -9.849109119386412e-06
    2. 'i' → logprob: -11.625009536743164
    3. '[i' → logprob: -14.250009536743164
    4. '_' → logprob: -16.000009536743164
    5. '[' → logprob: -16.750009536743164
    6. ')' → logprob: -18.250009536743164
    7. ',' → logprob: -18.875009536743164
    8. 'B' → logprob: -18.875009536743164
    9. '
' → logprob: -18.875009536743164
    10. '+' → logprob: -19.000009536743164

Token 951: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6339480876922607
    2. ' +' → logprob: -0.7589480876922607
    3. ' -' → logprob: -7.25894832611084
    4. '-' → logprob: -7.38394832611084
    5. '+B' → logprob: -11.88394832611084
    6. '<|end|>' → logprob: -12.00894832611084
    7. ')' → logprob: -12.88394832611084
    8. ' ' → logprob: -13.25894832611084
    9. '+
' → logprob: -14.00894832611084
    10. '[' → logprob: -14.13394832611084

Token 952: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00886746495962143
    2. ' B' → logprob: -4.758867263793945
    3. 'self' → logprob: -8.383867263793945
    4. '_B' → logprob: -11.508867263793945
    5. ' self' → logprob: -11.633867263793945
    6. ' ' → logprob: -13.508867263793945
    7. ')' → logprob: -13.758867263793945
    8. '`' → logprob: -14.883867263793945
    9. '<|end|>' → logprob: -15.008867263793945
    10. 'b' → logprob: -15.133867263793945

Token 953: '_' (ID: 62)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.010046109557151794
    2. '_' → logprob: -4.635046005249023
    3. 'i' → logprob: -8.385046005249023
    4. '0' → logprob: -9.885046005249023
    5. '_B' → logprob: -12.760046005249023
    6. 'B' → logprob: -12.760046005249023
    7. ')' → logprob: -13.635046005249023
    8. '[i' → logprob: -14.135046005249023
    9. '```' → logprob: -14.260046005249023
    10. ',i' → logprob: -14.385046005249023

Token 954: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017363476799800992
    2. 'i' → logprob: -7.251736164093018
    3. '_i' → logprob: -7.251736164093018
    4. '_' → logprob: -8.126736640930176
    5. ' ' → logprob: -12.126736640930176
    6. 'B' → logprob: -12.751736640930176
    7. '<|end|>' → logprob: -13.126736640930176
    8. '```' → logprob: -13.251736640930176
    9. ' i' → logprob: -13.376736640930176
    10. ')' → logprob: -14.251736640930176

Token 955: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027555881068110466
    2. ' y' → logprob: -3.6525559425354004
    3. ')y' → logprob: -6.9025559425354
    4. ' )' → logprob: -9.777555465698242
    5. '*' → logprob: -9.902555465698242
    6. 'y' → logprob: -10.152555465698242
    7. '<|end|>' → logprob: -10.527555465698242
    8. ',' → logprob: -10.652555465698242
    9. ' ' → logprob: -11.777555465698242
    10. '```' → logprob: -11.902555465698242

Token 956: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.008615988306701183
    2. 'y' → logprob: -4.758615970611572
    3. '*y' → logprob: -14.63361644744873
    4. ')y' → logprob: -14.75861644744873
    5. ')' → logprob: -15.00861644744873
    6. '	y' → logprob: -15.88361644744873
    7. '_y' → logprob: -17.133615493774414
    8. ',y' → logprob: -17.133615493774414
    9. ',' → logprob: -17.633615493774414
    10. '
' → logprob: -18.008615493774414

Token 957: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3869343400001526
    2. '+' → logprob: -1.1369342803955078
    3. '<|end|>' → logprob: -10.136934280395508
    4. '```' → logprob: -11.386934280395508
    5. ' ' → logprob: -12.386934280395508
    6. '=' → logprob: -13.511934280395508
    7. ')' → logprob: -13.636934280395508
    8. '...' → logprob: -14.136934280395508
    9. '+=' → logprob: -14.261934280395508
    10. ' x' → logprob: -14.511934280395508

Token 958: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3148649334907532
    2. '(C' → logprob: -1.3148648738861084
    3. '(' → logprob: -6.4398651123046875
    4. '(B' → logprob: -12.939865112304688
    5. '(A' → logprob: -14.689865112304688
    6. '(CC' → logprob: -14.814865112304688
    7. ' ' → logprob: -14.939865112304688
    8. ',' → logprob: -15.564865112304688
    9. '(
' → logprob: -15.689865112304688
    10. '(Cs' → logprob: -16.064865112304688

Token 959: 'C' (ID: 34)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0002285694790771231
    2. ' (' → logprob: -8.750228881835938
    3. 'C' → logprob: -10.000228881835938
    4. '(' → logprob: -11.375228881835938
    5. '(B' → logprob: -11.625228881835938
    6. ')' → logprob: -13.500228881835938
    7. '0' → logprob: -14.750228881835938
    8. '(c' → logprob: -15.125228881835938
    9. ' C' → logprob: -15.250228881835938
    10. '2' → logprob: -15.375228881835938

Token 960: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -3.173704271830502e-06
    2. 'i' → logprob: -13.62500286102295
    3. ')_' → logprob: -14.62500286102295
    4. '_' → logprob: -15.12500286102295
    5. 'I' → logprob: -15.37500286102295
    6. '```' → logprob: -15.37500286102295
    7. '_user' → logprob: -15.62500286102295
    8. '[i' → logprob: -16.000003814697266
    9. '_ai' → logprob: -16.625003814697266
    10. 'import' → logprob: -16.875003814697266

Token 961: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004150341730564833
    2. ' +' → logprob: -5.504150390625
    3. '+C' → logprob: -10.254150390625
    4. '+
' → logprob: -11.129150390625
    5. 'import' → logprob: -12.504150390625
    6. '+=' → logprob: -12.504150390625
    7. '+B' → logprob: -12.879150390625
    8. '+A' → logprob: -12.879150390625
    9. '+)' → logprob: -13.254150390625
    10. '+self' → logprob: -13.879150390625

Token 962: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.10689660906791687
    2. ' C' → logprob: -2.3568966388702393
    3. 'self' → logprob: -5.23189640045166
    4. ' self' → logprob: -6.85689640045166
    5. '(self' → logprob: -9.10689640045166
    6. '_C' → logprob: -9.73189640045166
    7. ' ' → logprob: -10.73189640045166
    8. ' (' → logprob: -10.98189640045166
    9. '0' → logprob: -11.23189640045166
    10. '(C' → logprob: -11.23189640045166

Token 963: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03808750957250595
    2. '_i' → logprob: -3.2880876064300537
    3. '0' → logprob: -10.663087844848633
    4. ')_' → logprob: -11.663087844848633
    5. '_
' → logprob: -12.288087844848633
    6. 'i' → logprob: -12.913087844848633
    7. ')' → logprob: -13.288087844848633
    8. '_o' → logprob: -13.288087844848633
    9. '_C' → logprob: -13.538087844848633
    10. ' _' → logprob: -14.538087844848633

Token 964: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009395372122526169
    2. 'i' → logprob: -5.134395599365234
    3. '_i' → logprob: -5.759395599365234
    4. '_' → logprob: -8.384395599365234
    5. 'C' → logprob: -10.384395599365234
    6. '[i' → logprob: -11.509395599365234
    7. ')' → logprob: -11.634395599365234
    8. '```' → logprob: -11.759395599365234
    9. ' i' → logprob: -12.134395599365234
    10. ' ' → logprob: -12.384395599365234

Token 965: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013908311957493424
    2. ')=' → logprob: -6.8763909339904785
    3. '=' → logprob: -8.62639045715332
    4. ' )' → logprob: -8.75139045715332
    5. '")' → logprob: -12.12639045715332
    6. '')' → logprob: -12.12639045715332
    7. ' =' → logprob: -12.25139045715332
    8. '`)' → logprob: -13.37639045715332
    9. ')
' → logprob: -13.87639045715332
    10. ')==' → logprob: -14.50139045715332

Token 966: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3488793969154358
    2. '=' → logprob: -1.223879337310791
    3. ')' → logprob: -8.09887981414795
    4. ' ' → logprob: -9.59887981414795
    5. ' x' → logprob: -10.97387981414795
    6. ')=' → logprob: -11.09887981414795
    7. 'x' → logprob: -11.72387981414795
    8. ' )' → logprob: -12.59887981414795
    9. '```' → logprob: -12.59887981414795
    10. 'def' → logprob: -13.41137981414795

Token 967: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042999427765607834
    2. ' ' → logprob: -3.167999505996704
    3. ' ' → logprob: -15.792999267578125
    4. '```' → logprob: -17.042999267578125
    5. '<|end|>' → logprob: -17.667999267578125
    6. '=' → logprob: -17.667999267578125
    7. '۰' → logprob: -18.605499267578125
    8. '1' → logprob: -18.855499267578125
    9. ' ' → logprob: -19.355499267578125
    10. '​' → logprob: -19.605499267578125

Token 968: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '=' → logprob: -16.750036239624023
    4. '<|end|>' → logprob: -17.250036239624023
    5. '۰' → logprob: -17.937536239624023
    6. '
' → logprob: -18.750036239624023
    7. '```' → logprob: -18.875036239624023
    8. '.' → logprob: -18.875036239624023
    9. '   ' → logprob: -19.000036239624023
    10. ',' → logprob: -19.125036239624023

Token 969: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10948705673217773
    2. '<|end|>' → logprob: -2.3594870567321777
    3. '<|end|>' → logprob: -5.609487056732178
    4. '
' → logprob: -5.609487056732178
    5. '        
' → logprob: -6.859487056732178
    6. ')' → logprob: -8.484487533569336
    7. ',' → logprob: -8.734487533569336
    8. 'import' → logprob: -9.234487533569336
    9. 'from' → logprob: -9.609487533569336
    10. '#' → logprob: -9.609487533569336

Token 970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03316204994916916
    2. '<|end|>' → logprob: -3.7831621170043945
    3. '   ' → logprob: -5.9081621170043945
    4. '        
' → logprob: -6.0331621170043945
    5. '
' → logprob: -7.1581621170043945
    6. '    ' → logprob: -7.2831621170043945
    7. '\n' → logprob: -7.5331621170043945
    8. '\' → logprob: -7.6581621170043945
    9. ')' → logprob: -7.9081621170043945
    10. '           ' → logprob: -8.158162117004395

Token 971: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029806718230247498
    2. ' lines' → logprob: -7.127980709075928
    3. 'from' → logprob: -8.25298023223877
    4. '   ' → logprob: -8.25298023223877
    5. ' solutions' → logprob: -8.37798023223877
    6. 'choices' → logprob: -8.37798023223877
    7. '        
' → logprob: -8.50298023223877
    8. 'solutions' → logprob: -8.62798023223877
    9. 'import' → logprob: -8.75298023223877
    10. ' choices' → logprob: -8.75298023223877

Token 972: ' Each' (ID: 11555)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.6109249591827393
    2. '#' → logprob: -1.7359249591827393
    3. 'from' → logprob: -1.8609249591827393
    4. '       ' → logprob: -3.3609249591827393
    5. 'results' → logprob: -4.23592472076416
    6. 'import' → logprob: -4.73592472076416
    7. 'def' → logprob: -4.73592472076416
    8. 'possible' → logprob: -4.98592472076416
    9. 'lines' → logprob: -4.98592472076416
    10. 'poss' → logprob: -5.11092472076416

Token 973: ' f' (ID: 285)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11685007065534592
    2. '_i' → logprob: -3.1168501377105713
    3. ' line' → logprob: -3.6168501377105713
    4. ' i' → logprob: -3.8668501377105713
    5. 'line' → logprob: -4.991849899291992
    6. '#' → logprob: -5.741849899291992
    7. '   ' → logprob: -6.616849899291992
    8. '_line' → logprob: -6.741849899291992
    9. '
' → logprob: -7.116849899291992
    10. '       ' → logprob: -7.616849899291992

Token 974: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.10458008199930191
    2. '_' → logprob: -2.3545801639556885
    3. 'i' → logprob: -5.729579925537109
    4. '   ' → logprob: -8.10457992553711
    5. 'or' → logprob: -8.97957992553711
    6. ')' → logprob: -8.97957992553711
    7. '       ' → logprob: -9.10457992553711
    8. ' i' → logprob: -9.22957992553711
    9. ' _' → logprob: -9.22957992553711
    10. '_
' → logprob: -9.72957992553711

Token 975: ' =' (ID: 314)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6622428297996521
    2. ' =' → logprob: -2.162242889404297
    3. ' can' → logprob: -2.162242889404297
    4. ' for' → logprob: -2.412242889404297
    5. 'for' → logprob: -2.787242889404297
    6. 'i' → logprob: -4.287242889404297
    7. 's' → logprob: -4.287242889404297
    8. ' i' → logprob: -4.662242889404297
    9. ' is' → logprob: -5.037242889404297
    10. ' has' → logprob: -5.162242889404297

Token 976: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0290443897247314
    2. '[' → logprob: -1.7790443897247314
    3. '[(' → logprob: -2.2790443897247314
    4. '2' → logprob: -2.2790443897247314
    5. '0' → logprob: -2.5290443897247314
    6. '[
' → logprob: -3.2790443897247314
    7. '[i' → logprob: -3.4040443897247314
    8. '[]
' → logprob: -3.4040443897247314
    9. '1' → logprob: -3.6540443897247314
    10. '(' → logprob: -3.7790443897247314

Token 977: '0' (ID: 15)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.7822023034095764
    2. '[' → logprob: -1.6572022438049316
    3. '[]' → logprob: -1.6572022438049316
    4. '0' → logprob: -3.2822022438049316
    5. '[
' → logprob: -3.4072022438049316
    6. '[i' → logprob: -3.7822022438049316
    7. '[]
' → logprob: -4.532202243804932
    8. '(' → logprob: -4.657202243804932
    9. '[f' → logprob: -4.657202243804932
    10. '2' → logprob: -5.407202243804932

Token 978: ' defines' (ID: 37529)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018283389508724213
    2. ' lines' → logprob: -5.643283367156982
    3. 'from' → logprob: -5.768283367156982
    4. ',' → logprob: -6.143283367156982
    5. 'import' → logprob: -6.518283367156982
    6. '
' → logprob: -6.518283367156982
    7. ' for' → logprob: -6.893283367156982
    8. '#' → logprob: -7.268283367156982
    9. ' is' → logprob: -7.393283367156982
    10. 'for' → logprob: -7.518283367156982

Token 979: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.6819216012954712
    2. 'two' → logprob: -1.3069216012954712
    3. 'a' → logprob: -1.9319216012954712
    4. ' a' → logprob: -2.6819214820861816
    5. ' either' → logprob: -4.931921482086182
    6. 'either' → logprob: -6.306921482086182
    7. 'linear' → logprob: -8.30692195892334
    8. 'one' → logprob: -8.30692195892334
    9. ' one' → logprob: -8.43192195892334
    10. ' linear' → logprob: -8.68192195892334

Token 980: ' possible' (ID: 4149)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3659389615058899
    2. ' lines' → logprob: -1.2409389019012451
    3. ' linear' → logprob: -4.740939140319824
    4. 'linear' → logprob: -5.240939140319824
    5. 'possible' → logprob: -6.990939140319824
    6. ' possibilities' → logprob: -7.115939140319824
    7. ' possible' → logprob: -7.490939140319824
    8. 'poss' → logprob: -7.490939140319824
    9. ' straight' → logprob: -8.865939140319824
    10. ' options' → logprob: -9.865939140319824

Token 981: ' lines' (ID: 8698)
  Prédit: ' linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' linear' → logprob: -0.7654247879981995
    2. 'lines' → logprob: -1.1404247283935547
    3. 'linear' → logprob: -1.7654247283935547
    4. ' lines' → logprob: -3.1404247283935547
    5. 'equ' → logprob: -7.765424728393555
    6. ' equations' → logprob: -8.765424728393555
    7. ' straight' → logprob: -10.515424728393555
    8. 'cases' → logprob: -10.765424728393555
    9. 'straight' → logprob: -10.765424728393555
    10. '_lines' → logprob: -10.890424728393555

Token 982: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06768395751714706
    2. '
' → logprob: -2.8176839351654053
    3. 'from' → logprob: -6.317684173583984
    4. 'import' → logprob: -6.442684173583984
    5. '        
' → logprob: -6.692684173583984
    6. '#' → logprob: -7.817684173583984
    7. ' lines' → logprob: -8.567684173583984
    8. '<|end|>' → logprob: -9.192684173583984
    9. ',' → logprob: -9.817684173583984
    10. '```' → logprob: -9.942684173583984

Token 983: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003266447747591883
    2. '        
' → logprob: -8.250327110290527
    3. '
' → logprob: -11.375327110290527
    4. '           ' → logprob: -11.625327110290527
    5. 'import' → logprob: -11.625327110290527
    6. '        ' → logprob: -11.875327110290527
    7. ',' → logprob: -12.125327110290527
    8. '#' → logprob: -12.125327110290527
    9. '   ' → logprob: -12.125327110290527
    10. '<|end|>' → logprob: -13.000327110290527

Token 984: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0794714093208313
    2. ' solutions' → logprob: -3.0794713497161865
    3. 'solutions' → logprob: -4.079471588134766
    4. ' lines' → logprob: -4.704471588134766
    5. 'results' → logprob: -7.579471588134766
    6. 'from' → logprob: -7.704471588134766
    7. '        
' → logprob: -7.704471588134766
    8. '
' → logprob: -7.954471588134766
    9. '#' (adapté à ' #') → logprob: -8.079471588134766
    10. 'import' → logprob: -8.329471588134766

Token 985: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04514876753091812
    2. '#' → logprob: -4.045148849487305
    3. 'from' → logprob: -4.920148849487305
    4. 'lines' → logprob: -4.920148849487305
    5. 'solutions' → logprob: -5.545148849487305
    6. 'def' → logprob: -5.670148849487305
    7. 'import' → logprob: -7.295148849487305
    8. ' lines' → logprob: -7.545148849487305
    9. '   ' → logprob: -7.670148849487305
    10. 'options' → logprob: -7.795148849487305

Token 986: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.6899638175964355
    2. ' continue' → logprob: -1.5649638175964355
    3. ' #' → logprob: -2.3149638175964355
    4. ' can' → logprob: -2.5649638175964355
    5. ' will' → logprob: -3.3149638175964355
    6. ' have' → logprob: -4.0649638175964355
    7. '#' → logprob: -4.0649638175964355
    8. '   ' → logprob: -4.8149638175964355
    9. ' ' → logprob: -5.1899638175964355
    10. 'continue' → logprob: -5.3149638175964355

Token 987: ' find' (ID: 1646)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.7301028370857239
    2. ' try' → logprob: -1.355102777481079
    3. 'try' → logprob: -2.730102777481079
    4. ' find' → logprob: -2.730102777481079
    5. 'check' → logprob: -3.480102777481079
    6. ' consider' → logprob: -3.480102777481079
    7. ' explore' → logprob: -4.230103015899658
    8. 'consider' → logprob: -4.230103015899658
    9. 'find' → logprob: -4.480103015899658
    10. ' test' → logprob: -4.730103015899658

Token 988: ' a' (ID: 261)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.30449244379997253
    2. ' a' → logprob: -2.179492473602295
    3. ' combinations' → logprob: -2.679492473602295
    4. 'all' → logprob: -2.929492473602295
    5. ' the' → logprob: -4.554492473602295
    6. ' lines' → logprob: -5.554492473602295
    7. ' an' → logprob: -5.679492473602295
    8. 'a' → logprob: -6.054492473602295
    9. ' points' → logprob: -6.679492473602295
    10. ' at' → logprob: -7.054492473602295

Token 989: ' point' (ID: 2438)
  Prédit: ' combination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combination' → logprob: -0.35509324073791504
    2. 'll' → logprob: -1.605093240737915
    3. 'comb' → logprob: -3.855093240737915
    4. ' solution' → logprob: -3.980093240737915
    5. ' consistent' → logprob: -4.105093002319336
    6. 'n' → logprob: -4.355093002319336
    7. 'solution' → logprob: -5.480093002319336
    8. ' point' → logprob: -5.605093002319336
    9. 's' → logprob: -5.730093002319336
    10. 'point' → logprob: -5.980093002319336

Token 990: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05550273135304451
    2. ',' → logprob: -4.805502891540527
    3. ' that' → logprob: -5.055502891540527
    4. '   ' → logprob: -5.180502891540527
    5. '        ' → logprob: -5.305502891540527
    6. 'import' → logprob: -5.805502891540527
    7. ' for' → logprob: -5.805502891540527
    8. ')' → logprob: -6.305502891540527
    9. ' =' → logprob: -6.305502891540527
    10. '#' → logprob: -6.305502891540527

Token 991: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8220199346542358
    2. 'x' → logprob: -1.1970199346542358
    3. ' that' → logprob: -2.9470200538635254
    4. ' x' → logprob: -3.0720200538635254
    5. ' point' → logprob: -3.9470200538635254
    6. 'that' → logprob: -4.072020053863525
    7. '(x' → logprob: -4.072020053863525
    8. 'point' → logprob: -4.197020053863525
    9. ' on' → logprob: -4.322020053863525
    10. '(' → logprob: -4.447020053863525

Token 992: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22620880603790283
    2. ',y' → logprob: -1.6012088060379028
    3. '       ' → logprob: -8.351208686828613
    4. ' ,' → logprob: -8.851208686828613
    5. ',
' → logprob: -8.976208686828613
    6. ')' → logprob: -9.101208686828613
    7. '
' → logprob: -10.101208686828613
    8. '0' → logprob: -10.351208686828613
    9. ':' → logprob: -10.476208686828613
    10. '   ' → logprob: -11.226208686828613

Token 993: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007741317385807633
    2. ' that' → logprob: -8.625774383544922
    3. ')
' → logprob: -8.750774383544922
    4. ',' → logprob: -9.125774383544922
    5. '
' → logprob: -9.125774383544922
    6. '       ' → logprob: -9.375774383544922
    7. 'that' → logprob: -10.250774383544922
    8. '   ' → logprob: -10.625774383544922
    9. ' )' → logprob: -10.625774383544922
    10. '#' → logprob: -11.375774383544922

Token 994: ' satisfying' (ID: 52718)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.29203900694847107
    2. '       ' → logprob: -1.5420390367507935
    3. ',' → logprob: -4.542038917541504
    4. '#' → logprob: -5.167038917541504
    5. 'that' → logprob: -5.167038917541504
    6. ' or' → logprob: -5.917038917541504
    7. '<|end|>' → logprob: -5.917038917541504
    8. '        ' → logprob: -6.417038917541504
    9. ')' → logprob: -6.667038917541504
    10. ' to' → logprob: -7.042038917541504

Token 995: ' one' (ID: 1001)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4348165690898895
    2. ' all' → logprob: -1.059816598892212
    3. '#' → logprob: -6.559816360473633
    4. ' at' → logprob: -6.934816360473633
    5. ' lines' → logprob: -7.184816360473633
    6. 'one' → logprob: -7.559816360473633
    7. 'lines' → logprob: -8.059816360473633
    8. 'n' → logprob: -8.309816360473633
    9. ' one' → logprob: -8.434816360473633
    10. 'at' → logprob: -8.559816360473633

Token 996: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5472880601882935
    2. 'of' → logprob: -0.9222880601882935
    3. 'from' → logprob: -4.922287940979004
    4. 'comb' → logprob: -5.547287940979004
    5. 'choice' → logprob: -5.797287940979004
    6. ' combination' → logprob: -6.047287940979004
    7. ' line' → logprob: -6.172287940979004
    8. '#' → logprob: -6.797287940979004
    9. 'line' → logprob: -6.797287940979004
    10. 'option' → logprob: -7.547287940979004

Token 997: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9862552285194397
    2. ' these' → logprob: -1.361255168914795
    3. 'these' → logprob: -1.361255168914795
    4. ' the' → logprob: -2.236255168914795
    5. 'those' → logprob: -6.111255168914795
    6. '   ' → logprob: -6.361255168914795
    7. ' those' → logprob: -6.861255168914795
    8. '
' → logprob: -7.986255168914795
    9. '[
' → logprob: -8.236255645751953
    10. '```' → logprob: -8.361255645751953

Token 998: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.4808252155780792
    2. ' two' → logprob: -1.1058251857757568
    3. 'possible' → logprob: -4.230825424194336
    4. 'com' → logprob: -4.855825424194336
    5. 'lines' → logprob: -4.980825424194336
    6. ' lines' → logprob: -5.355825424194336
    7. ' combinations' → logprob: -5.730825424194336
    8. 'choices' → logprob: -5.980825424194336
    9. ' possible' → logprob: -6.105825424194336
    10. '2' → logprob: -6.605825424194336

Token 999: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.7880983352661133
    2. 'lines' → logprob: -1.4130983352661133
    3. ' options' → logprob: -2.5380983352661133
    4. 'poss' → logprob: -2.9130983352661133
    5. ' for' → logprob: -3.7880983352661133
    6. '   ' → logprob: -3.7880983352661133
    7. ' line' → logprob: -3.9130983352661133
    8. 'options' → logprob: -3.9130983352661133
    9. 'branches' → logprob: -4.538098335266113
    10. '```' → logprob: -4.538098335266113

Token 1000: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06474491953849792
    2. 'from' → logprob: -3.3147449493408203
    3. 'import' → logprob: -4.18974494934082
    4. '
' → logprob: -5.06474494934082
    5. '#' → logprob: -6.31474494934082
    6. ' from' → logprob: -6.81474494934082
    7. '        
' → logprob: -7.06474494934082
    8. 'def' → logprob: -7.81474494934082
    9. '```' → logprob: -8.56474494934082
    10. ',' → logprob: -8.81474494934082

Token 1001: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.10908330231904984
    2. ' each' → logprob: -2.359083414077759
    3. 'every' → logprob: -5.48408317565918
    4. 'all' → logprob: -5.98408317565918
    5. ' all' → logprob: -6.73408317565918
    6. ' every' → logprob: -7.10908317565918
    7. 'i' → logprob: -9.35908317565918
    8. ' i' → logprob: -11.10908317565918
    9. '```' → logprob: -11.48408317565918
    10. 'e' → logprob: -11.73408317565918

Token 1002: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6686461567878723
    2. 'i' → logprob: -0.7936461567878723
    3. ' lines' → logprob: -3.6686460971832275
    4. ' line' → logprob: -5.293646335601807
    5. '_i' → logprob: -5.918646335601807
    6. 'lines' → logprob: -7.293646335601807
    7. 'line' → logprob: -7.418646335601807
    8. '
' → logprob: -8.668645858764648
    9. ' for' → logprob: -8.918645858764648
    10. '       ' → logprob: -9.043645858764648

Token 1003: ' simultaneously' (ID: 38328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13862766325473785
    2. '
' → logprob: -3.013627767562866
    3. 'from' → logprob: -3.138627767562866
    4. 'import' → logprob: -4.013627529144287
    5. '<|end|>' → logprob: -5.138627529144287
    6. ',' → logprob: -5.763627529144287
    7. '#' → logprob: -5.888627529144287
    8. '        
' → logprob: -6.013627529144287
    9. ' from' → logprob: -6.513627529144287
    10. '<|end|>' → logprob: -7.263627529144287

Token 1004: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026283811777830124
    2. 'from' → logprob: -4.2762837409973145
    3. 'import' → logprob: -5.1512837409973145
    4. '
' → logprob: -5.5262837409973145
    5. '#' → logprob: -6.5262837409973145
    6. 'def' → logprob: -8.026284217834473
    7. '        
' → logprob: -8.151284217834473
    8. ' from' → logprob: -9.526284217834473
    9. '   ' → logprob: -10.151284217834473
    10. '```' → logprob: -10.776284217834473

Token 1005: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026870736852288246
    2. '
' → logprob: -4.0268707275390625
    3. 'from' → logprob: -5.5268707275390625
    4. ' from' → logprob: -5.7768707275390625
    5. 'import' → logprob: -7.1518707275390625
    6. '        
' → logprob: -8.151870727539062
    7. '#' → logprob: -8.526870727539062
    8. '```' → logprob: -9.026870727539062
    9. '   ' → logprob: -9.776870727539062
    10. ' lines' → logprob: -9.901870727539062

Token 1006: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4262196719646454
    2. 'from' → logprob: -1.4262197017669678
    3. '#' (adapté à ' #') → logprob: -2.4262197017669678
    4. 'import' → logprob: -5.051219463348389
    5. 'solutions' → logprob: -5.926219463348389
    6. 'lines' → logprob: -6.051219463348389
    7. ' from' → logprob: -6.301219463348389
    8. 'def' → logprob: -6.551219463348389
    9. 'choices' → logprob: -7.426219463348389
    10. 'all' → logprob: -7.801219463348389

Token 1007: ' This' (ID: 1328)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6194218993186951
    2. '#' → logprob: -1.6194219589233398
    3. '       ' → logprob: -1.9944219589233398
    4. 'def' → logprob: -2.74442195892334
    5. 'import' → logprob: -3.86942195892334
    6. 'solutions' → logprob: -4.24442195892334
    7. 'lines' → logprob: -4.61942195892334
    8. 'all' → logprob: -5.86942195892334
    9. 'results' → logprob: -6.11942195892334
    10. 'possible' → logprob: -6.11942195892334

Token 1008: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45875224471092224
    2. 'import' → logprob: -2.208752155303955
    3. ' def' → logprob: -2.333752155303955
    4. ' is' → logprob: -2.958752155303955
    5. '#' → logprob: -3.708752155303955
    6. 'is' → logprob: -3.833752155303955
    7. '
' → logprob: -4.458752155303955
    8. '```' → logprob: -5.083752155303955
    9. 'space' → logprob: -5.208752155303955
    10. 'from' → logprob: -5.458752155303955

Token 1009: ' combin' (ID: 25307)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3304000496864319
    2. 'a' → logprob: -1.455399990081787
    3. 'import' → logprob: -4.330399990081787
    4. ' an' → logprob: -5.080399990081787
    5. ' essentially' → logprob: -5.205399990081787
    6. 'from' → logprob: -5.330399990081787
    7. ' complex' → logprob: -5.455399990081787
    8. ' combin' → logprob: -5.705399990081787
    9. 'complex' → logprob: -6.205399990081787
    10. 'com' → logprob: -6.205399990081787

Token 1010: 'atorial' (ID: 68745)
  Prédit: 'atorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atorial' → logprob: -0.02330010198056698
    2. 'ational' → logprob: -4.7733001708984375
    3. 'ation' → logprob: -6.0233001708984375
    4. '_' → logprob: -6.1483001708984375
    5. '```' → logprob: -6.1483001708984375
    6. ' at' → logprob: -6.2733001708984375
    7. 'a' → logprob: -6.8983001708984375
    8. '
' → logprob: -7.2733001708984375
    9. 'ator' → logprob: -7.3983001708984375
    10. 'atory' → logprob: -7.5233001708984375

Token 1011: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9280290603637695
    2. 'import' → logprob: -1.4280290603637695
    3. ' from' → logprob: -1.5530290603637695
    4. '       ' → logprob: -2.6780290603637695
    5. '
' → logprob: -2.9280290603637695
    6. ' lines' → logprob: -4.0530290603637695
    7. '#' → logprob: -5.1780290603637695
    8. ' if' → logprob: -6.3030290603637695
    9. '        
' → logprob: -6.6780290603637695
    10. ' import' → logprob: -6.8030290603637695

Token 1012: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2083826065063477
    2. ' n' → logprob: -1.4583826065063477
    3. ' lines' → logprob: -2.3333826065063477
    4. ' from' → logprob: -2.7083826065063477
    5. ' #' → logprob: -3.0833826065063477
    6. ' for' → logprob: -3.3333826065063477
    7. '
' → logprob: -3.4583826065063477
    8. '2' → logprob: -3.4583826065063477
    9. ' line' → logprob: -3.8333826065063477
    10. ')' → logprob: -3.8333826065063477

Token 1013: '^(' (ID: 32612)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.34964436292648315
    2. ' **' → logprob: -1.224644422531128
    3. ' **
' → logprob: -7.724644184112549
    4. '
' → logprob: -8.099644660949707
    5. '**
' → logprob: -8.849644660949707
    6. '^' → logprob: -8.974644660949707
    7. '^(' → logprob: -9.849644660949707
    8. ' ' → logprob: -10.474644660949707
    9. ')' → logprob: -10.974644660949707
    10. ' *' → logprob: -11.099644660949707

Token 1014: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18260245025157928
    2. '(n' → logprob: -1.8076024055480957
    3. ' n' → logprob: -6.057602405548096
    4. ' (' → logprob: -7.932602405548096
    5. '
' → logprob: -9.932602882385254
    6. '   ' → logprob: -10.432602882385254
    7. '       ' → logprob: -11.057602882385254
    8. '```' → logprob: -11.182602882385254
    9. '[n' → logprob: -11.682602882385254
    10. 'len' → logprob: -11.932602882385254

Token 1015: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29544705152511597
    2. '
' → logprob: -1.9204471111297607
    3. '-' → logprob: -2.4204471111297607
    4. '))' → logprob: -4.545446872711182
    5. ')
' → logprob: -6.545446872711182
    6. '_' → logprob: -6.670446872711182
    7. ' -' → logprob: -6.920446872711182
    8. '       ' → logprob: -7.045446872711182
    9. '```' → logprob: -7.295446872711182
    10. ' )' → logprob: -7.420446872711182

Token 1016: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024037064576987177
    2. '(n' → logprob: -8.500240325927734
    3. 'n' → logprob: -10.875240325927734
    4. '-' → logprob: -11.875240325927734
    5. '
' → logprob: -12.375240325927734
    6. '```' → logprob: -12.875240325927734
    7. '(m' → logprob: -14.375240325927734
    8. ')' → logprob: -14.500240325927734
    9. '(' → logprob: -14.500240325927734
    10. '(i' → logprob: -14.875240325927734

Token 1017: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11333024501800537
    2. '))' → logprob: -2.238330364227295
    3. ')
' → logprob: -8.738329887390137
    4. ' )' → logprob: -8.863329887390137
    5. ')-' → logprob: -9.738329887390137
    6. '
' → logprob: -10.488329887390137
    7. ')),' → logprob: -10.488329887390137
    8. ' ))' → logprob: -10.738329887390137
    9. '))
' → logprob: -11.988329887390137
    10. '}' → logprob: -11.988329887390137

Token 1018: ' possible' (ID: 4149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04860395938158035
    2. ' )' → logprob: -3.6736040115356445
    3. ' possibilities' → logprob: -4.6736040115356445
    4. ' possible' → logprob: -4.7986040115356445
    5. '),' → logprob: -6.9236040115356445
    6. ' lines' → logprob: -7.0486040115356445
    7. ' combinations' → logprob: -7.2986040115356445
    8. ' choices' → logprob: -7.4236040115356445
    9. 'possible' → logprob: -8.673604011535645
    10. '):
' → logprob: -8.798604011535645

Token 1019: ' sign' (ID: 2232)
  Prédit: ' choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choices' → logprob: -0.5841800570487976
    2. ' combinations' → logprob: -0.9591800570487976
    3. 'choices' → logprob: -4.584179878234863
    4. ' ' → logprob: -4.959179878234863
    5. ' lines' → logprob: -5.334179878234863
    6. ')' → logprob: -5.459179878234863
    7. ' options' → logprob: -5.459179878234863
    8. 's' → logprob: -5.709179878234863
    9. ' line' → logprob: -5.709179878234863
    10. '
' → logprob: -5.709179878234863

Token 1020: ' patterns' (ID: 18587)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0013559521175920963
    2. ' s' → logprob: -6.75135612487793
    3. ' combinations' → logprob: -8.87635612487793
    4. '_s' → logprob: -10.50135612487793
    5. ' choices' → logprob: -11.62635612487793
    6. ')' → logprob: -12.87635612487793
    7. 'choices' → logprob: -13.12635612487793
    8. '_' → logprob: -13.87635612487793
    9. 'atures' → logprob: -14.12635612487793
    10. '_choices' → logprob: -14.50135612487793

Token 1021: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36336755752563477
    2. '       ' → logprob: -1.3633675575256348
    3. '):' → logprob: -3.6133675575256348
    4. '#' → logprob: -5.113367557525635
    5. ' for' → logprob: -5.238367557525635
    6. ',' → logprob: -6.363367557525635
    7. ').' → logprob: -6.613367557525635
    8. '):
' → logprob: -6.613367557525635
    9. '   ' → logprob: -6.738367557525635
    10. '),' → logprob: -6.863367557525635

Token 1022: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058587245643138885
    2. '
' → logprob: -2.9335873126983643
    3. '        
' → logprob: -6.933587074279785
    4. 'from' → logprob: -7.308587074279785
    5. '   ' → logprob: -7.558587074279785
    6. ' lines' → logprob: -8.183587074279785
    7. 'def' → logprob: -8.558587074279785
    8. ',' → logprob: -8.808587074279785
    9. '```' → logprob: -8.808587074279785
    10. 'import' → logprob: -8.933587074279785

Token 1023: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09223990887403488
    2. 'solutions' → logprob: -3.5922398567199707
    3. 'result' → logprob: -4.092239856719971
    4. 'results' → logprob: -4.342239856719971
    5. 'from' → logprob: -4.467239856719971
    6. '
' → logprob: -5.217239856719971
    7. 'sign' → logprob: -5.842239856719971
    8. 'res' → logprob: -5.967239856719971
    9. 'import' → logprob: -6.092239856719971
    10. 'def' → logprob: -6.592239856719971

Token 1024: ' If' (ID: 1843)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.5003225207328796
    2. 'result' → logprob: -2.2503225803375244
    3. 'results' → logprob: -2.3753225803375244
    4. 'from' → logprob: -2.6253225803375244
    5. 'sign' → logprob: -3.7503225803375244
    6. '       ' → logprob: -4.125322341918945
    7. 'res' → logprob: -4.250322341918945
    8. 'import' → logprob: -4.250322341918945
    9. 'def' → logprob: -4.250322341918945
    10. '   ' → logprob: -5.000322341918945

Token 1025: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31330737471580505
    2. 'n' → logprob: -1.3133074045181274
    3. '
' → logprob: -11.063307762145996
    4. '   ' → logprob: -11.813307762145996
    5. ' ' → logprob: -12.563307762145996
    6. '(n' → logprob: -12.938307762145996
    7. '_' → logprob: -13.063307762145996
    8. '	n' → logprob: -13.063307762145996
    9. ' ' → logprob: -13.188307762145996
    10. ' not' → logprob: -13.313307762145996

Token 1026: ' is' (ID: 382)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.9267717599868774
    2. ' ==' → logprob: -1.0517717599868774
    3. '==' → logprob: -2.176771640777588
    4. '<=' → logprob: -2.551771640777588
    5. ' <' → logprob: -3.301771640777588
    6. ' >' → logprob: -4.426771640777588
    7. '>' → logprob: -5.176771640777588
    8. '=' → logprob: -5.426771640777588
    9. '<' → logprob: -5.926771640777588
    10. ' >=' → logprob: -7.426771640777588

Token 1027: ' large' (ID: 4410)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.01026451587677
    2. ' small' → logprob: -1.38526451587677
    3. 'small' → logprob: -1.88526451587677
    4. '<=' → logprob: -2.0102643966674805
    5. ' <=' → logprob: -3.0102643966674805
    6. '>' → logprob: -4.0102643966674805
    7. '=' → logprob: -4.5102643966674805
    8. '2' → logprob: -5.1352643966674805
    9. ' ' → logprob: -5.3852643966674805
    10. '0' → logprob: -5.7602643966674805

Token 1028: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5133711695671082
    2. ',' → logprob: -1.013371229171753
    3. '   ' → logprob: -4.263370990753174
    4. ' <=' → logprob: -5.138370990753174
    5. '       ' → logprob: -5.888370990753174
    6. ':
' → logprob: -6.013370990753174
    7. ' :' → logprob: -6.263370990753174
    8. ' ,' → logprob: -6.638370990753174
    9. ',
' → logprob: -6.763370990753174
    10. '<=' → logprob: -6.888370990753174

Token 1029: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.41247129440307617
    2. ' return' → logprob: -1.1624712944030762
    3. '#' → logprob: -4.662471294403076
    4. '       ' → logprob: -5.037471294403076
    5. '   ' → logprob: -6.162471294403076
    6. 'import' → logprob: -6.162471294403076
    7. ' #' → logprob: -6.287471294403076
    8. '```' → logprob: -7.037471294403076
    9. ' if' → logprob: -7.787471294403076
    10. ' the' → logprob: -7.787471294403076

Token 1030: '2' (ID: 17)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20440274477005005
    2. ' return' → logprob: -1.7044026851654053
    3. '       ' → logprob: -6.454402923583984
    4. '   ' → logprob: -7.829402923583984
    5. '#' → logprob: -8.204402923583984
    6. 'import' → logprob: -8.204402923583984
    7. '           ' → logprob: -8.954402923583984
    8. ' #' → logprob: -9.329402923583984
    9. ' if' → logprob: -9.329402923583984
    10. 'if' → logprob: -9.829402923583984

Token 1031: '^(' (ID: 32612)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.05121694132685661
    2. ' **' → logprob: -3.1762168407440186
    3. '^' → logprob: -5.426217079162598
    4. '
' → logprob: -6.926217079162598
    5. '^(' → logprob: -7.926217079162598
    6. '       ' → logprob: -8.176217079162598
    7. '```' → logprob: -8.176217079162598
    8. '           ' → logprob: -8.551217079162598
    9. ')' → logprob: -8.551217079162598
    10. '^{' → logprob: -8.676217079162598

Token 1032: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019880425184965134
    2. '(n' → logprob: -4.144880294799805
    3. ' n' → logprob: -6.144880294799805
    4. '   ' → logprob: -7.144880294799805
    5. '       ' → logprob: -7.769880294799805
    6. ' (' → logprob: -8.394880294799805
    7. '           ' → logprob: -9.269880294799805
    8. '
' → logprob: -9.644880294799805
    9. '{' → logprob: -10.519880294799805
    10. '     ' → logprob: -11.394880294799805

Token 1033: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11493636667728424
    2. ' -' → logprob: -2.239936351776123
    3. ')' → logprob: -6.614936351776123
    4. '
' → logprob: -7.739936351776123
    5. '**' → logprob: -9.364936828613281
    6. '   ' → logprob: -9.739936828613281
    7. '-
' → logprob: -10.489936828613281
    8. ')-' → logprob: -10.489936828613281
    9. ' ' → logprob: -10.864936828613281
    10. '```' → logprob: -10.989936828613281

Token 1034: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0042212167754769325
    2. '(n' → logprob: -5.629221439361572
    3. '-' → logprob: -8.254220962524414
    4. '```' → logprob: -8.754220962524414
    5. '(' → logprob: -8.879220962524414
    6. 'n' → logprob: -10.629220962524414
    7. '(m' → logprob: -11.004220962524414
    8. '
' → logprob: -12.254220962524414
    9. ' (' → logprob: -12.254220962524414
    10. '``' → logprob: -13.254220962524414

Token 1035: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13993225991725922
    2. '
' → logprob: -3.389932155609131
    3. ' >' → logprob: -3.514932155609131
    4. ' )' → logprob: -3.514932155609131
    5. ' is' → logprob: -3.889932155609131
    6. '>' → logprob: -4.889932155609131
    7. '   ' → logprob: -6.639932155609131
    8. ' -' → logprob: -7.264932155609131
    9. '-' → logprob: -7.389932155609131
    10. ')>' → logprob: -7.389932155609131

Token 1036: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.3597121238708496
    2. '#' → logprob: -1.9847121238708496
    3. '
' → logprob: -1.9847121238708496
    4. 'is' → logprob: -2.3597121238708496
    5. ' too' → logprob: -2.8597121238708496
    6. ' may' → logprob: -2.9847121238708496
    7. 'too' → logprob: -2.9847121238708496
    8. ' becomes' → logprob: -3.4847121238708496
    9. ' might' → logprob: -3.6097121238708496
    10. ' lines' → logprob: -4.10971212387085

Token 1037: ' too' (ID: 3101)
  Prédit: ' too'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' too' → logprob: -0.3169391453266144
    2. 'too' → logprob: -1.316939115524292
    3. ' large' → logprob: -6.691939353942871
    4. 'large' → logprob: -7.691939353942871
    5. ' prohib' → logprob: -7.691939353942871
    6. ' not' → logprob: -8.191939353942871
    7. 'not' → logprob: -8.566939353942871
    8. 'manageable' → logprob: -9.066939353942871
    9. ' infe' → logprob: -9.066939353942871
    10. '```' → logprob: -9.316939353942871

Token 1038: ' big' (ID: 3464)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.5496394038200378
    2. ' ' → logprob: -1.7996394634246826
    3. ' _' → logprob: -3.0496394634246826
    4. ' **' → logprob: -3.2996394634246826
    5. ' large' → logprob: -3.5496394634246826
    6. '```' → logprob: -3.5496394634246826
    7. ' much' → logprob: -3.6746394634246826
    8. ' small' → logprob: -4.2996392250061035
    9. '_' → logprob: -4.4246392250061035
    10. ' many' → logprob: -4.5496392250061035

Token 1039: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14266884326934814
    2. '
' → logprob: -2.1426687240600586
    3. 'import' → logprob: -4.392668724060059
    4. '        
' → logprob: -6.517668724060059
    5. ',' → logprob: -7.267668724060059
    6. ' to' → logprob: -8.642668724060059
    7. '<|end|>' → logprob: -9.017668724060059
    8. '#' → logprob: -9.142668724060059
    9. '
' → logprob: -9.142668724060059
    10. '```' → logprob: -9.392668724060059

Token 1040: ' but' (ID: 889)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.06648347526788712
    2. '       ' → logprob: -2.816483497619629
    3. 'return' → logprob: -6.566483497619629
    4. ' return' → logprob: -6.566483497619629
    5. 'so' → logprob: -7.441483497619629
    6. '#' → logprob: -7.691483497619629
    7. ' but' → logprob: -8.691483497619629
    8. '
' → logprob: -8.816483497619629
    9. ' and' → logprob: -9.566483497619629
    10. '           ' → logprob: -9.566483497619629

Token 1041: ' as' (ID: 472)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6775956153869629
    2. 'n' → logprob: -1.302595615386963
    3. ' for' → logprob: -2.427595615386963
    4. ' if' → logprob: -2.427595615386963
    5. 'if' → logprob: -4.052595615386963
    6. '
' → logprob: -4.677595615386963
    7. 'for' → logprob: -4.802595615386963
    8. '       ' → logprob: -6.177595615386963
    9. ' all' → logprob: -6.552595615386963
    10. ' not' → logprob: -7.427595615386963

Token 1042: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4821954667568207
    2. ' n' → logprob: -1.107195496559143
    3. ' lines' → logprob: -3.6071953773498535
    4. ' the' → logprob: -5.1071953773498535
    5. ' is' → logprob: -5.3571953773498535
    6. ' it' → logprob: -5.8571953773498535
    7. 's' → logprob: -5.8571953773498535
    8. 'lines' → logprob: -6.4821953773498535
    9. '
' → logprob: -6.8571953773498535
    10. '```' → logprob: -7.2321953773498535

Token 1043: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.010800556279718876
    2. '<=' → logprob: -5.010800361633301
    3. ' ==' → logprob: -6.760800361633301
    4. ' <' → logprob: -6.885800361633301
    5. ' is' → logprob: -7.260800361633301
    6. '=' → logprob: -8.1358003616333
    7. '   ' → logprob: -8.1358003616333
    8. ' ≤' → logprob: -8.6358003616333
    9. ' =' → logprob: -9.0108003616333
    10. ' ' → logprob: -9.5108003616333

Token 1044: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2247592210769653
    2. '3' → logprob: -1.3497592210769653
    3. '4' → logprob: -1.5997592210769653
    4. '10' → logprob: -1.5997592210769653
    5. '20' → logprob: -4.099759101867676
    6. ' ' → logprob: -4.599759101867676
    7. '7' → logprob: -5.224759101867676
    8. '2' → logprob: -5.599759101867676
    9. '6' → logprob: -5.599759101867676
    10. '15' → logprob: -6.599759101867676

Token 1045: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9166675806045532
    2. '5' → logprob: -1.1666675806045532
    3. '3' → logprob: -1.5416675806045532
    4. '4' → logprob: -3.1666674613952637
    5. '20' → logprob: -4.291667461395264
    6. '2' → logprob: -4.416667461395264
    7. '6' → logprob: -5.916667461395264
    8. '15' → logprob: -6.541667461395264
    9. '7' → logprob: -6.666667461395264
    10. '8' → logprob: -7.541667461395264

Token 1046: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4878002405166626
    2. ',' → logprob: -1.4878002405166626
    3. ':
' → logprob: -2.112800121307373
    4. '       ' → logprob: -4.487800121307373
    5. ',
' → logprob: -4.737800121307373
    6. '0' → logprob: -4.737800121307373
    7. '):' → logprob: -5.237800121307373
    8. '
' → logprob: -6.737800121307373
    9. '):
' → logprob: -6.737800121307373
    10. '   ' → logprob: -7.237800121307373

Token 1047: ' we' (ID: 581)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5392873883247375
    2. 'return' → logprob: -1.5392873287200928
    3. ' #' → logprob: -3.0392873287200928
    4. '       ' → logprob: -3.1642873287200928
    5. ' we' → logprob: -3.2892873287200928
    6. '#' → logprob: -3.4142873287200928
    7. 'we' → logprob: -4.539287567138672
    8. '
' → logprob: -4.789287567138672
    9. ' for' → logprob: -5.539287567138672
    10. 'import' → logprob: -5.539287567138672

Token 1048: ' must' (ID: 2804)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.23717939853668213
    2. ' cannot' → logprob: -2.1121792793273926
    3. ' will' → logprob: -4.362179279327393
    4. '   ' → logprob: -4.487179279327393
    5. ' may' → logprob: -4.862179279327393
    6. 'import' → logprob: -4.862179279327393
    7. ' return' → logprob: -5.112179279327393
    8. '...' → logprob: -5.362179279327393
    9. ' continue' → logprob: -5.487179279327393
    10. ' might' → logprob: -5.612179279327393

Token 1049: ' find' (ID: 1646)
  Prédit: 'opt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'opt' → logprob: -0.60640949010849
    2. 'implement' → logprob: -1.2314095497131348
    3. 'limit' → logprob: -2.6064095497131348
    4. 'pr' → logprob: -3.2314095497131348
    5. 'return' → logprob: -4.356409549713135
    6. 'import' → logprob: -4.981409549713135
    7. 'avoid' → logprob: -4.981409549713135
    8. 'use' → logprob: -5.856409549713135
    9. 'not' → logprob: -5.981409549713135
    10. 'expl' → logprob: -5.981409549713135

Token 1050: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12750144302845
    2. ' a' → logprob: -2.2525014877319336
    3. ' an' → logprob: -5.002501487731934
    4. 'an' → logprob: -5.127501487731934
    5. 'another' → logprob: -7.127501487731934
    6. ' another' → logprob: -7.627501487731934
    7. ' ways' → logprob: -8.502501487731934
    8. ' smarter' → logprob: -9.002501487731934
    9. 'some' → logprob: -10.377501487731934
    10. ' some' → logprob: -10.627501487731934

Token 1051: ' safe' (ID: 7703)
  Prédit: ' way'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' way' → logprob: -0.9713014364242554
    2. ' more' → logprob: -1.9713014364242554
    3. ' method' → logprob: -2.471301555633545
    4. 'way' → logprob: -2.471301555633545
    5. 'better' → logprob: -2.846301555633545
    6. ' better' → logprob: -3.096301555633545
    7. 'more' → logprob: -3.596301555633545
    8. 'def' → logprob: -3.596301555633545
    9. ' solution' → logprob: -3.721301555633545
    10. ' smarter' → logprob: -3.846301555633545

Token 1052: ' way' (ID: 2006)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3520193099975586
    2. ' method' → logprob: -1.7270193099975586
    3. ' solution' → logprob: -1.7270193099975586
    4. ' way' → logprob: -2.4770193099975586
    5. 'method' → logprob: -2.4770193099975586
    6. 'way' → logprob: -3.2270193099975586
    7. ' approach' → logprob: -3.3520193099975586
    8. '   ' → logprob: -3.6020193099975586
    9. 'solution' → logprob: -3.6020193099975586
    10. 'space' → logprob: -4.227019309997559

Token 1053: '.

' (ID: 364)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0774884894490242
    2. '       ' → logprob: -3.202488422393799
    3. '   ' → logprob: -4.077488422393799
    4. ' ' → logprob: -5.452488422393799
    5. ' for' → logprob: -5.577488422393799
    6. '    ' → logprob: -6.202488422393799
    7. '        
' → logprob: -6.327488422393799
    8. '.' → logprob: -7.202488422393799
    9. ',' → logprob: -7.452488422393799
    10. '    
' → logprob: -7.577488422393799

Token 1054: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2549683153629303
    2. '
' → logprob: -1.504968285560608
    3. '        
' → logprob: -6.504968166351318
    4. '#' → logprob: -7.004968166351318
    5. 'import' → logprob: -8.254968643188477
    6. '```' → logprob: -8.879968643188477
    7. '   ' → logprob: -9.879968643188477
    8. 'def' → logprob: -10.504968643188477
    9. 'from' → logprob: -10.879968643188477
    10. '
' → logprob: -11.129968643188477

Token 1055: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13860462605953217
    2. '#' (adapté à ' #') → logprob: -2.8886046409606934
    3. '
' → logprob: -3.0136046409606934
    4. 'import' → logprob: -4.888604640960693
    5. 'from' → logprob: -5.138604640960693
    6. '```' → logprob: -6.013604640960693
    7. 'def' → logprob: -6.513604640960693
    8. 'max' → logprob: -6.638604640960693
    9. ' lines' → logprob: -6.888604640960693
    10. ' #' → logprob: -7.138604640960693

Token 1056: ' But' (ID: 3072)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9628191590309143
    2. 'from' → logprob: -1.0878190994262695
    3. 'import' → logprob: -2.4628190994262695
    4. '       ' → logprob: -2.5878190994262695
    5. 'max' → logprob: -3.0878190994262695
    6. 'if' → logprob: -3.5878190994262695
    7. 'def' → logprob: -3.8378190994262695
    8. 'solutions' → logprob: -5.0878190994262695
    9. 'result' → logprob: -5.7128190994262695
    10. 'lines' → logprob: -5.8378190994262695

Token 1057: ' max' (ID: 2999)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.382249355316162
    2. ' #' → logprob: -1.882249355316162
    3. ' from' → logprob: -1.882249355316162
    4. ' import' → logprob: -2.007249355316162
    5. ' if' → logprob: -2.257249355316162
    6. 'from' → logprob: -2.507249355316162
    7. '#' → logprob: -2.882249355316162
    8. ' n' → logprob: -4.007249355316162
    9. '
' → logprob: -4.257249355316162
    10. ' for' → logprob: -4.632249355316162

Token 1058: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7525420784950256
    2. ' n' → logprob: -1.5025420188903809
    3. '
' → logprob: -2.877542018890381
    4. 'import' → logprob: -3.002542018890381
    5. '_n' → logprob: -3.127542018890381
    6. 'def' → logprob: -3.502542018890381
    7. '(n' → logprob: -3.502542018890381
    8. '   ' → logprob: -3.752542018890381
    9. '(' → logprob: -4.127542018890381
    10. '```' → logprob: -4.377542018890381

Token 1059: ' is' (ID: 382)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.06597436964511871
    2. ' size' → logprob: -3.190974473953247
    3. 'n' → logprob: -4.315974235534668
    4. '_size' → logprob: -5.440974235534668
    5. 's' → logprob: -6.440974235534668
    6. ' is' → logprob: -7.190974235534668
    7. 'sizes' → logprob: -7.190974235534668
    8. '
' → logprob: -7.940974235534668
    9. '   ' → logprob: -8.065974235534668
    10. ' n' → logprob: -8.190974235534668

Token 1060: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5196354985237122
    2. ' ' → logprob: -1.6446354389190674
    3. '2' → logprob: -2.0196354389190674
    4. '3' → logprob: -3.1446354389190674
    5. '10' → logprob: -4.0196356773376465
    6. '   ' → logprob: -5.3946356773376465
    7. 'small' → logprob: -6.2696356773376465
    8. '       ' → logprob: -6.5196356773376465
    9. '50' → logprob: -6.7696356773376465
    10. 'n' → logprob: -6.7696356773376465

Token 1061: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4128923714160919
    2. '2' → logprob: -2.0378923416137695
    3. '3' → logprob: -2.0378923416137695
    4. '10' → logprob: -3.1628923416137695
    5. ' ' → logprob: -4.7878923416137695
    6. 'small' → logprob: -5.0378923416137695
    7. '20' → logprob: -5.2878923416137695
    8. 'n' → logprob: -5.7878923416137695
    9. '50' → logprob: -5.7878923416137695
    10. 'not' → logprob: -6.5378923416137695

Token 1062: ' lines' (ID: 8698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1519341915845871
    2. '       ' → logprob: -2.0269341468811035
    3. ' if' → logprob: -6.2769341468811035
    4. ' lines' → logprob: -6.5269341468811035
    5. '        
' → logprob: -6.7769341468811035
    6. '#' → logprob: -6.7769341468811035
    7. 'def' → logprob: -7.0269341468811035
    8. 'if' → logprob: -7.5269341468811035
    9. ',' → logprob: -7.5269341468811035
    10. 'n' → logprob: -8.526934623718262

Token 1063: ' ->' (ID: 2747)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48169589042663574
    2. '       ' → logprob: -0.9816958904266357
    3. '        
' → logprob: -5.856696128845215
    4. '#' → logprob: -6.481696128845215
    5. 'import' → logprob: -6.606696128845215
    6. ',' → logprob: -7.481696128845215
    7. '<|end|>' → logprob: -8.356696128845215
    8. 'from' → logprob: -8.606696128845215
    9. '```' → logprob: -8.856696128845215
    10. '<|end|>' → logprob: -9.231696128845215

Token 1064: ' huge' (ID: 9560)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7585859298706055
    2. 'if' → logprob: -1.8835859298706055
    3. 'return' → logprob: -2.2585859298706055
    4. ' if' → logprob: -2.3835859298706055
    5. 'import' → logprob: -2.6335859298706055
    6. 'from' → logprob: -3.2585859298706055
    7. '       ' → logprob: -3.7585859298706055
    8. ' #' → logprob: -4.0085859298706055
    9. ' return' → logprob: -4.2585859298706055
    10. ' from' → logprob: -5.3835859298706055

Token 1065: ' brute' (ID: 128602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5879079699516296
    2. '
' → logprob: -1.0879080295562744
    3. 'import' → logprob: -3.0879080295562744
    4. '#' → logprob: -3.4629080295562744
    5. 'from' → logprob: -5.087907791137695
    6. ' if' → logprob: -5.212907791137695
    7. '```' → logprob: -5.337907791137695
    8. 'if' → logprob: -5.462907791137695
    9. '        
' → logprob: -5.712907791137695
    10. ' lines' → logprob: -6.837907791137695

Token 1066: ' force' (ID: 9578)
  Prédit: ' force'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' force' → logprob: -0.6032618284225464
    2. '_force' → logprob: -1.1032618284225464
    3. 'force' → logprob: -2.228261947631836
    4. '_' → logprob: -5.353261947631836
    5. '-force' → logprob: -5.478261947631836
    6. '       ' → logprob: -6.603261947631836
    7. ')' → logprob: -7.103261947631836
    8. '           ' → logprob: -7.603261947631836
    9. 'f' → logprob: -7.853261947631836
    10. '_FORCE' → logprob: -7.978261947631836

Token 1067: ' impossible' (ID: 19786)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4145001471042633
    2. '       ' → logprob: -1.164500117301941
    3. 'import' → logprob: -4.7895002365112305
    4. '#' → logprob: -4.9145002365112305
    5. '        
' → logprob: -5.7895002365112305
    6. 'def' → logprob: -6.1645002365112305
    7. 'from' → logprob: -6.4145002365112305
    8. 'if' → logprob: -7.1645002365112305
    9. '```' → logprob: -7.5395002365112305
    10. '

' → logprob: -7.6645002365112305

Token 1068: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16818943619728088
    2. '
' → logprob: -2.043189525604248
    3. 'import' → logprob: -4.793189525604248
    4. '#' → logprob: -4.793189525604248
    5. '        
' → logprob: -5.668189525604248
    6. 'from' → logprob: -6.293189525604248
    7. '<|end|>' → logprob: -6.793189525604248
    8. '```' → logprob: -7.543189525604248
    9. '<|end|>' → logprob: -7.793189525604248
    10. ',' → logprob: -8.04318904876709

Token 1069: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09985999763011932
    2. '
' → logprob: -2.8498599529266357
    3. '#' → logprob: -3.3498599529266357
    4. '```' → logprob: -6.974860191345215
    5. 'import' → logprob: -7.224860191345215
    6. '        
' → logprob: -8.224860191345215
    7. 'from' → logprob: -9.474860191345215
    8. 'To' → logprob: -11.599860191345215
    9. 'Let's' → logprob: -11.599860191345215
    10. '#
' → logprob: -11.599860191345215

Token 1070: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.46741828322410583
    2. '       ' → logprob: -1.0924183130264282
    3. 'import' → logprob: -4.092418193817139
    4. 'from' → logprob: -4.592418193817139
    5. '
' → logprob: -4.717418193817139
    6. '        
' → logprob: -7.217418193817139
    7. 'lines' → logprob: -7.842418193817139
    8. 'def' → logprob: -8.092418670654297
    9. '   ' → logprob: -8.592418670654297
    10. 'We' → logprob: -8.967418670654297

Token 1071: ' Try' (ID: 14720)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8916527032852173
    2. 'from' → logprob: -1.3916527032852173
    3. 'def' → logprob: -2.0166525840759277
    4. '       ' → logprob: -2.1416525840759277
    5. 'import' → logprob: -2.6416525840759277
    6. 'solutions' → logprob: -5.016652584075928
    7. '   ' → logprob: -5.641652584075928
    8. 'lines' → logprob: -6.016652584075928
    9. '
' → logprob: -6.641652584075928
    10. 'if' → logprob: -7.141652584075928

Token 1072: ' a' (ID: 261)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.1019015312194824
    2. 'from' → logprob: -1.7269015312194824
    3. '       ' → logprob: -1.8519015312194824
    4. 'import' → logprob: -1.8519015312194824
    5. ':' → logprob: -2.6019015312194824
    6. '   ' → logprob: -3.6019015312194824
    7. '
' → logprob: -3.8519015312194824
    8. 'ing' → logprob: -4.476901531219482
    9. 'to' → logprob: -4.601901531219482
    10. '           ' → logprob: -4.851901531219482

Token 1073: ' better' (ID: 3432)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6570749878883362
    2. 'def' → logprob: -0.9070749878883362
    3. 'b' → logprob: -3.2820749282836914
    4. 'from' → logprob: -4.157074928283691
    5. 'import' → logprob: -5.032074928283691
    6. ' from' → logprob: -5.782074928283691
    7. 'dp' → logprob: -5.907074928283691
    8. 'pp' → logprob: -6.282074928283691
    9. '       ' → logprob: -6.282074928283691
    10. 'ny' → logprob: -6.907074928283691

Token 1074: ' approach' (ID: 7139)
  Prédit: 'appro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appro' → logprob: -0.2925357222557068
    2. ' approach' → logprob: -1.4175357818603516
    3. ' way' → logprob: -5.667535781860352
    4. 'import' → logprob: -6.292535781860352
    5. 'method' → logprob: -6.292535781860352
    6. 'way' → logprob: -6.292535781860352
    7. ' method' → logprob: -6.792535781860352
    8. 'solution' → logprob: -8.167535781860352
    9. '```' → logprob: -8.292535781860352
    10. '   ' → logprob: -8.917535781860352

Token 1075: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24153055250644684
    2. '
' → logprob: -1.7415305376052856
    3. '        
' → logprob: -3.866530656814575
    4. 'import' → logprob: -4.991530418395996
    5. '#' → logprob: -5.241530418395996
    6. '        ' → logprob: -6.116530418395996
    7. '```' → logprob: -7.116530418395996
    8. 'from' → logprob: -7.491530418395996
    9. '        

' → logprob: -7.491530418395996
    10. ' lines' → logprob: -7.741530418395996

Token 1076: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018003838136792183
    2. '#' → logprob: -4.143003940582275
    3. 'import' → logprob: -7.018003940582275
    4. 'from' → logprob: -7.518003940582275
    5. ' lines' → logprob: -8.768003463745117
    6. '        
' → logprob: -9.268003463745117
    7. '
' → logprob: -9.393003463745117
    8. ' #' → logprob: -10.143003463745117
    9. ' from' → logprob: -10.643003463745117
    10. '```' → logprob: -11.018003463745117

Token 1077: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3710581362247467
    2. '#' (adapté à ' #') → logprob: -1.2460581064224243
    3. 'import' → logprob: -4.621057987213135
    4. 'from' → logprob: -4.871057987213135
    5. ' lines' → logprob: -6.621057987213135
    6. '
' → logprob: -7.246057987213135
    7. ' #' → logprob: -7.496057987213135
    8. 'def' → logprob: -7.496057987213135
    9. '```' → logprob: -7.496057987213135
    10. ' from' → logprob: -7.996057987213135

Token 1078: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30730459094047546
    2. '       ' → logprob: -1.9323046207427979
    3. 'from' → logprob: -2.682304620742798
    4. 'import' → logprob: -3.682304620742798
    5. 'A' → logprob: -4.057304382324219
    6. 'def' → logprob: -6.307304382324219
    7. 'points' → logprob: -6.807304382324219
    8. 'Let's' → logprob: -7.057304382324219
    9. '   ' → logprob: -7.182304382324219
    10. 'lines' → logprob: -7.432304382324219

Token 1079: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.5029146671295166
    2. 'if' → logprob: -1.6279146671295166
    3. 'all' → logprob: -1.6279146671295166
    4. ' all' → logprob: -1.8779146671295166
    5. '   ' → logprob: -3.1279146671295166
    6. '       ' → logprob: -3.3779146671295166
    7. 'for' → logprob: -3.3779146671295166
    8. ' lines' → logprob: -3.7529146671295166
    9. ' combinations' → logprob: -4.0029144287109375
    10. 'from' → logprob: -4.5029144287109375

Token 1080: ' all' (ID: 722)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8637901544570923
    2. ' all' → logprob: -1.2387901544570923
    3. 'all' → logprob: -2.4887900352478027
    4. ' n' → logprob: -2.6137900352478027
    5. 'the' → logprob: -3.1137900352478027
    6. ' the' → logprob: -3.2387900352478027
    7. 'self' → logprob: -4.238790035247803
    8. ' self' → logprob: -4.488790035247803
    9. ' lines' → logprob: -4.988790035247803
    10. ' any' → logprob: -5.863790035247803

Token 1081: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.8999712467193604
    2. ' lines' → logprob: -1.0249712467193604
    3. 'self' → logprob: -3.0249712467193604
    4. '_lines' → logprob: -3.2749712467193604
    5. 'sign' → logprob: -3.5249712467193604
    6. 'norm' → logprob: -4.149971008300781
    7. '   ' → logprob: -4.649971008300781
    8. '(self' → logprob: -4.649971008300781
    9. 'pairs' → logprob: -4.649971008300781
    10. 'vectors' → logprob: -4.774971008300781

Token 1082: ' are' (ID: 553)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -1.225954294204712
    2. 'are' → logprob: -1.725954294204712
    3. ' have' → logprob: -1.725954294204712
    4. '   ' → logprob: -1.850954294204712
    5. '[i' → logprob: -2.475954294204712
    6. ' are' → logprob: -2.850954294204712
    7. '[' → logprob: -4.600954055786133
    8. '       ' → logprob: -4.600954055786133
    9. '#' → logprob: -5.350954055786133
    10. ' lie' → logprob: -5.475954055786133

Token 1083: ' parallel' (ID: 26697)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.07479961216449738
    2. ' parallel' → logprob: -3.3247995376586914
    3. 'pair' → logprob: -3.5747995376586914
    4. ' pair' → logprob: -5.449799537658691
    5. 'ident' → logprob: -7.324799537658691
    6. 'approximately' → logprob: -7.574799537658691
    7. 'equal' → logprob: -8.074799537658691
    8. 'con' → logprob: -8.199799537658691
    9. ' identical' → logprob: -8.199799537658691
    10. '   ' → logprob: -8.324799537658691

Token 1084: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003501834347844124
    2. ' lines' → logprob: -6.878501892089844
    3. 'if' → logprob: -7.628501892089844
    4. '
' → logprob: -8.003501892089844
    5. ' first' → logprob: -8.378501892089844
    6. ' if' → logprob: -8.378501892089844
    7. ':' → logprob: -8.378501892089844
    8. '        
' → logprob: -8.503501892089844
    9. 'first' → logprob: -9.128501892089844
    10. ',' → logprob: -9.128501892089844

Token 1085: ' line' (ID: 2543)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05939984694123268
    2. ' self' → logprob: -3.3093998432159424
    3. 'the' → logprob: -4.1844000816345215
    4. '(self' → logprob: -6.0594000816345215
    5. ' the' → logprob: -6.4344000816345215
    6. 'line' → logprob: -7.0594000816345215
    7. ' (' → logprob: -8.434399604797363
    8. ' line' → logprob: -8.434399604797363
    9. '       ' → logprob: -8.934399604797363
    10. 'Line' → logprob: -9.184399604797363

Token 1086: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6396834254264832
    2. '0' → logprob: -0.7646834254264832
    3. 'self' → logprob: -5.639683246612549
    4. '[' → logprob: -6.764683246612549
    5. 's' → logprob: -7.014683246612549
    6. '       ' → logprob: -7.764683246612549
    7. ' _' → logprob: -8.264683723449707
    8. ')' → logprob: -8.764683723449707
    9. ' ' → logprob: -9.264683723449707
    10. '
' → logprob: -9.514683723449707

Token 1087: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035739345476031303
    2. '_' → logprob: -5.878573894500732
    3. 'self' → logprob: -7.253573894500732
    4. ' ' → logprob: -11.12857437133789
    5. '   ' → logprob: -11.12857437133789
    6. '```' → logprob: -12.00357437133789
    7. '_lines' → logprob: -12.37857437133789
    8. ' self' → logprob: -12.62857437133789
    9. '       ' → logprob: -12.75357437133789
    10. '(self' → logprob: -13.00357437133789

Token 1088: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042373232543468475
    2. ' line' → logprob: -4.167373180389404
    3. ' first' → logprob: -4.667373180389404
    4. ' if' → logprob: -5.542373180389404
    5. ' lines' → logprob: -5.917373180389404
    6. 'if' → logprob: -6.542373180389404
    7. 'line' → logprob: -6.792373180389404
    8. ':' → logprob: -6.917373180389404
    9. ' is' → logprob: -7.292373180389404
    10. ' ref' → logprob: -7.417373180389404

Token 1089: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5880846977233887
    2. ' line' → logprob: -1.5880846977233887
    3. ' first' → logprob: -2.2130846977233887
    4. ' if' → logprob: -3.3380846977233887
    5. ' lines' → logprob: -3.8380846977233887
    6. ' is' → logprob: -4.463084697723389
    7. ' parallel' → logprob: -4.838084697723389
    8. ' ref' → logprob: -4.838084697723389
    9. ' all' → logprob: -5.213084697723389
    10. 'if' → logprob: -5.213084697723389

Token 1090: ' infinite' (ID: 48413)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7287417054176331
    2. ' return' → logprob: -1.6037416458129883
    3. '#' → logprob: -1.8537416458129883
    4. '   ' → logprob: -2.9787416458129883
    5. 'A' → logprob: -3.7287416458129883
    6. 'all' → logprob: -4.478741645812988
    7. ' #' → logprob: -4.853741645812988
    8. 'direction' → logprob: -4.853741645812988
    9. '           ' → logprob: -4.978741645812988
    10. ' A' → logprob: -4.978741645812988

Token 1091: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.1914873123168945
    2. ' lines' → logprob: -1.8164873123168945
    3. '_points' → logprob: -2.1914873123168945
    4. ' points' → logprob: -2.6914873123168945
    5. 'lines' → logprob: -2.8164873123168945
    6. '_lines' → logprob: -3.0664873123168945
    7. '```' → logprob: -3.0664873123168945
    8. '       ' → logprob: -3.1914873123168945
    9. 'for' → logprob: -3.4414873123168945
    10. '   ' → logprob: -3.5664873123168945

Token 1092: ' along' (ID: 4251)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03641021251678467
    2. ' if' → logprob: -4.661410331726074
    3. ' lines' → logprob: -5.536410331726074
    4. ' for' → logprob: -5.661410331726074
    5. 'if' → logprob: -5.786410331726074
    6. ',' → logprob: -5.911410331726074
    7. 'for' → logprob: -6.161410331726074
    8. '.' → logprob: -6.286410331726074
    9. ':' → logprob: -6.411410331726074
    10. '
' → logprob: -6.411410331726074

Token 1093: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.186267614364624
    2. ' the' → logprob: -1.561267614364624
    3. ' line' → logprob: -1.686267614364624
    4. 'self' → logprob: -1.686267614364624
    5. ' self' → logprob: -3.186267614364624
    6. 'line' → logprob: -3.436267614364624
    7. ' a' → logprob: -4.061267852783203
    8. 'a' → logprob: -4.561267852783203
    9. ' lines' → logprob: -5.436267852783203
    10. ' that' → logprob: -6.311267852783203

Token 1094: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06883715093135834
    2. ' line' → logprob: -2.8188371658325195
    3. 'single' → logprob: -6.5688371658325195
    4. 'straight' → logprob: -6.9438371658325195
    5. 'direction' → logprob: -7.0688371658325195
    6. '_line' → logprob: -7.3188371658325195
    7. 'parallel' → logprob: -7.4438371658325195
    8. 'per' → logprob: -7.4438371658325195
    9. 'Line' → logprob: -7.8188371658325195
    10. '...' → logprob: -8.56883716583252

Token 1095: ' perpendicular' (ID: 137754)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005707407835870981
    2. ' line' → logprob: -6.630707263946533
    3. 'line' → logprob: -7.255707263946533
    4. ' first' → logprob: -7.255707263946533
    5. 'if' → logprob: -7.630707263946533
    6. ' lines' → logprob: -7.630707263946533
    7. 'first' → logprob: -8.130707740783691
    8. 'all' → logprob: -8.505707740783691
    9. ' if' → logprob: -8.630707740783691
    10. ' is' → logprob: -8.755707740783691

Token 1096: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33845090866088867
    2. ' to' → logprob: -2.9634509086608887
    3. ' if' → logprob: -3.0884509086608887
    4. '
' → logprob: -3.4634509086608887
    5. ' else' → logprob: -3.7134509086608887
    6. '#' → logprob: -4.088450908660889
    7. ',' → logprob: -4.213450908660889
    8. '_' → logprob: -4.463450908660889
    9. ' or' → logprob: -4.588450908660889
    10. ')' → logprob: -4.713450908660889

Token 1097: ' them' (ID: 1373)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5670645236968994
    2. 'line' → logprob: -1.5670645236968994
    3. 'the' → logprob: -1.6920645236968994
    4. ' line' → logprob: -3.5670645236968994
    5. ' self' → logprob: -5.06706428527832
    6. ' the' → logprob: -5.44206428527832
    7. 'them' → logprob: -7.19206428527832
    8. ' them' → logprob: -9.31706428527832
    9. 'Line' → logprob: -9.69206428527832
    10. '_line' → logprob: -9.81706428527832

Token 1098: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019996697083115578
    2. ' if' → logprob: -4.769996643066406
    3. 'if' → logprob: -5.394996643066406
    4. ',' → logprob: -6.019996643066406
    5. '.' → logprob: -6.894996643066406
    6. ')' → logprob: -7.894996643066406
    7. '
' → logprob: -8.019996643066406
    8. '        
' → logprob: -8.144996643066406
    9. '#' → logprob: -8.394996643066406
    10. ':' → logprob: -8.519996643066406

Token 1099: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043852970004081726
    2. '
' → logprob: -3.2938530445098877
    3. ' if' → logprob: -6.043852806091309
    4. 'if' → logprob: -7.543852806091309
    5. ' lines' → logprob: -7.543852806091309
    6. '        
' → logprob: -7.793852806091309
    7. '```' → logprob: -8.168852806091309
    8. 'If' → logprob: -8.168852806091309
    9. '
' → logprob: -8.543852806091309
    10. '           ' → logprob: -8.668852806091309

Token 1100: ' Many' (ID: 11048)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5609420537948608
    2. 'return' → logprob: -0.9359420537948608
    3. '#' → logprob: -4.43594217300415
    4. ' #' → logprob: -5.31094217300415
    5. ' lines' → logprob: -5.31094217300415
    6. '       ' → logprob: -5.56094217300415
    7. ' if' → logprob: -6.31094217300415
    8. 'Return' → logprob: -6.31094217300415
    9. 'Let's' → logprob: -6.93594217300415
    10. ' for' → logprob: -7.06094217300415

Token 1101: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3089178800582886
    2. '   ' → logprob: -3.433917999267578
    3. ' for' → logprob: -3.558917999267578
    4. '           ' → logprob: -3.558917999267578
    5. ' if' → logprob: -3.558917999267578
    6. ' lines' → logprob: -3.558917999267578
    7. '_' → logprob: -3.933917999267578
    8. ')' → logprob: -4.183917999267578
    9. '
' → logprob: -4.558917999267578
    10. ' _' → logprob: -5.058917999267578

Token 1102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015560796484351158
    2. '#' → logprob: -4.390560626983643
    3. '
' → logprob: -6.890560626983643
    4. '           ' → logprob: -7.390560626983643
    5. 'If' → logprob: -8.5155611038208
    6. '```' → logprob: -8.5155611038208
    7. '        
' → logprob: -8.6405611038208
    8. ' if' → logprob: -9.0155611038208
    9. 'else' → logprob: -9.0155611038208
    10. '        ' → logprob: -9.2655611038208

Token 1103: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06640996038913727
    2. '#' (adapté à ' #') → logprob: -3.4414100646972656
    3. 'if' → logprob: -3.6914100646972656
    4. ' lines' → logprob: -6.191410064697266
    5. ' if' → logprob: -6.316410064697266
    6. '
' → logprob: -7.066410064697266
    7. ' #' → logprob: -7.441410064697266
    8. 'lines' → logprob: -7.816410064697266
    9. '   ' → logprob: -8.066410064697266
    10. '        
' → logprob: -8.191410064697266

Token 1104: ' Otherwise' (ID: 33987)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5154905915260315
    2. 'all' → logprob: -1.7654905319213867
    3. '#' → logprob: -3.1404905319213867
    4. 'first' → logprob: -3.2654905319213867
    5. 'line' → logprob: -3.6404905319213867
    6. '   ' → logprob: -3.7654905319213867
    7. ' lines' → logprob: -4.140490531921387
    8. 'ref' → logprob: -4.265490531921387
    9. ' first' → logprob: -4.515490531921387
    10. 'base' → logprob: -5.015490531921387

Token 1105: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1504596620798111
    2. '#' → logprob: -3.0254597663879395
    3. ' line' → logprob: -3.0254597663879395
    4. ' A' → logprob: -4.4004597663879395
    5. ' lines' → logprob: -5.0254597663879395
    6. 'line' → logprob: -5.1504597663879395
    7. 'A' → logprob: -5.2754597663879395
    8. ' #' → logprob: -5.6504597663879395
    9. ' first' → logprob: -5.9004597663879395
    10. '
' → logprob: -6.9004597663879395

Token 1106: ' try' (ID: 2075)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18254384398460388
    2. 'A' → logprob: -2.8075437545776367
    3. 'for' → logprob: -4.057543754577637
    4. 'line' → logprob: -4.432543754577637
    5. ' #' → logprob: -4.557543754577637
    6. 'from' → logprob: -4.932543754577637
    7. 'ref' → logprob: -4.932543754577637
    8. '       ' → logprob: -5.057543754577637
    9. 'base' → logprob: -5.307543754577637
    10. 'c' → logprob: -5.557543754577637

Token 1107: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22490686178207397
    2. 'from' → logprob: -2.9749069213867188
    3. 'for' → logprob: -3.0999069213867188
    4. 'import' → logprob: -3.8499069213867188
    5. 'def' → logprob: -3.9749069213867188
    6. '   ' → logprob: -4.349906921386719
    7. ' for' → logprob: -4.349906921386719
    8. ' lines' → logprob: -5.099906921386719
    9. 'points' → logprob: -5.099906921386719
    10. '```' → logprob: -5.349906921386719

Token 1108: ' heuristic' (ID: 146226)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6483144760131836
    2. 'def' → logprob: -0.8983144760131836
    3. 'import' → logprob: -4.023314476013184
    4. '       ' → logprob: -4.148314476013184
    5. '```' → logprob: -4.648314476013184
    6. 'for' → logprob: -4.773314476013184
    7. ' from' → logprob: -5.398314476013184
    8. '#' → logprob: -5.773314476013184
    9. 'different' → logprob: -5.898314476013184
    10. 'return' → logprob: -6.398314476013184

Token 1109: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038505515549331903
    2. ' lines' → logprob: -6.37885046005249
    3. '
' → logprob: -7.25385046005249
    4. '        
' → logprob: -8.003850936889648
    5. '#' → logprob: -8.503850936889648
    6. 'def' → logprob: -9.128850936889648
    7. '        ' → logprob: -9.378850936889648
    8. '   ' → logprob: -9.503850936889648
    9. ' def' → logprob: -9.753850936889648
    10. ' #' → logprob: -9.878850936889648

Token 1110: ' linear' (ID: 23876)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6978346705436707
    2. 'math' → logprob: -1.6978347301483154
    3. 'com' → logprob: -1.8228347301483154
    4. 'self' → logprob: -2.6978347301483154
    5. 'random' → logprob: -3.4478347301483154
    6. 'import' → logprob: -4.322834491729736
    7. 'from' → logprob: -4.947834491729736
    8. 'intersection' → logprob: -5.322834491729736
    9. 'numpy' → logprob: -5.322834491729736
    10. 'sys' → logprob: -5.697834491729736

Token 1111: ' system' (ID: 2420)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.7527087330818176
    2. 'com' → logprob: -1.2527086734771729
    3. ' algebra' → logprob: -1.5027086734771729
    4. 'equ' → logprob: -4.752708911895752
    5. ' combinations' → logprob: -5.252708911895752
    6. 'ind' → logprob: -6.127708911895752
    7. ' equations' → logprob: -6.752708911895752
    8. 'comb' → logprob: -6.752708911895752
    9. 'system' → logprob: -7.127708911895752
    10. 'systems' → logprob: -8.127708435058594

Token 1112: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004209225066006184
    2. ' lines' → logprob: -6.379209041595459
    3. '
' → logprob: -7.254209041595459
    4. '#' → logprob: -7.379209041595459
    5. '        
' → logprob: -7.879209041595459
    6. 'A' → logprob: -9.129209518432617
    7. ' A' → logprob: -9.129209518432617
    8. 'def' → logprob: -9.504209518432617
    9. ' #' → logprob: -9.629209518432617
    10. 'from' → logprob: -9.629209518432617

Token 1113: ' one' (ID: 1001)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.0438381433486938
    2. 'each' → logprob: -1.1688381433486938
    3. 'coeff' → logprob: -2.5438380241394043
    4. 'i' → logprob: -2.6688380241394043
    5. 'the' → logprob: -3.0438380241394043
    6. 'all' → logprob: -3.0438380241394043
    7. 'one' → logprob: -3.7938380241394043
    8. 'com' → logprob: -3.9188380241394043
    9. 'possible' → logprob: -4.668838024139404
    10. ' each' → logprob: -5.168838024139404

Token 1114: ' sign' (ID: 2232)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.2009094953536987
    2. 'of' → logprob: -1.9509094953536987
    3. 'i' → logprob: -2.0759096145629883
    4. ' or' → logprob: -2.7009096145629883
    5. ')' → logprob: -2.8259096145629883
    6. 'line' → logprob: -3.0759096145629883
    7. ' line' → logprob: -3.0759096145629883
    8. 'sign' → logprob: -3.3259096145629883
    9. '
' → logprob: -3.4509096145629883
    10. '   ' → logprob: -3.7009096145629883

Token 1115: ' pattern' (ID: 8302)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24394114315509796
    2. ')' → logprob: -2.493941068649292
    3. 'pattern' → logprob: -3.868941068649292
    4. 'def' → logprob: -3.993941068649292
    5. ':' → logprob: -4.368941307067871
    6. 's' → logprob: -4.493941307067871
    7. ',' → logprob: -4.618941307067871
    8. '=' → logprob: -4.868941307067871
    9. ' pattern' → logprob: -4.868941307067871
    10. '):' → logprob: -4.993941307067871

Token 1116: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017533571226522326
    2. ' lines' → logprob: -7.876753330230713
    3. '        
' → logprob: -8.251753807067871
    4. '
' → logprob: -8.501753807067871
    5. '```' → logprob: -8.751753807067871
    6. '#' → logprob: -8.751753807067871
    7. 'import' → logprob: -9.001753807067871
    8. 'from' → logprob: -9.126753807067871
    9. '   ' → logprob: -9.626753807067871
    10. 'def' → logprob: -9.751753807067871

Token 1117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002501343551557511
    2. '        
' → logprob: -9.250249862670898
    3. '```' → logprob: -10.375249862670898
    4. '           ' → logprob: -10.500249862670898
    5. '        ' → logprob: -10.875249862670898
    6. '
' → logprob: -11.125249862670898
    7. ',' → logprob: -11.250249862670898
    8. '   ' → logprob: -11.875249862670898
    9. 'import' → logprob: -12.000249862670898
    10. '#' → logprob: -12.000249862670898

Token 1118: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03301028162240982
    2. '#' (adapté à ' #') → logprob: -3.908010244369507
    3. 'sign' → logprob: -5.283010482788086
    4. 'from' → logprob: -6.158010482788086
    5. 'import' → logprob: -6.658010482788086
    6. 'lines' → logprob: -6.783010482788086
    7. ' lines' → logprob: -7.533010482788086
    8. '
' → logprob: -7.783010482788086
    9. 'best' → logprob: -7.908010482788086
    10. 'A' → logprob: -8.033010482788086

Token 1119: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4556490182876587
    2. 'A' → logprob: -1.7056490182876587
    3. '       ' → logprob: -2.205648899078369
    4. 'def' → logprob: -2.580648899078369
    5. 'solutions' → logprob: -2.830648899078369
    6. 'from' → logprob: -2.955648899078369
    7. '   ' → logprob: -2.955648899078369
    8. 'lines' → logprob: -3.205648899078369
    9. 'best' → logprob: -3.205648899078369
    10. 'for' → logprob: -3.455648899078369

Token 1120: ' will' (ID: 738)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8569185733795166
    2. ' try' → logprob: -1.7319185733795166
    3. ' continue' → logprob: -1.7319185733795166
    4. ' def' → logprob: -2.9819185733795166
    5. ' #' → logprob: -3.4819185733795166
    6. ' _' → logprob: -3.8569185733795166
    7. ' can' → logprob: -4.1069183349609375
    8. '       ' → logprob: -4.2319183349609375
    9. 'continue' → logprob: -4.6069183349609375
    10. 'def' → logprob: -4.7319183349609375

Token 1121: ' try' (ID: 2075)
  Prédit: ' try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.21513545513153076
    2. 'try' → logprob: -2.0901355743408203
    3. '   ' → logprob: -3.0901355743408203
    4. 'import' → logprob: -4.46513557434082
    5. ' check' → logprob: -5.71513557434082
    6. ' import' → logprob: -6.46513557434082
    7. 'def' → logprob: -6.84013557434082
    8. '       ' → logprob: -6.96513557434082
    9. ' attempt' → logprob: -7.21513557434082
    10. 'attempt' → logprob: -7.21513557434082

Token 1122: ' systematic' (ID: 62813)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.08658456802368164
    2. 'all' → logprob: -3.2115845680236816
    3. '   ' → logprob: -4.211584568023682
    4. 'sign' → logprob: -4.836584568023682
    5. ' to' → logprob: -5.086584568023682
    6. ' combinations' → logprob: -5.336584568023682
    7. ' sign' → logprob: -5.961584568023682
    8. 'import' → logprob: -6.836584568023682
    9. ':' → logprob: -7.086584568023682
    10. ' patterns' → logprob: -7.336584568023682

Token 1123: ' solving' (ID: 37367)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8108341097831726
    2. ' import' → logprob: -1.6858341693878174
    3. '_' → logprob: -2.5608341693878174
    4. '_sign' → logprob: -2.6858341693878174
    5. 'def' → logprob: -2.8108341693878174
    6. ' ' → logprob: -3.3108341693878174
    7. 'import' → logprob: -4.060833930969238
    8. ' line' → logprob: -4.185833930969238
    9. ' lines' → logprob: -4.185833930969238
    10. ' _' → logprob: -4.560833930969238

Token 1124: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03135232999920845
    2. '
' → logprob: -4.406352519989014
    3. 'from' → logprob: -5.031352519989014
    4. 'def' → logprob: -5.906352519989014
    5. ' lines' → logprob: -6.781352519989014
    6. 'import' → logprob: -6.781352519989014
    7. '   ' → logprob: -6.781352519989014
    8. '```' → logprob: -6.906352519989014
    9. 'sign' → logprob: -7.031352519989014
    10. 'n' → logprob: -7.281352519989014

Token 1125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012771788984537125
    2. 'from' → logprob: -5.1377716064453125
    3. 'sign' → logprob: -6.3877716064453125
    4. ' from' → logprob: -6.5127716064453125
    5. 'import' → logprob: -7.0127716064453125
    6. '
' → logprob: -7.6377716064453125
    7. ' lines' → logprob: -8.012771606445312
    8. ' solutions' → logprob: -8.137771606445312
    9. 'solutions' → logprob: -8.137771606445312
    10. '   ' → logprob: -8.637771606445312

Token 1126: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19724315404891968
    2. 'sign' → logprob: -2.9472432136535645
    3. 'solutions' → logprob: -3.0722432136535645
    4. 'm' → logprob: -3.9472432136535645
    5. 'from' → logprob: -4.1972432136535645
    6. '#' (adapté à ' #') → logprob: -4.1972432136535645
    7. 'results' → logprob: -4.9472432136535645
    8. 'result' → logprob: -5.1972432136535645
    9. 'lines' → logprob: -5.1972432136535645
    10. 'res' → logprob: -5.8222432136535645

Token 1127: ' Each' (ID: 11555)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1199822425842285
    2. 'solutions' → logprob: -1.3699822425842285
    3. 'from' → logprob: -1.7449822425842285
    4. 'results' → logprob: -2.4949822425842285
    5. 'sign' → logprob: -3.2449822425842285
    6. 'def' → logprob: -3.3699822425842285
    7. 'result' → logprob: -3.7449822425842285
    8. '#' → logprob: -4.3699822425842285
    9. 'lines' → logprob: -4.7449822425842285
    10. 'import' → logprob: -4.7449822425842285

Token 1128: ' combination' (ID: 14083)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4644286632537842
    2. ' i' → logprob: -1.9644286632537842
    3. '_i' → logprob: -2.089428663253784
    4. ' line' → logprob: -3.589428663253784
    5. 'sign' → logprob: -3.714428663253784
    6. '_' → logprob: -4.089428901672363
    7. '_sign' → logprob: -4.714428901672363
    8. ' combination' → logprob: -5.214428901672363
    9. ' sign' → logprob: -5.339428901672363
    10. 'import' → logprob: -5.589428901672363

Token 1129: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22461915016174316
    2. ' of' → logprob: -2.474619150161743
    3. ':' → logprob: -3.349619150161743
    4. '=' → logprob: -3.599619150161743
    5. ' in' → logprob: -4.474618911743164
    6. ' is' → logprob: -4.974618911743164
    7. 'import' → logprob: -5.099618911743164
    8. '_' → logprob: -5.599618911743164
    9. ',' → logprob: -5.849618911743164
    10. ' for' → logprob: -5.974618911743164

Token 1130: ' choices' (ID: 14494)
  Prédit: ' represented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' represented' → logprob: -0.25920745730400085
    2. ' choices' → logprob: -2.6342074871063232
    3. 'choices' → logprob: -3.6342074871063232
    4. '[' → logprob: -3.8842074871063232
    5. 'represented' → logprob: -3.8842074871063232
    6. ' [' → logprob: -4.259207248687744
    7. ' a' → logprob: -4.509207248687744
    8. ' ' → logprob: -5.009207248687744
    9. '0' → logprob: -5.634207248687744
    10. 'bits' → logprob: -5.884207248687744

Token 1131: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07526221126317978
    2. ' of' → logprob: -3.9502623081207275
    3. '=' → logprob: -4.200262069702148
    4. ':' → logprob: -5.200262069702148
    5. '_' → logprob: -5.575262069702148
    6. ' for' → logprob: -5.575262069702148
    7. ' in' → logprob: -5.700262069702148
    8. ' ' → logprob: -5.700262069702148
    9. 'for' → logprob: -6.075262069702148
    10. 'import' → logprob: -6.200262069702148

Token 1132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019410638138651848
    2. ']:' → logprob: -4.644410610198975
    3. ']==' → logprob: -6.144410610198975
    4. ' ]' → logprob: -6.269410610198975
    5. 's' → logprob: -6.769410610198975
    6. ']:
' → logprob: -6.894410610198975
    7. '+' → logprob: -7.144410610198975
    8. ']=' → logprob: -7.769410610198975
    9. '[' → logprob: -8.019411087036133
    10. ']+' → logprob: -8.269411087036133

Token 1133: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40484362840652466
    2. '_' → logprob: -2.15484356880188
    3. 's' → logprob: -2.65484356880188
    4. '=' → logprob: -2.65484356880188
    5. ':' → logprob: -3.02984356880188
    6. '[' → logprob: -4.654843807220459
    7. '[i' → logprob: -6.029843807220459
    8. ' ' → logprob: -6.029843807220459
    9. ')' → logprob: -6.529843807220459
    10. '```' → logprob: -6.654843807220459

Token 1134: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013531115837395191
    2. '{' → logprob: -4.76353120803833
    3. '[-' → logprob: -5.51353120803833
    4. '(' → logprob: -7.13853120803833
    5. ' [' → logprob: -9.888530731201172
    6. '{-' → logprob: -11.138530731201172
    7. 'range' → logprob: -12.013530731201172
    8. '[
' → logprob: -13.263530731201172
    9. '(-' → logprob: -13.388530731201172
    10. ' {' → logprob: -13.888530731201172

Token 1135: '+' (ID: 10)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02893657796084881
    2. '-' → logprob: -3.7789366245269775
    3. 'True' → logprob: -5.653936386108398
    4. 'False' → logprob: -6.403936386108398
    5. '+' → logprob: -7.653936386108398
    6. '1' → logprob: -11.153936386108398
    7. ' ' → logprob: -11.153936386108398
    8. ' -' → logprob: -12.778936386108398
    9. ' True' → logprob: -13.528936386108398
    10. '   ' → logprob: -13.778936386108398

Token 1136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000714935187716037
    2. '-' → logprob: -7.7507147789001465
    3. ',' → logprob: -8.250715255737305
    4. ',-' → logprob: -11.125715255737305
    5. '-,' → logprob: -12.500715255737305
    6. '}' → logprob: -13.250715255737305
    7. ' -' → logprob: -14.125715255737305
    8. '
' → logprob: -14.625715255737305
    9. ' ' → logprob: -14.750715255737305
    10. '-
' → logprob: -15.125715255737305

Token 1137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002526553114876151
    2. '}' → logprob: -6.252526760101318
    3. ' ,' → logprob: -8.25252628326416
    4. ',
' → logprob: -8.37752628326416
    5. '       ' → logprob: -10.50252628326416
    6. '   ' → logprob: -11.12752628326416
    7. '           ' → logprob: -11.62752628326416
    8. '...' → logprob: -11.75252628326416
    9. ',...' → logprob: -11.87752628326416
    10. 'import' → logprob: -12.25252628326416

Token 1138: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0040835049003362656
    2. ' -' → logprob: -5.504083633422852
    3. '1' → logprob: -13.254083633422852
    4. ' ' → logprob: -13.629083633422852
    5. '   ' → logprob: -13.754083633422852
    6. '-
' → logprob: -14.379083633422852
    7. '\-' → logprob: -16.00408363342285
    8. '−' → logprob: -16.75408363342285
    9. ',' → logprob: -17.00408363342285
    10. '0' → logprob: -17.00408363342285

Token 1139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000321995816193521
    2. '}' → logprob: -8.125322341918945
    3. ' ' → logprob: -10.875322341918945
    4. ',' → logprob: -12.375322341918945
    5. '   ' → logprob: -13.625322341918945
    6. '...' → logprob: -14.625322341918945
    7. '       ' → logprob: -15.250322341918945
    8. '
' → logprob: -15.500322341918945
    9. '=' → logprob: -15.750322341918945
    10. '},' → logprob: -16.625322341918945

Token 1140: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.004594722762703896
    2. ' }' → logprob: -5.504594802856445
    3. ',' → logprob: -8.879594802856445
    4. '}
' → logprob: -9.004594802856445
    5. '}:' → logprob: -9.129594802856445
    6. '       ' → logprob: -9.754594802856445
    7. '[' → logprob: -10.254594802856445
    8. '   ' → logprob: -11.629594802856445
    9. '...' → logprob: -11.879594802856445
    10. ']' → logprob: -12.004594802856445

Token 1141: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7912742495536804
    2. ':' → logprob: -1.1662743091583252
    3. '
' → logprob: -2.666274309158325
    4. ' for' → logprob: -3.416274309158325
    5. ',' → logprob: -3.666274309158325
    6. 'for' → logprob: -3.666274309158325
    7. 'import' → logprob: -4.041274070739746
    8. '[' → logprob: -4.166274070739746
    9. '        
' → logprob: -4.791274070739746
    10. ' ' → logprob: -5.291274070739746

Token 1142: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6810551881790161
    2. 'i' → logprob: -0.8060551881790161
    3. ' range' → logprob: -3.5560550689697266
    4. 'range' → logprob: -4.056055068969727
    5. '1' → logprob: -6.931055068969727
    6. ' ' → logprob: -8.181055068969727
    7. '   ' → logprob: -10.056055068969727
    8. '(i' → logprob: -10.306055068969727
    9. '
' → logprob: -10.681055068969727
    10. '[i' → logprob: -10.806055068969727

Token 1143: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6146109700202942
    2. ' in' → logprob: -1.1146109104156494
    3. '=' → logprob: -2.7396109104156494
    4. ':' → logprob: -3.6146109104156494
    5. '   ' → logprob: -4.8646111488342285
    6. ' =' → logprob: -5.2396111488342285
    7. ',' → logprob: -5.2396111488342285
    8. '
' → logprob: -5.4896111488342285
    9. 'from' → logprob: -5.4896111488342285
    10. '       ' → logprob: -5.7396111488342285

Token 1144: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04301905632019043
    2. ' range' → logprob: -3.1680190563201904
    3. '[' → logprob: -12.04301929473877
    4. '1' → logprob: -12.16801929473877
    5. '(range' → logprob: -12.91801929473877
    6. '`' → logprob: -13.29301929473877
    7. '   ' → logprob: -13.29301929473877
    8. '	range' → logprob: -14.04301929473877
    9. '
' → logprob: -14.41801929473877
    10. '```' → logprob: -14.41801929473877

Token 1145: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005249414127320051
    2. ' range' → logprob: -5.255249500274658
    3. '1' → logprob: -11.8802490234375
    4. '
' → logprob: -12.3802490234375
    5. '[' → logprob: -12.7552490234375
    6. '(range' → logprob: -14.5052490234375
    7. '```' → logprob: -14.8802490234375
    8. '   ' → logprob: -15.2552490234375
    9. '`' → logprob: -15.3802490234375
    10. '	range' → logprob: -15.8802490234375

Token 1146: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33823713660240173
    2. ':' → logprob: -1.3382371664047241
    3. ',
' → logprob: -4.838237285614014
    4. '...' → logprob: -5.338237285614014
    5. ':
' → logprob: -5.588237285614014
    6. '..' → logprob: -6.088237285614014
    7. ',...' → logprob: -6.088237285614014
    8. ':,' → logprob: -6.838237285614014
    9. ',n' → logprob: -7.338237285614014
    10. '
' → logprob: -7.463237285614014

Token 1147: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014142473228275776
    2. '(n' → logprob: -4.7641425132751465
    3. '
' → logprob: -6.2641425132751465
    4. ' n' → logprob: -6.5141425132751465
    5. ',' → logprob: -6.6391425132751465
    6. '1' → logprob: -8.389142036437988
    7. 'range' → logprob: -8.764142036437988
    8. ',n' → logprob: -9.139142036437988
    9. '```' → logprob: -9.264142036437988
    10. '`' → logprob: -9.764142036437988

Token 1148: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006358404643833637
    2. '-
' → logprob: -6.006358623504639
    3. ' -' → logprob: -7.006358623504639
    4. '
' → logprob: -7.131358623504639
    5. ',' → logprob: -7.631358623504639
    6. '       ' → logprob: -8.13135814666748
    7. '#' → logprob: -8.13135814666748
    8. '<|end|>' → logprob: -8.88135814666748
    9. 'def' → logprob: -9.13135814666748
    10. '...' → logprob: -9.25635814666748

Token 1149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.250008583068848
    3. '```' → logprob: -13.375008583068848
    4. '-' → logprob: -13.625008583068848
    5. '   ' → logprob: -15.625008583068848
    6. ')' → logprob: -15.875008583068848
    7. 'i' → logprob: -16.75000762939453
    8. '
' → logprob: -16.87500762939453
    9. '...' → logprob: -17.25000762939453
    10. 'n' → logprob: -17.37500762939453

Token 1150: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13964688777923584
    2. ':' → logprob: -2.7646470069885254
    3. '
' → logprob: -3.5146470069885254
    4. ',' → logprob: -4.139647006988525
    5. '        
' → logprob: -4.889647006988525
    6. '   ' → logprob: -6.139647006988525
    7. 'import' → logprob: -6.264647006988525
    8. ':
' → logprob: -6.764647006988525
    9. '[' → logprob: -7.014647006988525
    10. ')' → logprob: -7.014647006988525

Token 1151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003560631303116679
    2. '
' → logprob: -6.128560543060303
    3. '        
' → logprob: -7.753560543060303
    4. '   ' → logprob: -8.878561019897461
    5. 'import' → logprob: -9.003561019897461
    6. '           ' → logprob: -9.503561019897461
    7. ',' → logprob: -9.503561019897461
    8. '```' → logprob: -9.628561019897461
    9. '#' → logprob: -9.753561019897461
    10. '\' → logprob: -10.003561019897461

Token 1152: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013420680537819862
    2. '
' → logprob: -5.513420581817627
    3. ' choices' → logprob: -5.888420581817627
    4. 'choices' → logprob: -6.013420581817627
    5. '   ' → logprob: -7.013420581817627
    6. ' lines' → logprob: -7.138420581817627
    7. 'from' → logprob: -7.638420581817627
    8. 'import' → logprob: -7.763420581817627
    9. 'n' → logprob: -8.013421058654785
    10. '```' → logprob: -8.888421058654785

Token 1153: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0290629863739014
    2. 'from' → logprob: -1.0290629863739014
    3. 'import' → logprob: -2.4040629863739014
    4. 'choices' → logprob: -2.5290629863739014
    5. ' from' → logprob: -3.5290629863739014
    6. 'if' → logprob: -4.1540632247924805
    7. 'for' → logprob: -4.5290632247924805
    8. ' if' → logprob: -4.6540632247924805
    9. 'def' → logprob: -4.6540632247924805
    10. '   ' → logprob: -4.9040632247924805

Token 1154: ' i' (ID: 575)
  Prédit: 'choice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choice' → logprob: -0.942075252532959
    2. 'choices' → logprob: -1.442075252532959
    3. 'sign' → logprob: -1.817075252532959
    4. ' choices' → logprob: -2.192075252532959
    5. ' choice' → logprob: -2.942075252532959
    6. 'i' → logprob: -4.067075252532959
    7. ' sign' → logprob: -4.692075252532959
    8. 'comb' → logprob: -4.942075252532959
    9. ' i' → logprob: -5.692075252532959
    10. ' combination' → logprob: -6.192075252532959

Token 1155: '=' (ID: 28)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10002915561199188
    2. 'n' → logprob: -3.475029230117798
    3. 'in' → logprob: -3.850029230117798
    4. '=' → logprob: -4.475028991699219
    5. '
' → logprob: -5.100028991699219
    6. '1' → logprob: -5.225028991699219
    7. ' =' → logprob: -5.475028991699219
    8. ',' → logprob: -5.600028991699219
    9. '_' → logprob: -5.975028991699219
    10. ')' → logprob: -6.600028991699219

Token 1156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004111523274332285
    2. ' ' → logprob: -5.504111289978027
    3. 'range' → logprob: -11.004111289978027
    4. '0' → logprob: -11.504111289978027
    5. ' range' → logprob: -12.629111289978027
    6. '
' → logprob: -14.004111289978027
    7. '   ' → logprob: -14.129111289978027
    8. '=' → logprob: -15.254111289978027
    9. ',' → logprob: -15.629111289978027
    10. '  ' → logprob: -15.941611289978027

Token 1157: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4371406137943268
    2. ',' → logprob: -1.0621405839920044
    3. ':
' → logprob: -5.312140464782715
    4. '<|end|>' → logprob: -7.562140464782715
    5. '
' → logprob: -7.687140464782715
    6. 'to' → logprob: -7.937140464782715
    7. '.' → logprob: -8.062140464782715
    8. ' to' → logprob: -8.562140464782715
    9. '):' → logprob: -8.687140464782715
    10. '):
' → logprob: -8.812140464782715

Token 1158: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02838008850812912
    2. ' n' → logprob: -3.6533801555633545
    3. '
' → logprob: -7.028379917144775
    4. '(n' → logprob: -7.653379917144775
    5. '1' → logprob: -7.778379917144775
    6. ',' → logprob: -9.278380393981934
    7. '   ' → logprob: -10.403380393981934
    8. ',n' → logprob: -10.528380393981934
    9. '$n' → logprob: -11.278380393981934
    10. ' (' → logprob: -11.403380393981934

Token 1159: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00023488728038500994
    2. '-
' → logprob: -9.125234603881836
    3. ' -' → logprob: -9.375234603881836
    4. ':' → logprob: -11.250234603881836
    5. '-i' → logprob: -11.875234603881836
    6. '   ' → logprob: -12.750234603881836
    7. '```' → logprob: -12.750234603881836
    8. '       ' → logprob: -13.000234603881836
    9. '):
' → logprob: -13.000234603881836
    10. '
' → logprob: -13.000234603881836

Token 1160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002370329457335174
    2. '-' → logprob: -8.500237464904785
    3. '
' → logprob: -10.875237464904785
    4. ' ' → logprob: -11.375237464904785
    5. '   ' → logprob: -14.125237464904785
    6. ')' → logprob: -14.375237464904785
    7. ' -' → logprob: -14.500237464904785
    8. '```' → logprob: -14.875237464904785
    9. '#' → logprob: -15.625237464904785
    10. 'i' → logprob: -15.875237464904785

Token 1161: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5834348797798157
    2. ' choices' → logprob: -1.708434820175171
    3. ':' → logprob: -1.833434820175171
    4. ',' → logprob: -3.208434820175171
    5. ' for' → logprob: -3.708434820175171
    6. 'choices' → logprob: -4.20843505859375
    7. ' lines' → logprob: -5.20843505859375
    8. '   ' → logprob: -5.58343505859375
    9. ')' → logprob: -6.58343505859375
    10. 'for' → logprob: -7.08343505859375

Token 1162: ' (' (ID: 350)
  Prédit: ' choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choices' → logprob: -0.35063013434410095
    2. ' for' → logprob: -2.350630044937134
    3. '       ' → logprob: -2.475630044937134
    4. 'choices' → logprob: -3.350630044937134
    5. '        ' → logprob: -4.350630283355713
    6. '           ' → logprob: -4.475630283355713
    7. '    ' → logprob: -4.850630283355713
    8. ' lines' → logprob: -5.225630283355713
    9. 'for' → logprob: -5.600630283355713
    10. ')' → logprob: -5.600630283355713

Token 1163: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7201135754585266
    2. 'self' → logprob: -1.3451135158538818
    3. 'choices' → logprob: -2.220113515853882
    4. '(A' → logprob: -2.720113515853882
    5. 'choice' → logprob: -4.345113754272461
    6. ' choices' → logprob: -4.470113754272461
    7. 'sign' → logprob: -4.595113754272461
    8. ' (' → logprob: -4.720113754272461
    9. ' A' → logprob: -5.095113754272461
    10. ' self' → logprob: -5.220113754272461

Token 1164: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.005044591147452593
    2. '_' → logprob: -5.755044460296631
    3. 'i' → logprob: -7.130044460296631
    4. '[i' → logprob: -7.380044460296631
    5. '_choices' → logprob: -9.255044937133789
    6. ')' → logprob: -9.755044937133789
    7. '_j' → logprob: -9.880044937133789
    8. '0' → logprob: -10.380044937133789
    9. ')_' → logprob: -10.630044937133789
    10. '
' → logprob: -10.880044937133789

Token 1165: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1322135180234909
    2. '-' → logprob: -2.882213592529297
    3. '_' → logprob: -3.257213592529297
    4. ',' → logprob: -4.882213592529297
    5. '0' → logprob: -4.882213592529297
    6. ')' → logprob: -6.007213592529297
    7. '
' → logprob: -6.257213592529297
    8. 'x' → logprob: -6.257213592529297
    9. '+' → logprob: -6.632213592529297
    10. '```' → logprob: -6.757213592529297

Token 1166: ' s' (ID: 265)
  Prédit: 'choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choices' → logprob: -0.05217329412698746
    2. '(' → logprob: -4.552173137664795
    3. ' choices' → logprob: -4.552173137664795
    4. 'choice' → logprob: -4.802173137664795
    5. '(-' → logprob: -4.927173137664795
    6. '(A' → logprob: -6.177173137664795
    7. 'sign' → logprob: -6.427173137664795
    8. ' (' → logprob: -6.427173137664795
    9. 'A' → logprob: -6.802173137664795
    10. '-' → logprob: -6.802173137664795

Token 1167: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.21701042354106903
    2. 'i' → logprob: -2.092010498046875
    3. '_choices' → logprob: -3.467010498046875
    4. 'choices' → logprob: -3.842010498046875
    5. '_i' → logprob: -4.967010498046875
    6. ')' → logprob: -5.342010498046875
    7. '[' → logprob: -6.467010498046875
    8. 'ign' → logprob: -6.967010498046875
    9. 'igns' → logprob: -7.217010498046875
    10. ' choices' → logprob: -7.342010498046875

Token 1168: ' A' (ID: 355)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5089658498764038
    2. '[' → logprob: -1.3839658498764038
    3. ' *' → logprob: -2.5089659690856934
    4. '*' → logprob: -2.8839659690856934
    5. ')' → logprob: -5.758965969085693
    6. 'i' → logprob: -6.383965969085693
    7. ',' → logprob: -6.883965969085693
    8. '   ' → logprob: -6.883965969085693
    9. '_i' → logprob: -7.008965969085693
    10. '[
' → logprob: -7.633965969085693

Token 1169: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01659342460334301
    2. '_i' → logprob: -4.8915934562683105
    3. '0' → logprob: -5.1415934562683105
    4. '[' → logprob: -5.8915934562683105
    5. ')' → logprob: -9.016592979431152
    6. '[i' → logprob: -9.891592979431152
    7. 'i' → logprob: -11.016592979431152
    8. '```' → logprob: -11.016592979431152
    9. '
' → logprob: -11.516592979431152
    10. '[
' → logprob: -11.641592979431152

Token 1170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05258382484316826
    2. '_' → logprob: -3.052583932876587
    3. '_i' → logprob: -6.427583694458008
    4. '[i' → logprob: -6.677583694458008
    5. '[' → logprob: -7.177583694458008
    6. 'i' → logprob: -9.302583694458008
    7. ' ' → logprob: -9.552583694458008
    8. '`' → logprob: -10.052583694458008
    9. '   ' → logprob: -11.177583694458008
    10. '```' → logprob: -11.177583694458008

Token 1171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015549411997199059
    2. ',' → logprob: -4.515549182891846
    3. '),' → logprob: -5.890549182891846
    4. ')*' → logprob: -7.140549182891846
    5. ' )' → logprob: -8.640549659729004
    6. '*' → logprob: -8.640549659729004
    7. ')
' → logprob: -8.890549659729004
    8. ')x' → logprob: -9.390549659729004
    9. '*)' → logprob: -9.640549659729004
    10. '   ' → logprob: -10.140549659729004

Token 1172: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5670503973960876
    2. ',' → logprob: -0.9420503973960876
    3. ')*' → logprob: -3.6920504570007324
    4. '),' → logprob: -5.192050457000732
    5. ')x' → logprob: -5.192050457000732
    6. ' *' → logprob: -6.442050457000732
    7. ' ,' → logprob: -6.692050457000732
    8. ')*(' → logprob: -6.942050457000732
    9. '   ' → logprob: -7.317050457000732
    10. 'x' → logprob: -7.692050457000732

Token 1173: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12702186405658722
    2. '+' → logprob: -2.1270217895507812
    3. ')' → logprob: -10.502021789550781
    4. ' ' → logprob: -10.627021789550781
    5. '```' → logprob: -11.502021789550781
    6. ' +
' → logprob: -12.127021789550781
    7. '+
' → logprob: -12.252021789550781
    8. ')+' → logprob: -12.252021789550781
    9. ',' → logprob: -12.752021789550781
    10. '       ' → logprob: -13.377021789550781

Token 1174: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.08592710644006729
    2. ' (' → logprob: -2.5859270095825195
    3. 's' → logprob: -5.7109270095825195
    4. '(' → logprob: -5.9609270095825195
    5. '(s' → logprob: -7.4609270095825195
    6. ' s' → logprob: -7.5859270095825195
    7. '((' → logprob: -11.08592700958252
    8. '```' → logprob: -12.33592700958252
    9. '(A' → logprob: -12.33592700958252
    10. '(
' → logprob: -12.83592700958252

Token 1175: 'B' (ID: 33)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.701603353023529
    2. 'B' → logprob: -0.951603353023529
    3. '(B' → logprob: -2.201603412628174
    4. ' s' → logprob: -5.826603412628174
    5. ' (' → logprob: -6.201603412628174
    6. ' B' → logprob: -6.451603412628174
    7. '(A' → logprob: -7.951603412628174
    8. '(' → logprob: -8.951602935791016
    9. '(s' → logprob: -9.076602935791016
    10. '   ' → logprob: -9.201602935791016

Token 1176: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0006971848197281361
    2. '_' → logprob: -7.875697135925293
    3. '[i' → logprob: -9.125697135925293
    4. 'i' → logprob: -9.375697135925293
    5. '[' → logprob: -10.250697135925293
    6. '_s' → logprob: -10.750697135925293
    7. ' _' → logprob: -11.250697135925293
    8. ')' → logprob: -11.750697135925293
    9. '_j' → logprob: -12.500697135925293
    10. 's' → logprob: -12.625697135925293

Token 1177: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10226386785507202
    2. '+' → logprob: -2.602263927459717
    3. ' *' → logprob: -4.227263927459717
    4. ' s' → logprob: -5.477263927459717
    5. '*' → logprob: -6.227263927459717
    6. ' ' → logprob: -7.227263927459717
    7. 's' → logprob: -7.477263927459717
    8. '```' → logprob: -8.227263450622559
    9. '*s' → logprob: -8.852263450622559
    10. ' _' → logprob: -9.227263450622559

Token 1178: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.048781413584947586
    2. ' s' → logprob: -3.048781394958496
    3. ' (' → logprob: -9.423781394958496
    4. '(s' → logprob: -9.798781394958496
    5. '(' → logprob: -10.923781394958496
    6. '```' → logprob: -11.923781394958496
    7. '
' → logprob: -12.048781394958496
    8. ' ' → logprob: -12.298781394958496
    9. '   ' → logprob: -12.423781394958496
    10. '-s' → logprob: -12.923781394958496

Token 1179: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0002918446552939713
    2. '_' → logprob: -8.37529182434082
    3. 'i' → logprob: -9.75029182434082
    4. '[i' → logprob: -14.25029182434082
    5. '[' → logprob: -14.75029182434082
    6. '_s' → logprob: -15.12529182434082
    7. 's' → logprob: -15.37529182434082
    8. ' i' → logprob: -15.50029182434082
    9. '```' → logprob: -15.50029182434082
    10. ')_' → logprob: -15.75029182434082

Token 1180: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.055816080421209335
    2. 'B' → logprob: -3.055816173553467
    3. '_i' → logprob: -5.430816173553467
    4. ' _' → logprob: -6.930816173553467
    5. '_' → logprob: -7.055816173553467
    6. ' ' → logprob: -8.180815696716309
    7. '_B' → logprob: -8.180815696716309
    8. '0' → logprob: -9.180815696716309
    9. ')' → logprob: -9.805815696716309
    10. 'i' → logprob: -10.180815696716309

Token 1181: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005024659913033247
    2. '_i' → logprob: -5.380024433135986
    3. '0' → logprob: -7.880024433135986
    4. ' _' → logprob: -12.505024909973145
    5. '[' → logprob: -12.630024909973145
    6. '```' → logprob: -12.630024909973145
    7. ')' → logprob: -12.755024909973145
    8. '_
' → logprob: -12.880024909973145
    9. '_o' → logprob: -13.005024909973145
    10. ')_' → logprob: -13.255024909973145

Token 1182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3189312517642975
    2. '_' → logprob: -1.443931221961975
    3. '_i' → logprob: -3.3189313411712646
    4. 'i' → logprob: -7.1939311027526855
    5. '```' → logprob: -10.693931579589844
    6. '[' → logprob: -10.943931579589844
    7. ' ' → logprob: -11.693931579589844
    8. '[i' → logprob: -11.693931579589844
    9. '_{' → logprob: -11.693931579589844
    10. ' _' → logprob: -11.943931579589844

Token 1183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000504062045365572
    2. ' )' → logprob: -8.000504493713379
    3. ')y' → logprob: -9.625504493713379
    4. ')*' → logprob: -10.125504493713379
    5. ' y' → logprob: -11.000504493713379
    6. '*' → logprob: -11.125504493713379
    7. '*)' → logprob: -12.000504493713379
    8. '),' → logprob: -12.125504493713379
    9. ',' → logprob: -12.375504493713379
    10. ' *' → logprob: -13.125504493713379

Token 1184: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0013758298009634018
    2. 'y' → logprob: -6.626375675201416
    3. '*' → logprob: -11.251376152038574
    4. '*y' → logprob: -11.376376152038574
    5. ')' → logprob: -11.501376152038574
    6. '	y' → logprob: -12.751376152038574
    7. ',' → logprob: -13.001376152038574
    8. ')y' → logprob: -13.126376152038574
    9. '<|end|>' → logprob: -13.251376152038574
    10. '```' → logprob: -13.626376152038574

Token 1185: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08956397324800491
    2. '+' → logprob: -2.464564085006714
    3. '           ' → logprob: -7.839563846588135
    4. '       ' → logprob: -10.089564323425293
    5. '            ' → logprob: -10.214564323425293
    6. ')' → logprob: -10.339564323425293
    7. '        ' → logprob: -10.589564323425293
    8. ' ' → logprob: -11.464564323425293
    9. 'import' → logprob: -11.464564323425293
    10. '```' → logprob: -11.464564323425293

Token 1186: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.46490633487701416
    2. ' (' → logprob: -1.0899063348770142
    3. '(C' → logprob: -3.3399062156677246
    4. '(' → logprob: -9.339906692504883
    5. '(A' → logprob: -11.589906692504883
    6. ' ' → logprob: -12.089906692504883
    7. '   ' → logprob: -12.464906692504883
    8. 's' → logprob: -12.839906692504883
    9. '(s' → logprob: -14.089906692504883
    10. '       ' → logprob: -14.214906692504883

Token 1187: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6540231704711914
    2. '(C' → logprob: -0.9040231704711914
    3. 's' → logprob: -2.6540231704711914
    4. ' (' → logprob: -6.279023170471191
    5. 'self' → logprob: -7.529023170471191
    6. '(s' → logprob: -7.904023170471191
    7. '   ' → logprob: -8.154023170471191
    8. ' C' → logprob: -8.154023170471191
    9. '(' → logprob: -8.529023170471191
    10. ' s' → logprob: -8.654023170471191

Token 1188: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00015514736878685653
    2. 'i' → logprob: -9.875155448913574
    3. '_' → logprob: -10.375155448913574
    4. '[i' → logprob: -10.500155448913574
    5. ')_' → logprob: -10.750155448913574
    6. '```' → logprob: -11.750155448913574
    7. ')' → logprob: -12.250155448913574
    8. '=' → logprob: -13.375155448913574
    9. '_j' → logprob: -13.750155448913574
    10. ''_' → logprob: -13.750155448913574

Token 1189: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.39172086119651794
    2. '+' → logprob: -1.1417208909988403
    3. '_' → logprob: -6.141720771789551
    4. ' _' → logprob: -7.391720771789551
    5. 's' → logprob: -7.891720771789551
    6. ' s' → logprob: -8.01672077178955
    7. '_s' → logprob: -8.64172077178955
    8. ')' → logprob: -8.76672077178955
    9. '_i' → logprob: -8.76672077178955
    10. '<|end|>' → logprob: -8.76672077178955

Token 1190: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2254830300807953
    2. ' s' → logprob: -1.6004830598831177
    3. '(s' → logprob: -11.225482940673828
    4. '```' → logprob: -11.475482940673828
    5. ' (' → logprob: -12.100482940673828
    6. '=' → logprob: -12.100482940673828
    7. '_s' → logprob: -12.350482940673828
    8. ''s' → logprob: -13.037982940673828
    9. ' ' → logprob: -13.100482940673828
    10. '
' → logprob: -13.100482940673828

Token 1191: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0005460034008137882
    2. 'i' → logprob: -7.625545978546143
    3. '[i' → logprob: -10.0005464553833
    4. '```' → logprob: -12.5005464553833
    5. 's' → logprob: -13.5005464553833
    6. '_' → logprob: -13.5005464553833
    7. '{i' → logprob: -13.8755464553833
    8. '[' → logprob: -14.1255464553833
    9. '**' → logprob: -14.1255464553833
    10. '_s' → logprob: -14.2505464553833

Token 1192: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01020589005202055
    2. ' C' → logprob: -4.6352057456970215
    3. 'self' → logprob: -7.7602057456970215
    4. ' self' → logprob: -11.51020622253418
    5. '   ' → logprob: -12.38520622253418
    6. '0' → logprob: -13.51020622253418
    7. ' ' → logprob: -13.51020622253418
    8. '_C' → logprob: -13.88520622253418
    9. '>C' → logprob: -14.26020622253418
    10. '[' → logprob: -14.26020622253418

Token 1193: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3138895034790039
    2. '_i' → logprob: -1.313889503479004
    3. '0' → logprob: -7.813889503479004
    4. '```' → logprob: -9.313889503479004
    5. ')_' → logprob: -9.938889503479004
    6. '[' → logprob: -10.688889503479004
    7. '[i' → logprob: -11.188889503479004
    8. 'i' → logprob: -11.563889503479004
    9. ']_' → logprob: -11.813889503479004
    10. '_o' → logprob: -11.938889503479004

Token 1194: '0' (ID: 15)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13477995991706848
    2. '0' → logprob: -2.384779930114746
    3. '_i' → logprob: -3.384779930114746
    4. 'i' → logprob: -9.509779930114746
    5. '```' → logprob: -11.384779930114746
    6. '[' → logprob: -12.759779930114746
    7. '_o' → logprob: -13.259779930114746
    8. '[i' → logprob: -13.759779930114746
    9. '=' → logprob: -14.259779930114746
    10. '_{' → logprob: -14.384779930114746

Token 1195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023249322548508644
    2. '=' → logprob: -4.02324914932251
    3. ')=' → logprob: -5.64824914932251
    4. ' =' → logprob: -6.77324914932251
    5. ' )' → logprob: -8.273249626159668
    6. '```' → logprob: -9.898249626159668
    7. '")' → logprob: -10.523249626159668
    8. '')' → logprob: -10.898249626159668
    9. ')==' → logprob: -11.148249626159668
    10. '`)' → logprob: -12.023249626159668

Token 1196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6624256372451782
    2. ')' → logprob: -1.5374256372451782
    3. '=' → logprob: -2.0374255180358887
    4. '       ' → logprob: -3.4124255180358887
    5. ':' → logprob: -3.6624255180358887
    6. '
' → logprob: -4.287425518035889
    7. 's' → logprob: -4.287425518035889
    8. '           ' → logprob: -5.287425518035889
    9. '#' → logprob: -5.412425518035889
    10. '):' → logprob: -5.662425518035889

Token 1197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021346807479858
    2. ' ' → logprob: -2.3502135276794434
    3. '   ' → logprob: -13.162713050842285
    4. ' ' → logprob: -14.037713050842285
    5. '```' → logprob: -14.662713050842285
    6. '	' → logprob: -14.787713050842285
    7. 's' → logprob: -14.850213050842285
    8. '=' → logprob: -14.975213050842285
    9. '1' → logprob: -15.287713050842285
    10. '  ' → logprob: -15.412713050842285

Token 1198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001242772996192798
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.500123977661133
    4. '=' → logprob: -16.687623977661133
    5. '۰' → logprob: -17.125123977661133
    6. '  ' → logprob: -17.375123977661133
    7. '[' → logprob: -17.500123977661133
    8. '(' → logprob: -17.500123977661133
    9. '```' → logprob: -17.750123977661133
    10. '.' → logprob: -17.812623977661133

Token 1199: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0163784958422184
    2. '
' → logprob: -5.516378402709961
    3. '        
' → logprob: -5.516378402709961
    4. ',' → logprob: -5.766378402709961
    5. '           ' → logprob: -6.891378402709961
    6. '<|end|>' → logprob: -7.391378402709961
    7. '        ' → logprob: -7.766378402709961
    8. '\' → logprob: -7.766378402709961
    9. '.' → logprob: -7.891378402709961
    10. ')' → logprob: -8.266378402709961

Token 1200: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.28153419494628906
    2. 's' → logprob: -1.406534194946289
    3. ' choices' → logprob: -8.906534194946289
    4. '`s' → logprob: -9.656534194946289
    5. ' `' → logprob: -10.156534194946289
    6. 'choices' → logprob: -10.156534194946289
    7. '`' → logprob: -10.531534194946289
    8. '	s' → logprob: -11.531534194946289
    9. ''s' → logprob: -11.656534194946289
    10. ' ' → logprob: -11.781534194946289

Token 1201: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0019404153572395444
    2. '_' → logprob: -6.5019402503967285
    3. '=' → logprob: -8.876940727233887
    4. ' =' → logprob: -9.626940727233887
    5. '[i' → logprob: -9.876940727233887
    6. 'i' → logprob: -10.251940727233887
    7. '_choices' → logprob: -10.376940727233887
    8. 's' → logprob: -10.626940727233887
    9. '=i' → logprob: -11.251940727233887
    10. '=_' → logprob: -11.251940727233887

Token 1202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5343382358551025
    2. ' =' → logprob: -0.9093382358551025
    3. ':' → logprob: -5.659337997436523
    4. ')' → logprob: -5.909337997436523
    5. ' in' → logprob: -6.409337997436523
    6. 's' → logprob: -7.034337997436523
    7. ' ' → logprob: -7.784337997436523
    8. '=
' → logprob: -7.909337997436523
    9. '<|end|>' → logprob: -7.909337997436523
    10. ' =
' → logprob: -8.659337997436523

Token 1203: ' choices' (ID: 14494)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014241538941860199
    2. '-' → logprob: -5.264241695404053
    3. ' ' → logprob: -5.389241695404053
    4. '+' → logprob: -6.014241695404053
    5. 'choices' → logprob: -6.639241695404053
    6. 'choice' → logprob: -8.389241218566895
    7. ' choices' → logprob: -9.014241218566895
    8. ' -' → logprob: -9.639241218566895
    9. ' +' → logprob: -9.639241218566895
    10. '(' → logprob: -10.014241218566895

Token 1204: '[i' (ID: 1768)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6305148005485535
    2. '_' → logprob: -1.3805148601531982
    3. ')' → logprob: -2.8805148601531982
    4. '[' → logprob: -3.3805148601531982
    5. ' s' → logprob: -3.3805148601531982
    6. '       ' → logprob: -3.7555148601531982
    7. ' =' → logprob: -4.005514621734619
    8. '
' → logprob: -4.880514621734619
    9. '_s' → logprob: -5.005514621734619
    10. ':' → logprob: -5.255514621734619

Token 1205: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31975698471069336
    2. '[i' → logprob: -1.3197569847106934
    3. '       ' → logprob: -6.694756984710693
    4. 'i' → logprob: -6.819756984710693
    5. '])' → logprob: -7.194756984710693
    6. '   ' → logprob: -7.444756984710693
    7. '_i' → logprob: -7.569756984710693
    8. '[' → logprob: -7.569756984710693
    9. '           ' → logprob: -7.944756984710693
    10. ')' → logprob: -8.069757461547852

Token 1206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009225545451045036
    2. '<|end|>' → logprob: -5.259225368499756
    3. '   ' → logprob: -7.259225368499756
    4. ',' → logprob: -7.634225368499756
    5. ' ' → logprob: -7.884225368499756
    6. '        
' → logprob: -8.009225845336914
    7. 'import' → logprob: -8.134225845336914
    8. '\' → logprob: -8.384225845336914
    9. '        ' → logprob: -8.384225845336914
    10. ')' → logprob: -8.884225845336914

Token 1207: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035387225449085236
    2. '
' → logprob: -4.53538703918457
    3. 'def' → logprob: -5.16038703918457
    4. 'n' → logprob: -5.91038703918457
    5. ' lines' → logprob: -5.91038703918457
    6. 'import' → logprob: -5.91038703918457
    7. '   ' → logprob: -6.16038703918457
    8. 'from' → logprob: -6.28538703918457
    9. '```' → logprob: -6.78538703918457
    10. ' n' → logprob: -7.53538703918457

Token 1208: ' We'll' (ID: 46830)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2893035411834717
    2. 'import' → logprob: -2.0393035411834717
    3. 'def' → logprob: -3.0393035411834717
    4. '       ' → logprob: -3.9143035411834717
    5. '#' → logprob: -4.164303779602051
    6. ' from' → logprob: -5.039303779602051
    7. 'for' → logprob: -5.414303779602051
    8. '   ' → logprob: -5.664303779602051
    9. 'result' → logprob: -5.789303779602051
    10. 'A' → logprob: -5.789303779602051

Token 1209: ' solve' (ID: 17722)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.4750193655490875
    2. 'try' → logprob: -1.4750193357467651
    3. '   ' → logprob: -2.7250194549560547
    4. 'import' → logprob: -2.8500194549560547
    5. 'def' → logprob: -4.725019454956055
    6. ' import' → logprob: -5.600019454956055
    7. 'attempt' → logprob: -5.975019454956055
    8. '       ' → logprob: -6.850019454956055
    9. ' implement' → logprob: -6.850019454956055
    10. ' continue' → logprob: -6.850019454956055

Token 1210: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1069786548614502
    2. 'import' → logprob: -1.3569786548614502
    3. ' for' → logprob: -1.7319786548614502
    4. '```' → logprob: -2.98197865486145
    5. 'from' → logprob: -3.10697865486145
    6. 'n' → logprob: -3.10697865486145
    7. '
' → logprob: -3.48197865486145
    8. '   ' → logprob: -4.481978416442871
    9. ' n' → logprob: -4.606978416442871
    10. 'def' → logprob: -4.731978416442871

Token 1211: ' linear' (ID: 23876)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.586655616760254
    2. ' next' → logprob: -2.086655616760254
    3. ' lines' → logprob: -2.211655616760254
    4. 'def' → logprob: -2.336655616760254
    5. '```' → logprob: -2.711655616760254
    6. 'next' → logprob: -2.711655616760254
    7. 'from' → logprob: -2.836655616760254
    8. ' following' → logprob: -2.961655616760254
    9. 'rest' → logprob: -3.336655616760254
    10. '#' → logprob: -3.336655616760254

Token 1212: ' system' (ID: 2420)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'system' → logprob: -0.2637770473957062
    2. ' system' → logprob: -1.5137770175933838
    3. 'equ' → logprob: -5.138777256011963
    4. 'systems' → logprob: -6.013777256011963
    5. 'import' → logprob: -6.513777256011963
    6. ' equations' → logprob: -7.388777256011963
    7. ' systems' → logprob: -7.763777256011963
    8. '
' → logprob: -8.013776779174805
    9. '#' → logprob: -8.638776779174805
    10. 'com' → logprob: -9.138776779174805

Token 1213: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8746455311775208
    2. '       ' → logprob: -0.8746455311775208
    3. '\n' → logprob: -3.249645471572876
    4. '
' → logprob: -3.749645471572876
    5. ':
' → logprob: -3.999645471572876
    6. '.' → logprob: -4.374645709991455
    7. ',' → logprob: -4.499645709991455
    8. '\' → logprob: -4.874645709991455
    9. '        
' → logprob: -5.124645709991455
    10. ' =' → logprob: -5.124645709991455

Token 1214: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.019568821415305138
    2. ' x' → logprob: -4.269568920135498
    3. 'the' → logprob: -6.519568920135498
    4. 'choices' → logprob: -7.019568920135498
    5. 'coeff' → logprob: -7.894568920135498
    6. 'i' → logprob: -8.01956844329834
    7. 'all' → logprob: -8.14456844329834
    8. '[' → logprob: -8.14456844329834
    9. 'sign' → logprob: -8.51956844329834
    10. 'each' → logprob: -8.64456844329834

Token 1215: ' choice' (ID: 7158)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.08040322363376617
    2. ' given' → logprob: -3.9554033279418945
    3. 'given' → logprob: -3.9554033279418945
    4. ' combination' → logprob: -4.3304033279418945
    5. 'comb' → logprob: -5.4554033279418945
    6. 'def' → logprob: -5.4554033279418945
    7. 'single' → logprob: -5.5804033279418945
    8. 'l' → logprob: -5.8304033279418945
    9. ' single' → logprob: -6.9554033279418945
    10. 'b' → logprob: -7.0804033279418945

Token 1216: ' vector' (ID: 9727)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15124894678592682
    2. '[' → logprob: -3.4012489318847656
    3. 's' → logprob: -3.6512489318847656
    4. ':' → logprob: -3.9012489318847656
    5. ')' → logprob: -4.276248931884766
    6. '=' → logprob: -4.901248931884766
    7. ' ' → logprob: -5.276248931884766
    8. ',' → logprob: -5.401248931884766
    9. ' =' → logprob: -5.401248931884766
    10. '       ' → logprob: -5.651248931884766

Token 1217: ' s' (ID: 265)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4736329913139343
    2. 's' → logprob: -2.848633050918579
    3. ',' → logprob: -2.973633050918579
    4. '       ' → logprob: -3.098633050918579
    5. '[' → logprob: -3.223633050918579
    6. '_' → logprob: -3.723633050918579
    7. '
' → logprob: -3.723633050918579
    8. ')' → logprob: -4.4736328125
    9. '.' → logprob: -4.4736328125
    10. ' s' → logprob: -4.4736328125

Token 1218: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05883140116930008
    2. '=' → logprob: -4.058831214904785
    3. '[' → logprob: -4.308831214904785
    4. 's' → logprob: -5.183831214904785
    5. '_i' → logprob: -5.433831214904785
    6. ' =' → logprob: -5.683831214904785
    7. '_
' → logprob: -5.683831214904785
    8. ')' → logprob: -6.058831214904785
    9. '[i' → logprob: -6.808831214904785
    10. '[
' → logprob: -7.058831214904785

Token 1219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030134767293930054
    2. ',' → logprob: -7.378013610839844
    3. '        
' → logprob: -7.378013610839844
    4. '.' → logprob: -8.003013610839844
    5. '
' → logprob: -8.378013610839844
    6. '   ' → logprob: -8.378013610839844
    7. '<|end|>' → logprob: -9.128013610839844
    8. '           ' → logprob: -9.253013610839844
    9. '        ' → logprob: -9.378013610839844
    10. ')' → logprob: -9.503013610839844

Token 1220: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051179107278585434
    2. '   ' → logprob: -4.801178932189941
    3. 'n' → logprob: -4.926178932189941
    4. '
' → logprob: -4.926178932189941
    5. ' for' → logprob: -5.551178932189941
    6. 'def' → logprob: -5.551178932189941
    7. 's' → logprob: -5.926178932189941
    8. 'choices' → logprob: -6.051178932189941
    9. 'for' → logprob: -6.176178932189941
    10. '        
' → logprob: -6.426178932189941

Token 1221: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13941524922847748
    2. '#' → logprob: -3.8894152641296387
    3. 'def' → logprob: -4.014415264129639
    4. 'from' → logprob: -4.014415264129639
    5. 'import' → logprob: -4.264415264129639
    6. 'if' → logprob: -4.764415264129639
    7. ' if' → logprob: -4.889415264129639
    8. 'n' → logprob: -4.889415264129639
    9. '
' → logprob: -5.264415264129639
    10. '   ' → logprob: -5.389415264129639

Token 1222: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9050246477127075
    2. ' n' → logprob: -1.6550246477127075
    3. ' all' → logprob: -1.9050246477127075
    4. 'all' → logprob: -2.405024528503418
    5. ' self' → logprob: -3.655024528503418
    6. ' False' → logprob: -3.780024528503418
    7. 'False' → logprob: -3.905024528503418
    8. 'self' → logprob: -4.155024528503418
    9. 's' → logprob: -4.530024528503418
    10. ' not' → logprob: -4.780024528503418

Token 1223: ' unique' (ID: 5746)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.760508418083191
    2. 'p' → logprob: -2.0105085372924805
    3. 'b' → logprob: -2.1355085372924805
    4. ' p' → logprob: -2.3855085372924805
    5. 'def' → logprob: -2.6355085372924805
    6. ' =' → logprob: -3.0105085372924805
    7. 'v' → logprob: -3.1355085372924805
    8. 'c' → logprob: -3.7605085372924805
    9. ':' → logprob: -4.0105085372924805
    10. '=' → logprob: -4.1355085372924805

Token 1224: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.09196745604276657
    2. 'solution' → logprob: -2.4669673442840576
    3. ' point' → logprob: -7.216967582702637
    4. ')' → logprob: -7.466967582702637
    5. 'point' → logprob: -7.591967582702637
    6. '
' → logprob: -7.716967582702637
    7. '```' → logprob: -8.841967582702637
    8. ' line' → logprob: -9.216967582702637
    9. '_solution' → logprob: -9.216967582702637
    10. '\n' → logprob: -9.841967582702637

Token 1225: ' exists' (ID: 13031)
  Prédit: ' exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exists' → logprob: -0.056069254875183105
    2. 'exists' → logprob: -3.6810693740844727
    3. ' is' → logprob: -4.431069374084473
    4. ':' → logprob: -4.556069374084473
    5. ',' → logprob: -6.056069374084473
    6. ' ' → logprob: -6.806069374084473
    7. '
' → logprob: -7.181069374084473
    8. ')' → logprob: -7.431069374084473
    9. '_' → logprob: -8.056069374084473
    10. '<|end|>' → logprob: -8.306069374084473

Token 1226: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5917061567306519
    2. ',' → logprob: -0.8417061567306519
    3. ':
' → logprob: -4.341706275939941
    4. ',
' → logprob: -6.841706275939941
    5. ' and' → logprob: -7.841706275939941
    6. '.' → logprob: -8.216706275939941
    7. '       ' → logprob: -8.716706275939941
    8. ' :' → logprob: -8.841706275939941
    9. '   ' → logprob: -9.341706275939941
    10. ' ,' → logprob: -9.591706275939941

Token 1227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017375973984599113
    2. '           ' → logprob: -4.142375946044922
    3. '        ' → logprob: -8.142375946044922
    4. '               ' → logprob: -8.267375946044922
    5. 'return' → logprob: -8.892375946044922
    6. '   ' → logprob: -8.892375946044922
    7. ',' → logprob: -9.517375946044922
    8. ' ' → logprob: -9.767375946044922
    9. '```' → logprob: -9.892375946044922
    10. ' return' → logprob: -9.892375946044922

Token 1228: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004020337946712971
    2. '           ' → logprob: -6.2540202140808105
    3. '#' (adapté à ' #') → logprob: -7.6290202140808105
    4. 'try' → logprob: -7.6290202140808105
    5. '        ' → logprob: -8.754020690917969
    6. 'return' → logprob: -9.004020690917969
    7. ' try' → logprob: -9.129020690917969
    8. '   ' → logprob: -9.504020690917969
    9. 'x' → logprob: -9.504020690917969
    10. '
' → logprob: -9.754020690917969

Token 1229: ' Check' (ID: 6208)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14387452602386475
    2. '#' → logprob: -3.6438746452331543
    3. 's' → logprob: -3.6438746452331543
    4. 'for' → logprob: -3.6438746452331543
    5. ' for' → logprob: -4.393874645233154
    6. 'choices' → logprob: -4.768874645233154
    7. ' s' → logprob: -4.893874645233154
    8. '   ' → logprob: -5.643874645233154
    9. 'try' → logprob: -5.643874645233154
    10. ' choices' → logprob: -5.768874645233154

Token 1230: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3627031743526459
    2. 'if' → logprob: -1.8627032041549683
    3. 's' → logprob: -3.7377030849456787
    4. 'for' → logprob: -3.9877030849456787
    5. 'point' → logprob: -4.112703323364258
    6. '   ' → logprob: -4.362703323364258
    7. ')' → logprob: -4.362703323364258
    8. '#' → logprob: -4.487703323364258
    9. ' s' → logprob: -4.612703323364258
    10. ' for' → logprob: -5.237703323364258

Token 1231: ' this' (ID: 495)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3385266065597534
    2. ' all' → logprob: -1.4635266065597534
    3. 'abs' → logprob: -3.588526725769043
    4. 'the' → logprob: -4.463526725769043
    5. 'for' → logprob: -5.213526725769043
    6. 'that' → logprob: -5.713526725769043
    7. ' for' → logprob: -6.088526725769043
    8. ' abs' → logprob: -6.588526725769043
    9. 'it' → logprob: -6.838526725769043
    10. ' the' → logprob: -6.963526725769043

Token 1232: ' point' (ID: 2438)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.42235416173934937
    2. 'solution' → logprob: -1.2973542213439941
    3. ' point' → logprob: -3.922354221343994
    4. 'point' → logprob: -4.047354221343994
    5. '
' → logprob: -4.422354221343994
    6. ' satisfies' → logprob: -5.172354221343994
    7. '#' → logprob: -5.922354221343994
    8. ' is' → logprob: -6.047354221343994
    9. '_solution' → logprob: -6.172354221343994
    10. 's' → logprob: -6.672354221343994

Token 1233: ' satisfies' (ID: 126205)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020685996860265732
    2. ' satisfies' → logprob: -4.395686149597168
    3. '```' → logprob: -6.020686149597168
    4. '       ' → logprob: -6.520686149597168
    5. '   ' → logprob: -7.145686149597168
    6. 'is' → logprob: -7.395686149597168
    7. '#' → logprob: -7.645686149597168
    8. '.' → logprob: -7.770686149597168
    9. ' is' → logprob: -8.020686149597168
    10. ',' → logprob: -8.020686149597168

Token 1234: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.09284164011478424
    2. 'all' → logprob: -2.467841625213623
    3. 'for' → logprob: -6.967841625213623
    4. ' for' → logprob: -7.217841625213623
    5. ' the' → logprob: -7.342841625213623
    6. ' abs' → logprob: -7.967841625213623
    7. 'the' → logprob: -8.092842102050781
    8. 'abs' → logprob: -8.342842102050781
    9. '```' → logprob: -8.842842102050781
    10. 'forall' → logprob: -8.967842102050781

Token 1235: ' f' (ID: 285)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.40197664499282837
    2. 'lines' → logprob: -1.9019765853881836
    3. 'dist' → logprob: -3.1519765853881836
    4. 'abs' → logprob: -3.6519765853881836
    5. ' abs' → logprob: -4.276976585388184
    6. '
' → logprob: -4.651976585388184
    7. '_lines' → logprob: -4.651976585388184
    8. ')' → logprob: -4.776976585388184
    9. '   ' → logprob: -4.776976585388184
    10. '```' → logprob: -5.401976585388184

Token 1236: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.043523985892534256
    2. '_' → logprob: -3.1685240268707275
    3. '_
' → logprob: -8.668523788452148
    4. '_s' → logprob: -9.668523788452148
    5. 'orm' → logprob: -9.793523788452148
    6. 'or' → logprob: -10.168523788452148
    7. '_j' → logprob: -10.293523788452148
    8. '```' → logprob: -10.418523788452148
    9. ' _' → logprob: -10.918523788452148
    10. ')' → logprob: -10.918523788452148

Token 1237: '=' (ID: 28)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09651032090187073
    2. '
' → logprob: -3.096510410308838
    3. ')' → logprob: -4.346510410308838
    4. '   ' → logprob: -4.596510410308838
    5. '        
' → logprob: -5.096510410308838
    6. ':' → logprob: -5.596510410308838
    7. '_' → logprob: -5.971510410308838
    8. '):' → logprob: -6.471510410308838
    9. 'def' → logprob: -6.596510410308838
    10. ',' → logprob: -6.846510410308838

Token 1238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006913218181580305
    2. '=' → logprob: -5.506913185119629
    3. ' ' → logprob: -6.006913185119629
    4. '```' → logprob: -8.881913185119629
    5. '==' → logprob: -10.131913185119629
    6. 's' → logprob: -10.256913185119629
    7. 'i' → logprob: -10.631913185119629
    8. ')' → logprob: -11.006913185119629
    9. 'zero' → logprob: -11.006913185119629
    10. '(x' → logprob: -11.506913185119629

Token 1239: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0792020633816719
    2. '
' → logprob: -3.204202175140381
    3. '   ' → logprob: -4.954202175140381
    4. ',' → logprob: -5.204202175140381
    5. '        
' → logprob: -5.454202175140381
    6. ')' → logprob: -5.579202175140381
    7. '_' → logprob: -5.829202175140381
    8. 'def' → logprob: -6.079202175140381
    9. ':' → logprob: -6.454202175140381
    10. ' def' → logprob: -7.079202175140381

Token 1240: ' the' (ID: 290)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9024884104728699
    2. 'return' → logprob: -1.0274884700775146
    3. 'checking' → logprob: -1.9024884700775146
    4. ' checking' → logprob: -3.9024884700775146
    5. ' verifying' → logprob: -4.2774882316589355
    6. 'all' → logprob: -4.9024882316589355
    7. 'for' → logprob: -5.0274882316589355
    8. 'continu' → logprob: -5.1524882316589355
    9. 'ver' → logprob: -5.1524882316589355
    10. 'def' → logprob: -5.5274882316589355

Token 1241: ' definition' (ID: 16083)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.1888798028230667
    2. 'following' → logprob: -2.8138797283172607
    3. 'for' → logprob: -3.1888797283172607
    4. 'def' → logprob: -3.3138797283172607
    5. ' following' → logprob: -4.06387996673584
    6. 'absolute' → logprob: -5.18887996673584
    7. 'same' → logprob: -5.93887996673584
    8. 'return' → logprob: -5.93887996673584
    9. ' for' → logprob: -6.18887996673584
    10. 's' → logprob: -7.43887996673584

Token 1242: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021037407219409943
    2. '
' → logprob: -4.146037578582764
    3. '        
' → logprob: -6.021037578582764
    4. '   ' → logprob: -7.146037578582764
    5. '        ' → logprob: -8.146037101745605
    6. ' 
' → logprob: -8.521037101745605
    7. 'def' → logprob: -8.646037101745605
    8. ',' → logprob: -8.771037101745605
    9. 'import' → logprob: -8.771037101745605
    10. '           ' → logprob: -8.771037101745605

Token 1243: ' absolute' (ID: 17786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.1103556826710701
    2. 'distance' → logprob: -3.7353556156158447
    3. 'sign' → logprob: -3.9853556156158447
    4. 'for' → logprob: -4.110355854034424
    5. 'choices' → logprob: -4.735355854034424
    6. 's' → logprob: -4.860355854034424
    7. 'all' → logprob: -4.985355854034424
    8. 'the' → logprob: -5.360355854034424
    9. 'point' → logprob: -5.610355854034424
    10. 'absolute' → logprob: -5.735355854034424

Token 1244: ' distances' (ID: 48294)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0570169687271118
    2. 'value' → logprob: -1.1820169687271118
    3. 'values' → logprob: -1.8070169687271118
    4. '_value' → logprob: -2.4320168495178223
    5. ' value' → logprob: -3.3070168495178223
    6. ' values' → logprob: -3.3070168495178223
    7. '_values' → logprob: -4.807016849517822
    8. 's' → logprob: -5.307016849517822
    9. ')' → logprob: -7.057016849517822
    10. '_val' → logprob: -7.182016849517822

Token 1245: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0459173321723938
    2. '
' → logprob: -3.670917272567749
    3. '        
' → logprob: -4.670917510986328
    4. '   ' → logprob: -6.045917510986328
    5. ',' → logprob: -6.420917510986328
    6. ')' → logprob: -6.795917510986328
    7. '_' → logprob: -7.170917510986328
    8. 'def' → logprob: -7.170917510986328
    9. ' 
' → logprob: -7.670917510986328
    10. '        ' → logprob: -7.670917510986328

Token 1246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0051475390791893005
    2. '        
' → logprob: -6.630147457122803
    3. ',' → logprob: -7.505147457122803
    4. '        ' → logprob: -7.630147457122803
    5. '   ' → logprob: -7.630147457122803
    6. '\' → logprob: -7.880147457122803
    7. ')' → logprob: -7.880147457122803
    8. '           ' → logprob: -8.255147933959961
    9. '\n' → logprob: -9.255147933959961
    10. '    ' → logprob: -9.255147933959961

Token 1247: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008562447503209114
    2. '        
' → logprob: -6.1335625648498535
    3. '
' → logprob: -6.2585625648498535
    4. '   ' → logprob: -6.7585625648498535
    5. ' choices' → logprob: -7.2585625648498535
    6. ' 
' → logprob: -7.5085625648498535
    7. '        ' → logprob: -7.7585625648498535
    8. '    ' → logprob: -8.508562088012695
    9. 'choices' → logprob: -8.633562088012695
    10. '\' → logprob: -9.008562088012695

Token 1248: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17203833162784576
    2. 'from' → logprob: -3.2970383167266846
    3. 'def' → logprob: -3.2970383167266846
    4. 'import' → logprob: -3.7970383167266846
    5. 'for' → logprob: -4.422038555145264
    6. 'if' → logprob: -4.547038555145264
    7. 'n' → logprob: -5.047038555145264
    8. '#' → logprob: -5.172038555145264
    9. '   ' → logprob: -5.172038555145264
    10. 'choices' → logprob: -5.297038555145264

Token 1249: ' the' (ID: 290)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.5730398893356323
    2. ' the' → logprob: -1.6980398893356323
    3. ' for' → logprob: -1.8230398893356323
    4. ' lines' → logprob: -2.323040008544922
    5. ' we' → logprob: -2.448040008544922
    6. ' there' → logprob: -2.698040008544922
    7. ' if' → logprob: -3.823040008544922
    8. '   ' → logprob: -3.948040008544922
    9. 'the' → logprob: -4.073040008544922
    10. ' all' → logprob: -4.198040008544922

Token 1250: ' squared' (ID: 117867)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.5893501043319702
    2. ' problem' → logprob: -1.9643501043319702
    3. ' ' → logprob: -2.2143502235412598
    4. '_' → logprob: -2.2143502235412598
    5. ' previous' → logprob: -2.8393502235412598
    6. ' next' → logprob: -3.2143502235412598
    7. ' first' → logprob: -3.2143502235412598
    8. ' _' → logprob: -3.4643502235412598
    9. ' choices' → logprob: -3.4643502235412598
    10. ' code' → logprob: -3.5893502235412598

Token 1251: ' equality' (ID: 47685)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23038733005523682
    2. ')' → logprob: -3.6053872108459473
    3. 'distance' → logprob: -3.6053872108459473
    4. 'difference' → logprob: -3.7303872108459473
    5. 'dist' → logprob: -4.355387210845947
    6. 'dif' → logprob: -4.355387210845947
    7. ' difference' → logprob: -4.605387210845947
    8. 's' → logprob: -4.605387210845947
    9. '=' → logprob: -4.730387210845947
    10. ' distances' → logprob: -4.855387210845947

Token 1252: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0429651737213135
    2. '
' → logprob: -1.6679651737213135
    3. '#' → logprob: -2.7929651737213135
    4. 's' → logprob: -3.0429651737213135
    5. ')' → logprob: -3.0429651737213135
    6. ' is' → logprob: -3.2929651737213135
    7. ',' → logprob: -3.4179651737213135
    8. ' lines' → logprob: -3.5429651737213135
    9. ' s' → logprob: -3.6679651737213135
    10. ':' → logprob: -4.042964935302734

Token 1253: ' equivalent' (ID: 23458)
  Prédit: 'equ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equ' → logprob: -0.4068179428577423
    2. 's' → logprob: -1.28181791305542
    3. ' symmetric' → logprob: -4.03181791305542
    4. ' equivalent' → logprob: -5.65681791305542
    5. 'not' → logprob: -5.65681791305542
    6. 'a' → logprob: -5.90681791305542
    7. 'necessary' → logprob: -6.15681791305542
    8. 'exact' → logprob: -6.28181791305542
    9. 'sym' → logprob: -6.40681791305542
    10. 'broken' → logprob: -6.40681791305542

Token 1254: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10365363955497742
    2. 'to' → logprob: -2.3536536693573
    3. '=' → logprob: -7.353653430938721
    4. '       ' → logprob: -7.478653430938721
    5. ',' → logprob: -7.478653430938721
    6. '<|end|>' → logprob: -8.103653907775879
    7. ')' → logprob: -8.478653907775879
    8. '
' → logprob: -8.728653907775879
    9. '_' → logprob: -8.728653907775879
    10. '   ' → logprob: -8.853653907775879

Token 1255: ' absolute' (ID: 17786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9792851805686951
    2. '|' → logprob: -1.8542852401733398
    3. 'all' → logprob: -1.9792852401733398
    4. 'distance' → logprob: -2.60428524017334
    5. 'absolute' → logprob: -2.85428524017334
    6. 'the' → logprob: -2.85428524017334
    7. ' abs' → logprob: -3.47928524017334
    8. 'checking' → logprob: -4.22928524017334
    9. '(abs' → logprob: -4.47928524017334
    10. 'equal' → logprob: -4.85428524017334

Token 1256: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.4166135787963867
    2. '_' → logprob: -1.2916135787963867
    3. 'values' → logprob: -3.2916135787963867
    4. '_value' → logprob: -3.9166135787963867
    5. ' value' → logprob: -5.916613578796387
    6. 'distance' → logprob: -6.666613578796387
    7. 'difference' → logprob: -6.666613578796387
    8. '_
' → logprob: -7.166613578796387
    9. '```' → logprob: -7.291613578796387
    10. ')' → logprob: -7.541613578796387

Token 1257: ' equality' (ID: 47685)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.588236927986145
    2. 's' → logprob: -1.838236927986145
    3. '(' → logprob: -2.3382368087768555
    4. ',' → logprob: -2.5882368087768555
    5. 'def' → logprob: -2.8382368087768555
    6. ' for' → logprob: -3.2132368087768555
    7. '   ' → logprob: -3.3382368087768555
    8. '=' → logprob: -3.3382368087768555
    9. ' =' → logprob: -3.7132368087768555
    10. ' of' → logprob: -3.7132368087768555

Token 1258: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038483213633298874
    2. ',' → logprob: -4.413483142852783
    3. '
' → logprob: -4.538483142852783
    4. '        
' → logprob: -5.038483142852783
    5. ':' → logprob: -6.538483142852783
    6. '   ' → logprob: -6.788483142852783
    7. ')' → logprob: -7.288483142852783
    8. '        ' → logprob: -7.413483142852783
    9. '<|end|>' → logprob: -7.538483142852783
    10. ' ' → logprob: -7.913483142852783

Token 1259: ' the' (ID: 290)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.3875893354415894
    2. '#' → logprob: -1.6375893354415894
    3. 'the' → logprob: -1.7625893354415894
    4. 'not' → logprob: -2.637589454650879
    5. 'distance' → logprob: -2.762589454650879
    6. 'all' → logprob: -2.887589454650879
    7. 'we' → logprob: -3.137589454650879
    8. ' the' → logprob: -3.887589454650879
    9. 'each' → logprob: -4.012589454650879
    10. 's' → logprob: -4.762589454650879

Token 1260: ' lines' (ID: 8698)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.6619264483451843
    2. '#' → logprob: -2.786926507949829
    3. 'point' → logprob: -2.786926507949829
    4. 's' → logprob: -3.161926507949829
    5. ' signs' → logprob: -3.411926507949829
    6. 'def' → logprob: -3.661926507949829
    7. ' sign' → logprob: -3.786926507949829
    8. ' point' → logprob: -4.03692626953125
    9. '|' → logprob: -4.16192626953125
    10. ' code' → logprob: -4.28692626953125

Token 1261: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.280942440032959
    2. ' are' → logprob: -3.155942440032959
    3. ' _' → logprob: -3.530942440032959
    4. '_i' → logprob: -3.655942440032959
    5. ')' → logprob: -4.280942440032959
    6. ' have' → logprob: -4.280942440032959
    7. '       ' → logprob: -4.280942440032959
    8. '#' → logprob: -4.280942440032959
    9. '_
' → logprob: -4.655942440032959
    10. 's' → logprob: -4.655942440032959

Token 1262: ' constraints' (ID: 31060)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2880115509033203
    2. 'code' → logprob: -1.9130115509033203
    3. 'equ' → logprob: -2.0380115509033203
    4. 'f' → logprob: -2.4130115509033203
    5. 'sign' → logprob: -2.7880115509033203
    6. 'choice' → logprob: -2.9130115509033203
    7. 'choices' → logprob: -3.0380115509033203
    8. 'each' → logprob: -3.2880115509033203
    9. 'equal' → logprob: -4.03801155090332
    10. 's' → logprob: -4.16301155090332

Token 1263: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4512096643447876
    2. ':' → logprob: -1.5762096643447876
    3. ' are' → logprob: -2.076209545135498
    4. '<|end|>' → logprob: -2.451209545135498
    5. ',' → logprob: -2.701209545135498
    6. ' s' → logprob: -2.951209545135498
    7. '):' → logprob: -3.076209545135498
    8. ')' → logprob: -3.326209545135498
    9. ' for' → logprob: -3.701209545135498
    10. '   ' → logprob: -3.701209545135498

Token 1264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004213620908558369
    2. '   ' → logprob: -6.504213809967041
    3. ',' → logprob: -7.004213809967041
    4. ')' → logprob: -8.004213333129883
    5. '<|end|>' → logprob: -8.254213333129883
    6. '        
' → logprob: -8.629213333129883
    7. '           ' → logprob: -9.129213333129883
    8. '        ' → logprob: -9.129213333129883
    9. '[' → logprob: -9.129213333129883
    10. 'import' → logprob: -9.504213333129883

Token 1265: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013807916082441807
    2. 'def' → logprob: -4.513807773590088
    3. '
' → logprob: -6.638807773590088
    4. '   ' → logprob: -7.513807773590088
    5. 'import' → logprob: -8.138808250427246
    6. ' def' → logprob: -8.888808250427246
    7. 'choices' → logprob: -9.013808250427246
    8. '        
' → logprob: -9.263808250427246
    9. '```' → logprob: -9.888808250427246
    10. ' choices' → logprob: -10.138808250427246

Token 1266: ' Try' (ID: 14720)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28039664030075073
    2. 'from' → logprob: -2.1553966999053955
    3. 'def' → logprob: -2.5303966999053955
    4. 'import' → logprob: -4.030396461486816
    5. '#' → logprob: -4.905396461486816
    6. 'lines' → logprob: -4.905396461486816
    7. '   ' → logprob: -5.155396461486816
    8. 'A' → logprob: -5.905396461486816
    9. 'n' → logprob: -6.655396461486816
    10. 'sign' → logprob: -6.655396461486816

Token 1267: ' all' (ID: 722)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.9402731657028198
    2. '
' → logprob: -2.0652732849121094
    3. 'from' → logprob: -2.0652732849121094
    4. '   ' → logprob: -2.5652732849121094
    5. ' def' → logprob: -2.6902732849121094
    6. 'import' → logprob: -2.9402732849121094
    7. '```' → logprob: -3.3152732849121094
    8. '       ' → logprob: -3.8152732849121094
    9. ' n' → logprob: -4.065273284912109
    10. ' s' → logprob: -4.065273284912109

Token 1268: ' sign' (ID: 2232)
  Prédit: ' choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choices' → logprob: -0.7871127724647522
    2. ' s' → logprob: -1.1621127128601074
    3. 'choices' → logprob: -2.6621127128601074
    4. ' ' → logprob: -3.2871127128601074
    5. '   ' → logprob: -3.6621127128601074
    6. ' i' → logprob: -3.7871127128601074
    7. 's' → logprob: -4.787112712860107
    8. 'import' → logprob: -5.037112712860107
    9. ' combinations' → logprob: -5.162112712860107
    10. ' _' → logprob: -5.287112712860107

Token 1269: ' choices' (ID: 14494)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5094611048698425
    2. 's' → logprob: -1.0094611644744873
    3. '[' → logprob: -4.884460926055908
    4. ')' → logprob: -4.884460926055908
    5. ' _' → logprob: -5.509460926055908
    6. '_choices' → logprob: -6.134460926055908
    7. '_s' → logprob: -6.259460926055908
    8. '_i' → logprob: -6.259460926055908
    9. '[i' → logprob: -6.509460926055908
    10. ']' → logprob: -6.509460926055908

Token 1270: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9140086770057678
    2. ':' → logprob: -1.414008617401123
    3. '_' → logprob: -2.289008617401123
    4. '   ' → logprob: -2.914008617401123
    5. 'def' → logprob: -3.164008617401123
    6. ',' → logprob: -3.664008617401123
    7. 'import' → logprob: -4.164008617401123
    8. '
' → logprob: -4.164008617401123
    9. ' ' → logprob: -4.164008617401123
    10. ' def' → logprob: -4.289008617401123

Token 1271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13813449442386627
    2. ' if' → logprob: -2.638134479522705
    3. ' for' → logprob: -3.638134479522705
    4. 'if' → logprob: -5.263134479522705
    5. '   ' → logprob: -5.263134479522705
    6. 'for' → logprob: -5.388134479522705
    7. ' from' → logprob: -5.888134479522705
    8. 'from' → logprob: -6.013134479522705
    9. 'import' → logprob: -6.263134479522705
    10. ' choices' → logprob: -6.513134479522705

Token 1272: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.371404767036438
    2. 'if' → logprob: -2.4964046478271484
    3. 'for' → logprob: -2.4964046478271484
    4. 'from' → logprob: -3.1214046478271484
    5. 'choices' → logprob: -4.121404647827148
    6. 'import' → logprob: -4.246404647827148
    7. 'max' → logprob: -4.371404647827148
    8. '   ' → logprob: -4.496404647827148
    9. ' if' → logprob: -4.621404647827148
    10. ' for' → logprob: -4.996404647827148

Token 1273: ' This' (ID: 1328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5765031576156616
    2. 'if' → logprob: -1.8265031576156616
    3. 'def' → logprob: -2.076503276824951
    4. 'max' → logprob: -3.201503276824951
    5. 'from' → logprob: -3.201503276824951
    6. '   ' → logprob: -3.701503276824951
    7. 'import' → logprob: -4.701503276824951
    8. 'n' → logprob: -5.076503276824951
    9. 'result' → logprob: -5.076503276824951
    10. 'm' → logprob: -5.451503276824951

Token 1274: ' is' (ID: 382)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4143228530883789
    2. 'def' → logprob: -1.664322853088379
    3. ' is' → logprob: -2.914322853088379
    4. '.' → logprob: -3.289322853088379
    5. '   ' → logprob: -4.039322853088379
    6. ' code' → logprob: -4.039322853088379
    7. 'is' → logprob: -5.914322853088379
    8. '_' → logprob: -6.039322853088379
    9. ' can' → logprob: -6.039322853088379
    10. 'import' → logprob: -6.164322853088379

Token 1275: ' too' (ID: 3101)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.594763159751892
    2. ' not' → logprob: -1.969763159751892
    3. ' n' → logprob: -2.2197632789611816
    4. ' impossible' → logprob: -2.5947632789611816
    5. ' too' → logprob: -3.0947632789611816
    6. ' a' → logprob: -3.2197632789611816
    7. '   ' → logprob: -3.3447632789611816
    8. 'not' → logprob: -3.5947632789611816
    9. ' ' → logprob: -3.7197632789611816
    10. ' limited' → logprob: -3.9697632789611816

Token 1276: ' large' (ID: 4410)
  Prédit: ' big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' big' → logprob: -0.34763285517692566
    2. ' large' → logprob: -1.847632884979248
    3. ' long' → logprob: -2.972632884979248
    4. ' complex' → logprob: -3.222632884979248
    5. ' much' → logprob: -4.472632884979248
    6. 'big' → logprob: -4.722632884979248
    7. '_' → logprob: -4.847632884979248
    8. 'large' → logprob: -5.347632884979248
    9. ' hard' → logprob: -6.347632884979248
    10. 'complex' → logprob: -6.347632884979248

Token 1277: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1278: ' all' (ID: 722)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.43454843759536743
    2. 'n' → logprob: -1.0595483779907227
    3. ' range' → logprob: -6.309548377990723
    4. ' ' → logprob: -6.684548377990723
    5. '1' → logprob: -7.434548377990723
    6. ' the' → logprob: -7.809548377990723
    7. ' i' → logprob: -7.934548377990723
    8. 'i' → logprob: -8.684548377990723
    9. 'range' → logprob: -8.934548377990723
    10. '100' → logprob: -8.934548377990723

Token 1279: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37986645102500916
    2. ' _' → logprob: -1.8798664808273315
    3. '_choices' → logprob: -2.254866361618042
    4. ')' → logprob: -4.254866600036621
    5. '
' → logprob: -4.379866600036621
    6. ' choices' → logprob: -4.754866600036621
    7. 'choices' → logprob: -5.004866600036621
    8. '#' → logprob: -6.004866600036621
    9. '_
' → logprob: -6.629866600036621
    10. ' ' → logprob: -7.254866600036621

Token 1280: ' but' (ID: 889)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.18783676624298096
    2. ' but' → logprob: -3.0628366470336914
    3. '       ' → logprob: -3.4378366470336914
    4. '#' → logprob: -4.187836647033691
    5. ' s' → logprob: -4.187836647033691
    6. '...' → logprob: -4.187836647033691
    7. ' return' → logprob: -4.562836647033691
    8. ' n' → logprob: -5.562836647033691
    9. ' continue' → logprob: -5.562836647033691
    10. ' #' → logprob: -5.937836647033691

Token 1281: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9366453289985657
    2. 'import' → logprob: -1.311645269393921
    3. 'if' → logprob: -2.061645269393921
    4. 'for' → logprob: -2.686645269393921
    5. ' if' → logprob: -3.436645269393921
    6. '       ' → logprob: -3.436645269393921
    7. 'def' → logprob: -3.561645269393921
    8. 'from' → logprob: -4.1866455078125
    9. ' for' → logprob: -4.3116455078125
    10. '
' → logprob: -4.4366455078125

Token 1282: ' optimize' (ID: 40398)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.041219308972358704
    2. ' def' → logprob: -4.541219234466553
    3. ' will' → logprob: -4.791219234466553
    4. 'can' → logprob: -5.291219234466553
    5. 'import' → logprob: -5.666219234466553
    6. ' try' → logprob: -6.166219234466553
    7. ' continue' → logprob: -6.166219234466553
    8. ' may' → logprob: -6.291219234466553
    9. ' import' → logprob: -6.791219234466553
    10. ' could' → logprob: -6.791219234466553

Token 1283: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1451576203107834
    2. ' if' → logprob: -2.3951575756073
    3. 'if' → logprob: -4.645157814025879
    4. ' n' → logprob: -5.395157814025879
    5. 'n' → logprob: -5.520157814025879
    6. '```' → logprob: -5.645157814025879
    7. '
' → logprob: -5.770157814025879
    8. 'import' → logprob: -5.895157814025879
    9. ' from' → logprob: -6.020157814025879
    10. 'from' → logprob: -6.145157814025879

Token 1284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016378730535507202
    2. '
' → logprob: -5.641378879547119
    3. '```' → logprob: -5.891378879547119
    4. 'import' → logprob: -6.141378879547119
    5. ' if' → logprob: -6.266378879547119
    6. 'from' → logprob: -6.766378879547119
    7. ' from' → logprob: -7.141378879547119
    8. '        
' → logprob: -7.516378879547119
    9. ' choices' → logprob: -7.516378879547119
    10. 'if' → logprob: -7.641378879547119

Token 1285: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7930848598480225
    2. '       ' → logprob: -1.0430848598480225
    3. '#' (adapté à ' #') → logprob: -2.7930848598480225
    4. 'sign' → logprob: -3.4180848598480225
    5. 'max' → logprob: -4.043085098266602
    6. ' if' → logprob: -4.043085098266602
    7. 'choices' → logprob: -4.418085098266602
    8. 'm' → logprob: -4.543085098266602
    9. '```' → logprob: -4.793085098266602
    10. 'import' → logprob: -4.793085098266602

Token 1286: ' Observation' (ID: 143762)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6003002524375916
    2. 'def' → logprob: -1.8503003120422363
    3. 'from' → logprob: -2.7253003120422363
    4. 'if' → logprob: -2.7253003120422363
    5. '#' → logprob: -3.6003003120422363
    6. 'max' → logprob: -3.8503003120422363
    7. 'import' → logprob: -3.8503003120422363
    8. 'm' → logprob: -3.8503003120422363
    9. 'lines' → logprob: -3.9753003120422363
    10. '   ' → logprob: -4.725300312042236

Token 1287: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25703439116477966
    2. '#' → logprob: -2.6320343017578125
    3. '_' → logprob: -3.7570343017578125
    4. ' s' → logprob: -4.0070343017578125
    5. '
' → logprob: -4.0070343017578125
    6. ':
' → logprob: -4.3820343017578125
    7. ' :' → logprob: -4.3820343017578125
    8. 's' → logprob: -5.0070343017578125
    9. '   ' → logprob: -5.0070343017578125
    10. ' #' → logprob: -5.1320343017578125

Token 1288: ' If' (ID: 1843)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -2.190333843231201
    2. ' #' → logprob: -2.190333843231201
    3. '#' → logprob: -2.315333843231201
    4. ' if' → logprob: -2.315333843231201
    5. ' for' → logprob: -2.315333843231201
    6. ' import' → logprob: -2.690333843231201
    7. ' lines' → logprob: -2.690333843231201
    8. ' s' → logprob: -2.815333843231201
    9. ' i' → logprob: -3.440333843231201
    10. ' possible' → logprob: -3.940333843231201

Token 1289: ' two' (ID: 1920)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31481969356536865
    2. ' n' → logprob: -1.3148196935653687
    3. 'len' → logprob: -7.189819812774658
    4. ' len' → logprob: -8.3148193359375
    5. ' the' → logprob: -8.8148193359375
    6. ' all' → logprob: -9.4398193359375
    7. 'the' → logprob: -9.5648193359375
    8. 's' → logprob: -10.0648193359375
    9. ' ' → logprob: -10.3148193359375
    10. 'all' → logprob: -10.4398193359375

Token 1290: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.9281734228134155
    2. ' choices' → logprob: -0.9281734228134155
    3. '_i' → logprob: -2.678173542022705
    4. 'choices' → logprob: -3.178173542022705
    5. '_' → logprob: -3.928173542022705
    6. '
' → logprob: -4.553173542022705
    7. 'i' → logprob: -4.928173542022705
    8. ' i' → logprob: -5.053173542022705
    9. '_
' → logprob: -5.178173542022705
    10. '_choices' → logprob: -5.428173542022705

Token 1291: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.24444782733917236
    2. ' have' → logprob: -1.9944478273391724
    3. 's' → logprob: -4.744447708129883
    4. 'are' → logprob: -4.744447708129883
    5. ' continue' → logprob: -5.369447708129883
    6. ',' → logprob: -5.494447708129883
    7. '_i' → logprob: -5.494447708129883
    8. '#' → logprob: -5.494447708129883
    9. 'have' → logprob: -5.494447708129883
    10. ')' → logprob: -5.744447708129883

Token 1292: ' parallel' (ID: 26697)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.03962908685207367
    2. ' parallel' → logprob: -3.2896289825439453
    3. 'not' → logprob: -7.414628982543945
    4. 'col' → logprob: -8.164628982543945
    5. 'ident' → logprob: -8.539628982543945
    6. ' col' → logprob: -8.789628982543945
    7. '_parallel' → logprob: -9.664628982543945
    8. ' not' → logprob: -9.914628982543945
    9. ' identical' → logprob: -10.289628982543945
    10. 'all' → logprob: -10.414628982543945

Token 1293: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5744442343711853
    2. ' and' → logprob: -1.82444429397583
    3. ',' → logprob: -2.44944429397583
    4. '_' → logprob: -3.07444429397583
    5. ':
' → logprob: -3.44944429397583
    6. 'and' → logprob: -3.57444429397583
    7. '):' → logprob: -4.07444429397583
    8. '       ' → logprob: -4.19944429397583
    9. '   ' → logprob: -4.82444429397583
    10. ')' → logprob: -4.94944429397583

Token 1294: ' their' (ID: 1043)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1735455989837646
    2. ' choices' → logprob: -1.9235455989837646
    3. '#' → logprob: -2.0485455989837646
    4. ' we' → logprob: -2.1735455989837646
    5. ')' → logprob: -3.2985455989837646
    6. ' for' → logprob: -3.4235455989837646
    7. ' the' → logprob: -3.5485455989837646
    8. ' #' → logprob: -3.5485455989837646
    9. '       ' → logprob: -3.5485455989837646
    10. ' then' → logprob: -3.7985455989837646

Token 1295: ' normals' (ID: 132225)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -1.5076749324798584
    2. 's' → logprob: -2.5076749324798584
    3. 'norm' → logprob: -2.5076749324798584
    4. ' normal' → logprob: -2.6326749324798584
    5. 'direction' → logprob: -2.6326749324798584
    6. 'A' → logprob: -3.0076749324798584
    7. ' directions' → logprob: -3.1326749324798584
    8. '_' → logprob: -3.1326749324798584
    9. ' direction' → logprob: -3.2576749324798584
    10. 'coeff' → logprob: -3.2576749324798584

Token 1296: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.8907617926597595
    2. ' continue' → logprob: -1.6407618522644043
    3. ')' → logprob: -2.3907618522644043
    4. '```' → logprob: -3.2657618522644043
    5. '_' → logprob: -3.5157618522644043
    6. ',' → logprob: -3.5157618522644043
    7. 'continue' → logprob: -3.5157618522644043
    8. 'are' → logprob: -3.6407618522644043
    9. '<|end|>' → logprob: -3.7657618522644043
    10. ' have' → logprob: -3.8907618522644043

Token 1297: ' proportional' (ID: 99864)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.18141506612300873
    2. 'col' → logprob: -2.93141508102417
    3. 'close' → logprob: -4.18141508102417
    4. 'almost' → logprob: -4.18141508102417
    5. 'equal' → logprob: -4.30641508102417
    6. ' (' → logprob: -4.55641508102417
    7. 'very' → logprob: -4.55641508102417
    8. ' very' → logprob: -4.93141508102417
    9. 'the' → logprob: -5.18141508102417
    10. '(' → logprob: -5.18141508102417

Token 1298: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9226778149604797
    2. '
' → logprob: -1.172677755355835
    3. ':' → logprob: -2.922677755355835
    4. ',' → logprob: -2.922677755355835
    5. '        
' → logprob: -3.297677755355835
    6. ')' → logprob: -3.547677755355835
    7. ',
' → logprob: -4.297677993774414
    8. ':
' → logprob: -4.297677993774414
    9. '_' → logprob: -4.547677993774414
    10. ' 
' → logprob: -4.797677993774414

Token 1299: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3835368752479553
    2. '       ' → logprob: -1.8835368156433105
    3. ')' → logprob: -3.3835368156433105
    4. ' and' → logprob: -3.7585368156433105
    5. ' s' → logprob: -4.0085368156433105
    6. ' #' → logprob: -4.5085368156433105
    7. '...' → logprob: -4.7585368156433105
    8. ' for' → logprob: -4.8835368156433105
    9. '           ' → logprob: -5.0085368156433105
    10. ',' → logprob: -5.1335368156433105

Token 1300: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3141491711139679
    2. 'continue' → logprob: -2.4391491413116455
    3. 'for' → logprob: -2.6891491413116455
    4. 'if' → logprob: -3.0641491413116455
    5. 'return' → logprob: -4.189149379730225
    6. ' for' → logprob: -4.439149379730225
    7. ' if' → logprob: -4.939149379730225
    8. ' continue' → logprob: -5.439149379730225
    9. ' #' → logprob: -5.439149379730225
    10. '           ' → logprob: -5.689149379730225

Token 1301: ' special' (ID: 3582)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.844015896320343
    2. 'def' → logprob: -1.9690158367156982
    3. 'll' → logprob: -1.9690158367156982
    4. 're' → logprob: -2.9690158367156982
    5. '#' → logprob: -3.2190158367156982
    6. 'for' → logprob: -3.2190158367156982
    7. 'l' → logprob: -3.3440158367156982
    8. ' for' → logprob: -3.7190158367156982
    9. 'bs' → logprob: -3.7190158367156982
    10. 't' → logprob: -3.8440158367156982

Token 1302: ' case' (ID: 1890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1209781169891357
    2. 'case' → logprob: -1.2459781169891357
    3. 'def' → logprob: -2.2459781169891357
    4. 's' → logprob: -2.9959781169891357
    5. '   ' → logprob: -2.9959781169891357
    6. '       ' → logprob: -3.4959781169891357
    7. '
' → logprob: -3.4959781169891357
    8. '```' → logprob: -3.4959781169891357
    9. '#' → logprob: -4.370978355407715
    10. 'return' → logprob: -4.495978355407715

Token 1303: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10077967494726181
    2. '
' → logprob: -3.3507797718048096
    3. '   ' → logprob: -4.2257795333862305
    4. ')' → logprob: -4.7257795333862305
    5. '        
' → logprob: -4.8507795333862305
    6. 'def' → logprob: -4.9757795333862305
    7. ' if' → logprob: -5.1007795333862305
    8. ',' → logprob: -5.8507795333862305
    9. '_' → logprob: -5.9757795333862305
    10. ' def' → logprob: -6.9757795333862305

Token 1304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031742677092552185
    2. '#' → logprob: -7.878174304962158
    3. ')' → logprob: -7.878174304962158
    4. 'import' → logprob: -8.003173828125
    5. ',' → logprob: -8.128173828125
    6. '<|end|>' → logprob: -8.128173828125
    7. '```' → logprob: -8.253173828125
    8. '        
' → logprob: -8.503173828125
    9. '...' → logprob: -8.878173828125
    10. '   ' → logprob: -8.878173828125

Token 1305: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013146113604307175
    2. '```' → logprob: -5.888145923614502
    3. '        
' → logprob: -6.013145923614502
    4. '#' (adapté à ' #') → logprob: -6.888145923614502
    5. 'choices' → logprob: -7.013145923614502
    6. 'def' → logprob: -7.263145923614502
    7. '
' → logprob: -7.388145923614502
    8. '   ' → logprob: -7.388145923614502
    9. ' choices' → logprob: -7.388145923614502
    10. 's' → logprob: -7.888145923614502

Token 1306: ' Illegal' (ID: 22431)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05690262094140053
    2. 'def' → logprob: -3.5569026470184326
    3. '
' → logprob: -4.5569024085998535
    4. '   ' → logprob: -5.4319024085998535
    5. 'import' → logprob: -5.8069024085998535
    6. '        
' → logprob: -5.9319024085998535
    7. '#' → logprob: -6.6819024085998535
    8. '```' → logprob: -6.9319024085998535
    9. ' def' → logprob: -7.1819024085998535
    10. 'from' → logprob: -7.4319024085998535

Token 1307: ' case' (ID: 1890)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9038156270980835
    2. '<|end|>' → logprob: -1.1538156270980835
    3. ' ' → logprob: -2.403815746307373
    4. ')' → logprob: -2.403815746307373
    5. '
' → logprob: -3.528815746307373
    6. '#' → logprob: -4.653815746307373
    7. ',' → logprob: -4.903815746307373
    8. '[' → logprob: -5.028815746307373
    9. '<|end|>' → logprob: -5.278815746307373
    10. '   ' → logprob: -5.278815746307373

Token 1308: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03156765177845955
    2. ':
' → logprob: -4.781567573547363
    3. '   ' → logprob: -5.531567573547363
    4. ',' → logprob: -5.531567573547363
    5. '<|end|>' → logprob: -6.156567573547363
    6. '#' → logprob: -6.656567573547363
    7. ' :' → logprob: -6.781567573547363
    8. ' for' → logprob: -6.906567573547363
    9. ' ' → logprob: -7.031567573547363
    10. '.' → logprob: -7.031567573547363

Token 1309: ' no' (ID: 860)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3673346042633057
    2. ' n' → logprob: -1.6173346042633057
    3. ' True' → logprob: -1.6173346042633057
    4. ' False' → logprob: -2.6173346042633057
    5. ' if' → logprob: -2.8673346042633057
    6. ' not' → logprob: -3.6173346042633057
    7. ' lines' → logprob: -3.7423346042633057
    8. ' that' → logprob: -3.8673346042633057
    9. ' self' → logprob: -3.8673346042633057
    10. ' ' → logprob: -3.9923346042633057

Token 1310: ' solution' (ID: 7578)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3873067796230316
    2. 'n' → logprob: -1.762306809425354
    3. ')' → logprob: -3.1373066902160645
    4. ' more' → logprob: -4.7623066902160645
    5. 'def' → logprob: -5.1373066902160645
    6. '
' → logprob: -5.1373066902160645
    7. ',' → logprob: -5.2623066902160645
    8. ' solution' → logprob: -5.5123066902160645
    9. 'e' → logprob: -5.7623066902160645
    10. 's' → logprob: -5.7623066902160645

Token 1311: ' or' (ID: 503)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7221954464912415
    2. '       ' → logprob: -1.2221953868865967
    3. '   ' → logprob: -2.7221953868865967
    4. '        
' → logprob: -3.5971953868865967
    5. 'def' → logprob: -3.9721953868865967
    6. ')' → logprob: -4.222195625305176
    7. ',' → logprob: -4.472195625305176
    8. ' def' → logprob: -4.722195625305176
    9. ':' → logprob: -4.847195625305176
    10. '_' → logprob: -4.972195625305176

Token 1312: ' many' (ID: 1991)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9361518025398254
    2. ' infinite' → logprob: -1.3111517429351807
    3. 'parallel' → logprob: -2.3111517429351807
    4. ' ind' → logprob: -3.1861517429351807
    5. 'inf' → logprob: -3.6861517429351807
    6. 'ind' → logprob: -3.6861517429351807
    7. 'many' → logprob: -3.8111517429351807
    8. ' parallel' → logprob: -4.06115198135376
    9. 'multiple' → logprob: -4.06115198135376
    10. 'sing' → logprob: -4.31115198135376

Token 1313: ' solutions' (ID: 9368)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.174047827720642
    2. '_' → logprob: -1.299047827720642
    3. ')' → logprob: -2.0490479469299316
    4. 'def' → logprob: -2.6740479469299316
    5. '       ' → logprob: -2.9240479469299316
    6. '
' → logprob: -3.1740479469299316
    7. ' def' → logprob: -3.7990479469299316
    8. ',' → logprob: -4.174047946929932
    9. ' ' → logprob: -4.549047946929932
    10. ':' → logprob: -4.674047946929932

Token 1314: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1479538083076477
    2. '
' → logprob: -3.022953748703003
    3. 'def' → logprob: -3.522953748703003
    4. '        
' → logprob: -3.897953748703003
    5. '   ' → logprob: -4.272953987121582
    6. '```' → logprob: -4.772953987121582
    7. ' def' → logprob: -4.897953987121582
    8. ' 
' → logprob: -6.772953987121582
    9. '    
' → logprob: -7.272953987121582
    10. ')' → logprob: -7.272953987121582

Token 1315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02554863505065441
    2. '        
' → logprob: -4.525548458099365
    3. '   ' → logprob: -5.400548458099365
    4. ')' → logprob: -6.150548458099365
    5. ' 
' → logprob: -6.400548458099365
    6. ',' → logprob: -6.650548458099365
    7. '        ' → logprob: -7.650548458099365
    8. 'def' → logprob: -7.650548458099365
    9. '    ' → logprob: -8.025548934936523
    10. '
' → logprob: -8.025548934936523

Token 1316: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09142972528934479
    2. 'def' → logprob: -2.8414297103881836
    3. '   ' → logprob: -4.716429710388184
    4. '        
' → logprob: -5.466429710388184
    5. '
' → logprob: -5.591429710388184
    6. '```' → logprob: -5.966429710388184
    7. '#' (adapté à ' #') → logprob: -6.841429710388184
    8. ' if' → logprob: -6.841429710388184
    9. 'if' → logprob: -6.966429710388184
    10. '\' → logprob: -7.216429710388184

Token 1317: ' Algorithm' (ID: 78719)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13505879044532776
    2. 'def' → logprob: -2.510058879852295
    3. '   ' → logprob: -4.635058879852295
    4. 'if' → logprob: -4.635058879852295
    5. ' if' → logprob: -4.760058879852295
    6. ' def' → logprob: -5.385058879852295
    7. 'n' → logprob: -5.635058879852295
    8. '```' → logprob: -6.135058879852295
    9. '
' → logprob: -6.385058879852295
    10. '#' → logprob: -7.135058879852295

Token 1318: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03150573745369911
    2. ':
' → logprob: -4.656505584716797
    3. '   ' → logprob: -4.656505584716797
    4. ' :' → logprob: -5.406505584716797
    5. '):' → logprob: -6.531505584716797
    6. '       ' → logprob: -6.906505584716797
    7. 'def' → logprob: -7.406505584716797
    8. '=' → logprob: -7.406505584716797
    9. '_' → logprob: -7.531505584716797
    10. '[' → logprob: -7.531505584716797

Token 1319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004921489744447172
    2. '```' → logprob: -8.375492095947266
    3. 'import' → logprob: -8.875492095947266
    4. 'from' → logprob: -9.250492095947266
    5. '#' → logprob: -11.750492095947266
    6. 'def' → logprob: -12.250492095947266
    7. '
' → logprob: -12.875492095947266
    8. 'n' → logprob: -13.000492095947266
    9. '   ' → logprob: -13.125492095947266
    10. '        
' → logprob: -13.250492095947266

Token 1320: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0469905287027359
    2. 'from' → logprob: -4.046990394592285
    3. 'sign' → logprob: -4.671990394592285
    4. '```' → logprob: -5.171990394592285
    5. 'choices' → logprob: -5.546990394592285
    6. '#' (adapté à ' #') → logprob: -6.046990394592285
    7. 'import' → logprob: -6.171990394592285
    8. 'n' → logprob: -6.421990394592285
    9. 'def' → logprob: -6.796990394592285
    10. 'lines' → logprob: -7.421990394592285

Token 1321: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9263644814491272
    2. 'def' → logprob: -1.1763644218444824
    3. 'from' → logprob: -1.5513644218444824
    4. 'lines' → logprob: -4.051364421844482
    5. 'import' → logprob: -4.176364421844482
    6. '#' → logprob: -4.426364421844482
    7. 'sign' → logprob: -4.676364421844482
    8. 'm' → logprob: -5.176364421844482
    9. 'choices' → logprob: -5.176364421844482
    10. '   ' → logprob: -5.301364421844482

Token 1322: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4346436858177185
    2. 'lines' → logprob: -2.5596437454223633
    3. '       ' → logprob: -2.6846437454223633
    4. 'if' → logprob: -2.8096437454223633
    5. 'from' → logprob: -2.9346437454223633
    6. 'choices' → logprob: -3.9346437454223633
    7. '#' → logprob: -4.184643745422363
    8. 'sign' → logprob: -4.184643745422363
    9. '   ' → logprob: -4.309643745422363
    10. 'n' → logprob: -4.434643745422363

Token 1323: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22655339539051056
    2. ' lines' → logprob: -2.851553440093994
    3. ')' → logprob: -3.351553440093994
    4. ':' → logprob: -3.851553440093994
    5. 'def' → logprob: -3.851553440093994
    6. '#' → logprob: -4.726553440093994
    7. '   ' → logprob: -4.851553440093994
    8. '```' → logprob: -4.851553440093994
    9. '0' → logprob: -5.101553440093994
    10. ' n' → logprob: -5.226553440093994

Token 1324: ' Check' (ID: 6208)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5793336629867554
    2. '#' → logprob: -1.9543336629867554
    3. 'Collect' → logprob: -2.454333782196045
    4. 'Check' → logprob: -3.204333782196045
    5. 'from' → logprob: -3.704333782196045
    6. ' lines' → logprob: -4.079333782196045
    7. 'if' → logprob: -4.454333782196045
    8. 'Try' → logprob: -4.704333782196045
    9. 'Extract' → logprob: -4.704333782196045
    10. ' A' → logprob: -4.829333782196045

Token 1325: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33805540204048157
    2. 'all' → logprob: -2.213055372238159
    3. 'parallel' → logprob: -2.213055372238159
    4. ' if' → logprob: -2.963055372238159
    5. 'self' → logprob: -4.838055610656738
    6. 'for' → logprob: -5.963055610656738
    7. '#' → logprob: -6.713055610656738
    8. '   ' → logprob: -6.838055610656738
    9. ' parallel' → logprob: -7.088055610656738
    10. '       ' → logprob: -7.088055610656738

Token 1326: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.1968609094619751
    2. ' all' → logprob: -1.946860909461975
    3. 'len' → logprob: -3.5718607902526855
    4. ' len' → logprob: -5.9468607902526855
    5. 'n' → logprob: -6.1968607902526855
    6. 'self' → logprob: -6.4468607902526855
    7. 'the' → logprob: -7.5718607902526855
    8. ' n' → logprob: -8.071861267089844
    9. ' self' → logprob: -8.196861267089844
    10. ' the' → logprob: -8.946861267089844

Token 1327: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.4061513841152191
    2. 'self' → logprob: -1.9061514139175415
    3. 'lines' → logprob: -2.281151294708252
    4. ' self' → logprob: -3.156151294708252
    5. 'norm' → logprob: -4.781151294708252
    6. '(self' → logprob: -5.156151294708252
    7. ' line' → logprob: -5.906151294708252
    8. ' normals' → logprob: -5.906151294708252
    9. '(A' → logprob: -6.031151294708252
    10. ' abs' → logprob: -6.031151294708252

Token 1328: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.6574513912200928
    2. ' are' → logprob: -0.9074513912200928
    3. '_are' → logprob: -3.5324513912200928
    4. '[' → logprob: -3.7824513912200928
    5. '_parallel' → logprob: -4.907451629638672
    6. '```' → logprob: -5.407451629638672
    7. 'have' → logprob: -5.407451629638672
    8. ' have' → logprob: -5.532451629638672
    9. 'parallel' → logprob: -6.532451629638672
    10. '   ' → logprob: -6.907451629638672

Token 1329: ' parallel' (ID: 26697)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.008640455082058907
    2. ' parallel' → logprob: -4.758640289306641
    3. '_parallel' → logprob: -11.75864028930664
    4. 'all' → logprob: -12.00864028930664
    5. '.parallel' → logprob: -12.38364028930664
    6. 'approximately' → logprob: -12.88364028930664
    7. 'par' → logprob: -14.00864028930664
    8. '
' → logprob: -14.13364028930664
    9. '#' → logprob: -14.25864028930664
    10. 'aligned' → logprob: -14.38364028930664

Token 1330: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5181384682655334
    2. ':' → logprob: -1.1431384086608887
    3. ':
' → logprob: -3.1431384086608887
    4. '   ' → logprob: -3.5181384086608887
    5. ' and' → logprob: -6.268138408660889
    6. ',' → logprob: -6.518138408660889
    7. 'if' → logprob: -6.893138408660889
    8. '
' → logprob: -7.018138408660889
    9. 'def' → logprob: -7.018138408660889
    10. 'and' → logprob: -7.018138408660889

Token 1331: ' if' (ID: 538)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5812355279922485
    2. '       ' → logprob: -1.9562355279922485
    3. 'if' → logprob: -2.081235408782959
    4. ' all' → logprob: -2.831235408782959
    5. ' if' → logprob: -3.081235408782959
    6. 'parallel' → logprob: -3.581235408782959
    7. ' parallel' → logprob: -4.456235408782959
    8. ' first' → logprob: -5.206235408782959
    9. ' lines' → logprob: -5.706235408782959
    10. 'is' → logprob: -5.706235408782959

Token 1332: ' yes' (ID: 14531)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.09368172287940979
    2. ' all' → logprob: -3.093681812286377
    3. 'len' → logprob: -3.218681812286377
    4. 'self' → logprob: -6.093681812286377
    5. ' len' → logprob: -6.968681812286377
    6. 'True' → logprob: -8.343681335449219
    7. ' self' → logprob: -8.718681335449219
    8. 'not' → logprob: -8.968681335449219
    9. ' True' → logprob: -8.968681335449219
    10. '
' → logprob: -9.593681335449219

Token 1333: ' Many' (ID: 11048)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7437440156936646
    2. ':
' → logprob: -1.6187440156936646
    3. '           ' → logprob: -1.8687440156936646
    4. '       ' → logprob: -2.868743896484375
    5. ',' → logprob: -2.868743896484375
    6. '   ' → logprob: -4.118743896484375
    7. ' return' → logprob: -4.618743896484375
    8. ' for' → logprob: -5.118743896484375
    9. 'return' → logprob: -5.368743896484375
    10. ' lines' → logprob: -5.368743896484375

Token 1334: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44731301069259644
    2. ':
' → logprob: -1.5723130702972412
    3. '   ' → logprob: -3.072313070297241
    4. '       ' → logprob: -3.322313070297241
    5. ' lines' → logprob: -3.447313070297241
    6. '           ' → logprob: -5.072312831878662
    7. '
' → logprob: -5.197312831878662
    8. ',' → logprob: -5.322312831878662
    9. '_lines' → logprob: -5.697312831878662
    10. ':
' → logprob: -6.072312831878662

Token 1335: ' not' (ID: 625)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6450195908546448
    2. ' len' → logprob: -1.64501953125
    3. 'len' → logprob: -2.39501953125
    4. 'all' → logprob: -2.64501953125
    5. ' any' → logprob: -2.89501953125
    6. ' not' → logprob: -3.39501953125
    7. ' True' → logprob: -4.52001953125
    8. 'any' → logprob: -5.02001953125
    9. 'not' → logprob: -5.27001953125
    10. '
' → logprob: -5.64501953125

Token 1336: ' no' (ID: 860)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5572156310081482
    2. ':' → logprob: -1.807215690612793
    3. ':
' → logprob: -2.432215690612793
    4. ' lines' → logprob: -3.057215690612793
    5. '#' → logprob: -4.182215690612793
    6. '           ' → logprob: -4.182215690612793
    7. 'else' → logprob: -4.307215690612793
    8. '   ' → logprob: -4.557215690612793
    9. 'def' → logprob: -4.557215690612793
    10. 'return' → logprob: -4.807215690612793

Token 1337: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33189791440963745
    2. '
' → logprob: -2.2068979740142822
    3. '   ' → logprob: -2.7068979740142822
    4. ' lines' → logprob: -3.2068979740142822
    5. 'def' → logprob: -4.331897735595703
    6. ':' → logprob: -4.456897735595703
    7. ':
' → logprob: -4.706897735595703
    8. ' def' → logprob: -5.081897735595703
    9. '```' → logprob: -5.206897735595703
    10. '):
' → logprob: -5.956897735595703

Token 1338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03821304067969322
    2. '
' → logprob: -3.788213014602661
    3. '```' → logprob: -5.16321325302124
    4. '#' → logprob: -5.53821325302124
    5. ')' → logprob: -6.53821325302124
    6. '   ' → logprob: -7.03821325302124
    7. 'import' → logprob: -7.03821325302124
    8. '        
' → logprob: -7.91321325302124
    9. ',' → logprob: -8.538212776184082
    10. ' lines' → logprob: -8.788212776184082

Token 1339: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03106173872947693
    2. ' lines' → logprob: -4.28106164932251
    3. '
' → logprob: -5.53106164932251
    4. ' if' → logprob: -5.78106164932251
    5. '#' (adapté à ' #') → logprob: -6.15606164932251
    6. 'if' → logprob: -6.40606164932251
    7. '   ' → logprob: -6.40606164932251
    8. '```' → logprob: -6.53106164932251
    9. ' #' → logprob: -7.40606164932251
    10. '        
' → logprob: -7.78106164932251

Token 1340: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30548056960105896
    2. 'if' → logprob: -1.8054805994033813
    3. ' if' → logprob: -2.930480480194092
    4. 'all' → logprob: -4.305480480194092
    5. ' lines' → logprob: -4.805480480194092
    6. '#' → logprob: -4.930480480194092
    7. '```' → logprob: -5.555480480194092
    8. ' all' → logprob: -5.930480480194092
    9. '
' → logprob: -6.305480480194092
    10. '   ' → logprob: -6.805480480194092

Token 1341: '2' (ID: 17)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6118718385696411
    2. '#' → logprob: -2.4868717193603516
    3. 'if' → logprob: -2.4868717193603516
    4. 'def' → logprob: -2.4868717193603516
    5. 'all' → logprob: -2.6118717193603516
    6. '       ' → logprob: -2.6118717193603516
    7. '   ' → logprob: -3.7368717193603516
    8. 'lines' → logprob: -5.361871719360352
    9. 'first' → logprob: -5.611871719360352
    10. 'for' → logprob: -5.611871719360352

Token 1342: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006439668592065573
    2. '   ' → logprob: -5.131439685821533
    3. 'def' → logprob: -8.881439208984375
    4. '       ' → logprob: -9.756439208984375
    5. '):' → logprob: -10.006439208984375
    6. '```' → logprob: -10.131439208984375
    7. ' )' → logprob: -10.506439208984375
    8. ':' → logprob: -10.631439208984375
    9. '0' → logprob: -10.756439208984375
    10. ')
' → logprob: -10.881439208984375

Token 1343: ' Otherwise' (ID: 33987)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1664140224456787
    2. 'from' → logprob: -1.2914140224456787
    3. 'A' → logprob: -2.0414140224456787
    4. 'import' → logprob: -2.2914140224456787
    5. 'lines' → logprob: -3.1664140224456787
    6. 'def' → logprob: -3.2914140224456787
    7. 'Try' → logprob: -3.5414140224456787
    8. '   ' → logprob: -3.5414140224456787
    9. 'try' → logprob: -4.666414260864258
    10. 'Check' → logprob: -5.291414260864258

Token 1344: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17888042330741882
    2. '
' → logprob: -2.053880453109741
    3. '#' → logprob: -4.303880214691162
    4. 'def' → logprob: -5.053880214691162
    5. '   ' → logprob: -5.428880214691162
    6. 'import' → logprob: -5.803880214691162
    7. ' lines' → logprob: -5.803880214691162
    8. '        
' → logprob: -6.553880214691162
    9. '```' → logprob: -6.678880214691162
    10. 'try' → logprob: -7.803880214691162

Token 1345: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3985929489135742
    2. 'from' → logprob: -1.7735929489135742
    3. '#' → logprob: -1.8985929489135742
    4. 'A' → logprob: -2.398592948913574
    5. 'import' → logprob: -2.523592948913574
    6. '       ' → logprob: -2.773592948913574
    7. 'def' → logprob: -2.898592948913574
    8. ' for' → logprob: -3.398592948913574
    9. '
' → logprob: -3.648592948913574
    10. ' from' → logprob: -4.273592948913574

Token 1346: ' all' (ID: 722)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6452101469039917
    2. 'from' → logprob: -0.8952101469039917
    3. ' from' → logprob: -3.1452102661132812
    4. '```' → logprob: -5.145210266113281
    5. ' import' → logprob: -5.645210266113281
    6. '   ' → logprob: -6.020210266113281
    7. 'def' → logprob: -6.145210266113281
    8. 'sign' → logprob: -6.145210266113281
    9. '
' → logprob: -6.395210266113281
    10. 'for' → logprob: -6.645210266113281

Token 1347: ' sign' (ID: 2232)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.136915922164917
    2. 'choices' → logprob: -1.761915922164917
    3. ' s' → logprob: -2.511915922164917
    4. ')' → logprob: -2.636915922164917
    5. 'sign' → logprob: -2.636915922164917
    6. 'i' → logprob: -3.011915922164917
    7. ' choices' → logprob: -3.261915922164917
    8. '   ' → logprob: -3.386915922164917
    9. '_sign' → logprob: -3.886915922164917
    10. '_' → logprob: -4.136916160583496

Token 1348: ' patterns' (ID: 18587)
  Prédit: ' choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choices' → logprob: -0.20661486685276031
    2. '_choices' → logprob: -2.0816149711608887
    3. 'choices' → logprob: -3.9566149711608887
    4. 's' → logprob: -4.206614971160889
    5. ' s' → logprob: -4.331614971160889
    6. ' _' → logprob: -4.956614971160889
    7. '```' → logprob: -6.206614971160889
    8. '   ' → logprob: -6.331614971160889
    9. '_' → logprob: -7.081614971160889
    10. ')' → logprob: -7.081614971160889

Token 1349: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8772991895675659
    2. '   ' → logprob: -1.002299189567566
    3. ':' → logprob: -2.0022993087768555
    4. '
' → logprob: -3.7522993087768555
    5. '):' → logprob: -4.1272993087768555
    6. 'def' → logprob: -4.7522993087768555
    7. ':
' → logprob: -5.1272993087768555
    8. ')' → logprob: -5.2522993087768555
    9. 'import' → logprob: -5.3772993087768555
    10. '):
' → logprob: -6.0022993087768555

Token 1350: ' n' (ID: 297)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5445590019226074
    2. 'i' → logprob: -1.4195590019226074
    3. '1' → logprob: -2.5445590019226074
    4. ' range' → logprob: -2.9195590019226074
    5. ' i' → logprob: -4.544559001922607
    6. '(' → logprob: -4.794559001922607
    7. 'n' → logprob: -4.919559001922607
    8. '(i' → logprob: -5.919559001922607
    9. 'the' → logprob: -6.169559001922607
    10. ' ' → logprob: -6.544559001922607

Token 1351: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2903292179107666
    2. '1' → logprob: -1.4153292179107666
    3. ' -' → logprob: -5.5403289794921875
    4. '```' → logprob: -5.7903289794921875
    5. '
' → logprob: -7.2903289794921875
    6. '2' → logprob: -7.4153289794921875
    7. '0' → logprob: -8.415328979492188
    8. '``' → logprob: -8.665328979492188
    9. '   ' → logprob: -8.790328979492188
    10. ' ' → logprob: -9.290328979492188

Token 1352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.031157969729975e-05
    2. '2' → logprob: -10.625090599060059
    3. '
' → logprob: -10.625090599060059
    4. '```' → logprob: -11.125090599060059
    5. '...' → logprob: -11.250090599060059
    6. '-' → logprob: -12.250090599060059
    7. ' ' → logprob: -12.500090599060059
    8. 'n' → logprob: -13.500090599060059
    9. '   ' → logprob: -14.000090599060059
    10. '...
' → logprob: -14.375090599060059

Token 1353: ' lines' (ID: 8698)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18490786850452423
    2. '
' → logprob: -3.059907913208008
    3. '_' → logprob: -3.809907913208008
    4. '):' → logprob: -4.309907913208008
    5. '   ' → logprob: -4.309907913208008
    6. ')' → logprob: -4.434907913208008
    7. ':
' → logprob: -4.559907913208008
    8. '```' → logprob: -4.559907913208008
    9. '#' → logprob: -5.059907913208008
    10. '<|end|>' → logprob: -5.559907913208008

Token 1354: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4670911431312561
    2. '
' → logprob: -1.9670910835266113
    3. '   ' → logprob: -2.4670910835266113
    4. ' def' → logprob: -2.9670910835266113
    5. 'def' → logprob: -3.9670910835266113
    6. ':' → logprob: -4.092091083526611
    7. ')' → logprob: -4.592091083526611
    8. ',' → logprob: -5.092091083526611
    9. '        
' → logprob: -5.092091083526611
    10. '```' → logprob: -5.092091083526611

Token 1355: 'try' (ID: 1806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2317070960998535
    2. ')' → logprob: -1.6067070960998535
    3. '1' → logprob: -2.2317070960998535
    4. '#' → logprob: -2.4817070960998535
    5. ':' → logprob: -3.1067070960998535
    6. 'for' → logprob: -3.3567070960998535
    7. '):
' → logprob: -3.3567070960998535
    8. ' for' → logprob: -3.4817070960998535
    9. '):' → logprob: -3.8567070960998535
    10. '           ' → logprob: -4.1067070960998535

Token 1356: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6014007925987244
    2. ':' → logprob: -1.8514008522033691
    3. '1' → logprob: -2.726400852203369
    4. '       ' → logprob: -3.226400852203369
    5. '):
' → logprob: -3.601400852203369
    6. 'import' → logprob: -3.976400852203369
    7. '):' → logprob: -4.101400852203369
    8. '           ' → logprob: -4.476400852203369
    9. 'def' → logprob: -4.601400852203369
    10. ' ' → logprob: -4.726400852203369

Token 1357: ' the' (ID: 290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4208860397338867
    2. '2' → logprob: -1.6708860397338867
    3. '0' → logprob: -3.4208860397338867
    4. 'one' → logprob: -3.5458860397338867
    5. '16' → logprob: -4.420886039733887
    6. ' ' → logprob: -4.545886039733887
    7. 'first' → logprob: -4.795886039733887
    8. 'n' → logprob: -4.920886039733887
    9. 'two' → logprob: -5.045886039733887
    10. '```' → logprob: -5.170886039733887

Token 1358: ' two' (ID: 1920)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.12616656720638275
    2. '0' → logprob: -2.876166582107544
    3. ' first' → logprob: -3.501166582107544
    4. '```' → logprob: -5.001166343688965
    5. 'next' → logprob: -5.626166343688965
    6. 'most' → logprob: -6.126166343688965
    7. 'zero' → logprob: -6.126166343688965
    8. 'lines' → logprob: -6.376166343688965
    9. 'import' → logprob: -6.501166343688965
    10. 'rest' → logprob: -6.501166343688965

Token 1359: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.3648327589035034
    2. ' possible' → logprob: -1.8648327589035034
    3. 'possible' → logprob: -2.239832878112793
    4. ' choices' → logprob: -2.489832878112793
    5. 'choices' → logprob: -2.614832878112793
    6. ' first' → logprob: -2.739832878112793
    7. ')' → logprob: -3.364832878112793
    8. '
' → logprob: -3.489832878112793
    9. 'first' → logprob: -3.739832878112793
    10. '```' → logprob: -3.864832878112793

Token 1360: ' patterns' (ID: 18587)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20027704536914825
    2. ' s' → logprob: -1.8252770900726318
    3. ' choices' → logprob: -4.575276851654053
    4. ' patterns' → logprob: -5.575276851654053
    5. 'choices' → logprob: -6.200276851654053
    6. 'patterns' → logprob: -6.575276851654053
    7. ' ' → logprob: -6.700276851654053
    8. ' combinations' → logprob: -8.450277328491211
    9. '_choices' → logprob: -8.700277328491211
    10. '```' → logprob: -8.825277328491211

Token 1361: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6903043389320374
    2. '):' → logprob: -1.6903042793273926
    3. ':' → logprob: -2.1903042793273926
    4. '       ' → logprob: -2.9403042793273926
    5. '_' → logprob: -3.3153042793273926
    6. ')
' → logprob: -3.6903042793273926
    7. '[' → logprob: -4.065304279327393
    8. 's' → logprob: -4.440304279327393
    9. '=' → logprob: -4.440304279327393
    10. ',' → logprob: -4.690304279327393

Token 1362: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5394327640533447
    2. '+' → logprob: -2.0394327640533447
    3. 's' → logprob: -2.4144327640533447
    4. '0' → logprob: -2.7894327640533447
    5. '[' → logprob: -3.4144327640533447
    6. '[i' → logprob: -3.6644327640533447
    7. 'choices' → logprob: -3.7894327640533447
    8. 'i' → logprob: -4.039432525634766
    9. ' all' → logprob: -4.914432525634766
    10. '+i' → logprob: -5.414432525634766

Token 1363: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0014222568133845925
    2. ' +' → logprob: -7.87642240524292
    3. '+
' → logprob: -7.87642240524292
    4. '+s' → logprob: -8.126421928405762
    5. '+)' → logprob: -9.251421928405762
    6. '```' → logprob: -9.376421928405762
    7. '-' → logprob: -10.001421928405762
    8. 's' → logprob: -10.126421928405762
    9. '1' → logprob: -10.501421928405762
    10. '+i' → logprob: -10.751421928405762

Token 1364: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7293663620948792
    2. ' and' → logprob: -1.4793663024902344
    3. '_' → logprob: -1.9793663024902344
    4. '1' → logprob: -3.1043663024902344
    5. ',' → logprob: -3.6043663024902344
    6. 's' → logprob: -3.6043663024902344
    7. '+' → logprob: -4.479366302490234
    8. '_)' → logprob: -5.104366302490234
    9. '_s' → logprob: -5.479366302490234
    10. '),' → logprob: -5.604366302490234

Token 1365: ' all' (ID: 722)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.36235982179641724
    2. ' all' → logprob: -1.4873597621917725
    3. 'all' → logprob: -2.6123597621917725
    4. ' -' → logprob: -5.987360000610352
    5. '-)' → logprob: -7.112360000610352
    6. '-all' → logprob: -7.612360000610352
    7. ' ' → logprob: -8.112360000610352
    8. '   ' → logprob: -8.487360000610352
    9. ')' → logprob: -9.862360000610352
    10. '```' → logprob: -10.112360000610352

Token 1366: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005367091507650912
    2. ' -' → logprob: -7.875536918640137
    3. '−' → logprob: -9.375536918640137
    4. '-)' → logprob: -10.500536918640137
    5. '-
' → logprob: -11.000536918640137
    6. '\-' → logprob: -12.125536918640137
    7. '–' → logprob: -12.250536918640137
    8. '_' → logprob: -12.375536918640137
    9. '+' → logprob: -12.375536918640137
    10. '```' → logprob: -13.625536918640137

Token 1367: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06442507356405258
    2. '
' → logprob: -3.564424991607666
    3. '   ' → logprob: -4.689424991607666
    4. 's' → logprob: -5.064424991607666
    5. 'def' → logprob: -5.439424991607666
    6. ')' → logprob: -6.314424991607666
    7. ':' → logprob: -6.314424991607666
    8. '        
' → logprob: -6.564424991607666
    9. '```' → logprob: -6.814424991607666
    10. ')
' → logprob: -6.939424991607666

Token 1368: ' quickly' (ID: 8065)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.29615798592567444
    2. 'try' → logprob: -2.7961580753326416
    3. 'solve' → logprob: -3.0461580753326416
    4. 'avoid' → logprob: -3.5461580753326416
    5. 'check' → logprob: -3.9211580753326416
    6. '_continue' → logprob: -4.2961578369140625
    7. 'save' → logprob: -4.2961578369140625
    8. 'find' → logprob: -4.2961578369140625
    9. 'start' → logprob: -4.6711578369140625
    10. '```' → logprob: -5.0461578369140625

Token 1369: ' check' (ID: 2371)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.5661306977272034
    2. 'check' → logprob: -1.3161306381225586
    3. ' try' → logprob: -3.1911306381225586
    4. ' check' → logprob: -3.5661306381225586
    5. '   ' → logprob: -4.316130638122559
    6. 'find' → logprob: -4.316130638122559
    7. '```' → logprob: -4.691130638122559
    8. '
' → logprob: -4.816130638122559
    9. 'expl' → logprob: -4.941130638122559
    10. 'attempt' → logprob: -5.066130638122559

Token 1370: ' Many' (ID: 11048)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7731359004974365
    2. '       ' → logprob: -1.0231359004974365
    3. '):' → logprob: -2.8981359004974365
    4. ')
' → logprob: -3.3981359004974365
    5. '   ' → logprob: -3.5231359004974365
    6. ' for' → logprob: -4.273136138916016
    7. '```' → logprob: -5.023136138916016
    8. ',' → logprob: -5.148136138916016
    9. ':' → logprob: -5.273136138916016
    10. '):
' → logprob: -5.398136138916016

Token 1371: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05466051772236824
    2. ':' → logprob: -4.429660320281982
    3. '
' → logprob: -4.429660320281982
    4. '):' → logprob: -5.054660320281982
    5. ',' → logprob: -5.554660320281982
    6. ':
' → logprob: -5.554660320281982
    7. '   ' → logprob: -5.804660320281982
    8. ')' → logprob: -5.804660320281982
    9. '):
' → logprob: -6.304660320281982
    10. ')
' → logprob: -6.679660320281982

Token 1372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029563140124082565
    2. '
' → logprob: -4.154562950134277
    3. '   ' → logprob: -5.904562950134277
    4. ',' → logprob: -6.154562950134277
    5. '#' → logprob: -6.279562950134277
    6. ')' → logprob: -6.529562950134277
    7. '```' → logprob: -6.529562950134277
    8. ':' → logprob: -7.154562950134277
    9. '        
' → logprob: -7.654562950134277
    10. 'def' → logprob: -7.779562950134277

Token 1373: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027201535180211067
    2. '
' → logprob: -3.7772016525268555
    3. '```' → logprob: -6.7772016525268555
    4. '        
' → logprob: -7.1522016525268555
    5. '   ' → logprob: -7.5272016525268555
    6. ')' → logprob: -7.7772016525268555
    7. ',' → logprob: -7.9022016525268555
    8. '#' (adapté à ' #') → logprob: -9.402201652526855
    9. ':' → logprob: -9.527201652526855
    10. ')
' → logprob: -9.652201652526855

Token 1374: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007635732181370258
    2. '
' → logprob: -5.007635593414307
    3. '        
' → logprob: -7.882635593414307
    4. '```' → logprob: -8.632636070251465
    5. '   ' → logprob: -9.257636070251465
    6. '           ' → logprob: -9.757636070251465
    7. '#' → logprob: -10.007636070251465
    8. ',' → logprob: -10.632636070251465
    9. 'import' → logprob: -11.007636070251465
    10. ')' → logprob: -11.257636070251465

Token 1375: '3' (ID: 18)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5450695753097534
    2. 'def' → logprob: -1.6700695753097534
    3. 'if' → logprob: -1.9200695753097534
    4. 'for' → logprob: -3.670069694519043
    5. '   ' → logprob: -3.795069694519043
    6. '
' → logprob: -4.545069694519043
    7. 'choices' → logprob: -4.670069694519043
    8. '#' → logprob: -5.420069694519043
    9. ' if' → logprob: -6.045069694519043
    10. 's' → logprob: -6.170069694519043

Token 1376: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6708773970603943
    2. ')' → logprob: -1.045877456665039
    3. '   ' → logprob: -2.045877456665039
    4. '):' → logprob: -6.045877456665039
    5. '           ' → logprob: -6.670877456665039
    6. 'def' → logprob: -6.920877456665039
    7. '    ' → logprob: -6.920877456665039
    8. ':' → logprob: -7.670877456665039
    9. '        ' → logprob: -8.170877456665039
    10. '     ' → logprob: -8.545877456665039

Token 1377: ' If' (ID: 1843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9947860836982727
    2. 'from' → logprob: -1.369786024093628
    3. '#' → logprob: -1.494786024093628
    4. 'Try' → logprob: -3.494786024093628
    5. '   ' → logprob: -3.744786024093628
    6. 'import' → logprob: -4.119786262512207
    7. 'def' → logprob: -4.244786262512207
    8. 'For' → logprob: -4.619786262512207
    9. 'lines' → logprob: -4.619786262512207
    10. 'return' → logprob: -4.994786262512207

Token 1378: ' none' (ID: 12698)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.46047767996788025
    2. 'found' → logprob: -2.085477590560913
    3. ' n' → logprob: -2.460477590560913
    4. 'False' → logprob: -3.335477590560913
    5. ' False' → logprob: -4.085477828979492
    6. ' found' → logprob: -4.460477828979492
    7. 'the' → logprob: -4.585477828979492
    8. ' True' → logprob: -4.960477828979492
    9. 'possible' → logprob: -5.085477828979492
    10. 'all' → logprob: -5.210477828979492

Token 1379: ' of' (ID: 328)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5841299295425415
    2. ':' → logprob: -1.8341299295425415
    3. '):' → logprob: -2.084129810333252
    4. ')' → logprob: -2.084129810333252
    5. ':
' → logprob: -2.459129810333252
    6. 'found' → logprob: -2.584129810333252
    7. '):
' → logprob: -3.084129810333252
    8. '==' → logprob: -3.459129810333252
    9. '   ' → logprob: -4.084129810333252
    10. '       ' → logprob: -4.209129810333252

Token 1380: ' these' (ID: 1879)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1381: ' works' (ID: 5882)
  Prédit: ' patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -1.78533935546875
    2. 'sign' → logprob: -1.91033935546875
    3. ')' → logprob: -2.16033935546875
    4. 'patterns' → logprob: -2.66033935546875
    5. '   ' → logprob: -3.16033935546875
    6. ':' → logprob: -3.28533935546875
    7. 's' → logprob: -3.66033935546875
    8. ' choices' → logprob: -3.78533935546875
    9. ' have' → logprob: -3.91033935546875
    10. ' two' → logprob: -3.91033935546875

Token 1382: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2012014240026474
    2. '       ' → logprob: -2.0762014389038086
    3. '):' → logprob: -3.7012014389038086
    4. ',' → logprob: -3.8262014389038086
    5. ':
' → logprob: -5.576201438903809
    6. '   ' → logprob: -6.576201438903809
    7. '           ' → logprob: -6.701201438903809
    8. 'def' → logprob: -6.951201438903809
    9. '.' → logprob: -7.826201438903809
    10. '():' → logprob: -7.826201438903809

Token 1383: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05372359976172447
    2. ' return' → logprob: -3.6787235736846924
    3. '#' → logprob: -4.1787238121032715
    4. 'try' → logprob: -5.4287238121032715
    5. '           ' → logprob: -5.6787238121032715
    6. '       ' → logprob: -5.9287238121032715
    7. ' try' → logprob: -7.4287238121032715
    8. '   ' → logprob: -8.303723335266113
    9. 'raise' → logprob: -8.803723335266113
    10. ' #' → logprob: -9.178723335266113

Token 1384: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4545878469944
    2. '"' → logprob: -1.3295878171920776
    3. '(None' → logprob: -3.329587936401367
    4. ' None' → logprob: -3.329587936401367
    5. '```' → logprob: -4.704587936401367
    6. 'def' → logprob: -5.204587936401367
    7. '("' → logprob: -5.454587936401367
    8. '`' → logprob: -6.579587936401367
    9. ''' → logprob: -6.704587936401367
    10. 'return' → logprob: -6.704587936401367

Token 1385: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1918909251689911
    2. '   ' → logprob: -1.8168909549713135
    3. 'def' → logprob: -5.566890716552734
    4. '```' → logprob: -6.066890716552734
    5. '        
' → logprob: -7.066890716552734
    6. ' def' → logprob: -7.066890716552734
    7. '
' → logprob: -7.316890716552734
    8. ')' → logprob: -7.441890716552734
    9. '_' → logprob: -7.566890716552734
    10. ':' → logprob: -7.816890716552734

Token 1386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056878067553043365
    2. '
' → logprob: -2.931878089904785
    3. '        
' → logprob: -6.306878089904785
    4. '```' → logprob: -9.181878089904785
    5. '    
' → logprob: -11.806878089904785
    6. '
' → logprob: -11.806878089904785
    7. 'import' → logprob: -12.056878089904785
    8. '   ' → logprob: -12.181878089904785
    9. '           ' → logprob: -12.306878089904785
    10. '`
' → logprob: -12.556878089904785

Token 1387: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3154330253601074
    2. '
' → logprob: -1.3154330253601074
    3. '```' → logprob: -6.565433025360107
    4. '        
' → logprob: -7.690433025360107
    5. '   ' → logprob: -8.940433502197266
    6. 'def' → logprob: -10.065433502197266
    7. '
' → logprob: -10.940433502197266
    8. '    
' → logprob: -11.065433502197266
    9. '``' → logprob: -11.315433502197266
    10. '           ' → logprob: -11.440433502197266

Token 1388: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024385560303926468
    2. '
' → logprob: -3.774385452270508
    3. ' lines' → logprob: -8.149385452270508
    4. '   ' → logprob: -8.774385452270508
    5. 'from' → logprob: -9.024385452270508
    6. 'def' → logprob: -9.024385452270508
    7. 'import' → logprob: -9.274385452270508
    8. 'sign' → logprob: -9.524385452270508
    9. '        
' → logprob: -9.774385452270508
    10. '#' → logprob: -9.774385452270508

Token 1389: '4' (ID: 19)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6372394561767578
    2. '       ' → logprob: -0.8872394561767578
    3. '#' → logprob: -4.137239456176758
    4. '   ' → logprob: -4.387239456176758
    5. 'lines' → logprob: -5.262239456176758
    6. '
' → logprob: -5.262239456176758
    7. '```' → logprob: -5.387239456176758
    8. 'choices' → logprob: -5.512239456176758
    9. 'A' → logprob: -5.762239456176758
    10. 'if' → logprob: -6.012239456176758

Token 1390: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009235571138560772
    2. '   ' → logprob: -4.884235382080078
    3. '
' → logprob: -7.384235382080078
    4. '           ' → logprob: -7.759235382080078
    5. ')' → logprob: -9.134235382080078
    6. '```' → logprob: -9.134235382080078
    7. 'def' → logprob: -9.384235382080078
    8. 'return' → logprob: -10.009235382080078
    9. ':' → logprob: -10.009235382080078
    10. '        
' → logprob: -10.509235382080078

Token 1391: ' If' (ID: 1843)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1171480417251587
    2. 'Try' → logprob: -1.6171480417251587
    3. 'A' → logprob: -1.9921480417251587
    4. '       ' → logprob: -2.492147922515869
    5. 'lines' → logprob: -2.867147922515869
    6. '   ' → logprob: -3.117147922515869
    7. 'for' → logprob: -3.492147922515869
    8. 'try' → logprob: -3.492147922515869
    9. 'def' → logprob: -3.617147922515869
    10. 'from' → logprob: -3.742147922515869

Token 1392: ' exactly' (ID: 9707)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7620934844017029
    2. 'n' → logprob: -1.1370935440063477
    3. ' True' → logprob: -2.6370935440063477
    4. ' self' → logprob: -3.6370935440063477
    5. 'True' → logprob: -4.262093544006348
    6. 'self' → logprob: -4.262093544006348
    7. ' False' → logprob: -4.262093544006348
    8. 'False' → logprob: -4.512093544006348
    9. '```' → logprob: -4.637093544006348
    10. ' the' → logprob: -5.012093544006348

Token 1393: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.6939533948898315
    2. ' one' → logprob: -0.6939533948898315
    3. '1' → logprob: -8.318953514099121
    4. '```' → logprob: -8.568953514099121
    5. 'n' → logprob: -9.068953514099121
    6. 'two' → logprob: -9.193953514099121
    7. ' two' → logprob: -9.568953514099121
    8. '_one' → logprob: -10.318953514099121
    9. ' ' → logprob: -10.443953514099121
    10. '
' → logprob: -12.443953514099121

Token 1394: ' unique' (ID: 5746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8822482228279114
    2. 'def' → logprob: -2.1322481632232666
    3. ':' → logprob: -2.3822481632232666
    4. '   ' → logprob: -2.5072481632232666
    5. '):' → logprob: -2.5072481632232666
    6. '```' → logprob: -2.8822481632232666
    7. 'sign' → logprob: -3.6322481632232666
    8. ' solution' → logprob: -3.8822481632232666
    9. '       ' → logprob: -4.132248401641846
    10. '#' → logprob: -4.382248401641846

Token 1395: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.11027635633945465
    2. 'solution' → logprob: -2.485276460647583
    3. '_solution' → logprob: -4.485276222229004
    4. ' point' → logprob: -6.110276222229004
    5. '```' → logprob: -6.110276222229004
    6. ')' → logprob: -6.360276222229004
    7. 'point' → logprob: -6.735276222229004
    8. '
' → logprob: -6.985276222229004
    9. 'def' → logprob: -7.610276222229004
    10. '#' → logprob: -8.610276222229004

Token 1396: ' across' (ID: 5251)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026638610288500786
    2. ':
' → logprob: -5.151638507843018
    3. ' exists' → logprob: -5.276638507843018
    4. '   ' → logprob: -5.401638507843018
    5. 'exists' → logprob: -5.901638507843018
    6. '):' → logprob: -6.151638507843018
    7. '.' → logprob: -6.276638507843018
    8. '       ' → logprob: -6.526638507843018
    9. ',' → logprob: -7.151638507843018
    10. '():' → logprob: -8.151638984680176

Token 1397: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.11124017834663391
    2. ' all' → logprob: -2.9862401485443115
    3. 'sign' → logprob: -3.2362401485443115
    4. 'the' → logprob: -4.361240386962891
    5. 'choices' → logprob: -7.236240386962891
    6. 'patterns' → logprob: -7.736240386962891
    7. ' the' → logprob: -8.11124038696289
    8. 's' → logprob: -8.11124038696289
    9. '```' → logprob: -8.11124038696289
    10. 'lines' → logprob: -9.11124038696289

Token 1398: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.5759984850883484
    2. 'choices' → logprob: -1.7009985446929932
    3. 'patterns' → logprob: -3.200998544692993
    4. 's' → logprob: -3.200998544692993
    5. ' lines' → logprob: -3.575998544692993
    6. ' choices' → logprob: -3.700998544692993
    7. '   ' → logprob: -4.075998306274414
    8. ' s' → logprob: -4.200998306274414
    9. 'lines' → logprob: -4.450998306274414
    10. ')' → logprob: -4.450998306274414

Token 1399: ' patterns' (ID: 18587)
  Prédit: '_choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_choices' → logprob: -0.6902021169662476
    2. 's' → logprob: -1.9402021169662476
    3. '_' → logprob: -2.065202236175537
    4. ')' → logprob: -2.440202236175537
    5. ' choices' → logprob: -3.565202236175537
    6. ' _' → logprob: -3.690202236175537
    7. '_patterns' → logprob: -3.815202236175537
    8. 'choices' → logprob: -3.940202236175537
    9. '   ' → logprob: -4.065202236175537
    10. ' s' → logprob: -4.940202236175537

Token 1400: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7852708101272583
    2. ':' → logprob: -1.0352708101272583
    3. '):' → logprob: -2.5352706909179688
    4. '   ' → logprob: -2.6602706909179688
    5. ':
' → logprob: -4.660270690917969
    6. ',' → logprob: -5.035270690917969
    7. '):
' → logprob: -5.285270690917969
    8. 'def' → logprob: -5.285270690917969
    9. ')' → logprob: -5.535270690917969
    10. '():' → logprob: -5.785270690917969

Token 1401: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2663959264755249
    2. ' return' → logprob: -1.516395926475525
    3. '           ' → logprob: -4.3913960456848145
    4. '       ' → logprob: -6.7663960456848145
    5. '   ' → logprob: -7.2663960456848145
    6. '	return' → logprob: -10.016395568847656
    7. ' ' → logprob: -10.891395568847656
    8. ':return' → logprob: -10.891395568847656
    9. '               ' → logprob: -11.391395568847656
    10. '{return' → logprob: -12.141395568847656

Token 1402: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.4206809997558594
    2. 'it' → logprob: -1.4206809997558594
    3. 'that' → logprob: -3.0456809997558594
    4. ' that' → logprob: -3.7956809997558594
    5. 'the' → logprob: -4.045680999755859
    6. '```' → logprob: -5.920680999755859
    7. ' the' → logprob: -6.295680999755859
    8. 's' → logprob: -6.420680999755859
    9. 'point' → logprob: -6.420680999755859
    10. 'solution' → logprob: -6.545680999755859

Token 1403: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014837782829999924
    2. '   ' → logprob: -5.264837741851807
    3. '        
' → logprob: -5.764837741851807
    4. 'def' → logprob: -5.889837741851807
    5. '
' → logprob: -6.514837741851807
    6. ' def' → logprob: -7.639837741851807
    7. ')' → logprob: -7.889837741851807
    8. '```' → logprob: -8.014838218688965
    9. ',' → logprob: -8.889838218688965
    10. 'import' → logprob: -9.014838218688965

Token 1404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006335421930998564
    2. '
' → logprob: -5.631335258483887
    3. '```' → logprob: -6.256335258483887
    4. '        
' → logprob: -8.131335258483887
    5. '   ' → logprob: -8.756335258483887
    6. 'import' → logprob: -9.381335258483887
    7. 'def' → logprob: -9.506335258483887
    8. ',' → logprob: -10.256335258483887
    9. ')' → logprob: -10.631335258483887
    10. '`' → logprob: -10.756335258483887

Token 1405: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02130783349275589
    2. 'import' → logprob: -4.896307945251465
    3. 'from' → logprob: -5.021307945251465
    4. '```' → logprob: -5.146307945251465
    5. 'def' → logprob: -7.896307945251465
    6. '   ' → logprob: -8.021307945251465
    7. '
' → logprob: -8.271307945251465
    8. ' from' → logprob: -9.771307945251465
    9. '#' (adapté à ' #') → logprob: -10.021307945251465
    10. '        
' → logprob: -10.146307945251465

Token 1406: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04407951980829239
    2. 'def' → logprob: -3.669079542160034
    3. 'from' → logprob: -4.919079303741455
    4. '   ' → logprob: -5.044079303741455
    5. 'import' → logprob: -6.169079303741455
    6. '#' → logprob: -7.919079303741455
    7. '```' → logprob: -8.169079780578613
    8. ' lines' → logprob: -8.419079780578613
    9. 'class' → logprob: -8.669079780578613
    10. ' def' → logprob: -8.669079780578613

Token 1407: '5' (ID: 20)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16806510090827942
    2. '   ' → logprob: -2.043065071105957
    3. '       ' → logprob: -4.418065071105957
    4. 'return' → logprob: -5.168065071105957
    5. '5' → logprob: -6.418065071105957
    6. ' def' → logprob: -6.793065071105957
    7. 'import' → logprob: -7.043065071105957
    8. '
' → logprob: -7.168065071105957
    9. '#' → logprob: -7.418065071105957
    10. '0' → logprob: -7.543065071105957

Token 1408: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016479224432259798
    2. '   ' → logprob: -6.62664794921875
    3. '       ' → logprob: -9.00164794921875
    4. '):' → logprob: -9.50164794921875
    5. ')
' → logprob: -9.75164794921875
    6. ':' → logprob: -10.87664794921875
    7. '```' → logprob: -11.25164794921875
    8. '):
' → logprob: -11.75164794921875
    9. 'def' → logprob: -12.50164794921875
    10. '#' → logprob: -12.62664794921875

Token 1409: ' If' (ID: 1843)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3614542484283447
    2. 'return' → logprob: -1.6114542484283447
    3. '   ' → logprob: -1.7364542484283447
    4. '       ' → logprob: -1.9864542484283447
    5. 'Return' → logprob: -2.4864542484283447
    6. ' return' → logprob: -2.7364542484283447
    7. 'def' → logprob: -3.6114542484283447
    8. 'Raise' → logprob: -4.361454010009766
    9. 'If' → logprob: -4.611454010009766
    10. ' #' → logprob: -4.861454010009766

Token 1410: ' more' (ID: 945)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.5610134601593018
    2. ' any' → logprob: -1.8110134601593018
    3. ' self' → logprob: -1.9360134601593018
    4. ' multiple' → logprob: -1.9360134601593018
    5. 'self' → logprob: -2.0610134601593018
    6. 'multiple' → logprob: -3.0610134601593018
    7. 'exact' → logprob: -3.4360134601593018
    8. ' there' → logprob: -3.5610134601593018
    9. ' True' → logprob: -3.9360134601593018
    10. ' more' → logprob: -4.186013221740723

Token 1411: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.8623316884040833
    2. 'than' → logprob: -1.3623316287994385
    3. '...' → logprob: -1.3623316287994385
    4. '_than' → logprob: -3.3623316287994385
    5. '.' → logprob: -4.862331867218018
    6. '==' → logprob: -5.987331867218018
    7. ')' → logprob: -6.112331867218018
    8. ':' → logprob: -6.237331867218018
    9. '_code' → logprob: -6.362331867218018
    10. '   ' → logprob: -6.362331867218018

Token 1412: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.5849547386169434
    2. 'one' → logprob: -0.8349547386169434
    3. '1' → logprob: -4.834954738616943
    4. ' than' → logprob: -7.959954738616943
    5. '_one' → logprob: -8.209955215454102
    6. 'than' → logprob: -8.709955215454102
    7. '```' → logprob: -9.084955215454102
    8. ' ' → logprob: -9.584955215454102
    9. 'One' → logprob: -10.334955215454102
    10. '=' → logprob: -11.959955215454102

Token 1413: ' unique' (ID: 5746)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.8093953728675842
    2. ' unique' → logprob: -0.9343953728675842
    3. 'solution' → logprob: -3.1843953132629395
    4. 'unique' → logprob: -3.3093953132629395
    5. '_solution' → logprob: -3.8093953132629395
    6. '```' → logprob: -4.0593953132629395
    7. '_unique' → logprob: -4.4343953132629395
    8. ':' → logprob: -4.8093953132629395
    9. '   ' → logprob: -5.3093953132629395
    10. ')' → logprob: -5.4343953132629395

Token 1414: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.12285540252923965
    2. '_solution' → logprob: -2.7478554248809814
    3. 'solution' → logprob: -3.2478554248809814
    4. '
' → logprob: -4.872855186462402
    5. '```' → logprob: -5.622855186462402
    6. ')' → logprob: -8.122855186462402
    7. '   ' → logprob: -8.372855186462402
    8. ' ' → logprob: -9.122855186462402
    9. '_' → logprob: -9.247855186462402
    10. '<|end|>' → logprob: -9.247855186462402

Token 1415: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013126228004693985
    2. ':
' → logprob: -5.763126373291016
    3. ',' → logprob: -5.888126373291016
    4. '   ' → logprob: -6.388126373291016
    5. '):' → logprob: -6.388126373291016
    6. '_' → logprob: -6.888126373291016
    7. ' exists' → logprob: -7.513126373291016
    8. '.' → logprob: -7.638126373291016
    9. '=' → logprob: -8.263126373291016
    10. 'exists' → logprob: -8.263126373291016

Token 1416: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.35388144850730896
    2. ' return' → logprob: -1.3538814783096313
    3. '           ' → logprob: -3.353881359100342
    4. '       ' → logprob: -5.853881359100342
    5. 'raise' → logprob: -6.853881359100342
    6. '   ' → logprob: -7.853881359100342
    7. ' raise' → logprob: -8.1038818359375
    8. '#' → logprob: -8.8538818359375
    9. '```' → logprob: -10.1038818359375
    10. 'print' → logprob: -10.6038818359375

Token 1417: ' Many' (ID: 11048)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14361506700515747
    2. ' "' → logprob: -2.3936150074005127
    3. 'Many' → logprob: -4.393615245819092
    4. ' Many' → logprob: -5.143615245819092
    5. ' None' → logprob: -5.143615245819092
    6. '   ' → logprob: -5.268615245819092
    7. '`' → logprob: -5.268615245819092
    8. ''' → logprob: -6.268615245819092
    9. 'None' → logprob: -6.393615245819092
    10. ' ' → logprob: -6.643615245819092

Token 1418: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5595424771308899
    2. 'def' → logprob: -1.3095424175262451
    3. '       ' → logprob: -1.9345424175262451
    4. ' def' → logprob: -5.184542655944824
    5. '
' → logprob: -5.934542655944824
    6. ')' → logprob: -6.559542655944824
    7. '        
' → logprob: -6.684542655944824
    8. ':' → logprob: -7.309542655944824
    9. '):' → logprob: -7.684542655944824
    10. '    
' → logprob: -7.684542655944824

Token 1419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004030668642371893
    2. '```' → logprob: -6.254030704498291
    3. '
' → logprob: -6.629030704498291
    4. '        
' → logprob: -8.254030227661133
    5. 'def' → logprob: -8.754030227661133
    6. 'import' → logprob: -9.004030227661133
    7. 'from' → logprob: -9.379030227661133
    8. '   ' → logprob: -9.504030227661133
    9. ' lines' → logprob: -11.129030227661133
    10. '           ' → logprob: -11.379030227661133

Token 1420: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02213173732161522
    2. 'def' → logprob: -3.8971316814422607
    3. '   ' → logprob: -7.64713191986084
    4. 'choices' → logprob: -7.89713191986084
    5. 'sign' → logprob: -8.39713191986084
    6. ' lines' → logprob: -9.27213191986084
    7. '```' → logprob: -9.64713191986084
    8. '
' → logprob: -9.77213191986084
    9. 'lines' → logprob: -9.89713191986084
    10. '#' (adapté à ' #') → logprob: -9.89713191986084

Token 1421: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28959542512893677
    2. 'A' → logprob: -1.914595365524292
    3. 'def' → logprob: -3.539595365524292
    4. '   ' → logprob: -4.039595603942871
    5. '#' → logprob: -4.164595603942871
    6. 'from' → logprob: -4.914595603942871
    7. 'sign' → logprob: -4.914595603942871
    8. 'lines' → logprob: -4.914595603942871
    9. 'n' → logprob: -5.164595603942871
    10. 'solutions' → logprob: -5.164595603942871

Token 1422: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1503342390060425
    2. ' the' → logprob: -1.2753342390060425
    3. 'n' → logprob: -2.400334358215332
    4. ' n' → logprob: -2.650334358215332
    5. '#' → logprob: -3.150334358215332
    6. ' we' → logprob: -3.150334358215332
    7. 'the' → logprob: -3.150334358215332
    8. ' self' → logprob: -3.275334358215332
    9. ' lines' → logprob: -3.775334358215332
    10. 'self' → logprob: -4.275334358215332

Token 1423: ' complexity' (ID: 37588)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.30917736887931824
    2. 'the' → logprob: -1.8091773986816406
    3. ' len' → logprob: -4.184177398681641
    4. ' space' → logprob: -4.309177398681641
    5. ' n' → logprob: -4.434177398681641
    6. '   ' → logprob: -4.684177398681641
    7. ' indentation' → logprob: -4.809177398681641
    8. ' time' → logprob: -5.309177398681641
    9. ' that' → logprob: -5.434177398681641
    10. 'n' → logprob: -5.559177398681641

Token 1424: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018938302993774414
    2. '
' → logprob: -4.768938064575195
    3. ',' → logprob: -6.018938064575195
    4. ':' → logprob: -6.268938064575195
    5. '        
' → logprob: -6.393938064575195
    6. 'import' → logprob: -6.518938064575195
    7. '   ' → logprob: -7.143938064575195
    8. ' lines' → logprob: -7.393938064575195
    9. ':
' → logprob: -8.143938064575195
    10. 'def' → logprob: -8.268938064575195

Token 1425: ' let's' (ID: 35717)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7339058518409729
    2. '       ' → logprob: -0.7339058518409729
    3. ' lines' → logprob: -4.608905792236328
    4. ' #' → logprob: -4.983905792236328
    5. 'import' → logprob: -5.108905792236328
    6. 'def' → logprob: -5.483905792236328
    7. '   ' → logprob: -5.608905792236328
    8. 'return' → logprob: -6.233905792236328
    9. 'lines' → logprob: -6.358905792236328
    10. 'sign' → logprob: -6.483905792236328

Token 1426: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6717607975006104
    2. 'def' → logprob: -1.9217607975006104
    3. 'try' → logprob: -2.4217607975006104
    4. ' try' → logprob: -2.5467607975006104
    5. 'continue' → logprob: -3.0467607975006104
    6. 'return' → logprob: -3.2967607975006104
    7. ' def' → logprob: -3.5467607975006104
    8. 'import' → logprob: -4.421760559082031
    9. ' continue' → logprob: -4.671760559082031
    10. ' return' → logprob: -4.921760559082031

Token 1427: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25845685601234436
    2. 'sign' → logprob: -2.6334569454193115
    3. ' lines' → logprob: -3.0084569454193115
    4. '   ' → logprob: -3.6334569454193115
    5. 'import' → logprob: -4.008456707000732
    6. '#' → logprob: -4.758456707000732
    7. 'n' → logprob: -4.883456707000732
    8. 'def' → logprob: -4.883456707000732
    9. '
' → logprob: -5.008456707000732
    10. '```' → logprob: -5.258456707000732

Token 1428: ' ' (ID: 220)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.16859085857868195
    2. '   ' → logprob: -3.043590784072876
    3. 'two' → logprob: -3.043590784072876
    4. '[' → logprob: -4.168591022491455
    5. 'all' → logprob: -4.793591022491455
    6. ' the' → logprob: -4.918591022491455
    7. '```' → logprob: -5.168591022491455
    8. '       ' → logprob: -5.543591022491455
    9. '[
' → logprob: -5.668591022491455
    10. ' all' → logprob: -5.668591022491455

Token 1429: '2' (ID: 17)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.593441367149353
    2. '2' → logprob: -1.593441367149353
    3. '[' → logprob: -1.843441367149353
    4. 'the' → logprob: -3.4684414863586426
    5. '[
' → logprob: -3.9684414863586426
    6. 'def' → logprob: -4.343441486358643
    7. 'n' → logprob: -5.218441486358643
    8. '[n' → logprob: -5.968441486358643
    9. 'all' → logprob: -6.218441486358643
    10. '[-' → logprob: -6.468441486358643

Token 1430: ' sign' (ID: 2232)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03296898677945137
    2. '
' → logprob: -3.9079689979553223
    3. '   ' → logprob: -5.407968997955322
    4. 'choices' → logprob: -6.032968997955322
    5. 'def' → logprob: -6.657968997955322
    6. 'sign' → logprob: -6.782968997955322
    7. ' lines' → logprob: -7.032968997955322
    8. ' choices' → logprob: -7.782968997955322
    9. '        
' → logprob: -8.157968521118164
    10. 'n' → logprob: -8.282968521118164

Token 1431: ' patterns' (ID: 18587)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3569926917552948
    2. ' s' → logprob: -2.106992721557617
    3. '_patterns' → logprob: -3.106992721557617
    4. 'choices' → logprob: -3.606992721557617
    5. ' choices' → logprob: -3.731992721557617
    6. 'patterns' → logprob: -3.981992721557617
    7. '_choices' → logprob: -3.981992721557617
    8. '   ' → logprob: -4.231992721557617
    9. '_' → logprob: -4.856992721557617
    10. '_s' → logprob: -4.856992721557617

Token 1432: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010055077262222767
    2. '
' → logprob: -4.760055065155029
    3. '```' → logprob: -8.010055541992188
    4. '        
' → logprob: -8.135055541992188
    5. 'sign' → logprob: -8.260055541992188
    6. '   ' → logprob: -8.760055541992188
    7. 'def' → logprob: -9.010055541992188
    8. 'choices' → logprob: -9.885055541992188
    9. 's' → logprob: -10.260055541992188
    10. ' lines' → logprob: -11.010055541992188

Token 1433: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0313698872923851
    2. 'sign' → logprob: -5.281369686126709
    3. ' s' → logprob: -5.406369686126709
    4. ' lines' → logprob: -5.531369686126709
    5. '
' → logprob: -5.531369686126709
    6. 's' → logprob: -6.031369686126709
    7. '        
' → logprob: -6.531369686126709
    8. '```' → logprob: -6.656369686126709
    9. 'choices' → logprob: -6.781369686126709
    10. ' sign' → logprob: -6.906369686126709

Token 1434: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012667786795645952
    2. ' +' → logprob: -7.001266956329346
    3. '1' → logprob: -8.501266479492188
    4. '+
' → logprob: -9.001266479492188
    5. '```' → logprob: -11.626266479492188
    6. '
' → logprob: -12.751266479492188
    7. '_plus' → logprob: -13.126266479492188
    8. '+</' → logprob: -13.251266479492188
    9. '+)' → logprob: -13.376266479492188
    10. 'plus' → logprob: -13.501266479492188

Token 1435: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006565217860043049
    2. '
' → logprob: -6.006565093994141
    3. 's' → logprob: -6.756565093994141
    4. 'A' → logprob: -7.506565093994141
    5. 'n' → logprob: -7.506565093994141
    6. '   ' → logprob: -7.631565093994141
    7. '```' → logprob: -8.00656509399414
    8. 'def' → logprob: -8.63156509399414
    9. '#' → logprob: -8.88156509399414
    10. '        
' → logprob: -9.13156509399414

Token 1436: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.523404061794281
    2. ' all' → logprob: -0.898404061794281
    3. '   ' → logprob: -9.273404121398926
    4. '-' → logprob: -9.773404121398926
    5. '-all' → logprob: -10.398404121398926
    6. '	all' → logprob: -10.523404121398926
    7. '...' → logprob: -11.148404121398926
    8. ''all' → logprob: -11.273404121398926
    9. ' ' → logprob: -11.898404121398926
    10. '           ' → logprob: -11.898404121398926

Token 1437: ' -

' (ID: 27127)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004013561410829425
    2. ' -' → logprob: -7.875401496887207
    3. '−' → logprob: -11.750401496887207
    4. '-
' → logprob: -12.250401496887207
    5. '\-' → logprob: -13.000401496887207
    6. '_' → logprob: -14.000401496887207
    7. '-def' → logprob: -14.000401496887207
    8. '```' → logprob: -14.500401496887207
    9. '–' → logprob: -14.875401496887207
    10. 'def' → logprob: -14.875401496887207

Token 1438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002116462419508025
    2. 'A' → logprob: -9.500211715698242
    3. '```' → logprob: -9.500211715698242
    4. '   ' → logprob: -10.625211715698242
    5. ' lines' → logprob: -11.750211715698242
    6. ' A' → logprob: -12.250211715698242
    7. 'n' → logprob: -12.375211715698242
    8. '
' → logprob: -12.750211715698242
    9. '           ' → logprob: -12.875211715698242
    10. 'def' → logprob: -13.000211715698242

Token 1439: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2569826543331146
    2. '       ' → logprob: -1.506982684135437
    3. 'def' → logprob: -5.881982803344727
    4. '#' (adapté à ' #') → logprob: -6.881982803344727
    5. '   ' → logprob: -8.381982803344727
    6. 'lines' → logprob: -8.506982803344727
    7. 'from' → logprob: -8.631982803344727
    8. 'ref' → logprob: -9.131982803344727
    9. 'sign' → logprob: -9.381982803344727
    10. 'a' → logprob: -9.756982803344727

Token 1440: ' Because' (ID: 13602)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2869884967803955
    2. '       ' → logprob: -1.9119884967803955
    3. 'def' → logprob: -2.6619884967803955
    4. '   ' → logprob: -3.9119884967803955
    5. '#' → logprob: -5.036988258361816
    6. 'ref' → logprob: -6.411988258361816
    7. 'sign' → logprob: -7.161988258361816
    8. 's' → logprob: -7.411988258361816
    9. 'lines' → logprob: -7.411988258361816
    10. 'line' → logprob: -8.036988258361816

Token 1441: ' multiple' (ID: 7598)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7443712949752808
    2. ' the' → logprob: -1.8693712949752808
    3. '   ' → logprob: -1.9943712949752808
    4. ' of' → logprob: -2.1193714141845703
    5. ' all' → logprob: -2.4943714141845703
    6. ' lines' → logprob: -2.7443714141845703
    7. ' we' → logprob: -3.3693714141845703
    8. '#' → logprob: -3.3693714141845703
    9. 'n' → logprob: -3.6193714141845703
    10. ' for' → logprob: -3.6193714141845703

Token 1442: ' solutions' (ID: 9368)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.409369707107544
    2. 'sign' → logprob: -1.659369707107544
    3. '+' → logprob: -1.784369707107544
    4. '   ' → logprob: -2.159369707107544
    5. ' patterns' → logprob: -2.909369707107544
    6. '#' → logprob: -3.034369707107544
    7. 'patterns' → logprob: -3.159369707107544
    8. ' sign' → logprob: -4.034369468688965
    9. ' choices' → logprob: -4.034369468688965
    10. 'choices' → logprob: -4.159369468688965

Token 1443: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2775571346282959
    2. ':' → logprob: -2.402557134628296
    3. '   ' → logprob: -3.027557134628296
    4. '):' → logprob: -3.402557134628296
    5. 's' → logprob: -4.402557373046875
    6. 'def' → logprob: -4.777557373046875
    7. ',' → logprob: -5.152557373046875
    8. '=' → logprob: -5.402557373046875
    9. '+' → logprob: -5.402557373046875
    10. ')' → logprob: -5.527557373046875

Token 1444: ' solution' (ID: 7578)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6560109853744507
    2. 'n' → logprob: -2.4060111045837402
    3. 'all' → logprob: -2.5310111045837402
    4. ' lines' → logprob: -2.7810111045837402
    5. ' the' → logprob: -3.1560111045837402
    6. ' n' → logprob: -3.2810111045837402
    7. ' there' → logprob: -3.5310111045837402
    8. 'the' → logprob: -3.9060111045837402
    9. ' we' → logprob: -4.28101110458374
    10. ' any' → logprob: -4.53101110458374

Token 1445: ' set' (ID: 920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038759972900152206
    2. ' exists' → logprob: -4.038760185241699
    3. 'exists' → logprob: -4.288760185241699
    4. '_exists' → logprob: -6.413760185241699
    5. ' s' → logprob: -6.538760185241699
    6. ' is' → logprob: -7.288760185241699
    7. '_' → logprob: -7.413760185241699
    8. 'is' → logprob: -8.0387601852417
    9. '
' → logprob: -8.4137601852417
    10. '_found' → logprob: -8.6637601852417

Token 1446: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20183546841144562
    2. '
' → logprob: -1.8268355131149292
    3. ':' → logprob: -5.201835632324219
    4. 'def' → logprob: -5.826835632324219
    5. '   ' → logprob: -6.076835632324219
    6. '        
' → logprob: -6.076835632324219
    7. '```' → logprob: -6.576835632324219
    8. ':
' → logprob: -6.826835632324219
    9. 's' → logprob: -6.951835632324219
    10. '
' → logprob: -7.201835632324219

Token 1447: ' a' (ID: 261)
  Prédit: ' linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' linear' → logprob: -1.3967130184173584
    2. ' not' → logprob: -1.5217130184173584
    3. ' infinite' → logprob: -1.8967130184173584
    4. 'not' → logprob: -2.5217130184173584
    5. 'linear' → logprob: -2.6467130184173584
    6. 'in' → logprob: -2.8967130184173584
    7. ' line' → logprob: -2.8967130184173584
    8. 'line' → logprob: -3.7717130184173584
    9. ' large' → logprob: -4.1467132568359375
    10. ' lines' → logprob: -4.2717132568359375

Token 1448: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.17562712728977203
    2. ' line' → logprob: -2.5506272315979004
    3. 'linear' → logprob: -3.3006272315979004
    4. 'sub' → logprob: -3.6756272315979004
    5. 'plane' → logprob: -4.8006272315979
    6. ' linear' → logprob: -6.1756272315979
    7. 'hyper' → logprob: -6.6756272315979
    8. 'subset' → logprob: -6.8006272315979
    9. 'man' → logprob: -6.9256272315979
    10. 'sup' → logprob: -7.1756272315979

Token 1449: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002196409972384572
    2. '
' → logprob: -6.627196311950684
    3. '```' → logprob: -8.002196311950684
    4. '   ' → logprob: -8.377196311950684
    5. 'def' → logprob: -9.252196311950684
    6. '#' → logprob: -9.877196311950684
    7. '        
' → logprob: -10.252196311950684
    8. 'A' → logprob: -10.377196311950684
    9. ' lines' → logprob: -11.377196311950684
    10. '           ' → logprob: -11.752196311950684

Token 1450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00219557574018836
    2. '
' → logprob: -6.252195358276367
    3. '```' → logprob: -9.002195358276367
    4. '        
' → logprob: -9.377195358276367
    5. ',' → logprob: -11.127195358276367
    6. '           ' → logprob: -11.377195358276367
    7. '   ' → logprob: -11.877195358276367
    8. 'import' → logprob: -12.002195358276367
    9. ')' → logprob: -12.252195358276367
    10. '`' → logprob: -13.627195358276367

Token 1451: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056588489562273026
    2. 'A' → logprob: -2.9315884113311768
    3. '#' (adapté à ' #') → logprob: -7.431588649749756
    4. '   ' → logprob: -7.681588649749756
    5. 'def' → logprob: -9.056588172912598
    6. 'lines' → logprob: -9.431588172912598
    7. 'from' → logprob: -9.806588172912598
    8. 'p' → logprob: -9.931588172912598
    9. 'sign' → logprob: -9.931588172912598
    10. ' A' → logprob: -9.931588172912598

Token 1452: ' So' (ID: 2632)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.49167680740356445
    2. '       ' → logprob: -0.9916768074035645
    3. '#' → logprob: -4.9916768074035645
    4. 'def' → logprob: -5.1166768074035645
    5. '   ' → logprob: -5.8666768074035645
    6. 'sign' → logprob: -8.116676330566406
    7. 'ref' → logprob: -8.366676330566406
    8. 'from' → logprob: -8.491676330566406
    9. 'import' → logprob: -8.741676330566406
    10. 'lines' → logprob: -8.866676330566406

Token 1453: ' let's' (ID: 35717)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5162686705589294
    2. 'def' → logprob: -1.6412687301635742
    3. '#' → logprob: -2.516268730163574
    4. '   ' → logprob: -2.641268730163574
    5. '       ' → logprob: -4.016268730163574
    6. 'lines' → logprob: -5.016268730163574
    7. 'choices' → logprob: -5.391268730163574
    8. 'sign' → logprob: -5.516268730163574
    9. 'ref' → logprob: -5.641268730163574
    10. ' A' → logprob: -5.891268730163574

Token 1454: ' implement' (ID: 6365)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2834438383579254
    2. '   ' → logprob: -2.0334439277648926
    3. 'try' → logprob: -3.0334439277648926
    4. 'A' → logprob: -4.158443927764893
    5. 'check' → logprob: -4.408443927764893
    6. '       ' → logprob: -4.658443927764893
    7. '#' → logprob: -5.033443927764893
    8. ' try' → logprob: -5.658443927764893
    9. 'continue' → logprob: -5.783443927764893
    10. ' check' → logprob: -5.908443927764893

Token 1455: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02593633346259594
    2. '
' → logprob: -4.525936126708984
    3. '```' → logprob: -5.025936126708984
    4. 'def' → logprob: -5.525936126708984
    5. '   ' → logprob: -6.525936126708984
    6. '#' → logprob: -6.900936126708984
    7. 'A' → logprob: -7.275936126708984
    8. ' lines' → logprob: -8.275936126708984
    9. 'n' → logprob: -8.525936126708984
    10. '``' → logprob: -9.275936126708984

Token 1456: ' above' (ID: 5151)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.048483580350875854
    2. 'rest' → logprob: -3.6734836101531982
    3. ' def' → logprob: -4.173483371734619
    4. '_rest' → logprob: -5.798483371734619
    5. 'remaining' → logprob: -6.923483371734619
    6. '   ' → logprob: -7.798483371734619
    7. ' rest' → logprob: -7.923483371734619
    8. '_remaining' → logprob: -8.298483848571777
    9. '```' → logprob: -8.548483848571777
    10. '_check' → logprob: -8.548483848571777

Token 1457: ' simplified' (ID: 77177)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010426650755107403
    2. 'def' → logprob: -5.0104265213012695
    3. '```' → logprob: -6.6354265213012695
    4. '   ' → logprob: -6.7604265213012695
    5. '
' → logprob: -7.1354265213012695
    6. 'n' → logprob: -9.26042652130127
    7. ' lines' → logprob: -9.38542652130127
    8. '#' → logprob: -9.51042652130127
    9. '        
' → logprob: -9.88542652130127
    10. ':' → logprob: -10.88542652130127

Token 1458: ' approach' (ID: 7139)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01882377825677395
    2. '
' → logprob: -5.143823623657227
    3. '```' → logprob: -5.643823623657227
    4. ' lines' → logprob: -5.893823623657227
    5. 'n' → logprob: -6.143823623657227
    6. 'sign' → logprob: -7.018823623657227
    7. '   ' → logprob: -7.268823623657227
    8. '#' → logprob: -7.268823623657227
    9. 'A' → logprob: -7.643823623657227
    10. 'def' → logprob: -7.893823623657227

Token 1459: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006926130969077349
    2. 'A' → logprob: -5.7569260597229
    3. 'def' → logprob: -6.5069260597229
    4. '   ' → logprob: -6.5069260597229
    5. '#' → logprob: -8.631926536560059
    6. '
' → logprob: -8.756926536560059
    7. 'n' → logprob: -9.381926536560059
    8. '```' → logprob: -9.506926536560059
    9. 'line' → logprob: -9.631926536560059
    10. 'lines' → logprob: -9.756926536560059

Token 1460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036066342145204544
    2. 'def' → logprob: -3.4110662937164307
    3. '   ' → logprob: -6.78606653213501
    4. 'A' → logprob: -7.53606653213501
    5. ' lines' → logprob: -8.161066055297852
    6. ' def' → logprob: -8.661066055297852
    7. '```' → logprob: -9.161066055297852
    8. ' A' → logprob: -9.411066055297852
    9. 'line' → logprob: -10.536066055297852
    10. 'lines' → logprob: -10.786066055297852

Token 1461: ' base' (ID: 3611)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7049967050552368
    2. '       ' → logprob: -0.7049967050552368
    3. 'line' → logprob: -4.954996585845947
    4. '#' → logprob: -6.329996585845947
    5. '   ' → logprob: -7.204996585845947
    6. 'def' → logprob: -7.454996585845947
    7. 'if' → logprob: -7.579996585845947
    8. 'ref' → logprob: -7.579996585845947
    9. 'lines' → logprob: -7.829996585845947
    10. 'n' → logprob: -9.579997062683105

Token 1462: ' =' (ID: 314)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.11465462297201157
    2. '_line' → logprob: -2.864654541015625
    3. ' =' → logprob: -3.364654541015625
    4. 'A' → logprob: -4.239654541015625
    5. '=' → logprob: -7.114654541015625
    6. 'line' → logprob: -7.989654541015625
    7. '_' → logprob: -7.989654541015625
    8. '=A' → logprob: -8.739654541015625
    9. '_lines' → logprob: -8.739654541015625
    10. '_p' → logprob: -8.864654541015625

Token 1463: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019980454817414284
    2. ' self' → logprob: -4.019980430603027
    3. '(self' → logprob: -6.519980430603027
    4. '(' → logprob: -8.519980430603027
    5. ' (' → logprob: -8.894980430603027
    6. '0' → logprob: -11.894980430603027
    7. '(-' → logprob: -13.144980430603027
    8. ' ' → logprob: -13.269980430603027
    9. '[self' → logprob: -13.269980430603027
    10. '(Point' → logprob: -13.644980430603027

Token 1464: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.00011844364780699834
    2. '.' → logprob: -9.250118255615234
    3. '.
' → logprob: -12.250118255615234
    4. '.line' → logprob: -12.625118255615234
    5. 'lines' → logprob: -13.000118255615234
    6. '.l' → logprob: -13.000118255615234
    7. '	lines' → logprob: -13.125118255615234
    8. '.s' → logprob: -13.250118255615234
    9. '
' → logprob: -13.750118255615234
    10. ' .' → logprob: -13.750118255615234

Token 1465: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '0' → logprob: -13.87500286102295
    3. '       ' → logprob: -13.87500286102295
    4. '[
' → logprob: -15.62500286102295
    5. ' [' → logprob: -15.75000286102295
    6. '   ' → logprob: -16.250001907348633
    7. '_' → logprob: -16.375001907348633
    8. 'def' → logprob: -17.125001907348633
    9. '\[' → logprob: -17.375001907348633
    10. 's' → logprob: -18.125001907348633

Token 1466: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '[' → logprob: -15.750000953674316
    4. '
' → logprob: -16.500001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '-' → logprob: -16.875001907348633
    7. '```' → logprob: -17.125001907348633
    8. ':' → logprob: -17.375001907348633
    9. '...' → logprob: -18.500001907348633
    10. '#' → logprob: -18.562501907348633

Token 1467: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5445113778114319
    2. '._' → logprob: -1.544511318206787
    3. '
' → logprob: -2.044511318206787
    4. '   ' → logprob: -3.544511318206787
    5. '       ' → logprob: -4.294511318206787
    6. ']' → logprob: -4.294511318206787
    7. '.' → logprob: -4.544511318206787
    8. ']._' → logprob: -6.169511318206787
    9. ')._' → logprob: -6.544511318206787
    10. ')
' → logprob: -6.544511318206787

Token 1468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05476401001214981
    2. 'A' → logprob: -3.1797640323638916
    3. ' A' → logprob: -4.6797637939453125
    4. 'for' → logprob: -7.4297637939453125
    5. 'n' → logprob: -7.5547637939453125
    6. ' for' → logprob: -7.6797637939453125
    7. '
' → logprob: -8.679763793945312
    8. '```' → logprob: -8.804763793945312
    9. 'from' → logprob: -9.054763793945312
    10. ' lines' → logprob: -10.054763793945312

Token 1469: ' n' (ID: 297)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06465965509414673
    2. 'for' → logprob: -3.564659595489502
    3. '   ' → logprob: -4.814659595489502
    4. 'all' → logprob: -4.939659595489502
    5. 'def' → logprob: -5.189659595489502
    6. '#' → logprob: -5.314659595489502
    7. 'coeff' → logprob: -6.189659595489502
    8. 'ref' → logprob: -6.689659595489502
    9. 'n' (adapté à ' n') → logprob: -6.689659595489502
    10. 'if' → logprob: -7.189659595489502

Token 1470: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1800796091556549
    2. ' =' → logprob: -1.8050795793533325
    3. '>' → logprob: -9.555079460144043
    4. ')' → logprob: -9.930079460144043
    5. '==' → logprob: -10.180079460144043
    6. '       ' → logprob: -10.430079460144043
    7. '   ' → logprob: -10.555079460144043
    8. '```' → logprob: -11.305079460144043
    9. '=
' → logprob: -11.305079460144043
    10. 'for' → logprob: -11.305079460144043

Token 1471: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.000158842682139948
    2. ' len' → logprob: -8.75015926361084
    3. '       ' → logprob: -15.50015926361084
    4. '(len' → logprob: -16.250158309936523
    5. 'self' → logprob: -18.250158309936523
    6. '[len' → logprob: -18.625158309936523
    7. '   ' → logprob: -20.000158309936523
    8. '```' → logprob: -20.875158309936523
    9. '	len' → logprob: -21.000158309936523
    10. '=len' → logprob: -21.750158309936523

Token 1472: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002655079588294029
    2. 'self' → logprob: -8.250265121459961
    3. '(' → logprob: -12.750265121459961
    4. '(
' → logprob: -13.750265121459961
    5. '(base' → logprob: -16.37526512145996
    6. '=self' → logprob: -16.75026512145996
    7. '```' → logprob: -16.75026512145996
    8. ' self' → logprob: -17.62526512145996
    9. '[self' → logprob: -18.25026512145996
    10. '       ' → logprob: -18.62526512145996

Token 1473: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0001049736310960725
    2. '.' → logprob: -10.375104904174805
    3. 'self' → logprob: -10.625104904174805
    4. 'lines' → logprob: -11.375104904174805
    5. ').' → logprob: -11.500104904174805
    6. ')' → logprob: -11.750104904174805
    7. '.self' → logprob: -11.750104904174805
    8. '.s' → logprob: -12.750104904174805
    9. '(lines' → logprob: -12.750104904174805
    10. ' .' → logprob: -13.125104904174805

Token 1474: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043376852408982813
    2. ')
' → logprob: -8.625433921813965
    3. '       ' → logprob: -8.750433921813965
    4. '-' → logprob: -10.625433921813965
    5. '   ' → logprob: -10.625433921813965
    6. ' -' → logprob: -11.625433921813965
    7. '
' → logprob: -11.625433921813965
    8. ')-' → logprob: -11.750433921813965
    9. ' )' → logprob: -12.000433921813965
    10. '```' → logprob: -12.500433921813965

Token 1475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00786840170621872
    2. '
' → logprob: -5.13286828994751
    3. '```' → logprob: -6.63286828994751
    4. '        
' → logprob: -8.132868766784668
    5. 'A' → logprob: -9.757868766784668
    6. ' A' → logprob: -10.007868766784668
    7. 'from' → logprob: -10.632868766784668
    8. 'for' → logprob: -10.632868766784668
    9. 'sign' → logprob: -10.882868766784668
    10. '   ' → logprob: -10.882868766784668

Token 1476: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.14982421696186066
    2. '       ' → logprob: -2.2748241424560547
    3. 'for' → logprob: -4.774824142456055
    4. 'if' → logprob: -4.899824142456055
    5. 'results' → logprob: -5.399824142456055
    6. 'def' → logprob: -5.524824142456055
    7. 'from' → logprob: -5.899824142456055
    8. '#' (adapté à ' #') → logprob: -6.024824142456055
    9. 'sign' → logprob: -6.649824142456055
    10. 'choices' → logprob: -7.024824142456055

Token 1477: ' Check' (ID: 6208)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4718613624572754
    2. 'def' → logprob: -1.4718613624572754
    3. 'for' → logprob: -3.0968613624572754
    4. 'if' → logprob: -3.3468613624572754
    5. '#' → logprob: -3.4718613624572754
    6. 'from' → logprob: -5.096861362457275
    7. 'coeff' → logprob: -5.096861362457275
    8. '   ' → logprob: -5.471861362457275
    9. 'sign' → logprob: -5.721861362457275
    10. 'results' → logprob: -5.721861362457275

Token 1478: ' if' (ID: 538)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.23604759573936462
    2. 'parallel' → logprob: -1.611047625541687
    3. 'if' → logprob: -5.361047744750977
    4. ' all' → logprob: -5.986047744750977
    5. 'are' → logprob: -6.861047744750977
    6. ' parallel' → logprob: -7.236047744750977
    7. '#' → logprob: -7.486047744750977
    8. '_parallel' → logprob: -7.986047744750977
    9. '```' → logprob: -8.861047744750977
    10. '   ' → logprob: -8.986047744750977

Token 1479: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.014181364327669144
    2. ' all' → logprob: -4.264181137084961
    3. 'n' → logprob: -11.764181137084961
    4. '_all' → logprob: -12.264181137084961
    5. 'abs' → logprob: -12.639181137084961
    6. 'self' → logprob: -14.514181137084961
    7. 'al' → logprob: -14.889181137084961
    8. '#' → logprob: -15.389181137084961
    9. '
' → logprob: -15.889181137084961
    10. ' n' → logprob: -15.889181137084961

Token 1480: ' lines' (ID: 8698)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5374951958656311
    2. 'all' → logprob: -1.2874951362609863
    3. 'lines' → logprob: -2.6624951362609863
    4. 'math' → logprob: -3.7874951362609863
    5. '(abs' → logprob: -3.9124951362609863
    6. 'line' → logprob: -4.662495136260986
    7. ' all' → logprob: -5.662495136260986
    8. 'self' → logprob: -5.787495136260986
    9. '(math' → logprob: -5.787495136260986
    10. ' abs' → logprob: -6.037495136260986

Token 1481: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.0701853036880493
    2. 'all' → logprob: -1.5701853036880493
    3. 'parallel' → logprob: -1.9451853036880493
    4. '_are' → logprob: -1.9451853036880493
    5. ' are' → logprob: -2.8201851844787598
    6. '_parallel' → logprob: -3.0701851844787598
    7. ' all' → logprob: -3.5701851844787598
    8. ' parallel' → logprob: -4.69518518447876
    9. 'for' → logprob: -4.82018518447876
    10. '[' → logprob: -5.19518518447876

Token 1482: ' parallel' (ID: 26697)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.008696711622178555
    2. ' parallel' → logprob: -4.758696556091309
    3. '_parallel' → logprob: -9.508696556091309
    4. 'all' → logprob: -12.758696556091309
    5. '.parallel' → logprob: -12.758696556091309
    6. '```' → logprob: -14.258696556091309
    7. 'par' → logprob: -14.633696556091309
    8. '
' → logprob: -14.758696556091309
    9. ' all' → logprob: -15.758696556091309
    10. '#' → logprob: -16.008697509765625

Token 1483: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037616897374391556
    2. ' for' → logprob: -4.162616729736328
    3. '
' → logprob: -5.037616729736328
    4. ':' → logprob: -5.037616729736328
    5. 'for' → logprob: -5.162616729736328
    6. ':
' → logprob: -7.912616729736328
    7. ' =' → logprob: -7.912616729736328
    8. 'all' → logprob: -8.037616729736328
    9. '        
' → logprob: -8.037616729736328
    10. ' all' → logprob: -8.287616729736328

Token 1484: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.05539141595363617
    2. ' base' → logprob: -2.930391311645508
    3. 'self' → logprob: -7.680391311645508
    4. ' self' → logprob: -11.055391311645508
    5. '   ' → logprob: -11.430391311645508
    6. '(base' → logprob: -11.805391311645508
    7. 'the' → logprob: -12.430391311645508
    8. '	base' → logprob: -13.430391311645508
    9. '```' → logprob: -13.430391311645508
    10. 'line' → logprob: -13.555391311645508

Token 1485: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019547075033187866
    2. ' base' → logprob: -4.769546985626221
    3. ' parallel' → logprob: -5.894546985626221
    4. ' for' → logprob: -6.144546985626221
    5. 'base' → logprob: -6.519546985626221
    6. ':' → logprob: -6.769546985626221
    7. ' all' → logprob: -7.019546985626221
    8. ' is' → logprob: -7.519546985626221
    9. 'all' → logprob: -7.519546985626221
    10. 'parallel' → logprob: -7.894546985626221

Token 1486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10530500113964081
    2. 'for' → logprob: -2.8553049564361572
    3. 'all' → logprob: -3.4803049564361572
    4. 'parallel' → logprob: -4.855305194854736
    5. 'base' → logprob: -6.730305194854736
    6. ' for' → logprob: -6.855305194854736
    7. '   ' → logprob: -7.605305194854736
    8. ' parallel' → logprob: -7.730305194854736
    9. ' all' → logprob: -8.480304718017578
    10. '```' → logprob: -8.605304718017578

Token 1487: ' parallel' (ID: 26697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5363823175430298
    2. 'all' → logprob: -1.6613823175430298
    3. 'base' → logprob: -1.9113823175430298
    4. 'parallel' (adapté à ' parallel') → logprob: -2.7863821983337402
    5. '       ' → logprob: -5.41138219833374
    6. '   ' → logprob: -5.41138219833374
    7. 'if' → logprob: -6.28638219833374
    8. 'A' → logprob: -6.41138219833374
    9. 'is' → logprob: -7.16138219833374
    10. 'eps' → logprob: -7.53638219833374

Token 1488: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16103900969028473
    2. '=' → logprob: -1.9110389947891235
    3. '_all' → logprob: -8.161039352416992
    4. '   ' → logprob: -9.036039352416992
    5. '_count' → logprob: -9.161039352416992
    6. '_' → logprob: -9.161039352416992
    7. 's' → logprob: -9.286039352416992
    8. '_lines' → logprob: -10.036039352416992
    9. '_vectors' → logprob: -11.286039352416992
    10. '=True' → logprob: -11.911039352416992

Token 1489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. '   ' → logprob: -16.27975082397461
    4. ' ' → logprob: -17.15475082397461
    5. ':' → logprob: -18.65475082397461
    6. '=
' → logprob: -19.40475082397461
    7. ')' → logprob: -19.65475082397461
    8. '=True' → logprob: -19.77975082397461
    9. '0' → logprob: -20.27975082397461
    10. ',' → logprob: -20.52975082397461

Token 1490: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.060565490275621414
    2. 'sum' → logprob: -3.18556547164917
    3. 'n' → logprob: -4.31056547164917
    4. 'all' → logprob: -5.68556547164917
    5. '1' → logprob: -7.68556547164917
    6. ' sum' → logprob: -9.685565948486328
    7. ' ' → logprob: -11.310565948486328
    8. ' n' → logprob: -11.310565948486328
    9. '   ' → logprob: -11.435565948486328
    10. 'True' → logprob: -11.560565948486328

Token 1491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07100564241409302
    2. 'sum' → logprob: -2.6960055828094482
    3. 'all' → logprob: -7.446005821228027
    4. 'n' → logprob: -8.071005821228027
    5. '1' → logprob: -8.696005821228027
    6. ' sum' → logprob: -12.821005821228027
    7. '
' → logprob: -14.071005821228027
    8. 'len' → logprob: -14.821005821228027
    9. ' ' → logprob: -15.696005821228027
    10. 'True' → logprob: -16.19600486755371

Token 1492: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7268624305725098
    2. '       ' → logprob: -0.9768624305725098
    3. 'for' → logprob: -1.9768624305725098
    4. '
' → logprob: -7.35186243057251
    5. '=' → logprob: -8.101861953735352
    6. ':' → logprob: -8.851861953735352
    7. '<|end|>' → logprob: -9.351861953735352
    8. ' =' → logprob: -9.476861953735352
    9. ',' → logprob: -9.851861953735352
    10. 'For' → logprob: -10.101861953735352

Token 1493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5645450353622437
    2. ' for' → logprob: -1.1895450353622437
    3. 'for' → logprob: -2.064545154571533
    4. '
' → logprob: -10.439544677734375
    5. ')' → logprob: -10.564544677734375
    6. '=' → logprob: -11.314544677734375
    7. '   ' → logprob: -11.439544677734375
    8. ',' → logprob: -11.689544677734375
    9. ':' → logprob: -12.064544677734375
    10. '	for' → logprob: -12.189544677734375

Token 1494: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005318311974406242
    2. ' for' → logprob: -5.2553181648254395
    3. '       ' → logprob: -9.380318641662598
    4. 'from' → logprob: -16.50531768798828
    5. '   ' → logprob: -17.50531768798828
    6. '	for' → logprob: -17.63031768798828
    7. '```' → logprob: -17.75531768798828
    8. 'import' → logprob: -18.38031768798828
    9. 'i' → logprob: -18.75531768798828
    10. '
' → logprob: -18.88031768798828

Token 1495: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31400707364082336
    2. 'line' → logprob: -1.314007043838501
    3. ' i' → logprob: -7.81400728225708
    4. ' line' → logprob: -8.189006805419922
    5. '   ' → logprob: -9.939006805419922
    6. 'l' → logprob: -11.439006805419922
    7. 'li' → logprob: -13.939006805419922
    8. 'self' → logprob: -14.189006805419922
    9. 'lin' → logprob: -14.314006805419922
    10. 'other' → logprob: -14.814006805419922

Token 1496: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11292196810245514
    2. 'in' → logprob: -2.237921953201294
    3. ',' → logprob: -9.862921714782715
    4. '	in' → logprob: -11.112921714782715
    5. '_in' → logprob: -12.612921714782715
    6. ' i' → logprob: -12.612921714782715
    7. ' ' → logprob: -12.737921714782715
    8. 'In' → logprob: -12.862921714782715
    9. '=' → logprob: -12.987921714782715
    10. ' ,' → logprob: -12.987921714782715

Token 1497: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019500599009916186
    2. ' range' → logprob: -6.251950263977051
    3. 'self' → logprob: -10.75195026397705
    4. ' self' → logprob: -18.251949310302734
    5. '(range' → logprob: -18.876949310302734
    6. '	range' → logprob: -19.126949310302734
    7. '   ' → logprob: -19.376949310302734
    8. '
' → logprob: -19.876949310302734
    9. ' ' → logprob: -20.501949310302734
    10. 'r' → logprob: -21.126949310302734

Token 1498: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020603667944669724
    2. '(' → logprob: -3.895603656768799
    3. '   ' → logprob: -10.895604133605957
    4. '
' → logprob: -11.145604133605957
    5. '(n' → logprob: -11.645604133605957
    6. '       ' → logprob: -11.770604133605957
    7. 'n' → logprob: -11.770604133605957
    8. ' ' → logprob: -12.645604133605957
    9. ' (' → logprob: -14.645604133605957
    10. '(
' → logprob: -15.145604133605957

Token 1499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014048899174667895
    2. 'n' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.000140190124512
    4. '
' → logprob: -15.500140190124512
    5. '(' → logprob: -16.625141143798828
    6. ' ' → logprob: -17.000141143798828
    7. 'len' → logprob: -17.375141143798828
    8. '0' → logprob: -17.625141143798828
    9. '```' → logprob: -17.750141143798828
    10. '       ' → logprob: -17.750141143798828

Token 1500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2521343231201172
    2. ',n' → logprob: -1.5021343231201172
    3. 'n' → logprob: -9.127134323120117
    4. ' ,' → logprob: -9.752134323120117
    5. ',len' → logprob: -10.377134323120117
    6. '(n' → logprob: -12.752134323120117
    7. ',
' → logprob: -12.877134323120117
    8. '
' → logprob: -14.377134323120117
    9. '):' → logprob: -15.002134323120117
    10. '<n' → logprob: -15.627134323120117

Token 1501: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. ' n' → logprob: -15.25
    3. 'len' → logprob: -18.875
    4. '       ' → logprob: -19.0
    5. ')n' → logprob: -19.375
    6. '	n' → logprob: -19.625
    7. '
' → logprob: -20.0
    8. '(n' → logprob: -20.125
    9. '```' → logprob: -20.375
    10. '   ' → logprob: -20.625

Token 1502: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3884579837322235
    2. '):' → logprob: -1.138458013534546
    3. ':' → logprob: -7.138457775115967
    4. ',' → logprob: -7.763457775115967
    5. '       ' → logprob: -8.763458251953125
    6. '   ' → logprob: -9.138458251953125
    7. ':
' → logprob: -10.513458251953125
    8. '):
' → logprob: -11.138458251953125
    9. '=' → logprob: -11.638458251953125
    10. '**' → logprob: -12.388458251953125

Token 1503: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03868279233574867
    2. '       ' → logprob: -3.288682699203491
    3. ' if' → logprob: -8.28868293762207
    4. '```' → logprob: -8.66368293762207
    5. 'if' → logprob: -9.78868293762207
    6. ',' → logprob: -9.91368293762207
    7. '   ' → logprob: -10.03868293762207
    8. '
' → logprob: -10.78868293762207
    9. '	   ' → logprob: -11.28868293762207
    10. '	       ' → logprob: -11.41368293762207

Token 1504: ' n' (ID: 297)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9617045521736145
    2. 'if' → logprob: -1.5867044925689697
    3. 'dx' → logprob: -1.7117044925689697
    4. 'Ai' → logprob: -2.7117044925689697
    5. 'v' → logprob: -3.0867044925689697
    6. 'det' → logprob: -3.2117044925689697
    7. 'vec' → logprob: -3.4617044925689697
    8. '       ' → logprob: -4.711704730987549
    9. 'd' → logprob: -4.836704730987549
    10. 'a' → logprob: -4.961704730987549

Token 1505: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.673464834690094
    2. 'orm' → logprob: -1.0484647750854492
    3. '_i' → logprob: -2.923464775085449
    4. '0' → logprob: -3.298464775085449
    5. '_base' → logprob: -4.423464775085449
    6. 'i' → logprob: -4.548464775085449
    7. '_' → logprob: -5.173464775085449
    8. 'ormal' → logprob: -5.423464775085449
    9. 'v' → logprob: -5.423464775085449
    10. 'vec' → logprob: -5.798464775085449

Token 1506: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13690854609012604
    2. '=' → logprob: -2.386908531188965
    3. '_' → logprob: -4.386908531188965
    4. '0' → logprob: -4.386908531188965
    5. 'x' → logprob: -5.761908531188965
    6. 'orm' → logprob: -6.011908531188965
    7. '_x' → logprob: -6.386908531188965
    8. '_vec' → logprob: -6.886908531188965
    9. 'A' → logprob: -7.386908531188965
    10. '1' → logprob: -7.636908531188965

Token 1507: ' base' (ID: 3611)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.043147746473550797
    2. '(self' → logprob: -3.5431478023529053
    3. ' self' → logprob: -5.293147563934326
    4. '(base' → logprob: -5.918147563934326
    5. ' (' → logprob: -6.168147563934326
    6. 'base' → logprob: -6.293147563934326
    7. '(' → logprob: -6.543147563934326
    8. '(
' → logprob: -10.043148040771484
    9. '   ' → logprob: -10.168148040771484
    10. ' base' → logprob: -10.293148040771484

Token 1508: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -0.03355071693658829
    2. 'normal' → logprob: -4.65855073928833
    3. 'ormal' → logprob: -4.78355073928833
    4. '_vector' → logprob: -5.03355073928833
    5. 'Vector' → logprob: -5.78355073928833
    6. '.' → logprob: -6.03355073928833
    7. '._' → logprob: -6.28355073928833
    8. '
' → logprob: -7.90855073928833
    9. '_normal' → logprob: -8.658550262451172
    10. '   ' → logprob: -9.033550262451172

Token 1509: '_vector' (ID: 29530)
  Prédit: '_vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -4.7994282795116305e-05
    2. 'vector' → logprob: -10.00004768371582
    3. 'Vector' → logprob: -13.37504768371582
    4. ' vector' → logprob: -14.75004768371582
    5. '       ' → logprob: -15.12504768371582
    6. '   ' → logprob: -16.25004768371582
    7. '[' → logprob: -16.62504768371582
    8. '_vectors' → logprob: -16.75004768371582
    9. '_VECTOR' → logprob: -17.00004768371582
    10. 's' → logprob: -17.62504768371582

Token 1510: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.010476783849298954
    2. '()' → logprob: -5.135476589202881
    3. '           ' → logprob: -5.635476589202881
    4. '
' → logprob: -8.010477066040039
    5. '=' → logprob: -8.135477066040039
    6. ' =' → logprob: -9.010477066040039
    7. '()
' → logprob: -9.635477066040039
    8. ',' → logprob: -10.510477066040039
    9. '       ' → logprob: -10.885477066040039
    10. '(),' → logprob: -11.010477066040039

Token 1511: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004336475860327482
    2. ' =' → logprob: -6.254336357116699
    3. ',' → logprob: -7.004336357116699
    4. 'x' → logprob: -7.879336357116699
    5. 'n' → logprob: -8.0043363571167
    6. '=' → logprob: -8.3793363571167
    7. '[' → logprob: -8.6293363571167
    8. '       ' → logprob: -9.8793363571167
    9. '		' → logprob: -10.1293363571167
    10. ' and' → logprob: -10.5043363571167

Token 1512: ' ni' (ID: 2565)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17610904574394226
    2. 'ni' (adapté à ' ni') → logprob: -2.4261090755462646
    3. ' n' → logprob: -2.8011090755462646
    4. ' ni' → logprob: -4.9261088371276855
    5. '           ' → logprob: -5.3011088371276855
    6. '	n' → logprob: -10.926109313964844
    7. '       ' → logprob: -11.426109313964844
    8. '   ' → logprob: -11.926109313964844
    9. 'nv' → logprob: -11.926109313964844
    10. '_n' → logprob: -12.176109313964844

Token 1513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2265065461397171
    2. ' =' → logprob: -1.6015065908432007
    3. '0' → logprob: -6.97650671005249
    4. '=
' → logprob: -9.976506233215332
    5. 'x' → logprob: -10.226506233215332
    6. '[' → logprob: -10.601506233215332
    7. '   ' → logprob: -11.476506233215332
    8. '       ' → logprob: -11.726506233215332
    9. ')' → logprob: -12.226506233215332
    10. '```' → logprob: -12.351506233215332

Token 1514: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006864082533866167
    2. ' self' → logprob: -5.006864070892334
    3. '(self' → logprob: -8.881864547729492
    4. '           ' → logprob: -11.756864547729492
    5. ' (' → logprob: -13.881864547729492
    6. '(' → logprob: -15.131864547729492
    7. '   ' → logprob: -15.881864547729492
    8. 'lines' → logprob: -15.881864547729492
    9. '               ' → logprob: -16.256864547729492
    10. ' ' → logprob: -16.256864547729492

Token 1515: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.029757089912891388
    2. 'lines' → logprob: -3.529757022857666
    3. '	lines' → logprob: -13.154757499694824
    4. '.' → logprob: -13.404757499694824
    5. '(lines' → logprob: -13.654757499694824
    6. ' lines' → logprob: -13.904757499694824
    7. '.normal' → logprob: -15.279757499694824
    8. '   ' → logprob: -16.029756546020508
    9. '```' → logprob: -16.154756546020508
    10. 's' → logprob: -16.279756546020508

Token 1516: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -14.375001907348633
    3. '[' → logprob: -15.000001907348633
    4. '(i' → logprob: -15.625001907348633
    5. 'i' → logprob: -15.625001907348633
    6. '[
' → logprob: -16.250001907348633
    7. '[n' → logprob: -16.375001907348633
    8. '[I' → logprob: -16.875001907348633
    9. '
' → logprob: -17.000001907348633
    10. '[j' → logprob: -17.500001907348633

Token 1517: '].' (ID: 1651)
  Prédit: '.normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -0.053974151611328125
    2. ').' → logprob: -3.428974151611328
    3. '.' → logprob: -4.428974151611328
    4. '().' → logprob: -6.053974151611328
    5. '
' → logprob: -6.053974151611328
    6. ' .' → logprob: -6.428974151611328
    7. '   ' → logprob: -7.178974151611328
    8. '].' → logprob: -8.428974151611328
    9. ')' → logprob: -8.803974151611328
    10. '.n' → logprob: -9.053974151611328

Token 1518: 'normal' (ID: 14559)
  Prédit: 'normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -9.014684110297821e-06
    2. ' normal' → logprob: -12.000008583068848
    3. '.normal' → logprob: -13.000008583068848
    4. 'parallel' → logprob: -15.000008583068848
    5. '
' → logprob: -15.875008583068848
    6. '```' → logprob: -17.000009536743164
    7. '_normal' → logprob: -17.250009536743164
    8. 'normalized' → logprob: -17.250009536743164
    9. 'ormal' → logprob: -17.750009536743164
    10. '(normal' → logprob: -18.125009536743164

Token 1519: '_vector' (ID: 29530)
  Prédit: '_vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -3.583550642360933e-05
    2. 'vector' → logprob: -10.375036239624023
    3. 'Vector' → logprob: -13.875036239624023
    4. '_VECTOR' → logprob: -14.000036239624023
    5. '       ' → logprob: -14.375036239624023
    6. '()
' → logprob: -14.500036239624023
    7. '()' → logprob: -14.750036239624023
    8. '   ' → logprob: -15.250036239624023
    9. ' vector' → logprob: -15.250036239624023
    10. '_Vector' → logprob: -15.875036239624023

Token 1520: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.04916520044207573
    2. '()' → logprob: -3.0491652488708496
    3. '           ' → logprob: -7.92416524887085
    4. '()
' → logprob: -9.049164772033691
    5. '()

' → logprob: -9.674164772033691
    6. '()[' → logprob: -11.174164772033691
    7. '=' → logprob: -11.924164772033691
    8. '       ' → logprob: -12.674164772033691
    9. '
' → logprob: -13.049164772033691
    10. '()==' → logprob: -13.174164772033691

Token 1521: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.97155623533763e-05
    2. '       ' → logprob: -9.500089645385742
    3. ',' → logprob: -12.125089645385742
    4. ' if' → logprob: -13.250089645385742
    5. '   ' → logprob: -13.625089645385742
    6. '               ' → logprob: -13.750089645385742
    7. '          ' → logprob: -14.125089645385742
    8. '	       ' → logprob: -14.125089645385742
    9. '```' → logprob: -14.250089645385742
    10. 'if' → logprob: -14.500089645385742

Token 1522: ' cross' (ID: 8088)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019909758120775223
    2. 'if' → logprob: -4.019909858703613
    3. 'det' → logprob: -7.019909858703613
    4. 'dx' → logprob: -8.144909858703613
    5. ' if' → logprob: -8.519909858703613
    6. '       ' → logprob: -8.644909858703613
    7. 'ratio' → logprob: -9.519909858703613
    8. 'd' → logprob: -9.644909858703613
    9. 'dp' → logprob: -11.644909858703613
    10. 'angle' → logprob: -11.769909858703613

Token 1523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08479194343090057
    2. '=' → logprob: -2.834791898727417
    3. '_product' → logprob: -4.334792137145996
    4. '=n' → logprob: -5.584792137145996
    5. '_n' → logprob: -5.959792137145996
    6. 'product' → logprob: -6.584792137145996
    7. 'prod' → logprob: -7.709792137145996
    8. '(n' → logprob: -8.334792137145996
    9. '_' → logprob: -8.584792137145996
    10. '_prod' → logprob: -8.584792137145996

Token 1524: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.960946772480384e-05
    2. ' n' → logprob: -9.375099182128906
    3. '   ' → logprob: -12.125099182128906
    4. 'ni' → logprob: -12.625099182128906
    5. 'abs' → logprob: -13.500099182128906
    6. '(n' → logprob: -13.500099182128906
    7. '	n' → logprob: -13.500099182128906
    8. '       ' → logprob: -14.250099182128906
    9. '
' → logprob: -14.750099182128906
    10. '           ' → logprob: -15.125099182128906

Token 1525: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.602024900028482e-05
    2. 'n' → logprob: -9.750085830688477
    3. 'i' → logprob: -11.000085830688477
    4. 'o' → logprob: -12.375085830688477
    5. '
' → logprob: -13.625085830688477
    6. '```' → logprob: -13.625085830688477
    7. '``' → logprob: -13.875085830688477
    8. '_' → logprob: -14.125085830688477
    9. 'ni' → logprob: -14.375085830688477
    10. '[' → logprob: -14.375085830688477

Token 1526: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.383526149671525e-05
    2. '[
' → logprob: -10.875053405761719
    3. 'x' → logprob: -11.250053405761719
    4. '(' → logprob: -11.875053405761719
    5. '0' → logprob: -12.625053405761719
    6. '```' → logprob: -13.000053405761719
    7. 'def' → logprob: -13.375053405761719
    8. '#' → logprob: -13.500053405761719
    9. '_' → logprob: -13.750053405761719
    10. 'n' → logprob: -13.875053405761719

Token 1527: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. '
' → logprob: -13.625000953674316
    3. '1' → logprob: -16.625001907348633
    4. '[' → logprob: -17.500001907348633
    5. '```' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '(' → logprob: -20.250001907348633
    8. 'A' → logprob: -20.625001907348633
    9. '۰' → logprob: -20.625001907348633
    10. 's' → logprob: -20.875001907348633

Token 1528: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38758301734924316
    2. '*' → logprob: -1.1375830173492432
    3. '*n' → logprob: -7.262582778930664
    4. '*i' → logprob: -12.387582778930664
    5. '*pi' → logprob: -13.387582778930664
    6. '*num' → logprob: -13.762582778930664
    7. '*self' → logprob: -14.262582778930664
    8. '```' → logprob: -14.387582778930664
    9. '*u' → logprob: -15.137582778930664
    10. '*(' → logprob: -15.512582778930664

Token 1529: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.1269330382347107
    2. 'n' → logprob: -2.1269330978393555
    3. '
' → logprob: -13.626933097839355
    4. ' ni' → logprob: -13.876933097839355
    5. 'nii' → logprob: -14.126933097839355
    6. 'nu' → logprob: -15.126933097839355
    7. 'nyi' → logprob: -15.376933097839355
    8. 'nj' → logprob: -15.626933097839355
    9. ' n' → logprob: -15.751933097839355
    10. 'ny' → logprob: -16.00193214416504

Token 1530: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06210515275597572
    2. '1' → logprob: -2.812105178833008
    3. '```' → logprob: -9.312105178833008
    4. ',' → logprob: -11.312105178833008
    5. 'n' → logprob: -11.937105178833008
    6. '
' → logprob: -11.937105178833008
    7. '[
' → logprob: -12.437105178833008
    8. '#' → logprob: -12.812105178833008
    9. '``' → logprob: -12.937105178833008
    10. '`' → logprob: -13.312105178833008

Token 1531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2762428822461516e-05
    2. '
' → logprob: -9.875052452087402
    3. '[' → logprob: -13.750052452087402
    4. '```' → logprob: -17.37505340576172
    5. '0' → logprob: -17.50005340576172
    6. '{' → logprob: -17.87505340576172
    7. '`
' → logprob: -18.37505340576172
    8. 'i' → logprob: -18.37505340576172
    9. '

' → logprob: -18.62505340576172
    10. '#' → logprob: -18.81255340576172

Token 1532: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12720359861850739
    2. '-' → logprob: -2.1272037029266357
    3. '-
' → logprob: -8.377203941345215
    4. ' -
' → logprob: -10.127203941345215
    5. '
' → logprob: -13.502203941345215
    6. ' ' → logprob: -13.877203941345215
    7. '```' → logprob: -14.002203941345215
    8. ' ' → logprob: -14.127203941345215
    9. ',' → logprob: -15.127203941345215
    10. '        ' → logprob: -15.877203941345215

Token 1533: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6932071447372437
    2. ' -' → logprob: -0.6932071447372437
    3. '-
' → logprob: -9.818206787109375
    4. ' -
' → logprob: -13.068206787109375
    5. '```' → logprob: -13.443206787109375
    6. ' ' → logprob: -14.193206787109375
    7. '
' → logprob: -14.818206787109375
    8. '-n' → logprob: -15.443206787109375
    9. ' ' → logprob: -15.568206787109375
    10. '−' → logprob: -16.443206787109375

Token 1534: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.860340752406046e-05
    2. ' n' → logprob: -9.7500581741333
    3. '	n' → logprob: -15.2500581741333
    4. '   ' → logprob: -17.375059127807617
    5. ')n' → logprob: -19.375059127807617
    6. 'ni' → logprob: -19.500059127807617
    7. '­n' → logprob: -19.625059127807617
    8. '_n' → logprob: -19.875059127807617
    9. '    ' → logprob: -20.000059127807617
    10. '       ' → logprob: -20.125059127807617

Token 1535: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.723973582556937e-05
    2. '[' → logprob: -11.500017166137695
    3. 'o' → logprob: -13.000017166137695
    4. '```' → logprob: -13.625017166137695
    5. 'i' → logprob: -13.875017166137695
    6. '[i' → logprob: -14.625017166137695
    7. '۰' → logprob: -14.875017166137695
    8. 'n' → logprob: -15.000017166137695
    9. '``' → logprob: -15.500017166137695
    10. '
' → logprob: -15.750017166137695

Token 1536: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.650518920039758e-06
    2. '[
' → logprob: -12.875003814697266
    3. '0' → logprob: -15.125003814697266
    4. '
' → logprob: -15.250003814697266
    5. '*' → logprob: -15.750003814697266
    6. '```' → logprob: -16.000003814697266
    7. '1' → logprob: -16.125003814697266
    8. 'n' → logprob: -16.500003814697266
    9. '.' → logprob: -17.500003814697266
    10. '...' → logprob: -18.250003814697266

Token 1537: '1' (ID: 16)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.0642632246017456
    2. 'n' → logprob: -2.814263343811035
    3. '1' → logprob: -6.189263343811035
    4. '0' → logprob: -9.314263343811035
    5. '[' → logprob: -10.314263343811035
    6. ' ni' → logprob: -10.439263343811035
    7. '```' → logprob: -10.564263343811035
    8. 'i' → logprob: -11.064263343811035
    9. '
' → logprob: -11.939263343811035
    10. '``' → logprob: -12.189263343811035

Token 1538: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2352385965641588e-05
    2. ' *' → logprob: -11.750012397766113
    3. '[' → logprob: -14.125012397766113
    4. ']*' → logprob: -14.125012397766113
    5. 'ni' → logprob: -14.125012397766113
    6. '```' → logprob: -14.125012397766113
    7. ')*' → logprob: -15.000012397766113
    8. '*
' → logprob: -15.250012397766113
    9. '0' → logprob: -15.625012397766113
    10. '*pi' → logprob: -15.750012397766113

Token 1539: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -1.4378848391061183e-05
    2. 'n' → logprob: -11.375014305114746
    3. ' ni' → logprob: -13.125014305114746
    4. '
' → logprob: -15.500014305114746
    5. '   ' → logprob: -16.625015258789062
    6. 'nii' → logprob: -17.000015258789062
    7. 'ny' → logprob: -17.250015258789062
    8. '#' → logprob: -17.375015258789062
    9. '[' → logprob: -17.500015258789062
    10. '`' → logprob: -17.750015258789062

Token 1540: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02632654458284378
    2. '[' → logprob: -3.6513266563415527
    3. '```' → logprob: -11.276326179504395
    4. '#' → logprob: -13.026326179504395
    5. '.' → logprob: -13.026326179504395
    6. '
' → logprob: -13.151326179504395
    7. '   ' → logprob: -13.901326179504395
    8. '(' → logprob: -13.901326179504395
    9. 'i' → logprob: -14.151326179504395
    10. '[
' → logprob: -14.401326179504395

Token 1541: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. 'i' → logprob: -14.500000953674316
    3. '
' → logprob: -16.125001907348633
    4. '[' → logprob: -16.375001907348633
    5. '۰' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '```' → logprob: -17.250001907348633
    8. ' ' → logprob: -17.312501907348633
    9. '０' → logprob: -17.875001907348633
    10. '#' → logprob: -18.250001907348633

Token 1542: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14334726333618164
    2. '<|end|>' → logprob: -2.5183472633361816
    3. '
' → logprob: -3.6433472633361816
    4. ']' → logprob: -4.893347263336182
    5. ')
' → logprob: -4.893347263336182
    6. '       ' → logprob: -5.268347263336182
    7. '<|end|>' → logprob: -6.643347263336182
    8. ' ==' → logprob: -6.768347263336182
    9. '==' → logprob: -7.143347263336182
    10. '}' → logprob: -7.143347263336182

Token 1543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33225885033607483
    2. '       ' → logprob: -1.3322588205337524
    3. '==' → logprob: -5.207258701324463
    4. ' ==' → logprob: -5.207258701324463
    5. '<|end|>' → logprob: -5.457258701324463
    6. '
' → logprob: -6.707258701324463
    7. ' if' → logprob: -7.207258701324463
    8. 'if' → logprob: -7.832258701324463
    9. '<|end|>' → logprob: -8.207259178161621
    10. ',' → logprob: -8.582259178161621

Token 1544: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5795145034790039
    2. ' if' → logprob: -0.8295145034790039
    3. '           ' → logprob: -5.704514503479004
    4. '       ' → logprob: -8.454514503479004
    5. ' i' → logprob: -12.454514503479004
    6. '
' → logprob: -12.454514503479004
    7. ' ' → logprob: -12.704514503479004
    8. 'abs' → logprob: -12.704514503479004
    9. 'i' → logprob: -13.454514503479004
    10. '        ' → logprob: -13.829514503479004

Token 1545: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.31335023045539856
    2. ' abs' → logprob: -1.3133502006530762
    3. '(abs' → logprob: -9.938350677490234
    4. 'math' → logprob: -11.063350677490234
    5. '           ' → logprob: -11.313350677490234
    6. ' math' → logprob: -11.563350677490234
    7. ' cross' → logprob: -13.813350677490234
    8. 'fabs' → logprob: -14.438350677490234
    9. '.abs' → logprob: -14.563350677490234
    10. '_abs' → logprob: -15.188350677490234

Token 1546: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.24179228907451e-05
    2. 'cross' → logprob: -10.500061988830566
    3. '(
' → logprob: -10.750061988830566
    4. '           ' → logprob: -12.000061988830566
    5. '(' → logprob: -12.250061988830566
    6. '               ' → logprob: -14.750061988830566
    7. ')' → logprob: -14.875061988830566
    8. '                   ' → logprob: -15.000061988830566
    9. '=c' → logprob: -15.250061988830566
    10. ' cross' → logprob: -15.375061988830566

Token 1547: 'ross' (ID: 2838)
  Prédit: 'ross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ross' → logprob: -0.0920947715640068
    2. 'cross' → logprob: -2.592094659805298
    3. '```' → logprob: -6.342094898223877
    4. 'oss' → logprob: -6.592094898223877
    5. 'n' → logprob: -6.967094898223877
    6. '[' → logprob: -7.092094898223877
    7. '(c' → logprob: -7.217094898223877
    8. '   ' → logprob: -7.342094898223877
    9. '<' → logprob: -7.592094898223877
    10. '           ' → logprob: -7.717094898223877

Token 1548: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7926279902458191
    2. ')' → logprob: -0.9176279902458191
    3. '<' → logprob: -2.292628049850464
    4. ' <=' → logprob: -4.167627811431885
    5. '>' → logprob: -4.542627811431885
    6. ' >' → logprob: -4.667627811431885
    7. ')<' → logprob: -6.042627811431885
    8. ' ==' → logprob: -6.042627811431885
    9. '<=' → logprob: -6.042627811431885
    10. '```' → logprob: -6.792627811431885

Token 1549: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6477767825126648
    2. '<' → logprob: -0.7727767825126648
    3. ' <=' → logprob: -4.5227766036987305
    4. '<=' → logprob: -5.7727766036987305
    5. ' ==' → logprob: -7.6477766036987305
    6. '==' → logprob: -8.27277660369873
    7. '>' → logprob: -9.14777660369873
    8. '```' → logprob: -9.89777660369873
    9. ')' → logprob: -10.14777660369873
    10. ' >' → logprob: -10.52277660369873

Token 1550: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '
' → logprob: -18.5
    4. '   ' → logprob: -19.125
    5. '```' → logprob: -21.375
    6. '=' → logprob: -22.25
    7. '0' → logprob: -23.25
    8. '(' → logprob: -23.375
    9. '10' → logprob: -23.875
    10. 'EPS' → logprob: -24.25

Token 1551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '(' → logprob: -18.125001907348633
    6. '```' → logprob: -18.125001907348633
    7. '=' → logprob: -19.000001907348633
    8. '0' → logprob: -19.500001907348633
    9. '-' → logprob: -20.250001907348633
    10. '       ' → logprob: -20.375001907348633

Token 1552: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008619066327810287
    2. '-' → logprob: -4.7586188316345215
    3. '1' → logprob: -13.63361930847168
    4. '           ' → logprob: -14.13361930847168
    5. '```' → logprob: -14.13361930847168
    6. '       ' → logprob: -14.88361930847168
    7. 'E' → logprob: -15.13361930847168
    8. '**' → logprob: -15.13361930847168
    9. '
' → logprob: -15.25861930847168
    10. '-e' → logprob: -15.38361930847168

Token 1553: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3856492842023727e-06
    2. '9' → logprob: -14.125000953674316
    3. '```' → logprob: -15.750000953674316
    4. '12' → logprob: -16.375001907348633
    5. ' -' → logprob: -16.500001907348633
    6. '
' → logprob: -16.500001907348633
    7. '{-' → logprob: -16.625001907348633
    8. '10' → logprob: -16.625001907348633
    9. '(-' → logprob: -17.000001907348633
    10. '-
' → logprob: -17.375001907348633

Token 1554: '15' (ID: 1055)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.24088437855243683
    2. '10' → logprob: -2.490884304046631
    3. '9' → logprob: -2.740884304046631
    4. '14' → logprob: -2.990884304046631
    5. '15' → logprob: -4.365884304046631
    6. '13' → logprob: -5.740884304046631
    7. '8' → logprob: -7.740884304046631
    8. '11' → logprob: -9.115884780883789
    9. '-' → logprob: -12.615884780883789
    10. '{' → logprob: -12.615884780883789

Token 1555: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7392279505729675
    2. '           ' → logprob: -0.7392279505729675
    3. ':
' → logprob: -3.7392280101776123
    4. '               ' → logprob: -4.114227771759033
    5. ' and' → logprob: -5.614227771759033
    6. '<|end|>' → logprob: -8.239228248596191
    7. ' or' → logprob: -8.739228248596191
    8. 'and' → logprob: -8.989228248596191
    9. ' continue' → logprob: -9.114228248596191
    10. '       ' → logprob: -9.364228248596191

Token 1556: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0811447873711586
    2. '           ' → logprob: -2.5811448097229004
    3. ' continue' → logprob: -6.3311448097229
    4. 'continue' → logprob: -8.331144332885742
    5. ':' → logprob: -9.581144332885742
    6. ':
' → logprob: -10.581144332885742
    7. ',' → logprob: -10.581144332885742
    8. '       ' → logprob: -10.956144332885742
    9. '                   ' → logprob: -10.956144332885742
    10. ' continues' → logprob: -11.456144332885742

Token 1557: ' parallel' (ID: 26697)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1650727391242981
    2. 'parallel' (adapté à ' parallel') → logprob: -2.5400726795196533
    3. '           ' → logprob: -3.0400726795196533
    4. ' parallel' → logprob: -4.415072917938232
    5. 'continue' → logprob: -5.040072917938232
    6. '                   ' → logprob: -5.165072917938232
    7. ' continue' → logprob: -7.290072917938232
    8. '   ' → logprob: -9.665072441101074
    9. '                ' → logprob: -9.790072441101074
    10. '              ' → logprob: -10.165072441101074

Token 1558: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0062551116570830345
    2. ':' → logprob: -5.881255149841309
    3. '           ' → logprob: -7.131255149841309
    4. ' =' → logprob: -7.381255149841309
    5. '=' → logprob: -7.506255149841309
    6. '               ' → logprob: -8.006255149841309
    7. '_continue' → logprob: -8.506255149841309
    8. '=True' → logprob: -8.756255149841309
    9. '.' → logprob: -9.006255149841309
    10. '+=' → logprob: -9.506255149841309

Token 1559: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12694281339645386
    2. ' +=' → logprob: -2.1269428730010986
    3. '+' → logprob: -11.75194263458252
    4. '=' → logprob: -12.75194263458252
    5. ']+=' → logprob: -13.75194263458252
    6. '           ' → logprob: -14.00194263458252
    7. '               ' → logprob: -14.25194263458252
    8. '   ' → logprob: -14.50194263458252
    9. '            ' → logprob: -15.00194263458252
    10. '                ' → logprob: -16.126943588256836

Token 1560: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.8750057220459
    4. '
' → logprob: -18.1250057220459
    5. '+' → logprob: -19.8750057220459
    6. '    ' → logprob: -20.8750057220459
    7. '  ' → logprob: -21.0000057220459
    8. '```' → logprob: -21.3750057220459
    9. '       ' → logprob: -22.0000057220459
    10. ' ' → logprob: -22.0000057220459

Token 1561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '
' → logprob: -17.875
    4. '+' → logprob: -19.25
    5. '   ' → logprob: -19.75
    6. 'n' → logprob: -19.875
    7. '```' → logprob: -20.625
    8. '0' → logprob: -21.9375
    9. '{
' → logprob: -22.125
    10. '-' → logprob: -22.1875

Token 1562: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19758270680904388
    2. '           ' → logprob: -2.072582721710205
    3. '
' → logprob: -3.322582721710205
    4. 'continue' → logprob: -4.822582721710205
    5. ' continue' → logprob: -5.322582721710205
    6. '<|end|>' → logprob: -7.072582721710205
    7. '               ' → logprob: -7.197582721710205
    8. '        
' → logprob: -7.447582721710205
    9. ')' → logprob: -7.947582721710205
    10. ',' → logprob: -8.197582244873047

Token 1563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004434747621417046
    2. '           ' → logprob: -6.004434585571289
    3. '
' → logprob: -6.879434585571289
    4. '<|end|>' → logprob: -7.754434585571289
    5. ' if' → logprob: -9.129434585571289
    6. '        
' → logprob: -9.129434585571289
    7. 'if' → logprob: -10.129434585571289
    8. ')' → logprob: -10.379434585571289
    9. 'continue' → logprob: -10.504434585571289
    10. ',' → logprob: -10.629434585571289

Token 1564: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20220521092414856
    2. '       ' → logprob: -1.7022051811218262
    3. ' if' → logprob: -7.202205181121826
    4. '```' → logprob: -10.077205657958984
    5. '   ' → logprob: -13.327205657958984
    6. 'If' → logprob: -14.327205657958984
    7. '
' → logprob: -14.577205657958984
    8. 'import' → logprob: -14.577205657958984
    9. '        
' → logprob: -14.952205657958984
    10. '	if' → logprob: -15.327205657958984

Token 1565: ' parallel' (ID: 26697)
  Prédit: ' parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parallel' → logprob: -0.008616108447313309
    2. 'parallel' → logprob: -4.758615970611572
    3. ' n' → logprob: -13.75861644744873
    4. 'n' → logprob: -15.75861644744873
    5. ' len' → logprob: -16.133615493774414
    6. '
' → logprob: -16.883615493774414
    7. '   ' → logprob: -17.008615493774414
    8. '_parallel' → logprob: -17.008615493774414
    9. ' paralelo' → logprob: -17.508615493774414
    10. ' ' → logprob: -17.633615493774414

Token 1566: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -8.7689099018462e-05
    2. '==' → logprob: -9.62508773803711
    3. '```' → logprob: -12.75008773803711
    4. 'count' → logprob: -12.87508773803711
    5. ' ==' → logprob: -13.00008773803711
    6. 's' → logprob: -13.00008773803711
    7. ')' → logprob: -13.25008773803711
    8. ' _' → logprob: -13.37508773803711
    9. 'Count' → logprob: -13.37508773803711
    10. '_COUNT' → logprob: -13.62508773803711

Token 1567: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34869226813316345
    2. '==' → logprob: -1.2236922979354858
    3. '=' → logprob: -9.848691940307617
    4. '        ' → logprob: -10.098691940307617
    5. '       ' → logprob: -10.348691940307617
    6. '   ' → logprob: -10.848691940307617
    7. ')' → logprob: -10.973691940307617
    8. ' !=' → logprob: -11.473691940307617
    9. ')==' → logprob: -11.723691940307617
    10. '    ' → logprob: -11.973691940307617

Token 1568: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020473242329899222
    2. ' n' → logprob: -9.125205039978027
    3. '(n' → logprob: -9.375205039978027
    4. 'len' → logprob: -11.625205039978027
    5. '   ' → logprob: -13.875205039978027
    6. '       ' → logprob: -14.375205039978027
    7. '0' → logprob: -15.750205039978027
    8. '	n' → logprob: -16.12520408630371
    9. '           ' → logprob: -16.25020408630371
    10. ' (' → logprob: -16.62520408630371

Token 1569: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10396863520145416
    2. ' -' → logprob: -2.353968620300293
    3. '       ' → logprob: -6.228968620300293
    4. ':' → logprob: -7.103968620300293
    5. '   ' → logprob: -7.603968620300293
    6. '<|end|>' → logprob: -8.853968620300293
    7. '           ' → logprob: -9.103968620300293
    8. '
' → logprob: -9.603968620300293
    9. ':
' → logprob: -9.978968620300293
    10. '<|end|>' → logprob: -10.853968620300293

Token 1570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.25000286102295
    3. '
' → logprob: -14.75000286102295
    4. '0' → logprob: -15.00000286102295
    5. '```' → logprob: -15.37500286102295
    6. '   ' → logprob: -16.000003814697266
    7. '       ' → logprob: -18.125003814697266
    8. '           ' → logprob: -19.000003814697266
    9. '...' → logprob: -19.250003814697266
    10. '<|end|>' → logprob: -19.375003814697266

Token 1571: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6981072425842285
    2. ':' → logprob: -1.3231072425842285
    3. '           ' → logprob: -1.4481072425842285
    4. ':return' → logprob: -6.9481072425842285
    5. ' and' → logprob: -9.69810676574707
    6. 'return' → logprob: -10.19810676574707
    7. '       ' → logprob: -10.19810676574707
    8. '):
' → logprob: -10.94810676574707
    9. ':
' → logprob: -11.69810676574707
    10. ' return' → logprob: -11.69810676574707

Token 1572: ' n' (ID: 297)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8761414885520935
    2. '(abs' → logprob: -1.1261415481567383
    3. 'all' → logprob: -1.7511415481567383
    4. '(all' → logprob: -3.6261415481567383
    5. '(base' → logprob: -3.7511415481567383
    6. ' abs' → logprob: -5.001141548156738
    7. 'any' → logprob: -5.251141548156738
    8. '(' → logprob: -5.626141548156738
    9. 'base' → logprob: -5.876141548156738
    10. '(par' → logprob: -6.001141548156738

Token 1573: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8232752084732056
    2. '>' → logprob: -1.4482752084732056
    3. ' ==' → logprob: -1.4482752084732056
    4. ' >' → logprob: -2.573275089263916
    5. ' !=' → logprob: -6.198275089263916
    6. '   ' → logprob: -6.323275089263916
    7. '[' → logprob: -6.448275089263916
    8. '```' → logprob: -6.823275089263916
    9. '<|end|>' → logprob: -6.948275089263916
    10. '<' → logprob: -7.073275089263916

Token 1574: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.750436007976532e-05
    2. '2' → logprob: -10.62503719329834
    3. '
' → logprob: -11.75003719329834
    4. ' ' → logprob: -12.62503719329834
    5. '   ' → logprob: -13.87503719329834
    6. '0' → logprob: -14.87503719329834
    7. '=' → logprob: -15.50003719329834
    8. '```' → logprob: -15.62503719329834
    9. '>' → logprob: -16.750038146972656
    10. '{
' → logprob: -16.875038146972656

Token 1575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4285862057004124e-05
    2. '2' → logprob: -10.50003433227539
    3. '0' → logprob: -13.00003433227539
    4. ' ' → logprob: -13.00003433227539
    5. '
' → logprob: -13.50003433227539
    6. '   ' → logprob: -15.00003433227539
    7. '=' → logprob: -16.25003433227539
    8. '```' → logprob: -16.50003433227539
    9. '>' → logprob: -16.68753433227539
    10. '

' → logprob: -17.56253433227539

Token 1576: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5054562091827393
    2. ':' → logprob: -1.0054562091827393
    3. '           ' → logprob: -3.5054562091827393
    4. '       ' → logprob: -7.63045597076416
    5. ':return' → logprob: -8.00545597076416
    6. 'return' → logprob: -11.25545597076416
    7. ' and' → logprob: -12.25545597076416
    8. ':
' → logprob: -12.38045597076416
    9. ':

' → logprob: -12.50545597076416
    10. '):
' → logprob: -12.75545597076416

Token 1577: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.2729995988775045e-06
    2. 'return' → logprob: -12.125006675720215
    3. '       ' → logprob: -14.875006675720215
    4. ' return' → logprob: -16.5000057220459
    5. '          ' → logprob: -16.6250057220459
    6. '
' → logprob: -17.0000057220459
    7. '		' → logprob: -17.3750057220459
    8. '```' → logprob: -17.5000057220459
    9. '               ' → logprob: -17.8750057220459
    10. '   ' → logprob: -18.0000057220459

Token 1578: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6359758973121643
    2. 'return' → logprob: -0.7609758973121643
    3. '#' (adapté à ' #') → logprob: -6.0109758377075195
    4. ' return' → logprob: -7.7609758377075195
    5. '       ' → logprob: -8.01097583770752
    6. '   ' → logprob: -9.76097583770752
    7. '
' → logprob: -10.26097583770752
    8. '               ' → logprob: -11.01097583770752
    9. '          ' → logprob: -11.26097583770752
    10. ' #' → logprob: -11.38597583770752

Token 1579: ' All' (ID: 2545)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007232828065752983
    2. '#' → logprob: -5.382232666015625
    3. '           ' → logprob: -6.132232666015625
    4. ' return' → logprob: -7.882232666015625
    5. 'from' → logprob: -10.632232666015625
    6. '       ' → logprob: -11.257232666015625
    7. 'Return' → logprob: -12.382232666015625
    8. ' #' → logprob: -12.382232666015625
    9. '
' → logprob: -12.632232666015625
    10. '   ' → logprob: -12.757232666015625

Token 1580: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.663374662399292
    2. 'lines' → logprob: -0.913374662399292
    3. 'points' → logprob: -2.663374662399292
    4. ' points' → logprob: -4.288374900817871
    5. '           ' → logprob: -9.413374900817871
    6. ' return' → logprob: -9.788374900817871
    7. '_lines' → logprob: -10.163374900817871
    8. 'return' → logprob: -10.288374900817871
    9. ' the' → logprob: -11.288374900817871
    10. '_points' → logprob: -11.413374900817871

Token 1581: ' parallel' (ID: 26697)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6716288924217224
    2. 'are' → logprob: -1.0466289520263672
    3. ' lie' → logprob: -2.546628952026367
    4. '           ' → logprob: -3.421628952026367
    5. '
' → logprob: -4.296628952026367
    6. '#' → logprob: -4.921628952026367
    7. 'lie' → logprob: -7.046628952026367
    8. 'parallel' → logprob: -7.046628952026367
    9. '   ' → logprob: -7.296628952026367
    10. 'aligned' → logprob: -7.546628952026367

Token 1582: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012539229355752468
    2. ':
' → logprob: -7.501254081726074
    3. '
' → logprob: -8.001254081726074
    4. ':' → logprob: -8.376254081726074
    5. 'return' → logprob: -9.876254081726074
    6. ',' → logprob: -10.751254081726074
    7. ' return' → logprob: -10.876254081726074
    8. '               ' → logprob: -11.376254081726074
    9. ' and' → logprob: -11.626254081726074
    10. '       ' → logprob: -12.001254081726074

Token 1583: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.01108201127499342
    2. ' base' → logprob: -4.511082172393799
    3. 'self' → logprob: -11.13608169555664
    4. 'the' → logprob: -11.63608169555664
    5. 'line' → logprob: -12.38608169555664
    6. '```' → logprob: -13.13608169555664
    7. '           ' → logprob: -13.38608169555664
    8. '
' → logprob: -13.38608169555664
    9. ' the' → logprob: -14.63608169555664
    10. '	base' → logprob: -14.76108169555664

Token 1584: ' ->' (ID: 2747)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008087779395282269
    2. '
' → logprob: -5.633087635040283
    3. ':
' → logprob: -5.883087635040283
    4. 'return' → logprob: -7.008087635040283
    5. ':' → logprob: -8.008088111877441
    6. '               ' → logprob: -8.508088111877441
    7. ' return' → logprob: -9.008088111877441
    8. '#' → logprob: -10.383088111877441
    9. ',' → logprob: -10.633088111877441
    10. ':return' → logprob: -11.258088111877441

Token 1585: ' infinite' (ID: 48413)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012681988067924976
    2. ' return' → logprob: -4.88768196105957
    3. '#' → logprob: -5.38768196105957
    4. '           ' → logprob: -8.01268196105957
    5. '
' → logprob: -10.26268196105957
    6. '       ' → logprob: -10.51268196105957
    7. '   ' → logprob: -10.63768196105957
    8. 'Many' → logprob: -10.76268196105957
    9. ' #' → logprob: -11.01268196105957
    10. 'print' → logprob: -11.26268196105957

Token 1586: ' solutions' (ID: 9368)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6955867409706116
    2. '
' → logprob: -0.9455867409706116
    3. '#' → logprob: -2.570586681365967
    4. ' points' → logprob: -4.695586681365967
    5. '_points' → logprob: -4.820586681365967
    6. '<|end|>' → logprob: -5.195586681365967
    7. 'solutions' → logprob: -5.445586681365967
    8. '   ' → logprob: -6.445586681365967
    9. 'return' → logprob: -6.570586681365967
    10. ' #' → logprob: -6.695586681365967

Token 1587: ' "' (ID: 392)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02122475393116474
    2. '
' → logprob: -3.8962247371673584
    3. 'return' → logprob: -7.8962249755859375
    4. '       ' → logprob: -8.896224975585938
    5. ' return' → logprob: -9.021224975585938
    6. '               ' → logprob: -10.521224975585938
    7. '
' → logprob: -11.771224975585938
    8. ',' → logprob: -12.271224975585938
    9. '   ' → logprob: -12.646224975585938
    10. '          ' → logprob: -12.896224975585938

Token 1588: 'Many' (ID: 12488)
  Prédit: '"
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.8674673438072205
    2. '\n' → logprob: -1.3674674034118652
    3. ' along' → logprob: -1.9924674034118652
    4. '           ' → logprob: -2.1174674034118652
    5. 'return' → logprob: -3.8674674034118652
    6. '"' → logprob: -3.9924674034118652
    7. ' return' → logprob: -4.492467403411865
    8. 'along' → logprob: -5.492467403411865
    9. '
' → logprob: -5.867467403411865
    10. '       ' → logprob: -5.992467403411865

Token 1589: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.29384154081344604
    2. '           ' → logprob: -1.4188416004180908
    3. '       ' → logprob: -4.793841361999512
    4. '"' → logprob: -6.043841361999512
    5. '\n' → logprob: -7.043841361999512
    6. '"

' → logprob: -7.543841361999512
    7. 'return' → logprob: -8.418841361999512
    8. '":
' → logprob: -9.293841361999512
    9. '"
' → logprob: -10.043841361999512
    10. '   ' → logprob: -10.168841361999512

Token 1590: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.269565634895116e-05
    2. 'return' → logprob: -10.125092506408691
    3. '
' → logprob: -10.625092506408691
    4. '               ' → logprob: -11.000092506408691
    5. '       ' → logprob: -11.500092506408691
    6. ' return' → logprob: -14.500092506408691
    7. '		' → logprob: -15.000092506408691
    8. '          ' → logprob: -15.250092506408691
    9. '   ' → logprob: -15.875092506408691
    10. '```' → logprob: -16.125093460083008

Token 1591: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005874642520211637
    2. '           ' → logprob: -7.500587463378906
    3. 'raise' → logprob: -10.625587463378906
    4. ' return' → logprob: -11.875587463378906
    5. '               ' → logprob: -13.375587463378906
    6. 'from' → logprob: -13.500587463378906
    7. '
' → logprob: -16.375587463378906
    8. '       ' → logprob: -17.125587463378906
    9. 'print' → logprob: -17.250587463378906
    10. '#' → logprob: -17.500587463378906

Token 1592: ' None' (ID: 4662)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14631550014019012
    2. 'None' → logprob: -2.271315574645996
    3. ''' → logprob: -3.521315574645996
    4. 'Point' → logprob: -5.771315574645996
    5. 'True' → logprob: -9.271315574645996
    6. 'self' → logprob: -9.896315574645996
    7. 'System' → logprob: -10.271315574645996
    8. 'point' → logprob: -10.771315574645996
    9. '"No' → logprob: -11.146315574645996
    10. 'float' → logprob: -11.396315574645996

Token 1593: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1594: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7071309089660645
    2. '       ' → logprob: -0.7071309089660645
    3. '        
' → logprob: -4.5821309089660645
    4. '<|end|>' → logprob: -6.8321309089660645
    5. '```' → logprob: -7.2071309089660645
    6. 'import' → logprob: -7.5821309089660645
    7. '

' → logprob: -7.8321309089660645
    8. 'def' → logprob: -8.832130432128906
    9. '        

' → logprob: -8.957130432128906
    10. '    
' → logprob: -9.207130432128906

Token 1595: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2280397415161133
    2. 'sign' → logprob: -1.2280397415161133
    3. '       ' → logprob: -1.4780397415161133
    4. 'import' → logprob: -1.9780397415161133
    5. 'choices' → logprob: -3.9780397415161133
    6. 'from' → logprob: -4.353039741516113
    7. 'for' → logprob: -5.353039741516113
    8. '#' (adapté à ' #') → logprob: -5.728039741516113
    9. '
' → logprob: -6.103039741516113
    10. 'solutions' → logprob: -6.728039741516113

Token 1596: ' Build' (ID: 10885)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4528680741786957
    2. 'sign' → logprob: -1.577868103981018
    3. 'import' → logprob: -2.4528679847717285
    4. '       ' → logprob: -3.5778679847717285
    5. 'from' → logprob: -3.5778679847717285
    6. '#' → logprob: -5.3278679847717285
    7. 'choices' → logprob: -5.4528679847717285
    8. 'solutions' → logprob: -5.9528679847717285
    9. 'A' → logprob: -6.7028679847717285
    10. 'lines' → logprob: -6.9528679847717285

Token 1597: ' matrices' (ID: 75935)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3502672016620636
    2. 'A' → logprob: -1.6002671718597412
    3. 'from' → logprob: -2.725267171859741
    4. 'for' → logprob: -3.850267171859741
    5. 'coeff' → logprob: -5.47526741027832
    6. 'def' → logprob: -7.22526741027832
    7. '#' → logprob: -7.22526741027832
    8. 'results' → logprob: -7.72526741027832
    9. '       ' → logprob: -8.35026741027832
    10. 'matrix' → logprob: -8.72526741027832

Token 1598: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9181371927261353
    2. 'A' → logprob: -1.0431371927261353
    3. 'import' → logprob: -1.6681371927261353
    4. ' A' → logprob: -3.1681370735168457
    5. 'from' → logprob: -4.543137073516846
    6. '
' → logprob: -5.793137073516846
    7. '```' → logprob: -6.668137073516846
    8. ' import' → logprob: -7.043137073516846
    9. ' from' → logprob: -7.043137073516846
    10. 'n' → logprob: -8.418137550354004

Token 1599: ' equation' (ID: 42006)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.4518583416938782
    2. 'A' → logprob: -2.4518582820892334
    3. '+' → logprob: -2.7018582820892334
    4. 'def' → logprob: -3.0768582820892334
    5. '[' → logprob: -3.4518582820892334
    6. '#' → logprob: -3.7018582820892334
    7. 'for' → logprob: -3.7018582820892334
    8. 'import' → logprob: -4.2018585205078125
    9. 'choices' → logprob: -4.3268585205078125
    10. 'patterns' → logprob: -4.7018585205078125

Token 1600: ' based' (ID: 4122)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.58204185962677
    2. 'import' → logprob: -1.33204185962677
    3. ' A' → logprob: -2.2070417404174805
    4. '```' → logprob: -3.5820417404174805
    5. ' import' → logprob: -4.3320417404174805
    6. '       ' → logprob: -4.5820417404174805
    7. 'from' → logprob: -4.5820417404174805
    8. ' from' → logprob: -5.7070417404174805
    9. 'n' → logprob: -7.5820417404174805
    10. ' for' → logprob: -7.7070417404174805

Token 1601: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.01167084276676178
    2. '       ' → logprob: -5.38667106628418
    3. 'x' → logprob: -6.38667106628418
    4. 'import' → logprob: -6.63667106628418
    5. 'lines' → logprob: -7.13667106628418
    6. '=' → logprob: -7.26167106628418
    7. ' on' → logprob: -7.26167106628418
    8. '   ' → logprob: -7.76167106628418
    9. '#' → logprob: -9.13667106628418
    10. 'line' → logprob: -9.51167106628418

Token 1602: ' sign' (ID: 2232)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4413152933120728
    2. 'choices' → logprob: -1.4413152933120728
    3. 'sign' → logprob: -1.4413152933120728
    4. '[' → logprob: -2.066315174102783
    5. '[
' → logprob: -2.566315174102783
    6. 'import' → logprob: -4.066315174102783
    7. '+' → logprob: -4.316315174102783
    8. ' choices' → logprob: -5.066315174102783
    9. 'np' → logprob: -5.316315174102783
    10. 'choice' → logprob: -5.316315174102783

Token 1603: ' pattern' (ID: 8302)
  Prédit: ' patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -1.3619663715362549
    2. '```' → logprob: -1.4869663715362549
    3. 'patterns' → logprob: -1.6119663715362549
    4. 'import' → logprob: -1.7369663715362549
    5. 'from' → logprob: -3.236966371536255
    6. 's' → logprob: -3.861966371536255
    7. ' choices' → logprob: -4.486966133117676
    8. 'choices' → logprob: -4.486966133117676
    9. ' for' → logprob: -4.611966133117676
    10. 'pattern' → logprob: -4.611966133117676

Token 1604: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9137694239616394
    2. 'A' → logprob: -1.6637694835662842
    3. 'import' → logprob: -1.7887694835662842
    4. 'from' → logprob: -2.038769483566284
    5. '```' → logprob: -2.538769483566284
    6. ' A' → logprob: -5.038769245147705
    7. 'for' → logprob: -5.163769245147705
    8. ' from' → logprob: -5.413769245147705
    9. '
' → logprob: -5.538769245147705
    10. '``' → logprob: -5.913769245147705

Token 1605: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34611576795578003
    2. '```' → logprob: -1.3461158275604248
    3. '
' → logprob: -4.471115589141846
    4. ' for' → logprob: -5.721115589141846
    5. '``' → logprob: -5.721115589141846
    6. ' lines' → logprob: -6.221115589141846
    7. 'import' → logprob: -6.346115589141846
    8. 'for' → logprob: -6.471115589141846
    9. 'sign' → logprob: -6.596115589141846
    10. 'from' → logprob: -6.846115589141846

Token 1606: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1285770982503891
    2. '
' → logprob: -3.6285769939422607
    3. 'def' (adapté à ' def') → logprob: -4.00357723236084
    4. 'sign' → logprob: -4.37857723236084
    5. '```' → logprob: -4.37857723236084
    6. ' lines' → logprob: -5.00357723236084
    7. ' for' → logprob: -5.12857723236084
    8. 'A' → logprob: -5.25357723236084
    9. 'for' → logprob: -5.62857723236084
    10. ' choices' → logprob: -5.62857723236084

Token 1607: ' solve' (ID: 17722)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.7383015155792236
    2. 'build' → logprob: -0.9883015155792236
    3. ' build' → logprob: -1.9883015155792236
    4. '_try' → logprob: -5.7383012771606445
    5. '_matrix' → logprob: -5.9883012771606445
    6. '_sign' → logprob: -6.2383012771606445
    7. 'try' → logprob: -6.9883012771606445
    8. ' solve' → logprob: -7.1133012771606445
    9. ' _' → logprob: -7.2383012771606445
    10. ' try' → logprob: -7.4883012771606445

Token 1608: '_for' (ID: 11903)
  Prédit: '_linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_linear' → logprob: -0.1489008069038391
    2. '_sign' → logprob: -2.6489007472991943
    3. '(' → logprob: -3.5239007472991943
    4. '(sign' → logprob: -4.148900985717773
    5. '_system' → logprob: -4.523900985717773
    6. '```' → logprob: -6.398900985717773
    7. '(self' → logprob: -6.523900985717773
    8. '(line' → logprob: -6.648900985717773
    9. '_lin' → logprob: -6.773900985717773
    10. '_choices' → logprob: -6.773900985717773

Token 1609: '_sign' (ID: 24730)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.5245059728622437
    2. 'pattern' → logprob: -1.5245059728622437
    3. 'choices' → logprob: -2.649506092071533
    4. 's' → logprob: -2.899506092071533
    5. 'choice' → logprob: -3.399506092071533
    6. '_sign' → logprob: -3.899506092071533
    7. '_choice' → logprob: -5.774506092071533
    8. '_choices' → logprob: -6.024506092071533
    9. '_pattern' → logprob: -6.399506092071533
    10. 'patterns' → logprob: -6.524506092071533

Token 1610: 's' (ID: 82)
  Prédit: '_pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.3057746887207031
    2. '(' → logprob: -2.305774688720703
    3. 's' → logprob: -2.680774688720703
    4. '_choices' → logprob: -3.055774688720703
    5. '(
' → logprob: -4.180774688720703
    6. '_patterns' → logprob: -4.305774688720703
    7. 'pattern' → logprob: -5.180774688720703
    8. '   ' → logprob: -5.805774688720703
    9. '_choice' → logprob: -6.055774688720703
    10. '_' → logprob: -6.180774688720703

Token 1611: '(sign' (ID: 74775)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.26567578315734863
    2. '(' → logprob: -1.6406757831573486
    3. '(s' → logprob: -3.3906757831573486
    4. '(sign' → logprob: -5.6406755447387695
    5. '(
' → logprob: -6.3906755447387695
    6. ' (' → logprob: -8.26567554473877
    7. 'self' → logprob: -9.39067554473877
    8. 's' → logprob: -9.76567554473877
    9. '(i' → logprob: -10.26567554473877
    10. '       ' → logprob: -10.51567554473877

Token 1612: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001453090226277709
    2. '):' → logprob: -7.001452922821045
    3. ')' → logprob: -8.501453399658203
    4. ' s' → logprob: -9.501453399658203
    5. '_s' → logprob: -9.501453399658203
    6. '   ' → logprob: -10.251453399658203
    7. '):
' → logprob: -10.376453399658203
    8. ')s' → logprob: -10.876453399658203
    9. '_pattern' → logprob: -10.876453399658203
    10. '_choices' → logprob: -11.001453399658203

Token 1613: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5826951265335083
    2. '(sign' → logprob: -1.0826951265335083
    3. '(self' → logprob: -2.5826950073242188
    4. ',' → logprob: -4.457695007324219
    5. '):
' → logprob: -5.207695007324219
    6. '(lines' → logprob: -5.582695007324219
    7. ':' → logprob: -6.332695007324219
    8. '(' → logprob: -6.832695007324219
    9. '(s' → logprob: -6.957695007324219
    10. '(line' → logprob: -7.082695007324219

Token 1614: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.12649457156658173
    2. ' List' → logprob: -2.5014946460723877
    3. '[List' → logprob: -4.376494407653809
    4. ')' → logprob: -4.501494407653809
    5. 's' → logprob: -5.751494407653809
    6. 'def' → logprob: -6.001494407653809
    7. 'sign' → logprob: -6.376494407653809
    8. '(List' → logprob: -7.001494407653809
    9. '   ' → logprob: -7.251494407653809
    10. 'self' → logprob: -7.251494407653809

Token 1615: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -15.625
    3. '[' → logprob: -16.5
    4. '[
' → logprob: -17.0
    5. '```' → logprob: -17.5
    6. '   ' → logprob: -17.625
    7. '[Int' → logprob: -17.75
    8. '
' → logprob: -18.125
    9. '<int' → logprob: -18.75
    10. '=int' → logprob: -19.375

Token 1616: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0675022304058075
    2. '):
' → logprob: -2.94250226020813
    3. '])' → logprob: -4.567502021789551
    4. '):' → logprob: -7.192502021789551
    5. ',' → logprob: -7.442502021789551
    6. ']):
' → logprob: -8.19250202178955
    7. ' )' → logprob: -8.81750202178955
    8. '   ' → logprob: -8.94250202178955
    9. ']' → logprob: -8.94250202178955
    10. '):
' → logprob: -10.44250202178955

Token 1617: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01995626837015152
    2. ':
' → logprob: -4.269956111907959
    3. '       ' → logprob: -5.894956111907959
    4. '):' → logprob: -6.769956111907959
    5. '():' → logprob: -6.894956111907959
    6. ')' → logprob: -8.519956588745117
    7. '():
' → logprob: -8.644956588745117
    8. '(self' → logprob: -9.019956588745117
    9. '):
' → logprob: -9.144956588745117
    10. ':return' → logprob: -9.769956588745117

Token 1618: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.0006911090458743274
    2. ' Optional' → logprob: -7.750690937042236
    3. 'Tuple' → logprob: -8.375691413879395
    4. 'List' → logprob: -11.125691413879395
    5. 'None' → logprob: -11.250691413879395
    6. 'optional' → logprob: -13.875691413879395
    7. '   ' → logprob: -14.125691413879395
    8. '(Optional' → logprob: -15.750691413879395
    9. ' Tuple' → logprob: -16.000690460205078
    10. '	Optional' → logprob: -16.375690460205078

Token 1619: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001691727084107697
    2. '[List' → logprob: -6.626691818237305
    3. '[
' → logprob: -8.376691818237305
    4. '[np' → logprob: -9.751691818237305
    5. 'Point' → logprob: -10.251691818237305
    6. 'import' → logprob: -11.001691818237305
    7. '
' → logprob: -11.751691818237305
    8. ' Point' → logprob: -12.751691818237305
    9. 'Tuple' → logprob: -12.751691818237305
    10. '(Point' → logprob: -13.251691818237305

Token 1620: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.3133404850959778
    2. 'Tuple' → logprob: -1.313340425491333
    3. 'float' → logprob: -9.563340187072754
    4. 'List' → logprob: -12.813340187072754
    5. 'tuple' → logprob: -12.813340187072754
    6. '[' → logprob: -13.688340187072754
    7. ' Point' → logprob: -14.688340187072754
    8. ' Tuple' → logprob: -15.313340187072754
    9. '(Point' → logprob: -15.563340187072754
    10. 'complex' → logprob: -15.938340187072754

Token 1621: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7845329642295837
    2. '):
' → logprob: -0.9095329642295837
    3. ':' → logprob: -2.6595330238342285
    4. '():
' → logprob: -3.5345330238342285
    5. '):' → logprob: -3.9095330238342285
    6. '       ' → logprob: -4.1595330238342285
    7. ']:
' → logprob: -5.4095330238342285
    8. '   ' → logprob: -7.4095330238342285
    9. ']:' → logprob: -8.15953254699707
    10. '():' → logprob: -8.40953254699707

Token 1622: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017102824058383703
    2. '
' → logprob: -6.626710414886475
    3. '        
' → logprob: -8.376709938049316
    4. '           ' → logprob: -10.376709938049316
    5. '```' → logprob: -10.751709938049316
    6. '   ' → logprob: -10.751709938049316
    7. '        ' → logprob: -11.126709938049316
    8. ',' → logprob: -11.376709938049316
    9. ')' → logprob: -11.876709938049316
    10. '#' → logprob: -12.376709938049316

Token 1623: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5716927647590637
    2. '           ' → logprob: -1.321692705154419
    3. 'n' → logprob: -2.571692705154419
    4. 'import' → logprob: -3.071692705154419
    5. 'from' → logprob: -4.196692943572998
    6. '       ' → logprob: -4.946692943572998
    7. 'm' → logprob: -5.196692943572998
    8. '
' → logprob: -5.446692943572998
    9. 'a' → logprob: -5.821692943572998
    10. '#' (adapté à ' #') → logprob: -5.821692943572998

Token 1624: ' shape' (ID: 9591)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.19511821866035461
    2. 'import' → logprob: -2.1951181888580322
    3. 'from' → logprob: -2.9451181888580322
    4. 'size' → logprob: -5.195118427276611
    5. 'm' → logprob: -5.570118427276611
    6. '           ' → logprob: -6.695118427276611
    7. '#' → logprob: -6.820118427276611
    8. 'coeff' → logprob: -7.195118427276611
    9. 'n' → logprob: -7.570118427276611
    10. 'mat' → logprob: -9.820117950439453

Token 1625: ':' (ID: 25)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9483096599578857
    2. ' =' → logprob: -1.9483096599578857
    3. ':' → logprob: -2.1983096599578857
    4. ' (' → logprob: -2.4483096599578857
    5. ' n' → logprob: -2.5733096599578857
    6. 'n' → logprob: -2.6983096599578857
    7. '(n' → logprob: -3.5733096599578857
    8. '=' → logprob: -3.6983096599578857
    9. 'from' → logprob: -4.073309898376465
    10. '```' → logprob: -4.198309898376465

Token 1626: ' n' (ID: 297)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.39097529649734497
    2. '2' → logprob: -2.3909752368927
    3. 'from' → logprob: -2.6409752368927
    4. 'import' → logprob: -3.2659752368927
    5. 'm' → logprob: -3.6409752368927
    6. '(' → logprob: -3.7659752368927
    7. ' A' → logprob: -4.390975475311279
    8. '(A' → logprob: -4.640975475311279
    9. 'rows' → logprob: -4.890975475311279
    10. '           ' → logprob: -4.890975475311279

Token 1627: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23115669190883636
    2. '
' → logprob: -2.856156587600708
    3. ' -' → logprob: -2.981156587600708
    4. '           ' → logprob: -4.106156826019287
    5. '       ' → logprob: -4.231156826019287
    6. 'lines' → logprob: -4.231156826019287
    7. ' =' → logprob: -4.481156826019287
    8. ',' → logprob: -4.731156826019287
    9. '=' → logprob: -5.356156826019287
    10. ')' → logprob: -5.356156826019287

Token 1628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003983760252594948
    2. '           ' → logprob: -8.500398635864258
    3. '2' → logprob: -9.500398635864258
    4. 'n' → logprob: -10.625398635864258
    5. ' ' → logprob: -10.625398635864258
    6. '
' → logprob: -11.125398635864258
    7. '-' → logprob: -11.125398635864258
    8. '```' → logprob: -11.750398635864258
    9. ')' → logprob: -12.375398635864258
    10. ',' → logprob: -12.500398635864258

Token 1629: ' equations' (ID: 61524)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8661642670631409
    2. '
' → logprob: -1.616164207458496
    3. 'A' → logprob: -1.991164207458496
    4. ',' → logprob: -2.241164207458496
    5. ' lines' → logprob: -3.616164207458496
    6. 'x' → logprob: -3.741164207458496
    7. ')' → logprob: -3.991164207458496
    8. '           ' → logprob: -4.241164207458496
    9. ':' → logprob: -4.616164207458496
    10. '```' → logprob: -4.866164207458496

Token 1630: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7690674066543579
    2. ',' → logprob: -1.519067406654358
    3. 'import' → logprob: -1.894067406654358
    4. '
' → logprob: -2.6440672874450684
    5. 'x' → logprob: -3.1440672874450684
    6. ':' → logprob: -4.394067287445068
    7. ' lines' → logprob: -4.894067287445068
    8. 'A' → logprob: -5.144067287445068
    9. ':
' → logprob: -5.769067287445068
    10. ')' → logprob: -6.019067287445068

Token 1631: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007062846794724464
    2. ',' → logprob: -5.257062911987305
    3. 'import' → logprob: -7.257062911987305
    4. '       ' → logprob: -7.382062911987305
    5. '   ' → logprob: -9.382062911987305
    6. '		' → logprob: -9.882062911987305
    7. ' =' → logprob: -10.132062911987305
    8. ':' → logprob: -10.132062911987305
    9. '=' → logprob: -10.632062911987305
    10. '```' → logprob: -10.632062911987305

Token 1632: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5156784653663635
    2. 'import' → logprob: -1.0156784057617188
    3. 'A' → logprob: -3.2656784057617188
    4. 'from' → logprob: -6.390678405761719
    5. ' import' → logprob: -8.390678405761719
    6. 'n' → logprob: -8.515678405761719
    7. '
' → logprob: -8.765678405761719
    8. '```' → logprob: -9.890678405761719
    9. ' A' → logprob: -10.140678405761719
    10. '       ' → logprob: -10.140678405761719

Token 1633: ' Each' (ID: 11555)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.19786930084228516
    2. 'A' → logprob: -1.9478693008422852
    3. 'from' → logprob: -3.947869300842285
    4. '           ' → logprob: -4.072869300842285
    5. 'n' → logprob: -7.697869300842285
    6. '```' → logprob: -10.072869300842285
    7. 'size' → logprob: -10.197869300842285
    8. ' import' → logprob: -11.322869300842285
    9. 'rows' → logprob: -11.447869300842285
    10. '#' → logprob: -11.697869300842285

Token 1634: ' equation' (ID: 42006)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.9433553218841553
    2. 'A' → logprob: -1.3183553218841553
    3. 'i' → logprob: -1.8183553218841553
    4. 'sign' → logprob: -2.6933553218841553
    5. ' row' → logprob: -3.1933553218841553
    6. 'line' → logprob: -4.318355560302734
    7. '
' → logprob: -4.568355560302734
    8. '   ' → logprob: -4.818355560302734
    9. ' line' → logprob: -4.818355560302734
    10. ' A' → logprob: -5.443355560302734

Token 1635: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9629186391830444
    2. ' =' → logprob: -1.2129186391830444
    3. ' has' → logprob: -2.087918758392334
    4. '=' → logprob: -2.212918758392334
    5. '           ' → logprob: -3.712918758392334
    6. ' is' → logprob: -4.337918758392334
    7. 'has' → logprob: -4.337918758392334
    8. ',' → logprob: -4.462918758392334
    9. ':
' → logprob: -5.712918758392334
    10. 's' → logprob: -5.962918758392334

Token 1636: ' (' (ID: 350)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009988628327846527
    2. ' A' → logprob: -5.384988784790039
    3. 'import' → logprob: -6.009988784790039
    4. '           ' → logprob: -6.884988784790039
    5. 'from' → logprob: -7.384988784790039
    6. 'a' → logprob: -8.009988784790039
    7. 'coeff' → logprob: -8.259988784790039
    8. '               ' → logprob: -8.509988784790039
    9. 'rows' → logprob: -9.009988784790039
    10. '#' → logprob: -9.259988784790039

Token 1637: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6202187538146973
    2. 'A' → logprob: -0.9952187538146973
    3. '[A' → logprob: -2.9952187538146973
    4. 'sign' → logprob: -4.495218753814697
    5. '[' → logprob: -4.995218753814697
    6. '(A' → logprob: -5.495218753814697
    7. 'line' → logprob: -5.745218753814697
    8. 'i' → logprob: -5.995218753814697
    9. ' self' → logprob: -6.120218753814697
    10. '[self' → logprob: -6.245218753814697

Token 1638: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.016621213406324387
    2. 'i' → logprob: -4.641621112823486
    3. '_sign' → logprob: -5.891621112823486
    4. 'sign' → logprob: -6.266621112823486
    5. 's' → logprob: -8.141621589660645
    6. '
' → logprob: -8.141621589660645
    7. ')' → logprob: -8.266621589660645
    8. '_' → logprob: -8.641621589660645
    9. '_j' → logprob: -8.641621589660645
    10. '           ' → logprob: -8.891621589660645

Token 1639: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7280146479606628
    2. ' *' → logprob: -1.6030147075653076
    3. '+' → logprob: -2.3530147075653076
    4. ',' → logprob: -2.3530147075653076
    5. '*' → logprob: -3.1030147075653076
    6. 'sign' → logprob: -3.4780147075653076
    7. ')' → logprob: -4.1030144691467285
    8. ' ,' → logprob: -5.2280144691467285
    9. '```' → logprob: -5.2280144691467285
    10. '
' → logprob: -5.6030144691467285

Token 1640: ' s' (ID: 265)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.31611862778663635
    2. ' signs' → logprob: -1.316118597984314
    3. 's' → logprob: -6.5661187171936035
    4. ' s' → logprob: -7.3161187171936035
    5. ' sign' → logprob: -7.5661187171936035
    6. '(sign' → logprob: -9.066118240356445
    7. '   ' → logprob: -9.941118240356445
    8. ')' → logprob: -10.566118240356445
    9. ' ' → logprob: -11.316118240356445
    10. '	sign' → logprob: -11.941118240356445

Token 1641: '_i' (ID: 10853)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.7408581376075745
    2. '[i' → logprob: -1.2408580780029297
    3. 's' → logprob: -2.1158580780029297
    4. '_sign' → logprob: -3.2408580780029297
    5. 'igns' → logprob: -3.9908580780029297
    6. '_i' → logprob: -4.24085807800293
    7. '[' → logprob: -4.49085807800293
    8. ' signs' → logprob: -4.61585807800293
    9. 'i' → logprob: -5.11585807800293
    10. '           ' → logprob: -5.86585807800293

Token 1642: ' A' (ID: 355)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.42949336767196655
    2. ' *' → logprob: -1.3044934272766113
    3. '[i' → logprob: -2.6794934272766113
    4. '[' → logprob: -5.179493427276611
    5. ')' → logprob: -6.554493427276611
    6. '*i' → logprob: -7.179493427276611
    7. '   ' → logprob: -7.429493427276611
    8. ' ' → logprob: -9.179492950439453
    9. '*[' → logprob: -9.179492950439453
    10. '```' → logprob: -9.179492950439453

Token 1643: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03840532526373863
    2. '0' → logprob: -3.913405418395996
    3. '_i' → logprob: -4.163405418395996
    4. '[' → logprob: -7.788405418395996
    5. '_
' → logprob: -7.788405418395996
    6. ' _' → logprob: -8.538405418395996
    7. '
' → logprob: -8.663405418395996
    8. '[i' → logprob: -8.788405418395996
    9. ')' → logprob: -9.038405418395996
    10. ')_' → logprob: -9.163405418395996

Token 1644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009919608710333705
    2. '_' → logprob: -7.0009918212890625
    3. 'i' → logprob: -9.625991821289062
    4. '_i' → logprob: -11.625991821289062
    5. '[i' → logprob: -13.000991821289062
    6. '[' → logprob: -14.125991821289062
    7. '`' → logprob: -15.125991821289062
    8. '   ' → logprob: -15.375991821289062
    9. ' ' → logprob: -15.500991821289062
    10. '
' → logprob: -15.625991821289062

Token 1645: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003719199914485216
    2. ',' → logprob: -6.378719329833984
    3. ')*' → logprob: -6.753719329833984
    4. ')x' → logprob: -8.628719329833984
    5. '),' → logprob: -8.753719329833984
    6. ' )' → logprob: -9.003719329833984
    7. ')
' → logprob: -9.003719329833984
    8. '   ' → logprob: -9.753719329833984
    9. '           ' → logprob: -9.878719329833984
    10. '```' → logprob: -10.128719329833984

Token 1646: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5454565286636353
    2. ' x' → logprob: -1.4204565286636353
    3. ')' → logprob: -2.0454564094543457
    4. ')x' → logprob: -3.5454564094543457
    5. 'x' → logprob: -4.045456409454346
    6. ' ,' → logprob: -6.545456409454346
    7. '```' → logprob: -7.170456409454346
    8. '),' → logprob: -8.170456886291504
    9. '           ' → logprob: -8.670456886291504
    10. '*x' → logprob: -9.295456886291504

Token 1647: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12804079055786133
    2. '+' → logprob: -2.1280407905578613
    3. '           ' → logprob: -7.128040790557861
    4. ')' → logprob: -9.128040313720703
    5. '```' → logprob: -9.378040313720703
    6. '            ' → logprob: -9.753040313720703
    7. '
' → logprob: -11.253040313720703
    8. '               ' → logprob: -11.503040313720703
    9. ')+' → logprob: -11.878040313720703
    10. ',' → logprob: -11.878040313720703

Token 1648: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.016967371106147766
    2. '(' → logprob: -4.516967296600342
    3. ' (' → logprob: -5.141967296600342
    4. '(sign' → logprob: -11.5169677734375
    5. 's' → logprob: -11.6419677734375
    6. '           ' → logprob: -11.6419677734375
    7. '(s' → logprob: -12.3919677734375
    8. 'sign' → logprob: -12.3919677734375
    9. '(
' → logprob: -12.5169677734375
    10. '
' → logprob: -13.1419677734375

Token 1649: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006083918735384941
    2. '(B' → logprob: -5.131083965301514
    3. 'sign' → logprob: -9.881083488464355
    4. ' B' → logprob: -11.006083488464355
    5. 'self' → logprob: -11.256083488464355
    6. '(' → logprob: -11.381083488464355
    7. '           ' → logprob: -11.381083488464355
    8. '(sign' → logprob: -11.506083488464355
    9. '	B' → logprob: -11.631083488464355
    10. 's' → logprob: -12.131083488464355

Token 1650: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0005230080569162965
    2. '_' → logprob: -8.25052261352539
    3. '_j' → logprob: -9.12552261352539
    4. ')_' → logprob: -10.37552261352539
    5. 'i' → logprob: -10.50052261352539
    6. ')' → logprob: -10.87552261352539
    7. ',' → logprob: -10.87552261352539
    8. '
' → logprob: -11.50052261352539
    9. '_
' → logprob: -11.75052261352539
    10. '_,' → logprob: -12.12552261352539

Token 1651: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061596743762493134
    2. '_i' → logprob: -3.561596632003784
    3. ' +' → logprob: -3.561596632003784
    4. '[' → logprob: -7.561596870422363
    5. '
' → logprob: -7.561596870422363
    6. '```' → logprob: -7.561596870422363
    7. '+i' → logprob: -7.686596870422363
    8. '_' → logprob: -8.186596870422363
    9. '+
' → logprob: -8.436596870422363
    10. ')' → logprob: -8.936596870422363

Token 1652: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00029518234077841043
    2. ' s' → logprob: -8.250295639038086
    3. 'sign' → logprob: -10.625295639038086
    4. '   ' → logprob: -13.125295639038086
    5. '(s' → logprob: -13.750295639038086
    6. '
' → logprob: -14.000295639038086
    7. '```' → logprob: -14.250295639038086
    8. 'si' → logprob: -14.625295639038086
    9. 'i' → logprob: -14.625295639038086
    10. '(' → logprob: -14.875295639038086

Token 1653: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0008129627676680684
    2. 'i' → logprob: -7.125813007354736
    3. '[i' → logprob: -12.125812530517578
    4. '[' → logprob: -13.750812530517578
    5. 'sign' → logprob: -14.125812530517578
    6. '```' → logprob: -14.625812530517578
    7. '_sign' → logprob: -15.500812530517578
    8. 's' → logprob: -16.125812530517578
    9. '   ' → logprob: -16.375812530517578
    10. '_' → logprob: -16.500812530517578

Token 1654: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10707796365022659
    2. ' B' → logprob: -3.2320780754089355
    3. '_i' → logprob: -3.4820780754089355
    4. '0' → logprob: -4.4820780754089355
    5. 's' → logprob: -4.8570780754089355
    6. 'i' → logprob: -4.8570780754089355
    7. ' ' → logprob: -6.8570780754089355
    8. '_' → logprob: -7.1070780754089355
    9. '   ' → logprob: -7.2320780754089355
    10. '```' → logprob: -7.9820780754089355

Token 1655: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47858157753944397
    2. '_i' → logprob: -0.9785815477371216
    3. '0' → logprob: -5.478581428527832
    4. 'i' → logprob: -9.103581428527832
    5. '[' → logprob: -9.603581428527832
    6. '[i' → logprob: -9.853581428527832
    7. '```' → logprob: -10.478581428527832
    8. ')' → logprob: -11.728581428527832
    9. ')_' → logprob: -11.978581428527832
    10. '   ' → logprob: -12.228581428527832

Token 1656: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22621214389801025
    2. '_' → logprob: -1.6012121438980103
    3. '_i' → logprob: -7.351212024688721
    4. 'i' → logprob: -9.351212501525879
    5. '[' → logprob: -10.976212501525879
    6. ')' → logprob: -11.351212501525879
    7. 'def' → logprob: -12.476212501525879
    8. 'n' → logprob: -12.476212501525879
    9. 'o' → logprob: -12.601212501525879
    10. '   ' → logprob: -12.601212501525879

Token 1657: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021620409097522497
    2. ' y' → logprob: -7.252161979675293
    3. ')y' → logprob: -7.252161979675293
    4. ' )' → logprob: -7.377161979675293
    5. 'y' → logprob: -9.627161979675293
    6. '")' → logprob: -10.752161979675293
    7. '```' → logprob: -12.502161979675293
    8. 'def' → logprob: -12.752161979675293
    9. ')*' → logprob: -12.877161979675293
    10. ')
' → logprob: -13.127161979675293

Token 1658: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5778456330299377
    2. '+' → logprob: -1.577845573425293
    3. ')' → logprob: -2.202845573425293
    4. ' +' → logprob: -2.952845573425293
    5. '           ' → logprob: -3.452845573425293
    6. 'y' → logprob: -3.827845573425293
    7. ',' → logprob: -5.202845573425293
    8. '```' → logprob: -6.202845573425293
    9. ' ' → logprob: -6.452845573425293
    10. ')y' → logprob: -6.702845573425293

Token 1659: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15961672365665436
    2. ' +' → logprob: -2.284616708755493
    3. '+' → logprob: -3.284616708755493
    4. '```' → logprob: -5.534616947174072
    5. 'import' → logprob: -6.909616947174072
    6. '            ' → logprob: -7.159616947174072
    7. ',' → logprob: -7.284616947174072
    8. '          ' → logprob: -8.034616470336914
    9. ')' → logprob: -8.159616470336914
    10. ' ' → logprob: -8.784616470336914

Token 1660: ' (' (ID: 350)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.6426911354064941
    2. ' (' → logprob: -0.7676911354064941
    3. '(B' → logprob: -4.642691135406494
    4. '(' → logprob: -8.892690658569336
    5. ' ' → logprob: -9.142690658569336
    6. '           ' → logprob: -10.267690658569336
    7. 's' → logprob: -10.267690658569336
    8. '   ' → logprob: -10.892690658569336
    9. '               ' → logprob: -11.642690658569336
    10. '(A' → logprob: -11.642690658569336

Token 1661: 'C' (ID: 34)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -1.0031907558441162
    2. 's' → logprob: -1.1281907558441162
    3. 'C' → logprob: -1.5031907558441162
    4. 'sign' → logprob: -2.503190755844116
    5. '(' → logprob: -6.628190994262695
    6. '[C' → logprob: -7.128190994262695
    7. ' (' → logprob: -7.878190994262695
    8. '   ' → logprob: -8.003190994262695
    9. '(sign' → logprob: -8.128190994262695
    10. '[' → logprob: -8.253190994262695

Token 1662: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.001145337475463748
    2. '_' → logprob: -7.126145362854004
    3. ')_' → logprob: -8.876145362854004
    4. ')' → logprob: -9.376145362854004
    5. '[' → logprob: -10.751145362854004
    6. 'i' → logprob: -11.001145362854004
    7. '[i' → logprob: -11.251145362854004
    8. '```' → logprob: -11.501145362854004
    9. '_
' → logprob: -11.626145362854004
    10. '   ' → logprob: -12.001145362854004

Token 1663: ' +' (ID: 659)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.024080708622932434
    2. '+' → logprob: -4.274080753326416
    3. '[i' → logprob: -5.024080753326416
    4. '```' → logprob: -7.024080753326416
    5. '+i' → logprob: -7.149080753326416
    6. 'i' → logprob: -7.399080753326416
    7. '[' → logprob: -8.274080276489258
    8. ' +' → logprob: -8.524080276489258
    9. '_plus' → logprob: -8.774080276489258
    10. ')' → logprob: -9.399080276489258

Token 1664: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11497578769922256
    2. 'sign' → logprob: -2.239975690841675
    3. ' s' → logprob: -6.614975929260254
    4. ' signs' → logprob: -7.739975929260254
    5. ' sign' → logprob: -8.739975929260254
    6. '(sign' → logprob: -9.114975929260254
    7. '```' → logprob: -10.864975929260254
    8. '(s' → logprob: -10.989975929260254
    9. '
' → logprob: -11.489975929260254
    10. ')' → logprob: -11.489975929260254

Token 1665: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0005572011577896774
    2. '_sign' → logprob: -8.500556945800781
    3. '[i' → logprob: -8.750556945800781
    4. 'i' → logprob: -9.500556945800781
    5. 'sign' → logprob: -9.875556945800781
    6. 's' → logprob: -10.375556945800781
    7. '[' → logprob: -11.875556945800781
    8. ')' → logprob: -11.875556945800781
    9. 'Signs' → logprob: -12.250556945800781
    10. '```' → logprob: -12.250556945800781

Token 1666: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3476751148700714
    2. ' C' → logprob: -1.472675085067749
    3. '_' → logprob: -3.597675085067749
    4. '_i' → logprob: -4.347675323486328
    5. '_C' → logprob: -4.472675323486328
    6. 'sign' → logprob: -6.222675323486328
    7. ' _' → logprob: -6.472675323486328
    8. 's' → logprob: -6.597675323486328
    9. ')' → logprob: -6.597675323486328
    10. '
' → logprob: -6.722675323486328

Token 1667: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.053312741219997406
    2. '0' → logprob: -3.3033127784729004
    3. '_i' → logprob: -4.3033127784729
    4. '[' → logprob: -6.9283127784729
    5. '[i' → logprob: -8.178312301635742
    6. '```' → logprob: -9.053312301635742
    7. ')_' → logprob: -9.928312301635742
    8. 'i' → logprob: -10.053312301635742
    9. ')' → logprob: -10.303312301635742
    10. '_
' → logprob: -10.928312301635742

Token 1668: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231568813323975
    2. '_' → logprob: -0.8981568813323975
    3. ')' → logprob: -11.773157119750977
    4. '
' → logprob: -12.898157119750977
    5. '[' → logprob: -13.023157119750977
    6. '```' → logprob: -13.023157119750977
    7. 'def' → logprob: -13.148157119750977
    8. 'C' → logprob: -13.335657119750977
    9. '_
' → logprob: -13.460657119750977
    10. ' ' → logprob: -13.523157119750977

Token 1669: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006134323193691671
    2. ')=' → logprob: -8.00061321258545
    3. '=' → logprob: -8.87561321258545
    4. ' )' → logprob: -10.00061321258545
    5. '")' → logprob: -10.50061321258545
    6. ' =' → logprob: -10.87561321258545
    7. ')
' → logprob: -11.12561321258545
    8. '           ' → logprob: -11.25061321258545
    9. '   ' → logprob: -12.87561321258545
    10. '))' → logprob: -13.12561321258545

Token 1670: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5844494700431824
    2. ' =' → logprob: -1.0844495296478271
    3. '           ' → logprob: -2.834449529647827
    4. ')' → logprob: -3.459449529647827
    5. '):
' → logprob: -6.084449291229248
    6. '
' → logprob: -6.209449291229248
    7. ':' → logprob: -6.209449291229248
    8. 'import' → logprob: -6.709449291229248
    9. '       ' → logprob: -6.834449291229248
    10. '):' → logprob: -6.834449291229248

Token 1671: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0486673079431057
    2. ' ' → logprob: -3.0486671924591064
    3. '
' → logprob: -10.548666954040527
    4. '   ' → logprob: -11.048666954040527
    5. '[' → logprob: -11.673666954040527
    6. '```' → logprob: -12.486166954040527
    7. '  ' → logprob: -12.673666954040527
    8. '=' → logprob: -12.736166954040527
    9. ')' → logprob: -13.236166954040527
    10. '    ' → logprob: -13.236166954040527

Token 1672: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016064636409282684
    2. ' ' → logprob: -4.141064643859863
    3. '
' → logprob: -12.266064643859863
    4. 'sign' → logprob: -12.641064643859863
    5. '   ' → logprob: -12.766064643859863
    6. '=' → logprob: -13.016064643859863
    7. 'float' → logprob: -13.016064643859863
    8. '[' → logprob: -13.141064643859863
    9. ' float' → logprob: -13.516064643859863
    10. 's' → logprob: -13.703564643859863

Token 1673: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23577266931533813
    2. '           ' → logprob: -1.6107726097106934
    3. '\n' → logprob: -5.735772609710693
    4. '       ' → logprob: -6.110772609710693
    5. 'import' → logprob: -6.860772609710693
    6. '```' → logprob: -7.360772609710693
    7. '
' → logprob: -7.485772609710693
    8. ':' → logprob: -7.610772609710693
    9. '            
' → logprob: -7.610772609710693
    10. ':
' → logprob: -7.985772609710693

Token 1674: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.285370409488678
    2. '       ' → logprob: -1.7853703498840332
    3. '
' → logprob: -2.535370349884033
    4. '        
' → logprob: -7.785370349884033
    5. '```' → logprob: -8.410370826721191
    6. 'import' → logprob: -8.910370826721191
    7. '		' → logprob: -9.035370826721191
    8. '   ' → logprob: -9.785370826721191
    9. '\n' → logprob: -9.785370826721191
    10. '    
' → logprob: -9.785370826721191

Token 1675: ' A' (ID: 355)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1299860179424286
    2. 'A' (adapté à ' A') → logprob: -2.379986047744751
    3. 'import' → logprob: -4.379985809326172
    4. '       ' → logprob: -4.504985809326172
    5. ' A' → logprob: -5.754985809326172
    6. '
' → logprob: -6.754985809326172
    7. 'from' → logprob: -7.879985809326172
    8. 'n' → logprob: -8.254985809326172
    9. '   ' → logprob: -8.254985809326172
    10. ' lines' → logprob: -8.629985809326172

Token 1676: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02142767608165741
    2. '=' → logprob: -4.771427631378174
    3. 's' → logprob: -4.771427631378174
    4. '_matrix' → logprob: -6.271427631378174
    5. '_rows' → logprob: -6.771427631378174
    6. '_mat' → logprob: -7.896427631378174
    7. 'import' → logprob: -8.771428108215332
    8. ',' → logprob: -9.771428108215332
    9. '_list' → logprob: -9.771428108215332
    10. '_coeff' → logprob: -9.771428108215332

Token 1677: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8337211608886719
    2. ',' → logprob: -0.9587211608886719
    3. '=' → logprob: -1.7087211608886719
    4. 's' → logprob: -7.458721160888672
    5. ',A' → logprob: -9.708721160888672
    6. 'import' → logprob: -9.833721160888672
    7. '_,' → logprob: -10.083721160888672
    8. ')' → logprob: -10.208721160888672
    9. '=A' → logprob: -10.208721160888672
    10. '```' → logprob: -10.583721160888672

Token 1678: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02404102124273777
    2. 'self' → logprob: -3.774040937423706
    3. ' self' → logprob: -7.774041175842285
    4. ' B' → logprob: -8.024041175842285
    5. 'b' → logprob: -10.649041175842285
    6. 'A' → logprob: -11.274041175842285
    7. '       ' → logprob: -12.649041175842285
    8. '           ' → logprob: -12.899041175842285
    9. '   ' → logprob: -13.149041175842285
    10. '    ' → logprob: -14.649041175842285

Token 1679: '0' (ID: 15)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02843998186290264
    2. '0' → logprob: -3.903439998626709
    3. ',' → logprob: -5.028439998626709
    4. '_,' → logprob: -6.903439998626709
    5. ',_' → logprob: -9.40343952178955
    6. ' _' → logprob: -9.65343952178955
    7. ' =' → logprob: -9.65343952178955
    8. '_
' → logprob: -9.77843952178955
    9. '=' → logprob: -11.65343952178955
    10. '
' → logprob: -11.90343952178955

Token 1680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2589229941368103
    2. '=' → logprob: -1.508923053741455
    3. ' =' → logprob: -5.008923053741455
    4. ')' → logprob: -9.758922576904297
    5. ' ,' → logprob: -9.758922576904297
    6. '0' → logprob: -10.133922576904297
    7. ',
' → logprob: -10.508922576904297
    8. '<|end|>' → logprob: -10.758922576904297
    9. '=
' → logprob: -11.258922576904297
    10. ',A' → logprob: -11.258922576904297

Token 1681: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0314224548637867
    2. ' C' → logprob: -3.6564223766326904
    3. 'self' → logprob: -5.5314226150512695
    4. ' self' → logprob: -6.7814226150512695
    5. ' =' → logprob: -12.65642261505127
    6. '=C' → logprob: -12.90642261505127
    7. ' ' → logprob: -13.40642261505127
    8. 'c' → logprob: -13.65642261505127
    9. '_C' → logprob: -14.03142261505127
    10. ',C' → logprob: -14.28142261505127

Token 1682: '0' (ID: 15)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003075871616601944
    2. '0' → logprob: -6.628076076507568
    3. ' =' → logprob: -6.753076076507568
    4. '=' → logprob: -7.628076076507568
    5. '_=' → logprob: -10.00307559967041
    6. '_
' → logprob: -10.87807559967041
    7. '=_' → logprob: -11.25307559967041
    8. ' _' → logprob: -12.25307559967041
    9. '_i' → logprob: -13.00307559967041
    10. '_,' → logprob: -13.25307559967041

Token 1683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38692528009414673
    2. ' =' → logprob: -1.136925220489502
    3. ')' → logprob: -10.51192569732666
    4. ',' → logprob: -10.76192569732666
    5. '=
' → logprob: -13.01192569732666
    6. ' =
' → logprob: -14.38692569732666
    7. ' ' → logprob: -14.88692569732666
    8. ')=' → logprob: -15.01192569732666
    9. ' ' → logprob: -15.26192569732666
    10. '_' → logprob: -15.26192569732666

Token 1684: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.016208916902542114
    2. ' base' → logprob: -4.391209125518799
    3. '(base' → logprob: -6.141209125518799
    4. 'self' → logprob: -6.516209125518799
    5. ' self' → logprob: -9.89120864868164
    6. '   ' → logprob: -12.51620864868164
    7. '	base' → logprob: -12.76620864868164
    8. '(self' → logprob: -13.76620864868164
    9. ' (' → logprob: -14.14120864868164
    10. '-base' → logprob: -15.26620864868164

Token 1685: '._' (ID: 2697)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.036343883723020554
    2. '._' → logprob: -3.411343812942505
    3. '_' → logprob: -7.536344051361084
    4. ' =' → logprob: -7.786344051361084
    5. '
' → logprob: -8.161343574523926
    6. '.A' → logprob: -8.161343574523926
    7. 'x' → logprob: -8.661343574523926
    8. 'tokens' → logprob: -9.161343574523926
    9. '=_' → logprob: -9.161343574523926
    10. 'A' → logprob: -9.286343574523926

Token 1686: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: 0.0
    2. 'C' → logprob: -17.375
    3. '_A' → logprob: -18.125
    4. ' A' → logprob: -18.625
    5. 'normalize' → logprob: -20.0
    6. '
' → logprob: -20.75
    7. '  ' → logprob: -20.75
    8. 'a' → logprob: -21.0
    9. '   ' → logprob: -21.125
    10. '```' → logprob: -21.875

Token 1687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008182040764950216
    2. ' ,' → logprob: -7.625818252563477
    3. '
' → logprob: -8.875818252563477
    4. ',
' → logprob: -9.375818252563477
    5. '<|end|>' → logprob: -10.375818252563477
    6. '```' → logprob: -11.000818252563477
    7. '            
' → logprob: -11.625818252563477
    8. ',A' → logprob: -11.750818252563477
    9. '           ' → logprob: -11.750818252563477
    10. '#' → logprob: -12.625818252563477

Token 1688: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.011382846161723137
    2. ' base' → logprob: -4.511383056640625
    3. 'self' → logprob: -8.011383056640625
    4. ' self' → logprob: -12.886383056640625
    5. '	base' → logprob: -14.761383056640625
    6. '(base' → logprob: -15.511383056640625
    7. '_base' → logprob: -17.011383056640625
    8. ' ' → logprob: -17.261383056640625
    9. '   ' → logprob: -17.511383056640625
    10. '           ' → logprob: -17.636383056640625

Token 1689: '._' (ID: 2697)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.0785919725894928
    2. '_' → logprob: -2.95359206199646
    3. '_A' → logprob: -4.453591823577881
    4. ' _' → logprob: -5.203591823577881
    5. '0' → logprob: -5.953591823577881
    6. '   ' → logprob: -6.828591823577881
    7. ',' → logprob: -7.203591823577881
    8. '._' → logprob: -7.703591823577881
    9. '_C' → logprob: -7.703591823577881
    10. ' ' → logprob: -7.953591823577881

Token 1690: 'B' (ID: 33)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3868745267391205
    2. 'B' → logprob: -1.1368745565414429
    3. '0' → logprob: -13.261874198913574
    4. '_C' → logprob: -14.011874198913574
    5. '_B' → logprob: -14.636874198913574
    6. 'A' → logprob: -15.511874198913574
    7. ' C' → logprob: -16.13687515258789
    8. ' B' → logprob: -16.63687515258789
    9. '```' → logprob: -17.13687515258789
    10. '
' → logprob: -17.63687515258789

Token 1691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006191504653543234
    2. '0' → logprob: -8.250618934631348
    3. ' ,' → logprob: -8.375618934631348
    4. '_,' → logprob: -10.375618934631348
    5. '```' → logprob: -10.500618934631348
    6. ' ' → logprob: -11.125618934631348
    7. '
' → logprob: -11.250618934631348
    8. '           ' → logprob: -11.750618934631348
    9. '_' → logprob: -11.875618934631348
    10. ',
' → logprob: -12.000618934631348

Token 1692: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.014163863845169544
    2. ' base' → logprob: -4.264163970947266
    3. 'self' → logprob: -15.764163970947266
    4. '(base' → logprob: -15.889163970947266
    5. '	base' → logprob: -17.264163970947266
    6. '_base' → logprob: -17.764163970947266
    7. '
' → logprob: -18.514163970947266
    8. '.base' → logprob: -20.389163970947266
    9. '-base' → logprob: -20.389163970947266
    10. 'bases' → logprob: -20.514163970947266

Token 1693: '._' (ID: 2697)
  Prédit: '_C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.056262534111738205
    2. '_' → logprob: -3.056262493133545
    3. '0' → logprob: -4.931262493133545
    4. ',' → logprob: -8.681262969970703
    5. '_A' → logprob: -9.056262969970703
    6. '```' → logprob: -10.306262969970703
    7. '_,' → logprob: -10.681262969970703
    8. ' _' → logprob: -11.556262969970703
    9. '_
' → logprob: -11.556262969970703
    10. '
' → logprob: -11.681262969970703

Token 1694: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -5.676981345459353e-06
    2. '_C' → logprob: -12.125005722045898
    3. ' C' → logprob: -17.0000057220459
    4. 'c' → logprob: -17.3750057220459
    5. '0' → logprob: -17.8750057220459
    6. '```' → logprob: -18.1250057220459
    7. '
' → logprob: -18.2500057220459
    8. '_c' → logprob: -18.3750057220459
    9. '	C' → logprob: -19.0000057220459
    10. 'С' → logprob: -19.7500057220459

Token 1695: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048453137278556824
    2. '
' → logprob: -3.5484530925750732
    3. 'import' → logprob: -5.548453330993652
    4. '<|end|>' → logprob: -5.923453330993652
    5. 'A' → logprob: -6.173453330993652
    6. ' lines' → logprob: -6.548453330993652
    7. ',' → logprob: -6.798453330993652
    8. '            
' → logprob: -6.798453330993652
    9. 'tokens' → logprob: -7.298453330993652
    10. 'x' → logprob: -7.423453330993652

Token 1696: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01301327534019947
    2. 'A' → logprob: -5.0130133628845215
    3. '       ' → logprob: -6.0130133628845215
    4. 'import' → logprob: -6.5130133628845215
    5. '```' → logprob: -7.5130133628845215
    6. ' lines' → logprob: -7.7630133628845215
    7. 'n' → logprob: -7.8880133628845215
    8. ' A' → logprob: -8.888012886047363
    9. '   ' → logprob: -8.888012886047363
    10. 'x' → logprob: -9.013012886047363

Token 1697: ' rows' (ID: 13585)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.024738935753703117
    2. 'import' → logprob: -4.399738788604736
    3. '           ' → logprob: -5.399738788604736
    4. '       ' → logprob: -6.524738788604736
    5. 'rows' (adapté à ' rows') → logprob: -6.524738788604736
    6. 'n' → logprob: -6.649738788604736
    7. 'from' → logprob: -7.149738788604736
    8. 'coeff' → logprob: -7.149738788604736
    9. 'a' → logprob: -7.399738788604736
    10. 'M' → logprob: -8.149739265441895

Token 1698: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3517731726169586
    2. '=' → logprob: -1.2267731428146362
    3. '=[]' → logprob: -6.101773262023926
    4. ':' → logprob: -8.476773262023926
    5. ')' → logprob: -8.726773262023926
    6. '=[]
' → logprob: -8.851773262023926
    7. '           ' → logprob: -8.851773262023926
    8. '.append' → logprob: -9.351773262023926
    9. ',' → logprob: -9.851773262023926
    10. '       ' → logprob: -9.976773262023926

Token 1699: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0408126637339592
    2. '[]
' → logprob: -3.2908127307891846
    3. '[n' → logprob: -6.2908124923706055
    4. 'n' → logprob: -7.2908124923706055
    5. ' []' → logprob: -8.540812492370605
    6. ' []
' → logprob: -11.665812492370605
    7. '[
' → logprob: -11.665812492370605
    8. '[]

' → logprob: -12.290812492370605
    9. '[[' → logprob: -12.665812492370605
    10. '[][]' → logprob: -13.165812492370605

Token 1700: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015028739348053932
    2. 'for' → logprob: -4.515028953552246
    3. ' for' → logprob: -6.265028953552246
    4. '       ' → logprob: -6.390028953552246
    5. '   ' → logprob: -8.015028953552246
    6. '	   ' → logprob: -11.265028953552246
    7. '[' → logprob: -11.640028953552246
    8. '               ' → logprob: -12.140028953552246
    9. '	       ' → logprob: -12.140028953552246
    10. '		' → logprob: -12.140028953552246

Token 1701: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008582198061048985
    2. '           ' → logprob: -7.500858306884766
    3. ' for' → logprob: -8.125858306884766
    4. '       ' → logprob: -12.500858306884766
    5. 'cols' → logprob: -13.000858306884766
    6. '```' → logprob: -13.750858306884766
    7. '   ' → logprob: -14.375858306884766
    8. 'from' → logprob: -14.625858306884766
    9. '
' → logprob: -15.000858306884766
    10. 'A' → logprob: -15.125858306884766

Token 1702: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000714935187716037
    2. ' i' → logprob: -7.2507147789001465
    3. '   ' → logprob: -12.500715255737305
    4. '	i' → logprob: -14.125715255737305
    5. '```' → logprob: -16.125715255737305
    6. '_i' → logprob: -16.375715255737305
    7. '       ' → logprob: -16.375715255737305
    8. ' ' → logprob: -16.625715255737305
    9. 'idx' → logprob: -17.125715255737305
    10. '  ' → logprob: -17.250715255737305

Token 1703: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38823461532592773
    2. 'in' → logprob: -1.2632346153259277
    3. ' i' → logprob: -3.5132346153259277
    4. 'i' → logprob: -5.263234615325928
    5. '=' → logprob: -6.638234615325928
    6. '1' → logprob: -7.138234615325928
    7. ' ' → logprob: -7.763234615325928
    8. '	in' → logprob: -8.263235092163086
    9. '	i' → logprob: -9.013235092163086
    10. '0' → logprob: -9.013235092163086

Token 1704: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04364563897252083
    2. 'sign' → logprob: -3.1686456203460693
    3. 'si' → logprob: -7.418645858764648
    4. ' s' → logprob: -10.668645858764648
    5. 'sig' → logprob: -11.668645858764648
    6. '(s' → logprob: -12.293645858764648
    7. '(sign' → logprob: -13.543645858764648
    8. '   ' → logprob: -13.668645858764648
    9. '(' → logprob: -13.793645858764648
    10. 'sg' → logprob: -13.918645858764648

Token 1705: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05291968956589699
    2. ' in' → logprob: -3.427919626235962
    3. 's' → logprob: -4.927919864654541
    4. 'i' → logprob: -5.802919864654541
    5. 'n' → logprob: -5.802919864654541
    6. '_i' → logprob: -6.052919864654541
    7. ',' → logprob: -6.552919864654541
    8. '_' → logprob: -7.177919864654541
    9. 'sign' → logprob: -8.177919387817383
    10. ')' → logprob: -8.302919387817383

Token 1706: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.14650845527648926
    2. ' enumerate' → logprob: -2.0215084552764893
    3. '[(' → logprob: -5.64650821685791
    4. '(' → logprob: -8.64650821685791
    5. '((' → logprob: -10.14650821685791
    6. 'range' → logprob: -10.64650821685791
    7. ' [(' → logprob: -10.64650821685791
    8. '[' → logprob: -11.39650821685791
    9. '([(' → logprob: -11.77150821685791
    10. '[
' → logprob: -12.39650821685791

Token 1707: '(sign' (ID: 74775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1754572093486786
    2. 'self' → logprob: -3.300457239151001
    3. '[self' → logprob: -3.550457239151001
    4. '(sign' → logprob: -3.550457239151001
    5. 'sign' → logprob: -3.675457239151001
    6. '(self' → logprob: -4.050457000732422
    7. 'range' → logprob: -4.800457000732422
    8. ' [' → logprob: -5.050457000732422
    9. '(' → logprob: -5.800457000732422
    10. '([' → logprob: -6.425457000732422

Token 1708: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01325176190584898
    2. '[' → logprob: -4.513251781463623
    3. '):
' → logprob: -7.888251781463623
    4. '[-' → logprob: -8.263251304626465
    5. '   ' → logprob: -8.638251304626465
    6. ')' → logprob: -8.763251304626465
    7. '=[' → logprob: -8.888251304626465
    8. '       ' → logprob: -9.013251304626465
    9. '([' → logprob: -9.138251304626465
    10. ']' → logprob: -9.263251304626465

Token 1709: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16323480010032654
    2. '):' → logprob: -2.5382347106933594
    3. ',' → logprob: -3.6632347106933594
    4. '           ' → logprob: -4.413234710693359
    5. '[i' → logprob: -4.913234710693359
    6. '[' → logprob: -5.288234710693359
    7. '       ' → logprob: -5.663234710693359
    8. ':' → logprob: -6.038234710693359
    9. '(i' → logprob: -6.288234710693359
    10. ',i' → logprob: -6.288234710693359

Token 1710: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1673455536365509
    2. 'start' → logprob: -1.9173455238342285
    3. ' start' → logprob: -5.4173455238342285
    4. ' ' → logprob: -6.5423455238342285
    5. 'i' → logprob: -7.5423455238342285
    6. '           ' → logprob: -7.9173455238342285
    7. '):
' → logprob: -9.917346000671387
    8. ' i' → logprob: -10.042346000671387
    9. '0' → logprob: -10.167346000671387
    10. ')' → logprob: -10.292346000671387

Token 1711: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006029992830008268
    2. 'start' → logprob: -5.131030082702637
    3. 'i' → logprob: -10.131030082702637
    4. ' ' → logprob: -10.506030082702637
    5. ' start' → logprob: -10.881030082702637
    6. '0' → logprob: -12.131030082702637
    7. ')' → logprob: -12.506030082702637
    8. '   ' → logprob: -12.631030082702637
    9. '       ' → logprob: -15.006030082702637
    10. 'lambda' → logprob: -15.131030082702637

Token 1712: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029345301911234856
    2. '):' → logprob: -3.6543452739715576
    3. '           ' → logprob: -6.279345512390137
    4. '):
' → logprob: -7.404345512390137
    5. ':' → logprob: -8.279345512390137
    6. ':
' → logprob: -8.654345512390137
    7. '       ' → logprob: -9.654345512390137
    8. '               ' → logprob: -10.654345512390137
    9. ',' → logprob: -11.154345512390137
    10. ')' → logprob: -11.904345512390137

Token 1713: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029638128355145454
    2. '           ' → logprob: -4.154638290405273
    3. ':' → logprob: -4.779638290405273
    4. '[' → logprob: -6.154638290405273
    5. '            ' → logprob: -7.029638290405273
    6. '```' → logprob: -7.779638290405273
    7. ',' → logprob: -8.154638290405273
    8. ' [' → logprob: -8.404638290405273
    9. ':
' → logprob: -9.154638290405273
    10. '              ' → logprob: -9.404638290405273

Token 1714: ' li' (ID: 3476)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8601568341255188
    2. 'line' → logprob: -0.9851568341255188
    3. 'Ai' → logprob: -2.485156774520874
    4. '               ' → logprob: -2.860156774520874
    5. '                   ' → logprob: -3.360156774520874
    6. 'Li' → logprob: -4.610157012939453
    7. 'li' (adapté à ' li') → logprob: -5.110157012939453
    8. '   ' → logprob: -5.860157012939453
    9. ' A' → logprob: -6.110157012939453
    10. 'l' → logprob: -6.110157012939453

Token 1715: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3157719373703003
    2. ' =' → logprob: -1.3157719373703003
    3. 'ne' → logprob: -6.31577205657959
    4. '=line' → logprob: -8.06577205657959
    5. 'ine' → logprob: -8.69077205657959
    6. '   ' → logprob: -8.81577205657959
    7. '       ' → logprob: -10.81577205657959
    8. 'n' → logprob: -10.94077205657959
    9. '           ' → logprob: -12.06577205657959
    10. '=self' → logprob: -12.31577205657959

Token 1716: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008143932209350169
    2. ' self' → logprob: -7.125814437866211
    3. '           ' → logprob: -12.375814437866211
    4. '               ' → logprob: -12.375814437866211
    5. '                   ' → logprob: -13.875814437866211
    6. '   ' → logprob: -15.750814437866211
    7. '       ' → logprob: -16.12581443786621
    8. '(self' → logprob: -16.12581443786621
    9. ' ' → logprob: -17.00081443786621
    10. '	self' → logprob: -17.50081443786621

Token 1717: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.016454724594950676
    2. 'lines' → logprob: -4.141454696655273
    3. '.' → logprob: -8.016454696655273
    4. ' lines' → logprob: -10.516454696655273
    5. '.
' → logprob: -11.266454696655273
    6. '(lines' → logprob: -11.641454696655273
    7. '	lines' → logprob: -11.641454696655273
    8. '.l' → logprob: -12.016454696655273
    9. 's' → logprob: -12.391454696655273
    10. '.line' → logprob: -12.766454696655273

Token 1718: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016265720478259027
    2. 'i' → logprob: -8.750163078308105
    3. '[
' → logprob: -13.000163078308105
    4. '[' → logprob: -14.500163078308105
    5. '
' → logprob: -15.125163078308105
    6. ' i' → logprob: -15.250163078308105
    7. ',i' → logprob: -15.250163078308105
    8. '(i' → logprob: -15.750163078308105
    9. ' [' → logprob: -16.62516212463379
    10. '	i' → logprob: -17.12516212463379

Token 1719: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7302617430686951
    2. ')
' → logprob: -1.1052618026733398
    3. '               ' → logprob: -1.9802618026733398
    4. '
' → logprob: -3.98026180267334
    5. ']' → logprob: -4.35526180267334
    6. ']
' → logprob: -4.85526180267334
    7. '                   ' → logprob: -5.35526180267334
    8. ').' → logprob: -6.73026180267334
    9. '           ' → logprob: -6.85526180267334
    10. '.' → logprob: -7.35526180267334

Token 1720: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018613664724398404
    2. 'row' → logprob: -9.7501859664917
    3. ' row' → logprob: -10.3751859664917
    4. '```' → logprob: -10.8751859664917
    5. 'A' → logprob: -11.1251859664917
    6. ' A' → logprob: -11.2501859664917
    7. 'x' → logprob: -11.6251859664917
    8. '                
' → logprob: -12.0001859664917
    9. ' x' → logprob: -12.6251859664917
    10. ',' → logprob: -12.7501859664917

Token 1721: ' Ai' (ID: 58700)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.35757145285606384
    2. 'A' → logprob: -2.2325713634490967
    3. 'a' → logprob: -2.4825713634490967
    4. '               ' → logprob: -2.7325713634490967
    5. 'Ai' (adapté à ' Ai') → logprob: -3.7325713634490967
    6. 'rows' → logprob: -4.982571601867676
    7. 'coeff' → logprob: -4.982571601867676
    8. 'coef' → logprob: -6.232571601867676
    9. 'ax' → logprob: -6.857571601867676
    10. '                   ' → logprob: -7.107571601867676

Token 1722: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.285527765750885
    2. ' =' → logprob: -1.4105277061462402
    3. ',' → logprob: -6.03552770614624
    4. '.' → logprob: -7.78552770614624
    5. '=A' → logprob: -7.78552770614624
    6. '.A' → logprob: -8.410528182983398
    7. ' ' → logprob: -9.160528182983398
    8. '+' → logprob: -9.285528182983398
    9. ')' → logprob: -9.410528182983398
    10. '               ' → logprob: -9.535528182983398

Token 1723: ' Bi' (ID: 12512)
  Prédit: 'Bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bi' → logprob: -0.06918606162071228
    2. 'Bj' → logprob: -2.819185972213745
    3. ' Bi' → logprob: -5.069186210632324
    4. 'bi' → logprob: -7.944186210632324
    5. ' Bj' → logprob: -7.944186210632324
    6. 'B' → logprob: -10.444186210632324
    7. 's' → logprob: -10.944186210632324
    8. '=' → logprob: -11.069186210632324
    9. 'Bx' → logprob: -11.194186210632324
    10. '                   ' → logprob: -11.194186210632324

Token 1724: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5301921963691711
    2. ',' → logprob: -0.9051921963691711
    3. ' =' → logprob: -5.0301923751831055
    4. ',C' → logprob: -8.155192375183105
    5. '+' → logprob: -9.655192375183105
    6. '=C' → logprob: -10.155192375183105
    7. '+=' → logprob: -10.405192375183105
    8. 'C' → logprob: -10.655192375183105
    9. ')' → logprob: -11.280192375183105
    10. '               ' → logprob: -12.280192375183105

Token 1725: ' Ci' (ID: 21572)
  Prédit: 'Ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ci' → logprob: -0.0004460428317543119
    2. ' Ci' → logprob: -7.75044584274292
    3. 'ci' → logprob: -11.750446319580078
    4. 'Bi' → logprob: -12.125446319580078
    5. 'C' → logprob: -14.375446319580078
    6. '
' → logprob: -14.875446319580078
    7. '   ' → logprob: -15.500446319580078
    8. '_ci' → logprob: -15.875446319580078
    9. ' ci' → logprob: -16.375446319580078
    10. '  ' → logprob: -16.625446319580078

Token 1726: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018160827457904816
    2. ' =' → logprob: -4.018160820007324
    3. '=
' → logprob: -12.268160820007324
    4. ',' → logprob: -12.893160820007324
    5. ')' → logprob: -13.768160820007324
    6. '=line' → logprob: -14.018160820007324
    7. ' ' → logprob: -15.143160820007324
    8. ')=' → logprob: -15.518160820007324
    9. '<|end|>' → logprob: -15.518160820007324
    10. 's' → logprob: -16.01816177368164

Token 1727: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -2.4034345187828876e-05
    2. ' li' → logprob: -11.37502384185791
    3. '(li' → logprob: -11.50002384185791
    4. '<li' → logprob: -13.37502384185791
    5. '   ' → logprob: -14.75002384185791
    6. '(' → logprob: -16.125024795532227
    7. '  ' → logprob: -16.250024795532227
    8. '           ' → logprob: -16.750024795532227
    9. ' ' → logprob: -17.000024795532227
    10. 'lo' → logprob: -17.500024795532227

Token 1728: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.02392718754708767
    2. '_A' → logprob: -3.7739272117614746
    3. '.A' → logprob: -7.773927211761475
    4. '_p' → logprob: -9.148926734924316
    5. '.p' → logprob: -9.648926734924316
    6. 'p' → logprob: -10.023926734924316
    7. '_i' → logprob: -12.273926734924316
    8. '   ' → logprob: -12.273926734924316
    9. '_B' → logprob: -12.273926734924316
    10. '```' → logprob: -12.773926734924316

Token 1729: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.704273118884885e-07
    2. 'x' → logprob: -15.125000953674316
    3. 'distance' → logprob: -16.25
    4. ' A' → logprob: -16.875
    5. '
' → logprob: -17.0
    6. 'a' → logprob: -17.25
    7. '_A' → logprob: -17.75
    8. 'Ai' → logprob: -18.25
    9. 'def' → logprob: -18.375
    10. '```' → logprob: -18.875

Token 1730: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004242395516484976
    2. ' ,' → logprob: -8.5004243850708
    3. '+' → logprob: -9.5004243850708
    4. ' +' → logprob: -10.0004243850708
    5. ',C' → logprob: -10.0004243850708
    6. ',
' → logprob: -10.2504243850708
    7. '
' → logprob: -11.3754243850708
    8. '```' → logprob: -13.3754243850708
    9. '+,' → logprob: -13.5004243850708
    10. ',+' → logprob: -14.0004243850708

Token 1731: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -1.8624639324116288e-06
    2. ' li' → logprob: -13.375001907348633
    3. '<li' → logprob: -15.875001907348633
    4. 'lo' → logprob: -17.625001907348633
    5. 'lli' → logprob: -17.875001907348633
    6. '(li' → logprob: -17.875001907348633
    7. '
' → logprob: -19.250001907348633
    8. '  ' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.750001907348633
    10. '   ' → logprob: -20.000001907348633

Token 1732: '._' (ID: 2697)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.6795295476913452
    2. ',' → logprob: -0.9295295476913452
    3. '_C' → logprob: -2.5545296669006348
    4. '_i' → logprob: -5.054529666900635
    5. ' _' → logprob: -5.429529666900635
    6. '*' → logprob: -5.679529666900635
    7. ',B' → logprob: -6.179529666900635
    8. ',_' → logprob: -7.679529666900635
    9. '_,' → logprob: -7.804529666900635
    10. 'i' → logprob: -7.929529666900635

Token 1733: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0003896815178450197
    2. 'C' → logprob: -7.875389575958252
    3. 'i' → logprob: -12.50039005279541
    4. 'Bi' → logprob: -12.87539005279541
    5. ' B' → logprob: -14.68789005279541
    6. '_B' → logprob: -14.68789005279541
    7. '```' → logprob: -14.87539005279541
    8. 'Ci' → logprob: -15.56289005279541
    9. 's' → logprob: -15.81289005279541
    10. 'x' → logprob: -15.81289005279541

Token 1734: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001353329629637301
    2. ',C' → logprob: -6.7513532638549805
    3. ' ,' → logprob: -9.25135326385498
    4. '               ' → logprob: -9.87635326385498
    5. '                   ' → logprob: -12.37635326385498
    6. '           ' → logprob: -12.50135326385498
    7. ',
' → logprob: -12.75135326385498
    8. '+' → logprob: -12.75135326385498
    9. '```' → logprob: -12.75135326385498
    10. '
' → logprob: -13.25135326385498

Token 1735: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -4.4418171455617994e-05
    2. ' li' → logprob: -10.125044822692871
    3. '<li' → logprob: -12.875044822692871
    4. '(li' → logprob: -14.375044822692871
    5. '
' → logprob: -15.250044822692871
    6. 'lo' → logprob: -15.750044822692871
    7. '```' → logprob: -16.125043869018555
    8. 'lli' → logprob: -16.625043869018555
    9. 'l' → logprob: -16.750043869018555
    10. ' ' → logprob: -16.875043869018555

Token 1736: '._' (ID: 2697)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7027075290679932
    2. '_C' → logprob: -0.7027075290679932
    3. '_' → logprob: -5.327707290649414
    4. ',C' → logprob: -6.202707290649414
    5. 'C' → logprob: -7.202707290649414
    6. '_,' → logprob: -7.577707290649414
    7. '*' → logprob: -8.077707290649414
    8. '=' → logprob: -8.952707290649414
    9. ' _' → logprob: -9.077707290649414
    10. '           ' → logprob: -9.327707290649414

Token 1737: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.3795937522663735e-05
    2. 'Ci' → logprob: -11.12502384185791
    3. '_C' → logprob: -12.12502384185791
    4. '<|end|>' → logprob: -14.00002384185791
    5. ' C' → logprob: -14.62502384185791
    6. '	C' → logprob: -15.25002384185791
    7. ' ' → logprob: -15.25002384185791
    8. 's' → logprob: -15.50002384185791
    9. 'i' → logprob: -15.62502384185791
    10. '  ' → logprob: -15.75002384185791

Token 1738: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007689208723604679
    2. ',' → logprob: -5.632688999176025
    3. '
' → logprob: -5.882688999176025
    4. '                
' → logprob: -7.132688999176025
    5. ',
' → logprob: -9.007689476013184
    6. '              ' → logprob: -9.882689476013184
    7. '           ' → logprob: -10.007689476013184
    8. '                ' → logprob: -10.007689476013184
    9. ')' → logprob: -10.507689476013184
    10. '  
' → logprob: -10.882689476013184

Token 1739: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.3451433409936726e-05
    2. '                
' → logprob: -11.375033378601074
    3. '           ' → logprob: -11.500033378601074
    4. '       ' → logprob: -12.875033378601074
    5. ',' → logprob: -13.500033378601074
    6. '
' → logprob: -13.625033378601074
    7. '```' → logprob: -13.625033378601074
    8. '                   ' → logprob: -14.125033378601074
    9. '   ' → logprob: -14.375033378601074
    10. '  
' → logprob: -14.375033378601074

Token 1740: ' a' (ID: 261)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.23343384265899658
    2. 'rows' → logprob: -1.6084338426589966
    3. 'a' (adapté à ' a') → logprob: -5.733433723449707
    4. 'coeff' → logprob: -6.733433723449707
    5. '                   ' → logprob: -6.858433723449707
    6. '               ' → logprob: -6.983433723449707
    7. 'coef' → logprob: -7.733433723449707
    8. ' row' → logprob: -7.733433723449707
    9. 'eq' → logprob: -8.733433723449707
    10. 'A' → logprob: -8.983433723449707

Token 1741: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03438255563378334
    2. '=' → logprob: -3.4093825817108154
    3. '_row' → logprob: -7.409382343292236
    4. '_val' → logprob: -10.284382820129395
    5. '_' → logprob: -11.534382820129395
    6. 'row' → logprob: -11.534382820129395
    7. '=row' → logprob: -11.659382820129395
    8. '_i' → logprob: -12.034382820129395
    9. '_coef' → logprob: -12.034382820129395
    10. '_coeff' → logprob: -12.159382820129395

Token 1742: ' Ai' (ID: 58700)
  Prédit: 'Ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ai' → logprob: -0.01827695220708847
    2. '(A' → logprob: -4.018277168273926
    3. 'A' → logprob: -9.518277168273926
    4. ' Ai' → logprob: -10.643277168273926
    5. 'AI' → logprob: -11.268277168273926
    6. '   ' → logprob: -11.768277168273926
    7. '           ' → logprob: -13.018277168273926
    8. '               ' → logprob: -13.268277168273926
    9. ' (' → logprob: -13.518277168273926
    10. 'Au' → logprob: -14.268277168273926

Token 1743: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47440105676651
    2. '+' → logprob: -0.97440105676651
    3. '+s' → logprob: -8.099401473999023
    4. '+
' → logprob: -12.474401473999023
    5. ' +
' → logprob: -12.599401473999023
    6. 's' → logprob: -13.474401473999023
    7. '=' → logprob: -13.599401473999023
    8. '
' → logprob: -13.849401473999023
    9. ' ' → logprob: -13.974401473999023
    10. '+a' → logprob: -13.974401473999023

Token 1744: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00014358828775584698
    2. ' s' → logprob: -8.875144004821777
    3. 'A' → logprob: -13.250144004821777
    4. 'C' → logprob: -14.125144004821777
    5. '   ' → logprob: -14.250144004821777
    6. 'B' → logprob: -15.500144004821777
    7. 'sign' → logprob: -15.625144004821777
    8. '           ' → logprob: -16.12514305114746
    9. '(s' → logprob: -16.75014305114746
    10. '       ' → logprob: -17.62514305114746

Token 1745: '*A' (ID: 166365)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3166291117668152
    2. '*A' → logprob: -1.69162917137146
    3. 'A' → logprob: -2.69162917137146
    4. ' *' → logprob: -4.316628932952881
    5. ' A' → logprob: -5.316628932952881
    6. '0' → logprob: -6.941628932952881
    7. 'B' → logprob: -8.941629409790039
    8. ' ' → logprob: -11.316629409790039
    9. '   ' → logprob: -11.691629409790039
    10. '*_' → logprob: -11.941629409790039

Token 1746: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -12.500005722045898
    3. 'O' → logprob: -14.250005722045898
    4. 'o' → logprob: -15.000005722045898
    5. '[' → logprob: -15.375005722045898
    6. '
' → logprob: -15.875005722045898
    7. 'A' → logprob: -16.0000057220459
    8. '۰' → logprob: -16.6250057220459
    9. '```' → logprob: -16.7500057220459
    10. ' ' → logprob: -17.2500057220459

Token 1747: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019885217770934105
    2. 'b' → logprob: -4.394885063171387
    3. '           ' → logprob: -6.019885063171387
    4. ' b' → logprob: -6.144885063171387
    5. ',' → logprob: -6.769885063171387
    6. ',b' → logprob: -7.644885063171387
    7. '                   ' → logprob: -8.269885063171387
    8. ')' → logprob: -8.519885063171387
    9. '<|end|>' → logprob: -8.644885063171387
    10. '```' → logprob: -9.144885063171387

Token 1748: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004142030607908964
    2. '           ' → logprob: -6.504141807556152
    3. '                
' → logprob: -6.879141807556152
    4. '                ' → logprob: -8.129141807556152
    5. ',' → logprob: -8.379141807556152
    6. '<|end|>' → logprob: -8.504141807556152
    7. ' 
' → logprob: -8.879141807556152
    8. '  
' → logprob: -8.879141807556152
    9. '              ' → logprob: -9.004141807556152
    10. '            
' → logprob: -9.504141807556152

Token 1749: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.005252372473478317
    2. ' b' → logprob: -5.505252361297607
    3. '           ' → logprob: -6.755252361297607
    4. '               ' → logprob: -11.880252838134766
    5. '   ' → logprob: -14.630252838134766
    6. '	b' → logprob: -14.755252838134766
    7. '                   ' → logprob: -15.255252838134766
    8. '       ' → logprob: -16.005252838134766
    9. '            ' → logprob: -16.505252838134766
    10. ' ' → logprob: -16.505252838134766

Token 1750: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.2425276041030884
    2. '=' → logprob: -1.7425276041030884
    3. ' =' → logprob: -2.117527484893799
    4. ' b' → logprob: -2.367527484893799
    5. '<|end|>' → logprob: -2.742527484893799
    6. ' *' → logprob: -3.117527484893799
    7. '           ' → logprob: -3.242527484893799
    8. ')' → logprob: -3.367527484893799
    9. '               ' → logprob: -3.367527484893799
    10. '<|end|>' → logprob: -3.617527484893799

Token 1751: ' Bi' (ID: 12512)
  Prédit: 'Bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bi' → logprob: -4.36574100604048e-06
    2. ' Bi' → logprob: -12.375004768371582
    3. 'Biome' → logprob: -17.625003814697266
    4. 'B' → logprob: -18.000003814697266
    5. 'Bj' → logprob: -18.500003814697266
    6. 'Bio' → logprob: -18.500003814697266
    7. '(B' → logprob: -19.125003814697266
    8. 'Li' → logprob: -19.125003814697266
    9. '   ' → logprob: -19.375003814697266
    10. 'BI' → logprob: -19.500003814697266

Token 1752: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740929901599884
    2. '+' → logprob: -0.974092960357666
    3. '+b' → logprob: -11.349093437194824
    4. '+s' → logprob: -12.724093437194824
    5. '<|end|>' → logprob: -15.599093437194824
    6. ' +
' → logprob: -15.849093437194824
    7. '+
' → logprob: -15.974093437194824
    8. '```' → logprob: -15.974093437194824
    9. '+c' → logprob: -16.474092483520508
    10. ' ' → logprob: -16.599092483520508

Token 1753: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.2020991056924686e-05
    2. ' s' → logprob: -10.750032424926758
    3. 'B' → logprob: -11.625032424926758
    4. 'b' → logprob: -13.500032424926758
    5. '```' → logprob: -17.000032424926758
    6. '(s' → logprob: -17.125032424926758
    7. 'sign' → logprob: -18.875032424926758
    8. '   ' → logprob: -19.500032424926758
    9. '_s' → logprob: -19.625032424926758
    10. '	s' → logprob: -19.750032424926758

Token 1754: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31330057978630066
    2. 'B' → logprob: -1.313300609588623
    3. ' B' → logprob: -10.563300132751465
    4. ' *' → logprob: -11.438300132751465
    5. 'b' → logprob: -14.438300132751465
    6. '*b' → logprob: -14.688300132751465
    7. '```' → logprob: -15.438300132751465
    8. '**' → logprob: -15.438300132751465
    9. '*(' → logprob: -15.563300132751465
    10. '"B' → logprob: -16.06330108642578

Token 1755: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.128163257315464e-07
    2. ' B' → logprob: -15.375
    3. '(B' → logprob: -20.125
    4. '(' → logprob: -20.5
    5. '   ' → logprob: -21.0
    6. '```' → logprob: -21.0
    7. '  ' → logprob: -21.375
    8. '"B' → logprob: -21.625
    9. '`' → logprob: -21.75
    10. ' ' → logprob: -22.0

Token 1756: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '_' → logprob: -17.0
    3. '۰' → logprob: -18.375
    4. '[' → logprob: -19.125
    5. ' ' → logprob: -19.375
    6. 'o' → logprob: -19.875
    7. '<|end|>' → logprob: -20.0
    8. '```' → logprob: -20.75
    9. 'O' → logprob: -21.125
    10. '=' → logprob: -22.125

Token 1757: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022103239316493273
    2. '           ' → logprob: -7.0022101402282715
    3. '<|end|>' → logprob: -7.7522101402282715
    4. '
' → logprob: -8.50221061706543
    5. ',' → logprob: -8.87721061706543
    6. '              ' → logprob: -9.25221061706543
    7. ' c' → logprob: -9.25221061706543
    8. ')' → logprob: -9.37721061706543
    9. '                
' → logprob: -10.12721061706543
    10. '```' → logprob: -10.12721061706543

Token 1758: '               ' (ID: 506)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5714502334594727
    2. '               ' → logprob: -1.8214502334594727
    3. '           ' → logprob: -1.8214502334594727
    4. 'c' → logprob: -2.1964502334594727
    5. ' ' → logprob: -9.071450233459473
    6. '```' → logprob: -9.321450233459473
    7. '       ' → logprob: -9.446450233459473
    8. '	c' → logprob: -9.571450233459473
    9. '   ' → logprob: -10.321450233459473
    10. '            ' → logprob: -10.446450233459473

Token 1759: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0005247961380518973
    2. ' c' → logprob: -7.875524997711182
    3. '               ' → logprob: -8.875524520874023
    4. '           ' → logprob: -13.000524520874023
    5. '```' → logprob: -13.625524520874023
    6. '                   ' → logprob: -14.125524520874023
    7. 'if' → logprob: -15.500524520874023
    8. 'cc' → logprob: -16.000524520874023
    9. '   ' → logprob: -16.500524520874023
    10. '       ' → logprob: -16.875524520874023

Token 1760: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889628410339355
    2. ' =' → logprob: -2.5788962841033936
    3. ')' → logprob: -13.578896522521973
    4. '=
' → logprob: -13.953896522521973
    5. ':' → logprob: -14.078896522521973
    6. '**' → logprob: -14.453896522521973
    7. ' ' → logprob: -14.453896522521973
    8. ' =
' → logprob: -14.828896522521973
    9. '	' → logprob: -14.828896522521973
    10. '```' → logprob: -14.953896522521973

Token 1761: ' Ci' (ID: 21572)
  Prédit: 'Ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ci' → logprob: -7.815280696377158e-05
    2. ' Ci' → logprob: -9.500078201293945
    3. '(C' → logprob: -12.750078201293945
    4. 'CI' → logprob: -16.500078201293945
    5. '-(' → logprob: -16.875078201293945
    6. 'C' → logprob: -17.000078201293945
    7. '_C' → logprob: -17.500078201293945
    8. '   ' → logprob: -17.750078201293945
    9. '(' → logprob: -18.000078201293945
    10. 'ci' → logprob: -18.125078201293945

Token 1762: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3869076669216156
    2. '+' → logprob: -1.136907696723938
    3. '+c' → logprob: -10.636907577514648
    4. '+s' → logprob: -11.886907577514648
    5. '+C' → logprob: -13.011907577514648
    6. '+
' → logprob: -13.511907577514648
    7. ' +
' → logprob: -14.136907577514648
    8. '```' → logprob: -15.136907577514648
    9. '+b' → logprob: -16.13690757751465
    10. ' ' → logprob: -16.13690757751465

Token 1763: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.180879816180095e-05
    2. ' s' → logprob: -9.875051498413086
    3. '(s' → logprob: -15.750051498413086
    4. '```' → logprob: -16.500051498413086
    5. '   ' → logprob: -17.125051498413086
    6. 'C' → logprob: -17.500051498413086
    7. '{s' → logprob: -18.125051498413086
    8. '`s' → logprob: -18.125051498413086
    9. 'sign' → logprob: -18.250051498413086
    10. '
' → logprob: -18.500051498413086

Token 1764: '*C' (ID: 194570)
  Prédit: '*C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*C' → logprob: -0.005248225759714842
    2. 'C' → logprob: -5.255248069763184
    3. '*' → logprob: -11.880248069763184
    4. ' *' → logprob: -12.005248069763184
    5. '```' → logprob: -14.630248069763184
    6. '**' → logprob: -15.755248069763184
    7. ' C' → logprob: -15.880248069763184
    8. '`' → logprob: -16.1302490234375
    9. '"C' → logprob: -16.1302490234375
    10. ''C' → logprob: -16.5052490234375

Token 1765: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018518301658332348
    2. '_' → logprob: -8.625185012817383
    3. 'C' → logprob: -12.875185012817383
    4. '[' → logprob: -14.125185012817383
    5. '_C' → logprob: -14.250185012817383
    6. 'O' → logprob: -14.500185012817383
    7. '```' → logprob: -14.500185012817383
    8. '۰' → logprob: -15.625185012817383
    9. '   ' → logprob: -16.375185012817383
    10. '#' → logprob: -16.750185012817383

Token 1766: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1676519811153412
    2. '               ' → logprob: -2.042651891708374
    3. ',' → logprob: -4.417652130126953
    4. ')' → logprob: -5.292652130126953
    5. '<|end|>' → logprob: -6.292652130126953
    6. '
' → logprob: -6.792652130126953
    7. '=' → logprob: -7.042652130126953
    8. ',
' → logprob: -7.042652130126953
    9. ':' → logprob: -7.542652130126953
    10. '<|end|>' → logprob: -8.167652130126953

Token 1767: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016664924332872033
    2. ')' → logprob: -7.37666654586792
    3. '           ' → logprob: -7.37666654586792
    4. ',' → logprob: -8.626666069030762
    5. '<|end|>' → logprob: -9.501666069030762
    6. '       ' → logprob: -10.626666069030762
    7. '                
' → logprob: -11.001666069030762
    8. ' if' → logprob: -11.126666069030762
    9. ':' → logprob: -11.251666069030762
    10. ' =' → logprob: -11.626666069030762

Token 1768: ' rows' (ID: 13585)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7072374224662781
    2. 'if' → logprob: -0.7072374224662781
    3. ' if' → logprob: -4.707237243652344
    4. 'rows' (adapté à ' rows') → logprob: -5.957237243652344
    5. '               ' → logprob: -6.082237243652344
    6. 'row' → logprob: -10.582237243652344
    7. '       ' → logprob: -11.207237243652344
    8. '#' → logprob: -11.457237243652344
    9. ' rows' → logprob: -11.707237243652344
    10. '            
' → logprob: -11.832237243652344

Token 1769: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005277157761156559
    2. '.' → logprob: -5.255277156829834
    3. '           ' → logprob: -11.130277633666992
    4. ' .' → logprob: -11.505277633666992
    5. '=' → logprob: -11.880277633666992
    6. '.app' → logprob: -12.505277633666992
    7. 'append' → logprob: -13.255277633666992
    8. ',' → logprob: -14.130277633666992
    9. '.extend' → logprob: -14.130277633666992
    10. '.ap' → logprob: -14.380277633666992

Token 1770: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.1368660181760788
    2. '(a' → logprob: -2.6368660926818848
    3. '([' → logprob: -3.2618660926818848
    4. '((-' → logprob: -4.511866092681885
    5. '(' → logprob: -5.261866092681885
    6. '([-' → logprob: -6.636866092681885
    7. '   ' → logprob: -8.011865615844727
    8. '(-' → logprob: -9.011865615844727
    9. ' (' → logprob: -10.136865615844727
    10. '[(' → logprob: -11.761865615844727

Token 1771: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.5776860184123507e-06
    2. '[a' → logprob: -13.50000286102295
    3. '(a' → logprob: -14.25000286102295
    4. ' a' → logprob: -14.50000286102295
    5. '   ' → logprob: -16.500001907348633
    6. '[' → logprob: -18.375001907348633
    7. '	a' → logprob: -18.875001907348633
    8. '-a' → logprob: -20.125001907348633
    9. ')a' → logprob: -20.250001907348633
    10. ' ' → logprob: -21.000001907348633

Token 1772: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006116609554737806
    2. ',b' → logprob: -5.6311163902282715
    3. ' ,' → logprob: -6.0061163902282715
    4. ',
' → logprob: -10.63111686706543
    5. '<|end|>' → logprob: -11.13111686706543
    6. ')' → logprob: -12.38111686706543
    7. ',c' → logprob: -14.13111686706543
    8. '),' → logprob: -14.25611686706543
    9. 'b' → logprob: -14.25611686706543
    10. ',\
' → logprob: -15.00611686706543

Token 1773: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018850570544600487
    2. ',c' → logprob: -4.143850803375244
    3. ',-' → logprob: -6.018850803375244
    4. ' ,' → logprob: -8.393850326538086
    5. ',
' → logprob: -8.893850326538086
    6. ',b' → logprob: -12.643850326538086
    7. ' ,-' → logprob: -13.143850326538086
    8. ',p' → logprob: -13.268850326538086
    9. ',\
' → logprob: -13.518850326538086
    10. '
' → logprob: -14.143850326538086

Token 1774: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018435772508382797
    2. '))' → logprob: -4.018435955047607
    3. '           ' → logprob: -8.76843547821045
    4. ')
' → logprob: -9.64343547821045
    5. '))
' → logprob: -11.01843547821045
    6. ',' → logprob: -11.14343547821045
    7. '               ' → logprob: -11.14343547821045
    8. ')))' → logprob: -11.76843547821045
    9. ')}' → logprob: -13.39343547821045
    10. '),' → logprob: -13.39343547821045

Token 1775: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4092005491256714
    2. '           ' → logprob: -1.2842005491256714
    3. '<|end|>' → logprob: -3.409200668334961
    4. '       ' → logprob: -3.909200668334961
    5. '	       ' → logprob: -6.909200668334961
    6. '        
' → logprob: -7.034200668334961
    7. '    
' → logprob: -7.284200668334961
    8. '            
' → logprob: -7.659200668334961
    9. '
' → logprob: -8.034200668334961
    10. '<|end|>' → logprob: -8.159200668334961

Token 1776: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.661177933216095
    2. 'import' → logprob: -1.4111778736114502
    3. '
' → logprob: -2.41117787361145
    4. '       ' → logprob: -2.66117787361145
    5. 'from' → logprob: -3.66117787361145
    6. '```' → logprob: -4.411178112030029
    7. '#' (adapté à ' #') → logprob: -4.536178112030029
    8. ')' → logprob: -4.911178112030029
    9. 'A' → logprob: -5.286178112030029
    10. '            
' → logprob: -6.036178112030029

Token 1777: ' Now' (ID: 6549)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6273410320281982
    2. 'if' → logprob: -1.3773410320281982
    3. 'A' → logprob: -2.5023410320281982
    4. '           ' → logprob: -2.7523410320281982
    5. 'from' → logprob: -3.3773410320281982
    6. '#' → logprob: -3.6273410320281982
    7. 'n' → logprob: -5.377341270446777
    8. ' if' → logprob: -7.502341270446777
    9. 'def' → logprob: -7.877341270446777
    10. '```' → logprob: -8.252341270446777

Token 1778: ' solve' (ID: 17722)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8230737447738647
    2. 'if' → logprob: -1.4480737447738647
    3. ' if' → logprob: -2.1980738639831543
    4. '#' → logprob: -2.4480738639831543
    5. 'import' → logprob: -2.5730738639831543
    6. '           ' → logprob: -3.6980738639831543
    7. ' A' → logprob: -4.198073863983154
    8. ' import' → logprob: -5.823073863983154
    9. ' #' → logprob: -6.198073863983154
    10. 'n' → logprob: -6.198073863983154

Token 1779: ' linear' (ID: 23876)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6568776369094849
    2. 'import' → logprob: -1.1568776369094849
    3. '           ' → logprob: -2.1568775177001953
    4. '```' → logprob: -3.5318775177001953
    5. ' if' → logprob: -4.906877517700195
    6. '
' → logprob: -5.656877517700195
    7. 'n' → logprob: -5.906877517700195
    8. '#' → logprob: -6.156877517700195
    9. 'A' → logprob: -6.281877517700195
    10. 'from' → logprob: -6.531877517700195

Token 1780: ' system' (ID: 2420)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'system' → logprob: -0.35149112343788147
    2. ' system' → logprob: -1.351491093635559
    3. 'import' → logprob: -3.3514912128448486
    4. '_system' → logprob: -6.9764909744262695
    5. 'systems' → logprob: -7.6014909744262695
    6. 'al' → logprob: -7.8514909744262695
    7. '```' → logprob: -8.72649097442627
    8. ' systems' → logprob: -9.22649097442627
    9. 'equ' → logprob: -9.35149097442627
    10. 'from' → logprob: -9.60149097442627

Token 1781: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0700334683060646
    2. 'import' → logprob: -3.195033550262451
    3. ',' → logprob: -4.820033550262451
    4. 'A' → logprob: -5.320033550262451
    5. 'if' → logprob: -5.695033550262451
    6. '
' → logprob: -5.820033550262451
    7. ':' → logprob: -6.195033550262451
    8. '```' → logprob: -6.195033550262451
    9. '#' → logprob: -7.570033550262451
    10. 'n' → logprob: -7.695033550262451

Token 1782: ' M' (ID: 391)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08611021190881729
    2. 'from' → logprob: -2.7111101150512695
    3. 'A' → logprob: -4.7111101150512695
    4. '           ' → logprob: -6.2111101150512695
    5. '```' → logprob: -6.4611101150512695
    6. 'det' → logprob: -6.5861101150512695
    7. 'if' → logprob: -7.2111101150512695
    8. '
' → logprob: -8.08611011505127
    9. '       ' → logprob: -8.21111011505127
    10. '#' → logprob: -8.46111011505127

Token 1783: ' *' (ID: 425)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026400962844491005
    2. 'A' → logprob: -4.776401042938232
    3. '=' → logprob: -5.151401042938232
    4. 'x' → logprob: -5.276401042938232
    5. '=[[' → logprob: -6.401401042938232
    6. ',' → logprob: -6.526401042938232
    7. '_rows' → logprob: -7.276401042938232
    8. ':' → logprob: -7.526401042938232
    9. 'import' → logprob: -8.026400566101074
    10. '[' → logprob: -8.026400566101074

Token 1784: ' [' (ID: 723)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7599944472312927
    2. '[
' → logprob: -1.2599945068359375
    3. '[[' → logprob: -2.1349945068359375
    4. '[' → logprob: -2.2599945068359375
    5. '[x' → logprob: -4.1349945068359375
    6. '([' → logprob: -5.6349945068359375
    7. '(x' → logprob: -6.1349945068359375
    8. '[(' → logprob: -7.0099945068359375
    9. ' [' → logprob: -7.5099945068359375
    10. '((' → logprob: -7.7599945068359375

Token 1785: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04910776764154434
    2. '[x' → logprob: -3.049107789993286
    3. '(x' → logprob: -7.924107551574707
    4. ' [' → logprob: -9.924107551574707
    5. '[
' → logprob: -10.299107551574707
    6. '[[' → logprob: -10.674107551574707
    7. '```' → logprob: -11.299107551574707
    8. '[' → logprob: -11.299107551574707
    9. ' x' → logprob: -11.674107551574707
    10. '
' → logprob: -12.299107551574707

Token 1786: ' y' (ID: 342)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16035817563533783
    2. ',y' → logprob: -1.910358190536499
    3. 'y' → logprob: -9.160358428955078
    4. ' ,' → logprob: -11.285358428955078
    5. ' y' → logprob: -11.285358428955078
    6. ',
' → logprob: -13.535358428955078
    7. '[' → logprob: -14.035358428955078
    8. ',b' → logprob: -14.410358428955078
    9. ',Y' → logprob: -15.160358428955078
    10. '_,' → logprob: -15.660358428955078

Token 1787: ']^' (ID: 144683)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44479110836982727
    2. ']' → logprob: -1.1947910785675049
    3. '[' → logprob: -3.944791078567505
    4. '.T' → logprob: -4.444791316986084
    5. 'T' → logprob: -5.069791316986084
    6. ']=' → logprob: -6.069791316986084
    7. '=' → logprob: -6.444791316986084
    8. ' ,' → logprob: -6.444791316986084
    9. '^' → logprob: -6.569791316986084
    10. ' ' → logprob: -6.694791316986084

Token 1788: 'T' (ID: 51)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01874515414237976
    2. ' =' → logprob: -4.018744945526123
    3. 'T' → logprob: -8.268745422363281
    4. '.T' → logprob: -8.393745422363281
    5. '^' → logprob: -10.768745422363281
    6. '=
' → logprob: -11.143745422363281
    7. '=T' → logprob: -11.268745422363281
    8. '=[' → logprob: -12.018745422363281
    9. '=[[' → logprob: -12.018745422363281
    10. '
' → logprob: -12.143745422363281

Token 1789: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5339940786361694
    2. '=' → logprob: -1.2839940786361694
    3. ',' → logprob: -2.658994197845459
    4. 'import' → logprob: -3.533994197845459
    5. '#' → logprob: -4.783994197845459
    6. ':' → logprob: -5.033994197845459
    7. '[' → logprob: -5.533994197845459
    8. 'rows' → logprob: -6.033994197845459
    9. '
' → logprob: -6.408994197845459
    10. '=
' → logprob: -6.408994197845459

Token 1790: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7311563491821289
    2. '(' → logprob: -1.106156349182129
    3. '[-' → logprob: -2.731156349182129
    4. '(-' → logprob: -3.356156349182129
    5. '-c' → logprob: -3.356156349182129
    6. '0' → logprob: -3.856156349182129
    7. '-' → logprob: -4.231156349182129
    8. '-(' → logprob: -5.856156349182129
    9. '-[' → logprob: -5.981156349182129
    10. ' (' → logprob: -6.106156349182129

Token 1791: 'C' (ID: 34)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.7159816026687622
    2. '[' → logprob: -1.4659816026687622
    3. '[t' → logprob: -2.2159814834594727
    4. 'c' → logprob: -2.3409814834594727
    5. '[
' → logprob: -3.0909814834594727
    6. 'np' → logprob: -4.965981483459473
    7. '[np' → logprob: -5.965981483459473
    8. '
' → logprob: -6.090981483459473
    9. 'numpy' → logprob: -6.090981483459473
    10. 't' → logprob: -6.215981483459473

Token 1792: ' vector' (ID: 9727)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7209783792495728
    2. '[' → logprob: -1.5959783792495728
    3. '<|end|>' → logprob: -2.720978260040283
    4. '\n' → logprob: -3.095978260040283
    5. '       ' → logprob: -3.345978260040283
    6. '(rows' → logprob: -3.470978260040283
    7. '           ' → logprob: -3.595978260040283
    8. 'rows' → logprob: -3.845978260040283
    9. '<|end|>' → logprob: -4.470978260040283
    10. '[
' → logprob: -4.845978260040283

Token 1793: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3357160985469818
    2. '<|end|>' → logprob: -2.5857160091400146
    3. ',' → logprob: -2.9607160091400146
    4. '<|end|>' → logprob: -3.2107160091400146
    5. ':' → logprob: -3.4607160091400146
    6. '       ' → logprob: -4.085716247558594
    7. 'tokens' → logprob: -4.585716247558594
    8. '[' → logprob: -4.585716247558594
    9. '
' → logprob: -4.835716247558594
    10. 'import' → logprob: -5.210716247558594

Token 1794: '           ' (ID: 352)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.35591915249824524
    2. '           ' → logprob: -2.230919122695923
    3. '
' → logprob: -2.855919122695923
    4. '       ' → logprob: -3.855919122695923
    5. '[' → logprob: -4.105919361114502
    6. '\' → logprob: -4.355919361114502
    7. '            
' → logprob: -4.605919361114502
    8. ',' → logprob: -4.980919361114502
    9. '\t' → logprob: -5.230919361114502
    10. '    
' → logprob: -5.355919361114502

Token 1795: ' M' (ID: 391)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.510674238204956
    2. '           ' → logprob: -1.510674238204956
    3. 'A' → logprob: -2.510674238204956
    4. 'M' (adapté à ' M') → logprob: -2.885674238204956
    5. 'from' → logprob: -3.885674238204956
    6. '```' → logprob: -4.260674476623535
    7. ' M' → logprob: -6.760674476623535
    8. '       ' → logprob: -6.885674476623535
    9. '[' → logprob: -7.260674476623535
    10. '
' → logprob: -7.635674476623535

Token 1796: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.201706662774086
    2. '=' → logprob: -1.7017066478729248
    3. '=[' → logprob: -9.701706886291504
    4. ':' → logprob: -9.951706886291504
    5. '<|end|>' → logprob: -10.076706886291504
    6. '=[]' → logprob: -10.701706886291504
    7. ')' → logprob: -10.701706886291504
    8. 'tokens' → logprob: -10.701706886291504
    9. '=[
' → logprob: -11.076706886291504
    10. '=[[' → logprob: -11.326706886291504

Token 1797: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.633705735206604
    2. '[[' → logprob: -0.883705735206604
    3. '[
' → logprob: -2.8837056159973145
    4. '[(' → logprob: -9.383706092834473
    5. '[]' → logprob: -9.883706092834473
    6. ' [[' → logprob: -11.258706092834473
    7. ' [' → logprob: -11.383706092834473
    8. '[\' → logprob: -11.758706092834473
    9. '[s' → logprob: -11.883706092834473
    10. '[a' → logprob: -11.883706092834473

Token 1798: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5757092833518982
    2. '[
' → logprob: -0.9507092833518982
    3. '           ' → logprob: -3.325709342956543
    4. 'for' → logprob: -5.075709342956543
    5. '       ' → logprob: -5.700709342956543
    6. '[[' → logprob: -5.700709342956543
    7. '[(' → logprob: -7.950709342956543
    8. '   ' → logprob: -7.950709342956543
    9. '[...,' → logprob: -8.200709342956543
    10. ' for' → logprob: -8.700709342956543

Token 1799: ' C' (ID: 363)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3533004522323608
    2. '[-' → logprob: -1.3533004522323608
    3. '[
' → logprob: -1.3533004522323608
    4. 'for' → logprob: -1.9783004522323608
    5. '[[' → logprob: -2.9783005714416504
    6. '[c' → logprob: -4.47830057144165
    7. '[M' → logprob: -4.60330057144165
    8. '[A' → logprob: -5.35330057144165
    9. '[(' → logprob: -5.60330057144165
    10. '[b' → logprob: -6.35330057144165

Token 1800: '_vec' (ID: 29582)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012090695090591908
    2. ' =' → logprob: -4.512090682983398
    3. '=[]' → logprob: -7.637090682983398
    4. '=[]
' → logprob: -8.512090682983398
    5. 'vector' → logprob: -9.262090682983398
    6. '=[' → logprob: -9.637090682983398
    7. '[]' → logprob: -9.887090682983398
    8. '=
' → logprob: -10.512090682983398
    9. '_vector' → logprob: -10.637090682983398
    10. 'vectors' → logprob: -10.762090682983398

Token 1801: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014155282638967037
    2. ' =' → logprob: -4.389155387878418
    3. '=[]' → logprob: -6.889155387878418
    4. '.append' → logprob: -7.639155387878418
    5. '=[]
' → logprob: -9.014155387878418
    6. '[]' → logprob: -11.764155387878418
    7. '=[' → logprob: -12.139155387878418
    8. '=
' → logprob: -13.389155387878418
    9. '=[
' → logprob: -13.514155387878418
    10. '[' → logprob: -13.639155387878418

Token 1802: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0024285749532282352
    2. '[' → logprob: -6.7524285316467285
    3. '[-' → logprob: -7.5024285316467285
    4. '[]
' → logprob: -7.5024285316467285
    5. '[(' → logprob: -9.002429008483887
    6. '[
' → logprob: -11.127429008483887
    7. '[a' → logprob: -12.252429008483887
    8. ' []' → logprob: -12.752429008483887
    9. '[[' → logprob: -12.752429008483887
    10. '[]}' → logprob: -13.377429008483887

Token 1803: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15573722124099731
    2. '[' → logprob: -2.0307371616363525
    3. '       ' → logprob: -5.530737400054932
    4. '[
' → logprob: -5.780737400054932
    5. 'for' → logprob: -6.155737400054932
    6. '.append' → logprob: -6.405737400054932
    7. ' for' → logprob: -7.530737400054932
    8. '   ' → logprob: -7.530737400054932
    9. '```' → logprob: -8.405736923217773
    10. '               ' → logprob: -9.155736923217773

Token 1804: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018112488090991974
    2. ' for' → logprob: -4.393112659454346
    3. '           ' → logprob: -5.393112659454346
    4. '       ' → logprob: -7.018112659454346
    5. '   ' → logprob: -9.018112182617188
    6. '```' → logprob: -11.518112182617188
    7. '	for' → logprob: -11.768112182617188
    8. '[' → logprob: -12.643112182617188
    9. '               ' → logprob: -14.518112182617188
    10. '
' → logprob: -15.143112182617188

Token 1805: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.041008807718753815
    2. '(a' → logprob: -3.291008710861206
    3. 'row' → logprob: -5.916008949279785
    4. 'r' → logprob: -8.291008949279785
    5. '(row' → logprob: -11.791008949279785
    6. ' a' → logprob: -12.416008949279785
    7. ' (' → logprob: -13.291008949279785
    8. '(r' → logprob: -13.291008949279785
    9. '[a' → logprob: -15.291008949279785
    10. '   ' → logprob: -15.291008949279785

Token 1806: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.20475628972053528
    2. ',' → logprob: -1.704756259918213
    3. 'b' → logprob: -5.704756259918213
    4. ' ,' → logprob: -12.704756736755371
    5. ',
' → logprob: -13.204756736755371
    6. '_,' → logprob: -14.079756736755371
    7. ',c' → logprob: -14.829756736755371
    8. ',a' → logprob: -15.329756736755371
    9. ',v' → logprob: -15.579756736755371
    10. ' b' → logprob: -16.079755783081055

Token 1807: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.008734061382710934
    2. ',' → logprob: -4.758734226226807
    3. 'c' → logprob: -9.133733749389648
    4. ',b' → logprob: -11.633733749389648
    5. ',_' → logprob: -13.633733749389648
    6. ' ,' → logprob: -15.008733749389648
    7. ',s' → logprob: -15.133733749389648
    8. ',v' → logprob: -15.258733749389648
    9. ',
' → logprob: -15.383733749389648
    10. '_,' → logprob: -15.758733749389648

Token 1808: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22838369011878967
    2. 'in' → logprob: -1.6033836603164673
    3. ',' → logprob: -5.853383541107178
    4. ',in' → logprob: -11.103384017944336
    5. '
' → logprob: -11.353384017944336
    6. ')' → logprob: -11.478384017944336
    7. '	in' → logprob: -11.728384017944336
    8. '):
' → logprob: -11.978384017944336
    9. ':
' → logprob: -12.228384017944336
    10. '[' → logprob: -12.728384017944336

Token 1809: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -1.5048530030981055e-06
    2. ' rows' → logprob: -13.500001907348633
    3. '(rows' → logprob: -18.000001907348633
    4. '[' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '[
' → logprob: -19.375001907348633
    7. '	rows' → logprob: -19.375001907348633
    8. '[(' → logprob: -20.125001907348633
    9. '
' → logprob: -20.375001907348633
    10. 'lines' → logprob: -22.375001907348633

Token 1810: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16130341589450836
    2. ':' → logprob: -1.9113034009933472
    3. '):
' → logprob: -7.036303520202637
    4. ',' → logprob: -9.286303520202637
    5. ':
' → logprob: -10.286303520202637
    6. '           ' → logprob: -10.911303520202637
    7. '       ' → logprob: -11.161303520202637
    8. '):' → logprob: -11.536303520202637
    9. '   ' → logprob: -12.036303520202637
    10. ')' → logprob: -12.411303520202637

Token 1811: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.200908362865448
    2. '[' → logprob: -1.8259084224700928
    3. '           ' → logprob: -5.325908184051514
    4. ':' → logprob: -5.450908184051514
    5. ':
' → logprob: -5.450908184051514
    6. '[M' → logprob: -6.450908184051514
    7. '[
' → logprob: -6.950908184051514
    8. ',' → logprob: -6.950908184051514
    9. '[::-' → logprob: -7.450908184051514
    10. '```' → logprob: -7.450908184051514

Token 1812: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.0007119550718925893
    2. '[M' → logprob: -8.000712394714355
    3. '[' → logprob: -8.250712394714355
    4. ' M' → logprob: -9.625712394714355
    5. '           ' → logprob: -10.875712394714355
    6. '   ' → logprob: -11.000712394714355
    7. '               ' → logprob: -11.625712394714355
    8. '       ' → logprob: -12.500712394714355
    9. '[
' → logprob: -14.625712394714355
    10. ' [' → logprob: -14.875712394714355

Token 1813: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002087853499688208
    2. '.' → logprob: -8.500208854675293
    3. 'append' → logprob: -12.375208854675293
    4. '.app' → logprob: -14.375208854675293
    5. '.ap' → logprob: -16.125207901000977
    6. 'Append' → logprob: -16.625207901000977
    7. '.Append' → logprob: -16.625207901000977
    8. '.extend' → logprob: -16.750207901000977
    9. '_append' → logprob: -16.750207901000977
    10. '+=' → logprob: -17.125207901000977

Token 1814: '([' (ID: 5194)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0002358409110456705
    2. '[' → logprob: -9.000235557556152
    3. '[b' → logprob: -9.500235557556152
    4. '([' → logprob: -10.750235557556152
    5. '[(' → logprob: -11.625235557556152
    6. '[
' → logprob: -13.250235557556152
    7. '[A' → logprob: -13.250235557556152
    8. '[f' → logprob: -13.625235557556152
    9. ' [' → logprob: -14.250235557556152
    10. '[e' → logprob: -14.500235557556152

Token 1815: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9361264946837764e-07
    2. ' a' → logprob: -15.75
    3. '   ' → logprob: -18.75
    4. '	a' → logprob: -20.625
    5. '[' → logprob: -21.5
    6. '[a' → logprob: -21.625
    7. '```' → logprob: -22.5
    8. ''a' → logprob: -22.625
    9. '"a' → logprob: -22.875
    10. '       ' → logprob: -23.125

Token 1816: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05127141252160072
    2. ',b' → logprob: -3.176271438598633
    3. ' ,' → logprob: -4.801271438598633
    4. '[' → logprob: -11.926271438598633
    5. 'b' → logprob: -12.051271438598633
    6. '   ' → logprob: -12.801271438598633
    7. ',
' → logprob: -13.801271438598633
    8. ' ' → logprob: -14.551271438598633
    9. ' b' → logprob: -14.926271438598633
    10. '  ' → logprob: -15.676271438598633

Token 1817: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.47436219453811646
    2. '])
' → logprob: -0.9743621945381165
    3. ',' → logprob: -8.84936237335205
    4. ',c' → logprob: -10.09936237335205
    5. '       ' → logprob: -10.72436237335205
    6. '])
' → logprob: -10.97436237335205
    7. '])

' → logprob: -11.22436237335205
    8. ']);' → logprob: -11.97436237335205
    9. ' ])
' → logprob: -11.97436237335205
    10. ' ])' → logprob: -12.09936237335205

Token 1818: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5470348000526428
    2. '           ' → logprob: -1.047034740447998
    3. '       ' → logprob: -2.672034740447998
    4. '```' → logprob: -7.922034740447998
    5. '   ' → logprob: -8.047035217285156
    6. ',' → logprob: -8.047035217285156
    7. 'C' → logprob: -9.297035217285156
    8. ' C' → logprob: -10.172035217285156
    9. '              ' → logprob: -10.547035217285156
    10. '                   ' → logprob: -11.172035217285156

Token 1819: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -1.2664456789934775e-06
    2. ' C' → logprob: -13.750000953674316
    3. 'c' → logprob: -16.500001907348633
    4. '               ' → logprob: -18.250001907348633
    5. '-' → logprob: -19.250001907348633
    6. '           ' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.375001907348633
    8. '-C' → logprob: -19.750001907348633
    9. '                   ' → logprob: -19.875001907348633
    10. '
' → logprob: -20.250001907348633

Token 1820: '_vec' (ID: 29582)
  Prédit: '_vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -0.0013792830286547542
    2. '.append' → logprob: -6.626379489898682
    3. '_VEC' → logprob: -10.626379013061523
    4. '_vect' → logprob: -11.626379013061523
    5. 'vec' → logprob: -11.626379013061523
    6. '_.' → logprob: -13.376379013061523
    7. '=' → logprob: -13.626379013061523
    8. '.' → logprob: -13.626379013061523
    9. '_vector' → logprob: -13.751379013061523
    10. 'Vec' → logprob: -13.751379013061523

Token 1821: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.026906123384833336
    2. '.' → logprob: -3.6519060134887695
    3. 'append' → logprob: -8.15190601348877
    4. ',' → logprob: -8.27690601348877
    5. '=' → logprob: -11.15190601348877
    6. '[-' → logprob: -11.27690601348877
    7. 'Append' → logprob: -11.90190601348877
    8. '.app' → logprob: -12.27690601348877
    9. ' .' → logprob: -12.65190601348877
    10. '.extend' → logprob: -12.90190601348877

Token 1822: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0888371616601944
    2. '[-' → logprob: -2.713837146759033
    3. '(-' → logprob: -4.588837146759033
    4. '-c' → logprob: -5.213837146759033
    5. ' -' → logprob: -5.963837146759033
    6. '-f' → logprob: -8.463837623596191
    7. '   ' → logprob: -9.213837623596191
    8. '-p' → logprob: -9.463837623596191
    9. '-n' → logprob: -11.213837623596191
    10. '-u' → logprob: -11.213837623596191

Token 1823: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.088346359931165e-07
    2. ' c' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.375
    4. ')c' → logprob: -20.625
    5. '	c' → logprob: -21.75
    6. '(c' → logprob: -22.25
    7. '
' → logprob: -23.0
    8. '_c' → logprob: -23.125
    9. '```' → logprob: -23.5
    10. '       ' → logprob: -24.125

Token 1824: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038145918399095535
    2. ')
' → logprob: -3.2881460189819336
    3. '           ' → logprob: -9.538146018981934
    4. '       ' → logprob: -10.913146018981934
    5. '])' → logprob: -12.788146018981934
    6. ')
' → logprob: -12.913146018981934
    7. ' )' → logprob: -13.163146018981934
    8. '   ' → logprob: -13.413146018981934
    9. ')return' → logprob: -13.413146018981934
    10. ']' → logprob: -14.413146018981934

Token 1825: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4629882276058197
    2. '       ' → logprob: -1.462988257408142
    3. '```' → logprob: -2.9629881381988525
    4. 'import' → logprob: -3.0879881381988525
    5. '<|end|>' → logprob: -3.4629881381988525
    6. '
' → logprob: -5.587988376617432
    7. 'from' → logprob: -6.087988376617432
    8. ')' → logprob: -6.212988376617432
    9. '   ' → logprob: -8.087987899780273
    10. '<|end|>' → logprob: -8.087987899780273

Token 1826: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.011064444668591022
    2. 'from' → logprob: -5.136064529418945
    3. 'try' → logprob: -5.511064529418945
    4. '```' → logprob: -7.261064529418945
    5. '           ' → logprob: -8.011064529418945
    6. '       ' → logprob: -11.011064529418945
    7. ' import' → logprob: -11.261064529418945
    8. 'if' → logprob: -12.011064529418945
    9. 'det' → logprob: -12.511064529418945
    10. '``' → logprob: -12.886064529418945

Token 1827: ' Solve' (ID: 116151)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10640629380941391
    2. 'try' → logprob: -2.3564062118530273
    3. 'from' → logprob: -5.231406211853027
    4. '           ' → logprob: -7.481406211853027
    5. 'if' → logprob: -9.356406211853027
    6. '       ' → logprob: -9.606406211853027
    7. '```' → logprob: -9.606406211853027
    8. '
' → logprob: -11.106406211853027
    9. '#' → logprob: -11.481406211853027
    10. 'det' → logprob: -11.606406211853027

Token 1828: ' M' (ID: 391)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.41238516569137573
    2. 'try' → logprob: -1.1623852252960205
    3. 'from' → logprob: -4.162384986877441
    4. '```' → logprob: -5.537384986877441
    5. '
' → logprob: -5.787384986877441
    6. '       ' → logprob: -7.037384986877441
    7. '           ' → logprob: -7.037384986877441
    8. 'None' → logprob: -7.912384986877441
    9. '               ' → logprob: -9.287384986877441
    10. '   ' → logprob: -9.287384986877441

Token 1829: 'x' (ID: 87)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01887325569987297
    2. 'try' → logprob: -4.76887321472168
    3. ' =' → logprob: -5.64387321472168
    4. ',' → logprob: -6.01887321472168
    5. '<|end|>' → logprob: -7.01887321472168
    6. '```' → logprob: -7.26887321472168
    7. ':' → logprob: -7.51887321472168
    8. ')' → logprob: -7.76887321472168
    9. '=' → logprob: -7.89387321472168
    10. '[' → logprob: -7.89387321472168

Token 1830: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6792129278182983
    2. ',' → logprob: -1.1792129278182983
    3. '=' → logprob: -3.304213047027588
    4. '[' → logprob: -3.429213047027588
    5. ',y' → logprob: -3.429213047027588
    6. 'import' → logprob: -4.554213047027588
    7. ')' → logprob: -4.554213047027588
    8. '=None' → logprob: -4.804213047027588
    9. 'try' → logprob: -4.804213047027588
    10. '       ' → logprob: -4.804213047027588

Token 1831: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0012239166535437107
    2. ' C' → logprob: -7.001224040985107
    3. 'numpy' → logprob: -8.62622356414795
    4. 'np' → logprob: -9.00122356414795
    5. 'import' → logprob: -12.37622356414795
    6. ' numpy' → logprob: -12.62622356414795
    7. '   ' → logprob: -14.37622356414795
    8. ' np' → logprob: -15.25122356414795
    9. ' ' → logprob: -15.50122356414795
    10. '       ' → logprob: -15.50122356414795

Token 1832: '_vec' (ID: 29582)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.9155330657958984
    2. '
' → logprob: -1.0405330657958984
    3. 'import' → logprob: -1.7905330657958984
    4. '           ' → logprob: -3.1655330657958984
    5. '       ' → logprob: -4.165533065795898
    6. '```' → logprob: -4.665533065795898
    7. ')' → logprob: -6.290533065795898
    8. ')
' → logprob: -6.290533065795898
    9. '[' → logprob: -6.540533065795898
    10. '\n' → logprob: -6.915533065795898

Token 1833: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011946165934205055
    2. '       ' → logprob: -5.386946201324463
    3. 'import' → logprob: -5.636946201324463
    4. '           ' → logprob: -6.386946201324463
    5. '```' → logprob: -7.261946201324463
    6. '
' → logprob: -7.511946201324463
    7. 'try' → logprob: -7.886946201324463
    8. '\n' → logprob: -9.011945724487305
    9. ',' → logprob: -9.886945724487305
    10. ')' → logprob: -10.011945724487305

Token 1834: ' least' (ID: 5153)
  Prédit: 'numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numpy' → logprob: -0.22833900153636932
    2. 'import' → logprob: -1.9783389568328857
    3. 'math' → logprob: -2.9783389568328857
    4. 'try' → logprob: -4.603339195251465
    5. 'np' → logprob: -5.478339195251465
    6. ' numpy' → logprob: -8.603339195251465
    7. '
' → logprob: -8.853339195251465
    8. 'None' → logprob: -8.853339195251465
    9. 'len' → logprob: -9.728339195251465
    10. 'm' → logprob: -9.853339195251465

Token 1835: ' squares' (ID: 57269)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8602121472358704
    2. 'sq' → logprob: -1.1102120876312256
    3. '_s' → logprob: -1.6102120876312256
    4. ' squares' → logprob: -3.2352120876312256
    5. 'square' → logprob: -5.110212326049805
    6. 'quares' → logprob: -7.360212326049805
    7. 'Squares' → logprob: -7.485212326049805
    8. '_square' → logprob: -7.860212326049805
    9. '_sq' → logprob: -7.860212326049805
    10. 'import' → logprob: -9.485212326049805

Token 1836: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.936398983001709
    2. 'import' → logprob: -1.061398983001709
    3. '
' → logprob: -1.811398983001709
    4. '       ' → logprob: -3.436398983001709
    5. '```' → logprob: -3.811398983001709
    6. ',' → logprob: -3.936398983001709
    7. 'try' → logprob: -5.561398983001709
    8. '[' → logprob: -5.686398983001709
    9. '(' → logprob: -6.061398983001709
    10. '\n' → logprob: -6.436398983001709

Token 1837: ' exact' (ID: 6354)
  Prédit: 'numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numpy' → logprob: -0.9782843589782715
    2. 'import' → logprob: -1.2282843589782715
    3. 'try' → logprob: -1.4782843589782715
    4. 'np' → logprob: -2.8532843589782715
    5. 'None' → logprob: -3.8532843589782715
    6. ' numpy' → logprob: -4.6032843589782715
    7. '   ' → logprob: -5.4782843589782715
    8. '       ' → logprob: -5.7282843589782715
    9. 'exact' → logprob: -6.1032843589782715
    10. ' try' → logprob: -7.1032843589782715

Token 1838: ' if' (ID: 538)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0697341114282608
    2. 'from' → logprob: -3.1947340965270996
    3. '
' → logprob: -5.3197340965271
    4. ' from' → logprob: -5.5697340965271
    5. '```' → logprob: -5.9447340965271
    6. 'try' → logprob: -6.3197340965271
    7. '       ' → logprob: -6.5697340965271
    8. '   ' → logprob: -6.8197340965271
    9. ',' → logprob: -6.9447340965271
    10. '`' → logprob: -7.0697340965271

Token 1839: ' possible' (ID: 4149)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004166014492511749
    2. ' len' → logprob: -6.504166126251221
    3. 'rank' → logprob: -6.504166126251221
    4. '2' → logprob: -7.129166126251221
    5. 'numpy' → logprob: -8.629165649414062
    6. '(len' → logprob: -10.004165649414062
    7. '```' → logprob: -10.004165649414062
    8. ' rank' → logprob: -11.004165649414062
    9. 'det' → logprob: -11.004165649414062
    10. 'np' → logprob: -11.129165649414062

Token 1840: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08887108415365219
    2. '           ' → logprob: -2.7138710021972656
    3. 'import' → logprob: -4.213871002197266
    4. '```' → logprob: -6.588871002197266
    5. '       ' → logprob: -7.338871002197266
    6. '
' → logprob: -7.463871002197266
    7. '\n' → logprob: -7.713871002197266
    8. ',' → logprob: -7.963871002197266
    9. 'try' → logprob: -8.963871002197266
    10. '            
' → logprob: -8.963871002197266

Token 1841: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2368018627166748
    2. '
' → logprob: -1.8618018627166748
    3. '       ' → logprob: -3.486801862716675
    4. 'import' → logprob: -4.861802101135254
    5. '```' → logprob: -5.236802101135254
    6. '            
' → logprob: -5.611802101135254
    7. '   ' → logprob: -6.861802101135254
    8. ' 
' → logprob: -6.986802101135254
    9. ' try' → logprob: -7.111802101135254
    10. '               ' → logprob: -7.236802101135254

Token 1842: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4066169857978821
    2. 'try' → logprob: -1.1566169261932373
    3. 'from' → logprob: -4.531617164611816
    4. '           ' → logprob: -5.281617164611816
    5. '```' → logprob: -6.031617164611816
    6. '
' → logprob: -7.156617164611816
    7. '       ' → logprob: -8.031617164611816
    8. 'if' → logprob: -9.781617164611816
    9. '   ' → logprob: -9.906617164611816
    10. '``' → logprob: -10.406617164611816

Token 1843: ' If' (ID: 1843)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.29237261414527893
    2. 'try' → logprob: -1.5423725843429565
    3. '           ' → logprob: -3.917372703552246
    4. 'from' → logprob: -4.292372703552246
    5. '
' → logprob: -6.417372703552246
    6. '       ' → logprob: -6.542372703552246
    7. '```' → logprob: -6.917372703552246
    8. ' try' → logprob: -7.292372703552246
    9. '   ' → logprob: -7.417372703552246
    10. 'if' → logprob: -7.792372703552246

Token 1844: ' rank' (ID: 10302)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005950896302238107
    2. 'import' → logprob: -8.250595092773438
    3. ' len' → logprob: -8.375595092773438
    4. 'all' → logprob: -9.875595092773438
    5. 'M' → logprob: -10.875595092773438
    6. 'abs' → logprob: -11.250595092773438
    7. 'any' → logprob: -11.750595092773438
    8. 'not' → logprob: -12.625595092773438
    9. '(len' → logprob: -13.125595092773438
    10. '   ' → logprob: -13.500595092773438

Token 1845: ' <' (ID: 464)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.03659674897789955
    2. '<M' → logprob: -4.286596775054932
    3. '==' → logprob: -5.661596775054932
    4. 'def' → logprob: -5.911596775054932
    5. '       ' → logprob: -6.161596775054932
    6. ' =' → logprob: -6.286596775054932
    7. '           ' → logprob: -6.411596775054932
    8. '=' → logprob: -6.411596775054932
    9. ' <' → logprob: -6.661596775054932
    10. '```' → logprob: -6.786596775054932

Token 1846: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3438327843905427e-05
    2. ' ' → logprob: -11.50002384185791
    3. 'min' → logprob: -12.00002384185791
    4. 'len' → logprob: -12.12502384185791
    5. '
' → logprob: -14.62502384185791
    6. '   ' → logprob: -14.87502384185791
    7. '```' → logprob: -14.87502384185791
    8. '3' → logprob: -16.250022888183594
    9. '1' → logprob: -16.250022888183594
    10. '	' → logprob: -17.000022888183594

Token 1847: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. 'min' → logprob: -12.625008583068848
    3. 'len' → logprob: -12.875008583068848
    4. ' ' → logprob: -13.625008583068848
    5. '1' → logprob: -15.625008583068848
    6. '3' → logprob: -15.750008583068848
    7. '```' → logprob: -16.12500762939453
    8. 'M' → logprob: -16.50000762939453
    9. 'rank' → logprob: -16.50000762939453
    10. '[' → logprob: -16.62500762939453

Token 1848: ' no' (ID: 860)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5485013127326965
    2. ':' → logprob: -1.0485012531280518
    3. ':
' → logprob: -3.4235012531280518
    4. ',' → logprob: -4.298501491546631
    5. '           ' → logprob: -4.298501491546631
    6. ' and' → logprob: -5.048501491546631
    7. 'or' → logprob: -5.673501491546631
    8. 'and' → logprob: -6.923501491546631
    9. 'import' → logprob: -7.923501491546631
    10. '               ' → logprob: -7.923501491546631

Token 1849: ' uniq' (ID: 130316)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1924359798431396
    2. ':' → logprob: -1.6924359798431396
    3. '       ' → logprob: -1.9424359798431396
    4. '           ' → logprob: -2.3174359798431396
    5. ' return' → logprob: -3.3174359798431396
    6. '
' → logprob: -3.3174359798431396
    7. 'return' → logprob: -3.5674359798431396
    8. ' solution' → logprob: -3.5674359798431396
    9. ')' → logprob: -4.317436218261719
    10. ' possible' → logprob: -4.442436218261719

Token 1850: ' solution' (ID: 7578)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.22599343955516815
    2. 'u' → logprob: -1.8509933948516846
    3. 'solution' → logprob: -3.9759933948516846
    4. '
' → logprob: -4.475993633270264
    5. 'uate' → logprob: -5.600993633270264
    6. 'uel' → logprob: -6.225993633270264
    7. ' solution' → logprob: -6.350993633270264
    8. 'sol' → logprob: -6.600993633270264
    9. '       ' → logprob: -7.100993633270264
    10. '_solution' → logprob: -7.225993633270264

Token 1851: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10311218351125717
    2. '           ' → logprob: -2.47811222076416
    3. '\n' → logprob: -5.60311222076416
    4. ':
' → logprob: -5.97811222076416
    5. 'import' → logprob: -6.22811222076416
    6. ',' → logprob: -6.60311222076416
    7. '       ' → logprob: -6.72811222076416
    8. ':' → logprob: -6.72811222076416
    9. '
' → logprob: -7.10311222076416
    10. '```' → logprob: -7.35311222076416

Token 1852: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15291078388690948
    2. '
' → logprob: -2.2779107093811035
    3. '       ' → logprob: -4.0279107093811035
    4. 'import' → logprob: -4.5279107093811035
    5. '```' → logprob: -4.9029107093811035
    6. ',' → logprob: -6.5279107093811035
    7. '   ' → logprob: -7.1529107093811035
    8. ',
' → logprob: -8.652911186218262
    9. 'from' → logprob: -9.027911186218262
    10. '\n' → logprob: -9.402911186218262

Token 1853: ' det' (ID: 1476)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.019419407472014427
    2. '           ' → logprob: -4.519419193267822
    3. 'from' → logprob: -5.394419193267822
    4. 'try' → logprob: -6.144419193267822
    5. '       ' → logprob: -7.269419193267822
    6. '
' → logprob: -7.519419193267822
    7. '```' → logprob: -8.14441967010498
    8. '   ' → logprob: -10.14441967010498
    9. ' import' → logprob: -10.26941967010498
    10. ' from' → logprob: -10.76941967010498

Token 1854: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031077569350600243
    2. '=' → logprob: -3.5310776233673096
    3. '(M' → logprob: -7.1560773849487305
    4. '=M' → logprob: -8.28107738494873
    5. 'M' → logprob: -9.15607738494873
    6. ' M' → logprob: -9.78107738494873
    7. ':' → logprob: -10.40607738494873
    8. '_M' → logprob: -10.65607738494873
    9. ' =
' → logprob: -10.65607738494873
    10. '```' → logprob: -11.65607738494873

Token 1855: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0006598960608243942
    2. 'rows' → logprob: -8.125659942626953
    3. ' M' → logprob: -8.500659942626953
    4. '(M' → logprob: -8.875659942626953
    5. '(' → logprob: -12.000659942626953
    6. '   ' → logprob: -12.125659942626953
    7. 'self' → logprob: -12.500659942626953
    8. 'math' → logprob: -14.250659942626953
    9. '       ' → logprob: -14.375659942626953
    10. ' (' → logprob: -14.500659942626953

Token 1856: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.610702363715973e-06
    2. '0' → logprob: -11.750009536743164
    3. '```' → logprob: -14.125009536743164
    4. '[[' → logprob: -14.875009536743164
    5. '[
' → logprob: -15.375009536743164
    6. '00' → logprob: -15.875009536743164
    7. '``' → logprob: -16.375009536743164
    8. 'import' → logprob: -17.250009536743164
    9. '\[' → logprob: -17.625009536743164
    10. '
' → logprob: -17.750009536743164

Token 1857: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031770815257914364
    2. '[' → logprob: -8.125317573547363
    3. '
' → logprob: -11.625317573547363
    4. ' ' → logprob: -12.125317573547363
    5. '][' → logprob: -13.125317573547363
    6. '1' → logprob: -13.500317573547363
    7. '[
' → logprob: -14.312817573547363
    8. '(' → logprob: -14.625317573547363
    9. '[[' → logprob: -14.812817573547363
    10. '-' → logprob: -14.875317573547363

Token 1858: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1798599511384964
    2. '][' → logprob: -1.80485999584198
    3. '0' → logprob: -9.30486011505127
    4. ' ][' → logprob: -12.30486011505127
    5. '   ' → logprob: -12.55486011505127
    6. ']' → logprob: -13.05486011505127
    7. '
' → logprob: -13.30486011505127
    8. ' [' → logprob: -13.42986011505127
    9. '"][' → logprob: -13.55486011505127
    10. '1' → logprob: -13.67986011505127

Token 1859: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -13.500001907348633
    3. '[' → logprob: -17.125001907348633
    4. ' ' → logprob: -17.500001907348633
    5. '][' → logprob: -18.250001907348633
    6. '00' → logprob: -19.000001907348633
    7. '1' → logprob: -19.250001907348633
    8. '   ' → logprob: -19.250001907348633
    9. ']' → logprob: -19.687501907348633
    10. '۰' → logprob: -20.187501907348633

Token 1860: ']*' (ID: 18579)
  Prédit: '*M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*M' → logprob: -0.42015737295150757
    2. ' *' → logprob: -1.1701574325561523
    3. '*' → logprob: -3.4201574325561523
    4. ')*' → logprob: -11.420157432556152
    5. '**' → logprob: -11.545157432556152
    6. ']*' → logprob: -11.920157432556152
    7. '   ' → logprob: -13.545157432556152
    8. '*m' → logprob: -14.920157432556152
    9. '*S' → logprob: -15.045157432556152
    10. '*T' → logprob: -15.170157432556152

Token 1861: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.623244553338736e-05
    2. ' M' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.37506675720215
    4. '
' → logprob: -18.00006675720215
    5. ' ' → logprob: -18.50006675720215
    6. '       ' → logprob: -18.87506675720215
    7. '	M' → logprob: -19.37506675720215
    8. '           ' → logprob: -19.62506675720215
    9. '>M' → logprob: -19.62506675720215
    10. '[' → logprob: -19.87506675720215

Token 1862: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011009939044015482
    2. '1' → logprob: -9.125109672546387
    3. '0' → logprob: -15.000109672546387
    4. '```' → logprob: -15.125109672546387
    5. '
' → logprob: -15.750109672546387
    6. '[
' → logprob: -16.250110626220703
    7. '][' → logprob: -16.625110626220703
    8. '=' → logprob: -16.875110626220703
    9. '   ' → logprob: -17.375110626220703
    10. '``' → logprob: -17.875110626220703

Token 1863: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11283667385578156
    2. '0' → logprob: -2.2378365993499756
    3. '
' → logprob: -11.612836837768555
    4. '[' → logprob: -12.362836837768555
    5. '   ' → logprob: -14.487836837768555
    6. '```' → logprob: -15.737836837768555
    7. ' ' → logprob: -16.112836837768555
    8. '01' → logprob: -16.862836837768555
    9. '][' → logprob: -17.362836837768555
    10. '(' → logprob: -17.612836837768555

Token 1864: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003643191885203123
    2. '1' → logprob: -6.253643035888672
    3. '][' → logprob: -6.378643035888672
    4. '0' → logprob: -12.128643035888672
    5. '[
' → logprob: -12.503643035888672
    6. '
' → logprob: -12.753643035888672
    7. '```' → logprob: -14.253643035888672
    8. ']' → logprob: -14.503643035888672
    9. '   ' → logprob: -14.628643035888672
    10. ',' → logprob: -14.753643035888672

Token 1865: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '0' → logprob: -13.750001907348633
    3. '
' → logprob: -14.875001907348633
    4. '[' → logprob: -15.500001907348633
    5. '```' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '{' → logprob: -19.250001907348633
    8. '۱' → logprob: -19.500001907348633
    9. ' ' → logprob: -20.312501907348633
    10. '(' → logprob: -20.312501907348633

Token 1866: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868810832500458
    2. '-' → logprob: -1.1368811130523682
    3. '-M' → logprob: -12.011880874633789
    4. '-
' → logprob: -12.636880874633789
    5. ' -
' → logprob: -15.011880874633789
    6. ' ' → logprob: -16.01188087463379
    7. '```' → logprob: -16.13688087463379
    8. '   ' → logprob: -16.63688087463379
    9. ',' → logprob: -17.26188087463379
    10. '−' → logprob: -17.51188087463379

Token 1867: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25193944573402405
    2. '-' → logprob: -1.5019394159317017
    3. '-M' → logprob: -11.62693977355957
    4. '-
' → logprob: -13.87693977355957
    5. ' -
' → logprob: -15.12693977355957
    6. '```' → logprob: -16.50193977355957
    7. ' ' → logprob: -16.75193977355957
    8. ',' → logprob: -17.00193977355957
    9. ' ' → logprob: -17.12693977355957
    10. '−' → logprob: -17.37693977355957

Token 1868: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.2729995988775045e-06
    2. ' M' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.5000057220459
    4. '(M' → logprob: -19.1250057220459
    5. '-' → logprob: -20.3750057220459
    6. '-M' → logprob: -20.7500057220459
    7. '    ' → logprob: -20.8750057220459
    8. '	M' → logprob: -21.2500057220459
    9. '       ' → logprob: -21.6250057220459
    10. '           ' → logprob: -21.6250057220459

Token 1869: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008818305097520351
    2. '1' → logprob: -4.75881814956665
    3. '0' → logprob: -8.508818626403809
    4. 'M' → logprob: -14.508818626403809
    5. '#' → logprob: -14.758818626403809
    6. '```' → logprob: -14.883818626403809
    7. '[
' → logprob: -15.008818626403809
    8. '
' → logprob: -15.633818626403809
    9. '   ' → logprob: -16.008817672729492
    10. '2' → logprob: -16.883817672729492

Token 1870: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931551098823547
    2. '1' → logprob: -0.6931551098823547
    3. '[' → logprob: -12.568155288696289
    4. '   ' → logprob: -13.193155288696289
    5. ' ' → logprob: -13.443155288696289
    6. '
' → logprob: -14.943155288696289
    7. '```' → logprob: -15.568155288696289
    8. '-' → logprob: -15.818155288696289
    9. '01' → logprob: -16.06815528869629
    10. '``' → logprob: -16.44315528869629

Token 1871: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009242421947419643
    2. '][' → logprob: -4.759242534637451
    3. '1' → logprob: -7.384242534637451
    4. '```' → logprob: -13.509242057800293
    5. ' [' → logprob: -13.884242057800293
    6. '   ' → logprob: -14.009242057800293
    7. '0' → logprob: -14.259242057800293
    8. '
' → logprob: -14.384242057800293
    9. '}[' → logprob: -14.509242057800293
    10. ')[' → logprob: -14.759242057800293

Token 1872: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. '0' → logprob: -11.25001335144043
    3. '
' → logprob: -16.50001335144043
    4. '   ' → logprob: -17.37501335144043
    5. '[' → logprob: -18.62501335144043
    6. ' ' → logprob: -19.12501335144043
    7. '```' → logprob: -19.37501335144043
    8. '	' → logprob: -21.00001335144043
    9. '``' → logprob: -21.00001335144043
    10. '01' → logprob: -21.12501335144043

Token 1873: ']*' (ID: 18579)
  Prédit: '*M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*M' → logprob: -0.0013736842665821314
    2. '*' → logprob: -6.876373767852783
    3. ']*' → logprob: -8.001373291015625
    4. '```' → logprob: -13.251373291015625
    5. ')*' → logprob: -14.001373291015625
    6. ' *' → logprob: -14.376373291015625
    7. '[M' → logprob: -14.751373291015625
    8. '*C' → logprob: -15.001373291015625
    9. '**' → logprob: -15.126373291015625
    10. '*T' → logprob: -15.126373291015625

Token 1874: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.306760805164231e-05
    2. ' M' → logprob: -11.25001335144043
    3. '[M' → logprob: -17.87501335144043
    4. '	M' → logprob: -18.37501335144043
    5. '   ' → logprob: -18.87501335144043
    6. '[' → logprob: -19.87501335144043
    7. '(M' → logprob: -20.00001335144043
    8. ' ' → logprob: -20.25001335144043
    9. '```' → logprob: -20.50001335144043
    10. '>M' → logprob: -20.75001335144043

Token 1875: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20253801345825195
    2. '1' → logprob: -1.702538013458252
    3. '0' → logprob: -7.202538013458252
    4. '```' → logprob: -8.327537536621094
    5. '   ' → logprob: -10.202537536621094
    6. '
' → logprob: -10.452537536621094
    7. '``' → logprob: -10.452537536621094
    8. '][' → logprob: -11.827537536621094
    9. '-' → logprob: -12.202537536621094
    10. '(' → logprob: -12.327537536621094

Token 1876: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -12.87500286102295
    3. ' ' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '
' → logprob: -19.250001907348633
    6. '[' → logprob: -19.875001907348633
    7. '-' → logprob: -21.125001907348633
    8. '```' → logprob: -21.125001907348633
    9. '2' → logprob: -21.500001907348633
    10. '	' → logprob: -21.625001907348633

Token 1877: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0036615950521081686
    2. '][' → logprob: -6.003661632537842
    3. '0' → logprob: -6.753661632537842
    4. '```' → logprob: -12.128661155700684
    5. '00' → logprob: -12.753661155700684
    6. '   ' → logprob: -12.753661155700684
    7. '
' → logprob: -13.003661155700684
    8. '1' → logprob: -14.003661155700684
    9. ' [' → logprob: -14.378661155700684
    10. '``' → logprob: -14.628661155700684

Token 1878: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -18.0
    3. '[' → logprob: -18.0
    4. '
' → logprob: -18.0
    5. ' ' → logprob: -18.375
    6. '   ' → logprob: -18.875
    7. '۰' → logprob: -19.125
    8. '```' → logprob: -19.8125
    9. '{' → logprob: -20.5
    10. '０' → logprob: -20.875

Token 1879: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40869128704071045
    2. '<|end|>' → logprob: -1.1586912870407104
    3. '<|end|>' → logprob: -4.53369140625
    4. '}' → logprob: -5.53369140625
    5. ']' → logprob: -5.65869140625
    6. '
' → logprob: -7.15869140625
    7. '>' → logprob: -7.53369140625
    8. ')>' → logprob: -8.03369140625
    9. ')
' → logprob: -8.28369140625
    10. ',' → logprob: -8.28369140625

Token 1880: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1881: ' len' (ID: 4631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931842565536499
    2. 'len' → logprob: -0.6931842565536499
    3. ' len' → logprob: -11.193183898925781
    4. ' n' → logprob: -12.193183898925781
    5. '(len' → logprob: -12.193183898925781
    6. '   ' → logprob: -12.318183898925781
    7. 'length' → logprob: -13.443183898925781
    8. '(n' → logprob: -13.443183898925781
    9. 'num' → logprob: -13.943183898925781
    10. '	n' → logprob: -14.318183898925781

Token 1882: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0032403396908193827
    2. '(M' → logprob: -5.75324010848999
    3. 'rows' → logprob: -9.878240585327148
    4. ' M' → logprob: -12.003240585327148
    5. '[M' → logprob: -13.503240585327148
    6. '(rows' → logprob: -13.753240585327148
    7. '=' → logprob: -14.128240585327148
    8. 'lines' → logprob: -14.128240585327148
    9. '(lines' → logprob: -15.128240585327148
    10. '=M' → logprob: -15.253240585327148

Token 1883: ')>=' (ID: 173043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08786812424659729
    2. ')==' → logprob: -2.8378682136535645
    3. ')>' → logprob: -4.7128682136535645
    4. '==' → logprob: -4.7128682136535645
    5. ')>=' → logprob: -5.4628682136535645
    6. '[' → logprob: -6.5878682136535645
    7. '>' → logprob: -6.5878682136535645
    8. ' ==' → logprob: -8.712867736816406
    9. '>=' → logprob: -9.212867736816406
    10. ')<' → logprob: -9.462867736816406

Token 1884: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.000001907348633
    3. '   ' → logprob: -15.250001907348633
    4. '1' → logprob: -15.250001907348633
    5. '
' → logprob: -16.250001907348633
    6. '3' → logprob: -16.625001907348633
    7. '```' → logprob: -17.000001907348633
    8. '(' → logprob: -17.125001907348633
    9. ')' → logprob: -17.812501907348633
    10. '[' → logprob: -18.687501907348633

Token 1885: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.24805514514446259
    2. ' else' → logprob: -2.1230552196502686
    3. '!=' → logprob: -2.4980552196502686
    4. ' !=' → logprob: -4.1230549812316895
    5. 'if' → logprob: -7.6230549812316895
    6. ' if' → logprob: -8.498055458068848
    7. '<|end|>' → logprob: -8.623055458068848
    8. '!==' → logprob: -8.998055458068848
    9. '==' → logprob: -9.248055458068848
    10. '	else' → logprob: -9.373055458068848

Token 1886: ' None' (ID: 4662)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.117488145828247
    2. 'None' → logprob: -1.242488145828247
    3. '-M' → logprob: -1.867488145828247
    4. '-' → logprob: -2.867488145828247
    5. '0' → logprob: -2.867488145828247
    6. '(-' → logprob: -3.117488145828247
    7. ' -' → logprob: -4.492487907409668
    8. '-(' → logprob: -4.492487907409668
    9. ' None' → logprob: -4.742487907409668
    10. '1' → logprob: -4.867487907409668

Token 1887: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9336393475532532
    2. '           ' → logprob: -1.1836392879486084
    3. ' if' → logprob: -1.5586392879486084
    4. '       ' → logprob: -3.8086392879486084
    5. 'if' → logprob: -3.9336392879486084
    6. '<|end|>' → logprob: -4.0586395263671875
    7. ':' → logprob: -5.1836395263671875
    8. 'else' → logprob: -5.6836395263671875
    9. '<|end|>' → logprob: -5.8086395263671875
    10. ' None' → logprob: -5.9336395263671875

Token 1888: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6803363561630249
    2. ':' → logprob: -1.680336356163025
    3. '           ' → logprob: -1.805336356163025
    4. ' if' → logprob: -2.9303364753723145
    5. '       ' → logprob: -3.6803364753723145
    6. '
' → logprob: -3.8053364753723145
    7. 'if' → logprob: -4.4303364753723145
    8. '\n' → logprob: -5.4303364753723145
    9. '```' → logprob: -5.5553364753723145
    10. '               ' → logprob: -5.8053364753723145

Token 1889: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002212704159319401
    2. ' if' → logprob: -6.5022125244140625
    3. '           ' → logprob: -7.5022125244140625
    4. '       ' → logprob: -8.752212524414062
    5. '```' → logprob: -16.377212524414062
    6. '   ' → logprob: -16.752212524414062
    7. 'If' → logprob: -16.877212524414062
    8. 'None' → logprob: -17.252212524414062
    9. 'import' → logprob: -17.627212524414062
    10. '               ' → logprob: -17.877212524414062

Token 1890: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.29775670170783997
    2. 'det' → logprob: -1.4227566719055176
    3. 'n' → logprob: -4.547756671905518
    4. ' len' → logprob: -6.172756671905518
    5. ' det' → logprob: -6.547756671905518
    6. 'None' → logprob: -6.672756671905518
    7. 'not' → logprob: -7.672756671905518
    8. 'abs' → logprob: -8.422757148742676
    9. ' n' → logprob: -8.672757148742676
    10. 'M' → logprob: -9.547757148742676

Token 1891: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -1.3663626305060461e-05
    2. '==' → logprob: -11.62501335144043
    3. '(rows' → logprob: -13.25001335144043
    4. '(
' → logprob: -14.00001335144043
    5. 'M' → logprob: -14.12501335144043
    6. '(' → logprob: -14.50001335144043
    7. '=' → logprob: -15.50001335144043
    8. '(m' → logprob: -15.75001335144043
    9. 'rows' → logprob: -15.87501335144043
    10. '(lines' → logprob: -16.50001335144043

Token 1892: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27485013008117676
    2. '==' → logprob: -2.0248501300811768
    3. '<' → logprob: -2.5248501300811768
    4. ')<' → logprob: -4.149849891662598
    5. ')==' → logprob: -5.149849891662598
    6. '!=' → logprob: -5.774849891662598
    7. '[' → logprob: -6.774849891662598
    8. ' ==' → logprob: -7.399849891662598
    9. ')!=' → logprob: -7.524849891662598
    10. ' <' → logprob: -7.899849891662598

Token 1893: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04291480779647827
    2. ' ==' → logprob: -3.917914867401123
    3. '!=' → logprob: -4.042914867401123
    4. '<' → logprob: -5.667914867401123
    5. ' !=' → logprob: -7.167914867401123
    6. '==
' → logprob: -8.542914390563965
    7. ' <' → logprob: -9.542914390563965
    8. '>=' → logprob: -10.292914390563965
    9. '<=' → logprob: -10.917914390563965
    10. '>' → logprob: -11.417914390563965

Token 1894: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.061054359131958e-06
    2. '3' → logprob: -11.750007629394531
    3. ' ' → logprob: -15.875007629394531
    4. '1' → logprob: -17.62500762939453
    5. '   ' → logprob: -20.00000762939453
    6. '=' → logprob: -20.12500762939453
    7. '۲' → logprob: -20.43750762939453
    8. ')' → logprob: -20.68750762939453
    9. '#' → logprob: -20.75000762939453
    10. '(' → logprob: -20.81250762939453

Token 1895: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '3' → logprob: -13.750000953674316
    3. ' ' → logprob: -16.750001907348633
    4. '1' → logprob: -17.000001907348633
    5. '
' → logprob: -17.750001907348633
    6. 'n' → logprob: -18.875001907348633
    7. '(' → logprob: -19.437501907348633
    8. '   ' → logprob: -19.687501907348633
    9. '```' → logprob: -19.875001907348633
    10. '２' → logprob: -20.000001907348633

Token 1896: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21879561245441437
    2. ':
' → logprob: -1.968795657157898
    3. ' or' → logprob: -2.9687955379486084
    4. '               ' → logprob: -6.2187957763671875
    5. 'or' → logprob: -6.4687957763671875
    6. '           ' → logprob: -6.7187957763671875
    7. ':return' → logprob: -7.8437957763671875
    8. ' and' → logprob: -8.343795776367188
    9. 'and' → logprob: -9.343795776367188
    10. '       ' → logprob: -11.218795776367188

Token 1897: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6107931137084961
    2. '               ' → logprob: -0.8607931137084961
    3. ':' → logprob: -3.860793113708496
    4. '           ' → logprob: -4.610793113708496
    5. ':return' → logprob: -6.610793113708496
    6. ' and' → logprob: -6.985793113708496
    7. ' or' → logprob: -7.985793113708496
    8. 'return' → logprob: -8.610793113708496
    9. ' return' → logprob: -8.610793113708496
    10. ',' → logprob: -9.985793113708496

Token 1898: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2305510938167572
    2. ' return' → logprob: -2.85555100440979
    3. '#' (adapté à ' #') → logprob: -3.10555100440979
    4. '               ' → logprob: -3.10555100440979
    5. 'if' → logprob: -3.85555100440979
    6. '           ' → logprob: -4.105551242828369
    7. '                   ' → logprob: -4.605551242828369
    8. ' if' → logprob: -5.480551242828369
    9. '   ' → logprob: -5.605551242828369
    10. 'for' → logprob: -6.605551242828369

Token 1899: ' Only' (ID: 12817)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005455262493342161
    2. '           ' → logprob: -6.630455493927002
    3. 'if' → logprob: -6.630455493927002
    4. '#' → logprob: -7.005455493927002
    5. '               ' → logprob: -7.130455493927002
    6. 'for' → logprob: -7.380455493927002
    7. ' return' → logprob: -8.880455017089844
    8. 'rows' → logprob: -9.255455017089844
    9. 'x' → logprob: -9.880455017089844
    10. 'try' → logprob: -10.630455017089844

Token 1900: ' one' (ID: 1001)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.453552007675171
    2. 'return' → logprob: -1.578552007675171
    3. 'line' → logprob: -2.078552007675171
    4. 'sign' → logprob: -2.453552007675171
    5. 'rows' → logprob: -2.953552007675171
    6. 'self' → logprob: -3.328552007675171
    7. '#' → logprob: -3.328552007675171
    8. ' M' → logprob: -3.453552007675171
    9. 'M' → logprob: -3.828552007675171
    10. ' return' → logprob: -4.07855224609375

Token 1901: ' equation' (ID: 42006)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6097379326820374
    2. 'line' → logprob: -1.8597378730773926
    3. ' line' → logprob: -2.1097378730773926
    4. ' row' → logprob: -2.7347378730773926
    5. ' equation' → logprob: -3.3597378730773926
    6. 'equ' → logprob: -3.4847378730773926
    7. 'return' → logprob: -3.7347378730773926
    8. ' return' → logprob: -5.359737873077393
    9. '               ' → logprob: -5.484737873077393
    10. '
' → logprob: -5.609737873077393

Token 1902: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08095438778400421
    2. '           ' → logprob: -3.3309543132781982
    3. ' return' → logprob: -3.8309543132781982
    4. ' if' → logprob: -5.080954551696777
    5. 'return' → logprob: -5.705954551696777
    6. ':' → logprob: -5.830954551696777
    7. ',' → logprob: -5.955954551696777
    8. '
' → logprob: -6.705954551696777
    9. '                   ' → logprob: -6.705954551696777
    10. ':
' → logprob: -6.830954551696777

Token 1903: ' line' (ID: 2543)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09400460124015808
    2. 'if' → logprob: -3.0940046310424805
    3. '#' → logprob: -3.5940046310424805
    4. 'a' → logprob: -4.7190046310424805
    5. ' return' → logprob: -5.4690046310424805
    6. 'None' → logprob: -6.3440046310424805
    7. 'row' → logprob: -7.8440046310424805
    8. 'A' → logprob: -7.9690046310424805
    9. ' if' → logprob: -8.34400463104248
    10. 'for' → logprob: -8.46900463104248

Token 1904: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9926148056983948
    2. ':' → logprob: -1.99261474609375
    3. ' or' → logprob: -2.11761474609375
    4. ',' → logprob: -2.49261474609375
    5. '
' → logprob: -2.74261474609375
    6. ' return' → logprob: -2.99261474609375
    7. '               ' → logprob: -3.36761474609375
    8. 'return' → logprob: -3.49261474609375
    9. ':
' → logprob: -3.61761474609375
    10. ' if' → logprob: -3.86761474609375

Token 1905: ' solutions' (ID: 9368)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.05658578872680664
    2. 'possible' → logprob: -3.1815857887268066
    3. 'points' → logprob: -4.556585788726807
    4. 'in' → logprob: -6.431585788726807
    5. 'solution' → logprob: -6.806585788726807
    6. 'inf' → logprob: -9.431585311889648
    7. 's' → logprob: -9.556585311889648
    8. ' solutions' → logprob: -9.681585311889648
    9. 'valid' → logprob: -10.556585311889648
    10. 'code' → logprob: -11.431585311889648

Token 1906: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6777057647705078
    2. '           ' → logprob: -1.3027057647705078
    3. '
' → logprob: -2.427705764770508
    4. ':
' → logprob: -2.677705764770508
    5. 'return' → logprob: -4.052705764770508
    6. ':' → logprob: -4.302705764770508
    7. ' return' → logprob: -4.802705764770508
    8. ' if' → logprob: -5.177705764770508
    9. ',' → logprob: -5.302705764770508
    10. ' or' → logprob: -5.677705764770508

Token 1907: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019587049260735512
    2. '                   ' → logprob: -4.89458703994751
    3. '
' → logprob: -5.26958703994751
    4. '           ' → logprob: -5.76958703994751
    5. ':
' → logprob: -6.76958703994751
    6. 'return' → logprob: -7.14458703994751
    7. ' return' → logprob: -7.39458703994751
    8. '   ' → logprob: -7.76958703994751
    9. ':' → logprob: -9.019587516784668
    10. '                
' → logprob: -9.394587516784668

Token 1908: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0024415277875959873
    2. 'if' → logprob: -7.12744140625
    3. '#' (adapté à ' #') → logprob: -7.37744140625
    4. ' return' → logprob: -8.00244140625
    5. 'a' → logprob: -8.25244140625
    6. 'row' → logprob: -9.25244140625
    7. 'x' → logprob: -9.25244140625
    8. '               ' → logprob: -9.62744140625
    9. '           ' → logprob: -10.12744140625
    10. 'c' → logprob: -10.50244140625

Token 1909: ' We' (ID: 1416)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001797873410396278
    2. '           ' → logprob: -7.001797676086426
    3. '#' → logprob: -7.751797676086426
    4. 'if' → logprob: -8.501797676086426
    5. '               ' → logprob: -9.501797676086426
    6. 'x' → logprob: -10.126797676086426
    7. 'a' → logprob: -10.251797676086426
    8. ' return' → logprob: -10.376797676086426
    9. 'for' → logprob: -11.251797676086426
    10. 'from' → logprob: -11.376797676086426

Token 1910: ' cannot' (ID: 6284)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8593857288360596
    2. ' return' → logprob: -1.3593857288360596
    3. '               ' → logprob: -1.6093857288360596
    4. '           ' → logprob: -2.4843857288360596
    5. '#' → logprob: -5.1093854904174805
    6. ' can' → logprob: -5.2343854904174805
    7. ' #' → logprob: -5.9843854904174805
    8. ' cannot' → logprob: -5.9843854904174805
    9. '                   ' → logprob: -6.1093854904174805
    10. ':' → logprob: -6.6093854904174805

Token 1911: ' define' (ID: 13174)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0562463141977787
    2. ' return' → logprob: -2.931246280670166
    3. 'det' → logprob: -6.681246280670166
    4. 'dec' → logprob: -10.306246757507324
    5. '```' → logprob: -10.806246757507324
    6. '   ' → logprob: -11.181246757507324
    7. ' determine' → logprob: -11.431246757507324
    8. ' reliably' → logprob: -11.806246757507324
    9. '       ' → logprob: -12.931246757507324
    10. ' ' → logprob: -12.931246757507324

Token 1912: ' unique' (ID: 5746)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15737254917621613
    2. ' a' → logprob: -2.65737247467041
    3. 'point' → logprob: -3.53237247467041
    4. 'None' → logprob: -4.03237247467041
    5. 'unique' → logprob: -4.28237247467041
    6. 'return' → logprob: -5.28237247467041
    7. ' None' → logprob: -5.90737247467041
    8. ' point' → logprob: -6.03237247467041
    9. ' unique' → logprob: -6.78237247467041
    10. 'exact' → logprob: -7.28237247467041

Token 1913: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.11950141191482544
    2. ' point' → logprob: -2.9945013523101807
    3. 'solution' → logprob: -2.9945013523101807
    4. ' solution' → logprob: -4.86950159072876
    5. 'None' → logprob: -6.24450159072876
    6. '
' → logprob: -6.24450159072876
    7. ' None' → logprob: -7.74450159072876
    8. '```' → logprob: -8.494501113891602
    9. 'return' → logprob: -9.494501113891602
    10. '_point' → logprob: -9.744501113891602

Token 1914: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5659011006355286
    2. '               ' → logprob: -1.1909010410308838
    3. '
' → logprob: -2.440901041030884
    4. ',' → logprob: -4.190901279449463
    5. 'return' → logprob: -4.690901279449463
    6. '                   ' → logprob: -5.565901279449463
    7. '.' → logprob: -5.690901279449463
    8. ':
' → logprob: -6.440901279449463
    9. ' return' → logprob: -6.815901279449463
    10. '       ' → logprob: -6.940901279449463

Token 1915: ' many' (ID: 1991)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1174331083893776
    2. 'return' → logprob: -2.2424330711364746
    3. '               ' → logprob: -5.617433071136475
    4. '           ' → logprob: -7.117433071136475
    5. '                   ' → logprob: -9.367433547973633
    6. '                ' → logprob: -10.617433547973633
    7. '	return' → logprob: -11.242433547973633
    8. '   ' → logprob: -11.492433547973633
    9. ' ' → logprob: -11.992433547973633
    10. ' ' → logprob: -12.367433547973633

Token 1916: ' solutions' (ID: 9368)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9899601936340332
    2. ':return' → logprob: -1.2399601936340332
    3. '
' → logprob: -1.8649601936340332
    4. ' return' → logprob: -2.614960193634033
    5. '<|end|>' → logprob: -2.739960193634033
    6. '.' → logprob: -3.864960193634033
    7. '           ' → logprob: -4.989960193634033
    8. '```' → logprob: -5.364960193634033
    9. ':' → logprob: -6.114960193634033
    10. ' solutions' → logprob: -6.614960193634033

Token 1917: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23235201835632324
    2. '
' → logprob: -1.8573520183563232
    3. '               ' → logprob: -3.1073520183563232
    4. '.' → logprob: -6.357352256774902
    5. ' or' → logprob: -6.857352256774902
    6. ':
' → logprob: -6.982352256774902
    7. 'return' → logprob: -7.232352256774902
    8. '\n' → logprob: -7.857352256774902
    9. ',' → logprob: -7.982352256774902
    10. ':' → logprob: -8.732352256774902

Token 1918: ' must' (ID: 2804)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005362298339605331
    2. ' return' → logprob: -5.255362510681152
    3. '           ' → logprob: -9.755362510681152
    4. '               ' → logprob: -9.880362510681152
    5. 'not' → logprob: -12.130362510681152
    6. 'continue' → logprob: -12.505362510681152
    7. '
' → logprob: -12.505362510681152
    8. 'None' → logprob: -13.005362510681152
    9. '                   ' → logprob: -13.630362510681152
    10. '```' → logprob: -13.755362510681152

Token 1919: ' check' (ID: 2371)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006895594415254891
    2. '           ' → logprob: -7.875689506530762
    3. ' return' → logprob: -8.750689506530762
    4. 'continue' → logprob: -9.375689506530762
    5. 'not' → logprob: -10.250689506530762
    6. '```' → logprob: -11.875689506530762
    7. '       ' → logprob: -12.125689506530762
    8. '               ' → logprob: -12.250689506530762
    9. 'check' → logprob: -12.625689506530762
    10. 'eturn' → logprob: -13.375689506530762

Token 1920: ' consistency' (ID: 45250)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.30259427428245544
    2. 'return' → logprob: -1.8025943040847778
    3. '               ' → logprob: -2.8025941848754883
    4. ' None' → logprob: -4.427594184875488
    5. '           ' → logprob: -4.677594184875488
    6. '                   ' → logprob: -5.927594184875488
    7. ' ' → logprob: -6.177594184875488
    8. '
' → logprob: -6.177594184875488
    9. 'None' → logprob: -6.302594184875488
    10. '```' → logprob: -6.802594184875488

Token 1921: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9798811078071594
    2. '               ' → logprob: -1.3548810482025146
    3. '
' → logprob: -1.7298810482025146
    4. '           ' → logprob: -2.1048810482025146
    5. 'return' → logprob: -4.354881286621094
    6. ' return' → logprob: -4.729881286621094
    7. ':return' → logprob: -5.229881286621094
    8. ' 
' → logprob: -5.354881286621094
    9. '  
' → logprob: -5.604881286621094
    10. '\' → logprob: -5.729881286621094

Token 1922: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006672830786556005
    2. 'return' → logprob: -8.500667572021484
    3. '                   ' → logprob: -8.625667572021484
    4. ' return' → logprob: -8.750667572021484
    5. '
' → logprob: -9.875667572021484
    6. '           ' → logprob: -10.625667572021484
    7. '```' → logprob: -10.750667572021484
    8. ' if' → logprob: -11.125667572021484
    9. '                
' → logprob: -13.000667572021484
    10. '                       ' → logprob: -13.375667572021484

Token 1923: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008793842978775501
    2. '               ' → logprob: -5.758793830871582
    3. 'if' → logprob: -6.008793830871582
    4. ' return' → logprob: -6.258793830871582
    5. '                   ' → logprob: -7.383793830871582
    6. '#' (adapté à ' #') → logprob: -8.383793830871582
    7. 'x' → logprob: -8.383793830871582
    8. 'for' → logprob: -10.008793830871582
    9. '           ' → logprob: -10.258793830871582
    10. 'point' → logprob: -10.508793830871582

Token 1924: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008530414663255215
    2. '               ' → logprob: -5.133530616760254
    3. 'if' → logprob: -6.383530616760254
    4. ' return' → logprob: -7.758530616760254
    5. '                   ' → logprob: -8.508530616760254
    6. '#' → logprob: -9.133530616760254
    7. 'x' → logprob: -9.508530616760254
    8. 'for' → logprob: -10.258530616760254
    9. '           ' → logprob: -10.383530616760254
    10. '   ' → logprob: -11.633530616760254

Token 1925: ' M' (ID: 391)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7655540704727173
    2. 'n' → logprob: -1.2655540704727173
    3. 'M' → logprob: -2.3905539512634277
    4. 'all' → logprob: -3.1405539512634277
    5. 'det' → logprob: -3.1405539512634277
    6. 'abs' → logprob: -3.3905539512634277
    7. 'rows' → logprob: -4.390553951263428
    8. 'False' → logprob: -4.765553951263428
    9. 'math' → logprob: -5.015553951263428
    10. 'sign' → logprob: -5.640553951263428

Token 1926: ' empty' (ID: 8213)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05026216059923172
    2. ')' → logprob: -4.300261974334717
    3. '               ' → logprob: -4.800261974334717
    4. '```' → logprob: -5.175261974334717
    5. '                   ' → logprob: -5.800261974334717
    6. '=' → logprob: -6.175261974334717
    7. '           ' → logprob: -6.300261974334717
    8. '0' → logprob: -6.425261974334717
    9. ':' → logprob: -6.425261974334717
    10. ' =' → logprob: -6.550261974334717

Token 1927: ' (' (ID: 350)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34393826127052307
    2. ':' → logprob: -1.3439382314682007
    3. '==' → logprob: -4.09393835067749
    4. '               ' → logprob: -5.71893835067749
    5. ' or' → logprob: -5.71893835067749
    6. ':return' → logprob: -5.96893835067749
    7. '                   ' → logprob: -6.71893835067749
    8. 'or' → logprob: -6.96893835067749
    9. '           ' → logprob: -7.21893835067749
    10. 'return' → logprob: -7.34393835067749

Token 1928: 'n' (ID: 77)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3644658327102661
    2. 'len' → logprob: -1.3644658327102661
    3. 'n' → logprob: -1.4894658327102661
    4. ')' → logprob: -2.2394657135009766
    5. '):
' → logprob: -3.2394657135009766
    6. ' len' → logprob: -4.114465713500977
    7. '
' → logprob: -4.114465713500977
    8. ' n' → logprob: -4.239465713500977
    9. '#' → logprob: -4.614465713500977
    10. 'False' → logprob: -4.614465713500977

Token 1929: '=' (ID: 28)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7429819107055664
    2. '==' → logprob: -0.8679819107055664
    3. '=' → logprob: -2.4929819107055664
    4. '>' → logprob: -5.117981910705566
    5. ' <' → logprob: -5.492981910705566
    6. ' >' → logprob: -5.867981910705566
    7. '<' → logprob: -5.992981910705566
    8. ' =' → logprob: -6.117981910705566
    9. ')' → logprob: -6.492981910705566
    10. '1' → logprob: -7.367981910705566

Token 1930: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5435616374015808
    2. '0' → logprob: -0.9185616374015808
    3. '2' → logprob: -3.9185616970062256
    4. ' ' → logprob: -9.168561935424805
    5. '```' → logprob: -9.543561935424805
    6. '<' → logprob: -9.668561935424805
    7. '=' → logprob: -10.543561935424805
    8. ')' → logprob: -10.918561935424805
    9. 'lines' → logprob: -11.168561935424805
    10. ' lines' → logprob: -11.793561935424805

Token 1931: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8165438771247864
    2. '):' → logprob: -1.0665438175201416
    3. '):
' → logprob: -2.1915438175201416
    4. ')' → logprob: -2.3165438175201416
    5. ' or' → logprob: -6.066544055938721
    6. ')
' → logprob: -8.066543579101562
    7. ':' → logprob: -8.441543579101562
    8. '):

' → logprob: -8.941543579101562
    9. ':
' → logprob: -9.316543579101562
    10. '               ' → logprob: -9.316543579101562

Token 1932: ' many' (ID: 1991)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023866670206189156
    2. ' return' → logprob: -3.773866653442383
    3. '                   ' → logprob: -7.523866653442383
    4. '               ' → logprob: -9.898866653442383
    5. '#' → logprob: -11.148866653442383
    6. '           ' → logprob: -12.023866653442383
    7. ' ' → logprob: -13.148866653442383
    8. 'for' → logprob: -13.648866653442383
    9. '   ' → logprob: -13.773866653442383
    10. '```' → logprob: -13.898866653442383

Token 1933: ' solutions' (ID: 9368)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3340999484062195
    2. ' return' → logprob: -1.5841000080108643
    3. ' lines' → logprob: -3.4591000080108643
    4. ':return' → logprob: -4.334099769592285
    5. '
' → logprob: -4.709099769592285
    6. 'solutions' → logprob: -4.959099769592285
    7. 'lines' → logprob: -5.209099769592285
    8. 'points' → logprob: -6.209099769592285
    9. ' solutions' → logprob: -6.334099769592285
    10. '           ' → logprob: -6.584099769592285

Token 1934: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1935: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006881842389702797
    2. '                   ' → logprob: -5.2568817138671875
    3. '           ' → logprob: -6.7568817138671875
    4. 'return' → logprob: -8.381881713867188
    5. '
' → logprob: -9.256881713867188
    6. ' return' → logprob: -10.006881713867188
    7. '                       ' → logprob: -10.256881713867188
    8. '```' → logprob: -10.756881713867188
    9. '   ' → logprob: -11.256881713867188
    10. '       ' → logprob: -12.506881713867188

Token 1936: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011835903860628605
    2. '               ' → logprob: -5.386836051940918
    3. ' return' → logprob: -5.636836051940918
    4. 'if' → logprob: -5.886836051940918
    5. '                   ' → logprob: -7.386836051940918
    6. 'for' → logprob: -9.136836051940918
    7. '           ' → logprob: -10.386836051940918
    8. '#' (adapté à ' #') → logprob: -10.511836051940918
    9. ' if' → logprob: -11.261836051940918
    10. 'point' → logprob: -11.261836051940918

Token 1937: ' For' (ID: 2214)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2455991804599762
    2. '               ' → logprob: -1.8705991506576538
    3. 'if' → logprob: -2.9955992698669434
    4. ' return' → logprob: -4.995599269866943
    5. '           ' → logprob: -5.745599269866943
    6. '                   ' → logprob: -6.495599269866943
    7. ' if' → logprob: -6.870599269866943
    8. '```' → logprob: -6.870599269866943
    9. '#' → logprob: -9.745598793029785
    10. '                       ' → logprob: -10.620598793029785

Token 1938: ' single' (ID: 4590)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6154325604438782
    2. 'i' → logprob: -0.8654325604438782
    3. 'n' → logprob: -3.6154325008392334
    4. 'None' → logprob: -6.2404327392578125
    5. 'line' → logprob: -6.4904327392578125
    6. 'M' → logprob: -6.6154327392578125
    7. 'now' → logprob: -6.6154327392578125
    8. ' len' → logprob: -6.7404327392578125
    9. 'True' → logprob: -6.7404327392578125
    10. ' i' → logprob: -7.7404327392578125

Token 1939: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.2152155637741089
    2. 'line' → logprob: -1.4652155637741089
    3. ' equation' → logprob: -1.8402155637741089
    4. ')' → logprob: -2.0902156829833984
    5. 'row' → logprob: -2.9652156829833984
    6. ' if' → logprob: -3.9652156829833984
    7. 'equ' → logprob: -4.090215682983398
    8. 'M' → logprob: -4.340215682983398
    9. ' row' → logprob: -4.465215682983398
    10. '
' → logprob: -4.465215682983398

Token 1940: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6895532011985779
    2. ' if' → logprob: -1.3145532608032227
    3. ':' → logprob: -3.0645532608032227
    4. 'if' → logprob: -3.1895532608032227
    5. ':
' → logprob: -3.3145532608032227
    6. 'return' → logprob: -3.4395532608032227
    7. '               ' → logprob: -3.8145532608032227
    8. ' return' → logprob: -3.9395532608032227
    9. ',' → logprob: -4.439553260803223
    10. ' line' → logprob: -5.189553260803223

Token 1941: ' infinite' (ID: 48413)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.022880973294377327
    2. ' return' → logprob: -3.897881031036377
    3. 'if' → logprob: -7.022881031036377
    4. '                   ' → logprob: -7.272881031036377
    5. '               ' → logprob: -7.772881031036377
    6. '#' → logprob: -9.022880554199219
    7. '           ' → logprob: -9.647880554199219
    8. 'line' → logprob: -10.272880554199219
    9. ' if' → logprob: -10.522880554199219
    10. '   ' → logprob: -11.397880554199219

Token 1942: ' solutions' (ID: 9368)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3321281671524048
    2. 'solutions' → logprob: -2.3321280479431152
    3. '#' → logprob: -2.7071280479431152
    4. 'points' → logprob: -3.7071280479431152
    5. 'return' → logprob: -3.8321280479431152
    6. ' solutions' → logprob: -3.9571280479431152
    7. ' return' → logprob: -4.207128047943115
    8. 'point' → logprob: -4.832128047943115
    9. ' #' → logprob: -5.207128047943115
    10. ' line' → logprob: -5.332128047943115

Token 1943: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19905948638916016
    2. '           ' → logprob: -2.32405948638916
    3. '
' → logprob: -2.57405948638916
    4. 'return' → logprob: -5.69905948638916
    5. ' return' → logprob: -6.82405948638916
    6. '                   ' → logprob: -7.94905948638916
    7. '```' → logprob: -8.07405948638916
    8. '\n' → logprob: -8.19905948638916
    9. ' if' → logprob: -8.94905948638916
    10. ':
' → logprob: -9.19905948638916

Token 1944: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005139950197190046
    2. '           ' → logprob: -6.2551398277282715
    3. '                   ' → logprob: -6.2551398277282715
    4. 'return' → logprob: -7.1301398277282715
    5. '
' → logprob: -8.75514030456543
    6. ' return' → logprob: -9.00514030456543
    7. '```' → logprob: -9.25514030456543
    8. '                       ' → logprob: -10.63014030456543
    9. '			' → logprob: -11.63014030456543
    10. '   ' → logprob: -11.63014030456543

Token 1945: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013557689264416695
    2. '               ' → logprob: -4.5135579109191895
    3. 'if' → logprob: -6.2635579109191895
    4. '                   ' → logprob: -8.263557434082031
    5. '#' → logprob: -8.763557434082031
    6. ' return' → logprob: -9.388557434082031
    7. '           ' → logprob: -10.388557434082031
    8. 'x' → logprob: -10.388557434082031
    9. 'point' → logprob: -10.888557434082031
    10. '   ' → logprob: -12.138557434082031

Token 1946: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.2007883671903983e-05
    2. 'self' → logprob: -11.500021934509277
    3. 'Point' → logprob: -11.875021934509277
    4. ' None' → logprob: -12.750021934509277
    5. 'point' → logprob: -14.250021934509277
    6. '(None' → logprob: -15.125021934509277
    7. '```' → logprob: -15.375021934509277
    8. '
' → logprob: -15.625021934509277
    9. '   ' → logprob: -16.000022888183594
    10. 'No' → logprob: -16.750022888183594

Token 1947: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6477426886558533
    2. '
' → logprob: -0.7727426886558533
    3. '       ' → logprob: -4.272742748260498
    4. '<|end|>' → logprob: -8.64774227142334
    5. '		' → logprob: -8.77274227142334
    6. 'if' → logprob: -8.89774227142334
    7. '            
' → logprob: -8.89774227142334
    8. '
' → logprob: -9.77274227142334
    9. '

' → logprob: -10.02274227142334
    10. '        
' → logprob: -10.14774227142334

Token 1948: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017381006851792336
    2. '
' → logprob: -4.767381191253662
    3. '       ' → logprob: -4.767381191253662
    4. 'import' → logprob: -8.767380714416504
    5. '```' → logprob: -10.267380714416504
    6. 'if' → logprob: -11.142380714416504
    7. '               ' → logprob: -12.392380714416504
    8. '            
' → logprob: -12.642380714416504
    9. 'elif' → logprob: -12.642380714416504
    10. '        
' → logprob: -12.642380714416504

Token 1949: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01691029593348503
    2. '           ' → logprob: -4.516910076141357
    3. 'import' → logprob: -5.266910076141357
    4. '       ' → logprob: -7.516910076141357
    5. 'from' → logprob: -9.641910552978516
    6. ' if' → logprob: -9.641910552978516
    7. '```' → logprob: -12.016910552978516
    8. '
' → logprob: -12.766910552978516
    9. 'try' → logprob: -13.891910552978516
    10. 'abs' → logprob: -14.266910552978516

Token 1950: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014309466816484928
    2. 'import' → logprob: -4.514309406280518
    3. '           ' → logprob: -6.014309406280518
    4. 'from' → logprob: -7.264309406280518
    5. '       ' → logprob: -10.014309883117676
    6. 'try' → logprob: -10.014309883117676
    7. ' if' → logprob: -11.264309883117676
    8. '   ' → logprob: -12.264309883117676
    9. 'det' → logprob: -13.139309883117676
    10. '
' → logprob: -14.264309883117676

Token 1951: ' n' (ID: 297)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.48641064763069153
    2. 'abs' → logprob: -0.9864106178283691
    3. ' abs' → logprob: -4.986410617828369
    4. ' det' → logprob: -5.236410617828369
    5. 'len' → logprob: -10.236411094665527
    6. 'd' → logprob: -10.361411094665527
    7. '   ' → logprob: -10.986411094665527
    8. 'math' → logprob: -12.486411094665527
    9. ' determinant' → logprob: -12.486411094665527
    10. ' ' → logprob: -13.236411094665527

Token 1952: '>' (ID: 29)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.48924893140792847
    2. '>=' → logprob: -1.7392489910125732
    3. '=' → logprob: -2.3642489910125732
    4. ' ==' → logprob: -3.6142489910125732
    5. '[' → logprob: -3.7392489910125732
    6. '>' → logprob: -3.8642489910125732
    7. '-' → logprob: -4.739248752593994
    8. '           ' → logprob: -5.239248752593994
    9. '       ' → logprob: -5.489248752593994
    10. '
' → logprob: -5.614248752593994

Token 1953: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20341868698596954
    2. '2' → logprob: -1.8284187316894531
    3. '1' → logprob: -3.828418731689453
    4. ' ' → logprob: -7.328418731689453
    5. ' =' → logprob: -7.953418731689453
    6. '==' → logprob: -8.203418731689453
    7. '-' → logprob: -8.953418731689453
    8. '           ' → logprob: -9.578418731689453
    9. '>=' → logprob: -9.953418731689453
    10. '>' → logprob: -10.453418731689453

Token 1954: ' lines' (ID: 8698)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5628008842468262
    2. ' if' → logprob: -1.4378008842468262
    3. '           ' → logprob: -2.187800884246826
    4. '
' → logprob: -2.687800884246826
    5. '       ' → logprob: -4.937800884246826
    6. 'try' → logprob: -6.937800884246826
    7. ':' → logprob: -7.187800884246826
    8. '#' → logprob: -7.312800884246826
    9. ' try' → logprob: -7.312800884246826
    10. 'import' → logprob: -7.687800884246826

Token 1955: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0057127466425299644
    2. 'if' → logprob: -6.130712509155273
    3. ' if' → logprob: -6.255712509155273
    4. '
' → logprob: -6.880712509155273
    5. 'import' → logprob: -7.755712509155273
    6. '       ' → logprob: -9.380712509155273
    7. 'from' → logprob: -10.880712509155273
    8. ',' → logprob: -11.130712509155273
    9. '#' → logprob: -11.755712509155273
    10. '            
' → logprob: -12.255712509155273

Token 1956: ' solve' (ID: 17722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38123318552970886
    2. 'try' → logprob: -2.0062332153320312
    3. 'rank' → logprob: -2.5062332153320312
    4. 'import' → logprob: -3.5062332153320312
    5. 'det' → logprob: -4.381233215332031
    6. '#' → logprob: -4.381233215332031
    7. '           ' → logprob: -4.506233215332031
    8. 'from' → logprob: -4.506233215332031
    9. '       ' → logprob: -4.756233215332031
    10. 'return' → logprob: -5.631233215332031

Token 1957: ' least' (ID: 5153)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08208239823579788
    2. 'from' → logprob: -3.082082509994507
    3. '           ' → logprob: -4.332082271575928
    4. 'try' → logprob: -4.582082271575928
    5. '
' → logprob: -6.457082271575928
    6. 'A' → logprob: -6.457082271575928
    7. '#' → logprob: -6.832082271575928
    8. ' import' → logprob: -6.957082271575928
    9. 'using' → logprob: -7.207082271575928
    10. ' from' → logprob: -7.332082271575928

Token 1958: ' squares' (ID: 57269)
  Prédit: ' squares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' squares' → logprob: -0.4320315420627594
    2. 's' → logprob: -1.182031512260437
    3. 'sq' → logprob: -3.6820316314697266
    4. 'quares' → logprob: -4.682031631469727
    5. '_s' → logprob: -4.932031631469727
    6. 'square' → logprob: -6.682031631469727
    7. '           ' → logprob: -7.932031631469727
    8. '       ' → logprob: -8.307031631469727
    9. 'Squares' → logprob: -8.807031631469727
    10. 'import' → logprob: -8.807031631469727

Token 1959: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6227831244468689
    2. 'import' → logprob: -1.3727831840515137
    3. ':' → logprob: -1.8727831840515137
    4. ' =' → logprob: -4.497783184051514
    5. ':
' → logprob: -4.872783184051514
    6. ',' → logprob: -4.872783184051514
    7. '```' → logprob: -5.122783184051514
    8. '       ' → logprob: -5.247783184051514
    9. ' with' → logprob: -5.747783184051514
    10. '=' → logprob: -5.997783184051514

Token 1960: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3720886707305908
    2. ':' → logprob: -1.6220886707305908
    3. 'import' → logprob: -3.247088670730591
    4. ',' → logprob: -3.872088670730591
    5. '       ' → logprob: -3.997088670730591
    6. ' =' → logprob: -5.497088432312012
    7. ' if' → logprob: -5.872088432312012
    8. ' or' → logprob: -5.872088432312012
    9. ':
' → logprob: -5.997088432312012
    10. '.' → logprob: -5.997088432312012

Token 1961: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01496320404112339
    2. 'from' → logprob: -4.889963150024414
    3. 'try' → logprob: -5.389963150024414
    4. ' import' → logprob: -6.514963150024414
    5. '           ' → logprob: -7.139963150024414
    6. ' from' → logprob: -9.014963150024414
    7. 'if' → logprob: -9.514963150024414
    8. '#' (adapté à ' #') → logprob: -9.639963150024414
    9. '               ' → logprob: -9.764963150024414
    10. 'A' → logprob: -9.764963150024414

Token 1962: ' Check' (ID: 6208)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.05302370712161064
    2. 'try' → logprob: -3.8030238151550293
    3. 'from' → logprob: -4.178023815155029
    4. 'if' → logprob: -4.678023815155029
    5. '           ' → logprob: -5.553023815155029
    6. '```' → logprob: -8.053023338317871
    7. '#' → logprob: -9.303023338317871
    8. '               ' → logprob: -9.428023338317871
    9. 'x' → logprob: -9.428023338317871
    10. 'A' → logprob: -10.053023338317871

Token 1963: ' exact' (ID: 6354)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.044958241283893585
    2. 'det' → logprob: -4.169958114624023
    3. 'rank' → logprob: -4.169958114624023
    4. 'import' → logprob: -5.169958114624023
    5. 'abs' → logprob: -5.419958114624023
    6. 'n' → logprob: -6.669958114624023
    7. ' len' → logprob: -7.544958114624023
    8. 'all' → logprob: -7.669958114624023
    9. 'if' → logprob: -8.294958114624023
    10. 'try' → logprob: -9.419958114624023

Token 1964: ' by' (ID: 656)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rank' → logprob: -1.113021969795227
    2. 'if' → logprob: -1.613021969795227
    3. 'None' → logprob: -1.613021969795227
    4. 'import' → logprob: -2.8630218505859375
    5. 'det' → logprob: -3.2380218505859375
    6. 'M' → logprob: -3.4880218505859375
    7. ' rank' → logprob: -3.6130218505859375
    8. 'method' → logprob: -4.4880218505859375
    9. 'for' → logprob: -4.4880218505859375
    10. 'ness' → logprob: -4.6130218505859375

Token 1965: ' normal' (ID: 6078)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.361252784729004
    2. 'det' → logprob: -1.736252784729004
    3. 'numpy' → logprob: -1.736252784729004
    4. 'rank' → logprob: -1.986252784729004
    5. 'try' → logprob: -2.611252784729004
    6. 'import' → logprob: -2.861252784729004
    7. 'abs' → logprob: -2.986252784729004
    8. 'np' → logprob: -3.236252784729004
    9. 'def' → logprob: -4.611252784729004
    10. 'math' → logprob: -4.736252784729004

Token 1966: ' equations' (ID: 61524)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.7528575658798218
    2. '       ' → logprob: -2.2528576850891113
    3. 'M' → logprob: -2.7528576850891113
    4. 'np' → logprob: -3.0028576850891113
    5. 'vec' → logprob: -3.5028576850891113
    6. 'equ' → logprob: -3.7528576850891113
    7. 'matrix' → logprob: -3.7528576850891113
    8. 'rank' → logprob: -4.002857685089111
    9. ' equations' → logprob: -4.127857685089111
    10. '_vector' → logprob: -4.252857685089111

Token 1967: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036451585590839386
    2. 'import' → logprob: -3.411451578140259
    3. '
' → logprob: -7.661451816558838
    4. '<|end|>' → logprob: -7.786451816558838
    5. ',' → logprob: -7.911451816558838
    6. '[' → logprob: -8.41145133972168
    7. 'from' → logprob: -8.41145133972168
    8. '```' → logprob: -8.66145133972168
    9. '<|end|>' → logprob: -9.03645133972168
    10. '       ' → logprob: -9.28645133972168

Token 1968: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032373763620853424
    2. '       ' → logprob: -4.032373905181885
    3. 'import' → logprob: -5.782373905181885
    4. ':' → logprob: -6.282373905181885
    5. '[' → logprob: -6.407373905181885
    6. ')' → logprob: -6.782373905181885
    7. ',' → logprob: -7.157373905181885
    8. '<|end|>' → logprob: -7.157373905181885
    9. '               ' → logprob: -7.532373905181885
    10. '```' → logprob: -7.657373905181885

Token 1969: ' has' (ID: 853)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.40818238258361816
    2. '           ' → logprob: -1.1581823825836182
    3. 'from' → logprob: -4.908182144165039
    4. ' import' → logprob: -5.533182144165039
    5. 'M' → logprob: -5.783182144165039
    6. 'A' → logprob: -6.408182144165039
    7. 'At' → logprob: -6.533182144165039
    8. '```' → logprob: -7.408182144165039
    9. ' M' → logprob: -7.533182144165039
    10. ' from' → logprob: -7.783182144165039

Token 1970: '_exact' (ID: 176804)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11865322291851044
    2. ' =' → logprob: -3.7436532974243164
    3. '_rank' → logprob: -3.8686532974243164
    4. 'len' → logprob: -4.493653297424316
    5. 'rank' → logprob: -5.118653297424316
    6. 'def' → logprob: -5.243653297424316
    7. '=' → logprob: -5.368653297424316
    8. ' import' → logprob: -5.493653297424316
    9. '_' → logprob: -5.493653297424316
    10. ':' → logprob: -5.493653297424316

Token 1971: ' =' (ID: 314)
  Prédit: '_rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rank' → logprob: -0.31488651037216187
    2. ' =' → logprob: -2.0648865699768066
    3. '_solution' → logprob: -2.5648865699768066
    4. '=' → logprob: -3.4398865699768066
    5. '_' → logprob: -4.064886569976807
    6. 'rank' → logprob: -5.314886569976807
    7. ':' → logprob: -5.314886569976807
    8. '=True' → logprob: -6.064886569976807
    9. '=False' → logprob: -6.689886569976807
    10. ',' → logprob: -6.939886569976807

Token 1972: ' len' (ID: 4631)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5910029411315918
    2. 'len' → logprob: -1.3410029411315918
    3. '(len' → logprob: -2.716002941131592
    4. 'all' → logprob: -2.716002941131592
    5. 'det' → logprob: -4.341002941131592
    6. 'True' → logprob: -4.591002941131592
    7. 'abs' → logprob: -4.716002941131592
    8. '(False' → logprob: -4.966002941131592
    9. 'math' → logprob: -5.341002941131592
    10. '(all' → logprob: -6.216002941131592

Token 1973: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.03676775097846985
    2. 'M' → logprob: -3.6617677211761475
    3. '(self' → logprob: -5.036767959594727
    4. '(rows' → logprob: -6.286767959594727
    5. 'rows' → logprob: -7.286767959594727
    6. 'self' → logprob: -7.411767959594727
    7. '(sign' → logprob: -7.786767959594727
    8. 'sign' → logprob: -9.161767959594727
    9. '(lines' → logprob: -9.286767959594727
    10. '(set' → logprob: -9.911767959594727

Token 1974: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6564584374427795
    2. '==' → logprob: -1.0314583778381348
    3. '>=' → logprob: -2.5314583778381348
    4. ')==' → logprob: -4.156458377838135
    5. ' ==' → logprob: -4.531458377838135
    6. ')>=' → logprob: -4.781458377838135
    7. '[' → logprob: -5.406458377838135
    8. ' >=' → logprob: -5.906458377838135
    9. '>' → logprob: -6.156458377838135
    10. ')>' → logprob: -8.281458854675293

Token 1975: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6049751043319702
    2. ' ==' → logprob: -0.8549751043319702
    3. '>=' → logprob: -4.60497522354126
    4. ' >=' → logprob: -4.72997522354126
    5. '>' → logprob: -4.97997522354126
    6. ' >' → logprob: -6.22997522354126
    7. '<=' → logprob: -8.354974746704102
    8. ' <=' → logprob: -8.604974746704102
    9. '[' → logprob: -8.604974746704102
    10. '==
' → logprob: -8.979974746704102

Token 1976: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004374638374429196
    2. 'n' → logprob: -8.25043773651123
    3. 'len' → logprob: -8.75043773651123
    4. '3' → logprob: -11.37543773651123
    5. 'self' → logprob: -13.37543773651123
    6. ' ' → logprob: -13.37543773651123
    7. '0' → logprob: -14.12543773651123
    8. '(n' → logprob: -14.75043773651123
    9. '
' → logprob: -14.87543773651123
    10. '(len' → logprob: -15.25043773651123

Token 1977: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4617256056226324e-05
    2. 'len' → logprob: -11.750014305114746
    3. 'n' → logprob: -12.250014305114746
    4. '0' → logprob: -14.000014305114746
    5. '1' → logprob: -15.500014305114746
    6. '3' → logprob: -15.625014305114746
    7. 'self' → logprob: -15.750014305114746
    8. '(' → logprob: -15.875014305114746
    9. '(n' → logprob: -16.000015258789062
    10. '
' → logprob: -16.250015258789062

Token 1978: '

' (ID: 279)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5857007503509521
    2. '           ' → logprob: -1.7107007503509521
    3. '
' → logprob: -2.960700750350952
    4. 'and' → logprob: -2.960700750350952
    5. '<|end|>' → logprob: -2.960700750350952
    6. ',' → logprob: -3.460700750350952
    7. ' if' → logprob: -3.585700750350952
    8. 'if' → logprob: -4.210700988769531
    9. '       ' → logprob: -4.460700988769531
    10. '<|end|>' → logprob: -4.835700988769531

Token 1979: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10207035392522812
    2. '       ' → logprob: -3.2270703315734863
    3. '
' → logprob: -3.7270703315734863
    4. ' if' → logprob: -4.102070331573486
    5. 'if' → logprob: -4.977070331573486
    6. '   ' → logprob: -6.227070331573486
    7. '<|end|>' → logprob: -6.352070331573486
    8. '```' → logprob: -6.727070331573486
    9. ',' → logprob: -7.102070331573486
    10. '[' → logprob: -7.352070331573486

Token 1980: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11786683648824692
    2. 'import' → logprob: -2.9928667545318604
    3. '           ' → logprob: -2.9928667545318604
    4. 'from' → logprob: -5.2428669929504395
    5. ' if' → logprob: -5.7428669929504395
    6. '       ' → logprob: -6.2428669929504395
    7. '```' → logprob: -8.117866516113281
    8. '   ' → logprob: -9.992866516113281
    9. '               ' → logprob: -10.617866516113281
    10. 'x' → logprob: -10.742866516113281

Token 1981: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.11520762741565704
    2. 'not' → logprob: -2.2402076721191406
    3. 'det' → logprob: -6.865207672119141
    4. 'len' → logprob: -6.865207672119141
    5. 'abs' → logprob: -9.24020767211914
    6. ' not' → logprob: -9.49020767211914
    7. ' has' → logprob: -9.61520767211914
    8. 'n' → logprob: -10.49020767211914
    9. 'False' → logprob: -11.74020767211914
    10. 'M' → logprob: -11.99020767211914

Token 1982: '_exact' (ID: 176804)
  Prédit: '_exact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exact' → logprob: -0.08896738290786743
    2. 'exact' → logprob: -2.4639673233032227
    3. ' exact' → logprob: -10.713967323303223
    4. '[' → logprob: -13.713967323303223
    5. '_' → logprob: -14.088967323303223
    6. '
' → logprob: -14.088967323303223
    7. 'Exact' → logprob: -14.213967323303223
    8. '[
' → logprob: -14.963967323303223
    9. 'e' → logprob: -14.963967323303223
    10. ')' → logprob: -15.588967323303223

Token 1983: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5244237780570984
    2. ':' → logprob: -1.1494238376617432
    3. ':
' → logprob: -2.524423837661743
    4. 'and' → logprob: -4.524423599243164
    5. '==' → logprob: -8.274423599243164
    6. ' ==' → logprob: -10.274423599243164
    7. '=' → logprob: -11.524423599243164
    8. '           ' → logprob: -11.649423599243164
    9. '):
' → logprob: -12.024423599243164
    10. ',' → logprob: -12.274423599243164

Token 1984: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01953304558992386
    2. ':
' → logprob: -4.519533157348633
    3. ' and' → logprob: -5.269533157348633
    4. ':' → logprob: -5.769533157348633
    5. '           ' → logprob: -9.269533157348633
    6. ' if' → logprob: -11.144533157348633
    7. '
' → logprob: -11.144533157348633
    8. ',' → logprob: -11.394533157348633
    9. '[' → logprob: -11.769533157348633
    10. '                   ' → logprob: -12.144533157348633

Token 1985: ' if' (ID: 538)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.03310173749923706
    2. 'den' → logprob: -4.658101558685303
    3. 'D' → logprob: -4.783101558685303
    4. 'a' → logprob: -4.908101558685303
    5. 'M' → logprob: -5.158101558685303
    6. ' det' → logprob: -7.158101558685303
    7. '   ' → logprob: -8.033102035522461
    8. 'd' → logprob: -8.533102035522461
    9. 'if' (adapté à ' if') → logprob: -9.908102035522461
    10. 'Det' → logprob: -10.158102035522461

Token 1986: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.028088385239243507
    2. 'det' → logprob: -3.903088331222534
    3. ' abs' → logprob: -4.903088569641113
    4. '(abs' → logprob: -10.153088569641113
    5. ' det' → logprob: -10.403088569641113
    6. 'M' → logprob: -11.278088569641113
    7. '   ' → logprob: -11.528088569641113
    8. 'math' → logprob: -14.528088569641113
    9. ' M' → logprob: -14.778088569641113
    10. '     ' → logprob: -15.153088569641113

Token 1987: '(det' (ID: 161017)
  Prédit: '(det'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(det' → logprob: -0.25887587666511536
    2. '(M' → logprob: -1.508875846862793
    3. 'det' → logprob: -5.008875846862793
    4. 'M' → logprob: -8.508875846862793
    5. '(' → logprob: -10.383875846862793
    6. '(
' → logprob: -12.133875846862793
    7. '(d' → logprob: -12.883875846862793
    8. '((' → logprob: -13.258875846862793
    9. ' det' → logprob: -14.258875846862793
    10. '(def' → logprob: -14.633875846862793

Token 1988: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009217393584549427
    2. ')>' → logprob: -4.759217262268066
    3. '[' → logprob: -8.509217262268066
    4. '>' → logprob: -8.634217262268066
    5. ')<' → logprob: -9.384217262268066
    6. ')>=' → logprob: -9.384217262268066
    7. ' >' → logprob: -11.009217262268066
    8. '>)' → logprob: -11.634217262268066
    9. ')<=' → logprob: -12.134217262268066
    10. ')>
' → logprob: -12.384217262268066

Token 1989: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.015058801509439945
    2. ' >' → logprob: -4.265058994293213
    3. '<' → logprob: -7.140058994293213
    4. '>=' → logprob: -10.640058517456055
    5. ' <' → logprob: -10.890058517456055
    6. ')' → logprob: -11.015058517456055
    7. '[' → logprob: -11.390058517456055
    8. ')>' → logprob: -11.390058517456055
    9. '<=' → logprob: -12.140058517456055
    10. '==' → logprob: -12.890058517456055

Token 1990: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '   ' → logprob: -18.5
    4. '```' → logprob: -19.125
    5. '           ' → logprob: -20.75
    6. '``' → logprob: -21.875
    7. '       ' → logprob: -22.125
    8. '**' → logprob: -22.875
    9. '>' → logprob: -23.125
    10. '`' → logprob: -23.5

Token 1991: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -17.5
    3. ' ' → logprob: -17.5
    4. '(' → logprob: -20.5
    5. '```' → logprob: -20.875
    6. '=' → logprob: -21.25
    7. '           ' → logprob: -21.375
    8. '0' → logprob: -21.5
    9. '       ' → logprob: -21.625
    10. '
' → logprob: -22.0

Token 1992: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -6.704273118884885e-07
    2. '-' → logprob: -14.250000953674316
    3. '1' → logprob: -19.375
    4. '```' → logprob: -20.75
    5. '.e' → logprob: -21.5
    6. '.' → logprob: -21.625
    7. '3' → logprob: -21.875
    8. '**' → logprob: -21.875
    9. 'E' → logprob: -22.125
    10. '0' → logprob: -22.125

Token 1993: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -16.25
    3. '12' → logprob: -16.5
    4. '15' → logprob: -16.75
    5. '``' → logprob: -17.5
    6. '(-' → logprob: -17.75
    7. '{-' → logprob: -17.75
    8. ' -' → logprob: -18.125
    9. '
' → logprob: -18.25
    10. '\-' → logprob: -18.375

Token 1994: '15' (ID: 1055)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05007905885577202
    2. '12' → logprob: -3.550079107284546
    3. '15' → logprob: -4.050078868865967
    4. '10' → logprob: -6.425078868865967
    5. '14' → logprob: -7.425078868865967
    6. '9' → logprob: -7.800078868865967
    7. '13' → logprob: -10.300079345703125
    8. '8' → logprob: -10.425079345703125
    9. '09' → logprob: -12.300079345703125
    10. '7' → logprob: -13.425079345703125

Token 1995: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1261848509311676
    2. ':' → logprob: -2.6261849403381348
    3. '                   ' → logprob: -3.1261849403381348
    4. '               ' → logprob: -6.626184940338135
    5. ':return' → logprob: -7.251184940338135
    6. ' or' → logprob: -8.876184463500977
    7. '                       ' → logprob: -9.876184463500977
    8. ':
' → logprob: -10.126184463500977
    9. 'return' → logprob: -11.626184463500977
    10. '):
' → logprob: -11.751184463500977

Token 1996: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004460428317543119
    2. '               ' → logprob: -8.500446319580078
    3. '                       ' → logprob: -9.375446319580078
    4. 'return' → logprob: -9.625446319580078
    5. '           ' → logprob: -10.125446319580078
    6. ' return' → logprob: -10.625446319580078
    7. '   ' → logprob: -11.375446319580078
    8. '```' → logprob: -12.375446319580078
    9. '                           ' → logprob: -13.000446319580078
    10. '                  ' → logprob: -13.250446319580078

Token 1997: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.019434021785855293
    2. '                   ' → logprob: -4.019433975219727
    3. ' return' → logprob: -6.769433975219727
    4. '               ' → logprob: -9.394433975219727
    5. '                       ' → logprob: -11.144433975219727
    6. '           ' → logprob: -11.269433975219727
    7. '	return' → logprob: -11.519433975219727
    8. '   ' → logprob: -11.519433975219727
    9. '```' → logprob: -13.519433975219727
    10. '                  ' → logprob: -14.269433975219727

Token 1998: ' No' (ID: 3004)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003335275687277317
    2. ' return' → logprob: -6.128335475921631
    3. '                   ' → logprob: -7.003335475921631
    4. '               ' → logprob: -8.753334999084473
    5. '#' → logprob: -10.253334999084473
    6. '           ' → logprob: -10.753334999084473
    7. '   ' → logprob: -11.503334999084473
    8. '	return' → logprob: -12.753334999084473
    9. 'for' → logprob: -13.003334999084473
    10. '                       ' → logprob: -13.003334999084473

Token 1999: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.49001824855804443
    2. 'solution' → logprob: -1.2400182485580444
    3. ' solution' → logprob: -2.865018367767334
    4. ' unique' → logprob: -3.865018367767334
    5. 'return' → logprob: -5.740018367767334
    6. '_unique' → logprob: -5.990018367767334
    7. '       ' → logprob: -6.115018367767334
    8. '           ' → logprob: -6.240018367767334
    9. '               ' → logprob: -6.365018367767334
    10. '_solution' → logprob: -6.365018367767334

Token 2000: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.03806374967098236
    2. ' solution' → logprob: -3.2880637645721436
    3. '               ' → logprob: -11.538064002990723
    4. '_solution' → logprob: -12.288064002990723
    5. '                   ' → logprob: -12.663064002990723
    6. '
' → logprob: -13.663064002990723
    7. '(solution' → logprob: -14.038064002990723
    8. '           ' → logprob: -14.038064002990723
    9. '```' → logprob: -14.288064002990723
    10. 'solutions' → logprob: -15.163064002990723

Token 2001: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027517497539520264
    2. '                       ' → logprob: -4.777517318725586
    3. ':
' → logprob: -4.777517318725586
    4. '
' → logprob: -5.277517318725586
    5. '               ' → logprob: -5.402517318725586
    6. ':' → logprob: -8.402517318725586
    7. '           ' → logprob: -9.152517318725586
    8. ' or' → logprob: -9.527517318725586
    9. ',' → logprob: -10.152517318725586
    10. ')
' → logprob: -10.152517318725586

Token 2002: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0242302343249321
    2. '                       ' → logprob: -3.7742302417755127
    3. ' or' → logprob: -7.649230003356934
    4. '               ' → logprob: -8.899230003356934
    5. ':
' → logprob: -9.024230003356934
    6. ':' → logprob: -9.399230003356934
    7. '           ' → logprob: -9.899230003356934
    8. ',' → logprob: -10.524230003356934
    9. ' return' → logprob: -10.899230003356934
    10. '                           ' → logprob: -11.524230003356934

Token 2003: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007418495370075107
    2. '                   ' → logprob: -7.250741958618164
    3. ' return' → logprob: -10.750741958618164
    4. '                       ' → logprob: -12.125741958618164
    5. '               ' → logprob: -12.500741958618164
    6. '	return' → logprob: -13.875741958618164
    7. '   ' → logprob: -16.125741958618164
    8. '{return' → logprob: -16.125741958618164
    9. '           ' → logprob: -16.375741958618164
    10. '```' → logprob: -17.125741958618164

Token 2004: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007099286303855479
    2. ' None' → logprob: -7.2507100105285645
    3. '_None' → logprob: -18.250709533691406
    4. '
' → logprob: -19.625709533691406
    5. 'none' → logprob: -19.625709533691406
    6. ' ' → logprob: -19.750709533691406
    7. '=None' → logprob: -20.125709533691406
    8. ',None' → logprob: -20.250709533691406
    9. '(None' → logprob: -20.500709533691406
    10. '                   ' → logprob: -20.750709533691406

Token 2005: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01121746189892292
    2. '
' → logprob: -4.5112175941467285
    3. '                
' → logprob: -9.76121711730957
    4. '           ' → logprob: -10.26121711730957
    5. ')' → logprob: -10.88621711730957
    6. '```' → logprob: -11.51121711730957
    7. '			' → logprob: -11.88621711730957
    8. ')
' → logprob: -12.01121711730957
    9. '
' → logprob: -12.38621711730957
    10. '                   ' → logprob: -12.38621711730957

Token 2006: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004475924652069807
    2. '
' → logprob: -7.750447750091553
    3. '                
' → logprob: -11.750447273254395
    4. '                   ' → logprob: -13.000447273254395
    5. '```' → logprob: -13.250447273254395
    6. '           ' → logprob: -13.500447273254395
    7. '       ' → logprob: -13.750447273254395
    8. 'import' → logprob: -14.625447273254395
    9. 'else' → logprob: -14.875447273254395
    10. '			' → logprob: -15.125447273254395

Token 2007: ' x' (ID: 1215)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09761563688516617
    2. 'x' (adapté à ' x') → logprob: -2.4726157188415527
    3. '                   ' → logprob: -5.972615718841553
    4. ' x' → logprob: -6.222615718841553
    5. 'return' → logprob: -6.347615718841553
    6. 'dx' → logprob: -7.222615718841553
    7. '           ' → logprob: -7.347615718841553
    8. '   ' → logprob: -8.597615242004395
    9. 'import' → logprob: -8.722615242004395
    10. '       ' → logprob: -8.847615242004395

Token 2008: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31390580534935
    2. '=' → logprob: -1.3139058351516724
    3. ',' → logprob: -7.438905715942383
    4. ' =
' → logprob: -10.688905715942383
    5. '=
' → logprob: -11.563905715942383
    6. ')' → logprob: -12.188905715942383
    7. ' ' → logprob: -12.563905715942383
    8. ',y' → logprob: -12.688905715942383
    9. ':' → logprob: -13.688905715942383
    10. '_val' → logprob: -13.688905715942383

Token 2009: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.06779424101114273
    2. '(C' → logprob: -3.5677943229675293
    3. ' (' → logprob: -3.5677943229675293
    4. '(-' → logprob: -4.942794322967529
    5. '(' → logprob: -7.067794322967529
    6. '((' → logprob: -8.067793846130371
    7. ' ' → logprob: -8.317793846130371
    8. '   ' → logprob: -8.817793846130371
    9. '(B' → logprob: -8.942793846130371
    10. '(-(' → logprob: -9.942793846130371

Token 2010: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3287244141101837
    2. 'M' → logprob: -1.5787243843078613
    3. '(C' → logprob: -3.3287243843078613
    4. '(M' → logprob: -3.9537243843078613
    5. ' C' → logprob: -4.828724384307861
    6. ' M' → logprob: -5.828724384307861
    7. ' (' → logprob: -5.953724384307861
    8. ' ' → logprob: -6.578724384307861
    9. '   ' → logprob: -6.953724384307861
    10. '-C' → logprob: -7.203724384307861

Token 2011: '_vec' (ID: 29582)
  Prédit: '_vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -3.297462171758525e-05
    2. 'vec' → logprob: -11.000033378601074
    3. '[' → logprob: -11.125033378601074
    4. 'Vec' → logprob: -13.625033378601074
    5. '_vect' → logprob: -15.250033378601074
    6. '_VEC' → logprob: -16.750032424926758
    7. 'vector' → logprob: -17.750032424926758
    8. '_val' → logprob: -18.500032424926758
    9. 's' → logprob: -18.750032424926758
    10. '   ' → logprob: -18.875032424926758

Token 2012: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020389800192788243
    2. '1' → logprob: -8.750204086303711
    3. '0' → logprob: -10.125204086303711
    4. 's' → logprob: -13.125204086303711
    5. '
' → logprob: -13.250204086303711
    6. '```' → logprob: -15.250204086303711
    7. ' ' → logprob: -15.500204086303711
    8. '#' → logprob: -15.750204086303711
    9. '[
' → logprob: -15.750204086303711
    10. '=' → logprob: -16.25020408630371

Token 2013: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692968547344208
    2. '1' → logprob: -2.126929759979248
    3. '[' → logprob: -13.87692928314209
    4. '
' → logprob: -14.87692928314209
    5. '   ' → logprob: -16.126930236816406
    6. '01' → logprob: -16.626930236816406
    7. '```' → logprob: -16.876930236816406
    8. ' ' → logprob: -18.126930236816406
    9. '#' → logprob: -18.126930236816406
    10. '``' → logprob: -18.751930236816406

Token 2014: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20198741555213928
    2. ' *' → logprob: -1.701987385749817
    3. '*M' → logprob: -8.076987266540527
    4. '[' → logprob: -8.576987266540527
    5. '*y' → logprob: -11.451987266540527
    6. '*(' → logprob: -11.451987266540527
    7. '*b' → logprob: -11.576987266540527
    8. '*C' → logprob: -11.576987266540527
    9. '*S' → logprob: -12.201987266540527
    10. '*A' → logprob: -12.201987266540527

Token 2015: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -4.961759259458631e-06
    2. ' M' → logprob: -12.250004768371582
    3. '[M' → logprob: -16.8750057220459
    4. '   ' → logprob: -18.1250057220459
    5. '	M' → logprob: -19.0000057220459
    6. '[' → logprob: -19.1250057220459
    7. '(M' → logprob: -19.5000057220459
    8. '           ' → logprob: -19.8750057220459
    9. 'm' → logprob: -20.0000057220459
    10. ' ' → logprob: -20.1250057220459

Token 2016: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028115289751440287
    2. '1' → logprob: -5.877811431884766
    3. '[
' → logprob: -12.752811431884766
    4. '```' → logprob: -13.377811431884766
    5. '[[' → logprob: -14.502811431884766
    6. '][' → logprob: -14.627811431884766
    7. '
' → logprob: -14.877811431884766
    8. ' [' → logprob: -15.127811431884766
    9. '``' → logprob: -15.502811431884766
    10. '   ' → logprob: -16.002811431884766

Token 2017: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002060436672763899
    2. '[' → logprob: -8.500205993652344
    3. '0' → logprob: -13.875205993652344
    4. '
' → logprob: -14.000205993652344
    5. '```' → logprob: -15.500205993652344
    6. '][' → logprob: -16.500205993652344
    7. '[
' → logprob: -16.500205993652344
    8. '   ' → logprob: -16.500205993652344
    9. ']' → logprob: -16.625205993652344
    10. '``' → logprob: -16.625205993652344

Token 2018: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007622602861374617
    2. '][' → logprob: -5.007622718811035
    3. '1' → logprob: -7.007622718811035
    4. '0' → logprob: -14.257622718811035
    5. '[
' → logprob: -15.382622718811035
    6. ' [' → logprob: -15.632622718811035
    7. '
' → logprob: -15.882622718811035
    8. ']' → logprob: -16.00762176513672
    9. '#' → logprob: -16.25762176513672
    10. ' ' → logprob: -16.50762176513672

Token 2019: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. '0' → logprob: -11.750017166137695
    3. '[' → logprob: -11.750017166137695
    4. '
' → logprob: -15.812517166137695
    5. ' ' → logprob: -15.875017166137695
    6. '{' → logprob: -15.937517166137695
    7. '۱' → logprob: -16.125017166137695
    8. '`' → logprob: -16.250017166137695
    9. '   ' → logprob: -16.500017166137695
    10. ']' → logprob: -16.625017166137695

Token 2020: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012517428025603294
    2. '-' → logprob: -4.38751745223999
    3. ' -
' → logprob: -12.762516975402832
    4. ' ' → logprob: -13.262516975402832
    5. '-
' → logprob: -13.762516975402832
    6. '```' → logprob: -14.887516975402832
    7. '        ' → logprob: -15.387516975402832
    8. '          ' → logprob: -15.512516975402832
    9. '       ' → logprob: -15.762516975402832
    10. '                ' → logprob: -16.13751792907715

Token 2021: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25204816460609436
    2. '-' → logprob: -1.502048134803772
    3. '-
' → logprob: -9.75204849243164
    4. '                   ' → logprob: -11.87704849243164
    5. ' -
' → logprob: -11.87704849243164
    6. '          ' → logprob: -12.37704849243164
    7. '                  ' → logprob: -12.62704849243164
    8. '                     ' → logprob: -12.62704849243164
    9. '           ' → logprob: -12.75204849243164
    10. '       ' → logprob: -12.87704849243164

Token 2022: ' C' (ID: 363)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.0087516784551553e-05
    2. ' M' → logprob: -12.12501049041748
    3. 'C' → logprob: -12.50001049041748
    4. '   ' → logprob: -14.62501049041748
    5. '	M' → logprob: -14.87501049041748
    6. ' ' → logprob: -17.625009536743164
    7. '  ' → logprob: -17.625009536743164
    8. '     ' → logprob: -18.750009536743164
    9. '    ' → logprob: -18.875009536743164
    10. '       ' → logprob: -19.750009536743164

Token 2023: '_vec' (ID: 29582)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00019483851792756468
    2. 'M' → logprob: -8.625194549560547
    3. '0' → logprob: -11.375194549560547
    4. '][' → logprob: -13.625194549560547
    5. ' M' → logprob: -14.625194549560547
    6. '#' → logprob: -14.750194549560547
    7. 'm' → logprob: -14.750194549560547
    8. '
' → logprob: -15.250194549560547
    9. '           ' → logprob: -15.625194549560547
    10. '```' → logprob: -15.875194549560547

Token 2024: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -16.125
    3. '0' → logprob: -16.375
    4. '<|end|>' → logprob: -16.625
    5. '<|end|>' → logprob: -17.875
    6. 'user' → logprob: -18.0
    7. 'import' → logprob: -18.375
    8. '```' → logprob: -18.5
    9. '1' → logprob: -18.625
    10. '][' → logprob: -19.0

Token 2025: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.313314952421933e-05
    2. '1' → logprob: -10.250062942504883
    3. '[' → logprob: -10.500062942504883
    4. '   ' → logprob: -16.375062942504883
    5. '```' → logprob: -16.625062942504883
    6. '
' → logprob: -17.250062942504883
    7. ' ' → logprob: -17.250062942504883
    8. '#' → logprob: -18.000062942504883
    9. '[
' → logprob: -18.000062942504883
    10. '`' → logprob: -18.375062942504883

Token 2026: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -4.966313281329349e-05
    2. '*' → logprob: -10.000049591064453
    3. '0' → logprob: -13.250049591064453
    4. '1' → logprob: -14.500049591064453
    5. ' [' → logprob: -14.875049591064453
    6. '[
' → logprob: -15.000049591064453
    7. '```' → logprob: -15.000049591064453
    8. '][' → logprob: -15.375049591064453
    9. '   ' → logprob: -15.500049591064453
    10. ' *' → logprob: -16.000049591064453

Token 2027: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.696889623621246e-06
    2. '   ' → logprob: -14.00000286102295
    3. ' M' → logprob: -14.12500286102295
    4. '[M' → logprob: -15.37500286102295
    5. '[' → logprob: -15.75000286102295
    6. 'm' → logprob: -16.125001907348633
    7. '(M' → logprob: -16.250001907348633
    8. '0' → logprob: -16.250001907348633
    9. '           ' → logprob: -16.500001907348633
    10. '	M' → logprob: -16.625001907348633

Token 2028: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002774246677290648
    2. '0' → logprob: -8.250277519226074
    3. '][' → logprob: -12.000277519226074
    4. '[
' → logprob: -12.375277519226074
    5. '```' → logprob: -12.750277519226074
    6. '#' → logprob: -14.250277519226074
    7. 'import' → logprob: -14.750277519226074
    8. '1' → logprob: -15.125277519226074
    9. '
' → logprob: -15.500277519226074
    10. '   ' → logprob: -15.625277519226074

Token 2029: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.625006675720215
    4. '
' → logprob: -15.625006675720215
    5. ' ' → logprob: -15.750006675720215
    6. '  ' → logprob: -17.25000762939453
    7. '1' → logprob: -17.50000762939453
    8. '][' → logprob: -18.25000762939453
    9. '```' → logprob: -18.25000762939453
    10. '    ' → logprob: -18.37500762939453

Token 2030: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010037488304078579
    2. '0' → logprob: -4.760037422180176
    3. '1' → logprob: -7.260037422180176
    4. '][' → logprob: -7.260037422180176
    5. '```' → logprob: -11.760037422180176
    6. '[
' → logprob: -13.260037422180176
    7. '   ' → logprob: -13.635037422180176
    8. ']' → logprob: -13.635037422180176
    9. '`' → logprob: -14.260037422180176
    10. '#' → logprob: -14.635037422180176

Token 2031: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '1' → logprob: -13.625001907348633
    3. '
' → logprob: -14.000001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '۰' → logprob: -17.750001907348633
    6. '```' → logprob: -17.875001907348633
    7. ' ' → logprob: -18.000001907348633
    8. '[' → logprob: -18.250001907348633
    9. '０' → logprob: -19.375001907348633
    10. '	' → logprob: -19.562501907348633

Token 2032: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007460216875188053
    2. ')/(' → logprob: -7.625746250152588
    3. ')/' → logprob: -8.75074577331543
    4. ' )' → logprob: -9.25074577331543
    5. ')
' → logprob: -13.62574577331543
    6. '   ' → logprob: -14.12574577331543
    7. '       ' → logprob: -14.62574577331543
    8. ')\
' → logprob: -15.75074577331543
    9. '               ' → logprob: -15.87574577331543
    10. '                   ' → logprob: -16.12574577331543

Token 2033: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.03116665966808796
    2. ' /' → logprob: -3.5311665534973145
    3. '/
' → logprob: -6.7811665534973145
    4. ')' → logprob: -8.781167030334473
    5. '/d' → logprob: -10.281167030334473
    6. ')/' → logprob: -10.781167030334473
    7. ' /
' → logprob: -11.156167030334473
    8. '/
/' → logprob: -11.281167030334473
    9. '/
' → logprob: -11.281167030334473
    10. ')/(' → logprob: -11.656167030334473

Token 2034: ' det' (ID: 1476)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -7.896309739408025e-07
    2. ' det' → logprob: -14.375000953674316
    3. '(det' → logprob: -16.125
    4. '(' → logprob: -18.75
    5. '   ' → logprob: -19.125
    6. 'den' → logprob: -20.875
    7. '_det' → logprob: -21.25
    8. 'd' → logprob: -21.375
    9. 'determ' → logprob: -21.5
    10. '           ' → logprob: -21.75

Token 2035: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2036: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0464554987847805
    2. '
' → logprob: -4.171455383300781
    3. '       ' → logprob: -4.421455383300781
    4. '           ' → logprob: -4.546455383300781
    5. ',' → logprob: -5.921455383300781
    6. '<|end|>' → logprob: -6.921455383300781
    7. '                   ' → logprob: -7.796455383300781
    8. 'y' → logprob: -8.046455383300781
    9. ',
' → logprob: -8.046455383300781
    10. ')' → logprob: -8.046455383300781

Token 2037: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.5762870907783508
    2. 'x' → logprob: -0.8262870907783508
    3. ' y' → logprob: -8.201287269592285
    4. '               ' → logprob: -10.076287269592285
    5. '       ' → logprob: -11.201287269592285
    6. '           ' → logprob: -11.451287269592285
    7. ' x' → logprob: -13.076287269592285
    8. '```' → logprob: -13.326287269592285
    9. '                   ' → logprob: -13.701287269592285
    10. '   ' → logprob: -14.076287269592285

Token 2038: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889143377542496
    2. ' =' → logprob: -2.5788915157318115
    3. ')' → logprob: -13.82889175415039
    4. '<|end|>' → logprob: -15.45389175415039
    5. ':' → logprob: -15.57889175415039
    6. '=
' → logprob: -15.70389175415039
    7. ' ' → logprob: -17.07889175415039
    8. ',' → logprob: -17.70389175415039
    9. '```' → logprob: -17.70389175415039
    10. '<|end|>' → logprob: -17.70389175415039

Token 2039: ' (' (ID: 350)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.014165864326059818
    2. ' (' → logprob: -4.264165878295898
    3. '-(' → logprob: -13.764165878295898
    4. '   ' → logprob: -14.514165878295898
    5. ' ' → logprob: -14.639165878295898
    6. '(-' → logprob: -16.2641658782959
    7. '  ' → logprob: -16.5141658782959
    8. '(' → logprob: -16.6391658782959
    9. '`' → logprob: -17.1391658782959
    10. '
' → logprob: -17.1391658782959

Token 2040: 'M' (ID: 44)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.048269134014844894
    2. '(C' → logprob: -3.298269033432007
    3. '-C' → logprob: -5.173269271850586
    4. 'M' → logprob: -5.923269271850586
    5. '(M' → logprob: -7.048269271850586
    6. '(-' → logprob: -8.298269271850586
    7. '-(' → logprob: -8.548269271850586
    8. '-M' → logprob: -8.548269271850586
    9. '-' → logprob: -8.923269271850586
    10. '(' → logprob: -10.048269271850586

Token 2041: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061968810856342316
    2. '0' → logprob: -2.8119688034057617
    3. '   ' → logprob: -14.936968803405762
    4. '```' → logprob: -15.436968803405762
    5. '1' → logprob: -15.686968803405762
    6. ' [' → logprob: -15.811968803405762
    7. '[
' → logprob: -15.936968803405762
    8. '][' → logprob: -16.811969757080078
    9. '
' → logprob: -16.936969757080078
    10. ' ' → logprob: -17.311969757080078

Token 2042: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024025145103223622
    2. '1' → logprob: -8.625240325927734
    3. '[' → logprob: -9.750240325927734
    4. '```' → logprob: -14.250240325927734
    5. '   ' → logprob: -15.000240325927734
    6. ' ' → logprob: -15.125240325927734
    7. '
' → logprob: -15.500240325927734
    8. '``' → logprob: -15.750240325927734
    9. ']' → logprob: -16.125240325927734
    10. '`' → logprob: -16.312740325927734

Token 2043: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10031708329916
    2. '[' → logprob: -2.3503170013427734
    3. '0' → logprob: -9.850317001342773
    4. '1' → logprob: -10.475317001342773
    5. ')[' → logprob: -11.600317001342773
    6. ']' → logprob: -12.100317001342773
    7. ' ][' → logprob: -12.475317001342773
    8. '   ' → logprob: -12.975317001342773
    9. ' [' → logprob: -13.725317001342773
    10. ']][' → logprob: -14.100317001342773

Token 2044: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '1' → logprob: -13.250001907348633
    3. '[' → logprob: -15.000001907348633
    4. '
' → logprob: -18.500001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '```' → logprob: -20.000001907348633
    7. ' ' → logprob: -20.500001907348633
    8. '`' → logprob: -21.125001907348633
    9. '][' → logprob: -21.250001907348633
    10. '۰' → logprob: -21.500001907348633

Token 2045: ']*' (ID: 18579)
  Prédit: '*C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*C' → logprob: -0.07906042784452438
    2. '*' → logprob: -2.5790603160858154
    3. ']*' → logprob: -8.954060554504395
    4. '**' → logprob: -10.954060554504395
    5. ')*' → logprob: -11.079060554504395
    6. '*x' → logprob: -13.204060554504395
    7. ' *' → logprob: -13.329060554504395
    8. '*y' → logprob: -13.454060554504395
    9. '*M' → logprob: -13.954060554504395
    10. ''*' → logprob: -14.204060554504395

Token 2046: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.896309739408025e-07
    2. ' C' → logprob: -14.125000953674316
    3. '
' → logprob: -18.375
    4. '   ' → logprob: -19.875
    5. '	C' → logprob: -20.5
    6. '`' → logprob: -21.0
    7. '```' → logprob: -21.25
    8. '*C' → logprob: -21.75
    9. '           ' → logprob: -22.0
    10. '>C' → logprob: -22.25

Token 2047: '_vec' (ID: 29582)
  Prédit: '_vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -0.0008071291376836598
    2. 'vec' → logprob: -7.250807285308838
    3. 'Vec' → logprob: -9.50080680847168
    4. '[' → logprob: -10.87580680847168
    5. '_vect' → logprob: -13.37580680847168
    6. 'vector' → logprob: -13.75080680847168
    7. '_vector' → logprob: -14.87580680847168
    8. '_VEC' → logprob: -15.25080680847168
    9. 'vect' → logprob: -16.50080680847168
    10. 'Vector' → logprob: -17.00080680847168

Token 2048: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '1' → logprob: -13.750001907348633
    3. '0' → logprob: -15.250001907348633
    4. '[
' → logprob: -15.250001907348633
    5. '
' → logprob: -15.625001907348633
    6. '#' → logprob: -16.250001907348633
    7. '```' → logprob: -16.375001907348633
    8. '][' → logprob: -16.500001907348633
    9. '=' → logprob: -16.875001907348633
    10. 'import' → logprob: -17.000001907348633

Token 2049: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03208046033978462
    2. '1' → logprob: -3.6570804119110107
    3. '[' → logprob: -5.15708065032959
    4. '   ' → logprob: -12.53208065032959
    5. '
' → logprob: -14.53208065032959
    6. '```' → logprob: -14.90708065032959
    7. '(' → logprob: -16.157079696655273
    8. '       ' → logprob: -16.157079696655273
    9. ' ' → logprob: -16.282079696655273
    10. '[
' → logprob: -16.907079696655273

Token 2050: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002805940806865692
    2. '-' → logprob: -5.877805709838867
    3. ' ' → logprob: -14.502805709838867
    4. '[' → logprob: -15.877805709838867
    5. '```' → logprob: -16.252805709838867
    6. ' -
' → logprob: -16.377805709838867
    7. '          ' → logprob: -16.752805709838867
    8. ')' → logprob: -16.877805709838867
    9. '   ' → logprob: -17.252805709838867
    10. '  ' → logprob: -17.627805709838867

Token 2051: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008615754544734955
    2. '-' → logprob: -4.758615970611572
    3. ' -
' → logprob: -14.633615493774414
    4. ' ' → logprob: -14.883615493774414
    5. '-
' → logprob: -15.883615493774414
    6. '
' → logprob: -17.133615493774414
    7. '```' → logprob: -17.133615493774414
    8. ')' → logprob: -17.133615493774414
    9. '   ' → logprob: -18.133615493774414
    10. '          ' → logprob: -18.258615493774414

Token 2052: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00013321757433004677
    2. 'C' → logprob: -9.250133514404297
    3. ' M' → logprob: -10.375133514404297
    4. '   ' → logprob: -12.125133514404297
    5. '  ' → logprob: -15.750133514404297
    6. ' ' → logprob: -16.375133514404297
    7. '    ' → logprob: -16.750133514404297
    8. '     ' → logprob: -16.875133514404297
    9. '       ' → logprob: -17.250133514404297
    10. '	M' → logprob: -17.375133514404297

Token 2053: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -14.000001907348633
    3. 'The' → logprob: -16.625001907348633
    4. '```' → logprob: -16.625001907348633
    5. '<|end|>' → logprob: -16.625001907348633
    6. 'Let's' → logprob: -16.750001907348633
    7. '[][' → logprob: -17.000001907348633
    8. 'User' → logprob: -17.000001907348633
    9. 'user' → logprob: -17.125001907348633
    10. '[
' → logprob: -17.250001907348633

Token 2054: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28243720531463623
    2. '0' → logprob: -1.4074372053146362
    3. '[' → logprob: -6.657437324523926
    4. '```' → logprob: -14.032437324523926
    5. '   ' → logprob: -14.907437324523926
    6. ' ' → logprob: -16.53243637084961
    7. '`' → logprob: -16.65743637084961
    8. '][' → logprob: -16.78243637084961
    9. '
' → logprob: -17.03243637084961
    10. '' → logprob: -17.21993637084961

Token 2055: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011755822924897075
    2. '][' → logprob: -6.751175403594971
    3. '0' → logprob: -13.501175880432129
    4. ')[' → logprob: -13.751175880432129
    5. '"][' → logprob: -14.376175880432129
    6. '>[' → logprob: -14.751175880432129
    7. '[][' → logprob: -14.876175880432129
    8. '<|end|>' → logprob: -15.126175880432129
    9. ''][' → logprob: -15.501175880432129
    10. '```' → logprob: -15.626175880432129

Token 2056: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035095500061288476
    2. '[' → logprob: -8.000350952148438
    3. '1' → logprob: -11.375350952148438
    4. '   ' → logprob: -13.625350952148438
    5. '][' → logprob: -13.875350952148438
    6. '```' → logprob: -14.250350952148438
    7. ' ' → logprob: -14.875350952148438
    8. '
' → logprob: -15.375350952148438
    9. '`' → logprob: -16.125350952148438
    10. '#' → logprob: -16.625350952148438

Token 2057: ']*' (ID: 18579)
  Prédit: '*C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*C' → logprob: -0.032924000173807144
    2. '*M' → logprob: -3.532923936843872
    3. ']*' → logprob: -6.407924175262451
    4. ')*' → logprob: -7.282924175262451
    5. '*' → logprob: -7.282924175262451
    6. '*K' → logprob: -9.282923698425293
    7. '*S' → logprob: -11.282923698425293
    8. '```' → logprob: -11.782923698425293
    9. '*[' → logprob: -12.282923698425293
    10. '*N' → logprob: -12.532923698425293

Token 2058: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0001872094871941954
    2. ' C' → logprob: -8.625186920166016
    3. '   ' → logprob: -12.375186920166016
    4. '	C' → logprob: -13.375186920166016
    5. '           ' → logprob: -14.375186920166016
    6. '       ' → logprob: -15.125186920166016
    7. '  ' → logprob: -15.125186920166016
    8. ' ' → logprob: -15.375186920166016
    9. '               ' → logprob: -16.250186920166016
    10. '>C' → logprob: -17.000186920166016

Token 2059: '_vec' (ID: 29582)
  Prédit: '_vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -0.038616154342889786
    2. '[' → logprob: -3.288616180419922
    3. 'vec' → logprob: -7.913616180419922
    4. 'Vec' → logprob: -8.538616180419922
    5. '_vect' → logprob: -11.913616180419922
    6. '_VEC' → logprob: -12.538616180419922
    7. '```' → logprob: -14.538616180419922
    8. '[[' → logprob: -14.913616180419922
    9. '   ' → logprob: -15.038616180419922
    10. 'vector' → logprob: -15.788616180419922

Token 2060: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -14.375001907348633
    3. '1' → logprob: -14.875001907348633
    4. 'vec' → logprob: -15.625001907348633
    5. 'Vec' → logprob: -15.750001907348633
    6. '[
' → logprob: -16.000001907348633
    7. '_vec' → logprob: -16.125001907348633
    8. 'vector' → logprob: -17.000001907348633
    9. 'C' → logprob: -17.250001907348633
    10. '   ' → logprob: -17.375001907348633

Token 2061: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.875
    3. '   ' → logprob: -16.625
    4. '
' → logprob: -16.75
    5. ' ' → logprob: -18.75
    6. '[' → logprob: -18.75
    7. '```' → logprob: -19.75
    8. '  ' → logprob: -20.75
    9. '    ' → logprob: -21.375
    10. '-' → logprob: -21.375

Token 2062: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. ')/' → logprob: -11.500016212463379
    3. ' )' → logprob: -12.250016212463379
    4. ')/(' → logprob: -14.000016212463379
    5. ')
' → logprob: -15.500016212463379
    6. '])' → logprob: -16.000017166137695
    7. '   ' → logprob: -16.875017166137695
    8. '）' → logprob: -17.125017166137695
    9. '`)' → logprob: -17.125017166137695
    10. '[' → logprob: -17.250017166137695

Token 2063: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6274443864822388
    2. ' /' → logprob: -0.8774443864822388
    3. ')' → logprob: -3.002444267272949
    4. ')/' → logprob: -7.627444267272949
    5. ')/(' → logprob: -11.50244426727295
    6. ' )' → logprob: -11.87744426727295
    7. '[' → logprob: -12.37744426727295
    8. '```' → logprob: -12.50244426727295
    9. '               ' → logprob: -12.75244426727295
    10. '/d' → logprob: -12.87744426727295

Token 2064: ' det' (ID: 1476)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -7.941850526549388e-06
    2. ' det' → logprob: -11.750007629394531
    3. 'den' → logprob: -19.25000762939453
    4. '(det' → logprob: -19.50000762939453
    5. '   ' → logprob: -20.00000762939453
    6. 'del' → logprob: -20.75000762939453
    7. '_det' → logprob: -21.75000762939453
    8. 'M' → logprob: -21.87500762939453
    9. '-det' → logprob: -22.87500762939453
    10. 'd' → logprob: -23.00000762939453

Token 2065: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46331265568733215
    2. '<|end|>' → logprob: -1.2133126258850098
    3. '           ' → logprob: -3.3383126258850098
    4. '
' → logprob: -3.7133126258850098
    5. '<|end|>' → logprob: -5.58831262588501
    6. '       ' → logprob: -5.83831262588501
    7. ')
' → logprob: -5.83831262588501
    8. '               ' → logprob: -7.08831262588501
    9. ')return' → logprob: -7.83831262588501
    10. '```' → logprob: -8.213313102722168

Token 2066: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05111760273575783
    2. '           ' → logprob: -3.0511176586151123
    3. '       ' → logprob: -6.551117420196533
    4. '
' → logprob: -7.926117420196533
    5. '<|end|>' → logprob: -7.926117420196533
    6. ')' → logprob: -8.426117897033691
    7. 'return' → logprob: -9.926117897033691
    8. ' return' → logprob: -11.426117897033691
    9. '              ' → logprob: -11.551117897033691
    10. '	       ' → logprob: -11.801117897033691

Token 2067: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2616807520389557
    2. '           ' → logprob: -1.8866807222366333
    3. '               ' → logprob: -2.636680841445923
    4. ' return' → logprob: -5.136680603027344
    5. '
' → logprob: -7.636680603027344
    6. 'point' → logprob: -8.011680603027344
    7. '       ' → logprob: -8.136680603027344
    8. '   ' → logprob: -10.761680603027344
    9. '```' → logprob: -11.011680603027344
    10. 'p' → logprob: -11.386680603027344

Token 2068: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0009118211455643177
    2. ' Point' → logprob: -7.000911712646484
    3. '	Point' → logprob: -14.875911712646484
    4. '   ' → logprob: -17.500911712646484
    5. '_Point' → logprob: -17.875911712646484
    6. '(Point' → logprob: -18.250911712646484
    7. '_point' → logprob: -20.250911712646484
    8. '<Point' → logprob: -21.000911712646484
    9. '.Point' → logprob: -21.375911712646484
    10. 'point' → logprob: -21.875911712646484

Token 2069: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.221884101862088e-05
    2. '(' → logprob: -9.500092506408691
    3. 'x' → logprob: -11.000092506408691
    4. '(
' → logprob: -14.250092506408691
    5. ' (' → logprob: -17.375091552734375
    6. '```' → logprob: -18.625091552734375
    7. '\(' → logprob: -20.000091552734375
    8. '(float' → logprob: -20.375091552734375
    9. '((' → logprob: -21.375091552734375
    10. '(abs' → logprob: -22.000091552734375

Token 2070: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011178325861692429
    2. ',y' → logprob: -4.511178493499756
    3. ' ,' → logprob: -9.136178016662598
    4. ',
' → logprob: -10.761178016662598
    5. 'y' → logprob: -14.011178016662598
    6. ',b' → logprob: -16.136178970336914
    7. ',p' → logprob: -16.636178970336914
    8. ',user' → logprob: -16.886178970336914
    9. ',x' → logprob: -17.011178970336914
    10. '```' → logprob: -17.011178970336914

Token 2071: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002680112374946475
    2. '       ' → logprob: -8.87526798248291
    3. ')
' → logprob: -9.00026798248291
    4. '           ' → logprob: -13.12526798248291
    5. '<|end|>' → logprob: -13.75026798248291
    6. ' )' → logprob: -15.00026798248291
    7. '   ' → logprob: -15.00026798248291
    8. '               ' → logprob: -15.12526798248291
    9. ')return' → logprob: -15.50026798248291
    10. '	' → logprob: -16.000268936157227

Token 2072: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2073: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6562903523445129
    2. '       ' → logprob: -0.9062903523445129
    3. '           ' → logprob: -2.656290292739868
    4. 'else' (adapté à ' else') → logprob: -5.406290531158447
    5. 'import' → logprob: -6.406290531158447
    6. 'return' → logprob: -8.781290054321289
    7. '        
' → logprob: -8.781290054321289
    8. '```' → logprob: -8.906290054321289
    9. 'from' → logprob: -9.031290054321289
    10. '            
' → logprob: -9.531290054321289

Token 2074: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35142382979393005
    2. '               ' → logprob: -1.2264238595962524
    3. 'import' → logprob: -6.351423740386963
    4. '```' → logprob: -7.226423740386963
    5. '
' → logprob: -8.226424217224121
    6. '       ' → logprob: -9.351424217224121
    7. '#' → logprob: -10.601424217224121
    8. '   ' → logprob: -10.976424217224121
    9. '                   ' → logprob: -10.976424217224121
    10. '``' → logprob: -11.226424217224121

Token 2075: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6079022288322449
    2. '           ' → logprob: -1.4829022884368896
    3. 'import' → logprob: -1.6079022884368896
    4. '#' → logprob: -4.1079020500183105
    5. '```' → logprob: -5.1079020500183105
    6. 'from' → logprob: -6.1079020500183105
    7. 'return' → logprob: -6.6079020500183105
    8. '   ' → logprob: -7.1079020500183105
    9. '``' → logprob: -7.9829020500183105
    10. ' import' → logprob: -8.232902526855469

Token 2076: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08565851300954819
    2. 'from' → logprob: -2.960658550262451
    3. '#' (adapté à ' #') → logprob: -3.710658550262451
    4. 'A' → logprob: -5.710658550262451
    5. '```' → logprob: -7.585658550262451
    6. '               ' → logprob: -7.960658550262451
    7. 'At' → logprob: -8.210658073425293
    8. 'M' → logprob: -8.585658073425293
    9. '           ' → logprob: -8.710658073425293
    10. 'n' → logprob: -8.710658073425293

Token 2077: ' More' (ID: 4633)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03829232603311539
    2. 'from' → logprob: -3.413292407989502
    3. '#' → logprob: -5.538292407989502
    4. ' import' → logprob: -8.163291931152344
    5. '               ' → logprob: -9.288291931152344
    6. 'A' → logprob: -9.288291931152344
    7. 'n' → logprob: -9.288291931152344
    8. '                   ' → logprob: -10.788291931152344
    9. ' from' → logprob: -10.913291931152344
    10. '```' → logprob: -10.913291931152344

Token 2078: ' than' (ID: 1572)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.13158729672431946
    2. '=' → logprob: -3.131587266921997
    3. '...' → logprob: -3.381587266921997
    4. '.' → logprob: -4.131587505340576
    5. 'from' → logprob: -5.131587505340576
    6. '_lines' → logprob: -5.506587505340576
    7. '               ' → logprob: -6.131587505340576
    8. ',' → logprob: -6.506587505340576
    9. 'rows' → logprob: -6.506587505340576
    10. ' =' → logprob: -6.881587505340576

Token 2079: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06336694210767746
    2. ' ' → logprob: -3.5633668899536133
    3. '1' → logprob: -3.9383668899536133
    4. ' than' → logprob: -5.813366889953613
    5. 'len' → logprob: -5.938366889953613
    6. '0' → logprob: -6.188366889953613
    7. '
' → logprob: -6.813366889953613
    8. '```' → logprob: -6.813366889953613
    9. '=' → logprob: -7.063366889953613
    10. '...' → logprob: -7.438366889953613

Token 2080: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008862856775522232
    2. '1' → logprob: -4.8838629722595215
    3. '0' → logprob: -7.2588629722595215
    4. 'len' → logprob: -8.383862495422363
    5. 'than' → logprob: -9.133862495422363
    6. 'n' → logprob: -9.258862495422363
    7. 'sign' → logprob: -10.133862495422363
    8. '```' → logprob: -10.883862495422363
    9. ' ' → logprob: -11.008862495422363
    10. '
' → logprob: -11.258862495422363

Token 2081: ' equations' (ID: 61524)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4006328880786896
    2. ' lines' → logprob: -1.4006328582763672
    3. ' rows' → logprob: -3.525632858276367
    4. ' import' → logprob: -3.900632858276367
    5. 'rows' → logprob: -4.025632858276367
    6. 'lines' → logprob: -5.275632858276367
    7. 'M' → logprob: -5.900632858276367
    8. '               ' → logprob: -6.150632858276367
    9. 'from' → logprob: -7.025632858276367
    10. '
' → logprob: -7.025632858276367

Token 2082: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1720200628042221
    2. 'import' → logprob: -2.1720199584960938
    3. ':' → logprob: -4.047019958496094
    4. '```' → logprob: -4.547019958496094
    5. '                   ' → logprob: -5.297019958496094
    6. '
' → logprob: -5.797019958496094
    7. ':
' → logprob: -6.297019958496094
    8. '           ' → logprob: -6.922019958496094
    9. ' import' → logprob: -7.047019958496094
    10. '#' → logprob: -7.422019958496094

Token 2083: ' solve' (ID: 17722)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0374750941991806
    2. ' import' → logprob: -3.912475109100342
    3. 'from' → logprob: -4.787475109100342
    4. '#' → logprob: -5.412475109100342
    5. '```' → logprob: -6.787475109100342
    6. '               ' → logprob: -6.912475109100342
    7. 'A' → logprob: -7.162475109100342
    8. ' from' → logprob: -8.287474632263184
    9. '
' → logprob: -8.412474632263184
    10. 'At' → logprob: -8.787474632263184

Token 2084: ' least' (ID: 5153)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03398613631725311
    2. '```' → logprob: -3.5339860916137695
    3. '                   ' → logprob: -6.4089860916137695
    4. ' import' → logprob: -6.5339860916137695
    5. '
' → logprob: -7.6589860916137695
    6. '``' → logprob: -8.40898609161377
    7. '   ' → logprob: -8.65898609161377
    8. 'from' → logprob: -9.15898609161377
    9. '               ' → logprob: -9.53398609161377
    10. '#' → logprob: -10.53398609161377

Token 2085: ' squares' (ID: 57269)
  Prédit: ' squares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' squares' → logprob: -0.6074434518814087
    2. 's' → logprob: -1.4824434518814087
    3. '_s' → logprob: -1.7324434518814087
    4. 'quares' → logprob: -3.482443332672119
    5. 'sq' → logprob: -4.607443332672119
    6. 'import' → logprob: -5.107443332672119
    7. 'Squares' → logprob: -5.982443332672119
    8. '```' → logprob: -7.607443332672119
    9. 'square' → logprob: -7.857443332672119
    10. 'q' → logprob: -7.857443332672119

Token 2086: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13154393434524536
    2. 'import' → logprob: -2.7565438747406006
    3. '```' → logprob: -3.0065438747406006
    4. ':' → logprob: -5.63154411315918
    5. '
' → logprob: -5.75654411315918
    6. ':
' → logprob: -7.00654411315918
    7. '                   ' → logprob: -7.13154411315918
    8. '``' → logprob: -7.50654411315918
    9. ',' → logprob: -8.13154411315918
    10. ' import' → logprob: -8.63154411315918

Token 2087: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1305258870124817
    2. '```' → logprob: -2.755525827407837
    3. 'import' → logprob: -2.880525827407837
    4. '``' → logprob: -6.880526065826416
    5. '                   ' → logprob: -7.130526065826416
    6. ' import' → logprob: -7.630526065826416
    7. '`' → logprob: -9.255525588989258
    8. '           ' → logprob: -10.130525588989258
    9. 'return' → logprob: -10.255525588989258
    10. '
' → logprob: -10.380525588989258

Token 2088: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01594979129731655
    2. 'from' → logprob: -4.390949726104736
    3. ' import' → logprob: -6.265949726104736
    4. '                   ' → logprob: -7.890949726104736
    5. ' from' → logprob: -8.015950202941895
    6. 'A' → logprob: -8.265950202941895
    7. '               ' → logprob: -8.515950202941895
    8. '```' → logprob: -9.015950202941895
    9. 'M' → logprob: -9.140950202941895
    10. 'return' → logprob: -10.515950202941895

Token 2089: ' Use' (ID: 7649)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0038883150555193424
    2. 'from' → logprob: -5.628888130187988
    3. '```' → logprob: -9.378888130187988
    4. '                   ' → logprob: -9.753888130187988
    5. '``' → logprob: -10.128888130187988
    6. ' import' → logprob: -10.253888130187988
    7. '               ' → logprob: -10.628888130187988
    8. 'A' → logprob: -11.378888130187988
    9. 'try' → logprob: -11.628888130187988
    10. '#' → logprob: -11.753888130187988

Token 2090: ' numpy' (ID: 19529)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.041601210832595825
    2. 'math' → logprob: -3.7916011810302734
    3. 'numpy' → logprob: -4.041601181030273
    4. ' import' → logprob: -8.416601181030273
    5. ' numpy' → logprob: -8.541601181030273
    6. ' math' → logprob: -9.791601181030273
    7. 'from' → logprob: -9.791601181030273
    8. '```' → logprob: -9.791601181030273
    9. '
' → logprob: -11.291601181030273
    10. '#' → logprob: -11.291601181030273

Token 2091: ' if' (ID: 538)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01926051266491413
    2. ' import' → logprob: -4.269260406494141
    3. '<|end|>' → logprob: -6.394260406494141
    4. '.' → logprob: -7.019260406494141
    5. '```' → logprob: -7.394260406494141
    6. ':' → logprob: -7.769260406494141
    7. ',' → logprob: -7.894260406494141
    8. '.import' → logprob: -8.01926040649414
    9. '
' → logprob: -8.76926040649414
    10. ')' → logprob: -9.14426040649414

Token 2092: ' allowed' (ID: 9279)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.13038066029548645
    2. ' False' → logprob: -2.130380630493164
    3. 'True' → logprob: -6.630380630493164
    4. 'import' → logprob: -7.505380630493164
    5. ''' → logprob: -8.005380630493164
    6. 'None' → logprob: -8.255380630493164
    7. 'available' → logprob: -8.380380630493164
    8. ' True' → logprob: -8.505380630493164
    9. '(False' → logprob: -9.255380630493164
    10. '"' → logprob: -9.255380630493164

Token 2093: ' else' (ID: 1203)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7182400226593018
    2. '               ' → logprob: -1.8432400226593018
    3. '```' → logprob: -2.0932400226593018
    4. '(
' → logprob: -2.3432400226593018
    5. ':' → logprob: -2.7182400226593018
    6. ':
' → logprob: -3.7182400226593018
    7. '[
' → logprob: -4.343239784240723
    8. '
' → logprob: -5.218239784240723
    9. ' import' → logprob: -5.468239784240723
    10. '[' → logprob: -6.093239784240723

Token 2094: ' solve' (ID: 17722)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5314746499061584
    2. '[
' → logprob: -2.4064745903015137
    3. ' import' → logprob: -2.5314745903015137
    4. ' None' → logprob: -3.0314745903015137
    5. ' try' → logprob: -3.2814745903015137
    6. '[' → logprob: -3.2814745903015137
    7. 'try' → logprob: -3.6564745903015137
    8. 'None' → logprob: -3.9064745903015137
    9. ' math' → logprob: -4.156474590301514
    10. ' raise' → logprob: -4.656474590301514

Token 2095: ' manually' (ID: 34410)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6318482756614685
    2. '(
' → logprob: -1.6318483352661133
    3. '(' → logprob: -2.8818483352661133
    4. '[
' → logprob: -3.0068483352661133
    5. '[' → logprob: -3.6318483352661133
    6. '```' → logprob: -4.006848335266113
    7. ' (
' → logprob: -4.131848335266113
    8. ' import' → logprob: -4.256848335266113
    9. 'from' → logprob: -4.506848335266113
    10. ' (' → logprob: -4.631848335266113

Token 2096: ' via' (ID: 4493)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14768432080745697
    2. '```' → logprob: -2.772684335708618
    3. 'import' → logprob: -3.022684335708618
    4. '                   ' → logprob: -4.647684097290039
    5. '(
' → logprob: -6.022684097290039
    6. 'try' → logprob: -6.272684097290039
    7. '``' → logprob: -6.397684097290039
    8. '                ' → logprob: -6.772684097290039
    9. 'return' → logprob: -6.897684097290039
    10. '
' → logprob: -6.897684097290039

Token 2097: ' normal' (ID: 6078)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8742936849594116
    2. 'math' → logprob: -1.2492936849594116
    3. ' math' → logprob: -2.624293804168701
    4. '```' → logprob: -2.749293804168701
    5. 'def' → logprob: -2.874293804168701
    6. '#' → logprob: -4.124293804168701
    7. '__' → logprob: -4.499293804168701
    8. '
' → logprob: -4.999293804168701
    9. 'from' → logprob: -4.999293804168701
    10. 'matrix' → logprob: -5.249293804168701

Token 2098: ' equations' (ID: 61524)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9577873349189758
    2. ' equations' → logprob: -1.582787275314331
    3. '_matrix' → logprob: -1.957787275314331
    4. '_' → logprob: -2.457787275314331
    5. '```' → logprob: -2.457787275314331
    6. '_equ' → logprob: -3.707787275314331
    7. '
' → logprob: -4.45778751373291
    8. 'equ' → logprob: -4.83278751373291
    9. '   ' → logprob: -4.83278751373291
    10. '``' → logprob: -5.08278751373291

Token 2099: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9729412794113159
    2. '```' → logprob: -0.9729412794113159
    3. '               ' → logprob: -1.722941279411316
    4. '(
' → logprob: -3.9729413986206055
    5. '
' → logprob: -4.2229413986206055
    6. '``' → logprob: -4.5979413986206055
    7. ':
' → logprob: -5.4729413986206055
    8. '(' → logprob: -5.5979413986206055
    9. '\' → logprob: -5.8479413986206055
    10. '                   ' → logprob: -6.2229413986206055

Token 2100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2143986076116562
    2. '```' → logprob: -1.9643986225128174
    3. 'import' → logprob: -3.2143986225128174
    4. '``' → logprob: -5.089398384094238
    5. ' import' → logprob: -6.214398384094238
    6. '       ' → logprob: -6.589398384094238
    7. '
' → logprob: -7.214398384094238
    8. '                   ' → logprob: -7.589398384094238
    9. '           ' → logprob: -7.839398384094238
    10. '                
' → logprob: -8.464398384094238

Token 2101: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14991380274295807
    2. 'try' → logprob: -2.274913787841797
    3. '               ' → logprob: -3.774913787841797
    4. '```' → logprob: -5.024913787841797
    5. ' import' → logprob: -5.774913787841797
    6. ' try' → logprob: -6.274913787841797
    7. '#' (adapté à ' #') → logprob: -7.274913787841797
    8. '``' → logprob: -7.524913787841797
    9. '                   ' → logprob: -8.524913787841797
    10. 'return' → logprob: -8.774913787841797

Token 2102: ' Manual' (ID: 32308)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06313429772853851
    2. 'try' → logprob: -2.93813419342041
    3. '               ' → logprob: -5.43813419342041
    4. ' import' → logprob: -6.06313419342041
    5. ' try' → logprob: -6.68813419342041
    6. '#' → logprob: -8.93813419342041
    7. '
' → logprob: -9.81313419342041
    8. '```' → logprob: -10.56313419342041
    9. 'return' → logprob: -10.68813419342041
    10. '                   ' → logprob: -10.81313419342041

Token 2103: ' normal' (ID: 6078)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2624637186527252
    2. '#' → logprob: -2.5124638080596924
    3. 'try' → logprob: -3.0124638080596924
    4. 'A' → logprob: -3.8874638080596924
    5. 'M' → logprob: -4.012463569641113
    6. '```' → logprob: -4.012463569641113
    7. 'from' → logprob: -4.387463569641113
    8. ' import' → logprob: -4.762463569641113
    9. '
' → logprob: -4.887463569641113
    10. 'x' → logprob: -5.637463569641113

Token 2104: ' equations' (ID: 61524)
  Prédit: 'equ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equ' → logprob: -0.25505366921424866
    2. ' equations' → logprob: -2.130053758621216
    3. 'def' → logprob: -3.380053758621216
    4. '_equ' → logprob: -3.755053758621216
    5. '```' → logprob: -4.380053520202637
    6. '_eq' → logprob: -5.255053520202637
    7. 'eq' → logprob: -5.255053520202637
    8. '#' → logprob: -5.380053520202637
    9. 'matrix' → logprob: -5.505053520202637
    10. '
' → logprob: -5.630053520202637

Token 2105: ':
' (ID: 734)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.500012993812561
    2. '
' → logprob: -1.375012993812561
    3. '               ' → logprob: -2.3750128746032715
    4. '       ' → logprob: -4.0000128746032715
    5. '```' → logprob: -4.6250128746032715
    6. '           ' → logprob: -5.5000128746032715
    7. '\n' → logprob: -5.6250128746032715
    8. '#' → logprob: -6.1250128746032715
    9. '                   ' → logprob: -6.2500128746032715
    10. '\' → logprob: -6.7500128746032715

Token 2106: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01016235165297985
    2. 'import' → logprob: -5.010162353515625
    3. '       ' → logprob: -7.385162353515625
    4. '           ' → logprob: -7.635162353515625
    5. '```' → logprob: -7.885162353515625
    6. '                   ' → logprob: -8.385162353515625
    7. '
' → logprob: -8.760162353515625
    8. 'A' → logprob: -9.010162353515625
    9. '   ' → logprob: -9.010162353515625
    10. '                ' → logprob: -9.260162353515625

Token 2107: ' At' (ID: 3604)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5135276913642883
    2. 'import' → logprob: -1.5135276317596436
    3. 's' → logprob: -2.6385276317596436
    4. 'At' (adapté à ' At') → logprob: -3.5135276317596436
    5. 'S' → logprob: -3.5135276317596436
    6. '       ' → logprob: -4.263527870178223
    7. 'sx' → logprob: -4.763527870178223
    8. 'from' → logprob: -5.388527870178223
    9. 'A' → logprob: -5.638527870178223
    10. 'ATA' → logprob: -5.888527870178223

Token 2108: 'A' (ID: 32)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.028973989188671112
    2. 'A' → logprob: -4.0289740562438965
    3. ' =' → logprob: -5.2789740562438965
    4. '_M' → logprob: -6.6539740562438965
    5. '_trans' → logprob: -6.9039740562438965
    6. 'AT' → logprob: -7.0289740562438965
    7. 'trans' → logprob: -7.1539740562438965
    8. '=' → logprob: -7.5289740562438965
    9. 'MT' → logprob: -8.403973579406738
    10. 'At' → logprob: -8.778973579406738

Token 2109: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1627986878156662
    2. ' =' → logprob: -1.9127986431121826
    3. '[' → logprob: -7.037798881530762
    4. 'T' → logprob: -7.537798881530762
    5. '=[]' → logprob: -8.162798881530762
    6. '=[]
' → logprob: -8.287798881530762
    7. '=
' → logprob: -8.287798881530762
    8. '=[' → logprob: -8.912798881530762
    9. 'transpose' → logprob: -9.537798881530762
    10. '=[
' → logprob: -10.287798881530762

Token 2110: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0008370272698812187
    2. '[
' → logprob: -7.2508368492126465
    3. '[' → logprob: -9.000837326049805
    4. ' [[' → logprob: -12.500837326049805
    5. '([[' → logprob: -20.875837326049805
    6. '[(' → logprob: -21.250837326049805
    7. ' [
' → logprob: -21.250837326049805
    8. '
' → logprob: -21.250837326049805
    9. '[]
' → logprob: -21.375837326049805
    10. '[['' → logprob: -22.000837326049805

Token 2111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02107616886496544
    2. 'sum' → logprob: -4.396076202392578
    3. 'M' → logprob: -4.771076202392578
    4. 'row' → logprob: -10.771076202392578
    5. '2' → logprob: -11.521076202392578
    6. ' sum' → logprob: -11.646076202392578
    7. '(sum' → logprob: -12.646076202392578
    8. ' M' → logprob: -13.146076202392578
    9. 'rows' → logprob: -13.521076202392578
    10. 'A' → logprob: -13.521076202392578

Token 2112: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014726664870977402
    2. ',' → logprob: -4.639726638793945
    3. 'for' → logprob: -5.889726638793945
    4. ' for' → logprob: -6.514726638793945
    5. '[' → logprob: -8.764726638793945
    6. '.' → logprob: -8.764726638793945
    7. '           ' → logprob: -9.639726638793945
    8. '][' → logprob: -10.014726638793945
    9. ' ' → logprob: -10.264726638793945
    10. '   ' → logprob: -10.264726638793945

Token 2113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000156577822053805
    2. 'for' → logprob: -9.50015640258789
    3. 'A' → logprob: -10.25015640258789
    4. '1' → logprob: -11.00015640258789
    5. '2' → logprob: -11.50015640258789
    6. 'M' → logprob: -12.50015640258789
    7. ' ' → logprob: -13.00015640258789
    8. ')' → logprob: -13.25015640258789
    9. 'a' → logprob: -13.50015640258789
    10. 'sum' → logprob: -13.62515640258789

Token 2114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00464882655069232
    2. '0' → logprob: -5.504648685455322
    3. 'for' → logprob: -8.25464916229248
    4. ' ,' → logprob: -8.62964916229248
    5. ' for' → logprob: -9.87964916229248
    6. '+' → logprob: -10.00464916229248
    7. '.' → logprob: -11.50464916229248
    8. ' ' → logprob: -11.62964916229248
    9. '        ' → logprob: -13.00464916229248
    10. ' +' → logprob: -13.00464916229248

Token 2115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.9186317482963204e-05
    2. ' ' → logprob: -10.500049591064453
    3. 'M' → logprob: -11.375049591064453
    4. 'sum' → logprob: -12.125049591064453
    5. ' M' → logprob: -14.125049591064453
    6. '1' → logprob: -14.250049591064453
    7. 'A' → logprob: -14.625049591064453
    8. ' sum' → logprob: -15.187549591064453
    9. '   ' → logprob: -15.562549591064453
    10. 'math' → logprob: -16.062549591064453

Token 2116: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.43370574712753296
    2. ',' → logprob: -1.0587058067321777
    3. '0' → logprob: -5.433705806732178
    4. '],[' → logprob: -8.30870532989502
    5. ' ,' → logprob: -9.30870532989502
    6. '.,' → logprob: -9.43370532989502
    7. ',
' → logprob: -9.68370532989502
    8. '[' → logprob: -10.05870532989502
    9. '1' → logprob: -10.30870532989502
    10. '],' → logprob: -11.18370532989502

Token 2117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. 'A' → logprob: -14.12500286102295
    3. '1' → logprob: -14.25000286102295
    4. '00' → logprob: -14.50000286102295
    5. ' ' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.250001907348633
    7. '           ' → logprob: -17.000001907348633
    8. '       ' → logprob: -17.250001907348633
    9. '               ' → logprob: -17.375001907348633
    10. '
' → logprob: -17.625001907348633

Token 2118: '],[' (ID: 32964)
  Prédit: '],['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],[' → logprob: -0.06590038537979126
    2. ',' → logprob: -3.1909003257751465
    3. '],' → logprob: -4.3159003257751465
    4. '],
' → logprob: -4.6909003257751465
    5. '[' → logprob: -10.940900802612305
    6. '0' → logprob: -11.065900802612305
    7. ',
' → logprob: -11.190900802612305
    8. '   ' → logprob: -11.190900802612305
    9. '),(' → logprob: -11.190900802612305
    10. '       ' → logprob: -11.940900802612305

Token 2119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.1080467781284824e-05
    2. '1' → logprob: -11.375041007995605
    3. 'M' → logprob: -11.625041007995605
    4. 'sum' → logprob: -12.625041007995605
    5. ' ' → logprob: -12.750041007995605
    6. 'A' → logprob: -13.125041007995605
    7. '   ' → logprob: -13.375041007995605
    8. '           ' → logprob: -13.500041007995605
    9. '       ' → logprob: -14.125041007995605
    10. '               ' → logprob: -14.125041007995605

Token 2120: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05278852954506874
    2. ',' → logprob: -3.677788496017456
    3. '0' → logprob: -3.677788496017456
    4. '[' → logprob: -7.927788734436035
    5. '1' → logprob: -8.052788734436035
    6. '               ' → logprob: -9.677788734436035
    7. '   ' → logprob: -10.677788734436035
    8. '                   ' → logprob: -10.802788734436035
    9. '                ' → logprob: -11.302788734436035
    10. '.,' → logprob: -11.427788734436035

Token 2121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.625001907348633
    4. 'A' → logprob: -17.500001907348633
    5. ' ' → logprob: -17.750001907348633
    6. 'double' → logprob: -18.500001907348633
    7. '```' → logprob: -19.750001907348633
    8. '  ' → logprob: -19.875001907348633
    9. '    ' → logprob: -19.875001907348633
    10. '       ' → logprob: -19.875001907348633

Token 2122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007492328295484185
    2. '0' → logprob: -7.250749111175537
    3. ' ,' → logprob: -10.375749588012695
    4. '1' → logprob: -12.250749588012695
    5. ',
' → logprob: -13.625749588012695
    6. '.' → logprob: -14.500749588012695
    7. ']]' → logprob: -14.875749588012695
    8. '   ' → logprob: -15.000749588012695
    9. ' ' → logprob: -15.500749588012695
    10. '[' → logprob: -15.875749588012695

Token 2123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -13.250001907348633
    3. ' ' → logprob: -15.500001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '2' → logprob: -19.625001907348633
    6. '[' → logprob: -21.000001907348633
    7. '
' → logprob: -21.125001907348633
    8. '00' → logprob: -21.625001907348633
    9. '۰' → logprob: -21.875001907348633
    10. '  ' → logprob: -22.000001907348633

Token 2124: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.49930378794670105
    2. '0' → logprob: -1.6243038177490234
    3. '[' → logprob: -1.9993038177490234
    4. '1' → logprob: -3.1243038177490234
    5. ',' → logprob: -4.124303817749023
    6. ' ' → logprob: -9.124303817749023
    7. '   ' → logprob: -9.624303817749023
    8. ']]' → logprob: -9.624303817749023
    9. '```' → logprob: -9.749303817749023
    10. '][' → logprob: -10.624303817749023

Token 2125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. '1' → logprob: -13.375001907348633
    3. '```' → logprob: -15.250001907348633
    4. 'double' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '[' → logprob: -17.000001907348633
    7. '5' → logprob: -17.625001907348633
    8. '2' → logprob: -17.625001907348633
    9. ' ' → logprob: -18.625001907348633
    10. ']]' → logprob: -18.875001907348633

Token 2126: ']]
' (ID: 29446)
  Prédit: '],['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],[' → logprob: -0.6544851660728455
    2. ']]
' → logprob: -1.1544852256774902
    3. ',' → logprob: -3.0294852256774902
    4. ']]' → logprob: -3.0294852256774902
    5. '],' → logprob: -3.9044852256774902
    6. '],
' → logprob: -4.27948522567749
    7. ']' → logprob: -4.40448522567749
    8. '               ' → logprob: -5.02948522567749
    9. '[' → logprob: -5.65448522567749
    10. '           ' → logprob: -5.90448522567749

Token 2127: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11507747322320938
    2. 'for' → logprob: -3.115077495574951
    3. '           ' → logprob: -3.240077495574951
    4. ' for' → logprob: -4.740077495574951
    5. '                   ' → logprob: -4.990077495574951
    6. '[' → logprob: -5.615077495574951
    7. 'At' → logprob: -5.990077495574951
    8. '       ' → logprob: -6.115077495574951
    9. '   ' → logprob: -7.490077495574951
    10. 'A' → logprob: -8.115077018737793

Token 2128: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' (adapté à ' At') → logprob: -0.014793387614190578
    2. 'for' → logprob: -4.264793395996094
    3. '               ' → logprob: -7.764793395996094
    4. '           ' → logprob: -9.139793395996094
    5. ' At' → logprob: -10.139793395996094
    6. ' for' → logprob: -11.014793395996094
    7. '   ' → logprob: -11.139793395996094
    8. '       ' → logprob: -11.514793395996094
    9. 'For' → logprob: -12.139793395996094
    10. '                   ' → logprob: -12.514793395996094

Token 2129: 'b' (ID: 65)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.05290013179183006
    2. 'A' → logprob: -3.0529000759124756
    3. 'M' → logprob: -6.177900314331055
    4. 'b' → logprob: -6.677900314331055
    5. '[' → logprob: -7.427900314331055
    6. 'AC' → logprob: -9.177900314331055
    7. 'B' → logprob: -9.302900314331055
    8. '[C' → logprob: -9.927900314331055
    9. 'trans' → logprob: -11.302900314331055
    10. 'vec' → logprob: -11.427900314331055

Token 2130: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23973919451236725
    2. '=' → logprob: -2.114739179611206
    3. ' =' → logprob: -2.489739179611206
    4. '=[' → logprob: -5.364739418029785
    5. '=[[' → logprob: -5.739739418029785
    6. 'for' → logprob: -7.489739418029785
    7. '[
' → logprob: -8.864739418029785
    8. '[[' → logprob: -8.864739418029785
    9. '=
' → logprob: -8.989739418029785
    10. '=[
' → logprob: -8.989739418029785

Token 2131: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011732018319889903
    2. ' [' → logprob: -6.75117301940918
    3. '[
' → logprob: -13.00117301940918
    4. '   ' → logprob: -14.87617301940918
    5. '[[' → logprob: -16.12617301940918
    6. '([' → logprob: -16.50117301940918
    7. '       ' → logprob: -17.37617301940918
    8. ' ' → logprob: -17.50117301940918
    9. '0' → logprob: -17.75117301940918
    10. '	' → logprob: -18.75117301940918

Token 2132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.500011444091797
    3. '[' → logprob: -13.500011444091797
    4. '   ' → logprob: -15.750011444091797
    5. '
' → logprob: -17.250011444091797
    6. '(' → logprob: -17.625011444091797
    7. '           ' → logprob: -17.687511444091797
    8. '       ' → logprob: -17.687511444091797
    9. '    ' → logprob: -17.812511444091797
    10. '```' → logprob: -18.000011444091797

Token 2133: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.747814349073451e-05
    2. ',' → logprob: -11.375017166137695
    3. '[' → logprob: -12.500017166137695
    4. '0' → logprob: -13.250017166137695
    5. '.,' → logprob: -14.625017166137695
    6. '][' → logprob: -18.375017166137695
    7. '```' → logprob: -18.750017166137695
    8. ',
' → logprob: -19.000017166137695
    9. '.
' → logprob: -19.000017166137695
    10. ' ' → logprob: -19.500017166137695

Token 2134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. '.' → logprob: -12.62501049041748
    3. ' ' → logprob: -12.62501049041748
    4. ',' → logprob: -13.25001049041748
    5. '   ' → logprob: -14.37501049041748
    6. '       ' → logprob: -15.00001049041748
    7. '-' → logprob: -15.00001049041748
    8. '[' → logprob: -15.25001049041748
    9. 'for' → logprob: -15.75001049041748
    10. '```' → logprob: -15.87501049041748

Token 2135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043686782009899616
    2. '0' → logprob: -8.625436782836914
    3. ',
' → logprob: -8.875436782836914
    4. ' ,' → logprob: -9.250436782836914
    5. '[' → logprob: -11.750436782836914
    6. '.' → logprob: -12.125436782836914
    7. '       ' → logprob: -13.375436782836914
    8. '```' → logprob: -13.375436782836914
    9. '   ' → logprob: -13.625436782836914
    10. ',[' → logprob: -14.625436782836914

Token 2136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.937503814697266
    4. '[' → logprob: -16.937503814697266
    5. '۰' → logprob: -17.562503814697266
    6. '```' → logprob: -17.625003814697266
    7. '1' → logprob: -18.000003814697266
    8. '    ' → logprob: -18.062503814697266
    9. '       ' → logprob: -18.187503814697266
    10. ']' → logprob: -18.187503814697266

Token 2137: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03425515443086624
    2. ',' → logprob: -3.534255266189575
    3. '0' → logprob: -5.409255027770996
    4. '.,' → logprob: -11.909255027770996
    5. '   ' → logprob: -12.909255027770996
    6. '```' → logprob: -13.034255027770996
    7. '[' → logprob: -13.284255027770996
    8. ',
' → logprob: -13.409255027770996
    9. ' ,' → logprob: -13.534255027770996
    10. '       ' → logprob: -14.159255027770996

Token 2138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.625004768371582
    3. '   ' → logprob: -14.750004768371582
    4. '       ' → logprob: -15.000004768371582
    5. '           ' → logprob: -15.875004768371582
    6. '1' → logprob: -16.125003814697266
    7. '               ' → logprob: -16.125003814697266
    8. 'double' → logprob: -16.625003814697266
    9. '```' → logprob: -16.750003814697266
    10. '[' → logprob: -17.000003814697266

Token 2139: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.03720613569021225
    2. ']' → logprob: -3.4122061729431152
    3. ']

' → logprob: -5.912206172943115
    4. ']
' → logprob: -7.412206172943115
    5. '               ' → logprob: -9.037205696105957
    6. '           ' → logprob: -9.787205696105957
    7. '       ' → logprob: -10.162205696105957
    8. ',' → logprob: -11.412205696105957
    9. ' ]
' → logprob: -12.537205696105957
    10. '   ' → logprob: -12.537205696105957

Token 2140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.044666897505521774
    2. 'for' → logprob: -3.9196670055389404
    3. ' for' → logprob: -4.044666767120361
    4. '       ' → logprob: -5.544666767120361
    5. '           ' → logprob: -6.044666767120361
    6. '```' → logprob: -11.16966724395752
    7. '   ' → logprob: -11.29466724395752
    8. '                   ' → logprob: -11.29466724395752
    9. 'import' → logprob: -14.66966724395752
    10. 'For' → logprob: -15.04466724395752

Token 2141: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008084828034043312
    2. ' for' → logprob: -5.258084774017334
    3. '           ' → logprob: -6.008084774017334
    4. '               ' → logprob: -7.883084774017334
    5. '                   ' → logprob: -12.133085250854492
    6. '       ' → logprob: -12.883085250854492
    7. '   ' → logprob: -13.758085250854492
    8. '```' → logprob: -13.883085250854492
    9. '
' → logprob: -15.758085250854492
    10. '#' → logprob: -15.758085250854492

Token 2142: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14353172481060028
    2. 'row' → logprob: -2.1435317993164062
    3. 'i' → logprob: -4.393531799316406
    4. '(a' → logprob: -5.893531799316406
    5. ' a' → logprob: -7.643531799316406
    6. 'r' → logprob: -7.768531799316406
    7. ' row' → logprob: -8.643531799316406
    8. 'm' → logprob: -10.018531799316406
    9. 'ai' → logprob: -10.268531799316406
    10. ' (' → logprob: -10.268531799316406

Token 2143: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011486753646750003
    2. 'i' → logprob: -9.500114440917969
    3. 'row' → logprob: -10.500114440917969
    4. 'ai' → logprob: -12.000114440917969
    5. ' a' → logprob: -13.625114440917969
    6. '   ' → logprob: -13.875114440917969
    7. 'm' → logprob: -13.875114440917969
    8. '(a' → logprob: -14.000114440917969
    9. 'x' → logprob: -14.250114440917969
    10. '[a' → logprob: -15.000114440917969

Token 2144: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.005285223014652729
    2. ',' → logprob: -5.255285263061523
    3. 'b' → logprob: -10.005285263061523
    4. ' ,' → logprob: -12.255285263061523
    5. ',a' → logprob: -14.880285263061523
    6. ',i' → logprob: -15.380285263061523
    7. ',
' → logprob: -15.630285263061523
    8. ',d' → logprob: -16.130285263061523
    9. '   ' → logprob: -16.505285263061523
    10. ',c' → logprob: -16.505285263061523

Token 2145: '),' (ID: 936)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0667523741722107
    2. ',' → logprob: -2.8167524337768555
    3. '),(' → logprob: -5.9417524337768555
    4. '),' → logprob: -6.1917524337768555
    5. ')' → logprob: -10.691752433776855
    6. ',b' → logprob: -11.066752433776855
    7. 'c' → logprob: -11.691752433776855
    8. ',d' → logprob: -11.816752433776855
    9. ' ,' → logprob: -11.816752433776855
    10. ',a' → logprob: -12.441752433776855

Token 2146: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00037192381569184363
    2. ' c' → logprob: -8.875371932983398
    3. '(c' → logprob: -8.875371932983398
    4. '-c' → logprob: -10.000371932983398
    5. '   ' → logprob: -11.500371932983398
    6. '(-' → logprob: -11.500371932983398
    7. 'ci' → logprob: -12.500371932983398
    8. 'cc' → logprob: -12.750371932983398
    9. '[c' → logprob: -12.750371932983398
    10. '
' → logprob: -13.125371932983398

Token 2147: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1606525033712387
    2. ' in' → logprob: -1.9106525182724
    3. ',' → logprob: -8.160652160644531
    4. ')' → logprob: -9.785652160644531
    5. '_in' → logprob: -10.660652160644531
    6. '
' → logprob: -10.785652160644531
    7. '```' → logprob: -11.535652160644531
    8. 's' → logprob: -12.035652160644531
    9. ' ' → logprob: -12.035652160644531
    10. ',in' → logprob: -12.910652160644531

Token 2148: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.00016063073417171836
    2. ' zip' → logprob: -9.375160217285156
    3. '(zip' → logprob: -9.500160217285156
    4. 'rows' → logprob: -14.000160217285156
    5. 'row' → logprob: -16.875160217285156
    6. 'list' → logprob: -16.875160217285156
    7. '
' → logprob: -17.750160217285156
    8. '.zip' → logprob: -17.875160217285156
    9. '   ' → logprob: -18.000160217285156
    10. 'enumer' → logprob: -18.250160217285156

Token 2149: '(M' (ID: 6103)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.13888095319271088
    2. 'M' → logprob: -2.138880968093872
    3. '(M' → logprob: -4.763880729675293
    4. '(rows' → logprob: -6.388880729675293
    5. '[M' → logprob: -6.638880729675293
    6. ' rows' → logprob: -9.013880729675293
    7. ' M' → logprob: -9.638880729675293
    8. 'zip' → logprob: -9.888880729675293
    9. 'row' → logprob: -10.263880729675293
    10. '[(' → logprob: -10.763880729675293

Token 2150: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.08346402645111084
    2. ',' → logprob: -2.7084641456604004
    3. 'C' → logprob: -5.4584641456604
    4. ',[' → logprob: -5.4584641456604
    5. '),' → logprob: -6.8334641456604
    6. ',(' → logprob: -7.3334641456604
    7. ',-' → logprob: -7.7084641456604
    8. ',c' → logprob: -7.8334641456604
    9. '[' → logprob: -8.333463668823242
    10. ',
' → logprob: -8.458463668823242

Token 2151: '_vec' (ID: 29582)
  Prédit: '_vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vec' → logprob: -7.226628895296017e-06
    2. 'vec' → logprob: -12.375007629394531
    3. '_vect' → logprob: -13.000007629394531
    4. 'Vec' → logprob: -15.625007629394531
    5. '_VEC' → logprob: -15.875007629394531
    6. ',' → logprob: -16.50000762939453
    7. '_' → logprob: -16.87500762939453
    8. ')' → logprob: -16.87500762939453
    9. '[' → logprob: -17.00000762939453
    10. '   ' → logprob: -17.12500762939453

Token 2152: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.24123744666576385
    2. ',' → logprob: -1.8662374019622803
    3. '):' → logprob: -3.7412374019622803
    4. '),' → logprob: -4.366237640380859
    5. '       ' → logprob: -4.741237640380859
    6. ',c' → logprob: -5.866237640380859
    7. '           ' → logprob: -5.991237640380859
    8. '),(' → logprob: -5.991237640380859
    9. '   ' → logprob: -6.366237640380859
    10. '):
' → logprob: -7.241237640380859

Token 2153: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06264543533325195
    2. '```' → logprob: -4.312645435333252
    3. '               ' → logprob: -4.437645435333252
    4. '[' → logprob: -4.562645435333252
    5. '   ' → logprob: -4.562645435333252
    6. 'At' → logprob: -5.062645435333252
    7. 'for' → logprob: -6.187645435333252
    8. ' for' → logprob: -6.187645435333252
    9. '       ' → logprob: -6.312645435333252
    10. '           ' → logprob: -7.562645435333252

Token 2154: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' (adapté à ' At') → logprob: -0.0021035063546150923
    2. '   ' → logprob: -6.377103328704834
    3. '[' → logprob: -9.002103805541992
    4. ' At' → logprob: -9.377103805541992
    5. '       ' → logprob: -9.752103805541992
    6. '                   ' → logprob: -9.877103805541992
    7. '           ' → logprob: -10.252103805541992
    8. '               ' → logprob: -10.377103805541992
    9. '    ' → logprob: -12.752103805541992
    10. ' at' → logprob: -12.877103805541992

Token 2155: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00016384923947043717
    2. '[' → logprob: -8.875164031982422
    3. 'a' → logprob: -10.750164031982422
    4. '                   ' → logprob: -14.625164031982422
    5. '               ' → logprob: -15.000164031982422
    6. 'At' → logprob: -15.125164031982422
    7. '
' → logprob: -15.125164031982422
    8. '   ' → logprob: -15.375164031982422
    9. '           ' → logprob: -15.750164031982422
    10. ' A' → logprob: -15.750164031982422

Token 2156: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.438573680294212e-06
    2. '[
' → logprob: -12.625005722045898
    3. '][' → logprob: -14.625005722045898
    4. '[[' → logprob: -14.750005722045898
    5. '0' → logprob: -15.000005722045898
    6. '00' → logprob: -16.1250057220459
    7. '=' → logprob: -16.3750057220459
    8. '
' → logprob: -16.3750057220459
    9. 'import' → logprob: -16.3750057220459
    10. ' [' → logprob: -16.3750057220459

Token 2157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5274781584739685
    2. '[' → logprob: -0.9024781584739685
    3. '[
' → logprob: -5.527478218078613
    4. '
' → logprob: -9.402478218078613
    5. '(' → logprob: -9.652478218078613
    6. ' [' → logprob: -9.902478218078613
    7. '   ' → logprob: -10.277478218078613
    8. '[[' → logprob: -10.402478218078613
    9. '[a' → logprob: -10.652478218078613
    10. ' ' → logprob: -10.652478218078613

Token 2158: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0073599256575107574
    2. '[' → logprob: -5.007359981536865
    3. '0' → logprob: -7.632359981536865
    4. '
' → logprob: -9.257359504699707
    5. ' ][' → logprob: -11.132359504699707
    6. ']' → logprob: -11.507359504699707
    7. '#' → logprob: -11.757359504699707
    8. '   ' → logprob: -12.257359504699707
    9. ']+=' → logprob: -12.882359504699707
    10. ']][' → logprob: -13.007359504699707

Token 2159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. '
' → logprob: -12.500005722045898
    3. ' ' → logprob: -14.125005722045898
    4. '1' → logprob: -14.500005722045898
    5. '[' → logprob: -15.187505722045898
    6. '   ' → logprob: -16.1250057220459
    7. '۰' → logprob: -16.4375057220459
    8. ']' → logprob: -16.6250057220459
    9. '(' → logprob: -16.9375057220459
    10. '00' → logprob: -17.1250057220459

Token 2160: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.26465746760368347
    2. '+=' → logprob: -1.7646574974060059
    3. ']' → logprob: -3.014657497406006
    4. ' +=' → logprob: -5.014657497406006
    5. '+' → logprob: -5.389657497406006
    6. ']+' → logprob: -7.264657497406006
    7. '+]' → logprob: -9.514657020568848
    8. '   ' → logprob: -9.889657020568848
    9. ' ]' → logprob: -10.139657020568848
    10. '```' → logprob: -10.639657020568848

Token 2161: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0015360506949946284
    2. ' +=' → logprob: -6.751535892486572
    3. ']+=' → logprob: -8.25153636932373
    4. '+' → logprob: -9.62653636932373
    5. '+=(' → logprob: -10.37653636932373
    6. '```' → logprob: -13.00153636932373
    7. '                   ' → logprob: -13.25153636932373
    8. '           ' → logprob: -13.75153636932373
    9. '   ' → logprob: -14.12653636932373
    10. '       ' → logprob: -14.50153636932373

Token 2162: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.5
    3. '   ' → logprob: -18.625
    4. '	a' → logprob: -20.875
    5. '(a' → logprob: -23.25
    6. '    ' → logprob: -24.25
    7. '```' → logprob: -24.25
    8. '  ' → logprob: -24.375
    9. '[a' → logprob: -24.625
    10. '0' → logprob: -24.875

Token 2163: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.008745048195123672
    2. '*' → logprob: -4.758745193481445
    3. ' *' → logprob: -9.008745193481445
    4. 'a' → logprob: -12.133745193481445
    5. '**' → logprob: -14.008745193481445
    6. '*b' → logprob: -14.258745193481445
    7. '   ' → logprob: -15.258745193481445
    8. '*A' → logprob: -15.258745193481445
    9. '*c' → logprob: -15.758745193481445
    10. '*object' → logprob: -15.883745193481445

Token 2164: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22514177858829498
    2. '           ' → logprob: -2.350141763687134
    3. '               ' → logprob: -3.475141763687134
    4. '<|end|>' → logprob: -3.600141763687134
    5. '<|end|>' → logprob: -3.975141763687134
    6. '[' → logprob: -4.850142002105713
    7. '
' → logprob: -4.850142002105713
    8. '       ' → logprob: -5.850142002105713
    9. '0' → logprob: -6.100142002105713
    10. '+' → logprob: -6.100142002105713

Token 2165: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33791595697402954
    2. '           ' → logprob: -1.8379158973693848
    3. '[' → logprob: -2.5879158973693848
    4. '               ' → logprob: -3.3379158973693848
    5. 'At' → logprob: -4.587915897369385
    6. '0' → logprob: -6.087915897369385
    7. '       ' → logprob: -6.337915897369385
    8. '   ' → logprob: -7.462915897369385
    9. '                ' → logprob: -7.962915897369385
    10. '                    ' → logprob: -8.462916374206543

Token 2166: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' (adapté à ' At') → logprob: -0.002145739272236824
    2. '                   ' → logprob: -6.252145767211914
    3. '               ' → logprob: -8.752145767211914
    4. '           ' → logprob: -10.627145767211914
    5. '0' → logprob: -10.877145767211914
    6. '   ' → logprob: -12.127145767211914
    7. ' At' → logprob: -12.502145767211914
    8. '       ' → logprob: -12.502145767211914
    9. '                       ' → logprob: -13.627145767211914
    10. '                  ' → logprob: -14.502145767211914

Token 2167: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.008160033263266087
    2. '0' → logprob: -4.88316011428833
    3. '[' → logprob: -8.008159637451172
    4. '1' → logprob: -8.633159637451172
    5. 'a' → logprob: -11.008159637451172
    6. '
' → logprob: -11.383159637451172
    7. ' ' → logprob: -12.383159637451172
    8. '   ' → logprob: -12.758159637451172
    9. ' A' → logprob: -13.133159637451172
    10. 'b' → logprob: -13.758159637451172

Token 2168: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.40998875699006e-05
    2. '0' → logprob: -9.62507438659668
    3. '][' → logprob: -12.37507438659668
    4. '[
' → logprob: -13.25007438659668
    5. '```' → logprob: -14.25007438659668
    6. '   ' → logprob: -15.75007438659668
    7. ' [' → logprob: -16.00007438659668
    8. '#' → logprob: -16.00007438659668
    9. '           ' → logprob: -16.12507438659668
    10. '[][' → logprob: -16.37507438659668

Token 2169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0802738870552275e-05
    2. '[' → logprob: -11.87501049041748
    3. '1' → logprob: -12.87501049041748
    4. '   ' → logprob: -14.12501049041748
    5. ' ' → logprob: -15.37501049041748
    6. '
' → logprob: -15.75001049041748
    7. '01' → logprob: -16.875011444091797
    8. '```' → logprob: -16.875011444091797
    9. '    ' → logprob: -17.750011444091797
    10. '00' → logprob: -17.875011444091797

Token 2170: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02326248399913311
    2. '[' → logprob: -3.7732625007629395
    3. ' ][' → logprob: -12.398262023925781
    4. '   ' → logprob: -12.523262023925781
    5. '1' → logprob: -13.523262023925781
    6. ']][' → logprob: -13.648262023925781
    7. '       ' → logprob: -13.648262023925781
    8. '[][' → logprob: -13.773262023925781
    9. '0' → logprob: -14.273262023925781
    10. ']' → logprob: -14.523262023925781

Token 2171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '0' → logprob: -12.87500286102295
    3. '[' → logprob: -15.25000286102295
    4. '
' → logprob: -15.37500286102295
    5. '   ' → logprob: -16.312503814697266
    6. ' ' → logprob: -17.312503814697266
    7. 'b' → logprob: -17.937503814697266
    8. '01' → logprob: -18.500003814697266
    9. '１' → logprob: -18.562503814697266
    10. '```' → logprob: -18.625003814697266

Token 2172: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8096423149108887
    2. '[' → logprob: -1.6846423149108887
    3. ' +=' → logprob: -1.9346423149108887
    4. '+=' → logprob: -2.5596423149108887
    5. ']+=' → logprob: -2.6846423149108887
    6. ']' → logprob: -3.1846423149108887
    7. ' +' → logprob: -3.5596423149108887
    8. ']+' → logprob: -5.434642314910889
    9. '                   ' → logprob: -6.184642314910889
    10. '           ' → logprob: -7.559642314910889

Token 2173: ' +=' (ID: 2757)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10748647153377533
    2. '+=' → logprob: -2.6074864864349365
    3. ' +=' → logprob: -3.6074864864349365
    4. ']+=' → logprob: -7.482486248016357
    5. '```' → logprob: -8.607486724853516
    6. '+' → logprob: -8.732486724853516
    7. '[
' → logprob: -10.357486724853516
    8. '][' → logprob: -10.607486724853516
    9. '       ' → logprob: -10.732486724853516
    10. '                   ' → logprob: -11.482486724853516

Token 2174: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002036595979006961
    2. ' a' → logprob: -8.500204086303711
    3. '	a' → logprob: -16.62520408630371
    4. '   ' → logprob: -17.12520408630371
    5. 'b' → logprob: -17.75020408630371
    6. '0' → logprob: -18.00020408630371
    7. '```' → logprob: -19.00020408630371
    8. '(a' → logprob: -19.12520408630371
    9. '"a' → logprob: -19.62520408630371
    10. ')a' → logprob: -20.00020408630371

Token 2175: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -1.8789383830153383e-05
    2. 'b' → logprob: -11.375019073486328
    3. '*' → logprob: -11.875019073486328
    4. ' *' → logprob: -15.625019073486328
    5. '   ' → logprob: -17.625019073486328
    6. '**' → logprob: -18.625019073486328
    7. '```' → logprob: -19.125019073486328
    8. '*c' → logprob: -19.500019073486328
    9. '*a' → logprob: -20.000019073486328
    10. '           ' → logprob: -20.250019073486328

Token 2176: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016253103967756033
    2. '[' → logprob: -7.7516255378723145
    3. '               ' → logprob: -8.001625061035156
    4. '           ' → logprob: -8.001625061035156
    5. '
' → logprob: -8.126625061035156
    6. '<|end|>' → logprob: -9.376625061035156
    7. '                  ' → logprob: -10.376625061035156
    8. '       ' → logprob: -10.751625061035156
    9. '                       ' → logprob: -10.876625061035156
    10. '                    ' → logprob: -10.876625061035156

Token 2177: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04077009856700897
    2. 'At' → logprob: -3.7907700538635254
    3. '[' → logprob: -4.415770053863525
    4. '               ' → logprob: -5.665770053863525
    5. '           ' → logprob: -6.790770053863525
    6. '       ' → logprob: -8.540770530700684
    7. '                       ' → logprob: -9.290770530700684
    8. '                  ' → logprob: -9.540770530700684
    9. '```' → logprob: -9.665770530700684
    10. '
' → logprob: -9.790770530700684

Token 2178: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' (adapté à ' At') → logprob: -0.005151804536581039
    2. '                   ' → logprob: -5.755151748657227
    3. '               ' → logprob: -6.255151748657227
    4. ' At' → logprob: -10.630151748657227
    5. '           ' → logprob: -10.880151748657227
    6. '   ' → logprob: -13.255151748657227
    7. '                       ' → logprob: -13.755151748657227
    8. '                  ' → logprob: -13.755151748657227
    9. '[' → logprob: -13.880151748657227
    10. '       ' → logprob: -14.005151748657227

Token 2179: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.1054253011243418e-05
    2. 'At' → logprob: -11.125020980834961
    3. '[' → logprob: -12.250020980834961
    4. '0' → logprob: -13.750020980834961
    5. 'a' → logprob: -15.875020980834961
    6. '
' → logprob: -16.75002098083496
    7. '   ' → logprob: -17.00002098083496
    8. 'at' → logprob: -17.75002098083496
    9. 'А' → logprob: -17.75002098083496
    10. '```' → logprob: -17.75002098083496

Token 2180: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.632542913896032e-05
    2. '                   ' → logprob: -10.375046730041504
    3. '               ' → logprob: -12.875046730041504
    4. '```' → logprob: -13.250046730041504
    5. '[
' → logprob: -13.375046730041504
    6. '           ' → logprob: -13.500046730041504
    7. '0' → logprob: -13.875046730041504
    8. '][' → logprob: -14.000046730041504
    9. ' [' → logprob: -14.000046730041504
    10. '   ' → logprob: -14.125046730041504

Token 2181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861681904643774
    2. '0' → logprob: -4.758616924285889
    3. '[' → logprob: -13.38361644744873
    4. '
' → logprob: -14.25861644744873
    5. '```' → logprob: -16.758617401123047
    6. '   ' → logprob: -17.133617401123047
    7. '(' → logprob: -18.321117401123047
    8. '01' → logprob: -18.446117401123047
    9. ' ' → logprob: -18.508617401123047
    10. '`' → logprob: -18.883617401123047

Token 2182: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014489953173324466
    2. '][' → logprob: -9.000144958496094
    3. '0' → logprob: -11.125144958496094
    4. '   ' → logprob: -13.500144958496094
    5. '           ' → logprob: -13.625144958496094
    6. '               ' → logprob: -14.000144958496094
    7. ' [' → logprob: -14.125144958496094
    8. '                   ' → logprob: -14.875144958496094
    9. '```' → logprob: -14.875144958496094
    10. '[
' → logprob: -15.250144958496094

Token 2183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004079828038811684
    2. '1' → logprob: -5.504079818725586
    3. ' ' → logprob: -14.504079818725586
    4. '   ' → logprob: -14.754079818725586
    5. '[' → logprob: -15.129079818725586
    6. '
' → logprob: -15.879079818725586
    7. '```' → logprob: -16.629079818725586
    8. '۰' → logprob: -17.441579818725586
    9. '	' → logprob: -18.691579818725586
    10. '<|end|>' → logprob: -19.129079818725586

Token 2184: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3767174780368805
    2. ']+=' → logprob: -2.5017175674438477
    3. '+=' → logprob: -2.6267175674438477
    4. '+' → logprob: -2.6267175674438477
    5. ']' → logprob: -2.7517175674438477
    6. '[' → logprob: -4.626717567443848
    7. '                   ' → logprob: -5.376717567443848
    8. ' +' → logprob: -5.501717567443848
    9. ']+' → logprob: -5.501717567443848
    10. '```' → logprob: -9.001717567443848

Token 2185: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.46072354912757874
    2. '+=' → logprob: -1.0857235193252563
    3. '+' → logprob: -3.585723638534546
    4. '[' → logprob: -5.710723400115967
    5. ' +' → logprob: -8.085723876953125
    6. '```' → logprob: -9.585723876953125
    7. ']+=' → logprob: -10.085723876953125
    8. '                   ' → logprob: -10.460723876953125
    9. '0' → logprob: -12.085723876953125
    10. 'a' → logprob: -12.085723876953125

Token 2186: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20172809064388275
    2. 'b' → logprob: -1.701728105545044
    3. ' a' → logprob: -8.451727867126465
    4. ' b' → logprob: -9.201727867126465
    5. '   ' → logprob: -15.951727867126465
    6. '	a' → logprob: -17.07672882080078
    7. 'at' → logprob: -17.57672882080078
    8. '```' → logprob: -17.95172882080078
    9. '0' → logprob: -18.07672882080078
    10. '	b' → logprob: -18.32672882080078

Token 2187: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -5.776898251497187e-05
    2. 'a' → logprob: -10.5000581741333
    3. '*b' → logprob: -10.5000581741333
    4. '[' → logprob: -14.0000581741333
    5. '*c' → logprob: -14.6250581741333
    6. '*' → logprob: -15.1250581741333
    7. ' *' → logprob: -15.6250581741333
    8. '0' → logprob: -15.7500581741333
    9. '```' → logprob: -15.8750581741333
    10. '*[' → logprob: -16.125057220458984

Token 2188: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006028335075825453
    2. 'At' → logprob: -5.631028175354004
    3. '               ' → logprob: -7.131028175354004
    4. '           ' → logprob: -7.256028175354004
    5. '[' → logprob: -7.381028175354004
    6. ' At' → logprob: -9.381028175354004
    7. '                  ' → logprob: -10.006028175354004
    8. '```' → logprob: -10.131028175354004
    9. '
' → logprob: -10.506028175354004
    10. '_at' → logprob: -10.756028175354004

Token 2189: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015198050066828728
    2. '[' → logprob: -4.890198230743408
    3. 'At' → logprob: -5.265198230743408
    4. '               ' → logprob: -6.765198230743408
    5. '           ' → logprob: -7.640198230743408
    6. '```' → logprob: -7.765198230743408
    7. '                       ' → logprob: -9.14019775390625
    8. '                  ' → logprob: -9.76519775390625
    9. '                    ' → logprob: -9.89019775390625
    10. '``' → logprob: -10.51519775390625

Token 2190: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' (adapté à ' At') → logprob: -0.0017187348566949368
    2. '                   ' → logprob: -6.751718521118164
    3. '               ' → logprob: -8.126718521118164
    4. '[' → logprob: -8.626718521118164
    5. ' At' → logprob: -10.251718521118164
    6. '   ' → logprob: -11.126718521118164
    7. '           ' → logprob: -11.126718521118164
    8. '_at' → logprob: -13.126718521118164
    9. '                  ' → logprob: -13.376718521118164
    10. '                ' → logprob: -13.876718521118164

Token 2191: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -8.08944896562025e-05
    2. '[' → logprob: -10.000081062316895
    3. '1' → logprob: -10.875081062316895
    4. 'At' → logprob: -11.250081062316895
    5. '0' → logprob: -13.500081062316895
    6. '
' → logprob: -13.750081062316895
    7. 'a' → logprob: -15.125081062316895
    8. '   ' → logprob: -15.750081062316895
    9. ' A' → logprob: -15.750081062316895
    10. ' ' → logprob: -16.750080108642578

Token 2192: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '][' → logprob: -15.250000953674316
    3. '[
' → logprob: -15.500000953674316
    4. '           ' → logprob: -15.750000953674316
    5. '```' → logprob: -16.25
    6. '   ' → logprob: -17.5
    7. ' [' → logprob: -17.75
    8. 'import' → logprob: -18.0
    9. '                   ' → logprob: -18.0
    10. '       ' → logprob: -18.0

Token 2193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -11.500011444091797
    3. '0' → logprob: -13.625011444091797
    4. '   ' → logprob: -17.250011444091797
    5. ' ' → logprob: -17.375011444091797
    6. '```' → logprob: -17.437511444091797
    7. 'import' → logprob: -17.937511444091797
    8. '
' → logprob: -18.125011444091797
    9. '`' → logprob: -18.250011444091797
    10. '１' → logprob: -18.625011444091797

Token 2194: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005241821985691786
    2. '][' → logprob: -5.255241870880127
    3. '```' → logprob: -13.630241394042969
    4. '   ' → logprob: -14.005241394042969
    5. '>[' → logprob: -14.130241394042969
    6. '[][' → logprob: -14.380241394042969
    7. '           ' → logprob: -14.505241394042969
    8. ' [' → logprob: -14.755241394042969
    9. '}[' → logprob: -15.005241394042969
    10. '"][' → logprob: -15.130241394042969

Token 2195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '0' → logprob: -13.87500286102295
    3. '[' → logprob: -13.87500286102295
    4. '```' → logprob: -15.00000286102295
    5. '   ' → logprob: -15.62500286102295
    6. ' ' → logprob: -16.187501907348633
    7. '-' → logprob: -17.250001907348633
    8. '
' → logprob: -17.437501907348633
    9. '۱' → logprob: -17.812501907348633
    10. 'b' → logprob: -17.937501907348633

Token 2196: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04909176379442215
    2. ']+=' → logprob: -3.9240918159484863
    3. '+=' → logprob: -4.049091815948486
    4. ']' → logprob: -5.299091815948486
    5. '                   ' → logprob: -5.299091815948486
    6. '```' → logprob: -8.924091339111328
    7. '[' → logprob: -9.049091339111328
    8. '                    ' → logprob: -9.174091339111328
    9. '                  ' → logprob: -9.549091339111328
    10. '           ' → logprob: -10.049091339111328

Token 2197: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20177660882472992
    2. '+=' → logprob: -1.7017766237258911
    3. '[' → logprob: -8.451776504516602
    4. ']+=' → logprob: -9.326776504516602
    5. '+' → logprob: -10.576776504516602
    6. '```' → logprob: -11.701776504516602
    7. '                   ' → logprob: -11.701776504516602
    8. '          ' → logprob: -12.826776504516602
    9. '           ' → logprob: -13.201776504516602
    10. '                    ' → logprob: -13.326776504516602

Token 2198: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.848420551046729e-05
    2. ' b' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.250059127807617
    4. 'a' → logprob: -16.875059127807617
    5. 'bb' → logprob: -19.125059127807617
    6. '	b' → logprob: -19.375059127807617
    7. '     ' → logprob: -21.125059127807617
    8. 'B' → logprob: -21.500059127807617
    9. '    ' → logprob: -21.500059127807617
    10. '(b' → logprob: -21.500059127807617

Token 2199: '*b' (ID: 72162)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.043052855879068375
    2. '*b' → logprob: -3.168052911758423
    3. ' b' → logprob: -11.043052673339844
    4. '0' → logprob: -11.418052673339844
    5. '[' → logprob: -11.418052673339844
    6. '*' → logprob: -12.043052673339844
    7. '	b' → logprob: -12.793052673339844
    8. ''b' → logprob: -13.543052673339844
    9. '```' → logprob: -13.668052673339844
    10. ' *' → logprob: -13.918052673339844

Token 2200: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5884959697723389
    2. '                   ' → logprob: -0.8384959697723389
    3. 'At' → logprob: -5.213496208190918
    4. '```' → logprob: -5.963496208190918
    5. '           ' → logprob: -6.213496208190918
    6. '[' → logprob: -6.463496208190918
    7. '       ' → logprob: -8.838496208190918
    8. '                       ' → logprob: -9.088496208190918
    9. '<|end|>' → logprob: -9.338496208190918
    10. ',' → logprob: -9.463496208190918

Token 2201: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20652419328689575
    2. '               ' → logprob: -1.831524133682251
    3. '```' → logprob: -3.831524133682251
    4. 'At' → logprob: -5.95652437210083
    5. '           ' → logprob: -6.70652437210083
    6. '[' → logprob: -7.83152437210083
    7. '``' → logprob: -8.831523895263672
    8. '                       ' → logprob: -9.331523895263672
    9. '       ' → logprob: -9.456523895263672
    10. ',' → logprob: -9.581523895263672

Token 2202: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' (adapté à ' At') → logprob: -0.002320818370208144
    2. '               ' → logprob: -6.377320766448975
    3. '                   ' → logprob: -7.752320766448975
    4. '   ' → logprob: -9.502321243286133
    5. '           ' → logprob: -9.502321243286133
    6. '       ' → logprob: -10.752321243286133
    7. ' At' → logprob: -12.002321243286133
    8. '```' → logprob: -13.252321243286133
    9. '``' → logprob: -13.627321243286133
    10. '                       ' → logprob: -13.627321243286133

Token 2203: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0010437668533995748
    2. 'A' → logprob: -6.876043796539307
    3. 'At' → logprob: -12.751043319702148
    4. '[' → logprob: -12.876043319702148
    5. '
' → logprob: -13.251043319702148
    6. '[b' → logprob: -14.751043319702148
    7. 'a' → logprob: -14.876043319702148
    8. '   ' → logprob: -15.001043319702148
    9. '#' → logprob: -15.126043319702148
    10. '``' → logprob: -15.251043319702148

Token 2204: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013524403038900346
    2. '0' → logprob: -9.25013542175293
    3. '[
' → logprob: -10.87513542175293
    4. '=' → logprob: -12.62513542175293
    5. ' [' → logprob: -12.87513542175293
    6. '
' → logprob: -13.00013542175293
    7. '+=' → logprob: -13.00013542175293
    8. ' ' → logprob: -13.87513542175293
    9. ' +=' → logprob: -14.00013542175293
    10. '+' → logprob: -14.12513542175293

Token 2205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012348759919404984
    2. '[' → logprob: -6.751235008239746
    3. ' ' → logprob: -11.001235008239746
    4. '1' → logprob: -11.626235008239746
    5. '
' → logprob: -11.626235008239746
    6. 'i' → logprob: -12.001235008239746
    7. '   ' → logprob: -12.063735008239746
    8. '(' → logprob: -13.251235008239746
    9. '```' → logprob: -13.438735008239746
    10. '#' → logprob: -13.501235008239746

Token 2206: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.26178911328315735
    2. ' +=' → logprob: -1.886789083480835
    3. ']+=' → logprob: -2.761789083480835
    4. '+' → logprob: -4.386789321899414
    5. ']' → logprob: -6.636789321899414
    6. '[' → logprob: -6.886789321899414
    7. ']+' → logprob: -7.886789321899414
    8. '```' → logprob: -9.011789321899414
    9. '    ' → logprob: -9.761789321899414
    10. ' ' → logprob: -10.636789321899414

Token 2207: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01613454893231392
    2. ' +=' → logprob: -4.141134738922119
    3. ']+=' → logprob: -9.891134262084961
    4. '+' → logprob: -10.266134262084961
    5. '+=(' → logprob: -12.141134262084961
    6. '   ' → logprob: -12.516134262084961
    7. '```' → logprob: -13.391134262084961
    8. '    ' → logprob: -13.766134262084961
    9. '       ' → logprob: -14.141134262084961
    10. '=' → logprob: -14.266134262084961

Token 2208: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031802060548216105
    2. ' a' → logprob: -5.753180027008057
    3. '   ' → logprob: -13.753180503845215
    4. 'c' → logprob: -14.253180503845215
    5. '	a' → logprob: -15.628180503845215
    6. '(a' → logprob: -15.878180503845215
    7. '0' → logprob: -16.0031795501709
    8. ' ' → logprob: -16.3781795501709
    9. '-a' → logprob: -17.5656795501709
    10. '-' → logprob: -17.6906795501709

Token 2209: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.005385656841099262
    2. '*' → logprob: -5.755385875701904
    3. ' *' → logprob: -6.130385875701904
    4. 'c' → logprob: -11.130385398864746
    5. '*(-' → logprob: -13.380385398864746
    6. '**' → logprob: -13.380385398864746
    7. '   ' → logprob: -13.505385398864746
    8. '*(' → logprob: -13.630385398864746
    9. '*C' → logprob: -13.630385398864746
    10. '```' → logprob: -13.755385398864746

Token 2210: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001178916310891509
    2. '           ' → logprob: -7.376178741455078
    3. '               ' → logprob: -7.626178741455078
    4. '
' → logprob: -10.751178741455078
    5. '[' → logprob: -11.501178741455078
    6. '                  ' → logprob: -11.626178741455078
    7. '                    ' → logprob: -12.251178741455078
    8. '   ' → logprob: -12.376178741455078
    9. '```' → logprob: -12.876178741455078
    10. '                       ' → logprob: -13.001178741455078

Token 2211: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.042372893542051315
    2. '               ' → logprob: -3.542372941970825
    3. 'At' → logprob: -4.667372703552246
    4. '           ' → logprob: -6.167372703552246
    5. '[' → logprob: -7.417372703552246
    6. '   ' → logprob: -8.792372703552246
    7. '       ' → logprob: -9.542372703552246
    8. '```' → logprob: -9.542372703552246
    9. '                  ' → logprob: -10.167372703552246
    10. ' At' → logprob: -10.667372703552246

Token 2212: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' (adapté à ' At') → logprob: -0.010243061929941177
    2. '                   ' → logprob: -4.635242938995361
    3. '               ' → logprob: -8.63524341583252
    4. '[' → logprob: -8.76024341583252
    5. '           ' → logprob: -9.88524341583252
    6. '   ' → logprob: -10.01024341583252
    7. '0' → logprob: -10.51024341583252
    8. ' At' → logprob: -11.13524341583252
    9. '_at' → logprob: -12.01024341583252
    10. '       ' → logprob: -13.38524341583252

Token 2213: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002715873415581882
    2. '1' → logprob: -8.875271797180176
    3. 'A' → logprob: -9.375271797180176
    4. '[' → logprob: -10.125271797180176
    5. '
' → logprob: -13.125271797180176
    6. '   ' → logprob: -13.125271797180176
    7. '0' → logprob: -14.375271797180176
    8. ' ' → logprob: -14.875271797180176
    9. '```' → logprob: -15.000271797180176
    10. 'ab' → logprob: -15.125271797180176

Token 2214: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3544423381972592e-05
    2. '[
' → logprob: -12.75001335144043
    3. '+' → logprob: -12.87501335144043
    4. '0' → logprob: -12.87501335144043
    5. '```' → logprob: -13.50001335144043
    6. '<|end|>' → logprob: -13.87501335144043
    7. '*' → logprob: -14.12501335144043
    8. '#' → logprob: -14.87501335144043
    9. '**' → logprob: -15.12501335144043
    10. '<|end|>' → logprob: -15.75001335144043

Token 2215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.273621405242011e-05
    2. '[' → logprob: -10.625032424926758
    3. '0' → logprob: -11.750032424926758
    4. '```' → logprob: -15.625032424926758
    5. ' ' → logprob: -16.187532424926758
    6. '   ' → logprob: -17.250032424926758
    7. '#' → logprob: -17.687532424926758
    8. '{' → logprob: -18.062532424926758
    9. '
' → logprob: -18.125032424926758
    10. '<|end|>' → logprob: -18.375032424926758

Token 2216: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20394650101661682
    2. ']' → logprob: -1.8289464712142944
    3. ']+=' → logprob: -4.203946590423584
    4. ' +=' → logprob: -5.078946590423584
    5. '+' → logprob: -6.828946590423584
    6. '+=' → logprob: -7.328946590423584
    7. ']+' → logprob: -8.078946113586426
    8. '*' → logprob: -8.828946113586426
    9. '                   ' → logprob: -8.828946113586426
    10. '```' → logprob: -10.078946113586426

Token 2217: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1288025677204132
    2. '+=' → logprob: -2.128802537918091
    3. '+' → logprob: -6.50380277633667
    4. ']+=' → logprob: -8.753802299499512
    5. '[' → logprob: -9.753802299499512
    6. ' +' → logprob: -9.878802299499512
    7. '```' → logprob: -10.128802299499512
    8. '*' → logprob: -10.378802299499512
    9. ' ' → logprob: -12.128802299499512
    10. ' ' → logprob: -12.503802299499512

Token 2218: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0021852378267794847
    2. ' b' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.127185821533203
    4. '	b' → logprob: -17.877185821533203
    5. ')b' → logprob: -18.002185821533203
    6. '0' → logprob: -18.627185821533203
    7. ' ' → logprob: -19.252185821533203
    8. 'a' → logprob: -20.064685821533203
    9. '```' → logprob: -20.314685821533203
    10. 'c' → logprob: -20.314685821533203

Token 2219: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -4.191489642835222e-05
    2. 'c' → logprob: -10.375041961669922
    3. ' *' → logprob: -11.625041961669922
    4. '*' → logprob: -13.375041961669922
    5. '**' → logprob: -16.750041961669922
    6. '```' → logprob: -16.750041961669922
    7. '*C' → logprob: -17.750041961669922
    8. '*b' → logprob: -18.000041961669922
    9. '`' → logprob: -18.625041961669922
    10. ' c' → logprob: -18.750041961669922

Token 2220: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002524053445085883
    2. '       ' → logprob: -6.627523899078369
    3. '           ' → logprob: -7.252523899078369
    4. '
' → logprob: -8.252524375915527
    5. '                   ' → logprob: -9.002524375915527
    6. '```' → logprob: -9.877524375915527
    7. 'At' → logprob: -10.502524375915527
    8. '   ' → logprob: -12.252524375915527
    9. ')' → logprob: -12.377524375915527
    10. ',' → logprob: -13.127524375915527

Token 2221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.045824188739061356
    2. '       ' → logprob: -3.7958242893218994
    3. '
' → logprob: -4.42082405090332
    4. '           ' → logprob: -4.79582405090332
    5. '```' → logprob: -6.29582405090332
    6. '                   ' → logprob: -10.04582405090332
    7. '``' → logprob: -10.17082405090332
    8. 'import' → logprob: -10.67082405090332
    9. '   ' → logprob: -10.92082405090332
    10. 'det' → logprob: -11.29582405090332

Token 2222: ' det' (ID: 1476)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' (adapté à ' det') → logprob: -0.27117598056793213
    2. '               ' → logprob: -1.5211759805679321
    3. 'den' → logprob: -4.646175861358643
    4. 'import' → logprob: -5.521175861358643
    5. 'D' → logprob: -5.896175861358643
    6. 'from' → logprob: -7.396175861358643
    7. '
' → logprob: -7.396175861358643
    8. '       ' → logprob: -7.521175861358643
    9. 'd' → logprob: -8.1461763381958
    10. ' det' → logprob: -8.3961763381958

Token 2223: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021626949310303
    2. '=' → logprob: -2.3502163887023926
    3. ':' → logprob: -13.475215911865234
    4. '=(' → logprob: -13.725215911865234
    5. '=
' → logprob: -14.225215911865234
    6. 'At' → logprob: -14.225215911865234
    7. '```' → logprob: -14.225215911865234
    8. '_at' → logprob: -14.475215911865234
    9. '=A' → logprob: -14.725215911865234
    10. '[' → logprob: -14.975215911865234

Token 2224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197262182831764
    2. '=' → logprob: -2.8119726181030273
    3. ' =
' → logprob: -13.936972618103027
    4. '=
' → logprob: -14.061972618103027
    5. '```' → logprob: -14.436972618103027
    6. '=A' → logprob: -14.686972618103027
    7. ' ' → logprob: -14.811972618103027
    8. 'A' → logprob: -15.811972618103027
    9. '           ' → logprob: -15.936972618103027
    10. '=_' → logprob: -15.936972618103027

Token 2225: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -6.694766489090398e-05
    2. ' At' → logprob: -9.875066757202148
    3. '   ' → logprob: -11.250066757202148
    4. '           ' → logprob: -13.750066757202148
    5. '       ' → logprob: -14.000066757202148
    6. '               ' → logprob: -15.000066757202148
    7. '(' → logprob: -15.875066757202148
    8. '                   ' → logprob: -17.25006675720215
    9. '  ' → logprob: -17.62506675720215
    10. 'Atk' → logprob: -17.75006675720215

Token 2226: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2471589798224159e-05
    2. 'At' → logprob: -11.500012397766113
    3. '[' → logprob: -13.375012397766113
    4. 'a' → logprob: -14.625012397766113
    5. '```' → logprob: -16.25001335144043
    6. '0' → logprob: -17.00001335144043
    7. '
' → logprob: -17.75001335144043
    8. '2' → logprob: -18.25001335144043
    9. '``' → logprob: -18.25001335144043
    10. 'А' → logprob: -18.25001335144043

Token 2227: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.273621405242011e-05
    2. '0' → logprob: -10.500032424926758
    3. '00' → logprob: -12.625032424926758
    4. '```' → logprob: -14.125032424926758
    5. '[
' → logprob: -15.250032424926758
    6. 'import' → logprob: -15.625032424926758
    7. '   ' → logprob: -16.250032424926758
    8. '][' → logprob: -16.375032424926758
    9. ' [' → logprob: -16.625032424926758
    10. '``' → logprob: -16.625032424926758

Token 2228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.183501293184236e-05
    2. '[' → logprob: -9.62507152557373
    3. ' ' → logprob: -12.50007152557373
    4. '
' → logprob: -14.37507152557373
    5. '1' → logprob: -14.62507152557373
    6. '   ' → logprob: -15.00007152557373
    7. '(' → logprob: -16.250072479248047
    8. '00' → logprob: -16.375072479248047
    9. '```' → logprob: -16.437572479248047
    10. '-' → logprob: -17.875072479248047

Token 2229: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014196529053151608
    2. '[' → logprob: -4.264196395874023
    3. ' ][' → logprob: -11.389196395874023
    4. '0' → logprob: -11.764196395874023
    5. '   ' → logprob: -12.139196395874023
    6. '       ' → logprob: -13.389196395874023
    7. '```' → logprob: -13.764196395874023
    8. ']' → logprob: -13.764196395874023
    9. ''][' → logprob: -14.139196395874023
    10. '"][' → logprob: -14.264196395874023

Token 2230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.625000953674316
    3. '
' → logprob: -17.375001907348633
    4. ' ' → logprob: -17.500001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '][' → logprob: -18.375001907348633
    7. '<|end|>' → logprob: -18.500001907348633
    8. '۰' → logprob: -18.625001907348633
    9. '1' → logprob: -18.875001907348633
    10. '```' → logprob: -19.750001907348633

Token 2231: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005238736979663372
    2. ' *' → logprob: -5.2552385330200195
    3. '[' → logprob: -12.88023853302002
    4. 'At' → logprob: -13.88023853302002
    5. '   ' → logprob: -14.75523853302002
    6. '()*' → logprob: -15.50523853302002
    7. '```' → logprob: -15.50523853302002
    8. '**' → logprob: -15.63023853302002
    9. ']*' → logprob: -15.75523853302002
    10. ')*' → logprob: -16.130239486694336

Token 2232: 'At' (ID: 2243)
  Prédit: 'At'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -1.6240566083070007e-06
    2. ' At' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.125001907348633
    4. '_at' → logprob: -19.875001907348633
    5. '  ' → logprob: -20.375001907348633
    6. 'at' → logprob: -20.750001907348633
    7. '       ' → logprob: -20.750001907348633
    8. ' ' → logprob: -21.000001907348633
    9. 'Atk' → logprob: -21.000001907348633
    10. '
' → logprob: -21.375001907348633

Token 2233: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -11.750009536743164
    3. 'At' → logprob: -13.750009536743164
    4. '2' → logprob: -15.125009536743164
    5. 'А' → logprob: -16.000009536743164
    6. '```' → logprob: -18.125009536743164
    7. 'a' → logprob: -18.500009536743164
    8. '
' → logprob: -18.750009536743164
    9. '_A' → logprob: -19.250009536743164
    10. ' A' → logprob: -19.750009536743164

Token 2234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008052219054661691
    2. '1' → logprob: -7.125805377960205
    3. '```' → logprob: -14.500804901123047
    4. '   ' → logprob: -16.250804901123047
    5. ' [' → logprob: -16.750804901123047
    6. '[
' → logprob: -17.250804901123047
    7. '][' → logprob: -17.375804901123047
    8. '
' → logprob: -17.500804901123047
    9. '``' → logprob: -18.750804901123047
    10. '#' → logprob: -19.000804901123047

Token 2235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '
' → logprob: -13.87500286102295
    3. '   ' → logprob: -14.12500286102295
    4. '[' → logprob: -14.25000286102295
    5. '0' → logprob: -14.50000286102295
    6. '```' → logprob: -15.37500286102295
    7. '``' → logprob: -16.250003814697266
    8. ' ' → logprob: -17.500003814697266
    9. '#' → logprob: -17.625003814697266
    10. '    ' → logprob: -18.125003814697266

Token 2236: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.755678961984813e-05
    2. '][' → logprob: -9.500077247619629
    3. ' [' → logprob: -13.500077247619629
    4. '1' → logprob: -14.250077247619629
    5. '   ' → logprob: -15.500077247619629
    6. '```' → logprob: -16.000078201293945
    7. '[
' → logprob: -16.375078201293945
    8. '>[' → logprob: -17.125078201293945
    9. ',' → logprob: -17.500078201293945
    10. '       ' → logprob: -17.625078201293945

Token 2237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.250000953674316
    3. '۱' → logprob: -15.500000953674316
    4. '```' → logprob: -16.25
    5. '   ' → logprob: -16.5
    6. ' ' → logprob: -16.875
    7. '0' → logprob: -17.6875
    8. '१' → logprob: -18.0
    9. '১' → logprob: -18.0625
    10. '
' → logprob: -18.0625

Token 2238: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020561158657073975
    2. '-' → logprob: -3.8955612182617188
    3. ' -
' → logprob: -11.145561218261719
    4. '-
' → logprob: -12.895561218261719
    5. ' ' → logprob: -13.895561218261719
    6. '```' → logprob: -14.145561218261719
    7. ' ' → logprob: -15.895561218261719
    8. '   ' → logprob: -16.52056121826172
    9. 'def' → logprob: -17.02056121826172
    10. '`' → logprob: -17.14556121826172

Token 2239: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07889485359191895
    2. '-' → logprob: -2.578894853591919
    3. '-
' → logprob: -13.07889461517334
    4. ' -
' → logprob: -13.32889461517334
    5. ' ' → logprob: -14.45389461517334
    6. '```' → logprob: -15.20389461517334
    7. ' ' → logprob: -15.82889461517334
    8. '   ' → logprob: -15.95389461517334
    9. '                ' → logprob: -16.578895568847656
    10. '    ' → logprob: -16.953895568847656

Token 2240: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -1.4855663721391466e-05
    2. ' At' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.375015258789062
    4. '_at' → logprob: -19.250015258789062
    5. 'Atk' → logprob: -20.125015258789062
    6. '       ' → logprob: -20.625015258789062
    7. 'Ati' → logprob: -20.875015258789062
    8. '  ' → logprob: -20.875015258789062
    9. 'AT' → logprob: -21.250015258789062
    10. ' ' → logprob: -21.250015258789062

Token 2241: 'A' (ID: 32)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -7.20734242349863e-05
    2. 'A' → logprob: -10.250072479248047
    3. '[' → logprob: -10.250072479248047
    4. '```' → logprob: -14.625072479248047
    5. '0' → logprob: -15.250072479248047
    6. ' At' → logprob: -15.625072479248047
    7. 'AT' → logprob: -16.125072479248047
    8. 'at' → logprob: -16.750072479248047
    9. '_at' → logprob: -17.125072479248047
    10. '``' → logprob: -17.125072479248047

Token 2242: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '0' → logprob: -13.500003814697266
    3. '2' → logprob: -14.000003814697266
    4. '1' → logprob: -14.375003814697266
    5. '```' → logprob: -14.625003814697266
    6. '[
' → logprob: -14.875003814697266
    7. 's' → logprob: -16.250003814697266
    8. 'import' → logprob: -17.000003814697266
    9. '#' → logprob: -17.125003814697266
    10. 'def' → logprob: -17.125003814697266

Token 2243: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021021578868385404
    2. '1' → logprob: -8.50020980834961
    3. '[' → logprob: -12.12520980834961
    4. '   ' → logprob: -14.50020980834961
    5. '(' → logprob: -15.50020980834961
    6. ' ' → logprob: -15.62520980834961
    7. '```' → logprob: -16.18770980834961
    8. '۰' → logprob: -16.81270980834961
    9. '
' → logprob: -17.00020980834961
    10. '``' → logprob: -17.56270980834961

Token 2244: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28122395277023315
    2. '][' → logprob: -1.406224012374878
    3. '```' → logprob: -10.656224250793457
    4. '>[' → logprob: -11.656224250793457
    5. '1' → logprob: -11.906224250793457
    6. '}[' → logprob: -12.281224250793457
    7. '   ' → logprob: -12.656224250793457
    8. '#' → logprob: -12.906224250793457
    9. '0' → logprob: -13.031224250793457
    10. ']' → logprob: -13.031224250793457

Token 2245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002476604888215661
    2. '0' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.377476692199707
    4. '
' → logprob: -15.627476692199707
    5. '[' → logprob: -16.00247573852539
    6. '```' → logprob: -16.75247573852539
    7. ' ' → logprob: -17.62747573852539
    8. '``' → logprob: -18.25247573852539
    9. '    ' → logprob: -18.75247573852539
    10. '  ' → logprob: -19.12747573852539

Token 2246: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00513330427929759
    2. '*' → logprob: -5.505133152008057
    3. '][' → logprob: -7.005133152008057
    4. '*[' → logprob: -9.255133628845215
    5. ']*' → logprob: -11.005133628845215
    6. '```' → logprob: -11.255133628845215
    7. '0' → logprob: -11.755133628845215
    8. ' *' → logprob: -11.880133628845215
    9. '`' → logprob: -14.130133628845215
    10. '   ' → logprob: -14.130133628845215

Token 2247: 'At' (ID: 2243)
  Prédit: 'At'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -1.9361264946837764e-07
    2. ' At' → logprob: -16.0
    3. '   ' → logprob: -18.25
    4. 'at' → logprob: -18.5
    5. '[' → logprob: -18.875
    6. '0' → logprob: -18.875
    7. '_at' → logprob: -19.375
    8. '       ' → logprob: -19.5
    9. '           ' → logprob: -19.625
    10. 'Atk' → logprob: -19.75

Token 2248: 'A' (ID: 32)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15151402354240417
    2. 'At' → logprob: -2.9015140533447266
    3. '1' → logprob: -3.1515140533447266
    4. '0' → logprob: -3.1515140533447266
    5. '```' → logprob: -9.901514053344727
    6. '_at' → logprob: -12.151514053344727
    7. ' At' → logprob: -12.526514053344727
    8. '(' → logprob: -12.651514053344727
    9. '
' → logprob: -12.901514053344727
    10. '   ' → logprob: -13.026514053344727

Token 2249: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2246291337069124e-05
    2. '0' → logprob: -11.250021934509277
    3. '```' → logprob: -12.500021934509277
    4. '2' → logprob: -12.625021934509277
    5. '1' → logprob: -13.875021934509277
    6. '``' → logprob: -15.750021934509277
    7. '[
' → logprob: -16.000022888183594
    8. 'Let's' → logprob: -16.500022888183594
    9. '#' → logprob: -16.875022888183594
    10. ' [' → logprob: -17.125022888183594

Token 2250: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02979491837322712
    2. '1' → logprob: -3.529794931411743
    3. '[' → logprob: -10.654794692993164
    4. '   ' → logprob: -11.654794692993164
    5. ' ' → logprob: -12.404794692993164
    6. '
' → logprob: -13.342294692993164
    7. '```' → logprob: -13.717294692993164
    8. '-' → logprob: -14.342294692993164
    9. '2' → logprob: -14.529794692993164
    10. ']' → logprob: -14.717294692993164

Token 2251: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.25214681029319763
    2. '[' → logprob: -1.50214684009552
    3. '0' → logprob: -9.00214672088623
    4. '1' → logprob: -10.50214672088623
    5. ''][' → logprob: -11.12714672088623
    6. '"][' → logprob: -11.25214672088623
    7. '```' → logprob: -11.75214672088623
    8. ']' → logprob: -12.25214672088623
    9. '   ' → logprob: -12.37714672088623
    10. 'import' → logprob: -13.00214672088623

Token 2252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564331205387134e-05
    2. '1' → logprob: -11.75001049041748
    3. '[' → logprob: -14.43751049041748
    4. ' ' → logprob: -14.62501049041748
    5. '۰' → logprob: -14.87501049041748
    6. '
' → logprob: -15.12501049041748
    7. '   ' → logprob: -15.18751049041748
    8. '```' → logprob: -16.312511444091797
    9. ']' → logprob: -16.812511444091797
    10. '{' → logprob: -17.062511444091797

Token 2253: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2274738550186157
    2. '>' → logprob: -1.3524738550186157
    3. '               ' → logprob: -1.6024738550186157
    4. ']' → logprob: -2.977473735809326
    5. '                   ' → logprob: -3.602473735809326
    6. '
' → logprob: -3.852473735809326
    7. ':
' → logprob: -3.977473735809326
    8. ']
' → logprob: -4.102473735809326
    9. ':' → logprob: -4.227473735809326
    10. '```' → logprob: -4.352473735809326

Token 2254: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09616313129663467
    2. '           ' → logprob: -2.471163034439087
    3. '```' → logprob: -4.971163272857666
    4. '                   ' → logprob: -8.971162796020508
    5. '       ' → logprob: -9.221162796020508
    6. '``' → logprob: -11.221162796020508
    7. 'if' → logprob: -11.596162796020508
    8. ' if' → logprob: -11.971162796020508
    9. '   ' → logprob: -12.721162796020508
    10. '                       ' → logprob: -13.346162796020508

Token 2255: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46815112233161926
    2. '       ' → logprob: -1.7181510925292969
    3. '               ' → logprob: -1.7181510925292969
    4. 'if' (adapté à ' if') → logprob: -4.218151092529297
    5. '```' → logprob: -9.093151092529297
    6. ' if' → logprob: -9.218151092529297
    7. '                   ' → logprob: -9.343151092529297
    8. '   ' → logprob: -11.218151092529297
    9. '
' → logprob: -12.343151092529297
    10. '                       ' → logprob: -13.343151092529297

Token 2256: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.0325924449716695e-05
    2. ' abs' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.125009536743164
    4. 'det' → logprob: -17.875009536743164
    5. '(abs' → logprob: -17.875009536743164
    6. '           ' → logprob: -18.375009536743164
    7. '       ' → logprob: -19.500009536743164
    8. '               ' → logprob: -19.625009536743164
    9. '                   ' → logprob: -20.625009536743164
    10. '
' → logprob: -22.000009536743164

Token 2257: '(det' (ID: 161017)
  Prédit: '(det'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(det' → logprob: -1.1472419600977446e-06
    2. 'det' → logprob: -14.000000953674316
    3. '(' → logprob: -15.750000953674316
    4. '(def' → logprob: -15.875000953674316
    5. '(
' → logprob: -17.375001907348633
    6. '```' → logprob: -19.625001907348633
    7. 'At' → logprob: -20.000001907348633
    8. '(del' → logprob: -20.125001907348633
    9. '(at' → logprob: -20.250001907348633
    10. '(d' → logprob: -20.375001907348633

Token 2258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00417931005358696
    2. '[' → logprob: -5.50417947769165
    3. '_' → logprob: -10.379179000854492
    4. ')' → logprob: -10.504179000854492
    5. '(' → logprob: -10.754179000854492
    6. '>' → logprob: -11.879179000854492
    7. '               ' → logprob: -11.879179000854492
    8. '                   ' → logprob: -13.129179000854492
    9. '           ' → logprob: -13.754179000854492
    10. '   ' → logprob: -13.879179000854492

Token 2259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0049092429690063
    2. ')>' → logprob: -6.254909038543701
    3. '[' → logprob: -6.379909038543701
    4. ')<' → logprob: -7.379909038543701
    5. '>' → logprob: -7.879909038543701
    6. ')>=' → logprob: -9.00490951538086
    7. '<' → logprob: -9.62990951538086
    8. ' >' → logprob: -9.87990951538086
    9. ' <' → logprob: -11.00490951538086
    10. '```' → logprob: -11.62990951538086

Token 2260: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5354017019271851
    2. ' <' → logprob: -1.410401701927185
    3. '>' → logprob: -1.910401701927185
    4. ' >' → logprob: -4.035401821136475
    5. '[' → logprob: -6.410401821136475
    6. '>=' → logprob: -6.535401821136475
    7. ' >=' → logprob: -6.785401821136475
    8. ')' → logprob: -8.160401344299316
    9. '```' → logprob: -8.910401344299316
    10. '==' → logprob: -9.785401344299316

Token 2261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.125031471252441
    4. '```' → logprob: -15.875031471252441
    5. '`' → logprob: -17.250032424926758
    6. '(' → logprob: -17.750032424926758
    7. '[' → logprob: -19.250032424926758
    8. '=' → logprob: -19.500032424926758
    9. '``' → logprob: -19.500032424926758
    10. '0' → logprob: -19.500032424926758

Token 2262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -17.375
    4. '   ' → logprob: -18.5
    5. '`' → logprob: -19.0
    6. '(' → logprob: -19.625
    7. '=' → logprob: -20.25
    8. '>' → logprob: -20.375
    9. '``' → logprob: -20.5
    10. '0' → logprob: -21.375

Token 2263: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1602376252412796
    2. '-' → logprob: -1.9102376699447632
    3. '```' → logprob: -11.785237312316895
    4. '-e' → logprob: -13.285237312316895
    5. '1' → logprob: -13.410237312316895
    6. '[' → logprob: -13.410237312316895
    7. '.e' → logprob: -15.285237312316895
    8. '[-' → logprob: -15.410237312316895
    9. '**' → logprob: -15.785237312316895
    10. '[e' → logprob: -16.28523826599121

Token 2264: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '```' → logprob: -17.25
    3. 'e' → logprob: -18.125
    4. '15' → logprob: -18.625
    5. '-
' → logprob: -21.75
    6. '``' → logprob: -21.875
    7. '^-' → logprob: -22.5
    8. '
' → logprob: -22.625
    9. ' -' → logprob: -22.625
    10. '−' → logprob: -22.75

Token 2265: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -7.481510692741722e-05
    2. '12' → logprob: -9.62507438659668
    3. '10' → logprob: -12.00007438659668
    4. '9' → logprob: -14.25007438659668
    5. '14' → logprob: -14.50007438659668
    6. '13' → logprob: -14.62507438659668
    7. '8' → logprob: -15.00007438659668
    8. '```' → logprob: -15.12507438659668
    9. '-' → logprob: -15.50007438659668
    10. '015' → logprob: -16.87507438659668

Token 2266: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0923401266336441
    2. ':
' → logprob: -2.7173402309417725
    3. ':return' → logprob: -4.092339992523193
    4. '               ' → logprob: -5.717339992523193
    5. '           ' → logprob: -6.592339992523193
    6. '                   ' → logprob: -7.592339992523193
    7. '                       ' → logprob: -9.717340469360352
    8. 'return' → logprob: -10.092340469360352
    9. '                           ' → logprob: -10.342340469360352
    10. '):' → logprob: -10.467340469360352

Token 2267: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02080625854432583
    2. '               ' → logprob: -4.020806312561035
    3. '           ' → logprob: -6.520806312561035
    4. '                       ' → logprob: -7.145806312561035
    5. '```' → logprob: -8.145806312561035
    6. 'return' → logprob: -10.020806312561035
    7. '   ' → logprob: -10.895806312561035
    8. '       ' → logprob: -11.145806312561035
    9. '                           ' → logprob: -11.770806312561035
    10. ' return' → logprob: -11.770806312561035

Token 2268: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04388320818543434
    2. '                   ' → logprob: -3.2938833236694336
    3. '               ' → logprob: -5.293883323669434
    4. '           ' → logprob: -7.668883323669434
    5. '   ' → logprob: -8.293883323669434
    6. ' return' → logprob: -10.418883323669434
    7. '                       ' → logprob: -10.668883323669434
    8. '       ' → logprob: -11.168883323669434
    9. '```' → logprob: -11.168883323669434
    10. '{return' → logprob: -13.293883323669434

Token 2269: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01815064437687397
    2. ' None' → logprob: -4.018150806427002
    3. '(None' → logprob: -15.018150329589844
    4. '_None' → logprob: -15.518150329589844
    5. '=None' → logprob: -16.643150329589844
    6. ',None' → logprob: -16.893150329589844
    7. '
' → logprob: -18.268150329589844
    8. '.None' → logprob: -19.143150329589844
    9. '```' → logprob: -20.018150329589844
    10. '_none' → logprob: -20.893150329589844

Token 2270: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03849697858095169
    2. '
' → logprob: -3.288496971130371
    3. '           ' → logprob: -8.663496971130371
    4. '       ' → logprob: -9.413496971130371
    5. '                
' → logprob: -9.913496971130371
    6. ' x' → logprob: -10.663496971130371
    7. '                   ' → logprob: -10.788496971130371
    8. '```' → logprob: -11.288496971130371
    9. ',
' → logprob: -11.538496971130371
    10. '	           ' → logprob: -11.538496971130371

Token 2271: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010699660051614046
    2. 'x' → logprob: -7.376070022583008
    3. '```' → logprob: -8.126070022583008
    4. '           ' → logprob: -9.126070022583008
    5. '                   ' → logprob: -11.001070022583008
    6. '       ' → logprob: -11.501070022583008
    7. ' x' → logprob: -12.251070022583008
    8. '``' → logprob: -13.001070022583008
    9. '   ' → logprob: -13.251070022583008
    10. 'return' → logprob: -13.876070022583008

Token 2272: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.003661475842818618
    2. 'inv' → logprob: -6.003661632537842
    3. '               ' → logprob: -6.878661632537842
    4. 't' → logprob: -9.878661155700684
    5. '   ' → logprob: -10.378661155700684
    6. '                   ' → logprob: -10.628661155700684
    7. 'tx' → logprob: -11.253661155700684
    8. 'det' → logprob: -11.503661155700684
    9. '```' → logprob: -11.628661155700684
    10. ' x' → logprob: -12.253661155700684

Token 2273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020828247070312
    2. ' =' → logprob: -2.350208282470703
    3. '=
' → logprob: -14.350208282470703
    4. '   ' → logprob: -14.600208282470703
    5. ',' → logprob: -14.850208282470703
    6. '=

' → logprob: -16.725208282470703
    7. 'x' → logprob: -16.975208282470703
    8. ' =
' → logprob: -17.100208282470703
    9. '```' → logprob: -17.850208282470703
    10. ')' → logprob: -17.850208282470703

Token 2274: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015312091272789985
    2. ' (' → logprob: -8.875153541564941
    3. '(at' → logprob: -11.625153541564941
    4. '   ' → logprob: -13.250153541564941
    5. ' ' → logprob: -13.750153541564941
    6. '(A' → logprob: -14.625153541564941
    7. '(float' → logprob: -15.125153541564941
    8. '((' → logprob: -15.375153541564941
    9. '(-' → logprob: -16.500152587890625
    10. '(By' → logprob: -16.875152587890625

Token 2275: 'At' (ID: 2243)
  Prédit: 'At'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -0.007856572978198528
    2. ' At' → logprob: -4.882856369018555
    3. '(' → logprob: -9.382856369018555
    4. '  ' → logprob: -9.632856369018555
    5. '   ' → logprob: -9.882856369018555
    6. ' ' → logprob: -10.132856369018555
    7. ' (' → logprob: -12.382856369018555
    8. '    ' → logprob: -13.007856369018555
    9. '_at' → logprob: -14.257856369018555
    10. '     ' → logprob: -14.757856369018555

Token 2276: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001982402754947543
    2. 'At' → logprob: -6.25198221206665
    3. 'A' → logprob: -10.126982688903809
    4. '[' → logprob: -11.876982688903809
    5. 'tb' → logprob: -12.001982688903809
    6. 'Ab' → logprob: -14.626982688903809
    7. 'ab' → logprob: -16.876981735229492
    8. 'at' → logprob: -17.126981735229492
    9. 'bb' → logprob: -17.126981735229492
    10. 'bt' → logprob: -17.126981735229492

Token 2277: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001239196863025427
    2. '0' → logprob: -9.000123977661133
    3. '
' → logprob: -16.500123977661133
    4. '```' → logprob: -16.500123977661133
    5. '1' → logprob: -16.750123977661133
    6. '][' → logprob: -17.125123977661133
    7. '[
' → logprob: -17.375123977661133
    8. '   ' → logprob: -17.625123977661133
    9. ' [' → logprob: -18.000123977661133
    10. '2' → logprob: -18.125123977661133

Token 2278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016062287613749504
    2. '1' → logprob: -4.141062259674072
    3. '[' → logprob: -10.51606273651123
    4. '   ' → logprob: -14.64106273651123
    5. '
' → logprob: -15.51606273651123
    6. ' ' → logprob: -16.016061782836914
    7. '```' → logprob: -16.266061782836914
    8. '01' → logprob: -17.516061782836914
    9. '    ' → logprob: -17.641061782836914
    10. '  ' → logprob: -18.141061782836914

Token 2279: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0026535361539572477
    2. ' *' → logprob: -6.0026535987854
    3. '[' → logprob: -8.752653121948242
    4. ' -' → logprob: -11.127653121948242
    5. '-' → logprob: -12.502653121948242
    6. ' ' → logprob: -14.752653121948242
    7. '*-' → logprob: -15.627653121948242
    8. '*[' → logprob: -15.752653121948242
    9. ')*' → logprob: -15.877653121948242
    10. ')' → logprob: -15.877653121948242

Token 2280: 'At' (ID: 2243)
  Prédit: 'At'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -4.127333340875339e-06
    2. ' At' → logprob: -12.750003814697266
    3. '   ' → logprob: -13.750003814697266
    4. '  ' → logprob: -16.750003814697266
    5. '       ' → logprob: -17.250003814697266
    6. '           ' → logprob: -17.625003814697266
    7. ' ' → logprob: -18.125003814697266
    8. '               ' → logprob: -18.625003814697266
    9. '_at' → logprob: -18.625003814697266
    10. '	' → logprob: -19.000003814697266

Token 2281: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06610148400068283
    2. '[' → logprob: -2.941101551055908
    3. '2' → logprob: -4.941101551055908
    4. 'b' → logprob: -6.066101551055908
    5. '1' → logprob: -6.441101551055908
    6. 'At' → logprob: -10.19110107421875
    7. '(' → logprob: -10.81610107421875
    8. '
' → logprob: -11.19110107421875
    9. '_' → logprob: -13.06610107421875
    10. ']' → logprob: -13.56610107421875

Token 2282: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '1' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.375004768371582
    4. '[[' → logprob: -16.5000057220459
    5. ' [' → logprob: -16.6250057220459
    6. '
' → logprob: -16.6250057220459
    7. '```' → logprob: -17.3750057220459
    8. '][' → logprob: -17.6250057220459
    9. '[
' → logprob: -17.7500057220459
    10. '#' → logprob: -18.7500057220459

Token 2283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1269393414258957
    2. '[' → logprob: -2.126939296722412
    3. '[
' → logprob: -12.37693977355957
    4. '
' → logprob: -12.87693977355957
    5. '```' → logprob: -13.62693977355957
    6. '{' → logprob: -13.75193977355957
    7. '   ' → logprob: -14.75193977355957
    8. '	' → logprob: -15.00193977355957
    9. '(' → logprob: -15.25193977355957
    10. ']' → logprob: -15.62693977355957

Token 2284: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.64708495605737e-05
    2. '][' → logprob: -9.750066757202148
    3. '1' → logprob: -11.750066757202148
    4. ' [' → logprob: -16.37506675720215
    5. '       ' → logprob: -16.87506675720215
    6. '   ' → logprob: -16.87506675720215
    7. '[
' → logprob: -17.25006675720215
    8. '.' → logprob: -17.62506675720215
    9. '>[' → logprob: -18.37506675720215
    10. '           ' → logprob: -18.50006675720215

Token 2285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. '[' → logprob: -11.25001335144043
    3. '
' → logprob: -15.50001335144043
    4. '   ' → logprob: -16.25001335144043
    5. ' ' → logprob: -16.25001335144043
    6. '{' → logprob: -17.37501335144043
    7. '۱' → logprob: -17.87501335144043
    8. ']' → logprob: -18.00001335144043
    9. '(' → logprob: -18.62501335144043
    10. ',' → logprob: -18.62501335144043

Token 2286: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0017054134514182806
    2. '-' → logprob: -6.376705646514893
    3. ' ' → logprob: -13.876705169677734
    4. '          ' → logprob: -14.126705169677734
    5. '        ' → logprob: -15.001705169677734
    6. '      ' → logprob: -15.626705169677734
    7. '            ' → logprob: -16.001705169677734
    8. '                ' → logprob: -16.001705169677734
    9. '         ' → logprob: -16.001705169677734
    10. '    ' → logprob: -16.126705169677734

Token 2287: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048607468605041504
    2. '-' → logprob: -3.048607349395752
    3. '          ' → logprob: -12.42360782623291
    4. '      ' → logprob: -12.92360782623291
    5. '                  ' → logprob: -13.29860782623291
    6. '                ' → logprob: -13.67360782623291
    7. '        ' → logprob: -13.67360782623291
    8. ' ' → logprob: -13.67360782623291
    9. '              ' → logprob: -13.79860782623291
    10. '            ' → logprob: -14.04860782623291

Token 2288: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -4.320199877838604e-07
    2. ' At' → logprob: -15.375
    3. '   ' → logprob: -16.75
    4. '_at' → logprob: -17.125
    5. '  ' → logprob: -18.625
    6. '    ' → logprob: -19.375
    7. ' ' → logprob: -19.375
    8. 'at' → logprob: -19.75
    9. '       ' → logprob: -19.875
    10. '     ' → logprob: -20.25

Token 2289: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1994775377388578e-05
    2. 'A' → logprob: -11.750012397766113
    3. 'At' → logprob: -12.750012397766113
    4. '[' → logprob: -13.750012397766113
    5. '2' → logprob: -16.500011444091797
    6. 'Ab' → logprob: -16.750011444091797
    7. '   ' → logprob: -18.250011444091797
    8. 'ab' → logprob: -18.500011444091797
    9. 'B' → logprob: -19.375011444091797
    10. '```' → logprob: -19.625011444091797

Token 2290: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.632542913896032e-05
    2. '1' → logprob: -10.000046730041504
    3. '   ' → logprob: -15.375046730041504
    4. '[
' → logprob: -15.750046730041504
    5. '#' → logprob: -16.250045776367188
    6. ' [' → logprob: -16.500045776367188
    7. '```' → logprob: -16.625045776367188
    8. ':' → logprob: -17.375045776367188
    9. ' ' → logprob: -17.375045776367188
    10. 'import' → logprob: -17.500045776367188

Token 2291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000555416801944375
    2. '[' → logprob: -7.500555515289307
    3. '   ' → logprob: -13.875555038452148
    4. '0' → logprob: -14.000555038452148
    5. ' ' → logprob: -14.500555038452148
    6. '```' → logprob: -16.12555503845215
    7. '﻿' → logprob: -18.25055503845215
    8. '  ' → logprob: -18.37555503845215
    9. ' [' → logprob: -18.62555503845215
    10. '     ' → logprob: -18.62555503845215

Token 2292: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -9.639096970204264e-05
    2. '*' → logprob: -9.250096321105957
    3. '*[' → logprob: -16.125097274780273
    4. '0' → logprob: -16.625097274780273
    5. '][' → logprob: -17.250097274780273
    6. ' *' → logprob: -17.500097274780273
    7. '[
' → logprob: -17.625097274780273
    8. '	' → logprob: -17.875097274780273
    9. ' [' → logprob: -18.375097274780273
    10. '```' → logprob: -18.500097274780273

Token 2293: 'At' (ID: 2243)
  Prédit: 'At'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -3.011373155459296e-05
    2. '0' → logprob: -10.500030517578125
    3. '[' → logprob: -13.750030517578125
    4. ' At' → logprob: -14.000030517578125
    5. '_at' → logprob: -14.500030517578125
    6. 'at' → logprob: -15.625030517578125
    7. 'AT' → logprob: -16.750030517578125
    8. 'As' → logprob: -19.875030517578125
    9. '_AT' → logprob: -20.375030517578125
    10. 'Ati' → logprob: -21.000030517578125

Token 2294: 'A' (ID: 32)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17923882603645325
    2. '[' → logprob: -2.304238796234131
    3. 'A' → logprob: -3.179238796234131
    4. 'At' → logprob: -3.804238796234131
    5. 'O' → logprob: -10.179239273071289
    6. '```' → logprob: -10.429239273071289
    7. '][' → logprob: -10.429239273071289
    8. 'As' → logprob: -10.554239273071289
    9. '
' → logprob: -10.679239273071289
    10. 'at' → logprob: -10.804239273071289

Token 2295: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.0339031834737398e-05
    2. '0' → logprob: -10.875020027160645
    3. '[
' → logprob: -14.625020027160645
    4. '```' → logprob: -15.500020027160645
    5. 'import' → logprob: -15.875020027160645
    6. '][' → logprob: -16.00002098083496
    7. 'user' → logprob: -16.37502098083496
    8. 'Let's' → logprob: -16.75002098083496
    9. '<|end|>' → logprob: -16.87502098083496
    10. '#' → logprob: -17.62502098083496

Token 2296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -11.875007629394531
    3. '1' → logprob: -16.00000762939453
    4. '```' → logprob: -16.75000762939453
    5. '   ' → logprob: -17.87500762939453
    6. '۰' → logprob: -18.25000762939453
    7. ' ' → logprob: -18.87500762939453
    8. '０' → logprob: -19.93750762939453
    9. '...' → logprob: -20.00000762939453
    10. '{' → logprob: -20.00000762939453

Token 2297: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00034988581319339573
    2. '][' → logprob: -8.250349998474121
    3. '0' → logprob: -9.375349998474121
    4. ' [' → logprob: -13.625349998474121
    5. '[
' → logprob: -14.250349998474121
    6. '   ' → logprob: -14.750349998474121
    7. '```' → logprob: -14.875349998474121
    8. '[[' → logprob: -15.500349998474121
    9. ')[' → logprob: -15.750349998474121
    10. ',' → logprob: -16.125349044799805

Token 2298: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.518582762917504e-05
    2. '1' → logprob: -9.37508487701416
    3. '۰' → logprob: -15.75008487701416
    4. '   ' → logprob: -17.125085830688477
    5. '[' → logprob: -17.625085830688477
    6. '```' → logprob: -17.625085830688477
    7. '
' → logprob: -18.000085830688477
    8. ' ' → logprob: -18.875085830688477
    9. '०' → logprob: -19.125085830688477
    10. '０' → logprob: -19.125085830688477

Token 2299: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1054253011243418e-05
    2. ' )' → logprob: -11.375020980834961
    3. ')/' → logprob: -12.375020980834961
    4. ')/(' → logprob: -12.875020980834961
    5. '               ' → logprob: -13.625020980834961
    6. '                   ' → logprob: -15.000020980834961
    7. '           ' → logprob: -15.125020980834961
    8. ')
' → logprob: -15.625020980834961
    9. '       ' → logprob: -16.25002098083496
    10. '          ' → logprob: -16.50002098083496

Token 2300: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2891300916671753
    2. ' /' → logprob: -1.4141300916671753
    3. '/
' → logprob: -5.289130210876465
    4. ')' → logprob: -6.539130210876465
    5. ' /
' → logprob: -7.289130210876465
    6. '/
/' → logprob: -8.414130210876465
    7. '               ' → logprob: -9.039130210876465
    8. '                   ' → logprob: -9.039130210876465
    9. ')/' → logprob: -9.914130210876465
    10. ')/(' → logprob: -10.039130210876465

Token 2301: ' det' (ID: 1476)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -2.1888679839321412e-05
    2. ' det' → logprob: -10.750021934509277
    3. '(det' → logprob: -15.000021934509277
    4. '   ' → logprob: -19.37502098083496
    5. '```' → logprob: -19.50002098083496
    6. '.det' → logprob: -20.50002098083496
    7. '`' → logprob: -20.87502098083496
    8. '(' → logprob: -21.00002098083496
    9. '_det' → logprob: -21.00002098083496
    10. '``' → logprob: -21.50002098083496

Token 2302: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07905447483062744
    2. '[' → logprob: -2.829054355621338
    3. '(' → logprob: -4.079054355621338
    4. '```' → logprob: -11.454054832458496
    5. 'At' → logprob: -13.579054832458496
    6. '   ' → logprob: -13.704054832458496
    7. '[
' → logprob: -13.704054832458496
    8. ' (' → logprob: -14.079054832458496
    9. '               ' → logprob: -14.204054832458496
    10. '(
' → logprob: -14.329054832458496

Token 2303: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6131981611251831
    2. '<|end|>' → logprob: -0.8631981611251831
    3. '           ' → logprob: -4.613198280334473
    4. '
' → logprob: -4.613198280334473
    5. ')' → logprob: -5.238198280334473
    6. '<|end|>' → logprob: -5.488198280334473
    7. ',' → logprob: -6.363198280334473
    8. '```' → logprob: -6.488198280334473
    9. '       ' → logprob: -6.988198280334473
    10. ',
' → logprob: -7.738198280334473

Token 2304: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15599335730075836
    2. ',
' → logprob: -3.0309934616088867
    3. ',y' → logprob: -3.7809934616088867
    4. '<|end|>' → logprob: -3.9059934616088867
    5. '               ' → logprob: -4.155993461608887
    6. '       ' → logprob: -4.155993461608887
    7. 'y' → logprob: -5.405993461608887
    8. '```' → logprob: -5.405993461608887
    9. '
' → logprob: -5.405993461608887
    10. '           ' → logprob: -5.530993461608887

Token 2305: ' y' (ID: 342)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2017824500799179
    2. ' (' → logprob: -1.701782464981079
    3. '(x' → logprob: -7.9517822265625
    4. '(
' → logprob: -12.0767822265625
    5. 'x' → logprob: -12.7017822265625
    6. ' x' → logprob: -13.4517822265625
    7. '(at' → logprob: -13.5767822265625
    8. '(A' → logprob: -13.7017822265625
    9. '               ' → logprob: -14.5767822265625
    10. 'At' → logprob: -14.5767822265625

Token 2306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022484004497528
    2. ' =' → logprob: -1.9102247953414917
    3. '=(' → logprob: -15.535224914550781
    4. ')' → logprob: -16.16022491455078
    5. '<|end|>' → logprob: -16.66022491455078
    6. '   ' → logprob: -16.78522491455078
    7. '(' → logprob: -16.91022491455078
    8. ' =(' → logprob: -17.03522491455078
    9. ' (' → logprob: -17.16022491455078
    10. ':' → logprob: -17.28522491455078

Token 2307: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009125363430939615
    2. ' (' → logprob: -7.000912666320801
    3. '(at' → logprob: -14.2509126663208
    4. ' ' → logprob: -16.000911712646484
    5. '(By' → logprob: -16.000911712646484
    6. '   ' → logprob: -16.625911712646484
    7. '(All' → logprob: -17.750911712646484
    8. '((' → logprob: -18.250911712646484
    9. '(To' → logprob: -18.250911712646484
    10. '(On' → logprob: -18.250911712646484

Token 2308: 'At' (ID: 2243)
  Prédit: 'At'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -0.0024819616228342056
    2. '(' → logprob: -6.002481937408447
    3. ' At' → logprob: -12.252482414245605
    4. ' (' → logprob: -14.627482414245605
    5. 'Atk' → logprob: -15.002482414245605
    6. 'AT' → logprob: -16.25248146057129
    7. '(at' → logprob: -16.37748146057129
    8. '_at' → logprob: -16.87748146057129
    9. '   ' → logprob: -16.87748146057129
    10. 'Att' → logprob: -17.25248146057129

Token 2309: 'A' (ID: 32)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -12.000007629394531
    3. 'tb' → logprob: -14.625007629394531
    4. '
' → logprob: -14.750007629394531
    5. '2' → logprob: -14.875007629394531
    6. '   ' → logprob: -16.50000762939453
    7. 'bb' → logprob: -17.12500762939453
    8. 'pb' → logprob: -17.37500762939453
    9. '```' → logprob: -18.00000762939453
    10. ' b' → logprob: -18.12500762939453

Token 2310: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. '1' → logprob: -13.00000286102295
    3. '0' → logprob: -14.37500286102295
    4. ' [' → logprob: -16.250003814697266
    5. '[[' → logprob: -17.375003814697266
    6. '```' → logprob: -17.625003814697266
    7. '   ' → logprob: -17.750003814697266
    8. '][' → logprob: -18.500003814697266
    9. '2' → logprob: -18.750003814697266
    10. '#' → logprob: -18.875003814697266

Token 2311: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017694929614663124
    2. '0' → logprob: -4.51769495010376
    3. '[' → logprob: -5.01769495010376
    4. '   ' → logprob: -12.767694473266602
    5. ' ' → logprob: -14.392694473266602
    6. '][' → logprob: -14.517694473266602
    7. '
' → logprob: -14.767694473266602
    8. '```' → logprob: -15.142694473266602
    9. ' [' → logprob: -15.267694473266602
    10. '#' → logprob: -15.892694473266602

Token 2312: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17979303002357483
    2. '][' → logprob: -1.8047930002212524
    3. '1' → logprob: -11.054793357849121
    4. '   ' → logprob: -11.429793357849121
    5. '0' → logprob: -12.054793357849121
    6. ']' → logprob: -12.429793357849121
    7. '```' → logprob: -13.054793357849121
    8. ' [' → logprob: -13.554793357849121
    9. ' ][' → logprob: -13.554793357849121
    10. '
' → logprob: -13.804793357849121

Token 2313: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010593677870929241
    2. '0' → logprob: -6.876059532165527
    3. '[' → logprob: -10.626059532165527
    4. '
' → logprob: -13.751059532165527
    5. '   ' → logprob: -15.188559532165527
    6. '```' → logprob: -15.501059532165527
    7. '][' → logprob: -15.751059532165527
    8. '(' → logprob: -16.18855857849121
    9. '１' → logprob: -16.50105857849121
    10. '
' → logprob: -16.81355857849121

Token 2314: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0005521982675418258
    2. '**' → logprob: -7.625552177429199
    3. ']*' → logprob: -10.3755521774292
    4. '*[' → logprob: -11.5005521774292
    5. ')*' → logprob: -11.6255521774292
    6. '*y' → logprob: -12.1255521774292
    7. '*x' → logprob: -12.7505521774292
    8. '```' → logprob: -13.1255521774292
    9. '***' → logprob: -13.7505521774292
    10. ' *' → logprob: -14.1255521774292

Token 2315: 'At' (ID: 2243)
  Prédit: 'At'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -16.375
    3. 'at' → logprob: -16.375
    4. ' At' → logprob: -16.625
    5. '[' → logprob: -17.875
    6. '_at' → logprob: -18.625
    7. '   ' → logprob: -19.375
    8. '0' → logprob: -19.5
    9. '1' → logprob: -19.5
    10. 'AT' → logprob: -19.75

Token 2316: 'b' (ID: 65)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43936169147491455
    2. 'b' → logprob: -1.0643616914749146
    3. '[' → logprob: -4.564361572265625
    4. '
' → logprob: -8.939361572265625
    5. '   ' → logprob: -11.439361572265625
    6. '```' → logprob: -11.439361572265625
    7. '][' → logprob: -11.939361572265625
    8. 'At' → logprob: -11.939361572265625
    9. '
' → logprob: -12.439361572265625
    10. ']' → logprob: -12.564361572265625

Token 2317: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4121114822482923e-06
    2. '1' → logprob: -12.750003814697266
    3. '```' → logprob: -14.875003814697266
    4. '[
' → logprob: -17.250003814697266
    5. '
' → logprob: -17.750003814697266
    6. ' [' → logprob: -17.750003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '2' → logprob: -18.875003814697266
    9. '`' → logprob: -19.375003814697266
    10. '][' → logprob: -19.500003814697266

Token 2318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05495315045118332
    2. '[' → logprob: -2.929953098297119
    3. '   ' → logprob: -9.679953575134277
    4. ' ' → logprob: -12.554953575134277
    5. '0' → logprob: -13.804953575134277
    6. '(' → logprob: -14.304953575134277
    7. '{' → logprob: -14.804953575134277
    8. '     ' → logprob: -14.804953575134277
    9. '```' → logprob: -14.804953575134277
    10. '  ' → logprob: -14.929953575134277

Token 2319: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008621551096439362
    2. '-' → logprob: -4.758621692657471
    3. ' ' → logprob: -13.008621215820312
    4. '[' → logprob: -13.258621215820312
    5. ' -
' → logprob: -14.883621215820312
    6. '```' → logprob: -14.883621215820312
    7. '          ' → logprob: -15.008621215820312
    8. '        ' → logprob: -15.008621215820312
    9. '       ' → logprob: -15.633621215820312
    10. '   ' → logprob: -15.633621215820312

Token 2320: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02630389854311943
    2. '-' → logprob: -3.651304006576538
    3. '          ' → logprob: -14.401304244995117
    4. ' ' → logprob: -14.401304244995117
    5. '        ' → logprob: -14.901304244995117
    6. '```' → logprob: -15.026304244995117
    7. '                ' → logprob: -15.401304244995117
    8. '         ' → logprob: -15.401304244995117
    9. ' -
' → logprob: -15.401304244995117
    10. '              ' → logprob: -15.776304244995117

Token 2321: ' At' (ID: 3604)
  Prédit: 'At'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -2.522638169466518e-05
    2. ' At' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.000024795532227
    4. ' ' → logprob: -16.000024795532227
    5. '  ' → logprob: -16.000024795532227
    6. '    ' → logprob: -16.500024795532227
    7. 'x' → logprob: -16.750024795532227
    8. 'AT' → logprob: -16.875024795532227
    9. 'at' → logprob: -17.375024795532227
    10. '_at' → logprob: -18.000024795532227

Token 2322: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2535303831100464
    2. 'At' → logprob: -1.7535303831100464
    3. 'b' → logprob: -3.003530502319336
    4. 'Ab' → logprob: -6.753530502319336
    5. 'ab' → logprob: -13.628530502319336
    6. 'As' → logprob: -15.003530502319336
    7. '[' → logprob: -15.003530502319336
    8. '   ' → logprob: -15.128530502319336
    9. ' At' → logprob: -15.253530502319336
    10. 'AB' → logprob: -15.628530502319336

Token 2323: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. ' [' → logprob: -17.75
    4. '[[' → logprob: -17.875
    5. '   ' → logprob: -19.75
    6. '``' → logprob: -19.875
    7. '#' → logprob: -20.0
    8. '[
' → logprob: -20.125
    9. '][' → logprob: -20.375
    10. ')[' → logprob: -21.0

Token 2324: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1002265140414238
    2. '1' → logprob: -2.350226402282715
    3. '0' → logprob: -10.850226402282715
    4. '   ' → logprob: -15.475226402282715
    5. '
' → logprob: -16.60022735595703
    6. '```' → logprob: -16.85022735595703
    7. ' [' → logprob: -17.22522735595703
    8. '[[' → logprob: -17.60022735595703
    9. '[
' → logprob: -17.97522735595703
    10. '#' → logprob: -18.47522735595703

Token 2325: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.8497312895488e-05
    2. '][' → logprob: -9.750068664550781
    3. '```' → logprob: -12.125068664550781
    4. ' [' → logprob: -14.000068664550781
    5. '0' → logprob: -14.125068664550781
    6. '>[' → logprob: -14.250068664550781
    7. ')[' → logprob: -14.375068664550781
    8. '[
' → logprob: -15.312568664550781
    9. '[[' → logprob: -15.500068664550781
    10. '``' → logprob: -16.00006866455078

Token 2326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8087270038668066e-05
    2. '[' → logprob: -10.500027656555176
    3. '1' → logprob: -15.250027656555176
    4. '   ' → logprob: -15.625027656555176
    5. '```' → logprob: -16.625028610229492
    6. ' ' → logprob: -16.750028610229492
    7. '۰' → logprob: -17.125028610229492
    8. '
' → logprob: -17.750028610229492
    9. '０' → logprob: -18.812528610229492
    10. '  ' → logprob: -19.125028610229492

Token 2327: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5765112042427063
    2. '[' → logprob: -0.8265112042427063
    3. '*[' → logprob: -7.826511383056641
    4. ']*' → logprob: -8.82651138305664
    5. ')*' → logprob: -11.20151138305664
    6. ' *' → logprob: -12.45151138305664
    7. '][' → logprob: -12.82651138305664
    8. '```' → logprob: -12.95151138305664
    9. '**' → logprob: -14.57651138305664
    10. '`' → logprob: -14.82651138305664

Token 2328: 'At' (ID: 2243)
  Prédit: 'At'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'At' → logprob: -0.00011188744247192517
    2. '[' → logprob: -9.12511157989502
    3. ' At' → logprob: -13.12511157989502
    4. 'at' → logprob: -14.62511157989502
    5. '_at' → logprob: -15.25011157989502
    6. 'AT' → logprob: -15.62511157989502
    7. '0' → logprob: -16.250112533569336
    8. 'Atk' → logprob: -17.250112533569336
    9. '
' → logprob: -18.125112533569336
    10. '   ' → logprob: -18.375112533569336

Token 2329: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019536102190613747
    2. '[' → logprob: -6.251953601837158
    3. 'A' → logprob: -11.126954078674316
    4. '0' → logprob: -12.501954078674316
    5. '   ' → logprob: -12.751954078674316
    6. 'At' → logprob: -14.251954078674316
    7. '
' → logprob: -14.501954078674316
    8. ' ' → logprob: -14.626954078674316
    9. '  ' → logprob: -15.126954078674316
    10. 'bb' → logprob: -15.251954078674316

Token 2330: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. 'b' → logprob: -14.875000953674316
    3. '```' → logprob: -15.625000953674316
    4. '0' → logprob: -16.875
    5. '[
' → logprob: -17.5
    6. '2' → logprob: -18.0
    7. '1' → logprob: -18.125
    8. '][' → logprob: -18.125
    9. '           ' → logprob: -18.125
    10. ' [' → logprob: -18.25

Token 2331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.75
    3. '   ' → logprob: -17.5
    4. '
' → logprob: -18.25
    5. '```' → logprob: -18.5
    6. ' ' → logprob: -18.875
    7. '۰' → logprob: -20.0
    8. '1' → logprob: -20.125
    9. '``' → logprob: -20.375
    10. '  ' → logprob: -20.75

Token 2332: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005431424942798913
    2. '])' → logprob: -7.750543117523193
    3. ']' → logprob: -10.250543594360352
    4. '[' → logprob: -10.250543594360352
    5. ')/' → logprob: -11.000543594360352
    6. ' )' → logprob: -11.000543594360352
    7. '`)' → logprob: -12.625543594360352
    8. '])/' → logprob: -13.625543594360352
    9. '```' → logprob: -14.000543594360352
    10. '）' → logprob: -14.750543594360352

Token 2333: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.47408798336982727
    2. ' /' → logprob: -0.9740879535675049
    3. ' /
' → logprob: -13.099087715148926
    4. '/usr' → logprob: -13.349087715148926
    5. ')' → logprob: -13.474087715148926
    6. '```' → logprob: -13.849087715148926
    7. '/
' → logprob: -14.099087715148926
    8. '[' → logprob: -14.474087715148926
    9. '               ' → logprob: -14.849087715148926
    10. '/end' → logprob: -14.849087715148926

Token 2334: ' det' (ID: 1476)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -5.848420551046729e-05
    2. ' det' → logprob: -9.7500581741333
    3. '(det' → logprob: -15.6250581741333
    4. 'def' → logprob: -19.250059127807617
    5. '.det' → logprob: -20.125059127807617
    6. 'd' → logprob: -20.250059127807617
    7. '_det' → logprob: -20.250059127807617
    8. '```' → logprob: -20.375059127807617
    9. '   ' → logprob: -20.500059127807617
    10. '[' → logprob: -20.625059127807617

Token 2335: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016940070316195488
    2. 'A' → logprob: -4.141940116882324
    3. '[' → logprob: -7.016940116882324
    4. '_' → logprob: -12.891940116882324
    5. 'det' → logprob: -13.641940116882324
    6. 'b' → logprob: -13.766940116882324
    7. '(' → logprob: -14.891940116882324
    8. 'At' → logprob: -15.141940116882324
    9. '_A' → logprob: -15.141940116882324
    10. '-' → logprob: -15.266940116882324

Token 2336: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07872696220874786
    2. '<|end|>' → logprob: -2.9537270069122314
    3. '               ' → logprob: -4.203726768493652
    4. '           ' → logprob: -5.328726768493652
    5. '       ' → logprob: -6.828726768493652
    6. ')return' → logprob: -7.203726768493652
    7. '<|end|>' → logprob: -7.828726768493652
    8. '
' → logprob: -7.828726768493652
    9. ')
' → logprob: -8.578726768493652
    10. ':return' → logprob: -8.703726768493652

Token 2337: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032518659718334675
    2. '           ' → logprob: -6.128252029418945
    3. '       ' → logprob: -7.128252029418945
    4. 'return' → logprob: -9.378252029418945
    5. '
' → logprob: -10.128252029418945
    6. ')' → logprob: -10.628252029418945
    7. '```' → logprob: -11.253252029418945
    8. '			' → logprob: -11.378252029418945
    9. '<|end|>' → logprob: -11.378252029418945
    10. '	' → logprob: -11.503252029418945

Token 2338: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20625615119934082
    2. 'return' (adapté à ' return') → logprob: -1.7062561511993408
    3. ' return' → logprob: -5.456255912780762
    4. '           ' → logprob: -7.956255912780762
    5. '       ' → logprob: -8.706255912780762
    6. '```' → logprob: -10.956255912780762
    7. '   ' → logprob: -11.206255912780762
    8. '	return' → logprob: -12.331255912780762
    9. '
' → logprob: -12.706255912780762
    10. ' ' → logprob: -13.081255912780762

Token 2339: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.20141363143920898
    2. ' Point' → logprob: -1.701413631439209
    3. '	Point' → logprob: -15.326414108276367
    4. '(Point' → logprob: -16.826414108276367
    5. '_Point' → logprob: -17.076414108276367
    6. '_point' → logprob: -18.826414108276367
    7. '.Point' → logprob: -19.701414108276367
    8. '   ' → logprob: -19.826414108276367
    9. '<Point' → logprob: -19.951414108276367
    10. 'point' → logprob: -20.201414108276367

Token 2340: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0052428836934268475
    2. '(' → logprob: -5.255242824554443
    3. ' (' → logprob: -11.880243301391602
    4. '(
' → logprob: -13.255243301391602
    5. '```' → logprob: -15.005243301391602
    6. 'x' → logprob: -15.880243301391602
    7. '(y' → logprob: -17.6302433013916
    8. '((' → logprob: -19.7552433013916
    9. '`' → logprob: -19.8802433013916
    10. '\(' → logprob: -20.2552433013916

Token 2341: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.31352877616882324
    2. ',' → logprob: -1.3135287761688232
    3. ',
' → logprob: -8.563529014587402
    4. ' ,' → logprob: -10.313529014587402
    5. ',x' → logprob: -11.188529014587402
    6. 'y' → logprob: -11.688529014587402
    7. '[' → logprob: -12.313529014587402
    8. '(' → logprob: -12.938529014587402
    9. '<|end|>' → logprob: -13.438529014587402
    10. ',Y' → logprob: -13.563529014587402

Token 2342: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011307948443572968
    2. '       ' → logprob: -10.000113487243652
    3. '<|end|>' → logprob: -10.125113487243652
    4. ')
' → logprob: -11.375113487243652
    5. '           ' → logprob: -12.250113487243652
    6. ' )' → logprob: -12.875113487243652
    7. ')return' → logprob: -13.375113487243652
    8. '   ' → logprob: -13.500113487243652
    9. '<|end|>' → logprob: -13.875113487243652
    10. '	' → logprob: -14.500113487243652

Token 2343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09782882779836655
    2. '<|end|>' → logprob: -2.5978288650512695
    3. '```' → logprob: -4.3478288650512695
    4. '
' → logprob: -6.2228288650512695
    5. '   ' → logprob: -6.5978288650512695
    6. ')' → logprob: -6.7228288650512695
    7. '<|end|>' → logprob: -8.47282886505127
    8. '#' → logprob: -8.84782886505127
    9. '  ' → logprob: -8.97282886505127
    10. '           ' → logprob: -8.97282886505127

Token 2344: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08717558532953262
    2. '
' → logprob: -2.8371756076812744
    3. 'sign' → logprob: -3.8371756076812744
    4. '        
' → logprob: -6.837175369262695
    5. '```' → logprob: -6.962175369262695
    6. 'patterns' → logprob: -7.712175369262695
    7. 'all' → logprob: -8.212175369262695
    8. '#' → logprob: -8.837175369262695
    9. '   ' → logprob: -8.962175369262695
    10. 'pattern' → logprob: -10.212175369262695

Token 2345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0789559930562973
    2. '=' → logprob: -2.578955888748169
    3. ':' → logprob: -10.32895565032959
    4. 's' → logprob: -10.95395565032959
    5. '=[]' → logprob: -12.07895565032959
    6. '_' → logprob: -12.57895565032959
    7. ' =[' → logprob: -13.70395565032959
    8. ' =
' → logprob: -13.95395565032959
    9. ' ' → logprob: -13.95395565032959
    10. '[' → logprob: -14.07895565032959

Token 2346: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7036871910095215
    2. '[]
' → logprob: -0.9536871910095215
    3. '[]' → logprob: -2.4536871910095215
    4. ' [' → logprob: -3.7036871910095215
    5. '[s' → logprob: -5.7036871910095215
    6. '[]

' → logprob: -6.2036871910095215
    7. '[
' → logprob: -6.4536871910095215
    8. ' []' → logprob: -6.5786871910095215
    9. ' []
' → logprob: -7.2036871910095215
    10. '[self' → logprob: -9.07868766784668

Token 2347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1703832894563675
    2. 'for' → logprob: -1.920383334159851
    3. 'sign' → logprob: -5.420383453369141
    4. ' for' → logprob: -5.420383453369141
    5. 'all' → logprob: -7.420383453369141
    6. '```' → logprob: -8.42038345336914
    7. '
' → logprob: -9.17038345336914
    8. '        
' → logprob: -9.17038345336914
    9. '   ' → logprob: -9.54538345336914
    10. '#' → logprob: -9.92038345336914

Token 2348: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8423519134521484
    2. 'c' → logprob: -1.2173519134521484
    3. 'sign' → logprob: -1.3423519134521484
    4. '       ' → logprob: -5.092351913452148
    5. 'all' → logprob: -5.717351913452148
    6. '#' (adapté à ' #') → logprob: -6.592351913452148
    7. 'choices' → logprob: -7.967351913452148
    8. ' signs' → logprob: -8.092351913452148
    9. ' for' → logprob: -8.592351913452148
    10. 'patterns' → logprob: -9.092351913452148

Token 2349: ' Try' (ID: 14720)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.032731812447309494
    2. 'for' → logprob: -3.782731771469116
    3. 'all' → logprob: -5.782732009887695
    4. 'c' → logprob: -5.907732009887695
    5. ' signs' → logprob: -6.407732009887695
    6. '#' → logprob: -7.157732009887695
    7. '       ' → logprob: -7.782732009887695
    8. 's' → logprob: -8.282732009887695
    9. 'patterns' → logprob: -8.782732009887695
    10. 'choices' → logprob: -8.907732009887695

Token 2350: ' sign' (ID: 2232)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013775820843875408
    2. '       ' → logprob: -6.138775825500488
    3. '([' → logprob: -6.138775825500488
    4. '[s' → logprob: -6.263775825500488
    5. 'sign' → logprob: -6.263775825500488
    6. '[c' → logprob: -6.513775825500488
    7. ' [' → logprob: -6.513775825500488
    8. '[[' → logprob: -7.138775825500488
    9. ' [+' → logprob: -7.263775825500488
    10. '   ' → logprob: -8.388775825500488

Token 2351: ' patterns' (ID: 18587)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05749411880970001
    2. 'patterns' → logprob: -3.0574941635131836
    3. '_patterns' → logprob: -5.307494163513184
    4. 'pattern' → logprob: -6.307494163513184
    5. 'choices' → logprob: -7.057494163513184
    6. '_pattern' → logprob: -7.682494163513184
    7. '[' → logprob: -8.307494163513184
    8. '_choices' → logprob: -8.932494163513184
    9. ' patterns' → logprob: -9.682494163513184
    10. 'pat' → logprob: -9.932494163513184

Token 2352: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1253623962402344
    2. 'for' → logprob: -1.3753623962402344
    3. ' =' → logprob: -2.0003623962402344
    4. '[[' → logprob: -2.3753623962402344
    5. ' for' → logprob: -2.6253623962402344
    6. '       ' → logprob: -3.0003623962402344
    7. '=[' → logprob: -4.375362396240234
    8. '=' → logprob: -4.375362396240234
    9. ' [' → logprob: -4.625362396240234
    10. 'sign' → logprob: -4.875362396240234

Token 2353: ' all' (ID: 722)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026048870757222176
    2. ' [+' → logprob: -4.77604866027832
    3. '[c' → logprob: -4.90104866027832
    4. ' [' → logprob: -5.77604866027832
    5. '[s' → logprob: -6.27604866027832
    6. 'all' → logprob: -6.52604866027832
    7. ' signs' → logprob: -6.90104866027832
    8. 'sign' → logprob: -7.27604866027832
    9. '+[' → logprob: -7.52604866027832
    10. '   ' → logprob: -8.77604866027832

Token 2354: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13210280239582062
    2. '[' → logprob: -2.1321027278900146
    3. '+[' → logprob: -5.382102966308594
    4. '+
' → logprob: -8.757102966308594
    5. '1' → logprob: -9.382102966308594
    6. '[
' → logprob: -9.507102966308594
    7. '+]' → logprob: -10.007102966308594
    8. '```' → logprob: -10.007102966308594
    9. '+,' → logprob: -10.257102966308594
    10. ' +' → logprob: -10.757102966308594

Token 2355: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3014364242553711
    2. '[' → logprob: -2.051436424255371
    3. '=' → logprob: -2.676436424255371
    4. '=[' → logprob: -3.426436424255371
    5. '([' → logprob: -4.551436424255371
    6. 'sign' → logprob: -5.176436424255371
    7. '_sign' → logprob: -5.301436424255371
    8. '+' → logprob: -5.551436424255371
    9. '_plus' → logprob: -7.301436424255371
    10. '+[' → logprob: -7.301436424255371

Token 2356: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7988232970237732
    2. ' =' → logprob: -1.423823356628418
    3. ',' → logprob: -2.548823356628418
    4. ')' → logprob: -2.923823356628418
    5. 'sign' → logprob: -3.048823356628418
    6. 'for' → logprob: -3.798823356628418
    7. '=' → logprob: -4.173823356628418
    8. '
' → logprob: -4.423823356628418
    9. ')
' → logprob: -4.548823356628418
    10. ']' → logprob: -4.798823356628418

Token 2357: ' all' (ID: 722)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.14435742795467377
    2. 'all' → logprob: -2.144357442855835
    3. ' [-' → logprob: -4.769357204437256
    4. ' all' → logprob: -4.769357204437256
    5. '[' → logprob: -8.394357681274414
    6. '([-' → logprob: -10.894357681274414
    7. '   ' → logprob: -11.644357681274414
    8. '-all' → logprob: -11.894357681274414
    9. '_all' → logprob: -12.144357681274414
    10. '-' → logprob: -12.269357681274414

Token 2358: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.021311568096280098
    2. ' -' → logprob: -3.8963115215301514
    3. '+' → logprob: -7.7713117599487305
    4. '1' → logprob: -8.27131175994873
    5. '[-' → logprob: -9.77131175994873
    6. ' ' → logprob: -11.02131175994873
    7. ' +' → logprob: -12.02131175994873
    8. '(-' → logprob: -12.14631175994873
    9. '[' → logprob: -12.77131175994873
    10. '```' → logprob: -13.39631175994873

Token 2359: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.586702287197113
    2. '1' → logprob: -1.2117023468017578
    3. '+' → logprob: -2.461702346801758
    4. '([' → logprob: -4.961702346801758
    5. '+
' → logprob: -5.086702346801758
    6. '       ' → logprob: -5.211702346801758
    7. '(+' → logprob: -5.211702346801758
    8. 'for' → logprob: -5.336702346801758
    9. ')' → logprob: -5.586702346801758
    10. '(' → logprob: -5.711702346801758

Token 2360: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6781476736068726
    2. '
' → logprob: -1.6781476736068726
    3. 'for' → logprob: -1.6781476736068726
    4. 'sign' → logprob: -2.803147792816162
    5. ' for' → logprob: -3.803147792816162
    6. '[' → logprob: -4.928147792816162
    7. '(sign' → logprob: -5.053147792816162
    8. '(+' → logprob: -5.803147792816162
    9. ',' → logprob: -5.928147792816162
    10. 'c' → logprob: -6.053147792816162

Token 2361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033605944365262985
    2. 'for' → logprob: -3.9086060523986816
    3. 'sign' → logprob: -4.533606052398682
    4. ' for' → logprob: -6.783606052398682
    5. '        
' → logprob: -8.033605575561523
    6. '[' → logprob: -8.158605575561523
    7. '
' → logprob: -8.783605575561523
    8. '   ' → logprob: -9.783605575561523
    9. '(sign' → logprob: -9.783605575561523
    10. '```' → logprob: -9.908605575561523

Token 2362: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7316805720329285
    2. '       ' → logprob: -1.3566806316375732
    3. 'sign' → logprob: -1.4816806316375732
    4. ' for' → logprob: -4.231680393218994
    5. 'c' → logprob: -4.481680393218994
    6. '
' → logprob: -6.106680393218994
    7. ' signs' → logprob: -6.356680393218994
    8. 'all' → logprob: -6.606680393218994
    9. '   ' → logprob: -7.606680393218994
    10. 's' → logprob: -8.106680870056152

Token 2363: ' pattern' (ID: 8302)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.41804128885269165
    2. 's' → logprob: -1.2930412292480469
    3. ' signs' → logprob: -2.793041229248047
    4. ' s' → logprob: -5.293041229248047
    5. ' sign' → logprob: -7.293041229248047
    6. 'pattern' → logprob: -9.293041229248047
    7. 'si' → logprob: -10.043041229248047
    8. 'sig' → logprob: -10.043041229248047
    9. 'choice' → logprob: -10.418041229248047
    10. ' signes' → logprob: -11.043041229248047

Token 2364: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01425893884152174
    2. 'in' → logprob: -4.264258861541748
    3. '_in' → logprob: -9.889259338378906
    4. '[' → logprob: -11.514259338378906
    5. ' =' → logprob: -11.764259338378906
    6. '=' → logprob: -12.264259338378906
    7. '   ' → logprob: -12.514259338378906
    8. '=[' → logprob: -12.514259338378906
    9. 's' → logprob: -13.014259338378906
    10. '[i' → logprob: -13.139259338378906

Token 2365: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.002669353736564517
    2. '([[' → logprob: -6.252669334411621
    3. '([' → logprob: -7.502669334411621
    4. '[(' → logprob: -9.252669334411621
    5. '[' → logprob: -9.502669334411621
    6. '[
' → logprob: -11.252669334411621
    7. ' [[' → logprob: -12.252669334411621
    8. ' ([' → logprob: -15.252669334411621
    9. '([
' → logprob: -15.877669334411621
    10. '((' → logprob: -16.752670288085938

Token 2366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023211759980767965
    2. '+' → logprob: -6.127321243286133
    3. '[' → logprob: -9.127321243286133
    4. ' ' → logprob: -11.127321243286133
    5. '+[' → logprob: -12.252321243286133
    6. ' +' → logprob: -13.377321243286133
    7. '```' → logprob: -13.502321243286133
    8. '   ' → logprob: -13.877321243286133
    9. '(' → logprob: -14.377321243286133
    10. '+]' → logprob: -14.502321243286133

Token 2367: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6258650422096252
    2. ']*' → logprob: -1.6258649826049805
    3. ' for' → logprob: -1.7508649826049805
    4. 'for' → logprob: -3.1258649826049805
    5. ']+' → logprob: -3.5008649826049805
    6. ',' → logprob: -4.6258649826049805
    7. ']*(' → logprob: -5.2508649826049805
    8. '],' → logprob: -6.1258649826049805
    9. ']]' → logprob: -6.7508649826049805
    10. ' ]' → logprob: -7.2508649826049805

Token 2368: 'len' (ID: 3303)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05783969163894653
    2. '(n' → logprob: -3.1828396320343018
    3. 'len' → logprob: -4.307839870452881
    4. '(len' → logprob: -6.807839870452881
    5. ' n' → logprob: -9.307839393615723
    6. '(' → logprob: -10.557839393615723
    7. ' (' → logprob: -11.057839393615723
    8. '[n' → logprob: -11.682839393615723
    9. ' len' → logprob: -12.682839393615723
    10. ')n' → logprob: -13.307839393615723

Token 2369: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16088251769542694
    2. 'self' → logprob: -1.9108824729919434
    3. '(lines' → logprob: -7.410882472991943
    4. 'lines' → logprob: -10.660882949829102
    5. '(s' → logprob: -12.035882949829102
    6. '(' → logprob: -12.160882949829102
    7. ' self' → logprob: -12.285882949829102
    8. '(
' → logprob: -12.785882949829102
    9. 'of' → logprob: -13.035882949829102
    10. '(sys' → logprob: -13.160882949829102

Token 2370: '.lines' (ID: 96601)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.028859226033091545
    2. 'self' → logprob: -4.2788591384887695
    3. '(lines' → logprob: -4.2788591384887695
    4. '.lines' → logprob: -7.7788591384887695
    5. '(self' → logprob: -8.52885913848877
    6. ' lines' → logprob: -9.52885913848877
    7. '-lines' → logprob: -11.40385913848877
    8. 'user' → logprob: -11.65385913848877
    9. '	lines' → logprob: -11.77885913848877
    10. '_lines' → logprob: -12.02885913848877

Token 2371: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.1597156971693039
    2. '-' → logprob: -2.5347156524658203
    3. ')' → logprob: -2.9097156524658203
    4. ' -' → logprob: -4.90971565246582
    5. '[' → logprob: -5.15971565246582
    6. '   ' → logprob: -8.03471565246582
    7. '),' → logprob: -8.90971565246582
    8. '       ' → logprob: -9.40971565246582
    9. '()-' → logprob: -9.90971565246582
    10. ')],' → logprob: -10.28471565246582

Token 2372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -11.875007629394531
    3. '(' → logprob: -15.750007629394531
    4. '```' → logprob: -15.750007629394531
    5. '   ' → logprob: -16.00000762939453
    6. ')' → logprob: -16.00000762939453
    7. '
' → logprob: -16.12500762939453
    8. '' → logprob: -18.00000762939453
    9. '{
' → logprob: -18.12500762939453
    10. '#' → logprob: -18.12500762939453

Token 2373: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0003408263437449932
    2. '),(' → logprob: -8.250340461730957
    3. '],' → logprob: -10.875340461730957
    4. ',' → logprob: -11.000340461730957
    5. '],[' → logprob: -11.250340461730957
    6. '),
' → logprob: -11.500340461730957
    7. '[' → logprob: -12.125340461730957
    8. '       ' → logprob: -12.500340461730957
    9. ' ),' → logprob: -12.750340461730957
    10. ')' → logprob: -12.875340461730957

Token 2374: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.931863051955588e-05
    2. ' [-' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.250059127807617
    4. ' ' → logprob: -16.000059127807617
    5. '[' → logprob: -16.750059127807617
    6. '       ' → logprob: -17.000059127807617
    7. '-' → logprob: -17.500059127807617
    8. '(-' → logprob: -18.000059127807617
    9. '([-' → logprob: -18.000059127807617
    10. '  ' → logprob: -18.375059127807617

Token 2375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.625000953674316
    3. '
' → logprob: -16.75
    4. ']' → logprob: -16.875
    5. '   ' → logprob: -17.9375
    6. '<|end|>' → logprob: -18.3125
    7. '۱' → logprob: -18.4375
    8. '```' → logprob: -18.4375
    9. '...' → logprob: -18.875
    10. ')' → logprob: -18.875

Token 2376: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.0022148462012410164
    2. ']' → logprob: -6.5022149085998535
    3. ']*' → logprob: -7.2522149085998535
    4. '](' → logprob: -13.377214431762695
    5. '*(' → logprob: -13.627214431762695
    6. '   ' → logprob: -15.627214431762695
    7. ']+' → logprob: -15.752214431762695
    8. ' ]' → logprob: -16.252214431762695
    9. '']' → logprob: -16.377214431762695
    10. '```' → logprob: -16.502214431762695

Token 2377: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009118211455643177
    2. '(len' → logprob: -7.000911712646484
    3. ' len' → logprob: -15.875911712646484
    4. '[len' → logprob: -16.500911712646484
    5. '	len' → logprob: -19.375911712646484
    6. '   ' → logprob: -19.625911712646484
    7. '<len' → logprob: -19.625911712646484
    8. ' (' → logprob: -19.625911712646484
    9. 'length' → logprob: -20.375911712646484
    10. '           ' → logprob: -20.500911712646484

Token 2378: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.451116051815916e-05
    2. 'self' → logprob: -10.625024795532227
    3. '[self' → logprob: -16.375024795532227
    4. '=self' → logprob: -17.875024795532227
    5. '(
' → logprob: -18.000024795532227
    6. '(' → logprob: -18.000024795532227
    7. '```' → logprob: -18.375024795532227
    8. '
' → logprob: -19.000024795532227
    9. ',self' → logprob: -19.250024795532227
    10. ' (' → logprob: -19.625024795532227

Token 2379: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.055052660405635834
    2. 'lines' → logprob: -3.0550527572631836
    3. '(lines' → logprob: -5.680052757263184
    4. 'self' → logprob: -5.930052757263184
    5. '(self' → logprob: -8.055052757263184
    6. '	lines' → logprob: -10.180052757263184
    7. '[self' → logprob: -12.680052757263184
    8. ')' → logprob: -12.805052757263184
    9. '.self' → logprob: -13.180052757263184
    10. ' lines' → logprob: -13.180052757263184

Token 2380: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.011888806708157063
    2. '[' → logprob: -5.2618889808654785
    3. '-' → logprob: -5.5118889808654785
    4. ')' → logprob: -6.0118889808654785
    5. ' -' → logprob: -10.01188850402832
    6. ']-' → logprob: -10.51188850402832
    7. '   ' → logprob: -10.88688850402832
    8. '1' → logprob: -12.01188850402832
    9. '[-' → logprob: -12.01188850402832
    10. ' )' → logprob: -12.01188850402832

Token 2381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.125001907348633
    4. '```' → logprob: -17.125001907348633
    5. '       ' → logprob: -19.000001907348633
    6. ')' → logprob: -19.062501907348633
    7. '۱' → logprob: -19.187501907348633
    8. '{' → logprob: -19.437501907348633
    9. '           ' → logprob: -19.500001907348633
    10. '  ' → logprob: -19.750001907348633

Token 2382: ')]' (ID: 15710)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.9549746513366699
    2. ']:
' → logprob: -1.57997465133667
    3. ')]' → logprob: -1.57997465133667
    4. ']]:
' → logprob: -2.57997465133667
    5. '):' → logprob: -2.82997465133667
    6. '):
' → logprob: -2.95497465133667
    7. ')' → logprob: -4.32997465133667
    8. ']' → logprob: -6.82997465133667
    9. ']):
' → logprob: -6.95497465133667
    10. ']):' → logprob: -8.204975128173828

Token 2383: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22562508285045624
    2. ':
' → logprob: -1.6006250381469727
    3. '):
' → logprob: -9.100625038146973
    4. '):' → logprob: -10.100625038146973
    5. '       ' → logprob: -10.350625038146973
    6. ':
' → logprob: -11.600625038146973
    7. ']:
' → logprob: -12.350625038146973
    8. '           ' → logprob: -12.475625038146973
    9. ':

' → logprob: -12.725625038146973
    10. ']:' → logprob: -12.975625038146973

Token 2384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035357745946384966
    2. '       ' → logprob: -9.125353813171387
    3. ':' → logprob: -9.875353813171387
    4. '```' → logprob: -10.125353813171387
    5. '	       ' → logprob: -10.750353813171387
    6. ':
' → logprob: -11.000353813171387
    7. '
' → logprob: -11.375353813171387
    8. 'sign' → logprob: -11.375353813171387
    9. 's' → logprob: -11.375353813171387
    10. 'candidate' → logprob: -11.500353813171387

Token 2385: ' pt' (ID: 18961)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.2740156054496765
    2. 'pt' (adapté à ' pt') → logprob: -2.2740156650543213
    3. 'p' → logprob: -2.6490156650543213
    4. '           ' → logprob: -3.0240156650543213
    5. ' point' → logprob: -5.024015426635742
    6. 'candidate' → logprob: -5.274015426635742
    7. ' pt' → logprob: -6.024015426635742
    8. 'res' → logprob: -6.774015426635742
    9. 'solution' → logprob: -6.774015426635742
    10. ' p' → logprob: -8.149015426635742

Token 2386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931495666503906
    2. ' =' → logprob: -0.6931495666503906
    3. '           ' → logprob: -13.31814956665039
    4. '       ' → logprob: -15.44314956665039
    5. '=
' → logprob: -15.56814956665039
    6. '=None' → logprob: -16.81814956665039
    7. '=find' → logprob: -17.06814956665039
    8. '         ' → logprob: -17.19314956665039
    9. '               ' → logprob: -17.31814956665039
    10. 'oint' → logprob: -17.44314956665039

Token 2387: ' solve' (ID: 17722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07970315217971802
    2. ' self' → logprob: -2.5797030925750732
    3. 'solve' → logprob: -7.204703330993652
    4. ' solve' → logprob: -9.579703330993652
    5. '           ' → logprob: -14.329703330993652
    6. 'sol' → logprob: -17.204702377319336
    7. 'Equal' → logprob: -17.204702377319336
    8. '(self' → logprob: -17.454702377319336
    9. '	self' → logprob: -17.579702377319336
    10. 'Self' → logprob: -17.579702377319336

Token 2388: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.9361264946837764e-07
    2. 'for' → logprob: -16.375
    3. '```' → logprob: -17.875
    4. '_' → logprob: -18.5
    5. '_FOR' → logprob: -19.375
    6. '##_' → logprob: -19.375
    7. ')_' → logprob: -19.375
    8. ' _' → logprob: -19.375
    9. '(_' → logprob: -19.5
    10. '_to' → logprob: -19.625

Token 2389: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.05492990463972092
    2. 'sign' → logprob: -2.9299299716949463
    3. 'pattern' → logprob: -10.179929733276367
    4. 's' → logprob: -12.304929733276367
    5. '(sign' → logprob: -14.304929733276367
    6. '```' → logprob: -14.304929733276367
    7. '_pattern' → logprob: -14.554929733276367
    8. '_' → logprob: -14.929929733276367
    9. 'signin' → logprob: -15.179929733276367
    10. '
' → logprob: -15.429929733276367

Token 2390: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.56102097814437e-05
    2. 'sign' → logprob: -10.000045776367188
    3. '_sign' → logprob: -16.000045776367188
    4. 'patterns' → logprob: -17.125045776367188
    5. ' signs' → logprob: -17.125045776367188
    6. 'ss' → logprob: -19.750045776367188
    7. 'pattern' → logprob: -19.750045776367188
    8. 'Signs' → logprob: -20.000045776367188
    9. '(sign' → logprob: -20.250045776367188
    10. 'sg' → logprob: -20.250045776367188

Token 2391: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.0002036595979006961
    2. 'pattern' → logprob: -8.500204086303711
    3. '(' → logprob: -16.62520408630371
    4. '(p' → logprob: -16.87520408630371
    5. ' (' → logprob: -18.25020408630371
    6. '```' → logprob: -18.87520408630371
    7. '(
' → logprob: -19.37520408630371
    8. ' pattern' → logprob: -19.37520408630371
    9. '(pa' → logprob: -19.62520408630371
    10. '((' → logprob: -20.12520408630371

Token 2392: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.009789855219423771
    2. ')' → logprob: -4.759789943695068
    3. '           ' → logprob: -6.759789943695068
    4. ')
' → logprob: -11.38478946685791
    5. '       ' → logprob: -12.75978946685791
    6. ' )
' → logprob: -15.75978946685791
    7. '):
' → logprob: -15.88478946685791
    8. '          ' → logprob: -15.88478946685791
    9. ')

' → logprob: -16.259790420532227
    10. ')`
' → logprob: -16.509790420532227

Token 2393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000343210413120687
    2. ' if' → logprob: -9.000343322753906
    3. '<|end|>' → logprob: -9.750343322753906
    4. 'if' → logprob: -9.875343322753906
    5. '
' → logprob: -10.000343322753906
    6. '	       ' → logprob: -11.000343322753906
    7. '		' → logprob: -11.250343322753906
    8. '       ' → logprob: -11.375343322753906
    9. '<|end|>' → logprob: -12.375343322753906
    10. '[' → logprob: -12.500343322753906

Token 2394: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25473955273628235
    2. '           ' → logprob: -1.50473952293396
    3. ' if' → logprob: -5.879739761352539
    4. '       ' → logprob: -12.004739761352539
    5. '   ' → logprob: -13.254739761352539
    6. '	if' → logprob: -13.754739761352539
    7. '```' → logprob: -14.504739761352539
    8. '	       ' → logprob: -14.879739761352539
    9. '		' → logprob: -15.129739761352539
    10. ' ' → logprob: -15.504739761352539

Token 2395: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.0015023599844425917
    2. ' pt' → logprob: -6.501502513885498
    3. '	pt' → logprob: -18.376502990722656
    4. '   ' → logprob: -18.751502990722656
    5. '(pt' → logprob: -19.251502990722656
    6. 'pts' → logprob: -20.501502990722656
    7. 'Pt' → logprob: -21.126502990722656
    8. '           ' → logprob: -22.001502990722656
    9. '    ' → logprob: -22.126502990722656
    10. '_pt' → logprob: -22.126502990722656

Token 2396: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07892008125782013
    2. 'is' → logprob: -2.5789201259613037
    3. ')' → logprob: -11.703920364379883
    4. ':' → logprob: -11.828920364379883
    5. 'and' → logprob: -11.828920364379883
    6. ' and' → logprob: -13.078920364379883
    7. ' ' → logprob: -13.203920364379883
    8. ')is' → logprob: -14.328920364379883
    9. ':
' → logprob: -14.453920364379883
    10. '
' → logprob: -14.453920364379883

Token 2397: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03805216774344444
    2. ' not' → logprob: -3.2880520820617676
    3. 'None' → logprob: -11.663052558898926
    4. 'n' → logprob: -14.538052558898926
    5. '   ' → logprob: -14.788052558898926
    6. 'Not' → logprob: -14.788052558898926
    7. '	not' → logprob: -15.413052558898926
    8. 'none' → logprob: -15.788052558898926
    9. '```' → logprob: -16.03805160522461
    10. ' None' → logprob: -16.78805160522461

Token 2398: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7723443508148193
    2. ':
' → logprob: -1.1473443508148193
    3. ':' → logprob: -1.5223443508148193
    4. 'continue' → logprob: -7.022344589233398
    5. ' or' → logprob: -7.272344589233398
    6. '           ' → logprob: -8.147344589233398
    7. ' continue' → logprob: -8.522344589233398
    8. ':return' → logprob: -9.147344589233398
    9. ' continues' → logprob: -9.272344589233398
    10. '):
' → logprob: -10.397344589233398

Token 2399: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010306654730811715
    2. 'continue' → logprob: -7.001030445098877
    3. ' continue' → logprob: -9.251030921936035
    4. '           ' → logprob: -11.376030921936035
    5. '
' → logprob: -12.876030921936035
    6. '                   ' → logprob: -13.001030921936035
    7. '```' → logprob: -13.626030921936035
    8. ' continues' → logprob: -13.751030921936035
    9. '	continue' → logprob: -13.876030921936035
    10. '   ' → logprob: -14.251030921936035

Token 2400: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5764768123626709
    2. '               ' → logprob: -0.8264768123626709
    3. ' continue' → logprob: -7.82647705078125
    4. '	continue' → logprob: -9.95147705078125
    5. '           ' → logprob: -10.20147705078125
    6. '   ' → logprob: -10.95147705078125
    7. '                   ' → logprob: -11.45147705078125
    8. '```' → logprob: -11.82647705078125
    9. '_continue' → logprob: -11.95147705078125
    10. '	           ' → logprob: -12.57647705078125

Token 2401: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013715495588257909
    2. '
' → logprob: -6.626371383666992
    3. '            
' → logprob: -10.376371383666992
    4. '<|end|>' → logprob: -12.501371383666992
    5. '       ' → logprob: -13.001371383666992
    6. '```' → logprob: -13.376371383666992
    7. '        
' → logprob: -13.751371383666992
    8. '          ' → logprob: -14.376371383666992
    9. '               ' → logprob: -14.376371383666992
    10. '
' → logprob: -14.501371383666992

Token 2402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001439459010725841
    2. '
' → logprob: -9.125144004821777
    3. '       ' → logprob: -10.875144004821777
    4. '               ' → logprob: -12.750144004821777
    5. 'if' → logprob: -13.000144004821777
    6. '```' → logprob: -13.125144004821777
    7. '#' → logprob: -13.250144004821777
    8. '            
' → logprob: -13.500144004821777
    9. ' if' → logprob: -13.500144004821777
    10. ',' → logprob: -13.875144004821777

Token 2403: ' #' (ID: 1069)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.01585111767053604
    2. 'dist' → logprob: -4.890851020812988
    3. '           ' → logprob: -5.765851020812988
    4. '#' (adapté à ' #') → logprob: -6.265851020812988
    5. 'ok' → logprob: -6.265851020812988
    6. 'good' → logprob: -8.015851020812988
    7. 'all' → logprob: -8.765851020812988
    8. 'is' → logprob: -8.890851020812988
    9. 's' → logprob: -9.140851020812988
    10. 'consistent' → logprob: -9.140851020812988

Token 2404: ' Check' (ID: 6208)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.4748525619506836
    2. 'dist' → logprob: -1.2248525619506836
    3. '#' → logprob: -2.5998525619506836
    4. 'ok' → logprob: -5.724852561950684
    5. 'distance' → logprob: -6.349852561950684
    6. 'd' → logprob: -6.974852561950684
    7. 'all' → logprob: -7.099852561950684
    8. 'if' → logprob: -7.474852561950684
    9. 'consistent' → logprob: -7.599852561950684
    10. 'good' → logprob: -7.724852561950684

Token 2405: ' if' (ID: 538)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.03913674131035805
    2. 'dist' → logprob: -4.03913688659668
    3. 'ok' → logprob: -5.16413688659668
    4. '           ' → logprob: -5.53913688659668
    5. 'all' → logprob: -5.66413688659668
    6. ' valid' → logprob: -6.03913688659668
    7. 'good' → logprob: -6.66413688659668
    8. 'if' → logprob: -7.03913688659668
    9. ' distances' → logprob: -7.03913688659668
    10. ' ok' → logprob: -7.53913688659668

Token 2406: ' pt' (ID: 18961)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.3902033970225602e-05
    2. 'abs' → logprob: -11.750014305114746
    3. ' all' → logprob: -12.125014305114746
    4. '   ' → logprob: -15.500014305114746
    5. '           ' → logprob: -15.875014305114746
    6. 'any' → logprob: -16.50001335144043
    7. '       ' → logprob: -16.75001335144043
    8. '
' → logprob: -17.37501335144043
    9. 'pt' → logprob: -18.62501335144043
    10. '(all' → logprob: -19.12501335144043

Token 2407: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1728969812393188
    2. 'valid' → logprob: -1.2978969812393188
    3. '_valid' → logprob: -1.9228969812393188
    4. 'dist' → logprob: -2.4228968620300293
    5. '_dist' → logprob: -3.0478968620300293
    6. 'distance' → logprob: -3.4228968620300293
    7. ' is' → logprob: -3.5478968620300293
    8. 'is' → logprob: -4.172896862030029
    9. '_distance' → logprob: -4.297896862030029
    10. '_ok' → logprob: -5.172896862030029

Token 2408: ' equally' (ID: 29293)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.38871654868125916
    2. ' valid' → logprob: -2.013716459274292
    3. ' not' → logprob: -2.263716459274292
    4. 'not' → logprob: -3.013716459274292
    5. 'True' → logprob: -4.763716697692871
    6. 'correct' → logprob: -5.263716697692871
    7. 'consistent' → logprob: -5.513716697692871
    8. 's' → logprob: -5.513716697692871
    9. 'None' → logprob: -5.638716697692871
    10. 'all' → logprob: -6.263716697692871

Token 2409: ' distant' (ID: 51041)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.015011600218713284
    2. 'dist' → logprob: -4.640011787414551
    3. ' distant' → logprob: -5.265011787414551
    4. 'distance' → logprob: -10.14001178741455
    5. '_dist' → logprob: -11.89001178741455
    6. '_d' → logprob: -12.14001178741455
    7. '       ' → logprob: -12.64001178741455
    8. 'close' → logprob: -12.76501178741455
    9. '```' → logprob: -12.76501178741455
    10. '   ' → logprob: -13.14001178741455

Token 2410: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.14506080746650696
    2. 'from' → logprob: -2.7700607776641846
    3. '           ' → logprob: -3.2700607776641846
    4. ' to' → logprob: -3.5200607776641846
    5. '_to' → logprob: -5.645061016082764
    6. ' from' → logprob: -7.895061016082764
    7. 'for' → logprob: -8.145060539245605
    8. '               ' → logprob: -8.520060539245605
    9. '   ' → logprob: -8.645060539245605
    10. 'all' → logprob: -9.770060539245605

Token 2411: ' all' (ID: 722)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.5823571085929871
    2. 'all' → logprob: -0.8323571085929871
    3. 'lines' → logprob: -6.082356929779053
    4. 'self' → logprob: -6.207356929779053
    5. 'the' → logprob: -7.082356929779053
    6. ' all' → logprob: -7.707356929779053
    7. ' base' → logprob: -7.707356929779053
    8. 'line' → logprob: -8.832357406616211
    9. 'points' → logprob: -9.707357406616211
    10. 'each' → logprob: -9.707357406616211

Token 2412: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0005551783833652735
    2. ' lines' → logprob: -7.750555038452148
    3. 'points' → logprob: -9.250555038452148
    4. '           ' → logprob: -11.250555038452148
    5. 'for' → logprob: -11.250555038452148
    6. 'line' → logprob: -13.875555038452148
    7. 'self' → logprob: -14.000555038452148
    8. '               ' → logprob: -15.000555038452148
    9. '       ' → logprob: -16.50055503845215
    10. ' points' → logprob: -16.87555503845215

Token 2413: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003298632800579071
    2. ' for' → logprob: -9.125329971313477
    3. ',' → logprob: -9.500329971313477
    4. ':' → logprob: -9.750329971313477
    5. '```' → logprob: -10.750329971313477
    6. '               ' → logprob: -11.250329971313477
    7. ' distances' → logprob: -12.000329971313477
    8. ':
' → logprob: -12.000329971313477
    9. '
' → logprob: -12.250329971313477
    10. 'for' → logprob: -12.250329971313477

Token 2414: ' tolerance' (ID: 46581)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.935737133026123
    2. 'abs' → logprob: -0.935737133026123
    3. 'math' → logprob: -2.185737133026123
    4. 't' → logprob: -2.685737133026123
    5. '1' → logprob: -5.060737133026123
    6. 'sys' → logprob: -5.060737133026123
    7. 'pattern' → logprob: -5.310737133026123
    8. 'max' → logprob: -5.310737133026123
    9. '#' → logprob: -5.685737133026123
    10. '
' → logprob: -6.435737133026123

Token 2415: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005833048839122057
    2. ':' → logprob: -6.630833148956299
    3. '               ' → logprob: -6.755833148956299
    4. ' (' → logprob: -7.630833148956299
    5. ':
' → logprob: -7.755833148956299
    6. ' if' → logprob: -7.755833148956299
    7. '            
' → logprob: -7.880833148956299
    8. '=' → logprob: -8.00583267211914
    9. '(' → logprob: -8.13083267211914
    10. ' =' → logprob: -8.25583267211914

Token 2416: '1' (ID: 16)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.1240493059158325
    2. '           ' → logprob: -1.8740493059158325
    3. '(' → logprob: -1.9990493059158325
    4. '=' → logprob: -1.9990493059158325
    5. '1' → logprob: -2.374049186706543
    6. 'abs' → logprob: -3.249049186706543
    7. '0' → logprob: -3.624049186706543
    8. 'for' → logprob: -4.124049186706543
    9. '(abs' → logprob: -4.499049186706543
    10. ':' → logprob: -4.624049186706543

Token 2417: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: 0.0
    2. '.' → logprob: -17.375
    3. '.e' → logprob: -19.125
    4. '
' → logprob: -19.625
    5. '0' → logprob: -19.875
    6. '```' → logprob: -20.5
    7. '-' → logprob: -20.75
    8. 'E' → logprob: -21.0
    9. '           ' → logprob: -21.375
    10. '       ' → logprob: -21.5

Token 2418: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.625
    3. '{-' → logprob: -17.25
    4. '``' → logprob: -17.375
    5. '−' → logprob: -17.875
    6. '
' → logprob: -17.875
    7. '9' → logprob: -19.0
    8. '15' → logprob: -19.125
    9. '   ' → logprob: -19.125
    10. '\-' → logprob: -19.25

Token 2419: '7' (ID: 22)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5099561214447021
    2. '7' → logprob: -1.7599561214447021
    3. '8' → logprob: -2.134956121444702
    4. '10' → logprob: -3.134956121444702
    5. '12' → logprob: -3.259956121444702
    6. '6' → logprob: -3.884956121444702
    7. '14' → logprob: -6.134956359863281
    8. '13' → logprob: -6.384956359863281
    9. '11' → logprob: -6.384956359863281
    10. '15' → logprob: -7.759956359863281

Token 2420: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03728159889578819
    2. '
' → logprob: -3.4122815132141113
    3. ',' → logprob: -7.287281513214111
    4. ':' → logprob: -7.412281513214111
    5. '       ' → logprob: -7.787281513214111
    6. '            
' → logprob: -8.41228199005127
    7. ':
' → logprob: -8.53728199005127
    8. ' for' → logprob: -8.78728199005127
    9. ' if' → logprob: -8.91228199005127
    10. '    
' → logprob: -9.03728199005127

Token 2421: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007909203879535198
    2. '
' → logprob: -4.882909297943115
    3. '       ' → logprob: -8.882908821105957
    4. ' if' → logprob: -10.132908821105957
    5. '```' → logprob: -10.132908821105957
    6. '            
' → logprob: -10.507908821105957
    7. '               ' → logprob: -11.382908821105957
    8. ' for' → logprob: -12.007908821105957
    9. ',' → logprob: -12.007908821105957
    10. 'if' → logprob: -12.257908821105957

Token 2422: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.7352441549301147
    2. 'd' → logprob: -1.6102441549301147
    3. '           ' → logprob: -1.6102441549301147
    4. 'max' → logprob: -2.8602442741394043
    5. 'equal' → logprob: -3.9852442741394043
    6. 'all' → logprob: -4.235244274139404
    7. 'valid' → logprob: -4.985244274139404
    8. 'distance' → logprob: -5.610244274139404
    9. 'ok' → logprob: -5.985244274139404
    10. 'diff' → logprob: -5.985244274139404

Token 2423: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.042367514222860336
    2. 'ances' → logprob: -3.917367458343506
    3. ' =' → logprob: -4.542367458343506
    4. '=' → logprob: -5.167367458343506
    5. '_' → logprob: -6.042367458343506
    6. '_to' → logprob: -6.417367458343506
    7. '_s' → logprob: -8.667367935180664
    8. '_threshold' → logprob: -8.917367935180664
    9. '_tol' → logprob: -8.917367935180664
    10. '_=' → logprob: -9.042367935180664

Token 2424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5767161250114441
    2. ' =' → logprob: -0.8267161250114441
    3. 's' → logprob: -7.20171594619751
    4. '_' → logprob: -11.701716423034668
    5. '   ' → logprob: -12.076716423034668
    6. '_pt' → logprob: -13.076716423034668
    7. ',' → logprob: -13.326716423034668
    8. 'pt' → logprob: -13.451716423034668
    9. '_=' → logprob: -13.576716423034668
    10. ')' → logprob: -13.701716423034668

Token 2425: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7940714359283447
    2. 'base' → logprob: -1.0440714359283447
    3. 'abs' → logprob: -1.6690714359283447
    4. 'pattern' → logprob: -5.669071197509766
    5. ' self' → logprob: -6.794071197509766
    6. ' base' → logprob: -7.169071197509766
    7. 'pt' → logprob: -7.419071197509766
    8. ' abs' → logprob: -8.044071197509766
    9. 'solve' → logprob: -8.044071197509766
    10. '(base' → logprob: -8.919071197509766

Token 2426: '.lines' (ID: 96601)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.03373917564749718
    2. '.lines' → logprob: -3.4087390899658203
    3. 'distance' → logprob: -10.03373908996582
    4. '(lines' → logprob: -11.28373908996582
    5. '.distance' → logprob: -11.53373908996582
    6. '0' → logprob: -11.53373908996582
    7. 'dist' → logprob: -12.40873908996582
    8. '	lines' → logprob: -12.53373908996582
    9. ' lines' → logprob: -12.90873908996582
    10. 'points' → logprob: -13.90873908996582

Token 2427: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002737330214586109
    2. '0' → logprob: -8.250273704528809
    3. '```' → logprob: -12.250273704528809
    4. '[
' → logprob: -13.375273704528809
    5. '   ' → logprob: -13.625273704528809
    6. '       ' → logprob: -14.125273704528809
    7. 's' → logprob: -14.625273704528809
    8. '#' → logprob: -15.000273704528809
    9. '.' → logprob: -15.000273704528809
    10. '`' → logprob: -15.125273704528809

Token 2428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8789383830153383e-05
    2. '[' → logprob: -11.125019073486328
    3. ' ' → logprob: -13.000019073486328
    4. '...' → logprob: -15.125019073486328
    5. ':' → logprob: -15.812519073486328
    6. '#' → logprob: -15.812519073486328
    7. '۰' → logprob: -15.937519073486328
    8. '<|end|>' → logprob: -16.187519073486328
    9. '<|end|>' → logprob: -16.312519073486328
    10. 'user' → logprob: -16.500019073486328

Token 2429: '].' (ID: 1651)
  Prédit: '.distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -9.722539834911004e-05
    2. '.' → logprob: -9.625097274780273
    3. 'distance' → logprob: -11.000097274780273
    4. ').' → logprob: -11.750097274780273
    5. ' .' → logprob: -13.000097274780273
    6. '(distance' → logprob: -13.500097274780273
    7. '   ' → logprob: -14.125097274780273
    8. '
' → logprob: -14.625097274780273
    9. '].' → logprob: -14.750097274780273
    10. '.point' → logprob: -15.125097274780273

Token 2430: 'distance' (ID: 40614)
  Prédit: 'distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -2.935296834039036e-06
    2. '.distance' → logprob: -13.62500286102295
    3. ' distance' → logprob: -13.62500286102295
    4. '_distance' → logprob: -15.12500286102295
    5. '
' → logprob: -17.000003814697266
    6. '(distance' → logprob: -18.750003814697266
    7. '   ' → logprob: -19.125003814697266
    8. '
' → logprob: -19.750003814697266
    9. '```' → logprob: -19.875003814697266
    10. 'point' → logprob: -20.125003814697266

Token 2431: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.704273118884885e-07
    2. 'to' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.625
    4. '```' → logprob: -17.375
    5. ')_' → logprob: -18.375
    6. '_' → logprob: -18.5
    7. ' _' → logprob: -18.5
    8. '_TO' → logprob: -18.75
    9. '(point' → logprob: -19.0
    10. 'To' → logprob: -19.125

Token 2432: '_point' (ID: 15466)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.25202304124832153
    2. '_point' → logprob: -1.5020229816436768
    3. '(point' → logprob: -9.627022743225098
    4. 'pt' → logprob: -11.002022743225098
    5. ' point' → logprob: -12.127022743225098
    6. 'Point' → logprob: -13.877022743225098
    7. 'distance' → logprob: -14.002022743225098
    8. '
' → logprob: -14.252022743225098
    9. '```' → logprob: -14.252022743225098
    10. 'line' → logprob: -14.502022743225098

Token 2433: '(pt' (ID: 73498)
  Prédit: '(pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -6.277553620748222e-05
    2. 'pt' → logprob: -9.750062942504883
    3. '(point' → logprob: -12.375062942504883
    4. ' pt' → logprob: -15.875062942504883
    5. 'point' → logprob: -16.750062942504883
    6. '	pt' → logprob: -17.125062942504883
    7. '(' → logprob: -17.375062942504883
    8. '(
' → logprob: -18.250062942504883
    9. '```' → logprob: -19.125062942504883
    10. '.pt' → logprob: -19.500062942504883

Token 2434: ')
' (ID: 446)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -1.0005548000335693
    2. '
' → logprob: -1.2505548000335693
    3. ')' → logprob: -1.5005548000335693
    4. ')
' → logprob: -3.1255548000335693
    5. '           ' → logprob: -3.3755548000335693
    6. '()' → logprob: -3.5005548000335693
    7. '       ' → logprob: -5.250555038452148
    8. '+' → logprob: -6.000555038452148
    9. '```' → logprob: -6.875555038452148
    10. '   ' → logprob: -7.500555038452148

Token 2435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010497196344658732
    2. ' for' → logprob: -7.251049518585205
    3. '```' → logprob: -8.876049995422363
    4. 'for' → logprob: -9.001049995422363
    5. 'dist' → logprob: -10.501049995422363
    6. ' if' → logprob: -11.126049995422363
    7. ',' → logprob: -11.751049995422363
    8. '       ' → logprob: -12.001049995422363
    9. ' =' → logprob: -12.501049995422363
    10. 'if' → logprob: -13.001049995422363

Token 2436: ' ok' (ID: 4763)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.6670399308204651
    2. '           ' → logprob: -1.4170398712158203
    3. 'valid' → logprob: -1.7920398712158203
    4. 'all' → logprob: -3.4170398712158203
    5. 'consistent' → logprob: -3.6670398712158203
    6. 'for' → logprob: -4.29203987121582
    7. 'good' → logprob: -6.66703987121582
    8. 'ok' (adapté à ' ok') → logprob: -7.16703987121582
    9. 'if' → logprob: -7.16703987121582
    10. ' equal' → logprob: -7.41703987121582

Token 2437: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38692528009414673
    2. ' =' → logprob: -1.136925220489502
    3. '=True' → logprob: -10.01192569732666
    4. 'ay' → logprob: -12.76192569732666
    5. '   ' → logprob: -12.76192569732666
    6. '=False' → logprob: -13.51192569732666
    7. '    ' → logprob: -14.26192569732666
    8. '       ' → logprob: -15.01192569732666
    9. '           ' → logprob: -15.01192569732666
    10. '=
' → logprob: -15.01192569732666

Token 2438: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.008843356743454933
    2. 'all' → logprob: -4.758843421936035
    3. ' True' → logprob: -8.508843421936035
    4. '   ' → logprob: -10.633843421936035
    5. ' all' → logprob: -13.133843421936035
    6. '       ' → logprob: -15.133843421936035
    7. 'abs' → logprob: -15.633843421936035
    8. '           ' → logprob: -16.00884246826172
    9. 'All' → logprob: -16.13384246826172
    10. '(True' → logprob: -16.25884246826172

Token 2439: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030712373554706573
    2. ' for' → logprob: -5.878071308135986
    3. 'for' → logprob: -9.253070831298828
    4. '       ' → logprob: -9.503070831298828
    5. '<|end|>' → logprob: -10.378070831298828
    6. '               ' → logprob: -10.628070831298828
    7. '   ' → logprob: -11.753070831298828
    8. '          ' → logprob: -12.128070831298828
    9. '
' → logprob: -12.253070831298828
    10. '```' → logprob: -12.378070831298828

Token 2440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007276826072484255
    2. ' for' → logprob: -7.500727653503418
    3. 'for' → logprob: -8.750727653503418
    4. '       ' → logprob: -11.875727653503418
    5. '               ' → logprob: -13.000727653503418
    6. '<|end|>' → logprob: -13.500727653503418
    7. '```' → logprob: -13.625727653503418
    8. '   ' → logprob: -13.625727653503418
    9. '	       ' → logprob: -14.250727653503418
    10. '
' → logprob: -14.250727653503418

Token 2441: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6965333223342896
    2. 'for' (adapté à ' for') → logprob: -0.6965333223342896
    3. ' for' → logprob: -5.696533203125
    4. '```' → logprob: -10.946533203125
    5. '       ' → logprob: -12.821533203125
    6. '               ' → logprob: -13.446533203125
    7. '   ' → logprob: -15.071533203125
    8. '
' → logprob: -15.696533203125
    9. '	for' → logprob: -15.946533203125
    10. '``' → logprob: -16.321533203125

Token 2442: ' line' (ID: 2543)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4751269221305847
    2. 'line' → logprob: -0.9751269221305847
    3. 'li' → logprob: -8.100127220153809
    4. ' line' → logprob: -8.350127220153809
    5. 'j' → logprob: -8.475127220153809
    6. ' i' → logprob: -8.850127220153809
    7. 'l' → logprob: -9.100127220153809
    8. '   ' → logprob: -10.725127220153809
    9. '           ' → logprob: -11.975127220153809
    10. 'idx' → logprob: -12.225127220153809

Token 2443: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3485274910926819
    2. 'in' → logprob: -1.223527431488037
    3. 'i' → logprob: -10.723527908325195
    4. '	in' → logprob: -10.973527908325195
    5. 'line' → logprob: -10.973527908325195
    6. ' ' → logprob: -11.973527908325195
    7. '#line' → logprob: -12.473527908325195
    8. '[line' → logprob: -12.973527908325195
    9. '   ' → logprob: -13.223527908325195
    10. '           ' → logprob: -13.723527908325195

Token 2444: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.180258191714529e-06
    2. ' self' → logprob: -11.750008583068848
    3. '           ' → logprob: -15.500008583068848
    4. '[self' → logprob: -18.62500762939453
    5. '       ' → logprob: -19.00000762939453
    6. '(self' → logprob: -19.12500762939453
    7. '   ' → logprob: -19.37500762939453
    8. '               ' → logprob: -20.87500762939453
    9. ' ' → logprob: -21.12500762939453
    10. '         ' → logprob: -21.25000762939453

Token 2445: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.08188887685537338
    2. 'lines' → logprob: -2.5818889141082764
    3. 'self' → logprob: -5.831888675689697
    4. '.' → logprob: -10.831889152526855
    5. 's' → logprob: -11.206889152526855
    6. 'ines' → logprob: -11.456889152526855
    7. '(lines' → logprob: -12.581889152526855
    8. 'elines' → logprob: -12.706889152526855
    9. '	lines' → logprob: -12.706889152526855
    10. ' lines' → logprob: -13.456889152526855

Token 2446: '[' (ID: 58)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.019661864265799522
    2. ':' → logprob: -4.394661903381348
    3. '               ' → logprob: -5.144661903381348
    4. '[' → logprob: -6.894661903381348
    5. '           ' → logprob: -8.394661903381348
    6. '):
' → logprob: -11.144661903381348
    7. ':
' → logprob: -11.269661903381348
    8. ':

' → logprob: -12.394661903381348
    9. '[:-' → logprob: -12.519661903381348
    10. ' if' → logprob: -12.769661903381348

Token 2447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03953283652663231
    2. '[' → logprob: -3.2895328998565674
    3. ':
' → logprob: -7.164532661437988
    4. ':' → logprob: -7.539532661437988
    5. '   ' → logprob: -9.039532661437988
    6. '):
' → logprob: -10.039532661437988
    7. '```' → logprob: -11.414532661437988
    8. '       ' → logprob: -13.039532661437988
    9. '
' → logprob: -13.414532661437988
    10. '):' → logprob: -13.789532661437988

Token 2448: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03708622232079506
    2. ':' → logprob: -3.787086248397827
    3. '):
' → logprob: -4.662086009979248
    4. ']:
' → logprob: -5.912086009979248
    5. '               ' → logprob: -7.037086009979248
    6. '           ' → logprob: -7.537086009979248
    7. '       ' → logprob: -10.412086486816406
    8. '():
' → logprob: -10.412086486816406
    9. '[' → logprob: -10.537086486816406
    10. '):' → logprob: -10.912086486816406

Token 2449: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7496182322502136
    2. ']:
' → logprob: -1.1246182918548584
    3. '               ' → logprob: -2.3746182918548584
    4. '):
' → logprob: -2.4996182918548584
    5. '           ' → logprob: -3.8746182918548584
    6. ':' → logprob: -5.499618053436279
    7. '():
' → logprob: -6.874618053436279
    8. '       ' → logprob: -7.374618053436279
    9. '   ' → logprob: -8.374618530273438
    10. '                   ' → logprob: -8.499618530273438

Token 2450: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019201572984457016
    2. '           ' → logprob: -4.269201755523682
    3. '       ' → logprob: -6.644201755523682
    4. '	           ' → logprob: -6.644201755523682
    5. '<|end|>' → logprob: -6.769201755523682
    6. '```' → logprob: -8.269201278686523
    7. '	       ' → logprob: -8.394201278686523
    8. '   ' → logprob: -8.769201278686523
    9. ' if' → logprob: -9.269201278686523
    10. '		       ' → logprob: -9.769201278686523

Token 2451: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.3783838748931885
    2. 'd' → logprob: -1.6283838748931885
    3. ' if' → logprob: -3.1283838748931885
    4. ' dist' → logprob: -3.2533838748931885
    5. 'if' → logprob: -3.8783838748931885
    6. ' d' → logprob: -4.253383636474609
    7. '               ' → logprob: -7.378383636474609
    8. '           ' → logprob: -7.878383636474609
    9. '	dist' → logprob: -8.75338363647461
    10. 'diff' → logprob: -9.12838363647461

Token 2452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48905253410339355
    2. '=line' → logprob: -1.4890525341033936
    3. '=' → logprob: -2.2390525341033936
    4. '_to' → logprob: -3.1140525341033936
    5. 'to' → logprob: -6.239052772521973
    6. '_line' → logprob: -6.239052772521973
    7. '(line' → logprob: -6.239052772521973
    8. '_' → logprob: -7.114052772521973
    9. 'line' → logprob: -7.489052772521973
    10. ' line' → logprob: -7.864052772521973

Token 2453: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1734205037355423
    2. 'abs' → logprob: -1.9234205484390259
    3. ' line' → logprob: -4.423420429229736
    4. ' abs' → logprob: -6.798420429229736
    5. '(line' → logprob: -15.298420906066895
    6. '(abs' → logprob: -16.173419952392578
    7. '#line' → logprob: -16.173419952392578
    8. '   ' → logprob: -16.298419952392578
    9. '	line' → logprob: -16.548419952392578
    10. '[line' → logprob: -16.548419952392578

Token 2454: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.00032354547875002027
    2. '.' → logprob: -8.625323295593262
    3. 'distance' → logprob: -8.875323295593262
    4. ' distance' → logprob: -13.250323295593262
    5. '(distance' → logprob: -13.750323295593262
    6. ' .' → logprob: -14.500323295593262
    7. '   ' → logprob: -15.125323295593262
    8. '_distance' → logprob: -15.250323295593262
    9. '.Distance' → logprob: -16.000324249267578
    10. '.dist' → logprob: -16.625324249267578

Token 2455: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.2664456789934775e-06
    2. 'to' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.375000953674316
    4. ' _' → logprob: -16.125001907348633
    5. '               ' → logprob: -16.625001907348633
    6. '```' → logprob: -16.875001907348633
    7. ')_' → logprob: -17.250001907348633
    8. '_' → logprob: -17.500001907348633
    9. 'To' → logprob: -17.750001907348633
    10. '           ' → logprob: -18.250001907348633

Token 2456: '_point' (ID: 15466)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.038065481930971146
    2. '_point' → logprob: -3.2880654335021973
    3. 'line' → logprob: -11.538065910339355
    4. 'pt' → logprob: -11.663065910339355
    5. '(point' → logprob: -13.038065910339355
    6. ' point' → logprob: -13.538065910339355
    7. 'distance' → logprob: -14.163065910339355
    8. '```' → logprob: -14.663065910339355
    9. '_line' → logprob: -14.788065910339355
    10. '	point' → logprob: -15.788065910339355

Token 2457: '(pt' (ID: 73498)
  Prédit: '(pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -4.966313281329349e-05
    2. '(point' → logprob: -10.625049591064453
    3. 'pt' → logprob: -11.000049591064453
    4. '(' → logprob: -11.750049591064453
    5. ' pt' → logprob: -15.125049591064453
    6. '(
' → logprob: -16.000049591064453
    7. '(p' → logprob: -16.000049591064453
    8. ' (' → logprob: -16.250049591064453
    9. '(line' → logprob: -16.625049591064453
    10. '	pt' → logprob: -16.750049591064453

Token 2458: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3982063829898834
    2. ')' → logprob: -1.148206353187561
    3. '               ' → logprob: -4.5232062339782715
    4. '())
' → logprob: -8.52320671081543
    5. '()
' → logprob: -10.14820671081543
    6. '()' → logprob: -10.64820671081543
    7. ')==' → logprob: -10.77320671081543
    8. ')
' → logprob: -10.77320671081543
    9. '           ' → logprob: -11.14820671081543
    10. '())' → logprob: -11.27320671081543

Token 2459: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001342903997283429
    2. '           ' → logprob: -9.375134468078613
    3. '       ' → logprob: -10.875134468078613
    4. '<|end|>' → logprob: -11.625134468078613
    5. '	           ' → logprob: -12.250134468078613
    6. '                   ' → logprob: -12.375134468078613
    7. '		       ' → logprob: -12.500134468078613
    8. '              ' → logprob: -12.875134468078613
    9. '	       ' → logprob: -13.500134468078613
    10. '```' → logprob: -13.875134468078613

Token 2460: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5864014625549316
    2. 'if' (adapté à ' if') → logprob: -0.8364014625549316
    3. ' if' → logprob: -4.586401462554932
    4. '
' → logprob: -8.961400985717773
    5. '                   ' → logprob: -10.211400985717773
    6. '           ' → logprob: -10.461400985717773
    7. '```' → logprob: -11.461400985717773
    8. '                
' → logprob: -12.336400985717773
    9. 'If' → logprob: -12.961400985717773
    10. '              ' → logprob: -13.711400985717773

Token 2461: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.003412251826375723
    2. ' abs' → logprob: -5.753412246704102
    3. '                   ' → logprob: -8.753412246704102
    4. '               ' → logprob: -9.503412246704102
    5. '(abs' → logprob: -13.753412246704102
    6. '                       ' → logprob: -14.378412246704102
    7. '   ' → logprob: -15.753412246704102
    8. '           ' → logprob: -16.1284122467041
    9. 'not' → logprob: -16.6284122467041
    10. '                    ' → logprob: -18.1284122467041

Token 2462: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -1.6240566083070007e-06
    2. 'dist' → logprob: -13.875001907348633
    3. '(' → logprob: -14.750001907348633
    4. '(distance' → logprob: -16.500001907348633
    5. '(diff' → logprob: -17.000001907348633
    6. '(d' → logprob: -17.500001907348633
    7. '(
' → logprob: -18.125001907348633
    8. '((' → logprob: -18.125001907348633
    9. '(dis' → logprob: -19.375001907348633
    10. '	dist' → logprob: -20.000001907348633

Token 2463: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04792295768857002
    2. ' -' → logprob: -3.4229228496551514
    3. '(dist' → logprob: -4.4229230880737305
    4. '-dist' → logprob: -6.5479230880737305
    5. '(' → logprob: -7.9229230880737305
    6. '(pt' → logprob: -8.54792308807373
    7. 'dist' → logprob: -9.67292308807373
    8. '()' → logprob: -10.67292308807373
    9. '()-' → logprob: -11.04792308807373
    10. 's' → logprob: -11.04792308807373

Token 2464: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -9.615255839889869e-05
    2. ' dist' → logprob: -9.250096321105957
    3. '(dist' → logprob: -19.50009536743164
    4. '	dist' → logprob: -22.12509536743164
    5. 'distance' → logprob: -23.12509536743164
    6. '
' → logprob: -23.25009536743164
    7. '           ' → logprob: -23.37509536743164
    8. 'Dist' → logprob: -23.62509536743164
    9. 'd' → logprob: -23.87509536743164
    10. '_dist' → logprob: -23.87509536743164

Token 2465: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.75
    3. '۰' → logprob: -16.25
    4. '           ' → logprob: -17.25
    5. '```' → logprob: -17.75
    6. ')' → logprob: -18.125
    7. ' ' → logprob: -18.375
    8. '               ' → logprob: -18.625
    9. '       ' → logprob: -18.625
    10. 'o' → logprob: -18.625

Token 2466: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002005961025133729
    2. ')>' → logprob: -6.3770060539245605
    3. '>' → logprob: -8.127005577087402
    4. ' >' → logprob: -12.627005577087402
    5. '           ' → logprob: -13.377005577087402
    6. '               ' → logprob: -13.377005577087402
    7. '                   ' → logprob: -14.752005577087402
    8. '[' → logprob: -15.127005577087402
    9. '）' → logprob: -15.127005577087402
    10. '>)' → logprob: -15.877005577087402

Token 2467: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007625557482242584
    2. ' >' → logprob: -4.882625579833984
    3. ')>' → logprob: -11.882625579833984
    4. '           ' → logprob: -12.507625579833984
    5. '               ' → logprob: -12.882625579833984
    6. '                   ' → logprob: -13.007625579833984
    7. ')' → logprob: -13.132625579833984
    8. '()>' → logprob: -14.007625579833984
    9. '>=' → logprob: -15.757625579833984
    10. '   ' → logprob: -16.007625579833984

Token 2468: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -13.875036239624023
    4. '(' → logprob: -17.875036239624023
    5. '           ' → logprob: -18.375036239624023
    6. '
' → logprob: -18.875036239624023
    7. '                   ' → logprob: -19.125036239624023
    8. '       ' → logprob: -19.375036239624023
    9. '  ' → logprob: -19.875036239624023
    10. '```' → logprob: -19.875036239624023

Token 2469: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '(' → logprob: -17.125001907348633
    5. '
' → logprob: -17.375001907348633
    6. '```' → logprob: -18.000001907348633
    7. '１' → logprob: -18.625001907348633
    8. '``' → logprob: -19.000001907348633
    9. '**' → logprob: -19.375001907348633
    10. '       ' → logprob: -19.375001907348633

Token 2470: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20146362483501434
    2. '-' → logprob: -1.7014635801315308
    3. '```' → logprob: -10.57646369934082
    4. '[-' → logprob: -11.57646369934082
    5. '**' → logprob: -12.45146369934082
    6. '-e' → logprob: -12.45146369934082
    7. '.e' → logprob: -13.07646369934082
    8. '7' → logprob: -13.32646369934082
    9. '
' → logprob: -13.82646369934082
    10. '[' → logprob: -14.07646369934082

Token 2471: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1472419600977446e-06
    2. '7' → logprob: -14.000000953674316
    3. '```' → logprob: -16.250001907348633
    4. '{-' → logprob: -16.500001907348633
    5. '(-' → logprob: -17.250001907348633
    6. 'e' → logprob: -17.500001907348633
    7. '**' → logprob: -17.750001907348633
    8. '
' → logprob: -18.000001907348633
    9. '[-' → logprob: -18.125001907348633
    10. '{
' → logprob: -18.750001907348633

Token 2472: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00016873658751137555
    2. '07' → logprob: -8.750168800354004
    3. '-' → logprob: -11.625168800354004
    4. '6' → logprob: -14.125168800354004
    5. '```' → logprob: -14.875168800354004
    6. '007' → logprob: -16.875167846679688
    7. '
' → logprob: -17.062667846679688
    8. '5' → logprob: -17.375167846679688
    9. '**' → logprob: -18.187667846679688
    10. ' ' → logprob: -18.187667846679688

Token 2473: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13909290730953217
    2. ':
' → logprob: -2.7640929222106934
    3. ':' → logprob: -3.1390929222106934
    4. '                       ' → logprob: -4.264092922210693
    5. '               ' → logprob: -4.764092922210693
    6. ':return' → logprob: -8.139092445373535
    7. '                  ' → logprob: -8.639092445373535
    8. '                           ' → logprob: -9.514092445373535
    9. ' or' → logprob: -9.639092445373535
    10. '           ' → logprob: -10.139092445373535

Token 2474: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004154185007791966
    2. '                       ' → logprob: -8.375415802001953
    3. '               ' → logprob: -8.875415802001953
    4. '                  ' → logprob: -10.625415802001953
    5. '                           ' → logprob: -12.000415802001953
    6. '           ' → logprob: -12.500415802001953
    7. '```' → logprob: -12.875415802001953
    8. '		           ' → logprob: -13.125415802001953
    9. '<|end|>' → logprob: -13.875415802001953
    10. '	               ' → logprob: -14.125415802001953

Token 2475: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.135070338845253
    2. '                       ' → logprob: -2.385070323944092
    3. '                   ' → logprob: -3.635070323944092
    4. ' ok' → logprob: -5.010070323944092
    5. '               ' → logprob: -7.135070323944092
    6. '	ok' → logprob: -8.88507080078125
    7. 'break' → logprob: -9.26007080078125
    8. '                           ' → logprob: -9.38507080078125
    9. '                               ' → logprob: -11.01007080078125
    10. 'okay' → logprob: -11.51007080078125

Token 2476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6700659990310669
    2. '                       ' → logprob: -0.9200659990310669
    3. ' =' → logprob: -3.2950658798217773
    4. ':' → logprob: -4.045065879821777
    5. '                   ' → logprob: -4.045065879821777
    6. '=False' → logprob: -4.295065879821777
    7. '                      ' → logprob: -6.795065879821777
    8. '               ' → logprob: -7.170065879821777
    9. ':
' → logprob: -7.295065879821777
    10. '==' → logprob: -7.920065879821777

Token 2477: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. 'F' → logprob: -22.00020408630371
    4. '(False' → logprob: -22.25020408630371
    5. '=False' → logprob: -23.37520408630371
    6. 'false' → logprob: -23.50020408630371
    7. 'True' → logprob: -24.12520408630371
    8. '   ' → logprob: -24.62520408630371
    9. '_false' → logprob: -24.87520408630371
    10. 'Fal' → logprob: -24.87520408630371

Token 2478: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008051477372646332
    2. '                       ' → logprob: -4.88305139541626
    3. '               ' → logprob: -8.508051872253418
    4. '           ' → logprob: -9.383051872253418
    5. '       ' → logprob: -10.633051872253418
    6. '                  ' → logprob: -10.758051872253418
    7. '                           ' → logprob: -10.758051872253418
    8. '                    ' → logprob: -10.883051872253418
    9. '                     ' → logprob: -11.383051872253418
    10. '<|end|>' → logprob: -11.383051872253418

Token 2479: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001998346531763673
    2. '                       ' → logprob: -6.251998424530029
    3. '               ' → logprob: -10.126997947692871
    4. '           ' → logprob: -11.501997947692871
    5. '				' → logprob: -12.626997947692871
    6. '		           ' → logprob: -12.876997947692871
    7. '       ' → logprob: -13.376997947692871
    8. '                  ' → logprob: -13.376997947692871
    9. '	               ' → logprob: -13.376997947692871
    10. '                           ' → logprob: -13.376997947692871

Token 2480: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.018868930637836456
    2. '                   ' → logprob: -4.018868923187256
    3. ' break' → logprob: -7.268868923187256
    4. '                       ' → logprob: -11.393869400024414
    5. '	break' → logprob: -12.018869400024414
    6. '               ' → logprob: -12.768869400024414
    7. '_break' → logprob: -14.393869400024414
    8. '                  ' → logprob: -15.018869400024414
    9. '           ' → logprob: -15.518869400024414
    10. '				' → logprob: -16.143869400024414

Token 2481: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005693563143722713
    2. '               ' → logprob: -8.250569343566895
    3. '
' → logprob: -8.625569343566895
    4. '       ' → logprob: -9.625569343566895
    5. '                   ' → logprob: -11.000569343566895
    6. '		' → logprob: -11.875569343566895
    7. '<|end|>' → logprob: -11.875569343566895
    8. '   ' → logprob: -12.125569343566895
    9. '            
' → logprob: -12.250569343566895
    10. 'if' → logprob: -12.375569343566895

Token 2482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000579719664528966
    2. '               ' → logprob: -8.500579833984375
    3. '
' → logprob: -9.250579833984375
    4. '       ' → logprob: -9.625579833984375
    5. '```' → logprob: -9.625579833984375
    6. 'if' → logprob: -9.875579833984375
    7. '		' → logprob: -10.125579833984375
    8. '                   ' → logprob: -10.250579833984375
    9. 'If' → logprob: -12.000579833984375
    10. '   ' → logprob: -12.625579833984375

Token 2483: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02942783385515213
    2. 'if' (adapté à ' if') → logprob: -4.154428005218506
    3. '
' → logprob: -4.404428005218506
    4. '       ' → logprob: -7.154428005218506
    5. ' if' → logprob: -8.654427528381348
    6. '               ' → logprob: -9.904427528381348
    7. '```' → logprob: -10.279427528381348
    8. '   ' → logprob: -11.404427528381348
    9. '          ' → logprob: -12.029427528381348
    10. 'If' → logprob: -12.154427528381348

Token 2484: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.04879310354590416
    2. 'ok' → logprob: -3.048793077468872
    3. ' not' → logprob: -8.673792839050293
    4. 'not' → logprob: -10.548792839050293
    5. '   ' → logprob: -12.423792839050293
    6. '    ' → logprob: -13.423792839050293
    7. ' okay' → logprob: -13.923792839050293
    8. '	ok' → logprob: -14.048792839050293
    9. ' ' → logprob: -14.423792839050293
    10. '  ' → logprob: -15.298792839050293

Token 2485: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5872403979301453
    2. ':
' → logprob: -1.33724045753479
    3. ':' → logprob: -1.71224045753479
    4. '           ' → logprob: -7.962240219116211
    5. '):
' → logprob: -8.087240219116211
    6. '                   ' → logprob: -8.837240219116211
    7. '                       ' → logprob: -9.212240219116211
    8. ',' → logprob: -9.712240219116211
    9. '<|end|>' → logprob: -10.587240219116211
    10. '              ' → logprob: -10.712240219116211

Token 2486: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.676292231422849e-05
    2. '           ' → logprob: -11.625017166137695
    3. '                   ' → logprob: -12.125017166137695
    4. '              ' → logprob: -14.250017166137695
    5. 'c' → logprob: -15.125017166137695
    6. '   ' → logprob: -15.375017166137695
    7. '	           ' → logprob: -15.375017166137695
    8. '       ' → logprob: -15.625017166137695
    9. '                       ' → logprob: -15.625017166137695
    10. '```' → logprob: -16.875017166137695

Token 2487: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0018993634730577469
    2. '               ' → logprob: -7.001899242401123
    3. ' candidates' → logprob: -7.001899242401123
    4. '                   ' → logprob: -10.251899719238281
    5. '   ' → logprob: -11.501899719238281
    6. 'return' → logprob: -11.501899719238281
    7. '           ' → logprob: -11.626899719238281
    8. 'if' → logprob: -12.001899719238281
    9. ' c' → logprob: -13.376899719238281
    10. '_candidates' → logprob: -14.001899719238281

Token 2488: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005577972042374313
    2. '.' → logprob: -7.500557899475098
    3. '.add' → logprob: -13.125557899475098
    4. '.extend' → logprob: -13.500557899475098
    5. '.app' → logprob: -13.875557899475098
    6. '.Append' → logprob: -15.500557899475098
    7. '.ap' → logprob: -16.62555694580078
    8. 'append' → logprob: -16.75055694580078
    9. '.setdefault' → logprob: -16.87555694580078
    10. '.push' → logprob: -17.12555694580078

Token 2489: '(pt' (ID: 73498)
  Prédit: '(pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -0.002476016292348504
    2. 'pt' → logprob: -6.002476215362549
    3. ' pt' → logprob: -15.12747573852539
    4. '	pt' → logprob: -16.87747573852539
    5. '(' → logprob: -18.37747573852539
    6. '_pt' → logprob: -19.37747573852539
    7. '.pt' → logprob: -19.50247573852539
    8. '(p' → logprob: -20.12747573852539
    9. '((' → logprob: -20.12747573852539
    10. '(ptr' → logprob: -20.75247573852539

Token 2490: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3283000588417053
    2. '<|end|>' → logprob: -1.3282999992370605
    3. '
' → logprob: -4.9532999992370605
    4. '       ' → logprob: -5.3282999992370605
    5. '<|end|>' → logprob: -6.4532999992370605
    6. '.' → logprob: -8.203300476074219
    7. '           ' → logprob: -8.578300476074219
    8. '[' → logprob: -8.828300476074219
    9. ')
' → logprob: -8.953300476074219
    10. ']' → logprob: -9.328300476074219

Token 2491: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5574267506599426
    2. '       ' → logprob: -1.1824266910552979
    3. '
' → logprob: -2.432426691055298
    4. ' if' → logprob: -4.057426929473877
    5. '```' → logprob: -4.182426929473877
    6. '        
' → logprob: -8.557426452636719
    7. '``' → logprob: -9.182426452636719
    8. '   ' → logprob: -10.182426452636719
    9. '#' → logprob: -11.307426452636719
    10. '<|end|>' → logprob: -12.057426452636719

Token 2492: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6071681380271912
    2. '       ' → logprob: -0.8571681380271912
    3. '
' → logprob: -3.607168197631836
    4. ' if' → logprob: -5.732168197631836
    5. '```' → logprob: -8.107168197631836
    6. '        
' → logprob: -9.732168197631836
    7. '   ' → logprob: -11.982168197631836
    8. 'c' → logprob: -12.857168197631836
    9. '``' → logprob: -13.482168197631836
    10. '#' → logprob: -13.857168197631836

Token 2493: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006843003910034895
    2. ' len' → logprob: -5.006843090057373
    3. 'not' → logprob: -9.256842613220215
    4. ' not' → logprob: -10.506842613220215
    5. '   ' → logprob: -12.506842613220215
    6. 'c' → logprob: -14.131842613220215
    7. ' ' → logprob: -15.756842613220215
    8. '(len' → logprob: -16.13184356689453
    9. '       ' → logprob: -16.75684356689453
    10. ' candidates' → logprob: -16.88184356689453

Token 2494: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.9040898880339228e-05
    2. 'c' → logprob: -10.750028610229492
    3. '(candidate' → logprob: -12.125028610229492
    4. '(' → logprob: -13.500028610229492
    5. '(
' → logprob: -15.625028610229492
    6. ' candidates' → logprob: -16.125028610229492
    7. '==' → logprob: -16.250028610229492
    8. ' (' → logprob: -16.500028610229492
    9. '(set' → logprob: -16.500028610229492
    10. '(self' → logprob: -16.875028610229492

Token 2495: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.0001979378139367327
    2. 'and' → logprob: -8.625198364257812
    3. 'andidate' → logprob: -11.500198364257812
    4. 'an' → logprob: -12.875198364257812
    5. '_candidates' → logprob: -13.000198364257812
    6. '==' → logprob: -14.000198364257812
    7. 'a' → logprob: -14.375198364257812
    8. 'andi' → logprob: -14.625198364257812
    9. 'ands' → logprob: -14.875198364257812
    10. 'andidat' → logprob: -15.625198364257812

Token 2496: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25791141390800476
    2. '==' → logprob: -1.5079114437103271
    3. ' >' → logprob: -5.882911205291748
    4. '>' → logprob: -6.007911205291748
    5. ')' → logprob: -7.507911205291748
    6. ')==' → logprob: -9.632911682128906
    7. ' >=' → logprob: -10.257911682128906
    8. ' <' → logprob: -10.757911682128906
    9. '>=' → logprob: -11.507911682128906
    10. '=' → logprob: -11.632911682128906

Token 2497: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5594334602355957
    2. ' ==' → logprob: -1.0594334602355957
    3. '>' → logprob: -2.6844334602355957
    4. ' >' → logprob: -4.309433460235596
    5. ')' → logprob: -10.559432983398438
    6. '>=' → logprob: -11.059432983398438
    7. '=' → logprob: -11.059432983398438
    8. '1' → logprob: -11.184432983398438
    9. ' >=' → logprob: -11.559432983398438
    10. '```' → logprob: -11.934432983398438

Token 2498: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016056541353464127
    2. '1' → logprob: -4.141056537628174
    3. '2' → logprob: -10.891057014465332
    4. ' ' → logprob: -13.016057014465332
    5. '   ' → logprob: -13.766057014465332
    6. '```' → logprob: -15.266057014465332
    7. '>' → logprob: -17.516056060791016
    8. '	' → logprob: -17.516056060791016
    9. '  ' → logprob: -17.953556060791016
    10. '    ' → logprob: -17.953556060791016

Token 2499: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00862627848982811
    2. '1' → logprob: -4.758626461029053
    3. '2' → logprob: -11.383625984191895
    4. '   ' → logprob: -15.508625984191895
    5. ' ' → logprob: -16.13362693786621
    6. '```' → logprob: -16.13362693786621
    7. '``' → logprob: -18.13362693786621
    8. '
' → logprob: -18.38362693786621
    9. '>' → logprob: -18.50862693786621
    10. '-' → logprob: -19.32112693786621

Token 2500: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5839493870735168
    2. ':
' → logprob: -0.8339493870735168
    3. ':' → logprob: -5.083949565887451
    4. ':return' → logprob: -6.458949565887451
    5. 'return' → logprob: -9.458949089050293
    6. ':
' → logprob: -9.708949089050293
    7. '       ' → logprob: -10.458949089050293
    8. '               ' → logprob: -11.208949089050293
    9. '{return' → logprob: -11.458949089050293
    10. '		' → logprob: -11.833949089050293

Token 2501: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.2603901015827432e-05
    2. '       ' → logprob: -11.750022888183594
    3. '		' → logprob: -12.250022888183594
    4. '   ' → logprob: -12.750022888183594
    5. 'return' → logprob: -13.125022888183594
    6. '               ' → logprob: -13.375022888183594
    7. '{return' → logprob: -13.750022888183594
    8. '          ' → logprob: -14.375022888183594
    9. '	       ' → logprob: -14.375022888183594
    10. ':' → logprob: -15.125022888183594

Token 2502: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07913267612457275
    2. '           ' → logprob: -2.579132556915283
    3. '{return' → logprob: -9.204133033752441
    4. ' return' → logprob: -9.204133033752441
    5. '   ' → logprob: -10.954133033752441
    6. '       ' → logprob: -11.704133033752441
    7. ':return' → logprob: -11.704133033752441
    8. '	return' → logprob: -12.954133033752441
    9. '```' → logprob: -13.079133033752441
    10. '		' → logprob: -13.704133033752441

Token 2503: ' No' (ID: 3004)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -6.778209353797138e-05
    2. '           ' → logprob: -9.750067710876465
    3. ' return' → logprob: -11.750067710876465
    4. '       ' → logprob: -14.000067710876465
    5. '```' → logprob: -14.375067710876465
    6. '{return' → logprob: -16.12506866455078
    7. '
' → logprob: -17.00006866455078
    8. '   ' → logprob: -17.37506866455078
    9. '	return' → logprob: -17.75006866455078
    10. '#' → logprob: -18.00006866455078

Token 2504: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.7469444274902344
    2. ' return' → logprob: -1.7469444274902344
    3. 'return' → logprob: -1.9969444274902344
    4. 'solution' → logprob: -2.8719444274902344
    5. 'Solution' → logprob: -3.3719444274902344
    6. '```' → logprob: -3.7469444274902344
    7. ' valid' → logprob: -4.246944427490234
    8. 'Point' → logprob: -4.371944427490234
    9. ' point' → logprob: -4.371944427490234
    10. 'ne' → logprob: -4.496944427490234

Token 2505: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027729127556085587
    2. '       ' → logprob: -3.652729034423828
    3. ':
' → logprob: -7.402729034423828
    4. ':' → logprob: -7.652729034423828
    5. '
' → logprob: -9.277729034423828
    6. 'return' → logprob: -9.402729034423828
    7. '               ' → logprob: -9.777729034423828
    8. ':return' → logprob: -10.402729034423828
    9. ' return' → logprob: -10.652729034423828
    10. '```' → logprob: -11.277729034423828

Token 2506: ' patterns' (ID: 18587)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.508221447467804
    2. 'this' → logprob: -1.7582213878631592
    3. 'sign' → logprob: -2.508221387863159
    4. 'any' → logprob: -3.133221387863159
    5. 'given' → logprob: -3.133221387863159
    6. 'current' → logprob: -4.008221626281738
    7. 'these' → logprob: -4.008221626281738
    8. 'self' → logprob: -5.008221626281738
    9. 'c' → logprob: -5.633221626281738
    10. '#' → logprob: -5.758221626281738

Token 2507: ' tried' (ID: 10471)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1716611534357071
    2. '       ' → logprob: -2.421661138534546
    3. ':
' → logprob: -2.796661138534546
    4. ':' → logprob: -5.421661376953125
    5. '
' → logprob: -6.546661376953125
    6. 'return' → logprob: -6.796661376953125
    7. ' return' → logprob: -8.171661376953125
    8. ':return' → logprob: -8.171661376953125
    9. '               ' → logprob: -8.296661376953125
    10. ':
' → logprob: -10.671661376953125

Token 2508: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008957733400166035
    2. 'return' → logprob: -4.758957862854004
    3. '       ' → logprob: -8.508957862854004
    4. ' return' → logprob: -9.633957862854004
    5. '               ' → logprob: -10.258957862854004
    6. '   ' → logprob: -10.633957862854004
    7. '
' → logprob: -12.008957862854004
    8. '		' → logprob: -13.008957862854004
    9. ':return' → logprob: -13.008957862854004
    10. '{return' → logprob: -13.258957862854004

Token 2509: ' None' (ID: 4662)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024412551894783974
    2. 'None' → logprob: -3.7744126319885254
    3. '           ' → logprob: -7.024412631988525
    4. ' return' → logprob: -8.274412155151367
    5. ' None' → logprob: -11.649412155151367
    6. '```' → logprob: -12.024412155151367
    7. '               ' → logprob: -13.149412155151367
    8. '       ' → logprob: -13.399412155151367
    9. '   ' → logprob: -14.024412155151367
    10. '
' → logprob: -14.274412155151367

Token 2510: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4327729046344757
    2. '       ' → logprob: -1.0577728748321533
    3. '
' → logprob: -5.807773113250732
    4. '```' → logprob: -7.432773113250732
    5. 'return' → logprob: -8.557772636413574
    6. ':
' → logprob: -9.432772636413574
    7. '               ' → logprob: -9.557772636413574
    8. ':' → logprob: -9.682772636413574
    9. '
' → logprob: -11.557772636413574
    10. '		' → logprob: -11.557772636413574

Token 2511: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38712644577026367
    2. '           ' → logprob: -1.1371264457702637
    3. '
' → logprob: -9.137126922607422
    4. '```' → logprob: -9.637126922607422
    5. '               ' → logprob: -9.887126922607422
    6. 'return' → logprob: -11.387126922607422
    7. '   ' → logprob: -12.512126922607422
    8. '          ' → logprob: -12.512126922607422
    9. '		' → logprob: -12.637126922607422
    10. '        ' → logprob: -13.512126922607422

Token 2512: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20148614048957825
    2. '           ' → logprob: -1.7014861106872559
    3. ' return' → logprob: -10.451486587524414
    4. '{return' → logprob: -10.951486587524414
    5. '```' → logprob: -11.701486587524414
    6. '       ' → logprob: -11.701486587524414
    7. '   ' → logprob: -12.201486587524414
    8. '               ' → logprob: -12.826486587524414
    9. ':return' → logprob: -13.951486587524414
    10. '		' → logprob: -14.951486587524414

Token 2513: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.0206720617134124e-05
    2. ' None' → logprob: -11.50001049041748
    3. '
' → logprob: -17.250009536743164
    4. '(None' → logprob: -18.875009536743164
    5. '=None' → logprob: -20.125009536743164
    6. '           ' → logprob: -20.375009536743164
    7. 'No' → logprob: -20.375009536743164
    8. '_None' → logprob: -20.375009536743164
    9. '```' → logprob: -20.625009536743164
    10. '               ' → logprob: -20.875009536743164

Token 2514: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020800422877073288
    2. 'if' → logprob: -4.520800590515137
    3. 'elif' → logprob: -4.895800590515137
    4. '
' → logprob: -6.270800590515137
    5. ' if' → logprob: -9.020800590515137
    6. '        
' → logprob: -9.145800590515137
    7. '```' → logprob: -10.145800590515137
    8. 'return' → logprob: -10.145800590515137
    9. '   ' → logprob: -10.895800590515137
    10. ' elif' → logprob: -12.520800590515137

Token 2515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05998098477721214
    2. 'if' → logprob: -2.934980869293213
    3. 'elif' → logprob: -5.809980869293213
    4. ' if' → logprob: -6.309980869293213
    5. '   ' → logprob: -8.809981346130371
    6. '
' → logprob: -9.809981346130371
    7. '```' → logprob: -9.934981346130371
    8. ' elif' → logprob: -12.059981346130371
    9. 'return' → logprob: -12.559981346130371
    10. '           ' → logprob: -12.684981346130371

Token 2516: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0068329451605677605
    2. '       ' → logprob: -5.006833076477051
    3. ' if' → logprob: -9.75683307647705
    4. 'c' → logprob: -10.50683307647705
    5. '```' → logprob: -10.88183307647705
    6. 'first' → logprob: -12.13183307647705
    7. 'elif' → logprob: -13.13183307647705
    8. 'candidate' → logprob: -13.25683307647705
    9. '#' (adapté à ' #') → logprob: -13.63183307647705
    10. 'dist' → logprob: -14.25683307647705

Token 2517: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07054372876882553
    2. 'c' → logprob: -3.4455437660217285
    3. '#' → logprob: -3.5705437660217285
    4. 'unique' → logprob: -5.8205437660217285
    5. 'first' → logprob: -6.1955437660217285
    6. 'seen' → logprob: -6.9455437660217285
    7. '       ' → logprob: -7.0705437660217285
    8. 'candidate' → logprob: -7.3205437660217285
    9. 'dist' → logprob: -8.19554328918457
    10. 'uniq' → logprob: -9.94554328918457

Token 2518: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04196420684456825
    2. ' if' → logprob: -3.791964292526245
    3. '       ' → logprob: -4.541964054107666
    4. 'c' → logprob: -5.541964054107666
    5. 'len' → logprob: -6.291964054107666
    6. '   ' → logprob: -6.791964054107666
    7. 'unique' → logprob: -7.416964054107666
    8. 'dist' → logprob: -8.166964530944824
    9. '#' → logprob: -9.791964530944824
    10. 'count' → logprob: -11.541964530944824

Token 2519: ' multiple' (ID: 7598)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03813111409544945
    2. ' len' → logprob: -3.28813099861145
    3. 'c' → logprob: -10.163130760192871
    4. '   ' → logprob: -10.788130760192871
    5. 'abs' → logprob: -10.913130760192871
    6. ' ' → logprob: -12.163130760192871
    7. 'all' → logprob: -12.913130760192871
    8. ' candidates' → logprob: -13.538130760192871
    9. ' abs' → logprob: -13.913130760192871
    10. '       ' → logprob: -14.413130760192871

Token 2520: ' distinct' (ID: 16913)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.41741275787353516
    2. 'solutions' → logprob: -1.1674127578735352
    3. 'if' → logprob: -4.417412757873535
    4. ' solutions' → logprob: -4.667412757873535
    5. ' if' → logprob: -6.042412757873535
    6. ' candidates' → logprob: -6.417412757873535
    7. 'solution' → logprob: -6.917412757873535
    8. 'points' → logprob: -7.042412757873535
    9. 'candidate' → logprob: -7.542412757873535
    10. '_candidates' → logprob: -7.792412757873535

Token 2521: ' candidate' (ID: 17098)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07964877039194107
    2. 'solutions' → logprob: -3.079648733139038
    3. ' candidates' → logprob: -4.204648971557617
    4. ' solutions' → logprob: -4.329648971557617
    5. 'points' → logprob: -6.329648971557617
    6. ' points' → logprob: -7.704648971557617
    7. '_candidates' → logprob: -8.954648971557617
    8. 'candidate' → logprob: -9.954648971557617
    9. 'solution' → logprob: -11.204648971557617
    10. 'def' → logprob: -11.329648971557617

Token 2522: ' points' (ID: 5571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000491076149046421
    2. '_points' → logprob: -8.12549114227295
    3. ' points' → logprob: -9.50049114227295
    4. 'points' → logprob: -9.62549114227295
    5. '_s' → logprob: -10.75049114227295
    6. 'solutions' → logprob: -11.62549114227295
    7. ' s' → logprob: -12.00049114227295
    8. '
' → logprob: -12.25049114227295
    9. ' solutions' → logprob: -12.75049114227295
    10. '_pts' → logprob: -13.25049114227295

Token 2523: '
' (ID: 198)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5942258834838867
    2. ' >' → logprob: -0.8442258834838867
    3. '==' → logprob: -5.594225883483887
    4. ' =' → logprob: -5.844225883483887
    5. ' >=' → logprob: -5.844225883483887
    6. '       ' → logprob: -6.219225883483887
    7. '>=' → logprob: -6.219225883483887
    8. '=' → logprob: -6.594225883483887
    9. ' ==' → logprob: -6.844225883483887
    10. 'if' → logprob: -6.969225883483887

Token 2524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2484734058380127
    2. ':' → logprob: -1.4984734058380127
    3. ' =' → logprob: -1.6234734058380127
    4. '=' → logprob: -2.6234734058380127
    5. '==' → logprob: -2.7484734058380127
    6. '>' → logprob: -3.2484734058380127
    7. '[' → logprob: -3.7484734058380127
    8. ' ==' → logprob: -3.9984734058380127
    9. ' >' → logprob: -4.373473167419434
    10. 'if' → logprob: -4.623473167419434

Token 2525: ' def' (ID: 1056)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027886107563972473
    2. '       ' → logprob: -4.152885913848877
    3. ' if' → logprob: -4.527885913848877
    4. '
' → logprob: -8.027886390686035
    5. 'for' → logprob: -8.152886390686035
    6. 'eps' → logprob: -8.652886390686035
    7. 'c' → logprob: -10.277886390686035
    8. 'dist' → logprob: -10.277886390686035
    9. 'first' → logprob: -10.527886390686035
    10. 'pt' → logprob: -10.777886390686035

Token 2526: ' close' (ID: 5263)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.6112502813339233
    2. 'points' → logprob: -1.6112502813339233
    3. 'are' → logprob: -2.736250400543213
    4. 'equal' → logprob: -2.736250400543213
    5. '_are' → logprob: -3.861250400543213
    6. 'is' → logprob: -3.986250400543213
    7. '_dist' → logprob: -4.236250400543213
    8. 'almost' → logprob: -4.236250400543213
    9. '_point' → logprob: -4.361250400543213
    10. '_equal' → logprob: -4.611250400543213

Token 2527: '(p' (ID: 2407)
  Prédit: '_en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_en' → logprob: -0.8304226994514465
    2. '(c' → logprob: -1.4554226398468018
    3. '(a' → logprob: -1.9554226398468018
    4. '(' → logprob: -2.8304226398468018
    5. '(p' → logprob: -2.8304226398468018
    6. '(candidate' → logprob: -4.330422878265381
    7. '_(' → logprob: -4.705422878265381
    8. '_points' → logprob: -4.705422878265381
    9. '(pt' → logprob: -4.830422878265381
    10. '_candidates' → logprob: -5.205422878265381

Token 2528: '1' (ID: 16)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.20345787703990936
    2. 'oints' → logprob: -2.453457832336426
    3. '(a' → logprob: -2.953457832336426
    4. '1' → logprob: -3.953457832336426
    5. '(p' → logprob: -4.453457832336426
    6. 't' → logprob: -4.703457832336426
    7. 'a' → logprob: -6.203457832336426
    8. '```' → logprob: -6.328457832336426
    9. 'art' → logprob: -7.828457832336426
    10. ',' → logprob: -8.578457832336426

Token 2529: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024979883804917336
    2. '(p' → logprob: -4.149980068206787
    3. ',p' → logprob: -4.774980068206787
    4. ' ,' → logprob: -9.399979591369629
    5. '(a' → logprob: -9.399979591369629
    6. '(' → logprob: -9.524979591369629
    7. 'a' → logprob: -9.774979591369629
    8. '_,' → logprob: -10.149979591369629
    9. '1' → logprob: -10.524979591369629
    10. ',a' → logprob: -10.524979591369629

Token 2530: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.046835508197546005
    2. 'lambda' → logprob: -3.671835422515869
    3. ' Point' → logprob: -5.046835422515869
    4. 'def' → logprob: -5.171835422515869
    5. ' lambda' → logprob: -5.546835422515869
    6. 'p' → logprob: -6.171835422515869
    7. ' def' → logprob: -7.296835422515869
    8. '(lambda' → logprob: -7.671835422515869
    9. '(Point' → logprob: -7.671835422515869
    10. ' p' → logprob: -8.796835899353027

Token 2531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034358962439000607
    2. '(p' → logprob: -6.253436088562012
    3. ',p' → logprob: -6.503436088562012
    4. ' ,' → logprob: -12.628436088562012
    5. '       ' → logprob: -13.378436088562012
    6. '   ' → logprob: -14.378436088562012
    7. '```' → logprob: -14.628436088562012
    8. ' (' → logprob: -15.253436088562012
    9. 'p' → logprob: -15.253436088562012
    10. '_,' → logprob: -15.378436088562012

Token 2532: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005234121344983578
    2. ' p' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.130233764648438
    4. '    ' → logprob: -17.880233764648438
    5. '       ' → logprob: -17.880233764648438
    6. '  ' → logprob: -18.755233764648438
    7. '          ' → logprob: -19.255233764648438
    8. 'def' → logprob: -19.380233764648438
    9. '        ' → logprob: -19.505233764648438
    10. ' ' → logprob: -19.505233764648438

Token 2533: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. 'oint' → logprob: -13.00000286102295
    3. '```' → logprob: -15.87500286102295
    4. 'oints' → logprob: -17.250001907348633
    5. 'p' → logprob: -18.000001907348633
    6. 't' → logprob: -18.250001907348633
    7. 'r' → logprob: -19.000001907348633
    8. 'def' → logprob: -19.375001907348633
    9. ' p' → logprob: -19.750001907348633
    10. 'ont' → logprob: -19.750001907348633

Token 2534: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9163511991500854
    2. '):' → logprob: -1.1663511991500854
    3. '):
' → logprob: -1.6663511991500854
    4. ',' → logprob: -2.416351318359375
    5. ')' → logprob: -5.416351318359375
    6. '   ' → logprob: -5.916351318359375
    7. ':
' → logprob: -6.916351318359375
    8. '       ' → logprob: -7.541351318359375
    9. ' :' → logprob: -7.916351318359375
    10. ' ):' → logprob: -8.791351318359375

Token 2535: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.018541909754276276
    2. 'float' → logprob: -4.0185418128967285
    3. ' Point' → logprob: -8.018542289733887
    4. ')' → logprob: -10.518542289733887
    5. ' float' → logprob: -10.768542289733887
    6. 'bool' → logprob: -11.768542289733887
    7. 'point' → logprob: -13.018542289733887
    8. 'def' → logprob: -13.643542289733887
    9. '_Point' → logprob: -14.143542289733887
    10. '_point' → logprob: -14.268542289733887

Token 2536: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.959904670715332
    2. '):' → logprob: -0.959904670715332
    3. ':' → logprob: -1.834904670715332
    4. ',' → logprob: -2.959904670715332
    5. '   ' → logprob: -4.459904670715332
    6. ':
' → logprob: -6.209904670715332
    7. '):
' → logprob: -6.209904670715332
    8. '       ' → logprob: -6.584904670715332
    9. '.' → logprob: -6.834904670715332
    10. '(' → logprob: -6.959904670715332

Token 2537: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24172274768352509
    2. ':
' → logprob: -2.366722822189331
    3. '->' → logprob: -3.116722822189331
    4. ')' → logprob: -3.116722822189331
    5. '):
' → logprob: -4.491722583770752
    6. ' ->' → logprob: -5.241722583770752
    7. '(p' → logprob: -5.491722583770752
    8. '       ' → logprob: -5.616722583770752
    9. '   ' → logprob: -6.366722583770752
    10. '(' → logprob: -6.616722583770752

Token 2538: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00011093381908722222
    2. '(bool' → logprob: -9.500110626220703
    3. ' bool' → logprob: -10.250110626220703
    4. '(' → logprob: -14.625110626220703
    5. ' (' → logprob: -16.875110626220703
    6. 'float' → logprob: -17.000110626220703
    7. 'True' → logprob: -17.125110626220703
    8. '   ' → logprob: -18.000110626220703
    9. '<bool' → logprob: -18.375110626220703
    10. '	bool' → logprob: -18.750110626220703

Token 2539: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03860904276371002
    2. '(p' → logprob: -3.663609027862549
    3. '(' → logprob: -5.163609027862549
    4. ':
' → logprob: -5.913609027862549
    5. '       ' → logprob: -6.163609027862549
    6. ':' → logprob: -6.663609027862549
    7. '(
' → logprob: -8.038609504699707
    8. 'self' → logprob: -10.538609504699707
    9. '   ' → logprob: -10.538609504699707
    10. ' (' → logprob: -11.163609504699707

Token 2540: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0041199540719389915
    2. 'return' → logprob: -6.504119873046875
    3. '           ' → logprob: -7.004119873046875
    4. '   ' → logprob: -7.129119873046875
    5. ' return' → logprob: -7.379119873046875
    6. '(' → logprob: -9.754119873046875
    7. '        ' → logprob: -10.254119873046875
    8. '      ' → logprob: -10.379119873046875
    9. '(abs' → logprob: -10.379119873046875
    10. '               ' → logprob: -10.629119873046875

Token 2541: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009355347603559494
    2. '       ' → logprob: -4.759355545043945
    3. ' return' → logprob: -7.759355545043945
    4. '   ' → logprob: -9.009355545043945
    5. 'abs' → logprob: -9.009355545043945
    6. '
' → logprob: -10.134355545043945
    7. 'import' → logprob: -10.759355545043945
    8. '           ' → logprob: -12.634355545043945
    9. '```' → logprob: -13.134355545043945
    10. 'def' → logprob: -13.634355545043945

Token 2542: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.019938509911298752
    2. 'math' → logprob: -4.0199384689331055
    3. '(abs' → logprob: -6.7699384689331055
    4. ' abs' → logprob: -7.5199384689331055
    5. '   ' → logprob: -9.519938468933105
    6. '(math' → logprob: -11.019938468933105
    7. ' math' → logprob: -11.894938468933105
    8. '       ' → logprob: -15.394938468933105
    9. '           ' → logprob: -15.644938468933105
    10. '(' → logprob: -16.269939422607422

Token 2543: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.1008713702030946e-06
    2. '((' → logprob: -13.250001907348633
    3. 'p' → logprob: -16.000001907348633
    4. '(' → logprob: -16.250001907348633
    5. '(
' → logprob: -17.000001907348633
    6. ' (' → logprob: -19.875001907348633
    7. '   ' → logprob: -21.875001907348633
    8. '(self' → logprob: -22.000001907348633
    9. '```' → logprob: -22.375001907348633
    10. ' p' → logprob: -23.250001907348633

Token 2544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -19.75
    3. '2' → logprob: -20.125
    4. '(p' → logprob: -21.75
    5. '
' → logprob: -22.75
    6. 'oints' → logprob: -22.875
    7. '{
' → logprob: -23.375
    8. '{' → logprob: -23.5
    9. 'oint' → logprob: -23.625
    10. '[' → logprob: -23.625

Token 2545: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.069664333248511e-05
    2. '.' → logprob: -10.875020980834961
    3. ' .' → logprob: -13.875020980834961
    4. '```' → logprob: -14.875020980834961
    5. 'x' → logprob: -15.625020980834961
    6. '
' → logprob: -16.75002098083496
    7. '.
' → logprob: -16.75002098083496
    8. '[' → logprob: -17.25002098083496
    9. '1' → logprob: -17.62502098083496
    10. ').' → logprob: -17.75002098083496

Token 2546: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.387668639421463
    2. '-' → logprob: -1.1376686096191406
    3. '-p' → logprob: -7.137668609619141
    4. '```' → logprob: -13.51266860961914
    5. '<=' → logprob: -15.38766860961914
    6. '[' → logprob: -15.51266860961914
    7. 'p' → logprob: -15.51266860961914
    8. ' ' → logprob: -15.63766860961914
    9. ' <=' → logprob: -16.13766860961914
    10. ' p' → logprob: -16.63766860961914

Token 2547: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.941850526549388e-06
    2. ' p' → logprob: -11.750007629394531
    3. '   ' → logprob: -20.50000762939453
    4. '	p' → logprob: -22.50000762939453
    5. '       ' → logprob: -22.50000762939453
    6. '  ' → logprob: -23.00000762939453
    7. '(p' → logprob: -23.12500762939453
    8. '    ' → logprob: -23.37500762939453
    9. '           ' → logprob: -23.50000762939453
    10. ' ' → logprob: -23.50000762939453

Token 2548: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'p' → logprob: -18.125
    3. '```' → logprob: -19.5
    4. '₂' → logprob: -20.0
    5. ' p' → logprob: -20.625
    6. '۲' → logprob: -21.375
    7. '   ' → logprob: -21.5
    8. '２' → logprob: -21.625
    9. '
' → logprob: -21.75
    10. '.p' → logprob: -21.75

Token 2549: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.282920129597187e-05
    2. '.' → logprob: -11.500012397766113
    3. ' .' → logprob: -13.750012397766113
    4. '.y' → logprob: -14.375012397766113
    5. 'x' → logprob: -14.875012397766113
    6. '```' → logprob: -14.875012397766113
    7. ').' → logprob: -16.25001335144043
    8. '[' → logprob: -16.62501335144043
    9. '0' → logprob: -16.87501335144043
    10. '.
' → logprob: -17.25001335144043

Token 2550: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004998209420591593
    2. ')<' → logprob: -5.879998207092285
    3. ')<=' → logprob: -6.129998207092285
    4. 'p' → logprob: -11.879998207092285
    5. '<p' → logprob: -13.129998207092285
    6. ')p' → logprob: -13.379998207092285
    7. ')+' → logprob: -13.629998207092285
    8. '```' → logprob: -13.879998207092285
    9. ')
' → logprob: -15.129998207092285
    10. ')**' → logprob: -15.504998207092285

Token 2551: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.1669615507125854
    2. '<' → logprob: -1.2919615507125854
    3. ' <' → logprob: -1.2919615507125854
    4. '<=' → logprob: -2.041961669921875
    5. ')' → logprob: -5.541961669921875
    6. '```' → logprob: -5.791961669921875
    7. '<p' → logprob: -6.666961669921875
    8. ')<=' → logprob: -7.041961669921875
    9. 'p' → logprob: -9.541961669921875
    10. '[' → logprob: -9.791961669921875

Token 2552: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.625004768371582
    4. '5' → logprob: -17.250003814697266
    5. '2' → logprob: -17.500003814697266
    6. '(' → logprob: -18.250003814697266
    7. '           ' → logprob: -18.750003814697266
    8. '       ' → logprob: -18.750003814697266
    9. '
' → logprob: -19.125003814697266
    10. '```' → logprob: -19.500003814697266

Token 2553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -15.125000953674316
    4. '2' → logprob: -15.750000953674316
    5. '5' → logprob: -16.125001907348633
    6. '(' → logprob: -16.875001907348633
    7. '0' → logprob: -17.750001907348633
    8. '           ' → logprob: -18.500001907348633
    9. '3' → logprob: -18.625001907348633
    10. '       ' → logprob: -19.000001907348633

Token 2554: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00029875844484195113
    2. '-' → logprob: -8.125298500061035
    3. '.' → logprob: -13.875298500061035
    4. '-e' → logprob: -13.875298500061035
    5. '```' → logprob: -15.250298500061035
    6. '.e' → logprob: -15.250298500061035
    7. '0' → logprob: -15.500298500061035
    8. '1' → logprob: -16.62529945373535
    9. '
' → logprob: -17.75029945373535
    10. '``' → logprob: -18.12529945373535

Token 2555: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.75
    3. 'e' → logprob: -16.75
    4. '7' → logprob: -16.875
    5. '``' → logprob: -17.25
    6. '{-' → logprob: -18.0
    7. '   ' → logprob: -18.375
    8. ' -' → logprob: -18.5
    9. '
' → logprob: -18.875
    10. '-​' → logprob: -18.875

Token 2556: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.04016105458140373
    2. '9' → logprob: -4.1651611328125
    3. '8' → logprob: -4.5401611328125
    4. '10' → logprob: -4.6651611328125
    5. '07' → logprob: -6.2901611328125
    6. '12' → logprob: -6.6651611328125
    7. '11' → logprob: -7.7901611328125
    8. '14' → logprob: -9.4151611328125
    9. '13' → logprob: -9.9151611328125
    10. '6' → logprob: -10.4151611328125

Token 2557: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.06252337992191315
    2. ' and' → logprob: -2.812523365020752
    3. '       ' → logprob: -7.812523365020752
    4. '           ' → logprob: -9.18752384185791
    5. 'def' → logprob: -10.31252384185791
    6. '          ' → logprob: -12.06252384185791
    7. '   ' → logprob: -12.31252384185791
    8. '      ' → logprob: -13.43752384185791
    9. 'or' → logprob: -14.06252384185791
    10. '               ' → logprob: -14.31252384185791

Token 2558: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0002614550176076591
    2. ' abs' → logprob: -8.250261306762695
    3. '       ' → logprob: -17.250261306762695
    4. '           ' → logprob: -17.500261306762695
    5. '   ' → logprob: -18.500261306762695
    6. '(abs' → logprob: -19.625261306762695
    7. '        ' → logprob: -20.625261306762695
    8. '.abs' → logprob: -21.000261306762695
    9. '          ' → logprob: -21.250261306762695
    10. '     ' → logprob: -21.375261306762695

Token 2559: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. '(
' → logprob: -16.5
    4. ' (' → logprob: -17.0
    5. '   ' → logprob: -18.875
    6. '((' → logprob: -19.375
    7. 'p' → logprob: -19.625
    8. 'def' → logprob: -20.625
    9. '       ' → logprob: -21.25
    10. '           ' → logprob: -21.625

Token 2560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006725549232214689
    2. '(p' → logprob: -5.006725311279297
    3. '.p' → logprob: -11.756725311279297
    4. '(' → logprob: -13.881725311279297
    5. 'p' → logprob: -15.006725311279297
    6. ' p' → logprob: -15.006725311279297
    7. '
' → logprob: -15.256725311279297
    8. '(
' → logprob: -16.006725311279297
    9. ')' → logprob: -16.506725311279297
    10. '[p' → logprob: -16.756725311279297

Token 2561: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.5764572620391846
    2. '.p' → logprob: -0.8264572620391846
    3. '.' → logprob: -8.826457023620605
    4. 'p' → logprob: -8.951457023620605
    5. '.py' → logprob: -9.201457023620605
    6. '.x' → logprob: -9.951457023620605
    7. '[' → logprob: -10.576457023620605
    8. 'y' → logprob: -11.076457023620605
    9. ')' → logprob: -11.701457023620605
    10. '```' → logprob: -11.701457023620605

Token 2562: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3209969699382782
    2. '-' → logprob: -1.3209969997406006
    3. '(p' → logprob: -4.9459967613220215
    4. '-p' → logprob: -7.4459967613220215
    5. 'p' → logprob: -12.57099723815918
    6. '(' → logprob: -13.19599723815918
    7. ' ' → logprob: -14.32099723815918
    8. ' p' → logprob: -14.32099723815918
    9. '   ' → logprob: -14.57099723815918
    10. '<p' → logprob: -14.82099723815918

Token 2563: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005532711511477828
    2. ' p' → logprob: -7.500553131103516
    3. '   ' → logprob: -15.375553131103516
    4. '       ' → logprob: -17.000553131103516
    5. '	p' → logprob: -18.000553131103516
    6. '           ' → logprob: -18.125553131103516
    7. '<p' → logprob: -18.125553131103516
    8. ' ' → logprob: -18.125553131103516
    9. '    ' → logprob: -18.250553131103516
    10. '(p' → logprob: -18.375553131103516

Token 2564: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00325661594979465
    2. '.y' → logprob: -5.878256797790527
    3. '.p' → logprob: -8.503256797790527
    4. '.' → logprob: -8.503256797790527
    5. '1' → logprob: -10.503256797790527
    6. 'p' → logprob: -11.128256797790527
    7. '7' → logprob: -13.753256797790527
    8. '```' → logprob: -14.128256797790527
    9. '[' → logprob: -14.253256797790527
    10. 'y' → logprob: -14.753256797790527

Token 2565: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.08086994290351868
    2. '-' → logprob: -3.3308699131011963
    3. '.' → logprob: -3.4558699131011963
    4. 'y' → logprob: -5.580870151519775
    5. '7' → logprob: -6.205870151519775
    6. '-y' → logprob: -6.330870151519775
    7. '<' → logprob: -6.580870151519775
    8. '.py' → logprob: -8.330869674682617
    9. ')' → logprob: -8.455869674682617
    10. '1' → logprob: -9.080869674682617

Token 2566: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001478796184528619
    2. ')<' → logprob: -9.000147819519043
    3. '<' → logprob: -11.500147819519043
    4. ' <' → logprob: -11.750147819519043
    5. '   ' → logprob: -12.500147819519043
    6. ' )' → logprob: -13.250147819519043
    7. 'def' → logprob: -15.000147819519043
    8. '[' → logprob: -16.00014877319336
    9. '       ' → logprob: -16.25014877319336
    10. ' ' → logprob: -16.62514877319336

Token 2567: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2519958019256592
    2. ' <' → logprob: -1.5019958019256592
    3. '<p' → logprob: -10.126996040344238
    4. '[' → logprob: -11.876996040344238
    5. ')' → logprob: -12.251996040344238
    6. '```' → logprob: -12.876996040344238
    7. '()<' → logprob: -13.001996040344238
    8. ')<' → logprob: -13.376996040344238
    9. ' ' → logprob: -13.751996040344238
    10. '1' → logprob: -14.126996040344238

Token 2568: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.750710487365723
    4. '
' → logprob: -18.125709533691406
    5. '           ' → logprob: -18.250709533691406
    6. '```' → logprob: -19.125709533691406
    7. '7' → logprob: -19.375709533691406
    8. '       ' → logprob: -19.375709533691406
    9. '0' → logprob: -19.625709533691406
    10. '  ' → logprob: -19.875709533691406

Token 2569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -12.000007629394531
    3. '   ' → logprob: -14.375007629394531
    4. '0' → logprob: -15.250007629394531
    5. '
' → logprob: -15.562507629394531
    6. '(' → logprob: -15.812507629394531
    7. '7' → logprob: -16.00000762939453
    8. '```' → logprob: -16.43750762939453
    9. '           ' → logprob: -16.68750762939453
    10. '       ' → logprob: -16.81250762939453

Token 2570: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00021021578868385404
    2. 'e' → logprob: -8.50020980834961
    3. '```' → logprob: -12.62520980834961
    4. '7' → logprob: -13.12520980834961
    5. '0' → logprob: -14.62520980834961
    6. '``' → logprob: -15.37520980834961
    7. '{-' → logprob: -16.00020980834961
    8. '   ' → logprob: -16.00020980834961
    9. '
' → logprob: -16.25020980834961
    10. '1' → logprob: -16.75020980834961

Token 2571: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. '7' → logprob: -15.25
    3. '```' → logprob: -16.75
    4. '{-' → logprob: -18.375
    5. '−' → logprob: -18.5
    6. '``' → logprob: -19.375
    7. '-​' → logprob: -19.625
    8. ' -' → logprob: -19.75
    9. '-
' → logprob: -19.875
    10. '   ' → logprob: -19.875

Token 2572: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.319370302458992e-06
    2. '07' → logprob: -12.750005722045898
    3. '14' → logprob: -13.125005722045898
    4. '```' → logprob: -15.500005722045898
    5. '10' → logprob: -16.1250057220459
    6. '12' → logprob: -17.2500057220459
    7. '8' → logprob: -17.5000057220459
    8. '9' → logprob: -17.7500057220459
    9. '15' → logprob: -17.7500057220459
    10. '11' → logprob: -19.0000057220459

Token 2573: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058798689395189285
    2. '
' → logprob: -2.9337987899780273
    3. ')' → logprob: -6.558798789978027
    4. '   ' → logprob: -7.558798789978027
    5. ':
' → logprob: -7.558798789978027
    6. ')
' → logprob: -7.933798789978027
    7. '           ' → logprob: -8.058798789978027
    8. '        
' → logprob: -8.558798789978027
    9. ',' → logprob: -8.808798789978027
    10. ' if' → logprob: -9.308798789978027

Token 2574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10004229843616486
    2. 'if' → logprob: -2.4750423431396484
    3. '
' → logprob: -5.100042343139648
    4. ' if' → logprob: -6.100042343139648
    5. '```' → logprob: -6.475042343139648
    6. '   ' → logprob: -6.850042343139648
    7. '        
' → logprob: -9.975042343139648
    8. '    
' → logprob: -11.350042343139648
    9. '``' → logprob: -11.475042343139648
    10. '           ' → logprob: -12.100042343139648

Token 2575: ' unique' (ID: 5746)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011127286590635777
    2. '       ' → logprob: -4.511127471923828
    3. ' if' → logprob: -10.136127471923828
    4. 'c' → logprob: -10.761127471923828
    5. 'for' → logprob: -11.761127471923828
    6. '```' → logprob: -11.761127471923828
    7. 'seen' → logprob: -14.136127471923828
    8. 'unique' (adapté à ' unique') → logprob: -14.261127471923828
    9. 'duplicates' → logprob: -14.761127471923828
    10. '   ' → logprob: -14.761127471923828

Token 2576: '_pts' (ID: 111072)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.5429121851921082
    2. '_' → logprob: -1.042912244796753
    3. '_c' → logprob: -3.667912244796753
    4. '_candidate' → logprob: -4.042912006378174
    5. '_points' → logprob: -4.292912006378174
    6. 's' → logprob: -5.292912006378174
    7. '=' → logprob: -6.292912006378174
    8. ' =' → logprob: -6.417912006378174
    9. '_point' → logprob: -8.292912483215332
    10. ')' → logprob: -8.792912483215332

Token 2577: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2299332320690155
    2. ' =' → logprob: -1.604933261871338
    3. '=[]' → logprob: -5.479933261871338
    4. 's' → logprob: -8.60493278503418
    5. '=[]
' → logprob: -8.97993278503418
    6. ':' → logprob: -11.47993278503418
    7. '=set' → logprob: -11.85493278503418
    8. '=[' → logprob: -12.97993278503418
    9. '=[]
' → logprob: -13.22993278503418
    10. '   ' → logprob: -13.22993278503418

Token 2578: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.0029504820704460144
    2. '[c' → logprob: -6.502950668334961
    3. '[]' → logprob: -6.752950668334961
    4. '[]

' → logprob: -8.252950668334961
    5. '[' → logprob: -11.002950668334961
    6. ' []
' → logprob: -13.252950668334961
    7. '[p' → logprob: -14.377950668334961
    8. '[s' → logprob: -16.75295066833496
    9. '[
' → logprob: -17.37795066833496
    10. '[i' → logprob: -18.00295066833496

Token 2579: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013790750876069069
    2. '       ' → logprob: -4.513790607452393
    3. ' for' → logprob: -6.013790607452393
    4. '           ' → logprob: -8.51379108428955
    5. '```' → logprob: -9.88879108428955
    6. 'if' → logprob: -11.01379108428955
    7. '   ' → logprob: -11.38879108428955
    8. '
' → logprob: -11.76379108428955
    9. '               ' → logprob: -12.26379108428955
    10. '	for' → logprob: -14.51379108428955

Token 2580: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.2729995988775045e-06
    2. '       ' → logprob: -12.250006675720215
    3. ' for' → logprob: -13.500006675720215
    4. '           ' → logprob: -17.0000057220459
    5. '```' → logprob: -17.2500057220459
    6. '   ' → logprob: -18.0000057220459
    7. '	for' → logprob: -19.2500057220459
    8. '
' → logprob: -19.3750057220459
    9. 'def' → logprob: -19.8750057220459
    10. 'found' → logprob: -20.2500057220459

Token 2581: ' c' (ID: 274)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.3019982874393463
    2. 'c' → logprob: -2.0519983768463135
    3. 'cand' → logprob: -2.0519983768463135
    4. 'candidate' → logprob: -5.801998138427734
    5. 'p' → logprob: -7.301998138427734
    6. ' pt' → logprob: -12.426998138427734
    7. 'new' → logprob: -13.426998138427734
    8. 'can' → logprob: -13.551998138427734
    9. 'cp' → logprob: -13.551998138427734
    10. ' cand' → logprob: -14.551998138427734

Token 2582: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12735451757907867
    2. ' in' → logprob: -2.127354621887207
    3. 'and' → logprob: -8.502354621887207
    4. 'andidate' → logprob: -8.752354621887207
    5. 'c' → logprob: -9.877354621887207
    6. ' ' → logprob: -12.502354621887207
    7. '   ' → logprob: -12.627354621887207
    8. 'candidate' → logprob: -12.752354621887207
    9. '  ' → logprob: -13.502354621887207
    10. '```' → logprob: -14.377354621887207

Token 2583: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.60414821645827e-06
    2. ' candidates' → logprob: -12.375004768371582
    3. 'candidate' → logprob: -16.250003814697266
    4. '   ' → logprob: -16.875003814697266
    5. 'cand' → logprob: -17.875003814697266
    6. 'andidates' → logprob: -18.000003814697266
    7. '_candidates' → logprob: -18.125003814697266
    8. '[c' → logprob: -18.625003814697266
    9. '
' → logprob: -19.125003814697266
    10. '	c' → logprob: -19.250003814697266

Token 2584: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0321015939116478
    2. ':' → logprob: -3.782101631164551
    3. '           ' → logprob: -4.782101631164551
    4. '       ' → logprob: -8.03210163116455
    5. '   ' → logprob: -10.28210163116455
    6. 'if' → logprob: -11.03210163116455
    7. '):
' → logprob: -11.15710163116455
    8. '               ' → logprob: -11.28210163116455
    9. ' if' → logprob: -11.65710163116455
    10. '[' → logprob: -12.15710163116455

Token 2585: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.526570384972729e-05
    2. ' if' → logprob: -10.250055313110352
    3. 'if' → logprob: -11.500055313110352
    4. '   ' → logprob: -12.875055313110352
    5. '       ' → logprob: -12.875055313110352
    6. '               ' → logprob: -13.750055313110352
    7. '```' → logprob: -14.250055313110352
    8. ' found' → logprob: -14.375055313110352
    9. '	       ' → logprob: -15.125055313110352
    10. 'found' → logprob: -15.125055313110352

Token 2586: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6767066717147827
    2. 'found' → logprob: -0.9267066717147827
    3. 'if' (adapté à ' if') → logprob: -2.6767067909240723
    4. '   ' → logprob: -4.426706790924072
    5. ' found' → logprob: -4.426706790924072
    6. ' if' → logprob: -6.051706790924072
    7. '       ' → logprob: -7.801706790924072
    8. 'for' → logprob: -8.926706314086914
    9. 'is' → logprob: -9.801706314086914
    10. '_found' → logprob: -9.801706314086914

Token 2587: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.014425676316022873
    2. 'all' → logprob: -4.264425754547119
    3. ' not' → logprob: -8.264425277709961
    4. ' all' → logprob: -12.889425277709961
    5. '   ' → logprob: -13.764425277709961
    6. '           ' → logprob: -14.139425277709961
    7. '       ' → logprob: -15.639425277709961
    8. '               ' → logprob: -16.38942527770996
    9. 'True' → logprob: -16.63942527770996
    10. '(not' → logprob: -17.26442527770996

Token 2588: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -6.704273118884885e-07
    2. ' any' → logprob: -14.750000953674316
    3. '(any' → logprob: -15.500000953674316
    4. 'unique' → logprob: -21.125
    5. '_any' → logprob: -21.375
    6. '.any' → logprob: -21.625
    7. 'anything' → logprob: -21.875
    8. '
' → logprob: -22.125
    9. ':any' → logprob: -23.375
    10. 'Any' → logprob: -24.125

Token 2589: '(close' (ID: 147863)
  Prédit: 'close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'close' → logprob: -7.505351095460355e-05
    2. '(close' → logprob: -9.750075340270996
    3. ' close' → logprob: -11.000075340270996
    4. '	close' → logprob: -19.00007438659668
    5. '
' → logprob: -19.25007438659668
    6. 'closest' → logprob: -19.75007438659668
    7. '(' → logprob: -19.87507438659668
    8. '(
' → logprob: -20.12507438659668
    9. 'clos' → logprob: -20.75007438659668
    10. '```' → logprob: -21.12507438659668

Token 2590: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0003278368094470352
    2. '(u' → logprob: -8.250328063964844
    3. 'c' → logprob: -10.000328063964844
    4. '(existing' → logprob: -11.625328063964844
    5. 'u' → logprob: -11.750328063964844
    6. 'existing' → logprob: -13.250328063964844
    7. '(' → logprob: -13.875328063964844
    8. '(p' → logprob: -14.375328063964844
    9. '(cp' → logprob: -15.000328063964844
    10. '(e' → logprob: -15.500328063964844

Token 2591: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2258787453174591
    2. ',' → logprob: -1.7258787155151367
    3. '(p' → logprob: -4.600878715515137
    4. '(u' → logprob: -4.850878715515137
    5. 'c' → logprob: -5.850878715515137
    6. ',c' → logprob: -6.725878715515137
    7. 'u' → logprob: -7.725878715515137
    8. '(d' → logprob: -7.850878715515137
    9. 'p' → logprob: -8.100878715515137
    10. ',u' → logprob: -8.475878715515137

Token 2592: ' up' (ID: 869)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03141540288925171
    2. 'up' → logprob: -3.5314154624938965
    3. 'p' → logprob: -7.1564154624938965
    4. 'existing' → logprob: -7.7814154624938965
    5. 'pt' → logprob: -8.281414985656738
    6. 'x' → logprob: -9.656414985656738
    7. 'c' → logprob: -9.656414985656738
    8. 'other' → logprob: -10.906414985656738
    9. 'uc' → logprob: -11.281414985656738
    10. 'ut' → logprob: -11.781414985656738

Token 2593: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05088820308446884
    2. 't' → logprob: -3.0508882999420166
    3. 'p' → logprob: -7.1758880615234375
    4. '(p' → logprob: -7.4258880615234375
    5. 'c' → logprob: -8.675888061523438
    6. '(c' → logprob: -8.925888061523438
    7. ' for' → logprob: -9.050888061523438
    8. '(up' → logprob: -9.175888061523438
    9. 'for' → logprob: -9.300888061523438
    10. '(u' → logprob: -9.800888061523438

Token 2594: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16025835275650024
    2. ' for' → logprob: -1.9102582931518555
    3. ')' → logprob: -10.660258293151855
    4. '(c' → logprob: -12.535258293151855
    5. '       ' → logprob: -13.410258293151855
    6. '
' → logprob: -13.660258293151855
    7. '```' → logprob: -13.660258293151855
    8. '   ' → logprob: -13.785258293151855
    9. '           ' → logprob: -14.285258293151855
    10. 'up' → logprob: -14.785258293151855

Token 2595: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -4.320199877838604e-07
    2. ' up' → logprob: -14.75
    3. '
' → logprob: -18.125
    4. '	up' → logprob: -20.25
    5. '(up' → logprob: -21.375
    6. 'ups' → logprob: -22.125
    7. '   ' → logprob: -22.375
    8. 'u' → logprob: -22.625
    9. 'upp' → logprob: -22.75
    10. 'uph' → logprob: -22.875

Token 2596: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3132626414299011
    2. ' in' → logprob: -1.313262701034546
    3. 'unique' → logprob: -15.063262939453125
    4. 'up' → logprob: -15.438262939453125
    5. ' ' → logprob: -15.688262939453125
    6. '
' → logprob: -15.813262939453125
    7. 'u' → logprob: -16.813262939453125
    8. '   ' → logprob: -16.938262939453125
    9. '  ' → logprob: -17.563262939453125
    10. 'n' → logprob: -18.563262939453125

Token 2597: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -6.704273118884885e-07
    2. ' unique' → logprob: -14.250000953674316
    3. '(unique' → logprob: -23.375
    4. '
' → logprob: -24.25
    5. '.unique' → logprob: -24.625
    6. '   ' → logprob: -25.0
    7. 'uniq' → logprob: -25.125
    8. 'uni' → logprob: -26.375
    9. '_unique' → logprob: -26.625
    10. ' ' → logprob: -27.625

Token 2598: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.00026300468016415834
    2. 'pts' → logprob: -9.125263214111328
    3. 't' → logprob: -9.375263214111328
    4. 'unique' → logprob: -10.250263214111328
    5. 's' → logprob: -11.500263214111328
    6. 'cts' → logprob: -11.875263214111328
    7. 'ts' → logprob: -12.125263214111328
    8. '
' → logprob: -12.625263214111328
    9. 'Pts' → logprob: -12.625263214111328
    10. 'c' → logprob: -13.875263214111328

Token 2599: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0024567493237555027
    2. ':
' → logprob: -6.2524566650390625
    3. '       ' → logprob: -8.377456665039062
    4. '           ' → logprob: -9.252456665039062
    5. '):' → logprob: -9.627456665039062
    6. '               ' → logprob: -9.627456665039062
    7. ':' → logprob: -9.877456665039062
    8. '   ' → logprob: -12.502456665039062
    9. ']:
' → logprob: -12.502456665039062
    10. 'unique' → logprob: -12.752456665039062

Token 2600: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00023679454170633107
    2. 'unique' → logprob: -9.000236511230469
    3. '           ' → logprob: -9.250236511230469
    4. '       ' → logprob: -12.000236511230469
    5. ' unique' → logprob: -12.125236511230469
    6. '   ' → logprob: -12.875236511230469
    7. '                   ' → logprob: -13.000236511230469
    8. '              ' → logprob: -14.750236511230469
    9. '(unique' → logprob: -16.12523651123047
    10. '                       ' → logprob: -16.25023651123047

Token 2601: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' (adapté à ' unique') → logprob: -0.0019063818035647273
    2. '               ' → logprob: -7.251906394958496
    3. ' unique' → logprob: -7.251906394958496
    4. '           ' → logprob: -7.751906394958496
    5. '                   ' → logprob: -10.126906394958496
    6. '   ' → logprob: -11.126906394958496
    7. '       ' → logprob: -13.501906394958496
    8. '(unique' → logprob: -15.251906394958496
    9. 'uniq' → logprob: -15.626906394958496
    10. '.unique' → logprob: -16.12690544128418

Token 2602: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -5.512236498361744e-07
    2. '_points' → logprob: -15.000000953674316
    3. 's' → logprob: -16.625
    4. '```' → logprob: -17.0
    5. 'Pts' → logprob: -17.625
    6. 'pts' → logprob: -17.625
    7. '_pt' → logprob: -17.75
    8. '_ts' → logprob: -18.625
    9. '_p' → logprob: -18.75
    10. '_ps' → logprob: -19.375

Token 2603: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.5954712075181305e-05
    2. '.' → logprob: -10.250036239624023
    3. '.app' → logprob: -15.125036239624023
    4. 'append' → logprob: -15.500036239624023
    5. '.extend' → logprob: -17.500036239624023
    6. '.Append' → logprob: -18.500036239624023
    7. '.add' → logprob: -19.000036239624023
    8. '.ap' → logprob: -19.250036239624023
    9. '.insert' → logprob: -19.500036239624023
    10. '.push' → logprob: -19.875036239624023

Token 2604: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.7697225252486533e-06
    2. 'c' → logprob: -12.500003814697266
    3. '(' → logprob: -19.000003814697266
    4. '(
' → logprob: -20.750003814697266
    5. '	c' → logprob: -22.250003814697266
    6. ' (' → logprob: -22.250003814697266
    7. ')c' → logprob: -22.750003814697266
    8. ' c' → logprob: -23.250003814697266
    9. '©' → logprob: -23.750003814697266
    10. '=c' → logprob: -24.500003814697266

Token 2605: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014966767048463225
    2. ':' → logprob: -9.875149726867676
    3. '):' → logprob: -9.875149726867676
    4. '       ' → logprob: -11.500149726867676
    5. '<|end|>' → logprob: -11.500149726867676
    6. '.' → logprob: -11.875149726867676
    7. '):
' → logprob: -12.375149726867676
    8. '           ' → logprob: -12.375149726867676
    9. ')
' → logprob: -12.625149726867676
    10. '               ' → logprob: -13.250149726867676

Token 2606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004234750755131245
    2. 'if' → logprob: -5.754234790802002
    3. ' if' → logprob: -7.504234790802002
    4. '```' → logprob: -7.629234790802002
    5. '   ' → logprob: -11.129234313964844
    6. '
' → logprob: -13.254234313964844
    7. '           ' → logprob: -14.254234313964844
    8. '<|end|>' → logprob: -14.379234313964844
    9. 'return' → logprob: -14.879234313964844
    10. '``' → logprob: -14.879234313964844

Token 2607: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001518430421128869
    2. '       ' → logprob: -6.501518249511719
    3. ' if' → logprob: -11.751518249511719
    4. '```' → logprob: -12.251518249511719
    5. 'return' → logprob: -12.626518249511719
    6. '   ' → logprob: -16.50151824951172
    7. '
' → logprob: -18.37651824951172
    8. '``' → logprob: -19.00151824951172
    9. 'If' → logprob: -19.50151824951172
    10. '           ' → logprob: -19.75151824951172

Token 2608: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007099286303855479
    2. ' len' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.750709533691406
    4. '       ' → logprob: -17.750709533691406
    5. '(len' → logprob: -18.500709533691406
    6. '	len' → logprob: -19.375709533691406
    7. '           ' → logprob: -21.750709533691406
    8. ' ' → logprob: -22.875709533691406
    9. '[len' → logprob: -22.875709533691406
    10. '=len' → logprob: -23.375709533691406

Token 2609: '(unique' (ID: 110064)
  Prédit: '(unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(unique' → logprob: -4.0722858102526516e-05
    2. 'unique' → logprob: -10.125041007995605
    3. '==' → logprob: -15.500041007995605
    4. '(' → logprob: -15.625041007995605
    5. ' (' → logprob: -17.37504005432129
    6. '```' → logprob: -17.50004005432129
    7. ' unique' → logprob: -17.87504005432129
    8. '``' → logprob: -18.12504005432129
    9. '_unique' → logprob: -18.37504005432129
    10. '>' → logprob: -18.50004005432129

Token 2610: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.875
    3. 's' → logprob: -16.5
    4. '
' → logprob: -17.625
    5. '(' → logprob: -18.0
    6. ')' → logprob: -18.0
    7. '_ts' → logprob: -18.25
    8. '_ps' → logprob: -18.75
    9. 'Pts' → logprob: -18.875
    10. '\' → logprob: -19.125

Token 2611: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.17290961742401123
    2. '==' → logprob: -2.797909736633301
    3. ' >' → logprob: -2.922909736633301
    4. ' ==' → logprob: -3.422909736633301
    5. ')' → logprob: -4.547909736633301
    6. '<' → logprob: -7.547909736633301
    7. ' <' → logprob: -8.7979097366333
    8. ')>' → logprob: -9.1729097366333
    9. '()>' → logprob: -10.5479097366333
    10. ')==' → logprob: -11.2979097366333

Token 2612: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08212555944919586
    2. ' >' → logprob: -2.707125663757324
    3. '==' → logprob: -4.832125663757324
    4. ' ==' → logprob: -6.207125663757324
    5. '<' → logprob: -6.332125663757324
    6. ' <' → logprob: -8.207125663757324
    7. ' !=' → logprob: -10.332125663757324
    8. '!=' → logprob: -11.082125663757324
    9. '1' → logprob: -11.832125663757324
    10. '   ' → logprob: -12.207125663757324

Token 2613: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -19.75
    4. '2' → logprob: -20.875
    5. '=' → logprob: -21.25
    6. '```' → logprob: -22.25
    7. '１' → logprob: -22.375
    8. '
' → logprob: -22.375
    9. '  ' → logprob: -23.125
    10. '۱' → logprob: -23.375

Token 2614: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '
' → logprob: -19.125
    4. '   ' → logprob: -20.875
    5. '```' → logprob: -20.875
    6. '2' → logprob: -21.25
    7. '１' → logprob: -21.5
    8. '۱' → logprob: -22.0
    9. '0' → logprob: -22.75
    10. '01' → logprob: -23.75

Token 2615: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3912046253681183
    2. ':' → logprob: -1.266204595565796
    3. ':return' → logprob: -3.766204595565796
    4. '           ' → logprob: -4.016204833984375
    5. 'return' → logprob: -7.391204833984375
    6. ' return' → logprob: -11.016204833984375
    7. ':
' → logprob: -11.141204833984375
    8. '       ' → logprob: -11.766204833984375
    9. '          ' → logprob: -11.891204833984375
    10. '):
' → logprob: -12.016204833984375

Token 2616: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022833107504993677
    2. 'return' → logprob: -9.125227928161621
    3. '```' → logprob: -9.250227928161621
    4. '   ' → logprob: -11.375227928161621
    5. '               ' → logprob: -12.500227928161621
    6. '       ' → logprob: -12.750227928161621
    7. ':
' → logprob: -13.750227928161621
    8. ':return' → logprob: -13.875227928161621
    9. '		' → logprob: -14.000227928161621
    10. '
' → logprob: -14.375227928161621

Token 2617: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12705294787883759
    2. '           ' → logprob: -2.1270530223846436
    3. ' return' → logprob: -9.377053260803223
    4. '   ' → logprob: -10.627053260803223
    5. '               ' → logprob: -12.002053260803223
    6. '       ' → logprob: -12.377053260803223
    7. '```' → logprob: -12.877053260803223
    8. '
' → logprob: -14.002053260803223
    9. '{return' → logprob: -14.002053260803223
    10. ':return' → logprob: -14.502053260803223

Token 2618: ' More' (ID: 4633)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0002661039761733264
    2. '           ' → logprob: -8.250266075134277
    3. ' return' → logprob: -13.000266075134277
    4. '       ' → logprob: -13.500266075134277
    5. '#' → logprob: -14.250266075134277
    6. '   ' → logprob: -14.500266075134277
    7. '               ' → logprob: -17.375267028808594
    8. '	return' → logprob: -19.000267028808594
    9. '
' → logprob: -19.375267028808594
    10. '                   ' → logprob: -20.125267028808594

Token 2619: ' than' (ID: 1572)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1763701438903809
    2. 'than' → logprob: -1.3013701438903809
    3. '           ' → logprob: -1.9263701438903809
    4. '#' → logprob: -2.176370143890381
    5. '
' → logprob: -2.426370143890381
    6. ' than' → logprob: -4.176370143890381
    7. '...' → logprob: -4.301370143890381
    8. 'Than' → logprob: -4.426370143890381
    9. 'points' → logprob: -5.301370143890381
    10. '...
' → logprob: -5.551370143890381

Token 2620: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034356804098933935
    2. 'one' → logprob: -8.000343322753906
    3. 'One' → logprob: -12.625343322753906
    4. ' ' → logprob: -13.125343322753906
    5. ' one' → logprob: -13.625343322753906
    6. 'len' → logprob: -14.375343322753906
    7. '
' → logprob: -15.000343322753906
    8. '   ' → logprob: -15.250343322753906
    9. 'unique' → logprob: -15.625343322753906
    10. '_one' → logprob: -15.625343322753906

Token 2621: ' distinct' (ID: 16913)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006842895410954952
    2. ' return' → logprob: -5.256843090057373
    3. '           ' → logprob: -6.756843090057373
    4. '
' → logprob: -9.006842613220215
    5. 'unique' → logprob: -9.381842613220215
    6. '               ' → logprob: -9.631842613220215
    7. ':return' → logprob: -9.756842613220215
    8. '#' → logprob: -9.881842613220215
    9. ':
' → logprob: -10.506842613220215
    10. ':' → logprob: -10.881842613220215

Token 2622: ' solution' (ID: 7578)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.4722517132759094
    2. ' unique' → logprob: -1.3472516536712646
    3. ' solution' → logprob: -2.8472516536712646
    4. 'solution' → logprob: -3.4722516536712646
    5. 'point' → logprob: -4.097251892089844
    6. ' point' → logprob: -5.347251892089844
    7. '
' → logprob: -5.722251892089844
    8. 'return' → logprob: -6.972251892089844
    9. 'possible' → logprob: -7.847251892089844
    10. ' return' → logprob: -7.972251892089844

Token 2623: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3226354122161865
    2. 'return' → logprob: -1.3226354122161865
    3. ':
' → logprob: -4.947635650634766
    4. '               ' → logprob: -6.697635650634766
    5. ' return' → logprob: -7.697635650634766
    6. ':return' → logprob: -8.447635650634766
    7. '
' → logprob: -9.072635650634766
    8. ':' → logprob: -9.322635650634766
    9. '```' → logprob: -9.822635650634766
    10. '       ' → logprob: -10.447635650634766

Token 2624: ' Many' (ID: 11048)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17180290818214417
    2. 'None' → logprob: -2.0468029975891113
    3. '           ' → logprob: -3.6718029975891113
    4. ' return' → logprob: -6.046802997589111
    5. ' None' → logprob: -7.421802997589111
    6. '   ' → logprob: -8.421802520751953
    7. '               ' → logprob: -10.296802520751953
    8. '       ' → logprob: -11.046802520751953
    9. 'Return' → logprob: -11.796802520751953
    10. ' ' → logprob: -11.921802520751953

Token 2625: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0429459810256958
    2. '       ' → logprob: -4.167945861816406
    3. ':
' → logprob: -4.417945861816406
    4. 'return' → logprob: -4.542945861816406
    5. '               ' → logprob: -6.542945861816406
    6. ':' → logprob: -7.292945861816406
    7. '
' → logprob: -7.292945861816406
    8. ':return' → logprob: -7.417945861816406
    9. ' return' → logprob: -8.417945861816406
    10. '```' → logprob: -8.917945861816406

Token 2626: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007089014630764723
    2. 'return' → logprob: -5.132089138031006
    3. '               ' → logprob: -7.757089138031006
    4. ':
' → logprob: -8.132088661193848
    5. ' return' → logprob: -8.757088661193848
    6. ':return' → logprob: -9.382088661193848
    7. '```' → logprob: -9.632088661193848
    8. '
' → logprob: -9.882088661193848
    9. ':' → logprob: -10.007088661193848
    10. '       ' → logprob: -10.632088661193848

Token 2627: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0024914760142564774
    2. '           ' → logprob: -6.002491474151611
    3. ' return' → logprob: -11.25249195098877
    4. '               ' → logprob: -13.62749195098877
    5. '
' → logprob: -13.87749195098877
    6. '   ' → logprob: -15.12749195098877
    7. '```' → logprob: -15.50249195098877
    8. '       ' → logprob: -16.252490997314453
    9. 'None' → logprob: -17.377490997314453
    10. '	return' → logprob: -17.877490997314453

Token 2628: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0015877006808295846
    2. '"' → logprob: -6.626587867736816
    3. ' None' → logprob: -8.876587867736816
    4. 'True' → logprob: -10.376587867736816
    5. 'Point' → logprob: -10.626587867736816
    6. ''' → logprob: -11.001587867736816
    7. 'self' → logprob: -11.001587867736816
    8. 'point' → logprob: -11.501587867736816
    9. 'System' → logprob: -12.001587867736816
    10. '"No' → logprob: -12.251587867736816

Token 2629: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05929132550954819
    2. 'return' → logprob: -3.309291362762451
    3. '
' → logprob: -4.184291362762451
    4. 'else' → logprob: -5.309291362762451
    5. ' return' → logprob: -7.809291362762451
    6. '   ' → logprob: -8.809290885925293
    7. ' else' → logprob: -8.934290885925293
    8. '        
' → logprob: -9.059290885925293
    9. '  
' → logprob: -11.934290885925293
    10. '<|end|>' → logprob: -12.059290885925293

Token 2630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04871624708175659
    2. 'return' → logprob: -3.0487163066864014
    3. '   ' → logprob: -9.54871654510498
    4. 'else' → logprob: -10.79871654510498
    5. ' return' → logprob: -11.17371654510498
    6. '        
' → logprob: -11.29871654510498
    7. '
' → logprob: -12.42371654510498
    8. '           ' → logprob: -13.54871654510498
    9. '{return' → logprob: -13.54871654510498
    10. '```' → logprob: -14.04871654510498

Token 2631: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.029753033071756363
    2. '       ' → logprob: -3.5297529697418213
    3. ' return' → logprob: -13.029752731323242
    4. '   ' → logprob: -15.529752731323242
    5. 'if' → logprob: -16.404752731323242
    6. '           ' → logprob: -16.529752731323242
    7. '
' → logprob: -17.529752731323242
    8. '```' → logprob: -18.529752731323242
    9. '	return' → logprob: -19.029752731323242
    10. '#' → logprob: -19.404752731323242

Token 2632: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.0002613358374219388
    2. ' unique' → logprob: -8.250261306762695
    3. '(unique' → logprob: -18.500261306762695
    4. '   ' → logprob: -22.375261306762695
    5. '.unique' → logprob: -23.250261306762695
    6. '_unique' → logprob: -24.625261306762695
    7. 'uniq' → logprob: -25.125261306762695
    8. '       ' → logprob: -25.250261306762695
    9. 'uni' → logprob: -25.375261306762695
    10. ' uniques' → logprob: -25.750261306762695

Token 2633: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -9.13388703338569e-06
    2. 'e' → logprob: -13.250009536743164
    3. 'unique' → logprob: -13.250009536743164
    4. '_ts' → logprob: -13.375009536743164
    5. '_points' → logprob: -13.875009536743164
    6. '_pt' → logprob: -14.000009536743164
    7. 'pts' → logprob: -14.125009536743164
    8. 'Pts' → logprob: -15.000009536743164
    9. '```' → logprob: -15.250009536743164
    10. '_p' → logprob: -15.625009536743164

Token 2634: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0445127372804563e-05
    2. '[-' → logprob: -11.62501049041748
    3. '```' → logprob: -14.50001049041748
    4. '0' → logprob: -14.87501049041748
    5. '[
' → logprob: -15.37501049041748
    6. '\[' → logprob: -15.50001049041748
    7. 's' → logprob: -16.250009536743164
    8. ' [' → logprob: -16.625009536743164
    9. '
' → logprob: -17.500009536743164
    10. '[len' → logprob: -18.125009536743164

Token 2635: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.25
    3. ' ' → logprob: -17.5
    4. '[' → logprob: -18.375
    5. '
' → logprob: -18.875
    6. '   ' → logprob: -20.0
    7. '```' → logprob: -20.0
    8. '۰' → logprob: -21.625
    9. '...' → logprob: -22.625
    10. '=' → logprob: -22.8125

Token 2636: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2637: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2638: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17985467612743378
    2. '   ' → logprob: -1.8048546314239502
    3. ' def' → logprob: -9.929854393005371
    4. '<|end|>' → logprob: -10.679854393005371
    5. '	def' → logprob: -10.679854393005371
    6. '
' → logprob: -11.679854393005371
    7. '    
' → logprob: -13.429854393005371
    8. '```' → logprob: -13.554854393005371
    9. '  ' → logprob: -14.054854393005371
    10. ')' → logprob: -14.429854393005371

Token 2639: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -7.941850526549388e-06
    2. ' has' → logprob: -11.750007629394531
    3. '_has' → logprob: -17.50000762939453
    4. 'have' → logprob: -19.62500762939453
    5. '.has' → logprob: -20.87500762939453
    6. 'def' → logprob: -21.00000762939453
    7. '	has' → logprob: -21.62500762939453
    8. '   ' → logprob: -23.12500762939453
    9. 'ha' → logprob: -23.87500762939453
    10. '(has' → logprob: -24.50000762939453

Token 2640: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.0002702760975807905
    2. '_many' → logprob: -8.250269889831543
    3. '_' → logprob: -12.000269889831543
    4. '_more' → logprob: -14.000269889831543
    5. '_multi' → logprob: -14.125269889831543
    6. ' _' → logprob: -14.500269889831543
    7. '_mult' → logprob: -15.375269889831543
    8. '_m' → logprob: -15.750269889831543
    9. '_
' → logprob: -16.75027084350586
    10. '\' → logprob: -17.00027084350586

Token 2641: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -9.088346359931165e-07
    2. '_solution' → logprob: -15.375000953674316
    3. 's' → logprob: -15.875000953674316
    4. '```' → logprob: -16.0
    5. '_' → logprob: -16.25
    6. '\' → logprob: -16.75
    7. ' _' → logprob: -17.125
    8. '
' → logprob: -17.5
    9. '_results' → logprob: -18.125
    10. '_sol' → logprob: -18.125

Token 2642: 'olutions' (ID: 83919)
  Prédit: 'olutions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olutions' → logprob: -3.128163257315464e-07
    2. 'olution' → logprob: -15.5
    3. 'solutions' → logprob: -16.875
    4. '_' → logprob: -19.25
    5. 'ol' → logprob: -19.375
    6. 'Solutions' → logprob: -19.5
    7. '```' → logprob: -21.75
    8. 'ources' → logprob: -21.875
    9. '``' → logprob: -22.625
    10. 'ols' → logprob: -22.75

Token 2643: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011212585377506912
    2. '(' → logprob: -9.500112533569336
    3. 'self' → logprob: -10.500112533569336
    4. '   ' → logprob: -12.125112533569336
    5. '       ' → logprob: -13.000112533569336
    6. '(
' → logprob: -14.250112533569336
    7. '```' → logprob: -15.125112533569336
    8. '(s' → logprob: -15.250112533569336
    9. ' (' → logprob: -15.375112533569336
    10. 's' → logprob: -15.625112533569336

Token 2644: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009396891109645367
    2. ')' → logprob: -7.250939846038818
    3. 'self' → logprob: -8.75093936920166
    4. '(' → logprob: -9.87593936920166
    5. '   ' → logprob: -12.12593936920166
    6. '(
' → logprob: -12.12593936920166
    7. '       ' → logprob: -12.75093936920166
    8. ')(' → logprob: -13.62593936920166
    9. ' self' → logprob: -13.62593936920166
    10. ' (' → logprob: -13.87593936920166

Token 2645: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004201866395305842
    2. '(' → logprob: -8.250420570373535
    3. 'self' → logprob: -9.000420570373535
    4. '       ' → logprob: -11.500420570373535
    5. '   ' → logprob: -11.750420570373535
    6. '(
' → logprob: -12.375420570373535
    7. '(s' → logprob: -12.625420570373535
    8. ' (' → logprob: -12.625420570373535
    9. 's' → logprob: -13.375420570373535
    10. '->' → logprob: -13.500420570373535

Token 2646: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.006717505399137735
    2. ' bool' → logprob: -5.006717681884766
    3. 'True' → logprob: -13.631717681884766
    4. 'False' → logprob: -14.631717681884766
    5. 'self' → logprob: -15.131717681884766
    6. '   ' → logprob: -16.131717681884766
    7. ' True' → logprob: -17.756717681884766
    8. 'Bool' → logprob: -17.756717681884766
    9. '	bool' → logprob: -18.256717681884766
    10. '<bool' → logprob: -18.631717681884766

Token 2647: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0022261450067162514
    2. '       ' → logprob: -6.62722635269165
    3. '(' → logprob: -7.75222635269165
    4. '(
' → logprob: -8.252225875854492
    5. 'self' → logprob: -8.752225875854492
    6. '   ' → logprob: -10.127225875854492
    7. '(s' → logprob: -12.752225875854492
    8. ' self' → logprob: -13.127225875854492
    9. 's' → logprob: -13.252225875854492
    10. ' (' → logprob: -14.377225875854492

Token 2648: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.1318875446449965e-05
    2. '```' → logprob: -10.625041007995605
    3. 'return' → logprob: -11.625041007995605
    4. '   ' → logprob: -12.375041007995605
    5. ' return' → logprob: -12.875041007995605
    6. '``' → logprob: -14.750041007995605
    7. '           ' → logprob: -15.375041007995605
    8. '#' → logprob: -16.625041961669922
    9. '        
' → logprob: -16.875041961669922
    10. '
' → logprob: -17.000041961669922

Token 2649: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15939882397651672
    2. '       ' → logprob: -2.5343987941741943
    3. 'n' → logprob: -3.4093987941741943
    4. 'base' → logprob: -3.9093987941741943
    5. '#' (adapté à ' #') → logprob: -4.909399032592773
    6. 'if' → logprob: -5.659399032592773
    7. 'for' → logprob: -5.784399032592773
    8. 'sign' → logprob: -8.159399032592773
    9. 'parallel' → logprob: -8.909399032592773
    10. 'pattern' → logprob: -9.159399032592773

Token 2650: ' Because' (ID: 13602)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3622707724571228
    2. '       ' → logprob: -1.7372708320617676
    3. 'point' → logprob: -3.2372708320617676
    4. '#' → logprob: -3.4872708320617676
    5. 'pt' → logprob: -4.237270832061768
    6. 'result' → logprob: -4.612270832061768
    7. 'c' → logprob: -4.612270832061768
    8. 'def' → logprob: -4.987270832061768
    9. 'res' → logprob: -5.362270832061768
    10. 'n' → logprob: -5.987270832061768

Token 2651: ' find' (ID: 1646)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11833810061216354
    2. 'def' → logprob: -2.993338108062744
    3. 'the' → logprob: -3.618338108062744
    4. 'len' → logprob: -3.743338108062744
    5. 'of' → logprob: -5.868338108062744
    6. ' self' → logprob: -6.118338108062744
    7. 'we' → logprob: -6.493338108062744
    8. '   ' → logprob: -6.493338108062744
    9. '#' → logprob: -7.368338108062744
    10. 'return' → logprob: -7.743338108062744

Token 2652: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.1472419600977446e-06
    2. 'point' → logprob: -14.375000953674316
    3. '_points' → logprob: -15.625000953674316
    4. '```' → logprob: -15.750000953674316
    5. '_' → logprob: -16.250001907348633
    6. '
' → logprob: -17.625001907348633
    7. '_
' → logprob: -18.750001907348633
    8. '_method' → logprob: -19.250001907348633
    9. 'Point' → logprob: -19.250001907348633
    10. '_POINT' → logprob: -19.375001907348633

Token 2653: ' returns' (ID: 7377)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3589705228805542
    2. 'def' → logprob: -1.7339705228805542
    3. '(self' → logprob: -1.8589705228805542
    4. ' returns' → logprob: -2.1089706420898438
    5. '   ' → logprob: -2.2339706420898438
    6. 'returns' → logprob: -2.7339706420898438
    7. '()' → logprob: -2.9839706420898438
    8. ' def' → logprob: -3.2339706420898438
    9. '```' → logprob: -4.858970642089844
    10. 'self' → logprob: -5.108970642089844

Token 2654: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.38734665513038635
    2. 'self' → logprob: -1.137346625328064
    3. '       ' → logprob: -8.762346267700195
    4. 'False' → logprob: -9.262346267700195
    5. '   ' → logprob: -9.637346267700195
    6. 'True' → logprob: -9.637346267700195
    7. ' None' → logprob: -10.012346267700195
    8. 'return' → logprob: -11.512346267700195
    9. ' self' → logprob: -11.887346267700195
    10. '(self' → logprob: -12.012346267700195

Token 2655: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9893945455551147
    2. ':' → logprob: -1.6143945455551147
    3. ':
' → logprob: -1.6143945455551147
    4. '       ' → logprob: -2.4893946647644043
    5. '():
' → logprob: -3.2393946647644043
    6. ' if' → logprob: -3.4893946647644043
    7. ' or' → logprob: -3.6143946647644043
    8. '():' → logprob: -3.7393946647644043
    9. ':return' → logprob: -4.864394664764404
    10. 'if' → logprob: -5.239394664764404

Token 2656: ' None' (ID: 4662)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.28117403388023376
    2. 'self' → logprob: -1.9061740636825562
    3. 'many' → logprob: -2.9061739444732666
    4. 'False' → logprob: -3.4061739444732666
    5. 'multiple' → logprob: -6.156174182891846
    6. 'None' → logprob: -6.281174182891846
    7. '#' → logprob: -6.531174182891846
    8. 'Many' → logprob: -6.656174182891846
    9. 'not' → logprob: -7.281174182891846
    10. 'no' → logprob: -8.531173706054688

Token 2657: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.15256962180137634
    2. 'or' → logprob: -2.027569532394409
    3. ' and' → logprob: -6.027569770812988
    4. '   ' → logprob: -6.152569770812988
    5. 'and' → logprob: -6.152569770812988
    6. '       ' → logprob: -6.527569770812988
    7. '
' → logprob: -7.527569770812988
    8. ',' → logprob: -8.152569770812988
    9. ':
' → logprob: -8.277569770812988
    10. ':' → logprob: -8.402569770812988

Token 2658: ' Many' (ID: 11048)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3500164747238159
    2. 'Many' → logprob: -1.225016474723816
    3. 'many' → logprob: -6.9750165939331055
    4. 'False' → logprob: -8.350016593933105
    5. 'None' → logprob: -9.475016593933105
    6. '#' → logprob: -9.725016593933105
    7. 'return' → logprob: -10.100016593933105
    8. '"' → logprob: -10.225016593933105
    9. 'Yes' → logprob: -10.350016593933105
    10. '```' → logprob: -10.475016593933105

Token 2659: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7427389025688171
    2. '   ' → logprob: -0.8677389025688171
    3. ':
' → logprob: -2.742738962173462
    4. ':' → logprob: -3.867738962173462
    5. '():
' → logprob: -4.742738723754883
    6. 'def' → logprob: -5.117738723754883
    7. ' def' → logprob: -6.867738723754883
    8. '):
' → logprob: -7.117738723754883
    9. '():' → logprob: -7.742738723754883
    10. '```' → logprob: -7.992738723754883

Token 2660: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008655699901282787
    2. 'return' → logprob: -4.758655548095703
    3. ' return' → logprob: -10.383655548095703
    4. '   ' → logprob: -12.008655548095703
    5. '```' → logprob: -13.508655548095703
    6. 'n' → logprob: -14.258655548095703
    7. '	' → logprob: -14.633655548095703
    8. '#' → logprob: -15.133655548095703
    9. '	return' → logprob: -15.258655548095703
    10. 'for' → logprob: -15.258655548095703

Token 2661: ' detect' (ID: 11839)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7458426356315613
    2. 'return' → logprob: -1.245842695236206
    3. '   ' → logprob: -1.620842695236206
    4. 'def' → logprob: -3.745842695236206
    5. ' return' → logprob: -5.245842456817627
    6. '```' → logprob: -5.495842456817627
    7. '
' → logprob: -5.745842456817627
    8. '    ' → logprob: -7.370842456817627
    9. 'should' → logprob: -7.870842456817627
    10. 'need' → logprob: -7.995842456817627

Token 2662: ' Many' (ID: 11048)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34121742844581604
    2. 'result' → logprob: -2.341217517852783
    3. 'self' → logprob: -2.466217517852783
    4. 'if' → logprob: -3.341217517852783
    5. 'return' → logprob: -3.466217517852783
    6. 'point' → logprob: -4.341217517852783
    7. '
' → logprob: -5.341217517852783
    8. 'res' → logprob: -5.466217517852783
    9. '   ' → logprob: -5.466217517852783
    10. 'possible' → logprob: -5.466217517852783

Token 2663: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5418735146522522
    2. '   ' → logprob: -1.4168734550476074
    3. '(self' → logprob: -1.7918734550476074
    4. 'def' → logprob: -5.291873455047607
    5. 'self' → logprob: -6.291873455047607
    6. '
' → logprob: -7.541873455047607
    7. '```' → logprob: -7.916873455047607
    8. ':' → logprob: -8.166873931884766
    9. '(
' → logprob: -8.541873931884766
    10. '(' → logprob: -8.666873931884766

Token 2664: ' None' (ID: 4662)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23559428751468658
    2. 'False' → logprob: -1.8605942726135254
    3. 'True' → logprob: -3.2355942726135254
    4. 'any' → logprob: -4.735594272613525
    5. ' self' → logprob: -5.610594272613525
    6. '(self' → logprob: -7.610594272613525
    7. 'len' → logprob: -7.735594272613525
    8. ' False' → logprob: -7.735594272613525
    9. 'None' → logprob: -7.735594272613525
    10. ' True' → logprob: -8.485594749450684

Token 2665: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08423610031604767
    2. '   ' → logprob: -2.5842361450195312
    3. ':' → logprob: -6.084236145019531
    4. ':
' → logprob: -6.209236145019531
    5. '
' → logprob: -7.459236145019531
    6. 'def' → logprob: -8.959236145019531
    7. '           ' → logprob: -9.959236145019531
    8. '        
' → logprob: -10.209236145019531
    9. ',' → logprob: -10.334236145019531
    10. '```' → logprob: -10.584236145019531

Token 2666: ' some' (ID: 1236)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4156728982925415
    2. 'len' → logprob: -1.1656728982925415
    3. 'any' → logprob: -4.415672779083252
    4. 'not' → logprob: -5.165672779083252
    5. 'def' → logprob: -5.165672779083252
    6. 'True' → logprob: -5.790672779083252
    7. 'return' → logprob: -7.165672779083252
    8. ' self' → logprob: -7.790672779083252
    9. '
' → logprob: -9.04067325592041
    10. '(self' → logprob: -9.41567325592041

Token 2667: ' internal' (ID: 8812)
  Prédit: 'additional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'additional' → logprob: -0.549782395362854
    2. 'extra' → logprob: -1.424782395362854
    3. 'c' → logprob: -2.9247822761535645
    4. 'internal' → logprob: -3.0497822761535645
    5. 'state' → logprob: -4.0497822761535645
    6. 'cached' → logprob: -4.9247822761535645
    7. 'cache' → logprob: -5.0497822761535645
    8. 'context' → logprob: -5.1747822761535645
    9. 'hint' → logprob: -5.4247822761535645
    10. '#' → logprob: -5.4247822761535645

Token 2668: ' logic' (ID: 18485)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.12022266536951065
    2. 'flag' → logprob: -2.870222568511963
    3. 'return' → logprob: -3.745222568511963
    4. 'comment' → logprob: -4.620222568511963
    5. 'logic' → logprob: -4.745222568511963
    6. '_state' → logprob: -5.245222568511963
    7. 'check' → logprob: -6.620222568511963
    8. 'flags' → logprob: -6.870222568511963
    9. '
' → logprob: -6.995222568511963
    10. 'status' → logprob: -7.120222568511963

Token 2669: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011501281522214413
    2. '   ' → logprob: -5.386501312255859
    3. ':' → logprob: -5.511501312255859
    4. ':
' → logprob: -6.136501312255859
    5. '(self' → logprob: -8.38650131225586
    6. '
' → logprob: -9.13650131225586
    7. 'def' → logprob: -9.51150131225586
    8. '        
' → logprob: -10.38650131225586
    9. '```' → logprob: -10.51150131225586
    10. ' def' → logprob: -10.88650131225586

Token 2670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004615726415067911
    2. '   ' → logprob: -5.504615783691406
    3. '```' → logprob: -7.879615783691406
    4. '
' → logprob: -9.504615783691406
    5. '        
' → logprob: -11.254615783691406
    6. '{
' → logprob: -11.379615783691406
    7. 'def' → logprob: -11.629615783691406
    8. ':' → logprob: -12.254615783691406
    9. '``' → logprob: -12.379615783691406
    10. ':
' → logprob: -12.379615783691406

Token 2671: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03588958829641342
    2. 'return' → logprob: -3.4108896255493164
    3. 'pt' → logprob: -7.910889625549316
    4. '#' (adapté à ' #') → logprob: -8.160889625549316
    5. 'for' → logprob: -8.410889625549316
    6. 'if' → logprob: -8.410889625549316
    7. 'result' → logprob: -8.660889625549316
    8. 'points' → logprob: -8.660889625549316
    9. 'point' → logprob: -8.660889625549316
    10. 'pts' → logprob: -8.785889625549316

Token 2672: ' This' (ID: 1328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043897006660699844
    2. 'return' → logprob: -4.0438971519470215
    3. 'if' → logprob: -5.1688971519470215
    4. 'point' → logprob: -5.1688971519470215
    5. 'pt' → logprob: -5.5438971519470215
    6. 'lines' → logprob: -6.2938971519470215
    7. 'result' → logprob: -6.4188971519470215
    8. 'found' → logprob: -6.5438971519470215
    9. 'pts' → logprob: -6.6688971519470215
    10. 'points' → logprob: -6.6688971519470215

Token 2673: ' interface' (ID: 6225)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3695661425590515
    2. ' def' → logprob: -1.8695662021636963
    3. ' is' → logprob: -2.8695662021636963
    4. '       ' → logprob: -3.4945662021636963
    5. '   ' → logprob: -4.119565963745117
    6. 'is' → logprob: -4.619565963745117
    7. ':' → logprob: -4.994565963745117
    8. '=' → logprob: -5.494565963745117
    9. ' code' → logprob: -5.619565963745117
    10. ' return' → logprob: -5.744565963745117

Token 2674: ' would' (ID: 1481)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41656294465065
    2. ' def' → logprob: -1.6665629148483276
    3. '   ' → logprob: -2.666563034057617
    4. '       ' → logprob: -2.791563034057617
    5. ':
' → logprob: -4.541563034057617
    6. ':' → logprob: -4.916563034057617
    7. '	def' → logprob: -7.291563034057617
    8. '```' → logprob: -7.291563034057617
    9. ' is' → logprob: -7.666563034057617
    10. '
' → logprob: -8.666563034057617

Token 2675: ' need' (ID: 1309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8881155848503113
    2. 'def' → logprob: -1.138115644454956
    3. '```' → logprob: -2.513115644454956
    4. '       ' → logprob: -2.638115644454956
    5. 'raise' → logprob: -2.763115644454956
    6. ' return' → logprob: -3.638115644454956
    7. '   ' → logprob: -4.888115406036377
    8. 'not' → logprob: -5.388115406036377
    9. 'be' → logprob: -6.138115406036377
    10. '``' → logprob: -6.138115406036377

Token 2676: ' extra' (ID: 5018)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.556028425693512
    2. 'return' → logprob: -1.4310283660888672
    3. 'def' → logprob: -2.181028366088867
    4. '
' → logprob: -4.431028366088867
    5. 'more' → logprob: -4.431028366088867
    6. '```' → logprob: -4.556028366088867
    7. '   ' → logprob: -4.681028366088867
    8. '       ' → logprob: -4.681028366088867
    9. 'a' → logprob: -5.181028366088867
    10. 'the' → logprob: -5.556028366088867

Token 2677: ' info' (ID: 5377)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47710496187210083
    2. 'def' → logprob: -1.102104902267456
    3. ' logic' → logprob: -3.852104902267456
    4. 'return' → logprob: -4.852105140686035
    5. '   ' → logprob: -5.727105140686035
    6. ' code' → logprob: -5.852105140686035
    7. 'code' → logprob: -6.352105140686035
    8. '#' → logprob: -6.602105140686035
    9. 'state' → logprob: -6.852105140686035
    10. ' def' → logprob: -7.102105140686035

Token 2678: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008053015917539597
    2. '   ' → logprob: -5.758052825927734
    3. '(self' → logprob: -5.883052825927734
    4. 'def' → logprob: -7.633052825927734
    5. ':' → logprob: -7.758052825927734
    6. ':
' → logprob: -7.883052825927734
    7. '
' → logprob: -8.133052825927734
    8. 'self' → logprob: -8.133052825927734
    9. '{' → logprob: -10.633052825927734
    10. ',' → logprob: -11.008052825927734

Token 2679: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008402384701184928
    2. 'return' → logprob: -7.375840187072754
    3. '   ' → logprob: -9.125840187072754
    4. '
' → logprob: -9.625840187072754
    5. '#' → logprob: -11.000840187072754
    6. ' return' → logprob: -12.125840187072754
    7. '	' → logprob: -12.500840187072754
    8. '```' → logprob: -13.000840187072754
    9. '           ' → logprob: -13.125840187072754
    10. '        
' → logprob: -13.500840187072754

Token 2680: ' we' (ID: 581)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7301576137542725
    2. '       ' → logprob: -0.8551576137542725
    3. ' return' → logprob: -3.1051576137542725
    4. '   ' → logprob: -3.2301576137542725
    5. 'def' → logprob: -5.355157852172852
    6. '#' → logprob: -5.730157852172852
    7. '
' → logprob: -8.605157852172852
    8. '```' → logprob: -8.855157852172852
    9. '    ' → logprob: -9.355157852172852
    10. ' #' → logprob: -9.855157852172852

Token 2681: ' don't' (ID: 4128)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6755383014678955
    2. '   ' → logprob: -0.9255383014678955
    3. ' return' → logprob: -2.9255383014678955
    4. 'def' → logprob: -3.6755383014678955
    5. 'raise' → logprob: -4.925538063049316
    6. '       ' → logprob: -5.675538063049316
    7. '#' → logprob: -6.675538063049316
    8. ' def' → logprob: -7.050538063049316
    9. '_return' → logprob: -7.675538063049316
    10. '```' → logprob: -7.800538063049316

Token 2682: ' implement' (ID: 6365)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.789172351360321
    2. 'return' → logprob: -1.1641724109649658
    3. '   ' → logprob: -2.289172410964966
    4. '```' → logprob: -2.914172410964966
    5. 'implement' → logprob: -3.289172410964966
    6. '
' → logprob: -4.164172172546387
    7. 'raise' → logprob: -5.039172172546387
    8. ' return' → logprob: -5.414172172546387
    9. 'override' → logprob: -5.914172172546387
    10. 'provide' → logprob: -6.289172172546387

Token 2683: ' here' (ID: 2105)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3647920489311218
    2. '       ' → logprob: -1.2397921085357666
    3. 'self' → logprob: -5.2397918701171875
    4. '(self' → logprob: -5.4897918701171875
    5. 'def' → logprob: -5.6147918701171875
    6. '```' → logprob: -7.1147918701171875
    7. '    ' → logprob: -7.2397918701171875
    8. '     ' → logprob: -8.489791870117188
    9. '
' → logprob: -8.614791870117188
    10. 'return' → logprob: -8.864791870117188

Token 2684: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4490618407726288
    2. '   ' → logprob: -1.3240618705749512
    3. '<|end|>' → logprob: -2.824061870574951
    4. ':' → logprob: -3.574061870574951
    5. ':return' → logprob: -5.699061870574951
    6. '
' → logprob: -6.324061870574951
    7. ':
' → logprob: -6.824061870574951
    8. ' ' → logprob: -7.949061870574951
    9. '<|end|>' → logprob: -8.449061393737793
    10. '```' → logprob: -8.574061393737793

Token 2685: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37387189269065857
    2. '<|end|>' → logprob: -1.998871922492981
    3. ':return' → logprob: -3.1238718032836914
    4. '       ' → logprob: -3.3738718032836914
    5. '
' → logprob: -3.4988718032836914
    6. ':' → logprob: -3.4988718032836914
    7. ' ' → logprob: -4.748871803283691
    8. 'return' → logprob: -5.123871803283691
    9. ':
' → logprob: -5.748871803283691
    10. ' return' → logprob: -5.748871803283691

Token 2686: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030774295330047607
    2. 'return' (adapté à ' return') → logprob: -3.6557743549346924
    3. 'pass' → logprob: -5.655774116516113
    4. '   ' → logprob: -7.780774116516113
    5. '<|end|>' → logprob: -8.405774116516113
    6. '```' → logprob: -9.030774116516113
    7. ' return' → logprob: -10.155774116516113
    8. ' pass' → logprob: -10.280774116516113
    9. '#' → logprob: -10.280774116516113
    10. '{return' → logprob: -10.655774116516113

Token 2687: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.127333340875339e-06
    2. ' False' → logprob: -12.625003814697266
    3. 'True' → logprob: -14.250003814697266
    4. 'len' → logprob: -16.375003814697266
    5. 'Not' → logprob: -18.000003814697266
    6. '(False' → logprob: -18.750003814697266
    7. 'None' → logprob: -18.875003814697266
    8. '   ' → logprob: -20.250003814697266
    9. 'false' → logprob: -20.875003814697266
    10. 'self' → logprob: -21.625003814697266

Token 2688: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2689: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2690: ' Dataset' (ID: 79063)
  Prédit: 'Equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Equal' → logprob: -0.222189262509346
    2. 'Solution' → logprob: -3.22218918800354
    3. 'Line' → logprob: -3.34718918800354
    4. 'Point' → logprob: -3.59718918800354
    5. 'Distance' → logprob: -3.72218918800354
    6. 'Input' → logprob: -4.097189426422119
    7. '__' → logprob: -4.222189426422119
    8. 'Eu' → logprob: -4.722189426422119
    9. 'Solver' → logprob: -4.847189426422119
    10. 'Test' → logprob: -5.722189426422119

Token 2691: 'Parser' (ID: 9231)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010387005284428596
    2. ':
' → logprob: -4.635386943817139
    3. '(' → logprob: -8.010387420654297
    4. '):' → logprob: -9.385387420654297
    5. 'Parser' → logprob: -10.135387420654297
    6. '(Data' → logprob: -10.885387420654297
    7. 'Processor' → logprob: -11.135387420654297
    8. '(List' → logprob: -11.510387420654297
    9. 'Input' → logprob: -11.635387420654297
    10. 'Manager' → logprob: -11.760387420654297

Token 2692: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002554615493863821
    2. ':
' → logprob: -6.002554416656494
    3. '):' → logprob: -10.002554893493652
    4. ':def' → logprob: -11.502554893493652
    5. '<|end|>' → logprob: -12.002554893493652
    6. '():' → logprob: -12.377554893493652
    7. '(object' → logprob: -12.627554893493652
    8. ':

' → logprob: -13.377554893493652
    9. '):
' → logprob: -13.627554893493652
    10. '(' → logprob: -13.627554893493652

Token 2693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004760834388434887
    2. 'def' → logprob: -5.6297607421875
    3. ' def' → logprob: -6.8797607421875
    4. '```' → logprob: -9.1297607421875
    5. 'class' → logprob: -11.0047607421875
    6. '	def' → logprob: -12.3797607421875
    7. ' ' → logprob: -14.6297607421875
    8. '``' → logprob: -14.8797607421875
    9. '  ' → logprob: -15.2547607421875
    10. '    ' → logprob: -15.2547607421875

Token 2694: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002375769428908825
    2. '@' → logprob: -6.252375602722168
    3. ' def' → logprob: -7.752375602722168
    4. '   ' → logprob: -11.002375602722168
    5. ' @' → logprob: -15.127375602722168
    6. 'staticmethod' → logprob: -15.377375602722168
    7. 'class' → logprob: -15.752375602722168
    8. '	def' → logprob: -17.002376556396484
    9. '```' → logprob: -17.627376556396484
    10. '@dat' → logprob: -19.502376556396484

Token 2695: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.06547439843416214
    2. '__' → logprob: -3.190474510192871
    3. 'parse' → logprob: -4.690474510192871
    4. '_init' → logprob: -4.690474510192871
    5. 'def' → logprob: -5.815474510192871
    6. 'int' → logprob: -7.815474510192871
    7. '_parse' → logprob: -8.940474510192871
    8. ' __' → logprob: -9.190474510192871
    9. 'staticmethod' → logprob: -9.565474510192871
    10. '_iter' → logprob: -10.190474510192871

Token 2696: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9743012671824545e-05
    2. 'iter' → logprob: -11.500020027160645
    3. 'it' → logprob: -13.000020027160645
    4. 'int' → logprob: -13.125020027160645
    5. 'parse' → logprob: -13.625020027160645
    6. '```' → logprob: -13.750020027160645
    7. '`' → logprob: -14.000020027160645
    8. '__' → logprob: -14.875020027160645
    9. 'def' → logprob: -15.375020027160645
    10. 'staticmethod' → logprob: -15.500020027160645

Token 2697: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.026921557262539864
    2. '__(' → logprob: -3.651921510696411
    3. ' (' → logprob: -8.526921272277832
    4. 'self' → logprob: -8.526921272277832
    5. '(' → logprob: -9.026921272277832
    6. '__(
' → logprob: -10.401921272277832
    7. '__' → logprob: -11.151921272277832
    8. '   ' → logprob: -11.151921272277832
    9. '=self' → logprob: -11.151921272277832
    10. '```' → logprob: -11.526921272277832

Token 2698: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004900033236481249
    2. ')' → logprob: -7.875490188598633
    3. '):
' → logprob: -9.250490188598633
    4. ' self' → logprob: -12.250490188598633
    5. '):' → logprob: -12.500490188598633
    6. '
' → logprob: -13.250490188598633
    7. '   ' → logprob: -14.000490188598633
    8. '	self' → logprob: -14.000490188598633
    9. '(self' → logprob: -14.125490188598633
    10. '       ' → logprob: -15.625490188598633

Token 2699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4527393579483032
    2. 'self' → logprob: -1.4527393579483032
    3. '):
' → logprob: -2.4527392387390137
    4. '(self' → logprob: -3.8277392387390137
    5. '   ' → logprob: -4.202739238739014
    6. ',self' → logprob: -5.702739238739014
    7. '):' → logprob: -6.452739238739014
    8. '       ' → logprob: -7.077739238739014
    9. ' self' → logprob: -7.202739238739014
    10. '
' → logprob: -7.327739238739014

Token 2700: ' input' (ID: 3422)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.9494467973709106
    2. 'input' → logprob: -1.1994467973709106
    3. 'self' → logprob: -1.5744467973709106
    4. 'data' → logprob: -3.824446678161621
    5. 'text' → logprob: -3.824446678161621
    6. ')' → logprob: -4.199446678161621
    7. '):
' → logprob: -4.574446678161621
    8. 'stream' → logprob: -4.574446678161621
    9. 'source' → logprob: -4.699446678161621
    10. 'sys' → logprob: -4.824446678161621

Token 2701: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.3311222195625305
    2. '_data' → logprob: -2.0811221599578857
    3. '_lines' → logprob: -2.9561221599578857
    4. '):' → logprob: -3.0811221599578857
    5. '):
' → logprob: -3.7061221599578857
    6. '_source' → logprob: -4.706122398376465
    7. '=' → logprob: -5.581122398376465
    8. '=sys' → logprob: -5.581122398376465
    9. '_str' → logprob: -5.706122398376465
    10. '   ' → logprob: -5.706122398376465

Token 2702: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20388934016227722
    2. '):' → logprob: -1.7038893699645996
    3. ':' → logprob: -6.0788893699646
    4. '=sys' → logprob: -9.578888893127441
    5. '):
' → logprob: -10.453888893127441
    6. '=' → logprob: -10.578888893127441
    7. '   ' → logprob: -10.953888893127441
    8. '=None' → logprob: -11.453888893127441
    9. ',' → logprob: -11.703888893127441
    10. ' ):
' → logprob: -12.078888893127441

Token 2703: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12718836963176727
    2. 'def' → logprob: -2.5021884441375732
    3. 'self' → logprob: -3.6271884441375732
    4. '   ' → logprob: -4.627188205718994
    5. ' self' → logprob: -7.502188205718994
    6. ' def' → logprob: -8.002188682556152
    7. ':' → logprob: -9.877188682556152
    8. '```' → logprob: -10.002188682556152
    9. 'import' → logprob: -10.127188682556152
    10. '        
' → logprob: -11.127188682556152

Token 2704: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.0325924449716695e-05
    2. '       ' → logprob: -11.75001049041748
    3. ' self' → logprob: -13.00001049041748
    4. 'import' → logprob: -16.875009536743164
    5. '   ' → logprob: -17.250009536743164
    6. '	self' → logprob: -19.500009536743164
    7. '
' → logprob: -20.125009536743164
    8. '        
' → logprob: -20.500009536743164
    9. 'def' → logprob: -21.000009536743164
    10. '```' → logprob: -21.250009536743164

Token 2705: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.0007435183506458998
    2. 'input' → logprob: -7.250743389129639
    3. '.stream' → logprob: -11.250743865966797
    4. '.lines' → logprob: -11.750743865966797
    5. '.' → logprob: -12.250743865966797
    6. '=input' → logprob: -13.250743865966797
    7. '._' → logprob: -13.625743865966797
    8. '_input' → logprob: -13.875743865966797
    9. '.reader' → logprob: -13.875743865966797
    10. '.buffer' → logprob: -14.125743865966797

Token 2706: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.0010218516690656543
    2. '_' → logprob: -8.001021385192871
    3. '_line' → logprob: -8.126021385192871
    4. '=' → logprob: -8.626021385192871
    5. '_lines' → logprob: -9.126021385192871
    6. ' =' → logprob: -9.751021385192871
    7. '=_' → logprob: -11.001021385192871
    8. '_buffer' → logprob: -12.001021385192871
    9. '_data' → logprob: -12.126021385192871
    10. 'stream' → logprob: -12.126021385192871

Token 2707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001615438493900001
    2. ' =' → logprob: -6.501615524291992
    3. '.readline' → logprob: -9.376615524291992
    4. '=self' → logprob: -11.501615524291992
    5. '   ' → logprob: -11.626615524291992
    6. 'self' → logprob: -12.876615524291992
    7. '.' → logprob: -13.126615524291992
    8. '=
' → logprob: -13.751615524291992
    9. 'import' → logprob: -14.251615524291992
    10. ' ' → logprob: -14.876615524291992

Token 2708: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007107630372047424
    2. ' input' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.250710487365723
    4. 'self' → logprob: -16.87571144104004
    5. 'sys' → logprob: -17.00071144104004
    6. '	input' → logprob: -17.62571144104004
    7. ' ' → logprob: -19.12571144104004
    8. '(input' → logprob: -19.12571144104004
    9. '=input' → logprob: -20.00071144104004
    10. 'output' → logprob: -20.12571144104004

Token 2709: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -4.286852345103398e-05
    2. 'stream' → logprob: -10.875042915344238
    3. '_line' → logprob: -10.875042915344238
    4. '_buffer' → logprob: -12.500042915344238
    5. '_lines' → logprob: -14.375042915344238
    6. '_STREAM' → logprob: -15.875042915344238
    7. 'self' → logprob: -16.375041961669922
    8. 'Stream' → logprob: -16.750041961669922
    9. '._' → logprob: -16.750041961669922
    10. '_strip' → logprob: -16.875041961669922

Token 2710: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2291438728570938
    2. '
' → logprob: -1.6041438579559326
    3. 'def' → logprob: -6.979144096374512
    4. '    
' → logprob: -6.979144096374512
    5. '       ' → logprob: -7.104144096374512
    6. '	def' → logprob: -7.854144096374512
    7. ' def' → logprob: -8.354144096374512
    8. '<|end|>' → logprob: -8.604144096374512
    9. '        
' → logprob: -9.979144096374512
    10. ':' → logprob: -10.104144096374512

Token 2711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006610210984945297
    2. '
' → logprob: -5.25661039352417
    3. 'def' → logprob: -6.63161039352417
    4. '    
' → logprob: -10.381609916687012
    5. ' def' → logprob: -10.881609916687012
    6. '	def' → logprob: -12.256609916687012
    7. '       ' → logprob: -13.256609916687012
    8. '        
' → logprob: -14.381609916687012
    9. '```' → logprob: -16.256610870361328
    10. 'import' → logprob: -17.131610870361328

Token 2712: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.292907877039397e-06
    2. '   ' → logprob: -13.25000286102295
    3. ' def' → logprob: -13.50000286102295
    4. '
' → logprob: -16.000003814697266
    5. '	def' → logprob: -20.000003814697266
    6. 'line' → logprob: -22.250003814697266
    7. '_def' → logprob: -23.125003814697266
    8. '    
' → logprob: -23.625003814697266
    9. '```' → logprob: -23.875003814697266
    10. 'current' → logprob: -24.500003814697266

Token 2713: ' __' (ID: 2516)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.11687933653593063
    2. 'parse' → logprob: -2.3668792247772217
    3. '__' → logprob: -4.116879463195801
    4. 'next' → logprob: -8.8668794631958
    5. '_read' → logprob: -9.6168794631958
    6. '_parse' → logprob: -10.8668794631958
    7. '_next' → logprob: -11.8668794631958
    8. 'def' → logprob: -12.4918794631958
    9. ' readline' → logprob: -14.9918794631958
    10. 'get' → logprob: -15.2418794631958

Token 2714: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.07913267612457275
    2. 'next' → logprob: -2.579132556915283
    3. 'init' → logprob: -8.329133033752441
    4. ' next' → logprob: -13.954133033752441
    5. 'read' → logprob: -15.079133033752441
    6. 'enter' → logprob: -16.079132080078125
    7. 'ait' → logprob: -16.829132080078125
    8. '_next' → logprob: -17.079132080078125
    9. 'iterator' → logprob: -17.329132080078125
    10. 'an' → logprob: -17.704132080078125

Token 2715: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00541102746501565
    2. '(self' → logprob: -5.255411148071289
    3. '__' → logprob: -9.380411148071289
    4. '__(
' → logprob: -10.130411148071289
    5. '_(' → logprob: -10.630411148071289
    6. '(' → logprob: -10.630411148071289
    7. '_' → logprob: -13.005411148071289
    8. 'self' → logprob: -14.255411148071289
    9. '(s' → logprob: -15.130411148071289
    10. '   ' → logprob: -15.505411148071289

Token 2716: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.246537173457909e-06
    2. '
' → logprob: -12.750003814697266
    3. ')' → logprob: -13.750003814697266
    4. '):
' → logprob: -15.875003814697266
    5. ')
' → logprob: -16.375003814697266
    6. ' self' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.125003814697266
    8. '       ' → logprob: -18.500003814697266
    9. '	self' → logprob: -19.000003814697266
    10. '(self' → logprob: -19.250003814697266

Token 2717: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13395045697689056
    2. '):
' → logprob: -2.7589504718780518
    3. 'self' → logprob: -3.2589504718780518
    4. '__(' → logprob: -4.633950233459473
    5. '):' → logprob: -4.883950233459473
    6. ')' → logprob: -6.008950233459473
    7. ')(' → logprob: -6.133950233459473
    8. '(' → logprob: -7.633950233459473
    9. '__' → logprob: -8.508950233459473
    10. '   ' → logprob: -9.133950233459473

Token 2718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015109812375158072
    2. '   ' → logprob: -8.875150680541992
    3. '           ' → logprob: -13.125150680541992
    4. '```' → logprob: -13.250150680541992
    5. 'self' → logprob: -13.375150680541992
    6. '	   ' → logprob: -13.500150680541992
    7. '
' → logprob: -14.000150680541992
    8. 'tokens' → logprob: -14.125150680541992
    9. 'token' → logprob: -14.375150680541992
    10. 'for' → logprob: -15.000150680541992

Token 2719: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5293847322463989
    2. '       ' → logprob: -1.029384732246399
    3. 'while' → logprob: -3.6543846130371094
    4. 'line' → logprob: -4.404384613037109
    5. '   ' → logprob: -4.529384613037109
    6. ' for' → logprob: -5.529384613037109
    7. 'return' (adapté à ' return') → logprob: -7.529384613037109
    8. 'yield' → logprob: -9.15438461303711
    9. 'self' → logprob: -9.40438461303711
    10. '
' → logprob: -9.90438461303711

Token 2720: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.8889261304575484e-06
    2. ' self' → logprob: -12.625003814697266
    3. 'iter' → logprob: -15.125003814697266
    4. '(self' → logprob: -16.375003814697266
    5. '       ' → logprob: -16.875003814697266
    6. '   ' → logprob: -17.250003814697266
    7. '	self' → logprob: -19.250003814697266
    8. '
' → logprob: -20.625003814697266
    9. ' iter' → logprob: -21.875003814697266
    10. '_self' → logprob: -22.625003814697266

Token 2721: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05060174688696861
    2. ':' → logprob: -3.5506017208099365
    3. '   ' → logprob: -4.175601959228516
    4. ':
' → logprob: -5.925601959228516
    5. 'def' → logprob: -7.175601959228516
    6. '    
' → logprob: -7.675601959228516
    7. '

' → logprob: -8.300601959228516
    8. '  
' → logprob: -8.800601959228516
    9. '	def' → logprob: -8.925601959228516
    10. ' 
' → logprob: -8.925601959228516

Token 2722: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09290236234664917
    2. '   ' → logprob: -2.467902421951294
    3. '    
' → logprob: -5.717902183532715
    4. 'def' → logprob: -7.717902183532715
    5. '  
' → logprob: -9.467902183532715
    6. ' 
' → logprob: -9.842902183532715
    7. '        
' → logprob: -10.342902183532715
    8. '   
' → logprob: -11.342902183532715
    9. ' ' → logprob: -11.592902183532715
    10. '	
' → logprob: -11.967902183532715

Token 2723: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.21323354542255402
    2. '   ' → logprob: -1.7132335901260376
    3. '
' → logprob: -4.463233470916748
    4. ' def' → logprob: -9.088233947753906
    5. ' ' → logprob: -9.838233947753906
    6. '    
' → logprob: -10.213233947753906
    7. '	def' → logprob: -12.088233947753906
    8. '__' → logprob: -12.838233947753906
    9. '        
' → logprob: -13.088233947753906
    10. '  ' → logprob: -13.213233947753906

Token 2724: ' __' (ID: 2516)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6347799897193909
    2. '__' → logprob: -0.8847799897193909
    3. 'read' → logprob: -3.259779930114746
    4. '_next' → logprob: -4.509779930114746
    5. '
' → logprob: -4.884779930114746
    6. '_read' → logprob: -9.884779930114746
    7. '_' → logprob: -10.259779930114746
    8. '___' → logprob: -11.134779930114746
    9. '.__' → logprob: -11.384779930114746
    10. 'def' → logprob: -11.509779930114746

Token 2725: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.5048530030981055e-06
    2. ' next' → logprob: -14.000001907348633
    3. 'iter' → logprob: -14.500001907348633
    4. '_next' → logprob: -16.000001907348633
    5. 'Next' → logprob: -20.000001907348633
    6. '.next' → logprob: -20.250001907348633
    7. '(next' → logprob: -20.375001907348633
    8. 'init' → logprob: -20.500001907348633
    9. 'an' → logprob: -22.125001907348633
    10. '	next' → logprob: -22.375001907348633

Token 2726: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007376811117865145
    2. '__' → logprob: -7.25073766708374
    3. '(self' → logprob: -11.000738143920898
    4. '__(
' → logprob: -11.625738143920898
    5. '_(' → logprob: -13.875738143920898
    6. '__('' → logprob: -14.625738143920898
    7. '__((' → logprob: -15.250738143920898
    8. '__()
' → logprob: -15.875738143920898
    9. '__("' → logprob: -16.3757381439209
    10. '(' → logprob: -16.5007381439209

Token 2727: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002521680435165763
    2. ')' → logprob: -6.127521514892578
    3. '):' → logprob: -8.752521514892578
    4. '):
' → logprob: -8.752521514892578
    5. '
' → logprob: -11.377521514892578
    6. ' self' → logprob: -12.252521514892578
    7. '   ' → logprob: -12.877521514892578
    8. ' ' → logprob: -14.127521514892578
    9. '       ' → logprob: -15.752521514892578
    10. '):

' → logprob: -15.752521514892578

Token 2728: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08573127537965775
    2. '__(' → logprob: -2.710731267929077
    3. 'self' → logprob: -4.960731506347656
    4. '):
' → logprob: -5.585731506347656
    5. ')(' → logprob: -5.710731506347656
    6. '       ' → logprob: -6.960731506347656
    7. '   ' → logprob: -7.960731506347656
    8. ')' → logprob: -9.710731506347656
    9. '
' → logprob: -10.335731506347656
    10. '	self' → logprob: -10.460731506347656

Token 2729: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010087293572723866
    2. '       ' → logprob: -5.010087490081787
    3. 'self' → logprob: -6.510087490081787
    4. '(' → logprob: -6.635087490081787
    5. '   ' → logprob: -9.135087013244629
    6. '():
' → logprob: -9.135087013244629
    7. '():' → logprob: -9.385087013244629
    8. ':' → logprob: -9.635087013244629
    9. '	self' → logprob: -10.010087013244629
    10. ':
' → logprob: -10.385087013244629

Token 2730: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.006010087206959724
    2. 'List' → logprob: -5.881010055541992
    3. 'Tuple' → logprob: -5.881010055541992
    4. ' Optional' → logprob: -8.381010055541992
    5. 'int' → logprob: -9.131010055541992
    6. 'Point' → logprob: -9.756010055541992
    7. 'tuple' → logprob: -12.006010055541992
    8. 'None' → logprob: -13.631010055541992
    9. 'optional' → logprob: -13.756010055541992
    10. 'list' → logprob: -13.756010055541992

Token 2731: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.13118267059326172
    2. '[' → logprob: -2.1311826705932617
    3. '[int' → logprob: -5.881182670593262
    4. '[str' → logprob: -7.131182670593262
    5. '[
' → logprob: -8.131182670593262
    6. '[list' → logprob: -8.131182670593262
    7. 'Point' → logprob: -10.131182670593262
    8. ':' → logprob: -12.006182670593262
    9. '[D' → logprob: -12.631182670593262
    10. '[]' → logprob: -12.881182670593262

Token 2732: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02728481963276863
    2. '[List' → logprob: -3.777284860610962
    3. '[int' → logprob: -5.902284622192383
    4. '[str' → logprob: -6.652284622192383
    5. 'Point' → logprob: -12.902284622192383
    6. '[
' → logprob: -13.902284622192383
    7. 'Line' → logprob: -14.277284622192383
    8. '[line' → logprob: -14.402284622192383
    9. ']' → logprob: -14.527284622192383
    10. '<Point' → logprob: -14.777284622192383

Token 2733: 'Eu' (ID: 29824)
  Prédit: 'Eu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Eu' → logprob: -0.005956291686743498
    2. 'Point' → logprob: -5.755956172943115
    3. 'Tuple' → logprob: -6.380956172943115
    4. 'float' → logprob: -6.880956172943115
    5. 'Float' → logprob: -11.505956649780273
    6. 'Tu' → logprob: -11.630956649780273
    7. '[' → logprob: -11.880956649780273
    8. 'Equal' → logprob: -11.880956649780273
    9. 'Euro' → logprob: -12.380956649780273
    10. 'Line' → logprob: -12.505956649780273

Token 2734: 'clidean' (ID: 116188)
  Prédit: 'clidean'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clidean' → logprob: -4.167648876318708e-05
    2. 'clid' → logprob: -10.125041961669922
    3. 'cl' → logprob: -14.500041961669922
    4. 'u' → logprob: -14.875041961669922
    5. '```' → logprob: -14.875041961669922
    6. 'c' → logprob: -16.000041961669922
    7. 'Eu' → logprob: -16.375041961669922
    8. '``' → logprob: -16.500041961669922
    9. 'ucl' → logprob: -16.500041961669922
    10. 'ucle' → logprob: -17.750041961669922

Token 2735: 'Line' (ID: 3665)
  Prédit: 'Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: 0.0
    2. 'Lines' → logprob: -16.75
    3. 'line' → logprob: -17.75
    4. 'Point' → logprob: -18.25
    5. '_line' → logprob: -19.5
    6. '_Line' → logprob: -20.625
    7. 'Lin' → logprob: -20.875
    8. ' Line' → logprob: -21.0
    9. 'L' → logprob: -21.25
    10. 'Linea' → logprob: -21.25

Token 2736: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.027076581493020058
    2. ']:' → logprob: -4.027076721191406
    3. ']]:
' → logprob: -4.777076721191406
    4. ']:
' → logprob: -7.902076721191406
    5. ']' → logprob: -9.527076721191406
    6. ']:

' → logprob: -11.402076721191406
    7. '"]:
' → logprob: -12.527076721191406
    8. ']):
' → logprob: -13.027076721191406
    9. ']]' → logprob: -13.277076721191406
    10. '']:
' → logprob: -13.527076721191406

Token 2737: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012736850185319781
    2. ' line' → logprob: -7.3762736320495605
    3. 'line' → logprob: -8.251274108886719
    4. '```' → logprob: -8.251274108886719
    5. '   ' → logprob: -10.001274108886719
    6. ' lines' → logprob: -10.876274108886719
    7. '()' → logprob: -12.001274108886719
    8. '           ' → logprob: -12.251274108886719
    9. '_line' → logprob: -12.376274108886719
    10. '	line' → logprob: -12.376274108886719

Token 2738: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.008013521321117878
    2. '       ' → logprob: -5.258013725280762
    3. ' line' → logprob: -6.008013725280762
    4. 'while' → logprob: -8.133013725280762
    5. 'lines' → logprob: -11.758013725280762
    6. ' while' → logprob: -12.008013725280762
    7. '   ' → logprob: -12.258013725280762
    8. '	line' → logprob: -13.258013725280762
    9. 'length' → logprob: -14.508013725280762
    10. ' ' → logprob: -14.633013725280762

Token 2739: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08002781867980957
    2. ' =' → logprob: -2.5800278186798096
    3. '=line' → logprob: -7.0800275802612305
    4. 's' → logprob: -8.45502758026123
    5. '_line' → logprob: -10.45502758026123
    6. '_text' → logprob: -10.58002758026123
    7. '_=' → logprob: -11.70502758026123
    8. '_' → logprob: -11.95502758026123
    9. '=input' → logprob: -12.58002758026123
    10. 'line' → logprob: -12.83002758026123

Token 2740: ' ''
' (ID: 25366)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.15310683415737e-05
    2. ' self' → logprob: -10.750021934509277
    3. 'next' → logprob: -18.50002098083496
    4. '(self' → logprob: -20.75002098083496
    5. '
' → logprob: -21.50002098083496
    6. '	self' → logprob: -22.37502098083496
    7. '''
' → logprob: -23.25002098083496
    8. '=self' → logprob: -23.50002098083496
    9. '   ' → logprob: -24.00002098083496
    10. 'sel' → logprob: -24.12502098083496

Token 2741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6080926060676575
    2. 'while' → logprob: -0.8580926060676575
    3. ' while' → logprob: -3.4830925464630127
    4. 'line' → logprob: -7.358092784881592
    5. ' line' → logprob: -9.108092308044434
    6. '           ' → logprob: -9.733092308044434
    7. '	while' → logprob: -10.108092308044434
    8. '   ' → logprob: -10.608092308044434
    9. '#line' → logprob: -10.858092308044434
    10. '=' → logprob: -12.483092308044434

Token 2742: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0007249409682117403
    2. 'line' → logprob: -7.250724792480469
    3. ' while' → logprob: -11.250724792480469
    4. '       ' → logprob: -13.250724792480469
    5. '   ' → logprob: -17.12572479248047
    6. ' line' → logprob: -17.25072479248047
    7. '#line' → logprob: -17.25072479248047
    8. 'for' → logprob: -17.62572479248047
    9. 'try' → logprob: -18.12572479248047
    10. '#' → logprob: -18.37572479248047

Token 2743: ' True' (ID: 6432)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06257131695747375
    2. 'True' → logprob: -2.8125712871551514
    3. ' True' → logprob: -8.18757152557373
    4. ' line' → logprob: -8.93757152557373
    5. '(line' → logprob: -8.93757152557373
    6. '(True' → logprob: -10.06257152557373
    7. 'len' → logprob: -11.56257152557373
    8. 'not' → logprob: -11.56257152557373
    9. 'true' → logprob: -14.81257152557373
    10. '
' → logprob: -16.312570571899414

Token 2744: ':
' (ID: 734)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6225562691688538
    2. '=line' → logprob: -1.372556209564209
    3. '=' → logprob: -2.247556209564209
    4. '(line' → logprob: -3.247556209564209
    5. ' line' → logprob: -3.372556209564209
    6. '           ' → logprob: -4.997556209564209
    7. ' =' → logprob: -5.122556209564209
    8. ':
' → logprob: -5.497556209564209
    9. ':=' → logprob: -5.872556209564209
    10. 'and' → logprob: -5.872556209564209

Token 2745: '           ' (ID: 352)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.013951342552900314
    2. ' line' → logprob: -4.638951301574707
    3. '           ' → logprob: -5.513951301574707
    4. '   ' → logprob: -9.388951301574707
    5. '(line' → logprob: -10.638951301574707
    6. '	line' → logprob: -10.763951301574707
    7. '#line' → logprob: -11.638951301574707
    8. '       ' → logprob: -12.013951301574707
    9. '=line' → logprob: -12.763951301574707
    10. 'try' → logprob: -12.888951301574707

Token 2746: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -6.630610641877865e-06
    2. ' line' → logprob: -12.250006675720215
    3. 'try' → logprob: -13.750006675720215
    4. '           ' → logprob: -14.375006675720215
    5. '(line' → logprob: -17.0000057220459
    6. 'raw' → logprob: -17.3750057220459
    7. '	line' → logprob: -17.6250057220459
    8. '#line' → logprob: -17.7500057220459
    9. 'l' → logprob: -18.0000057220459
    10. 'chunk' → logprob: -18.0000057220459

Token 2747: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014972138218581676
    2. ' =' → logprob: -4.38997220993042
    3. '=line' → logprob: -6.01497220993042
    4. 'line' → logprob: -11.139971733093262
    5. '==' → logprob: -13.639971733093262
    6. '=
' → logprob: -14.389971733093262
    7. '+=' → logprob: -14.889971733093262
    8. ':=' → logprob: -15.264971733093262
    9. '.=' → logprob: -15.389971733093262
    10. '(line' → logprob: -16.389972686767578

Token 2748: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006267757853493094
    2. ' self' → logprob: -7.375626564025879
    3. '(self' → logprob: -15.500626564025879
    4. 'sys' → logprob: -16.250627517700195
    5. 'next' → logprob: -17.750627517700195
    6. '
' → logprob: -17.750627517700195
    7. 's' → logprob: -18.750627517700195
    8. ' ' → logprob: -19.250627517700195
    9. '	self' → logprob: -19.500627517700195
    10. '   ' → logprob: -20.000627517700195

Token 2749: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.004082197323441505
    2. 'input' → logprob: -5.504082202911377
    3. '.' → logprob: -13.004081726074219
    4. '.readline' → logprob: -13.754081726074219
    5. 'self' → logprob: -16.37908172607422
    6. '	input' → logprob: -16.62908172607422
    7. '<input' → logprob: -16.62908172607422
    8. ' input' → logprob: -17.00408172607422
    9. '.stdin' → logprob: -17.25408172607422
    10. '_input' → logprob: -17.37908172607422

Token 2750: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.29558274149894714
    2. 'stream' → logprob: -1.6705827713012695
    3. '.readline' → logprob: -3.2955827713012695
    4. 'line' → logprob: -4.0455827713012695
    5. '_line' → logprob: -4.4205827713012695
    6. 'strip' → logprob: -8.29558277130127
    7. '().' → logprob: -8.29558277130127
    8. '.' → logprob: -8.29558277130127
    9. '_lines' → logprob: -9.29558277130127
    10. '()
' → logprob: -9.54558277130127

Token 2751: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.842555426876061e-06
    2. '.' → logprob: -12.250004768371582
    3. ' readline' → logprob: -17.1250057220459
    4. '.read' → logprob: -18.6250057220459
    5. 'line' → logprob: -19.0000057220459
    6. '.strip' → logprob: -19.3750057220459
    7. '.rstrip' → logprob: -20.1250057220459
    8. '.readlines' → logprob: -20.1250057220459
    9. ' .' → logprob: -20.3750057220459
    10. '.
' → logprob: -20.5000057220459

Token 2752: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2667229175567627
    2. '().' → logprob: -1.7667229175567627
    3. '()' → logprob: -3.1417229175567627
    4. '           ' → logprob: -4.766722679138184
    5. '       ' → logprob: -5.266722679138184
    6. '('').' → logprob: -6.766722679138184
    7. 'if' → logprob: -6.891722679138184
    8. '('')
' → logprob: -7.141722679138184
    9. '
' → logprob: -7.266722679138184
    10. '.strip' → logprob: -7.516722679138184

Token 2753: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005037117283791304
    2. 'if' → logprob: -5.505037307739258
    3. '       ' → logprob: -7.255037307739258
    4. ' if' → logprob: -9.130037307739258
    5. '	       ' → logprob: -10.755037307739258
    6. '		' → logprob: -10.755037307739258
    7. '               ' → logprob: -11.005037307739258
    8. '```' → logprob: -11.005037307739258
    9. '
' → logprob: -11.880037307739258
    10. '        
' → logprob: -12.130037307739258

Token 2754: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002137532690539956
    2. ' if' → logprob: -6.252137660980225
    3. '           ' → logprob: -8.502137184143066
    4. '
' → logprob: -12.127137184143066
    5. 'If' → logprob: -15.002137184143066
    6. ';if' → logprob: -16.627138137817383
    7. '       ' → logprob: -16.877138137817383
    8. '	if' → logprob: -18.127138137817383
    9. '            
' → logprob: -18.502138137817383
    10. '               ' → logprob: -18.627138137817383

Token 2755: ' line' (ID: 2543)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5135812163352966
    2. 'line' → logprob: -1.0135812759399414
    3. ' not' → logprob: -3.2635812759399414
    4. ' line' → logprob: -7.638581275939941
    5. '#line' → logprob: -14.513581275939941
    6. 'len' → logprob: -15.013581275939941
    7. '(line' → logprob: -15.263581275939941
    8. '	line' → logprob: -16.513580322265625
    9. '(not' → logprob: -16.638580322265625
    10. '[line' → logprob: -16.763580322265625

Token 2756: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11317770928144455
    2. ' ==' → logprob: -2.23817777633667
    3. '=' → logprob: -9.238177299499512
    4. '.strip' → logprob: -9.613177299499512
    5. '==
' → logprob: -9.613177299499512
    6. '===' → logprob: -10.363177299499512
    7. ' is' → logprob: -10.363177299499512
    8. '()==' → logprob: -10.863177299499512
    9. ')==' → logprob: -11.488177299499512
    10. 'strip' → logprob: -11.863177299499512

Token 2757: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.1602877974510193
    2. ''' → logprob: -1.910287857055664
    3. ' '':
' → logprob: -10.535287857055664
    4. '''
' → logprob: -11.035287857055664
    5. '"":' → logprob: -11.160287857055664
    6. '""' → logprob: -12.410287857055664
    7. ''\' → logprob: -13.660287857055664
    8. ' '' → logprob: -14.160287857055664
    9. ''',' → logprob: -15.285287857055664
    10. '"' → logprob: -15.660287857055664

Token 2758: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39461493492126465
    2. '           ' → logprob: -1.1446149349212646
    3. ':' → logprob: -5.894615173339844
    4. 'return' → logprob: -6.394615173339844
    5. ':return' → logprob: -6.644615173339844
    6. ' or' → logprob: -6.769615173339844
    7. ':
' → logprob: -7.644615173339844
    8. '       ' → logprob: -9.894615173339844
    9. 'break' → logprob: -9.894615173339844
    10. 'or' → logprob: -10.019615173339844

Token 2759: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.01571359857916832
    2. 'return' → logprob: -4.265713691711426
    3. ' raise' → logprob: -6.515713691711426
    4. '               ' → logprob: -10.265713691711426
    5. '#' → logprob: -11.140713691711426
    6. '           ' → logprob: -11.265713691711426
    7. 'break' → logprob: -12.390713691711426
    8. '	raise' → logprob: -13.890713691711426
    9. 'Raise' → logprob: -14.390713691711426
    10. ' return' → logprob: -14.515713691711426

Token 2760: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -2.069664333248511e-05
    2. 'EOF' → logprob: -11.000020980834961
    3. ' Stop' → logprob: -12.625020980834961
    4. 'STOP' → logprob: -14.875020980834961
    5. '_Stop' → logprob: -16.12502098083496
    6. '_stop' → logprob: -16.50002098083496
    7. '.Stop' → logprob: -18.00002098083496
    8. '   ' → logprob: -18.37502098083496
    9. '
' → logprob: -18.50002098083496
    10. 'Stopping' → logprob: -19.00002098083496

Token 2761: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -6.704273118884885e-07
    2. 'iteration' → logprob: -14.625000953674316
    3. 'Async' → logprob: -16.125
    4. 'Iterator' → logprob: -16.375
    5. ' iteration' → logprob: -17.875
    6. '
' → logprob: -18.875
    7. 'Iter' → logprob: -20.0
    8. '_iteration' → logprob: -20.0
    9. 'Iterations' → logprob: -21.25
    10. 'Error' → logprob: -21.5

Token 2762: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01626063510775566
    2. '
' → logprob: -4.141260623931885
    3. '            
' → logprob: -8.891261100769043
    4. 'if' → logprob: -9.891261100769043
    5. '        
' → logprob: -11.891261100769043
    6. '    
' → logprob: -12.141261100769043
    7. '       ' → logprob: -12.266261100769043
    8. '  
' → logprob: -12.266261100769043
    9. '               ' → logprob: -12.391261100769043
    10. '		' → logprob: -13.016261100769043

Token 2763: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005637573776766658
    2. '
' → logprob: -7.750563621520996
    3. '            
' → logprob: -9.750563621520996
    4. '       ' → logprob: -9.875563621520996
    5. '        
' → logprob: -11.125563621520996
    6. '		' → logprob: -12.625563621520996
    7. '               ' → logprob: -13.625563621520996
    8. 'if' → logprob: -14.000563621520996
    9. '    
' → logprob: -14.250563621520996
    10. '          ' → logprob: -15.000563621520996

Token 2764: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.16140365600585938
    2. '           ' → logprob: -1.9114036560058594
    3. 'if' → logprob: -7.661403656005859
    4. ' line' → logprob: -7.786403656005859
    5. 'strip' → logprob: -9.03640365600586
    6. '       ' → logprob: -9.28640365600586
    7. '#line' → logprob: -10.41140365600586
    8. '=line' → logprob: -10.53640365600586
    9. '	line' → logprob: -11.41140365600586
    10. '(line' → logprob: -13.03640365600586

Token 2765: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006875330116599798
    2. ' =' → logprob: -5.131875514984131
    3. '=line' → logprob: -7.006875514984131
    4. 'strip' → logprob: -10.631875038146973
    5. '.strip' → logprob: -12.131875038146973
    6. '_strip' → logprob: -12.256875038146973
    7. '=str' → logprob: -12.881875038146973
    8. 'str' → logprob: -13.381875038146973
    9. '=
' → logprob: -13.631875038146973
    10. 'rstrip' → logprob: -14.756875038146973

Token 2766: '.strip' (ID: 40613)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2649369239807129
    2. '.strip' → logprob: -1.514936923980713
    3. 'strip' → logprob: -4.764936923980713
    4. '=str' → logprob: -6.264936923980713
    5. ' =' → logprob: -7.014936923980713
    6. 'str' → logprob: -7.639936923980713
    7. '_strip' → logprob: -8.264936447143555
    8. '=line' → logprob: -8.264936447143555
    9. '.rstrip' → logprob: -8.389936447143555
    10. '.' → logprob: -8.389936447143555

Token 2767: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021646523382514715
    2. '
' → logprob: -7.377164840698242
    3. 'if' → logprob: -8.127164840698242
    4. '<|end|>' → logprob: -8.252164840698242
    5. '<|end|>' → logprob: -8.502164840698242
    6. '       ' → logprob: -9.252164840698242
    7. ' if' → logprob: -9.252164840698242
    8. 'and' → logprob: -9.627164840698242
    9. ',' → logprob: -9.627164840698242
    10. ':
' → logprob: -9.877164840698242

Token 2768: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016480287013109773
    2. 'if' → logprob: -8.875164985656738
    3. '		' → logprob: -11.500164985656738
    4. '       ' → logprob: -12.250164985656738
    5. '	       ' → logprob: -12.375164985656738
    6. ' if' → logprob: -12.875164985656738
    7. '	   ' → logprob: -14.000164985656738
    8. '               ' → logprob: -14.250164985656738
    9. '    	   ' → logprob: -14.750164985656738
    10. '<|end|>' → logprob: -15.250164985656738

Token 2769: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0019298245897516608
    2. '           ' → logprob: -6.251929759979248
    3. ' if' → logprob: -13.626930236816406
    4. '       ' → logprob: -16.751930236816406
    5. 'If' → logprob: -18.876930236816406
    6. '               ' → logprob: -19.251930236816406
    7. '   ' → logprob: -19.876930236816406
    8. '	if' → logprob: -20.376930236816406
    9. '
' → logprob: -21.501930236816406
    10. '#' → logprob: -21.626930236816406

Token 2770: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0017080175457522273
    2. 'not' → logprob: -7.251708030700684
    3. ' line' → logprob: -7.251708030700684
    4. 'len' → logprob: -8.501708030700684
    5. ' not' → logprob: -9.376708030700684
    6. ' len' → logprob: -15.001708030700684
    7. '   ' → logprob: -15.501708030700684
    8. '(line' → logprob: -15.751708030700684
    9. '#line' → logprob: -16.501707077026367
    10. '	line' → logprob: -16.876707077026367

Token 2771: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0010852093109861016
    2. ' ==' → logprob: -7.25108528137207
    3. '!=' → logprob: -8.87608528137207
    4. 'and' → logprob: -9.50108528137207
    5. '()==' → logprob: -10.25108528137207
    6. ':' → logprob: -10.62608528137207
    7. '=='' → logprob: -10.75108528137207
    8. '==
' → logprob: -10.75108528137207
    9. '.startswith' → logprob: -11.25108528137207
    10. '===' → logprob: -11.62608528137207

Token 2772: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.04864970222115517
    2. ''' → logprob: -3.048649787902832
    3. '"":' → logprob: -10.298649787902832
    4. '""' → logprob: -10.673649787902832
    5. '''
' → logprob: -13.048649787902832
    6. '"' → logprob: -13.423649787902832
    7. ''',' → logprob: -14.173649787902832
    8. ' '':
' → logprob: -14.423649787902832
    9. '''.' → logprob: -15.548649787902832
    10. '':' → logprob: -16.423648834228516

Token 2773: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01798861473798752
    2. 'and' → logprob: -4.767988681793213
    3. ' and' → logprob: -5.017988681793213
    4. '           ' → logprob: -6.142988681793213
    5. ':
' → logprob: -8.017988204956055
    6. ':' → logprob: -8.767988204956055
    7. 'break' → logprob: -10.517988204956055
    8. '                   ' → logprob: -11.017988204956055
    9. '	           ' → logprob: -11.892988204956055
    10. '```' → logprob: -12.017988204956055

Token 2774: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4872974455356598
    2. '               ' → logprob: -0.9872974157333374
    3. 'try' → logprob: -5.237297534942627
    4. '                   ' → logprob: -5.987297534942627
    5. ' break' → logprob: -6.362297534942627
    6. 'num' → logprob: -6.362297534942627
    7. 'return' → logprob: -6.737297534942627
    8. 'if' → logprob: -8.237297058105469
    9. 'n' → logprob: -8.362297058105469
    10. '   ' → logprob: -9.487297058105469

Token 2775: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005440961103886366
    2. '           ' → logprob: -7.75054407119751
    3. '
' → logprob: -9.875544548034668
    4. 'if' → logprob: -11.000544548034668
    5. '        
' → logprob: -11.125544548034668
    6. ',' → logprob: -12.250544548034668
    7. 'try' → logprob: -12.375544548034668
    8. '```' → logprob: -12.625544548034668
    9. 'return' → logprob: -13.000544548034668
    10. '#' → logprob: -13.125544548034668

Token 2776: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042531240615062416
    2. '```' → logprob: -8.250425338745117
    3. 'if' → logprob: -9.375425338745117
    4. '           ' → logprob: -10.375425338745117
    5. 'try' → logprob: -10.500425338745117
    6. ' if' → logprob: -12.125425338745117
    7. 'return' → logprob: -12.750425338745117
    8. 'num' → logprob: -13.125425338745117
    9. 'n' → logprob: -13.750425338745117
    10. '   ' → logprob: -13.750425338745117

Token 2777: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.047842733561992645
    2. '       ' → logprob: -3.7978427410125732
    3. 'num' → logprob: -4.047842502593994
    4. 'try' → logprob: -5.672842502593994
    5. 'count' → logprob: -5.922842502593994
    6. 'if' (adapté à ' if') → logprob: -7.547842502593994
    7. 'k' → logprob: -9.797842979431152
    8. ' n' → logprob: -9.797842979431152
    9. 'parts' → logprob: -10.422842979431152
    10. 'm' → logprob: -10.547842979431152

Token 2778: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00901526864618063
    2. ' line' → logprob: -4.759015083312988
    3. 'int' → logprob: -7.884015083312988
    4. ' int' → logprob: -11.384015083312988
    5. 'not' → logprob: -12.759015083312988
    6. ' not' → logprob: -13.009015083312988
    7. '   ' → logprob: -13.009015083312988
    8. ' ' → logprob: -13.134015083312988
    9. '(line' → logprob: -13.759015083312988
    10. 'len' → logprob: -14.134015083312988

Token 2779: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13592681288719177
    2. ' ==' → logprob: -2.1359267234802246
    3. '.startswith' → logprob: -5.385926723480225
    4. '=='' → logprob: -6.385926723480225
    5. '.is' → logprob: -6.635926723480225
    6. 'isdigit' → logprob: -7.510926723480225
    7. '=="' → logprob: -8.260927200317383
    8. 'startswith' → logprob: -9.135927200317383
    9. '==
' → logprob: -9.260927200317383
    10. '.' → logprob: -9.510927200317383

Token 2780: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1003209725022316
    2. '"' → logprob: -2.350321054458618
    3. '0' → logprob: -9.600320816040039
    4. ' '' → logprob: -10.225320816040039
    5. '''' → logprob: -12.475320816040039
    6. ''end' → logprob: -12.850320816040039
    7. ' ' → logprob: -13.850320816040039
    8. ''#' → logprob: -14.225320816040039
    9. ' "' → logprob: -14.850320816040039
    10. '`' → logprob: -15.100320816040039

Token 2781: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03184215724468231
    2. ''' → logprob: -3.6568422317504883
    3. '':
' → logprob: -5.531842231750488
    4. '"' → logprob: -7.656842231750488
    5. '':' → logprob: -7.906842231750488
    6. '#' → logprob: -8.281842231750488
    7. 'END' → logprob: -9.406842231750488
    8. '''' → logprob: -9.906842231750488
    9. 'None' → logprob: -10.031842231750488
    10. ''):
' → logprob: -10.281842231750488

Token 2782: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.012291830964386463
    2. '':' → logprob: -4.51229190826416
    3. '\n' → logprob: -7.38729190826416
    4. '':
' → logprob: -7.76229190826416
    5. ''' → logprob: -8.63729190826416
    6. ''):
' → logprob: -10.88729190826416
    7. '":
' → logprob: -14.51229190826416
    8. '\r' → logprob: -14.51229190826416
    9. '':

' → logprob: -14.63729190826416
    10. ''
' → logprob: -15.51229190826416

Token 2783: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024275471514556557
    2. ':
' → logprob: -8.500243186950684
    3. ':' → logprob: -10.875243186950684
    4. '       ' → logprob: -11.500243186950684
    5. '		' → logprob: -12.625243186950684
    6. '               ' → logprob: -13.000243186950684
    7. 'return' → logprob: -13.125243186950684
    8. '          ' → logprob: -14.000243186950684
    9. '
' → logprob: -14.375243186950684
    10. ':return' → logprob: -14.500243186950684

Token 2784: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.031232178211212158
    2. '           ' → logprob: -3.5312321186065674
    3. ' raise' → logprob: -6.5312323570251465
    4. '       ' → logprob: -11.156231880187988
    5. '	raise' → logprob: -11.906231880187988
    6. '               ' → logprob: -14.281231880187988
    7. 'raises' → logprob: -14.531231880187988
    8. 'return' → logprob: -15.031231880187988
    9. '
' → logprob: -15.406231880187988
    10. '   ' → logprob: -15.781231880187988

Token 2785: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -6.704273118884885e-07
    2. ' Stop' → logprob: -14.250000953674316
    3. '_stop' → logprob: -21.375
    4. 'EOF' → logprob: -21.5
    5. '_Stop' → logprob: -21.5
    6. 'STOP' → logprob: -21.75
    7. 'System' → logprob: -22.125
    8. '.Stop' → logprob: -23.125
    9. '   ' → logprob: -23.375
    10. '
' → logprob: -24.625

Token 2786: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -4.246537173457909e-06
    2. 'iteration' → logprob: -13.250003814697266
    3. 'Iterator' → logprob: -13.625003814697266
    4. '_iteration' → logprob: -13.875003814697266
    5. ' iteration' → logprob: -16.125003814697266
    6. 'Iterations' → logprob: -16.750003814697266
    7. 'Stop' → logprob: -17.125003814697266
    8. 'Interaction' → logprob: -17.375003814697266
    9. 'Iter' → logprob: -18.000003814697266
    10. 'Instruction' → logprob: -18.250003814697266

Token 2787: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017436044290661812
    2. 'n' → logprob: -6.501743793487549
    3. 'num' → logprob: -8.87674331665039
    4. '        
' → logprob: -10.12674331665039
    5. '
' → logprob: -10.25174331665039
    6. 'count' → logprob: -11.75174331665039
    7. 'number' → logprob: -11.75174331665039
    8. '```' → logprob: -13.00174331665039
    9. '#' → logprob: -13.75174331665039
    10. '   ' → logprob: -13.87674331665039

Token 2788: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.255023956531659e-05
    2. 'num' → logprob: -10.000072479248047
    3. 'n' → logprob: -11.500072479248047
    4. '        
' → logprob: -12.250072479248047
    5. '```' → logprob: -12.250072479248047
    6. 'number' → logprob: -13.375072479248047
    7. '
' → logprob: -13.750072479248047
    8. '           ' → logprob: -14.125072479248047
    9. 'count' → logprob: -14.250072479248047
    10. '   ' → logprob: -14.375072479248047

Token 2789: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.15303651988506317
    2. 'num' → logprob: -2.153036594390869
    3. '       ' → logprob: -3.903036594390869
    4. 'count' → logprob: -5.403036594390869
    5. 'm' → logprob: -7.653036594390869
    6. 'k' → logprob: -7.778036594390869
    7. 'try' → logprob: -9.028036117553711
    8. 'N' → logprob: -10.403036117553711
    9. 'lines' → logprob: -10.653036117553711
    10. 'number' → logprob: -11.778036117553711

Token 2790: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523989737033844
    2. '=' → logprob: -0.898989737033844
    3. ')' → logprob: -8.3989896774292
    4. '=int' → logprob: -8.5239896774292
    5. '_tokens' → logprob: -9.5239896774292
    6. ',' → logprob: -10.0239896774292
    7. '       ' → logprob: -10.1489896774292
    8. '.' → logprob: -10.2739896774292
    9. '   ' → logprob: -10.5239896774292
    10. '    ' → logprob: -10.5239896774292

Token 2791: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031777136027812958
    2. ' int' → logprob: -5.753177642822266
    3. '(int' → logprob: -20.503177642822266
    4. '   ' → logprob: -21.003177642822266
    5. '	int' → logprob: -21.128177642822266
    6. '[int' → logprob: -21.128177642822266
    7. '=int' → logprob: -21.753177642822266
    8. ' ' → logprob: -23.128177642822266
    9. 'in' → logprob: -23.503177642822266
    10. ':int' → logprob: -23.628177642822266

Token 2792: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00012725738633889705
    2. 'line' → logprob: -9.000126838684082
    3. '(' → logprob: -12.500126838684082
    4. '(
' → logprob: -17.5001277923584
    5. '[line' → logprob: -17.7501277923584
    6. '#line' → logprob: -18.0001277923584
    7. ' line' → logprob: -18.1251277923584
    8. '=line' → logprob: -18.3751277923584
    9. ' (' → logprob: -18.6251277923584
    10. '	line' → logprob: -19.7501277923584

Token 2793: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007591230678372085
    2. ')
' → logprob: -7.250759124755859
    3. '       ' → logprob: -10.00075912475586
    4. ' )' → logprob: -13.25075912475586
    5. '   ' → logprob: -13.75075912475586
    6. '
' → logprob: -16.25075912475586
    7. ')
' → logprob: -16.37575912475586
    8. '           ' → logprob: -16.62575912475586
    9. '))' → logprob: -16.62575912475586
    10. ')n' → logprob: -16.62575912475586

Token 2794: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38723650574684143
    2. 'lines' → logprob: -1.137236475944519
    3. 'points' → logprob: -8.137236595153809
    4. '	lines' → logprob: -10.262236595153809
    5. ' lines' → logprob: -10.762236595153809
    6. '(lines' → logprob: -11.762236595153809
    7. 'if' → logprob: -12.512236595153809
    8. 'line' → logprob: -13.637236595153809
    9. '```' → logprob: -13.887236595153809
    10. '   ' → logprob: -14.262236595153809

Token 2795: ' points' (ID: 5571)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.004661880433559418
    2. '       ' → logprob: -5.504662036895752
    3. 'points' (adapté à ' points') → logprob: -7.504662036895752
    4. '	lines' → logprob: -11.004661560058594
    5. ' lines' → logprob: -11.754661560058594
    6. 'if' → logprob: -11.879661560058594
    7. '(lines' → logprob: -14.254661560058594
    8. 'line' → logprob: -16.129661560058594
    9. '```' → logprob: -16.129661560058594
    10. '	' → logprob: -16.254661560058594

Token 2796: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5877324342727661
    2. '=' → logprob: -0.8377324342727661
    3. '=[]' → logprob: -4.462732315063477
    4. '=[]
' → logprob: -9.087732315063477
    5. '       ' → logprob: -9.837732315063477
    6. ':' → logprob: -12.462732315063477
    7. '   ' → logprob: -12.587732315063477
    8. '_list' → logprob: -12.587732315063477
    9. '        ' → logprob: -12.837732315063477
    10. '_lines' → logprob: -13.087732315063477

Token 2797: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.04859202727675438
    2. '[]' → logprob: -3.0485920906066895
    3. '[' → logprob: -13.048591613769531
    4. '[]

' → logprob: -13.548591613769531
    5. ' []
' → logprob: -13.798591613769531
    6. ' []' → logprob: -15.798591613769531
    7. '[
' → logprob: -17.42359161376953
    8. '[])
' → logprob: -18.17359161376953
    9. '[n' → logprob: -18.17359161376953
    10. '   ' → logprob: -19.17359161376953

Token 2798: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10064569115638733
    2. 'for' → logprob: -2.3506457805633545
    3. ' for' → logprob: -7.850645542144775
    4. 'points' → logprob: -10.725646018981934
    5. '	for' → logprob: -11.225646018981934
    6. 'lines' → logprob: -12.225646018981934
    7. '	' → logprob: -12.850646018981934
    8. '           ' → logprob: -13.225646018981934
    9. '   ' → logprob: -13.725646018981934
    10. 'while' → logprob: -14.350646018981934

Token 2799: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001516173011623323
    2. '       ' → logprob: -6.501516342163086
    3. 'lines' → logprob: -12.126516342163086
    4. 'points' → logprob: -12.376516342163086
    5. ' for' → logprob: -13.001516342163086
    6. 'while' → logprob: -13.251516342163086
    7. '	for' → logprob: -16.001516342163086
    8. '   ' → logprob: -16.876516342163086
    9. '
' → logprob: -17.626516342163086
    10. 'self' → logprob: -19.001516342163086

Token 2800: '_coords' (ID: 77948)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.180988073348999
    2. '_points' → logprob: -1.305988073348999
    3. ' =' → logprob: -2.055988073348999
    4. '_lines' → logprob: -2.305988073348999
    5. 'lines' → logprob: -2.680988073348999
    6. 'points' → logprob: -2.805988073348999
    7. 'count' → logprob: -3.805988073348999
    8. 'for' → logprob: -4.555988311767578
    9. 'read' → logprob: -4.555988311767578
    10. '_count' → logprob: -5.805988311767578

Token 2801: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10048411041498184
    2. ' =' → logprob: -2.3504841327667236
    3. '=[]' → logprob: -8.850483894348145
    4. '=[]
' → logprob: -9.350483894348145
    5. '_line' → logprob: -11.350483894348145
    6. '   ' → logprob: -11.975483894348145
    7. '=line' → logprob: -11.975483894348145
    8. '_lines' → logprob: -12.975483894348145
    9. '_' → logprob: -12.975483894348145
    10. '+=' → logprob: -13.100483894348145

Token 2802: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5188373327255249
    2. '2' → logprob: -1.143837332725525
    3. '0' → logprob: -2.6438374519348145
    4. '[]
' → logprob: -4.3938374519348145
    5. '[]' → logprob: -6.6438374519348145
    6. ' n' → logprob: -7.3938374519348145
    7. '3' → logprob: -8.143836975097656
    8. ' ' → logprob: -8.393836975097656
    9. '4' → logprob: -9.143836975097656
    10. ' []
' → logprob: -9.768836975097656

Token 2803: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5762677788734436
    2. '*' → logprob: -0.8262677788734436
    3. '
' → logprob: -8.201268196105957
    4. '   ' → logprob: -10.701268196105957
    5. 'def' → logprob: -12.576268196105957
    6. '```' → logprob: -12.826268196105957
    7. '0' → logprob: -12.951268196105957
    8. '       ' → logprob: -13.076268196105957
    9. '*(' → logprob: -13.076268196105957
    10. '    ' → logprob: -13.451268196105957

Token 2804: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006022060755640268
    2. '4' → logprob: -5.131021976470947
    3. '3' → logprob: -9.381022453308105
    4. ' ' → logprob: -12.006022453308105
    5. '6' → logprob: -13.756022453308105
    6. '
' → logprob: -14.506022453308105
    7. '   ' → logprob: -14.631022453308105
    8. '5' → logprob: -15.131022453308105
    9. '8' → logprob: -16.13102149963379
    10. '=' → logprob: -16.38102149963379

Token 2805: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032914772629737854
    2. '
' → logprob: -3.532914876937866
    3. '        
' → logprob: -7.282914638519287
    4. 'points' → logprob: -8.032915115356445
    5. 'tokens' → logprob: -8.157915115356445
    6. '<|end|>' → logprob: -8.282915115356445
    7. 'while' → logprob: -8.407915115356445
    8. ',' → logprob: -8.532915115356445
    9. ' points' → logprob: -8.907915115356445
    10. '   ' → logprob: -9.407915115356445

Token 2806: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012337993830442429
    2. 'coords' → logprob: -4.512338161468506
    3. 'while' → logprob: -7.262338161468506
    4. ' coords' → logprob: -8.637337684631348
    5. 'coordinates' → logprob: -8.887337684631348
    6. 'points' → logprob: -9.887337684631348
    7. 'next' → logprob: -10.387337684631348
    8. 'coord' → logprob: -10.512337684631348
    9. 'i' → logprob: -10.762337684631348
    10. 'pos' → logprob: -10.887337684631348

Token 2807: ' while' (ID: 2049)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.002322841202840209
    2. 'while' (adapté à ' while') → logprob: -6.502322673797607
    3. '       ' → logprob: -8.252323150634766
    4. ' coords' → logprob: -8.502323150634766
    5. 'data' → logprob: -9.252323150634766
    6. 'tokens' → logprob: -9.752323150634766
    7. 'coordinates' → logprob: -9.752323150634766
    8. 'coord' → logprob: -10.002323150634766
    9. 'read' → logprob: -10.377323150634766
    10. 'vals' → logprob: -11.002323150634766

Token 2808: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16666828095912933
    2. 'total' → logprob: -1.9166682958602905
    3. ' len' → logprob: -5.16666841506958
    4. ' total' → logprob: -7.29166841506958
    5. 'True' → logprob: -10.916667938232422
    6. '   ' → logprob: -12.166667938232422
    7. '(len' → logprob: -12.291667938232422
    8. 'points' → logprob: -12.916667938232422
    9. '       ' → logprob: -13.041667938232422
    10. ' True' → logprob: -13.791667938232422

Token 2809: '(points' (ID: 72131)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00015121731848921627
    2. '(points' → logprob: -9.000151634216309
    3. ' points' → logprob: -10.500151634216309
    4. '	points' → logprob: -15.750151634216309
    5. 'parts' → logprob: -17.875150680541992
    6. 'point' → logprob: -18.125150680541992
    7. 'lines' → logprob: -18.625150680541992
    8. 'line' → logprob: -18.750150680541992
    9. '_points' → logprob: -19.000150680541992
    10. 'coordinates' → logprob: -19.000150680541992

Token 2810: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.38854867219924927
    2. '<' → logprob: -1.1385486125946045
    3. '<len' → logprob: -7.388548851013184
    4. '<n' → logprob: -8.263548851013184
    5. '()<' → logprob: -8.388548851013184
    6. '<p' → logprob: -9.388548851013184
    7. '<size' → logprob: -9.513548851013184
    8. '<int' → logprob: -9.638548851013184
    9. ')<' → logprob: -10.013548851013184
    10. ')' → logprob: -10.263548851013184

Token 2811: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11784256994724274
    2. ' <' → logprob: -2.242842674255371
    3. '<len' → logprob: -6.117842674255371
    4. '<n' → logprob: -6.617842674255371
    5. '()<' → logprob: -8.117842674255371
    6. '<size' → logprob: -8.242842674255371
    7. '<int' → logprob: -8.367842674255371
    8. '<p' → logprob: -8.867842674255371
    9. '<num' → logprob: -9.492842674255371
    10. '<number' → logprob: -9.742842674255371

Token 2812: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03863886743783951
    2. 'points' → logprob: -3.2886388301849365
    3. ' total' → logprob: -7.538639068603516
    4. ' points' → logprob: -10.663639068603516
    5. '4' → logprob: -10.913639068603516
    6. 'n' → logprob: -11.163639068603516
    7. '(total' → logprob: -12.163639068603516
    8. '[' → logprob: -13.663639068603516
    9. 'point' → logprob: -14.413639068603516
    10. '2' → logprob: -14.413639068603516

Token 2813: '_coords' (ID: 77948)
  Prédit: '_coords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coords' → logprob: -0.010493416339159012
    2. '_points' → logprob: -4.760493278503418
    3. 'points' → logprob: -7.510493278503418
    4. 'coords' → logprob: -7.760493278503418
    5. '_coordinates' → logprob: -8.635493278503418
    6. 'Coords' → logprob: -9.135493278503418
    7. '   ' → logprob: -9.385493278503418
    8. '       ' → logprob: -9.510493278503418
    9. '_' → logprob: -9.635493278503418
    10. '_coord' → logprob: -9.885493278503418

Token 2814: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19090205430984497
    2. ':' → logprob: -1.8159019947052002
    3. '           ' → logprob: -5.565902233123779
    4. '       ' → logprob: -5.690902233123779
    5. '():
' → logprob: -6.315902233123779
    6. '):
' → logprob: -7.315902233123779
    7. '   ' → logprob: -8.190901756286621
    8. ' or' → logprob: -8.690901756286621
    9. '.readline' → logprob: -8.940901756286621
    10. ' and' → logprob: -9.065901756286621

Token 2815: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12704181671142578
    2. ' line' → logprob: -2.377041816711426
    3. 'line' → logprob: -4.127041816711426
    4. ' parts' → logprob: -5.377041816711426
    5. 'data' → logprob: -5.877041816711426
    6. ' data' → logprob: -7.002041816711426
    7. 'tokens' → logprob: -7.252041816711426
    8. '               ' → logprob: -8.252041816711426
    9. 'parts' → logprob: -8.377041816711426
    10. ' tokens' → logprob: -8.502041816711426

Token 2816: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5327625870704651
    2. 'parts' → logprob: -1.2827625274658203
    3. 'tokens' → logprob: -3.4077625274658203
    4. 'part' → logprob: -3.6577625274658203
    5. ' parts' → logprob: -3.7827625274658203
    6. 'data' → logprob: -3.9077625274658203
    7. 'coords' → logprob: -4.90776252746582
    8. 'line' (adapté à ' line') → logprob: -5.40776252746582
    9. 'chunk' → logprob: -5.40776252746582
    10. 'vals' → logprob: -5.53276252746582

Token 2817: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2884298264980316
    2. ' =' → logprob: -1.413429856300354
    3. '=line' → logprob: -5.5384297370910645
    4. '_tokens' → logprob: -6.6634297370910645
    5. 'tokens' → logprob: -7.0384297370910645
    6. '           ' → logprob: -7.9134297370910645
    7. '_line' → logprob: -8.538430213928223
    8. '_parts' → logprob: -8.788430213928223
    9. '+=' → logprob: -9.413430213928223
    10. 's' → logprob: -9.913430213928223

Token 2818: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38962894678115845
    2. '=' → logprob: -1.1396288871765137
    3. '=line' → logprob: -6.014628887176514
    4. '+=' → logprob: -9.014629364013672
    5. ' +=' → logprob: -9.514629364013672
    6. '_tokens' → logprob: -9.889629364013672
    7. 'tokens' → logprob: -10.139629364013672
    8. '		' → logprob: -11.764629364013672
    9. '=input' → logprob: -12.639629364013672
    10. '	' → logprob: -13.389629364013672

Token 2819: ' ''
' (ID: 25366)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007101670489646494
    2. ' self' → logprob: -7.2507100105285645
    3. '           ' → logprob: -15.875710487365723
    4. '(self' → logprob: -16.625709533691406
    5. '            
' → logprob: -19.500709533691406
    6. '
' → logprob: -19.750709533691406
    7. 'next' → logprob: -19.875709533691406
    8. '	self' → logprob: -21.000709533691406
    9. 'sys' → logprob: -21.250709533691406
    10. '   ' → logprob: -21.375709533691406

Token 2820: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08846690505743027
    2. '=line' → logprob: -2.9634668827056885
    3. 'line' → logprob: -4.213467121124268
    4. '=' → logprob: -4.213467121124268
    5. ' =' → logprob: -6.213467121124268
    6. '               ' → logprob: -7.088467121124268
    7. '#line' → logprob: -8.83846664428711
    8. ' line' → logprob: -8.96346664428711
    9. '(line' → logprob: -9.21346664428711
    10. '                   ' → logprob: -9.71346664428711

Token 2821: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.32669612765312195
    2. 'while' (adapté à ' while') → logprob: -1.3266961574554443
    3. '           ' → logprob: -4.576695919036865
    4. ' line' → logprob: -5.951695919036865
    5. ' while' → logprob: -7.826695919036865
    6. '       ' → logprob: -11.201696395874023
    7. '               ' → logprob: -11.451696395874023
    8. 'try' → logprob: -11.701696395874023
    9. '#line' → logprob: -12.201696395874023
    10. '	line' → logprob: -12.326696395874023

Token 2822: ' True' (ID: 6432)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.05237670987844467
    2. 'True' → logprob: -3.1773767471313477
    3. 'len' → logprob: -4.802376747131348
    4. ' line' → logprob: -7.302376747131348
    5. ' True' → logprob: -7.927376747131348
    6. '(line' → logprob: -10.052376747131348
    7. 'not' → logprob: -10.927376747131348
    8. '(True' → logprob: -10.927376747131348
    9. ' len' → logprob: -12.052376747131348
    10. '(len' → logprob: -13.677376747131348

Token 2823: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.534177303314209
    2. 'line' → logprob: -1.659177303314209
    3. '(line' → logprob: -2.034177303314209
    4. ' line' → logprob: -3.659177303314209
    5. '=line' → logprob: -3.784177303314209
    6. '[line' → logprob: -4.034177303314209
    7. 'and' → logprob: -5.034177303314209
    8. ':
' → logprob: -5.409177303314209
    9. '           ' → logprob: -5.409177303314209
    10. ' and' → logprob: -5.534177303314209

Token 2824: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32383331656455994
    2. 'line' → logprob: -1.3238333463668823
    3. '           ' → logprob: -4.948833465576172
    4. ' line' → logprob: -5.948833465576172
    5. '   ' → logprob: -7.823833465576172
    6. '                   ' → logprob: -8.323833465576172
    7. '#line' → logprob: -9.448833465576172
    8. '(line' → logprob: -10.448833465576172
    9. '	line' → logprob: -10.448833465576172
    10. '                       ' → logprob: -11.198833465576172

Token 2825: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -4.215330409351736e-05
    2. ' line' → logprob: -10.375041961669922
    3. '               ' → logprob: -12.250041961669922
    4. '           ' → logprob: -12.625041961669922
    5. '(line' → logprob: -13.875041961669922
    6. '                   ' → logprob: -13.875041961669922
    7. 'try' → logprob: -14.875041961669922
    8. '#line' → logprob: -15.625041961669922
    9. '	line' → logprob: -15.750041961669922
    10. '   ' → logprob: -16.125041961669922

Token 2826: '2' (ID: 17)
  Prédit: '=line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=line' → logprob: -0.6778252720832825
    2. '=' → logprob: -0.8028252720832825
    3. '2' → logprob: -3.1778252124786377
    4. ' =' → logprob: -6.177825450897217
    5. '(line' → logprob: -9.302824974060059
    6. '=
' → logprob: -9.802824974060059
    7. '[line' → logprob: -9.802824974060059
    8. '           ' → logprob: -10.177824974060059
    9. '+=' → logprob: -10.302824974060059
    10. '==' → logprob: -10.427824974060059

Token 2827: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7437143325805664
    2. '=line' → logprob: -0.9937143325805664
    3. ' =' → logprob: -1.8687143325805664
    4. '               ' → logprob: -9.993714332580566
    5. 'line' → logprob: -10.493714332580566
    6. '           ' → logprob: -10.868714332580566
    7. '(line' → logprob: -11.368714332580566
    8. '+=' → logprob: -11.993714332580566
    9. '[line' → logprob: -11.993714332580566
    10. '=sys' → logprob: -12.243714332580566

Token 2828: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002668192028068006
    2. ' self' → logprob: -8.250267028808594
    3. '                   ' → logprob: -12.375267028808594
    4. '               ' → logprob: -14.250267028808594
    5. '           ' → logprob: -15.375267028808594
    6. '(self' → logprob: -15.625267028808594
    7. 'sys' → logprob: -16.125267028808594
    8. '                    
' → logprob: -18.500267028808594
    9. 'line' → logprob: -18.625267028808594
    10. '                       ' → logprob: -18.625267028808594

Token 2829: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.576827347278595
    2. 'input' → logprob: -0.826827347278595
    3. '.readline' → logprob: -7.076827526092529
    4. '.' → logprob: -11.076827049255371
    5. '=input' → logprob: -11.826827049255371
    6. '_input' → logprob: -11.826827049255371
    7. '.stdin' → logprob: -12.201827049255371
    8. ' input' → logprob: -13.451827049255371
    9. 'self' → logprob: -13.576827049255371
    10. '<input' → logprob: -13.826827049255371

Token 2830: '_stream' (ID: 29670)
  Prédit: 'stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.396528035402298
    2. '_stream' → logprob: -1.2715280055999756
    3. '().' → logprob: -3.8965280055999756
    4. 'line' → logprob: -4.396528244018555
    5. 'strip' → logprob: -4.896528244018555
    6. '.readline' → logprob: -5.646528244018555
    7. '()
' → logprob: -6.396528244018555
    8. '.strip' → logprob: -7.771528244018555
    9. 'lines' → logprob: -8.521528244018555
    10. '2' → logprob: -8.521528244018555

Token 2831: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.8497312895488e-05
    2. '.' → logprob: -10.375068664550781
    3. '           ' → logprob: -11.625068664550781
    4. 'read' → logprob: -11.750068664550781
    5. ' readline' → logprob: -11.875068664550781
    6. '.strip' → logprob: -12.125068664550781
    7. '.read' → logprob: -12.750068664550781
    8. '=' → logprob: -13.500068664550781
    9. '               ' → logprob: -13.625068664550781
    10. '().' → logprob: -14.125068664550781

Token 2832: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.27030885219573975
    2. '               ' → logprob: -1.7703088521957397
    3. '()' → logprob: -3.2703089714050293
    4. '():
' → logprob: -4.145308971405029
    5. '                   ' → logprob: -5.270308971405029
    6. '<|end|>' → logprob: -5.770308971405029
    7. '()
' → logprob: -7.145308971405029
    8. '('').' → logprob: -7.520308971405029
    9. '<|end|>' → logprob: -7.520308971405029
    10. '();' → logprob: -7.770308971405029

Token 2833: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011383899487555027
    2. '().' → logprob: -4.886384010314941
    3. '<|end|>' → logprob: -6.761384010314941
    4. '<|end|>' → logprob: -7.511384010314941
    5. '                   ' → logprob: -8.136384010314941
    6. '           ' → logprob: -8.261384010314941
    7. '(line' → logprob: -8.261384010314941
    8. '	           ' → logprob: -8.511384010314941
    9. '```' → logprob: -8.886384010314941
    10. '('').' → logprob: -9.011384010314941

Token 2834: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5024657845497131
    2. '               ' → logprob: -1.2524657249450684
    3. ' if' → logprob: -2.2524657249450684
    4. '           ' → logprob: -5.627465724945068
    5. '                   ' → logprob: -8.877466201782227
    6. 'line' → logprob: -9.002466201782227
    7. ' line' → logprob: -9.877466201782227
    8. '#line' → logprob: -10.627466201782227
    9. '(line' → logprob: -10.752466201782227
    10. ';if' → logprob: -11.877466201782227

Token 2835: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0019910898990929127
    2. ' line' → logprob: -6.251991271972656
    3. 'not' → logprob: -9.876991271972656
    4. ' not' → logprob: -11.626991271972656
    5. '(line' → logprob: -13.876991271972656
    6. '[line' → logprob: -14.751991271972656
    7. '#line' → logprob: -14.876991271972656
    8. '	line' → logprob: -15.251991271972656
    9. 'len' → logprob: -16.626991271972656
    10. '=line' → logprob: -16.751991271972656

Token 2836: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9836016297340393
    2. '.strip' → logprob: -0.9836016297340393
    3. '==' → logprob: -1.6086015701293945
    4. '```' → logprob: -4.1086015701293945
    5. '!=' → logprob: -5.1086015701293945
    6. '                   ' → logprob: -5.7336015701293945
    7. '=' → logprob: -5.7336015701293945
    8. '=None' → logprob: -5.7336015701293945
    9. ' is' → logprob: -6.1086015701293945
    10. ' ==' → logprob: -6.3586015701293945

Token 2837: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17139515280723572
    2. ' ==' → logprob: -1.921395182609558
    3. '.strip' → logprob: -4.921395301818848
    4. '=' → logprob: -6.796395301818848
    5. '==
' → logprob: -6.921395301818848
    6. '=='' → logprob: -6.921395301818848
    7. '===' → logprob: -8.796395301818848
    8. ')==' → logprob: -9.671395301818848
    9. '()==' → logprob: -9.796395301818848
    10. ' is' → logprob: -9.921395301818848

Token 2838: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.006453166250139475
    2. ''' → logprob: -5.756453037261963
    3. ' '':
' → logprob: -5.756453037261963
    4. '''
' → logprob: -9.506453514099121
    5. ' '' → logprob: -10.881453514099121
    6. ''\' → logprob: -12.006453514099121
    7. ' ''' → logprob: -12.381453514099121
    8. '""' → logprob: -13.631453514099121
    9. 'None' → logprob: -14.256453514099121
    10. ''''' → logprob: -14.381453514099121

Token 2839: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0042976574040949345
    2. ':
' → logprob: -6.129297733306885
    3. ':' → logprob: -7.129297733306885
    4. '               ' → logprob: -7.254297733306885
    5. '                       ' → logprob: -7.629297733306885
    6. 'break' → logprob: -10.629297256469727
    7. '           ' → logprob: -10.879297256469727
    8. ',' → logprob: -11.504297256469727
    9. '                  ' → logprob: -11.754297256469727
    10. ':return' → logprob: -11.879297256469727

Token 2840: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.04951344430446625
    2. '                   ' → logprob: -3.549513339996338
    3. ' raise' → logprob: -4.049513339996338
    4. 'break' → logprob: -6.799513339996338
    5. '                       ' → logprob: -7.299513339996338
    6. '               ' → logprob: -8.424513816833496
    7. 'return' → logprob: -9.424513816833496
    8. '           ' → logprob: -11.174513816833496
    9. '   ' → logprob: -11.174513816833496
    10. ' break' → logprob: -12.049513816833496

Token 2841: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.0031818747520446777
    2. 'EOF' → logprob: -5.7531819343566895
    3. ' Stop' → logprob: -12.503181457519531
    4. ' EOF' → logprob: -15.878181457519531
    5. 'Runtime' → logprob: -16.87818145751953
    6. 'STOP' → logprob: -17.12818145751953
    7. '
' → logprob: -17.25318145751953
    8. 'System' → logprob: -17.25318145751953
    9. '_Stop' → logprob: -17.75318145751953
    10. 'Value' → logprob: -17.87818145751953

Token 2842: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -0.001938750152476132
    2. 'Stop' → logprob: -6.251938819885254
    3. 'EOF' → logprob: -12.501938819885254
    4. 'iteration' → logprob: -13.376938819885254
    5. 'Exit' → logprob: -13.751938819885254
    6. 'Iter' → logprob: -13.876938819885254
    7. 'Error' → logprob: -14.001938819885254
    8. 'Input' → logprob: -14.376938819885254
    9. 'Iterator' → logprob: -14.626938819885254
    10. 'Iterations' → logprob: -15.626938819885254

Token 2843: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01102188415825367
    2. '                   ' → logprob: -4.761022090911865
    3. '           ' → logprob: -6.386022090911865
    4. '
' → logprob: -8.386021614074707
    5. '#line' → logprob: -9.886021614074707
    6. '                       ' → logprob: -9.886021614074707
    7. '[line' → logprob: -9.886021614074707
    8. '<|end|>' → logprob: -9.886021614074707
    9. '                
' → logprob: -10.011021614074707
    10. ' line' → logprob: -10.261021614074707

Token 2844: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013206700794398785
    2. '           ' → logprob: -5.138206481933594
    3. '                   ' → logprob: -5.263206481933594
    4. 'line' → logprob: -7.138206481933594
    5. '
' → logprob: -7.888206481933594
    6. ' line' → logprob: -8.638206481933594
    7. '(line' → logprob: -8.888206481933594
    8. '       ' → logprob: -9.013206481933594
    9. '=line' → logprob: -9.013206481933594
    10. '#line' → logprob: -9.138206481933594

Token 2845: ' line' (ID: 2543)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.753176748752594
    2. '           ' → logprob: -1.2531766891479492
    3. 'line' (adapté à ' line') → logprob: -1.5031766891479492
    4. ' line' → logprob: -4.128176689147949
    5. '                   ' → logprob: -5.378176689147949
    6. 'break' → logprob: -9.37817668914795
    7. '#line' → logprob: -9.62817668914795
    8. '       ' → logprob: -9.62817668914795
    9. '   ' → logprob: -10.12817668914795
    10. '	line' → logprob: -10.75317668914795

Token 2846: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3183956444263458
    2. '=line' → logprob: -1.3183956146240234
    3. '=' → logprob: -5.318395614624023
    4. ' =' → logprob: -8.693395614624023
    5. 'line' → logprob: -11.193395614624023
    6. '           ' → logprob: -12.318395614624023
    7. '#line' → logprob: -12.318395614624023
    8. '[line' → logprob: -12.318395614624023
    9. '_line' → logprob: -12.443395614624023
    10. '               ' → logprob: -12.443395614624023

Token 2847: '=line' (ID: 192488)
  Prédit: '=line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=line' → logprob: -0.4756399989128113
    2. '=' → logprob: -0.9756399989128113
    3. ' =' → logprob: -6.600639820098877
    4. '=
' → logprob: -8.725640296936035
    5. '.strip' → logprob: -10.975640296936035
    6. '=str' → logprob: -11.725640296936035
    7. 'line' → logprob: -13.100640296936035
    8. '#line' → logprob: -13.225640296936035
    9. '=

' → logprob: -13.850640296936035
    10. '=row' → logprob: -14.100640296936035

Token 2848: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6480575799942017
    2. '.strip' → logprob: -0.7730575799942017
    3. '().' → logprob: -4.898057460784912
    4. '=line' → logprob: -5.648057460784912
    5. 'strip' → logprob: -5.773057460784912
    6. '.rstrip' → logprob: -7.148057460784912
    7. '```' → logprob: -9.27305793762207
    8. '(strip' → logprob: -9.39805793762207
    9. '[line' → logprob: -9.89805793762207
    10. '_strip' → logprob: -10.14805793762207

Token 2849: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0008482214179821312
    2. '.split' → logprob: -7.500848293304443
    3. '.' → logprob: -8.875847816467285
    4. '.rstrip' → logprob: -9.250847816467285
    5. 'strip' → logprob: -9.875847816467285
    6. '               ' → logprob: -13.375847816467285
    7. '.replace' → logprob: -13.625847816467285
    8. '.trim' → logprob: -14.250847816467285
    9. '           ' → logprob: -14.375847816467285
    10. 'rstrip' → logprob: -14.500847816467285

Token 2850: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042382486164569855
    2. '           ' → logprob: -4.292382717132568
    3. '<|end|>' → logprob: -4.542382717132568
    4. ' and' → logprob: -4.917382717132568
    5. '<|end|>' → logprob: -6.167382717132568
    6. '                   ' → logprob: -6.417382717132568
    7. ',' → logprob: -6.667382717132568
    8. ':
' → logprob: -6.667382717132568
    9. ')' → logprob: -6.792382717132568
    10. 'and' → logprob: -6.917382717132568

Token 2851: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029049601405858994
    2. '           ' → logprob: -3.6540496349334717
    3. '                   ' → logprob: -6.029049396514893
    4. 'if' → logprob: -9.15404987335205
    5. '	           ' → logprob: -9.40404987335205
    6. '	       ' → logprob: -10.15404987335205
    7. ' if' → logprob: -10.52904987335205
    8. ',' → logprob: -11.15404987335205
    9. '                       ' → logprob: -11.40404987335205
    10. '       ' → logprob: -11.77904987335205

Token 2852: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4061860740184784
    2. '               ' → logprob: -1.2811861038208008
    3. '           ' → logprob: -2.906186103820801
    4. ' if' → logprob: -6.656186103820801
    5. '                   ' → logprob: -9.9061861038208
    6. 'break' → logprob: -10.4061861038208
    7. 'tokens' → logprob: -11.0311861038208
    8. '   ' → logprob: -11.6561861038208
    9. '	           ' → logprob: -11.9061861038208
    10. '       ' → logprob: -12.0311861038208

Token 2853: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0013310716021806002
    2. ' line' → logprob: -6.626330852508545
    3. 'len' → logprob: -12.376331329345703
    4. '   ' → logprob: -15.001331329345703
    5. '(line' → logprob: -15.751331329345703
    6. ' ' → logprob: -15.751331329345703
    7. '	line' → logprob: -15.876331329345703
    8. '
' → logprob: -16.001331329345703
    9. '#line' → logprob: -16.126331329345703
    10. '           ' → logprob: -17.251331329345703

Token 2854: '2' (ID: 17)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6729141473770142
    2. '!=' → logprob: -0.9229141473770142
    3. '!='' → logprob: -2.4229140281677246
    4. '               ' → logprob: -6.797914028167725
    5. '()!=' → logprob: -6.922914028167725
    6. '                   ' → logprob: -7.797914028167725
    7. ')!=' → logprob: -8.172914505004883
    8. '!==' → logprob: -8.797914505004883
    9. ')' → logprob: -8.922914505004883
    10. '!' → logprob: -8.922914505004883

Token 2855: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.49602729082107544
    2. ' !=' → logprob: -1.1210272312164307
    3. '!='' → logprob: -2.7460272312164307
    4. '!="' → logprob: -8.371026992797852
    5. ')!=' → logprob: -8.621026992797852
    6. ':
' → logprob: -8.621026992797852
    7. ':' → logprob: -8.871026992797852
    8. '()!=' → logprob: -9.371026992797852
    9. ']!=' → logprob: -10.621026992797852
    10. '!==' → logprob: -10.871026992797852

Token 2856: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0032462780363857746
    2. ''' → logprob: -5.753246307373047
    3. ' '':
' → logprob: -9.753246307373047
    4. '''
' → logprob: -11.503246307373047
    5. '""' → logprob: -16.753246307373047
    6. ''',' → logprob: -16.878246307373047
    7. ' '' → logprob: -17.003246307373047
    8. '"":' → logprob: -17.253246307373047
    9. '':''' → logprob: -17.378246307373047
    10. ''''' → logprob: -17.378246307373047

Token 2857: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0619891993701458
    2. ':
' → logprob: -3.0619893074035645
    3. '               ' → logprob: -4.5619893074035645
    4. ':' → logprob: -6.4369893074035645
    5. '                       ' → logprob: -6.9369893074035645
    6. 'break' → logprob: -8.811988830566406
    7. '                  ' → logprob: -10.061988830566406
    8. ',' → logprob: -10.436988830566406
    9. '           ' → logprob: -10.936988830566406
    10. '                           ' → logprob: -11.436988830566406

Token 2858: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.059180889278650284
    2. '                   ' → logprob: -3.059180974960327
    3. ' break' → logprob: -5.309180736541748
    4. '                       ' → logprob: -5.934180736541748
    5. '	break' → logprob: -6.184180736541748
    6. '               ' → logprob: -7.184180736541748
    7. '	               ' → logprob: -10.059181213378906
    8. '	                   ' → logprob: -11.059181213378906
    9. '           ' → logprob: -11.434181213378906
    10. '		           ' → logprob: -11.809181213378906

Token 2859: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029914898332208395
    2. '               ' → logprob: -5.877991676330566
    3. '                   ' → logprob: -10.002991676330566
    4. ',' → logprob: -10.127991676330566
    5. '            
' → logprob: -10.627991676330566
    6. '       ' → logprob: -10.877991676330566
    7. '<|end|>' → logprob: -11.752991676330566
    8. '          ' → logprob: -11.877991676330566
    9. '	       ' → logprob: -12.002991676330566
    10. 'tokens' → logprob: -12.002991676330566

Token 2860: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013270224444568157
    2. 'points' → logprob: -7.501327037811279
    3. 'tokens' → logprob: -8.001326560974121
    4. '               ' → logprob: -8.626326560974121
    5. '       ' → logprob: -8.751326560974121
    6. 'parts' → logprob: -10.876326560974121
    7. ' parts' → logprob: -10.876326560974121
    8. ' tokens' → logprob: -11.251326560974121
    9. '                   ' → logprob: -11.376326560974121
    10. ' points' → logprob: -11.376326560974121

Token 2861: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.7354379296302795
    2. 'parts' → logprob: -1.9854378700256348
    3. 'coords' → logprob: -2.1104378700256348
    4. '           ' → logprob: -2.2354378700256348
    5. 'tokens' → logprob: -2.6104378700256348
    6. 'vals' → logprob: -3.2354378700256348
    7. 'values' → logprob: -3.8604378700256348
    8. 'nums' → logprob: -4.485437870025635
    9. 'for' → logprob: -5.235437870025635
    10. 'pts' → logprob: -5.985437870025635

Token 2862: ' +=' (ID: 2757)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.13495589792728424
    2. '+=' → logprob: -2.134955883026123
    3. ' +=' → logprob: -4.884955883026123
    4. '.' → logprob: -7.759955883026123
    5. '+' → logprob: -12.884956359863281
    6. 'extend' → logprob: -13.509956359863281
    7. '+=(' → logprob: -13.509956359863281
    8. '           ' → logprob: -13.634956359863281
    9. '   ' → logprob: -14.009956359863281
    10. '       ' → logprob: -14.384956359863281

Token 2863: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.33653491735458374
    2. '[line' → logprob: -1.5865349769592285
    3. 'line' → logprob: -2.5865349769592285
    4. 'map' → logprob: -5.8365349769592285
    5. '[' → logprob: -6.0865349769592285
    6. '[list' → logprob: -7.7115349769592285
    7. ' list' → logprob: -8.83653450012207
    8. ' line' → logprob: -10.46153450012207
    9. '(line' → logprob: -11.08653450012207
    10. ' [' → logprob: -11.46153450012207

Token 2864: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.9153885558771435e-06
    2. '(' → logprob: -12.500005722045898
    3. 'map' → logprob: -13.625005722045898
    4. '(
' → logprob: -14.250005722045898
    5. '(float' → logprob: -16.6250057220459
    6. '(line' → logprob: -17.7500057220459
    7. '
' → logprob: -17.7500057220459
    8. '	map' → logprob: -18.3750057220459
    9. ' map' → logprob: -18.5000057220459
    10. '[' → logprob: -19.1250057220459

Token 2865: '(int' (ID: 2742)
  Prédit: '(float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.00012761499965563416
    2. 'float' → logprob: -9.000127792358398
    3. '(' → logprob: -12.750127792358398
    4. ',float' → logprob: -14.750127792358398
    5. '(str' → logprob: -15.000127792358398
    6. '(
' → logprob: -15.125127792358398
    7. '=float' → logprob: -16.2501277923584
    8. '(lambda' → logprob: -16.6251277923584
    9. '<float' → logprob: -17.0001277923584
    10. ' float' → logprob: -17.2501277923584

Token 2866: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0019308974733576179
    2. ',' → logprob: -6.7519307136535645
    3. ',line' → logprob: -7.7519307136535645
    4. '(' → logprob: -8.876931190490723
    5. '(
' → logprob: -9.251931190490723
    6. 'line' → logprob: -10.626931190490723
    7. ' (' → logprob: -10.751931190490723
    8. ' line' → logprob: -11.501931190490723
    9. '[line' → logprob: -11.501931190490723
    10. ')' → logprob: -11.501931190490723

Token 2867: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. '.split' → logprob: -14.500000953674316
    3. '.strip' → logprob: -15.875000953674316
    4. '(line' → logprob: -16.375
    5. '[line' → logprob: -17.25
    6. '=line' → logprob: -17.75
    7. '   ' → logprob: -18.375
    8. '```' → logprob: -18.5
    9. '۲' → logprob: -19.0
    10. '.readline' → logprob: -19.375

Token 2868: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.012495758011937141
    2. '.split' → logprob: -4.637495994567871
    3. '.strip' → logprob: -6.137495994567871
    4. '(line' → logprob: -7.762495994567871
    5. '.' → logprob: -9.637495994567871
    6. '[line' → logprob: -10.637495994567871
    7. '               ' → logprob: -11.387495994567871
    8. '.readline' → logprob: -11.387495994567871
    9. '#line' → logprob: -11.762495994567871
    10. '                   ' → logprob: -12.012495994567871

Token 2869: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08207844197750092
    2. '))' → logprob: -2.582078456878662
    3. '()' → logprob: -6.457078456878662
    4. '(' → logprob: -7.207078456878662
    5. '()))
' → logprob: -7.207078456878662
    6. '()));' → logprob: -10.207077980041504
    7. '(','' → logprob: -10.207077980041504
    8. '())' → logprob: -11.082077980041504
    9. '('' → logprob: -11.207077980041504
    10. '))
' → logprob: -11.332077980041504

Token 2870: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017438429640606046
    2. '<|end|>' → logprob: -6.876743793487549
    3. 'return' → logprob: -7.876743793487549
    4. '```' → logprob: -9.876744270324707
    5. '<|end|>' → logprob: -10.126744270324707
    6. 'continue' → logprob: -10.126744270324707
    7. '           ' → logprob: -10.376744270324707
    8. '#' → logprob: -10.626744270324707
    9. '
' → logprob: -10.626744270324707
    10. '[' → logprob: -10.751744270324707

Token 2871: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022213248303160071
    2. 'x' → logprob: -9.375222206115723
    3. 'points' → logprob: -9.875222206115723
    4. 'lines' → logprob: -10.750222206115723
    5. '```' → logprob: -10.875222206115723
    6. '
' → logprob: -11.625222206115723
    7. 'pts' → logprob: -12.125222206115723
    8. '        
' → logprob: -12.250222206115723
    9. '           ' → logprob: -12.250222206115723
    10. 'if' → logprob: -12.375222206115723

Token 2872: ' parse' (ID: 8420)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.07917375862598419
    2. '       ' → logprob: -2.5791738033294678
    3. 'points' → logprob: -9.454174041748047
    4. 'coords' → logprob: -9.704174041748047
    5. 'pairs' → logprob: -9.829174041748047
    6. 'result' → logprob: -10.454174041748047
    7. 'pts' → logprob: -11.079174041748047
    8. 'res' → logprob: -11.329174041748047
    9. 'segments' → logprob: -11.829174041748047
    10. '   ' → logprob: -12.079174041748047

Token 2873: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.020737605169415474
    2. '       ' → logprob: -3.895737648010254
    3. 'result' → logprob: -9.770737648010254
    4. '   ' → logprob: -10.645737648010254
    5. 'res' → logprob: -10.770737648010254
    6. ' lines' → logprob: -11.020737648010254
    7. 'points' → logprob: -11.020737648010254
    8. 'results' → logprob: -11.020737648010254
    9. 'segments' → logprob: -11.520737648010254
    10. 'for' → logprob: -11.645737648010254

Token 2874: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032084921840578318
    2. 'lines' → logprob: -5.753208637237549
    3. ' lines' → logprob: -10.87820816040039
    4. '
' → logprob: -12.37820816040039
    5. 'result' → logprob: -13.25320816040039
    6. '(lines' → logprob: -13.50320816040039
    7. '           ' → logprob: -13.50320816040039
    8. '	lines' → logprob: -13.87820816040039
    9. '   ' → logprob: -14.00320816040039
    10. '```' → logprob: -15.00320816040039

Token 2875: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07903090119361877
    2. 'lines' → logprob: -2.579030990600586
    3. ' lines' → logprob: -9.704030990600586
    4. '```' → logprob: -10.704030990600586
    5. 'result' → logprob: -10.829030990600586
    6. '   ' → logprob: -11.454030990600586
    7. '(lines' → logprob: -11.829030990600586
    8. '	lines' → logprob: -12.079030990600586
    9. 'return' → logprob: -12.204030990600586
    10. '
' → logprob: -12.454030990600586

Token 2876: ' lines' (ID: 8698)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.693239152431488
    2. 'lines' (adapté à ' lines') → logprob: -0.693239152431488
    3. 'result' → logprob: -10.443239212036133
    4. ' lines' → logprob: -10.443239212036133
    5. '   ' → logprob: -11.568239212036133
    6. 'return' → logprob: -12.068239212036133
    7. '```' → logprob: -12.443239212036133
    8. '	lines' → logprob: -12.568239212036133
    9. 'results' → logprob: -13.068239212036133
    10. '(lines' → logprob: -13.193239212036133

Token 2877: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4500808119773865
    2. '=' → logprob: -1.0750808715820312
    3. '       ' → logprob: -4.450080871582031
    4. '=[]' → logprob: -4.950080871582031
    5. '=[]
' → logprob: -6.075080871582031
    6. '   ' → logprob: -10.325080871582031
    7. '=[' → logprob: -11.075080871582031
    8. ':' → logprob: -11.325080871582031
    9. '=
' → logprob: -11.950080871582031
    10. '           ' → logprob: -12.200080871582031

Token 2878: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.00915454886853695
    2. '[' → logprob: -4.759154319763184
    3. '[
' → logprob: -7.759154319763184
    4. '[]' → logprob: -9.259154319763184
    5. '[E' → logprob: -11.509154319763184
    6. '[]

' → logprob: -12.259154319763184
    7. ' []
' → logprob: -13.009154319763184
    8. '[self' → logprob: -15.134154319763184
    9. '   ' → logprob: -15.884154319763184
    10. '       ' → logprob: -16.1341552734375

Token 2879: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023251768201589584
    2. 'for' → logprob: -3.77325177192688
    3. ' for' → logprob: -12.1482515335083
    4. '   ' → logprob: -14.5232515335083
    5. '```' → logprob: -16.148252487182617
    6. '           ' → logprob: -16.648252487182617
    7. '	for' → logprob: -17.023252487182617
    8. 'i' → logprob: -17.398252487182617
    9. '
' → logprob: -17.523252487182617
    10. '	' → logprob: -18.398252487182617

Token 2880: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038060080260038376
    2. '       ' → logprob: -3.288060188293457
    3. ' for' → logprob: -11.288060188293457
    4. 'i' → logprob: -12.288060188293457
    5. '```' → logprob: -14.038060188293457
    6. '	for' → logprob: -15.038060188293457
    7. '   ' → logprob: -15.413060188293457
    8. '           ' → logprob: -16.66305923461914
    9. '``' → logprob: -17.28805923461914
    10. 'idx' → logprob: -17.78805923461914

Token 2881: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010759611177491024
    2. ' i' → logprob: -9.250107765197754
    3. '   ' → logprob: -12.000107765197754
    4. '_i' → logprob: -12.375107765197754
    5. '       ' → logprob: -14.625107765197754
    6. 'idx' → logprob: -14.875107765197754
    7. '           ' → logprob: -16.375106811523438
    8. '_' → logprob: -16.875106811523438
    9. '	i' → logprob: -16.875106811523438
    10. '                   ' → logprob: -18.125106811523438

Token 2882: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0700211226940155
    2. 'in' → logprob: -2.695021152496338
    3. 'i' → logprob: -10.32002067565918
    4. '_' → logprob: -11.19502067565918
    5. '   ' → logprob: -11.44502067565918
    6. '0' → logprob: -11.94502067565918
    7. ' i' → logprob: -12.07002067565918
    8. '_in' → logprob: -12.32002067565918
    9. '	in' → logprob: -13.07002067565918
    10. ' ' → logprob: -13.19502067565918

Token 2883: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026217024424113333
    2. ' range' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.375262260437012
    4. '
' → logprob: -16.000261306762695
    5. '	range' → logprob: -16.875261306762695
    6. ' ' → logprob: -17.375261306762695
    7. '  ' → logprob: -17.500261306762695
    8. '0' → logprob: -17.750261306762695
    9. '(range' → logprob: -18.125261306762695
    10. '    ' → logprob: -18.625261306762695

Token 2884: '(n' (ID: 2406)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6299898624420166
    2. '(' → logprob: -1.6299898624420166
    3. 'n' → logprob: -1.8799898624420166
    4. '(n' → logprob: -2.1299898624420166
    5. '(i' → logprob: -11.004989624023438
    6. 'i' → logprob: -11.504989624023438
    7. '   ' → logprob: -11.879989624023438
    8. ' n' → logprob: -12.629989624023438
    9. ' ' → logprob: -13.879989624023438
    10. ' (' → logprob: -14.129989624023438

Token 2885: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.016592489555478096
    2. '*' → logprob: -4.141592502593994
    3. '):' → logprob: -8.141592025756836
    4. '   ' → logprob: -9.016592025756836
    5. '       ' → logprob: -9.516592025756836
    6. ' *' → logprob: -10.641592025756836
    7. '           ' → logprob: -10.641592025756836
    8. '():
' → logprob: -11.766592025756836
    9. '
' → logprob: -12.016592025756836
    10. '):
' → logprob: -12.766592025756836

Token 2886: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020699729793705046
    2. 'x' → logprob: -9.50020694732666
    3. '   ' → logprob: -9.62520694732666
    4. 'p' → logprob: -10.00020694732666
    5. '       ' → logprob: -12.00020694732666
    6. '```' → logprob: -12.62520694732666
    7. '
' → logprob: -13.12520694732666
    8. 'a' → logprob: -13.37520694732666
    9. 'points' → logprob: -13.37520694732666
    10. '		' → logprob: -13.75020694732666

Token 2887: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.2783351242542267
    2. 'p' → logprob: -1.5283350944519043
    3. '           ' → logprob: -3.6533350944519043
    4. '               ' → logprob: -9.528335571289062
    5. ' p' → logprob: -11.153335571289062
    6. '       ' → logprob: -11.403335571289062
    7. 'a' → logprob: -11.528335571289062
    8. '   ' → logprob: -11.653335571289062
    9. 'idx' → logprob: -11.903335571289062
    10. 'pt' → logprob: -12.028335571289062

Token 2888: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1690819412469864
    2. '0' → logprob: -2.419081926345825
    3. 'points' → logprob: -3.669081926345825
    4. 'i' → logprob: -3.919081926345825
    5. '_points' → logprob: -4.544082164764404
    6. ' =' → logprob: -5.669082164764404
    7. '=' → logprob: -5.794082164764404
    8. '[i' → logprob: -6.294082164764404
    9. 'from' → logprob: -8.169081687927246
    10. 's' → logprob: -8.544081687927246

Token 2889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.423006534576416
    2. ' =' → logprob: -1.173006534576416
    3. ',' → logprob: -4.048006534576416
    4. '           ' → logprob: -5.298006534576416
    5. '=i' → logprob: -5.423006534576416
    6. 'points' → logprob: -6.048006534576416
    7. '=
' → logprob: -6.173006534576416
    8. '       ' → logprob: -7.048006534576416
    9. '(points' → logprob: -7.923006534576416
    10. '   ' → logprob: -8.048006057739258

Token 2890: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -2.935296834039036e-06
    2. ' points' → logprob: -12.75000286102295
    3. '(points' → logprob: -19.125003814697266
    4. '	points' → logprob: -19.750003814697266
    5. '           ' → logprob: -20.875003814697266
    6. '       ' → logprob: -21.250003814697266
    7. '
' → logprob: -21.625003814697266
    8. '.points' → logprob: -22.375003814697266
    9. '   ' → logprob: -22.375003814697266
    10. 'oints' → logprob: -22.875003814697266

Token 2891: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1002875491976738
    2. '[i' → logprob: -2.350287437438965
    3. 'i' → logprob: -10.475287437438965
    4. '           ' → logprob: -10.725287437438965
    5. '2' → logprob: -10.975287437438965
    6. '[
' → logprob: -12.225287437438965
    7. '   ' → logprob: -12.475287437438965
    8. '       ' → logprob: -13.725287437438965
    9. '4' → logprob: -13.975287437438965
    10. '               ' → logprob: -14.225287437438965

Token 2892: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.25196197628974915
    2. 'i' → logprob: -1.5019619464874268
    3. '(i' → logprob: -11.126961708068848
    4. ' i' → logprob: -12.001961708068848
    5. '[i' → logprob: -12.251961708068848
    6. '(' → logprob: -12.876961708068848
    7. ' ' → logprob: -13.001961708068848
    8. '   ' → logprob: -14.126961708068848
    9. '{i' → logprob: -14.251961708068848
    10. '[' → logprob: -14.501961708068848

Token 2893: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.00019543453527148813
    2. ' *' → logprob: -9.125195503234863
    3. 'i' → logprob: -10.125195503234863
    4. '*' → logprob: -10.250195503234863
    5. '*(' → logprob: -11.500195503234863
    6. '+i' → logprob: -15.000195503234863
    7. '(i' → logprob: -15.125195503234863
    8. '+' → logprob: -15.375195503234863
    9. '[i' → logprob: -16.875194549560547
    10. '   ' → logprob: -17.125194549560547

Token 2894: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6635511517524719
    2. '+' → logprob: -1.0385510921478271
    3. ']' → logprob: -2.038551092147827
    4. ' +' → logprob: -8.413551330566406
    5. '+
' → logprob: -8.413551330566406
    6. '];' → logprob: -8.788551330566406
    7. ']+' → logprob: -10.413551330566406
    8. '],' → logprob: -10.413551330566406
    9. '];
' → logprob: -10.788551330566406
    10. '   ' → logprob: -10.913551330566406

Token 2895: '           ' (ID: 352)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04568665474653244
    2. ' y' → logprob: -3.670686721801758
    3. 'x' → logprob: -4.545686721801758
    4. '           ' → logprob: -4.795686721801758
    5. '   ' → logprob: -9.045686721801758
    6. '	y' → logprob: -10.170686721801758
    7. '```' → logprob: -10.295686721801758
    8. '       ' → logprob: -10.420686721801758
    9. '
' → logprob: -10.795686721801758
    10. ',y' → logprob: -11.420686721801758

Token 2896: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0002879145904444158
    2. ' y' → logprob: -8.250288009643555
    3. '           ' → logprob: -10.625288009643555
    4. '	y' → logprob: -13.250288009643555
    5. 'x' → logprob: -15.625288009643555
    6. '   ' → logprob: -16.125288009643555
    7. '       ' → logprob: -16.375288009643555
    8. '		' → logprob: -17.375288009643555
    9. '
' → logprob: -17.500288009643555
    10. '#' → logprob: -17.625288009643555

Token 2897: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020532844064291567
    2. '[' → logprob: -9.125205039978027
    3. '=' → logprob: -9.375205039978027
    4. ' ' → logprob: -13.125205039978027
    5. '[i' → logprob: -13.250205039978027
    6. ' =' → logprob: -13.250205039978027
    7. '```' → logprob: -13.375205039978027
    8. '   ' → logprob: -14.250205039978027
    9. ':' → logprob: -14.250205039978027
    10. '#' → logprob: -14.375205039978027

Token 2898: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687604665756226
    2. ' =' → logprob: -1.136876106262207
    3. '=
' → logprob: -12.886876106262207
    4. 'points' → logprob: -14.511876106262207
    5. '(points' → logprob: -14.761876106262207
    6. '<|end|>' → logprob: -14.761876106262207
    7. ' =
' → logprob: -15.511876106262207
    8. '       ' → logprob: -15.511876106262207
    9. '           ' → logprob: -15.761876106262207
    10. ' ' → logprob: -15.761876106262207

Token 2899: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.001170460251159966
    2. ' points' → logprob: -6.751170635223389
    3. '(points' → logprob: -15.37617015838623
    4. '	points' → logprob: -17.126171112060547
    5. 'point' → logprob: -19.751171112060547
    6. '_points' → logprob: -20.126171112060547
    7. '.points' → logprob: -20.501171112060547
    8. '
' → logprob: -21.251171112060547
    9. 'x' → logprob: -21.751171112060547
    10. 'Points' → logprob: -21.876171112060547

Token 2900: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003611593507230282
    2. '4' → logprob: -5.6286115646362305
    3. '[
' → logprob: -12.25361156463623
    4. ' ' → logprob: -13.25361156463623
    5. ' [' → logprob: -13.75361156463623
    6. '   ' → logprob: -14.25361156463623
    7. '```' → logprob: -14.25361156463623
    8. '`' → logprob: -14.62861156463623
    9. '{' → logprob: -15.00361156463623
    10. '(' → logprob: -15.25361156463623

Token 2901: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '(' → logprob: -16.75
    3. ' ' → logprob: -16.75
    4. '   ' → logprob: -18.75
    5. '```' → logprob: -19.125
    6. '[' → logprob: -19.5
    7. '`' → logprob: -20.25
    8. '{' → logprob: -21.125
    9. '４' → logprob: -21.25
    10. '+' → logprob: -21.375

Token 2902: '*i' (ID: 51147)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013664701953530312
    2. '4' → logprob: -4.763664722442627
    3. 'i' → logprob: -5.888664722442627
    4. ' +' → logprob: -6.638664722442627
    5. '+i' → logprob: -8.263664245605469
    6. ']' → logprob: -8.513664245605469
    7. '1' → logprob: -8.638664245605469
    8. '[' → logprob: -8.638664245605469
    9. '```' → logprob: -9.888664245605469
    10. '+
' → logprob: -10.263664245605469

Token 2903: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005126188509166241
    2. ' +' → logprob: -5.755125999450684
    3. ']
' → logprob: -6.505125999450684
    4. '4' → logprob: -8.005125999450684
    5. ']' → logprob: -9.880125999450684
    6. '+
' → logprob: -10.130125999450684
    7. '   ' → logprob: -11.130125999450684
    8. '1' → logprob: -12.005125999450684
    9. '
' → logprob: -13.630125999450684
    10. '```' → logprob: -13.755125999450684

Token 2904: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008781121578067541
    2. '3' → logprob: -7.12587833404541
    3. '0' → logprob: -10.00087833404541
    4. '2' → logprob: -10.87587833404541
    5. '4' → logprob: -11.75087833404541
    6. ' ' → logprob: -14.12587833404541
    7. '(' → logprob: -14.75087833404541
    8. '   ' → logprob: -15.12587833404541
    9. '
' → logprob: -16.875877380371094
    10. '```' → logprob: -17.375877380371094

Token 2905: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038614433258771896
    2. '
' → logprob: -4.413614273071289
    3. 'x' → logprob: -4.663614273071289
    4. ',' → logprob: -4.788614273071289
    5. '<|end|>' → logprob: -6.413614273071289
    6. '       ' → logprob: -6.663614273071289
    7. ')
' → logprob: -6.788614273071289
    8. ' x' → logprob: -7.038614273071289
    9. ',
' → logprob: -7.038614273071289
    10. ')' → logprob: -7.038614273071289

Token 2906: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6046096682548523
    2. 'x' → logprob: -1.104609727859497
    3. ' x' → logprob: -2.104609727859497
    4. '   ' → logprob: -8.729609489440918
    5. '		' → logprob: -9.479609489440918
    6. ' ' → logprob: -9.729609489440918
    7. '       ' → logprob: -9.729609489440918
    8. '	x' → logprob: -10.229609489440918
    9. '         ' → logprob: -11.229609489440918
    10. '	       ' → logprob: -11.354609489440918

Token 2907: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0009343287092633545
    2. ' x' → logprob: -7.50093412399292
    3. '           ' → logprob: -7.87593412399292
    4. '	x' → logprob: -14.125934600830078
    5. '   ' → logprob: -15.375934600830078
    6. '       ' → logprob: -15.375934600830078
    7. '		' → logprob: -16.125934600830078
    8. '```' → logprob: -16.625934600830078
    9. '
' → logprob: -17.000934600830078
    10. '         ' → logprob: -17.000934600830078

Token 2908: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004886585287749767
    2. '1' → logprob: -5.379886627197266
    3. '=' → logprob: -9.004886627197266
    4. '```' → logprob: -10.504886627197266
    5. '   ' → logprob: -10.629886627197266
    6. '_' → logprob: -10.879886627197266
    7. '0' → logprob: -11.129886627197266
    8. '
' → logprob: -11.129886627197266
    9. ' =' → logprob: -11.379886627197266
    10. '[' → logprob: -11.379886627197266

Token 2909: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740865230560303
    2. ' =' → logprob: -0.9740865230560303
    3. '=
' → logprob: -12.84908676147461
    4. ' points' → logprob: -13.34908676147461
    5. 'points' → logprob: -13.47408676147461
    6. '(points' → logprob: -13.47408676147461
    7. ',' → logprob: -13.97408676147461
    8. ' =
' → logprob: -14.34908676147461
    9. '<|end|>' → logprob: -14.72408676147461
    10. ' ' → logprob: -15.59908676147461

Token 2910: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.03804895281791687
    2. ' points' → logprob: -3.2880489826202393
    3. '(points' → logprob: -12.03804874420166
    4. '	points' → logprob: -13.91304874420166
    5. 'point' → logprob: -15.28804874420166
    6. '
' → logprob: -16.288049697875977
    7. '.points' → logprob: -16.413049697875977
    8. '_points' → logprob: -17.163049697875977
    9. '   ' → logprob: -17.288049697875977
    10. '           ' → logprob: -17.413049697875977

Token 2911: '[' (ID: 58)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.21607770025730133
    2. '4' → logprob: -1.8410776853561401
    3. ' points' → logprob: -4.21607780456543
    4. '[' → logprob: -4.71607780456543
    5. '(points' → logprob: -5.09107780456543
    6. '=' → logprob: -5.46607780456543
    7. ' =' → logprob: -7.09107780456543
    8. ' ' → logprob: -7.59107780456543
    9. '	points' → logprob: -9.34107780456543
    10. ':' → logprob: -10.59107780456543

Token 2912: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.263011578586884e-05
    2. ' ' → logprob: -10.375042915344238
    3. 'points' → logprob: -11.750042915344238
    4. '   ' → logprob: -13.000042915344238
    5. '  ' → logprob: -15.000042915344238
    6. ' points' → logprob: -15.375042915344238
    7. '```' → logprob: -15.875042915344238
    8. '(points' → logprob: -15.875042915344238
    9. '
' → logprob: -16.500041961669922
    10. '`' → logprob: -16.875041961669922

Token 2913: '*i' (ID: 51147)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002120038407156244
    2. '[i' → logprob: -9.250211715698242
    3. '_i' → logprob: -9.875211715698242
    4. '*i' → logprob: -10.000211715698242
    5. '
' → logprob: -12.000211715698242
    6. '2' → logprob: -12.500211715698242
    7. '   ' → logprob: -12.875211715698242
    8. '```' → logprob: -13.250211715698242
    9. '(i' → logprob: -13.375211715698242
    10. ' i' → logprob: -13.750211715698242

Token 2914: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010676169040380046
    2. '2' → logprob: -10.250106811523438
    3. '
' → logprob: -10.625106811523438
    4. '[' → logprob: -10.750106811523438
    5. ' +' → logprob: -11.250106811523438
    6. '   ' → logprob: -12.375106811523438
    7. '+
' → logprob: -12.500106811523438
    8. '```' → logprob: -13.875106811523438
    9. '           ' → logprob: -14.000106811523438
    10. 'i' → logprob: -14.625106811523438

Token 2915: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006035494152456522
    2. '0' → logprob: -7.625603675842285
    3. ' ' → logprob: -10.125603675842285
    4. '
' → logprob: -10.500603675842285
    5. '1' → logprob: -10.625603675842285
    6. '3' → logprob: -11.375603675842285
    7. '   ' → logprob: -12.250603675842285
    8. 'i' → logprob: -12.375603675842285
    9. '```' → logprob: -14.000603675842285
    10. '4' → logprob: -14.938103675842285

Token 2916: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6423275470733643
    2. ',' → logprob: -0.7673275470733643
    3. ',
' → logprob: -5.142327308654785
    4. ')' → logprob: -6.767327308654785
    5. ')
' → logprob: -7.142327308654785
    6. '       ' → logprob: -7.642327308654785
    7. '<|end|>' → logprob: -7.892327308654785
    8. ',y' → logprob: -8.392327308654785
    9. '):
' → logprob: -9.017327308654785
    10. '
' → logprob: -9.017327308654785

Token 2917: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4084688425064087
    2. 'y' → logprob: -1.4084688425064087
    3. '           ' → logprob: -2.408468723297119
    4. '       ' → logprob: -8.033469200134277
    5. ',y' → logprob: -8.658469200134277
    6. ',' → logprob: -9.158469200134277
    7. ' ' → logprob: -9.408469200134277
    8. '   ' → logprob: -9.408469200134277
    9. '	y' → logprob: -10.783469200134277
    10. '
' → logprob: -11.033469200134277

Token 2918: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.47407910227775574
    2. ' y' → logprob: -0.9740791320800781
    3. '	y' → logprob: -13.599079132080078
    4. '   ' → logprob: -15.349079132080078
    5. '       ' → logprob: -15.849079132080078
    6. ' ' → logprob: -16.224079132080078
    7. '<|end|>' → logprob: -16.849079132080078
    8. ',y' → logprob: -16.974079132080078
    9. ' ' → logprob: -17.224079132080078
    10. '_y' → logprob: -17.224079132080078

Token 2919: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031550228595733643
    2. '=' → logprob: -6.75315523147583
    3. '[' → logprob: -7.00315523147583
    4. '_' → logprob: -7.75315523147583
    5. '1' → logprob: -8.378154754638672
    6. '```' → logprob: -9.378154754638672
    7. '[i' → logprob: -9.628154754638672
    8. '_points' → logprob: -9.878154754638672
    9. '   ' → logprob: -10.628154754638672
    10. '#' → logprob: -10.628154754638672

Token 2920: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6359529495239258
    2. ' =' → logprob: -0.8859529495239258
    3. '           ' → logprob: -3.385952949523926
    4. 'points' → logprob: -4.260952949523926
    5. '=
' → logprob: -5.510952949523926
    6. '(points' → logprob: -6.510952949523926
    7. ' =
' → logprob: -7.010952949523926
    8. '       ' → logprob: -7.260952949523926
    9. ' points' → logprob: -7.510952949523926
    10. ',' → logprob: -7.635952949523926

Token 2921: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.20141880214214325
    2. ' points' → logprob: -1.7014187574386597
    3. '(points' → logprob: -12.45141887664795
    4. '	points' → logprob: -14.07641887664795
    5. 'point' → logprob: -15.70141887664795
    6. '.points' → logprob: -16.076417922973633
    7. 'int' → logprob: -16.326417922973633
    8. 'Points' → logprob: -16.576417922973633
    9. '_points' → logprob: -16.576417922973633
    10. '
' → logprob: -16.701417922973633

Token 2922: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004299540014471859
    2. '+' → logprob: -7.875430107116699
    3. '```' → logprob: -10.6254301071167
    4. '       ' → logprob: -12.1254301071167
    5. '[i' → logprob: -12.3754301071167
    6. '++' → logprob: -13.1254301071167
    7. '           ' → logprob: -13.3754301071167
    8. 'points' → logprob: -13.3754301071167
    9. 'oints' → logprob: -13.3754301071167
    10. '
' → logprob: -13.7504301071167

Token 2923: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0013864279026165605
    2. 'points' → logprob: -7.126386642456055
    3. 'i' → logprob: -7.501386642456055
    4. '[' → logprob: -12.251386642456055
    5. ' ' → logprob: -12.251386642456055
    6. '
' → logprob: -12.876386642456055
    7. ' points' → logprob: -13.126386642456055
    8. '[i' → logprob: -13.376386642456055
    9. '(i' → logprob: -13.626386642456055
    10. '   ' → logprob: -13.626386642456055

Token 2924: '*i' (ID: 51147)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1454809010028839
    2. '*i' → logprob: -2.0204808712005615
    3. 'points' → logprob: -6.645481109619141
    4. '[i' → logprob: -7.520481109619141
    5. '(i' → logprob: -7.895481109619141
    6. '_i' → logprob: -8.14548110961914
    7. '2' → logprob: -9.52048110961914
    8. '+i' → logprob: -10.27048110961914
    9. ' i' → logprob: -10.39548110961914
    10. '1' → logprob: -10.52048110961914

Token 2925: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005129986093379557
    2. '+
' → logprob: -7.625513076782227
    3. '[' → logprob: -11.375513076782227
    4. ' +' → logprob: -12.375513076782227
    5. '+i' → logprob: -12.750513076782227
    6. '<|end|>' → logprob: -13.375513076782227
    7. '[
' → logprob: -13.875513076782227
    8. ']+' → logprob: -14.375513076782227
    9. ']' → logprob: -14.500513076782227
    10. '[i' → logprob: -14.625513076782227

Token 2926: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0015409269835799932
    2. '2' → logprob: -6.6265411376953125
    3. 'i' → logprob: -9.001541137695312
    4. '1' → logprob: -10.001541137695312
    5. '+' → logprob: -10.376541137695312
    6. ' ' → logprob: -12.001541137695312
    7. '(i' → logprob: -13.001541137695312
    8. '[i' → logprob: -13.501541137695312
    9. '   ' → logprob: -13.876541137695312
    10. '```' → logprob: -14.001541137695312

Token 2927: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1383814811706543
    2. '           ' → logprob: -2.1383814811706543
    3. '       ' → logprob: -5.013381481170654
    4. ')' → logprob: -5.513381481170654
    5. ']
' → logprob: -8.388381958007812
    6. '):
' → logprob: -8.513381958007812
    7. '               ' → logprob: -9.263381958007812
    8. '
' → logprob: -10.138381958007812
    9. '])
' → logprob: -10.513381958007812
    10. '   ' → logprob: -10.638381958007812

Token 2928: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019095966126769781
    2. '       ' → logprob: -6.3769097328186035
    3. '
' → logprob: -9.376909255981445
    4. ' lines' → logprob: -9.626909255981445
    5. ',' → logprob: -10.876909255981445
    6. '   ' → logprob: -11.501909255981445
    7. 'lines' → logprob: -12.126909255981445
    8. '(lines' → logprob: -12.126909255981445
    9. '            
' → logprob: -12.251909255981445
    10. '               ' → logprob: -13.126909255981445

Token 2929: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.30940696597099304
    2. 'lines' → logprob: -1.8094069957733154
    3. '           ' → logprob: -2.3094069957733154
    4. 'line' → logprob: -6.434406757354736
    5. 'l' → logprob: -6.684406757354736
    6. ' p' → logprob: -9.684407234191895
    7. ' lines' → logprob: -9.934407234191895
    8. 'pt' → logprob: -10.684407234191895
    9. 'points' → logprob: -11.059407234191895
    10. '       ' → logprob: -11.309407234191895

Token 2930: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2739465534687042
    2. 'oints' → logprob: -2.148946523666382
    3. 'oint' → logprob: -2.648946523666382
    4. 't' → logprob: -3.523946523666382
    5. ' =' → logprob: -4.773946762084961
    6. 'p' → logprob: -4.898946762084961
    7. '=' → logprob: -5.273946762084961
    8. 'r' → logprob: -7.898946762084961
    9. '   ' → logprob: -8.273946762084961
    10. 'ts' → logprob: -8.398946762084961

Token 2931: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011730826226994395
    2. ' =' → logprob: -6.75117301940918
    3. '=
' → logprob: -12.75117301940918
    4. '=p' → logprob: -19.00117301940918
    5. ' =
' → logprob: -19.12617301940918
    6. '           ' → logprob: -19.75117301940918
    7. ',' → logprob: -19.75117301940918
    8. '=

' → logprob: -19.75117301940918
    9. '       ' → logprob: -20.00117301940918
    10. '   ' → logprob: -20.00117301940918

Token 2932: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -2.15310683415737e-05
    2. ' Point' → logprob: -10.750021934509277
    3. '	Point' → logprob: -22.25002098083496
    4. '(Point' → logprob: -23.25002098083496
    5. '_point' → logprob: -24.25002098083496
    6. '_Point' → logprob: -24.75002098083496
    7. '.Point' → logprob: -25.62502098083496
    8. '<Point' → logprob: -26.37502098083496
    9. '           ' → logprob: -26.50002098083496
    10. 'Points' → logprob: -26.62502098083496

Token 2933: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0010698467958718538
    2. '(float' → logprob: -7.376070022583008
    3. 'x' → logprob: -8.376070022583008
    4. 'float' → logprob: -8.751070022583008
    5. '(
' → logprob: -10.376070022583008
    6. '(' → logprob: -10.876070022583008
    7. '(points' → logprob: -12.501070022583008
    8. 'points' → logprob: -14.876070022583008
    9. '(int' → logprob: -15.501070022583008
    10. '
' → logprob: -17.251070022583008

Token 2934: '1' (ID: 16)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.5291491746902466
    2. '(x' → logprob: -1.6541491746902466
    3. 'points' → logprob: -1.7791491746902466
    4. 'x' → logprob: -3.779149055480957
    5. '(
' → logprob: -4.654149055480957
    6. '(float' → logprob: -5.029149055480957
    7. '(p' → logprob: -5.779149055480957
    8. '(' → logprob: -5.904149055480957
    9. 'float' → logprob: -5.904149055480957
    10. 'p' → logprob: -6.279149055480957

Token 2935: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009831507923081517
    2. ',p' → logprob: -7.500983238220215
    3. ',
' → logprob: -8.500983238220215
    4. ' ,' → logprob: -9.750983238220215
    5. ',y' → logprob: -10.125983238220215
    6. '<|end|>' → logprob: -10.125983238220215
    7. ')' → logprob: -10.250983238220215
    8. ',x' → logprob: -11.375983238220215
    9. 'p' → logprob: -11.500983238220215
    10. ',float' → logprob: -11.625983238220215

Token 2936: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.723352049040841e-06
    2. ' y' → logprob: -12.375004768371582
    3. 'float' → logprob: -15.375004768371582
    4. 'x' → logprob: -16.125003814697266
    5. '	y' → logprob: -18.250003814697266
    6. '0' → logprob: -19.250003814697266
    7. ')y' → logprob: -20.250003814697266
    8. 'p' → logprob: -20.375003814697266
    9. '
' → logprob: -20.750003814697266
    10. ''y' → logprob: -20.875003814697266

Token 2937: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.019031289964914322
    2. '1' → logprob: -5.394031524658203
    3. 'p' → logprob: -5.644031524658203
    4. ',y' → logprob: -5.769031524658203
    5. ' y' → logprob: -5.894031524658203
    6. ')' → logprob: -6.144031524658203
    7. ',' → logprob: -6.269031524658203
    8. '0' → logprob: -8.644031524658203
    9. '	y' → logprob: -9.269031524658203
    10. '.y' → logprob: -9.644031524658203

Token 2938: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3884105086326599
    2. ')
' → logprob: -1.1384105682373047
    3. '           ' → logprob: -7.638410568237305
    4. ',' → logprob: -7.888410568237305
    5. ')p' → logprob: -8.263410568237305
    6. '       ' → logprob: -8.388410568237305
    7. '),' → logprob: -9.388410568237305
    8. 'p' → logprob: -9.888410568237305
    9. '   ' → logprob: -10.763410568237305
    10. ')
' → logprob: -11.638410568237305

Token 2939: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008663220214657485
    2. 'p' → logprob: -7.125866413116455
    3. '   ' → logprob: -10.875865936279297
    4. ' p' → logprob: -11.250865936279297
    5. '       ' → logprob: -11.250865936279297
    6. '```' → logprob: -11.250865936279297
    7. '          ' → logprob: -13.875865936279297
    8. ' ' → logprob: -14.125865936279297
    9. '		' → logprob: -14.625865936279297
    10. '`' → logprob: -14.750865936279297

Token 2940: ' p' (ID: 275)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31367576122283936
    2. 'p' (adapté à ' p') → logprob: -1.3136757612228394
    3. ' p' → logprob: -7.813675880432129
    4. '       ' → logprob: -11.938675880432129
    5. '   ' → logprob: -13.563675880432129
    6. '          ' → logprob: -14.313675880432129
    7. '		' → logprob: -15.438675880432129
    8. '```' → logprob: -15.438675880432129
    9. '	p' → logprob: -15.563675880432129
    10. '               ' → logprob: -15.563675880432129

Token 2941: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. 'p' → logprob: -13.250001907348633
    3. ' p' → logprob: -16.500001907348633
    4. ' ' → logprob: -17.750001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '1' → logprob: -17.875001907348633
    7. 'oints' → logprob: -17.875001907348633
    8. 'oint' → logprob: -18.250001907348633
    9. '
' → logprob: -18.500001907348633
    10. '  ' → logprob: -19.625001907348633

Token 2942: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0039033808279782534
    2. ' =' → logprob: -5.628903388977051
    3. '=p' → logprob: -8.25390338897705
    4. '=
' → logprob: -10.75390338897705
    5. 'p' → logprob: -11.37890338897705
    6. '(p' → logprob: -12.12890338897705
    7. ')' → logprob: -12.87890338897705
    8. ' p' → logprob: -13.75390338897705
    9. ',' → logprob: -14.87890338897705
    10. '
' → logprob: -16.003902435302734

Token 2943: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0002613358374219388
    2. ' Point' → logprob: -8.250261306762695
    3. '	Point' → logprob: -17.250261306762695
    4. '.Point' → logprob: -18.125261306762695
    5. 'Points' → logprob: -18.250261306762695
    6. '           ' → logprob: -18.250261306762695
    7. '_point' → logprob: -18.625261306762695
    8. '(Point' → logprob: -19.000261306762695
    9. 'p' → logprob: -19.125261306762695
    10. '_Point' → logprob: -19.250261306762695

Token 2944: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.47507643699645996
    2. 'Point' → logprob: -0.97507643699646
    3. 'x' → logprob: -6.975076675415039
    4. '(Point' → logprob: -9.975076675415039
    5. ' Point' → logprob: -12.225076675415039
    6. 'p' → logprob: -12.350076675415039
    7. 'Points' → logprob: -12.850076675415039
    8. '.Point' → logprob: -13.475076675415039
    9. '<Point' → logprob: -13.975076675415039
    10. '_point' → logprob: -14.225076675415039

Token 2945: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.026823153719305992
    2. '2' → logprob: -3.651823043823242
    3. '(x' → logprob: -7.901823043823242
    4. ' x' → logprob: -8.901823043823242
    5. 'i' → logprob: -12.526823043823242
    6. '[x' → logprob: -12.526823043823242
    7. '```' → logprob: -12.651823043823242
    8. '{x' → logprob: -12.776823043823242
    9. '
' → logprob: -14.151823043823242
    10. 'p' → logprob: -14.401823043823242

Token 2946: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005862758844159544
    2. 'x' → logprob: -7.75058650970459
    3. ',x' → logprob: -9.37558650970459
    4. '(x' → logprob: -9.87558650970459
    5. ' x' → logprob: -12.37558650970459
    6. ',p' → logprob: -12.37558650970459
    7. '           ' → logprob: -12.50058650970459
    8. ' ,' → logprob: -12.50058650970459
    9. 'p' → logprob: -14.25058650970459
    10. ',
' → logprob: -14.50058650970459

Token 2947: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.27613988518714905
    2. 'x' → logprob: -1.5261398553848267
    3. ' y' → logprob: -3.776139974594116
    4. ' x' → logprob: -6.901139736175537
    5. 'p' → logprob: -13.401140213012695
    6. '   ' → logprob: -15.651140213012695
    7. '(x' → logprob: -16.026140213012695
    8. '       ' → logprob: -16.401140213012695
    9. '           ' → logprob: -16.651140213012695
    10. ' ' → logprob: -16.776140213012695

Token 2948: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. '   ' → logprob: -13.62500286102295
    3. 'p' → logprob: -14.37500286102295
    4. '
' → logprob: -15.12500286102295
    5. '```' → logprob: -15.25000286102295
    6. '1' → logprob: -15.62500286102295
    7. 'x' → logprob: -15.75000286102295
    8. ' ' → logprob: -16.000003814697266
    9. 'y' → logprob: -16.625003814697266
    10. '  ' → logprob: -16.875003814697266

Token 2949: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.007425837218761444
    2. '           ' → logprob: -5.507425785064697
    3. ')' → logprob: -5.757425785064697
    4. '       ' → logprob: -8.882426261901855
    5. ')
' → logprob: -10.632426261901855
    6. 'p' → logprob: -11.507426261901855
    7. '   ' → logprob: -13.132426261901855
    8. '          ' → logprob: -13.507426261901855
    9. ' )
' → logprob: -14.007426261901855
    10. ')`
' → logprob: -14.132426261901855

Token 2950: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.2166411478538066e-05
    2. ' lines' → logprob: -10.500052452087402
    3. '       ' → logprob: -10.875052452087402
    4. '
' → logprob: -13.125052452087402
    5. 'lines' → logprob: -13.125052452087402
    6. '   ' → logprob: -14.625052452087402
    7. '(lines' → logprob: -15.500052452087402
    8. '          ' → logprob: -15.625052452087402
    9. '               ' → logprob: -15.875052452087402
    10. ',' → logprob: -16.125051498413086

Token 2951: ' lines' (ID: 8698)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.417516827583313
    2. 'lines' (adapté à ' lines') → logprob: -1.167516827583313
    3. ' lines' → logprob: -3.9175167083740234
    4. 'line' → logprob: -4.667516708374023
    5. '
' → logprob: -8.042516708374023
    6. ' line' → logprob: -8.417516708374023
    7. 'l' → logprob: -8.917516708374023
    8. '	lines' → logprob: -9.417516708374023
    9. '(lines' → logprob: -10.292516708374023
    10. '       ' → logprob: -10.917516708374023

Token 2952: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010694891680032015
    2. '.' → logprob: -6.87606954574585
    3. '.app' → logprob: -11.251069068908691
    4. 'append' → logprob: -11.626069068908691
    5. '           ' → logprob: -11.751069068908691
    6. '       ' → logprob: -13.501069068908691
    7. '=' → logprob: -13.876069068908691
    8. '.Append' → logprob: -14.001069068908691
    9. '.extend' → logprob: -14.501069068908691
    10. ').' → logprob: -14.876069068908691

Token 2953: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.12712863087654114
    2. 'Eu' → logprob: -2.1271286010742188
    3. ' Eu' → logprob: -8.752128601074219
    4. '           ' → logprob: -11.127128601074219
    5. '(Line' → logprob: -11.377128601074219
    6. 'E' → logprob: -11.877128601074219
    7. '(' → logprob: -12.627128601074219
    8. '(
' → logprob: -13.252128601074219
    9. '   ' → logprob: -13.502128601074219
    10. 'Line' → logprob: -14.502128601074219

Token 2954: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00013738969573751092
    2. 'Eu' → logprob: -9.125137329101562
    3. 'ucl' → logprob: -10.750137329101562
    4. 'ucle' → logprob: -12.625137329101562
    5. 'uc' → logprob: -13.000137329101562
    6. 'clidean' → logprob: -13.875137329101562
    7. 'eu' → logprob: -15.250137329101562
    8. ' Eu' → logprob: -15.875137329101562
    9. '   ' → logprob: -17.375137329101562
    10. 'urope' → logprob: -17.375137329101562

Token 2955: 'clidean' (ID: 116188)
  Prédit: 'clidean'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clidean' → logprob: -0.0010878281900659204
    2. 'u' → logprob: -7.376087665557861
    3. 'clid' → logprob: -8.12608814239502
    4. 'ucl' → logprob: -9.37608814239502
    5. 'cl' → logprob: -10.00108814239502
    6. 'ucle' → logprob: -11.62608814239502
    7. 'uc' → logprob: -12.12608814239502
    8. '   ' → logprob: -12.12608814239502
    9. '```' → logprob: -12.12608814239502
    10. 'Eu' → logprob: -13.00108814239502

Token 2956: 'Line' (ID: 3665)
  Prédit: 'Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -1.2233183042553719e-05
    2. 'line' → logprob: -12.375012397766113
    3. 'Lines' → logprob: -12.875012397766113
    4. '
' → logprob: -13.250012397766113
    5. ')' → logprob: -13.750012397766113
    6. 'Lin' → logprob: -14.375012397766113
    7. '(Line' → logprob: -14.750012397766113
    8. 'L' → logprob: -14.750012397766113
    9. 'Point' → logprob: -15.375012397766113
    10. 'Li' → logprob: -16.125011444091797

Token 2957: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00250918953679502
    2. 'p' → logprob: -6.002509117126465
    3. '           ' → logprob: -10.627509117126465
    4. '(' → logprob: -12.377509117126465
    5. '(
' → logprob: -12.877509117126465
    6. ')' → logprob: -14.252509117126465
    7. '       ' → logprob: -14.252509117126465
    8. ' p' → logprob: -14.877509117126465
    9. '   ' → logprob: -15.127509117126465
    10. '               ' → logprob: -16.00251007080078

Token 2958: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.040457421680912e-05
    2. 'oints' → logprob: -10.250070571899414
    3. '(p' → logprob: -10.625070571899414
    4. 'oint' → logprob: -12.000070571899414
    5. '```' → logprob: -14.125070571899414
    6. 'p' → logprob: -14.125070571899414
    7. ')' → logprob: -14.375070571899414
    8. '2' → logprob: -14.875070571899414
    9. '   ' → logprob: -15.000070571899414
    10. '
' → logprob: -15.500070571899414

Token 2959: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023282403126358986
    2. ',p' → logprob: -3.773282289505005
    3. ',
' → logprob: -10.273282051086426
    4. ' ,' → logprob: -13.398282051086426
    5. 'p' → logprob: -14.148282051086426
    6. ',
' → logprob: -16.523283004760742
    7. '   ' → logprob: -17.273283004760742
    8. '(p' → logprob: -17.398283004760742
    9. ',P' → logprob: -17.523283004760742
    10. ',\
' → logprob: -18.023283004760742

Token 2960: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005530327325686812
    2. ' p' → logprob: -7.500553131103516
    3. '           ' → logprob: -18.000553131103516
    4. '
' → logprob: -18.125553131103516
    5. '	p' → logprob: -19.250553131103516
    6. '(p' → logprob: -19.625553131103516
    7. '          ' → logprob: -19.750553131103516
    8. '<p' → logprob: -20.625553131103516
    9. ')p' → logprob: -20.625553131103516
    10. '            ' → logprob: -20.750553131103516

Token 2961: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. 'p' → logprob: -13.375001907348633
    3. 'oints' → logprob: -16.500001907348633
    4. '1' → logprob: -17.500001907348633
    5. '₂' → logprob: -17.750001907348633
    6. '
' → logprob: -17.750001907348633
    7. '```' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.000001907348633
    9. 't' → logprob: -18.125001907348633
    10. 'oint' → logprob: -18.250001907348633

Token 2962: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2426202893257141
    2. ')' → logprob: -1.7426202297210693
    3. '))
' → logprob: -3.2426202297210693
    4. '       ' → logprob: -7.242620468139648
    5. ')
' → logprob: -7.617620468139648
    6. '           ' → logprob: -9.242620468139648
    7. '   ' → logprob: -13.992620468139648
    8. '))

' → logprob: -13.992620468139648
    9. ')))' → logprob: -14.617620468139648
    10. '));' → logprob: -14.617620468139648

Token 2963: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.4418171455617994e-05
    2. 'return' → logprob: -10.750044822692871
    3. '```' → logprob: -12.000044822692871
    4. '   ' → logprob: -12.250044822692871
    5. '
' → logprob: -12.250044822692871
    6. '           ' → logprob: -12.500044822692871
    7. '        
' → logprob: -13.000044822692871
    8. '<|end|>' → logprob: -14.750044822692871
    9. '      ' → logprob: -15.750044822692871
    10. ' return' → logprob: -15.875044822692871

Token 2964: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.925185440806672e-05
    2. 'return' (adapté à ' return') → logprob: -9.375099182128906
    3. '   ' → logprob: -11.250099182128906
    4. '           ' → logprob: -14.625099182128906
    5. ' return' → logprob: -14.625099182128906
    6. '```' → logprob: -16.125099182128906
    7. '
' → logprob: -16.500099182128906
    8. ' ' → logprob: -16.625099182128906
    9. '	' → logprob: -16.875099182128906
    10. '        
' → logprob: -17.250099182128906

Token 2965: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -6.2729995988775045e-06
    2. ' lines' → logprob: -12.000006675720215
    3. '(lines' → logprob: -17.6250057220459
    4. 'self' → logprob: -20.0000057220459
    5. '	lines' → logprob: -20.0000057220459
    6. '   ' → logprob: -20.7500057220459
    7. '.lines' → logprob: -21.7500057220459
    8. '       ' → logprob: -22.0000057220459
    9. 'layers' → logprob: -22.6250057220459
    10. '```' → logprob: -22.6250057220459

Token 2966: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0039452980272471905
    2. 'def' → logprob: -5.753945350646973
    3. '
' → logprob: -7.753945350646973
    4. 'import' → logprob: -8.753945350646973
    5. '<|end|>' → logprob: -9.003945350646973
    6. '   ' → logprob: -10.753945350646973
    7. '```' → logprob: -11.503945350646973
    8. 'if' → logprob: -11.628945350646973
    9. ' class' → logprob: -11.753945350646973
    10. '#' → logprob: -12.628945350646973

Token 2967: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0073045408353209496
    2. '   ' → logprob: -5.007304668426514
    3. 'if' → logprob: -8.382304191589355
    4. 'class' → logprob: -9.007304191589355
    5. 'import' → logprob: -9.632304191589355
    6. '
' → logprob: -9.757304191589355
    7. '<|end|>' → logprob: -9.882304191589355
    8. '```' → logprob: -10.257304191589355
    9. ' def' → logprob: -11.507304191589355
    10. '    
' → logprob: -12.007304191589355

Token 2968: ' Problem' (ID: 26113)
  Prédit: 'Equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Equal' → logprob: -1.1974679231643677
    2. 'Solver' → logprob: -1.1974679231643677
    3. 'Main' → logprob: -1.6974679231643677
    4. 'Solution' → logprob: -1.8224679231643677
    5. 'Output' → logprob: -3.322467803955078
    6. 'Runner' → logprob: -5.322467803955078
    7. 'Input' → logprob: -6.322467803955078
    8. 'Result' → logprob: -6.322467803955078
    9. 'main' → logprob: -6.447467803955078
    10. 'Processor' → logprob: -6.697467803955078

Token 2969: 'CS' (ID: 9310)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6538470983505249
    2. 'Solver' → logprob: -1.028847098350525
    3. ':
' → logprob: -2.1538472175598145
    4. 'Solution' → logprob: -5.2788472175598145
    5. '{' → logprob: -7.7788472175598145
    6. '_solver' → logprob: -8.653846740722656
    7. '(' → logprob: -8.778846740722656
    8. '():' → logprob: -9.403846740722656
    9. '   ' → logprob: -9.653846740722656
    10. '(S' → logprob: -9.653846740722656

Token 2970: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -0.022248562425374985
    2. 'olve' → logprob: -4.7722487449646
    3. 'ol' → logprob: -4.8972487449646
    4. 'olution' → logprob: -5.6472487449646
    5. 'olved' → logprob: -7.0222487449646
    6. ':
' → logprob: -7.2722487449646
    7. 'Solver' → logprob: -8.022248268127441
    8. 'class' → logprob: -9.022248268127441
    9. ':' → logprob: -9.147248268127441
    10. '():
' → logprob: -9.272248268127441

Token 2971: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006034023594111204
    2. ':
' → logprob: -5.131033897399902
    3. ':System' → logprob: -9.881033897399902
    4. '(System' → logprob: -10.006033897399902
    5. ':

' → logprob: -13.131033897399902
    6. '):' → logprob: -13.256033897399902
    7. ':def' → logprob: -13.256033897399902
    8. '(' → logprob: -14.131033897399902
    9. '>:' → logprob: -14.881033897399902
    10. '():' → logprob: -15.131033897399902

Token 2972: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013196426443755627
    2. 'class' → logprob: -6.751319408416748
    3. 'def' → logprob: -8.876319885253906
    4. ' def' → logprob: -12.376319885253906
    5. '	def' → logprob: -12.876319885253906
    6. ' class' → logprob: -13.251319885253906
    7. '    
' → logprob: -14.751319885253906
    8. '```' → logprob: -14.751319885253906
    9. ':' → logprob: -15.376319885253906
    10. '   ' → logprob: -16.251319885253906

Token 2973: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.030523503199219704
    2. ' def' → logprob: -3.7805235385894775
    3. '   ' → logprob: -5.030523300170898
    4. 'class' → logprob: -7.280523300170898
    5. '```' → logprob: -10.780523300170898
    6. '	def' → logprob: -12.280523300170898
    7. '
' → logprob: -14.405523300170898
    8. '__' → logprob: -14.655523300170898
    9. 'de' → logprob: -15.280523300170898
    10. '``' → logprob: -15.905523300170898

Token 2974: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005250364076346159
    2. 'init' → logprob: -5.880250453948975
    3. ' __' → logprob: -6.130250453948975
    4. 'def' → logprob: -8.755249977111816
    5. 'classmethod' → logprob: -10.630249977111816
    6. 'solve' → logprob: -10.880249977111816
    7. '___' → logprob: -11.255249977111816
    8. '```' → logprob: -11.380249977111816
    9. 'staticmethod' → logprob: -11.505249977111816
    10. '_init' → logprob: -11.630249977111816

Token 2975: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0024763736873865128
    2. '__' → logprob: -6.377476215362549
    3. 'iter' → logprob: -7.502476215362549
    4. 'def' → logprob: -9.252476692199707
    5. '```' → logprob: -9.877476692199707
    6. '_init' → logprob: -10.127476692199707
    7. 'it' → logprob: -11.502476692199707
    8. ' __' → logprob: -12.252476692199707
    9. '`' → logprob: -12.627476692199707
    10. 'next' → logprob: -12.752476692199707

Token 2976: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0013961880467832088
    2. '(self' → logprob: -6.626396179199219
    3. '__(
' → logprob: -9.751396179199219
    4. '__' → logprob: -11.751396179199219
    5. 'self' → logprob: -13.251396179199219
    6. '_(' → logprob: -13.876396179199219
    7. '=(' → logprob: -14.626396179199219
    8. '__((' → logprob: -15.376396179199219
    9. '=self' → logprob: -15.376396179199219
    10. '<>(' → logprob: -15.876396179199219

Token 2977: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001238004770129919
    2. ')' → logprob: -9.250123977661133
    3. ' self' → logprob: -11.625123977661133
    4. '):
' → logprob: -11.875123977661133
    5. '
' → logprob: -12.125123977661133
    6. '   ' → logprob: -12.625123977661133
    7. '(self' → logprob: -13.375123977661133
    8. 'input' → logprob: -15.375123977661133
    9. '):' → logprob: -15.625123977661133
    10. '       ' → logprob: -15.750123977661133

Token 2978: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06345678120851517
    2. 'self' → logprob: -2.8134567737579346
    3. '(self' → logprob: -7.938457012176514
    4. '):
' → logprob: -8.188456535339355
    5. ',input' → logprob: -8.313456535339355
    6. '):' → logprob: -8.688456535339355
    7. ',self' → logprob: -8.938456535339355
    8. ' self' → logprob: -9.563456535339355
    9. '   ' → logprob: -9.813456535339355
    10. ',
' → logprob: -9.938456535339355

Token 2979: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008900903165340424
    2. 'self' → logprob: -4.758901119232178
    3. 'lines' → logprob: -8.63390064239502
    4. '):
' → logprob: -10.50890064239502
    5. 'stream' → logprob: -10.50890064239502
    6. ' input' → logprob: -11.50890064239502
    7. ')' → logprob: -11.63390064239502
    8. 'datasets' → logprob: -12.00890064239502
    9. 'reader' → logprob: -12.25890064239502
    10. 'output' → logprob: -12.25890064239502

Token 2980: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.00011343709047650918
    2. 'stream' → logprob: -9.250113487243652
    3. '):' → logprob: -11.875113487243652
    4. '):
' → logprob: -12.500113487243652
    5. 'self' → logprob: -13.250113487243652
    6. '   ' → logprob: -13.875113487243652
    7. ')' → logprob: -14.625113487243652
    8. '_data' → logprob: -14.625113487243652
    9. '_source' → logprob: -14.750113487243652
    10. ':' → logprob: -14.750113487243652

Token 2981: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3178069591522217
    2. '):' → logprob: -1.3178069591522217
    3. ',' → logprob: -5.692807197570801
    4. ':' → logprob: -7.317807197570801
    5. '   ' → logprob: -7.942807197570801
    6. '):
' → logprob: -9.1928071975708
    7. '       ' → logprob: -10.4428071975708
    8. ')' → logprob: -12.6928071975708
    9. '  ' → logprob: -12.6928071975708
    10. '):

' → logprob: -13.0678071975708

Token 2982: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11613792181015015
    2. 'self' → logprob: -2.366137981414795
    3. '   ' → logprob: -4.366137981414795
    4. 'def' → logprob: -5.866137981414795
    5. ' self' → logprob: -8.616137504577637
    6. '(self' → logprob: -10.241137504577637
    7. ',' → logprob: -10.866137504577637
    8. ' ' → logprob: -11.866137504577637
    9. '    ' → logprob: -12.241137504577637
    10. '     ' → logprob: -12.241137504577637

Token 2983: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.2007883671903983e-05
    2. '       ' → logprob: -10.750021934509277
    3. ' self' → logprob: -14.625021934509277
    4. '   ' → logprob: -18.875022888183594
    5. 'def' → logprob: -20.500022888183594
    6. 'input' → logprob: -20.750022888183594
    7. '	self' → logprob: -21.000022888183594
    8. '(self' → logprob: -22.250022888183594
    9. '           ' → logprob: -22.875022888183594
    10. '```' → logprob: -23.125022888183594

Token 2984: '.parser' (ID: 50244)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3869008421897888
    2. '.input' → logprob: -1.1369009017944336
    3. '_input' → logprob: -10.761900901794434
    4. ' input' → logprob: -12.261900901794434
    5. '.' → logprob: -13.636900901794434
    6. '   ' → logprob: -13.886900901794434
    7. '=input' → logprob: -14.386900901794434
    8. '	input' → logprob: -14.761900901794434
    9. 'import' → logprob: -15.011900901794434
    10. ',input' → logprob: -16.011899948120117

Token 2985: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010300642810761929
    2. ' =' → logprob: -4.885300636291504
    3. '=input' → logprob: -6.385300636291504
    4. '=self' → logprob: -7.010300636291504
    5. '.readline' → logprob: -11.135300636291504
    6. '=
' → logprob: -11.260300636291504
    7. '   ' → logprob: -11.385300636291504
    8. '<|end|>' → logprob: -11.885300636291504
    9. '=line' → logprob: -11.885300636291504
    10. '<|end|>' → logprob: -12.010300636291504

Token 2986: ' Dataset' (ID: 79063)
  Prédit: 'Dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dataset' → logprob: -1.5048530030981055e-06
    2. ' Dataset' → logprob: -13.500001907348633
    3. 'System' → logprob: -19.625001907348633
    4. 'Datas' → logprob: -20.125001907348633
    5. 'dataset' → logprob: -21.750001907348633
    6. 'Data' → logprob: -21.875001907348633
    7. 'self' → logprob: -22.000001907348633
    8. '_dataset' → logprob: -22.250001907348633
    9. '.Dataset' → logprob: -22.250001907348633
    10. '   ' → logprob: -22.750001907348633

Token 2987: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.00033903829171322286
    2. 'parser' → logprob: -8.00033950805664
    3. '_parser' → logprob: -12.62533950805664
    4. '(Parser' → logprob: -15.62533950805664
    5. 'Parse' → logprob: -16.75033950805664
    6. 'parse' → logprob: -16.87533950805664
    7. '.Parser' → logprob: -17.37533950805664
    8. '-parser' → logprob: -17.75033950805664
    9. ' Parser' → logprob: -18.00033950805664
    10. ' parser' → logprob: -18.12533950805664

Token 2988: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12693041563034058
    2. 'input' → logprob: -2.1269304752349854
    3. '(' → logprob: -13.501930236816406
    4. '(
' → logprob: -14.751930236816406
    5. ' input' → logprob: -15.376930236816406
    6. '       ' → logprob: -15.626930236816406
    7. '   ' → logprob: -16.751930236816406
    8. '=input' → logprob: -17.126930236816406
    9. ',input' → logprob: -17.251930236816406
    10. '[input' → logprob: -17.376930236816406

Token 2989: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -1.6240566083070007e-06
    2. 'stream' → logprob: -13.500001907348633
    3. 'Stream' → logprob: -16.250001907348633
    4. '_STREAM' → logprob: -18.000001907348633
    5. '_st' → logprob: -19.750001907348633
    6. '
' → logprob: -19.750001907348633
    7. ')' → logprob: -20.375001907348633
    8. '=' → logprob: -20.625001907348633
    9. 'self' → logprob: -20.750001907348633
    10. '(stream' → logprob: -20.875001907348633

Token 2990: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18161152303218842
    2. '   ' → logprob: -1.8066115379333496
    3. '       ' → logprob: -6.80661153793335
    4. '<|end|>' → logprob: -7.43161153793335
    5. '<|end|>' → logprob: -10.056611061096191
    6. ',' → logprob: -10.181611061096191
    7. ' ' → logprob: -10.556611061096191
    8. 'def' → logprob: -10.681611061096191
    9. '
' → logprob: -11.306611061096191
    10. ' )' → logprob: -12.431611061096191

Token 2991: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08198729157447815
    2. '   ' → logprob: -2.5819873809814453
    3. ' def' → logprob: -5.831987380981445
    4. '<|end|>' → logprob: -9.456987380981445
    5. '
' → logprob: -10.206987380981445
    6. '	def' → logprob: -10.956987380981445
    7. ' ' → logprob: -11.581987380981445
    8. '       ' → logprob: -12.206987380981445
    9. '  ' → logprob: -12.956987380981445
    10. '```' → logprob: -13.081987380981445

Token 2992: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.9875325708417222e-05
    2. ' def' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.000029563903809
    4. '	def' → logprob: -18.000030517578125
    5. 'de' → logprob: -19.125030517578125
    6. '
' → logprob: -19.125030517578125
    7. ' ' → logprob: -20.750030517578125
    8. '```' → logprob: -21.125030517578125
    9. 'Def' → logprob: -21.625030517578125
    10. 'class' → logprob: -21.750030517578125

Token 2993: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0068187350407242775
    2. 'run' → logprob: -5.006818771362305
    3. '__' → logprob: -9.381818771362305
    4. 'process' → logprob: -11.381818771362305
    5. ' solve' → logprob: -12.381818771362305
    6. 'next' → logprob: -13.631818771362305
    7. 'solution' → logprob: -14.756818771362305
    8. 'read' → logprob: -15.131818771362305
    9. 'resolve' → logprob: -15.256818771362305
    10. 'main' → logprob: -15.256818771362305

Token 2994: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.375001907348633
    3. 'self' → logprob: -15.250001907348633
    4. '_next' → logprob: -16.375001907348633
    5. '(sel' → logprob: -16.500001907348633
    6. '(
' → logprob: -16.500001907348633
    7. '   ' → logprob: -16.625001907348633
    8. '_line' → logprob: -16.750001907348633
    9. '(s' → logprob: -17.000001907348633
    10. '       ' → logprob: -17.625001907348633

Token 2995: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1518726497888565
    2. '):' → logprob: -2.5268726348876953
    3. 'self' → logprob: -3.5268726348876953
    4. '(self' → logprob: -4.026872634887695
    5. ',' → logprob: -4.776872634887695
    6. '   ' → logprob: -6.151872634887695
    7. ')' → logprob: -6.651872634887695
    8. '       ' → logprob: -7.026872634887695
    9. '):
' → logprob: -7.401872634887695
    10. '_' → logprob: -8.651872634887695

Token 2996: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039039674447849393
    2. 'for' → logprob: -8.25039005279541
    3. '   ' → logprob: -9.62539005279541
    4. ' for' → logprob: -10.37539005279541
    5. '```' → logprob: -10.37539005279541
    6. '	for' → logprob: -16.125391006469727
    7. '           ' → logprob: -16.250391006469727
    8. 'import' → logprob: -16.625391006469727
    9. '	' → logprob: -16.875391006469727
    10. '
' → logprob: -17.375391006469727

Token 2997: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6938047409057617
    2. 'for' (adapté à ' for') → logprob: -0.6938047409057617
    3. ' for' → logprob: -7.443804740905762
    4. 'while' → logprob: -10.068804740905762
    5. 'results' → logprob: -11.068804740905762
    6. 'import' → logprob: -12.318804740905762
    7. '```' → logprob: -12.443804740905762
    8. 'result' → logprob: -13.068804740905762
    9. '   ' → logprob: -13.693804740905762
    10. 'lines' → logprob: -13.943804740905762

Token 2998: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -9.031157969729975e-05
    2. 'self' → logprob: -9.750090599060059
    3. ' lines' → logprob: -10.375090599060059
    4. 'line' → logprob: -15.125090599060059
    5. '   ' → logprob: -15.375090599060059
    6. '       ' → logprob: -16.250089645385742
    7. 'dataset' → logprob: -16.500089645385742
    8. '	lines' → logprob: -16.625089645385742
    9. '(lines' → logprob: -17.875089645385742
    10. '           ' → logprob: -17.875089645385742

Token 2999: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005936143919825554
    2. 'in' → logprob: -5.130936145782471
    3. '       ' → logprob: -12.130935668945312
    4. '	in' → logprob: -13.630935668945312
    5. '_in' → logprob: -15.255935668945312
    6. '        ' → logprob: -15.255935668945312
    7. '           ' → logprob: -16.005935668945312
    8. '   ' → logprob: -16.255935668945312
    9. ',' → logprob: -16.880935668945312
    10. '[in' → logprob: -17.380935668945312

Token 3000: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.392202976712724e-06
    2. ' self' → logprob: -12.000006675720215
    3. '(self' → logprob: -16.7500057220459
    4. '       ' → logprob: -17.3750057220459
    5. '   ' → logprob: -19.8750057220459
    6. '
' → logprob: -20.8750057220459
    7. '           ' → logprob: -21.2500057220459
    8. '	self' → logprob: -22.5000057220459
    9. '[self' → logprob: -22.6250057220459
    10. ':self' → logprob: -22.7500057220459

Token 3001: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -0.0487220324575901
    2. 'parser' → logprob: -3.0487220287323
    3. '   ' → logprob: -10.048722267150879
    4. '.lines' → logprob: -11.298722267150879
    5. '.processor' → logprob: -11.298722267150879
    6. 'lines' → logprob: -11.423722267150879
    7. 'solver' → logprob: -11.923722267150879
    8. '	parser' → logprob: -11.923722267150879
    9. '(parser' → logprob: -12.423722267150879
    10. '       ' → logprob: -12.423722267150879

Token 3002: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.49224963784217834
    2. ':' → logprob: -0.992249608039856
    3. '           ' → logprob: -4.117249488830566
    4. '():
' → logprob: -7.367249488830566
    5. '       ' → logprob: -7.742249488830566
    6. '):
' → logprob: -8.117249488830566
    7. '<|end|>' → logprob: -8.992249488830566
    8. ',' → logprob: -9.117249488830566
    9. '<|end|>' → logprob: -10.117249488830566
    10. ':
' → logprob: -11.117249488830566

Token 3003: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007670275866985321
    2. '       ' → logprob: -4.8826704025268555
    3. '```' → logprob: -10.632670402526855
    4. ',' → logprob: -12.257670402526855
    5. '<|end|>' → logprob: -12.382670402526855
    6. 'self' → logprob: -12.382670402526855
    7. '	       ' → logprob: -12.507670402526855
    8. '               ' → logprob: -12.757670402526855
    9. ':' → logprob: -12.882670402526855
    10. '		' → logprob: -13.257670402526855

Token 3004: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.0012777344090864062
    2. '           ' → logprob: -6.751277923583984
    3. ' solver' → logprob: -10.376277923583984
    4. 'if' → logprob: -10.501277923583984
    5. '       ' → logprob: -10.626277923583984
    6. 'solution' → logprob: -11.001277923583984
    7. '               ' → logprob: -12.501277923583984
    8. 'sol' → logprob: -12.626277923583984
    9. 's' → logprob: -14.626277923583984
    10. '   ' → logprob: -15.376277923583984

Token 3005: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02636985294520855
    2. '=' → logprob: -3.65136981010437
    3. '           ' → logprob: -10.27637004852295
    4. '   ' → logprob: -10.77637004852295
    5. '       ' → logprob: -12.15137004852295
    6. '.' → logprob: -12.90137004852295
    7. 's' → logprob: -14.27637004852295
    8. '    ' → logprob: -14.27637004852295
    9. '        ' → logprob: -14.90137004852295
    10. '	' → logprob: -14.90137004852295

Token 3006: ' Equal' (ID: 67921)
  Prédit: 'Equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Equal' → logprob: -0.0001584850688232109
    2. ' Equal' → logprob: -8.750158309936523
    3. '(Equal' → logprob: -18.375158309936523
    4. 'Equality' → logprob: -20.625158309936523
    5. 'Equals' → logprob: -21.500158309936523
    6. '           ' → logprob: -21.625158309936523
    7. '_equal' → logprob: -22.500158309936523
    8. '   ' → logprob: -22.750158309936523
    9. '.Equal' → logprob: -23.250158309936523
    10. 'Empty' → logprob: -23.375158309936523

Token 3007: 'Distance' (ID: 17525)
  Prédit: 'Distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Distance' → logprob: 0.0
    2. 'distance' → logprob: -17.625
    3. ' Distance' → logprob: -18.0
    4. 'Distances' → logprob: -18.5
    5. '_distance' → logprob: -18.625
    6. '_DISTANCE' → logprob: -20.25
    7. '           ' → logprob: -20.625
    8. '       ' → logprob: -21.75
    9. 'Density' → logprob: -22.625
    10. 'Depth' → logprob: -22.75

Token 3008: 'From' (ID: 3879)
  Prédit: 'From'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'From' → logprob: -3.128163257315464e-07
    2. 'from' → logprob: -15.5
    3. ' From' → logprob: -18.25
    4. '_from' → logprob: -19.0
    5. '_From' → logprob: -21.0
    6. '.From' → logprob: -21.25
    7. '   ' → logprob: -21.5
    8. '[' → logprob: -22.125
    9. '...' → logprob: -22.375
    10. '.from' → logprob: -22.5

Token 3009: 'Lines' (ID: 22204)
  Prédit: 'Lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lines' → logprob: -6.32523515378125e-05
    2. 'lines' → logprob: -9.875062942504883
    3. '_lines' → logprob: -11.750062942504883
    4. 'Line' → logprob: -13.625062942504883
    5. '=' → logprob: -14.375062942504883
    6. ' Lines' → logprob: -14.875062942504883
    7. 'Equal' → logprob: -14.875062942504883
    8. 'Solver' → logprob: -15.000062942504883
    9. '
' → logprob: -15.125062942504883
    10. 'solver' → logprob: -15.250062942504883

Token 3010: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.4140441635390744e-05
    2. '(lines' → logprob: -12.000014305114746
    3. 'solver' → logprob: -12.000014305114746
    4. '_solver' → logprob: -14.375014305114746
    5. ' Solver' → logprob: -14.500014305114746
    6. '(S' → logprob: -14.500014305114746
    7. '(self' → logprob: -17.00001335144043
    8. '(s' → logprob: -17.37501335144043
    9. '   ' → logprob: -17.50001335144043
    10. ' solver' → logprob: -17.75001335144043

Token 3011: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -2.1008713702030946e-06
    2. 'lines' → logprob: -13.875001907348633
    3. '(line' → logprob: -14.000001907348633
    4. '           ' → logprob: -15.250001907348633
    5. ' lines' → logprob: -18.000001907348633
    6. '```' → logprob: -18.750001907348633
    7. '.lines' → logprob: -19.000001907348633
    8. '(' → logprob: -19.500001907348633
    9. '(
' → logprob: -20.250001907348633
    10. '(l' → logprob: -20.500001907348633

Token 3012: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0044798469170928
    2. ')' → logprob: -5.504479885101318
    3. ')
' → logprob: -8.12947940826416
    4. ').' → logprob: -9.50447940826416
    5. '       ' → logprob: -11.37947940826416
    6. '               ' → logprob: -12.25447940826416
    7. '<|end|>' → logprob: -12.37947940826416
    8. ').__' → logprob: -12.75447940826416
    9. '          ' → logprob: -13.25447940826416
    10. '
' → logprob: -13.75447940826416

Token 3013: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003307350678369403
    2. 'result' → logprob: -6.003307342529297
    3. 'point' → logprob: -7.128307342529297
    4. 'token' → logprob: -11.128307342529297
    5. 'pt' → logprob: -12.253307342529297
    6. ' result' → logprob: -12.878307342529297
    7. ' point' → logprob: -13.253307342529297
    8. 'solution' → logprob: -13.628307342529297
    9. '```' → logprob: -13.753307342529297
    10. 'points' → logprob: -14.128307342529297

Token 3014: ' res' (ID: 694)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.40266937017440796
    2. 'pt' → logprob: -1.1526694297790527
    3. 'result' → logprob: -4.652669429779053
    4. 'res' (adapté à ' res') → logprob: -5.152669429779053
    5. '           ' → logprob: -8.152668952941895
    6. 'p' → logprob: -9.902668952941895
    7. 'answer' → logprob: -11.777668952941895
    8. 'ans' → logprob: -12.152668952941895
    9. 'solution' → logprob: -13.527668952941895
    10. ' pt' → logprob: -14.277668952941895

Token 3015: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09316196292638779
    2. 'ult' → logprob: -2.5931620597839355
    3. '=' → logprob: -4.4681620597839355
    4. 'ults' → logprob: -6.2181620597839355
    5. '       ' → logprob: -8.093161582946777
    6. '   ' → logprob: -9.093161582946777
    7. '           ' → logprob: -9.218161582946777
    8. 'ultat' → logprob: -10.093161582946777
    9. '=res' → logprob: -10.718161582946777
    10. ' ult' → logprob: -10.718161582946777

Token 3016: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -6.392202976712724e-06
    2. ' solver' → logprob: -12.000006675720215
    3. 'sol' → logprob: -15.750006675720215
    4. 'resolver' → logprob: -19.7500057220459
    5. '   ' → logprob: -21.2500057220459
    6. '
' → logprob: -21.8750057220459
    7. 'solution' → logprob: -22.1250057220459
    8. 'sv' → logprob: -22.7500057220459
    9. 'scheduler' → logprob: -22.8750057220459
    10. 'solve' → logprob: -22.8750057220459

Token 3017: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.011069164611399174
    2. 'find' → logprob: -4.511069297790527
    3. '.' → logprob: -11.136069297790527
    4. '.findall' → logprob: -12.761069297790527
    5. '           ' → logprob: -13.636069297790527
    6. ' find' → logprob: -14.136069297790527
    7. '_find' → logprob: -14.136069297790527
    8. '=find' → logprob: -14.761069297790527
    9. ' .' → logprob: -15.261069297790527
    10. ').' → logprob: -15.886069297790527

Token 3018: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -2.927930654550437e-05
    2. '_token' → logprob: -11.375029563903809
    3. '```' → logprob: -11.625029563903809
    4. '_points' → logprob: -13.250029563903809
    5. '_' → logprob: -14.250029563903809
    6. 'point' → logprob: -14.375029563903809
    7. '_Point' → logprob: -14.375029563903809
    8. 'Point' → logprob: -14.500029563903809
    9. '##_' → logprob: -14.625029563903809
    10. '_piece' → logprob: -14.875029563903809

Token 3019: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011856284982059151
    2. 'if' → logprob: -10.125118255615234
    3. ' if' → logprob: -11.000118255615234
    4. '()
' → logprob: -11.250118255615234
    5. '()' → logprob: -11.500118255615234
    6. '<|end|>' → logprob: -12.000118255615234
    7. '(None' → logprob: -12.000118255615234
    8. '(' → logprob: -12.250118255615234
    9. '		' → logprob: -12.750118255615234
    10. '```' → logprob: -12.875118255615234

Token 3020: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5928495486150496e-05
    2. '       ' → logprob: -11.375016212463379
    3. 'if' → logprob: -13.500016212463379
    4. '```' → logprob: -13.500016212463379
    5. '   ' → logprob: -14.750016212463379
    6. '		' → logprob: -14.875016212463379
    7. '               ' → logprob: -15.000016212463379
    8. '	       ' → logprob: -15.500016212463379
    9. '                   ' → logprob: -16.625015258789062
    10. ' if' → logprob: -16.875015258789062

Token 3021: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011079652234911919
    2. '           ' → logprob: -4.511079788208008
    3. ' if' → logprob: -10.386079788208008
    4. '       ' → logprob: -14.636079788208008
    5. '```' → logprob: -15.011079788208008
    6. 'import' → logprob: -16.386079788208008
    7. '		' → logprob: -17.136079788208008
    8. '               ' → logprob: -17.886079788208008
    9. '	if' → logprob: -18.261079788208008
    10. '   ' → logprob: -18.511079788208008

Token 3022: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.25192907452583313
    2. 'res' → logprob: -1.5019290447235107
    3. '_res' → logprob: -18.376928329467773
    4. '           ' → logprob: -18.876928329467773
    5. '(res' → logprob: -19.126928329467773
    6. '	res' → logprob: -19.376928329467773
    7. '            ' → logprob: -20.626928329467773
    8. 'result' → logprob: -21.376928329467773
    9. ' ' → logprob: -21.626928329467773
    10. '               ' → logprob: -21.876928329467773

Token 3023: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16022787988185883
    2. 'is' → logprob: -1.91022789478302
    3. '==' → logprob: -13.28522777557373
    4. '	is' → logprob: -14.16022777557373
    5. ' ==' → logprob: -14.66022777557373
    6. '
' → logprob: -15.66022777557373
    7. '```' → logprob: -16.160228729248047
    8. '            ' → logprob: -16.410228729248047
    9. '               ' → logprob: -16.785228729248047
    10. '.is' → logprob: -16.910228729248047

Token 3024: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.623244553338736e-05
    2. ' None' → logprob: -9.750065803527832
    3. 'not' → logprob: -11.750065803527832
    4. '   ' → logprob: -17.62506675720215
    5. ' not' → logprob: -17.75006675720215
    6. 'Not' → logprob: -19.37506675720215
    7. '(None' → logprob: -20.25006675720215
    8. '_None' → logprob: -20.37506675720215
    9. '=None' → logprob: -20.75006675720215
    10. '           ' → logprob: -20.75006675720215

Token 3025: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11098362505435944
    2. ':
' → logprob: -2.4859836101531982
    3. ' or' → logprob: -4.860983848571777
    4. ':' → logprob: -4.860983848571777
    5. '           ' → logprob: -5.110983848571777
    6. ' and' → logprob: -8.985983848571777
    7. '	           ' → logprob: -9.985983848571777
    8. '                   ' → logprob: -10.110983848571777
    9. '):
' → logprob: -11.485983848571777
    10. 'and' → logprob: -11.610983848571777

Token 3026: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.244413766078651e-05
    2. 'print' → logprob: -10.000082015991211
    3. '           ' → logprob: -10.875082015991211
    4. '                   ' → logprob: -11.375082015991211
    5. ' print' → logprob: -12.875082015991211
    6. '                       ' → logprob: -13.750082015991211
    7. '```' → logprob: -13.750082015991211
    8. '	           ' → logprob: -13.875082015991211
    9. '   ' → logprob: -14.500082015991211
    10. '			' → logprob: -16.37508201599121

Token 3027: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3166483938694
    2. '               ' → logprob: -1.3166483640670776
    3. ' print' → logprob: -5.941648483276367
    4. '   ' → logprob: -7.941648483276367
    5. '           ' → logprob: -8.316648483276367
    6. '                   ' → logprob: -8.816648483276367
    7. '	print' → logprob: -13.191648483276367
    8. '```' → logprob: -13.691648483276367
    9. '                       ' → logprob: -14.566648483276367
    10. '       ' → logprob: -14.691648483276367

Token 3028: ' Determine' (ID: 57076)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019342374056577682
    2. '               ' → logprob: -4.019342422485352
    3. '           ' → logprob: -6.894342422485352
    4. ' print' → logprob: -9.269342422485352
    5. '                   ' → logprob: -9.644342422485352
    6. '   ' → logprob: -11.144342422485352
    7. '```' → logprob: -13.269342422485352
    8. 'if' → logprob: -13.769342422485352
    9. '       ' → logprob: -14.644342422485352
    10. '                       ' → logprob: -14.769342422485352

Token 3029: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.41001665592193604
    2. 'if' → logprob: -1.410016655921936
    3. ' if' → logprob: -3.5350165367126465
    4. '           ' → logprob: -3.5350165367126465
    5. '               ' → logprob: -3.7850165367126465
    6. '#' → logprob: -4.9100165367126465
    7. ' print' → logprob: -6.6600165367126465
    8. '```' → logprob: -7.1600165367126465
    9. 'whether' → logprob: -7.6600165367126465
    10. '                   ' → logprob: -7.9100165367126465

Token 3030: ' Many' (ID: 11048)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7752577662467957
    2. 'res' → logprob: -1.2752578258514404
    3. ' res' → logprob: -2.4002578258514404
    4. 'solver' → logprob: -2.5252578258514404
    5. ' len' → logprob: -3.6502578258514404
    6. 'not' → logprob: -4.275257587432861
    7. 'many' → logprob: -4.525257587432861
    8. '#' → logprob: -4.775257587432861
    9. ' not' → logprob: -5.275257587432861
    10. 'any' → logprob: -5.400257587432861

Token 3031: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.049604058265686
    2. ' or' → logprob: -1.424604058265686
    3. '           ' → logprob: -1.799604058265686
    4. ':' → logprob: -2.6746039390563965
    5. 'print' → logprob: -2.7996039390563965
    6. 'if' → logprob: -3.1746039390563965
    7. ':
' → logprob: -4.0496039390563965
    8. '                   ' → logprob: -4.2996039390563965
    9. 'else' → logprob: -4.4246039390563965
    10. ' if' → logprob: -4.6746039390563965

Token 3032: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0019778802525252104
    2. '"' → logprob: -6.876977920532227
    3. 'print' → logprob: -7.751977920532227
    4. 'No' → logprob: -8.251977920532227
    5. ' None' → logprob: -9.126977920532227
    6. '           ' → logprob: -9.876977920532227
    7. '               ' → logprob: -10.376977920532227
    8. '"No' → logprob: -11.126977920532227
    9. '#' → logprob: -11.376977920532227
    10. ''' → logprob: -11.876977920532227

Token 3033: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16221311688423157
    2. 'print' → logprob: -2.037213087081909
    3. '           ' → logprob: -4.912213325500488
    4. ' print' → logprob: -5.037213325500488
    5. ' if' → logprob: -6.537213325500488
    6. '```' → logprob: -6.537213325500488
    7. 'if' → logprob: -6.662213325500488
    8. '                   ' → logprob: -7.662213325500488
    9. '#' → logprob: -7.912213325500488
    10. 'import' → logprob: -8.912213325500488

Token 3034: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6931961178779602
    2. '               ' → logprob: -0.6931961178779602
    3. '```' → logprob: -10.818196296691895
    4. 'if' → logprob: -11.943196296691895
    5. ' if' → logprob: -12.068196296691895
    6. '
' → logprob: -12.318196296691895
    7. '                   ' → logprob: -12.443196296691895
    8. '       ' → logprob: -12.443196296691895
    9. 'import' → logprob: -14.318196296691895
    10. 'continue' → logprob: -14.568196296691895

Token 3035: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1823433637619019
    2. '               ' → logprob: -1.5573433637619019
    3. 'if' → logprob: -1.6823433637619019
    4. 'print' → logprob: -2.1823434829711914
    5. 'count' → logprob: -2.9323434829711914
    6. 'many' → logprob: -2.9323434829711914
    7. 'all' → logprob: -3.6823434829711914
    8. 'parallel' → logprob: -4.432343482971191
    9. 'multiple' → logprob: -4.932343482971191
    10. 'possible' → logprob: -5.057343482971191

Token 3036: ' Detect' (ID: 60694)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7586259245872498
    2. 'count' → logprob: -2.1336259841918945
    3. 'dist' → logprob: -2.2586259841918945
    4. 'all' → logprob: -2.5086259841918945
    5. 'if' → logprob: -3.0086259841918945
    6. 'many' → logprob: -3.1336259841918945
    7. 'parallel' → logprob: -3.2586259841918945
    8. 'print' → logprob: -3.5086259841918945
    9. '               ' → logprob: -3.6336259841918945
    10. 'multiple' → logprob: -5.0086259841918945

Token 3037: ' all' (ID: 722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6787789463996887
    2. ' if' → logprob: -1.053778886795044
    3. ' all' → logprob: -3.428778886795044
    4. 'n' → logprob: -3.553778886795044
    5. ' n' → logprob: -3.553778886795044
    6. 'parallel' → logprob: -4.178779125213623
    7. 'all' → logprob: -4.303779125213623
    8. ' parallel' → logprob: -4.803779125213623
    9. 'len' → logprob: -4.803779125213623
    10. '           ' → logprob: -5.928779125213623

Token 3038: ' lines' (ID: 8698)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.4955276548862457
    2. '_parallel' → logprob: -0.9955276250839233
    3. ' parallel' → logprob: -4.370527744293213
    4. 'lines' → logprob: -5.245527744293213
    5. 'all' → logprob: -7.120527744293213
    6. ' lines' → logprob: -7.620527744293213
    7. '_lines' → logprob: -7.870527744293213
    8. '(line' → logprob: -8.120527267456055
    9. '_par' → logprob: -8.370527267456055
    10. 'line' → logprob: -8.745527267456055

Token 3039: ' parallel' (ID: 26697)
  Prédit: '_parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.783406674861908
    2. 'parallel' → logprob: -1.2834067344665527
    3. '           ' → logprob: -2.1584067344665527
    4. 'are' → logprob: -3.0334067344665527
    5. 'all' → logprob: -3.2834067344665527
    6. '_are' → logprob: -3.6584067344665527
    7. '_all' → logprob: -4.533406734466553
    8. ' parallel' → logprob: -5.158406734466553
    9. 'if' → logprob: -5.533406734466553
    10. '```' → logprob: -5.908406734466553

Token 3040: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08009219914674759
    2. '               ' → logprob: -2.580092191696167
    3. '
' → logprob: -7.330092430114746
    4. ':' → logprob: -8.705092430114746
    5. ',' → logprob: -8.955092430114746
    6. '       ' → logprob: -9.455092430114746
    7. 'if' → logprob: -10.330092430114746
    8. ' to' → logprob: -10.455092430114746
    9. ' if' → logprob: -10.705092430114746
    10. '   ' → logprob: -11.455092430114746

Token 3041: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20692701637744904
    2. '           ' → logprob: -1.7069270610809326
    3. 'if' → logprob: -5.9569268226623535
    4. 'parallel' → logprob: -6.3319268226623535
    5. 'n' → logprob: -7.5819268226623535
    6. 'all' → logprob: -8.581927299499512
    7. 'base' → logprob: -8.581927299499512
    8. ' parallel' → logprob: -8.956927299499512
    9. ' if' → logprob: -9.706927299499512
    10. '                   ' → logprob: -11.081927299499512

Token 3042: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' (adapté à ' base') → logprob: -0.058848485350608826
    2. 'parallel' → logprob: -3.9338483810424805
    3. 'all' → logprob: -4.0588483810424805
    4. 'n' → logprob: -4.3088483810424805
    5. 'if' → logprob: -5.4338483810424805
    6. '               ' → logprob: -6.3088483810424805
    7. '           ' → logprob: -7.5588483810424805
    8. '                   ' → logprob: -9.93384838104248
    9. '   ' → logprob: -10.05884838104248
    10. '#' → logprob: -10.93384838104248

Token 3043: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02442360296845436
    2. '=' → logprob: -4.524423599243164
    3. '_normal' → logprob: -4.524423599243164
    4. '_n' → logprob: -6.274423599243164
    5. 'n' → logprob: -8.649423599243164
    6. '.normal' → logprob: -9.149423599243164
    7. 'normal' → logprob: -9.399423599243164
    8. '_vector' → logprob: -10.024423599243164
    9. '_base' → logprob: -10.399423599243164
    10. '_norm' → logprob: -10.399423599243164

Token 3044: ' lines' (ID: 8698)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09860576689243317
    2. 'solver' → logprob: -2.5986058712005615
    3. 'lines' → logprob: -4.223605632781982
    4. ' self' → logprob: -6.223605632781982
    5. ' lines' → logprob: -6.598605632781982
    6. ' solver' → logprob: -7.473605632781982
    7. '               ' → logprob: -7.598605632781982
    8. '           ' → logprob: -8.59860610961914
    9. '                   ' → logprob: -9.72360610961914
    10. 'sol' → logprob: -10.47360610961914

Token 3045: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026632919907569885
    2. '0' → logprob: -3.6516330242156982
    3. 'base' → logprob: -9.151633262634277
    4. '               ' → logprob: -10.026633262634277
    5. '           ' → logprob: -10.151633262634277
    6. '   ' → logprob: -10.401633262634277
    7. '       ' → logprob: -10.526633262634277
    8. '```' → logprob: -10.651633262634277
    9. '=' → logprob: -11.151633262634277
    10. 'if' → logprob: -11.276633262634277

Token 3046: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. ' ' → logprob: -15.875
    4. '-' → logprob: -18.625
    5. '...' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. '   ' → logprob: -19.375
    8. '(' → logprob: -19.5
    9. '
' → logprob: -19.625
    10. '#' → logprob: -19.875

Token 3047: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4675786793231964
    2. '.normal' → logprob: -1.717578649520874
    3. '                   ' → logprob: -2.842578649520874
    4. '
' → logprob: -2.967578649520874
    5. '           ' → logprob: -2.967578649520874
    6. ').' → logprob: -4.467578887939453
    7. '.n' → logprob: -4.967578887939453
    8. ')
' → logprob: -5.842578887939453
    9. '.' → logprob: -6.342578887939453
    10. 'if' → logprob: -6.342578887939453

Token 3048: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0055151269771158695
    2. 'n' → logprob: -5.880515098571777
    3. 'parallel' → logprob: -6.005515098571777
    4. '           ' → logprob: -8.505515098571777
    5. 'all' → logprob: -10.880515098571777
    6. ' parallel' → logprob: -11.505515098571777
    7. 'if' → logprob: -12.130515098571777
    8. ' n' → logprob: -13.380515098571777
    9. '```' → logprob: -14.380515098571777
    10. 'is' → logprob: -14.630515098571777

Token 3049: ' n' (ID: 297)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.4409051239490509
    2. 'n' (adapté à ' n') → logprob: -1.5659050941467285
    3. 'all' → logprob: -1.9409050941467285
    4. '               ' → logprob: -6.0659050941467285
    5. '                   ' → logprob: -6.6909050941467285
    6. 'if' → logprob: -7.9409050941467285
    7. '           ' → logprob: -9.940905570983887
    8. '   ' → logprob: -10.440905570983887
    9. 'is' → logprob: -11.315905570983887
    10. 'any' → logprob: -11.440905570983887

Token 3050: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13236254453659058
    2. ' =' → logprob: -2.1323626041412354
    3. '=len' → logprob: -5.382362365722656
    4. '                   ' → logprob: -8.132362365722656
    5. '               ' → logprob: -8.257362365722656
    6. '=n' → logprob: -9.632362365722656
    7. '=count' → logprob: -9.632362365722656
    8. '           ' → logprob: -9.757362365722656
    9. '=line' → logprob: -10.632362365722656
    10. '=int' → logprob: -11.007362365722656

Token 3051: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.6240566083070007e-06
    2. ' len' → logprob: -13.500001907348633
    3. '               ' → logprob: -16.500001907348633
    4. '(len' → logprob: -17.375001907348633
    5. '                   ' → logprob: -18.125001907348633
    6. '           ' → logprob: -19.250001907348633
    7. '[len' → logprob: -19.875001907348633
    8. '              ' → logprob: -20.875001907348633
    9. '=len' → logprob: -21.125001907348633
    10. '```' → logprob: -21.375001907348633

Token 3052: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.38687559962272644
    2. '(lines' → logprob: -1.1368756294250488
    3. 'self' → logprob: -13.26187515258789
    4. ' lines' → logprob: -13.51187515258789
    5. '	lines' → logprob: -14.01187515258789
    6. '(self' → logprob: -14.51187515258789
    7. '.lines' → logprob: -16.76187515258789
    8. '(base' → logprob: -17.01187515258789
    9. 'line' → logprob: -17.13687515258789
    10. '```' → logprob: -17.38687515258789

Token 3053: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005822736769914627
    2. '           ' → logprob: -5.880822658538818
    3. ')' → logprob: -6.380822658538818
    4. ')
' → logprob: -7.130822658538818
    5. '
' → logprob: -8.005823135375977
    6. 'if' → logprob: -10.130823135375977
    7. '>' → logprob: -10.130823135375977
    8. '==' → logprob: -10.755823135375977
    9. '                   ' → logprob: -11.505823135375977
    10. '       ' → logprob: -11.755823135375977

Token 3054: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11715886741876602
    2. 'parallel' → logprob: -2.242158889770508
    3. 'all' → logprob: -6.242158889770508
    4. 'if' → logprob: -6.242158889770508
    5. ' parallel' → logprob: -8.492158889770508
    6. '           ' → logprob: -8.867158889770508
    7. 'is' → logprob: -10.867158889770508
    8. '   ' → logprob: -10.992158889770508
    9. '       ' → logprob: -11.742158889770508
    10. 'found' → logprob: -11.867158889770508

Token 3055: ' if' (ID: 538)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.012311853468418121
    2. 'all' → logprob: -4.887311935424805
    3. '               ' → logprob: -5.387311935424805
    4. 'if' (adapté à ' if') → logprob: -10.512311935424805
    5. '           ' → logprob: -10.637311935424805
    6. 'par' → logprob: -11.262311935424805
    7. 'count' → logprob: -11.387311935424805
    8. '                   ' → logprob: -11.637311935424805
    9. 'many' → logprob: -11.762311935424805
    10. 'is' → logprob: -11.762311935424805

Token 3056: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6249983906745911
    2. 'all' → logprob: -0.8749983906745911
    3. ' all' → logprob: -3.1249983310699463
    4. 'any' → logprob: -6.624998569488525
    5. ' n' → logprob: -6.749998569488525
    6. 'parallel' → logprob: -6.999998569488525
    7. 'base' → logprob: -8.374998092651367
    8. 'len' → logprob: -9.249998092651367
    9. '               ' → logprob: -10.124998092651367
    10. ' parallel' → logprob: -10.249998092651367

Token 3057: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6929658055305481
    2. '>' → logprob: -1.0679657459259033
    3. ' ==' → logprob: -2.1929657459259033
    4. '<' → logprob: -3.6929657459259033
    5. ' >' → logprob: -4.442965984344482
    6. ' <' → logprob: -5.567965984344482
    7. '<=' → logprob: -6.442965984344482
    8. '           ' → logprob: -6.817965984344482
    9. ' <=' → logprob: -7.942965984344482
    10. '               ' → logprob: -7.942965984344482

Token 3058: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04302453622221947
    2. '0' → logprob: -3.1680245399475098
    3. 'len' → logprob: -11.168024063110352
    4. ' ' → logprob: -12.418024063110352
    5. '   ' → logprob: -12.793024063110352
    6. '2' → logprob: -13.543024063110352
    7. '>' → logprob: -13.793024063110352
    8. '```' → logprob: -14.043024063110352
    9. '<' → logprob: -14.543024063110352
    10. '
' → logprob: -16.04302406311035

Token 3059: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011057846248149872
    2. '0' → logprob: -4.5110578536987305
    3. 'len' → logprob: -12.26105785369873
    4. '2' → logprob: -13.38605785369873
    5. ' ' → logprob: -13.63605785369873
    6. '```' → logprob: -13.76105785369873
    7. '   ' → logprob: -14.51105785369873
    8. '>' → logprob: -14.63605785369873
    9. '=' → logprob: -16.011056900024414
    10. '<' → logprob: -16.511056900024414

Token 3060: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3590986728668213
    2. ' or' → logprob: -1.4840986728668213
    3. ' and' → logprob: -3.7340986728668213
    4. '               ' → logprob: -4.109098434448242
    5. 'and' → logprob: -4.234098434448242
    6. ':
' → logprob: -4.734098434448242
    7. 'or' → logprob: -4.734098434448242
    8. ':' → logprob: -6.109098434448242
    9. '                       ' → logprob: -8.859098434448242
    10. '           ' → logprob: -8.984098434448242

Token 3061: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00335689727216959
    2. 'print' → logprob: -5.75335693359375
    3. '               ' → logprob: -9.00335693359375
    4. ' print' → logprob: -10.62835693359375
    5. '                       ' → logprob: -11.25335693359375
    6. '           ' → logprob: -11.62835693359375
    7. '```' → logprob: -12.50335693359375
    8. '   ' → logprob: -12.62835693359375
    9. '
' → logprob: -13.75335693359375
    10. 'if' → logprob: -14.50335693359375

Token 3062: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009471880039200187
    2. '                   ' → logprob: -7.000946998596191
    3. '               ' → logprob: -10.500946998596191
    4. ' print' → logprob: -12.000946998596191
    5. '                       ' → logprob: -13.875946998596191
    6. '```' → logprob: -13.875946998596191
    7. '           ' → logprob: -16.500947952270508
    8. '   ' → logprob: -16.625947952270508
    9. '#print' → logprob: -17.625947952270508
    10. 'sys' → logprob: -17.750947952270508

Token 3063: ' infinite' (ID: 48413)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007354593835771084
    2. '                   ' → logprob: -5.007354736328125
    3. ' print' → logprob: -8.007354736328125
    4. '               ' → logprob: -8.507354736328125
    5. '                       ' → logprob: -9.632354736328125
    6. '```' → logprob: -10.757354736328125
    7. '           ' → logprob: -11.882354736328125
    8. 'continue' → logprob: -12.882354736328125
    9. '
' → logprob: -13.632354736328125
    10. '#' → logprob: -13.882354736328125

Token 3064: ' solutions' (ID: 9368)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6202158331871033
    2. 'solutions' → logprob: -1.245215892791748
    3. 'points' → logprob: -2.745215892791748
    4. ' solutions' → logprob: -3.620215892791748
    5. '
' → logprob: -3.620215892791748
    6. ' #' → logprob: -4.245215892791748
    7. '```' → logprob: -4.495215892791748
    8. '           ' → logprob: -4.745215892791748
    9. ' points' → logprob: -5.120215892791748
    10. '               ' → logprob: -5.870215892791748

Token 3065: ' =>' (ID: 871)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023784367367625237
    2. '               ' → logprob: -3.8987843990325928
    3. '
' → logprob: -6.148784160614014
    4. '                       ' → logprob: -7.398784160614014
    5. 'print' → logprob: -8.898784637451172
    6. ',' → logprob: -9.398784637451172
    7. ' and' → logprob: -10.148784637451172
    8. ':' → logprob: -10.398784637451172
    9. '           ' → logprob: -10.398784637451172
    10. '```' → logprob: -10.398784637451172

Token 3066: ' Many' (ID: 11048)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.500108141452074e-05
    2. '                   ' → logprob: -11.000035285949707
    3. ' print' → logprob: -11.000035285949707
    4. '```' → logprob: -14.375035285949707
    5. '               ' → logprob: -15.000035285949707
    6. 'continue' → logprob: -15.125035285949707
    7. '                       ' → logprob: -16.00003433227539
    8. '
' → logprob: -16.12503433227539
    9. 'output' → logprob: -16.50003433227539
    10. '	print' → logprob: -16.87503433227539

Token 3067: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1850225031375885
    2. '               ' → logprob: -2.3100225925445557
    3. '
' → logprob: -2.6850225925445557
    4. '                       ' → logprob: -7.560022354125977
    5. '```' → logprob: -7.935022354125977
    6. ':
' → logprob: -8.685022354125977
    7. '           ' → logprob: -9.310022354125977
    8. '
' → logprob: -9.685022354125977
    9. ':' → logprob: -10.185022354125977
    10. '                    
' → logprob: -10.435022354125977

Token 3068: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002593130338937044
    2. '                       ' → logprob: -9.250259399414062
    3. '               ' → logprob: -9.250259399414062
    4. '```' → logprob: -10.250259399414062
    5. 'print' → logprob: -10.875259399414062
    6. '
' → logprob: -11.750259399414062
    7. 'continue' → logprob: -12.750259399414062
    8. '           ' → logprob: -14.250259399414062
    9. 'return' → logprob: -14.500259399414062
    10. '       ' → logprob: -15.125259399414062

Token 3069: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06281986832618713
    2. '                   ' → logprob: -2.8128199577331543
    3. '               ' → logprob: -7.187819957733154
    4. ' print' → logprob: -10.187819480895996
    5. '                       ' → logprob: -10.437819480895996
    6. '```' → logprob: -11.062819480895996
    7. 'return' → logprob: -12.062819480895996
    8. '           ' → logprob: -12.312819480895996
    9. '   ' → logprob: -13.562819480895996
    10. 'output' → logprob: -14.062819480895996

Token 3070: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001424045069143176
    2. '('' → logprob: -7.2514238357543945
    3. '"' → logprob: -8.126423835754395
    4. '(' → logprob: -8.376423835754395
    5. 'Many' → logprob: -8.751423835754395
    6. '"M' → logprob: -11.001423835754395
    7. ''M' → logprob: -12.876423835754395
    8. 'many' → logprob: -13.001423835754395
    9. '   ' → logprob: -13.376423835754395
    10. '(M' → logprob: -13.501423835754395

Token 3071: 'Many' (ID: 12488)
  Prédit: 'Many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Many' → logprob: -2.1054253011243418e-05
    2. '"' → logprob: -10.875020980834961
    3. ' Many' → logprob: -14.125020980834961
    4. 'None' → logprob: -15.125020980834961
    5. 'Infinite' → logprob: -15.375020980834961
    6. 'M' → logprob: -15.750020980834961
    7. 'many' → logprob: -15.875020980834961
    8. '`' → logprob: -16.50002098083496
    9. 'Multiple' → logprob: -16.50002098083496
    10. 'Infinity' → logprob: -16.62502098083496

Token 3072: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.08960702270269394
    2. '")' → logprob: -2.464607000350952
    3. '")
' → logprob: -7.339607238769531
    4. ')
' → logprob: -12.214607238769531
    5. ')")
' → logprob: -12.589607238769531
    6. ')' → logprob: -12.839607238769531
    7. '"' → logprob: -13.589607238769531
    8. '")

' → logprob: -13.714607238769531
    9. '");' → logprob: -13.964607238769531
    10. '               ' → logprob: -14.339607238769531

Token 3073: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12697818875312805
    2. '               ' → logprob: -2.1269781589508057
    3. '           ' → logprob: -10.001977920532227
    4. '                       ' → logprob: -13.376977920532227
    5. 'elif' → logprob: -13.376977920532227
    6. '```' → logprob: -14.376977920532227
    7. '       ' → logprob: -14.751977920532227
    8. '
' → logprob: -14.876977920532227
    9. '   ' → logprob: -15.376977920532227
    10. 'else' → logprob: -15.876977920532227

Token 3074: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017354177311062813
    2. '               ' → logprob: -4.2673540115356445
    3. 'continue' (adapté à ' continue') → logprob: -5.7673540115356445
    4. '           ' → logprob: -10.392354011535645
    5. '                       ' → logprob: -11.392354011535645
    6. 'elif' → logprob: -11.767354011535645
    7. 'else' → logprob: -12.392354011535645
    8. '```' → logprob: -13.517354011535645
    9. '				' → logprob: -13.892354011535645
    10. ' continue' → logprob: -14.642354011535645

Token 3075: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009130328893661499
    2. '           ' → logprob: -4.759130477905273
    3. '
' → logprob: -7.884130477905273
    4. '```' → logprob: -10.009130477905273
    5. 'elif' → logprob: -10.009130477905273
    6. '                   ' → logprob: -10.384130477905273
    7. '                
' → logprob: -11.884130477905273
    8. 'if' → logprob: -12.134130477905273
    9. '            
' → logprob: -13.134130477905273
    10. 'else' → logprob: -14.259130477905273

Token 3076: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6933424472808838
    2. '               ' → logprob: -0.6933424472808838
    3. '
' → logprob: -8.943342208862305
    4. '```' → logprob: -10.068342208862305
    5. '                   ' → logprob: -11.318342208862305
    6. 'elif' → logprob: -11.943342208862305
    7. '       ' → logprob: -13.318342208862305
    8. 'if' → logprob: -14.193342208862305
    9. '``' → logprob: -14.443342208862305
    10. '            
' → logprob: -15.818342208862305

Token 3077: ' parallel' (ID: 26697)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4023943841457367
    2. 'if' → logprob: -1.527394413948059
    3. '           ' → logprob: -2.6523942947387695
    4. 'parallel' (adapté à ' parallel') → logprob: -3.4023942947387695
    5. 'elif' → logprob: -5.4023942947387695
    6. 'base' → logprob: -6.1523942947387695
    7. 'else' → logprob: -6.2773942947387695
    8. '
' → logprob: -7.0273942947387695
    9. 'n' → logprob: -8.02739429473877
    10. 'found' → logprob: -8.52739429473877

Token 3078: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0010234013898298144
    2. '_lines' → logprob: -7.751023292541504
    3. '_' → logprob: -8.126023292541504
    4. 'count' → logprob: -9.876023292541504
    5. ' =' → logprob: -9.876023292541504
    6. '=' → logprob: -10.001023292541504
    7. 's' → logprob: -10.126023292541504
    8. '_check' → logprob: -10.751023292541504
    9. '_vector' → logprob: -11.376023292541504
    10. '_line' → logprob: -11.501023292541504

Token 3079: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47423461079597473
    2. ' =' → logprob: -0.9742345809936523
    3. '==' → logprob: -9.474234580993652
    4. ' ==' → logprob: -9.599234580993652
    5. '+=' → logprob: -12.224234580993652
    6. ' +=' → logprob: -12.974234580993652
    7. '=len' → logprob: -13.224234580993652
    8. ' ' → logprob: -14.349234580993652
    9. '=int' → logprob: -14.474234580993652
    10. '   ' → logprob: -14.974234580993652

Token 3080: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005877026706002653
    2. 'sum' → logprob: -7.6255879402160645
    3. ' ' → logprob: -9.500587463378906
    4. 'n' → logprob: -11.000587463378906
    5. ' sum' → logprob: -12.125587463378906
    6. '   ' → logprob: -13.750587463378906
    7. ' n' → logprob: -14.500587463378906
    8. '1' → logprob: -15.125587463378906
    9. '           ' → logprob: -15.500587463378906
    10. 'len' → logprob: -15.750587463378906

Token 3081: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.074907287256792e-05
    2. 'sum' → logprob: -9.75006103515625
    3. '1' → logprob: -13.12506103515625
    4. ' ' → logprob: -14.75006103515625
    5. 'n' → logprob: -17.37506103515625
    6. ' sum' → logprob: -17.87506103515625
    7. '```' → logprob: -17.87506103515625
    8. 'for' → logprob: -18.37506103515625
    9. 'parallel' → logprob: -18.62506103515625
    10. 'len' → logprob: -18.75006103515625

Token 3082: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021551379468292
    2. ' for' → logprob: -6.752155303955078
    3. 'for' → logprob: -7.002155303955078
    4. '           ' → logprob: -9.877155303955078
    5. '<|end|>' → logprob: -11.252155303955078
    6. '		       ' → logprob: -12.877155303955078
    7. '                   ' → logprob: -13.127155303955078
    8. '	           ' → logprob: -13.502155303955078
    9. '       ' → logprob: -13.877155303955078
    10. '			' → logprob: -14.252155303955078

Token 3083: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11336185783147812
    2. 'for' → logprob: -2.4883618354797363
    3. ' for' → logprob: -4.238361835479736
    4. '           ' → logprob: -4.738361835479736
    5. '                   ' → logprob: -7.113361835479736
    6. '       ' → logprob: -9.613362312316895
    7. '```' → logprob: -10.988362312316895
    8. '   ' → logprob: -11.488362312316895
    9. '	for' → logprob: -11.863362312316895
    10. '                       ' → logprob: -11.863362312316895

Token 3084: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.810037742368877e-05
    2. '               ' → logprob: -10.250038146972656
    3. ' for' → logprob: -13.000038146972656
    4. '           ' → logprob: -15.500038146972656
    5. 'base' → logprob: -15.625038146972656
    6. 'n' → logprob: -17.375038146972656
    7. '	for' → logprob: -20.000038146972656
    8. '       ' → logprob: -20.250038146972656
    9. '                   ' → logprob: -20.250038146972656
    10. '```' → logprob: -20.750038146972656

Token 3085: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00224577309563756
    2. 'line' → logprob: -6.127245903015137
    3. ' i' → logprob: -10.002245903015137
    4. '                   ' → logprob: -12.252245903015137
    5. '           ' → logprob: -12.252245903015137
    6. '               ' → logprob: -13.752245903015137
    7. ' line' → logprob: -13.877245903015137
    8. '   ' → logprob: -14.252245903015137
    9. '                           ' → logprob: -14.752245903015137
    10. 'lines' → logprob: -15.002245903015137

Token 3086: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519959807395935
    2. 'in' → logprob: -1.5019960403442383
    3. ',' → logprob: -10.126996040344238
    4. '                   ' → logprob: -11.501996040344238
    5. '               ' → logprob: -11.626996040344238
    6. ' ' → logprob: -13.376996040344238
    7. '           ' → logprob: -13.626996040344238
    8. '	in' → logprob: -14.501996040344238
    9. '                ' → logprob: -14.626996040344238
    10. 'i' → logprob: -14.751996040344238

Token 3087: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004311460361350328
    2. ' range' → logprob: -7.750431060791016
    3. '(range' → logprob: -15.250431060791016
    4. '   ' → logprob: -16.000431060791016
    5. 'in' → logprob: -16.375431060791016
    6. ' ' → logprob: -18.125431060791016
    7. '1' → logprob: -18.500431060791016
    8. '
' → logprob: -18.875431060791016
    9. '	range' → logprob: -19.125431060791016
    10. '       ' → logprob: -19.250431060791016

Token 3088: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021438424300868064
    2. '(' → logprob: -8.500214576721191
    3. '                   ' → logprob: -12.125214576721191
    4. '               ' → logprob: -12.250214576721191
    5. '           ' → logprob: -15.750214576721191
    6. '   ' → logprob: -15.875214576721191
    7. '                       ' → logprob: -16.000213623046875
    8. 'range' → logprob: -16.500213623046875
    9. ' ' → logprob: -16.625213623046875
    10. '                    ' → logprob: -17.500213623046875

Token 3089: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -18.125
    4. '           ' → logprob: -19.375
    5. 'range' → logprob: -19.375
    6. '
' → logprob: -19.5
    7. '(' → logprob: -19.625
    8. '               ' → logprob: -19.625
    9. 'n' → logprob: -19.75
    10. '                   ' → logprob: -19.875

Token 3090: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11489513516426086
    2. ',n' → logprob: -2.2398951053619385
    3. '               ' → logprob: -6.739895343780518
    4. ',len' → logprob: -7.489895343780518
    5. '                   ' → logprob: -8.86489486694336
    6. 'n' → logprob: -10.11489486694336
    7. ' ,' → logprob: -10.61489486694336
    8. ',
' → logprob: -10.73989486694336
    9. ',next' → logprob: -11.23989486694336
    10. ',i' → logprob: -11.36489486694336

Token 3091: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4378848391061183e-05
    2. ' n' → logprob: -11.250014305114746
    3. '                   ' → logprob: -14.000014305114746
    4. '               ' → logprob: -14.750014305114746
    5. '                       ' → logprob: -18.000015258789062
    6. '           ' → logprob: -19.000015258789062
    7. 'len' → logprob: -19.500015258789062
    8. '                ' → logprob: -19.875015258789062
    9. '                 ' → logprob: -20.375015258789062
    10. '	n' → logprob: -20.625015258789062

Token 3092: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01692553423345089
    2. '):
' → logprob: -5.14192533493042
    3. '                   ' → logprob: -5.51692533493042
    4. ',n' → logprob: -6.14192533493042
    5. '               ' → logprob: -6.51692533493042
    6. ':' → logprob: -7.14192533493042
    7. ':
' → logprob: -7.39192533493042
    8. '                       ' → logprob: -7.51692533493042
    9. 'n' → logprob: -8.141925811767578
    10. '                           ' → logprob: -9.266925811767578

Token 3093: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0054661668837070465
    2. '           ' → logprob: -5.380465984344482
    3. '		           ' → logprob: -7.380465984344482
    4. '               ' → logprob: -9.13046646118164
    5. '```' → logprob: -11.00546646118164
    6. '	               ' → logprob: -11.13046646118164
    7. '                       ' → logprob: -11.13046646118164
    8. '	           ' → logprob: -11.75546646118164
    9. '<|end|>' → logprob: -11.88046646118164
    10. '<|end|>' → logprob: -11.88046646118164

Token 3094: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.1162600889801979
    2. '                   ' → logprob: -2.241260051727295
    3. ' n' → logprob: -6.366260051727295
    4. 'line' → logprob: -7.241260051727295
    5. 'lines' → logprob: -7.741260051727295
    6. '                       ' → logprob: -8.366260528564453
    7. ' lines' → logprob: -8.616260528564453
    8. '               ' → logprob: -10.366260528564453
    9. '```' → logprob: -10.616260528564453
    10. ' line' → logprob: -10.866260528564453

Token 3095: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006710976012982428
    2. 'o' → logprob: -7.500670909881592
    3. '[' → logprob: -10.00067138671875
    4. 'ormal' → logprob: -10.37567138671875
    5. '_' → logprob: -11.25067138671875
    6. '```' → logprob: -11.62567138671875
    7. 'orm' → logprob: -12.12567138671875
    8. 'of' → logprob: -12.50067138671875
    9. '=' → logprob: -13.50067138671875
    10. 'or' → logprob: -13.75067138671875

Token 3096: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38718125224113464
    2. ' =' → logprob: -1.137181282043457
    3. '[' → logprob: -8.887181282043457
    4. '<|end|>' → logprob: -10.012181282043457
    5. '=n' → logprob: -10.262181282043457
    6. ',' → logprob: -10.387181282043457
    7. ')' → logprob: -11.637181282043457
    8. '=
' → logprob: -11.637181282043457
    9. 'n' → logprob: -11.762181282043457
    10. '0' → logprob: -11.887181282043457

Token 3097: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.001171652227640152
    2. ' base' → logprob: -6.751171588897705
    3. 'lines' → logprob: -13.876172065734863
    4. '(base' → logprob: -14.876172065734863
    5. ' lines' → logprob: -17.126171112060547
    6. 'bases' → logprob: -17.501171112060547
    7. '	base' → logprob: -17.751171112060547
    8. '   ' → logprob: -18.376171112060547
    9. ' ' → logprob: -18.751171112060547
    10. '           ' → logprob: -18.876171112060547

Token 3098: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -0.3180087208747864
    2. 'normal' → logprob: -1.3180086612701416
    3. '0' → logprob: -6.068008899688721
    4. '.' → logprob: -6.818008899688721
    5. '[' → logprob: -7.443008899688721
    6. '
' → logprob: -7.568008899688721
    7. '```' → logprob: -9.943008422851562
    8. 'n' → logprob: -10.318008422851562
    9. '(' → logprob: -10.318008422851562
    10. '_normal' → logprob: -10.943008422851562

Token 3099: '_vector' (ID: 29530)
  Prédit: '_vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -7.064297824399546e-05
    2. 'vector' → logprob: -9.625070571899414
    3. 'Vector' → logprob: -12.500070571899414
    4. '[' → logprob: -15.250070571899414
    5. '_VECTOR' → logprob: -15.625070571899414
    6. '       ' → logprob: -16.000070571899414
    7. ' vector' → logprob: -16.500070571899414
    8. '   ' → logprob: -16.875070571899414
    9. '_Vector' → logprob: -17.125070571899414
    10. '_vectors' → logprob: -17.375070571899414

Token 3100: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.49852555990219116
    2. '                   ' → logprob: -0.9985255599021912
    3. '=' → logprob: -4.123525619506836
    4. '()' → logprob: -5.623525619506836
    5. '               ' → logprob: -6.498525619506836
    6. '
' → logprob: -6.873525619506836
    7. ' =' → logprob: -7.373525619506836
    8. '           ' → logprob: -8.123525619506836
    9. ')
' → logprob: -8.998525619506836
    10. '                       ' → logprob: -9.123525619506836

Token 3101: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03642987832427025
    2. '           ' → logprob: -3.4114298820495605
    3. 'ni' → logprob: -6.1614298820495605
    4. '               ' → logprob: -7.4114298820495605
    5. '       ' → logprob: -10.536429405212402
    6. '                  ' → logprob: -11.411429405212402
    7. ' ni' → logprob: -11.661429405212402
    8. 'n' → logprob: -12.411429405212402
    9. '                 ' → logprob: -13.036429405212402
    10. '                       ' → logprob: -13.286429405212402

Token 3102: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' (adapté à ' ni') → logprob: -0.002140982076525688
    2. '                   ' → logprob: -6.252140998840332
    3. '           ' → logprob: -8.627140998840332
    4. '               ' → logprob: -11.002140998840332
    5. ' ni' → logprob: -11.627140998840332
    6. 'n' → logprob: -12.252140998840332
    7. '       ' → logprob: -14.252140998840332
    8. '                       ' → logprob: -14.752140998840332
    9. '   ' → logprob: -14.877140998840332
    10. '                 ' → logprob: -15.002140998840332

Token 3103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.489696204662323
    2. '=' → logprob: -1.1146962642669678
    3. '[' → logprob: -3.1146962642669678
    4. '                   ' → logprob: -4.614696025848389
    5. '0' → logprob: -5.864696025848389
    6. '               ' → logprob: -7.364696025848389
    7. '                       ' → logprob: -7.739696025848389
    8. '<|end|>' → logprob: -8.864696502685547
    9. '       ' → logprob: -8.989696502685547
    10. '=[' → logprob: -9.114696502685547

Token 3104: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.00023691373644396663
    2. ' lines' → logprob: -8.750236511230469
    3. 'self' → logprob: -9.500236511230469
    4. '(lines' → logprob: -13.375236511230469
    5. '                   ' → logprob: -13.625236511230469
    6. '           ' → logprob: -15.250236511230469
    7. '               ' → logprob: -15.250236511230469
    8. '                       ' → logprob: -15.875236511230469
    9. '.lines' → logprob: -16.87523651123047
    10. '	lines' → logprob: -17.25023651123047

Token 3105: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.875000953674316
    3. '                   ' → logprob: -16.25
    4. '[
' → logprob: -16.5
    5. '[' → logprob: -17.125
    6. '
' → logprob: -17.25
    7. '           ' → logprob: -17.625
    8. '   ' → logprob: -17.75
    9. '```' → logprob: -18.125
    10. '               ' → logprob: -18.375

Token 3106: '].' (ID: 1651)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07119771093130112
    2. '.' → logprob: -3.571197748184204
    3. '                   ' → logprob: -3.821197748184204
    4. '0' → logprob: -4.821197509765625
    5. '               ' → logprob: -5.321197509765625
    6. '.normal' → logprob: -5.696197509765625
    7. '.n' → logprob: -8.071197509765625
    8. '
' → logprob: -8.071197509765625
    9. '                       ' → logprob: -8.196197509765625
    10. '           ' → logprob: -8.196197509765625

Token 3107: 'normal' (ID: 14559)
  Prédit: 'normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -6.217951886355877e-05
    2. ' normal' → logprob: -10.000061988830566
    3. '0' → logprob: -12.500061988830566
    4. '(' → logprob: -12.875061988830566
    5. '
' → logprob: -13.000061988830566
    6. 'n' → logprob: -13.125061988830566
    7. '.normal' → logprob: -13.125061988830566
    8. '[' → logprob: -13.625061988830566
    9. 'ni' → logprob: -14.125061988830566
    10. '(normal' → logprob: -14.250061988830566

Token 3108: '_vector' (ID: 29530)
  Prédit: '_vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -0.0011787971016019583
    2. 'vector' → logprob: -6.751178741455078
    3. '.vector' → logprob: -12.001178741455078
    4. 'Vector' → logprob: -13.251178741455078
    5. '_VECTOR' → logprob: -15.626178741455078
    6. '.Vector' → logprob: -15.751178741455078
    7. '_vectors' → logprob: -16.251178741455078
    8. ' vector' → logprob: -16.751178741455078
    9. 'vectors' → logprob: -16.876178741455078
    10. 'VECTOR' → logprob: -17.001178741455078

Token 3109: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7078992128372192
    2. '()
' → logprob: -0.7078992128372192
    3. '()' → logprob: -4.83289909362793
    4. '               ' → logprob: -6.08289909362793
    5. '           ' → logprob: -6.45789909362793
    6. '
' → logprob: -6.58289909362793
    7. '0' → logprob: -7.70789909362793
    8. '(' → logprob: -7.83289909362793
    9. '                       ' → logprob: -9.33289909362793
    10. '       ' → logprob: -9.45789909362793

Token 3110: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002057950245216489
    2. '           ' → logprob: -6.377058029174805
    3. '               ' → logprob: -8.627058029174805
    4. '       ' → logprob: -9.627058029174805
    5. '                       ' → logprob: -10.252058029174805
    6. '
' → logprob: -10.752058029174805
    7. '                  ' → logprob: -11.252058029174805
    8. '                    ' → logprob: -11.502058029174805
    9. '```' → logprob: -11.502058029174805
    10. '		           ' → logprob: -12.502058029174805

Token 3111: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' (adapté à ' cross') → logprob: -0.038584381341934204
    2. ' cross' → logprob: -3.9135844707489014
    3. '                   ' → logprob: -4.038584232330322
    4. '           ' → logprob: -9.16358470916748
    5. 'parallel' → logprob: -10.03858470916748
    6. '                       ' → logprob: -10.28858470916748
    7. 'if' → logprob: -10.66358470916748
    8. 'c' → logprob: -10.66358470916748
    9. '               ' → logprob: -11.03858470916748
    10. '```' → logprob: -12.91358470916748

Token 3112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.63308185338974
    2. ' =' → logprob: -0.75808185338974
    3. '==' → logprob: -8.508081436157227
    4. 'abs' → logprob: -9.258081436157227
    5. ' ==' → logprob: -9.508081436157227
    6. '_abs' → logprob: -10.633081436157227
    7. '                   ' → logprob: -11.758081436157227
    8. '   ' → logprob: -11.883081436157227
    9. '=
' → logprob: -11.883081436157227
    10. '=lambda' → logprob: -11.883081436157227

Token 3113: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01825822703540325
    2. ' n' → logprob: -4.018258094787598
    3. 'abs' → logprob: -9.268258094787598
    4. ' abs' → logprob: -11.268258094787598
    5. '                   ' → logprob: -15.018258094787598
    6. '(n' → logprob: -15.268258094787598
    7. '	n' → logprob: -15.643258094787598
    8. '0' → logprob: -15.768258094787598
    9. '```' → logprob: -16.768259048461914
    10. ' (' → logprob: -17.143259048461914

Token 3114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.50000286102295
    3. 'o' → logprob: -14.50000286102295
    4. 'n' → logprob: -15.37500286102295
    5. ' ' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.125001907348633
    7. 'abs' → logprob: -16.125001907348633
    8. '
' → logprob: -16.500001907348633
    9. '```' → logprob: -16.625001907348633
    10. '#' → logprob: -17.812501907348633

Token 3115: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.074907287256792e-05
    2. '0' → logprob: -9.75006103515625
    3. '(' → logprob: -14.25006103515625
    4. '```' → logprob: -14.25006103515625
    5. '[
' → logprob: -14.50006103515625
    6. '#' → logprob: -15.50006103515625
    7. '`' → logprob: -16.75006103515625
    8. 'x' → logprob: -17.00006103515625
    9. '
' → logprob: -17.12506103515625
    10. '       ' → logprob: -17.37506103515625

Token 3116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005267076659947634
    2. '[' → logprob: -5.255267143249512
    3. '(' → logprob: -11.005267143249512
    4. '
' → logprob: -12.630267143249512
    5. 'user' → logprob: -13.380267143249512
    6. 'x' → logprob: -13.380267143249512
    7. '```' → logprob: -13.755267143249512
    8. 'i' → logprob: -13.942767143249512
    9. '1' → logprob: -14.005267143249512
    10. 'n' → logprob: -14.255267143249512

Token 3117: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -4.727905979962088e-05
    2. '*n' → logprob: -10.12504768371582
    3. ' *' → logprob: -12.25004768371582
    4. '*i' → logprob: -13.75004768371582
    5. '*pi' → logprob: -14.00004768371582
    6. '*num' → logprob: -15.87504768371582
    7. '```' → logprob: -16.37504768371582
    8. ']*' → logprob: -16.75004768371582
    9. '*
' → logprob: -16.87504768371582
    10. '   ' → logprob: -17.25004768371582

Token 3118: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -1.5048530030981055e-06
    2. 'n' → logprob: -13.500001907348633
    3. ' ni' → logprob: -16.625001907348633
    4. '```' → logprob: -19.125001907348633
    5. '#' → logprob: -19.375001907348633
    6. '-ni' → logprob: -19.625001907348633
    7. '
' → logprob: -20.125001907348633
    8. 'mi' → logprob: -20.125001907348633
    9. '[' → logprob: -20.250001907348633
    10. '`' → logprob: -20.625001907348633

Token 3119: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.840432565193623e-05
    2. '1' → logprob: -9.625088691711426
    3. '```' → logprob: -11.000088691711426
    4. '
' → logprob: -12.875088691711426
    5. '#' → logprob: -13.750088691711426
    6. '[
' → logprob: -14.500088691711426
    7. '[i' → logprob: -15.375088691711426
    8. '`' → logprob: -15.375088691711426
    9. ' [' → logprob: -15.625088691711426
    10. '(' → logprob: -16.12508773803711

Token 3120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.500000953674316
    3. '0' → logprob: -15.250000953674316
    4. '
' → logprob: -16.875
    5. 'i' → logprob: -18.375
    6. '(' → logprob: -18.625
    7. '   ' → logprob: -19.0
    8. ' ' → logprob: -19.375
    9. '```' → logprob: -19.5
    10. '#' → logprob: -20.125

Token 3121: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014177965931594372
    2. '-' → logprob: -4.2641777992248535
    3. '                   ' → logprob: -12.264178276062012
    4. '```' → logprob: -13.264178276062012
    5. '                    ' → logprob: -13.639178276062012
    6. 'n' → logprob: -13.764178276062012
    7. ' ' → logprob: -14.139178276062012
    8. '                  ' → logprob: -14.264178276062012
    9. '                ' → logprob: -14.389178276062012
    10. ' -
' → logprob: -14.639178276062012

Token 3122: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04304064065217972
    2. '-' → logprob: -3.1680407524108887
    3. '                   ' → logprob: -11.16804027557373
    4. '                    ' → logprob: -11.91804027557373
    5. '```' → logprob: -12.41804027557373
    6. 'n' → logprob: -12.66804027557373
    7. '-
' → logprob: -12.79304027557373
    8. ' -
' → logprob: -13.29304027557373
    9. '                ' → logprob: -13.41804027557373
    10. ' ' → logprob: -13.66804027557373

Token 3123: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007100477814674377
    2. ' n' → logprob: -7.2507100105285645
    3. '0' → logprob: -16.875709533691406
    4. '                   ' → logprob: -17.000709533691406
    5. '	n' → logprob: -17.875709533691406
    6. '```' → logprob: -19.125709533691406
    7. '   ' → logprob: -19.250709533691406
    8. '           ' → logprob: -19.500709533691406
    9. '               ' → logprob: -20.000709533691406
    10. '       ' → logprob: -20.375709533691406

Token 3124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011741555063053966
    2. 'n' → logprob: -6.751173973083496
    3. 'ni' → logprob: -14.001173973083496
    4. 'o' → logprob: -14.126173973083496
    5. '[' → logprob: -14.251173973083496
    6. ' n' → logprob: -14.751173973083496
    7. '```' → logprob: -15.126173973083496
    8. 'i' → logprob: -15.626173973083496
    9. '``' → logprob: -16.126174926757812
    10. '   ' → logprob: -16.501174926757812

Token 3125: '[' (ID: 58)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009879211895167828
    2. '[' → logprob: -5.009879112243652
    3. '0' → logprob: -5.759879112243652
    4. '```' → logprob: -12.384879112243652
    5. ' n' → logprob: -13.384879112243652
    6. '#' → logprob: -14.384879112243652
    7. '``' → logprob: -15.384879112243652
    8. '{' → logprob: -15.384879112243652
    9. '_n' → logprob: -15.634879112243652
    10. '	n' → logprob: -16.00988006591797

Token 3126: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2212965190410614
    2. '0' → logprob: -1.9712965488433838
    3. '1' → logprob: -2.846296548843384
    4. 'ni' → logprob: -7.096296310424805
    5. '[' → logprob: -8.221296310424805
    6. 'i' → logprob: -10.096296310424805
    7. ' n' → logprob: -11.096296310424805
    8. '#' → logprob: -11.721296310424805
    9. '...' → logprob: -12.471296310424805
    10. '```' → logprob: -12.596296310424805

Token 3127: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.001518430421128869
    2. '[' → logprob: -6.501518249511719
    3. '```' → logprob: -12.376518249511719
    4. ' *' → logprob: -12.501518249511719
    5. '*[' → logprob: -12.876518249511719
    6. ']*' → logprob: -13.126518249511719
    7. '0' → logprob: -14.001518249511719
    8. '
' → logprob: -14.626518249511719
    9. 'n' → logprob: -15.126518249511719
    10. '*n' → logprob: -15.251518249511719

Token 3128: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -2.8444881536415778e-05
    2. 'n' → logprob: -10.500028610229492
    3. ' ni' → logprob: -15.000028610229492
    4. '0' → logprob: -15.125028610229492
    5. '```' → logprob: -16.625028610229492
    6. '[' → logprob: -17.250028610229492
    7. '
' → logprob: -17.375028610229492
    8. '   ' → logprob: -18.250028610229492
    9. '#' → logprob: -18.375028610229492
    10. '1' → logprob: -18.750028610229492

Token 3129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00976305641233921
    2. '0' → logprob: -4.634763240814209
    3. 'ni' → logprob: -13.25976276397705
    4. '[
' → logprob: -13.50976276397705
    5. '```' → logprob: -13.88476276397705
    6. '[i' → logprob: -14.38476276397705
    7. '
' → logprob: -14.50976276397705
    8. '00' → logprob: -15.25976276397705
    9. '{' → logprob: -15.50976276397705
    10. '...' → logprob: -15.75976276397705

Token 3130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -15.000000953674316
    3. 'ni' → logprob: -15.625000953674316
    4. 'i' → logprob: -15.750000953674316
    5. '[' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.500001907348633
    7. ' ' → logprob: -17.500001907348633
    8. '```' → logprob: -18.125001907348633
    9. '...' → logprob: -18.250001907348633
    10. '[i' → logprob: -18.625001907348633

Token 3131: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4874429702758789
    2. '                   ' → logprob: -1.237442970275879
    3. ']<' → logprob: -3.612442970275879
    4. '[' → logprob: -3.737442970275879
    5. '               ' → logprob: -4.237442970275879
    6. ']==' → logprob: -4.737442970275879
    7. '0' → logprob: -5.362442970275879
    8. '           ' → logprob: -5.737442970275879
    9. ']:
' → logprob: -5.987442970275879
    10. '<' → logprob: -6.362442970275879

Token 3132: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005251780152320862
    2. '               ' → logprob: -5.630251884460449
    3. '           ' → logprob: -7.130251884460449
    4. ' if' → logprob: -8.00525188446045
    5. '```' → logprob: -8.63025188446045
    6. 'if' → logprob: -9.13025188446045
    7. '                       ' → logprob: -9.75525188446045
    8. '                  ' → logprob: -10.00525188446045
    9. '<|end|>' → logprob: -10.63025188446045
    10. '<' → logprob: -10.63025188446045

Token 3133: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.35458362102508545
    2. '                   ' → logprob: -1.3545836210250854
    3. ' if' → logprob: -3.229583740234375
    4. '               ' → logprob: -7.229583740234375
    5. '           ' → logprob: -9.604583740234375
    6. '                       ' → logprob: -10.104583740234375
    7. '                    ' → logprob: -10.354583740234375
    8. '```' → logprob: -11.354583740234375
    9. '                  ' → logprob: -11.604583740234375
    10. '       ' → logprob: -12.979583740234375

Token 3134: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0019744306337088346
    2. ' abs' → logprob: -6.251974582672119
    3. '                   ' → logprob: -10.001974105834961
    4. '(abs' → logprob: -15.001974105834961
    5. '                       ' → logprob: -16.00197410583496
    6. '```' → logprob: -16.50197410583496
    7. '                    ' → logprob: -17.37697410583496
    8. '               ' → logprob: -18.62697410583496
    9. 'fabs' → logprob: -18.62697410583496
    10. '.abs' → logprob: -19.87697410583496

Token 3135: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.1875571544806007e-05
    2. 'cross' → logprob: -11.500011444091797
    3. '(' → logprob: -13.625011444091797
    4. '(
' → logprob: -14.625011444091797
    5. ' cross' → logprob: -19.000011444091797
    6. '```' → logprob: -19.000011444091797
    7. '_cross' → logprob: -19.125011444091797
    8. '	c' → logprob: -19.125011444091797
    9. '.cross' → logprob: -19.375011444091797
    10. '/c' → logprob: -19.750011444091797

Token 3136: 'ross' (ID: 2838)
  Prédit: 'ross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ross' → logprob: -0.06336503475904465
    2. 'cross' → logprob: -2.8133649826049805
    3. '(c' → logprob: -6.8133649826049805
    4. '[' → logprob: -8.81336498260498
    5. '[c' → logprob: -9.81336498260498
    6. 'ros' → logprob: -10.43836498260498
    7. '(' → logprob: -10.93836498260498
    8. '.cross' → logprob: -11.68836498260498
    9. 'rossover' → logprob: -11.68836498260498
    10. ' cross' → logprob: -11.81336498260498

Token 3137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6029428839683533
    2. ' <' → logprob: -1.352942943572998
    3. ' >' → logprob: -2.227942943572998
    4. '>' → logprob: -3.477942943572998
    5. '<' → logprob: -3.852942943572998
    6. '                   ' → logprob: -4.352942943572998
    7. '                       ' → logprob: -4.977942943572998
    8. '                           ' → logprob: -5.352942943572998
    9. ')<' → logprob: -5.352942943572998
    10. ')>' → logprob: -6.352942943572998

Token 3138: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4815397560596466
    2. ' <' → logprob: -1.1065397262573242
    3. '>' → logprob: -3.231539726257324
    4. ' >' → logprob: -4.606539726257324
    5. '[' → logprob: -6.606539726257324
    6. '>=' → logprob: -8.981539726257324
    7. ' >=' → logprob: -8.981539726257324
    8. '```' → logprob: -9.481539726257324
    9. '<|end|>' → logprob: -10.106539726257324
    10. '{' → logprob: -10.231539726257324

Token 3139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.250051498413086
    4. '```' → logprob: -18.750051498413086
    5. '                   ' → logprob: -19.125051498413086
    6. '`' → logprob: -19.625051498413086
    7. '                       ' → logprob: -20.000051498413086
    8. '  ' → logprob: -20.000051498413086
    9. '           ' → logprob: -20.500051498413086
    10. '               ' → logprob: -21.000051498413086

Token 3140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.12500762939453
    4. '```' → logprob: -17.12500762939453
    5. '`' → logprob: -18.37500762939453
    6. '
' → logprob: -19.25000762939453
    7. '0' → logprob: -19.62500762939453
    8. '(' → logprob: -19.87500762939453
    9. '``' → logprob: -20.00000762939453
    10. '  ' → logprob: -20.50000762939453

Token 3141: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017082560807466507
    2. 'e' → logprob: -6.376708030700684
    3. '```' → logprob: -12.376708030700684
    4. '           ' → logprob: -14.376708030700684
    5. '**' → logprob: -15.001708030700684
    6. '       ' → logprob: -15.876708030700684
    7. '>-' → logprob: -16.001708984375
    8. '[-' → logprob: -16.126708984375
    9. '   ' → logprob: -16.501708984375
    10. '-e' → logprob: -16.501708984375

Token 3142: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. '15' → logprob: -18.125
    4. '{-' → logprob: -18.375
    5. '(-' → logprob: -19.25
    6. '``' → logprob: -19.375
    7. '>-' → logprob: -19.75
    8. ' -' → logprob: -20.125
    9. '   ' → logprob: -20.125
    10. 'e' → logprob: -20.25

Token 3143: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -8.697387966094539e-05
    2. '12' → logprob: -9.875086784362793
    3. '14' → logprob: -10.750086784362793
    4. '10' → logprob: -11.625086784362793
    5. '13' → logprob: -12.750086784362793
    6. '9' → logprob: -13.875086784362793
    7. '-' → logprob: -15.000086784362793
    8. '```' → logprob: -15.000086784362793
    9. '7' → logprob: -15.625086784362793
    10. '11' → logprob: -15.750086784362793

Token 3144: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3630037307739258
    2. ':' → logprob: -2.113003730773926
    3. '                       ' → logprob: -2.238003730773926
    4. '                   ' → logprob: -2.613003730773926
    5. '               ' → logprob: -5.988003730773926
    6. ' and' → logprob: -7.738003730773926
    7. '):
' → logprob: -8.488003730773926
    8. ' or' → logprob: -9.613003730773926
    9. '           ' → logprob: -9.613003730773926
    10. '<|end|>' → logprob: -9.738003730773926

Token 3145: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05195759981870651
    2. '                       ' → logprob: -3.051957607269287
    3. '               ' → logprob: -5.926957607269287
    4. 'continue' → logprob: -7.551957607269287
    5. '```' → logprob: -9.801957130432129
    6. ' continue' → logprob: -9.926957130432129
    7. '           ' → logprob: -10.801957130432129
    8. '	               ' → logprob: -10.926957130432129
    9. '		           ' → logprob: -11.926957130432129
    10. '                  ' → logprob: -12.676957130432129

Token 3146: ' parallel' (ID: 26697)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' (adapté à ' parallel') → logprob: -0.3246719241142273
    2. '                   ' → logprob: -1.574671983718872
    3. '                       ' → logprob: -2.699671983718872
    4. ' parallel' → logprob: -6.074671745300293
    5. '               ' → logprob: -7.824671745300293
    6. '```' → logprob: -8.949671745300293
    7. '           ' → logprob: -10.199671745300293
    8. 'continue' → logprob: -10.574671745300293
    9. '       ' → logprob: -11.824671745300293
    10. '   ' → logprob: -12.199671745300293

Token 3147: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -15.375000953674316
    3. 'count' → logprob: -15.375000953674316
    4. '\' → logprob: -16.75
    5. '```' → logprob: -17.125
    6. 'Count' → logprob: -17.25
    7. '   ' → logprob: -17.5
    8. '               ' → logprob: -17.75
    9. '
' → logprob: -17.875
    10. '           ' → logprob: -17.875

Token 3148: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0076744151301681995
    2. ' +=' → logprob: -4.882674217224121
    3. '           ' → logprob: -10.757674217224121
    4. '                           ' → logprob: -11.507674217224121
    5. ']+=' → logprob: -11.882674217224121
    6. '               ' → logprob: -12.007674217224121
    7. '            ' → logprob: -12.257674217224121
    8. '                       ' → logprob: -12.257674217224121
    9. '+' → logprob: -12.382674217224121
    10. '                   ' → logprob: -12.632674217224121

Token 3149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. 'n' → logprob: -18.12510871887207
    4. '                   ' → logprob: -18.75010871887207
    5. '                       ' → logprob: -19.00010871887207
    6. '           ' → logprob: -19.12510871887207
    7. '               ' → logprob: -19.25010871887207
    8. '
' → logprob: -19.25010871887207
    9. '   ' → logprob: -19.37510871887207
    10. '(' → logprob: -19.62510871887207

Token 3150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.925185440806672e-05
    2. 'n' → logprob: -9.250099182128906
    3. '(n' → logprob: -13.750099182128906
    4. ' ' → logprob: -14.000099182128906
    5. 'i' → logprob: -14.625099182128906
    6. '(' → logprob: -15.375099182128906
    7. 'abs' → logprob: -15.625099182128906
    8. 'len' → logprob: -16.250099182128906
    9. ' n' → logprob: -16.375099182128906
    10. '(i' → logprob: -17.125099182128906

Token 3151: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07778917998075485
    2. '           ' → logprob: -2.702789068222046
    3. '
' → logprob: -4.952789306640625
    4. '                   ' → logprob: -7.577789306640625
    5. '```' → logprob: -9.202789306640625
    6. '                       ' → logprob: -9.452789306640625
    7. '<|end|>' → logprob: -10.952789306640625
    8. 'if' → logprob: -11.952789306640625
    9. '       ' → logprob: -12.202789306640625
    10. 'continue' → logprob: -12.327789306640625

Token 3152: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11489248275756836
    2. '           ' → logprob: -2.2398924827575684
    3. '```' → logprob: -6.864892482757568
    4. '
' → logprob: -7.114892482757568
    5. '                   ' → logprob: -8.614892959594727
    6. '``' → logprob: -11.489892959594727
    7. 'if' → logprob: -11.864892959594727
    8. '       ' → logprob: -12.114892959594727
    9. '   ' → logprob: -13.114892959594727
    10. '                       ' → logprob: -13.364892959594727

Token 3153: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7335599660873413
    2. '               ' → logprob: -0.7335599660873413
    3. 'if' (adapté à ' if') → logprob: -3.233560085296631
    4. '```' → logprob: -8.858559608459473
    5. ' if' → logprob: -10.358559608459473
    6. '   ' → logprob: -11.983559608459473
    7. '       ' → logprob: -12.358559608459473
    8. '
' → logprob: -12.608559608459473
    9. '``' → logprob: -13.733559608459473
    10. '                   ' → logprob: -13.983559608459473

Token 3154: ' parallel' (ID: 26697)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.04859418421983719
    2. ' parallel' → logprob: -3.0485942363739014
    3. '               ' → logprob: -12.54859447479248
    4. '                   ' → logprob: -13.29859447479248
    5. '                       ' → logprob: -13.79859447479248
    6. '           ' → logprob: -15.79859447479248
    7. 'par' → logprob: -15.79859447479248
    8. '   ' → logprob: -16.298593521118164
    9. '                           ' → logprob: -16.798593521118164
    10. ' paralelo' → logprob: -16.798593521118164

Token 3155: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00010628487507347018
    2. 'count' → logprob: -9.375105857849121
    3. '==' → logprob: -11.500105857849121
    4. '               ' → logprob: -12.125105857849121
    5. '_COUNT' → logprob: -13.750105857849121
    6. '```' → logprob: -13.875105857849121
    7. 'Count' → logprob: -14.125105857849121
    8. '                   ' → logprob: -14.125105857849121
    9. '           ' → logprob: -14.250105857849121
    10. '   ' → logprob: -15.250105857849121

Token 3156: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2817227244377136
    2. '==' → logprob: -1.4067227840423584
    3. '<|end|>' → logprob: -8.031723022460938
    4. '==
' → logprob: -10.156723022460938
    5. '==(' → logprob: -10.281723022460938
    6. ')==' → logprob: -10.406723022460938
    7. ')' → logprob: -10.656723022460938
    8. '<|end|>' → logprob: -10.781723022460938
    9. ']==' → logprob: -11.281723022460938
    10. '```' → logprob: -11.781723022460938

Token 3157: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002128382766386494
    2. ' n' → logprob: -8.625212669372559
    3. '(n' → logprob: -10.375212669372559
    4. 'len' → logprob: -13.250212669372559
    5. '	n' → logprob: -16.125213623046875
    6. ' (' → logprob: -16.625213623046875
    7. '   ' → logprob: -16.750213623046875
    8. '_n' → logprob: -17.125213623046875
    9. '[n' → logprob: -17.625213623046875
    10. '           ' → logprob: -17.875213623046875

Token 3158: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00016206118743866682
    2. ' -' → logprob: -8.750162124633789
    3. '[' → logprob: -12.750162124633789
    4. '           ' → logprob: -15.250162124633789
    5. '```' → logprob: -16.25016212463379
    6. '   ' → logprob: -16.50016212463379
    7. '–' → logprob: -16.75016212463379
    8. '               ' → logprob: -16.87516212463379
    9. '       ' → logprob: -17.12516212463379
    10. '                   ' → logprob: -17.75016212463379

Token 3159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.375001907348633
    3. '-' → logprob: -14.750001907348633
    4. 'n' → logprob: -15.625001907348633
    5. '```' → logprob: -15.625001907348633
    6. '`' → logprob: -16.125001907348633
    7. '(n' → logprob: -16.750001907348633
    8. '(' → logprob: -17.250001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '{' → logprob: -18.125001907348633

Token 3160: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24963456392288208
    2. '               ' → logprob: -2.4996345043182373
    3. ':
' → logprob: -2.6246345043182373
    4. ':' → logprob: -3.3746345043182373
    5. ' and' → logprob: -3.7496345043182373
    6. '           ' → logprob: -5.249634742736816
    7. 'and' → logprob: -6.499634742736816
    8. '                       ' → logprob: -6.874634742736816
    9. '==' → logprob: -8.374634742736816
    10. '<|end|>' → logprob: -8.999634742736816

Token 3161: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001785112835932523
    2. '               ' → logprob: -9.375178337097168
    3. 'print' → logprob: -9.500178337097168
    4. '```' → logprob: -11.375178337097168
    5. '                       ' → logprob: -12.500178337097168
    6. '           ' → logprob: -12.875178337097168
    7. ' print' → logprob: -15.375178337097168
    8. '                           ' → logprob: -15.750178337097168
    9. '		           ' → logprob: -15.875178337097168
    10. '                  ' → logprob: -16.375179290771484

Token 3162: ' print' (ID: 2123)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3875479996204376
    2. 'print' (adapté à ' print') → logprob: -1.3875479698181152
    3. '               ' → logprob: -2.6375479698181152
    4. '                       ' → logprob: -10.762548446655273
    5. ' print' → logprob: -10.887548446655273
    6. '```' → logprob: -11.762548446655273
    7. '           ' → logprob: -12.262548446655273
    8. '   ' → logprob: -12.512548446655273
    9. '       ' → logprob: -13.512548446655273
    10. '	print' → logprob: -16.637548446655273

Token 3163: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.580929347255733e-05
    2. '(' → logprob: -11.625016212463379
    3. 'Many' → logprob: -12.500016212463379
    4. '('' → logprob: -12.875016212463379
    5. '(
' → logprob: -14.500016212463379
    6. '(f' → logprob: -17.000015258789062
    7. '("""' → logprob: -17.250015258789062
    8. '"' → logprob: -18.500015258789062
    9. ' Many' → logprob: -18.500015258789062
    10. '("
' → logprob: -18.625015258789062

Token 3164: 'Many' (ID: 12488)
  Prédit: 'Many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Many' → logprob: -1.9361264946837764e-07
    2. '"' → logprob: -16.25
    3. ' Many' → logprob: -19.875
    4. '   ' → logprob: -19.875
    5. '       ' → logprob: -22.5
    6. '.Many' → logprob: -23.625
    7. 'many' → logprob: -23.75
    8. '
' → logprob: -24.25
    9. '_many' → logprob: -24.75
    10. 'Yes' → logprob: -24.875

Token 3165: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.002303697168827057
    2. '")' → logprob: -6.502303600311279
    3. '                   ' → logprob: -8.002304077148438
    4. '")
' → logprob: -8.627304077148438
    5. '               ' → logprob: -9.002304077148438
    6. ')")
' → logprob: -9.252304077148438
    7. ')
' → logprob: -9.877304077148438
    8. '           ' → logprob: -11.877304077148438
    9. ')' → logprob: -11.877304077148438
    10. '                       ' → logprob: -14.252304077148438

Token 3166: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5765378475189209
    2. '               ' → logprob: -0.8265378475189209
    3. '           ' → logprob: -7.9515380859375
    4. '```' → logprob: -8.9515380859375
    5. 'else' → logprob: -9.7015380859375
    6. '                       ' → logprob: -9.9515380859375
    7. 'continue' → logprob: -12.0765380859375
    8. '       ' → logprob: -14.7015380859375
    9. '		           ' → logprob: -15.0765380859375
    10. '                           ' → logprob: -15.4515380859375

Token 3167: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024791736155748367
    2. 'else' (adapté à ' else') → logprob: -3.899791717529297
    3. '           ' → logprob: -5.524791717529297
    4. '                   ' → logprob: -8.774791717529297
    5. '```' → logprob: -9.524791717529297
    6. ' else' → logprob: -10.649791717529297
    7. '                       ' → logprob: -13.524791717529297
    8. 'elif' → logprob: -14.774791717529297
    9. 'continue' → logprob: -15.649791717529297
    10. '	           ' → logprob: -16.149791717529297

Token 3168: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08100638538599014
    2. '               ' → logprob: -2.7060062885284424
    3. ':
' → logprob: -5.0810065269470215
    4. '                       ' → logprob: -5.8310065269470215
    5. ':' → logprob: -6.5810065269470215
    6. '           ' → logprob: -8.581006050109863
    7. '                           ' → logprob: -8.706006050109863
    8. '```' → logprob: -10.331006050109863
    9. '                               ' → logprob: -11.081006050109863
    10. 'print' → logprob: -11.706006050109863

Token 3169: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01841166242957115
    2. '               ' → logprob: -4.018411636352539
    3. 'print' → logprob: -8.643411636352539
    4. '                       ' → logprob: -9.643411636352539
    5. '```' → logprob: -11.143411636352539
    6. '           ' → logprob: -12.643411636352539
    7. '   ' → logprob: -13.643411636352539
    8. '                           ' → logprob: -14.518411636352539
    9. '                 ' → logprob: -15.143411636352539
    10. '       ' → logprob: -15.268411636352539

Token 3170: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00032473751343786716
    2. '               ' → logprob: -8.750325202941895
    3. '                   ' → logprob: -8.750325202941895
    4. ' print' → logprob: -12.000325202941895
    5. '           ' → logprob: -13.625325202941895
    6. '```' → logprob: -15.000325202941895
    7. '                       ' → logprob: -16.750324249267578
    8. '   ' → logprob: -17.000324249267578
    9. '       ' → logprob: -17.375324249267578
    10. '	print' → logprob: -18.500324249267578

Token 3171: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0010862821945920587
    2. '(' → logprob: -7.001086235046387
    3. '('' → logprob: -9.126086235046387
    4. '()' → logprob: -10.376086235046387
    5. '(None' → logprob: -11.001086235046387
    6. '("("' → logprob: -11.251086235046387
    7. '(
' → logprob: -13.251086235046387
    8. '("")' → logprob: -13.751086235046387
    9. '()
' → logprob: -14.376086235046387
    10. '("(' → logprob: -14.626086235046387

Token 3172: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00021998681768309325
    2. 'No' → logprob: -8.50022029876709
    3. 'Impossible' → logprob: -11.50022029876709
    4. ' None' → logprob: -12.62522029876709
    5. '"' → logprob: -13.12522029876709
    6. '"No' → logprob: -14.75022029876709
    7. 'NONE' → logprob: -15.12522029876709
    8. 'none' → logprob: -15.37522029876709
    9. '_None' → logprob: -16.500219345092773
    10. 'im' → logprob: -16.875219345092773

Token 3173: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0019669353496283293
    2. '")
' → logprob: -6.501966953277588
    3. ')")' → logprob: -8.00196647644043
    4. ')' → logprob: -9.62696647644043
    5. ')")
' → logprob: -9.75196647644043
    6. '               ' → logprob: -13.12696647644043
    7. '")
' → logprob: -13.25196647644043
    8. '           ' → logprob: -13.75196647644043
    9. '}")' → logprob: -15.37696647644043
    10. ')"' → logprob: -16.37696647644043

Token 3174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02794162929058075
    2. '               ' → logprob: -3.9029417037963867
    3. '                   ' → logprob: -5.652941703796387
    4. '<|end|>' → logprob: -5.652941703796387
    5. '       ' → logprob: -9.027941703796387
    6. '<|end|>' → logprob: -9.652941703796387
    7. '```' → logprob: -10.152941703796387
    8. 'else' → logprob: -10.402941703796387
    9. '                       ' → logprob: -10.777941703796387
    10. 'continue' → logprob: -11.652941703796387

Token 3175: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00034380643046461046
    2. 'else' (adapté à ' else') → logprob: -8.875344276428223
    3. '       ' → logprob: -9.125344276428223
    4. '               ' → logprob: -9.500344276428223
    5. '<|end|>' → logprob: -11.875344276428223
    6. ' else' → logprob: -12.000344276428223
    7. '                   ' → logprob: -12.625344276428223
    8. '	       ' → logprob: -14.250344276428223
    9. '                       ' → logprob: -14.500344276428223
    10. '```' → logprob: -14.625344276428223

Token 3176: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29537075757980347
    2. '           ' → logprob: -1.5453708171844482
    3. ':
' → logprob: -3.5453708171844482
    4. ':' → logprob: -4.420370578765869
    5. '                   ' → logprob: -7.295370578765869
    6. '                       ' → logprob: -8.920371055603027
    7. '	           ' → logprob: -8.920371055603027
    8. '{' → logprob: -9.295371055603027
    9. '():
' → logprob: -9.420371055603027
    10. '       ' → logprob: -9.670371055603027

Token 3177: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3134330213069916
    2. '               ' → logprob: -1.313433051109314
    3. 'print' → logprob: -8.813432693481445
    4. '   ' → logprob: -11.063432693481445
    5. '       ' → logprob: -12.563432693481445
    6. '                   ' → logprob: -13.563432693481445
    7. ' print' → logprob: -13.563432693481445
    8. '```' → logprob: -14.188432693481445
    9. '                       ' → logprob: -16.188432693481445
    10. '             ' → logprob: -17.563432693481445

Token 3178: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07960925251245499
    2. '               ' → logprob: -3.3296091556549072
    3. 'print' → logprob: -3.3296091556549072
    4. ' print' → logprob: -5.329609394073486
    5. '```' → logprob: -10.079608917236328
    6. '   ' → logprob: -11.579608917236328
    7. '                   ' → logprob: -12.954608917236328
    8. '       ' → logprob: -13.204608917236328
    9. '``' → logprob: -13.204608917236328
    10. '          ' → logprob: -13.579608917236328

Token 3179: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10194947570562363
    2. ' print' → logprob: -2.601949453353882
    3. '           ' → logprob: -3.851949453353882
    4. '               ' → logprob: -6.476949691772461
    5. '   ' → logprob: -11.351949691772461
    6. '       ' → logprob: -12.601949691772461
    7. ' x' → logprob: -13.601949691772461
    8. 'x' → logprob: -14.476949691772461
    9. '                   ' → logprob: -14.601949691772461
    10. '```' → logprob: -15.226949691772461

Token 3180: ' point' (ID: 2438)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.01529561635106802
    2. '(res' → logprob: -4.515295505523682
    3. 'f' → logprob: -5.640295505523682
    4. 'res' → logprob: -7.390295505523682
    5. '{' → logprob: -10.51529598236084
    6. '("{' → logprob: -10.76529598236084
    7. '("%.' → logprob: -12.14029598236084
    8. '(round' → logprob: -12.26529598236084
    9. '(' → logprob: -12.89029598236084
    10. '(re' → logprob: -13.01529598236084

Token 3181: ' with' (ID: 483)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.002148119732737541
    2. '               ' → logprob: -6.502148151397705
    3. '(' → logprob: -7.877148151397705
    4. '                   ' → logprob: -9.002147674560547
    5. '("{' → logprob: -9.752147674560547
    6. '("' → logprob: -10.502147674560547
    7. '           ' → logprob: -10.877147674560547
    8. '(round' → logprob: -11.377147674560547
    9. '(res' → logprob: -12.002147674560547
    10. '(format' → logprob: -12.877147674560547

Token 3182: ' accuracy' (ID: 18580)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05558650940656662
    2. 'f' → logprob: -3.180586576461792
    3. '10' → logprob: -5.180586338043213
    4. 'format' → logprob: -5.805586338043213
    5. '{' → logprob: -6.680586338043213
    6. ' print' → logprob: -6.805586338043213
    7. '12' → logprob: -8.430586814880371
    8. 'res' → logprob: -8.555586814880371
    9. '           ' → logprob: -8.805586814880371
    10. '6' → logprob: -9.055586814880371

Token 3183: ' ' (ID: 220)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.001712901284918189
    2. '("%.' → logprob: -6.876712799072266
    3. '           ' → logprob: -8.376712799072266
    4. '("{' → logprob: -8.626712799072266
    5. '               ' → logprob: -9.376712799072266
    6. '(' → logprob: -9.876712799072266
    7. 'f' → logprob: -9.876712799072266
    8. '                   ' → logprob: -10.876712799072266
    9. '{' → logprob: -11.501712799072266
    10. '(format' → logprob: -11.501712799072266

Token 3184: '1' (ID: 16)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3029463589191437
    2. 'f' → logprob: -1.4279463291168213
    3. '{' → logprob: -4.0529465675354
    4. '           ' → logprob: -6.1779465675354
    5. '               ' → logprob: -7.6779465675354
    6. '"{' → logprob: -7.9279465675354
    7. ' f' → logprob: -7.9279465675354
    8. '("%.' → logprob: -8.302946090698242
    9. '.' → logprob: -9.052946090698242
    10. '       ' → logprob: -9.177946090698242

Token 3185: 'e' (ID: 68)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9964353442192078
    2. '               ' → logprob: -1.6214354038238525
    3. '           ' → logprob: -1.8714354038238525
    4. '{' → logprob: -1.9964354038238525
    5. ' f' → logprob: -3.2464354038238525
    6. '.' → logprob: -3.2464354038238525
    7. '       ' → logprob: -4.496435165405273
    8. ':.' → logprob: -4.746435165405273
    9. '"{' → logprob: -4.871435165405273
    10. '                   ' → logprob: -4.996435165405273

Token 3186: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4946649670600891
    2. '.' → logprob: -0.9946649670600891
    3. '6' → logprob: -4.744665145874023
    4. '           ' → logprob: -5.494665145874023
    5. '{' → logprob: -5.994665145874023
    6. '               ' → logprob: -6.994665145874023
    7. '+' → logprob: -7.119665145874023
    8. '       ' → logprob: -7.494665145874023
    9. '7' → logprob: -7.619665145874023
    10. '0' → logprob: -8.119665145874023

Token 3187: '4' (ID: 19)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.02822943590581417
    2. '9' → logprob: -4.278229236602783
    3. '6' → logprob: -5.028229236602783
    4. '07' → logprob: -5.528229236602783
    5. '8' → logprob: -5.778229236602783
    6. '10' → logprob: -9.028229713439941
    7. '06' → logprob: -9.278229713439941
    8. '09' → logprob: -9.528229713439941
    9. '08' → logprob: -10.278229713439941
    10. '```' → logprob: -10.903229713439941

Token 3188: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37872621417045593
    2. 'print' → logprob: -1.3787262439727783
    3. '           ' → logprob: -3.0037262439727783
    4. '```' → logprob: -4.378726005554199
    5. ' print' → logprob: -7.503726005554199
    6. '                   ' → logprob: -8.6287260055542
    7. '(f' → logprob: -9.0037260055542
    8. '   ' → logprob: -9.5037260055542
    9. '``' → logprob: -9.5037260055542
    10. '{' → logprob: -9.7537260055542

Token 3189: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3869282603263855
    2. '           ' → logprob: -1.1369283199310303
    3. 'print' → logprob: -10.01192855834961
    4. '       ' → logprob: -11.76192855834961
    5. '   ' → logprob: -13.38692855834961
    6. ' print' → logprob: -13.63692855834961
    7. '```' → logprob: -13.76192855834961
    8. '                   ' → logprob: -14.26192855834961
    9. '             ' → logprob: -17.26192855834961
    10. '                       ' → logprob: -17.51192855834961

Token 3190: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08534299582242966
    2. '               ' → logprob: -2.5853428840637207
    3. '           ' → logprob: -5.085342884063721
    4. ' print' → logprob: -8.335343360900879
    5. '```' → logprob: -12.835343360900879
    6. '                   ' → logprob: -13.460343360900879
    7. '   ' → logprob: -13.835343360900879
    8. '       ' → logprob: -14.585343360900879
    9. 'printf' → logprob: -15.835343360900879
    10. '`' → logprob: -18.085342407226562

Token 3191: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.816093228830141e-06
    2. 'f' → logprob: -13.62500286102295
    3. '(' → logprob: -13.75000286102295
    4. '("{' → logprob: -15.37500286102295
    5. '{' → logprob: -15.50000286102295
    6. '(round' → logprob: -17.000001907348633
    7. '(format' → logprob: -17.875001907348633
    8. '("%.' → logprob: -17.875001907348633
    9. '("' → logprob: -18.500001907348633
    10. '({' → logprob: -19.250001907348633

Token 3192: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.021057019010186195
    2. '"{' → logprob: -4.02105712890625
    3. '(f' → logprob: -6.02105712890625
    4. '("{' → logprob: -8.02105712890625
    5. '({' → logprob: -9.39605712890625
    6. 'f' → logprob: -10.14605712890625
    7. '{"' → logprob: -11.64605712890625
    8. 'Point' → logprob: -12.02105712890625
    9. ''{' → logprob: -13.02105712890625
    10. '(Point' → logprob: -13.52105712890625

Token 3193: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. ' res' → logprob: -17.625
    3. '{' → logprob: -19.0
    4. 'result' → logprob: -19.375
    5. '(res' → logprob: -20.125
    6. '   ' → logprob: -22.375
    7. 'f' → logprob: -22.875
    8. '	res' → logprob: -23.125
    9. '$res' → logprob: -23.125
    10. 'round' → logprob: -23.375

Token 3194: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.1472419600977446e-06
    2. ':.' → logprob: -13.875000953674316
    3. '.' → logprob: -16.375001907348633
    4. '{' → logprob: -17.500001907348633
    5. '(.' → logprob: -17.875001907348633
    6. ' .' → logprob: -18.250001907348633
    7. '{x' → logprob: -18.500001907348633
    8. 'x' → logprob: -19.000001907348633
    9. '(x' → logprob: -19.375001907348633
    10. '[' → logprob: -19.375001907348633

Token 3195: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.875001907348633
    3. ' :.' → logprob: -14.125001907348633
    4. ':' → logprob: -14.625001907348633
    5. ':+' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '}' → logprob: -18.375001907348633
    8. '{' → logprob: -19.375001907348633
    9. ' .' → logprob: -20.000001907348633
    10. ':{' → logprob: -20.625001907348633

Token 3196: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00010163593105971813
    2. '10' → logprob: -9.875102043151855
    3. '6' → logprob: -10.500102043151855
    4. '8' → logprob: -11.750102043151855
    5. '7' → logprob: -12.000102043151855
    6. '5' → logprob: -12.125102043151855
    7. '9' → logprob: -13.250102043151855
    8. '{' → logprob: -14.000102043151855
    9. '04' → logprob: -15.000102043151855
    10. '```' → logprob: -16.75010108947754

Token 3197: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. '```' → logprob: -18.375
    3. '{' → logprob: -19.25
    4. '}' → logprob: -20.25
    5. 'g' → logprob: -20.25
    6. '
' → logprob: -20.875
    7. '``' → logprob: -22.0
    8. 'lf' → logprob: -22.5
    9. 'F' → logprob: -23.125
    10. '}
' → logprob: -23.375

Token 3198: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0019316127290949225
    2. 'f' → logprob: -6.251931667327881
    3. '}{' → logprob: -13.376931190490723
    4. ' }' → logprob: -14.126931190490723
    5. '{' → logprob: -15.001931190490723
    6. '},' → logprob: -15.251931190490723
    7. '}")' → logprob: -17.00193214416504
    8. 'e' → logprob: -17.37693214416504
    9. '}")
' → logprob: -17.50193214416504
    10. ' f' → logprob: -18.00193214416504

Token 3199: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.02977154776453972
    2. '{' → logprob: -3.529771566390991
    3. ' f' → logprob: -11.90477180480957
    4. '}' → logprob: -11.90477180480957
    5. ' ' → logprob: -12.40477180480957
    6. 'f' → logprob: -12.77977180480957
    7. '{x' → logprob: -15.90477180480957
    8. '   ' → logprob: -16.40477180480957
    9. ' }' → logprob: -16.40477180480957
    10. ',' → logprob: -16.40477180480957

Token 3200: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.5048530030981055e-06
    2. '{' → logprob: -13.750001907348633
    3. ' res' → logprob: -15.000001907348633
    4. 'f' → logprob: -18.875001907348633
    5. '	res' → logprob: -19.125001907348633
    6. '$res' → logprob: -20.000001907348633
    7. '(res' → logprob: -20.875001907348633
    8. '=res' → logprob: -21.250001907348633
    9. 'resc' → logprob: -22.250001907348633
    10. '_res' → logprob: -22.875001907348633

Token 3201: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -8.41866585687967e-06
    2. '.' → logprob: -12.500008583068848
    3. 'y' → logprob: -12.750008583068848
    4. '.x' → logprob: -14.000008583068848
    5. '{' → logprob: -14.625008583068848
    6. ' .' → logprob: -15.250008583068848
    7. 'res' → logprob: -16.50000762939453
    8. ' ' → logprob: -16.87500762939453
    9. '   ' → logprob: -17.37500762939453
    10. ',y' → logprob: -17.50000762939453

Token 3202: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -1.5213274309644476e-05
    2. '.' → logprob: -11.125015258789062
    3. ' :.' → logprob: -16.125015258789062
    4. '   ' → logprob: -16.375015258789062
    5. 'f' → logprob: -16.500015258789062
    6. '```' → logprob: -17.000015258789062
    7. ':' → logprob: -17.500015258789062
    8. '}' → logprob: -18.000015258789062
    9. '::.' → logprob: -18.375015258789062
    10. '}.' → logprob: -19.250015258789062

Token 3203: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '   ' → logprob: -17.125
    3. '{' → logprob: -17.5
    4. ' ' → logprob: -18.125
    5. '```' → logprob: -18.375
    6. 'f' → logprob: -19.0
    7. '04' → logprob: -19.625
    8. '}' → logprob: -21.5
    9. '۴' → logprob: -21.75
    10. '' → logprob: -22.25

Token 3204: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. '}' → logprob: -18.125
    3. '4' → logprob: -18.875
    4. ' f' → logprob: -19.0
    5. '   ' → logprob: -19.625
    6. '```' → logprob: -19.625
    7. ' ' → logprob: -21.125
    8. '{' → logprob: -22.125
    9. '	f' → logprob: -22.25
    10. '0' → logprob: -22.75

Token 3205: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.5765954852104187
    2. '")' → logprob: -0.8265954852104187
    3. '}' → logprob: -7.451595306396484
    4. '}")
' → logprob: -10.326595306396484
    5. ' }' → logprob: -11.076595306396484
    6. '")}' → logprob: -11.201595306396484
    7. '")
' → logprob: -12.201595306396484
    8. '"}' → logprob: -12.951595306396484
    9. '{' → logprob: -13.076595306396484
    10. ')")' → logprob: -13.076595306396484

Token 3206: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3207: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07889287173748016
    2. '__' → logprob: -2.578892946243286
    3. 'name' → logprob: -13.078892707824707
    4. ' ' → logprob: -14.828892707824707
    5. '/__' → logprob: -14.953892707824707
    6. '___' → logprob: -16.328893661499023
    7. '(__' → logprob: -16.453893661499023
    8. 'not' → logprob: -17.203893661499023
    9. '_name' → logprob: -17.328893661499023
    10. ' "__' → logprob: -17.703893661499023

Token 3208: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002518031978979707
    2. '__.__' → logprob: -9.625251770019531
    3. '__":
' → logprob: -9.875251770019531
    4. '__':
' → logprob: -10.250251770019531
    5. '__
' → logprob: -10.500251770019531
    6. '__[' → logprob: -11.000251770019531
    7. '__((' → logprob: -11.500251770019531
    8. 'name' → logprob: -11.625251770019531
    9. '_' → logprob: -12.125251770019531
    10. ' __' → logprob: -12.125251770019531

Token 3209: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.5570885807392187e-05
    2. '__.__' → logprob: -11.500015258789062
    3. '__":
' → logprob: -13.000015258789062
    4. '__
' → logprob: -13.750015258789062
    5. '__':
' → logprob: -14.000015258789062
    6. '__["' → logprob: -15.375015258789062
    7. '__('' → logprob: -15.500015258789062
    8. '__.' → logprob: -15.750015258789062
    9. '__[' → logprob: -15.750015258789062
    10. '==' → logprob: -16.000015258789062

Token 3210: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02020058035850525
    2. '==' → logprob: -4.270200729370117
    3. '=="' → logprob: -5.645200729370117
    4. ' ==' → logprob: -6.145200729370117
    5. '__.__' → logprob: -8.895200729370117
    6. '=='' → logprob: -9.145200729370117
    7. '__":
' → logprob: -10.020200729370117
    8. '____' → logprob: -11.270200729370117
    9. '__["' → logprob: -11.895200729370117
    10. '__('' → logprob: -12.270200729370117

Token 3211: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06200119107961655
    2. ''' → logprob: -2.8120012283325195
    3. ' "__' → logprob: -10.93700122833252
    4. '__' → logprob: -11.18700122833252
    5. ' '__' → logprob: -13.68700122833252
    6. ''"' → logprob: -15.68700122833252
    7. '"name' → logprob: -15.81200122833252
    8. '   ' → logprob: -15.93700122833252
    9. '('__' → logprob: -16.187000274658203
    10. '("__' → logprob: -16.187000274658203

Token 3212: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31434980034828186
    2. 'main' → logprob: -1.3143497705459595
    3. ''' → logprob: -7.81434965133667
    4. '"' → logprob: -7.81434965133667
    5. 'name' → logprob: -8.439350128173828
    6. '___' → logprob: -10.564350128173828
    7. '_main' → logprob: -11.689350128173828
    8. '____' → logprob: -12.189350128173828
    9. '__":
' → logprob: -12.189350128173828
    10. ' "__' → logprob: -12.314350128173828

Token 3213: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.05335965007543564
    2. '__' → logprob: -3.0533597469329834
    3. ':
' → logprob: -6.303359508514404
    4. '__':
' → logprob: -6.553359508514404
    5. ':' → logprob: -6.803359508514404
    6. '__:' → logprob: -8.428359985351562
    7. '():
' → logprob: -8.803359985351562
    8. '_' → logprob: -11.428359985351562
    9. '__
' → logprob: -12.053359985351562
    10. '   ' → logprob: -13.178359985351562

Token 3214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005352347623556852
    2. 'import' → logprob: -5.75535249710083
    3. 'solver' → logprob: -6.25535249710083
    4. ' solver' → logprob: -8.380352020263672
    5. 'input' → logprob: -12.130352020263672
    6. '```' → logprob: -12.255352020263672
    7. '_solver' → logprob: -12.505352020263672
    8. 'problem' → logprob: -13.505352020263672
    9. ' import' → logprob: -13.630352020263672
    10. '	import' → logprob: -13.755352020263672

Token 3215: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.16381239891052246
    2. 'import' → logprob: -1.9138123989105225
    3. '   ' → logprob: -6.663812637329102
    4. 'Problem' → logprob: -7.038812637329102
    5. 'cs' → logprob: -7.663812637329102
    6. 'problem' → logprob: -7.788812637329102
    7. 'input' → logprob: -8.788812637329102
    8. 'c' → logprob: -8.913812637329102
    9. 'main' → logprob: -9.663812637329102
    10. 'ps' → logprob: -10.163812637329102

Token 3216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20416902005672455
    2. '=' → logprob: -1.8291690349578857
    3. '().' → logprob: -4.579168796539307
    4. '   ' → logprob: -4.829168796539307
    5. '.solve' → logprob: -5.704168796539307
    6. '()' → logprob: -6.954168796539307
    7. '_solver' → logprob: -7.329168796539307
    8. '.' → logprob: -8.829169273376465
    9. 'solver' → logprob: -8.954169273376465
    10. '<|end|>' → logprob: -9.454169273376465

Token 3217: ' Problem' (ID: 26113)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -2.15310683415737e-05
    2. ' Problem' → logprob: -10.750021934509277
    3. '   ' → logprob: -21.00002098083496
    4. '_problem' → logprob: -21.12502098083496
    5. 'Problems' → logprob: -21.87502098083496
    6. 'Proble' → logprob: -21.87502098083496
    7. 'Solution' → logprob: -21.87502098083496
    8. 'Program' → logprob: -22.50002098083496
    9. 'Probability' → logprob: -23.00002098083496
    10. 'Pro' → logprob: -23.62502098083496

Token 3218: 'CS' (ID: 9310)
  Prédit: 'CS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CS' → logprob: -9.014684110297821e-06
    2. 'C' → logprob: -12.000008583068848
    3. 'Solver' → logprob: -13.125008583068848
    4. 'solver' → logprob: -15.375008583068848
    5. '```' → logprob: -16.125009536743164
    6. '_CS' → logprob: -16.250009536743164
    7. 'Cs' → logprob: -16.250009536743164
    8. '_C' → logprob: -16.500009536743164
    9. '   ' → logprob: -16.875009536743164
    10. ' solver' → logprob: -17.750009536743164

Token 3219: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -6.704273118884885e-07
    2. 'olve' → logprob: -14.750000953674316
    3. 'solver' → logprob: -15.875000953674316
    4. 'over' → logprob: -16.875
    5. 'ol' → logprob: -17.25
    6. 'Solver' → logprob: -17.375
    7. '```' → logprob: -20.125
    8. 'o' → logprob: -20.25
    9. '_solver' → logprob: -20.25
    10. 'olvers' → logprob: -20.375

Token 3220: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0009118211455643177
    2. 'sys' → logprob: -7.000911712646484
    3. ' sys' → logprob: -15.250911712646484
    4. '	sys' → logprob: -16.000911712646484
    5. '=sys' → logprob: -17.125911712646484
    6. '   ' → logprob: -18.375911712646484
    7. 'import' → logprob: -19.375911712646484
    8. 'Sys' → logprob: -19.750911712646484
    9. '(Sys' → logprob: -19.875911712646484
    10. '```' → logprob: -20.000911712646484

Token 3221: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00048715711454860866
    2. 'stdin' → logprob: -7.875487327575684
    3. '.stdout' → logprob: -9.875487327575684
    4. '(stdin' → logprob: -10.875487327575684
    5. '.argv' → logprob: -11.000487327575684
    6. '.' → logprob: -11.125487327575684
    7. '   ' → logprob: -13.250487327575684
    8. '.__' → logprob: -13.750487327575684
    9. '```' → logprob: -14.375487327575684
    10. ')' → logprob: -14.375487327575684

Token 3222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05858961120247841
    2. ')
' → logprob: -3.1835896968841553
    3. '())' → logprob: -4.683589458465576
    4. '   ' → logprob: -5.808589458465576
    5. '())
' → logprob: -5.933589458465576
    6. ').' → logprob: -7.683589458465576
    7. '()' → logprob: -9.433589935302734
    8. '()
' → logprob: -11.308589935302734
    9. '.readline' → logprob: -12.183589935302734
    10. '()).' → logprob: -12.808589935302734

Token 3223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00523612555116415
    2. 'solver' → logprob: -5.2552361488342285
    3. '```' → logprob: -13.50523567199707
    4. '  ' → logprob: -15.63023567199707
    5. '    
' → logprob: -15.63023567199707
    6. ' solver' → logprob: -15.88023567199707
    7. '
' → logprob: -16.13023567199707
    8. '	s' → logprob: -16.50523567199707
    9. 'for' → logprob: -17.00523567199707
    10. '_solver' → logprob: -17.25523567199707

Token 3224: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -2.176947600673884e-05
    2. '   ' → logprob: -10.750021934509277
    3. ' solver' → logprob: -15.500021934509277
    4. 'resolver' → logprob: -20.12502098083496
    5. '```' → logprob: -20.12502098083496
    6. 'solve' → logprob: -20.87502098083496
    7. 'for' → logprob: -20.87502098083496
    8. 'sol' → logprob: -20.87502098083496
    9. 'scheduler' → logprob: -21.12502098083496
    10. '
' → logprob: -21.75002098083496

Token 3225: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.00023321842309087515
    2. '.' → logprob: -8.37523365020752
    3. '.run' → logprob: -13.12523365020752
    4. ' .' → logprob: -15.37523365020752
    5. '.mainloop' → logprob: -16.250232696533203
    6. '.execute' → logprob: -16.750232696533203
    7. '.sol' → logprob: -16.875232696533203
    8. '.readline' → logprob: -17.625232696533203
    9. '.
' → logprob: -18.000232696533203
    10. 'solve' → logprob: -18.000232696533203

Token 3226: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3224
Tokens correctement prédits (1ère position, stricte): 1294
Tokens correctement prédits (1ère position, avec adaptation): 1409
Tokens correctement prédits (top 10): 2559
Précision stricte (1ère position): 40.14%
Précision adaptée (1ère position): 43.70%
Précision (top 10): 79.37%
================================================================================
