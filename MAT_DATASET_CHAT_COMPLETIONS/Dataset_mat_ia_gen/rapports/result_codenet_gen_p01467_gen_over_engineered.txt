================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class BorrowStrategy:
    """抽象的な繰り下がり忘れ戦略の基底クラス"""
    def should_forget(self, index: int, remaining: int) -> bool:
        raise NotImplementedError

class MaximizeResultStrategy(BorrowStrategy):
    """最大値を得るため、繰り下がり忘れをできるだけ使う戦略"""
    def should_forget(self, index: int, remaining: int) -> bool:
        return remaining > 0

class DigitNumber:
    """数字を桁のリストとして抽象化"""
    def __init__(self, number: int, length: int = None):
        self.digits = self._to_digits(number)
        if length is not None and length > len(self.digits):
            # 上位桁に0埋めをする
            self.digits.extend([0] * (length - len(self.digits)))

    @staticmethod
    def _to_digits(number: int):
        if number == 0:
            return [0]
        digits = []
        while number > 0:
            digits.append(number % 10)
            number //=10
        return digits  # 下位桁から順に格納

    def __len__(self):
        return len(self.digits)

    def __getitem__(self, index):
        return self.digits[index]

    def __setitem__(self, index, value):
        self.digits[index] = value

    def to_int(self) -> int:
        # 上位桁から連続する0を除去して整数に変換
        d = self.digits[:]
        while len(d) > 1 and d[-1] == 0:
            d.pop()
        value = 0
        for digit in reversed(d):
            value = value * 10 + digit
        return value

class BorrowForgetSimulator:
    def __init__(self, A: int, B: int, K: int, strategy: BorrowStrategy):
        self.A = A
        self.B = B
        self.K = K
        self.strategy = strategy
        self.n = len(str(A))
        self.numA = DigitNumber(A, self.n)
        self.numB = DigitNumber(B, self.n)

    def simulate(self) -> int:
        borrow = [0] * (self.n + 1)
        C = [0] * self.n
        forget_count = 0

        for i in range(self.n):
            A_i = self.numA[i]
            B_i = self.numB[i]
            A_sub = A_i - borrow[i]
            if A_sub >= B_i:
                C[i] = A_sub - B_i
                borrow[i+1] = 0
            else:
                # 本来は borrow[i+1] = 1
                # だが繰り下がり忘れが許されているとき：
                if forget_count < self.K and self.strategy.should_forget(i, self.K - forget_count):
                    # 繰り下がり忘れの適用 → borrow[i+1] = 0 で大きくなる結果を優先
                    C[i] = 10 + A_sub - B_i
                    borrow[i+1] = 0
                    forget_count += 1
                else:
                    C[i] = 10 + A_sub - B_i
                    borrow[i+1] = 1
        result_num = DigitNumber(0, self.n)
        for i in range(self.n):
            result_num[i] = C[i]
        return result_num.to_int()

def main():
    import sys
    A, B, K = map(int, sys.stdin.readline().split())
    strategy = MaximizeResultStrategy()
    sim = BorrowForgetSimulator(A, B, K, strategy)
    print(sim.simulate())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Borrow' (ID: 112685)
  → Token d'amorce (pas de prédiction)

Token 2: 'Strategy' (ID: 21488)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5612528324127197
    2. '(' → logprob: -1.5612528324127197
    3. '{' → logprob: -1.5612528324127197
    4. ' {' → logprob: -5.186252593994141
    5. '.' → logprob: -6.061252593994141
    6. ' :' → logprob: -7.186252593994141
    7. ' ' → logprob: -7.811252593994141
    8. '```' → logprob: -8.43625259399414
    9. '[' → logprob: -8.81125259399414
    10. '_' → logprob: -9.18625259399414

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35474205017089844
    2. '(' → logprob: -1.2297420501708984
    3. '.' → logprob: -5.604742050170898
    4. '```' → logprob: -7.104742050170898
    5. '   ' → logprob: -7.229742050170898
    6. ':
' → logprob: -7.729742050170898
    7. '(
' → logprob: -8.229742050170898
    8. ''' → logprob: -9.354742050170898
    9. '():' → logprob: -9.354742050170898
    10. '(:' → logprob: -10.479742050170898

Token 5: ' """' (ID: 9280)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 6: '抽' (ID: 79081)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.2963021993637085
    2. 'A' → logprob: -2.296302318572998
    3. ' """' → logprob: -3.421302318572998
    4. 'B' → logprob: -4.046302318572998
    5. 'This' → logprob: -4.421302318572998
    6. 'Strategy' → logprob: -4.671302318572998
    7. 'Base' → logprob: -4.671302318572998
    8. ' A' → logprob: -5.046302318572998
    9. 'Borrow' → logprob: -5.171302318572998
    10. 'Abstract' → logprob: -5.171302318572998

Token 7: '象' (ID: 27006)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06920529901981354
    2. '款' → logprob: -3.6942052841186523
    3. '       ' → logprob: -4.819205284118652
    4. ' ' → logprob: -5.319205284118652
    5. '取' → logprob: -5.444205284118652
    6. '\xe5\xb1' → logprob: -5.819205284118652
    7. '  ' → logprob: -5.944205284118652
    8. '"""' → logprob: -6.194205284118652
    9. '贷' → logprob: -6.319205284118652
    10. ' \xe6\xac' → logprob: -6.444205284118652

Token 8: '的' (ID: 1616)
  Prédit: ' """'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' """' → logprob: -1.4285073280334473
    2. ' ' → logprob: -1.6785073280334473
    3. ' class' → logprob: -1.6785073280334473
    4. '```' → logprob: -2.1785073280334473
    5. 'class' → logprob: -2.6785073280334473
    6. '   ' → logprob: -2.8035073280334473
    7. 'Strategy' → logprob: -3.1785073280334473
    8. '"""' → logprob: -4.178507328033447
    9. 'Base' → logprob: -4.303507328033447
    10. ' ```' → logprob: -4.678507328033447

Token 9: 'な' (ID: 5784)
  Prédit: ' Borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Borrow' → logprob: -0.2795439660549164
    2. 'Borrow' → logprob: -1.9045439958572388
    3. ' ' → logprob: -3.404543876647949
    4. ' class' → logprob: -3.654543876647949
    5. 'class' → logprob: -4.279543876647949
    6. 'Strategy' → logprob: -5.779543876647949
    7. 'Base' → logprob: -6.279543876647949
    8. 'ク' → logprob: -6.279543876647949
    9. '   ' → logprob: -6.654543876647949
    10. ' base' → logprob: -6.654543876647949

Token 10: '�' (ID: 57872)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 11: '�' (ID: 108)
  Prédit: '借'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '借' → logprob: -0.7640393376350403
    2. 'ー' → logprob: -1.8890392780303955
    3. '戦' → logprob: -2.0140392780303955
    4. '貸' → logprob: -3.1390392780303955
    5. 'ン' → logprob: -3.5140392780303955
    6. 'ス' → logprob: -4.014039516448975
    7. 'リ' → logprob: -4.014039516448975
    8. 'ク' → logprob: -4.264039516448975
    9. 'ース' → logprob: -4.514039516448975
    10. '融' → logprob: -5.014039516448975

Token 12: 'り' (ID: 7297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1923801302909851
    2. 'class' → logprob: -2.69238018989563
    3. ' class' → logprob: -3.81738018989563
    4. 'Borrow' → logprob: -3.81738018989563
    5. ' Borrow' → logprob: -3.94238018989563
    6. 'ク' → logprob: -4.692379951477051
    7. '   ' → logprob: -5.067379951477051
    8. 'ABC' → logprob: -5.567379951477051
    9. 'B' → logprob: -6.067379951477051
    10. 'r' → logprob: -6.692379951477051

Token 13: '下' (ID: 3771)
  Prédit: 'ク'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ク' → logprob: -0.7267534732818604
    2. 'class' → logprob: -1.4767534732818604
    3. '方' → logprob: -2.8517534732818604
    4. 'く' → logprob: -3.4767534732818604
    5. 'def' → logprob: -3.9767534732818604
    6. '貸' → logprob: -4.101753234863281
    7. '行' → logprob: -4.351753234863281
    8. '借' → logprob: -4.476753234863281
    9. 'か' → logprob: -4.601753234863281
    10. 'r' → logprob: -4.726753234863281

Token 14: 'が' (ID: 6632)
  Prédit: 'ろ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ろ' → logprob: -0.8481676578521729
    2. 'し' → logprob: -1.2231676578521729
    3. 'く' → logprob: -1.7231676578521729
    4. 'り' → logprob: -3.348167657852173
    5. 'げ' → logprob: -3.973167657852173
    6. 'す' → logprob: -4.223167419433594
    7. '```' → logprob: -4.598167419433594
    8. 'お' → logprob: -5.848167419433594
    9. 'で' → logprob: -6.473167419433594
    10. 'ク' → logprob: -6.473167419433594

Token 15: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.02113243192434311
    2. 'る' → logprob: -5.271132469177246
    3. 'め' → logprob: -5.271132469177246
    4. 'class' → logprob: -6.021132469177246
    5. '```' → logprob: -6.146132469177246
    6. 'げ' → logprob: -6.396132469177246
    7. 'し' → logprob: -6.396132469177246
    8. 'def' → logprob: -7.396132469177246
    9. 'て' → logprob: -8.146132469177246
    10. 'ク' → logprob: -8.271132469177246

Token 16: '忘' (ID: 69291)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.0823771953582764
    2. 'ク' → logprob: -1.4573771953582764
    3. 'く' → logprob: -1.9573771953582764
    4. 'り' → logprob: -2.0823771953582764
    5. '```' → logprob: -3.8323771953582764
    6. 'て' → logprob: -4.0823774337768555
    7. 'る' → logprob: -4.0823774337768555
    8. 'た' → logprob: -4.3323774337768555
    9. '抽' → logprob: -4.3323774337768555
    10. 'def' → logprob: -4.3323774337768555

Token 17: 'れ' (ID: 9472)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.12901099026203156
    2. 'れ' → logprob: -2.7540109157562256
    3. 'け' → logprob: -3.0040109157562256
    4. 'て' → logprob: -6.254011154174805
    5. 'せ' → logprob: -7.004011154174805
    6. 'し' → logprob: -7.004011154174805
    7. 'か' → logprob: -7.254011154174805
    8. 'る' → logprob: -7.504011154174805
    9. '```' → logprob: -7.754011154174805
    10. 'げ' → logprob: -8.379011154174805

Token 18: '戦' (ID: 85761)
  Prédit: 'ク'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ク' → logprob: -1.3448625802993774
    2. 'class' → logprob: -1.4698625802993774
    3. 'の' → logprob: -2.594862461090088
    4. '"""' → logprob: -2.719862461090088
    5. 'け' → logprob: -2.969862461090088
    6. 'れ' → logprob: -3.344862461090088
    7. 'を' → logprob: -3.344862461090088
    8. '```' → logprob: -3.844862461090088
    9. 'が' → logprob: -4.094862461090088
    10. 'る' → logprob: -4.219862461090088

Token 19: '略' (ID: 31770)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.121012806892395
    2. 'ク' → logprob: -1.496012806892395
    3. 'う' → logprob: -2.1210126876831055
    4. 'げ' → logprob: -2.6210126876831055
    5. '策' → logprob: -2.6210126876831055
    6. '略' → logprob: -3.6210126876831055
    7. '```' → logprob: -3.6210126876831055
    8. 'く' → logprob: -4.1210126876831055
    9. 'ー' → logprob: -4.6210126876831055
    10. 'が' → logprob: -4.9960126876831055

Token 20: 'の' (ID: 3385)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3752897381782532
    2. ' """' → logprob: -1.5002896785736084
    3. 'の' → logprob: -3.8752896785736084
    4. '"""
' → logprob: -3.8752896785736084
    5. 'を' → logprob: -4.3752899169921875
    6. ' """
' → logprob: -5.1252899169921875
    7. '   ' → logprob: -5.2502899169921875
    8. '```' → logprob: -5.5002899169921875
    9. '\n' → logprob: -5.6252899169921875
    10. ' ' → logprob: -5.8752899169921875

Token 21: '基' (ID: 18257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4607466459274292
    2. ' ' → logprob: -1.9607466459274292
    3. 'ク' → logprob: -2.3357467651367188
    4. '```' → logprob: -2.3357467651367188
    5. '抽' → logprob: -2.5857467651367188
    6. ' """' → logprob: -3.2107467651367188
    7. 'class' → logprob: -3.3357467651367188
    8. '"""
' → logprob: -3.3357467651367188
    9. '実' → logprob: -3.8357467651367188
    10. '"""' → logprob: -3.9607467651367188

Token 22: '底' (ID: 33015)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.079925298690796
    2. '本' → logprob: -1.579925298690796
    3. '\xe7\xa4' → logprob: -1.829925298690796
    4. '底' → logprob: -1.954925298690796
    5. '盤' → logprob: -2.954925298690796
    6. '础' → logprob: -3.204925298690796
    7. '```' → logprob: -3.204925298690796
    8. '類' → logprob: -5.204925537109375
    9. 'ク' → logprob: -5.329925537109375
    10. '抽' → logprob: -6.579925537109375

Token 23: 'ク' (ID: 7787)
  Prédit: 'ク'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ク' → logprob: -0.05212712660431862
    2. 'class' → logprob: -3.8021271228790283
    3. '```' → logprob: -3.8021271228790283
    4. '   ' → logprob: -6.677127361297607
    5. ' class' → logprob: -6.927127361297607
    6. '抽' → logprob: -7.427127361297607
    7. ' ク' → logprob: -7.802127361297607
    8. '类' → logprob: -7.802127361297607
    9. '類' → logprob: -7.802127361297607
    10. '）' → logprob: -8.30212688446045

Token 24: 'ラス' (ID: 100702)
  Prédit: 'ラ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ラ' → logprob: -0.35666412115097046
    2. 'ラス' → logprob: -2.1066641807556152
    3. '�' → logprob: -2.2316641807556152
    4. '```' → logprob: -3.3566641807556152
    5. '��' → logprob: -4.481664180755615
    6. 'ー' → logprob: -5.356664180755615
    7. 'l' → logprob: -5.606664180755615
    8. '래' → logprob: -5.856664180755615
    9. '���' → logprob: -5.981664180755615
    10. '拉' → logprob: -6.356664180755615

Token 25: '"""
' (ID: 15611)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.11320720613002777
    2. '"""
' → logprob: -2.6132071018218994
    3. '```' → logprob: -4.3632073402404785
    4. '   ' → logprob: -4.8632073402404785
    5. '"' → logprob: -5.2382073402404785
    6. '
' → logprob: -6.2382073402404785
    7. '\n' → logprob: -6.4882073402404785
    8. '"""

' → logprob: -6.8632073402404785
    9. ' """' → logprob: -6.9882073402404785
    10. '"""
' → logprob: -7.1132073402404785

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04658669978380203
    2. '\n' → logprob: -3.796586751937866
    3. ' ' → logprob: -4.296586513519287
    4. '    
' → logprob: -6.171586513519287
    5. '    ' → logprob: -6.296586513519287
    6. '
' → logprob: -6.921586513519287
    7. ' 
' → logprob: -7.046586513519287
    8. 'class' → logprob: -7.296586513519287
    9. ':' → logprob: -7.671586513519287
    10. '```' → logprob: -7.796586513519287

Token 27: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8252955079078674
    2. '   ' → logprob: -0.9502955079078674
    3. '\n' → logprob: -2.9502954483032227
    4. '    ' → logprob: -2.9502954483032227
    5. ' 
' → logprob: -3.8252954483032227
    6. '    
' → logprob: -4.075295448303223
    7. '
' → logprob: -4.075295448303223
    8. '\' → logprob: -5.450295448303223
    9. '_' → logprob: -6.575295448303223
    10. '  ' → logprob: -6.825295448303223

Token 28: ' should' (ID: 1757)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0027614871505647898
    2. ' ​' → logprob: -7.252761363983154
    3. ' ‌' → logprob: -7.377761363983154
    4. ' ' → logprob: -7.627761363983154
    5. ' __' → logprob: -8.127761840820312
    6. '_' → logprob: -8.502761840820312
    7. ' space' → logprob: -9.127761840820312
    8. ' ﻿' → logprob: -9.377761840820312
    9. ' ```' → logprob: -10.252761840820312
    10. '  ' → logprob: -10.377761840820312

Token 29: '_for' (ID: 11903)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008134494535624981
    2. '_continue' → logprob: -6.508134365081787
    3. '_apply' → logprob: -7.133134365081787
    4. '_raise' → logprob: -7.258134365081787
    5. '_accept' → logprob: -7.258134365081787
    6. '_use' → logprob: -7.383134365081787
    7. '_take' → logprob: -7.383134365081787
    8. '_b' → logprob: -7.758134365081787
    9. '_keep' → logprob: -8.008134841918945
    10. '_return' → logprob: -8.008134841918945

Token 30: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0025248879101127386
    2. '_get' → logprob: -6.6275248527526855
    3. 'orget' → logprob: -7.6275248527526855
    4. 'got' → logprob: -8.002525329589844
    5. 'give' → logprob: -9.127525329589844
    6. '```' → logprob: -9.252525329589844
    7. '_for' → logprob: -10.377525329589844
    8. 'go' → logprob: -11.127525329589844
    9. 'git' → logprob: -11.377525329589844
    10. 'forget' → logprob: -11.377525329589844

Token 31: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16004689037799835
    2. '(' → logprob: -2.6600468158721924
    3. '_' → logprob: -2.7850468158721924
    4. '_self' → logprob: -5.0350470542907715
    5. ' (' → logprob: -5.1600470542907715
    6. 'self' → logprob: -6.4100470542907715
    7. '_(' → logprob: -7.2850470542907715
    8. ' self' → logprob: -7.7850470542907715
    9. '_token' → logprob: -8.410046577453613
    10. '_space' → logprob: -8.785046577453613

Token 32: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.24908916652202606
    2. 'self' → logprob: -1.8740891218185425
    3. ')' → logprob: -3.124089241027832
    4. '(' → logprob: -4.624089241027832
    5. '_token' → logprob: -5.499089241027832
    6. ')(' → logprob: -6.124089241027832
    7. '_self' → logprob: -6.124089241027832
    8. '_' → logprob: -7.624089241027832
    9. ' self' → logprob: -7.624089241027832
    10. 'token' → logprob: -7.874089241027832

Token 33: ' index' (ID: 3472)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.027311159297823906
    2. 'self' → logprob: -4.277311325073242
    3. ' memory' → logprob: -5.277311325073242
    4. ' )' → logprob: -6.277311325073242
    5. ' token' → logprob: -6.277311325073242
    6. ' obj' → logprob: -6.527311325073242
    7. ' object' → logprob: -6.902311325073242
    8. ')' → logprob: -7.277311325073242
    9. ' context' → logprob: -7.902311325073242
    10. ' item' → logprob: -9.027311325073242

Token 34: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012971745803952217
    2. ')' → logprob: -4.512971878051758
    3. ',' → logprob: -6.387971878051758
    4. ':' → logprob: -9.012971878051758
    5. ' ):' → logprob: -9.887971878051758
    6. '):
' → logprob: -10.887971878051758
    7. 'self' → logprob: -11.762971878051758
    8. ')：' → logprob: -11.887971878051758
    9. '   ' → logprob: -12.262971878051758
    10. ' ,' → logprob: -12.512971878051758

Token 35: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.11303292214870453
    2. 'int' → logprob: -2.238032817840576
    3. ')' → logprob: -9.488033294677734
    4. '[int' → logprob: -10.113033294677734
    5. '	int' → logprob: -10.488033294677734
    6. ' ' → logprob: -10.613033294677734
    7. ':int' → logprob: -11.738033294677734
    8. ' )' → logprob: -11.863033294677734
    9. '   ' → logprob: -12.238033294677734
    10. '  ' → logprob: -12.238033294677734

Token 36: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00495076272636652
    2. '):' → logprob: -5.504951000213623
    3. ',' → logprob: -7.629951000213623
    4. ')->' → logprob: -8.254950523376465
    5. ' )' → logprob: -9.504950523376465
    6. '   ' → logprob: -10.379950523376465
    7. '       ' → logprob: -12.504950523376465
    8. '）' → logprob: -12.754950523376465
    9. ')>' → logprob: -13.379950523376465
    10. '->' → logprob: -13.379950523376465

Token 37: ' remaining' (ID: 15448)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.9056205749511719
    2. ' timestamp' → logprob: -2.155620574951172
    3. ' context' → logprob: -2.405620574951172
    4. ' access' → logprob: -2.530620574951172
    5. ' time' → logprob: -2.655620574951172
    6. ')' → logprob: -3.405620574951172
    7. ' last' → logprob: -3.530620574951172
    8. ' )' → logprob: -4.280620574951172
    9. ' memory' → logprob: -4.280620574951172
    10. ' accessed' → logprob: -4.655620574951172

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0424432754516602
    2. '_time' → logprob: -1.4174432754516602
    3. ')' → logprob: -2.29244327545166
    4. '_times' → logprob: -2.54244327545166
    5. '_tokens' → logprob: -3.04244327545166
    6. '_l' → logprob: -3.29244327545166
    7. '_count' → logprob: -3.54244327545166
    8. '):' → logprob: -4.16744327545166
    9. '_days' → logprob: -4.16744327545166
    10. '_steps' → logprob: -4.54244327545166

Token 39: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08856510370969772
    2. ' int' → logprob: -2.5885651111602783
    3. 'float' → logprob: -5.088564872741699
    4. ' float' → logprob: -6.338564872741699
    5. ')' → logprob: -6.588564872741699
    6. ':int' → logprob: -9.8385648727417
    7. ' ' → logprob: -9.8385648727417
    8. '[int' → logprob: -10.4635648727417
    9. '	int' → logprob: -10.5885648727417
    10. 'list' → logprob: -10.9635648727417

Token 40: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003687053394969553
    2. ',' → logprob: -8.75036907196045
    3. '):' → logprob: -8.75036907196045
    4. ' )' → logprob: -10.50036907196045
    5. ')->' → logprob: -11.25036907196045
    6. '   ' → logprob: -12.25036907196045
    7. '）' → logprob: -13.25036907196045
    8. '`)' → logprob: -13.87536907196045
    9. ' ' → logprob: -14.62536907196045
    10. '):
' → logprob: -14.87536907196045

Token 41: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013845771551132202
    2. ')->' → logprob: -5.138845920562744
    3. ' ->' → logprob: -5.888845920562744
    4. '):' → logprob: -6.013845920562744
    5. ':' → logprob: -6.388845920562744
    6. '->' → logprob: -7.263845920562744
    7. '   ' → logprob: -8.638845443725586
    8. ' )' → logprob: -9.513845443725586
    9. ' )->' → logprob: -11.638845443725586
    10. '       ' → logprob: -11.888845443725586

Token 42: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.012703527696430683
    2. 'bool' → logprob: -4.3877034187316895
    3. ' None' → logprob: -9.387703895568848
    4. ' ' → logprob: -10.262703895568848
    5. '   ' → logprob: -10.262703895568848
    6. '	bool' → logprob: -10.887703895568848
    7. '  ' → logprob: -12.387703895568848
    8. ' int' → logprob: -12.387703895568848
    9. ' ' → logprob: -13.012703895568848
    10. '<bool' → logprob: -13.262703895568848

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.133198283147067e-05
    2. '):' → logprob: -10.750051498413086
    3. ':
' → logprob: -10.875051498413086
    4. ':return' → logprob: -12.250051498413086
    5. ':**' → logprob: -13.375051498413086
    6. '<|end|>' → logprob: -13.750051498413086
    7. '():' → logprob: -14.000051498413086
    8. '：' → logprob: -14.125051498413086
    9. ':def' → logprob: -14.500051498413086
    10. ',' → logprob: -15.000051498413086

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5180783867835999
    2. '<|end|>' → logprob: -1.393078327178955
    3. '\n' → logprob: -2.768078327178955
    4. '
' → logprob: -2.893078327178955
    5. ':' → logprob: -4.393078327178955
    6. '   ' → logprob: -4.768078327178955
    7. '\' → logprob: -5.268078327178955
    8. ' ' → logprob: -5.768078327178955
    9. '<|end|>' → logprob: -6.768078327178955
    10. '\r' → logprob: -6.893078327178955

Token 45: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19778285920619965
    2. ' ' → logprob: -2.9477827548980713
    3. '   ' → logprob: -3.3227827548980713
    4. '\n' → logprob: -3.9477827548980713
    5. ' pass' → logprob: -3.9477827548980713
    6. 'pass' → logprob: -4.19778299331665
    7. '    ' → logprob: -4.19778299331665
    8. '<|end|>' → logprob: -5.19778299331665
    9. ' raise' → logprob: -5.32278299331665
    10. '        ' → logprob: -6.07278299331665

Token 46: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.004624272231012583
    2. 'Not' → logprob: -5.379624366760254
    3. ' No' → logprob: -13.879624366760254
    4. '(Not' → logprob: -14.004624366760254
    5. '_Not' → logprob: -14.379624366760254
    6. '@Not' → logprob: -14.504624366760254
    7. ' ' → logprob: -14.629624366760254
    8. '\Not' → logprob: -15.004624366760254
    9. 'No' → logprob: -15.504624366760254
    10. '_not' → logprob: -16.504623413085938

Token 47: 'Implemented' (ID: 42030)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.044121384620666504
    2. 'Implemented' → logprob: -3.169121265411377
    3. 'Error' → logprob: -8.169121742248535
    4. 'implemented' → logprob: -8.419121742248535
    5. 'oted' → logprob: -8.544121742248535
    6. 'plement' → logprob: -8.794121742248535
    7. 'OT' → logprob: -9.544121742248535
    8. 'ew' → logprob: -9.669121742248535
    9. 't' → logprob: -10.419121742248535
    10. 'Not' → logprob: -10.544121742248535

Token 48: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.128163257315464e-07
    2. 'Erro' → logprob: -16.375
    3. 'Exception' → logprob: -17.125
    4. 'ed' → logprob: -17.625
    5. '```' → logprob: -17.625
    6. 'Er' → logprob: -17.75
    7. 'rror' → logprob: -18.5
    8. 'Err' → logprob: -19.0
    9. 'Errors' → logprob: -20.25
    10. 'Not' → logprob: -20.25

Token 49: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: 'class' (ID: 1444)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.134816512465477
    2. '
' → logprob: -3.1348164081573486
    3. '   ' → logprob: -4.009816646575928
    4. '<|end|>' → logprob: -4.009816646575928
    5. '_' → logprob: -4.259816646575928
    6. '\n' → logprob: -4.384816646575928
    7. ' 
' → logprob: -5.634816646575928
    8. '' → logprob: -5.759816646575928
    9. '.' → logprob: -6.009816646575928
    10. '\' → logprob: -6.259816646575928

Token 51: ' Max' (ID: 10093)
  Prédit: ' Borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Borrow' → logprob: -0.06760430335998535
    2. ' ' → logprob: -4.192604064941406
    3. ' Space' → logprob: -5.067604064941406
    4. 'Borrow' → logprob: -5.192604064941406
    5. ' Concrete' → logprob: -5.692604064941406
    6. ' Smart' → logprob: -5.692604064941406
    7. ' Early' → logprob: -5.942604064941406
    8. ' Random' → logprob: -5.942604064941406
    9. ' Basic' → logprob: -6.192604064941406
    10. ' Strict' → logprob: -6.192604064941406

Token 52: 'imize' (ID: 16368)
  Prédit: 'Age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Age' → logprob: -0.9634508490562439
    2. 'Borrow' → logprob: -1.4634509086608887
    3. 'Forget' → logprob: -2.0884509086608887
    4. 'Count' → logprob: -2.9634509086608887
    5. 'Retention' → logprob: -3.0884509086608887
    6. 'imum' → logprob: -3.4634509086608887
    7. 'Length' → logprob: -3.4634509086608887
    8. 'Depth' → logprob: -3.5884509086608887
    9. 'Ret' → logprob: -4.463450908660889
    10. 'Usage' → logprob: -5.088450908660889

Token 53: 'Result' (ID: 2769)
  Prédit: 'Retention'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Retention' → logprob: -0.7266035676002502
    2. 'Borrow' → logprob: -0.9766035676002502
    3. 'Forget' → logprob: -2.8516035079956055
    4. 'Use' → logprob: -4.7266035079956055
    5. 'Usage' → logprob: -4.8516035079956055
    6. 'Profit' → logprob: -5.4766035079956055
    7. 'Reuse' → logprob: -5.4766035079956055
    8. 'Benefit' → logprob: -5.4766035079956055
    9. 'Decay' → logprob: -5.6016035079956055
    10. 'Depth' → logprob: -5.7266035079956055

Token 54: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.2396359145641327
    2. 'Forget' → logprob: -2.489635944366455
    3. 'For' → logprob: -3.489635944366455
    4. ':' → logprob: -3.614635944366455
    5. 'Borrow' → logprob: -3.614635944366455
    6. 'Score' → logprob: -4.864635944366455
    7. 'ing' → logprob: -5.239635944366455
    8. 'Retention' → logprob: -5.239635944366455
    9. 'Reward' → logprob: -5.614635944366455
    10. 's' → logprob: -6.114635944366455

Token 55: '(B' (ID: 8409)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002597895683720708
    2. '(' → logprob: -6.127597808837891
    3. ':
' → logprob: -8.87759780883789
    4. '(B' → logprob: -9.12759780883789
    5. ' :' → logprob: -9.50259780883789
    6. '   ' → logprob: -10.50259780883789
    7. '<|end|>' → logprob: -11.12759780883789
    8. '):' → logprob: -11.62759780883789
    9. '(Abstract' → logprob: -11.75259780883789
    10. '(Base' → logprob: -12.00259780883789

Token 56: 'orrow' (ID: 10386)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.6994836330413818
    2. 'orrow' → logprob: -0.6994836330413818
    3. 'orro' → logprob: -5.574483871459961
    4. 'orr' → logprob: -6.824483871459961
    5. 'or' → logprob: -7.074483871459961
    6. 'e' → logprob: -8.699483871459961
    7. ')' → logprob: -9.199483871459961
    8. '```' → logprob: -9.574483871459961
    9. 'orror' → logprob: -9.824483871459961
    10. 'r' → logprob: -11.074483871459961

Token 57: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.0001029471677611582
    2. 'Result' → logprob: -10.125102996826172
    3. 'ing' → logprob: -11.000102996826172
    4. '_strategy' → logprob: -11.000102996826172
    5. 'ed' → logprob: -11.875102996826172
    6. 'Strateg' → logprob: -12.000102996826172
    7. 'Strategies' → logprob: -12.875102996826172
    8. ' Strategy' → logprob: -13.000102996826172
    9. 'Star' → logprob: -13.500102996826172
    10. 'strategy' → logprob: -13.625102996826172

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007522129453718662
    2. ':' → logprob: -7.2507524490356445
    3. '):
' → logprob: -10.625752449035645
    4. ')' → logprob: -11.125752449035645
    5. ' ):' → logprob: -13.875752449035645
    6. '():' → logprob: -14.125752449035645
    7. '   ' → logprob: -15.500752449035645
    8. ':)' → logprob: -15.625752449035645
    9. ']:' → logprob: -15.875752449035645
    10. '>:' → logprob: -16.000751495361328

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12308129668235779
    2. '<|end|>' → logprob: -2.4980812072753906
    3. '
' → logprob: -4.498081207275391
    4. ':' → logprob: -4.998081207275391
    5. '    ' → logprob: -5.373081207275391
    6. '<|end|>' → logprob: -5.998081207275391
    7. ' ' → logprob: -6.123081207275391
    8. '    
' → logprob: -6.623081207275391
    9. 'def' → logprob: -6.623081207275391
    10. ' def' → logprob: -7.373081207275391

Token 60: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19677004218101501
    2. ' def' → logprob: -2.196769952774048
    3. '    ' → logprob: -2.821769952774048
    4. 'def' → logprob: -5.446770191192627
    5. '    
' → logprob: -6.071770191192627
    6. '
' → logprob: -7.321770191192627
    7. ' ' → logprob: -8.571769714355469
    8. '       ' → logprob: -9.446769714355469
    9. '	def' → logprob: -9.696769714355469
    10. '     
' → logprob: -9.696769714355469

Token 61: '最大' (ID: 44721)
  Prédit: '最大'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '最大' → logprob: -1.3428564071655273
    2. '"""' → logprob: -1.9678564071655273
    3. '借' → logprob: -2.5928564071655273
    4. 'def' → logprob: -2.7178564071655273
    5. 'class' → logprob: -2.8428564071655273
    6. '結果' → logprob: -2.9678564071655273
    7. '最' → logprob: -3.0928564071655273
    8. '   ' → logprob: -3.3428564071655273
    9. '直' → logprob: -3.5928564071655273
    10. ' """' → logprob: -4.092856407165527

Token 62: '値' (ID: 69555)
  Prédit: '化'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '化' → logprob: -0.2310720980167389
    2. '結果' → logprob: -2.606072187423706
    3. '利益' → logprob: -3.981072187423706
    4. 'の' → logprob: -4.106071949005127
    5. '利' → logprob: -4.106071949005127
    6. '値' → logprob: -4.481071949005127
    7. '\xe5\x8a' → logprob: -4.481071949005127
    8. '効' → logprob: -4.481071949005127
    9. '価' → logprob: -4.981071949005127
    10. '忘' → logprob: -5.106071949005127

Token 63: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.044306833297014236
    2. '戦' → logprob: -4.794306755065918
    3. 'の' → logprob: -4.919306755065918
    4. '忘' → logprob: -5.169306755065918
    5. '化' → logprob: -5.669306755065918
    6. '結果' → logprob: -5.794306755065918
    7. '値' → logprob: -6.044306755065918
    8. '保持' → logprob: -6.294306755065918
    9. '減' → logprob: -6.794306755065918
    10. '```' → logprob: -6.919306755065918

Token 64: '得' (ID: 11789)
  Prédit: '求'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '求' → logprob: -0.8845170736312866
    2. '\xe7\x8b' → logprob: -1.6345170736312866
    3. '得' → logprob: -2.509517192840576
    4. '忘' → logprob: -2.509517192840576
    5. '借' → logprob: -3.134517192840576
    6. '取' → logprob: -3.509517192840576
    7. '最大' → logprob: -3.759517192840576
    8. '返' → logprob: -4.259517192840576
    9. '保持' → logprob: -4.259517192840576
    10. '取り' → logprob: -4.384517192840576

Token 65: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.002702758414670825
    2. 'ら' → logprob: -6.252702713012695
    3. 'たい' → logprob: -7.502702713012695
    4. 'よう' → logprob: -8.752702713012695
    5. '```' → logprob: -10.252702713012695
    6. 'て' → logprob: -11.127702713012695
    7. 'た' → logprob: -11.502702713012695
    8. 'する' → logprob: -14.252702713012695
    9. '�' → logprob: -14.377702713012695
    10. 'つ' → logprob: -14.877702713012695

Token 66: 'ため' (ID: 103912)
  Prédit: 'ため'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ため' → logprob: -0.07372398674488068
    2. '戦' → logprob: -2.9487240314483643
    3. 'こと' → logprob: -4.573723793029785
    4. '"""' → logprob: -5.573723793029785
    5. '```' → logprob: -6.823723793029785
    6. ' strategy' → logprob: -7.948723793029785
    7. 'べ' → logprob: -7.948723793029785
    8. ' """' → logprob: -8.323723793029785
    9. 'class' → logprob: -8.323723793029785
    10. 'strategy' → logprob: -8.448723793029785

Token 67: '、' (ID: 1395)
  Prédit: 'に'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.23394399881362915
    2. 'の' → logprob: -1.6089439392089844
    3. 'ため' → logprob: -6.233943939208984
    4. 'には' → logprob: -6.483943939208984
    5. ' に' → logprob: -6.608943939208984
    6. '   ' → logprob: -7.483943939208984
    7. 'を' → logprob: -7.608943939208984
    8. 'る' → logprob: -7.858943939208984
    9. ' の' → logprob: -8.108943939208984
    10. 'class' → logprob: -8.108943939208984

Token 68: '�' (ID: 57872)
  Prédit: '借'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '借' → logprob: -2.336740016937256
    2. '#' → logprob: -2.711740016937256
    3. '最' → logprob: -2.711740016937256
    4. 'ある' → logprob: -2.836740016937256
    5. '直' → logprob: -2.836740016937256
    6. '残' → logprob: -2.836740016937256
    7. '特' → logprob: -3.211740016937256
    8. 'の' → logprob: -3.461740016937256
    9. '一定' → logprob: -3.461740016937256
    10. '全' → logprob: -3.711740016937256

Token 69: '�' (ID: 108)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -1.4010968208312988
    2. ' ' → logprob: -2.401096820831299
    3. 'す' → logprob: -2.776096820831299
    4. '最' → logprob: -2.776096820831299
    5. 'でき' → logprob: -2.776096820831299
    6. '   ' → logprob: -3.401096820831299
    7. 'の' → logprob: -3.651096820831299
    8. 'る' → logprob: -3.901096820831299
    9. 'より' → logprob: -3.963596820831299
    10. '忘' → logprob: -4.151096820831299

Token 70: 'り' (ID: 7297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.94180166721344
    2. 'す' → logprob: -2.0668015480041504
    3. ' ' → logprob: -2.6918015480041504
    4. 'class' → logprob: -2.9418015480041504
    5. '残' → logprob: -2.9418015480041504
    6. 'の' → logprob: -3.0668015480041504
    7. '借' → logprob: -3.3168015480041504
    8. 'り' → logprob: -3.6293015480041504
    9. 'def' → logprob: -3.6918015480041504
    10. 'し' → logprob: -3.8168015480041504

Token 71: '下' (ID: 3771)
  Prédit: '下'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '下' → logprob: -0.08404989540576935
    2. '忘' → logprob: -2.709049940109253
    3. '上' → logprob: -5.209049701690674
    4. '続' → logprob: -5.709049701690674
    5. '残' → logprob: -6.959049701690674
    6. '\xe9\x81' → logprob: -7.084049701690674
    7. 'が' → logprob: -7.709049701690674
    8. '降' → logprob: -7.834049701690674
    9. '返' → logprob: -7.959049701690674
    10. '戻' → logprob: -8.209050178527832

Token 72: 'が' (ID: 6632)
  Prédit: 'が'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.005889922380447388
    2. '忘' → logprob: -5.380889892578125
    3. 'り' → logprob: -7.880889892578125
    4. '```' → logprob: -8.755889892578125
    5. '�' → logprob: -8.880889892578125
    6. '下' → logprob: -9.255889892578125
    7. 'あり' → logprob: -9.255889892578125
    8. 'か' → logprob: -9.630889892578125
    9. '返' → logprob: -10.005889892578125
    10. 'あ' → logprob: -10.255889892578125

Token 73: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.019112221896648407
    2. 'る' → logprob: -4.1441121101379395
    3. 'れ' → logprob: -7.2691121101379395
    4. 'ら' → logprob: -7.5191121101379395
    5. '```' → logprob: -8.269112586975098
    6. '忘' → logprob: -8.394112586975098
    7. 'し' → logprob: -8.956612586975098
    8. 'い' → logprob: -9.144112586975098
    9. 'って' → logprob: -9.206612586975098
    10. 'て' → logprob: -9.331612586975098

Token 74: '忘' (ID: 69291)
  Prédit: '忘'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '忘' → logprob: -0.5899091362953186
    2. 'を' → logprob: -1.0899090766906738
    3. '回' → logprob: -3.214909076690674
    4. 'し' → logprob: -4.839909076690674
    5. 'の' → logprob: -4.964909076690674
    6. '戦' → logprob: -5.089909076690674
    7. 'る' → logprob: -5.214909076690674
    8. '```' → logprob: -5.339909076690674
    9. 'に' → logprob: -5.589909076690674
    10. '続' → logprob: -6.214909076690674

Token 75: 'れ' (ID: 9472)
  Prédit: 'れ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.19468402862548828
    2. 'り' → logprob: -1.8196840286254883
    3. '戦' → logprob: -4.944684028625488
    4. 'る' → logprob: -5.944684028625488
    5. '```' → logprob: -6.694684028625488
    6. '�' → logprob: -6.944684028625488
    7. 'strategy' → logprob: -7.194684028625488
    8. 'え' → logprob: -7.444684028625488
    9. '��' → logprob: -8.319684028625488
    10. 'Strategy' → logprob: -8.569684028625488

Token 76: 'を' (ID: 7277)
  Prédit: '戦'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '戦' → logprob: -0.054318804293870926
    2. 'る' → logprob: -3.679318904876709
    3. 'を' → logprob: -4.554318904876709
    4. 'の' → logprob: -5.679318904876709
    5. '忘' → logprob: -6.304318904876709
    6. 'し' → logprob: -6.679318904876709
    7. 'strategy' → logprob: -6.804318904876709
    8. '率' → logprob: -6.929318904876709
    9. 'する' → logprob: -7.304318904876709
    10. '回' → logprob: -7.304318904876709

Token 77: 'でき' (ID: 78673)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.00014692598779220134
    2. 'ない' → logprob: -9.125146865844727
    3. 'う' → logprob: -10.750146865844727
    4. 'ません' → logprob: -12.500146865844727
    5. 'な' → logprob: -12.625146865844727
    6. 'れば' → logprob: -12.750146865844727
    7. 'なく' → logprob: -13.250146865844727
    8. 'て' → logprob: -13.750146865844727
    9. 'た' → logprob: -14.625146865844727
    10. ' ' → logprob: -14.750146865844727

Token 79: 'だけ' (ID: 121885)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.14937154948711395
    2. 'だけ' → logprob: -2.14937162399292
    3. 'う' → logprob: -5.02437162399292
    4. 'ない' → logprob: -5.27437162399292
    5. '```' → logprob: -5.89937162399292
    6. '限' → logprob: -5.89937162399292
    7. 'か' → logprob: -6.89937162399292
    8. '"""' → logprob: -7.14937162399292
    9. 'た' → logprob: -7.14937162399292
    10. 'よう' → logprob: -7.27437162399292

Token 80: '使' (ID: 15159)
  Prédit: 'し'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'し' → logprob: -1.7256274223327637
    2. '\xe6\x8a' → logprob: -1.8506274223327637
    3. '避' → logprob: -1.8506274223327637
    4. '控' → logprob: -2.4756274223327637
    5. '早' → logprob: -2.9756274223327637
    6. '少' → logprob: -3.1006274223327637
    7. 'ない' → logprob: -3.1006274223327637
    8. 'や' → logprob: -3.4756274223327637
    9. '\xe9\x81' → logprob: -3.4756274223327637
    10. '続' → logprob: -3.6006274223327637

Token 81: 'う' (ID: 8574)
  Prédit: 'う'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'う' → logprob: -0.38457179069519043
    2. 'る' → logprob: -1.3845717906951904
    3. 'い' → logprob: -3.5095717906951904
    4. 'わ' → logprob: -4.3845720291137695
    5. '尽' → logprob: -4.5095720291137695
    6. 'た' → logprob: -5.8845720291137695
    7. 'える' → logprob: -5.8845720291137695
    8. 'え' → logprob: -6.5095720291137695
    9. 'つ' → logprob: -6.8845720291137695
    10. '```' → logprob: -6.8845720291137695

Token 82: '戦' (ID: 85761)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.01665627211332321
    2. '"""
' → logprob: -5.516656398773193
    3. '```' → logprob: -5.516656398773193
    4. ' """' → logprob: -5.641656398773193
    5. '。' → logprob: -6.141656398773193
    6. '」' → logprob: -7.641656398773193
    7. '   ' → logprob: -8.016655921936035
    8. '"' → logprob: -8.141655921936035
    9. 'の' → logprob: -8.766655921936035
    10. 'べ' → logprob: -8.891655921936035

Token 83: '略' (ID: 31770)
  Prédit: '略'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '略' → logprob: -0.31587761640548706
    2. '�' → logprob: -2.440877676010132
    3. '략' → logprob: -2.440877676010132
    4. '��' → logprob: -3.690877676010132
    5. '```' → logprob: -3.690877676010132
    6. '力' → logprob: -4.565877437591553
    7. '術' → logprob: -4.940877437591553
    8. 'う' → logprob: -6.190877437591553
    9. '続' → logprob: -6.440877437591553
    10. '戦' → logprob: -6.690877437591553

Token 84: '"""
' (ID: 15611)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.1557641476392746
    2. '```' → logprob: -2.030764102935791
    3. '   ' → logprob: -4.780764102935791
    4. '"""
' → logprob: -7.155764102935791
    5. ' """' → logprob: -7.655764102935791
    6. '\n' → logprob: -7.780764102935791
    7. '"' → logprob: -7.780764102935791
    8. '`' → logprob: -7.905764102935791
    9. '
' → logprob: -8.03076457977295
    10. '」' → logprob: -8.15576457977295

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00553231593221426
    2. '
' → logprob: -5.505532264709473
    3. '    ' → logprob: -7.505532264709473
    4. '    
' → logprob: -8.130532264709473
    5. 'def' → logprob: -9.380532264709473
    6. '\' → logprob: -9.630532264709473
    7. ' ' → logprob: -9.755532264709473
    8. '       ' → logprob: -10.005532264709473
    9. ')' → logprob: -10.255532264709473
    10. 'n' → logprob: -10.380532264709473

Token 86: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040378715842962265
    2. 'def' (adapté à ' def') → logprob: -3.7903788089752197
    3. ' def' → logprob: -4.915378570556641
    4. '    ' → logprob: -5.540378570556641
    5. '    
' → logprob: -5.790378570556641
    6. ' 
' → logprob: -6.790378570556641
    7. '
' → logprob: -7.415378570556641
    8. ' ' → logprob: -7.915378570556641
    9. '       ' → logprob: -8.66537857055664
    10. '     
' → logprob: -9.54037857055664

Token 87: ' should' (ID: 1757)
  Prédit: ' should'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' should' → logprob: -0.005608780775219202
    2. 'should' → logprob: -6.005608558654785
    3. '_should' → logprob: -6.005608558654785
    4. ' ' → logprob: -8.005608558654785
    5. ' ' → logprob: -9.380608558654785
    6. ' use' → logprob: -9.380608558654785
    7. ' def' → logprob: -9.755608558654785
    8. ' can' → logprob: -10.505608558654785
    9. ' for' → logprob: -11.130608558654785
    10. '    ' → logprob: -11.880608558654785

Token 88: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.03396148607134819
    2. '_' → logprob: -3.408961534500122
    3. '_continue' → logprob: -9.033961296081543
    4. ' _' → logprob: -10.158961296081543
    5. '_use' → logprob: -10.158961296081543
    6. '_have' → logprob: -10.283961296081543
    7. 'forget' → logprob: -10.658961296081543
    8. '_should' → logprob: -11.283961296081543
    9. ' forget' → logprob: -11.408961296081543
    10. '_accept' → logprob: -12.283961296081543

Token 89: 'get' (ID: 522)
  Prédit: 'orget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orget' → logprob: -0.013216827996075153
    2. 'forget' → logprob: -4.513216972351074
    3. 'get' → logprob: -6.263216972351074
    4. 'orgot' → logprob: -9.138216972351074
    5. 'or' → logprob: -9.388216972351074
    6. ' forget' → logprob: -10.138216972351074
    7. 'o' → logprob: -10.763216972351074
    8. 'org' → logprob: -12.888216972351074
    9. '忘' → logprob: -13.013216972351074
    10. 'orge' → logprob: -13.388216972351074

Token 90: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1130191832780838
    2. '(' → logprob: -2.2380192279815674
    3. ' (' → logprob: -8.738018989562988
    4. '(
' → logprob: -11.363018989562988
    5. ' self' → logprob: -11.363018989562988
    6. '	self' → logprob: -12.613018989562988
    7. '(s' → logprob: -12.613018989562988
    8. 'self' → logprob: -13.613018989562988
    9. ' ' → logprob: -13.613018989562988
    10. '_' → logprob: -13.613018989562988

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011998742120340466
    2. ' ,' → logprob: -6.751199722290039
    3. ',index' → logprob: -10.876199722290039
    4. 'self' → logprob: -12.251199722290039
    5. ',self' → logprob: -12.876199722290039
    6. ')' → logprob: -13.501199722290039
    7. ' ' → logprob: -14.376199722290039
    8. ',
' → logprob: -14.751199722290039
    9. '   ' → logprob: -16.00119972229004
    10. 'index' → logprob: -16.00119972229004

Token 92: ' index' (ID: 3472)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.19130314886569977
    2. ' index' → logprob: -2.066303253173828
    3. 'self' → logprob: -3.191303253173828
    4. 'index' → logprob: -5.066303253173828
    5. ' ' → logprob: -10.941303253173828
    6. '   ' → logprob: -12.441303253173828
    7. '(self' → logprob: -12.941303253173828
    8. '    ' → logprob: -12.941303253173828
    9. '	self' → logprob: -13.441303253173828
    10. ')' → logprob: -13.566303253173828

Token 93: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008912124671041965
    2. ':' → logprob: -4.758912086486816
    3. ' ,' → logprob: -8.633912086486816
    4. '=' → logprob: -9.633912086486816
    5. '<|end|>' → logprob: -10.633912086486816
    6. '<|end|>' → logprob: -12.383912086486816
    7. ')' → logprob: -12.508912086486816
    8. 'self' → logprob: -12.633912086486816
    9. '):' → logprob: -13.008912086486816
    10. ' ' → logprob: -13.008912086486816

Token 94: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5865683555603027
    2. '0' → logprob: -2.0865683555603027
    3. 'int' → logprob: -2.3365683555603027
    4. ' int' → logprob: -2.3365683555603027
    5. ')' → logprob: -2.9615683555603027
    6. ' )' → logprob: -3.0865683555603027
    7. '<|end|>' → logprob: -3.8365683555603027
    8. ' ' → logprob: -6.711568355560303
    9. ' None' → logprob: -6.836568355560303
    10. ',' → logprob: -6.961568355560303

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019030878320336342
    2. ' ,' → logprob: -8.625190734863281
    3. ')' → logprob: -12.625190734863281
    4. ',int' → logprob: -13.125190734863281
    5. '‌,' → logprob: -13.750190734863281
    6. '<|end|>' → logprob: -13.875190734863281
    7. ' ' → logprob: -14.500190734863281
    8. ',
' → logprob: -14.625190734863281
    9. ',n' → logprob: -14.875190734863281
    10. ',index' → logprob: -16.12519073486328

Token 96: ' remaining' (ID: 15448)
  Prédit: ' remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.0025366635527461767
    2. 'remaining' → logprob: -6.002536773681641
    3. ' ' → logprob: -10.50253677368164
    4. '_remaining' → logprob: -11.62753677368164
    5. ' remain' → logprob: -12.00253677368164
    6. ')' → logprob: -12.62753677368164
    7. ' remainder' → logprob: -12.75253677368164
    8. '   ' → logprob: -12.87753677368164
    9. '.remaining' → logprob: -12.87753677368164
    10. 'Remaining' → logprob: -13.62753677368164

Token 97: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019581327214837074
    2. ')' → logprob: -7.00195837020874
    3. '):' → logprob: -7.12695837020874
    4. ' ):' → logprob: -9.251957893371582
    5. ' )' → logprob: -9.626957893371582
    6. ' :' → logprob: -9.751957893371582
    7. ':int' → logprob: -11.751957893371582
    8. ' ' → logprob: -11.876957893371582
    9. '   ' → logprob: -12.876957893371582
    10. '  ' → logprob: -13.626957893371582

Token 98: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10154375433921814
    2. ' int' → logprob: -2.351543664932251
    3. ')' → logprob: -6.97654390335083
    4. '1' → logprob: -8.351543426513672
    5. ' ' → logprob: -9.101543426513672
    6. ' )' → logprob: -10.976543426513672
    7. '):' → logprob: -11.726543426513672
    8. '  ' → logprob: -12.226543426513672
    9. ':int' → logprob: -12.476543426513672
    10. '   ' → logprob: -12.726543426513672

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00250918953679502
    2. '):' → logprob: -6.002509117126465
    3. ')->' → logprob: -11.002509117126465
    4. ':' → logprob: -11.377509117126465
    5. ' )' → logprob: -12.877509117126465
    6. '   ' → logprob: -13.627509117126465
    7. '）' → logprob: -14.127509117126465
    8. ')：' → logprob: -15.252509117126465
    9. '):
' → logprob: -15.752509117126465
    10. ' ):' → logprob: -16.37751007080078

Token 100: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13825492560863495
    2. ')' → logprob: -3.0132548809051514
    3. ')->' → logprob: -3.1382548809051514
    4. '):' → logprob: -3.3882548809051514
    5. '->' → logprob: -6.3882551193237305
    6. ' ->' → logprob: -6.8882551193237305
    7. '       ' → logprob: -10.51325511932373
    8. '   ' → logprob: -10.63825511932373
    9. ':return' → logprob: -10.76325511932373
    10. ' :' → logprob: -11.01325511932373

Token 101: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.018631432205438614
    2. 'bool' → logprob: -4.643631458282471
    3. ' True' → logprob: -4.768631458282471
    4. ' int' → logprob: -8.518630981445312
    5. 'True' → logprob: -9.018630981445312
    6. ' ' → logprob: -11.643630981445312
    7. 'int' → logprob: -11.768630981445312
    8. '	bool' → logprob: -12.768630981445312
    9. ' False' → logprob: -14.018630981445312
    10. ' ' → logprob: -14.393630981445312

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002141101285815239
    2. '):' → logprob: -6.252140998840332
    3. '       ' → logprob: -9.752140998840332
    4. ':
' → logprob: -9.877140998840332
    5. '():' → logprob: -10.252140998840332
    6. ':return' → logprob: -10.502140998840332
    7. ':**' → logprob: -11.502140998840332
    8. ')' → logprob: -11.627140998840332
    9. '<|end|>' → logprob: -12.502140998840332
    10. '：' → logprob: -12.627140998840332

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029021166265010834
    2. ' ' → logprob: -6.377902030944824
    3. '    ' → logprob: -7.877902030944824
    4. '        ' → logprob: -8.252902030944824
    5. '   ' → logprob: -8.377902030944824
    6. '        
' → logprob: -9.502902030944824
    7. '<|end|>' → logprob: -9.627902030944824
    8. ' return' → logprob: -10.002902030944824
    9. '      ' → logprob: -10.127902030944824
    10. '     ' → logprob: -10.377902030944824

Token 104: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3311445713043213
    2. 'return' (adapté à ' return') → logprob: -1.5811445713043213
    3. '       ' → logprob: -2.5811445713043213
    4. '   ' → logprob: -8.331144332885742
    5. ' ' → logprob: -10.081144332885742
    6. '        
' → logprob: -10.456144332885742
    7. '    ' → logprob: -10.456144332885742
    8. '        ' → logprob: -10.706144332885742
    9. ' ' → logprob: -10.831144332885742
    10. ' True' → logprob: -10.831144332885742

Token 105: ' remaining' (ID: 15448)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16845621168613434
    2. ' remaining' → logprob: -1.9184561967849731
    3. 'True' → logprob: -5.168456077575684
    4. 'remaining' → logprob: -6.168456077575684
    5. ' index' → logprob: -8.168456077575684
    6. ' False' → logprob: -9.293456077575684
    7. 'index' → logprob: -11.793456077575684
    8. '   ' → logprob: -11.793456077575684
    9. ' ' → logprob: -12.293456077575684
    10. 'False' → logprob: -12.543456077575684

Token 106: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20157627761363983
    2. '>' → logprob: -1.7015762329101562
    3. ' >=' → logprob: -9.701576232910156
    4. ' ' → logprob: -10.701576232910156
    5. ' <=' → logprob: -11.326576232910156
    6. ' !=' → logprob: -11.451576232910156
    7. ' ==' → logprob: -11.451576232910156
    8. ' <' → logprob: -11.576576232910156
    9. '>=' → logprob: -11.576576232910156
    10. '==' → logprob: -11.701576232910156

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0339403972029686
    2. ' ' → logprob: -3.408940315246582
    3. '1' → logprob: -8.158940315246582
    4. '   ' → logprob: -12.783940315246582
    5. 'index' → logprob: -13.283940315246582
    6. '2' → logprob: -13.908940315246582
    7. ' ' → logprob: -14.033940315246582
    8. '  ' → logprob: -15.158940315246582
    9. '3' → logprob: -15.283940315246582
    10. '```' → logprob: -15.533940315246582

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001337624154984951
    2. ' ' → logprob: -6.75133752822876
    3. '1' → logprob: -8.751338005065918
    4. 'index' → logprob: -12.626338005065918
    5. '   ' → logprob: -12.751338005065918
    6. '2' → logprob: -13.876338005065918
    7. '3' → logprob: -15.001338005065918
    8. '```' → logprob: -15.251338005065918
    9. '10' → logprob: -15.376338005065918
    10. '5' → logprob: -15.751338005065918

Token 109: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' Digit' (ID: 91174)
  Prédit: ' Min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Min' → logprob: -0.9311638474464417
    2. ' Always' → logprob: -2.556163787841797
    3. ' Keep' → logprob: -2.681163787841797
    4. ' Use' → logprob: -3.056163787841797
    5. ' ' → logprob: -3.806163787841797
    6. ' Gre' → logprob: -3.931163787841797
    7. ' Random' → logprob: -3.931163787841797
    8. ' Avoid' → logprob: -4.181163787841797
    9. ' Forget' → logprob: -4.181163787841797
    10. ' Borrow' → logprob: -4.181163787841797

Token 112: 'Number' (ID: 3695)
  Prédit: 'Count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Count' → logprob: -0.7670443654060364
    2. 'Forget' → logprob: -1.6420443058013916
    3. 'Sum' → logprob: -3.0170443058013916
    4. 'Drop' → logprob: -3.1420443058013916
    5. 'Counting' → logprob: -3.6420443058013916
    6. 'Limit' → logprob: -3.6420443058013916
    7. 'Decrease' → logprob: -4.142044544219971
    8. 'Max' → logprob: -4.267044544219971
    9. 'By' → logprob: -4.267044544219971
    10. 'For' → logprob: -4.517044544219971

Token 113: ':
' (ID: 734)
  Prédit: 'Strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.0020641377195715904
    2. 'Count' → logprob: -6.877064228057861
    3. 'Forget' → logprob: -7.627064228057861
    4. 'Counting' → logprob: -9.377063751220703
    5. 'Of' → logprob: -9.877063751220703
    6. 'ing' → logprob: -10.127063751220703
    7. 'For' → logprob: -10.252063751220703
    8. 'Decrease' → logprob: -10.377063751220703
    9. 'Borrow' → logprob: -10.627063751220703
    10. 'Strateg' → logprob: -10.752063751220703

Token 114: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007690986152738333
    2. '   ' → logprob: -6.007690906524658
    3. '(' → logprob: -6.132690906524658
    4. ' :' → logprob: -6.132690906524658
    5. ':
' → logprob: -8.132691383361816
    6. '):' → logprob: -8.257691383361816
    7. '<|end|>' → logprob: -9.632691383361816
    8. '(object' → logprob: -9.757691383361816
    9. 'def' → logprob: -10.007691383361816
    10. ' def' → logprob: -10.632691383361816

Token 115: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6503582000732422
    2. ' def' → logprob: -0.9003582000732422
    3. 'def' → logprob: -2.650358200073242
    4. 'class' → logprob: -7.150358200073242
    5. '    ' → logprob: -8.900358200073242
    6. '  ' → logprob: -10.025358200073242
    7. ' ' → logprob: -10.150358200073242
    8. '	def' → logprob: -10.650358200073242
    9. ' class' → logprob: -11.150358200073242
    10. ' __' → logprob: -11.275358200073242

Token 116: '数字' (ID: 58226)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.161256343126297
    2. ' class' → logprob: -3.2862563133239746
    3. ' def' → logprob: -3.4112563133239746
    4. '   ' → logprob: -3.5362563133239746
    5. 'def' → logprob: -3.7862563133239746
    6. '__' → logprob: -5.786256313323975
    7. ' ' → logprob: -5.911256313323975
    8. 'digit' → logprob: -5.911256313323975
    9. 'int' → logprob: -6.036256313323975
    10. '"""' → logprob: -6.661256313323975

Token 117: 'を' (ID: 7277)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.5952423810958862
    2. ':' → logprob: -1.7202423810958862
    3. 'を' → logprob: -1.7202423810958862
    4. '   ' → logprob: -3.470242500305176
    5. '数' → logprob: -4.595242500305176
    6. '列' → logprob: -4.845242500305176
    7. ' ' → logprob: -5.095242500305176
    8. 'として' → logprob: -5.220242500305176
    9. 'class' → logprob: -5.470242500305176
    10. ' の' → logprob: -5.845242500305176

Token 118: '�' (ID: 11959)
  Prédit: '扱'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '扱' → logprob: -0.8881050944328308
    2. '   ' → logprob: -2.0131051540374756
    3. ' ' → logprob: -2.3881051540374756
    4. 'int' → logprob: -2.8881051540374756
    5. '表' → logprob: -3.2631051540374756
    6. '持' → logprob: -3.3881051540374756
    7. '数' → logprob: -3.5131051540374756
    8. 'class' → logprob: -4.0131049156188965
    9. '取り' → logprob: -4.0131049156188965
    10. ' int' → logprob: -4.5131049156188965

Token 119: '�' (ID: 223)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.2646922469139099
    2. '   ' → logprob: -2.3896923065185547
    3. 'を' → logprob: -3.1396923065185547
    4. 'class' → logprob: -3.6396923065185547
    5. ' ' → logprob: -4.389692306518555
    6. '表' → logprob: -4.514692306518555
    7. '\xe6\xa1' → logprob: -4.764692306518555
    8. ' の' → logprob: -5.139692306518555
    9. '数' → logprob: -5.139692306518555
    10. 'で' → logprob: -5.389692306518555

Token 120: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.47810810804367065
    2. 'class' → logprob: -2.9781081676483154
    3. 'を' → logprob: -2.9781081676483154
    4. '数' → logprob: -3.1031081676483154
    5. '表' → logprob: -3.1031081676483154
    6. '   ' → logprob: -3.6031081676483154
    7. '扱' → logprob: -3.7281081676483154
    8. '\xe6\xa1' → logprob: -4.103107929229736
    9. 'つ' → logprob: -4.228107929229736
    10. '持' → logprob: -4.478107929229736

Token 121: 'リ' (ID: 9007)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\xa1' → logprob: -0.1959824115037918
    2. '位' → logprob: -2.1959824562072754
    3. '数' → logprob: -4.320982456207275
    4. '長' → logprob: -5.070982456207275
    5. '文字' → logprob: -5.195982456207275
    6. '個' → logprob: -5.945982456207275
    7. '```' → logprob: -6.195982456207275
    8. 'class' → logprob: -6.195982456207275
    9. '__' → logprob: -6.320982456207275
    10. 'くら' → logprob: -6.695982456207275

Token 122: 'スト' (ID: 38236)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.1808069497346878
    2. 'スト' → logprob: -2.305806875228882
    3. 'ス' → logprob: -4.555807113647461
    4. 'ク' → logprob: -4.680807113647461
    5. 'ず' → logprob: -5.180807113647461
    6. 'か' → logprob: -5.430807113647461
    7. 'ンク' → logprob: -5.930807113647461
    8. 'ズ' → logprob: -5.930807113647461
    9. 'カ' → logprob: -6.180807113647461
    10. '数' → logprob: -6.180807113647461

Token 123: 'として' (ID: 176315)
  Prédit: 'として'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'として' → logprob: -0.48296669125556946
    2. 'の' → logprob: -1.107966661453247
    3. 'で' → logprob: -3.232966661453247
    4. ' of' → logprob: -5.732966899871826
    5. '[int' → logprob: -6.232966899871826
    6. 'と' → logprob: -6.357966899871826
    7. 'に' → logprob: -6.482966899871826
    8. ' の' → logprob: -6.857966899871826
    9. '[]' → logprob: -6.982966899871826
    10. '   ' → logprob: -7.482966899871826

Token 124: '抽' (ID: 79081)
  Prédit: '扱'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '扱' → logprob: -0.7371536493301392
    2. '表' → logprob: -1.2371536493301392
    3. '保持' → logprob: -1.8621536493301392
    4. '管理' → logprob: -3.2371535301208496
    5. '持' → logprob: -3.9871535301208496
    6. '格' → logprob: -4.98715353012085
    7. '保存' → logprob: -5.61215353012085
    8. '   ' → logprob: -5.98715353012085
    9. 'class' → logprob: -5.98715353012085
    10. ' 表' → logprob: -7.61215353012085

Token 125: '象' (ID: 27006)
  Prédit: '象'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '象' → logprob: -0.28523609042167664
    2. '出' → logprob: -2.535236120223999
    3. '成' → logprob: -3.035236120223999
    4. 'した' → logprob: -3.285236120223999
    5. 'class' → logprob: -3.910236120223999
    6. '```' → logprob: -4.16023588180542
    7. '扱' → logprob: -4.91023588180542
    8. '   ' → logprob: -5.28523588180542
    9. 'represent' → logprob: -5.41023588180542
    10. 'represented' → logprob: -6.03523588180542

Token 126: '化' (ID: 11415)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.49725282192230225
    2. '表' → logprob: -2.372252941131592
    3. 'として' → logprob: -2.747252941131592
    4. 'と' → logprob: -2.872252941131592
    5. '化' → logprob: -2.997252941131592
    6. 'を' → logprob: -3.622252941131592
    7. 'で' → logprob: -3.872252941131592
    8. '扱' → logprob: -4.497252941131592
    9. '値' → logprob: -4.622252941131592
    10. '数' → logprob: -4.622252941131592

Token 127: '"""
' (ID: 15611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15364323556423187
    2. 'の' → logprob: -2.9036431312561035
    3. 'class' → logprob: -3.9036431312561035
    4. ':' → logprob: -3.9036431312561035
    5. 'として' → logprob: -4.2786431312561035
    6. 'で' → logprob: -4.4036431312561035
    7. ':
' → logprob: -5.7786431312561035
    8. '```' → logprob: -5.9036431312561035
    9. ' ' → logprob: -6.1536431312561035
    10. '"""' → logprob: -6.1536431312561035

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09829020500183105
    2. ':' → logprob: -2.598290205001831
    3. '_' → logprob: -5.22329044342041
    4. '(' → logprob: -5.34829044342041
    5. '[' → logprob: -5.47329044342041
    6. 'def' → logprob: -6.97329044342041
    7. 'class' → logprob: -7.09829044342041
    8. 's' → logprob: -7.09829044342041
    9. ' ' → logprob: -7.72329044342041
    10. ':
' → logprob: -7.97329044342041

Token 129: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3217812776565552
    2. ' def' → logprob: -1.3217812776565552
    3. '   ' → logprob: -4.821781158447266
    4. 'class' → logprob: -8.571781158447266
    5. 'de' → logprob: -8.696781158447266
    6. 'd' → logprob: -10.571781158447266
    7. 'from' → logprob: -11.196781158447266
    8. ' ' → logprob: -11.446781158447266
    9. '```' → logprob: -12.571781158447266
    10. 'digits' → logprob: -12.696781158447266

Token 130: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3140835464000702
    2. '__' → logprob: -1.3140835762023926
    3. '_init' → logprob: -7.564083576202393
    4. 'def' → logprob: -8.439083099365234
    5. ' def' → logprob: -9.939083099365234
    6. '_' → logprob: -10.564083099365234
    7. 'init' → logprob: -12.064083099365234
    8. ' _' → logprob: -13.064083099365234
    9. ' ' → logprob: -13.314083099365234
    10. '___' → logprob: -13.814083099365234

Token 131: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.729906196298543e-06
    2. 'int' → logprob: -12.875009536743164
    3. 'ini' → logprob: -13.125009536743164
    4. 'in' → logprob: -13.125009536743164
    5. 'i' → logprob: -13.375009536743164
    6. 'inti' → logprob: -14.625009536743164
    7. 'inite' → logprob: -15.375009536743164
    8. ' init' → logprob: -15.750009536743164
    9. '   ' → logprob: -16.000009536743164
    10. 'initi' → logprob: -16.000009536743164

Token 132: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.08624418824911118
    2. '(self' → logprob: -2.9612441062927246
    3. '(' → logprob: -3.7112441062927246
    4. '__(
' → logprob: -5.711244106292725
    5. ' (' → logprob: -6.086244106292725
    6. '__' → logprob: -7.836244106292725
    7. '<|end|>' → logprob: -9.086244583129883
    8. 'self' → logprob: -9.211244583129883
    9. '__((' → logprob: -9.586244583129883
    10. '__(*' → logprob: -10.461244583129883

Token 133: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003821716527454555
    2. ' self' → logprob: -7.875381946563721
    3. '
' → logprob: -14.000382423400879
    4. '(self' → logprob: -15.125382423400879
    5. '__(' → logprob: -15.250382423400879
    6. ' ' → logprob: -15.375382423400879
    7. '	self' → logprob: -15.500382423400879
    8. '   ' → logprob: -16.375381469726562
    9. '0' → logprob: -16.500381469726562
    10. 's' → logprob: -17.125381469726562

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04662379249930382
    2. ' ,' → logprob: -3.421623706817627
    3. 'self' → logprob: -4.796623706817627
    4. '(self' → logprob: -6.296623706817627
    5. ' (' → logprob: -7.046623706817627
    6. ' self' → logprob: -7.796623706817627
    7. '<|end|>' → logprob: -8.296624183654785
    8. ',self' → logprob: -8.546624183654785
    9. ' ' → logprob: -8.671624183654785
    10. '(' → logprob: -8.796624183654785

Token 135: ' number' (ID: 2086)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.5614171028137207
    2. ' digits' → logprob: -1.0614171028137207
    3. 'number' → logprob: -3.6864171028137207
    4. 'value' → logprob: -3.8114171028137207
    5. ' value' → logprob: -4.561417102813721
    6. 'self' → logprob: -4.686417102813721
    7. ' number' → logprob: -4.936417102813721
    8. 'digit' → logprob: -5.436417102813721
    9. ' digit' → logprob: -6.311417102813721
    10. ' self' → logprob: -6.311417102813721

Token 136: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008169492706656456
    2. '):' → logprob: -4.883169651031494
    3. ' :' → logprob: -8.883169174194336
    4. ' ):' → logprob: -8.883169174194336
    5. '_:' → logprob: -9.508169174194336
    6. ':int' → logprob: -9.508169174194336
    7. '_str' → logprob: -9.883169174194336
    8. ':str' → logprob: -10.383169174194336
    9. ')' → logprob: -10.633169174194336
    10. '_value' → logprob: -12.008169174194336

Token 137: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.532103419303894
    2. 'str' → logprob: -0.907103419303894
    3. ' str' → logprob: -5.282103538513184
    4. ' int' → logprob: -6.032103538513184
    5. 'list' → logprob: -7.532103538513184
    6. ')' → logprob: -7.782103538513184
    7. '[int' → logprob: -8.407103538513184
    8. 'List' → logprob: -9.032103538513184
    9. '[str' → logprob: -9.907103538513184
    10. ' list' → logprob: -10.907103538513184

Token 138: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019772788509726524
    2. ',' → logprob: -4.644773006439209
    3. ')' → logprob: -5.144773006439209
    4. ':' → logprob: -5.894773006439209
    5. ' ):' → logprob: -6.644773006439209
    6. '):
' → logprob: -10.51977252960205
    7. '   ' → logprob: -10.76977252960205
    8. ' )' → logprob: -11.01977252960205
    9. ' ,' → logprob: -12.01977252960205
    10. '       ' → logprob: -13.01977252960205

Token 139: ' length' (ID: 5517)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.15255069732666016
    2. ' length' → logprob: -3.27755069732666
    3. ' digit' → logprob: -3.40255069732666
    4. 'digits' → logprob: -3.90255069732666
    5. ' base' → logprob: -4.15255069732666
    6. ' max' → logprob: -4.27755069732666
    7. ' num' → logprob: -4.52755069732666
    8. ' ' → logprob: -6.27755069732666
    9. ' n' → logprob: -6.40255069732666
    10. 'digit' → logprob: -6.52755069732666

Token 140: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011124100536108017
    2. '=' → logprob: -4.886124134063721
    3. '):' → logprob: -5.886124134063721
    4. '=None' → logprob: -7.511124134063721
    5. ':int' → logprob: -9.136123657226562
    6. ')' → logprob: -9.761123657226562
    7. ' :' → logprob: -11.636123657226562
    8. ',' → logprob: -12.261123657226562
    9. ' ):' → logprob: -12.636123657226562
    10. '=int' → logprob: -13.386123657226562

Token 141: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13334429264068604
    2. 'None' → logprob: -2.8833441734313965
    3. ' int' → logprob: -3.3833441734313965
    4. ' None' → logprob: -3.5083441734313965
    5. '10' → logprob: -6.7583441734313965
    6. ' ' → logprob: -6.8833441734313965
    7. '=None' → logprob: -7.3833441734313965
    8. ')' → logprob: -7.5083441734313965
    9. ':int' → logprob: -8.008344650268555
    10. '):' → logprob: -8.633344650268555

Token 142: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02754359319806099
    2. ',' → logprob: -4.027543544769287
    3. ':' → logprob: -5.527543544769287
    4. ')' → logprob: -5.527543544769287
    5. '=' → logprob: -6.777543544769287
    6. ' ):' → logprob: -9.152544021606445
    7. '):
' → logprob: -10.027544021606445
    8. '=None' → logprob: -10.152544021606445
    9. '   ' → logprob: -10.277544021606445
    10. ' ' → logprob: -11.277544021606445

Token 143: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.9481877684593201
    2. 'None' → logprob: -1.6981878280639648
    3. ' ' → logprob: -2.073187828063965
    4. '0' → logprob: -2.323187828063965
    5. '6' → logprob: -2.823187828063965
    6. '4' → logprob: -2.948187828063965
    7. '10' → logprob: -3.323187828063965
    8. '1' → logprob: -3.698187828063965
    9. '5' → logprob: -4.198187828063965
    10. '8' → logprob: -4.948187828063965

Token 144: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022887103259563446
    2. ')' → logprob: -6.377288818359375
    3. ',' → logprob: -7.877288818359375
    4. ' ):' → logprob: -8.877288818359375
    5. ':' → logprob: -10.127288818359375
    6. '=None' → logprob: -11.627288818359375
    7. '):
' → logprob: -12.127288818359375
    8. '   ' → logprob: -12.627288818359375
    9. '=' → logprob: -12.627288818359375
    10. ' ' → logprob: -13.127288818359375

Token 145: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35167765617370605
    2. ' ):' → logprob: -2.101677656173706
    3. ':' → logprob: -2.351677656173706
    4. '       ' → logprob: -3.601677656173706
    5. ',' → logprob: -3.601677656173706
    6. ' :' → logprob: -4.851677894592285
    7. ')' → logprob: -5.351677894592285
    8. ' )' → logprob: -5.351677894592285
    9. ' ,' → logprob: -6.101677894592285
    10. '   ' → logprob: -6.101677894592285

Token 146: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2170965075492859
    2. 'self' (adapté à ' self') → logprob: -1.7170965671539307
    3. ' if' → logprob: -4.717096328735352
    4. ' s' → logprob: -6.092096328735352
    5. '       ' → logprob: -6.342096328735352
    6. 'if' → logprob: -6.717096328735352
    7. 's' → logprob: -8.217096328735352
    8. ' digits' → logprob: -8.217096328735352
    9. ' number' → logprob: -8.592096328735352
    10. 'number' → logprob: -9.092096328735352

Token 147: '.d' (ID: 1380)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5440936088562012
    2. ':' → logprob: -1.2940936088562012
    3. '=' → logprob: -2.419093608856201
    4. ' =' → logprob: -4.169093608856201
    5. '.number' → logprob: -4.669093608856201
    6. ' .' → logprob: -5.044093608856201
    7. 'number' → logprob: -5.169093608856201
    8. ' ' → logprob: -5.544093608856201
    9. ',' → logprob: -5.919093608856201
    10. '_number' → logprob: -6.044093608856201

Token 148: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0002753981971181929
    2. 'igit' → logprob: -8.500275611877441
    3. 'ata' → logprob: -10.250275611877441
    4. 'ig' → logprob: -11.500275611877441
    5. '   ' → logprob: -12.375275611877441
    6. 'ef' → logprob: -12.750275611877441
    7. 'i' → logprob: -12.750275611877441
    8. '_' → logprob: -12.875275611877441
    9. 'digits' → logprob: -13.375275611877441
    10. '_digits' → logprob: -13.500275611877441

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0889798179268837
    2. '=' → logprob: -2.463979721069336
    3. '_' → logprob: -11.713979721069336
    4. '=[]' → logprob: -11.838979721069336
    5. ' =[' → logprob: -12.213979721069336
    6. ':' → logprob: -12.713979721069336
    7. ',' → logprob: -12.838979721069336
    8. '[' → logprob: -12.963979721069336
    9. '<|end|>' → logprob: -13.213979721069336
    10. '＝' → logprob: -13.213979721069336

Token 150: ' self' (ID: 1051)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6469292044639587
    2. ' list' → logprob: -1.0219292640686035
    3. 'list' → logprob: -3.0219292640686035
    4. '[' → logprob: -3.3969292640686035
    5. '[list' → logprob: -3.7719292640686035
    6. '[number' → logprob: -4.8969292640686035
    7. '[]' → logprob: -6.7719292640686035
    8. '[str' → logprob: -6.7719292640686035
    9. ' []' → logprob: -7.2719292640686035
    10. '[len' → logprob: -8.271928787231445

Token 151: '._' (ID: 2697)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.593476414680481
    2. '[str' → logprob: -1.968476414680481
    3. 'list' → logprob: -2.8434762954711914
    4. 'str' → logprob: -2.8434762954711914
    5. '[]' → logprob: -3.0934762954711914
    6. '[number' → logprob: -3.5934762954711914
    7. ' [' → logprob: -4.093476295471191
    8. '[len' → logprob: -4.093476295471191
    9. 'ist' → logprob: -4.093476295471191
    10. 'digits' → logprob: -4.468476295471191

Token 152: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3938583433628082
    2. 'int' → logprob: -1.8938583135604858
    3. 'number' → logprob: -2.6438584327697754
    4. 'get' → logprob: -3.3938584327697754
    5. 'extract' → logprob: -3.8938584327697754
    6. 'convert' → logprob: -4.518858432769775
    7. 'pad' → logprob: -4.518858432769775
    8. 'split' → logprob: -5.143858432769775
    9. 'digits' → logprob: -5.143858432769775
    10. 'parse' → logprob: -5.268858432769775

Token 153: '_digits' (ID: 108638)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.31043702363967896
    2. '_digits' → logprob: -1.6854369640350342
    3. 'list' → logprob: -3.310436964035034
    4. 'digits' → logprob: -4.185437202453613
    5. '_digit' → logprob: -4.310437202453613
    6. 'digit' → logprob: -4.560437202453613
    7. 'int' → logprob: -6.685437202453613
    8. 'igits' → logprob: -7.060437202453613
    9. '_' → logprob: -7.185437202453613
    10. '_int' → logprob: -7.185437202453613

Token 154: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0008129627676680684
    2. '(' → logprob: -7.125813007354736
    3. 'number' → logprob: -12.125812530517578
    4. ' (' → logprob: -14.125812530517578
    5. '[number' → logprob: -14.375812530517578
    6. '()' → logprob: -14.625812530517578
    7. '(n' → logprob: -15.000812530517578
    8. '(
' → logprob: -15.625812530517578
    9. '(numbers' → logprob: -15.750812530517578
    10. '((' → logprob: -15.750812530517578

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47504717111587524
    2. ',' → logprob: -0.9750471711158752
    3. '   ' → logprob: -8.47504711151123
    4. ' )' → logprob: -8.60004711151123
    5. '       ' → logprob: -8.97504711151123
    6. ' ,' → logprob: -9.47504711151123
    7. '(' → logprob: -9.72504711151123
    8. ' if' → logprob: -9.85004711151123
    9. '(number' → logprob: -10.22504711151123
    10. 'number' → logprob: -10.47504711151123

Token 156: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09288867563009262
    2. '       ' → logprob: -2.842888593673706
    3. 'if' (adapté à ' if') → logprob: -3.592888593673706
    4. '        ' → logprob: -6.217888832092285
    5. ' ' → logprob: -7.592888832092285
    6. '   ' → logprob: -9.467888832092285
    7. '<|end|>' → logprob: -9.467888832092285
    8. ' self' → logprob: -9.967888832092285
    9. 'self' → logprob: -9.967888832092285
    10. '    ' → logprob: -10.342888832092285

Token 158: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.011059019714593887
    2. 'length' → logprob: -4.511058807373047
    3. '(length' → logprob: -12.261058807373047
    4. ' not' → logprob: -12.511058807373047
    5. ' len' → logprob: -13.886058807373047
    6. '	length' → logprob: -14.261058807373047
    7. 'len' → logprob: -15.386058807373047
    8. '    ' → logprob: -15.511058807373047
    9. ' ' → logprob: -16.011058807373047
    10. ' leng' → logprob: -16.136058807373047

Token 159: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011755794286727905
    2. ' and' → logprob: -4.63675594329834
    3. ' >' → logprob: -6.88675594329834
    4. ' ' → logprob: -8.01175594329834
    5. 'and' → logprob: -8.38675594329834
    6. 'is' → logprob: -8.88675594329834
    7. '>' → logprob: -8.88675594329834
    8. ' not' → logprob: -9.26175594329834
    9. '<|end|>' → logprob: -11.01175594329834
    10. ' if' → logprob: -12.13675594329834

Token 160: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3445117175579071
    2. 'not' → logprob: -1.4695117473602295
    3. 'None' → logprob: -3.2195117473602295
    4. ' None' → logprob: -3.8445117473602295
    5. ' ' → logprob: -12.094511985778809
    6. '	not' → logprob: -12.219511985778809
    7. '   ' → logprob: -12.844511985778809
    8. 'Not' → logprob: -12.844511985778809
    9. 'none' → logprob: -13.344511985778809
    10. '    ' → logprob: -14.094511985778809

Token 161: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10020958632230759
    2. ' None' → logprob: -2.3502094745635986
    3. '(None' → logprob: -13.47520923614502
    4. '_None' → logprob: -14.10020923614502
    5. 'none' → logprob: -15.10020923614502
    6. '_none' → logprob: -15.47520923614502
    7. 'not' → logprob: -15.85020923614502
    8. '   ' → logprob: -16.600210189819336
    9. ' ' → logprob: -17.350210189819336
    10. ' not' → logprob: -17.725210189819336

Token 162: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.030903520062565804
    2. ':' → logprob: -3.7809035778045654
    3. 'and' → logprob: -4.905903339385986
    4. ':
' → logprob: -9.905903816223145
    5. '>' → logprob: -10.030903816223145
    6. ' :' → logprob: -10.030903816223145
    7. ' >' → logprob: -10.780903816223145
    8. ' ' → logprob: -11.155903816223145
    9. '<|end|>' → logprob: -11.280903816223145
    10. ',' → logprob: -11.530903816223145

Token 163: ' length' (ID: 5517)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.02511625364422798
    2. ' length' → logprob: -3.900116205215454
    3. 'len' → logprob: -5.400116443634033
    4. 'length' → logprob: -10.275115966796875
    5. '(len' → logprob: -12.025115966796875
    6. '	len' → logprob: -12.150115966796875
    7. '<len' → logprob: -15.275115966796875
    8. ' ' → logprob: -15.400115966796875
    9. '	length' → logprob: -15.400115966796875
    10. ' ' → logprob: -15.525115966796875

Token 164: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.016867980360984802
    2. '>' → logprob: -4.1418681144714355
    3. ' ' → logprob: -7.1418681144714355
    4. '<|end|>' → logprob: -11.266867637634277
    5. ' ' → logprob: -11.516867637634277
    6. ' <' → logprob: -12.141867637634277
    7. ' !=' → logprob: -12.391867637634277
    8. '  ' → logprob: -13.641867637634277
    9. '<|end|>' → logprob: -13.641867637634277
    10. ' is' → logprob: -14.016867637634277

Token 165: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2014646977186203
    2. ' len' → logprob: -1.7014646530151367
    3. '0' → logprob: -10.201464653015137
    4. '=len' → logprob: -12.201464653015137
    5. ' ' → logprob: -12.451464653015137
    6. '	len' → logprob: -12.576464653015137
    7. '(len' → logprob: -13.826464653015137
    8. '   ' → logprob: -14.701464653015137
    9. '  ' → logprob: -15.701464653015137
    10. '[len' → logprob: -15.951464653015137

Token 166: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000498701527249068
    2. '(' → logprob: -7.6254987716674805
    3. ' self' → logprob: -11.87549877166748
    4. 'self' → logprob: -12.62549877166748
    5. ' (' → logprob: -15.62549877166748
    6. '(
' → logprob: -16.000497817993164
    7. '(this' → logprob: -16.125497817993164
    8. '	self' → logprob: -17.500497817993164
    9. '=self' → logprob: -19.125497817993164
    10. ' ' → logprob: -19.250497817993164

Token 167: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00015335931675508618
    2. '.' → logprob: -9.000153541564941
    3. ' .' → logprob: -11.125153541564941
    4. 'digits' → logprob: -11.500153541564941
    5. ')' → logprob: -13.375153541564941
    6. ' ' → logprob: -14.125153541564941
    7. ').' → logprob: -14.250153541564941
    8. '	d' → logprob: -14.875153541564941
    9. 'd' → logprob: -15.000153541564941
    10. ' digits' → logprob: -15.375153541564941

Token 168: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0001831565605243668
    2. 'digits' → logprob: -9.00018310546875
    3. 'igts' → logprob: -10.37518310546875
    4. 'ig' → logprob: -11.75018310546875
    5. 'igit' → logprob: -11.75018310546875
    6. 'igs' → logprob: -12.50018310546875
    7. '_digits' → logprob: -13.12518310546875
    8. 'its' → logprob: -13.75018310546875
    9. 'igita' → logprob: -14.62518310546875
    10. 'igis' → logprob: -14.62518310546875

Token 169: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20855318009853363
    2. '):' → logprob: -1.7085531949996948
    3. ' ):' → logprob: -5.958553314208984
    4. ' :' → logprob: -6.083553314208984
    5. '):
' → logprob: -6.833553314208984
    6. ':
' → logprob: -7.083553314208984
    7. '():' → logprob: -9.208553314208984
    8. ' ):
' → logprob: -10.333553314208984
    9. '：' → logprob: -10.458553314208984
    10. ' and' → logprob: -10.583553314208984

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41941308975219727
    2. ':' → logprob: -1.1694130897521973
    3. ',' → logprob: -4.294413089752197
    4. ':
' → logprob: -5.044413089752197
    5. '       ' → logprob: -5.169413089752197
    6. 'self' → logprob: -6.919413089752197
    7. '<|end|>' → logprob: -7.044413089752197
    8. ' self' → logprob: -7.169413089752197
    9. '):' → logprob: -7.169413089752197
    10. '        ' → logprob: -7.544413089752197

Token 171: ' #' (ID: 1069)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5344718098640442
    2. 'self' → logprob: -0.9094718098640442
    3. '           ' → logprob: -4.7844719886779785
    4. ' for' → logprob: -7.2844719886779785
    5. 'for' → logprob: -8.03447151184082
    6. '0' → logprob: -8.03447151184082
    7. 'diff' → logprob: -8.15947151184082
    8. ' diff' → logprob: -8.40947151184082
    9. ' while' → logprob: -8.53447151184082
    10. 'while' → logprob: -8.78447151184082

Token 172: ' 上' (ID: 30555)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01664559729397297
    2. ' self' → logprob: -4.391645431518555
    3. 'pad' → logprob: -6.516645431518555
    4. 'padding' → logprob: -6.891645431518555
    5. 'diff' → logprob: -7.516645431518555
    6. 'for' → logprob: -8.016645431518555
    7. '       ' → logprob: -8.766645431518555
    8. 'prepend' → logprob: -9.266645431518555
    9. 'zeros' → logprob: -9.391645431518555
    10. 'extra' → logprob: -9.766645431518555

Token 173: '位' (ID: 9838)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.740074098110199
    2. '           ' → logprob: -1.1150741577148438
    3. '0' → logprob: -2.2400741577148438
    4. '乗' → logprob: -3.6150741577148438
    5. '     ' → logprob: -4.240074157714844
    6. '   ' → logprob: -4.990074157714844
    7. '      ' → logprob: -4.990074157714844
    8. '限' → logprob: -4.990074157714844
    9. 'の' → logprob: -5.365074157714844
    10. '               ' → logprob: -6.115074157714844

Token 174: '�' (ID: 11959)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8113948106765747
    2. ' zeros' → logprob: -1.1863948106765747
    3. 'digits' → logprob: -2.311394691467285
    4. 'zeros' → logprob: -2.561394691467285
    5. '0' → logprob: -3.686394691467285
    6. ' digits' → logprob: -3.936394691467285
    7. ' [' → logprob: -4.811394691467285
    8. 'ゼ' → logprob: -5.561394691467285
    9. ' for' → logprob: -6.061394691467285
    10. 'の' → logprob: -6.061394691467285

Token 175: '�' (ID: 223)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6454551219940186
    2. 'の' → logprob: -1.6454551219940186
    3. ' ' → logprob: -2.7704551219940186
    4. '     ' → logprob: -3.2704551219940186
    5. '      ' → logprob: -3.6454551219940186
    6. '        ' → logprob: -3.7704551219940186
    7. ' zeros' → logprob: -3.8954551219940186
    8. '    ' → logprob: -4.270455360412598
    9. ' の' → logprob: -4.270455360412598
    10. '\xe6\xa1' → logprob: -4.395455360412598

Token 176: 'に' (ID: 5280)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\xa1' → logprob: -0.7697821259498596
    2. '位' → logprob: -0.8947821259498596
    3. '0' → logprob: -2.894782066345215
    4. ' zeros' → logprob: -4.019782066345215
    5. 'zeros' → logprob: -4.269782066345215
    6. 'ゼ' → logprob: -4.519782066345215
    7. 'け' → logprob: -4.894782066345215
    8. 'の' → logprob: -5.269782066345215
    9. 'zero' → logprob: -6.394782066345215
    10. ' ' → logprob: -6.519782066345215

Token 177: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013878691010177135
    2. '0' → logprob: -4.51387882232666
    3. ' [' → logprob: -6.01387882232666
    4. 'zeros' → logprob: -8.38887882232666
    5. 'self' → logprob: -10.26387882232666
    6. ' zeros' → logprob: -10.26387882232666
    7. 'ゼ' → logprob: -11.26387882232666
    8. '   ' → logprob: -11.26387882232666
    9. '[self' → logprob: -11.63887882232666
    10. 'for' → logprob: -11.63887882232666

Token 178: '�' (ID: 6252)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.2720298767089844
    2. '\xe5\x9f' → logprob: -1.6470298767089844
    3. 'padding' → logprob: -3.5220298767089844
    4. '補' → logprob: -5.022029876708984
    5. ' を' → logprob: -5.272029876708984
    6. 'fill' → logprob: -6.772029876708984
    7. '填' → logprob: -7.647029876708984
    8. 'で' → logprob: -7.772029876708984
    9. ' padding' → logprob: -7.772029876708984
    10. ' \xe5\x9f' → logprob: -8.022029876708984

Token 179: '�' (ID: 233)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.05770174413919449
    2. ' を' → logprob: -3.432701826095581
    3. '0' → logprob: -4.682701587677002
    4. '\xe5\x9f' → logprob: -5.682701587677002
    5. 'fill' → logprob: -5.932701587677002
    6. 'padding' → logprob: -6.182701587677002
    7. '補' → logprob: -6.432701587677002
    8. 'で' → logprob: -6.557701587677002
    9. '00' → logprob: -7.682701587677002
    10. '填' → logprob: -7.682701587677002

Token 180: 'め' (ID: 17693)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.3922968804836273
    2. '\xe5\x9f' → logprob: -1.5172969102859497
    3. '填' → logprob: -3.64229679107666
    4. '補' → logprob: -4.51729679107666
    5. 'padding' → logprob: -4.64229679107666
    6. 'fill' → logprob: -4.64229679107666
    7. '0' → logprob: -4.76729679107666
    8. '\xe8\xa9' → logprob: -5.39229679107666
    9. '   ' → logprob: -5.39229679107666
    10. 'る' → logprob: -6.01729679107666

Token 181: 'を' (ID: 7277)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.6067977547645569
    2. 'を' → logprob: -1.231797695159912
    3. 'て' → logprob: -2.356797695159912
    4. 'た' → logprob: -3.731797695159912
    5. 'つ' → logprob: -4.231797695159912
    6. 'す' → logprob: -5.356797695159912
    7. 'padding' → logprob: -6.106797695159912
    8. 'が' → logprob: -6.356797695159912
    9. 'け' → logprob: -6.481797695159912
    10. 'の' → logprob: -6.481797695159912

Token 182: 'する' (ID: 39065)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe5\x9f' → logprob: -1.0835567712783813
    2. '追加' → logprob: -1.0835567712783813
    3. '補' → logprob: -1.8335567712783813
    4. 'つ' → logprob: -2.833556652069092
    5. 'extend' → logprob: -3.583556652069092
    6. '付' → logprob: -4.208556652069092
    7. '足' → logprob: -4.333556652069092
    8. 'fill' → logprob: -4.708556652069092
    9. '入' → logprob: -5.083556652069092
    10. 'insert' → logprob: -5.333556652069092

Token 183: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: '           ' (ID: 352)
  Prédit: ' を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' を' → logprob: -0.9209164381027222
    2. 'を' → logprob: -2.1709165573120117
    3. ' padding' → logprob: -2.2959165573120117
    4. ' fill' → logprob: -2.4209165573120117
    5. 'padding' → logprob: -2.6709165573120117
    6. ' ' → logprob: -2.9209165573120117
    7. 'fill' → logprob: -3.2959165573120117
    8. '補' → logprob: -3.6709165573120117
    9. '   ' → logprob: -3.9209165573120117
    10. '-padding' → logprob: -4.795916557312012

Token 185: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5695626735687256
    2. ' self' → logprob: -1.0695626735687256
    3. ' for' → logprob: -3.1945626735687256
    4. 'for' → logprob: -3.3195626735687256
    5. '           ' → logprob: -4.944562911987305
    6. '       ' → logprob: -6.819562911987305
    7. '    ' → logprob: -7.319562911987305
    8. '   ' → logprob: -7.444562911987305
    9. ' ' → logprob: -7.569562911987305
    10. ' while' → logprob: -7.819562911987305

Token 186: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.0059976475313305855
    2. '.' → logprob: -5.755997657775879
    3. 'digits' → logprob: -6.255997657775879
    4. ' .' → logprob: -7.755997657775879
    5. 'd' → logprob: -8.630997657775879
    6. '._' → logprob: -8.880997657775879
    7. '_digits' → logprob: -9.630997657775879
    8. ' digits' → logprob: -11.005997657775879
    9. 's' → logprob: -11.380997657775879
    10. '_d' → logprob: -11.380997657775879

Token 187: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0032627959735691547
    2. 'igit' → logprob: -7.003262996673584
    3. 'digits' → logprob: -7.128262996673584
    4. '_digits' → logprob: -7.753262996673584
    5. 'i' → logprob: -8.503262519836426
    6. '_append' → logprob: -8.503262519836426
    7. '_' → logprob: -8.753262519836426
    8. '_pad' → logprob: -9.378262519836426
    9. '_fill' → logprob: -9.503262519836426
    10. 'append' → logprob: -9.628262519836426

Token 188: '.extend' (ID: 34151)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3492451608181
    2. ' =' → logprob: -1.2242451906204224
    3. '.insert' → logprob: -7.599245071411133
    4. '=[' → logprob: -8.849245071411133
    5. ' =[' → logprob: -9.349245071411133
    6. '＝' → logprob: -10.599245071411133
    7. '[' → logprob: -11.349245071411133
    8. '.extend' → logprob: -11.474245071411133
    9. 'insert' → logprob: -12.099245071411133
    10. '[:' → logprob: -12.349245071411133

Token 189: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0001519325451226905
    2. '[' → logprob: -9.375151634216309
    3. '(' → logprob: -9.625151634216309
    4. '(
' → logprob: -14.875151634216309
    5. ' ([' → logprob: -15.375151634216309
    6. ' [' → logprob: -15.500151634216309
    7. '   ' → logprob: -16.375152587890625
    8. '(([' → logprob: -17.250152587890625
    9. '（' → logprob: -17.500152587890625
    10. '([-' → logprob: -17.750152587890625

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007112398743629456
    2. ' ' → logprob: -7.250711441040039
    3. '   ' → logprob: -13.875711441040039
    4. '  ' → logprob: -16.12571144104004
    5. '０' → logprob: -17.12571144104004
    6. '    ' → logprob: -17.25071144104004
    7. '       ' → logprob: -17.56321144104004
    8. '00' → logprob: -17.68821144104004
    9. '```' → logprob: -18.06321144104004
    10. '۰' → logprob: -18.06321144104004

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010142299579456449
    2. ']*(' → logprob: -7.376014232635498
    3. ' for' → logprob: -8.25101375579834
    4. ']*' → logprob: -9.12601375579834
    5. 'for' → logprob: -11.12601375579834
    6. ' ]' → logprob: -13.12601375579834
    7. ']+' → logprob: -15.00101375579834
    8. '   ' → logprob: -15.50101375579834
    9. '	for' → logprob: -16.001014709472656
    10. '0' → logprob: -16.501014709472656

Token 192: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12574143707752228
    2. ']' → logprob: -2.500741481781006
    3. 'for' → logprob: -3.750741481781006
    4. ']*(' → logprob: -5.125741481781006
    5. ' *' → logprob: -5.625741481781006
    6. '   ' → logprob: -7.500741481781006
    7. ',' → logprob: -7.625741481781006
    8. ')' → logprob: -7.750741481781006
    9. '           ' → logprob: -7.875741481781006
    10. '       ' → logprob: -8.250741004943848

Token 193: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6932722926139832
    2. '(length' → logprob: -0.6932722926139832
    3. '(' → logprob: -9.693272590637207
    4. '   ' → logprob: -10.818272590637207
    5. '(len' → logprob: -11.818272590637207
    6. '(abs' → logprob: -11.943272590637207
    7. '[length' → logprob: -12.068272590637207
    8. '  ' → logprob: -12.193272590637207
    9. '(index' → logprob: -12.443272590637207
    10. '(number' → logprob: -12.568272590637207

Token 194: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.07586681842803955
    2. ' length' → logprob: -2.70086669921875
    3. '(length' → logprob: -5.20086669921875
    4. ' (' → logprob: -7.95086669921875
    5. '   ' → logprob: -11.07586669921875
    6. 'len' → logprob: -11.70086669921875
    7. '[length' → logprob: -12.20086669921875
    8. '	length' → logprob: -12.45086669921875
    9. '  ' → logprob: -13.07586669921875
    10. ',length' → logprob: -13.20086669921875

Token 195: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0016301940195262432
    2. '-' → logprob: -7.0016303062438965
    3. ' ' → logprob: -7.3766303062438965
    4. '   ' → logprob: -9.876629829406738
    5. '-l' → logprob: -11.126629829406738
    6. '  ' → logprob: -11.251629829406738
    7. '[len' → logprob: -12.126629829406738
    8. '    ' → logprob: -12.751629829406738
    9. '[' → logprob: -13.251629829406738
    10. ')' → logprob: -13.501629829406738

Token 196: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.023249205201864243
    2. ' len' → logprob: -3.7732491493225098
    3. '(len' → logprob: -12.648249626159668
    4. '	len' → logprob: -15.273249626159668
    5. ' ' → logprob: -15.898249626159668
    6. '   ' → logprob: -16.27324867248535
    7. '[len' → logprob: -17.89824867248535
    8. '=len' → logprob: -18.14824867248535
    9. '  ' → logprob: -18.39824867248535
    10. '    ' → logprob: -18.64824867248535

Token 197: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.2576454335358e-05
    2. '(' → logprob: -9.750092506408691
    3. 'self' → logprob: -10.375092506408691
    4. ' self' → logprob: -14.000092506408691
    5. '(
' → logprob: -14.500092506408691
    6. ' (' → logprob: -14.875092506408691
    7. '   ' → logprob: -14.875092506408691
    8. ' ' → logprob: -15.375092506408691
    9. '       ' → logprob: -15.875092506408691
    10. '[self' → logprob: -16.125093460083008

Token 198: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.0003323665587231517
    2. ' .' → logprob: -8.750332832336426
    3. 'digits' → logprob: -9.375332832336426
    4. '.' → logprob: -9.625332832336426
    5. 'd' → logprob: -12.000332832336426
    6. 'Digits' → logprob: -13.000332832336426
    7. ').' → logprob: -13.437832832336426
    8. '.
' → logprob: -13.500332832336426
    9. ' digits' → logprob: -13.562832832336426
    10. ' ' → logprob: -13.750332832336426

Token 199: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.016627075150609016
    2. 'digits' → logprob: -4.141627311706543
    3. 'd' → logprob: -8.766627311706543
    4. '_digits' → logprob: -9.391627311706543
    5. '```' → logprob: -10.266627311706543
    6. '   ' → logprob: -10.641627311706543
    7. '）' → logprob: -10.641627311706543
    8. ' digits' → logprob: -10.766627311706543
    9. '(d' → logprob: -10.766627311706543
    10. 'の' → logprob: -10.766627311706543

Token 200: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00047261794679798186
    2. '))
' → logprob: -8.000473022460938
    3. ' ))' → logprob: -9.625473022460938
    4. ')' → logprob: -10.000473022460938
    5. ')))' → logprob: -11.125473022460938
    6. ' ' → logprob: -12.750473022460938
    7. '))

' → logprob: -12.750473022460938
    8. '       ' → logprob: -12.875473022460938
    9. '   ' → logprob: -13.750473022460938
    10. '()))' → logprob: -15.500473022460938

Token 201: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2838146984577179
    2. '       ' → logprob: -2.2838146686553955
    3. ' ' → logprob: -3.0338146686553955
    4. 'の' → logprob: -4.283814907073975
    5. '    ' → logprob: -4.408814907073975
    6. ')' → logprob: -4.533814907073975
    7. '_' → logprob: -4.783814907073975
    8. 'def' → logprob: -4.908814907073975
    9. 'を' → logprob: -5.283814907073975
    10. '[' → logprob: -5.408814907073975

Token 203: 'staticmethod' (ID: 53164)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.008665391243994236
    2. 'staticmethod' → logprob: -4.758665561676025
    3. 'classmethod' → logprob: -10.008665084838867
    4. '_property' → logprob: -12.508665084838867
    5. ' property' → logprob: -13.758665084838867
    6. '@property' → logprob: -14.758665084838867
    7. 'pro' → logprob: -15.133665084838867
    8. '_' → logprob: -16.008665084838867
    9. 'dat' → logprob: -16.383665084838867
    10. 'proper' → logprob: -16.508665084838867

Token 204: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27675193548202515
    2. ' def' → logprob: -1.52675199508667
    3. '
' → logprob: -3.90175199508667
    4. '   ' → logprob: -5.52675199508667
    5. '_def' → logprob: -9.401751518249512
    6. ' ' → logprob: -9.526751518249512
    7. '  
' → logprob: -10.026751518249512
    8. '    
' → logprob: -10.151751518249512
    9. '	def' → logprob: -10.276751518249512
    10. '(' → logprob: -10.901751518249512

Token 205: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02996128797531128
    2. ' def' → logprob: -3.529961347579956
    3. '   ' → logprob: -8.904961585998535
    4. '
' → logprob: -9.904961585998535
    5. ' ' → logprob: -11.404961585998535
    6. '_def' → logprob: -12.029961585998535
    7. '	def' → logprob: -12.529961585998535
    8. '    
' → logprob: -13.654961585998535
    9. '<|end|>' → logprob: -13.654961585998535
    10. '  
' → logprob: -14.154961585998535

Token 206: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016182278341148049
    2. ' def' → logprob: -8.750162124633789
    3. 'to' → logprob: -12.875162124633789
    4. '_to' → logprob: -14.875162124633789
    5. '
' → logprob: -15.125162124633789
    6. 'from' → logprob: -16.87516212463379
    7. '_def' → logprob: -18.75016212463379
    8. ' to' → logprob: -19.25016212463379
    9. '	def' → logprob: -19.37516212463379
    10. '   ' → logprob: -19.37516212463379

Token 207: ' _' (ID: 1175)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.000363590574124828
    2. '_from' → logprob: -9.00036334991455
    3. ' _' → logprob: -9.50036334991455
    4. ' to' → logprob: -9.75036334991455
    5. 'to' → logprob: -10.12536334991455
    6. 'def' → logprob: -10.37536334991455
    7. '_t' → logprob: -11.12536334991455
    8. '_' → logprob: -12.75036334991455
    9. '_digits' → logprob: -13.12536334991455
    10. ' def' → logprob: -13.37536334991455

Token 208: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -5.512236498361744e-07
    2. '_to' → logprob: -15.250000953674316
    3. ' to' → logprob: -15.750000953674316
    4. '```' → logprob: -17.5
    5. '(to' → logprob: -17.75
    6. 'def' → logprob: -18.25
    7. 'from' → logprob: -18.5
    8. '
' → logprob: -18.625
    9. 'int' → logprob: -19.0
    10. 'convert' → logprob: -19.375

Token 209: '_digits' (ID: 108638)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.16180333495140076
    2. '_digits' → logprob: -1.9118033647537231
    3. 'list' → logprob: -7.161803245544434
    4. '_list' → logprob: -7.286803245544434
    5. 'int' → logprob: -9.161803245544434
    6. ' digits' → logprob: -12.661803245544434
    7. '_int' → logprob: -13.536803245544434
    8. '```' → logprob: -13.536803245544434
    9. 'def' → logprob: -13.661803245544434
    10. 'ints' → logprob: -14.161803245544434

Token 210: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.025444621220231056
    2. '(' → logprob: -3.775444507598877
    3. '(n' → logprob: -6.400444507598877
    4. '(num' → logprob: -7.775444507598877
    5. ' (' → logprob: -9.150444984436035
    6. '(x' → logprob: -12.775444984436035
    7. '(value' → logprob: -12.900444984436035
    8. '(numero' → logprob: -13.400444984436035
    9. '(integer' → logprob: -14.400444984436035
    10. '（' → logprob: -14.525444984436035

Token 211: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.259272038936615
    2. '):' → logprob: -1.5092720985412598
    3. ',' → logprob: -5.00927209854126
    4. ':number' → logprob: -8.509271621704102
    5. ')' → logprob: -8.634271621704102
    6. '):
' → logprob: -8.884271621704102
    7. ' ):' → logprob: -10.009271621704102
    8. ':int' → logprob: -10.134271621704102
    9. ' :' → logprob: -11.134271621704102
    10. '   ' → logprob: -11.884271621704102

Token 212: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002439467643853277
    2. ' int' → logprob: -8.375244140625
    3. ')' → logprob: -11.250244140625
    4. '[int' → logprob: -15.750244140625
    5. '(int' → logprob: -15.875244140625
    6. '10' → logprob: -17.750244140625
    7. '```' → logprob: -17.750244140625
    8. '   ' → logprob: -18.125244140625
    9. ':int' → logprob: -18.250244140625
    10. '
' → logprob: -18.375244140625

Token 213: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004635303281247616
    2. '):' → logprob: -5.379635334014893
    3. '):
' → logprob: -11.754634857177734
    4. ')->' → logprob: -12.879634857177734
    5. ':' → logprob: -13.379634857177734
    6. '）' → logprob: -13.754634857177734
    7. ' )' → logprob: -13.879634857177734
    8. '):
' → logprob: -14.504634857177734
    9. '   ' → logprob: -15.254634857177734
    10. ')：' → logprob: -15.879634857177734

Token 214: '       ' (ID: 309)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8198432922363281
    2. '[' → logprob: -1.3198432922363281
    3. '[::-' → logprob: -1.5698432922363281
    4. '   ' → logprob: -3.694843292236328
    5. ' [' → logprob: -4.444843292236328
    6. ',' → logprob: -4.569843292236328
    7. ':' → logprob: -4.944843292236328
    8. 'return' → logprob: -5.194843292236328
    9. '[:]' → logprob: -5.194843292236328
    10. ' []' → logprob: -5.694843292236328

Token 215: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009147577919065952
    2. '[' → logprob: -4.884147644042969
    3. ' return' → logprob: -7.009147644042969
    4. '[str' → logprob: -8.259147644042969
    5. 'list' → logprob: -9.259147644042969
    6. 'str' → logprob: -9.259147644042969
    7. '[]' → logprob: -9.384147644042969
    8. '   ' → logprob: -10.759147644042969
    9. 'digits' → logprob: -10.759147644042969
    10. '[number' → logprob: -10.884147644042969

Token 216: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.00011653638648567721
    2. ' number' → logprob: -9.125116348266602
    3. 'not' → logprob: -12.000116348266602
    4. '0' → logprob: -14.250116348266602
    5. '	number' → logprob: -15.375116348266602
    6. 'num' → logprob: -15.875116348266602
    7. '   ' → logprob: -16.0001163482666
    8. 'type' → logprob: -16.7501163482666
    9. '(number' → logprob: -17.1251163482666
    10. ' ' → logprob: -17.1251163482666

Token 217: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5935625433921814
    2. ' <' → logprob: -0.9685625433921814
    3. '==' → logprob: -3.468562602996826
    4. '<' → logprob: -3.593562602996826
    5. ' <=' → logprob: -4.843562602996826
    6. '<=' → logprob: -7.093562602996826
    7. ' is' → logprob: -7.843562602996826
    8. ')' → logprob: -9.593562126159668
    9. '=' → logprob: -9.968562126159668
    10. ' >=' → logprob: -10.343562126159668

Token 218: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029750484973192215
    2. ' ' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.40475082397461
    4. '０' → logprob: -17.40475082397461
    5. ' ' → logprob: -18.15475082397461
    6. '۰' → logprob: -18.27975082397461
    7. '	' → logprob: -18.65475082397461
    8. '```' → logprob: -19.02975082397461
    9. ' ' → logprob: -19.21725082397461
    10. '  ' → logprob: -19.40475082397461

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '０' → logprob: -15.625204086303711
    4. '   ' → logprob: -16.31270408630371
    5. '```' → logprob: -17.25020408630371
    6. '  ' → logprob: -17.37520408630371
    7. '۰' → logprob: -17.37520408630371
    8. '
' → logprob: -17.62520408630371
    9. '1' → logprob: -17.75020408630371
    10. ' ' → logprob: -17.87520408630371

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2596892714500427
    2. ':
' → logprob: -1.5096893310546875
    3. ':return' → logprob: -4.8846893310546875
    4. '       ' → logprob: -9.259689331054688
    5. ':
' → logprob: -10.509689331054688
    6. '           ' → logprob: -11.259689331054688
    7. ':

' → logprob: -11.759689331054688
    8. '):
' → logprob: -11.884689331054688
    9. 'return' → logprob: -12.259689331054688
    10. '):' → logprob: -12.634689331054688

Token 221: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9866588115692139
    2. ' return' → logprob: -1.2366588115692139
    3. 'return' → logprob: -1.8616588115692139
    4. ' [' → logprob: -2.236658811569214
    5. '[' → logprob: -3.736658811569214
    6. '[]' → logprob: -3.736658811569214
    7. '           ' → logprob: -3.986658811569214
    8. ' []' → logprob: -5.611659049987793
    9. '[]
' → logprob: -6.486659049987793
    10. '0' → logprob: -7.236659049987793

Token 222: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.51734459400177
    2. 'return' (adapté à ' return') → logprob: -1.01734459400177
    3. ' return' → logprob: -3.7673444747924805
    4. ' [' → logprob: -4.2673444747924805
    5. '           ' → logprob: -5.5173444747924805
    6. '[]' → logprob: -7.3923444747924805
    7. '       ' → logprob: -7.6423444747924805
    8. '[]
' → logprob: -10.14234447479248
    9. ':return' → logprob: -11.01734447479248
    10. '   ' → logprob: -11.51734447479248

Token 223: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019348275382071733
    2. ' [' → logprob: -6.251935005187988
    3. '[]' → logprob: -12.001935005187988
    4. '   ' → logprob: -16.876934051513672
    5. ' ' → logprob: -18.126934051513672
    6. ' []' → logprob: -18.376934051513672
    7. ' ' → logprob: -18.751934051513672
    8. '	' → logprob: -19.376934051513672
    9. '[int' → logprob: -19.376934051513672
    10. '  ' → logprob: -19.751934051513672

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -20.0
    4. '
' → logprob: -20.875
    5. '[' → logprob: -20.875
    6. '۰' → logprob: -21.375
    7. '０' → logprob: -21.5
    8. '1' → logprob: -21.625
    9. '```' → logprob: -21.75
    10. '    
' → logprob: -21.75

Token 225: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00027349460287950933
    2. ']
' → logprob: -8.250273704528809
    3. ' ]' → logprob: -11.375273704528809
    4. ']

' → logprob: -14.375273704528809
    5. ']
' → logprob: -17.750272750854492
    6. '[' → logprob: -17.875272750854492
    7. '   ' → logprob: -18.250272750854492
    8. '[]' → logprob: -18.500272750854492
    9. '()]' → logprob: -19.000272750854492
    10. '0' → logprob: -19.375272750854492

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042626605136319995
    2. '   ' → logprob: -9.000426292419434
    3. '        
' → logprob: -9.500426292419434
    4. '[]' → logprob: -9.625426292419434
    5. '<|end|>' → logprob: -10.125426292419434
    6. ',' → logprob: -10.875426292419434
    7. ')' → logprob: -11.000426292419434
    8. '[::-' → logprob: -11.250426292419434
    9. '[' → logprob: -11.375426292419434
    10. 'return' → logprob: -11.375426292419434

Token 227: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.04021681472659111
    2. ' digits' → logprob: -3.4152169227600098
    3. '       ' → logprob: -5.04021692276001
    4. 'result' → logprob: -10.540216445922852
    5. 'd' → logprob: -10.915216445922852
    6. '   ' → logprob: -11.665216445922852
    7. 'return' → logprob: -12.040216445922852
    8. '_digits' → logprob: -12.290216445922852
    9. '[]' → logprob: -12.790216445922852
    10. 'igits' → logprob: -13.165216445922852

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520962357521057
    2. '=' → logprob: -1.502096176147461
    3. '=[]' → logprob: -8.752096176147461
    4. '=[]
' → logprob: -12.377096176147461
    5. '[]' → logprob: -13.502096176147461
    6. '＝' → logprob: -14.002096176147461
    7. ' ' → logprob: -14.502096176147461
    8. ',' → logprob: -14.627096176147461
    9. '   ' → logprob: -14.752096176147461
    10. ' []' → logprob: -14.877096176147461

Token 229: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.001200827769935131
    2. ' []' → logprob: -7.0012006759643555
    3. '[]
' → logprob: -8.251200675964355
    4. 'list' → logprob: -10.626200675964355
    5. '[' → logprob: -12.876200675964355
    6. '[]

' → logprob: -14.126200675964355
    7. '[]}' → logprob: -15.126200675964355
    8. ' []
' → logprob: -15.251200675964355
    9. '[number' → logprob: -16.001201629638672
    10. ' list' → logprob: -16.126201629638672

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06378050148487091
    2. ' while' → logprob: -2.8137805461883545
    3. 'while' → logprob: -7.188780307769775
    4. '	while' → logprob: -8.313780784606934
    5. '        ' → logprob: -8.563780784606934
    6. '    ' → logprob: -8.688780784606934
    7. '	' → logprob: -8.938780784606934
    8. '   ' → logprob: -9.188780784606934
    9. '	   ' → logprob: -10.313780784606934
    10. '<|end|>' → logprob: -10.438780784606934

Token 231: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2526490092277527
    2. 'while' (adapté à ' while') → logprob: -1.5026490688323975
    3. '       ' → logprob: -8.127649307250977
    4. ' number' → logprob: -8.127649307250977
    5. 'number' → logprob: -9.377649307250977
    6. 'n' → logprob: -11.752649307250977
    7. ' n' → logprob: -11.752649307250977
    8. 'num' → logprob: -11.877649307250977
    9. '	while' → logprob: -12.377649307250977
    10. '        ' → logprob: -12.502649307250977

Token 232: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.01603648066520691
    2. ' number' → logprob: -4.141036510467529
    3. '   ' → logprob: -13.891036033630371
    4. '	number' → logprob: -14.391036033630371
    5. ' ' → logprob: -14.891036033630371
    6. '(number' → logprob: -15.641036033630371
    7. '
' → logprob: -16.891036987304688
    8. '       ' → logprob: -17.766036987304688
    9. 'num' → logprob: -17.891036987304688
    10. '[number' → logprob: -17.891036987304688

Token 233: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20170938968658447
    2. ' >' → logprob: -1.7017093896865845
    3. '%' → logprob: -8.326709747314453
    4. '   ' → logprob: -10.576709747314453
    5. ':' → logprob: -11.576709747314453
    6. '&gt' → logprob: -12.451709747314453
    7. ' ' → logprob: -12.451709747314453
    8. ' ' → logprob: -13.076709747314453
    9. ')>' → logprob: -13.701709747314453
    10. '```' → logprob: -13.701709747314453

Token 234: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016035541892051697
    2. ' ' → logprob: -4.141035556793213
    3. '>' → logprob: -14.891035079956055
    4. '   ' → logprob: -15.141035079956055
    5. '=' → logprob: -15.266035079956055
    6. '```' → logprob: -15.891035079956055
    7. '<|end|>' → logprob: -16.266035079956055
    8. '
' → logprob: -16.766035079956055
    9. '  ' → logprob: -16.953535079956055
    10. '    ' → logprob: -17.516035079956055

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.662937372922897e-05
    2. ' ' → logprob: -9.250096321105957
    3. '9' → logprob: -15.750096321105957
    4. '
' → logprob: -16.500097274780273
    5. '```' → logprob: -16.500097274780273
    6. '   ' → logprob: -16.625097274780273
    7. '>' → logprob: -17.437597274780273
    8. '=' → logprob: -18.062597274780273
    9. '  ' → logprob: -18.125097274780273
    10. '10' → logprob: -18.312597274780273

Token 236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008259592577815056
    2. ':
' → logprob: -4.8832597732543945
    3. ',' → logprob: -8.008259773254395
    4. '       ' → logprob: -8.883259773254395
    5. '<|end|>' → logprob: -9.133259773254395
    6. '<|end|>' → logprob: -11.008259773254395
    7. '):' → logprob: -11.133259773254395
    8. '   ' → logprob: -12.008259773254395
    9. ' :' → logprob: -12.258259773254395
    10. '):
' → logprob: -12.383259773254395

Token 237: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11076019704341888
    2. ' digits' → logprob: -2.61076021194458
    3. 'digits' → logprob: -4.11076021194458
    4. '   ' → logprob: -5.23576021194458
    5. '    ' → logprob: -6.23576021194458
    6. '<|end|>' → logprob: -6.48576021194458
    7. ' 
' → logprob: -7.23576021194458
    8. ' ' → logprob: -7.23576021194458
    9. '0' → logprob: -7.36076021194458
    10. '        
' → logprob: -7.48576021194458

Token 238: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.38741976022720337
    2. 'digits' (adapté à ' digits') → logprob: -1.1374197006225586
    3. 'number' → logprob: -8.512419700622559
    4. ' number' → logprob: -8.762419700622559
    5. '       ' → logprob: -9.012419700622559
    6. 'Digits' → logprob: -10.637419700622559
    7. '_digits' → logprob: -11.262419700622559
    8. '           ' → logprob: -11.262419700622559
    9. 'igits' → logprob: -12.387419700622559
    10. 'd' → logprob: -12.762419700622559

Token 239: '.append' (ID: 3709)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.913462221622467
    2. '%' → logprob: -1.2884621620178223
    3. ' %=' → logprob: -2.0384621620178223
    4. '.append' → logprob: -2.1634621620178223
    5. ' %' → logprob: -2.9134621620178223
    6. '%=' → logprob: -4.038462162017822
    7. '.' → logprob: -5.913462162017822
    8. '=' → logprob: -6.913462162017822
    9. ',%' → logprob: -7.913462162017822
    10. '.pop' → logprob: -8.16346263885498

Token 240: '(number' (ID: 32955)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.06536072492599487
    2. ' number' → logprob: -2.8153607845306396
    3. '(number' → logprob: -5.6903605461120605
    4. '	number' → logprob: -12.315361022949219
    5. '[number' → logprob: -12.565361022949219
    6. ' (' → logprob: -14.690361022949219
    7. '(' → logprob: -14.940361022949219
    8. '   ' → logprob: -15.815361022949219
    9. ' ' → logprob: -16.81536102294922
    10. '(
' → logprob: -17.06536102294922

Token 241: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011048762127757072
    2. '%' → logprob: -4.511048793792725
    3. ' ' → logprob: -13.886048316955566
    4. ' ' → logprob: -16.886049270629883
    5. ' %
' → logprob: -19.511049270629883
    6. ')' → logprob: -19.511049270629883
    7. '%d' → logprob: -19.761049270629883
    8. ' %)' → logprob: -20.011049270629883
    9. '％' → logprob: -20.886049270629883
    10. '%c' → logprob: -21.136049270629883

Token 242: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '
' → logprob: -16.1250057220459
    4. '```' → logprob: -17.2500057220459
    5. '   ' → logprob: -17.3750057220459
    6. '2' → logprob: -17.7500057220459
    7. '１０' → logprob: -17.7500057220459
    8. '1' → logprob: -17.8750057220459
    9. '100' → logprob: -18.1250057220459
    10. '16' → logprob: -18.7500057220459

Token 243: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -17.125
    4. '```' → logprob: -18.25
    5. '1' → logprob: -18.625
    6. '１０' → logprob: -18.75
    7. '   ' → logprob: -19.0
    8. '0' → logprob: -19.375
    9. '100' → logprob: -20.375
    10. '2' → logprob: -20.8125

Token 244: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024265521205961704
    2. ')
' → logprob: -6.252426624298096
    3. ' )' → logprob: -7.627426624298096
    4. ' )
' → logprob: -11.752426147460938
    5. '<|end|>' → logprob: -13.752426147460938
    6. ')

' → logprob: -14.377426147460938
    7. '),' → logprob: -14.502426147460938
    8. ' ' → logprob: -15.377426147460938
    9. ',' → logprob: -16.502426147460938
    10. '0' → logprob: -16.627426147460938

Token 245: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6881062984466553
    2. '       ' → logprob: -1.5631062984466553
    3. 'number' → logprob: -2.0631062984466553
    4. '    
' → logprob: -2.6881062984466553
    5. ' number' → logprob: -3.6881062984466553
    6. '           ' → logprob: -4.313106536865234
    7. '        
' → logprob: -4.688106536865234
    8. '
' → logprob: -4.938106536865234
    9. ' ' → logprob: -5.188106536865234
    10. '[' → logprob: -5.313106536865234

Token 246: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' (adapté à ' number') → logprob: -0.0024780353996902704
    2. ' number' → logprob: -6.002478122711182
    3. '   ' → logprob: -13.502477645874023
    4. '
' → logprob: -14.877477645874023
    5. '	number' → logprob: -15.377477645874023
    6. '       ' → logprob: -15.877477645874023
    7. '```' → logprob: -16.002477645874023
    8. '10' → logprob: -16.502477645874023
    9. '[number' → logprob: -17.502477645874023
    10. '    
' → logprob: -18.002477645874023

Token 247: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.04795795679092407
    2. '//=' → logprob: -3.1729578971862793
    3. ' >>=' → logprob: -5.922957897186279
    4. ' =' → logprob: -6.422957897186279
    5. ' ' → logprob: -8.422958374023438
    6. '   ' → logprob: -8.797958374023438
    7. '=' → logprob: -8.922958374023438
    8. '//' → logprob: -9.672958374023438
    9. '	' → logprob: -10.797958374023438
    10. '    ' → logprob: -11.047958374023438

Token 248: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.7968066206085496e-05
    2. '10' → logprob: -10.500027656555176
    3. '=
' → logprob: -15.125027656555176
    4. ' ' → logprob: -16.750028610229492
    5. '=}' → logprob: -16.875028610229492
    6. '=_' → logprob: -18.125028610229492
    7. '=

' → logprob: -18.625028610229492
    8. '0' → logprob: -19.625028610229492
    9. '=*/' → logprob: -20.000028610229492
    10. '==' → logprob: -20.125028610229492

Token 249: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004620710853487253
    2. ' ' → logprob: -5.379620552062988
    3. '   ' → logprob: -15.254620552062988
    4. '1' → logprob: -17.004621505737305
    5. '    ' → logprob: -17.129621505737305
    6. '
' → logprob: -17.254621505737305
    7. '```' → logprob: -17.629621505737305
    8. ' 
' → logprob: -18.754621505737305
    9. '           ' → logprob: -18.879621505737305
    10. '  ' → logprob: -18.879621505737305

Token 250: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3247682452201843
    2. ' return' → logprob: -2.074768304824829
    3. '[::-' → logprob: -2.949768304824829
    4. '<|end|>' → logprob: -3.324768304824829
    5. ' 
' → logprob: -3.574768304824829
    6. ' ' → logprob: -4.57476806640625
    7. '[' → logprob: -5.07476806640625
    8. 'return' → logprob: -5.32476806640625
    9. '   ' → logprob: -5.32476806640625
    10. ' digits' → logprob: -6.07476806640625

Token 252: ' return' (ID: 622)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.4805678725242615
    2. 'digits' → logprob: -1.1055679321289062
    3. ' return' → logprob: -3.7305679321289062
    4. '[::-' → logprob: -4.105567932128906
    5. 'return' (adapté à ' return') → logprob: -5.355567932128906
    6. ')' → logprob: -6.230567932128906
    7. '   ' → logprob: -6.980567932128906
    8. ' 
' → logprob: -7.480567932128906
    9. '[' → logprob: -7.730567932128906
    10. '       ' → logprob: -8.230567932128906

Token 253: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.10155549645423889
    2. ' digits' → logprob: -2.351555585861206
    3. 'list' → logprob: -6.726555347442627
    4. ' list' → logprob: -8.976555824279785
    5. '[' → logprob: -12.101555824279785
    6. '   ' → logprob: -12.601555824279785
    7. 're' → logprob: -12.851555824279785
    8. ' [' → logprob: -13.101555824279785
    9. 'd' → logprob: -13.226555824279785
    10. ' ' → logprob: -13.851555824279785

Token 254: ' ' (ID: 220)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.008034566417336464
    2. '.reverse' → logprob: -5.008034706115723
    3. '<|end|>' → logprob: -7.133034706115723
    4. '[' → logprob: -7.633034706115723
    5. '[:]' → logprob: -11.133034706115723
    6. '<|end|>' → logprob: -12.383034706115723
    7. ',' → logprob: -12.758034706115723
    8. '.' → logprob: -13.133034706115723
    9. '(reverse' → logprob: -13.133034706115723
    10. '[
' → logprob: -13.383034706115723

Token 255: ' #' (ID: 1069)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.006482303608208895
    2. '.reverse' → logprob: -5.756482124328613
    3. '<|end|>' → logprob: -6.256482124328613
    4. '[' → logprob: -6.631482124328613
    5. '[:]' → logprob: -10.631482124328613
    6. '<|end|>' → logprob: -11.756482124328613
    7. ' ' → logprob: -12.006482124328613
    8. '[
' → logprob: -12.506482124328613
    9. '#' → logprob: -12.631482124328613
    10. '.' → logprob: -12.631482124328613

Token 256: ' 下' (ID: 119311)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.07166342437267303
    2. '[::-' → logprob: -2.8216633796691895
    3. ' digits' → logprob: -5.3216633796691895
    4. '<|end|>' → logprob: -5.6966633796691895
    5. '[' → logprob: -7.1966633796691895
    6. 'list' → logprob: -8.696663856506348
    7. '.reverse' → logprob: -9.321663856506348
    8. '.' → logprob: -10.071663856506348
    9. '#' → logprob: -10.196663856506348
    10. '[
' → logprob: -10.446663856506348

Token 257: '位' (ID: 9838)
  Prédit: '位'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '位' → logprob: -0.03176906332373619
    2. 'の' → logprob: -4.656769275665283
    3. 'から' → logprob: -4.906769275665283
    4. '\xe6\xa1' → logprob: -5.031769275665283
    5. 'さい' → logprob: -6.656769275665283
    6. '[::-' → logprob: -7.031769275665283
    7. 'げ' → logprob: -7.156769275665283
    8. '   ' → logprob: -7.156769275665283
    9. 'が' → logprob: -7.781769275665283
    10. '向' → logprob: -7.781769275665283

Token 258: '�' (ID: 11959)
  Prédit: 'から'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'から' → logprob: -0.023942669853568077
    2. ' ' → logprob: -5.148942470550537
    3. '\xe6\xa1' → logprob: -5.148942470550537
    4. '[' → logprob: -5.898942470550537
    5. '0' → logprob: -6.523942470550537
    6. ' to' → logprob: -6.648942470550537
    7. 'が' → logprob: -6.648942470550537
    8. ' first' → logprob: -7.398942470550537
    9. 'の' → logprob: -7.523942470550537
    10. 'digit' → logprob: -7.648942470550537

Token 259: '�' (ID: 223)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0813310146331787
    2. '<|end|>' → logprob: -1.3313310146331787
    3. '0' → logprob: -1.4563310146331787
    4. '[::-' → logprob: -2.5813310146331787
    5. ' ' → logprob: -4.081331253051758
    6. 'から' → logprob: -4.331331253051758
    7. ' to' → logprob: -4.456331253051758
    8. '[]' → logprob: -4.956331253051758
    9. ',' → logprob: -5.206331253051758
    10. ']' → logprob: -5.706331253051758

Token 260: 'から' (ID: 27500)
  Prédit: 'から'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'から' → logprob: -0.23376935720443726
    2. '[' → logprob: -1.983769416809082
    3. '[]' → logprob: -4.983769416809082
    4. '[::-' → logprob: -4.983769416809082
    5. 'digits' → logprob: -5.108769416809082
    6. '0' → logprob: -5.108769416809082
    7. 'が' → logprob: -5.483769416809082
    8. '位' → logprob: -5.608769416809082
    9. ' to' → logprob: -5.608769416809082
    10. 'digit' → logprob: -5.733769416809082

Token 261: '順' (ID: 90778)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: 'に' (ID: 5280)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: '格' (ID: 13511)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: '納' (ID: 90840)
  Prédit: '納'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '納' → logprob: -2.935296834039036e-06
    2. '```' → logprob: -14.00000286102295
    3. '子' → logprob: -14.62500286102295
    4. '   ' → logprob: -15.00000286102295
    5. '[' → logprob: -15.25000286102295
    6. '纳' → logprob: -15.75000286102295
    7. '段' → logprob: -15.87500286102295
    8. '順' → logprob: -16.000003814697266
    9. '上' → logprob: -16.375003814697266
    10. '入' → logprob: -16.375003814697266

Token 265: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24174408614635468
    2. '<|end|>' → logprob: -1.741744041442871
    3. ' ' → logprob: -3.866744041442871
    4. '    
' → logprob: -5.491744041442871
    5. '<|end|>' → logprob: -5.991744041442871
    6. ' 
' → logprob: -5.991744041442871
    7. '
' → logprob: -6.491744041442871
    8. '       ' → logprob: -6.616744041442871
    9. '[' → logprob: -6.616744041442871
    10. '    ' → logprob: -6.741744041442871

Token 268: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.8483253121376038
    2. ' reverse' → logprob: -2.098325252532959
    3. 'to' → logprob: -2.223325252532959
    4. '__' → logprob: -2.348325252532959
    5. 'reverse' → logprob: -2.473325252532959
    6. ' to' → logprob: -3.098325252532959
    7. ' length' → logprob: -3.348325252532959
    8. ' get' → logprob: -3.348325252532959
    9. 'length' → logprob: -3.848325252532959
    10. 'get' → logprob: -5.348325252532959

Token 269: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0026886097621172667
    2. 'eq' → logprob: -6.752688407897949
    3. 'repr' → logprob: -7.252688407897949
    4. 'init' → logprob: -7.752688407897949
    5. 'iter' → logprob: -8.50268840789795
    6. 'lt' → logprob: -9.37768840789795
    7. 'getitem' → logprob: -9.50268840789795
    8. 'str' → logprob: -11.00268840789795
    9. 'l' → logprob: -16.002689361572266
    10. 'add' → logprob: -16.252689361572266

Token 270: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1632615327835083
    2. '(' → logprob: -2.5382614135742188
    3. '(self' → logprob: -2.6632614135742188
    4. '__' → logprob: -7.038261413574219
    5. '__(
' → logprob: -7.538261413574219
    6. '_(' → logprob: -7.788261413574219
    7. '_' → logprob: -10.163261413574219
    8. 'self' → logprob: -12.038261413574219
    9. ')(' → logprob: -12.288261413574219
    10. '__((' → logprob: -12.413261413574219

Token 271: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.431207682704553e-05
    2. ')' → logprob: -10.125054359436035
    3. ' self' → logprob: -11.250054359436035
    4. '(self' → logprob: -14.000054359436035
    5. '
' → logprob: -15.875054359436035
    6. '	self' → logprob: -15.875054359436035
    7. '):
' → logprob: -16.37505340576172
    8. 's' → logprob: -18.00005340576172
    9. ')
' → logprob: -18.00005340576172
    10. '):' → logprob: -18.00005340576172

Token 272: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009881574660539627
    2. '):
' → logprob: -4.884881496429443
    3. ')' → logprob: -6.384881496429443
    4. 'self' → logprob: -7.884881496429443
    5. ' ):' → logprob: -8.634881973266602
    6. '(self' → logprob: -11.634881973266602
    7. '):

' → logprob: -11.884881973266602
    8. '   ' → logprob: -12.509881973266602
    9. '():' → logprob: -12.634881973266602
    10. ' ' → logprob: -12.634881973266602

Token 273: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6434451341629028
    2. 'return' → logprob: -1.1434451341629028
    3. '       ' → logprob: -1.8934451341629028
    4. '   ' → logprob: -6.268445014953613
    5. '()' → logprob: -6.268445014953613
    6. '(' → logprob: -7.143445014953613
    7. '(self' → logprob: -8.143445014953613
    8. '	return' → logprob: -9.268445014953613
    9. ':return' → logprob: -10.018445014953613
    10. 'self' → logprob: -10.143445014953613

Token 274: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009486540220677853
    2. ' return' → logprob: -5.259486675262451
    3. 'len' → logprob: -5.509486675262451
    4. '       ' → logprob: -8.759486198425293
    5. '   ' → logprob: -10.759486198425293
    6. ' len' → logprob: -11.009486198425293
    7. '	return' → logprob: -14.759486198425293
    8. '    ' → logprob: -16.13448715209961
    9. '
' → logprob: -17.00948715209961
    10. ' ' → logprob: -17.25948715209961

Token 275: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.006715370807796717
    2. 'len' → logprob: -5.006715297698975
    3. '	len' → logprob: -17.381715774536133
    4. '(len' → logprob: -18.256715774536133
    5. '   ' → logprob: -18.881715774536133
    6. '=len' → logprob: -21.131715774536133
    7. '    ' → logprob: -21.256715774536133
    8. ' ' → logprob: -21.256715774536133
    9. '[len' → logprob: -22.381715774536133
    10. ' ' → logprob: -22.381715774536133

Token 276: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.547789674485102e-05
    2. '(' → logprob: -10.250035285949707
    3. 'self' → logprob: -18.250036239624023
    4. ' (' → logprob: -20.375036239624023
    5. '(this' → logprob: -20.375036239624023
    6. ' self' → logprob: -22.000036239624023
    7. '(
' → logprob: -22.375036239624023
    8. '	self' → logprob: -22.500036239624023
    9. '(Self' → logprob: -23.875036239624023
    10. '```' → logprob: -24.125036239624023

Token 277: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.005470786709338427
    2. '.' → logprob: -5.2554707527160645
    3. ' .' → logprob: -8.380471229553223
    4. ').' → logprob: -11.880471229553223
    5. '.
' → logprob: -15.255471229553223
    6. ')' → logprob: -15.380471229553223
    7. 'digits' → logprob: -16.255470275878906
    8. '.д' → logprob: -17.130470275878906
    9. '().' → logprob: -17.380470275878906
    10. 'd' → logprob: -17.505470275878906

Token 278: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.00020294437126722187
    2. 'digits' → logprob: -8.625203132629395
    3. 'ig' → logprob: -11.000203132629395
    4. 'igts' → logprob: -12.500203132629395
    5. 'igit' → logprob: -14.000203132629395
    6. 'its' → logprob: -14.000203132629395
    7. '_digits' → logprob: -15.625203132629395
    8. 'd' → logprob: -16.000202178955078
    9. '   ' → logprob: -16.125202178955078
    10. 'g' → logprob: -16.250202178955078

Token 279: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. '<|end|>' → logprob: -13.250004768371582
    3. ')
' → logprob: -13.375004768371582
    4. '   ' → logprob: -14.375004768371582
    5. '}' → logprob: -14.875004768371582
    6. ')return' → logprob: -15.750004768371582
    7. ' )' → logprob: -16.125003814697266
    8. '<|end|>' → logprob: -16.875003814697266
    9. ')

' → logprob: -17.625003814697266
    10. ' ' → logprob: -17.750003814697266

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006665162276476622
    2. ' ' → logprob: -6.256665229797363
    3. 'def' → logprob: -6.631665229797363
    4. '[' → logprob: -6.881665229797363
    5. '<|end|>' → logprob: -7.131665229797363
    6. ' def' → logprob: -7.381665229797363
    7. '  ' → logprob: -7.756665229797363
    8. '    ' → logprob: -9.006665229797363
    9. '    
' → logprob: -9.131665229797363
    10. '	def' → logprob: -9.881665229797363

Token 281: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3762931525707245
    2. 'def' (adapté à ' def') → logprob: -1.2512931823730469
    3. ' def' → logprob: -3.876293182373047
    4. ' ' → logprob: -5.751293182373047
    5. '[' → logprob: -6.251293182373047
    6. '  ' → logprob: -7.876293182373047
    7. '    ' → logprob: -8.001293182373047
    8. '[]' → logprob: -8.501293182373047
    9. '    
' → logprob: -8.876293182373047
    10. '```' → logprob: -9.126293182373047

Token 282: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13055822253227234
    2. ' __' → logprob: -2.1305582523345947
    3. 'to' → logprob: -6.755558013916016
    4. '[]' → logprob: -6.880558013916016
    5. 'getitem' → logprob: -7.380558013916016
    6. 'get' → logprob: -7.880558013916016
    7. ' get' → logprob: -9.130558013916016
    8. ' ' → logprob: -9.130558013916016
    9. ' to' → logprob: -9.755558013916016
    10. '_get' → logprob: -10.005558013916016

Token 283: 'getitem' (ID: 147767)
  Prédit: 'getitem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getitem' → logprob: -0.014983651228249073
    2. 'iter' → logprob: -4.264983654022217
    3. 'eq' → logprob: -7.764983654022217
    4. 'repr' → logprob: -8.014983177185059
    5. 'str' → logprob: -10.639983177185059
    6. 'len' → logprob: -10.889983177185059
    7. 'contains' → logprob: -11.389983177185059
    8. 'init' → logprob: -12.514983177185059
    9. 'bool' → logprob: -12.639983177185059
    10. 'get' → logprob: -13.014983177185059

Token 284: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.003986623603850603
    2. '(self' → logprob: -6.378986835479736
    3. '__' → logprob: -7.003986835479736
    4. '(' → logprob: -7.003986835479736
    5. '__(
' → logprob: -8.003986358642578
    6. '__((' → logprob: -9.628986358642578
    7. '__[' → logprob: -11.003986358642578
    8. ' (' → logprob: -11.253986358642578
    9. '__('' → logprob: -11.628986358642578
    10. '__(*' → logprob: -12.253986358642578

Token 285: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067534977570176125
    2. ' self' → logprob: -5.006753444671631
    3. '(self' → logprob: -11.006753921508789
    4. 'index' → logprob: -11.506753921508789
    5. ')' → logprob: -11.881753921508789
    6. '   ' → logprob: -13.256753921508789
    7. '	self' → logprob: -13.381753921508789
    8. '0' → logprob: -14.881753921508789
    9. ' ' → logprob: -15.381753921508789
    10. '_self' → logprob: -15.631753921508789

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035549316089600325
    2. ',index' → logprob: -6.003554821014404
    3. '__,' → logprob: -8.003555297851562
    4. ' ,' → logprob: -8.253555297851562
    5. ',[' → logprob: -8.878555297851562
    6. '[' → logprob: -9.503555297851562
    7. ',self' → logprob: -9.628555297851562
    8. '[],' → logprob: -10.503555297851562
    9. ',__' → logprob: -10.628555297851562
    10. ')' → logprob: -10.878555297851562

Token 287: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.08826328068971634
    2. ' index' → logprob: -2.5882632732391357
    3. 'idx' → logprob: -4.838263511657715
    4. ' idx' → logprob: -6.588263511657715
    5. 'key' → logprob: -11.463263511657715
    6. 'i' → logprob: -11.963263511657715
    7. 'item' → logprob: -12.088263511657715
    8. ' key' → logprob: -12.213263511657715
    9. 'self' → logprob: -12.588263511657715
    10. ')' → logprob: -14.838263511657715

Token 288: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1637537032365799
    2. ')' → logprob: -1.9137537479400635
    3. '):
' → logprob: -5.913753509521484
    4. ']' → logprob: -8.163753509521484
    5. '<|end|>' → logprob: -8.913753509521484
    6. ']:' → logprob: -9.413753509521484
    7. '   ' → logprob: -9.538753509521484
    8. ']):' → logprob: -9.788753509521484
    9. ':' → logprob: -9.913753509521484
    10. '<|end|>' → logprob: -10.538753509521484

Token 289: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31119489669799805
    2. '       ' → logprob: -1.811194896697998
    3. '   ' → logprob: -2.561194896697998
    4. 'return' → logprob: -3.686194896697998
    5. '    ' → logprob: -7.186194896697998
    6. '	return' → logprob: -7.811194896697998
    7. ' self' → logprob: -8.936195373535156
    8. '        
' → logprob: -9.686195373535156
    9. '    
' → logprob: -9.686195373535156
    10. ':return' → logprob: -9.811195373535156

Token 290: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.576383650302887
    2. 'return' (adapté à ' return') → logprob: -0.826383650302887
    3. ' self' → logprob: -8.701383590698242
    4. 'self' → logprob: -8.701383590698242
    5. '   ' → logprob: -10.201383590698242
    6. '       ' → logprob: -10.326383590698242
    7. ' if' → logprob: -10.326383590698242
    8. 'if' → logprob: -11.826383590698242
    9. '	return' → logprob: -14.201383590698242
    10. '    ' → logprob: -15.326383590698242

Token 291: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47407710552215576
    2. ' self' → logprob: -0.9740771055221558
    3. '	self' → logprob: -17.099077224731445
    4. '0' → logprob: -18.224077224731445
    5. '   ' → logprob: -18.224077224731445
    6. ' ' → logprob: -18.349077224731445
    7. '(self' → logprob: -18.974077224731445
    8. '
' → logprob: -20.224077224731445
    9. '[self' → logprob: -21.224077224731445
    10. 'Self' → logprob: -21.349077224731445

Token 292: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.002891179174184799
    2. '.' → logprob: -5.8778910636901855
    3. ' .' → logprob: -9.377891540527344
    4. 'digits' → logprob: -13.752891540527344
    5. '.
' → logprob: -15.252891540527344
    6. 'd' → logprob: -16.127891540527344
    7. '._' → logprob: -16.252891540527344
    8. ').' → logprob: -16.877891540527344
    9. '[' → logprob: -17.252891540527344
    10. '.dumps' → logprob: -17.627891540527344

Token 293: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0001733855315251276
    2. 'ig' → logprob: -9.125173568725586
    3. 'igts' → logprob: -10.375173568725586
    4. 'digits' → logprob: -11.000173568725586
    5. 'igit' → logprob: -11.625173568725586
    6. 'i' → logprob: -12.500173568725586
    7. 'its' → logprob: -13.625173568725586
    8. 'ights' → logprob: -14.125173568725586
    9. 'igs' → logprob: -14.875173568725586
    10. 'igita' → logprob: -14.875173568725586

Token 294: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.007369742263108492
    2. '[' → logprob: -5.507369518280029
    3. '<|end|>' → logprob: -5.882369518280029
    4. '[
' → logprob: -8.257369995117188
    5. '[Index' → logprob: -9.507369995117188
    6. '[]' → logprob: -10.007369995117188
    7. '   ' → logprob: -11.007369995117188
    8. '```' → logprob: -11.257369995117188
    9. '[int' → logprob: -11.507369995117188
    10. '[idx' → logprob: -11.632369995117188

Token 295: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011638568714261055
    2. '<|end|>' → logprob: -4.511638641357422
    3. ')' → logprob: -8.011638641357422
    4. '}' → logprob: -9.261638641357422
    5. ' ]' → logprob: -9.386638641357422
    6. '<|end|>' → logprob: -9.636638641357422
    7. '   ' → logprob: -12.386638641357422
    8. ']
' → logprob: -12.886638641357422
    9. '']' → logprob: -13.386638641357422
    10. '```' → logprob: -13.886638641357422

Token 296: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4060078561306
    2. '<|end|>' → logprob: -1.1560078859329224
    3. ' ' → logprob: -5.031007766723633
    4. 'def' (adapté à ' def') → logprob: -5.656007766723633
    5. ' def' → logprob: -5.906007766723633
    6. ')' → logprob: -6.781007766723633
    7. '[' → logprob: -6.906007766723633
    8. 'class' → logprob: -7.031007766723633
    9. '    ' → logprob: -7.156007766723633
    10. '<|end|>' → logprob: -7.531007766723633

Token 298: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3639010488986969
    2. 'to' → logprob: -1.4889010190963745
    3. ' __' → logprob: -2.738901138305664
    4. 'reverse' → logprob: -5.113901138305664
    5. 'as' → logprob: -6.113901138305664
    6. ' to' → logprob: -6.238901138305664
    7. 'append' → logprob: -7.363901138305664
    8. 're' → logprob: -7.363901138305664
    9. 'from' → logprob: -7.488901138305664
    10. 'extend' → logprob: -7.613901138305664

Token 299: 'set' (ID: 977)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.06899882853031158
    2. 'repr' → logprob: -3.0689988136291504
    3. 'str' → logprob: -4.44399881362915
    4. 'eq' → logprob: -5.06899881362915
    5. 'set' → logprob: -6.44399881362915
    6. 'add' → logprob: -8.068999290466309
    7. 'len' → logprob: -8.943999290466309
    8. 'contains' → logprob: -9.693999290466309
    9. 're' → logprob: -9.943999290466309
    10. 'lt' → logprob: -11.318999290466309

Token 300: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.0010985381668433547
    2. '__' → logprob: -7.1260986328125
    3. '__(' → logprob: -9.2510986328125
    4. '_item' → logprob: -9.2510986328125
    5. 'getitem' → logprob: -9.7510986328125
    6. 'Item' → logprob: -10.5010986328125
    7. 'attr' → logprob: -11.3760986328125
    8. '__[' → logprob: -13.6260986328125
    9. '-item' → logprob: -14.0010986328125
    10. 'items' → logprob: -14.1260986328125

Token 301: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004288641735911369
    2. '__' → logprob: -5.504288673400879
    3. '__((' → logprob: -9.129288673400879
    4. '__(
' → logprob: -10.129288673400879
    5. '(self' → logprob: -10.379288673400879
    6. '__[' → logprob: -11.379288673400879
    7. '(' → logprob: -11.504288673400879
    8. '__('' → logprob: -12.004288673400879
    9. '__(*' → logprob: -13.879288673400879
    10. '(index' → logprob: -14.504288673400879

Token 302: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.778209353797138e-05
    2. ' self' → logprob: -9.750067710876465
    3. 'index' → logprob: -11.625067710876465
    4. ')' → logprob: -15.000067710876465
    5. '   ' → logprob: -16.25006866455078
    6. ' ' → logprob: -17.50006866455078
    7. '0' → logprob: -17.87506866455078
    8. '	self' → logprob: -18.25006866455078
    9. '(self' → logprob: -18.87506866455078
    10. '```' → logprob: -19.75006866455078

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.171418234705925
    2. 'index' → logprob: -2.0464181900024414
    3. ',index' → logprob: -3.7964181900024414
    4. ' index' → logprob: -6.296418190002441
    5. '[index' → logprob: -6.921418190002441
    6. 'self' → logprob: -6.921418190002441
    7. ']' → logprob: -8.046418190002441
    8. '   ' → logprob: -8.046418190002441
    9. '][' → logprob: -8.296418190002441
    10. '(index' → logprob: -8.296418190002441

Token 304: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.005233882926404476
    2. ' index' → logprob: -5.2552337646484375
    3. '	index' → logprob: -18.255233764648438
    4. '(index' → logprob: -19.380233764648438
    5. ' ' → logprob: -20.130233764648438
    6. ':index' → logprob: -20.255233764648438
    7. '[index' → logprob: -20.255233764648438
    8. '#index' → logprob: -20.255233764648438
    9. '   ' → logprob: -20.380233764648438
    10. ',index' → logprob: -20.505233764648438

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.886803359724581e-05
    2. ',value' → logprob: -10.000079154968262
    3. ',index' → logprob: -11.125079154968262
    4. ' ,' → logprob: -11.750079154968262
    5. ']' → logprob: -12.875079154968262
    6. ',self' → logprob: -13.000079154968262
    7. 'self' → logprob: -13.250079154968262
    8. 'index' → logprob: -14.250079154968262
    9. ')' → logprob: -14.500079154968262
    10. '=' → logprob: -14.625079154968262

Token 306: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.20149970054626465
    2. ' value' → logprob: -1.7014997005462646
    3. '0' → logprob: -10.576499938964844
    4. 'val' → logprob: -10.951499938964844
    5. '<|end|>' → logprob: -11.201499938964844
    6. ' ' → logprob: -11.326499938964844
    7. ' val' → logprob: -12.201499938964844
    8. ')' → logprob: -13.076499938964844
    9. 'digit' → logprob: -13.451499938964844
    10. 'x' → logprob: -13.576499938964844

Token 307: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004418724682182074
    2. '):
' → logprob: -5.879418849945068
    3. ':' → logprob: -6.629418849945068
    4. '<|end|>' → logprob: -9.12941837310791
    5. ',' → logprob: -9.62941837310791
    6. ']:' → logprob: -9.75441837310791
    7. '=' → logprob: -11.00441837310791
    8. ')' → logprob: -11.00441837310791
    9. '}:' → logprob: -11.87941837310791
    10. '   ' → logprob: -12.25441837310791

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015245956368744373
    2. ' =' → logprob: -5.0152459144592285
    3. ' value' → logprob: -5.5152459144592285
    4. '=' → logprob: -6.5152459144592285
    5. ' self' → logprob: -6.7652459144592285
    6. '   ' → logprob: -7.2652459144592285
    7. '    ' → logprob: -7.7652459144592285
    8. '        ' → logprob: -8.640246391296387
    9. '<|end|>' → logprob: -8.890246391296387
    10. ' ' → logprob: -9.390246391296387

Token 309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06234622001647949
    2. ' self' → logprob: -2.8123462200164795
    3. 'value' → logprob: -8.562346458435059
    4. '       ' → logprob: -8.937346458435059
    5. ' value' → logprob: -9.812346458435059
    6. '   ' → logprob: -14.562346458435059
    7. '	self' → logprob: -14.687346458435059
    8. ' ' → logprob: -16.062345504760742
    9. 'int' → logprob: -16.062345504760742
    10. ' ' → logprob: -17.562345504760742

Token 310: '.d' (ID: 1380)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6932344436645508
    2. '.d' → logprob: -0.6932344436645508
    3. ' .' → logprob: -10.44323444366455
    4. 'd' → logprob: -10.44323444366455
    5. 'digits' → logprob: -11.56823444366455
    6. '[' → logprob: -12.06823444366455
    7. '.tokens' → logprob: -12.94323444366455
    8. '.д' → logprob: -13.44323444366455
    9. '._' → logprob: -13.69323444366455
    10. '.
' → logprob: -13.94323444366455

Token 311: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0020470055751502514
    2. 'digits' → logprob: -6.377047061920166
    3. 'ig' → logprob: -8.502046585083008
    4. 'its' → logprob: -9.627046585083008
    5. 'igts' → logprob: -10.252046585083008
    6. 'g' → logprob: -11.377046585083008
    7. 'i' → logprob: -11.627046585083008
    8. 'igit' → logprob: -12.252046585083008
    9. '_digits' → logprob: -13.377046585083008
    10. '__' → logprob: -13.752046585083008

Token 312: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0001462107611587271
    2. '[' → logprob: -8.87514591217041
    3. '=' → logprob: -13.25014591217041
    4. 'index' → logprob: -13.37514591217041
    5. '[Index' → logprob: -13.50014591217041
    6. '=index' → logprob: -14.12514591217041
    7. '[ind' → logprob: -15.12514591217041
    8. '[
' → logprob: -15.12514591217041
    9. '```' → logprob: -16.375146865844727
    10. '<|end|>' → logprob: -16.500146865844727

Token 313: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2780788838863373
    2. ' =' → logprob: -2.02807879447937
    3. ']' → logprob: -2.77807879447937
    4. ']=' → logprob: -3.52807879447937
    5. ')' → logprob: -4.528079032897949
    6. ')=' → logprob: -5.278079032897949
    7. ',' → logprob: -5.653079032897949
    8. ' ]' → logprob: -8.77807903289795
    9. ' )' → logprob: -10.52807903289795
    10. '<|end|>' → logprob: -10.77807903289795

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021012276411057
    2. ' =' → logprob: -2.350210189819336
    3. '=value' → logprob: -12.975210189819336
    4. '=
' → logprob: -14.725210189819336
    5. ' =
' → logprob: -15.225210189819336
    6. '=

' → logprob: -15.350210189819336
    7. '＝' → logprob: -15.725210189819336
    8. '=int' → logprob: -17.475210189819336
    9. '<|end|>' → logprob: -17.600210189819336
    10. ')=' → logprob: -17.850210189819336

Token 315: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.029750484973192215
    2. ' value' → logprob: -3.5297505855560303
    3. '	value' → logprob: -18.77975082397461
    4. 'int' → logprob: -20.40475082397461
    5. '0' → logprob: -20.90475082397461
    6. ' ' → logprob: -21.15475082397461
    7. '$value' → logprob: -21.15475082397461
    8. '(value' → logprob: -21.27975082397461
    9. ''value' → logprob: -21.52975082397461
    10. '"value' → logprob: -21.77975082397461

Token 316: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 317: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.13253222405910492
    2. '__' → logprob: -2.3825321197509766
    3. ' __' → logprob: -4.132532119750977
    4. ' to' → logprob: -4.382532119750977
    5. 'copy' → logprob: -7.257532119750977
    6. 'reverse' → logprob: -7.507532119750977
    7. 'as' → logprob: -7.882532119750977
    8. 'pop' → logprob: -8.257532119750977
    9. 'from' → logprob: -8.632532119750977
    10. 'normalize' → logprob: -8.757532119750977

Token 320: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.11193931102752686
    2. '_number' → logprob: -2.3619394302368164
    3. '_list' → logprob: -4.736939430236816
    4. 'int' → logprob: -6.736939430236816
    5. '_' → logprob: -7.236939430236816
    6. '_digits' → logprob: -7.986939430236816
    7. '_integer' → logprob: -8.236939430236816
    8. '_string' → logprob: -8.986939430236816
    9. '_array' → logprob: -9.486939430236816
    10. '_digit' → logprob: -9.736939430236816

Token 321: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005141134839504957
    2. '(' → logprob: -5.755141258239746
    3. '()' → logprob: -6.380141258239746
    4. 'self' → logprob: -8.380141258239746
    5. '(
' → logprob: -11.505141258239746
    6. '(s' → logprob: -11.505141258239746
    7. ' (' → logprob: -12.130141258239746
    8. '   ' → logprob: -12.380141258239746
    9. 's' → logprob: -13.380141258239746
    10. '(se' → logprob: -14.005141258239746

Token 322: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20456033945083618
    2. '):' → logprob: -1.9545602798461914
    3. 'self' → logprob: -3.7045602798461914
    4. '(self' → logprob: -4.079560279846191
    5. '):
' → logprob: -6.704560279846191
    6. '()' → logprob: -9.204560279846191
    7. '):

' → logprob: -9.329560279846191
    8. ')(' → logprob: -9.454560279846191
    9. ')}' → logprob: -9.579560279846191
    10. '(' → logprob: -9.579560279846191

Token 323: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.229872087715194e-05
    2. '(' → logprob: -9.875061988830566
    3. 'self' → logprob: -11.875061988830566
    4. ' (' → logprob: -13.125061988830566
    5. '   ' → logprob: -14.000061988830566
    6. '(s' → logprob: -14.875061988830566
    7. '(
' → logprob: -15.625061988830566
    8. '       ' → logprob: -15.750061988830566
    9. 's' → logprob: -16.500062942504883
    10. ' self' → logprob: -16.750062942504883

Token 324: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31326186656951904
    2. 'int' → logprob: -1.313261866569519
    3. '(int' → logprob: -16.813261032104492
    4. ' ' → logprob: -17.188261032104492
    5. '[int' → logprob: -17.188261032104492
    6. '	int' → logprob: -19.063261032104492
    7. '   ' → logprob: -19.063261032104492
    8. ':int' → logprob: -19.938261032104492
    9. '<int' → logprob: -20.063261032104492
    10. '_int' → logprob: -20.688261032104492

Token 325: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016322131268680096
    2. '(' → logprob: -6.501632213592529
    3. 'self' → logprob: -9.876631736755371
    4. '(
' → logprob: -9.876631736755371
    5. '       ' → logprob: -10.876631736755371
    6. '   ' → logprob: -12.001631736755371
    7. '(Self' → logprob: -14.501631736755371
    8. '(s' → logprob: -14.876631736755371
    9. ':' → logprob: -15.126631736755371
    10. ' (' → logprob: -15.501631736755371

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003639988135546446
    2. '0' → logprob: -6.378640174865723
    3. '   ' → logprob: -7.128640174865723
    4. ' ' → logprob: -8.128640174865723
    5. '    ' → logprob: -8.253640174865723
    6. ' return' → logprob: -8.628640174865723
    7. 'return' → logprob: -9.378640174865723
    8. '        ' → logprob: -9.503640174865723
    9. '      ' → logprob: -10.003640174865723
    10. 'result' → logprob: -10.003640174865723

Token 327: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0025429665111005306
    2. 'value' → logprob: -6.752542972564697
    3. 'num' → logprob: -7.252542972564697
    4. 'return' → logprob: -8.252542495727539
    5. 'res' → logprob: -8.877542495727539
    6. ' result' → logprob: -9.002542495727539
    7. 'total' → logprob: -9.627542495727539
    8. '       ' → logprob: -9.877542495727539
    9. 'number' → logprob: -10.877542495727539
    10. '   ' → logprob: -13.627542495727539

Token 328: ' 上' (ID: 30555)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.004494089167565107
    2. 'value' → logprob: -6.2544941902160645
    3. 'return' → logprob: -7.3794941902160645
    4. 'num' → logprob: -7.3794941902160645
    5. 'total' → logprob: -7.5044941902160645
    6. ' result' → logprob: -7.8794941902160645
    7. 'res' → logprob: -8.004493713378906
    8. 'number' → logprob: -10.379493713378906
    9. 'val' → logprob: -12.254493713378906
    10. 'n' → logprob: -12.504493713378906

Token 329: '位' (ID: 9838)
  Prédit: '位'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '位' → logprob: -0.0005230080569162965
    2. '   ' → logprob: -8.37552261352539
    3. 'return' → logprob: -9.50052261352539
    4. ' 位' → logprob: -9.87552261352539
    5. '     ' → logprob: -10.50052261352539
    6. '       ' → logprob: -10.87552261352539
    7. '0' → logprob: -10.87552261352539
    8. 'の' → logprob: -11.12552261352539
    9. 'に' → logprob: -11.25052261352539
    10. 'から' → logprob: -11.37552261352539

Token 330: '�' (ID: 11959)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5437853336334229
    2. 'value' → logprob: -1.4187853336334229
    3. 'digit' → logprob: -2.918785333633423
    4. ' =' → logprob: -3.418785333633423
    5. '_value' → logprob: -4.043785095214844
    6. '位' → logprob: -4.043785095214844
    7. 'number' → logprob: -4.418785095214844
    8. 'から' → logprob: -5.168785095214844
    9. 'result' → logprob: -5.168785095214844
    10. '   ' → logprob: -5.168785095214844

Token 331: '�' (ID: 223)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2824121713638306
    2. '       ' → logprob: -1.2824121713638306
    3. '位' → logprob: -2.157412052154541
    4. ' ' → logprob: -2.657412052154541
    5. '=' → logprob: -2.782412052154541
    6. ' =' → logprob: -2.907412052154541
    7. '      ' → logprob: -3.407412052154541
    8. '     ' → logprob: -3.532412052154541
    9. '  ' → logprob: -4.282412052154541
    10. '    ' → logprob: -4.282412052154541

Token 332: 'から' (ID: 27500)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.3163013458251953
    2. 'から' → logprob: -2.0663013458251953
    3. 'result' → logprob: -2.8163013458251953
    4. '=' → logprob: -3.5663013458251953
    5. 'return' → logprob: -4.941301345825195
    6. 'まで' → logprob: -5.191301345825195
    7. 'に' → logprob: -5.316301345825195
    8. 'number' → logprob: -5.316301345825195
    9. 'を' → logprob: -5.316301345825195
    10. 'digit' → logprob: -5.316301345825195

Token 333: '連' (ID: 37660)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4266423285007477
    2. 'res' → logprob: -1.3016422986984253
    3. ' res' → logprob: -3.676642417907715
    4. ' result' → logprob: -3.801642417907715
    5. 're' → logprob: -4.176642417907715
    6. 'sum' → logprob: -5.301642417907715
    7. 'return' → logprob: -5.926642417907715
    8. 'val' → logprob: -7.176642417907715
    9. '0' → logprob: -7.301642417907715
    10. 'ans' → logprob: -7.426642417907715

Token 334: '続' (ID: 47554)
  Prédit: '結'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '結' → logprob: -0.024839067831635475
    2. '続' → logprob: -4.149838924407959
    3. '接' → logprob: -5.274838924407959
    4. 'ね' → logprob: -7.649838924407959
    5. '```' → logprob: -7.774838924407959
    6. 'digit' → logprob: -8.399839401245117
    7. '\xe9\x8e' → logprob: -8.524839401245117
    8. '   ' → logprob: -8.524839401245117
    9. '番' → logprob: -8.649839401245117
    10. '立' → logprob: -8.649839401245117

Token 335: 'する' (ID: 39065)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014973665587604046
    2. ' for' → logprob: -4.7649736404418945
    3. '   ' → logprob: -6.2649736404418945
    4. '       ' → logprob: -7.1399736404418945
    5. 'self' → logprob: -7.2649736404418945
    6. 'して' → logprob: -7.7649736404418945
    7. 'return' → logprob: -8.264973640441895
    8. 'i' → logprob: -8.889973640441895
    9. 'range' → logprob: -9.139973640441895
    10. 'value' → logprob: -9.139973640441895

Token 336: '0' (ID: 15)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.49290454387664795
    2. 'res' → logprob: -1.367904543876648
    3. 'num' → logprob: -3.2429046630859375
    4. ' result' → logprob: -3.7429046630859375
    5. 'value' → logprob: -4.3679046630859375
    6. 're' → logprob: -4.3679046630859375
    7. ' res' → logprob: -4.3679046630859375
    8. 'return' → logprob: -4.7429046630859375
    9. 'digits' → logprob: -4.9929046630859375
    10. 'digit' → logprob: -5.3679046630859375

Token 337: 'を' (ID: 7277)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: '除' (ID: 18593)
  Prédit: 'skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'skip' → logprob: -0.5295706987380981
    2. '除' → logprob: -1.1545706987380981
    3. 'remove' → logprob: -3.5295705795288086
    4. 'for' → logprob: -3.5295705795288086
    5. 'while' → logprob: -4.154570579528809
    6. 'count' → logprob: -4.654570579528809
    7. '省' → logprob: -6.654570579528809
    8. 'sk' → logprob: -6.779570579528809
    9. 'pass' → logprob: -6.904570579528809
    10. 'removed' → logprob: -7.029570579528809

Token 339: '去' (ID: 13817)
  Prédit: 'いた'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'いた' → logprob: -0.22793294489383698
    2. 'く' → logprob: -2.227932929992676
    3. '外' → logprob: -3.227932929992676
    4. 'い' → logprob: -3.227932929992676
    5. '去' → logprob: -4.227932929992676
    6. '```' → logprob: -6.852932929992676
    7. 'いて' → logprob: -7.727932929992676
    8. 'outer' → logprob: -8.352932929992676
    9. 'か' → logprob: -8.727932929992676
    10. 'き' → logprob: -8.977932929992676

Token 340: 'して' (ID: 22440)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0511527061462402
    2. 'count' → logprob: -1.5511527061462402
    3. 'while' → logprob: -2.0511527061462402
    4. 'result' → logprob: -2.3011527061462402
    5. 'num' → logprob: -3.1761527061462402
    6. 'i' → logprob: -3.5511527061462402
    7. ' i' → logprob: -3.6761527061462402
    8. '
' → logprob: -4.05115270614624
    9. 'digits' → logprob: -4.05115270614624
    10. ' while' → logprob: -4.30115270614624

Token 341: '整数' (ID: 173952)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0146821737289429
    2. 'res' → logprob: -1.5146821737289429
    3. 'num' → logprob: -2.2646822929382324
    4. 'value' → logprob: -2.2646822929382324
    5. ' res' → logprob: -2.5146822929382324
    6. 'val' → logprob: -3.5146822929382324
    7. ' result' → logprob: -3.8896822929382324
    8. 'digits' → logprob: -4.014682292938232
    9. 'd' → logprob: -4.514682292938232
    10. ' value' → logprob: -4.639682292938232

Token 342: 'に' (ID: 5280)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.710166096687317
    2. 'result' → logprob: -1.835166096687317
    3. '       ' → logprob: -1.960166096687317
    4. 'digits' → logprob: -2.0851659774780273
    5. 'value' → logprob: -2.2101659774780273
    6. ' =' → logprob: -2.7101659774780273
    7. '=' → logprob: -2.8351659774780273
    8. 'num' → logprob: -3.2101659774780273
    9. 'val' → logprob: -3.9601659774780273
    10. 's' → logprob: -4.460165977478027

Token 343: '変' (ID: 60722)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2671451568603516
    2. 'num' → logprob: -1.2671451568603516
    3. 'value' → logprob: -1.7671451568603516
    4. 'val' → logprob: -2.5171451568603516
    5. 'number' → logprob: -3.1421451568603516
    6. ' res' → logprob: -3.1421451568603516
    7. 'res' → logprob: -3.3921451568603516
    8. '       ' → logprob: -4.267145156860352
    9. ' num' → logprob: -4.517145156860352
    10. 'n' → logprob: -4.767145156860352

Token 344: '換' (ID: 74474)
  Prédit: '換'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '換' → logprob: -0.00022761584841646254
    2. 'return' → logprob: -8.625227928161621
    3. '换' → logprob: -10.375227928161621
    4. '```' → logprob: -11.875227928161621
    5. '   ' → logprob: -12.625227928161621
    6. 'convert' → logprob: -13.500227928161621
    7. 'える' → logprob: -13.625227928161621
    8. ' return' → logprob: -14.125227928161621
    9. '       ' → logprob: -14.125227928161621
    10. 'え' → logprob: -14.875227928161621

Token 345: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7231282591819763
    2. 'num' → logprob: -0.9731282591819763
    3. '       ' → logprob: -2.348128318786621
    4. 'value' → logprob: -4.223128318786621
    5. 'number' → logprob: -4.473128318786621
    6. 'n' → logprob: -4.848128318786621
    7. 'res' → logprob: -6.348128318786621
    8. '
' → logprob: -6.473128318786621
    9. 'val' → logprob: -7.098128318786621
    10. 'def' → logprob: -7.348128318786621

Token 346: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9357821941375732
    2. 'num' → logprob: -1.0607821941375732
    3. '       ' → logprob: -1.6857821941375732
    4. 'number' → logprob: -3.1857821941375732
    5. 'n' → logprob: -4.560782432556152
    6. 'value' → logprob: -4.810782432556152
    7. 'digits' → logprob: -5.185782432556152
    8. ' result' → logprob: -6.185782432556152
    9. ' num' → logprob: -6.560782432556152
    10. 'res' → logprob: -6.810782432556152

Token 347: ' d' (ID: 272)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.519036054611206
    2. 'result' → logprob: -1.519036054611206
    3. 'number' → logprob: -2.394036054611206
    4. 'value' → logprob: -3.519036054611206
    5. 'res' → logprob: -3.894036054611206
    6. 'digits' → logprob: -3.894036054611206
    7. 'n' → logprob: -4.394036293029785
    8. 'for' → logprob: -5.269036293029785
    9. 'i' → logprob: -6.019036293029785
    10. 'total' → logprob: -6.769036293029785

Token 348: ' =' (ID: 314)
  Prédit: 'igits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.023304525762796402
    2. '       ' → logprob: -4.898304462432861
    3. 'digits' → logprob: -5.398304462432861
    4. '   ' → logprob: -6.148304462432861
    5. 'igit' → logprob: -6.273304462432861
    6. 'result' → logprob: -6.398304462432861
    7. 'i' → logprob: -7.023304462432861
    8. 'ig' → logprob: -7.148304462432861
    9. 'for' → logprob: -7.273304462432861
    10. 's' → logprob: -7.398304462432861

Token 349: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1294865757226944
    2. 'list' → logprob: -2.629486560821533
    3. '[self' → logprob: -3.254486560821533
    4. 'len' → logprob: -5.379486560821533
    5. ' self' → logprob: -6.254486560821533
    6. '[' → logprob: -6.629486560821533
    7. ' [' → logprob: -7.254486560821533
    8. '[len' → logprob: -7.254486560821533
    9. 're' → logprob: -7.629486560821533
    10. ' list' → logprob: -7.754486560821533

Token 350: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.34027090668678284
    2. 'digits' → logprob: -1.4652708768844604
    3. 'igits' → logprob: -3.21527099609375
    4. 'len' → logprob: -5.09027099609375
    5. '[::-' → logprob: -5.71527099609375
    6. 'd' → logprob: -5.71527099609375
    7. '   ' → logprob: -6.71527099609375
    8. 'Digits' → logprob: -7.59027099609375
    9. ' digits' → logprob: -7.96527099609375
    10. '[' → logprob: -8.21527099609375

Token 351: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0006575119914487004
    2. 'digits' → logprob: -7.500657558441162
    3. 'its' → logprob: -10.375657081604004
    4. 'ig' → logprob: -10.500657081604004
    5. 'igts' → logprob: -11.125657081604004
    6. 'igit' → logprob: -12.000657081604004
    7. 'i' → logprob: -12.125657081604004
    8. 'to' → logprob: -13.000657081604004
    9. '[' → logprob: -13.000657081604004
    10. '```' → logprob: -13.125657081604004

Token 352: '[:' (ID: 7808)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0044591971673071384
    2. '[:]' → logprob: -5.754459381103516
    3. '[:' → logprob: -6.754459381103516
    4. '.copy' → logprob: -9.379459381103516
    5. '[' → logprob: -10.629459381103516
    6. '
' → logprob: -12.629459381103516
    7. '[:-' → logprob: -13.879459381103516
    8. '[
' → logprob: -14.504459381103516
    9. 'copy' → logprob: -15.004459381103516
    10. '[-' → logprob: -15.004459381103516

Token 353: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6028444170951843
    2. ']
' → logprob: -1.602844476699829
    3. '[::-' → logprob: -1.727844476699829
    4. '][' → logprob: -2.852844476699829
    5. '::-' → logprob: -5.35284423828125
    6. '0' → logprob: -5.72784423828125
    7. '-' → logprob: -5.97784423828125
    8. 'len' → logprob: -6.35284423828125
    9. ':' → logprob: -6.35284423828125
    10. ']
' → logprob: -8.22784423828125

Token 354: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46829068660736084
    2. '[::-' → logprob: -1.2182906866073608
    3. ' while' → logprob: -3.7182908058166504
    4. '       ' → logprob: -3.7182908058166504
    5. 'while' → logprob: -3.7182908058166504
    6. '.reverse' → logprob: -6.09329080581665
    7. 'd' → logprob: -6.84329080581665
    8. 'for' → logprob: -7.09329080581665
    9. ' for' → logprob: -7.46829080581665
    10. '        
' → logprob: -8.593290328979492

Token 355: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.005114088766276836
    2. 'for' → logprob: -5.8801140785217285
    3. ' while' → logprob: -6.3801140785217285
    4. 'd' → logprob: -7.7551140785217285
    5. '#' → logprob: -9.005114555358887
    6. '       ' → logprob: -10.380114555358887
    7. '   ' → logprob: -11.505114555358887
    8. 'i' → logprob: -12.005114555358887
    9. '	while' → logprob: -12.130114555358887
    10. '
' → logprob: -12.880114555358887

Token 356: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.002618466503918171
    2. 'd' → logprob: -6.002618312835693
    3. ' len' → logprob: -8.877618789672852
    4. '(len' → logprob: -12.752618789672852
    5. ' d' → logprob: -15.377618789672852
    6. '	len' → logprob: -15.752618789672852
    7. '0' → logprob: -18.12761878967285
    8. '
' → logprob: -18.37761878967285
    9. '[len' → logprob: -18.87761878967285
    10. '   ' → logprob: -19.12761878967285

Token 357: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.5048530030981055e-06
    2. 'd' → logprob: -13.875001907348633
    3. '(' → logprob: -14.500001907348633
    4. ' (' → logprob: -18.500001907348633
    5. ' d' → logprob: -19.875001907348633
    6. '>' → logprob: -20.375001907348633
    7. '	d' → logprob: -20.500001907348633
    8. '(
' → logprob: -21.750001907348633
    9. 's' → logprob: -22.125001907348633
    10. '[d' → logprob: -22.125001907348633

Token 358: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.000667640648316592
    2. ' >' → logprob: -7.375667572021484
    3. ')>' → logprob: -10.625667572021484
    4. ')' → logprob: -11.875667572021484
    5. '＞' → logprob: -11.875667572021484
    6. 'and' → logprob: -13.875667572021484
    7. '()>' → logprob: -14.000667572021484
    8. '&gt' → logprob: -15.000667572021484
    9. 'd' → logprob: -15.375667572021484
    10. ' ' → logprob: -15.625667572021484

Token 359: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0003035266126971692
    2. ' >' → logprob: -8.125303268432617
    3. '＞' → logprob: -12.750303268432617
    4. 'and' → logprob: -12.875303268432617
    5. '&gt' → logprob: -13.625303268432617
    6. '()>' → logprob: -14.750303268432617
    7. '>=' → logprob: -15.500303268432617
    8. ')>' → logprob: -16.250303268432617
    9. ' ' → logprob: -17.125303268432617
    10. ' and' → logprob: -17.500303268432617

Token 360: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00250348262488842
    2. '0' → logprob: -6.002503395080566
    3. ' ' → logprob: -10.502503395080566
    4. '>' → logprob: -15.002503395080566
    5. '   ' → logprob: -17.127504348754883
    6. '１' → logprob: -17.377504348754883
    7. '```' → logprob: -19.627504348754883
    8. ' >' → logprob: -19.877504348754883
    9. '
' → logprob: -20.377504348754883
    10. '    ' → logprob: -21.002504348754883

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '0' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.25000286102295
    4. '１' → logprob: -16.500003814697266
    5. '>' → logprob: -17.875003814697266
    6. '   ' → logprob: -18.500003814697266
    7. '
' → logprob: -20.875003814697266
    8. '```' → logprob: -20.875003814697266
    9. '``' → logprob: -21.125003814697266
    10. '۱' → logprob: -21.250003814697266

Token 362: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6779031157493591
    2. ' and' → logprob: -0.8029031157493591
    3. '>' → logprob: -3.177903175354004
    4. ' >' → logprob: -6.052903175354004
    5. ' ' → logprob: -9.302903175354004
    6. '   ' → logprob: -9.552903175354004
    7. 'd' → logprob: -10.302903175354004
    8. '    ' → logprob: -10.552903175354004
    9. 'と' → logprob: -11.177903175354004
    10. '0' → logprob: -12.177903175354004

Token 363: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.676292231422849e-05
    2. ' d' → logprob: -11.000017166137695
    3. 'len' → logprob: -18.625017166137695
    4. '	d' → logprob: -20.000017166137695
    5. '   ' → logprob: -20.625017166137695
    6. '
' → logprob: -21.500017166137695
    7. '```' → logprob: -21.875017166137695
    8. ' ' → logprob: -22.375017166137695
    9. ')d' → logprob: -22.625017166137695
    10. '0' → logprob: -22.750017166137695

Token 364: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -6.52788148727268e-05
    2. '[' → logprob: -9.750064849853516
    3. '-' → logprob: -12.250064849853516
    4. '0' → logprob: -13.625064849853516
    5. '```' → logprob: -15.250064849853516
    6. 'd' → logprob: -15.375064849853516
    7. '
' → logprob: -16.000064849853516
    8. ' [-' → logprob: -16.125064849853516
    9. '[
' → logprob: -16.625064849853516
    10. '   ' → logprob: -17.125064849853516

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '１' → logprob: -18.125
    4. '0' → logprob: -19.0
    5. '   ' → logprob: -20.375
    6. '  ' → logprob: -20.875
    7. '```' → logprob: -20.875
    8. '۱' → logprob: -21.125
    9. ']==' → logprob: -22.125
    10. '१' → logprob: -22.125

Token 366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14390064775943756
    2. ']==' → logprob: -2.0189006328582764
    3. '==' → logprob: -6.7689008712768555
    4. ' ]' → logprob: -10.143900871276855
    5. ')==' → logprob: -11.393900871276855
    6. ' ==' → logprob: -12.268900871276855
    7. ')' → logprob: -12.268900871276855
    8. '']==' → logprob: -12.643900871276855
    9. '=' → logprob: -12.893900871276855
    10. '[' → logprob: -13.143900871276855

Token 367: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007728125900030136
    2. ' ==' → logprob: -4.882728099822998
    3. '0' → logprob: -9.632728576660156
    4. '=' → logprob: -10.007728576660156
    5. '==
' → logprob: -12.257728576660156
    6. ']==' → logprob: -12.757728576660156
    7. ')==' → logprob: -13.382728576660156
    8. '()==' → logprob: -14.257728576660156
    9. ' ' → logprob: -14.382728576660156
    10. '[' → logprob: -14.632728576660156

Token 368: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '０' → logprob: -20.000001907348633
    4. '۰' → logprob: -20.500001907348633
    5. '   ' → logprob: -22.000001907348633
    6. '00' → logprob: -22.000001907348633
    7. '  ' → logprob: -22.750001907348633
    8. '
' → logprob: -22.875001907348633
    9. '    ' → logprob: -23.125001907348633
    10. '٠' → logprob: -23.500001907348633

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '０' → logprob: -17.7500057220459
    4. '۰' → logprob: -18.2500057220459
    5. '০' → logprob: -20.3750057220459
    6. '00' → logprob: -20.5000057220459
    7. '٠' → logprob: -21.0000057220459
    8. '  ' → logprob: -21.7500057220459
    9. '000' → logprob: -21.7500057220459
    10. '०' → logprob: -21.8125057220459

Token 370: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4295339286327362
    2. ':' → logprob: -1.0545339584350586
    3. '       ' → logprob: -8.179533958435059
    4. '   ' → logprob: -8.429533958435059
    5. '):
' → logprob: -8.929533958435059
    6. ' and' → logprob: -8.929533958435059
    7. ':
' → logprob: -10.804533958435059
    8. ':

' → logprob: -11.429533958435059
    9. ' :
' → logprob: -11.804533958435059
    10. 'and' → logprob: -12.054533958435059

Token 371: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12089705467224121
    2. ' d' → logprob: -2.745897054672241
    3. 'd' → logprob: -3.120897054672241
    4. '       ' → logprob: -5.37089729309082
    5. '   ' → logprob: -7.87089729309082
    6. ' del' → logprob: -9.37089729309082
    7. '	d' → logprob: -9.74589729309082
    8. ',d' → logprob: -9.87089729309082
    9. '-' → logprob: -9.99589729309082
    10. ',' → logprob: -10.12089729309082

Token 372: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.02975858747959137
    2. ' d' → logprob: -3.5297586917877197
    3. '	d' → logprob: -12.40475845336914
    4. '           ' → logprob: -12.52975845336914
    5. '       ' → logprob: -15.40475845336914
    6. '   ' → logprob: -16.27975845336914
    7. '               ' → logprob: -16.77975845336914
    8. '
' → logprob: -17.15475845336914
    9. ')d' → logprob: -17.27975845336914
    10. ' ' → logprob: -18.15475845336914

Token 373: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0002670575922820717
    2. '.' → logprob: -8.250267028808594
    3. 'pop' → logprob: -12.125267028808594
    4. '=' → logprob: -15.750267028808594
    5. ' pop' → logprob: -15.750267028808594
    6. ' .' → logprob: -16.750267028808594
    7. '	pop' → logprob: -17.375267028808594
    8. '_pop' → logprob: -17.875267028808594
    9. '   ' → logprob: -19.500267028808594
    10. '(pop' → logprob: -20.000267028808594

Token 374: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1756367712223437e-05
    2. '()
' → logprob: -11.750011444091797
    3. '(-' → logprob: -13.125011444091797
    4. '()-' → logprob: -13.750011444091797
    5. '()

' → logprob: -15.125011444091797
    6. '())' → logprob: -15.500011444091797
    7. '()]' → logprob: -16.875011444091797
    8. '(' → logprob: -17.625011444091797
    9. '()>' → logprob: -17.750011444091797
    10. '()\' → logprob: -18.000011444091797

Token 375: '       ' (ID: 309)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.038019679486751556
    2. '[' → logprob: -4.28801965713501
    3. '       ' → logprob: -4.41301965713501
    4. '.reverse' → logprob: -5.66301965713501
    5. ' ' → logprob: -6.53801965713501
    6. '.' → logprob: -6.66301965713501
    7. '-' → logprob: -6.78801965713501
    8. ' return' → logprob: -7.28801965713501
    9. '[-' → logprob: -7.41301965713501
    10. '   ' → logprob: -7.78801965713501

Token 376: ' value' (ID: 1432)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1475304365158081
    2. 'return' → logprob: -2.2725305557250977
    3. 'd' → logprob: -3.5225305557250977
    4. 'res' → logprob: -6.772530555725098
    5. 'value' (adapté à ' value') → logprob: -7.147530555725098
    6. ' result' → logprob: -7.397530555725098
    7. 'int' → logprob: -7.522530555725098
    8. 'num' → logprob: -7.897530555725098
    9. 'number' → logprob: -7.897530555725098
    10. ' return' → logprob: -8.772530555725098

Token 377: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048588961362838745
    2. ' =' → logprob: -3.048588991165161
    3. ' ' → logprob: -14.673588752746582
    4. '*=' → logprob: -14.923588752746582
    5. ' *=' → logprob: -15.173588752746582
    6. '＝' → logprob: -15.423588752746582
    7. '```' → logprob: -16.7985897064209
    8. '+=' → logprob: -16.7985897064209
    9. ' +=' → logprob: -17.0485897064209
    10. 'return' → logprob: -17.1735897064209

Token 378: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. 'sum' → logprob: -14.625027656555176
    4. ' sum' → logprob: -17.625028610229492
    5. '   ' → logprob: -18.125028610229492
    6. 'd' → logprob: -18.500028610229492
    7. '０' → logprob: -20.625028610229492
    8. '10' → logprob: -20.875028610229492
    9. '  ' → logprob: -21.125028610229492
    10. '```' → logprob: -21.250028610229492

Token 379: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. 'sum' → logprob: -11.50001049041748
    3. ' ' → logprob: -19.500009536743164
    4. '０' → logprob: -20.375009536743164
    5. 'd' → logprob: -21.000009536743164
    6. '10' → logprob: -21.250009536743164
    7. ' sum' → logprob: -21.875009536743164
    8. '1' → logprob: -21.875009536743164
    9. '۰' → logprob: -22.375009536743164
    10. '000' → logprob: -22.500009536743164

Token 380: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24907392263412476
    2. '
' → logprob: -1.9990739822387695
    3. 'for' → logprob: -3.1240739822387695
    4. ' for' → logprob: -3.7490739822387695
    5. '<|end|>' → logprob: -4.3740739822387695
    6. ' 
' → logprob: -6.9990739822387695
    7. ')' → logprob: -6.9990739822387695
    8. 'd' → logprob: -7.3740739822387695
    9. ' ' → logprob: -7.7490739822387695
    10. '   ' → logprob: -8.24907398223877

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29968294501304626
    2. ' for' → logprob: -1.7996829748153687
    3. 'for' → logprob: -2.424682855606079
    4. '
' → logprob: -5.549683094024658
    5. '<|end|>' → logprob: -7.799683094024658
    6. ')' → logprob: -8.5496826171875
    7. '   ' → logprob: -8.7996826171875
    8. '	for' → logprob: -9.0496826171875
    9. ' ' → logprob: -9.6746826171875
    10. 'd' → logprob: -9.6746826171875

Token 382: ' for' (ID: 395)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: ' digit' (ID: 19181)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16050510108470917
    2. ' i' → logprob: -1.9105050563812256
    3. 'digit' → logprob: -8.410505294799805
    4. ' digit' → logprob: -9.785505294799805
    5. '	i' → logprob: -14.910505294799805
    6. 'idx' → logprob: -14.910505294799805
    7. 'x' → logprob: -15.035505294799805
    8. ' ' → logprob: -15.160505294799805
    9. '(i' → logprob: -15.785505294799805
    10. '   ' → logprob: -16.160505294799805

Token 384: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006014237646013498
    2. 'in' → logprob: -5.131014347076416
    3. '[::-' → logprob: -10.381013870239258
    4. 'd' → logprob: -10.756013870239258
    5. '   ' → logprob: -11.631013870239258
    6. 's' → logprob: -12.381013870239258
    7. ',' → logprob: -12.506013870239258
    8. ' ' → logprob: -12.756013870239258
    9. '    ' → logprob: -13.131013870239258
    10. ' i' → logprob: -13.381013870239258

Token 385: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.008230742067098618
    2. ' reversed' → logprob: -5.383230686187744
    3. 'd' → logprob: -5.633230686187744
    4. '   ' → logprob: -11.008231163024902
    5. '	re' → logprob: -12.633231163024902
    6. 'reverse' → logprob: -13.258231163024902
    7. '[::-' → logprob: -13.258231163024902
    8. '
' → logprob: -14.008231163024902
    9. ' d' → logprob: -14.133231163024902
    10. 'rev' → logprob: -14.258231163024902

Token 386: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00411461153998971
    2. 'd' → logprob: -5.504114627838135
    3. ' d' → logprob: -10.379114151000977
    4. '(' → logprob: -12.879114151000977
    5. '(range' → logprob: -13.254114151000977
    6. 'range' → logprob: -15.379114151000977
    7. '	d' → logprob: -15.379114151000977
    8. ')d' → logprob: -15.879114151000977
    9. '(
' → logprob: -16.254114151000977
    10. ' (' → logprob: -16.504114151000977

Token 387: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20143096148967743
    2. '):' → logprob: -1.7014309167861938
    3. '       ' → logprob: -11.951431274414062
    4. '):
' → logprob: -12.326431274414062
    5. ' ):
' → logprob: -13.201431274414062
    6. ':
' → logprob: -13.576431274414062
    7. ')' → logprob: -13.826431274414062
    8. ':' → logprob: -14.326431274414062
    9. '   ' → logprob: -14.326431274414062
    10. ' ):' → logprob: -14.451431274414062

Token 388: '           ' (ID: 352)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.30058592557907104
    2. '           ' → logprob: -1.9255859851837158
    3. ' value' → logprob: -2.175585985183716
    4. '10' → logprob: -8.800585746765137
    5. '            ' → logprob: -10.175585746765137
    6. '   ' → logprob: -10.800585746765137
    7. '```' → logprob: -10.925585746765137
    8. '       ' → logprob: -11.425585746765137
    9. '
' → logprob: -11.925585746765137
    10. '            
' → logprob: -12.300585746765137

Token 389: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' (adapté à ' value') → logprob: -0.0019287518225610256
    2. ' value' → logprob: -6.251928806304932
    3. '           ' → logprob: -15.751928329467773
    4. '   ' → logprob: -18.376928329467773
    5. '10' → logprob: -18.376928329467773
    6. '
' → logprob: -19.251928329467773
    7. '       ' → logprob: -20.251928329467773
    8. '            
' → logprob: -20.501928329467773
    9. '	value' → logprob: -20.751928329467773
    10. '```' → logprob: -21.501928329467773

Token 390: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5781295299530029
    2. ' =' → logprob: -0.8281295299530029
    3. '*=' → logprob: -6.328129768371582
    4. ' *=' → logprob: -7.828129768371582
    5. '＝' → logprob: -13.578129768371582
    6. ' ' → logprob: -13.953129768371582
    7. '   ' → logprob: -14.578129768371582
    8. 'value' → logprob: -14.828129768371582
    9. ' <<=' → logprob: -15.078129768371582
    10. '=value' → logprob: -15.703129768371582

Token 391: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0005549400229938328
    2. ' value' → logprob: -7.500555038452148
    3. '10' → logprob: -13.375555038452148
    4. '   ' → logprob: -15.375555038452148
    5. '(value' → logprob: -15.875555038452148
    6. '	value' → logprob: -18.00055503845215
    7. '"value' → logprob: -18.12555503845215
    8. '  ' → logprob: -18.87555503845215
    9. ' ' → logprob: -18.87555503845215
    10. '```' → logprob: -19.50055503845215

Token 392: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10076922178268433
    2. '*' → logprob: -2.350769281387329
    3. 'value' → logprob: -7.85076904296875
    4. ' ' → logprob: -9.47576904296875
    5. '10' → logprob: -9.72576904296875
    6. '0' → logprob: -10.85076904296875
    7. ' value' → logprob: -11.72576904296875
    8. '           ' → logprob: -13.22576904296875
    9. '[value' → logprob: -13.35076904296875
    10. '.value' → logprob: -13.85076904296875

Token 393: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '
' → logprob: -18.625001907348633
    6. '１０' → logprob: -20.750001907348633
    7. '

' → logprob: -21.250001907348633
    8. '=' → logprob: -21.375001907348633
    9. '  ' → logprob: -22.000001907348633
    10. '۱۰' → logprob: -22.625001907348633

Token 394: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '
' → logprob: -20.0
    4. '   ' → logprob: -20.5
    5. '```' → logprob: -20.5
    6. '１０' → logprob: -22.875
    7. '

' → logprob: -23.5
    8. '0' → logprob: -24.75
    9. '  ' → logprob: -24.875
    10. '``' → logprob: -25.125

Token 395: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019289902411401272
    2. ' +' → logprob: -6.251928806304932
    3. '+
' → logprob: -15.87692928314209
    4. '＋' → logprob: -16.126928329467773
    5. '+d' → logprob: -16.251928329467773
    6. '           ' → logprob: -17.001928329467773
    7. '0' → logprob: -17.626928329467773
    8. ' ' → logprob: -18.501928329467773
    9. ' plus' → logprob: -18.751928329467773
    10. '       ' → logprob: -19.376928329467773

Token 396: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -5.836499985889532e-05
    2. ' digit' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.750059127807617
    4. '           ' → logprob: -19.000059127807617
    5. 'dig' → logprob: -19.125059127807617
    6. '     ' → logprob: -20.125059127807617
    7. '       ' → logprob: -20.250059127807617
    8. 'd' → logprob: -20.375059127807617
    9. '         ' → logprob: -20.625059127807617
    10. '-digit' → logprob: -20.625059127807617

Token 397: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001752295414917171
    2. ' return' → logprob: -7.1267523765563965
    3. 'return' → logprob: -7.2517523765563965
    4. '
' → logprob: -9.751751899719238
    5. '   ' → logprob: -9.751751899719238
    6. '        
' → logprob: -10.376751899719238
    7. '<|end|>' → logprob: -11.001751899719238
    8. '	' → logprob: -11.126751899719238
    9. ' 
' → logprob: -11.376751899719238
    10. '	return' → logprob: -11.626751899719238

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007236333331093192
    2. ' return' → logprob: -7.500723838806152
    3. 'return' → logprob: -8.875723838806152
    4. '	' → logprob: -11.375723838806152
    5. '   ' → logprob: -11.500723838806152
    6. '	return' → logprob: -12.875723838806152
    7. '      ' → logprob: -13.000723838806152
    8. '<|end|>' → logprob: -13.750723838806152
    9. ',' → logprob: -14.375723838806152
    10. ')' → logprob: -14.875723838806152

Token 399: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4134936034679413
    2. 'return' (adapté à ' return') → logprob: -1.1634936332702637
    3. ' return' → logprob: -3.6634936332702637
    4. '   ' → logprob: -8.163493156433105
    5. '	return' → logprob: -8.163493156433105
    6. '	' → logprob: -10.038493156433105
    7. ':return' → logprob: -12.663493156433105
    8. ' ' → logprob: -13.038493156433105
    9. ')return' → logprob: -13.413493156433105
    10. '      ' → logprob: -13.413493156433105

Token 400: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.001170225441455841
    2. ' value' → logprob: -6.7511701583862305
    3. 'int' → logprob: -20.251171112060547
    4. '	value' → logprob: -20.876171112060547
    5. '0' → logprob: -21.251171112060547
    6. 'values' → logprob: -21.376171112060547
    7. '$value' → logprob: -21.501171112060547
    8. '"value' → logprob: -21.501171112060547
    9. '
' → logprob: -22.126171112060547
    10. '(value' → logprob: -22.376171112060547

Token 401: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: ' Borrow' (ID: 112685)
  Prédit: ' Borrow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Borrow' → logprob: -0.7374657392501831
    2. 'Borrow' → logprob: -0.8624657392501831
    3. 'Digit' → logprob: -3.4874658584594727
    4. ' Digit' → logprob: -3.7374658584594727
    5. 'Number' → logprob: -4.612465858459473
    6. ' Number' → logprob: -5.112465858459473
    7. 'Subtract' → logprob: -5.737465858459473
    8. 'Forget' → logprob: -6.299965858459473
    9. ' Sub' → logprob: -6.362465858459473
    10. 'Sub' → logprob: -6.487465858459473

Token 404: 'Forget' (ID: 126416)
  Prédit: 'Strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.018446890637278557
    2. 'er' → logprob: -5.143446922302246
    3. 'ing' → logprob: -5.143446922302246
    4. 'Down' → logprob: -6.768446922302246
    5. 'ed' → logprob: -6.893446922302246
    6. 'Handler' → logprob: -7.518446922302246
    7. 'Chain' → logprob: -7.518446922302246
    8. 'Step' → logprob: -7.893446922302246
    9. 'Operation' → logprob: -7.893446922302246
    10. 'Manager' → logprob: -8.018446922302246

Token 405: 'Simulator' (ID: 120745)
  Prédit: 'Strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.0004433011345099658
    2. 'ing' → logprob: -9.000443458557129
    3. 'er' → logprob: -9.750443458557129
    4. 'Step' → logprob: -9.875443458557129
    5. 'Forget' → logprob: -10.125443458557129
    6. 'Mixin' → logprob: -10.500443458557129
    7. 'Chain' → logprob: -11.125443458557129
    8. 'Rule' → logprob: -11.625443458557129
    9. 'Amount' → logprob: -12.125443458557129
    10. 'Depth' → logprob: -12.125443458557129

Token 406: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003542926860973239
    2. ':
' → logprob: -8.000354766845703
    3. '(B' → logprob: -11.625354766845703
    4. '(' → logprob: -12.625354766845703
    5. '():' → logprob: -12.625354766845703
    6. '(object' → logprob: -14.125354766845703
    7. '):' → logprob: -14.375354766845703
    8. ':

' → logprob: -14.750354766845703
    9. ':def' → logprob: -15.375354766845703
    10. '(Abstract' → logprob: -15.500354766845703

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.198043699143454e-05
    2. ' def' → logprob: -9.500091552734375
    3. ':' → logprob: -11.500091552734375
    4. 'def' → logprob: -12.875091552734375
    5. 'class' → logprob: -13.000091552734375
    6. ':
' → logprob: -14.875091552734375
    7. '```' → logprob: -15.125091552734375
    8. '(' → logprob: -15.375091552734375
    9. ' class' → logprob: -15.375091552734375
    10. '	def' → logprob: -15.500091552734375

Token 408: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007692479994148016
    2. 'class' → logprob: -7.750769138336182
    3. ' def' → logprob: -8.75076961517334
    4. ':' → logprob: -9.25076961517334
    5. ' class' → logprob: -10.37576961517334
    6. 'def' (adapté à ' def') → logprob: -10.50076961517334
    7. '(' → logprob: -12.25076961517334
    8. ' """' → logprob: -12.25076961517334
    9. ' :' → logprob: -12.62576961517334
    10. '    ' → logprob: -12.62576961517334

Token 409: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023280886933207512
    2. '__' → logprob: -3.7732808589935303
    3. 'init' → logprob: -11.02328109741211
    4. ' _' → logprob: -12.52328109741211
    5. '_init' → logprob: -12.77328109741211
    6. '   ' → logprob: -13.02328109741211
    7. ' ___' → logprob: -13.02328109741211
    8. ' init' → logprob: -13.14828109741211
    9. '_' → logprob: -13.39828109741211
    10. '```' → logprob: -13.77328109741211

Token 410: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.375
    3. 'def' → logprob: -17.5
    4. 'inite' → logprob: -19.625
    5. '(init' → logprob: -20.0
    6. '_init' → logprob: -20.375
    7. 'ini' → logprob: -20.5
    8. 'in' → logprob: -20.625
    9. 'initi' → logprob: -20.625
    10. '	init' → logprob: -20.75

Token 411: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05333941429853439
    2. '(' → logprob: -3.1783394813537598
    3. '(self' → logprob: -4.80333948135376
    4. '__(
' → logprob: -6.55333948135376
    5. '__' → logprob: -7.67833948135376
    6. '_(' → logprob: -9.428339004516602
    7. ' (' → logprob: -9.678339004516602
    8. '__((' → logprob: -11.428339004516602
    9. ')(' → logprob: -11.803339004516602
    10. ',' → logprob: -11.803339004516602

Token 412: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001863750658230856
    2. ' self' → logprob: -8.7501859664917
    3. ')' → logprob: -11.8751859664917
    4. '       ' → logprob: -12.0001859664917
    5. '   ' → logprob: -12.0001859664917
    6. '):
' → logprob: -12.3751859664917
    7. 'digits' → logprob: -13.8751859664917
    8. '(self' → logprob: -14.1251859664917
    9. 'left' → logprob: -14.3751859664917
    10. 'num' → logprob: -14.7501859664917

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06301084160804749
    2. 'self' → logprob: -3.3130109310150146
    3. '(self' → logprob: -3.9380109310150146
    4. ' (' → logprob: -6.4380106925964355
    5. ' ,' → logprob: -6.5630106925964355
    6. '(' → logprob: -7.0630106925964355
    7. ')' → logprob: -7.4380106925964355
    8. ' self' → logprob: -8.063011169433594
    9. ',self' → logprob: -8.313011169433594
    10. ')(' → logprob: -9.438011169433594

Token 414: ' A' (ID: 355)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.843113362789154
    2. 'strategy' → logprob: -1.8431134223937988
    3. 'a' → logprob: -2.468113422393799
    4. 'left' → logprob: -2.843113422393799
    5. 'number' → logprob: -3.218113422393799
    6. 'target' → logprob: -3.468113422393799
    7. 'max' → logprob: -3.593113422393799
    8. 'num' → logprob: -3.718113422393799
    9. 'x' → logprob: -4.218113422393799
    10. 'base' → logprob: -4.343113422393799

Token 415: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038737081922590733
    2. ':' → logprob: -5.628873825073242
    3. ' ,' → logprob: -8.253873825073242
    4. '):' → logprob: -12.503873825073242
    5. '_,' → logprob: -13.378873825073242
    6. ',
' → logprob: -13.628873825073242
    7. ')' → logprob: -13.878873825073242
    8. '_digits' → logprob: -14.378873825073242
    9. ':int' → logprob: -14.378873825073242
    10. ',B' → logprob: -14.503873825073242

Token 416: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2536603510379791
    2. 'Digit' → logprob: -1.6286603212356567
    3. 'list' → logprob: -4.503660202026367
    4. ')' → logprob: -5.003660202026367
    5. 'List' → logprob: -5.128660202026367
    6. '[int' → logprob: -6.128660202026367
    7. ' int' → logprob: -7.378660202026367
    8. ' Digit' → logprob: -8.628660202026367
    9. 'Digits' → logprob: -8.753660202026367
    10. 'Digital' → logprob: -8.878660202026367

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.966313281329349e-05
    2. ' ,' → logprob: -10.000049591064453
    3. ',A' → logprob: -13.500049591064453
    4. ',B' → logprob: -14.375049591064453
    5. '   ' → logprob: -14.500049591064453
    6. ',int' → logprob: -14.750049591064453
    7. ',
' → logprob: -15.000049591064453
    8. '‌,' → logprob: -15.000049591064453
    9. ')' → logprob: -16.125049591064453
    10. ',b' → logprob: -16.250049591064453

Token 418: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.052239932119846344
    2. 'K' → logprob: -3.8022398948669434
    3. ' B' → logprob: -3.9272398948669434
    4. 'N' → logprob: -5.177239894866943
    5. ' K' → logprob: -7.302239894866943
    6. 'M' → logprob: -7.802239894866943
    7. 'k' → logprob: -7.802239894866943
    8. '   ' → logprob: -7.927239894866943
    9. 'L' → logprob: -8.177240371704102
    10. 'A' → logprob: -9.052240371704102

Token 419: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05670969933271408
    2. ':' → logprob: -2.9317097663879395
    3. '):' → logprob: -7.1817097663879395
    4. ' ,' → logprob: -7.3067097663879395
    5. '):
' → logprob: -8.431709289550781
    6. '   ' → logprob: -9.556709289550781
    7. ':int' → logprob: -9.931709289550781
    8. ')' → logprob: -10.556709289550781
    9. ',int' → logprob: -11.306709289550781
    10. ',
' → logprob: -12.431709289550781

Token 420: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.026355918496847153
    2. ' int' → logprob: -3.6513559818267822
    3. 'B' → logprob: -10.276355743408203
    4. '   ' → logprob: -11.776355743408203
    5. 'A' → logprob: -12.401355743408203
    6. ' ' → logprob: -13.026355743408203
    7. '[int' → logprob: -13.401355743408203
    8. ':int' → logprob: -13.776355743408203
    9. '  ' → logprob: -14.026355743408203
    10. ')' → logprob: -14.026355743408203

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039890751242637634
    2. '):' → logprob: -3.289890766143799
    3. '):
' → logprob: -6.414890766143799
    4. '   ' → logprob: -9.66489028930664
    5. ' ,' → logprob: -9.66489028930664
    6. ')' → logprob: -9.78989028930664
    7. ':' → logprob: -11.78989028930664
    8. '):
' → logprob: -11.91489028930664
    9. '       ' → logprob: -12.91489028930664
    10. ',
' → logprob: -13.03989028930664

Token 422: ' K' (ID: 658)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.19948826730251312
    2. ' strategy' → logprob: -2.1994881629943848
    3. 'borrow' → logprob: -4.074488162994385
    4. 'C' → logprob: -4.324488162994385
    5. 'forget' → logprob: -4.699488162994385
    6. ' ' → logprob: -5.074488162994385
    7. 'length' → logprob: -5.199488162994385
    8. 'K' → logprob: -6.199488162994385
    9. '   ' → logprob: -6.324488162994385
    10. ' C' → logprob: -6.324488162994385

Token 423: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12065311521291733
    2. ',' → logprob: -2.4956531524658203
    3. '):' → logprob: -3.4956531524658203
    4. ':int' → logprob: -7.74565315246582
    5. '):
' → logprob: -8.12065315246582
    6. ')' → logprob: -9.99565315246582
    7. '=' → logprob: -10.37065315246582
    8. ' :' → logprob: -10.62065315246582
    9. ' ,' → logprob: -10.87065315246582
    10. ' ):' → logprob: -11.24565315246582

Token 424: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0032151418272405863
    2. ' int' → logprob: -5.753215312957764
    3. ')' → logprob: -12.128214836120605
    4. '   ' → logprob: -12.253214836120605
    5. '10' → logprob: -12.378214836120605
    6. ' ' → logprob: -12.753214836120605
    7. '3' → logprob: -13.003214836120605
    8. '4' → logprob: -13.128214836120605
    9. '7' → logprob: -13.628214836120605
    10. '5' → logprob: -13.628214836120605

Token 425: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009461507201194763
    2. ',' → logprob: -5.259461402893066
    3. '):
' → logprob: -5.509461402893066
    4. ')' → logprob: -9.009461402893066
    5. '   ' → logprob: -10.759461402893066
    6. ':' → logprob: -11.509461402893066
    7. '):
' → logprob: -12.009461402893066
    8. ' ):' → logprob: -12.009461402893066
    9. '       ' → logprob: -13.009461402893066
    10. ' ' → logprob: -14.634461402893066

Token 426: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.12325520068407059
    2. ' strategy' → logprob: -2.2482552528381348
    3. 'forget' → logprob: -5.123255252838135
    4. 'borrow' → logprob: -6.123255252838135
    5. ' ' → logprob: -6.998255252838135
    6. ' forget' → logprob: -7.998255252838135
    7. 'for' → logprob: -8.248254776000977
    8. 'strateg' → logprob: -8.623254776000977
    9. '   ' → logprob: -9.248254776000977
    10. ' borrow' → logprob: -9.498254776000977

Token 427: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43182992935180664
    2. ':' → logprob: -1.0568299293518066
    3. '):
' → logprob: -6.181829929351807
    4. ')' → logprob: -7.931829929351807
    5. '=' → logprob: -8.056829452514648
    6. ' ):' → logprob: -8.056829452514648
    7. '=None' → logprob: -10.306829452514648
    8. ' :' → logprob: -11.056829452514648
    9. ',' → logprob: -11.681829452514648
    10. '):

' → logprob: -13.181829452514648

Token 428: ' Borrow' (ID: 112685)
  Prédit: 'Borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Borrow' → logprob: -0.08894611895084381
    2. ' Borrow' → logprob: -2.4639461040496826
    3. ' ' → logprob: -12.463946342468262
    4. 'B' → logprob: -14.088946342468262
    5. 'Max' → logprob: -14.713946342468262
    6. '	B' → logprob: -15.213946342468262
    7. '  ' → logprob: -15.213946342468262
    8. 'Bor' → logprob: -15.213946342468262
    9. 'borrow' → logprob: -16.088945388793945
    10. '   ' → logprob: -16.338945388793945

Token 429: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -7.584239938296378e-06
    2. '_strategy' → logprob: -11.875007629394531
    3. ' Strategy' → logprob: -15.125007629394531
    4. 'Strateg' → logprob: -16.00000762939453
    5. 'strategy' → logprob: -16.25000762939453
    6. ' strategy' → logprob: -16.87500762939453
    7. 'Forget' → logprob: -17.87500762939453
    8. '   ' → logprob: -18.00000762939453
    9. 'Strategies' → logprob: -18.00000762939453
    10. ')' → logprob: -19.00000762939453

Token 430: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760005116462708
    2. '):
' → logprob: -0.8260005116462708
    3. ')' → logprob: -10.451000213623047
    4. '):
' → logprob: -10.701000213623047
    5. '   ' → logprob: -12.576000213623047
    6. '):

' → logprob: -13.326000213623047
    7. ',' → logprob: -13.326000213623047
    8. ':' → logprob: -13.576000213623047
    9. ' ):' → logprob: -14.576000213623047
    10. ' ' → logprob: -15.076000213623047

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036918214755132794
    2. 'self' → logprob: -8.12536907196045
    3. ' self' → logprob: -10.12536907196045
    4. '   ' → logprob: -11.37536907196045
    5. ',' → logprob: -12.12536907196045
    6. ')' → logprob: -12.37536907196045
    7. '```' → logprob: -12.50036907196045
    8. '):
' → logprob: -13.37536907196045
    9. ':' → logprob: -13.50036907196045
    10. '(self' → logprob: -14.00036907196045

Token 432: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1395142823457718
    2. '       ' → logprob: -2.139514207839966
    3. ' self' → logprob: -4.389514446258545
    4. '   ' → logprob: -9.514513969421387
    5. 'A' → logprob: -11.889513969421387
    6. ' ' → logprob: -12.014513969421387
    7. '	self' → logprob: -12.139513969421387
    8. 'class' → logprob: -12.389513969421387
    9. 'super' → logprob: -13.389513969421387
    10. '      ' → logprob: -14.764513969421387

Token 433: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -0.004842103458940983
    2. '.' → logprob: -5.629842281341553
    3. 'A' → logprob: -7.004842281341553
    4. ' .' → logprob: -8.129841804504395
    5. ' A' → logprob: -10.629841804504395
    6. '   ' → logprob: -12.379841804504395
    7. '.B' → logprob: -13.629841804504395
    8. '.
' → logprob: -13.754841804504395
    9. ' ' → logprob: -13.754841804504395
    10. '._' → logprob: -13.754841804504395

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20181801915168762
    2. '=' → logprob: -1.7018179893493652
    3. ',' → logprob: -7.951817989349365
    4. ':' → logprob: -11.201818466186523
    5. '   ' → logprob: -11.951818466186523
    6. ' ' → logprob: -11.951818466186523
    7. ')' → logprob: -12.201818466186523
    8. ' =
' → logprob: -12.201818466186523
    9. '    ' → logprob: -12.701818466186523
    10. '_' → logprob: -13.076818466186523

Token 435: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5759395360946655
    2. 'A' → logprob: -0.8259395360946655
    3. '	A' → logprob: -15.825939178466797
    4. ' ' → logprob: -18.450939178466797
    5. 'B' → logprob: -19.200939178466797
    6. ' ' → logprob: -20.075939178466797
    7. '_A' → logprob: -20.200939178466797
    8. ' А' → logprob: -20.700939178466797
    9. 'Ａ' → logprob: -21.325939178466797
    10. '   ' → logprob: -21.325939178466797

Token 436: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01325034536421299
    2. '
' → logprob: -4.638250350952148
    3. '<|end|>' → logprob: -6.513250350952148
    4. ',' → logprob: -7.263250350952148
    5. '        
' → logprob: -7.388250350952148
    6. '        ' → logprob: -8.763250350952148
    7. '      ' → logprob: -9.638250350952148
    8. ' ' → logprob: -9.638250350952148
    9. '   ' → logprob: -9.638250350952148
    10. '  
' → logprob: -9.763250350952148

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.078853540122509
    2. 'self' → logprob: -3.2038536071777344
    3. ' self' → logprob: -3.4538536071777344
    4. '
' → logprob: -6.578853607177734
    5. '        
' → logprob: -7.453853607177734
    6. 'B' → logprob: -7.578853607177734
    7. ',' → logprob: -7.703853607177734
    8. ' 
' → logprob: -7.828853607177734
    9. '        ' → logprob: -9.328853607177734
    10. ' =' → logprob: -10.578853607177734

Token 438: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002737947041168809
    2. 'B' → logprob: -6.377737998962402
    3. ' self' → logprob: -7.127737998962402
    4. '       ' → logprob: -8.377737998962402
    5. '   ' → logprob: -14.002737998962402
    6. ' ' → logprob: -14.877737998962402
    7. '	self' → logprob: -14.877737998962402
    8. ' B' → logprob: -15.002737998962402
    9. '(self' → logprob: -16.002737045288086
    10. '
' → logprob: -16.127737045288086

Token 439: '.B' (ID: 2611)
  Prédit: '.B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.B' → logprob: -0.03567841276526451
    2. '.' → logprob: -3.7856783866882324
    3. 'B' → logprob: -4.535678386688232
    4. ' .' → logprob: -6.660678386688232
    5. ' B' → logprob: -8.16067886352539
    6. '.
' → logprob: -10.91067886352539
    7. ',' → logprob: -11.66067886352539
    8. '	B' → logprob: -11.66067886352539
    9. '_B' → logprob: -11.91067886352539
    10. '   ' → logprob: -12.28567886352539

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.643963634967804
    2. '=' → logprob: -0.893963634967804
    3. '<|end|>' → logprob: -4.018963813781738
    4. '
' → logprob: -4.143963813781738
    5. ',' → logprob: -4.393963813781738
    6. '       ' → logprob: -4.643963813781738
    7. ' ' → logprob: -5.393963813781738
    8. '<|end|>' → logprob: -5.893963813781738
    9. '        ' → logprob: -7.393963813781738
    10. ' ,' → logprob: -7.768963813781738

Token 441: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03804837539792061
    2. ' B' → logprob: -3.288048267364502
    3. '   ' → logprob: -12.78804874420166
    4. ' ' → logprob: -13.66304874420166
    5. '    ' → logprob: -13.91304874420166
    6. '  ' → logprob: -14.66304874420166
    7. '       ' → logprob: -14.91304874420166
    8. '	B' → logprob: -15.03804874420166
    9. '     ' → logprob: -15.28804874420166
    10. '        ' → logprob: -16.100547790527344

Token 442: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009558862075209618
    2. '
' → logprob: -7.375956058502197
    3. '<|end|>' → logprob: -9.000955581665039
    4. 'self' → logprob: -9.125955581665039
    5. ',' → logprob: -9.750955581665039
    6. ',
' → logprob: -11.375955581665039
    7. '        
' → logprob: -11.625955581665039
    8. '<|end|>' → logprob: -12.000955581665039
    9. ' self' → logprob: -12.625955581665039
    10. '      ' → logprob: -13.375955581665039

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004733294772449881
    2. 'self' → logprob: -7.750473499298096
    3. ',' → logprob: -10.750473022460938
    4. ' self' → logprob: -11.375473022460938
    5. '<|end|>' → logprob: -12.125473022460938
    6. '   ' → logprob: -14.375473022460938
    7. '        
' → logprob: -14.375473022460938
    8. '	' → logprob: -14.625473022460938
    9. '      ' → logprob: -14.625473022460938
    10. '
' → logprob: -14.625473022460938

Token 444: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006791393738240004
    2. ' self' → logprob: -5.006791591644287
    3. '       ' → logprob: -9.506791114807129
    4. '   ' → logprob: -14.256791114807129
    5. '	self' → logprob: -14.881791114807129
    6. ' ' → logprob: -15.881791114807129
    7. '
' → logprob: -16.006792068481445
    8. '0' → logprob: -17.256792068481445
    9. '(self' → logprob: -17.381792068481445
    10. '        
' → logprob: -17.506792068481445

Token 445: '.K' (ID: 14475)
  Prédit: '.K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.021687384694814682
    2. '.' → logprob: -4.0216875076293945
    3. ' .' → logprob: -6.3966875076293945
    4. '.B' → logprob: -7.0216875076293945
    5. 'K' → logprob: -8.146687507629395
    6. 'strategy' → logprob: -8.521687507629395
    7. ' =' → logprob: -9.021687507629395
    8. ' strategy' → logprob: -9.271687507629395
    9. '.A' → logprob: -9.396687507629395
    10. '.strategy' → logprob: -10.646687507629395

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407835721969604
    2. '=' → logprob: -0.974078357219696
    3. ' ' → logprob: -14.474078178405762
    4. ',' → logprob: -14.724078178405762
    5. '_strategy' → logprob: -15.974078178405762
    6. '=
' → logprob: -16.599079132080078
    7. '   ' → logprob: -16.849079132080078
    8. ' =
' → logprob: -17.224079132080078
    9. '    ' → logprob: -17.349079132080078
    10. ' strategy' → logprob: -18.224079132080078

Token 447: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0015023599844425917
    2. ' K' → logprob: -6.501502513885498
    3. '	K' → logprob: -20.501502990722656
    4. ' ' → logprob: -20.751502990722656
    5. '   ' → logprob: -21.751502990722656
    6. '  ' → logprob: -22.251502990722656
    7. '
' → logprob: -22.501502990722656
    8. 'k' → logprob: -23.376502990722656
    9. 'strategy' → logprob: -23.876502990722656
    10. '    ' → logprob: -24.126502990722656

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019173922191839665
    2. 'self' → logprob: -9.250191688537598
    3. '
' → logprob: -9.625191688537598
    4. '<|end|>' → logprob: -11.375191688537598
    5. ' self' → logprob: -11.500191688537598
    6. ',' → logprob: -12.750191688537598
    7. '	' → logprob: -13.375191688537598
    8. '   ' → logprob: -13.875191688537598
    9. ',
' → logprob: -14.750191688537598
    10. '      ' → logprob: -14.750191688537598

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.7968066206085496e-05
    2. 'self' → logprob: -10.625027656555176
    3. ' self' → logprob: -13.000027656555176
    4. '
' → logprob: -14.125027656555176
    5. '   ' → logprob: -14.750027656555176
    6. '      ' → logprob: -16.875028610229492
    7. '        
' → logprob: -17.000028610229492
    8. '<|end|>' → logprob: -17.000028610229492
    9. '	self' → logprob: -17.625028610229492
    10. ',' → logprob: -17.875028610229492

Token 450: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.842555426876061e-06
    2. 'super' → logprob: -13.125004768371582
    3. '       ' → logprob: -13.625004768371582
    4. ' self' → logprob: -14.000004768371582
    5. 'strategy' → logprob: -15.375004768371582
    6. 'assert' → logprob: -15.750004768371582
    7. '   ' → logprob: -15.875004768371582
    8. 'length' → logprob: -17.0000057220459
    9. '
' → logprob: -17.5000057220459
    10. 'A' → logprob: -17.7500057220459

Token 451: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.003172129625454545
    2. '.remaining' → logprob: -6.628171920776367
    3. '.str' → logprob: -6.753171920776367
    4. '.' → logprob: -7.753171920776367
    5. 'strategy' → logprob: -8.628171920776367
    6. ' .' → logprob: -10.503171920776367
    7. '.rem' → logprob: -11.253171920776367
    8. '.b' → logprob: -12.253171920776367
    9. '.for' → logprob: -12.253171920776367
    10. '._' → logprob: -12.378171920776367

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602276712656021
    2. '=' → logprob: -1.910227656364441
    3. ' ' → logprob: -13.28522777557373
    4. '=str' → logprob: -14.28522777557373
    5. '.' → logprob: -14.91022777557373
    6. '_strategy' → logprob: -15.16022777557373
    7. '.strategy' → logprob: -15.28522777557373
    8. '(strategy' → logprob: -16.535226821899414
    9. '   ' → logprob: -17.285226821899414
    10. 'strategy' → logprob: -17.285226821899414

Token 453: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.31326186656951904
    2. ' strategy' → logprob: -1.313261866569519
    3. 'strateg' → logprob: -15.438261985778809
    4. '(strategy' → logprob: -18.563261032104492
    5. '_strategy' → logprob: -19.063261032104492
    6. 'str' → logprob: -19.563261032104492
    7. 'strategie' → logprob: -19.688261032104492
    8. 'strate' → logprob: -19.938261032104492
    9. 'Strategy' → logprob: -20.438261032104492
    10. '.strategy' → logprob: -21.063261032104492

Token 454: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6589650511741638
    2. '   ' → logprob: -0.7839650511741638
    3. '<|end|>' → logprob: -4.033965110778809
    4. '    
' → logprob: -5.158965110778809
    5. '       ' → logprob: -6.658965110778809
    6. '

' → logprob: -8.658965110778809
    7. '<|end|>' → logprob: -8.658965110778809
    8. 'def' → logprob: -8.658965110778809
    9. '  
' → logprob: -8.783965110778809
    10. '        
' → logprob: -8.908965110778809

Token 456: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.016439829021692276
    2. 'def' → logprob: -4.141439914703369
    3. '       ' → logprob: -8.766439437866211
    4. ' self' → logprob: -9.141439437866211
    5. '   ' → logprob: -9.266439437866211
    6. 'pass' → logprob: -10.266439437866211
    7. 'A' → logprob: -11.891439437866211
    8. '#' → logprob: -12.641439437866211
    9. ' def' → logprob: -14.141439437866211
    10. '@property' → logprob: -14.266439437866211

Token 457: '.n' (ID: 1835)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.4392639100551605
    2. '.A' → logprob: -1.814263939857483
    3. '.result' → logprob: -2.0642638206481934
    4. '.length' → logprob: -4.189263820648193
    5. '.a' → logprob: -4.314263820648193
    6. '.num' → logprob: -4.814263820648193
    7. '.n' → logprob: -4.814263820648193
    8. '.d' → logprob: -5.064263820648193
    9. '.len' → logprob: -5.439263820648193
    10. '._' → logprob: -6.314263820648193

Token 458: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.043419208377599716
    2. 'umber' → logprob: -3.418419122695923
    3. 'length' → logprob: -5.418419361114502
    4. ' =' → logprob: -6.293419361114502
    5. '_digits' → logprob: -6.418419361114502
    6. '_length' → logprob: -6.918419361114502
    7. 'digits' → logprob: -8.418418884277344
    8. 'digit' → logprob: -9.168418884277344
    9. '=' → logprob: -9.293418884277344
    10. 'max' → logprob: -9.543418884277344

Token 459: ' len' (ID: 4631)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0004071971052326262
    2. 'len' → logprob: -8.125407218933105
    3. ' max' → logprob: -9.375407218933105
    4. 'Digit' → logprob: -11.125407218933105
    5. '10' → logprob: -12.000407218933105
    6. 'min' → logprob: -13.500407218933105
    7. '(max' → logprob: -13.875407218933105
    8. 'A' → logprob: -14.500407218933105
    9. 'digit' → logprob: -15.000407218933105
    10. '9' → logprob: -15.125407218933105

Token 460: '(str' (ID: 7946)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.20214766263961792
    2. '(str' → logprob: -1.9521477222442627
    3. '(self' → logprob: -3.2021477222442627
    4. '(B' → logprob: -8.077147483825684
    5. '(' → logprob: -9.952147483825684
    6. '(d' → logprob: -11.702147483825684
    7. 'Digit' → logprob: -12.202147483825684
    8. 'D' → logprob: -12.952147483825684
    9. '(A' → logprob: -13.452147483825684
    10. 'str' → logprob: -13.577147483825684

Token 461: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.01899678073823452
    2. '(self' → logprob: -4.268996715545654
    3. '(B' → logprob: -5.393996715545654
    4. '(max' → logprob: -8.268997192382812
    5. 'A' → logprob: -11.143997192382812
    6. '(abs' → logprob: -12.768997192382812
    7. '(K' → logprob: -13.018997192382812
    8. '(str' → logprob: -14.393997192382812
    9. '(min' → logprob: -15.018997192382812
    10. '(a' → logprob: -15.018997192382812

Token 462: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010979531798511744
    2. ')),' → logprob: -7.751098155975342
    3. ' ))' → logprob: -8.376097679138184
    4. '))+' → logprob: -8.876097679138184
    5. '))
' → logprob: -9.126097679138184
    6. ')' → logprob: -9.376097679138184
    7. '))-' → logprob: -10.251097679138184
    8. '+' → logprob: -10.501097679138184
    9. ')))' → logprob: -10.751097679138184
    10. '()))' → logprob: -12.626097679138184

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001847962848842144
    2. 'self' → logprob: -7.251847743988037
    3. '<|end|>' → logprob: -7.376847743988037
    4. ')' → logprob: -8.876848220825195
    5. ' self' → logprob: -9.126848220825195
    6. '   ' → logprob: -9.126848220825195
    7. ',' → logprob: -10.001848220825195
    8. '
' → logprob: -10.126848220825195
    9. '        
' → logprob: -11.501848220825195
    10. '(self' → logprob: -11.751848220825195

Token 464: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.061457861214876175
    2. '       ' → logprob: -2.936457872390747
    3. 'def' → logprob: -5.811457633972168
    4. ' self' → logprob: -6.186457633972168
    5. '   ' → logprob: -6.561457633972168
    6. 'A' → logprob: -11.311457633972168
    7. ' ' → logprob: -11.436457633972168
    8. '<|end|>' → logprob: -11.436457633972168
    9. '```' → logprob: -11.436457633972168
    10. '#' → logprob: -11.686457633972168

Token 465: '.num' (ID: 19403)
  Prédit: '.A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.A' → logprob: -0.07656072080135345
    2. '.B' → logprob: -2.8265607357025146
    3. '.a' → logprob: -5.5765604972839355
    4. '.d' → logprob: -5.9515604972839355
    5. '.max' → logprob: -6.7015604972839355
    6. '.m' → logprob: -6.8265604972839355
    7. 'A' → logprob: -6.9515604972839355
    8. '.D' → logprob: -7.0765604972839355
    9. '.result' → logprob: -7.2015604972839355
    10. '.n' → logprob: -7.8265604972839355

Token 466: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2583564817905426
    2. 'ber' → logprob: -1.5083564519882202
    3. '_a' → logprob: -5.50835657119751
    4. '_digits' → logprob: -6.50835657119751
    5. '_A' → logprob: -8.383356094360352
    6. 's' → logprob: -8.383356094360352
    7. 'a' → logprob: -8.758356094360352
    8. 'bers' → logprob: -9.383356094360352
    9. '1' → logprob: -9.508356094360352
    10. 'er' → logprob: -10.258356094360352

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142708718776703
    2. '=' → logprob: -1.7014271020889282
    3. 's' → logprob: -11.576427459716797
    4. ',' → logprob: -13.826427459716797
    5. '  ' → logprob: -13.951427459716797
    6. ' ' → logprob: -14.326427459716797
    7. ':' → logprob: -14.576427459716797
    8. '   ' → logprob: -15.201427459716797
    9. '＝' → logprob: -15.576427459716797
    10. ')' → logprob: -16.076427459716797

Token 468: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.00861456897109747
    2. ' Digit' → logprob: -4.758614540100098
    3. 'Digital' → logprob: -17.508615493774414
    4. ' digit' → logprob: -18.258615493774414
    5. '   ' → logprob: -18.508615493774414
    6. ' ' → logprob: -18.758615493774414
    7. 'digit' → logprob: -19.508615493774414
    8. '_digit' → logprob: -19.883615493774414
    9. '-digit' → logprob: -20.508615493774414
    10. '  ' → logprob: -21.383615493774414

Token 469: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -5.512236498361744e-07
    2. '(Number' → logprob: -15.250000953674316
    3. 'number' → logprob: -15.500000953674316
    4. ' Number' → logprob: -17.5
    5. '_number' → logprob: -17.625
    6. 'A' → logprob: -18.0
    7. 'Digits' → logprob: -18.375
    8. '_Number' → logprob: -18.5
    9. 'Numbers' → logprob: -19.0
    10. 'umber' → logprob: -19.0

Token 470: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00011963568249484524
    2. '(self' → logprob: -9.12511920928955
    3. '(' → logprob: -11.75011920928955
    4. '(B' → logprob: -13.25011920928955
    5. '(
' → logprob: -13.87511920928955
    6. '((' → logprob: -16.750120162963867
    7. '(I' → logprob: -18.000120162963867
    8. '(a' → logprob: -19.250120162963867
    9. ' (' → logprob: -19.625120162963867
    10. 'A' → logprob: -19.625120162963867

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000282431225059554
    2. ',self' → logprob: -8.250282287597656
    3. ')' → logprob: -11.875282287597656
    4. ',n' → logprob: -12.125282287597656
    5. ' ,' → logprob: -12.375282287597656
    6. 'self' → logprob: -13.125282287597656
    7. '       ' → logprob: -14.250282287597656
    8. ',
' → logprob: -14.250282287597656
    9. ',length' → logprob: -14.250282287597656
    10. ')
' → logprob: -15.625282287597656

Token 472: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004038593906443566
    2. ' self' → logprob: -7.875403881072998
    3. 'max' → logprob: -11.00040340423584
    4. 'n' → logprob: -12.12540340423584
    5. '   ' → logprob: -14.25040340423584
    6. 'len' → logprob: -14.37540340423584
    7. '	self' → logprob: -16.375404357910156
    8. '(self' → logprob: -16.875404357910156
    9. '    ' → logprob: -17.000404357910156
    10. '    
' → logprob: -17.250404357910156

Token 473: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -4.370294846012257e-05
    2. 'n' → logprob: -10.125043869018555
    3. '.' → logprob: -13.000043869018555
    4. '_n' → logprob: -14.500043869018555
    5. ',n' → logprob: -15.750043869018555
    6. '.
' → logprob: -16.000043869018555
    7. ' .' → logprob: -16.125043869018555
    8. '	n' → logprob: -16.250043869018555
    9. ').' → logprob: -16.375043869018555
    10. '
' → logprob: -16.500043869018555

Token 474: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02325642853975296
    2. ')
' → logprob: -3.773256540298462
    3. ')
' → logprob: -11.898256301879883
    4. ' )' → logprob: -13.148256301879883
    5. ')

' → logprob: -13.898256301879883
    6. '),' → logprob: -14.273256301879883
    7. ' )
' → logprob: -14.898256301879883
    8. '<|end|>' → logprob: -16.398256301879883
    9. '       ' → logprob: -16.648256301879883
    10. ').' → logprob: -17.398256301879883

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0208369679749012
    2. 'self' → logprob: -3.8958370685577393
    3. ' self' → logprob: -8.14583683013916
    4. '   ' → logprob: -13.14583683013916
    5. '(self' → logprob: -14.52083683013916
    6. '	self' → logprob: -14.52083683013916
    7. '```' → logprob: -14.77083683013916
    8. '	' → logprob: -14.77083683013916
    9. '        
' → logprob: -14.89583683013916
    10. '[self' → logprob: -15.39583683013916

Token 476: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04017754644155502
    2. '       ' → logprob: -3.290177583694458
    3. ' self' → logprob: -6.165177345275879
    4. '   ' → logprob: -11.790177345275879
    5. '```' → logprob: -11.790177345275879
    6. ' ' → logprob: -12.540177345275879
    7. '        
' → logprob: -12.540177345275879
    8. '\' → logprob: -13.165177345275879
    9. '	self' → logprob: -13.290177345275879
    10. '     ' → logprob: -13.790177345275879

Token 477: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -0.001009707571938634
    2. 'num' → logprob: -7.001009941101074
    3. '.B' → logprob: -10.001009941101074
    4. 'B' → logprob: -10.626009941101074
    5. '.' → logprob: -10.876009941101074
    6. '.n' → logprob: -12.001009941101074
    7. ' .' → logprob: -13.751009941101074
    8. ' num' → logprob: -14.501009941101074
    9. '.
' → logprob: -15.001009941101074
    10. '	num' → logprob: -15.501009941101074

Token 478: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: 0.0
    2. ' B' → logprob: -17.125
    3. '=' → logprob: -18.5
    4. '=B' → logprob: -19.375
    5. 'A' → logprob: -19.625
    6. '_B' → logprob: -20.25
    7. 'Ｂ' → logprob: -20.25
    8. 'Borrow' → logprob: -20.625
    9. '```' → logprob: -20.875
    10. '	B' → logprob: -20.875

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234002135694027
    2. ' =' → logprob: -5.2552337646484375
    3. '=B' → logprob: -16.255233764648438
    4. '＝' → logprob: -17.380233764648438
    5. ',' → logprob: -17.380233764648438
    6. ')' → logprob: -17.505233764648438
    7. ' ' → logprob: -17.630233764648438
    8. '=
' → logprob: -17.880233764648438
    9. '=D' → logprob: -18.130233764648438
    10. 'B' → logprob: -18.255233764648438

Token 480: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.0009120595059357584
    2. ' Digit' → logprob: -7.000912189483643
    3. 'Digital' → logprob: -16.125911712646484
    4. ' ' → logprob: -16.125911712646484
    5. ' digit' → logprob: -16.375911712646484
    6. 'digit' → logprob: -16.375911712646484
    7. '_digit' → logprob: -16.625911712646484
    8. '   ' → logprob: -16.625911712646484
    9. '-digit' → logprob: -17.625911712646484
    10. 'Digits' → logprob: -17.750911712646484

Token 481: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -4.842555426876061e-06
    2. '(B' → logprob: -12.375004768371582
    3. 'umber' → logprob: -14.625004768371582
    4. 'number' → logprob: -16.3750057220459
    5. '(Number' → logprob: -17.1250057220459
    6. 'B' → logprob: -17.5000057220459
    7. ' Number' → logprob: -18.7500057220459
    8. '_number' → logprob: -18.8750057220459
    9. 'Numbers' → logprob: -19.7500057220459
    10. '(D' → logprob: -20.3750057220459

Token 482: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -4.024604277219623e-05
    2. 'B' → logprob: -10.250040054321289
    3. '(' → logprob: -12.375040054321289
    4. '(
' → logprob: -14.500040054321289
    5. '(A' → logprob: -16.25004005432129
    6. ' (' → logprob: -17.62504005432129
    7. '(b' → logprob: -18.62504005432129
    8. '(
' → logprob: -18.62504005432129
    9. '((' → logprob: -18.87504005432129
    10. '(K' → logprob: -19.37504005432129

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011615309631451964
    2. '(self' → logprob: -7.001161575317383
    3. ',self' → logprob: -8.876161575317383
    4. 'self' → logprob: -9.501161575317383
    5. '(' → logprob: -11.001161575317383
    6. ',
' → logprob: -11.501161575317383
    7. ' ,' → logprob: -12.126161575317383
    8. ' self' → logprob: -13.126161575317383
    9. '[self' → logprob: -14.501161575317383
    10. ' (' → logprob: -15.251161575317383

Token 484: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043102685594931245
    2. ' self' → logprob: -7.750431060791016
    3. '       ' → logprob: -15.875431060791016
    4. '
' → logprob: -17.000431060791016
    5. '(self' → logprob: -17.625431060791016
    6. '   ' → logprob: -18.375431060791016
    7. '	self' → logprob: -18.375431060791016
    8. ' ' → logprob: -18.625431060791016
    9. 'len' → logprob: -18.625431060791016
    10. '     ' → logprob: -18.875431060791016

Token 485: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34932607412338257
    2. '.n' → logprob: -1.2243261337280273
    3. '_n' → logprob: -7.599326133728027
    4. 'self' → logprob: -7.974326133728027
    5. 'len' → logprob: -11.349326133728027
    6. '
' → logprob: -12.349326133728027
    7. '<|end|>' → logprob: -12.974326133728027
    8. '<|end|>' → logprob: -13.349326133728027
    9. 's' → logprob: -13.599326133728027
    10. 'н' → logprob: -13.724326133728027

Token 486: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. ')
' → logprob: -11.37501335144043
    3. '       ' → logprob: -13.75001335144043
    4. '   ' → logprob: -16.00001335144043
    5. ' )' → logprob: -16.25001335144043
    6. '),' → logprob: -17.37501335144043
    7. ')}' → logprob: -18.37501335144043
    8. ')
' → logprob: -18.62501335144043
    9. '<|end|>' → logprob: -18.62501335144043
    10. ')return' → logprob: -18.87501335144043

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3146514594554901
    2. '       ' → logprob: -1.3146514892578125
    3. 'self' → logprob: -6.6896514892578125
    4. 'def' → logprob: -9.064651489257812
    5. ' self' → logprob: -10.939651489257812
    6. '	self' → logprob: -11.564651489257812
    7. '```' → logprob: -14.439651489257812
    8. '           ' → logprob: -15.064651489257812
    9. '	def' → logprob: -15.064651489257812
    10. ' ' → logprob: -15.439651489257812

Token 488: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00321336486376822
    2. '   ' → logprob: -5.753213405609131
    3. ' def' → logprob: -10.253212928771973
    4. '	def' → logprob: -15.128212928771973
    5. ' ' → logprob: -16.62821388244629
    6. 'class' → logprob: -17.75321388244629
    7. '```' → logprob: -18.62821388244629
    8. 'de' → logprob: -18.87821388244629
    9. '  ' → logprob: -18.87821388244629
    10. '
' → logprob: -19.37821388244629

Token 489: ' simulate' (ID: 66687)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -0.01415974646806717
    2. 'run' → logprob: -4.764159679412842
    3. 'subtract' → logprob: -6.139159679412842
    4. 'borrow' → logprob: -7.014159679412842
    5. 'can' → logprob: -7.139159679412842
    6. 'calculate' → logprob: -7.764159679412842
    7. ' simulate' → logprob: -7.764159679412842
    8. 'execute' → logprob: -8.13916015625
    9. 'forget' → logprob: -8.76416015625
    10. 'should' → logprob: -9.01416015625

Token 490: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000432695698691532
    2. '(' → logprob: -7.75043249130249
    3. '   ' → logprob: -14.125432968139648
    4. '(
' → logprob: -14.500432968139648
    5. 'self' → logprob: -15.125432968139648
    6. ' (' → logprob: -15.625432968139648
    7. '       ' → logprob: -16.12543296813965
    8. '(Self' → logprob: -16.50043296813965
    9. '_(' → logprob: -17.75043296813965
    10. '():' → logprob: -18.00043296813965

Token 491: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4019966423511505
    2. '):' → logprob: -1.1519966125488281
    3. '):
' → logprob: -4.776996612548828
    4. '(self' → logprob: -5.651996612548828
    5. 'self' → logprob: -6.276996612548828
    6. '   ' → logprob: -7.026996612548828
    7. '       ' → logprob: -8.776996612548828
    8. ',self' → logprob: -9.651996612548828
    9. '):
' → logprob: -10.651996612548828
    10. ')' → logprob: -11.276996612548828

Token 492: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012940469896420836
    2. '(' → logprob: -6.751294136047363
    3. '       ' → logprob: -9.876294136047363
    4. ':' → logprob: -10.126294136047363
    5. '():' → logprob: -11.376294136047363
    6. '(
' → logprob: -11.501294136047363
    7. '   ' → logprob: -12.001294136047363
    8. 'self' → logprob: -13.751294136047363
    9. '(s' → logprob: -14.126294136047363
    10. 'def' → logprob: -14.876294136047363

Token 493: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013128814287483692
    2. 'Digit' → logprob: -5.138128757476807
    3. ' int' → logprob: -5.263128757476807
    4. 'bool' → logprob: -6.638128757476807
    5. 'None' → logprob: -8.388129234313965
    6. 'list' → logprob: -8.638129234313965
    7. ' Digit' → logprob: -9.513129234313965
    8. 'List' → logprob: -9.638129234313965
    9. '[int' → logprob: -10.013129234313965
    10. '(int' → logprob: -10.388129234313965

Token 494: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09235349297523499
    2. ':
' → logprob: -2.592353582382202
    3. '       ' → logprob: -4.342353343963623
    4. '():
' → logprob: -8.842353820800781
    5. '():' → logprob: -9.217353820800781
    6. '):
' → logprob: -9.842353820800781
    7. '):' → logprob: -10.967353820800781
    8. ':
' → logprob: -11.467353820800781
    9. '   ' → logprob: -11.592353820800781
    10. '(self' → logprob: -11.967353820800781

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008086714660748839
    2. 'count' → logprob: -7.8758087158203125
    3. 'result' → logprob: -8.000808715820312
    4. 'for' → logprob: -9.625808715820312
    5. 'remaining' → logprob: -12.250808715820312
    6. 'forget' → logprob: -12.375808715820312
    7. 'i' → logprob: -12.875808715820312
    8. 'self' → logprob: -13.125808715820312
    9. 'total' → logprob: -13.375808715820312
    10. 'current' → logprob: -13.625808715820312

Token 496: ' borrow' (ID: 23960)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.02175317332148552
    2. 'result' → logprob: -4.521753311157227
    3. 'for' → logprob: -5.271753311157227
    4. 'carry' → logprob: -6.396753311157227
    5. 'borrow' (adapté à ' borrow') → logprob: -6.521753311157227
    6. '   ' → logprob: -6.646753311157227
    7. 'remain' → logprob: -8.521753311157227
    8. 'used' → logprob: -9.146753311157227
    9. 'num' → logprob: -9.271753311157227
    10. 'current' → logprob: -9.271753311157227

Token 497: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4037465751171112
    2. '_count' → logprob: -1.6537466049194336
    3. ' =' → logprob: -2.9037466049194336
    4. '_remaining' → logprob: -3.1537466049194336
    5. '_used' → logprob: -3.4037466049194336
    6. '_counts' → logprob: -5.153746604919434
    7. 'ed' → logprob: -6.403746604919434
    8. '_left' → logprob: -7.278746604919434
    9. 'ing' → logprob: -8.278746604919434
    10. '_positions' → logprob: -8.278746604919434

Token 498: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02130911499261856
    2. 'self' → logprob: -4.021308898925781
    3. ' ' → logprob: -6.146308898925781
    4. 'False' → logprob: -8.146308898925781
    5. ' self' → logprob: -8.271308898925781
    6. '[' → logprob: -8.271308898925781
    7. '[self' → logprob: -8.771308898925781
    8. ' [' → logprob: -10.271308898925781
    9. ' False' → logprob: -12.021308898925781
    10. '1' → logprob: -12.146308898925781

Token 499: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231319069862366
    2. 'False' → logprob: -0.8981319069862366
    3. ' False' → logprob: -12.89813232421875
    4. 'True' → logprob: -13.39813232421875
    5. '(False' → logprob: -13.64813232421875
    6. 'false' → logprob: -13.89813232421875
    7. 'None' → logprob: -14.27313232421875
    8. '[' → logprob: -14.27313232421875
    9. '-' → logprob: -15.02313232421875
    10. '1' → logprob: -15.64813232421875

Token 500: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001138431136496365
    2. ']*' → logprob: -6.876138210296631
    3. ' for' → logprob: -10.001138687133789
    4. ',' → logprob: -10.126138687133789
    5. ']*(' → logprob: -11.001138687133789
    6. 'self' → logprob: -13.876138687133789
    7. ' ]' → logprob: -14.126138687133789
    8. ')' → logprob: -14.376138687133789
    9. 'for' → logprob: -14.876138687133789
    10. '(self' → logprob: -15.251138687133789

Token 501: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7340571880340576
    2. ' for' → logprob: -1.4840571880340576
    3. ' *' → logprob: -1.9840571880340576
    4. ']*' → logprob: -2.1090571880340576
    5. ',' → logprob: -4.109057426452637
    6. '       ' → logprob: -5.484057426452637
    7. '*' → logprob: -6.109057426452637
    8. '
' → logprob: -6.234057426452637
    9. ']*(' → logprob: -6.359057426452637
    10. ')' → logprob: -6.359057426452637

Token 502: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31337934732437134
    2. '(self' → logprob: -1.3133792877197266
    3. ' (' → logprob: -9.688379287719727
    4. '(' → logprob: -10.188379287719727
    5. ' self' → logprob: -11.063379287719727
    6. '       ' → logprob: -14.313379287719727
    7. '(max' → logprob: -14.438379287719727
    8. 'max' → logprob: -15.688379287719727
    9. '(len' → logprob: -15.688379287719727
    10. '
' → logprob: -16.063379287719727

Token 503: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.292907877039397e-06
    2. 'len' → logprob: -13.37500286102295
    3. '(self' → logprob: -13.87500286102295
    4. '       ' → logprob: -14.87500286102295
    5. ' self' → logprob: -15.12500286102295
    6. 'max' → logprob: -16.375003814697266
    7. '[self' → logprob: -17.125003814697266
    8. '
' → logprob: -17.375003814697266
    9. '           ' → logprob: -17.875003814697266
    10. '   ' → logprob: -18.125003814697266

Token 504: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -2.696889623621246e-06
    2. 'n' → logprob: -13.50000286102295
    3. '.' → logprob: -13.87500286102295
    4. '_n' → logprob: -16.125001907348633
    5. ' .' → logprob: -16.250001907348633
    6. '
' → logprob: -17.625001907348633
    7. '	n' → logprob: -18.500001907348633
    8. '.
' → logprob: -18.750001907348633
    9. '   ' → logprob: -19.500001907348633
    10. 'self' → logprob: -20.250001907348633

Token 505: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03852783888578415
    2. ' +' → logprob: -3.288527727127075
    3. ')' → logprob: -7.663527965545654
    4. '+
' → logprob: -11.663527488708496
    5. '+)' → logprob: -12.538527488708496
    6. ')
' → logprob: -13.538527488708496
    7. ' )' → logprob: -14.288527488708496
    8. '+self' → logprob: -14.288527488708496
    9. ' +
' → logprob: -14.663527488708496
    10. '-' → logprob: -14.663527488708496

Token 506: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.837811088189483e-05
    2. '2' → logprob: -9.625068664550781
    3. ' ' → logprob: -13.000068664550781
    4. '3' → logprob: -17.25006866455078
    5. '   ' → logprob: -17.25006866455078
    6. '
' → logprob: -18.00006866455078
    7. '10' → logprob: -18.00006866455078
    8. '１' → logprob: -18.62506866455078
    9. '```' → logprob: -18.87506866455078
    10. '5' → logprob: -18.87506866455078

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002964935847558081
    2. '2' → logprob: -8.125296592712402
    3. '3' → logprob: -15.625296592712402
    4. '10' → logprob: -15.875296592712402
    5. '
' → logprob: -16.125295639038086
    6. ' ' → logprob: -16.500295639038086
    7. '5' → logprob: -16.875295639038086
    8. '１' → logprob: -17.875295639038086
    9. '```' → logprob: -18.000295639038086
    10. '   ' → logprob: -18.562795639038086

Token 508: ')
' (ID: 446)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006388491950929165
    2. 'for' → logprob: -5.5063886642456055
    3. ' for' → logprob: -6.1313886642456055
    4. '   ' → logprob: -9.131388664245605
    5. '
' → logprob: -11.756388664245605
    6. 'remaining' → logprob: -12.131388664245605
    7. '        
' → logprob: -12.631388664245605
    8. 'result' → logprob: -12.756388664245605
    9. '	for' → logprob: -13.881388664245605
    10. 'count' → logprob: -14.256388664245605

Token 510: ' C' (ID: 363)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6937850117683411
    2. 'remaining' → logprob: -1.1937849521636963
    3. 'result' → logprob: -1.6937849521636963
    4. 'count' → logprob: -5.818785190582275
    5. 'forget' → logprob: -5.943785190582275
    6. 'used' → logprob: -6.443785190582275
    7. 'results' → logprob: -6.568785190582275
    8. 'borrow' → logprob: -6.693785190582275
    9. 'res' → logprob: -7.443785190582275
    10. 'remain' → logprob: -7.568785190582275

Token 511: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231741070747375
    2. ' =' → logprob: -0.8981741070747375
    3. '=[]' → logprob: -11.023174285888672
    4. '   ' → logprob: -11.273174285888672
    5. ' ' → logprob: -11.773174285888672
    6. '＝' → logprob: -12.023174285888672
    7. '  ' → logprob: -13.898174285888672
    8. '=[' → logprob: -14.148174285888672
    9. '=[]
' → logprob: -14.273174285888672
    10. ':' → logprob: -14.898174285888672

Token 512: ' [' (ID: 723)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.10444081574678421
    2. ' Digit' → logprob: -2.479440927505493
    3. '[' → logprob: -4.479440689086914
    4. ' [' → logprob: -5.979440689086914
    5. 'self' → logprob: -6.854440689086914
    6. ' self' → logprob: -8.479440689086914
    7. '[self' → logprob: -8.604440689086914
    8. 'Digital' → logprob: -10.979440689086914
    9. '_digit' → logprob: -11.479440689086914
    10. ' ' → logprob: -11.729440689086914

Token 513: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. 'None' → logprob: -13.125006675720215
    3. '[' → logprob: -13.625006675720215
    4. ']' → logprob: -14.000006675720215
    5. 'False' → logprob: -14.250006675720215
    6. ' ' → logprob: -14.250006675720215
    7. '-' → logprob: -14.875006675720215
    8. '[]' → logprob: -15.500006675720215
    9. 'self' → logprob: -16.2500057220459
    10. '   ' → logprob: -16.2500057220459

Token 514: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004928641719743609
    2. ')' → logprob: -8.000493049621582
    3. ' ]' → logprob: -8.875493049621582
    4. ')]' → logprob: -12.000493049621582
    5. ']*(' → logprob: -12.875493049621582
    6. ']*' → logprob: -13.000493049621582
    7. '}' → logprob: -13.625493049621582
    8. ',' → logprob: -13.750493049621582
    9. ' for' → logprob: -13.875493049621582
    10. '       ' → logprob: -14.375493049621582

Token 515: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.022182350978255272
    2. ']' → logprob: -4.397182464599609
    3. ' for' → logprob: -5.397182464599609
    4. '*' → logprob: -5.897182464599609
    5. ']*' → logprob: -7.897182464599609
    6. '[' → logprob: -8.14718246459961
    7. '       ' → logprob: -8.27218246459961
    8. ')' → logprob: -8.39718246459961
    9. 'for' → logprob: -8.89718246459961
    10. '	' → logprob: -8.89718246459961

Token 516: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3929935693740845
    2. 'self' → logprob: -1.1429935693740845
    3. ' (' → logprob: -5.642993450164795
    4. ' self' → logprob: -6.017993450164795
    5. '(' → logprob: -9.017993927001953
    6. '(
' → logprob: -13.642993927001953
    7. '   ' → logprob: -13.767993927001953
    8. '       ' → logprob: -13.892993927001953
    9. '
' → logprob: -14.017993927001953
    10. '（' → logprob: -15.142993927001953

Token 517: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -5.717296517104842e-05
    2. 'n' → logprob: -10.500057220458984
    3. ' .' → logprob: -11.750057220458984
    4. '.' → logprob: -12.000057220458984
    5. '_n' → logprob: -12.250057220458984
    6. '(n' → logprob: -12.500057220458984
    7. '   ' → logprob: -13.625057220458984
    8. '.
' → logprob: -13.750057220458984
    9. '       ' → logprob: -13.750057220458984
    10. ',n' → logprob: -13.875057220458984

Token 518: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24163232743740082
    2. '
' → logprob: -1.616632342338562
    3. '        
' → logprob: -4.741632461547852
    4. '<|end|>' → logprob: -5.616632461547852
    5. ' for' → logprob: -6.616632461547852
    6. ' 
' → logprob: -7.991632461547852
    7. 'for' → logprob: -8.241632461547852
    8. '
' → logprob: -8.366632461547852
    9. '' → logprob: -8.366632461547852
    10. '<|end|>' → logprob: -8.491632461547852

Token 519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056169673800468445
    2. '
' → logprob: -3.0561697483062744
    3. ' for' → logprob: -5.181169509887695
    4. '   ' → logprob: -7.306169509887695
    5. '        
' → logprob: -7.806169509887695
    6. '<|end|>' → logprob: -8.556169509887695
    7. 'for' → logprob: -8.681169509887695
    8. '' → logprob: -8.931169509887695
    9. '	for' → logprob: -9.806169509887695
    10. '
' → logprob: -9.806169509887695

Token 520: ' forget' (ID: 13814)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012208107858896255
    2. ' for' → logprob: -4.512207984924316
    3. '       ' → logprob: -6.762207984924316
    4. 'i' → logprob: -14.137207984924316
    5. '   ' → logprob: -14.262207984924316
    6. '```' → logprob: -14.512207984924316
    7. '
' → logprob: -14.762207984924316
    8. 'remaining' → logprob: -15.512207984924316
    9. '	for' → logprob: -15.887207984924316
    10. '        
' → logprob: -16.137208938598633

Token 521: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.46767687797546387
    2. ' =' → logprob: -1.3426768779754639
    3. '_counts' → logprob: -2.467676877975464
    4. '_used' → logprob: -5.217677116394043
    5. 'ed' → logprob: -5.342677116394043
    6. 's' → logprob: -5.467677116394043
    7. '_counter' → logprob: -5.592677116394043
    8. '_remaining' → logprob: -6.092677116394043
    9. '_flags' → logprob: -6.342677116394043
    10. '=' → logprob: -7.217677116394043

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815052703022957
    2. '=' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.518150329589844
    4. '＝' → logprob: -17.143150329589844
    5. ',' → logprob: -17.518150329589844
    6. '<|end|>' → logprob: -17.893150329589844
    7. '   ' → logprob: -18.393150329589844
    8. '  ' → logprob: -18.393150329589844
    9. ')' → logprob: -18.393150329589844
    10. ' ' → logprob: -18.518150329589844

Token 523: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00028982185176573694
    2. ' ' → logprob: -8.500289916992188
    3. 'self' → logprob: -9.375289916992188
    4. ' self' → logprob: -13.625289916992188
    5. '   ' → logprob: -15.375289916992188
    6. '       ' → logprob: -17.625289916992188
    7. '1' → logprob: -17.625289916992188
    8. '```' → logprob: -17.750289916992188
    9. ' ' → logprob: -18.062789916992188
    10. '  ' → logprob: -18.687789916992188

Token 524: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003368926409166306
    2. 'self' → logprob: -8.000336647033691
    3. ' ' → logprob: -13.625336647033691
    4. ' self' → logprob: -16.750337600708008
    5. '1' → logprob: -17.562837600708008
    6. '```' → logprob: -17.687837600708008
    7. '[self' → logprob: -18.125337600708008
    8. '０' → logprob: -18.375337600708008
    9. '   ' → logprob: -18.625337600708008
    10. '۰' → logprob: -18.812837600708008

Token 525: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2690742015838623
    2. '       ' → logprob: -1.5190742015838623
    3. '<|end|>' → logprob: -5.394074440002441
    4. '        
' → logprob: -5.644074440002441
    5. ' for' → logprob: -6.144074440002441
    6. '' → logprob: -6.769074440002441
    7. ',' → logprob: -7.144074440002441
    8. '   ' → logprob: -7.269074440002441
    9. '    
' → logprob: -7.519074440002441
    10. '	' → logprob: -7.519074440002441

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8012136220932007
    2. '
' → logprob: -1.1762136220932007
    3. ' for' → logprob: -1.5512136220932007
    4. '   ' → logprob: -4.17621374130249
    5. 'for' → logprob: -5.42621374130249
    6. '```' → logprob: -5.55121374130249
    7. '\n' → logprob: -6.17621374130249
    8. '' → logprob: -6.67621374130249
    9. ' 
' → logprob: -6.80121374130249
    10. '<|end|>' → logprob: -7.30121374130249

Token 527: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0445127372804563e-05
    2. ' for' → logprob: -11.62501049041748
    3. '       ' → logprob: -13.62501049041748
    4. 'i' → logprob: -16.125009536743164
    5. '   ' → logprob: -16.125009536743164
    6. '```' → logprob: -17.750009536743164
    7. '
' → logprob: -18.125009536743164
    8. 'f' → logprob: -18.750009536743164
    9. 'def' → logprob: -18.875009536743164
    10. ' ' → logprob: -19.625009536743164

Token 528: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08929865062236786
    2. 'i' → logprob: -2.464298725128174
    3. ' index' → logprob: -8.464298248291016
    4. 'index' → logprob: -9.089298248291016
    5. ' idx' → logprob: -11.214298248291016
    6. ' range' → logprob: -12.339298248291016
    7. 'idx' → logprob: -12.464298248291016
    8. 'range' → logprob: -12.964298248291016
    9. '_i' → logprob: -13.464298248291016
    10. '(i' → logprob: -13.839298248291016

Token 529: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002812005812302232
    2. 'in' → logprob: -5.877811908721924
    3. ' ' → logprob: -12.127812385559082
    4. ',' → logprob: -13.502812385559082
    5. '	in' → logprob: -15.752812385559082
    6. ' ,' → logprob: -16.877811431884766
    7. 'range' → logprob: -17.002811431884766
    8. ')' → logprob: -17.752811431884766
    9. 'import' → logprob: -17.877811431884766
    10. '0' → logprob: -18.002811431884766

Token 530: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -17.251502990722656
    4. '	range' → logprob: -17.626502990722656
    5. '   ' → logprob: -17.751502990722656
    6. ' ' → logprob: -18.001502990722656
    7. '0' → logprob: -19.376502990722656
    8. '  ' → logprob: -19.626502990722656
    9. 'rang' → logprob: -19.751502990722656
    10. 'r' → logprob: -20.876502990722656

Token 531: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.25000286102295
    3. 'self' → logprob: -13.62500286102295
    4. '(
' → logprob: -17.000003814697266
    5. '       ' → logprob: -17.500003814697266
    6. ' (' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.500003814697266
    8. '(s' → logprob: -19.125003814697266
    9. '(len' → logprob: -19.375003814697266
    10. ' self' → logprob: -19.375003814697266

Token 532: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -2.1054253011243418e-05
    2. '.' → logprob: -10.875020980834961
    3. '   ' → logprob: -14.000020980834961
    4. 'n' → logprob: -14.625020980834961
    5. ' .' → logprob: -14.625020980834961
    6. '_n' → logprob: -15.750020980834961
    7. ',n' → logprob: -16.75002098083496
    8. '.
' → logprob: -17.50002098083496
    9. '       ' → logprob: -17.50002098083496
    10. '	n' → logprob: -18.62502098083496

Token 533: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006795305293053389
    2. '):
' → logprob: -5.006795406341553
    3. ':' → logprob: -10.381794929504395
    4. ' ):' → logprob: -10.631794929504395
    5. '       ' → logprob: -11.381794929504395
    6. '   ' → logprob: -11.881794929504395
    7. '+' → logprob: -13.006794929504395
    8. '):
' → logprob: -13.506794929504395
    9. ',' → logprob: -14.506794929504395
    10. '():' → logprob: -15.006794929504395

Token 534: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3669240176677704
    2. '       ' → logprob: -1.4919240474700928
    3. '           ' → logprob: -2.9919240474700928
    4. 'if' → logprob: -4.241923809051514
    5. 'diff' → logprob: -5.116923809051514
    6. 'ai' → logprob: -5.366923809051514
    7. ' a' → logprob: -5.616923809051514
    8. 'sub' → logprob: -6.491923809051514
    9. ' if' → logprob: -7.116923809051514
    10. 'b' → logprob: -9.241924285888672

Token 535: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5029721856117249
    2. 'diff' → logprob: -2.12797212600708
    3. 'ai' → logprob: -2.37797212600708
    4. '           ' → logprob: -2.62797212600708
    5. 'if' → logprob: -3.25297212600708
    6. 'sub' → logprob: -3.62797212600708
    7. 'need' → logprob: -4.37797212600708
    8. 'x' → logprob: -4.75297212600708
    9. '#' → logprob: -5.12797212600708
    10. 'tmp' → logprob: -5.62797212600708

Token 536: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.9361465573310852
    2. '_digit' → logprob: -1.0611464977264404
    3. '_val' → logprob: -2.0611464977264404
    4. ' =' → logprob: -2.4361464977264404
    5. 'i' → logprob: -4.4361467361450195
    6. '_value' → logprob: -4.5611467361450195
    7. '=' → logprob: -4.6861467361450195
    8. 'digit' → logprob: -4.6861467361450195
    9. '_' → logprob: -6.1861467361450195
    10. 'd' → logprob: -6.1861467361450195

Token 537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326547861099243
    2. ' =' → logprob: -0.7576547861099243
    3. ',' → logprob: -11.257655143737793
    4. ' ' → logprob: -11.882655143737793
    5. '_val' → logprob: -12.632655143737793
    6. '   ' → logprob: -12.632655143737793
    7. 'digit' → logprob: -13.007655143737793
    8. '=i' → logprob: -13.257655143737793
    9. '＝' → logprob: -13.257655143737793
    10. 'value' → logprob: -13.257655143737793

Token 538: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00019185843120794743
    2. ' self' → logprob: -8.625191688537598
    3. '           ' → logprob: -11.375191688537598
    4. '(self' → logprob: -14.750191688537598
    5. '               ' → logprob: -15.875191688537598
    6. '
' → logprob: -16.500192642211914
    7. '       ' → logprob: -16.875192642211914
    8. '   ' → logprob: -17.125192642211914
    9. '	self' → logprob: -17.750192642211914
    10. '          ' → logprob: -17.875192642211914

Token 539: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -0.002808202290907502
    2. 'num' → logprob: -5.877808094024658
    3. '	num' → logprob: -13.502808570861816
    4. '.' → logprob: -14.877808570861816
    5. ' num' → logprob: -14.877808570861816
    6. 'A' → logprob: -14.877808570861816
    7. '.n' → logprob: -15.752808570861816
    8. ' .' → logprob: -15.877808570861816
    9. '[num' → logprob: -16.5028076171875
    10. ',num' → logprob: -16.5028076171875

Token 540: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.9361264946837764e-07
    2. 'B' → logprob: -16.25
    3. ' A' → logprob: -18.875
    4. 'a' → logprob: -19.0
    5. 'C' → logprob: -21.5
    6. '[i' → logprob: -21.75
    7. 'А' → logprob: -21.875
    8. '```' → logprob: -22.25
    9. 'Ａ' → logprob: -22.375
    10. 'digits' → logprob: -22.375

Token 541: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.37500286102295
    3. '[d' → logprob: -14.87500286102295
    4. '[
' → logprob: -15.50000286102295
    5. 'digits' → logprob: -15.75000286102295
    6. '
' → logprob: -16.500001907348633
    7. ' [' → logprob: -16.750001907348633
    8. '```' → logprob: -16.875001907348633
    9. 'i' → logprob: -17.500001907348633
    10. '[I' → logprob: -17.500001907348633

Token 542: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5268397927284241
    2. ']
' → logprob: -1.6518397331237793
    3. ' -' → logprob: -2.0268397331237793
    4. '-' → logprob: -2.7768397331237793
    5. ')' → logprob: -4.901839733123779
    6. ')
' → logprob: -5.026839733123779
    7. '+' → logprob: -5.776839733123779
    8. '
' → logprob: -6.276839733123779
    9. '           ' → logprob: -6.901839733123779
    10. ']+' → logprob: -7.151839733123779

Token 543: '           ' (ID: 352)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11431153863668442
    2. '           ' → logprob: -2.239311456680298
    3. ' B' → logprob: -6.614311695098877
    4. 'b' → logprob: -9.364311218261719
    5. '+' → logprob: -11.614311218261719
    6. '   ' → logprob: -11.864311218261719
    7. ' ' → logprob: -11.989311218261719
    8. '       ' → logprob: -12.114311218261719
    9. ',' → logprob: -12.239311218261719
    10. '```' → logprob: -12.364311218261719

Token 544: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.0010350722586736083
    2. '           ' → logprob: -7.626035213470459
    3. ' B' → logprob: -8.2510347366333
    4. 'temp' → logprob: -9.0010347366333
    5. 'sub' → logprob: -10.3760347366333
    6. 'tmp' → logprob: -10.6260347366333
    7. 'borrow' → logprob: -11.1260347366333
    8. 'effective' → logprob: -11.2510347366333
    9. 'b' → logprob: -11.3760347366333
    10. 'if' → logprob: -11.6260347366333

Token 545: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.06684748083353043
    2. '=' → logprob: -2.816847562789917
    3. ' =' → logprob: -5.691847324371338
    4. 'i' → logprob: -6.566847324371338
    5. '_' → logprob: -10.066847801208496
    6. '[i' → logprob: -11.316847801208496
    7. '_=' → logprob: -11.941847801208496
    8. '[' → logprob: -12.066847801208496
    9. ' i' → logprob: -12.191847801208496
    10. '=i' → logprob: -12.441847801208496

Token 546: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3484482765197754
    2. ' =' → logprob: -1.2234482765197754
    3. ' ' → logprob: -13.473447799682617
    4. '=
' → logprob: -14.473447799682617
    5. '=self' → logprob: -15.348447799682617
    6. '   ' → logprob: -15.848447799682617
    7. ',' → logprob: -16.223447799682617
    8. '+' → logprob: -16.223447799682617
    9. ':' → logprob: -16.473447799682617
    10. 'import' → logprob: -16.473447799682617

Token 547: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009789143688976765
    2. ' self' → logprob: -4.634788990020752
    3. '           ' → logprob: -10.75978946685791
    4. '0' → logprob: -12.25978946685791
    5. '(self' → logprob: -12.88478946685791
    6. '       ' → logprob: -13.75978946685791
    7. ' ' → logprob: -14.75978946685791
    8. '	self' → logprob: -14.88478946685791
    9. '         ' → logprob: -14.88478946685791
    10. '   ' → logprob: -15.00978946685791

Token 548: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -0.5231695175170898
    2. 'num' → logprob: -0.8981695175170898
    3. ' num' → logprob: -11.39816951751709
    4. '	num' → logprob: -12.27316951751709
    5. '[num' → logprob: -12.39816951751709
    6. '[i' → logprob: -12.39816951751709
    7. 'B' → logprob: -12.64816951751709
    8. 'self' → logprob: -12.64816951751709
    9. '.n' → logprob: -12.64816951751709
    10. '.' → logprob: -13.14816951751709

Token 549: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0001294030516874045
    2. '[i' → logprob: -9.125129699707031
    3. 'i' → logprob: -11.125129699707031
    4. 'num' → logprob: -12.375129699707031
    5. ' B' → logprob: -14.875129699707031
    6. '[num' → logprob: -15.125129699707031
    7. '
' → logprob: -15.750129699707031
    8. '```' → logprob: -16.00012969970703
    9. 'b' → logprob: -16.25012969970703
    10. '[' → logprob: -16.50012969970703

Token 550: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. 'i' → logprob: -12.750004768371582
    3. '[' → logprob: -13.250004768371582
    4. '[
' → logprob: -15.750004768371582
    5. ' i' → logprob: -16.6250057220459
    6. '(i' → logprob: -17.0000057220459
    7. ' [' → logprob: -17.7500057220459
    8. '```' → logprob: -17.8750057220459
    9. ' ' → logprob: -18.3750057220459
    10. '[I' → logprob: -18.6250057220459

Token 551: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0575413815677166
    2. ')' → logprob: -3.4325413703918457
    3. ']
' → logprob: -4.182541370391846
    4. '+' → logprob: -6.057541370391846
    5. ' +' → logprob: -6.807541370391846
    6. ')
' → logprob: -7.057541370391846
    7. ' -' → logprob: -7.057541370391846
    8. '           ' → logprob: -7.057541370391846
    9. '-' → logprob: -7.557541370391846
    10. '<|end|>' → logprob: -7.807541370391846

Token 552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015422864817082882
    2. ' if' → logprob: -4.640422821044922
    3. 'if' → logprob: -5.265422821044922
    4. 'diff' → logprob: -8.890422821044922
    5. ',' → logprob: -9.640422821044922
    6. '            ' → logprob: -10.015422821044922
    7. '            
' → logprob: -10.015422821044922
    8. '```' → logprob: -10.515422821044922
    9. '       ' → logprob: -10.765422821044922
    10. 'subtract' → logprob: -10.765422821044922

Token 553: ' A' (ID: 355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24015238881111145
    2. 'diff' → logprob: -1.740152359008789
    3. 'tmp' → logprob: -4.365152359008789
    4. 'temp' → logprob: -4.740152359008789
    5. 'need' → logprob: -5.240152359008789
    6. 'sub' → logprob: -5.615152359008789
    7. '#' → logprob: -6.615152359008789
    8. '           ' → logprob: -6.740152359008789
    9. 'needed' → logprob: -6.865152359008789
    10. 'borrow' → logprob: -7.490152359008789

Token 554: '_sub' (ID: 11572)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0377555787563324
    2. '_val' → logprob: -4.662755489349365
    3. '_' → logprob: -5.162755489349365
    4. '_b' → logprob: -5.537755489349365
    5. '_value' → logprob: -6.037755489349365
    6. ' =' → logprob: -6.287755489349365
    7. '_digit' → logprob: -6.412755489349365
    8. 'val' → logprob: -6.787755489349365
    9. 'borrow' → logprob: -7.287755489349365
    10. 'digit' → logprob: -7.287755489349365

Token 555: ' =' (ID: 314)
  Prédit: 'tract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tract' → logprob: -0.43896305561065674
    2. '=' → logprob: -1.3139630556106567
    3. ' =' → logprob: -3.063962936401367
    4. 'tracted' → logprob: -4.438962936401367
    5. 'stract' → logprob: -4.563962936401367
    6. '_i' → logprob: -5.063962936401367
    7. 't' → logprob: -5.813962936401367
    8. '-' → logprob: -6.188962936401367
    9. '-=' → logprob: -6.563962936401367
    10. 'tra' → logprob: -7.313962936401367

Token 556: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00017946491425391287
    2. ' A' → logprob: -9.250179290771484
    3. 'B' → logprob: -10.000179290771484
    4. '           ' → logprob: -10.375179290771484
    5. '(A' → logprob: -13.250179290771484
    6. '   ' → logprob: -13.750179290771484
    7. '               ' → logprob: -14.125179290771484
    8. '             ' → logprob: -14.125179290771484
    9. 'C' → logprob: -14.625179290771484
    10. '         ' → logprob: -14.875179290771484

Token 557: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.012684577144682407
    2. '[i' → logprob: -4.387684345245361
    3. '[' → logprob: -10.01268482208252
    4. ' =' → logprob: -10.13768482208252
    5. 'i' → logprob: -10.38768482208252
    6. '=' → logprob: -11.26268482208252
    7. '[
' → logprob: -11.88768482208252
    8. '   ' → logprob: -12.82518482208252
    9. '_[' → logprob: -12.88768482208252
    10. '
' → logprob: -12.95018482208252

Token 558: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20241525769233704
    2. ' -' → logprob: -1.7024152278900146
    3. '+' → logprob: -6.952415466308594
    4. ' +' → logprob: -10.577415466308594
    5. 'if' → logprob: -12.577415466308594
    6. '           ' → logprob: -12.702415466308594
    7. '[' → logprob: -13.327415466308594
    8. ' if' → logprob: -13.452415466308594
    9. ' ' → logprob: -13.702415466308594
    10. '-
' → logprob: -14.202415466308594

Token 559: ' borrow' (ID: 23960)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.3167579174041748
    2. 'B' → logprob: -1.3167579174041748
    3. '(B' → logprob: -6.316758155822754
    4. ' borrow' → logprob: -7.191758155822754
    5. 'forget' → logprob: -7.691758155822754
    6. ' B' → logprob: -8.941758155822754
    7. '(' → logprob: -9.066758155822754
    8. 'bor' → logprob: -9.816758155822754
    9. 'Borrow' → logprob: -10.441758155822754
    10. '(b' → logprob: -10.441758155822754

Token 560: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006280870293267071
    2. '[' → logprob: -7.3756279945373535
    3. ' [' → logprob: -14.625628471374512
    4. '[
' → logprob: -14.750628471374512
    5. '[-' → logprob: -15.875628471374512
    6. '[j' → logprob: -16.000627517700195
    7. '1' → logprob: -16.875627517700195
    8. '[index' → logprob: -17.125627517700195
    9. 'i' → logprob: -17.250627517700195
    10. '[idx' → logprob: -17.375627517700195

Token 561: ']
' (ID: 1592)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02111947536468506
    2. 'if' → logprob: -4.271119594573975
    3. ' if' → logprob: -5.021119594573975
    4. '+' → logprob: -9.021119117736816
    5. '            
' → logprob: -9.271119117736816
    6. '-' → logprob: -9.521119117736816
    7. '
' → logprob: -11.646119117736816
    8. '            ' → logprob: -11.771119117736816
    9. ' -' → logprob: -12.021119117736816
    10. ' +' → logprob: -12.771119117736816

Token 563: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008408427238464355
    2. '           ' → logprob: -5.258408546447754
    3. ' if' → logprob: -5.758408546447754
    4. 'while' → logprob: -11.758408546447754
    5. 'If' → logprob: -13.383408546447754
    6. ' ' → logprob: -13.633408546447754
    7. '```' → logprob: -13.883408546447754
    8. 'B' → logprob: -14.883408546447754
    9. '   ' → logprob: -15.508408546447754
    10. '            ' → logprob: -15.508408546447754

Token 564: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00047750159865245223
    2. 'B' → logprob: -8.12547779083252
    3. ' A' → logprob: -8.62547779083252
    4. ' ' → logprob: -14.25047779083252
    5. '   ' → logprob: -14.75047779083252
    6. '  ' → logprob: -14.87547779083252
    7. '	A' → logprob: -15.50047779083252
    8. 'a' → logprob: -16.000476837158203
    9. ' B' → logprob: -16.625476837158203
    10. '    ' → logprob: -16.812976837158203

Token 565: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0002666999935172498
    2. '_i' → logprob: -8.250267028808594
    3. '_' → logprob: -13.125267028808594
    4. 'sub' → logprob: -13.500267028808594
    5. '_s' → logprob: -14.375267028808594
    6. '[i' → logprob: -14.750267028808594
    7. '
' → logprob: -15.750267028808594
    8. '<' → logprob: -16.125267028808594
    9. 'i' → logprob: -16.250267028808594
    10. '```' → logprob: -16.250267028808594

Token 566: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06773487478494644
    2. '>=' → logprob: -2.942734956741333
    3. ' <' → logprob: -4.442734718322754
    4. ' >=' → logprob: -6.942734718322754
    5. ' ' → logprob: -11.442734718322754
    6. '-' → logprob: -12.192734718322754
    7. '<div' → logprob: -13.317734718322754
    8. '==' → logprob: -13.380234718322754
    9. '[' → logprob: -13.442734718322754
    10. '<int' → logprob: -13.442734718322754

Token 567: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.7432603272027336e-06
    2. ' B' → logprob: -13.500001907348633
    3. '0' → logprob: -15.250001907348633
    4. ' ' → logprob: -19.375001907348633
    5. '	B' → logprob: -19.875001907348633
    6. '   ' → logprob: -20.000001907348633
    7. 'b' → logprob: -20.625001907348633
    8. '           ' → logprob: -20.750001907348633
    9. '```' → logprob: -20.875001907348633
    10. '=B' → logprob: -21.000001907348633

Token 568: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0011736786691471934
    2. '[i' → logprob: -6.751173496246338
    3. 'i' → logprob: -13.001173973083496
    4. '[' → logprob: -15.251173973083496
    5. '   ' → logprob: -15.251173973083496
    6. '           ' → logprob: -16.50117301940918
    7. '```' → logprob: -16.50117301940918
    8. '       ' → logprob: -16.87617301940918
    9. '[
' → logprob: -16.87617301940918
    10. '(i' → logprob: -16.87617301940918

Token 569: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17472444474697113
    2. ':' → logprob: -2.1747243404388428
    3. '               ' → logprob: -3.1747243404388428
    4. '           ' → logprob: -5.674724578857422
    5. '):
' → logprob: -7.049724578857422
    6. ' or' → logprob: -8.299724578857422
    7. ' and' → logprob: -9.299724578857422
    8. '0' → logprob: -9.674724578857422
    9. ')' → logprob: -10.674724578857422
    10. '):' → logprob: -10.924724578857422

Token 570: '               ' (ID: 506)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6856611371040344
    2. '               ' → logprob: -0.8106611371040344
    3. '           ' → logprob: -3.0606610774993896
    4. ' C' → logprob: -5.685661315917969
    5. '       ' → logprob: -6.935661315917969
    6. '   ' → logprob: -8.310661315917969
    7. ' ' → logprob: -9.310661315917969
    8. '```' → logprob: -10.435661315917969
    9. ',' → logprob: -10.685661315917969
    10. '                   ' → logprob: -11.685661315917969

Token 571: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.002417630283161998
    2. '               ' → logprob: -6.37741756439209
    3. '                   ' → logprob: -8.37741756439209
    4. ' C' → logprob: -8.62741756439209
    5. '   ' → logprob: -9.37741756439209
    6. 'c' → logprob: -9.62741756439209
    7. 'borrow' → logprob: -9.62741756439209
    8. 'forget' → logprob: -10.12741756439209
    9. '           ' → logprob: -11.12741756439209
    10. 'diff' → logprob: -11.87741756439209

Token 572: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.750001907348633
    3. '_i' → logprob: -16.125001907348633
    4. '[I' → logprob: -16.125001907348633
    5. 'i' → logprob: -16.625001907348633
    6. ' [' → logprob: -17.500001907348633
    7. '```' → logprob: -17.500001907348633
    8. '[j' → logprob: -18.625001907348633
    9. '=' → logprob: -18.750001907348633
    10. '[idx' → logprob: -18.875001907348633

Token 573: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005236598663032055
    2. '=' → logprob: -5.255236625671387
    3. ']' → logprob: -13.005236625671387
    4. ' ' → logprob: -14.630236625671387
    5. ')' → logprob: -16.75523567199707
    6. ' =
' → logprob: -17.00523567199707
    7. ']=' → logprob: -17.38023567199707
    8. ',' → logprob: -18.00523567199707
    9. ' ]' → logprob: -18.25523567199707
    10. '    ' → logprob: -18.63023567199707

Token 574: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196824833750725
    2. ' =' → logprob: -2.8119683265686035
    3. '＝' → logprob: -15.686967849731445
    4. '+=' → logprob: -15.686967849731445
    5. ' ' → logprob: -15.936967849731445
    6. '   ' → logprob: -16.686967849731445
    7. '=
' → logprob: -16.936967849731445
    8. '.=' → logprob: -17.061967849731445
    9. '=C' → logprob: -17.811967849731445
    10. ' +=' → logprob: -17.936967849731445

Token 575: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002966127940453589
    2. ' A' → logprob: -8.125296592712402
    3. '   ' → logprob: -14.625296592712402
    4. '	A' → logprob: -16.75029754638672
    5. ' ' → logprob: -17.37529754638672
    6. '  ' → logprob: -17.62529754638672
    7. '0' → logprob: -17.62529754638672
    8. '           ' → logprob: -18.75029754638672
    9. 'a' → logprob: -19.25029754638672
    10. '1' → logprob: -19.25029754638672

Token 576: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0001249925117008388
    2. 'sub' → logprob: -9.37512493133545
    3. '_i' → logprob: -10.25012493133545
    4. '[i' → logprob: -12.62512493133545
    5. '	sub' → logprob: -14.75012493133545
    6. '_s' → logprob: -15.25012493133545
    7. '   ' → logprob: -15.75012493133545
    8. 'i' → logprob: -15.87512493133545
    9. 'Sub' → logprob: -16.500125885009766
    10. '[sub' → logprob: -16.625125885009766

Token 577: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07889595627784729
    2. '-' → logprob: -2.5788960456848145
    3. '   ' → logprob: -12.953895568847656
    4. ' ' → logprob: -12.953895568847656
    5. '           ' → logprob: -14.328895568847656
    6. '       ' → logprob: -15.328895568847656
    7. ' ' → logprob: -15.953895568847656
    8. 'else' → logprob: -16.578895568847656
    9. '−' → logprob: -16.828895568847656
    10. '  ' → logprob: -16.953895568847656

Token 578: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00020354038861114532
    2. ' B' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.50020408630371
    4. '	B' → logprob: -19.00020408630371
    5. '           ' → logprob: -19.00020408630371
    6. ' ' → logprob: -19.25020408630371
    7. '       ' → logprob: -20.12520408630371
    8. '               ' → logprob: -20.37520408630371
    9. '  ' → logprob: -20.50020408630371
    10. '=B' → logprob: -20.87520408630371

Token 579: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -9.710618905955926e-05
    2. '[i' → logprob: -9.250097274780273
    3. 'i' → logprob: -14.125097274780273
    4. '[' → logprob: -17.250097274780273
    5. '           ' → logprob: -17.625097274780273
    6. '               ' → logprob: -18.375097274780273
    7. ',i' → logprob: -18.375097274780273
    8. '	i' → logprob: -18.750097274780273
    9. '{i' → logprob: -18.875097274780273
    10. '   ' → logprob: -18.875097274780273

Token 580: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00700141629204154
    2. 'else' → logprob: -5.3820013999938965
    3. '               ' → logprob: -6.2570013999938965
    4. ' else' → logprob: -8.632001876831055
    5. 'elif' → logprob: -8.882001876831055
    6. '
' → logprob: -9.382001876831055
    7. 'continue' → logprob: -10.757001876831055
    8. '       ' → logprob: -11.007001876831055
    9. '            
' → logprob: -11.757001876831055
    10. '.' → logprob: -12.882001876831055

Token 581: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08710401505231857
    2. 'else' → logprob: -2.587104082107544
    3. '               ' → logprob: -5.462103843688965
    4. 'elif' → logprob: -5.712103843688965
    5. ' else' → logprob: -7.962103843688965
    6. 'continue' → logprob: -8.337103843688965
    7. '       ' → logprob: -11.087103843688965
    8. 'return' → logprob: -11.712103843688965
    9. ' elif' → logprob: -12.087103843688965
    10. '            
' → logprob: -12.462103843688965

Token 582: ' borrow' (ID: 23960)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'borrow' (adapté à ' borrow') → logprob: -0.002948816865682602
    2. '           ' → logprob: -6.377948760986328
    3. '               ' → logprob: -6.877948760986328
    4. 'continue' → logprob: -9.127948760986328
    5. 'if' → logprob: -10.002948760986328
    6. ' borrow' → logprob: -10.627948760986328
    7. '       ' → logprob: -11.377948760986328
    8. 'else' → logprob: -11.377948760986328
    9. 'forget' → logprob: -12.502948760986328
    10. '   ' → logprob: -12.502948760986328

Token 583: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.625001907348633
    3. '.append' → logprob: -14.875001907348633
    4. ' [' → logprob: -17.875001907348633
    5. '[j' → logprob: -17.875001907348633
    6. '[
' → logprob: -18.250001907348633
    7. '[next' → logprob: -18.250001907348633
    8. ' =' → logprob: -18.625001907348633
    9. '=' → logprob: -18.875001907348633
    10. '[n' → logprob: -19.000001907348633

Token 584: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008758743293583393
    2. ']' → logprob: -5.133758544921875
    3. ' +' → logprob: -5.883758544921875
    4. ']=' → logprob: -10.758758544921875
    5. '   ' → logprob: -12.133758544921875
    6. '1' → logprob: -12.508758544921875
    7. '+i' → logprob: -12.508758544921875
    8. '=' → logprob: -13.383758544921875
    9. '+]' → logprob: -13.508758544921875
    10. '[i' → logprob: -13.758758544921875

Token 585: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. '```' → logprob: -12.750005722045898
    3. ' ' → logprob: -14.375005722045898
    4. ']' → logprob: -14.500005722045898
    5. '           ' → logprob: -15.125005722045898
    6. 'i' → logprob: -15.500005722045898
    7. '   ' → logprob: -15.625005722045898
    8. '0' → logprob: -15.625005722045898
    9. '``' → logprob: -16.2500057220459
    10. '+' → logprob: -16.6250057220459

Token 586: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009889130480587482
    2. ' =' → logprob: -4.634889125823975
    3. ']' → logprob: -9.509889602661133
    4. ']=' → logprob: -9.759889602661133
    5. '0' → logprob: -14.884889602661133
    6. ')' → logprob: -14.884889602661133
    7. '   ' → logprob: -15.759889602661133
    8. '+=' → logprob: -15.884889602661133
    9. ')=' → logprob: -16.009889602661133
    10. '=
' → logprob: -16.759889602661133

Token 587: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033546582562848926
    2. ' =' → logprob: -8.000335693359375
    3. '0' → logprob: -17.250335693359375
    4. '+=' → logprob: -18.500335693359375
    5. '=
' → logprob: -19.750335693359375
    6. '   ' → logprob: -20.000335693359375
    7. '.=' → logprob: -20.250335693359375
    8. '＝' → logprob: -20.375335693359375
    9. ' ' → logprob: -20.750335693359375
    10. '==' → logprob: -21.000335693359375

Token 588: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.960946772480384e-05
    2. 'borrow' → logprob: -9.625099182128906
    3. ' ' → logprob: -10.375099182128906
    4. 'bor' → logprob: -14.000099182128906
    5. ' borrow' → logprob: -14.125099182128906
    6. '   ' → logprob: -14.875099182128906
    7. '00' → logprob: -17.000099182128906
    8. '```' → logprob: -17.125099182128906
    9. '000' → logprob: -17.500099182128906
    10. '  ' → logprob: -17.750099182128906

Token 589: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -12.125008583068848
    3. 'borrow' → logprob: -12.750008583068848
    4. '   ' → logprob: -15.250008583068848
    5. 'bor' → logprob: -16.750009536743164
    6. '               ' → logprob: -17.125009536743164
    7. 'forget' → logprob: -17.375009536743164
    8. '           ' → logprob: -17.375009536743164
    9. '                   ' → logprob: -17.500009536743164
    10. ' borrow' → logprob: -17.562509536743164

Token 590: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001998108346015215
    2. '
' → logprob: -6.376997947692871
    3. 'else' → logprob: -9.001997947692871
    4. 'elif' → logprob: -9.126997947692871
    5. '            
' → logprob: -10.626997947692871
    6. ' else' → logprob: -10.876997947692871
    7. '               ' → logprob: -11.376997947692871
    8. '       ' → logprob: -13.126997947692871
    9. '    
' → logprob: -13.251997947692871
    10. ' elif' → logprob: -13.376997947692871

Token 591: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037268034648150206
    2. 'else' → logprob: -5.628726959228516
    3. 'elif' → logprob: -9.378726959228516
    4. ' else' → logprob: -10.128726959228516
    5. '               ' → logprob: -14.128726959228516
    6. '       ' → logprob: -14.753726959228516
    7. '```' → logprob: -15.503726959228516
    8. ' elif' → logprob: -15.503726959228516
    9. '		' → logprob: -15.753726959228516
    10. '	       ' → logprob: -15.878726959228516

Token 592: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13709741830825806
    2. '           ' → logprob: -2.1370973587036133
    3. ' else' → logprob: -4.637097358703613
    4. 'elif' → logprob: -7.762097358703613
    5. ' elif' → logprob: -12.512097358703613
    6. '       ' → logprob: -13.012097358703613
    7. '   ' → logprob: -16.01209831237793
    8. '	else' → logprob: -16.38709831237793
    9. '               ' → logprob: -16.38709831237793
    10. '
' → logprob: -16.51209831237793

Token 593: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7593485713005066
    2. ':' → logprob: -0.8843485713005066
    3. '               ' → logprob: -2.1343486309051514
    4. '           ' → logprob: -7.384348392486572
    5. ':
' → logprob: -10.38434886932373
    6. '):
' → logprob: -11.50934886932373
    7. ',' → logprob: -11.63434886932373
    8. '   ' → logprob: -11.63434886932373
    9. ' :
' → logprob: -11.63434886932373
    10. '       ' → logprob: -11.75934886932373

Token 594: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1932985931634903
    2. '           ' → logprob: -2.193298578262329
    3. 'borrow' → logprob: -3.818298578262329
    4. ' if' → logprob: -3.943298578262329
    5. ' borrow' → logprob: -4.193298816680908
    6. ' A' → logprob: -6.193298816680908
    7. 'A' → logprob: -6.693298816680908
    8. ' C' → logprob: -6.943298816680908
    9. 'if' → logprob: -7.068298816680908
    10. ' self' → logprob: -7.943298816680908

Token 595: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2756179869174957
    2. 'borrow' → logprob: -1.9006179571151733
    3. 'C' → logprob: -2.775618076324463
    4. '               ' → logprob: -4.275618076324463
    5. '#' (adapté à ' #') → logprob: -5.025618076324463
    6. 'A' → logprob: -6.275618076324463
    7. 'should' → logprob: -6.275618076324463
    8. '           ' → logprob: -6.400618076324463
    9. ' if' → logprob: -7.525618076324463
    10. 'forget' → logprob: -7.525618076324463

Token 596: ' 本' (ID: 51021)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.379929780960083
    2. 'borrow' → logprob: -1.254929780960083
    3. 'C' → logprob: -4.379929542541504
    4. '#' → logprob: -5.254929542541504
    5. '               ' → logprob: -5.379929542541504
    6. 'A' → logprob: -6.004929542541504
    7. 'should' → logprob: -6.254929542541504
    8. 'need' → logprob: -6.754929542541504
    9. '           ' → logprob: -7.004929542541504
    10. 'forget' → logprob: -7.254929542541504

Token 597: '来' (ID: 6727)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23292730748653412
    2. '                   ' → logprob: -3.1079273223876953
    3. '           ' → logprob: -3.4829273223876953
    4. '                ' → logprob: -3.7329273223876953
    5. '                 ' → logprob: -3.7329273223876953
    6. '[i' → logprob: -4.482927322387695
    7. '[' → logprob: -4.982927322387695
    8. 'の' → logprob: -4.982927322387695
    9. '             ' → logprob: -5.107927322387695
    10. '当に' → logprob: -5.232927322387695

Token 598: 'は' (ID: 5205)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.6361287832260132
    2. '               ' → logprob: -1.7611287832260132
    3. 'の' → logprob: -1.7611287832260132
    4. ',' → logprob: -2.7611289024353027
    5. 'は' → logprob: -4.511128902435303
    6. '借' → logprob: -4.761128902435303
    7. ':' → logprob: -4.886128902435303
    8. ':
' → logprob: -5.261128902435303
    9. '                ' → logprob: -5.386128902435303
    10. '.borrow' → logprob: -5.636128902435303

Token 599: ' borrow' (ID: 23960)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05691804736852646
    2. 'borrow' → logprob: -3.431918144226074
    3. '1' → logprob: -4.056918144226074
    4. 'self' → logprob: -6.806918144226074
    5. '#' → logprob: -6.931918144226074
    6. 'C' → logprob: -7.056918144226074
    7. ' if' → logprob: -7.056918144226074
    8. 'A' → logprob: -7.306918144226074
    9. '           ' → logprob: -8.181918144226074
    10. 'True' → logprob: -8.306918144226074

Token 600: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011090856045484543
    2. 'を' → logprob: -4.7610907554626465
    3. 'が' → logprob: -7.0110907554626465
    4. 'し' → logprob: -7.8860907554626465
    5. 'は' → logprob: -8.636091232299805
    6. '[' → logprob: -8.761091232299805
    7. 'の' → logprob: -9.011091232299805
    8. 'する' → logprob: -9.511091232299805
    9. 'なし' → logprob: -9.886091232299805
    10. 'i' → logprob: -10.136091232299805

Token 601: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.019214440137147903
    2. ']' → logprob: -4.019214630126953
    3. ' +' → logprob: -7.019214630126953
    4. ']+' → logprob: -9.519214630126953
    5. '＋' → logprob: -9.769214630126953
    6. '   ' → logprob: -11.019214630126953
    7. '1' → logprob: -12.269214630126953
    8. '],' → logprob: -12.519214630126953
    9. ' ' → logprob: -13.144214630126953
    10. '+i' → logprob: -13.894214630126953

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.875005722045898
    3. ']' → logprob: -13.875005722045898
    4. '```' → logprob: -14.375005722045898
    5. '
' → logprob: -14.625005722045898
    6. '１' → logprob: -14.875005722045898
    7. '0' → logprob: -15.000005722045898
    8. '   ' → logprob: -15.500005722045898
    9. '``' → logprob: -16.6875057220459
    10. '+' → logprob: -17.1250057220459

Token 603: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018500613048672676
    2. ']+=' → logprob: -4.018500804901123
    3. ' ]' → logprob: -8.643500328063965
    4. ']=' → logprob: -9.643500328063965
    5. ' +=' → logprob: -10.018500328063965
    6. '+' → logprob: -10.768500328063965
    7. 'を' → logprob: -12.018500328063965
    8. ' +' → logprob: -12.143500328063965
    9. ']+' → logprob: -12.268500328063965
    10. '+=' → logprob: -12.518500328063965

Token 604: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04305673763155937
    2. ' =' → logprob: -3.1680567264556885
    3. '+=' → logprob: -10.16805648803711
    4. ' +=' → logprob: -11.41805648803711
    5. '＝' → logprob: -12.29305648803711
    6. ']' → logprob: -13.79305648803711
    7. '1' → logprob: -13.91805648803711
    8. ']=' → logprob: -14.29305648803711
    9. '+' → logprob: -14.79305648803711
    10. ' ' → logprob: -15.79305648803711

Token 605: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.472211968386546e-05
    2. ' ' → logprob: -9.875094413757324
    3. 'borrow' → logprob: -10.250094413757324
    4. ' borrow' → logprob: -12.625094413757324
    5. '   ' → logprob: -13.000094413757324
    6. '１' → logprob: -14.500094413757324
    7. '                   ' → logprob: -15.187594413757324
    8. '               ' → logprob: -15.437594413757324
    9. '       ' → logprob: -15.437594413757324
    10. '0' → logprob: -15.625094413757324

Token 606: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.976922744186595e-05
    2. ' ' → logprob: -10.875040054321289
    3. 'borrow' → logprob: -10.875040054321289
    4. ' borrow' → logprob: -14.375040054321289
    5. '１' → logprob: -14.500040054321289
    6. '   ' → logprob: -15.125040054321289
    7. '0' → logprob: -15.625040054321289
    8. '
' → logprob: -16.81254005432129
    9. '```' → logprob: -17.43754005432129
    10. '(' → logprob: -17.81254005432129

Token 607: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5808197259902954
    2. '
' → logprob: -0.8308197259902954
    3. '
' → logprob: -6.705819606781006
    4. ' but' → logprob: -6.830819606781006
    5. '                
' → logprob: -7.205819606781006
    6. ' and' → logprob: -8.080820083618164
    7. ',' → logprob: -8.080820083618164
    8. '           ' → logprob: -8.205820083618164
    9. '  
' → logprob: -8.580820083618164
    10. '                ' → logprob: -8.955820083618164

Token 608: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005631613312289119
    2. '                ' → logprob: -8.125563621520996
    3. ' but' → logprob: -9.750563621520996
    4. '                
' → logprob: -10.125563621520996
    5. ',' → logprob: -10.250563621520996
    6. '              ' → logprob: -10.375563621520996
    7. '<|end|>' → logprob: -10.500563621520996
    8. '           ' → logprob: -10.750563621520996
    9. '
' → logprob: -11.125563621520996
    10. '                   ' → logprob: -11.375563621520996

Token 609: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11664459854364395
    2. 'borrow' → logprob: -2.9916446208953857
    3. 'forget' → logprob: -3.2416446208953857
    4. '               ' → logprob: -3.9916446208953857
    5. 'should' → logprob: -6.741644382476807
    6. '#' (adapté à ' #') → logprob: -8.491644859313965
    7. ' if' → logprob: -8.491644859313965
    8. '           ' → logprob: -8.616644859313965
    9. '                   ' → logprob: -8.741644859313965
    10. 'forgot' → logprob: -9.241644859313965

Token 610: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009786427952349186
    2. 'forget' → logprob: -4.884786605834961
    3. 'borrow' → logprob: -7.384786605834961
    4. '               ' → logprob: -7.634786605834961
    5. 'should' → logprob: -8.384786605834961
    6. '           ' → logprob: -8.384786605834961
    7. '#' → logprob: -9.009786605834961
    8. ' if' → logprob: -9.134786605834961
    9. '       ' → logprob: -9.634786605834961
    10. 'forgot' → logprob: -9.759786605834961

Token 611: 'だ' (ID: 11792)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0028353037778288126
    2. 'forget' → logprob: -6.752835273742676
    3. '               ' → logprob: -7.252835273742676
    4. 'borrow' → logprob: -7.627835273742676
    5. ' if' → logprob: -8.627835273742676
    6. '                   ' → logprob: -9.002835273742676
    7. 'should' → logprob: -9.752835273742676
    8. '#' → logprob: -10.627835273742676
    9. '```' → logprob: -10.877835273742676
    10. '           ' → logprob: -10.877835273742676

Token 612: 'が' (ID: 6632)
  Prédit: 'け'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'け' → logprob: -0.01547264028340578
    2. '           ' → logprob: -5.015472412109375
    3. 'から' → logprob: -5.765472412109375
    4. 'と' → logprob: -6.765472412109375
    5. '               ' → logprob: -7.265472412109375
    6. 'が' → logprob: -7.265472412109375
    7. 'いた' → logprob: -7.515472412109375
    8. 'か' → logprob: -7.765472412109375
    9. 'いて' → logprob: -8.140472412109375
    10. '       ' → logprob: -8.140472412109375

Token 613: '�' (ID: 57872)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3350646495819092
    2. ' self' → logprob: -1.7100646495819092
    3. 'if' → logprob: -2.710064649581909
    4. ' if' → logprob: -3.460064649581909
    5. '               ' → logprob: -5.210064888000488
    6. ' not' → logprob: -8.460064888000488
    7. 'not' → logprob: -9.460064888000488
    8. ' ' → logprob: -10.460064888000488
    9. '(self' → logprob: -11.210064888000488
    10. '                   ' → logprob: -11.210064888000488

Token 614: '�' (ID: 108)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8696942329406738
    2. ' borrow' → logprob: -1.8696942329406738
    3. 'borrow' → logprob: -2.119694232940674
    4. '               ' → logprob: -2.494694232940674
    5. '                ' → logprob: -3.244694232940674
    6. '=' → logprob: -3.494694232940674
    7. ' not' → logprob: -3.744694232940674
    8. '                   ' → logprob: -4.119694232940674
    9. '1' → logprob: -4.244694232940674
    10. ' ' → logprob: -4.369694232940674

Token 615: 'り' (ID: 7297)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0555109977722168
    2. '1' → logprob: -1.6805109977722168
    3. 'borrow' → logprob: -1.9305109977722168
    4. ' ' → logprob: -2.430510997772217
    5. ' borrow' → logprob: -2.680510997772217
    6. '                ' → logprob: -3.680510997772217
    7. '                   ' → logprob: -3.680510997772217
    8. '0' → logprob: -3.680510997772217
    9. '=' → logprob: -4.430510997772217
    10. '              ' → logprob: -4.555510997772217

Token 616: '下' (ID: 3771)
  Prédit: '下'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '下' → logprob: -1.153236746788025
    2. 'forget' → logprob: -1.278236746788025
    3. '[i' → logprob: -1.653236746788025
    4. 'down' → logprob: -1.903236746788025
    5. '[' → logprob: -4.4032368659973145
    6. '               ' → logprob: -4.6532368659973145
    7. '_down' → logprob: -4.7782368659973145
    8. '忘' → logprob: -4.9032368659973145
    9. ' forget' → logprob: -5.0282368659973145
    10. ' 下' → logprob: -6.0282368659973145

Token 617: 'が' (ID: 6632)
  Prédit: 'が'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.00020747410599142313
    2. 'り' → logprob: -9.000207901000977
    3. 'あり' → logprob: -9.875207901000977
    4. ' が' → logprob: -11.625207901000977
    5. 'borrow' → logprob: -12.625207901000977
    6. 'か' → logprob: -12.750207901000977
    7. 'がお' → logprob: -12.875207901000977
    8. 'g' → logprob: -13.000207901000977
    9. 'げ' → logprob: -13.000207901000977
    10. '[' → logprob: -13.375207901000977

Token 618: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.0008389271679334342
    2. '[' → logprob: -9.250839233398438
    3. 'i' → logprob: -9.250839233398438
    4. '忘' → logprob: -9.500839233398438
    5. '```' → logprob: -9.875839233398438
    6. 'い' → logprob: -9.875839233398438
    7. 'し' → logprob: -10.000839233398438
    8. '[i' → logprob: -10.125839233398438
    9. '�' → logprob: -10.250839233398438
    10. 'ri' → logprob: -10.375839233398438

Token 619: '忘' (ID: 69291)
  Prédit: 'forget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forget' → logprob: -0.1624378114938736
    2. '忘' → logprob: -2.287437915802002
    3. '[i' → logprob: -3.912437915802002
    4. ' forget' → logprob: -5.662437915802002
    5. 'を' → logprob: -5.787437915802002
    6. 'forgot' → logprob: -5.912437915802002
    7. '=' → logprob: -6.162437915802002
    8. 'for' → logprob: -6.287437915802002
    9. '[' → logprob: -6.412437915802002
    10. 'の' → logprob: -6.662437915802002

Token 620: 'れ' (ID: 9472)
  Prédit: 'れ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.018713926896452904
    2. '=' → logprob: -4.14371395111084
    3. 'れて' → logprob: -7.26871395111084
    4. '�' → logprob: -8.01871395111084
    5. '#' → logprob: -8.01871395111084
    6. '��' → logprob: -8.64371395111084
    7. 'れる' → logprob: -8.89371395111084
    8. '[' → logprob: -9.14371395111084
    9. '```' → logprob: -9.39371395111084
    10. '却' → logprob: -9.76871395111084

Token 621: 'が' (ID: 6632)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5185389518737793
    2. '=' → logprob: -1.3935389518737793
    3. '               ' → logprob: -2.8935389518737793
    4. 'を' → logprob: -3.1435389518737793
    5. 'する' → logprob: -4.768538951873779
    6. '                   ' → logprob: -5.018538951873779
    7. '[i' → logprob: -5.143538951873779
    8. 'して' → logprob: -5.268538951873779
    9. '[' → logprob: -5.518538951873779
    10. '           ' → logprob: -5.643538951873779

Token 622: '許' (ID: 147476)
  Prédit: 'でき'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'でき' → logprob: -0.8188101053237915
    2. '可能' → logprob: -1.3188101053237915
    3. '使' → logprob: -1.4438101053237915
    4. 'possible' → logprob: -4.193809986114502
    5. '   ' → logprob: -4.943809986114502
    6. 'allowed' → logprob: -5.443809986114502
    7. '       ' → logprob: -5.568809986114502
    8. ' ' → logprob: -5.818809986114502
    9. 'self' → logprob: -5.818809986114502
    10. '           ' → logprob: -6.068809986114502

Token 623: 'され' (ID: 64598)
  Prédit: '容'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '容' → logprob: -1.02387535572052
    2. '可' → logprob: -1.14887535572052
    3. 'され' → logprob: -2.0238752365112305
    4. 'せ' → logprob: -2.3988752365112305
    5. '�' → logprob: -3.1488752365112305
    6. 'さ' → logprob: -3.6488752365112305
    7. 'す' → logprob: -4.2738752365112305
    8. '��' → logprob: -5.1488752365112305
    9. 'し' → logprob: -6.1488752365112305
    10. '_' → logprob: -6.3988752365112305

Token 624: 'て' (ID: 5711)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.016903966665267944
    2. 'て' → logprob: -4.891903877258301
    3. 'れる' → logprob: -5.391903877258301
    4. 'れ' → logprob: -5.891903877258301
    5. 'れて' → logprob: -7.766903877258301
    6. ',' → logprob: -7.766903877258301
    7. 'ら' → logprob: -8.0169038772583
    8. 'ない' → logprob: -8.2669038772583
    9. '、' → logprob: -9.3919038772583
    10. '#' → logprob: -9.7669038772583

Token 625: 'いる' (ID: 86169)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.01731598563492298
    2. 'ない' → logprob: -5.142315864562988
    3. 'て' → logprob: -5.142315864562988
    4. 'いる' → logprob: -6.017315864562988
    5. '0' → logprob: -7.142315864562988
    6. 'た' → logprob: -7.892315864562988
    7. '1' → logprob: -8.017315864562988
    8. '#' → logprob: -8.142315864562988
    9. 'れる' → logprob: -8.267315864562988
    10. 'れば' → logprob: -9.142315864562988

Token 626: 'と' (ID: 5330)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4064076840877533
    2. ' and' → logprob: -2.031407594680786
    3. ' if' → logprob: -2.906407594680786
    4. 'and' → logprob: -3.406407594680786
    5. 'if' → logprob: -3.531407594680786
    6. 'なら' → logprob: -3.656407594680786
    7. '場合' → logprob: -4.156407833099365
    8. ',' → logprob: -4.781407833099365
    9. '           ' → logprob: -4.906407833099365
    10. 'ので' → logprob: -5.031407833099365

Token 627: 'き' (ID: 11852)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4142538011074066
    2. '               ' → logprob: -1.789253830909729
    3. 'borrow' → logprob: -2.1642537117004395
    4. ' if' → logprob: -3.2892537117004395
    5. '                   ' → logprob: -5.5392537117004395
    6. 'continue' → logprob: -5.9142537117004395
    7. 'for' → logprob: -6.0392537117004395
    8. '           ' → logprob: -6.6642537117004395
    9. 'forget' → logprob: -6.6642537117004395
    10. '```' → logprob: -6.9142537117004395

Token 628: '：
' (ID: 21825)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2377505898475647
    2. ' and' → logprob: -1.86275053024292
    3. 'and' → logprob: -3.61275053024292
    4. ' if' → logprob: -4.11275053024292
    5. ':' → logprob: -4.86275053024292
    6. ',' → logprob: -5.61275053024292
    7. 'if' → logprob: -6.86275053024292
    8. ':
' → logprob: -8.862751007080078
    9. '                   ' → logprob: -9.237751007080078
    10. '           ' → logprob: -9.362751007080078

Token 629: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03485686331987381
    2. ' if' → logprob: -3.5348567962646484
    3. '                ' → logprob: -5.534856796264648
    4. '           ' → logprob: -7.534856796264648
    5. 'if' → logprob: -8.284856796264648
    6. '                   ' → logprob: -9.409856796264648
    7. ' ' → logprob: -9.909856796264648
    8. '              ' → logprob: -10.159856796264648
    9. '            ' → logprob: -10.159856796264648
    10. '   ' → logprob: -10.409856796264648

Token 630: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05192183330655098
    2. 'if' (adapté à ' if') → logprob: -3.301921844482422
    3. '               ' → logprob: -4.301921844482422
    4. '                ' → logprob: -8.551921844482422
    5. ' ' → logprob: -10.551921844482422
    6. '                   ' → logprob: -11.551921844482422
    7. '           ' → logprob: -12.926921844482422
    8. '   ' → logprob: -13.301921844482422
    9. ' ' → logprob: -13.551921844482422
    10. '              ' → logprob: -14.176921844482422

Token 631: ' forget' (ID: 13814)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9142215847969055
    2. 'self' → logprob: -1.0392215251922607
    3. ' forget' → logprob: -2.0392215251922607
    4. 'forget' → logprob: -2.1642215251922607
    5. '               ' → logprob: -7.78922176361084
    6. '           ' → logprob: -11.66422176361084
    7. '   ' → logprob: -11.78922176361084
    8. 'for' → logprob: -12.03922176361084
    9. ' ' → logprob: -12.16422176361084
    10. '(self' → logprob: -12.28922176361084

Token 632: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00015050210640765727
    2. 'count' → logprob: -9.500150680541992
    3. 'Count' → logprob: -10.750150680541992
    4. ' _' → logprob: -11.375150680541992
    5. '_' → logprob: -11.750150680541992
    6. '>' → logprob: -12.875150680541992
    7. ':' → logprob: -13.000150680541992
    8. ')' → logprob: -13.000150680541992
    9. '_COUNT' → logprob: -13.250150680541992
    10. '\' → logprob: -13.500150680541992

Token 633: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.023262951523065567
    2. '<' → logprob: -3.7732629776000977
    3. ' ' → logprob: -11.398262977600098
    4. ' >=' → logprob: -13.398262977600098
    5. '[' → logprob: -14.273262977600098
    6. '＜' → logprob: -14.523262977600098
    7. ' <
' → logprob: -14.773262977600098
    8. '<|end|>' → logprob: -15.273262977600098
    9. '<class' → logprob: -15.523262977600098
    10. '<len' → logprob: -15.773262977600098

Token 634: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008624386973679066
    2. ' self' → logprob: -4.75862455368042
    3. '	self' → logprob: -12.383624076843262
    4. '<|end|>' → logprob: -13.383624076843262
    5. '(self' → logprob: -13.508624076843262
    6. '=self' → logprob: -13.633624076843262
    7. '[self' → logprob: -14.883624076843262
    8. '
' → logprob: -14.883624076843262
    9. '           ' → logprob: -15.133624076843262
    10. '       ' → logprob: -15.258624076843262

Token 635: '.K' (ID: 14475)
  Prédit: '.K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.0008092674543149769
    2. 'K' → logprob: -7.125809192657471
    3. ' K' → logprob: -13.000809669494629
    4. ',K' → logprob: -14.375809669494629
    5. '	K' → logprob: -14.500809669494629
    6. '<K' → logprob: -14.500809669494629
    7. '.' → logprob: -14.750809669494629
    8. '>K' → logprob: -15.625809669494629
    9. '.К' → logprob: -15.875809669494629
    10. ' .' → logprob: -16.750808715820312

Token 636: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005244429688900709
    2. 'and' → logprob: -5.255244255065918
    3. '               ' → logprob: -12.255244255065918
    4. '                   ' → logprob: -13.505244255065918
    5. 'そして' → logprob: -13.630244255065918
    6. ' ' → logprob: -14.130244255065918
    7. '           ' → logprob: -14.130244255065918
    8. '                ' → logprob: -14.880244255065918
    9. ' и' → logprob: -15.130244255065918
    10. '            ' → logprob: -15.880244255065918

Token 637: ' self' (ID: 1051)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 638: '.strategy' (ID: 144368)
  Prédit: '.strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strategy' → logprob: -0.0019366045016795397
    2. 'strategy' → logprob: -6.251936435699463
    3. '.str' → logprob: -12.751936912536621
    4. ' .' → logprob: -13.251936912536621
    5. ' strategy' → logprob: -13.376936912536621
    6. '.should' → logprob: -14.126936912536621
    7. '.' → logprob: -14.251936912536621
    8. '..' → logprob: -16.001935958862305
    9. '策略' → logprob: -16.501935958862305
    10. '(strategy' → logprob: -16.751935958862305

Token 639: '.should' (ID: 33296)
  Prédit: '.should'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.should' → logprob: -0.000204851632588543
    2. '.' → logprob: -8.500205039978027
    3. 'should' → logprob: -14.500205039978027
    4. ' .' → logprob: -14.500205039978027
    5. '.Should' → logprob: -15.875205039978027
    6. '.has' → logprob: -16.25020408630371
    7. '.can' → logprob: -17.12520408630371
    8. '.s' → logprob: -17.25020408630371
    9. '.must' → logprob: -18.12520408630371
    10. '.is' → logprob: -18.75020408630371

Token 640: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.06224383786320686
    2. 'forget' → logprob: -2.812243938446045
    3. 'for' → logprob: -8.312243461608887
    4. '_f' → logprob: -11.312243461608887
    5. ' forget' → logprob: -11.312243461608887
    6. 'forgot' → logprob: -13.937243461608887
    7. '_' → logprob: -14.312243461608887
    8. 'f' → logprob: -14.437243461608887
    9. 'Forget' → logprob: -14.562243461608887
    10. 'forgettable' → logprob: -14.687243461608887

Token 641: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0015047440538182855
    2. 'forget' → logprob: -6.751504898071289
    3. 'orget' → logprob: -8.501504898071289
    4. 'got' → logprob: -9.751504898071289
    5. 'for' → logprob: -10.626504898071289
    6. '```' → logprob: -11.626504898071289
    7. ' forget' → logprob: -12.001504898071289
    8. '_get' → logprob: -12.251504898071289
    9. '
' → logprob: -12.501504898071289
    10. 'et' → logprob: -12.876504898071289

Token 642: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004090985283255577
    2. '(' → logprob: -5.504090785980225
    3. '(index' → logprob: -11.754091262817383
    4. '(
' → logprob: -12.379091262817383
    5. ' (' → logprob: -15.004091262817383
    6. '(self' → logprob: -16.379091262817383
    7. '((' → logprob: -17.004091262817383
    8. '(True' → logprob: -17.504091262817383
    9. '(

' → logprob: -17.879091262817383
    10. ',' → logprob: -18.004091262817383

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015181921189650893
    2. ' ,' → logprob: -6.501518249511719
    3. ',
' → logprob: -12.001518249511719
    4. ')' → logprob: -12.876518249511719
    5. '‌,' → logprob: -13.501518249511719
    6. ',int' → logprob: -14.001518249511719
    7. ',index' → logprob: -14.126518249511719
    8. '<|end|>' → logprob: -14.376518249511719
    9. ',i' → logprob: -14.501518249511719
    10. '+' → logprob: -14.876518249511719

Token 644: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007258945843204856
    2. ' self' → logprob: -7.250725746154785
    3. '
' → logprob: -12.125725746154785
    4. '(self' → logprob: -12.250725746154785
    5. 'K' → logprob: -13.875725746154785
    6. '[self' → logprob: -14.125725746154785
    7. '	self' → logprob: -14.375725746154785
    8. '                               ' → logprob: -14.750725746154785
    9. '```' → logprob: -14.750725746154785
    10. '   ' → logprob: -15.000725746154785

Token 645: '.K' (ID: 14475)
  Prédit: '.K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.029794471338391304
    2. 'K' → logprob: -3.529794454574585
    3. '_K' → logprob: -11.404794692993164
    4. '
' → logprob: -11.904794692993164
    5. '.' → logprob: -12.279794692993164
    6. ' K' → logprob: -12.529794692993164
    7. '<K' → logprob: -12.654794692993164
    8. ',K' → logprob: -12.779794692993164
    9. '           ' → logprob: -13.029794692993164
    10. '	K' → logprob: -13.654794692993164

Token 646: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6932887434959412
    2. ' -' → logprob: -0.6932887434959412
    3. '-for' → logprob: -8.943288803100586
    4. ' ' → logprob: -12.068288803100586
    5. ')' → logprob: -13.068288803100586
    6. 'forget' → logprob: -13.818288803100586
    7. '   ' → logprob: -14.443288803100586
    8. ' forget' → logprob: -14.693288803100586
    9. ' ' → logprob: -15.568288803100586
    10. 'Forget' → logprob: -15.693288803100586

Token 647: ' forget' (ID: 13814)
  Prédit: 'forget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forget' → logprob: -0.007640582509338856
    2. ' forget' → logprob: -4.882640361785889
    3. 'forgot' → logprob: -10.757640838623047
    4. 'for' → logprob: -11.632640838623047
    5. 'borrow' → logprob: -13.007640838623047
    6. '   ' → logprob: -14.757640838623047
    7. 'fore' → logprob: -14.882640838623047
    8. '忘' → logprob: -15.507640838623047
    9. ' forgot' → logprob: -15.632640838623047
    10. 'Forget' → logprob: -15.757640838623047

Token 648: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.13388703338569e-06
    2. 'count' → logprob: -11.625009536743164
    3. '_' → logprob: -16.500009536743164
    4. ')' → logprob: -17.625009536743164
    5. '__' → logprob: -17.625009536743164
    6. '_c' → logprob: -17.750009536743164
    7. 'Count' → logprob: -18.500009536743164
    8. ' count' → logprob: -18.500009536743164
    9. '   ' → logprob: -19.000009536743164
    10. '
' → logprob: -19.125009536743164

Token 649: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3879275619983673
    2. '):' → logprob: -1.137927532196045
    3. ')' → logprob: -7.387927532196045
    4. '):
' → logprob: -7.887927532196045
    5. '):

' → logprob: -11.012928009033203
    6. ' ):
' → logprob: -11.387928009033203
    7. ':' → logprob: -11.512928009033203
    8. '           ' → logprob: -12.012928009033203
    9. '               ' → logprob: -12.137928009033203
    10. ' ):' → logprob: -12.262928009033203

Token 650: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003241166938096285
    2. 'borrow' → logprob: -5.878241062164307
    3. '               ' → logprob: -8.253241539001465
    4. '                       ' → logprob: -9.503241539001465
    5. 'forget' → logprob: -10.753241539001465
    6. ':' → logprob: -10.878241539001465
    7. ' borrow' → logprob: -11.628241539001465
    8. '                    ' → logprob: -11.878241539001465
    9. ',' → logprob: -11.878241539001465
    10. ':
' → logprob: -11.878241539001465

Token 651: ' #' (ID: 1069)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.01848270185291767
    2. 'C' → logprob: -5.268482685089111
    3. '#' (adapté à ' #') → logprob: -5.393482685089111
    4. '                   ' → logprob: -5.643482685089111
    5. '               ' → logprob: -5.768482685089111
    6. 'forget' → logprob: -6.393482685089111
    7. '                       ' → logprob: -9.64348316192627
    8. '           ' → logprob: -9.89348316192627
    9. 'bor' → logprob: -10.64348316192627
    10. ' borrow' → logprob: -10.64348316192627

Token 652: ' �' (ID: 3637)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.003014310961589217
    2. 'C' → logprob: -6.878014087677002
    3. '#' → logprob: -7.253014087677002
    4. '               ' → logprob: -7.753014087677002
    5. '                   ' → logprob: -7.753014087677002
    6. 'forget' → logprob: -8.12801456451416
    7. ' borrow' → logprob: -10.62801456451416
    8. '           ' → logprob: -10.62801456451416
    9. '                       ' → logprob: -11.12801456451416
    10. '   ' → logprob: -11.62801456451416

Token 653: '�' (ID: 117)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.35360896587371826
    2. 'forget' → logprob: -2.603609085083008
    3. 'orrow' → logprob: -2.728609085083008
    4. '               ' → logprob: -2.853609085083008
    5. '#' → logprob: -3.478609085083008
    6. 'r' → logprob: -4.728609085083008
    7. 'for' → logprob: -4.728609085083008
    8. '           ' → logprob: -4.978609085083008
    9. '忘' → logprob: -5.228609085083008
    10. 'rent' → logprob: -5.728609085083008

Token 654: '�' (ID: 108)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4582611918449402
    2. 'forget' → logprob: -1.583261251449585
    3. 'borrow' → logprob: -3.208261251449585
    4. '                   ' → logprob: -3.833261251449585
    5. '忘' → logprob: -3.833261251449585
    6. 'count' → logprob: -3.958261251449585
    7. '           ' → logprob: -4.333261013031006
    8. '_count' → logprob: -4.458261013031006
    9. 'for' → logprob: -5.458261013031006
    10. '                 ' → logprob: -6.083261013031006

Token 655: 'り' (ID: 7297)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.13876941800117493
    2. '               ' → logprob: -2.3887693881988525
    3. 'forget' → logprob: -4.388769626617432
    4. '                   ' → logprob: -5.013769626617432
    5. '忘' → logprob: -5.388769626617432
    6. '借' → logprob: -5.888769626617432
    7. '           ' → logprob: -6.388769626617432
    8. 'for' → logprob: -6.513769626617432
    9. '                 ' → logprob: -6.638769626617432
    10. ' borrow' → logprob: -7.263769626617432

Token 656: '下' (ID: 3771)
  Prédit: '下'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '下' → logprob: -0.03385177627205849
    2. 'down' → logprob: -3.5338518619537354
    3. 'forget' → logprob: -6.033851623535156
    4. '               ' → logprob: -7.533851623535156
    5. ' 下' → logprob: -8.158851623535156
    6. 'count' → logprob: -8.283851623535156
    7. '忘' → logprob: -8.283851623535156
    8. 'for' → logprob: -9.658851623535156
    9. '                   ' → logprob: -9.908851623535156
    10. 'borrow' → logprob: -9.908851623535156

Token 657: 'が' (ID: 6632)
  Prédit: 'が'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.18802812695503235
    2. '下' → logprob: -1.93802809715271
    3. 'down' → logprob: -4.813028335571289
    4. '上' → logprob: -5.063028335571289
    5. '忘' → logprob: -5.188028335571289
    6. '借' → logprob: -6.063028335571289
    7. 'forget' → logprob: -7.188028335571289
    8. 'り' → logprob: -7.313028335571289
    9. 'borrow' → logprob: -7.938028335571289
    10. 'あ' → logprob: -8.063028335571289

Token 658: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.0008904983988031745
    2. 'し' → logprob: -9.250890731811523
    3. 'る' → logprob: -9.625890731811523
    4. '忘' → logprob: -10.063390731811523
    5. '1' → logprob: -10.125890731811523
    6. '��' → logprob: -10.188390731811523
    7. '借' → logprob: -10.250890731811523
    8. 'i' → logprob: -10.250890731811523
    9. 'れ' → logprob: -10.313390731811523
    10. 'たり' → logprob: -10.500890731811523

Token 659: '忘' (ID: 69291)
  Prédit: '忘'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '忘' → logprob: -0.600364625453949
    2. 'forget' → logprob: -0.975364625453949
    3. '=' → logprob: -3.4753646850585938
    4. 'forgot' → logprob: -4.100364685058594
    5. '[i' → logprob: -4.475364685058594
    6. 'borrow' → logprob: -4.975364685058594
    7. 'for' → logprob: -6.725364685058594
    8. ' =' → logprob: -7.100364685058594
    9. '   ' → logprob: -7.100364685058594
    10. 'を' → logprob: -7.225364685058594

Token 660: 'れ' (ID: 9472)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.46896231174468994
    2. '               ' → logprob: -1.59396231174469
    3. '           ' → logprob: -2.7189621925354004
    4. 'れ' → logprob: -3.4689621925354004
    5. '_count' → logprob: -3.4689621925354004
    6. 'り' → logprob: -4.5939621925354
    7. 'を' → logprob: -4.5939621925354
    8. '   ' → logprob: -5.5939621925354
    9. 'し' → logprob: -5.8439621925354
    10. 'count' → logprob: -6.3439621925354

Token 661: 'の' (ID: 3385)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5059441328048706
    2. '=' → logprob: -1.3809441328048706
    3. '_count' → logprob: -2.88094425201416
    4. ' =' → logprob: -3.00594425201416
    5. '[i' → logprob: -4.50594425201416
    6. '               ' → logprob: -4.63094425201416
    7. 'を' → logprob: -5.25594425201416
    8. 'count' → logprob: -6.38094425201416
    9. '+=' → logprob: -6.38094425201416
    10. '
' → logprob: -6.63094425201416

Token 662: '適' (ID: 101257)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.05901739373803139
    2. 'forget' → logprob: -2.9340174198150635
    3. '忘' → logprob: -6.184017181396484
    4. 'forgot' → logprob: -7.684017181396484
    5. '   ' → logprob: -7.934017181396484
    6. 'を' → logprob: -8.184017181396484
    7. 'C' → logprob: -8.434017181396484
    8. 'for' → logprob: -8.559017181396484
    9. '#' → logprob: -9.059017181396484
    10. '               ' → logprob: -9.559017181396484

Token 663: '用' (ID: 5615)
  Prédit: '用'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '用' → logprob: -2.7372048862162046e-05
    2. '応' → logprob: -10.625027656555176
    3. '当' → logprob: -13.125027656555176
    4. '切' → logprob: -14.250027656555176
    5. '용' → logprob: -15.875027656555176
    6. '否' → logprob: -16.37502670288086
    7. '```' → logprob: -17.12502670288086
    8. ' 用' → logprob: -17.25002670288086
    9. 'use' → logprob: -17.62502670288086
    10. '合' → logprob: -18.12502670288086

Token 664: ' →' (ID: 15155)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.47220882773399353
    2. 'borrow' → logprob: -1.097208857536316
    3. '               ' → logprob: -3.3472087383270264
    4. ' borrow' → logprob: -5.4722089767456055
    5. '                       ' → logprob: -6.7222089767456055
    6. 'C' → logprob: -7.8472089767456055
    7. '           ' → logprob: -7.9722089767456055
    8. '=' → logprob: -8.597208976745605
    9. 'b' → logprob: -8.972208976745605
    10. '```' → logprob: -9.222208976745605

Token 665: ' borrow' (ID: 23960)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.5803577303886414
    2. 'C' → logprob: -0.8303577303886414
    3. 'forget' → logprob: -6.455357551574707
    4. '               ' → logprob: -6.705357551574707
    5. '0' → logprob: -7.830357551574707
    6. 'A' → logprob: -8.330357551574707
    7. '#' → logprob: -8.830357551574707
    8. '   ' → logprob: -9.080357551574707
    9. '                   ' → logprob: -9.080357551574707
    10. '           ' → logprob: -9.205357551574707

Token 666: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7835754988482222e-05
    2. '[' → logprob: -11.375018119812012
    3. '.append' → logprob: -13.250018119812012
    4. 'i' → logprob: -13.500018119812012
    5. '```' → logprob: -14.375018119812012
    6. ' [' → logprob: -15.000018119812012
    7. '=' → logprob: -15.250018119812012
    8. ' =' → logprob: -15.250018119812012
    9. '\[' → logprob: -15.500018119812012
    10. '[next' → logprob: -16.000017166137695

Token 667: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.179569077678025e-05
    2. ' +' → logprob: -10.625041961669922
    3. ']+' → logprob: -12.375041961669922
    4. '＋' → logprob: -12.375041961669922
    5. ']' → logprob: -12.500041961669922
    6. ']+=' → logprob: -13.000041961669922
    7. '+
' → logprob: -13.500041961669922
    8. '+]' → logprob: -14.500041961669922
    9. '+=' → logprob: -15.250041961669922
    10. ']=' → logprob: -15.625041961669922

Token 668: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018577903392724693
    2. ' ' → logprob: -10.2501859664917
    3. ']' → logprob: -10.2501859664917
    4. '```' → logprob: -10.3751859664917
    5. '+' → logprob: -10.6251859664917
    6. '0' → logprob: -11.0001859664917
    7. '   ' → logprob: -12.1876859664917
    8. '                   ' → logprob: -12.4376859664917
    9. '
' → logprob: -12.8751859664917
    10. '=' → logprob: -12.8751859664917

Token 669: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14445319771766663
    2. ']=' → logprob: -2.394453287124634
    3. '=' → logprob: -3.394453287124634
    4. ']+=' → logprob: -4.894453048706055
    5. ' =' → logprob: -6.269453048706055
    6. '+=' → logprob: -8.894453048706055
    7. ' +=' → logprob: -9.394453048706055
    8. ' ]' → logprob: -9.519453048706055
    9. ']==' → logprob: -11.144453048706055
    10. ']+' → logprob: -11.769453048706055

Token 670: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078878089785576
    2. ' =' → logprob: -5.5040788650512695
    3. '＝' → logprob: -14.62907886505127
    4. '0' → logprob: -18.379079818725586
    5. '[' → logprob: -18.629079818725586
    6. '=
' → logprob: -18.754079818725586
    7. ']=' → logprob: -18.879079818725586
    8. ' ' → logprob: -19.379079818725586
    9. '[i' → logprob: -19.379079818725586
    10. '+=' → logprob: -19.504079818725586

Token 671: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0802738870552275e-05
    2. '1' → logprob: -11.75001049041748
    3. ' ' → logprob: -13.12501049041748
    4. 'forget' → logprob: -15.12501049041748
    5. 'borrow' → logprob: -16.125011444091797
    6. '   ' → logprob: -16.187511444091797
    7. '０' → logprob: -16.687511444091797
    8. '2' → logprob: -16.875011444091797
    9. '00' → logprob: -17.375011444091797
    10. '```' → logprob: -17.437511444091797

Token 672: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.0590548703912646e-05
    2. '1' → logprob: -10.500030517578125
    3. ' ' → logprob: -13.625030517578125
    4. 'forget' → logprob: -14.437530517578125
    5. 'borrow' → logprob: -14.687530517578125
    6. '０' → logprob: -16.000030517578125
    7. '2' → logprob: -16.062530517578125
    8. '00' → logprob: -16.625030517578125
    9. '-' → logprob: -16.750030517578125
    10. '۰' → logprob: -17.000030517578125

Token 673: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6513428688049316
    2. '               ' → logprob: -0.7763428688049316
    3. 'else' → logprob: -4.151342868804932
    4. ' else' → logprob: -6.276342868804932
    5. 'C' → logprob: -9.026342391967773
    6. '           ' → logprob: -9.026342391967773
    7. '                       ' → logprob: -9.026342391967773
    8. '
' → logprob: -9.151342391967773
    9. '                    
' → logprob: -9.526342391967773
    10. '       ' → logprob: -9.776342391967773

Token 674: 'で' (ID: 4344)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01914987899363041
    2. '               ' → logprob: -4.2691497802734375
    3. 'else' → logprob: -6.2691497802734375
    4. '                    
' → logprob: -6.7691497802734375
    5. '
' → logprob: -7.7691497802734375
    6. ',' → logprob: -8.144149780273438
    7. 'forget' → logprob: -8.519149780273438
    8. 'borrow' → logprob: -8.644149780273438
    9. ' else' → logprob: -8.769149780273438
    10. ')' → logprob: -9.144149780273438

Token 675: '大' (ID: 1640)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.06456388533115387
    2. 'continue' → logprob: -3.9395639896392822
    3. 'pass' → logprob: -4.439563751220703
    4. 'borrow' → logprob: -4.814563751220703
    5. 'forget' → logprob: -5.189563751220703
    6. ' C' → logprob: -5.314563751220703
    7. '   ' → logprob: -6.189563751220703
    8. '#' → logprob: -6.564563751220703
    9. 'す' → logprob: -6.814563751220703
    10. '続' → logprob: -7.189563751220703

Token 676: 'き' (ID: 11852)
  Prédit: '丈夫'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '丈夫' → logprob: -0.025174610316753387
    2. 'き' → logprob: -4.400174617767334
    3. '幅' → logprob: -4.400174617767334
    4. '丈' → logprob: -9.525174140930176
    5. '変' → logprob: -10.150174140930176
    6. '目' → logprob: -10.275174140930176
    7. 'い' → logprob: -10.400174140930176
    8. '�' → logprob: -11.525174140930176
    9. '部分' → logprob: -11.650174140930176
    10. '��' → logprob: -11.900174140930176

Token 677: 'く' (ID: 10459)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.40748751163482666
    2. '丈夫' → logprob: -1.4074875116348267
    3. '幅' → logprob: -2.532487392425537
    4. '目' → logprob: -5.532487392425537
    5. 'な' → logprob: -6.907487392425537
    6. 'は' → logprob: -7.032487392425537
    7. 'く' → logprob: -7.157487392425537
    8. '差' → logprob: -7.407487392425537
    9. '```' → logprob: -8.032487869262695
    10. 'め' → logprob: -8.032487869262695

Token 678: 'なる' (ID: 154752)
  Prédit: 'なる'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'なる' → logprob: -0.5318897366523743
    2. 'C' → logprob: -1.6568896770477295
    3. 'な' → logprob: -2.5318896770477295
    4. 'き' → logprob: -3.6568896770477295
    5. '減' → logprob: -4.281889915466309
    6. '\xe6\x90' → logprob: -4.531889915466309
    7. '```' → logprob: -4.781889915466309
    8. '差' → logprob: -4.906889915466309
    9. '0' → logprob: -5.031889915466309
    10. '       ' → logprob: -5.281889915466309

Token 679: '結果' (ID: 109426)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009450170211493969
    2. '               ' → logprob: -4.7594499588012695
    3. '                       ' → logprob: -7.7594499588012695
    4. '           ' → logprob: -9.00944995880127
    5. '                    
' → logprob: -9.63444995880127
    6. '                    ' → logprob: -9.75944995880127
    7. ')' → logprob: -10.75944995880127
    8. ',' → logprob: -10.88444995880127
    9. '                  ' → logprob: -11.00944995880127
    10. '
' → logprob: -11.25944995880127

Token 680: 'を' (ID: 7277)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03586014732718468
    2. '               ' → logprob: -3.410860061645508
    3. ',' → logprob: -7.660860061645508
    4. '<|end|>' → logprob: -7.660860061645508
    5. '                       ' → logprob: -8.035860061645508
    6. '                    
' → logprob: -8.285860061645508
    7. '           ' → logprob: -8.660860061645508
    8. ')' → logprob: -9.410860061645508
    9. '                  ' → logprob: -9.660860061645508
    10. '                    ' → logprob: -9.785860061645508

Token 681: '優' (ID: 57607)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7543309330940247
    2. 'C' → logprob: -1.5043308734893799
    3. '得' → logprob: -2.50433087348938
    4. '               ' → logprob: -3.00433087348938
    5. '続' → logprob: -3.50433087348938
    6. '返' → logprob: -3.75433087348938
    7. '```' → logprob: -4.004331111907959
    8. '       ' → logprob: -4.004331111907959
    9. 'continue' → logprob: -4.379331111907959
    10. '                   ' → logprob: -4.629331111907959

Token 682: '先' (ID: 12231)
  Prédit: '先'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '先' → logprob: -0.0010313807288184762
    2. 'しく' → logprob: -7.501031398773193
    3. '```' → logprob: -8.001030921936035
    4. '遇' → logprob: -10.251030921936035
    5. 'せ' → logprob: -10.876030921936035
    6. 'れ' → logprob: -11.001030921936035
    7. '``' → logprob: -11.501030921936035
    8. 'しい' → logprob: -11.751030921936035
    9. 'し' → logprob: -11.876030921936035
    10. '   ' → logprob: -12.126030921936035

Token 683: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0022455346770584583
    2. '                       ' → logprob: -6.5022454261779785
    3. '               ' → logprob: -7.6272454261779785
    4. 'forget' → logprob: -9.127245903015137
    5. 'borrow' → logprob: -9.252245903015137
    6. '           ' → logprob: -11.002245903015137
    7. '                    ' → logprob: -11.377245903015137
    8. '                     ' → logprob: -12.127245903015137
    9. '       ' → logprob: -12.252245903015137
    10. '                  ' → logprob: -13.127245903015137

Token 684: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009369274601340294
    2. 'borrow' → logprob: -5.509369373321533
    3. '                       ' → logprob: -5.884369373321533
    4. '               ' → logprob: -6.134369373321533
    5. ' borrow' → logprob: -8.884368896484375
    6. 'forget' → logprob: -9.634368896484375
    7. '           ' → logprob: -10.384368896484375
    8. '                    ' → logprob: -11.134368896484375
    9. '                     ' → logprob: -11.259368896484375
    10. '```' → logprob: -11.759368896484375

Token 685: ' C' (ID: 363)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.6582339406013489
    2. 'C' (adapté à ' C') → logprob: -0.7832339406013489
    3. '                   ' → logprob: -4.158234119415283
    4. 'forget' → logprob: -5.033234119415283
    5. '               ' → logprob: -6.408234119415283
    6. '                       ' → logprob: -8.033233642578125
    7. '   ' → logprob: -8.783233642578125
    8. ' C' → logprob: -9.158233642578125
    9. ' borrow' → logprob: -9.408233642578125
    10. 'for' → logprob: -9.408233642578125

Token 686: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.250001907348633
    3. ' [' → logprob: -15.250001907348633
    4. 'i' → logprob: -16.125001907348633
    5. '[
' → logprob: -17.375001907348633
    6. '[I' → logprob: -17.375001907348633
    7. '=' → logprob: -17.750001907348633
    8. ',i' → logprob: -18.125001907348633
    9. '```' → logprob: -18.125001907348633
    10. ' =' → logprob: -18.125001907348633

Token 687: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024495843797922134
    2. ']=' → logprob: -4.024496078491211
    3. '=' → logprob: -5.149496078491211
    4. ' =' → logprob: -7.899496078491211
    5. ' ]' → logprob: -8.899496078491211
    6. ']+=' → logprob: -12.524496078491211
    7. ']=(' → logprob: -12.774496078491211
    8. ')' → logprob: -12.899496078491211
    9. '[' → logprob: -13.774496078491211
    10. ']=-' → logprob: -14.274496078491211

Token 688: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815052703022957
    2. ' =' → logprob: -4.018150329589844
    3. '＝' → logprob: -14.518150329589844
    4. '=A' → logprob: -16.393150329589844
    5. '.=' → logprob: -18.143150329589844
    6. '+=' → logprob: -18.393150329589844
    7. '   ' → logprob: -18.393150329589844
    8. '=i' → logprob: -18.518150329589844
    9. '=C' → logprob: -18.643150329589844
    10. '=
' → logprob: -18.768150329589844

Token 689: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0004565327544696629
    2. '10' → logprob: -8.375456809997559
    3. '(A' → logprob: -8.750456809997559
    4. '(' → logprob: -9.875456809997559
    5. 'C' → logprob: -12.000456809997559
    6. ' A' → logprob: -12.625456809997559
    7. '9' → logprob: -13.500456809997559
    8. 'self' → logprob: -13.750456809997559
    9. '((' → logprob: -14.250456809997559
    10. '11' → logprob: -14.375456809997559

Token 690: '10' (ID: 702)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0030048040207475424
    2. '10' → logprob: -6.503005027770996
    3. '(' → logprob: -7.003005027770996
    4. '(A' → logprob: -7.503005027770996
    5. '9' → logprob: -10.753005027770996
    6. '((' → logprob: -12.003005027770996
    7. 'self' → logprob: -12.378005027770996
    8. '0' → logprob: -13.253005027770996
    9. ' A' → logprob: -13.378005027770996
    10. 'C' → logprob: -13.503005027770996

Token 691: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2727842628955841
    2. ' +' → logprob: -1.5227842330932617
    3. '-' → logprob: -4.272784233093262
    4. ' -' → logprob: -5.022784233093262
    5. '               ' → logprob: -11.522784233093262
    6. '＋' → logprob: -11.647784233093262
    7. '                   ' → logprob: -11.647784233093262
    8. '+C' → logprob: -11.647784233093262
    9. '                ' → logprob: -11.772784233093262
    10. '*' → logprob: -11.772784233093262

Token 692: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.816093228830141e-06
    2. ' A' → logprob: -13.00000286102295
    3. '(A' → logprob: -14.75000286102295
    4. 'Ａ' → logprob: -16.375001907348633
    5. '	A' → logprob: -16.750001907348633
    6. '_A' → logprob: -17.875001907348633
    7. '`' → logprob: -19.375001907348633
    8. '(' → logprob: -19.625001907348633
    9. '   ' → logprob: -19.625001907348633
    10. 'А' → logprob: -19.750001907348633

Token 693: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0006575119914487004
    2. '_i' → logprob: -7.375657558441162
    3. 'sub' → logprob: -10.625657081604004
    4. '_' → logprob: -13.625657081604004
    5. '[i' → logprob: -13.625657081604004
    6. 'Sub' → logprob: -13.875657081604004
    7. '_s' → logprob: -14.000657081604004
    8. 'i' → logprob: -14.125657081604004
    9. '	sub' → logprob: -14.625657081604004
    10. '_SUB' → logprob: -14.875657081604004

Token 694: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12693366408348083
    2. '-' → logprob: -2.1269335746765137
    3. '-B' → logprob: -12.751934051513672
    4. ' ' → logprob: -13.501934051513672
    5. '```' → logprob: -15.001934051513672
    6. '-b' → logprob: -15.376934051513672
    7. '           ' → logprob: -15.501934051513672
    8. '   ' → logprob: -15.876934051513672
    9. '               ' → logprob: -16.501934051513672
    10. '                   ' → logprob: -16.751934051513672

Token 695: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00012356207298580557
    2. ' B' → logprob: -9.000123977661133
    3. '	B' → logprob: -17.500123977661133
    4. '   ' → logprob: -17.875123977661133
    5. '           ' → logprob: -18.625123977661133
    6. '>B' → logprob: -19.125123977661133
    7. '       ' → logprob: -19.500123977661133
    8. '                   ' → logprob: -19.500123977661133
    9. '               ' → logprob: -19.500123977661133
    10. 'Ｂ' → logprob: -19.500123977661133

Token 696: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0004889304982498288
    2. '[i' → logprob: -7.625488758087158
    3. 'i' → logprob: -13.875489234924316
    4. '[' → logprob: -18.12548828125
    5. '```' → logprob: -18.75048828125
    6. '{i' → logprob: -19.12548828125
    7. '	i' → logprob: -19.25048828125
    8. ',i' → logprob: -19.50048828125
    9. '   ' → logprob: -19.75048828125
    10. '(i' → logprob: -20.25048828125

Token 697: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010007746750488877
    2. '               ' → logprob: -7.251000881195068
    3. '
' → logprob: -9.25100040435791
    4. '<|end|>' → logprob: -9.50100040435791
    5. '           ' → logprob: -9.75100040435791
    6. '                    
' → logprob: -11.25100040435791
    7. ',' → logprob: -11.62600040435791
    8. '       ' → logprob: -11.87600040435791
    9. '   ' → logprob: -12.00100040435791
    10. '                       ' → logprob: -12.12600040435791

Token 698: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05793430656194687
    2. '
' → logprob: -3.557934284210205
    3. '                    
' → logprob: -3.932934284210205
    4. '               ' → logprob: -5.557934284210205
    5. '                
' → logprob: -6.932934284210205
    6. '    
' → logprob: -7.432934284210205
    7. '           ' → logprob: -7.807934284210205
    8. ' 
' → logprob: -7.932934284210205
    9. '       ' → logprob: -8.182934761047363
    10. '\n' → logprob: -8.307934761047363

Token 699: ' borrow' (ID: 23960)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4071200489997864
    2. 'forget' → logprob: -1.1571199893951416
    3. 'borrow' (adapté à ' borrow') → logprob: -4.157120227813721
    4. '               ' → logprob: -5.907120227813721
    5. 'for' → logprob: -7.032120227813721
    6. ' forget' → logprob: -8.032119750976562
    7. '   ' → logprob: -8.907119750976562
    8. '                    ' → logprob: -9.657119750976562
    9. '           ' → logprob: -9.657119750976562
    10. '                       ' → logprob: -10.032119750976562

Token 700: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4987974029500037e-05
    2. 'i' → logprob: -11.000024795532227
    3. '[' → logprob: -11.875024795532227
    4. ' [' → logprob: -14.750024795532227
    5. '   ' → logprob: -14.875024795532227
    6. '```' → logprob: -15.625024795532227
    7. '.append' → logprob: -16.625024795532227
    8. ' i' → logprob: -16.625024795532227
    9. '[j' → logprob: -18.375024795532227
    10. '[index' → logprob: -18.375024795532227

Token 701: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.65101717156358e-05
    2. '[' → logprob: -9.875096321105957
    3. '1' → logprob: -11.125096321105957
    4. '[i' → logprob: -12.000096321105957
    5. ']' → logprob: -12.125096321105957
    6. ' +' → logprob: -12.250096321105957
    7. ']+=' → logprob: -13.125096321105957
    8. '＋' → logprob: -13.250096321105957
    9. '+]' → logprob: -13.375096321105957
    10. '+[' → logprob: -13.625096321105957

Token 702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '0' → logprob: -13.87500286102295
    3. ' ' → logprob: -14.37500286102295
    4. '```' → logprob: -14.50000286102295
    5. '+' → logprob: -16.250001907348633
    6. '
' → logprob: -16.687501907348633
    7. '   ' → logprob: -17.125001907348633
    8. '１' → logprob: -17.187501907348633
    9. '`' → logprob: -17.750001907348633
    10. '``' → logprob: -18.562501907348633

Token 703: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004207444377243519
    2. ' =' → logprob: -6.004207611083984
    3. ']=' → logprob: -6.754207611083984
    4. ']' → logprob: -7.504207611083984
    5. ']+=' → logprob: -12.004207611083984
    6. '+=' → logprob: -12.629207611083984
    7. '0' → logprob: -13.504207611083984
    8. ' +=' → logprob: -14.504207611083984
    9. ')=' → logprob: -15.004207611083984
    10. '+' → logprob: -15.254207611083984

Token 704: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.633853652398102e-05
    2. ' =' → logprob: -9.875056266784668
    3. '+=' → logprob: -12.375056266784668
    4. '0' → logprob: -14.750056266784668
    5. ' +=' → logprob: -16.250057220458984
    6. '＝' → logprob: -17.250057220458984
    7. '=
' → logprob: -17.250057220458984
    8. '=False' → logprob: -19.000057220458984
    9. '==' → logprob: -19.500057220458984
    10. '.=' → logprob: -19.875057220458984

Token 705: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. 'forget' → logprob: -15.625001907348633
    4. '1' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.250001907348633
    6. 'borrow' → logprob: -17.250001907348633
    7. '۰' → logprob: -18.250001907348633
    8. '０' → logprob: -18.937501907348633
    9. '<|end|>' → logprob: -19.750001907348633
    10. '  ' → logprob: -20.000001907348633

Token 706: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '<|end|>' → logprob: -18.375
    4. '۰' → logprob: -19.125
    5. '０' → logprob: -19.5
    6. '   ' → logprob: -20.125
    7. 'forget' → logprob: -20.625
    8. '00' → logprob: -21.375
    9. '০' → logprob: -21.5
    10. '  ' → logprob: -21.8125

Token 707: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004691780544817448
    2. '
' → logprob: -6.0046916007995605
    3. '                    
' → logprob: -6.8796916007995605
    4. '				' → logprob: -7.2546916007995605
    5. '               ' → logprob: -8.754692077636719
    6. '					
' → logprob: -9.629692077636719
    7. '                    ' → logprob: -10.129692077636719
    8. '	               ' → logprob: -10.379692077636719
    9. '<|end|>' → logprob: -10.504692077636719
    10. '                       ' → logprob: -11.254692077636719

Token 708: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00014656837447546422
    2. '				' → logprob: -9.500146865844727
    3. '               ' → logprob: -10.250146865844727
    4. '                       ' → logprob: -11.875146865844727
    5. '	               ' → logprob: -12.000146865844727
    6. '                    
' → logprob: -12.375146865844727
    7. '   ' → logprob: -12.625146865844727
    8. '                    ' → logprob: -12.625146865844727
    9. '           ' → logprob: -12.750146865844727
    10. '
' → logprob: -13.250146865844727

Token 709: ' forget' (ID: 13814)
  Prédit: 'forget'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forget' (adapté à ' forget') → logprob: -0.023472923785448074
    2. '                   ' → logprob: -3.773473024368286
    3. ' forget' → logprob: -8.898472785949707
    4. '               ' → logprob: -9.648472785949707
    5. '                       ' → logprob: -11.648472785949707
    6. 'for' → logprob: -11.648472785949707
    7. 'forgot' → logprob: -13.148472785949707
    8. '   ' → logprob: -13.273472785949707
    9. '                    ' → logprob: -13.398472785949707
    10. '           ' → logprob: -13.398472785949707

Token 710: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.128163257315464e-07
    2. 'count' → logprob: -16.5
    3. '_' → logprob: -17.875
    4. '\' → logprob: -18.0
    5. ' _' → logprob: -18.125
    6. '_counter' → logprob: -18.5
    7. '_counts' → logprob: -19.0
    8. '_co' → logprob: -19.125
    9. '_c' → logprob: -19.25
    10. '```' → logprob: -20.0

Token 711: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002477081725373864
    2. ' +=' → logprob: -6.002477169036865
    3. ']+=' → logprob: -13.752476692199707
    4. '=' → logprob: -15.752476692199707
    5. '+' → logprob: -16.877477645874023
    6. '+='' → logprob: -16.877477645874023
    7. '+=(' → logprob: -17.752477645874023
    8. '+="' → logprob: -18.002477645874023
    9. '   ' → logprob: -18.877477645874023
    10. '```' → logprob: -20.252477645874023

Token 712: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '１' → logprob: -18.0
    4. '```' → logprob: -20.125
    5. '   ' → logprob: -20.5
    6. '۱' → logprob: -22.125
    7. '10' → logprob: -22.9375
    8. '  ' → logprob: -23.125
    9. '﻿' → logprob: -23.1875
    10. '१' → logprob: -23.375

Token 713: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '１' → logprob: -17.375
    4. '```' → logprob: -19.875
    5. '   ' → logprob: -20.75
    6. '10' → logprob: -21.5625
    7. '۱' → logprob: -21.6875
    8. '0' → logprob: -22.3125
    9. '2' → logprob: -22.5
    10. '१' → logprob: -22.6875

Token 714: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002150261774659157
    2. 'else' → logprob: -6.627150058746338
    3. ' else' → logprob: -7.377150058746338
    4. '           ' → logprob: -9.502150535583496
    5. '<|end|>' → logprob: -9.752150535583496
    6. ')' → logprob: -11.002150535583496
    7. 'elif' → logprob: -11.002150535583496
    8. '                   ' → logprob: -11.377150535583496
    9. '
' → logprob: -12.252150535583496
    10. '              ' → logprob: -13.252150535583496

Token 715: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004267428594175726
    2. 'else' → logprob: -8.000426292419434
    3. ' else' → logprob: -9.500426292419434
    4. '                   ' → logprob: -12.125426292419434
    5. '```' → logprob: -12.375426292419434
    6. '			' → logprob: -13.000426292419434
    7. '           ' → logprob: -13.375426292419434
    8. '	           ' → logprob: -14.750426292419434
    9. '		       ' → logprob: -14.750426292419434
    10. '	else' → logprob: -15.125426292419434

Token 716: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4906511604785919
    2. '               ' → logprob: -0.9906511306762695
    3. ' else' → logprob: -4.1156511306762695
    4. '           ' → logprob: -9.11565113067627
    5. '   ' → logprob: -12.99065113067627
    6. '
' → logprob: -13.11565113067627
    7. '              ' → logprob: -13.11565113067627
    8. '             ' → logprob: -13.74065113067627
    9. '	else' → logprob: -13.99065113067627
    10. '       ' → logprob: -13.99065113067627

Token 717: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16519714891910553
    2. ':' → logprob: -2.0401971340179443
    3. '                   ' → logprob: -3.9151971340179443
    4. '               ' → logprob: -6.290197372436523
    5. 'borrow' → logprob: -8.165197372436523
    6. '           ' → logprob: -9.165197372436523
    7. '{
' → logprob: -10.790197372436523
    8. '```' → logprob: -11.415197372436523
    9. '):
' → logprob: -11.915197372436523
    10. ':
' → logprob: -11.915197372436523

Token 718: '                   ' (ID: 699)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.018021518364548683
    2. '                   ' → logprob: -4.143021583557129
    3. '               ' → logprob: -6.268021583557129
    4. ' borrow' → logprob: -9.643021583557129
    5. '           ' → logprob: -11.643021583557129
    6. 'bor' → logprob: -11.893021583557129
    7. '   ' → logprob: -12.893021583557129
    8. '                       ' → logprob: -14.018021583557129
    9. '                  ' → logprob: -14.018021583557129
    10. '                 ' → logprob: -14.018021583557129

Token 719: ' C' (ID: 363)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'borrow' → logprob: -0.0008545245509594679
    2. ' borrow' → logprob: -7.2508544921875
    3. '                   ' → logprob: -9.2508544921875
    4. '               ' → logprob: -10.0008544921875
    5. 'bor' → logprob: -13.5008544921875
    6. '           ' → logprob: -14.5008544921875
    7. '   ' → logprob: -15.1258544921875
    8. ' ' → logprob: -15.2508544921875
    9. '.borrow' → logprob: -15.5008544921875
    10. '       ' → logprob: -16.2508544921875

Token 720: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0564331205387134e-05
    2. '[' → logprob: -12.62501049041748
    3. ' [' → logprob: -12.87501049041748
    4. 'i' → logprob: -13.12501049041748
    5. '=' → logprob: -14.50001049041748
    6. '           ' → logprob: -15.00001049041748
    7. '   ' → logprob: -15.00001049041748
    8. ' =' → logprob: -15.12501049041748
    9. '```' → logprob: -15.25001049041748
    10. '
' → logprob: -15.50001049041748

Token 721: ']' (ID: 60)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016044458374381065
    2. ' =' → logprob: -4.141044616699219
    3. '   ' → logprob: -11.891044616699219
    4. '[' → logprob: -13.391044616699219
    5. '=
' → logprob: -14.641044616699219
    6. '＝' → logprob: -15.016044616699219
    7. ']' → logprob: -15.266044616699219
    8. ' ' → logprob: -16.14104461669922
    9. '           ' → logprob: -16.14104461669922
    10. ')' → logprob: -16.76604461669922

Token 723: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012284684635233134
    2. ' ' → logprob: -9.875123023986816
    3. '(' → logprob: -10.125123023986816
    4. 'A' → logprob: -10.500123023986816
    5. '(A' → logprob: -13.250123023986816
    6. '   ' → logprob: -13.875123023986816
    7. ' (' → logprob: -15.125123023986816
    8. '1' → logprob: -15.375123023986816
    9. ' A' → logprob: -15.750123023986816
    10. '  ' → logprob: -16.1251220703125

Token 724: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -13.125003814697266
    3. 'A' → logprob: -13.625003814697266
    4. ' ' → logprob: -14.750003814697266
    5. '(A' → logprob: -16.500003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '
' → logprob: -18.375003814697266
    8. '```' → logprob: -19.125003814697266
    9. '１０' → logprob: -19.375003814697266
    10. '1' → logprob: -19.375003814697266

Token 725: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3218608498573303
    2. '-' → logprob: -1.3218607902526855
    3. ' +' → logprob: -5.1968607902526855
    4. '+' → logprob: -5.8218607902526855
    5. ' ' → logprob: -10.446861267089844
    6. '-A' → logprob: -10.821861267089844
    7. '+A' → logprob: -11.946861267089844
    8. '   ' → logprob: -12.571861267089844
    9. 'A' → logprob: -13.821861267089844
    10. '  ' → logprob: -14.071861267089844

Token 726: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.288163083605468e-05
    2. ' A' → logprob: -9.875052452087402
    3. '   ' → logprob: -13.875052452087402
    4. '           ' → logprob: -15.250052452087402
    5. ' ' → logprob: -17.25005340576172
    6. '  ' → logprob: -17.25005340576172
    7. '       ' → logprob: -17.50005340576172
    8. '         ' → logprob: -17.62505340576172
    9. '	A' → logprob: -17.87505340576172
    10. 'Ａ' → logprob: -17.87505340576172

Token 727: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.5451681974809617e-05
    2. 'sub' → logprob: -11.500015258789062
    3. '_i' → logprob: -12.375015258789062
    4. 'Sub' → logprob: -15.250015258789062
    5. '_s' → logprob: -15.500015258789062
    6. '[i' → logprob: -15.875015258789062
    7. '{sub' → logprob: -16.375015258789062
    8. '   ' → logprob: -16.625015258789062
    9. '_SUB' → logprob: -16.625015258789062
    10. '	sub' → logprob: -16.875015258789062

Token 728: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2528321146965027
    2. '-' → logprob: -1.5028321743011475
    3. '                   ' → logprob: -8.502832412719727
    4. '   ' → logprob: -8.502832412719727
    5. ' ' → logprob: -9.002832412719727
    6. '           ' → logprob: -9.002832412719727
    7. '               ' → logprob: -9.752832412719727
    8. '       ' → logprob: -10.252832412719727
    9. '```' → logprob: -10.627832412719727
    10. '         ' → logprob: -11.377832412719727

Token 729: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -9.722539834911004e-05
    2. ' B' → logprob: -9.250097274780273
    3. '   ' → logprob: -15.000097274780273
    4. '                   ' → logprob: -15.375097274780273
    5. '               ' → logprob: -15.750097274780273
    6. '           ' → logprob: -15.875097274780273
    7. '	B' → logprob: -16.500097274780273
    8. '       ' → logprob: -17.125097274780273
    9. ' ' → logprob: -17.250097274780273
    10. '10' → logprob: -17.625097274780273

Token 730: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00011045700375689194
    2. 'i' → logprob: -9.375110626220703
    3. 'B' → logprob: -10.625110626220703
    4. '[i' → logprob: -14.125110626220703
    5. '```' → logprob: -15.125110626220703
    6. '_' → logprob: -15.750110626220703
    7. ',i' → logprob: -16.875110626220703
    8. '10' → logprob: -17.500110626220703
    9. '1' → logprob: -17.625110626220703
    10. '	i' → logprob: -17.750110626220703

Token 731: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017268415540456772
    2. 'borrow' → logprob: -4.267268180847168
    3. '               ' → logprob: -5.892268180847168
    4. '
' → logprob: -9.017268180847168
    5. '           ' → logprob: -9.267268180847168
    6. '```' → logprob: -9.642268180847168
    7. '                  ' → logprob: -11.517268180847168
    8. ',' → logprob: -12.017268180847168
    9. ' borrow' → logprob: -12.142268180847168
    10. '   ' → logprob: -12.267268180847168

Token 732: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015489649958908558
    2. '               ' → logprob: -4.26548957824707
    3. '           ' → logprob: -7.39048957824707
    4. 'borrow' → logprob: -7.51548957824707
    5. '```' → logprob: -9.26548957824707
    6. '   ' → logprob: -10.39048957824707
    7. '       ' → logprob: -11.01548957824707
    8. 'b' → logprob: -12.39048957824707
    9. 'bor' → logprob: -12.51548957824707
    10. '                  ' → logprob: -13.01548957824707

Token 733: ' borrow' (ID: 23960)
  Prédit: 'borrow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'borrow' (adapté à ' borrow') → logprob: -2.7729658540920354e-05
    2. ' borrow' → logprob: -10.500027656555176
    3. '                   ' → logprob: -17.000028610229492
    4. '               ' → logprob: -17.375028610229492
    5. 'bor' → logprob: -17.500028610229492
    6. '1' → logprob: -17.625028610229492
    7. '.borrow' → logprob: -18.750028610229492
    8. '           ' → logprob: -19.500028610229492
    9. '借' → logprob: -20.375028610229492
    10. '```' → logprob: -20.375028610229492

Token 734: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. ' [' → logprob: -16.625
    4. 'i' → logprob: -17.25
    5. '```' → logprob: -17.625
    6. '\[' → logprob: -17.75
    7. '[I' → logprob: -18.375
    8. '[j' → logprob: -18.875
    9. '[
' → logprob: -19.25
    10. '   ' → logprob: -20.625

Token 735: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07400897145271301
    2. '+' → logprob: -3.0740089416503906
    3. '[' → logprob: -3.6990089416503906
    4. ' [' → logprob: -8.82400894165039
    5. '[next' → logprob: -9.82400894165039
    6. '][' → logprob: -10.19900894165039
    7. '```' → logprob: -10.82400894165039
    8. '+i' → logprob: -10.94900894165039
    9. '+[' → logprob: -11.32400894165039
    10. '   ' → logprob: -11.44900894165039

Token 736: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -13.625001907348633
    3. ' ' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.000001907348633
    5. '+' → logprob: -17.125001907348633
    6. '[' → logprob: -17.500001907348633
    7. '１' → logprob: -18.125001907348633
    8. '<|end|>' → logprob: -18.312501907348633
    9. '
' → logprob: -18.437501907348633
    10. '``' → logprob: -18.875001907348633

Token 737: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006716674659401178
    2. ' =' → logprob: -5.006716728210449
    3. ']=' → logprob: -14.25671672821045
    4. ']' → logprob: -14.38171672821045
    5. '＝' → logprob: -17.631715774536133
    6. '=
' → logprob: -18.631715774536133
    7. '   ' → logprob: -18.756715774536133
    8. ' ' → logprob: -19.256715774536133
    9. '=True' → logprob: -19.256715774536133
    10. ')' → logprob: -19.381715774536133

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.493430894101039e-05
    2. ' =' → logprob: -9.500075340270996
    3. '＝' → logprob: -17.75007438659668
    4. '=
' → logprob: -20.37507438659668
    5. '=True' → logprob: -20.75007438659668
    6. '.=' → logprob: -21.62507438659668
    7. '+=' → logprob: -22.12507438659668
    8. '=

' → logprob: -22.50007438659668
    9. '=int' → logprob: -23.00007438659668
    10. '```' → logprob: -23.12507438659668

Token 739: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '１' → logprob: -19.5
    4. '   ' → logprob: -20.5
    5. '```' → logprob: -21.5
    6. '0' → logprob: -21.875
    7. '<|end|>' → logprob: -22.25
    8. '۱' → logprob: -22.625
    9. 's' → logprob: -23.5625
    10. '১' → logprob: -23.6875

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '１' → logprob: -20.25
    4. '   ' → logprob: -20.875
    5. '```' → logprob: -21.125
    6. '0' → logprob: -21.25
    7. '<|end|>' → logprob: -22.75
    8. '۱' → logprob: -22.75
    9. 's' → logprob: -22.9375
    10. '১' → logprob: -23.375

Token 741: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003047186473850161
    2. 'return' → logprob: -8.12530517578125
    3. '```' → logprob: -12.50030517578125
    4. ' return' → logprob: -13.62530517578125
    5. '
' → logprob: -13.75030517578125
    6. '        
' → logprob: -14.12530517578125
    7. '           ' → logprob: -14.37530517578125
    8. '<|end|>' → logprob: -14.75030517578125
    9. '      ' → logprob: -15.12530517578125
    10. '               ' → logprob: -15.25030517578125

Token 742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010545044642640278
    2. '<|end|>' → logprob: -9.625105857849121
    3. 'return' → logprob: -11.375105857849121
    4. '```' → logprob: -11.625105857849121
    5. '        
' → logprob: -12.125105857849121
    6. '           ' → logprob: -12.500105857849121
    7. ' return' → logprob: -12.625105857849121
    8. '               ' → logprob: -13.000105857849121
    9. '      ' → logprob: -13.875105857849121
    10. '   ' → logprob: -14.000105857849121

Token 743: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014599328860640526
    2. 'return' → logprob: -4.264599323272705
    3. ' return' → logprob: -7.889599323272705
    4. '   ' → logprob: -10.264599800109863
    5. '```' → logprob: -10.889599800109863
    6. '	return' → logprob: -13.139599800109863
    7. '        
' → logprob: -13.639599800109863
    8. '           ' → logprob: -13.889599800109863
    9. '
' → logprob: -14.014599800109863
    10. ')' → logprob: -14.764599800109863

Token 744: '_num' (ID: 9834)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519652247428894
    2. '=' → logprob: -1.5019652843475342
    3. '_value' → logprob: -10.876965522766113
    4. 'value' → logprob: -12.751965522766113
    5. '<|end|>' → logprob: -13.001965522766113
    6. ' ' → logprob: -13.126965522766113
    7. '.' → logprob: -13.376965522766113
    8. '=int' → logprob: -13.376965522766113
    9. ')' → logprob: -13.376965522766113
    10. ' value' → logprob: -13.876965522766113

Token 745: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3450525104999542
    2. ' =' → logprob: -1.3450524806976318
    3. 'ber' → logprob: -3.470052480697632
    4. 'er' → logprob: -8.970052719116211
    5. '＝' → logprob: -11.220052719116211
    6. '   ' → logprob: -11.845052719116211
    7. ' ' → logprob: -11.845052719116211
    8. 'bers' → logprob: -11.970052719116211
    9. '  ' → logprob: -12.845052719116211
    10. '=
' → logprob: -13.220052719116211

Token 746: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -3.8889261304575484e-06
    2. ' Digit' → logprob: -12.500003814697266
    3. 'Digital' → logprob: -16.000003814697266
    4. '   ' → logprob: -20.625003814697266
    5. 'digit' → logprob: -20.625003814697266
    6. 'Digits' → logprob: -20.750003814697266
    7. ' ' → logprob: -20.750003814697266
    8. 'Dig' → logprob: -21.875003814697266
    9. '_digit' → logprob: -22.000003814697266
    10. 'Decimal' → logprob: -22.000003814697266

Token 747: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.9361264946837764e-07
    2. 'number' → logprob: -16.375
    3. ' Number' → logprob: -17.75
    4. '[' → logprob: -18.875
    5. '(Number' → logprob: -19.625
    6. '_number' → logprob: -20.375
    7. '```' → logprob: -20.625
    8. 'Numbers' → logprob: -20.75
    9. '_Number' → logprob: -21.125
    10. 'Num' → logprob: -21.5

Token 748: '(' (ID: 7)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.3035224974155426
    2. '(' → logprob: -1.5535224676132202
    3. '([' → logprob: -3.1785225868225098
    4. '(int' → logprob: -5.55352258682251
    5. '(sum' → logprob: -6.17852258682251
    6. 'C' → logprob: -6.55352258682251
    7. '(
' → logprob: -7.05352258682251
    8. '0' → logprob: -8.303522109985352
    9. '(len' → logprob: -10.553522109985352
    10. 'sum' → logprob: -10.928522109985352

Token 749: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01468155812472105
    2. 'C' → logprob: -4.764681339263916
    3. 'sum' → logprob: -5.139681339263916
    4. 'int' → logprob: -8.639681816101074
    5. '
' → logprob: -13.139681816101074
    6. '[' → logprob: -13.264681816101074
    7. 'len' → logprob: -13.514681816101074
    8. ' ' → logprob: -13.764681816101074
    9. '[C' → logprob: -14.139681816101074
    10. ' sum' → logprob: -14.264681816101074

Token 750: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002214172709500417
    2. ',self' → logprob: -8.875221252441406
    3. ',len' → logprob: -10.250221252441406
    4. 'self' → logprob: -10.875221252441406
    5. ' ,' → logprob: -10.875221252441406
    6. ',
' → logprob: -12.500221252441406
    7. ',length' → logprob: -13.500221252441406
    8. '```' → logprob: -13.625221252441406
    9. ')' → logprob: -14.250221252441406
    10. ')
' → logprob: -15.125221252441406

Token 751: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0016363817267119884
    2. 'len' → logprob: -6.501636505126953
    3. ' self' → logprob: -9.126636505126953
    4. '       ' → logprob: -10.626636505126953
    5. ' len' → logprob: -14.376636505126953
    6. 'length' → logprob: -16.251636505126953
    7. '[self' → logprob: -16.376636505126953
    8. '	self' → logprob: -17.001636505126953
    9. '(self' → logprob: -17.126636505126953
    10. 'n' → logprob: -17.501636505126953

Token 752: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0014207109343260527
    2. 'n' → logprob: -6.751420497894287
    3. 'self' → logprob: -8.501420974731445
    4. '_n' → logprob: -10.251420974731445
    5. '       ' → logprob: -11.876420974731445
    6. '<n' → logprob: -14.001420974731445
    7. '```' → logprob: -14.376420974731445
    8. 'len' → logprob: -14.751420974731445
    9. '=n' → logprob: -14.876420974731445
    10. '[self' → logprob: -15.126420974731445

Token 753: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.020651664584875107
    2. ')' → logprob: -3.8956515789031982
    3. '       ' → logprob: -9.645651817321777
    4. ')
' → logprob: -10.270651817321777
    5. ',' → logprob: -12.395651817321777
    6. '   ' → logprob: -12.520651817321777
    7. ' )
' → logprob: -13.520651817321777
    8. ')

' → logprob: -14.895651817321777
    9. ')`
' → logprob: -15.645651817321777
    10. ' ' → logprob: -16.27065086364746

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00341903162188828
    2. 'for' → logprob: -5.878418922424316
    3. ' for' → logprob: -7.503418922424316
    4. 'result' → logprob: -10.003418922424316
    5. '   ' → logprob: -11.753418922424316
    6. '```' → logprob: -12.503418922424316
    7. '<|end|>' → logprob: -12.878418922424316
    8. ' result' → logprob: -13.253418922424316
    9. '	for' → logprob: -14.503418922424316
    10. ')' → logprob: -15.128418922424316

Token 755: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0012692819582298398
    2. '       ' → logprob: -7.251269340515137
    3. ' for' → logprob: -7.501269340515137
    4. 'result' → logprob: -12.126269340515137
    5. '	for' → logprob: -14.001269340515137
    6. '   ' → logprob: -15.126269340515137
    7. '```' → logprob: -15.376269340515137
    8. ' result' → logprob: -19.37626838684082
    9. 'return' → logprob: -19.87626838684082
    10. '``' → logprob: -20.00126838684082

Token 756: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.676292231422849e-05
    2. ' i' → logprob: -11.000017166137695
    3. '```' → logprob: -19.375017166137695
    4. '	i' → logprob: -19.625017166137695
    5. 'idx' → logprob: -20.000017166137695
    6. 'index' → logprob: -20.125017166137695
    7. '_i' → logprob: -20.250017166137695
    8. 'j' → logprob: -20.625017166137695
    9. '   ' → logprob: -21.500017166137695
    10. '`' → logprob: -22.625017166137695

Token 757: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04303732514381409
    2. 'in' → logprob: -3.1680374145507812
    3. '	in' → logprob: -10.543037414550781
    4. ' ' → logprob: -12.793037414550781
    5. 'range' → logprob: -12.918037414550781
    6. '0' → logprob: -13.543037414550781
    7. ' i' → logprob: -13.668037414550781
    8. 'i' → logprob: -13.918037414550781
    9. '  ' → logprob: -14.543037414550781
    10. ',' → logprob: -14.543037414550781

Token 758: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010331686353310943
    2. ' range' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.626032829284668
    4. '	range' → logprob: -16.876033782958984
    5. ' ' → logprob: -17.251033782958984
    6. '  ' → logprob: -17.751033782958984
    7. '(range' → logprob: -17.876033782958984
    8. '```' → logprob: -18.126033782958984
    9. 'r' → logprob: -19.001033782958984
    10. 're' → logprob: -19.126033782958984

Token 759: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006986026652157307
    2. '(self' → logprob: -5.006986141204834
    3. ' self' → logprob: -8.381985664367676
    4. '       ' → logprob: -11.006985664367676
    5. 'len' → logprob: -11.256985664367676
    6. '0' → logprob: -12.631985664367676
    7. '   ' → logprob: -12.631985664367676
    8. '(' → logprob: -13.381985664367676
    9. '(len' → logprob: -13.631985664367676
    10. '(n' → logprob: -14.256985664367676

Token 760: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0028223509434610605
    2. 'n' → logprob: -5.877822399139404
    3. '       ' → logprob: -12.252821922302246
    4. '   ' → logprob: -12.377821922302246
    5. '_n' → logprob: -12.377821922302246
    6. '<n' → logprob: -13.877821922302246
    7. ' n' → logprob: -14.002821922302246
    8. '	n' → logprob: -14.002821922302246
    9. 'len' → logprob: -14.627821922302246
    10. ',n' → logprob: -14.877821922302246

Token 761: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10035440325737
    2. '):' → logprob: -2.3503544330596924
    3. '):
' → logprob: -9.975354194641113
    4. '+' → logprob: -10.350354194641113
    5. '   ' → logprob: -10.475354194641113
    6. '       ' → logprob: -10.725354194641113
    7. ':' → logprob: -11.475354194641113
    8. ':
' → logprob: -12.725354194641113
    9. ' ):
' → logprob: -13.975354194641113
    10. ')' → logprob: -14.350354194641113

Token 762: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08612803369760513
    2. 'result' → logprob: -2.711127996444702
    3. ' result' → logprob: -4.336128234863281
    4. '   ' → logprob: -6.211128234863281
    5. '	result' → logprob: -8.461128234863281
    6. '[result' → logprob: -8.836128234863281
    7. '	' → logprob: -8.961128234863281
    8. '	   ' → logprob: -9.461128234863281
    9. '```' → logprob: -9.586128234863281
    10. '[' → logprob: -9.836128234863281

Token 763: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.003887130646035075
    2. '       ' → logprob: -5.753887176513672
    3. ' result' → logprob: -7.253887176513672
    4. '	result' → logprob: -13.878887176513672
    5. '[result' → logprob: -15.128887176513672
    6. '   ' → logprob: -15.878887176513672
    7. '```' → logprob: -16.628887176513672
    8. '=result' → logprob: -16.753887176513672
    9. ',result' → logprob: -17.128887176513672
    10. '(result' → logprob: -17.128887176513672

Token 764: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.01836649514734745
    2. 'C' → logprob: -5.26836633682251
    3. '_' → logprob: -5.89336633682251
    4. '[' → logprob: -6.26836633682251
    5. '[i' → logprob: -6.51836633682251
    6. 'num' → logprob: -6.76836633682251
    7. '   ' → logprob: -7.26836633682251
    8. '=' → logprob: -7.26836633682251
    9. ' =' → logprob: -7.26836633682251
    10. 'Num' → logprob: -7.39336633682251

Token 765: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003818725934252143
    2. '.__' → logprob: -5.628818511962891
    3. '[d' → logprob: -9.25381851196289
    4. '[' → logprob: -9.87881851196289
    5. '```' → logprob: -10.87881851196289
    6. '.[' → logprob: -11.37881851196289
    7. '[to' → logprob: -11.37881851196289
    8. '[
' → logprob: -12.00381851196289
    9. 'to' → logprob: -12.25381851196289
    10. '.' → logprob: -12.75381851196289

Token 766: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2534058690071106
    2. '=' → logprob: -1.7534058094024658
    3. ']=' → logprob: -3.003405809402466
    4. ' =' → logprob: -7.503406047821045
    5. ' ]' → logprob: -7.628406047821045
    6. ')=' → logprob: -12.753405570983887
    7. ']+=' → logprob: -12.878405570983887
    8. ')' → logprob: -13.128405570983887
    9. 's' → logprob: -15.628405570983887
    10. '=C' → logprob: -16.003406524658203

Token 767: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 768: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.6240566083070007e-06
    2. ' C' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.125001907348633
    4. 'c' → logprob: -19.250001907348633
    5. '	C' → logprob: -20.625001907348633
    6. '       ' → logprob: -21.750001907348633
    7. '           ' → logprob: -22.125001907348633
    8. '
' → logprob: -22.750001907348633
    9. '(C' → logprob: -22.750001907348633
    10. '0' → logprob: -22.875001907348633

Token 769: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.5
    3. '[
' → logprob: -18.5
    4. '[' → logprob: -19.125
    5. ' [' → logprob: -19.375
    6. '```' → logprob: -19.875
    7. '[I' → logprob: -20.125
    8. '{i' → logprob: -20.25
    9. '(i' → logprob: -20.375
    10. ' i' → logprob: -20.75

Token 770: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017644320614635944
    2. ' return' → logprob: -6.751764297485352
    3. 'return' → logprob: -7.626764297485352
    4. '   ' → logprob: -10.001764297485352
    5. '```' → logprob: -11.376764297485352
    6. '	' → logprob: -11.751764297485352
    7. '<|end|>' → logprob: -11.751764297485352
    8. '        ' → logprob: -11.876764297485352
    9. '        
' → logprob: -12.251764297485352
    10. '      ' → logprob: -12.751764297485352

Token 772: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3895086944103241
    2. 'return' (adapté à ' return') → logprob: -1.1395087242126465
    3. ' return' → logprob: -6.1395087242126465
    4. '	return' → logprob: -9.014508247375488
    5. '```' → logprob: -9.014508247375488
    6. 'result' → logprob: -9.264508247375488
    7. '   ' → logprob: -9.639508247375488
    8. '	' → logprob: -9.889508247375488
    9. '
' → logprob: -11.514508247375488
    10. '        
' → logprob: -13.014508247375488

Token 773: ' result' (ID: 1534)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 774: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00015741224342491478
    2. '._' → logprob: -9.125157356262207
    3. '_.' → logprob: -10.500157356262207
    4. '_' → logprob: -11.250157356262207
    5. ' _' → logprob: -13.375157356262207
    6. '_val' → logprob: -13.375157356262207
    7. '.' → logprob: -14.000157356262207
    8. '_result' → logprob: -14.375157356262207
    9. '```' → logprob: -14.500157356262207
    10. '_to' → logprob: -14.625157356262207

Token 775: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -2.3795937522663735e-05
    2. 'to' → logprob: -10.87502384185791
    3. '.' → logprob: -12.37502384185791
    4. ' .' → logprob: -15.00002384185791
    5. ' to' → logprob: -16.000022888183594
    6. '_to' → logprob: -16.250022888183594
    7. 'To' → logprob: -17.125022888183594
    8. '.To' → logprob: -18.375022888183594
    9. '	to' → logprob: -19.125022888183594
    10. '```' → logprob: -19.500022888183594

Token 776: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00033558503491804004
    2. 'int' → logprob: -8.000335693359375
    3. 'to' → logprob: -17.000335693359375
    4. 'Int' → logprob: -17.500335693359375
    5. '<int' → logprob: -17.875335693359375
    6. ' int' → logprob: -18.125335693359375
    7. '_in' → logprob: -18.250335693359375
    8. '```' → logprob: -19.125335693359375
    9. 'nt' → logprob: -19.875335693359375
    10. '_INT' → logprob: -20.250335693359375

Token 777: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 778: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 779: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.006638752296566963
    2. ' max' → logprob: -6.381638526916504
    3. ' solve' → logprob: -6.506638526916504
    4. ' run' → logprob: -6.631638526916504
    5. ' simulate' → logprob: -6.881638526916504
    6. 'main' → logprob: -7.881638526916504
    7. ' test' → logprob: -8.006638526916504
    8. ' example' → logprob: -9.131638526916504
    9. ' calculate' → logprob: -9.881638526916504
    10. 'max' → logprob: -10.131638526916504

Token 780: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0028114095330238342
    2. '():
' → logprob: -5.877811431884766
    3. '()' → logprob: -13.002811431884766
    4. '():
' → logprob: -13.127811431884766
    5. ' ():' → logprob: -13.377811431884766
    6. '():

' → logprob: -14.627811431884766
    7. '(' → logprob: -16.627811431884766
    8. '()>' → logprob: -17.252811431884766
    9. '().' → logprob: -17.502811431884766
    10. '()->' → logprob: -17.502811431884766

Token 781: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5385981202125549
    2. ' A' → logprob: -1.2885980606079102
    3. 'A' → logprob: -2.41359806060791
    4. ' import' → logprob: -3.28859806060791
    5. 'import' → logprob: -4.41359806060791
    6. '```' → logprob: -7.03859806060791
    7. ' n' → logprob: -8.28859806060791
    8. 'n' → logprob: -8.41359806060791
    9. ' a' → logprob: -9.03859806060791
    10. 'a' → logprob: -9.28859806060791

Token 782: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9941104650497437
    2. 'A' → logprob: -1.1191104650497437
    3. 'import' (adapté à ' import') → logprob: -1.4941104650497437
    4. ' import' → logprob: -2.869110584259033
    5. ' A' → logprob: -3.869110584259033
    6. 'a' → logprob: -7.244110584259033
    7. 'n' → logprob: -7.994110584259033
    8. '```' → logprob: -8.994110107421875
    9. ' n' → logprob: -10.869110107421875
    10. '#' → logprob: -10.869110107421875

Token 783: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.018151231110095978
    2. ' sys' → logprob: -4.01815128326416
    3. '=sys' → logprob: -14.39315128326416
    4. 'math' → logprob: -14.64315128326416
    5. '(sys' → logprob: -15.39315128326416
    6. '	sys' → logprob: -15.64315128326416
    7. 'random' → logprob: -16.893150329589844
    8. '```' → logprob: -18.643150329589844
    9. ' math' → logprob: -18.893150329589844
    10. 'io' → logprob: -19.518150329589844

Token 784: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05236901342868805
    2. 'input' → logprob: -3.3023691177368164
    3. ' input' → logprob: -4.302369117736816
    4. 'data' → logprob: -8.552369117736816
    5. '    
' → logprob: -9.052369117736816
    6. ' readline' → logprob: -9.302369117736816
    7. '	input' → logprob: -9.552369117736816
    8. ' lines' → logprob: -10.177369117736816
    9. '    ' → logprob: -10.427369117736816
    10. ' line' → logprob: -10.802369117736816

Token 785: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16385693848133087
    2. 'input' → logprob: -1.9138569831848145
    3. ' input' → logprob: -5.6638569831848145
    4. 'data' → logprob: -8.913856506347656
    5. '	input' → logprob: -12.038856506347656
    6. '_input' → logprob: -13.163856506347656
    7. 'def' → logprob: -13.163856506347656
    8. '```' → logprob: -13.288856506347656
    9. 'line' → logprob: -13.538856506347656
    10. 'for' → logprob: -13.913856506347656

Token 786: ' A' (ID: 355)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0037853471003472805
    2. '   ' → logprob: -6.003785133361816
    3. ' input' → logprob: -7.253785133361816
    4. 'data' → logprob: -7.753785133361816
    5. 'A' (adapté à ' A') → logprob: -9.003785133361816
    6. 'args' → logprob: -10.253785133361816
    7. 'lines' → logprob: -12.253785133361816
    8. 'inputs' → logprob: -12.878785133361816
    9. 'argv' → logprob: -13.753785133361816
    10. 'line' → logprob: -13.878785133361816

Token 787: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005083533469587564
    2. '=' → logprob: -8.625508308410645
    3. ',B' → logprob: -8.625508308410645
    4. ' ,' → logprob: -9.375508308410645
    5. ' =' → logprob: -10.000508308410645
    6. ',K' → logprob: -11.625508308410645
    7. ',A' → logprob: -13.375508308410645
    8. '   ' → logprob: -13.500508308410645
    9. ' ' → logprob: -13.500508308410645
    10. ',N' → logprob: -13.750508308410645

Token 788: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0485910028219223
    2. ' B' → logprob: -3.048590898513794
    3. ' ' → logprob: -12.798590660095215
    4. '   ' → logprob: -14.798590660095215
    5. '*' → logprob: -15.673590660095215
    6. '=' → logprob: -15.923590660095215
    7. ' =' → logprob: -16.04859161376953
    8. '  ' → logprob: -16.79859161376953
    9. '=B' → logprob: -17.29859161376953
    10. '    ' → logprob: -17.54859161376953

Token 789: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04363080486655235
    2. '=' → logprob: -3.168630838394165
    3. ' =' → logprob: -7.418630599975586
    4. ' ,' → logprob: -10.418630599975586
    5. ',B' → logprob: -14.793630599975586
    6. '   ' → logprob: -15.418630599975586
    7. ',K' → logprob: -15.543630599975586
    8. ',C' → logprob: -16.043630599975586
    9. ',Q' → logprob: -16.168630599975586
    10. '=sys' → logprob: -16.168630599975586

Token 790: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0015028368216007948
    2. ' K' → logprob: -6.501502990722656
    3. ' ' → logprob: -15.001502990722656
    4. 'C' → logprob: -16.126502990722656
    5. ',K' → logprob: -17.251502990722656
    6. ' =' → logprob: -19.376502990722656
    7. '*K' → logprob: -19.501502990722656
    8. 'k' → logprob: -19.751502990722656
    9. 'input' → logprob: -19.876502990722656
    10. '   ' → logprob: -20.001502990722656

Token 791: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018152983859181404
    2. ' =' → logprob: -4.018153190612793
    3. ',' → logprob: -13.143153190612793
    4. '=sys' → logprob: -14.518153190612793
    5. '＝' → logprob: -15.018153190612793
    6. '=input' → logprob: -15.643153190612793
    7. '=line' → logprob: -15.893153190612793
    8. ' ' → logprob: -17.893152236938477
    9. '=list' → logprob: -18.393152236938477
    10. ')=' → logprob: -18.393152236938477

Token 792: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -4.5491004129871726e-05
    2. ' map' → logprob: -10.000045776367188
    3. '(map' → logprob: -19.750045776367188
    4. '	map' → logprob: -20.375045776367188
    5. 'list' → logprob: -21.375045776367188
    6. 'sys' → logprob: -21.875045776367188
    7. '[' → logprob: -22.750045776367188
    8. 'm' → logprob: -23.000045776367188
    9. '.map' → logprob: -23.500045776367188
    10. '   ' → logprob: -23.750045776367188

Token 793: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.56102097814437e-05
    2. 'int' → logprob: -10.000045776367188
    3. ',int' → logprob: -16.875045776367188
    4. '(' → logprob: -17.000045776367188
    5. '=int' → logprob: -17.000045776367188
    6. ' int' → logprob: -17.500045776367188
    7. '<int' → logprob: -18.500045776367188
    8. '[int' → logprob: -18.625045776367188
    9. '(str' → logprob: -18.625045776367188
    10. '	int' → logprob: -18.750045776367188

Token 794: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.004292441997677088
    2. 'sys' → logprob: -6.3792924880981445
    3. ',' → logprob: -7.1292924880981445
    4. '   ' → logprob: -7.3792924880981445
    5. ')' → logprob: -8.004292488098145
    6. '=sys' → logprob: -8.129292488098145
    7. '(' → logprob: -8.379292488098145
    8. ' sys' → logprob: -8.629292488098145
    9. '	sys' → logprob: -9.879292488098145
    10. ' (' → logprob: -10.129292488098145

Token 795: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0007100477814674377
    2. ' sys' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.000709533691406
    4. '(sys' → logprob: -18.000709533691406
    5. '	sys' → logprob: -18.500709533691406
    6. '=sys' → logprob: -18.625709533691406
    7. 'input' → logprob: -18.750709533691406
    8. 'stdin' → logprob: -22.125709533691406
    9. 'system' → logprob: -22.750709533691406
    10. ' ' → logprob: -23.500709533691406

Token 796: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0023397314362227917
    2. '.argv' → logprob: -7.127339839935303
    3. 'stdin' → logprob: -7.127339839935303
    4. '.readline' → logprob: -8.252339363098145
    5. 'in' → logprob: -8.627339363098145
    6. '(stdin' → logprob: -8.877339363098145
    7. 'sys' → logprob: -9.877339363098145
    8. '=sys' → logprob: -10.752339363098145
    9. '(sys' → logprob: -10.877339363098145
    10. '.' → logprob: -11.377339363098145

Token 797: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0013826170470565557
    2. '.stdin' → logprob: -6.626382827758789
    3. '.read' → logprob: -10.626382827758789
    4. '.' → logprob: -10.751382827758789
    5. '().' → logprob: -11.876382827758789
    6. '.argv' → logprob: -13.251382827758789
    7. '.readlines' → logprob: -13.376382827758789
    8. ' readline' → logprob: -15.626382827758789
    9. '(stdin' → logprob: -15.626382827758789
    10. ' .' → logprob: -16.37638282775879

Token 798: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.967624019831419e-05
    2. '())' → logprob: -10.375060081481934
    3. '()' → logprob: -10.500060081481934
    4. '()[' → logprob: -14.625060081481934
    5. '(' → logprob: -16.125059127807617
    6. '.readline' → logprob: -16.375059127807617
    7. ' ().' → logprob: -18.000059127807617
    8. '()
' → logprob: -18.375059127807617
    9. '()]' → logprob: -18.375059127807617
    10. '();)' → logprob: -18.625059127807617

Token 799: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014961806125938892
    2. 'strip' → logprob: -4.2649617195129395
    3. 'read' → logprob: -7.2649617195129395
    4. 'rstrip' → logprob: -9.264962196350098
    5. '().' → logprob: -13.139962196350098
    6. ' split' → logprob: -13.639962196350098
    7. '.readline' → logprob: -15.639962196350098
    8. '(split' → logprob: -15.639962196350098
    9. ' strip' → logprob: -16.76496124267578
    10. 'spl' → logprob: -17.01496124267578

Token 800: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.016479458659887314
    2. '()' → logprob: -4.2664794921875
    3. ')' → logprob: -6.1414794921875
    4. '(' → logprob: -9.0164794921875
    5. '(','' → logprob: -10.7664794921875
    6. '())
' → logprob: -11.6414794921875
    7. '().' → logprob: -12.6414794921875
    8. '('' → logprob: -12.7664794921875
    9. '(),' → logprob: -13.2664794921875
    10. ' ())' → logprob: -14.5164794921875

Token 801: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012336932122707367
    2. 'sim' → logprob: -5.512336730957031
    3. ' sim' → logprob: -5.762336730957031
    4. ' simulator' → logprob: -6.012336730957031
    5. ' strategy' → logprob: -6.887336730957031
    6. 'strategy' → logprob: -7.512336730957031
    7. 's' → logprob: -7.887336730957031
    8. '
' → logprob: -8.387336730957031
    9. '    
' → logprob: -8.887336730957031
    10. '	s' → logprob: -9.887336730957031

Token 802: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' (adapté à ' strategy') → logprob: -0.012452199123799801
    2. 'sim' → logprob: -5.012452125549316
    3. ' strategy' → logprob: -5.637452125549316
    4. 'result' → logprob: -6.387452125549316
    5. '   ' → logprob: -7.887452125549316
    6. ' simulator' → logprob: -10.012452125549316
    7. 'simulation' → logprob: -10.637452125549316
    8. ' sim' → logprob: -11.512452125549316
    9. 'simulate' → logprob: -12.137452125549316
    10. 'strateg' → logprob: -12.137452125549316

Token 803: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141372084617615
    2. ' =' → logprob: -1.7014137506484985
    3. '＝' → logprob: -14.701414108276367
    4. '=
' → logprob: -17.326414108276367
    5. '=

' → logprob: -17.826414108276367
    6. ' ' → logprob: -17.951414108276367
    7. ':' → logprob: -18.826414108276367
    8. ')' → logprob: -18.826414108276367
    9. ' =
' → logprob: -19.201414108276367
    10. '   ' → logprob: -19.326414108276367

Token 804: ' Max' (ID: 10093)
  Prédit: 'Max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Max' → logprob: -1.0206720617134124e-05
    2. ' Max' → logprob: -11.50001049041748
    3. '	Max' → logprob: -19.000009536743164
    4. 'Maximum' → logprob: -21.000009536743164
    5. 'Min' → logprob: -21.500009536743164
    6. 'max' → logprob: -21.625009536743164
    7. '_Max' → logprob: -21.625009536743164
    8. '_max' → logprob: -24.875009536743164
    9. '(Max' → logprob: -24.875009536743164
    10. ' max' → logprob: -25.000009536743164

Token 805: 'imize' (ID: 16368)
  Prédit: 'imize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imize' → logprob: -4.7159857786027715e-05
    2. 'ize' → logprob: -10.500046730041504
    3. 'maximize' → logprob: -10.875046730041504
    4. 'm' → logprob: -15.625046730041504
    5. 'alyze' → logprob: -15.875046730041504
    6. 'itize' → logprob: -16.25004768371582
    7. 'imiz' → logprob: -16.87504768371582
    8. 'a' → logprob: -17.50004768371582
    9. 'imized' → logprob: -17.62504768371582
    10. 'im' → logprob: -17.87504768371582

Token 806: 'Result' (ID: 2769)
  Prédit: 'Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: 0.0
    2. 'result' → logprob: -18.25
    3. ' Result' → logprob: -19.75
    4. '	Result' → logprob: -20.0
    5. 'Results' → logprob: -21.375
    6. '_result' → logprob: -21.5
    7. '_Result' → logprob: -21.625
    8. '(Result' → logprob: -21.75
    9. 'Return' → logprob: -22.25
    10. 'Request' → logprob: -22.875

Token 807: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: 0.0
    2. 'Strateg' → logprob: -17.5
    3. '_strategy' → logprob: -18.875
    4. 'strategy' → logprob: -19.125
    5. ' strategy' → logprob: -20.375
    6. ' Strategy' → logprob: -21.0
    7. 'Forget' → logprob: -21.25
    8. 'Str' → logprob: -21.625
    9. 'Result' → logprob: -22.625
    10. 'Strategies' → logprob: -22.75

Token 808: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08564066886901855
    2. '()
' → logprob: -2.7106406688690186
    3. ')' → logprob: -5.085640907287598
    4. '   ' → logprob: -5.585640907287598
    5. '(sim' → logprob: -6.210640907287598
    6. '(
' → logprob: -6.585640907287598
    7. '
' → logprob: -6.960640907287598
    8. ')
' → logprob: -8.085640907287598
    9. '())' → logprob: -8.085640907287598
    10. '(B' → logprob: -8.460640907287598

Token 809: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13684792816638947
    2. 'sim' → logprob: -2.136847972869873
    3. ' sim' → logprob: -4.761847972869873
    4. ' simulator' → logprob: -6.761847972869873
    5. 's' → logprob: -9.011847496032715
    6. '(sim' → logprob: -11.261847496032715
    7. '	s' → logprob: -11.886847496032715
    8. 'simulate' → logprob: -12.011847496032715
    9. 'simulation' → logprob: -12.636847496032715
    10. ' simul' → logprob: -12.886847496032715

Token 810: ' sim' (ID: 1845)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' (adapté à ' sim') → logprob: -5.824579784530215e-05
    2. ' simulator' → logprob: -10.1250581741333
    3. ' sim' → logprob: -11.0000581741333
    4. 'simulation' → logprob: -13.8750581741333
    5. 'solver' → logprob: -16.125059127807617
    6. 'simulate' → logprob: -16.375059127807617
    7. 'Simulator' → logprob: -16.375059127807617
    8. 's' → logprob: -16.625059127807617
    9. '```' → logprob: -16.875059127807617
    10. 'result' → logprob: -17.125059127807617

Token 811: ' =' (ID: 314)
  Prédit: 'ulator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulator' → logprob: -0.02676987461745739
    2. ' =' → logprob: -3.9017698764801025
    3. 'ulate' → logprob: -5.401769638061523
    4. '=' → logprob: -6.401769638061523
    5. 'ul' → logprob: -10.401769638061523
    6. 'lator' → logprob: -13.151769638061523
    7. '   ' → logprob: -13.276769638061523
    8. '.py' → logprob: -13.776769638061523
    9. '.sim' → logprob: -14.026769638061523
    10. '(sim' → logprob: -14.401769638061523

Token 812: ' Borrow' (ID: 112685)
  Prédit: 'Borrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Borrow' → logprob: -0.004078639671206474
    2. ' Borrow' → logprob: -5.5040788650512695
    3. 'Bor' → logprob: -16.629077911376953
    4. 'B' → logprob: -16.754077911376953
    5. ' ' → logprob: -17.504077911376953
    6. '_B' → logprob: -18.504077911376953
    7. '	B' → logprob: -18.879077911376953
    8. 'borrow' → logprob: -19.129077911376953
    9. '   ' → logprob: -19.254077911376953
    10. 'Bear' → logprob: -19.629077911376953

Token 813: 'Forget' (ID: 126416)
  Prédit: 'Forget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Forget' → logprob: -6.704273118884885e-07
    2. 'Forgot' → logprob: -14.500000953674316
    3. 'forget' → logprob: -17.75
    4. 'Forg' → logprob: -17.875
    5. 'For' → logprob: -18.375
    6. ' Forget' → logprob: -19.0
    7. 'Fail' → logprob: -19.625
    8. 'Ignore' → logprob: -19.75
    9. ' forget' → logprob: -20.0
    10. 'Simulator' → logprob: -20.875

Token 814: 'Simulator' (ID: 120745)
  Prédit: 'Simulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Simulator' → logprob: -4.320199877838604e-07
    2. 'imulator' → logprob: -15.375
    3. ' Simulator' → logprob: -15.625
    4. 'ator' → logprob: -17.875
    5. 'Sim' → logprob: -18.125
    6. ' simulator' → logprob: -19.75
    7. 'ulator' → logprob: -20.0
    8. 'Strategy' → logprob: -21.0
    9. 'er' → logprob: -21.0
    10. 'Forget' → logprob: -21.125

Token 815: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.001957179047167301
    2. '(' → logprob: -6.251957416534424
    3. '(
' → logprob: -10.501956939697266
    4. '   ' → logprob: -14.751956939697266
    5. '(
' → logprob: -15.501956939697266
    6. '(B' → logprob: -15.876956939697266
    7. '((' → logprob: -16.001956939697266
    8. 'A' → logprob: -17.001956939697266
    9. ' (' → logprob: -17.001956939697266
    10. '(

' → logprob: -17.376956939697266

Token 816: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030066570616327226
    2. ',B' → logprob: -8.125300407409668
    3. ' ,' → logprob: -12.875300407409668
    4. '   ' → logprob: -13.500300407409668
    5. ',
' → logprob: -15.000300407409668
    6. 'B' → logprob: -15.000300407409668
    7. '<|end|>' → logprob: -17.750301361083984
    8. ',A' → logprob: -17.875301361083984
    9. ',b' → logprob: -18.125301361083984
    10. '=' → logprob: -18.125301361083984

Token 817: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0009115827269852161
    2. ' B' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.250911712646484
    4. ' ' → logprob: -20.250911712646484
    5. '	B' → logprob: -20.375911712646484
    6. '```' → logprob: -20.750911712646484
    7. '  ' → logprob: -20.875911712646484
    8. 'b' → logprob: -21.250911712646484
    9. '    ' → logprob: -21.375911712646484
    10. ')' → logprob: -22.000911712646484

Token 818: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.746380237629637e-05
    2. ',B' → logprob: -9.375097274780273
    3. ' ,' → logprob: -11.375097274780273
    4. ',
' → logprob: -14.750097274780273
    5. '   ' → logprob: -15.500097274780273
    6. 'B' → logprob: -15.875097274780273
    7. ',K' → logprob: -16.375097274780273
    8. ',b' → logprob: -16.500097274780273
    9. ')' → logprob: -17.125097274780273
    10. '```' → logprob: -17.375097274780273

Token 819: ' K' (ID: 658)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.029802445322275162
    2. 'K' → logprob: -3.5298025608062744
    3. ' B' → logprob: -9.904802322387695
    4. ' K' → logprob: -13.279802322387695
    5. '   ' → logprob: -15.654802322387695
    6. ' ' → logprob: -16.154802322387695
    7. 'C' → logprob: -17.904802322387695
    8. 'A' → logprob: -18.654802322387695
    9. 'b' → logprob: -18.779802322387695
    10. '  ' → logprob: -19.154802322387695

Token 820: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030712373554706573
    2. '   ' → logprob: -6.503071308135986
    3. ')' → logprob: -7.378071308135986
    4. '(strategy' → logprob: -7.628071308135986
    5. 'strategy' → logprob: -8.128070831298828
    6. ' strategy' → logprob: -9.628070831298828
    7. ',
' → logprob: -9.753070831298828
    8. ',str' → logprob: -10.878070831298828
    9. '(' → logprob: -12.378070831298828
    10. '.strategy' → logprob: -12.628070831298828

Token 821: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.005233763717114925
    2. ' strategy' → logprob: -5.2552337646484375
    3. '(strategy' → logprob: -18.880233764648438
    4. 'strateg' → logprob: -19.505233764648438
    5. '   ' → logprob: -20.630233764648438
    6. 'str' → logprob: -21.630233764648438
    7. 'strategie' → logprob: -22.130233764648438
    8. '_strategy' → logprob: -22.380233764648438
    9. '.strategy' → logprob: -22.755233764648438
    10. ')' → logprob: -23.630233764648438

Token 822: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15031372010707855
    2. ')' → logprob: -2.02531361579895
    3. '.sim' → logprob: -6.025313854217529
    4. '
' → logprob: -6.400313854217529
    5. '<|end|>' → logprob: -7.025313854217529
    6. '(sim' → logprob: -7.400313854217529
    7. ').' → logprob: -7.900313854217529
    8. ')
' → logprob: -8.025313377380371
    9. 'result' → logprob: -8.150313377380371
    10. '    
' → logprob: -8.400313377380371

Token 823: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31413787603378296
    2. '   ' → logprob: -1.3141379356384277
    3. 'result' → logprob: -7.189137935638428
    4. ' print' → logprob: -9.06413745880127
    5. '	print' → logprob: -12.56413745880127
    6. '```' → logprob: -13.68913745880127
    7. ' result' → logprob: -14.93913745880127
    8. 'answer' → logprob: -17.189138412475586
    9. '       ' → logprob: -17.314138412475586
    10. '	result' → logprob: -17.314138412475586

Token 824: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000913370808120817
    2. 'result' → logprob: -7.000913143157959
    3. ' print' → logprob: -13.500913619995117
    4. '   ' → logprob: -14.875913619995117
    5. 'res' → logprob: -16.250913619995117
    6. ' result' → logprob: -18.875913619995117
    7. '```' → logprob: -19.875913619995117
    8. 'answer' → logprob: -20.250913619995117
    9. '	print' → logprob: -20.875913619995117
    10. 'pr' → logprob: -20.875913619995117

Token 825: '(sim' (ID: 95789)
  Prédit: '(sim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sim' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.500003814697266
    3. 'sim' → logprob: -17.750003814697266
    4. '(sym' → logprob: -19.000003814697266
    5. '(
' → logprob: -20.000003814697266
    6. '_sim' → logprob: -20.875003814697266
    7. '(sm' → logprob: -21.250003814697266
    8. ' (' → logprob: -21.375003814697266
    9. '()' → logprob: -21.500003814697266
    10. '(sys' → logprob: -21.625003814697266

Token 826: '.sim' (ID: 58713)
  Prédit: '.sim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sim' → logprob: -2.7610454708337784e-05
    2. '.' → logprob: -10.750027656555176
    3. 'simulate' → logprob: -12.875027656555176
    4. ').' → logprob: -13.250027656555176
    5. '.s' → logprob: -14.750027656555176
    6. ' .' → logprob: -15.000027656555176
    7. ')' → logprob: -15.000027656555176
    8. '.run' → logprob: -15.625027656555176
    9. '.)' → logprob: -15.625027656555176
    10. '.calculate' → logprob: -16.00002670288086

Token 827: 'ulate' (ID: 10111)
  Prédit: 'ulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -3.2020991056924686e-05
    2. 'ate' → logprob: -10.375032424926758
    3. 'uate' → logprob: -15.375032424926758
    4. 'utate' → logprob: -15.875032424926758
    5. 'ul' → logprob: -16.375032424926758
    6. 'ute' → logprob: -16.500032424926758
    7. 'ilate' → logprob: -16.625032424926758
    8. 'late' → logprob: -16.875032424926758
    9. 'olate' → logprob: -17.375032424926758
    10. 'unate' → logprob: -17.750032424926758

Token 828: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006757998839020729
    2. '()' → logprob: -5.006758213043213
    3. ')' → logprob: -10.131757736206055
    4. '())
' → logprob: -13.506757736206055
    5. ' ())' → logprob: -14.381757736206055
    6. '()
' → logprob: -15.006757736206055
    7. '(' → logprob: -15.131757736206055
    8. '();)' → logprob: -15.756757736206055
    9. '()))' → logprob: -16.881757736206055
    10. '()]' → logprob: -17.381757736206055

Token 829: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013646474108099937
    2. '<|end|>' → logprob: -5.263646602630615
    3. ' if' → logprob: -5.513646602630615
    4. '#' → logprob: -6.138646602630615
    5. '```' → logprob: -6.638646602630615
    6. '
' → logprob: -8.138646125793457
    7. '_' → logprob: -8.888646125793457
    8. '<|end|>' → logprob: -9.013646125793457
    9. '__' → logprob: -9.388646125793457
    10. '\' → logprob: -9.638646125793457

Token 830: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.31340837478637695
    2. '__' → logprob: -1.313408374786377
    3. '_name' → logprob: -9.063407897949219
    4. '_' → logprob: -11.188407897949219
    5. 'name' → logprob: -11.563407897949219
    6. '___' → logprob: -12.813407897949219
    7. ' ' → logprob: -13.438407897949219
    8. ' name' → logprob: -13.813407897949219
    9. ' True' → logprob: -14.438407897949219
    10. ' "__' → logprob: -14.813407897949219

Token 831: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02405289001762867
    2. '==' → logprob: -4.39905309677124
    3. ' ==' → logprob: -4.52405309677124
    4. 'name' → logprob: -7.64905309677124
    5. '=="' → logprob: -9.524052619934082
    6. 'if' → logprob: -10.899052619934082
    7. '__.__' → logprob: -11.274052619934082
    8. '=='' → logprob: -11.399052619934082
    9. ' __' → logprob: -11.524052619934082
    10. '```' → logprob: -11.649052619934082

Token 832: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3306015716807451e-05
    2. '==' → logprob: -11.75001335144043
    3. '__.__' → logprob: -12.25001335144043
    4. '__.' → logprob: -15.25001335144043
    5. '=="' → logprob: -16.50001335144043
    6. '__
' → logprob: -16.87501335144043
    7. '____' → logprob: -16.87501335144043
    8. '___' → logprob: -17.50001335144043
    9. '__["' → logprob: -17.62501335144043
    10. ' ==' → logprob: -17.75001335144043

Token 833: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.35209012031555176
    2. '==' → logprob: -1.2270901203155518
    3. '=="' → logprob: -6.352089881896973
    4. ' ==' → logprob: -6.477089881896973
    5. '=='' → logprob: -8.352089881896973
    6. '===' → logprob: -10.102089881896973
    7. '=' → logprob: -10.227089881896973
    8. '__.__' → logprob: -10.977089881896973
    9. '[' → logprob: -12.602089881896973
    10. '_' → logprob: -12.727089881896973

Token 834: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04858953505754471
    2. ''' → logprob: -3.0485894680023193
    3. '__' → logprob: -13.548589706420898
    4. ' "__' → logprob: -14.173589706420898
    5. ' '__' → logprob: -17.1735897064209
    6. '"user' → logprob: -17.4235897064209
    7. '"class' → logprob: -18.1735897064209
    8. ''"' → logprob: -19.0485897064209
    9. '"name' → logprob: -19.0485897064209
    10. '   ' → logprob: -19.7985897064209

Token 835: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.621933451038785e-05
    2. '__' → logprob: -10.125056266784668
    3. '"' → logprob: -11.125056266784668
    4. 'name' → logprob: -13.750056266784668
    5. ' main' → logprob: -16.25005531311035
    6. ''' → logprob: -16.50005531311035
    7. '_main' → logprob: -16.50005531311035
    8. 'built' → logprob: -16.62505531311035
    9. '主' → logprob: -17.75005531311035
    10. ' "__' → logprob: -18.62505531311035

Token 836: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.12754394114017487
    2. '__' → logprob: -2.1275439262390137
    3. '__':
' → logprob: -7.502543926239014
    4. '__["' → logprob: -10.252544403076172
    5. '__.' → logprob: -10.877544403076172
    6. '__.__' → logprob: -12.127544403076172
    7. '["' → logprob: -13.752544403076172
    8. '__
' → logprob: -14.252544403076172
    9. '__
' → logprob: -14.252544403076172
    10. '__[' → logprob: -14.377544403076172

Token 837: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0662340372800827
    2. ''' → logprob: -2.8162341117858887
    3. '__' → logprob: -5.691234111785889
    4. 'main' → logprob: -7.191234111785889
    5. '   ' → logprob: -9.19123363494873
    6. ' "__' → logprob: -10.81623363494873
    7. ' '__' → logprob: -13.06623363494873
    8. ' main' → logprob: -14.19123363494873
    9. '('__' → logprob: -14.31623363494873
    10. ' ' → logprob: -14.56623363494873

Token 838: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.0
    3. '	main' → logprob: -22.25
    4. 'import' → logprob: -25.125
    5. '   ' → logprob: -26.0
    6. '_main' → logprob: -26.875
    7. '.main' → logprob: -27.25
    8. '(main' → logprob: -28.875
    9. '主' → logprob: -29.875
    10. 'Main' → logprob: -30.25

Token 839: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 837
Tokens correctement prédits (1ère position, stricte): 347
Tokens correctement prédits (1ère position, avec adaptation): 380
Tokens correctement prédits (top 10): 673
Précision stricte (1ère position): 41.46%
Précision adaptée (1ère position): 45.40%
Précision (top 10): 80.41%
================================================================================
