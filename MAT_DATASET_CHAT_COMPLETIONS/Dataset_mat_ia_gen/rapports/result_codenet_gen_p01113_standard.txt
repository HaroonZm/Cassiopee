================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def parse_significand(bits):
    return (1 << 52) + int(bits, 2)

def to_float64_bits(e, m):
    e_bits = format(e, '012b')
    m_bits = format(m & ((1 << 52) - 1), '052b')
    return e_bits + m_bits

def add_fp(e1, m1, e2, m2):
    # Align exponents
    if e1 > e2:
        shift = e1 - e2
        if shift > 52:
            # m2 becomes 0 effectively
            m2 = 0
        else:
            m2 >>= shift
        e = e1
        m = m1 + m2
    else:
        shift = e2 - e1
        if shift > 52:
            m1 = 0
        else:
            m1 >>= shift
        e = e2
        m = m1 + m2
    # Normalize
    if m >= (1 << 53):
        m >>= 1
        e += 1
    return e, m

def multiply_int_fp(n, e, m):
    # n is up to 10^18, use double-and-add method
    res_e = 0
    res_m = 0
    bit_pos = n.bit_length()
    cur_e, cur_m = e, m
    res_e, res_m = 0, 0
    first = True
    for i in reversed(range(bit_pos)):
        if not first:
            # Double res
            res_e, res_m = add_fp(res_e, res_m, res_e, res_m)
        else:
            first = False
        if (n >> i) & 1:
            if res_e == 0 and res_m == 0:
                res_e, res_m = cur_e, cur_m
            else:
                res_e, res_m = add_fp(res_e, res_m, cur_e, cur_m)
    return res_e, res_m

def main():
    input_lines = sys.stdin.read().splitlines()
    i = 0
    while True:
        if i >= len(input_lines):
            break
        n_line = input_lines[i].strip()
        if n_line == '0':
            break
        n = int(n_line)
        i += 1
        bits = input_lines[i].strip()
        i += 1
        # initial number a has exponent 0 and significand 1.b52...b1
        m = parse_significand(bits)  # 53-bit integer with implicit 1
        e = 0
        # multiply a by n, approximating each addition by truncation done by add_fp

        # Use repeated addition as above is too slow.
        # Use multiply_int_fp to compute s = n * a in fp with truncation

        # multiply_int_fp simulates adding a n times with truncation
        s_e, s_m = multiply_int_fp(n, e, m)

        print(to_float64_bits(s_e, s_m))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' parse' (ID: 8420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3835870623588562
    2. ' main' → logprob: -1.883587121963501
    3. ' process' → logprob: -2.758587121963501
    4. ' space' → logprob: -3.258587121963501
    5. ' calculate' → logprob: -4.633586883544922
    6. ' read' → logprob: -4.883586883544922
    7. ' hello' → logprob: -4.883586883544922
    8. ' my' → logprob: -5.133586883544922
    9. '_' → logprob: -5.258586883544922
    10. ' a' → logprob: -5.758586883544922

Token 5: '_sign' (ID: 24730)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.324748158454895
    2. '(' → logprob: -1.324748158454895
    3. '_line' → logprob: -5.3247480392456055
    4. '_token' → logprob: -6.1997480392456055
    5. '_:' → logprob: -6.8247480392456055
    6. '_name' → logprob: -7.3247480392456055
    7. '```' → logprob: -8.074748039245605
    8. '_input' → logprob: -8.074748039245605
    9. '_args' → logprob: -8.574748039245605
    10. '_data' → logprob: -8.699748039245605

Token 6: 'ific' (ID: 1173)
  Prédit: 'ature'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ature' → logprob: -0.39964714646339417
    2. 'al' → logprob: -2.0246472358703613
    3. '_' → logprob: -2.6496472358703613
    4. '(' → logprob: -2.6496472358703613
    5. '():' → logprob: -4.399647235870361
    6. 'o' → logprob: -4.649647235870361
    7. '_at' → logprob: -5.149647235870361
    8. 'a' → logprob: -5.649647235870361
    9. '(_' → logprob: -5.774647235870361
    10. 's' → logprob: -5.774647235870361

Token 7: 'and' (ID: 427)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.004077570512890816
    2. 'and' → logprob: -5.629077434539795
    3. '_ant' → logprob: -8.879077911376953
    4. 'ic' → logprob: -9.129077911376953
    5. ' ant' → logprob: -9.254077911376953
    6. 'ance' → logprob: -10.004077911376953
    7. 'ants' → logprob: -11.379077911376953
    8. 'al' → logprob: -11.504077911376953
    9. '_' → logprob: -11.754077911376953
    10. 'a' → logprob: -11.879077911376953

Token 8: '(bits' (ID: 170698)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2036973088979721
    2. '_' → logprob: -1.7036973237991333
    3. '_:' → logprob: -6.703697204589844
    4. '(_' → logprob: -8.328697204589844
    5. ':' → logprob: -8.453697204589844
    6. '(_:' → logprob: -8.703697204589844
    7. '```' → logprob: -9.703697204589844
    8. '(:' → logprob: -10.078697204589844
    9. '_token' → logprob: -10.078697204589844
    10. '():' → logprob: -10.328697204589844

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002181311370804906
    2. ')' → logprob: -6.377181529998779
    3. ':' → logprob: -8.127181053161621
    4. '[' → logprob: -9.252181053161621
    5. ',' → logprob: -10.127181053161621
    6. '):
' → logprob: -10.627181053161621
    7. '=' → logprob: -11.752181053161621
    8. ' ):' → logprob: -12.377181053161621
    9. '[]):' → logprob: -13.127181053161621
    10. 's' → logprob: -13.627181053161621

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10789461433887482
    2. ':' → logprob: -2.3578946590423584
    3. '    ' → logprob: -6.107894420623779
    4. '_' → logprob: -7.107894420623779
    5. ' ' → logprob: -7.232894420623779
    6. '(' → logprob: -7.232894420623779
    7. '```' → logprob: -7.357894420623779
    8. ''s' → logprob: -7.482894420623779
    9. '    
' → logprob: -8.357894897460938
    10. ' :' → logprob: -8.482894897460938

Token 11: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2457977831363678
    2. ' ' → logprob: -2.620797872543335
    3. '    ' → logprob: -3.495797872543335
    4. ' if' → logprob: -3.620797872543335
    5. '_' → logprob: -3.870797872543335
    6. ' return' → logprob: -4.370797634124756
    7. 'i' → logprob: -4.745797634124756
    8. 's' → logprob: -4.745797634124756
    9. '  ' → logprob: -5.495797634124756
    10. ' i' → logprob: -5.495797634124756

Token 12: ' (' (ID: 350)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.29429835081100464
    2. ' bits' → logprob: -1.6692984104156494
    3. 'int' → logprob: -3.6692984104156494
    4. ' ' → logprob: -3.7942984104156494
    5. ' float' → logprob: -5.29429817199707
    6. ' None' → logprob: -5.54429817199707
    7. 'bits' → logprob: -5.66929817199707
    8. '(bits' → logprob: -6.16929817199707
    9. ' (' → logprob: -6.54429817199707
    10. '0' → logprob: -6.91929817199707

Token 13: '1' (ID: 16)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.13594742119312286
    2. 'int' → logprob: -2.3859474658966064
    3. ' bits' → logprob: -4.260947227478027
    4. '1' → logprob: -4.635947227478027
    5. '(bits' → logprob: -5.510947227478027
    6. ' int' → logprob: -5.760947227478027
    7. '   ' → logprob: -6.385947227478027
    8. '(int' → logprob: -6.760947227478027
    9. '0' → logprob: -8.135947227478027
    10. ' (' → logprob: -8.135947227478027

Token 14: ' <<' (ID: 2256)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1475052386522293
    2. ' +' → logprob: -2.522505283355713
    3. '+' → logprob: -2.897505283355713
    4. ' <<' → logprob: -7.522505283355713
    5. ')' → logprob: -7.772505283355713
    6. ' .' → logprob: -8.272504806518555
    7. '.)' → logprob: -8.522504806518555
    8. '<<' → logprob: -8.647504806518555
    9. '.+' → logprob: -10.647504806518555
    10. ' ' → logprob: -11.022504806518555

Token 15: ' ' (ID: 220)
  Prédit: '52'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -0.5181568264961243
    2. '53' → logprob: -1.3931567668914795
    3. '23' → logprob: -1.8931567668914795
    4. 'len' → logprob: -5.393157005310059
    5. ' ' → logprob: -8.143157005310059
    6. '54' → logprob: -9.018157005310059
    7. '(' → logprob: -9.393157005310059
    8. '51' → logprob: -9.518157005310059
    9. '(len' → logprob: -9.893157005310059
    10. '24' → logprob: -10.018157005310059

Token 16: '52' (ID: 6283)
  Prédit: '52'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -0.0887053981423378
    2. '23' → logprob: -2.71370530128479
    3. '53' → logprob: -4.213705539703369
    4. 'len' → logprob: -5.713705539703369
    5. '54' → logprob: -8.838705062866211
    6. '51' → logprob: -9.088705062866211
    7. 'bits' → logprob: -9.963705062866211
    8. '22' → logprob: -10.213705062866211
    9. '(' → logprob: -10.463705062866211
    10. 'mant' → logprob: -10.713705062866211

Token 17: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06194627657532692
    2. '|' → logprob: -3.061946392059326
    3. ' |' → logprob: -4.436946392059326
    4. ')+' → logprob: -7.061946392059326
    5. ' )' → logprob: -7.936946392059326
    6. '+' → logprob: -9.811945915222168
    7. ')|' → logprob: -10.186945915222168
    8. '<|end|>' → logprob: -10.561945915222168
    9. '+)' → logprob: -11.186945915222168
    10. ')-' → logprob: -11.186945915222168

Token 18: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42509570717811584
    2. ' +' → logprob: -1.3000956773757935
    3. ' |' → logprob: -3.175095796585083
    4. '|' → logprob: -4.425095558166504
    5. ' ' → logprob: -4.800095558166504
    6. '-' → logprob: -5.300095558166504
    7. ')' → logprob: -5.675095558166504
    8. ' -' → logprob: -6.300095558166504
    9. '<|end|>' → logprob: -7.300095558166504
    10. ' *' → logprob: -8.925095558166504

Token 19: ' int' (ID: 677)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.43069830536842346
    2. '(bits' → logprob: -1.430698275566101
    3. ' bits' → logprob: -2.3056983947753906
    4. ' (' → logprob: -4.555698394775391
    5. 'int' → logprob: -8.05569839477539
    6. '(' → logprob: -9.30569839477539
    7. '(int' → logprob: -9.55569839477539
    8. ' int' → logprob: -10.68069839477539
    9. 'bit' → logprob: -10.93069839477539
    10. '_bits' → logprob: -10.93069839477539

Token 20: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.14286468923091888
    2. '(' → logprob: -2.01786470413208
    3. '(bit' → logprob: -9.517864227294922
    4. '('' → logprob: -9.767864227294922
    5. '("("' → logprob: -11.267864227294922
    6. '(b' → logprob: -11.267864227294922
    7. '((' → logprob: -11.892864227294922
    8. ' (' → logprob: -12.017864227294922
    9. ' ' → logprob: -12.642864227294922
    10. '```' → logprob: -13.392864227294922

Token 21: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19430404901504517
    2. '[' → logprob: -1.8193039894104004
    3. ',' → logprob: -4.4443039894104
    4. '')' → logprob: -7.5693039894104
    5. '),' → logprob: -8.319304466247559
    6. '```' → logprob: -8.319304466247559
    7. '`)' → logprob: -8.319304466247559
    8. '")' → logprob: -8.819304466247559
    9. '))' → logprob: -8.944304466247559
    10. '<|end|>' → logprob: -9.069304466247559

Token 22: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007286362233571708
    2. ' ' → logprob: -7.250728607177734
    3. '```' → logprob: -11.375728607177734
    4. '0' → logprob: -12.875728607177734
    5. ')' → logprob: -13.250728607177734
    6. ',' → logprob: -13.625728607177734
    7. 'base' → logprob: -14.000728607177734
    8. '16' → logprob: -15.375728607177734
    9. '  ' → logprob: -15.750728607177734
    10. '10' → logprob: -15.875728607177734

Token 23: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.652451464906335e-05
    2. ' ' → logprob: -11.625016212463379
    3. '```' → logprob: -11.875016212463379
    4. 'base' → logprob: -14.625016212463379
    5. ')' → logprob: -16.125017166137695
    6. 'binary' → logprob: -18.000017166137695
    7. '``' → logprob: -18.125017166137695
    8. '２' → logprob: -18.625017166137695
    9. '  ' → logprob: -18.750017166137695
    10. '0' → logprob: -19.000017166137695

Token 24: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')))' → logprob: -14.125003814697266
    3. ' )' → logprob: -14.125003814697266
    4. '))' → logprob: -14.375003814697266
    5. ')return' → logprob: -15.250003814697266
    6. ')
' → logprob: -15.375003814697266
    7. ')}}' → logprob: -15.500003814697266
    8. ')`' → logprob: -15.500003814697266
    9. '   ' → logprob: -16.250003814697266
    10. '')' → logprob: -16.375003814697266

Token 25: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.250539779663086
    2. '<|end|>' → logprob: -1.375539779663086
    3. ')' → logprob: -1.500539779663086
    4. '
' → logprob: -2.000539779663086
    5. '\n' → logprob: -3.625539779663086
    6. '.' → logprob: -3.750539779663086
    7. '\' → logprob: -4.250539779663086
    8. '(
' → logprob: -4.875539779663086
    9. '[' → logprob: -5.000539779663086
    10. '#' → logprob: -5.375539779663086

Token 26: ' to' (ID: 316)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.004468339029699564
    2. ' convert' → logprob: -6.3794684410095215
    3. ' calculate' → logprob: -6.6294684410095215
    4. ' extract' → logprob: -7.7544684410095215
    5. ' decode' → logprob: -7.7544684410095215
    6. ' get' → logprob: -8.754467964172363
    7. ' compute' → logprob: -9.129467964172363
    8. ' float' → logprob: -9.754467964172363
    9. ' normalize' → logprob: -9.879467964172363
    10. ' encode' → logprob: -10.504467964172363

Token 27: '_float' (ID: 44505)
  Prédit: '_float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_float' → logprob: -0.2928028702735901
    2. '_double' → logprob: -1.4178028106689453
    3. '_' → logprob: -5.167802810668945
    4. 'float' → logprob: -6.417802810668945
    5. '_bits' → logprob: -6.667802810668945
    6. '_int' → logprob: -7.042802810668945
    7. 'double' → logprob: -7.792802810668945
    8. '_binary' → logprob: -7.917802810668945
    9. '_ie' → logprob: -8.417802810668945
    10. '_decimal' → logprob: -8.417802810668945

Token 28: '64' (ID: 2220)
  Prédit: '(bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.277129590511322
    2. '(' → logprob: -1.5271296501159668
    3. '(bit' → logprob: -4.402129650115967
    4. '_bits' → logprob: -5.277129650115967
    5. '():' → logprob: -6.027129650115967
    6. '(value' → logprob: -6.902129650115967
    7. '("("' → logprob: -7.152129650115967
    8. ' (' → logprob: -7.902129650115967
    9. '(bin' → logprob: -8.152129173278809
    10. '(x' → logprob: -8.402129173278809

Token 29: '_bits' (ID: 48415)
  Prédit: '(bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.0037149270065128803
    2. '(' → logprob: -5.7537150382995605
    3. '_bits' → logprob: -8.628714561462402
    4. '(bit' → logprob: -8.628714561462402
    5. '():' → logprob: -9.503714561462402
    6. '(parts' → logprob: -11.253714561462402
    7. '("("' → logprob: -11.503714561462402
    8. '(value' → logprob: -11.628714561462402
    9. '(sign' → logprob: -11.628714561462402
    10. '(bin' → logprob: -12.253714561462402

Token 30: '(e' (ID: 3454)
  Prédit: '(bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.031953126192092896
    2. '(' → logprob: -3.5319530963897705
    3. '(bit' → logprob: -6.78195333480835
    4. '(s' → logprob: -8.156952857971191
    5. '(code' → logprob: -9.031952857971191
    6. ' (' → logprob: -9.156952857971191
    7. '(b' → logprob: -9.406952857971191
    8. '(value' → logprob: -9.656952857971191
    9. '("("' → logprob: -10.406952857971191
    10. '(parts' → logprob: -10.531952857971191

Token 31: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14355185627937317
    2. 'xp' → logprob: -2.518551826477051
    3. ')' → logprob: -3.018551826477051
    4. ')x' → logprob: -5.893551826477051
    5. '(bits' → logprob: -8.26855182647705
    6. '_bits' → logprob: -8.26855182647705
    7. 'e' → logprob: -8.51855182647705
    8. 'ponent' → logprob: -8.51855182647705
    9. 'bits' → logprob: -9.51855182647705
    10. ')e' → logprob: -9.51855182647705

Token 32: ' m' (ID: 284)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.866523027420044
    2. ' m' → logprob: -1.366523027420044
    3. 's' → logprob: -2.116523027420044
    4. 'm' → logprob: -2.116523027420044
    5. ' f' → logprob: -2.991523027420044
    6. 'f' → logprob: -3.991523027420044
    7. 'sign' → logprob: -5.116522789001465
    8. ' signific' → logprob: -5.616522789001465
    9. 'sig' → logprob: -6.866522789001465
    10. ' ' → logprob: -7.554022789001465

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025825150310993195
    2. '_bits' → logprob: -4.025825023651123
    3. 'bits' → logprob: -5.525825023651123
    4. '):
' → logprob: -6.525825023651123
    5. ')' → logprob: -6.775825023651123
    6. ',' → logprob: -8.025825500488281
    7. 's' → logprob: -8.525825500488281
    8. '):
' → logprob: -8.775825500488281
    9. 'Bits' → logprob: -9.525825500488281
    10. ' bits' → logprob: -9.650825500488281

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013373267836868763
    2. '    ' → logprob: -4.763373374938965
    3. ':' → logprob: -5.888373374938965
    4. ' :' → logprob: -7.513373374938965
    5. ' ' → logprob: -7.888373374938965
    6. '       ' → logprob: -8.388373374938965
    7. '(' → logprob: -8.888373374938965
    8. ' return' → logprob: -9.013373374938965
    9. '  ' → logprob: -9.138373374938965
    10. ')' → logprob: -9.763373374938965

Token 35: ' e' (ID: 319)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6660051941871643
    2. '   ' → logprob: -0.7910051941871643
    3. 'return' → logprob: -3.5410051345825195
    4. ' ' → logprob: -6.6660051345825195
    5. '    ' → logprob: -6.6660051345825195
    6. '0' → logprob: -8.54100513458252
    7. '  ' → logprob: -8.66600513458252
    8. ' e' → logprob: -9.04100513458252
    9. ' s' → logprob: -9.16600513458252
    10. '       ' → logprob: -9.29100513458252

Token 36: '_bits' (ID: 48415)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.37569770216941833
    2. ' =' → logprob: -1.3756977319717407
    3. ' <<' → logprob: -3.250697612762451
    4. '=' → logprob: -4.500697612762451
    5. '<<' → logprob: -4.875697612762451
    6. 'x' → logprob: -6.750697612762451
    7. 'n' → logprob: -7.000697612762451
    8. ')' → logprob: -8.62569808959961
    9. ' |=' → logprob: -9.12569808959961
    10. ' ' → logprob: -9.37569808959961

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004640880040824413
    2. '=' → logprob: -5.379641056060791
    3. ' ' → logprob: -11.629640579223633
    4. ' <<=' → logprob: -12.629640579223633
    5. ')' → logprob: -13.004640579223633
    6. ' =
' → logprob: -13.379640579223633
    7. '  ' → logprob: -13.629640579223633
    8. ',' → logprob: -13.879640579223633
    9. ' |=' → logprob: -14.379640579223633
    10. '   ' → logprob: -15.129640579223633

Token 38: ' format' (ID: 6011)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.5848625898361206
    2. ' format' → logprob: -1.9598625898361206
    3. ' f' → logprob: -2.08486270904541
    4. ' bin' → logprob: -2.70986270904541
    5. 'e' → logprob: -2.83486270904541
    6. 'format' → logprob: -3.95986270904541
    7. 'bin' → logprob: -3.95986270904541
    8. ' (' → logprob: -5.20986270904541
    9. ' ' → logprob: -5.95986270904541
    10. 'f' → logprob: -6.45986270904541

Token 39: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00014060820103622973
    2. '(' → logprob: -8.875140190124512
    3. ' (' → logprob: -15.375140190124512
    4. '<|end|>' → logprob: -15.625140190124512
    5. '((' → logprob: -16.000141143798828
    6. 'e' → logprob: -16.000141143798828
    7. ' e' → logprob: -16.000141143798828
    8. '(
' → logprob: -18.125141143798828
    9. '(int' → logprob: -18.250141143798828
    10. '(E' → logprob: -19.125141143798828

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009278989746235311
    2. ' ,' → logprob: -7.000927925109863
    3. ','' → logprob: -11.625927925109863
    4. '',' → logprob: -13.125927925109863
    5. ' ' → logprob: -13.625927925109863
    6. ''' → logprob: -14.000927925109863
    7. '```' → logprob: -14.125927925109863
    8. ',
' → logprob: -14.250927925109863
    9. '  ' → logprob: -14.750927925109863
    10. ')' → logprob: -15.375927925109863

Token 41: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2368512600660324
    2. '"' → logprob: -1.7368512153625488
    3. '11' → logprob: -4.236851215362549
    4. ' ' → logprob: -4.486851215362549
    5. '011' → logprob: -5.361851215362549
    6. '`' → logprob: -6.486851215362549
    7. 'b' → logprob: -6.986851215362549
    8. ' '' → logprob: -7.986851215362549
    9. '#' → logprob: -8.486851692199707
    10. '>' → logprob: -8.486851692199707

Token 42: '012' (ID: 19267)
  Prédit: '011'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.0007750853546895087
    2. '11' → logprob: -7.62577486038208
    3. '016' → logprob: -9.125775337219238
    4. '07' → logprob: -9.750775337219238
    5. '>' → logprob: -10.250775337219238
    6. 'b' → logprob: -11.125775337219238
    7. '012' → logprob: -11.125775337219238
    8. '010' → logprob: -11.625775337219238
    9. '01' → logprob: -11.875775337219238
    10. '08' → logprob: -12.125775337219238

Token 43: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009626734536141157
    2. '')' → logprob: -7.125962734222412
    3. '8' → logprob: -10.500962257385254
    4. 'd' → logprob: -10.500962257385254
    5. 'x' → logprob: -10.500962257385254
    6. '4' → logprob: -10.750962257385254
    7. '04' → logprob: -10.875962257385254
    8. '}' → logprob: -12.375962257385254
    9. '```' → logprob: -12.375962257385254
    10. 's' → logprob: -12.625962257385254

Token 44: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0017143317963927984
    2. ')' → logprob: -6.37671422958374
    3. '")' → logprob: -12.376714706420898
    4. ' ')' → logprob: -13.126714706420898
    5. '')
' → logprob: -13.251714706420898
    6. '0' → logprob: -13.501714706420898
    7. '7' → logprob: -15.001714706420898
    8. '6' → logprob: -15.126714706420898
    9. '<|end|>' → logprob: -15.126714706420898
    10. ''' → logprob: -15.376714706420898

Token 45: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.7250041365623474
    2. ' m' → logprob: -0.9750041365623474
    3. ' ' → logprob: -3.600004196166992
    4. ' e' → logprob: -3.725004196166992
    5. '   ' → logprob: -4.100004196166992
    6. '<|end|>' → logprob: -4.100004196166992
    7. 's' → logprob: -4.475004196166992
    8. '  ' → logprob: -4.725004196166992
    9. 'e' → logprob: -4.725004196166992
    10. ' s' → logprob: -5.225004196166992

Token 47: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -5.3358446166384965e-05
    2. 'bits' → logprob: -10.375053405761719
    3. '_' → logprob: -12.250053405761719
    4. ' =' → logprob: -12.250053405761719
    5. '_BITS' → logprob: -12.250053405761719
    6. '=' → logprob: -12.500053405761719
    7. 'its' → logprob: -12.875053405761719
    8. '_str' → logprob: -15.250053405761719
    9. '```' → logprob: -15.500053405761719
    10. 'it' → logprob: -15.750053405761719

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692904472351074
    2. '=' → logprob: -2.1269290447235107
    3. ' ' → logprob: -15.12692928314209
    4. ')' → logprob: -15.25192928314209
    5. ' +=' → logprob: -15.37692928314209
    6. '  ' → logprob: -16.876928329467773
    7. '+=' → logprob: -17.001928329467773
    8. '=format' → logprob: -17.001928329467773
    9. '```' → logprob: -17.376928329467773
    10. ' =)' → logprob: -18.376928329467773

Token 49: ' format' (ID: 6011)
  Prédit: ' format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' format' → logprob: -0.5759559869766235
    2. 'format' → logprob: -0.8259559869766235
    3. 'm' → logprob: -12.325956344604492
    4. '(format' → logprob: -12.325956344604492
    5. '	format' → logprob: -13.200956344604492
    6. ' f' → logprob: -13.325956344604492
    7. 'f' → logprob: -13.450956344604492
    8. ' ' → logprob: -13.700956344604492
    9. '=format' → logprob: -15.200956344604492
    10. ' m' → logprob: -15.325956344604492

Token 50: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -11.750008583068848
    3. 'm' → logprob: -14.000008583068848
    4. '(int' → logprob: -16.500009536743164
    5. '<|end|>' → logprob: -17.625009536743164
    6. ' m' → logprob: -17.750009536743164
    7. ' (' → logprob: -18.500009536743164
    8. '<m' → logprob: -19.125009536743164
    9. '	m' → logprob: -19.375009536743164
    10. '((' → logprob: -19.375009536743164

Token 51: ' &' (ID: 827)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029637437546625733
    2. ' ,' → logprob: -8.250296592712402
    3. '',' → logprob: -11.125296592712402
    4. ' ' → logprob: -12.125296592712402
    5. '6' → logprob: -12.375296592712402
    6. ','' → logprob: -13.625296592712402
    7. ')' → logprob: -14.125296592712402
    8. '0' → logprob: -14.125296592712402
    9. '7' → logprob: -14.250296592712402
    10. '  ' → logprob: -14.625296592712402

Token 52: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4185377061367035
    2. '0' → logprob: -1.7935377359390259
    3. ' ((' → logprob: -1.9185377359390259
    4. '(' → logprob: -3.6685376167297363
    5. ' (' → logprob: -6.043537616729736
    6. ' ' → logprob: -7.043537616729736
    7. '   ' → logprob: -10.668538093566895
    8. '(((' → logprob: -11.793538093566895
    9. '  ' → logprob: -12.418538093566895
    10. '[(' → logprob: -13.793538093566895

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006768064573407173
    2. '(' → logprob: -5.006768226623535
    3. ' (' → logprob: -10.006768226623535
    4. '2' → logprob: -12.506768226623535
    5. ' ' → logprob: -13.006768226623535
    6. ')' → logprob: -13.756768226623535
    7. '   ' → logprob: -14.756768226623535
    8. '```' → logprob: -16.00676727294922
    9. '`' → logprob: -17.13176727294922
    10. '{' → logprob: -17.50676727294922

Token 54: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.02324652671813965
    2. ' <<' → logprob: -3.7732465267181396
    3. '1' → logprob: -14.398246765136719
    4. '>>' → logprob: -15.773246765136719
    5. '<' → logprob: -16.02324676513672
    6. '<<<' → logprob: -16.14824676513672
    7. '```' → logprob: -16.64824676513672
    8. '<<(' → logprob: -17.14824676513672
    9. ')' → logprob: -17.89824676513672
    10. ')<<' → logprob: -17.89824676513672

Token 55: ' ' (ID: 220)
  Prédit: '52'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -0.0023488879669457674
    2. ' ' → logprob: -6.752348899841309
    3. '53' → logprob: -6.752348899841309
    4. '54' → logprob: -12.002348899841309
    5. '56' → logprob: -14.689848899841309
    6. '  ' → logprob: -14.814848899841309
    7. '```' → logprob: -14.814848899841309
    8. ')' → logprob: -14.877348899841309
    9. '51' → logprob: -15.002348899841309
    10. '64' → logprob: -15.189848899841309

Token 56: '52' (ID: 6283)
  Prédit: '52'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -3.9054008084349334e-05
    2. '53' → logprob: -10.375039100646973
    3. ' ' → logprob: -11.875039100646973
    4. '54' → logprob: -15.375039100646973
    5. '```' → logprob: -15.625039100646973
    6. '  ' → logprob: -16.500038146972656
    7. '5' → logprob: -16.625038146972656
    8. '56' → logprob: -17.500038146972656
    9. '

' → logprob: -17.687538146972656
    10. '51' → logprob: -17.750038146972656

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029112942866049707
    2. ')-' → logprob: -8.250290870666504
    3. '')' → logprob: -11.000290870666504
    4. ' )' → logprob: -11.750290870666504
    5. '-' → logprob: -13.125290870666504
    6. '   ' → logprob: -14.125290870666504
    7. '1' → logprob: -14.375290870666504
    8. ' -' → logprob: -14.375290870666504
    9. '")' → logprob: -16.00029182434082
    10. '())' → logprob: -16.00029182434082

Token 58: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003467865171842277
    2. ')-' → logprob: -8.125347137451172
    3. '-' → logprob: -10.750347137451172
    4. ' -' → logprob: -10.875347137451172
    5. ' )' → logprob: -12.000347137451172
    6. '')' → logprob: -13.375347137451172
    7. '1' → logprob: -14.125347137451172
    8. '   ' → logprob: -14.375347137451172
    9. 'a' → logprob: -15.500347137451172
    10. '``' → logprob: -16.000347137451172

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005543439765460789
    2. ' ' → logprob: -7.50055456161499
    3. '```' → logprob: -14.625554084777832
    4. '   ' → logprob: -14.750554084777832
    5. ')' → logprob: -15.250554084777832
    6. '  ' → logprob: -16.12555503845215
    7. '<|end|>' → logprob: -16.81305503845215
    8. '2' → logprob: -17.68805503845215
    9. '<|end|>' → logprob: -18.00055503845215
    10. '-' → logprob: -18.00055503845215

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -13.000004768371582
    3. '2' → logprob: -13.500004768371582
    4. '```' → logprob: -14.125004768371582
    5. '   ' → logprob: -16.1875057220459
    6. ')' → logprob: -16.7500057220459
    7. '3' → logprob: -17.0000057220459
    8. '' → logprob: -17.1250057220459
    9. '0' → logprob: -17.1875057220459
    10. '``' → logprob: -17.2500057220459

Token 61: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.016675377264618874
    2. ')' → logprob: -4.1416754722595215
    3. '))' → logprob: -7.5166754722595215
    4. '),'' → logprob: -10.391674995422363
    5. ' ),' → logprob: -10.391674995422363
    6. ''),' → logprob: -10.766674995422363
    7. ')))' → logprob: -13.141674995422363
    8. ',' → logprob: -13.266674995422363
    9. '```' → logprob: -13.516674995422363
    10. ')','' → logprob: -13.516674995422363

Token 62: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22665773332118988
    2. ' '' → logprob: -1.601657748222351
    3. ' ' → logprob: -6.726657867431641
    4. ''s' → logprob: -11.22665786743164
    5. '"' → logprob: -12.22665786743164
    6. '')' → logprob: -12.47665786743164
    7. ''f' → logprob: -12.85165786743164
    8. ''a' → logprob: -12.97665786743164
    9. '52' → logprob: -13.10165786743164
    10. ')' → logprob: -13.35165786743164

Token 63: '052' (ID: 43083)
  Prédit: '052'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '052' → logprob: -2.248469718324486e-05
    2. '053' → logprob: -11.250022888183594
    3. '051' → logprob: -12.250022888183594
    4. '05' → logprob: -12.750022888183594
    5. '0' → logprob: -14.375022888183594
    6. '52' → logprob: -15.375022888183594
    7. ' ' → logprob: -15.500022888183594
    8. '055' → logprob: -15.750022888183594
    9. '054' → logprob: -15.750022888183594
    10. '005' → logprob: -16.375022888183594

Token 64: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. 's' → logprob: -20.625
    3. ''b' → logprob: -20.625
    4. ')b' → logprob: -21.625
    5. '')' → logprob: -23.25
    6. '	b' → logprob: -23.5
    7. ' b' → logprob: -24.0
    8. 'f' → logprob: -24.5
    9. 'bit' → logprob: -25.0
    10. '```' → logprob: -26.125

Token 65: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03806604817509651
    2. ')' → logprob: -3.2880661487579346
    3. ''' → logprob: -11.163065910339355
    4. ''))' → logprob: -12.538065910339355
    5. ')'' → logprob: -13.163065910339355
    6. '')
' → logprob: -13.788065910339355
    7. '")' → logprob: -14.038065910339355
    8. '   ' → logprob: -14.413065910339355
    9. ' ')' → logprob: -14.538065910339355
    10. ' )' → logprob: -14.663065910339355

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002718329895287752
    2. ')' → logprob: -6.377718448638916
    3. '<|end|>' → logprob: -7.377718448638916
    4. ' return' → logprob: -9.002717971801758
    5. ' ' → logprob: -9.127717971801758
    6. 'return' → logprob: -10.127717971801758
    7. '  ' → logprob: -10.627717971801758
    8. '    
' → logprob: -10.627717971801758
    9. ' )' → logprob: -11.377717971801758
    10. '\n' → logprob: -12.002717971801758

Token 67: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002312503522261977
    2. 'return' (adapté à ' return') → logprob: -6.627312660217285
    3. ' return' → logprob: -7.127312660217285
    4. ')' → logprob: -9.752312660217285
    5. '<|end|>' → logprob: -10.127312660217285
    6. '  ' → logprob: -10.752312660217285
    7. ' ' → logprob: -11.127312660217285
    8. '    
' → logprob: -11.502312660217285
    9. 'b' → logprob: -11.877312660217285
    10. ''' → logprob: -12.502312660217285

Token 68: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.726721465587616
    2. ''' → logprob: -1.2267215251922607
    3. ''e' → logprob: -2.2267215251922607
    4. ' e' → logprob: -3.2267215251922607
    5. 'f' → logprob: -3.3517215251922607
    6. ' f' → logprob: -4.101721286773682
    7. 'int' → logprob: -4.601721286773682
    8. ' '' → logprob: -4.851721286773682
    9. '"' → logprob: -6.601721286773682
    10. ''int' → logprob: -6.726721286773682

Token 69: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -1.0280383548888494e-06
    2. '_bit' → logprob: -14.500000953674316
    3. '_BITS' → logprob: -15.500000953674316
    4. 'bits' → logprob: -16.125001907348633
    5. '_b' → logprob: -16.375001907348633
    6. '_' → logprob: -16.500001907348633
    7. ' bits' → logprob: -18.500001907348633
    8. '_bytes' → logprob: -19.375001907348633
    9. ' _' → logprob: -19.750001907348633
    10. 'Bits' → logprob: -19.750001907348633

Token 70: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34860488772392273
    2. ' +' → logprob: -1.2236049175262451
    3. '<|end|>' → logprob: -8.973605155944824
    4. ' ' → logprob: -11.098605155944824
    5. ')' → logprob: -12.223605155944824
    6. '[' → logprob: -13.348605155944824
    7. '0' → logprob: -13.473605155944824
    8. ' +
' → logprob: -13.723605155944824
    9. '   ' → logprob: -13.973605155944824
    10. '>' → logprob: -13.973605155944824

Token 71: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04859009385108948
    2. ' m' → logprob: -3.0485901832580566
    3. ''' → logprob: -13.298589706420898
    4. ' ' → logprob: -14.798589706420898
    5. '_' → logprob: -15.798589706420898
    6. '	m' → logprob: -15.798589706420898
    7. '_m' → logprob: -15.923589706420898
    8. '"' → logprob: -16.1735897064209
    9. ''m' → logprob: -16.6735897064209
    10. 'e' → logprob: -16.9235897064209

Token 72: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -5.512236498361744e-07
    2. '_BITS' → logprob: -15.625000953674316
    3. 'bits' → logprob: -15.750000953674316
    4. '_' → logprob: -15.875000953674316
    5. '_b' → logprob: -17.125
    6. '_bit' → logprob: -19.0
    7. '_m' → logprob: -19.0
    8. 'Bits' → logprob: -19.5
    9. '```' → logprob: -20.125
    10. ' bits' → logprob: -20.5

Token 73: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' add' (ID: 1147)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.04043722152709961
    2. ' calculate' → logprob: -3.9154372215270996
    3. ' convert' → logprob: -5.4154372215271
    4. ' compute' → logprob: -5.5404372215271
    5. ' float' → logprob: -5.9154372215271
    6. ' normalize' → logprob: -6.1654372215271
    7. ' extract' → logprob: -6.2904372215271
    8. ' decode' → logprob: -6.9154372215271
    9. ' double' → logprob: -7.2904372215271
    10. ' main' → logprob: -7.5404372215271

Token 76: '_fp' (ID: 75423)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1843426376581192
    2. '(a' → logprob: -1.934342622756958
    3. '(_' → logprob: -4.559342861175537
    4. '_' → logprob: -5.559342861175537
    5. '_(' → logprob: -5.684342861175537
    6. '(x' → logprob: -5.809342861175537
    7. ' (' → logprob: -7.184342861175537
    8. '_numbers' → logprob: -7.809342861175537
    9. '```' → logprob: -8.184342384338379
    10. '_two' → logprob: -8.309342384338379

Token 77: '(e' (ID: 3454)
  Prédit: '64'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '64' → logprob: -0.5109367966651917
    2. '(' → logprob: -1.3859367370605469
    3. '_numbers' → logprob: -3.010936737060547
    4. '32' → logprob: -3.260936737060547
    5. 'loat' → logprob: -4.010936737060547
    6. '(a' → logprob: -4.385936737060547
    7. '```' → logprob: -5.760936737060547
    8. '_float' → logprob: -5.885936737060547
    9. '<|end|>' → logprob: -5.885936737060547
    10. '_' → logprob: -6.010936737060547

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2670840620994568
    2. ',' → logprob: -1.5170841217041016
    3. 'a' → logprob: -4.267084121704102
    4. '_a' → logprob: -8.392084121704102
    5. ' ,' → logprob: -8.392084121704102
    6. ',m' → logprob: -9.142084121704102
    7. 'm' → logprob: -9.517084121704102
    8. 'x' → logprob: -9.642084121704102
    9. 'e' → logprob: -9.767084121704102
    10. 'A' → logprob: -9.892084121704102

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041744497139006853
    2. ',m' → logprob: -8.375417709350586
    3. ' ,' → logprob: -8.625417709350586
    4. ',e' → logprob: -13.000417709350586
    5. '1' → logprob: -14.000417709350586
    6. 'm' → logprob: -14.250417709350586
    7. 'e' → logprob: -14.375417709350586
    8. ',

' → logprob: -14.750417709350586
    9. ' m' → logprob: -15.000417709350586
    10. ')' → logprob: -15.125417709350586

Token 80: ' m' (ID: 284)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.509755551815033
    2. ' m' → logprob: -1.2597556114196777
    3. 'e' → logprob: -2.6347556114196777
    4. 'm' → logprob: -3.1347556114196777
    5. ' ' → logprob: -8.75975513458252
    6. ' s' → logprob: -9.63475513458252
    7. 's' → logprob: -9.75975513458252
    8. ',' → logprob: -10.88475513458252
    9. 'space' → logprob: -11.13475513458252
    10. ' space' → logprob: -11.75975513458252

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.353008499601856e-05
    2. ',' → logprob: -9.375093460083008
    3. '2' → logprob: -12.625093460083008
    4. '_' → logprob: -12.750093460083008
    5. '_,' → logprob: -13.750093460083008
    6. ' ' → logprob: -14.125093460083008
    7. ')' → logprob: -15.500093460083008
    8. 'e' → logprob: -16.250093460083008
    9. ',_' → logprob: -16.500093460083008
    10. ' ,' → logprob: -17.000093460083008

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ',e' → logprob: -12.625005722045898
    3. ' ,' → logprob: -13.250005722045898
    4. ',
' → logprob: -15.375005722045898
    5. 'e' → logprob: -15.625005722045898
    6. '),' → logprob: -16.0000057220459
    7. '):' → logprob: -16.5000057220459
    8. '‌,' → logprob: -17.2500057220459
    9. ')' → logprob: -17.5000057220459
    10. ',

' → logprob: -17.7500057220459

Token 83: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.07893374562263489
    2. 'e' → logprob: -2.5789337158203125
    3. ' ' → logprob: -10.203933715820312
    4. '    ' → logprob: -13.453933715820312
    5. '   ' → logprob: -13.703933715820312
    6. '  ' → logprob: -13.828933715820312
    7. '	e' → logprob: -14.266433715820312
    8. ',' → logprob: -14.516433715820312
    9. ' ,' → logprob: -15.078933715820312
    10. 's' → logprob: -15.203933715820312

Token 84: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ',' → logprob: -13.125001907348633
    3. ' ' → logprob: -16.750001907348633
    4. '₂' → logprob: -17.000001907348633
    5. '1' → logprob: -18.375001907348633
    6. ' ,' → logprob: -18.750001907348633
    7. '```' → logprob: -18.750001907348633
    8. '２' → logprob: -18.875001907348633
    9. '_,' → logprob: -18.875001907348633
    10. ',e' → logprob: -19.000001907348633

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8325677703833207e-05
    2. '):' → logprob: -10.875028610229492
    3. ' ,' → logprob: -12.500028610229492
    4. ')' → logprob: -13.375028610229492
    5. '),' → logprob: -13.500028610229492
    6. ',e' → logprob: -14.000028610229492
    7. '‌,' → logprob: -14.375028610229492
    8. 'e' → logprob: -15.000028610229492
    9. ' ' → logprob: -16.250028610229492
    10. '   ' → logprob: -16.375028610229492

Token 86: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.2519693076610565
    2. 'm' → logprob: -1.501969337463379
    3. ' ' → logprob: -10.626969337463379
    4. '   ' → logprob: -12.126969337463379
    5. ',' → logprob: -12.251969337463379
    6. '  ' → logprob: -12.876969337463379
    7. '    ' → logprob: -13.126969337463379
    8. '	m' → logprob: -14.751969337463379
    9. ',m' → logprob: -16.001968383789062
    10. ' ,' → logprob: -16.126968383789062

Token 87: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.537868779967539e-06
    2. '1' → logprob: -12.000008583068848
    3. ')' → logprob: -13.750008583068848
    4. ',' → logprob: -14.000008583068848
    5. '₂' → logprob: -15.375008583068848
    6. ' ' → logprob: -16.25000762939453
    7. '):' → logprob: -17.00000762939453
    8. '۲' → logprob: -17.25000762939453
    9. '<|end|>' → logprob: -18.00000762939453
    10. '```' → logprob: -18.37500762939453

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001969673437997699
    2. ')' → logprob: -6.251969814300537
    3. '):
' → logprob: -11.126969337463379
    4. ':' → logprob: -11.251969337463379
    5. ',' → logprob: -11.626969337463379
    6. ' ):' → logprob: -13.376969337463379
    7. '   ' → logprob: -14.626969337463379
    8. ''):' → logprob: -14.876969337463379
    9. '*' → logprob: -15.501969337463379
    10. '):

' → logprob: -15.751969337463379

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011943576857447624
    2. '    ' → logprob: -5.136943340301514
    3. ' ' → logprob: -6.386943340301514
    4. '    
' → logprob: -6.511943340301514
    5. ' 
' → logprob: -7.011943340301514
    6. ' if' → logprob: -7.511943340301514
    7. '<|end|>' → logprob: -8.386943817138672
    8. ':' → logprob: -8.761943817138672
    9. '     
' → logprob: -9.136943817138672
    10. ' #' → logprob: -9.136943817138672

Token 90: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6350046992301941
    2. '   ' → logprob: -1.3850047588348389
    3. 'if' → logprob: -1.7600047588348389
    4. '    ' → logprob: -3.510004758834839
    5. ' ' → logprob: -4.76000452041626
    6. ' while' → logprob: -5.63500452041626
    7. 'e' → logprob: -6.76000452041626
    8. '    
' → logprob: -6.88500452041626
    9. ' 
' → logprob: -7.63500452041626
    10. 'while' → logprob: -7.76000452041626

Token 91: ' Align' (ID: 90993)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6517164707183838
    2. ' ' → logprob: -0.9017164707183838
    3. ' while' → logprob: -3.401716470718384
    4. '    ' → logprob: -4.276716232299805
    5. 'if' → logprob: -4.401716232299805
    6. '   ' → logprob: -5.526716232299805
    7. 'e' → logprob: -5.901716232299805
    8. ' #' → logprob: -6.026716232299805
    9. ' e' → logprob: -6.651716232299805
    10. '  ' → logprob: -6.901716232299805

Token 92: ' ex' (ID: 513)
  Prédit: ' ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.37441375851631165
    2. ' the' → logprob: -1.7494137287139893
    3. ' e' → logprob: -2.4994137287139893
    4. 'e' → logprob: -4.124413967132568
    5. ' exponent' → logprob: -4.499413967132568
    6. '<|end|>' → logprob: -4.749413967132568
    7. 'ex' → logprob: -4.874413967132568
    8. 'the' → logprob: -5.874413967132568
    9. '   ' → logprob: -6.249413967132568
    10. ' ' → logprob: -6.499413967132568

Token 93: 'ponents' (ID: 4331)
  Prédit: 'ponents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponents' → logprob: -0.06677813082933426
    2. 'ponent' → logprob: -2.8167781829833984
    3. 'p' → logprob: -5.691778182983398
    4. 'ps' → logprob: -6.566778182983398
    5. '   ' → logprob: -11.441778182983398
    6. 'if' → logprob: -13.316778182983398
    7. ' exponent' → logprob: -13.941778182983398
    8. 'powers' → logprob: -14.191778182983398
    9. 'ponen' → logprob: -14.316778182983398
    10. 'pow' → logprob: -14.566778182983398

Token 94: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7935217022895813
    2. '<|end|>' → logprob: -0.9185217022895813
    3. ' if' → logprob: -2.6685216426849365
    4. '<|end|>' → logprob: -3.7935216426849365
    5. ' ' → logprob: -3.9185216426849365
    6. '    ' → logprob: -4.293521881103516
    7. '    
' → logprob: -4.793521881103516
    8. ' 
' → logprob: -5.543521881103516
    9. ':' → logprob: -5.793521881103516
    10. '```' → logprob: -6.793521881103516

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006942221894860268
    2. '<|end|>' → logprob: -5.631942272186279
    3. ' if' → logprob: -6.006942272186279
    4. '    ' → logprob: -8.256941795349121
    5. '<|end|>' → logprob: -9.131941795349121
    6. ' ' → logprob: -9.631941795349121
    7. ' while' → logprob: -9.756941795349121
    8. 'diff' → logprob: -9.756941795349121
    9. ',' → logprob: -10.131941795349121
    10. '```' → logprob: -10.506941795349121

Token 96: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09600361436605453
    2. 'if' (adapté à ' if') → logprob: -2.721003532409668
    3. 'diff' → logprob: -3.971003532409668
    4. ' diff' → logprob: -6.221003532409668
    5. ' while' → logprob: -6.721003532409668
    6. 'd' → logprob: -7.346003532409668
    7. 'shift' → logprob: -7.596003532409668
    8. '   ' → logprob: -7.721003532409668
    9. 'e' → logprob: -7.846003532409668
    10. ' ' → logprob: -8.096003532409668

Token 97: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.0009187239338643849
    2. 'e' → logprob: -7.000918865203857
    3. ' ' → logprob: -12.3759183883667
    4. '   ' → logprob: -13.2509183883667
    5. '	e' → logprob: -14.5009183883667
    6. ' abs' → logprob: -14.8759183883667
    7. ' (' → logprob: -15.6259183883667
    8. '  ' → logprob: -16.125919342041016
    9. ' ' → logprob: -16.875919342041016
    10. '(e' → logprob: -17.000919342041016

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.375
    3. '```' → logprob: -16.5
    4. ' ' → logprob: -17.5
    5. '' → logprob: -18.5
    6. '_' → logprob: -18.5
    7. '１' → logprob: -19.0
    8. '۱' → logprob: -19.4375
    9. '   ' → logprob: -19.5625
    10. '
' → logprob: -19.5625

Token 99: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08381038904190063
    2. ' <' → logprob: -2.708810329437256
    3. '>' → logprob: -4.333810329437256
    4. '<' → logprob: -7.583810329437256
    5. '<|end|>' → logprob: -9.583810806274414
    6. ' ==' → logprob: -10.083810806274414
    7. ' ' → logprob: -10.583810806274414
    8. '==' → logprob: -11.958810806274414
    9. '<|end|>' → logprob: -13.208810806274414
    10. '   ' → logprob: -13.333810806274414

Token 100: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.029750604182481766
    2. 'e' → logprob: -3.5297505855560303
    3. '	e' → logprob: -15.77975082397461
    4. ' ' → logprob: -16.90475082397461
    5. '<|end|>' → logprob: -19.65475082397461
    6. '  ' → logprob: -19.77975082397461
    7. '<|end|>' → logprob: -19.77975082397461
    8. '   ' → logprob: -20.02975082397461
    9. ')e' → logprob: -20.52975082397461
    10. '=e' → logprob: -21.02975082397461

Token 101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20141451060771942
    2. '1' → logprob: -1.7014144659042358
    3. '```' → logprob: -14.701414108276367
    4. ' ' → logprob: -14.826414108276367
    5. '0' → logprob: -16.826414108276367
    6. '   ' → logprob: -17.326414108276367
    7. '_' → logprob: -17.701414108276367
    8. '  ' → logprob: -17.763914108276367
    9. '<|end|>' → logprob: -18.076414108276367
    10. ')' → logprob: -18.138914108276367

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020591423381119967
    2. ':
' → logprob: -6.377058982849121
    3. '):' → logprob: -8.752058982849121
    4. '   ' → logprob: -9.377058982849121
    5. '       ' → logprob: -9.377058982849121
    6. '):
' → logprob: -11.252058982849121
    7. ' :' → logprob: -12.252058982849121
    8. ',' → logprob: -12.502058982849121
    9. ')' → logprob: -13.127058982849121
    10. ' and' → logprob: -14.127058982849121

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016643492504954338
    2. ':' → logprob: -5.516643524169922
    3. '   ' → logprob: -5.891643524169922
    4. '1' → logprob: -5.891643524169922
    5. ':
' → logprob: -6.641643524169922
    6. '\n' → logprob: -7.016643524169922
    7. '
' → logprob: -7.016643524169922
    8. '<|end|>' → logprob: -7.141643524169922
    9. '    ' → logprob: -7.641643524169922
    10. ',' → logprob: -8.016643524169922

Token 104: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -1.0979797840118408
    2. 'shift' (adapté à ' shift') → logprob: -1.5979797840118408
    3. '       ' → logprob: -1.5979797840118408
    4. 'diff' → logprob: -2.222979784011841
    5. ' m' → logprob: -2.972979784011841
    6. ' diff' → logprob: -3.472979784011841
    7. ' e' → logprob: -4.347979545593262
    8. ' s' → logprob: -4.347979545593262
    9. 'e' → logprob: -4.472979545593262
    10. '    ' → logprob: -4.722979545593262

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09818018972873688
    2. '=' → logprob: -2.4731802940368652
    3. '_amount' → logprob: -4.723180294036865
    4. '_amt' → logprob: -9.348179817199707
    5. 'amount' → logprob: -9.473179817199707
    6. '   ' → logprob: -9.473179817199707
    7. '_' → logprob: -10.598179817199707
    8. '_bits' → logprob: -11.598179817199707
    9. ' ' → logprob: -11.723179817199707
    10. 's' → logprob: -11.973179817199707

Token 106: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.03364662081003189
    2. 'e' → logprob: -3.408646583557129
    3. '	e' → logprob: -14.908646583557129
    4. '   ' → logprob: -15.283646583557129
    5. '(e' → logprob: -16.158647537231445
    6. ' (' → logprob: -17.158647537231445
    7. ' ' → logprob: -17.158647537231445
    8. '`' → logprob: -17.283647537231445
    9. '```' → logprob: -17.408647537231445
    10. '1' → logprob: -17.971147537231445

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '2' → logprob: -12.250004768371582
    3. '```' → logprob: -16.1250057220459
    4. '۱' → logprob: -16.9375057220459
    5. '_' → logprob: -17.1875057220459
    6. '１' → logprob: -17.8125057220459
    7. '' → logprob: -17.8125057220459
    8. '`' → logprob: -17.8750057220459
    9. '   ' → logprob: -17.9375057220459
    10. '[' → logprob: -18.1250057220459

Token 108: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.007616560440510511
    2. '-' → logprob: -4.8826165199279785
    3. ' ' → logprob: -11.757616996765137
    4. '   ' → logprob: -13.882616996765137
    5. '-e' → logprob: -14.882616996765137
    6. '<|end|>' → logprob: -15.257616996765137
    7. 'e' → logprob: -15.632616996765137
    8. ' -
' → logprob: -15.757616996765137
    9. '<|end|>' → logprob: -15.757616996765137
    10. ' -=' → logprob: -16.25761604309082

Token 109: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.006715370807796717
    2. ' e' → logprob: -5.006715297698975
    3. '	e' → logprob: -18.256715774536133
    4. '<|end|>' → logprob: -19.256715774536133
    5. '   ' → logprob: -20.631715774536133
    6. ' ' → logprob: -20.756715774536133
    7. ')e' → logprob: -21.381715774536133
    8. '(e' → logprob: -21.381715774536133
    9. '2' → logprob: -21.381715774536133
    10. '_e' → logprob: -21.756715774536133

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. '<|end|>' → logprob: -16.5
    4. '۲' → logprob: -17.375
    5. '   ' → logprob: -18.625
    6. '২' → logprob: -19.125
    7. '```' → logprob: -19.25
    8. '₂' → logprob: -19.3125
    9. '２' → logprob: -19.5
    10. '२' → logprob: -19.6875

Token 111: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9902503490447998
    2. '   ' → logprob: -1.2402503490447998
    3. '       ' → logprob: -1.7402503490447998
    4. 'm' → logprob: -1.8652503490447998
    5. ' m' → logprob: -5.240250587463379
    6. ')' → logprob: -7.490250587463379
    7. '1' → logprob: -7.615250587463379
    8. '<|end|>' → logprob: -7.990250587463379
    9. ',' → logprob: -8.490250587463379
    10. '           ' → logprob: -8.740250587463379

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4053167700767517
    2. 'm' → logprob: -1.2803168296813965
    3. '
' → logprob: -3.7803168296813965
    4. '   ' → logprob: -4.0303168296813965
    5. '        
' → logprob: -4.9053168296813965
    6. ' 
' → logprob: -6.4053168296813965
    7. ' m' → logprob: -6.7803168296813965
    8. '  
' → logprob: -7.1553168296813965
    9. ' ' → logprob: -7.5303168296813965
    10. '```' → logprob: -7.7803168296813965

Token 113: ' if' (ID: 538)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.31409206986427307
    2. ' m' → logprob: -1.3140920400619507
    3. '   ' → logprob: -7.81409215927124
    4. '       ' → logprob: -7.81409215927124
    5. '           ' → logprob: -11.814091682434082
    6. ' ' → logprob: -12.189091682434082
    7. '    ' → logprob: -13.064091682434082
    8. '  ' → logprob: -13.439091682434082
    9. '>' → logprob: -14.439091682434082
    10. '
' → logprob: -14.564091682434082

Token 114: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.69631427526474
    2. 'shift' → logprob: -0.69631427526474
    3. 'm' → logprob: -6.321314334869385
    4. ' m' → logprob: -6.696314334869385
    5. 'e' → logprob: -9.571313858032227
    6. ' e' → logprob: -10.071313858032227
    7. ' ' → logprob: -13.196313858032227
    8. 'sh' → logprob: -13.321313858032227
    9. '   ' → logprob: -13.571313858032227
    10. ' bit' → logprob: -13.696313858032227

Token 115: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.051472414284944534
    2. '>' → logprob: -3.5514724254608154
    3. ' >=' → logprob: -3.9264724254608154
    4. '>=' → logprob: -6.551472187042236
    5. '<|end|>' → logprob: -8.926472663879395
    6. '<|end|>' → logprob: -9.051472663879395
    7. ' <=' → logprob: -10.051472663879395
    8. '   ' → logprob: -10.926472663879395
    9. ' <' → logprob: -11.551472663879395
    10. ' ' → logprob: -12.426472663879395

Token 116: ' ' (ID: 220)
  Prédit: '52'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -0.0019007938681170344
    2. '53' → logprob: -6.751900672912598
    3. ' ' → logprob: -7.251900672912598
    4. '63' → logprob: -11.376900672912598
    5. '
' → logprob: -13.626900672912598
    6. '55' → logprob: -13.626900672912598
    7. '   ' → logprob: -13.626900672912598
    8. '60' → logprob: -14.126900672912598
    9. '107' → logprob: -14.126900672912598
    10. '64' → logprob: -14.126900672912598

Token 117: '52' (ID: 6283)
  Prédit: '52'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -0.0282822884619236
    2. '53' → logprob: -3.653282403945923
    3. '63' → logprob: -6.528282165527344
    4. '107' → logprob: -7.903282165527344
    5. ' ' → logprob: -9.903282165527344
    6. '60' → logprob: -10.653282165527344
    7. '64' → logprob: -10.778282165527344
    8. '54' → logprob: -10.903282165527344
    9. '55' → logprob: -10.903282165527344
    10. '102' → logprob: -12.903282165527344

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0794871598482132
    2. ':
' → logprob: -2.5794870853424072
    3. '       ' → logprob: -8.829486846923828
    4. '<|end|>' → logprob: -8.829486846923828
    5. ':return' → logprob: -9.079486846923828
    6. '):' → logprob: -10.329486846923828
    7. '):
' → logprob: -10.329486846923828
    8. '<|end|>' → logprob: -10.454486846923828
    9. '   ' → logprob: -10.704486846923828
    10. '           ' → logprob: -10.704486846923828

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22757193446159363
    2. 'm' → logprob: -2.102571964263916
    3. ' m' → logprob: -2.602571964263916
    4. '       ' → logprob: -5.727571964263916
    5. 'return' → logprob: -6.227571964263916
    6. ' return' → logprob: -6.477571964263916
    7. '   ' → logprob: -8.352571487426758
    8. '            
' → logprob: -9.852571487426758
    9. '0' → logprob: -9.977571487426758
    10. '
' → logprob: -10.102571487426758

Token 120: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01151000615209341
    2. ' return' → logprob: -4.636509895324707
    3. '           ' → logprob: -6.511509895324707
    4. 'm' → logprob: -8.886509895324707
    5. '   ' → logprob: -9.136509895324707
    6. '```' → logprob: -12.011509895324707
    7. ' m' → logprob: -12.636509895324707
    8. '               ' → logprob: -12.761509895324707
    9. ' ' → logprob: -12.886509895324707
    10. '       ' → logprob: -13.636509895324707

Token 121: ' m' (ID: 284)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12722332775592804
    2. ' return' → logprob: -2.127223253250122
    3. '           ' → logprob: -8.752223014831543
    4. '   ' → logprob: -9.377223014831543
    5. '       ' → logprob: -10.502223014831543
    6. '```' → logprob: -11.377223014831543
    7. ' ' → logprob: -12.502223014831543
    8. '#' → logprob: -13.002223014831543
    9. ' #' → logprob: -13.877223014831543
    10. '  ' → logprob: -14.002223014831543

Token 122: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.582859218120575
    2. '1' → logprob: -0.832859218120575
    3. 'return' → logprob: -5.207859039306641
    4. ' return' → logprob: -7.207859039306641
    5. ' ' → logprob: -9.08285903930664
    6. '_return' → logprob: -9.27035903930664
    7. '=' → logprob: -9.33285903930664
    8. ' =' → logprob: -9.70785903930664
    9. '   ' → logprob: -9.77035903930664
    10. '```' → logprob: -9.83285903930664

Token 123: ' becomes' (ID: 14081)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0798005610704422
    2. ' =' → logprob: -2.579800605773926
    3. ' <<=' → logprob: -7.079800605773926
    4. ' >>=' → logprob: -10.829800605773926
    5. ',' → logprob: -10.954800605773926
    6. '<<' → logprob: -10.954800605773926
    7. '==' → logprob: -13.204800605773926
    8. '>>' → logprob: -13.204800605773926
    9. '   ' → logprob: -13.204800605773926
    10. '0' → logprob: -13.329800605773926

Token 124: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '000' → logprob: -16.750001907348633
    4. '```' → logprob: -18.625001907348633
    5. '   ' → logprob: -19.250001907348633
    6. 'zero' → logprob: -20.250001907348633
    7. '  ' → logprob: -20.500001907348633
    8. '۰' → logprob: -21.250001907348633
    9. '  ' → logprob: -21.750001907348633
    10. '``' → logprob: -22.000001907348633

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '000' → logprob: -14.87500286102295
    4. '1' → logprob: -17.000001907348633
    5. 'zero' → logprob: -17.000001907348633
    6. '```' → logprob: -18.000001907348633
    7. '۰' → logprob: -18.250001907348633
    8. 'm' → logprob: -18.562501907348633
    9. '   ' → logprob: -18.687501907348633
    10. 'e' → logprob: -18.875001907348633

Token 126: ' effectively' (ID: 18130)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9971649050712585
    2. '           ' → logprob: -1.2471649646759033
    3. '       ' → logprob: -1.6221649646759033
    4. 'm' → logprob: -2.7471649646759033
    5. '<|end|>' → logprob: -3.6221649646759033
    6. '\n' → logprob: -4.122164726257324
    7. ' m' → logprob: -4.747164726257324
    8. 'return' → logprob: -4.747164726257324
    9. ',' → logprob: -5.247164726257324
    10. '   ' → logprob: -5.747164726257324

Token 127: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24433308839797974
    2. ' m' → logprob: -2.619333028793335
    3. '       ' → logprob: -2.744333028793335
    4. ' return' → logprob: -3.119333028793335
    5. 'return' → logprob: -4.244333267211914
    6. 'm' → logprob: -4.619333267211914
    7. ' ' → logprob: -5.744333267211914
    8. '0' → logprob: -5.869333267211914
    9. '   ' → logprob: -6.369333267211914
    10. '               ' → logprob: -6.994333267211914

Token 128: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07225512713193893
    2. '           ' → logprob: -2.9472551345825195
    3. 'return' → logprob: -4.4472551345825195
    4. ' return' → logprob: -5.6972551345825195
    5. '   ' → logprob: -7.3222551345825195
    6. '
' → logprob: -8.07225513458252
    7. 'm' → logprob: -8.19725513458252
    8. ' m' → logprob: -8.57225513458252
    9. ',' → logprob: -8.82225513458252
    10. '0' → logprob: -8.94725513458252

Token 129: ' m' (ID: 284)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01830141432583332
    2. 'm' (adapté à ' m') → logprob: -4.268301486968994
    3. '           ' → logprob: -6.018301486968994
    4. ' return' → logprob: -6.768301486968994
    5. '0' → logprob: -8.143301010131836
    6. 'e' → logprob: -9.018301010131836
    7. '```' → logprob: -10.143301010131836
    8. ' m' → logprob: -10.643301010131836
    9. '   ' → logprob: -10.768301010131836
    10. '       ' → logprob: -10.893301010131836

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004755138419568539
    2. '1' → logprob: -5.379755020141602
    3. '=' → logprob: -10.629755020141602
    4. '20' → logprob: -11.129755020141602
    5. ' ' → logprob: -11.254755020141602
    6. '```' → logprob: -11.817255020141602
    7. '212' → logprob: -12.254755020141602
    8. '_' → logprob: -12.317255020141602
    9. '21' → logprob: -12.504755020141602
    10. '210' → logprob: -12.567255020141602

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759672522544861
    2. ' =' → logprob: -0.8259672522544861
    3. ' <<=' → logprob: -10.950966835021973
    4. ' ' → logprob: -12.200966835021973
    5. ',' → logprob: -13.825966835021973
    6. '*=' → logprob: -14.200966835021973
    7. ' *=' → logprob: -14.200966835021973
    8. '   ' → logprob: -14.575966835021973
    9. ')' → logprob: -14.575966835021973
    10. '0' → logprob: -14.950966835021973

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '۰' → logprob: -18.00002670288086
    4. '000' → logprob: -18.37502670288086
    5. '   ' → logprob: -18.50002670288086
    6. '00' → logprob: -18.62502670288086
    7. '```' → logprob: -18.87502670288086
    8. '  ' → logprob: -19.87502670288086
    9. '<|end|>' → logprob: -20.18752670288086
    10. 'm' → logprob: -20.75002670288086

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۰' → logprob: -16.750003814697266
    4. '00' → logprob: -16.875003814697266
    5. '000' → logprob: -17.000003814697266
    6. '```' → logprob: -17.937503814697266
    7. 'm' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.875003814697266
    9. '1' → logprob: -18.937503814697266
    10. '٠' → logprob: -19.000003814697266

Token 134: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02244558185338974
    2. '   ' → logprob: -3.8974456787109375
    3. 'else' → logprob: -7.5224456787109375
    4. ' else' → logprob: -7.6474456787109375
    5. '
' → logprob: -8.022445678710938
    6. '<|end|>' → logprob: -8.272445678710938
    7. ',' → logprob: -9.647445678710938
    8. 'elif' → logprob: -9.772445678710938
    9. '    
' → logprob: -10.147445678710938
    10. '        
' → logprob: -10.397445678710938

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035123806446790695
    2. ' else' → logprob: -3.535123825073242
    3. 'else' → logprob: -5.410123825073242
    4. '   ' → logprob: -7.785123825073242
    5. '<|end|>' → logprob: -8.285123825073242
    6. ',' → logprob: -9.535123825073242
    7. 'elif' → logprob: -9.660123825073242
    8. ' elif' → logprob: -10.535123825073242
    9. ')' → logprob: -11.410123825073242
    10. '        
' → logprob: -11.910123825073242

Token 136: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.21786732971668243
    2. '       ' → logprob: -2.217867374420166
    3. 'else' (adapté à ' else') → logprob: -2.467867374420166
    4. '   ' → logprob: -6.217867374420166
    5. '	else' → logprob: -9.092866897583008
    6. 'm' → logprob: -12.092866897583008
    7. ' m' → logprob: -12.092866897583008
    8. '    ' → logprob: -12.217866897583008
    9. '      ' → logprob: -12.467866897583008
    10. '     ' → logprob: -12.467866897583008

Token 137: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17509295046329498
    2. ':' → logprob: -2.550092935562134
    3. '           ' → logprob: -2.550092935562134
    4. '       ' → logprob: -5.675093173980713
    5. ' m' → logprob: -7.925093173980713
    6. '   ' → logprob: -8.800092697143555
    7. ' :
' → logprob: -9.050092697143555
    8. '
' → logprob: -9.175092697143555
    9. 'm' → logprob: -9.300092697143555
    10. ':

' → logprob: -9.675092697143555

Token 138: '           ' (ID: 352)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.12987148761749268
    2. '       ' → logprob: -2.504871368408203
    3. '           ' → logprob: -3.879871368408203
    4. 'm' → logprob: -4.004871368408203
    5. '   ' → logprob: -7.004871368408203
    6. ' ' → logprob: -9.629871368408203
    7. '               ' → logprob: -10.504871368408203
    8. '        ' → logprob: -10.504871368408203
    9. '    ' → logprob: -10.879871368408203
    10. '1' → logprob: -10.879871368408203

Token 139: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.05490383505821228
    2. 'm' (adapté à ' m') → logprob: -2.929903745651245
    3. '           ' → logprob: -10.929903984069824
    4. '   ' → logprob: -13.554903984069824
    5. ' ' → logprob: -14.554903984069824
    6. '	m' → logprob: -14.554903984069824
    7. '       ' → logprob: -14.929903984069824
    8. '(m' → logprob: -15.679903984069824
    9. '```' → logprob: -15.804903984069824
    10. '
' → logprob: -15.929903984069824

Token 140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -15.250001907348633
    3. '```' → logprob: -15.250001907348633
    4. '۲' → logprob: -15.437501907348633
    5. '   ' → logprob: -15.562501907348633
    6. '
' → logprob: -15.875001907348633
    7. '1' → logprob: -16.250001907348633
    8. '₂' → logprob: -16.500001907348633
    9. '_' → logprob: -16.562501907348633
    10. ' >>=' → logprob: -16.687501907348633

Token 141: ' >>=' (ID: 81952)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6150304675102234
    2. '>>' → logprob: -0.9900304675102234
    3. ' >>=' → logprob: -3.115030527114868
    4. ' <<=' → logprob: -3.490030527114868
    5. '<<' → logprob: -4.365030288696289
    6. ' =' → logprob: -9.240030288696289
    7. '>' → logprob: -9.365030288696289
    8. '*=' → logprob: -11.240030288696289
    9. '+=' → logprob: -12.865030288696289
    10. '≫' → logprob: -12.865030288696289

Token 142: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.003600071184337139
    2. ' shift' → logprob: -5.628600120544434
    3. ' ' → logprob: -18.128599166870117
    4. '```' → logprob: -18.503599166870117
    5. 'sh' → logprob: -18.753599166870117
    6. '   ' → logprob: -19.128599166870117
    7. 'step' → logprob: -19.128599166870117
    8. '.shift' → logprob: -19.253599166870117
    9. 'hift' → logprob: -19.753599166870117
    10. '_shift' → logprob: -20.003599166870117

Token 143: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046892374753952026
    2. '<|end|>' → logprob: -3.1718924045562744
    3. '<|end|>' → logprob: -6.421892166137695
    4. 'elif' → logprob: -7.421892166137695
    5. '    
' → logprob: -7.546892166137695
    6. '       ' → logprob: -8.171892166137695
    7. '
' → logprob: -8.671892166137695
    8. 'else' → logprob: -9.171892166137695
    9. '\n' → logprob: -9.296892166137695
    10. '  
' → logprob: -9.671892166137695

Token 144: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07726043462753296
    2. '<|end|>' → logprob: -2.7022604942321777
    3. '<|end|>' → logprob: -6.077260494232178
    4. '\n' → logprob: -6.452260494232178
    5. '
' → logprob: -6.702260494232178
    6. '       ' → logprob: -7.327260494232178
    7. '    
' → logprob: -7.327260494232178
    8. 'elif' → logprob: -8.45226001739502
    9. 'return' → logprob: -8.95226001739502
    10. 'else' → logprob: -9.07726001739502

Token 145: ' e' (ID: 319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010266187600791454
    2. 'elif' → logprob: -4.885266304016113
    3. '       ' → logprob: -7.260266304016113
    4. 'else' → logprob: -7.510266304016113
    5. '    
' → logprob: -7.760266304016113
    6. ' elif' → logprob: -8.385266304016113
    7. ' else' → logprob: -8.760266304016113
    8. '\n' → logprob: -8.885266304016113
    9. '
' → logprob: -9.135266304016113
    10. 'e' (adapté à ' e') → logprob: -9.135266304016113

Token 146: ' =' (ID: 314)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.144734188914299
    2. '1' → logprob: -2.0197341442108154
    3. '=' → logprob: -6.2697343826293945
    4. ' =' → logprob: -9.394734382629395
    5. ',' → logprob: -11.019734382629395
    6. ' ' → logprob: -11.144734382629395
    7. ')' → logprob: -11.269734382629395
    8. '```' → logprob: -11.894734382629395
    9. 'e' → logprob: -12.269734382629395
    10. '_' → logprob: -12.519734382629395

Token 147: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.005233763717114925
    2. ' e' → logprob: -5.2552337646484375
    3. '   ' → logprob: -19.130233764648438
    4. '	e' → logprob: -19.380233764648438
    5. ' ' → logprob: -22.880233764648438
    6. ')e' → logprob: -23.130233764648438
    7. '_e' → logprob: -23.380233764648438
    8. 'ｅ' → logprob: -24.505233764648438
    9. '  ' → logprob: -24.630233764648438
    10. '=e' → logprob: -24.880233764648438

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '<|end|>' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.937500953674316
    4. '2' → logprob: -16.312501907348633
    5. '１' → logprob: -16.625001907348633
    6. '[' → logprob: -16.687501907348633
    7. '۱' → logprob: -17.125001907348633
    8. '१' → logprob: -17.125001907348633
    9. '```' → logprob: -17.187501907348633
    10. '<|end|>' → logprob: -17.312501907348633

Token 149: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01201672200113535
    2. 'elif' → logprob: -5.512016773223877
    3. ' else' → logprob: -5.762016773223877
    4. 'else' → logprob: -5.762016773223877
    5. '<|end|>' → logprob: -6.887016773223877
    6. ' elif' → logprob: -7.762016773223877
    7. '	elif' → logprob: -9.512016296386719
    8. '	else' → logprob: -10.137016296386719
    9. '<|end|>' → logprob: -11.137016296386719
    10. ',' → logprob: -11.762016296386719

Token 150: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005263760685920715
    2. 'else' → logprob: -5.755263805389404
    3. ' else' → logprob: -6.880263805389404
    4. 'elif' → logprob: -7.380263805389404
    5. '<|end|>' → logprob: -8.005263328552246
    6. ' elif' → logprob: -10.380263328552246
    7. '	else' → logprob: -10.630263328552246
    8. '	elif' → logprob: -11.005263328552246
    9. '```' → logprob: -12.130263328552246
    10. ')' → logprob: -12.255263328552246

Token 151: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.01604175940155983
    2. ' m' → logprob: -4.6410417556762695
    3. '   ' → logprob: -5.1410417556762695
    4. 'elif' → logprob: -9.14104175567627
    5. ' ' → logprob: -9.26604175567627
    6. 'else' → logprob: -9.51604175567627
    7. 'e' → logprob: -10.26604175567627
    8. '    ' → logprob: -10.64104175567627
    9. ' else' → logprob: -11.26604175567627
    10. '  ' → logprob: -11.26604175567627

Token 152: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3196497857570648
    2. '=' → logprob: -1.3196498155593872
    3. ' =' → logprob: -5.069649696350098
    4. '2' → logprob: -9.819649696350098
    5. 's' → logprob: -12.194649696350098
    6. ' ' → logprob: -12.319649696350098
    7. ',' → logprob: -12.319649696350098
    8. '>' → logprob: -13.069649696350098
    9. '=

' → logprob: -13.444649696350098
    10. '<|end|>' → logprob: -13.444649696350098

Token 153: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0046310266479849815
    2. ' m' → logprob: -5.379631042480469
    3. '   ' → logprob: -11.629631042480469
    4. ' ' → logprob: -14.129631042480469
    5. '  ' → logprob: -15.004631042480469
    6. ' (' → logprob: -15.129631042480469
    7. '(m' → logprob: -15.254631042480469
    8. '(' → logprob: -15.879631042480469
    9. '	m' → logprob: -16.00463104248047
    10. '       ' → logprob: -17.19213104248047

Token 154: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25229260325431824
    2. ' +' → logprob: -1.5022926330566406
    3. '1' → logprob: -8.12729263305664
    4. '+m' → logprob: -10.37729263305664
    5. ' ' → logprob: -11.00229263305664
    6. '+
' → logprob: -11.62729263305664
    7. ' plus' → logprob: -13.00229263305664
    8. '|' → logprob: -13.12729263305664
    9. ' +
' → logprob: -13.25229263305664
    10. '<|end|>' → logprob: -14.00229263305664

Token 155: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6865354180335999
    2. ' +' → logprob: -1.061535358428955
    3. '   ' → logprob: -2.186535358428955
    4. 'elif' → logprob: -4.311535358428955
    5. ' else' → logprob: -4.561535358428955
    6. 'else' → logprob: -4.686535358428955
    7. ' elif' → logprob: -5.811535358428955
    8. ' +
' → logprob: -6.936535358428955
    9. '<|end|>' → logprob: -7.311535358428955
    10. '+
' → logprob: -8.061535835266113

Token 156: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.029753616079688072
    2. ' m' → logprob: -3.5297536849975586
    3. '(m' → logprob: -13.029753684997559
    4. ' (' → logprob: -14.779753684997559
    5. '(' → logprob: -15.029753684997559
    6. '	m' → logprob: -15.904753684997559
    7. '   ' → logprob: -16.529752731323242
    8. ' ' → logprob: -16.904752731323242
    9. '       ' → logprob: -18.154752731323242
    10. '<|end|>' → logprob: -18.654752731323242

Token 157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '<|end|>' → logprob: -14.000000953674316
    3. ' ' → logprob: -16.250001907348633
    4. '۲' → logprob: -16.500001907348633
    5. '₂' → logprob: -17.000001907348633
    6. 'm' → logprob: -17.500001907348633
    7. '```' → logprob: -17.875001907348633
    8. '...' → logprob: -18.375001907348633
    9. '２' → logprob: -18.562501907348633
    10. 's' → logprob: -18.812501907348633

Token 158: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004927450208924711
    2. 'elif' → logprob: -8.375493049621582
    3. 'else' → logprob: -9.125493049621582
    4. ' else' → logprob: -9.625493049621582
    5. '<|end|>' → logprob: -9.750493049621582
    6. '	elif' → logprob: -11.625493049621582
    7. ' elif' → logprob: -11.750493049621582
    8. '	else' → logprob: -12.250493049621582
    9. '<|end|>' → logprob: -13.375493049621582
    10. '    
' → logprob: -13.750493049621582

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002524649491533637
    2. 'elif' → logprob: -6.3775248527526855
    3. 'else' → logprob: -7.3775248527526855
    4. ' else' → logprob: -9.252524375915527
    5. ' elif' → logprob: -10.127524375915527
    6. '<|end|>' → logprob: -10.127524375915527
    7. '	elif' → logprob: -11.752524375915527
    8. '```' → logprob: -12.502524375915527
    9. '       ' → logprob: -13.127524375915527
    10. '<|end|>' → logprob: -13.627524375915527

Token 160: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3694860637187958
    2. '   ' → logprob: -1.7444860935211182
    3. ' else' → logprob: -2.369486093521118
    4. 'elif' → logprob: -3.244486093521118
    5. ' elif' → logprob: -6.869485855102539
    6. '	else' → logprob: -7.994485855102539
    7. '	elif' → logprob: -9.744485855102539
    8. 'e' → logprob: -9.744485855102539
    9. ')' → logprob: -10.494485855102539
    10. '    
' → logprob: -10.619485855102539

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2371397167444229
    2. ':
' → logprob: -1.7371397018432617
    3. '       ' → logprob: -3.7371397018432617
    4. '   ' → logprob: -5.112139701843262
    5. ' if' → logprob: -6.362139701843262
    6. '{' → logprob: -6.362139701843262
    7. 'if' → logprob: -7.362139701843262
    8. '{
' → logprob: -8.237139701843262
    9. ' :
' → logprob: -8.737139701843262
    10. ' :' → logprob: -8.862139701843262

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2514374852180481
    2. ' shift' → logprob: -1.8764374256134033
    3. '   ' → logprob: -2.8764374256134033
    4. 'shift' → logprob: -4.376437664031982
    5. '    ' → logprob: -8.876437187194824
    6. ' ' → logprob: -10.501437187194824
    7. '```' → logprob: -10.626437187194824
    8. '{
' → logprob: -11.376437187194824
    9. '           ' → logprob: -11.876437187194824
    10. '
' → logprob: -12.001437187194824

Token 163: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' (adapté à ' shift') → logprob: -0.20166943967342377
    2. ' shift' → logprob: -1.701669454574585
    3. '   ' → logprob: -8.326669692993164
    4. '       ' → logprob: -11.451669692993164
    5. ' ' → logprob: -14.326669692993164
    6. 'e' → logprob: -14.701669692993164
    7. '    ' → logprob: -14.701669692993164
    8. '```' → logprob: -14.701669692993164
    9. ' e' → logprob: -14.951669692993164
    10. '.shift' → logprob: -15.451669692993164

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022422909736633
    2. '=' → logprob: -1.910224199295044
    3. 's' → logprob: -17.66022491455078
    4. ' ' → logprob: -17.66022491455078
    5. '   ' → logprob: -17.91022491455078
    6. '=e' → logprob: -19.03522491455078
    7. '_' → logprob: -19.78522491455078
    8. ':' → logprob: -19.91022491455078
    9. '＝' → logprob: -19.91022491455078
    10. '_=' → logprob: -20.03522491455078

Token 165: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3868725001811981
    2. ' e' → logprob: -1.1368725299835205
    3. '(e' → logprob: -14.011872291564941
    4. '   ' → logprob: -15.261872291564941
    5. ' (' → logprob: -15.886872291564941
    6. ' ' → logprob: -16.261873245239258
    7. '(' → logprob: -17.011873245239258
    8. '	e' → logprob: -17.136873245239258
    9. '`' → logprob: -17.761873245239258
    10. ')e' → logprob: -18.261873245239258

Token 166: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -16.0
    3. ' ' → logprob: -16.1875
    4. ' -' → logprob: -16.1875
    5. '_' → logprob: -16.375
    6. 'e' → logprob: -16.5625
    7. '1' → logprob: -16.875
    8. '-' → logprob: -17.25
    9. '```' → logprob: -17.4375
    10. '
' → logprob: -17.5625

Token 167: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0788901224732399
    2. ' -' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.203889846801758
    4. '<|end|>' → logprob: -16.703889846801758
    5. '—' → logprob: -17.203889846801758
    6. 'e' → logprob: -17.203889846801758
    7. '-e' → logprob: -17.453889846801758
    8. '-=' → logprob: -17.953889846801758
    9. '<|end|>' → logprob: -18.203889846801758
    10. '–' → logprob: -18.328889846801758

Token 168: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.029752103611826897
    2. ' e' → logprob: -3.529752016067505
    3. '<|end|>' → logprob: -13.654751777648926
    4. '1' → logprob: -14.904751777648926
    5. '	e' → logprob: -17.029752731323242
    6. ' ' → logprob: -17.529752731323242
    7. ')e' → logprob: -18.904752731323242
    8. '2' → logprob: -19.404752731323242
    9. '<|end|>' → logprob: -19.529752731323242
    10. ')' → logprob: -19.529752731323242

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '2' → logprob: -14.500001907348633
    3. 'e' → logprob: -15.625001907348633
    4. '```' → logprob: -15.750001907348633
    5. '<|end|>' → logprob: -15.875001907348633
    6. ' ' → logprob: -16.750001907348633
    7. '۱' → logprob: -17.062501907348633
    8. '...' → logprob: -17.312501907348633
    9. '   ' → logprob: -17.375001907348633
    10. 'shift' → logprob: -17.437501907348633

Token 170: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030773833394050598
    2. 'if' → logprob: -3.655773878097534
    3. ' if' → logprob: -5.780773639678955
    4. '   ' → logprob: -7.530773639678955
    5. '
' → logprob: -8.155774116516113
    6. 'm' → logprob: -8.405774116516113
    7. '<|end|>' → logprob: -8.405774116516113
    8. '	if' → logprob: -10.405774116516113
    9. ',' → logprob: -11.155774116516113
    10. ')' → logprob: -11.780774116516113

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6956244707107544
    2. 'if' → logprob: -0.6956244707107544
    3. ' if' → logprob: -6.320624351501465
    4. '   ' → logprob: -7.320624351501465
    5. '           ' → logprob: -12.070624351501465
    6. '```' → logprob: -12.695624351501465
    7. '	if' → logprob: -12.945624351501465
    8. ' ' → logprob: -13.820624351501465
    9. 'If' → logprob: -15.070624351501465
    10. 'm' → logprob: -15.695624351501465

Token 172: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008333713747560978
    2. '       ' → logprob: -5.258333683013916
    3. ' if' → logprob: -6.258333683013916
    4. 'm' → logprob: -6.758333683013916
    5. '   ' → logprob: -11.758334159851074
    6. '```' → logprob: -12.508334159851074
    7. '           ' → logprob: -13.508334159851074
    8. 'If' → logprob: -13.508334159851074
    9. ' m' → logprob: -13.758334159851074
    10. ' ' → logprob: -13.883334159851074

Token 173: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.1427077054977417
    2. 'shift' → logprob: -2.0177078247070312
    3. 'e' → logprob: -10.517707824707031
    4. ' e' → logprob: -12.517707824707031
    5. '.shift' → logprob: -14.392707824707031
    6. 'm' → logprob: -14.517707824707031
    7. 'sh' → logprob: -16.26770782470703
    8. ' ' → logprob: -16.39270782470703
    9. '#' → logprob: -16.64270782470703
    10. '_shift' → logprob: -16.76770782470703

Token 174: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0015031944494694471
    2. '>' → logprob: -6.501502990722656
    3. ' ' → logprob: -14.876502990722656
    4. ' ' → logprob: -15.251502990722656
    5. ':' → logprob: -16.626502990722656
    6. '   ' → logprob: -16.876502990722656
    7. ' >
' → logprob: -17.376502990722656
    8. ' >

' → logprob: -18.126502990722656
    9. ' >=' → logprob: -18.376502990722656
    10. '```' → logprob: -18.501502990722656

Token 175: ' ' (ID: 220)
  Prédit: '52'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -0.008628997951745987
    2. ' ' → logprob: -4.758628845214844
    3. '53' → logprob: -12.008628845214844
    4. '<|end|>' → logprob: -12.008628845214844
    5. '   ' → logprob: -14.571128845214844
    6. '  ' → logprob: -14.696128845214844
    7. '54' → logprob: -15.446128845214844
    8. 's' → logprob: -16.071128845214844
    9. '51' → logprob: -16.321128845214844

Token 176: '52' (ID: 6283)
  Prédit: '52'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -2.2842308680992573e-05
    2. ' ' → logprob: -10.750022888183594
    3. '53' → logprob: -13.750022888183594
    4. '51' → logprob: -15.875022888183594
    5. '<|end|>' → logprob: -16.500022888183594
    6. '50' → logprob: -16.875022888183594
    7. '54' → logprob: -17.250022888183594
    8. '   ' → logprob: -18.000022888183594
    9. '
' → logprob: -18.062522888183594
    10. '5' → logprob: -18.187522888183594

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08750613033771515
    2. ':
' → logprob: -3.087506055831909
    3. '           ' → logprob: -3.337506055831909
    4. '<|end|>' → logprob: -6.587506294250488
    5. '       ' → logprob: -7.587506294250488
    6. ',' → logprob: -8.212506294250488
    7. '):
' → logprob: -8.837506294250488
    8. ')' → logprob: -9.712506294250488
    9. '):' → logprob: -10.087506294250488
    10. '          ' → logprob: -10.212506294250488

Token 178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09437739104032516
    2. 'm' → logprob: -2.469377279281616
    3. ' m' → logprob: -5.344377517700195
    4. '       ' → logprob: -7.594377517700195
    5. '          ' → logprob: -10.094377517700195
    6. '   ' → logprob: -10.219377517700195
    7. '#' → logprob: -10.969377517700195
    8. ' ' → logprob: -11.594377517700195
    9. '         ' → logprob: -11.594377517700195
    10. ',' → logprob: -11.844377517700195

Token 179: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.454939603805542
    2. '           ' → logprob: -1.329939603805542
    3. ' m' → logprob: -2.329939603805542
    4. '       ' → logprob: -5.829939842224121
    5. '#' → logprob: -8.454939842224121
    6. '   ' → logprob: -9.079939842224121
    7. ' ' → logprob: -9.204939842224121
    8. '```' → logprob: -9.454939842224121
    9. '	m' → logprob: -10.079939842224121
    10. '          ' → logprob: -10.204939842224121

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.9728669738397e-05
    2. '=' → logprob: -9.500100135803223
    3. ' =' → logprob: -11.750100135803223
    4. '   ' → logprob: -12.000100135803223
    5. '2' → logprob: -12.500100135803223
    6. 'm' → logprob: -13.500100135803223
    7. ' ' → logprob: -13.812600135803223
    8. '' → logprob: -13.875100135803223
    9. '```' → logprob: -14.812600135803223
    10. '_' → logprob: -15.125100135803223

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141489803791046
    2. ' =' → logprob: -1.701414942741394
    3. '<|end|>' → logprob: -14.326415061950684
    4. ' ' → logprob: -14.576415061950684
    5. ')' → logprob: -15.826415061950684
    6. '=
' → logprob: -16.701414108276367
    7. '   ' → logprob: -16.826414108276367
    8. '```' → logprob: -16.951414108276367
    9. ',' → logprob: -17.451414108276367
    10. ' <<=' → logprob: -17.826414108276367

Token 182: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620353225618601
    2. ' ' → logprob: -5.379620552062988
    3. '   ' → logprob: -16.879619598388672
    4. '```' → logprob: -18.379619598388672
    5. '<|end|>' → logprob: -18.504619598388672
    6. '۰' → logprob: -18.629619598388672
    7. '  ' → logprob: -19.567119598388672
    8. '00' → logprob: -20.254619598388672
    9. '000' → logprob: -20.254619598388672
    10. '    ' → logprob: -20.754619598388672

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.25000762939453
    4. '00' → logprob: -19.50000762939453
    5. '000' → logprob: -20.25000762939453
    6. '۰' → logprob: -20.37500762939453
    7. '```' → logprob: -21.00000762939453
    8. '<|end|>' → logprob: -21.50000762939453
    9. '  ' → logprob: -21.62500762939453
    10. '=' → logprob: -22.00000762939453

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030936390976421535
    2. 'else' → logprob: -8.375308990478516
    3. ' else' → logprob: -9.500308990478516
    4. '<|end|>' → logprob: -13.250308990478516
    5. '   ' → logprob: -14.000308990478516
    6. '```' → logprob: -14.125308990478516
    7. ',' → logprob: -16.125308990478516
    8. '           ' → logprob: -16.125308990478516
    9. '      ' → logprob: -16.375308990478516
    10. ')' → logprob: -16.500308990478516

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008249913225881755
    2. 'else' → logprob: -7.500824928283691
    3. ' else' → logprob: -8.250824928283691
    4. '   ' → logprob: -12.375824928283691
    5. '<|end|>' → logprob: -12.625824928283691
    6. '```' → logprob: -13.375824928283691
    7. '
' → logprob: -14.000824928283691
    8. '           ' → logprob: -15.250824928283691
    9. '      ' → logprob: -15.500824928283691
    10. ',' → logprob: -16.000825881958008

Token 186: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5281832218170166
    2. 'else' (adapté à ' else') → logprob: -1.2781832218170166
    3. ' else' → logprob: -2.0281832218170166
    4. '   ' → logprob: -9.153182983398438
    5. '           ' → logprob: -9.528182983398438
    6. '```' → logprob: -11.528182983398438
    7. '      ' → logprob: -12.403182983398438
    8. '	else' → logprob: -12.653182983398438
    9. '     ' → logprob: -12.778182983398438
    10. '    ' → logprob: -13.403182983398438

Token 187: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012894894927740097
    2. ':' → logprob: -4.512895107269287
    3. ':
' → logprob: -6.512895107269287
    4. '       ' → logprob: -8.512894630432129
    5. '          ' → logprob: -9.512894630432129
    6. '         ' → logprob: -10.637894630432129
    7. '   ' → logprob: -10.887894630432129
    8. ',' → logprob: -11.637894630432129
    9. '		' → logprob: -11.887894630432129
    10. '               ' → logprob: -12.387894630432129

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010953613556921482
    2. 'm' → logprob: -4.885953426361084
    3. '       ' → logprob: -6.135953426361084
    4. ' m' → logprob: -6.885953426361084
    5. '   ' → logprob: -8.885953903198242
    6. '          ' → logprob: -12.010953903198242
    7. '         ' → logprob: -12.635953903198242
    8. '               ' → logprob: -13.260953903198242
    9. ' ' → logprob: -13.260953903198242
    10. '        ' → logprob: -13.510953903198242

Token 189: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.0069548883475363255
    2. ' m' → logprob: -5.006954669952393
    3. '           ' → logprob: -8.38195514678955
    4. '   ' → logprob: -11.88195514678955
    5. '       ' → logprob: -12.75695514678955
    6. '	m' → logprob: -15.63195514678955
    7. '  ' → logprob: -16.006954193115234
    8. '          ' → logprob: -16.131954193115234
    9. ' ' → logprob: -16.256954193115234
    10. '               ' → logprob: -16.631954193115234

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00535436300560832
    2. ' >>=' → logprob: -5.255354404449463
    3. '>>' → logprob: -9.130353927612305
    4. ' ' → logprob: -12.255353927612305
    5. ' <<=' → logprob: -12.380353927612305
    6. '   ' → logprob: -14.005353927612305
    7. ' >>' → logprob: -14.130353927612305
    8. '_' → logprob: -14.505353927612305
    9. '```' → logprob: -15.505353927612305
    10. '[' → logprob: -15.755353927612305

Token 191: ' >>=' (ID: 81952)
  Prédit: ' >>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>=' → logprob: -0.10021023452281952
    2. '>>' → logprob: -2.350210189819336
    3. '=' → logprob: -13.600210189819336
    4. ' ' → logprob: -14.725210189819336
    5. ' >>' → logprob: -14.975210189819336
    6. '>>&' → logprob: -15.100210189819336
    7. '       ' → logprob: -15.350210189819336
    8. '>' → logprob: -15.475210189819336
    9. '   ' → logprob: -15.600210189819336
    10. ' <<=' → logprob: -15.850210189819336

Token 192: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.25192946195602417
    2. ' shift' → logprob: -1.501929521560669
    3. ' ' → logprob: -16.001930236816406
    4. 'sh' → logprob: -16.626930236816406
    5. 'space' → logprob: -16.751930236816406
    6. 'split' → logprob: -17.376930236816406
    7. '.shift' → logprob: -17.501930236816406
    8. '```' → logprob: -17.626930236816406
    9. '   ' → logprob: -17.876930236816406
    10. 'step' → logprob: -17.876930236816406

Token 193: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003049604594707489
    2. 'e' → logprob: -6.253049373626709
    3. '   ' → logprob: -7.128049373626709
    4. ' e' → logprob: -8.128049850463867
    5. '           ' → logprob: -11.878049850463867
    6. ',' → logprob: -12.128049850463867
    7. '<|end|>' → logprob: -13.128049850463867
    8. '
' → logprob: -13.628049850463867
    9. '```' → logprob: -13.628049850463867
    10. '>' → logprob: -14.003049850463867

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01620469056069851
    2. 'e' → logprob: -4.641204833984375
    3. ' e' → logprob: -5.641204833984375
    4. '   ' → logprob: -5.891204833984375
    5. '           ' → logprob: -10.266204833984375
    6. '
' → logprob: -10.391204833984375
    7. ' ' → logprob: -11.016204833984375
    8. '```' → logprob: -11.641204833984375
    9. ',' → logprob: -12.266204833984375
    10. '        
' → logprob: -12.891204833984375

Token 195: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.014545049518346786
    2. ' e' → logprob: -4.26454496383667
    3. '   ' → logprob: -7.88954496383667
    4. '
' → logprob: -12.514545440673828
    5. '       ' → logprob: -13.514545440673828
    6. '	e' → logprob: -14.639545440673828
    7. '    ' → logprob: -14.639545440673828
    8. ' ' → logprob: -15.139545440673828
    9. '  ' → logprob: -15.639545440673828
    10. '```' → logprob: -16.389545440673828

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14337266981601715
    2. '=' → logprob: -2.0183727741241455
    3. '2' → logprob: -7.393372535705566
    4. '=e' → logprob: -10.143372535705566
    5. 'e' → logprob: -10.643372535705566
    6. ',' → logprob: -11.768372535705566
    7. ' ' → logprob: -12.768372535705566
    8. ' e' → logprob: -13.018372535705566
    9. '   ' → logprob: -13.768372535705566
    10. '=
' → logprob: -13.893372535705566

Token 197: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.020542005077004433
    2. ' e' → logprob: -3.8955419063568115
    3. '   ' → logprob: -15.89554214477539
    4. '	e' → logprob: -17.52054214477539
    5. ' ' → logprob: -17.89554214477539
    6. '_e' → logprob: -19.27054214477539
    7. '#' → logprob: -19.70804214477539
    8. '[e' → logprob: -20.02054214477539
    9. '       ' → logprob: -20.02054214477539
    10. ')e' → logprob: -20.02054214477539

Token 198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -12.250007629394531
    3. '   ' → logprob: -14.000007629394531
    4. '۲' → logprob: -15.437507629394531
    5. '₂' → logprob: -15.500007629394531
    6. '```' → logprob: -15.625007629394531
    7. 'else' → logprob: -15.687507629394531
    8. '<|end|>' → logprob: -15.937507629394531
    9. '[' → logprob: -16.00000762939453
    10. 'e' → logprob: -16.06250762939453

Token 199: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5397533774375916
    2. 'm' → logprob: -1.2897534370422363
    3. '       ' → logprob: -2.6647534370422363
    4. '
' → logprob: -3.1647534370422363
    5. ' m' → logprob: -3.6647534370422363
    6. '	m' → logprob: -5.914753437042236
    7. '<|end|>' → logprob: -8.039752960205078
    8. '  ' → logprob: -8.414752960205078
    9. '    ' → logprob: -8.539752960205078
    10. ' ' → logprob: -8.664752960205078

Token 200: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10113033652305603
    2. '       ' → logprob: -2.726130247116089
    3. '	m' → logprob: -4.476130485534668
    4. 'm' → logprob: -4.601130485534668
    5. ' m' → logprob: -4.851130485534668
    6. '
' → logprob: -8.101130485534668
    7. '    ' → logprob: -8.351130485534668
    8. ',' → logprob: -8.726130485534668
    9. '```' → logprob: -8.726130485534668
    10. ' ' → logprob: -8.976130485534668

Token 201: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.06233210489153862
    2. ' m' → logprob: -2.8123321533203125
    3. '   ' → logprob: -7.9373321533203125
    4. '    ' → logprob: -13.187332153320312
    5. '  ' → logprob: -13.437332153320312
    6. '       ' → logprob: -13.562332153320312
    7. ' ' → logprob: -14.062332153320312
    8. '	m' → logprob: -14.187332153320312
    9. '
' → logprob: -15.187332153320312
    10. '```' → logprob: -15.437332153320312

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2025081217288971
    2. '=' → logprob: -1.7025080919265747
    3. ' +=' → logprob: -6.952507972717285
    4. '+=' → logprob: -9.577507972717285
    5. '1' → logprob: -10.452507972717285
    6. ' ' → logprob: -10.577507972717285
    7. ' +' → logprob: -12.327507972717285
    8. '+' → logprob: -13.077507972717285
    9. '   ' → logprob: -13.327507972717285
    10. 's' → logprob: -14.077507972717285

Token 203: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10021066665649414
    2. ' m' → logprob: -2.350210666656494
    3. '   ' → logprob: -12.850210189819336
    4. '(m' → logprob: -14.725210189819336
    5. '	m' → logprob: -14.975210189819336
    6. ' ' → logprob: -15.475210189819336
    7. '<|end|>' → logprob: -15.475210189819336
    8. '  ' → logprob: -16.225210189819336
    9. ' (' → logprob: -16.850210189819336
    10. '    ' → logprob: -17.725210189819336

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01393195241689682
    2. '+' → logprob: -4.388931751251221
    3. ' +' → logprob: -6.638931751251221
    4. '+m' → logprob: -9.388932228088379
    5. ' ' → logprob: -11.638932228088379
    6. '_' → logprob: -11.638932228088379
    7. '+
' → logprob: -12.888932228088379
    8. 'm' → logprob: -13.263932228088379
    9. '   ' → logprob: -13.888932228088379
    10. '```' → logprob: -14.013932228088379

Token 205: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5797268152236938
    2. '+' → logprob: -0.8297268152236938
    3. '+m' → logprob: -5.579726696014404
    4. '+
' → logprob: -12.454727172851562
    5. ' ' → logprob: -14.079727172851562
    6. ' +
' → logprob: -14.454727172851562
    7. '+r' → logprob: -14.954727172851562
    8. 'm' → logprob: -15.204727172851562
    9. '+

' → logprob: -15.704727172851562
    10. ' ' → logprob: -15.829727172851562

Token 206: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005233882926404476
    2. ' m' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.505233764648438
    4. '	m' → logprob: -17.755233764648438
    5. '<|end|>' → logprob: -18.880233764648438
    6. '   ' → logprob: -20.255233764648438
    7. '
' → logprob: -20.380233764648438
    8. '_m' → logprob: -21.255233764648438
    9. ' ' → logprob: -21.630233764648438
    10. '  ' → logprob: -21.880233764648438

Token 207: '2' (ID: 17)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8358147740364075
    2. '   ' → logprob: -0.9608147740364075
    3. '<|end|>' → logprob: -1.7108147144317627
    4. '    
' → logprob: -6.210814952850342
    5. '<|end|>' → logprob: -7.585814952850342
    6. ' if' → logprob: -8.585814476013184
    7. '  
' → logprob: -8.960814476013184
    8. ' 
' → logprob: -9.460814476013184
    9. '```' → logprob: -9.460814476013184
    10. '

' → logprob: -10.335814476013184

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13616643846035004
    2. '
' → logprob: -2.1361663341522217
    3. 'if' → logprob: -5.886166572570801
    4. '    
' → logprob: -6.136166572570801
    5. ' if' → logprob: -6.261166572570801
    6. '<|end|>' → logprob: -6.386166572570801
    7. '```' → logprob: -8.2611665725708
    8. '  
' → logprob: -8.7611665725708
    9. '#' → logprob: -9.5111665725708
    10. ' 
' → logprob: -9.8861665725708

Token 210: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3684499263763428
    2. ' while' → logprob: -1.4934499263763428
    3. ' if' → logprob: -3.6184499263763428
    4. '
' → logprob: -3.8684499263763428
    5. 'while' → logprob: -3.9934499263763428
    6. 'if' → logprob: -4.618450164794922
    7. '    
' → logprob: -5.993450164794922
    8. ' 
' → logprob: -6.493450164794922
    9. '#' (adapté à ' #') → logprob: -6.743450164794922
    10. '    ' → logprob: -7.368450164794922

Token 211: ' Normalize' (ID: 155762)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5026469230651855
    2. 'while' → logprob: -1.5026469230651855
    3. 'if' → logprob: -2.6276469230651855
    4. ' if' → logprob: -2.6276469230651855
    5. '#' → logprob: -4.2526469230651855
    6. '   ' → logprob: -4.8776469230651855
    7. ' #' → logprob: -5.7526469230651855
    8. 'normalize' → logprob: -7.3776469230651855
    9. 'Normalize' → logprob: -7.5026469230651855
    10. ' normalize' → logprob: -7.7526469230651855

Token 212: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3881770372390747
    2. '   ' → logprob: -1.2631770372390747
    3. 'while' → logprob: -3.263176918029785
    4. ' if' → logprob: -7.638176918029785
    5. 'if' → logprob: -9.513176918029785
    6. '
' → logprob: -9.513176918029785
    7. '	while' → logprob: -11.263176918029785
    8. '<|end|>' → logprob: -11.388176918029785
    9. '    
' → logprob: -11.638176918029785
    10. '    ' → logprob: -12.013176918029785

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38169220089912415
    2. ' while' → logprob: -1.3816921710968018
    3. 'while' → logprob: -2.7566921710968018
    4. ' if' → logprob: -6.256692409515381
    5. 'if' → logprob: -7.256692409515381
    6. '    
' → logprob: -12.131691932678223
    7. '
' → logprob: -12.256691932678223
    8. '```' → logprob: -13.006691932678223
    9. '	while' → logprob: -13.506691932678223
    10. '    ' → logprob: -14.006691932678223

Token 214: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4230101406574249
    2. ' while' → logprob: -1.1730101108551025
    3. '   ' → logprob: -3.6730101108551025
    4. 'if' (adapté à ' if') → logprob: -4.798010349273682
    5. ' if' → logprob: -6.298010349273682
    6. '```' → logprob: -12.548009872436523
    7. '
' → logprob: -13.298009872436523
    8. '    
' → logprob: -14.423009872436523
    9. '	while' → logprob: -14.548009872436523
    10. 'shift' → logprob: -14.923009872436523

Token 215: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.0486236996948719
    2. 'm' → logprob: -3.04862380027771
    3. ' (' → logprob: -11.173624038696289
    4. '(m' → logprob: -11.548624038696289
    5. '	m' → logprob: -12.548624038696289
    6. ' ' → logprob: -12.673624038696289
    7. '(' → logprob: -12.798624038696289
    8. '   ' → logprob: -13.173624038696289
    9. ' ' → logprob: -14.798624038696289
    10. '  ' → logprob: -15.048624038696289

Token 216: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.09242936968803406
    2. '>=' → logprob: -2.4674293994903564
    3. '.bit' → logprob: -6.967429161071777
    4. ' &' → logprob: -7.342429161071777
    5. ' ==' → logprob: -7.467429161071777
    6. '>' → logprob: -7.467429161071777
    7. ' >' → logprob: -8.467429161071777
    8. '==' → logprob: -8.717429161071777
    9. '>>' → logprob: -9.217429161071777
    10. '[' → logprob: -9.342429161071777

Token 217: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005175283877179027
    2. ' (' → logprob: -8.000517845153809
    3. '2' → logprob: -8.625517845153809
    4. '1' → logprob: -14.000517845153809
    5. '   ' → logprob: -14.000517845153809
    6. ' ' → logprob: -14.750517845153809
    7. '
' → logprob: -15.250517845153809
    8. '```' → logprob: -15.375517845153809
    9. '4' → logprob: -18.500516891479492
    10. '  ' → logprob: -19.000516891479492

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05811271071434021
    2. '(' → logprob: -3.058112621307373
    3. '2' → logprob: -4.683112621307373
    4. ' (' → logprob: -8.683113098144531
    5. ' ' → logprob: -10.433113098144531
    6. ')' → logprob: -10.933113098144531
    7. '   ' → logprob: -12.183113098144531
    8. '```' → logprob: -12.558113098144531
    9. '
' → logprob: -13.058113098144531
    10. ')(' → logprob: -14.058113098144531

Token 219: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.5759401321411133
    2. '<<' → logprob: -0.8259401321411133
    3. '<<(' → logprob: -15.200940132141113
    4. '<' → logprob: -15.825940132141113
    5. '1' → logprob: -16.325939178466797
    6. ')<<' → logprob: -16.325939178466797
    7. '<<<' → logprob: -16.950939178466797
    8. ' <<
' → logprob: -17.325939178466797
    9. ')' → logprob: -17.450939178466797
    10. ' ' → logprob: -18.075939178466797

Token 220: ' ' (ID: 220)
  Prédit: '53'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '53' → logprob: -2.522638169466518e-05
    2. '54' → logprob: -10.875024795532227
    3. '(' → logprob: -12.000024795532227
    4. '55' → logprob: -17.125024795532227
    5. '``' → logprob: -17.500024795532227
    6. '```' → logprob: -18.000024795532227
    7. '1' → logprob: -18.250024795532227
    8. '{
' → logprob: -18.375024795532227
    9. '52' → logprob: -18.375024795532227
    10. '
' → logprob: -18.750024795532227

Token 221: '53' (ID: 6798)
  Prédit: '53'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '53' → logprob: -4.0484450437361374e-05
    2. '54' → logprob: -10.125040054321289
    3. '(' → logprob: -15.625040054321289
    4. '``' → logprob: -16.50004005432129
    5. '55' → logprob: -17.25004005432129
    6. ' ' → logprob: -17.25004005432129
    7. '```' → logprob: -17.37504005432129
    8. '1' → logprob: -17.50004005432129
    9. '105' → logprob: -18.75004005432129
    10. '{' → logprob: -19.25004005432129

Token 222: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09156223386526108
    2. '):' → logprob: -2.466562271118164
    3. ')' → logprob: -6.091562271118164
    4. '):
' → logprob: -8.466562271118164
    5. '):

' → logprob: -9.591562271118164
    6. ' ):
' → logprob: -10.466562271118164
    7. '   ' → logprob: -11.091562271118164
    8. ')>>' → logprob: -11.966562271118164
    9. ')<<' → logprob: -12.091562271118164
    10. ' ):' → logprob: -12.591562271118164

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030187902972102165
    2. '   ' → logprob: -4.280188083648682
    3. '
' → logprob: -5.030188083648682
    4. ':
' → logprob: -5.655188083648682
    5. ' m' → logprob: -5.905188083648682
    6. ':' → logprob: -7.405188083648682
    7. '    ' → logprob: -7.655188083648682
    8. ' e' → logprob: -8.280187606811523
    9. ' 
' → logprob: -8.280187606811523
    10. '1' → logprob: -8.405187606811523

Token 224: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.1445940136909485
    2. 'm' (adapté à ' m') → logprob: -2.5195939540863037
    3. '
' → logprob: -3.6445939540863037
    4. '       ' → logprob: -3.7695939540863037
    5. '   ' → logprob: -5.769594192504883
    6. '```' → logprob: -7.019594192504883
    7. ' 
' → logprob: -8.144594192504883
    8. '        
' → logprob: -8.644594192504883
    9. '    ' → logprob: -9.519594192504883
    10. '``' → logprob: -9.644594192504883

Token 225: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.4253017008304596
    2. ' >>=' → logprob: -1.1753016710281372
    3. '=' → logprob: -3.3003017902374268
    4. '>' → logprob: -7.300301551818848
    5. '+=' → logprob: -10.300301551818848
    6. '   ' → logprob: -10.300301551818848
    7. '>=' → logprob: -10.550301551818848
    8. ' =' → logprob: -10.925301551818848
    9. '```' → logprob: -11.925301551818848
    10. ')' → logprob: -12.175301551818848

Token 226: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -16.250017166137695
    4. '53' → logprob: -17.375017166137695
    5. '   ' → logprob: -17.625017166137695
    6. 'one' → logprob: -19.250017166137695
    7. '01' → logprob: -19.500017166137695
    8. 'One' → logprob: -19.687517166137695
    9. '１' → logprob: -19.750017166137695
    10. ' ' → logprob: -19.750017166137695

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -16.75
    4. '   ' → logprob: -18.0
    5. '53' → logprob: -18.5
    6. '=' → logprob: -19.5
    7. '
' → logprob: -19.8125
    8. '0' → logprob: -19.875
    9. '01' → logprob: -20.0
    10. '`' → logprob: -20.0

Token 228: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3918877840042114
    2. '
' → logprob: -1.2668877840042114
    3. 'e' → logprob: -3.766887664794922
    4. '       ' → logprob: -4.016887664794922
    5. ' e' → logprob: -8.016887664794922
    6. '    
' → logprob: -8.141887664794922
    7. '<|end|>' → logprob: -8.766887664794922
    8. '  
' → logprob: -9.391887664794922
    9. ',' → logprob: -9.641887664794922
    10. ',e' → logprob: -9.641887664794922

Token 229: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7246811985969543
    2. 'e' → logprob: -0.8496811985969543
    3. '       ' → logprob: -2.5996811389923096
    4. '
' → logprob: -4.474681377410889
    5. ' e' → logprob: -6.724681377410889
    6. '+' → logprob: -7.724681377410889
    7. '```' → logprob: -8.84968090057373
    8. '    
' → logprob: -9.34968090057373
    9. '<|end|>' → logprob: -9.84968090057373
    10. ',e' → logprob: -10.09968090057373

Token 230: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -1.1472419600977446e-06
    2. ' e' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.625001907348633
    4. '
' → logprob: -21.375001907348633
    5. '	e' → logprob: -22.625001907348633
    6. '```' → logprob: -23.500001907348633
    7. '       ' → logprob: -24.125001907348633
    8. ''e' → logprob: -24.500001907348633
    9. '(e' → logprob: -24.500001907348633
    10. '_e' → logprob: -24.750001907348633

Token 231: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.062104370445013046
    2. ' +=' → logprob: -2.8121044635772705
    3. '=' → logprob: -9.437104225158691
    4. '+' → logprob: -9.812104225158691
    5. ']+=' → logprob: -13.937104225158691
    6. ' +' → logprob: -14.187104225158691
    7. ' =' → logprob: -14.687104225158691
    8. '   ' → logprob: -16.062105178833008
    9. '+='' → logprob: -17.187105178833008
    10. '```' → logprob: -17.812105178833008

Token 232: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.625019073486328
    4. '```' → logprob: -19.250019073486328
    5. '  ' → logprob: -19.875019073486328
    6. '0' → logprob: -20.250019073486328
    7. '
' → logprob: -20.312519073486328
    8. '۱' → logprob: -20.437519073486328
    9. '１' → logprob: -20.500019073486328
    10. '001' → logprob: -20.562519073486328

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.750001907348633
    4. '```' → logprob: -19.625001907348633
    5. '۱' → logprob: -20.500001907348633
    6. '  ' → logprob: -20.625001907348633
    7. '0' → logprob: -21.187501907348633
    8. '１' → logprob: -21.250001907348633
    9. '
' → logprob: -21.312501907348633
    10. '१' → logprob: -21.312501907348633

Token 234: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03573029860854149
    2. '<|end|>' → logprob: -3.5357303619384766
    3. '
' → logprob: -5.785730361938477
    4. '    
' → logprob: -6.910730361938477
    5. ' return' → logprob: -7.285730361938477
    6. ' else' → logprob: -8.285730361938477
    7. '<|end|>' → logprob: -8.660730361938477
    8. '\n' → logprob: -8.785730361938477
    9. ' 
' → logprob: -8.910730361938477
    10. 'return' → logprob: -9.035730361938477

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014550687745213509
    2. ' else' → logprob: -4.639550685882568
    3. '<|end|>' → logprob: -6.139550685882568
    4. ' return' → logprob: -6.764550685882568
    5. '    
' → logprob: -7.389550685882568
    6. 'else' → logprob: -8.639551162719727
    7. ' 
' → logprob: -9.264551162719727
    8. ' ' → logprob: -9.514551162719727
    9. '\n' → logprob: -9.514551162719727
    10. 'return' → logprob: -9.764551162719727

Token 236: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03720855340361595
    2. ' return' → logprob: -4.037208557128906
    3. 'return' (adapté à ' return') → logprob: -4.537208557128906
    4. ' else' → logprob: -5.912208557128906
    5. '<|end|>' → logprob: -6.662208557128906
    6. '    
' → logprob: -6.787208557128906
    7. 'else' → logprob: -7.287208557128906
    8. ' ' → logprob: -7.287208557128906
    9. '	return' → logprob: -8.287208557128906
    10. ')' → logprob: -8.537208557128906

Token 237: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.38693442940711975
    2. ' e' → logprob: -1.1369343996047974
    3. '(e' → logprob: -10.011934280395508
    4. ' (' → logprob: -11.011934280395508
    5. '(' → logprob: -13.136934280395508
    6. ' ' → logprob: -17.136934280395508
    7. '   ' → logprob: -17.136934280395508
    8. ',' → logprob: -17.886934280395508
    9. '	e' → logprob: -18.761934280395508
    10. ',e' → logprob: -19.011934280395508

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014394429512321949
    2. ',m' → logprob: -4.389394283294678
    3. ' ,' → logprob: -6.389394283294678
    4. ' m' → logprob: -8.889394760131836
    5. 'm' → logprob: -9.764394760131836
    6. ',
' → logprob: -12.264394760131836
    7. '<|end|>' → logprob: -13.139394760131836
    8. '	m' → logprob: -14.639394760131836
    9. ' ,
' → logprob: -14.764394760131836
    10. '‌,' → logprob: -15.389394760131836

Token 239: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3132616877555847
    2. ' m' → logprob: -1.3132617473602295
    3. '	m' → logprob: -19.563261032104492
    4. ' ' → logprob: -19.813261032104492
    5. '   ' → logprob: -20.313261032104492
    6. 'int' → logprob: -20.813261032104492
    7. ' ' → logprob: -21.188261032104492
    8. '(m' → logprob: -21.188261032104492
    9. '```' → logprob: -21.438261032104492
    10. '(' → logprob: -22.063261032104492

Token 240: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' multiply' (ID: 57388)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.016186395660042763
    2. 'main' → logprob: -5.266186237335205
    3. ' parse' → logprob: -5.641186237335205
    4. ' float' → logprob: -5.891186237335205
    5. ' multiply' → logprob: -6.641186237335205
    6. ' normalize' → logprob: -7.016186237335205
    7. ' fp' → logprob: -7.266186237335205
    8. ' add' → logprob: -7.766186237335205
    9. ' mul' → logprob: -7.766186237335205
    10. 'parse' → logprob: -9.016186714172363

Token 243: '_int' (ID: 12285)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.023207154124975204
    2. '(' → logprob: -3.898207187652588
    3. '_fp' → logprob: -6.023207187652588
    4. ' (' → logprob: -9.64820671081543
    5. '(a' → logprob: -10.14820671081543
    6. '(fp' → logprob: -10.14820671081543
    7. '_f' → logprob: -10.77320671081543
    8. '_(' → logprob: -10.89820671081543
    9. '(f' → logprob: -11.14820671081543
    10. '_' → logprob: -11.39820671081543

Token 244: '_fp' (ID: 75423)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.06020021811127663
    2. '(a' → logprob: -2.9352002143859863
    3. '(' → logprob: -6.185200214385986
    4. ' (' → logprob: -6.435200214385986
    5. 's' → logprob: -7.810200214385986
    6. '(x' → logprob: -8.435200691223145
    7. 'eger' → logprob: -8.435200691223145
    8. '_by' → logprob: -8.935200691223145
    9. '_bits' → logprob: -9.685200691223145
    10. '_e' → logprob: -10.185200691223145

Token 245: '(n' (ID: 2406)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0013435659930109978
    2. '(' → logprob: -6.626343727111816
    3. ' (' → logprob: -11.251343727111816
    4. '(a' → logprob: -13.376343727111816
    5. 'def' → logprob: -14.001343727111816
    6. '(
' → logprob: -14.626343727111816
    7. 'e' → logprob: -15.001343727111816
    8. '(ex' → logprob: -15.251343727111816
    9. '(_' → logprob: -15.376343727111816
    10. '(x' → logprob: -15.876343727111816

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014880649745464325
    2. ',e' → logprob: -4.889880657196045
    3. 'e' → logprob: -5.639880657196045
    4. '(e' → logprob: -6.264880657196045
    5. ' ,' → logprob: -7.139880657196045
    6. ' e' → logprob: -7.389880657196045
    7. '(' → logprob: -9.389880180358887
    8. ' (' → logprob: -9.764880180358887
    9. '_e' → logprob: -10.139880180358887
    10. '):' → logprob: -10.139880180358887

Token 247: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6326206922531128
    2. ' e' → logprob: -0.7576206922531128
    3. ' ' → logprob: -12.132620811462402
    4. ')e' → logprob: -12.695120811462402
    5. '   ' → logprob: -12.757620811462402
    6. '	e' → logprob: -13.195120811462402
    7. '(e' → logprob: -13.632620811462402
    8. '  ' → logprob: -14.257620811462402
    9. '    ' → logprob: -14.257620811462402
    10. ')' → logprob: -14.257620811462402

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01374430675059557
    2. '1' → logprob: -4.638744354248047
    3. ',m' → logprob: -6.013744354248047
    4. ' ,' → logprob: -6.638744354248047
    5. ',
' → logprob: -9.763744354248047
    6. '2' → logprob: -9.888744354248047
    7. 'm' → logprob: -10.263744354248047
    8. '_,' → logprob: -10.513744354248047
    9. ',n' → logprob: -11.013744354248047
    10. ',e' → logprob: -12.138744354248047

Token 249: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.42870330810546875
    2. ' m' → logprob: -1.0537033081054688
    3. ' ' → logprob: -13.428703308105469
    4. ',' → logprob: -15.053703308105469
    5. '   ' → logprob: -16.24120330810547
    6. '  ' → logprob: -16.36620330810547
    7. '	m' → logprob: -16.42870330810547
    8. '<|end|>' → logprob: -16.42870330810547
    9. ' ' → logprob: -16.86620330810547
    10. '```' → logprob: -16.99120330810547

Token 250: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00044556602369993925
    2. '):
' → logprob: -7.750445365905762
    3. ')' → logprob: -11.625445365905762
    4. '):
' → logprob: -13.000445365905762
    5. ' ):' → logprob: -13.000445365905762
    6. ':' → logprob: -14.000445365905762
    7. '   ' → logprob: -15.125445365905762
    8. ',' → logprob: -16.000446319580078
    9. '):

' → logprob: -16.000446319580078
    10. '}:' → logprob: -17.375446319580078

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04251570627093315
    2. 'e' → logprob: -3.667515754699707
    3. 'result' → logprob: -4.542515754699707
    4. ' e' → logprob: -5.792515754699707
    5. 'm' → logprob: -7.417515754699707
    6. 'if' → logprob: -7.917515754699707
    7. ' result' → logprob: -7.917515754699707
    8. ' if' → logprob: -8.292515754699707
    9. ' product' → logprob: -8.792515754699707
    10. '    
' → logprob: -9.042515754699707

Token 252: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8291497826576233
    2. ' m' → logprob: -1.0791497230529785
    3. ' e' → logprob: -2.0791497230529785
    4. 'm' → logprob: -3.8291497230529785
    5. ' product' → logprob: -3.8291497230529785
    6. 'e' → logprob: -4.0791497230529785
    7. 'result' → logprob: -4.2041497230529785
    8. ' result' → logprob: -4.3291497230529785
    9. ' n' → logprob: -5.4541497230529785
    10. 'product' → logprob: -6.2041497230529785

Token 253: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8720459938049316
    2. 'result' → logprob: -1.6220459938049316
    3. 'product' → logprob: -1.9970459938049316
    4. 'prod' → logprob: -2.8720459938049316
    5. ' product' → logprob: -2.9970459938049316
    6. 'p' → logprob: -3.1220459938049316
    7. ' m' → logprob: -3.3720459938049316
    8. 'r' → logprob: -3.7470459938049316
    9. ' prod' → logprob: -4.497045993804932
    10. 'res' → logprob: -4.747045993804932

Token 254: ' is' (ID: 382)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.8025888800621033
    2. ' *' → logprob: -1.052588939666748
    3. '*' → logprob: -2.427588939666748
    4. '*=' → logprob: -3.052588939666748
    5. '=' → logprob: -3.427588939666748
    6. ' =' → logprob: -4.052588939666748
    7. ' <<=' → logprob: -4.552588939666748
    8. ')' → logprob: -5.802588939666748
    9. '   ' → logprob: -6.552588939666748
    10. ',' → logprob: -7.052588939666748

Token 255: ' up' (ID: 869)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.01531557273119688
    2. 'an' → logprob: -4.765315532684326
    3. ' a' → logprob: -5.890315532684326
    4. 'n' → logprob: -7.015315532684326
    5. ' integer' → logprob: -7.015315532684326
    6. 'int' → logprob: -7.140315532684326
    7. ' int' → logprob: -7.265315532684326
    8. ' n' → logprob: -8.015316009521484
    9. ' the' → logprob: -8.765316009521484
    10. 'integer' → logprob: -9.765316009521484

Token 256: ' to' (ID: 316)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8724133968353271
    2. 'n' → logprob: -1.7474133968353271
    3. '32' → logprob: -1.7474133968353271
    4. '=' → logprob: -3.122413396835327
    5. 'int' → logprob: -3.747413396835327
    6. '   ' → logprob: -4.247413635253906
    7. 'ntil' → logprob: -4.372413635253906
    8. 'per' → logprob: -4.497413635253906
    9. 'pped' → logprob: -4.497413635253906
    10. ' ' → logprob: -4.622413635253906

Token 257: ' ' (ID: 220)
  Prédit: '53'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '53' → logprob: -0.7245396375656128
    2. '52' → logprob: -0.8495396375656128
    3. ' ' → logprob: -2.4745397567749023
    4. '64' → logprob: -6.224539756774902
    5. '32' → logprob: -8.099539756774902
    6. '2' → logprob: -8.224539756774902
    7. '54' → logprob: -8.599539756774902
    8. '1' → logprob: -9.099539756774902
    9. 'int' → logprob: -9.099539756774902
    10. '(' → logprob: -9.099539756774902

Token 258: '10' (ID: 702)
  Prédit: '53'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '53' → logprob: -0.1876527965068817
    2. '52' → logprob: -2.062652826309204
    3. ' ' → logprob: -3.437652826309204
    4. '64' → logprob: -4.937652587890625
    5. '32' → logprob: -6.562652587890625
    6. '2' → logprob: -6.937652587890625
    7. '(' → logprob: -7.687652587890625
    8. '1' → logprob: -7.937652587890625
    9. '54' → logprob: -8.312652587890625
    10. 'int' → logprob: -8.437652587890625

Token 259: '^' (ID: 61)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8019419312477112
    2. '   ' → logprob: -0.9269419312477112
    3. '    
' → logprob: -2.8019418716430664
    4. ',' → logprob: -3.9269418716430664
    5. '  
' → logprob: -3.9269418716430664
    6. ' 
' → logprob: -4.801941871643066
    7. '*' → logprob: -4.926941871643066
    8. ' ' → logprob: -5.176941871643066
    9. 'm' → logprob: -5.176941871643066
    10. '   
' → logprob: -5.301941871643066

Token 260: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.21354787051677704
    2. '6' → logprob: -2.463547945022583
    3. '7' → logprob: -2.588547945022583
    4. '18' → logprob: -4.713547706604004
    5. '10' → logprob: -4.713547706604004
    6. '12' → logprob: -5.338547706604004
    7. '8' → logprob: -5.338547706604004
    8. '```' → logprob: -6.713547706604004
    9. '15' → logprob: -6.838547706604004
    10. '20' → logprob: -7.463547706604004

Token 261: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3905268609523773
    2. '   ' → logprob: -1.7655268907546997
    3. '  
' → logprob: -2.89052677154541
    4. '    
' → logprob: -2.89052677154541
    5. '   
' → logprob: -4.64052677154541
    6. ',' → logprob: -4.76552677154541
    7. ' 
' → logprob: -4.89052677154541
    8. ':' → logprob: -5.51552677154541
    9. '<|end|>' → logprob: -5.51552677154541
    10. 'n' → logprob: -6.76552677154541

Token 262: ' use' (ID: 1199)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.316957026720047
    2. ' so' → logprob: -1.6919569969177246
    3. 'm' → logprob: -3.3169569969177246
    4. ' return' → logprob: -4.566956996917725
    5. ' which' → logprob: -4.941956996917725
    6. '   ' → logprob: -5.191956996917725
    7. ' multiply' → logprob: -5.191956996917725
    8. ' while' → logprob: -5.816956996917725
    9. ' not' → logprob: -6.066956996917725
    10. ' ' → logprob: -6.316956996917725

Token 263: ' double' (ID: 3503)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6690049171447754
    2. 'int' → logprob: -2.2940049171447754
    3. 'python' → logprob: -2.2940049171447754
    4. 'mul' → logprob: -2.5440049171447754
    5. '64' → logprob: -2.7940049171447754
    6. 'multip' → logprob: -2.7940049171447754
    7. 'Python' → logprob: -2.9190049171447754
    8. 'pow' → logprob: -3.0440049171447754
    9. '```' → logprob: -3.0440049171447754
    10. ' n' → logprob: -3.1690049171447754

Token 264: '-and' (ID: 17224)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.4351112842559814
    2. 'precision' → logprob: -1.4351112842559814
    3. '_' → logprob: -1.6851112842559814
    4. 'e' → logprob: -1.8101112842559814
    5. '_precision' → logprob: -2.9351112842559814
    6. 'f' → logprob: -3.6851112842559814
    7. '   ' → logprob: -4.185111045837402
    8. 'n' → logprob: -4.685111045837402
    9. '```' → logprob: -4.685111045837402
    10. ' e' → logprob: -5.185111045837402

Token 265: '-add' (ID: 40367)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.966313281329349e-05
    2. 'acc' → logprob: -10.375049591064453
    3. ' add' → logprob: -11.750049591064453
    4. 'shift' → logprob: -12.250049591064453
    5. '-add' → logprob: -13.000049591064453
    6. 'append' → logprob: -13.750049591064453
    7. 'subtract' → logprob: -14.375049591064453
    8. 'multiply' → logprob: -14.375049591064453
    9. '
' → logprob: -14.625049591064453
    10. 'Add' → logprob: -15.250049591064453

Token 266: ' method' (ID: 2595)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25661417841911316
    2. '   ' → logprob: -2.7566142082214355
    3. ' ' → logprob: -3.0066142082214355
    4. '<|end|>' → logprob: -3.7566142082214355
    5. '  
' → logprob: -4.1316142082214355
    6. '_' → logprob: -4.1316142082214355
    7. ',' → logprob: -4.1316142082214355
    8. '    
' → logprob: -4.7566142082214355
    9. '<|end|>' → logprob: -5.2566142082214355
    10. ' 
' → logprob: -5.6316142082214355

Token 267: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6028067469596863
    2. '
' → logprob: -0.8528067469596863
    3. '    
' → logprob: -4.477806568145752
    4. ':' → logprob: -5.602806568145752
    5. '  
' → logprob: -5.602806568145752
    6. '<|end|>' → logprob: -6.602806568145752
    7. ',' → logprob: -6.852806568145752
    8. 'def' → logprob: -6.977806568145752
    9. 'n' → logprob: -7.102806568145752
    10. '```' → logprob: -7.602806568145752

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3363851308822632
    2. '
' → logprob: -1.8363851308822632
    3. ' result' → logprob: -2.5863852500915527
    4. 'result' → logprob: -3.3363852500915527
    5. '    
' → logprob: -5.086385250091553
    6. ' shift' → logprob: -6.461385250091553
    7. '```' → logprob: -6.711385250091553
    8. '  
' → logprob: -6.836385250091553
    9. ' 
' → logprob: -7.711385250091553
    10. 'def' → logprob: -7.711385250091553

Token 269: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7279672622680664
    2. ' result' → logprob: -1.2279672622680664
    3. 'r' → logprob: -2.2279672622680664
    4. ' r' → logprob: -2.7279672622680664
    5. 'e' → logprob: -4.102967262268066
    6. ' res' → logprob: -4.477967262268066
    7. 'res' (adapté à ' res') → logprob: -4.602967262268066
    8. ' e' → logprob: -4.602967262268066
    9. '   ' → logprob: -5.977967262268066
    10. ' if' → logprob: -8.477967262268066

Token 270: '_e' (ID: 4618)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6568523645401001
    2. '_e' → logprob: -0.7818523645401001
    3. '=' → logprob: -3.7818522453308105
    4. '_' → logprob: -7.7818522453308105
    5. ' e' → logprob: -8.656852722167969
    6. '_n' → logprob: -8.781852722167969
    7. ',' → logprob: -9.031852722167969
    8. '   ' → logprob: -9.031852722167969
    9. 'e' → logprob: -9.406852722167969
    10. '=e' → logprob: -10.781852722167969

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024674156680703163
    2. '=' → logprob: -4.149673938751221
    3. ',' → logprob: -4.774673938751221
    4. '=e' → logprob: -9.024674415588379
    5. ',e' → logprob: -10.649674415588379
    6. ' ,' → logprob: -11.899674415588379
    7. '   ' → logprob: -12.399674415588379
    8. 'e' → logprob: -12.774674415588379
    9. ' e' → logprob: -13.649674415588379
    10. ' ' → logprob: -13.774674415588379

Token 272: ' ' (ID: 220)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09182381629943848
    2. '0' → logprob: -2.4668238162994385
    3. ' e' → logprob: -6.091823577880859
    4. '52' → logprob: -8.46682357788086
    5. '102' → logprob: -8.96682357788086
    6. ' ' → logprob: -9.09182357788086
    7. '53' → logprob: -10.46682357788086
    8. '1' → logprob: -10.59182357788086
    9. '   ' → logprob: -10.96682357788086
    10. '
' → logprob: -11.09182357788086

Token 273: '0' (ID: 15)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.026875954121351242
    2. '0' → logprob: -3.6518759727478027
    3. ' e' → logprob: -8.401875495910645
    4. '53' → logprob: -9.026875495910645
    5. '52' → logprob: -9.776875495910645
    6. '64' → logprob: -10.651875495910645
    7. '63' → logprob: -10.901875495910645
    8. '1' → logprob: -10.964375495910645
    9. ' ' → logprob: -11.214375495910645
    10. '102' → logprob: -11.401875495910645

Token 274: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.164669394493103
    2. ',' → logprob: -1.289669394493103
    3. '	res' → logprob: -2.1646695137023926
    4. 'res' → logprob: -2.2896695137023926
    5. '
' → logprob: -2.4146695137023926
    6. ' res' → logprob: -2.5396695137023926
    7. ',res' → logprob: -4.289669513702393
    8. ',
' → logprob: -5.039669513702393
    9. '    
' → logprob: -6.289669513702393
    10. '<|end|>' → logprob: -6.539669513702393

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3527194559574127
    2. ' res' → logprob: -1.7277194261550903
    3. 'res' → logprob: -2.22771954536438
    4. '	res' → logprob: -4.477719306945801
    5. ',' → logprob: -8.8527193069458
    6. '<|end|>' → logprob: -9.1027193069458
    7. ',res' → logprob: -10.3527193069458
    8. '    
' → logprob: -10.6027193069458
    9. '<|end|>' → logprob: -10.6027193069458
    10. '
' → logprob: -11.2277193069458

Token 276: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0011813003802672029
    2. ' res' → logprob: -6.751181125640869
    3. '   ' → logprob: -11.751181602478027
    4. 'result' → logprob: -13.751181602478027
    5. '	res' → logprob: -14.376181602478027
    6. ' ' → logprob: -15.001181602478027
    7. 'm' → logprob: -15.251181602478027
    8. 'ress' → logprob: -15.751181602478027
    9. '```' → logprob: -15.876181602478027
    10. '
' → logprob: -16.00118064880371

Token 277: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.00041625293670222163
    2. 'm' → logprob: -8.125415802001953
    3. ' =' → logprob: -10.000415802001953
    4. '=' → logprob: -10.375415802001953
    5. '_' → logprob: -10.500415802001953
    6. '_n' → logprob: -12.000415802001953
    7. ',' → logprob: -12.625415802001953
    8. '   ' → logprob: -13.500415802001953
    9. '_e' → logprob: -13.750415802001953
    10. ' ' → logprob: -14.375415802001953

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759411454200745
    2. '=' → logprob: -0.8259411454200745
    3. ',' → logprob: -13.95094108581543
    4. ' ' → logprob: -14.70094108581543
    5. '=m' → logprob: -15.32594108581543
    6. '=res' → logprob: -15.57594108581543
    7. ' =
' → logprob: -17.57594108581543
    8. ' ,' → logprob: -17.95094108581543
    9. '=int' → logprob: -18.45094108581543
    10. '   ' → logprob: -18.45094108581543

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006238049361854792
    2. '1' → logprob: -5.381237983703613
    3. 'm' → logprob: -6.631237983703613
    4. ' ' → logprob: -8.506237983703613
    5. 'n' → logprob: -9.381237983703613
    6. ' m' → logprob: -12.006237983703613
    7. 'int' → logprob: -13.506237983703613
    8. '(' → logprob: -13.881237983703613
    9. 'multip' → logprob: -14.818737983703613
    10. ' n' → logprob: -14.881237983703613

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0066230082884430885
    2. '1' → logprob: -5.131622791290283
    3. 'm' → logprob: -7.631622791290283
    4. 'n' → logprob: -8.506623268127441
    5. ' ' → logprob: -13.006623268127441
    6. 'int' → logprob: -13.131623268127441
    7. '(' → logprob: -14.006623268127441
    8. 'res' → logprob: -14.131623268127441
    9. 'e' → logprob: -14.881623268127441
    10. 'multip' → logprob: -15.381623268127441

Token 281: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48641878366470337
    2. '   ' → logprob: -1.1114187240600586
    3. '    
' → logprob: -3.6114187240600586
    4. ' 
' → logprob: -4.361418724060059
    5. '  
' → logprob: -4.736418724060059
    6. '   
' → logprob: -5.736418724060059
    7. '<|end|>' → logprob: -6.986418724060059
    8. ' ' → logprob: -7.236418724060059
    9. 'def' → logprob: -7.736418724060059
    10. '    ' → logprob: -7.986418724060059

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009889957495033741
    2. '
' → logprob: -5.384890079498291
    3. '    
' → logprob: -6.009890079498291
    4. '<|end|>' → logprob: -7.259890079498291
    5. ' 
' → logprob: -7.634890079498291
    6. ' for' → logprob: -7.759890079498291
    7. '    ' → logprob: -8.509889602661133
    8. 'n' → logprob: -8.634889602661133
    9. ' ' → logprob: -8.634889602661133
    10. ' while' → logprob: -9.009889602661133

Token 283: ' bit' (ID: 3546)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26222261786460876
    2. ' while' → logprob: -2.3872225284576416
    3. 'for' → logprob: -2.5122225284576416
    4. '   ' → logprob: -3.7622225284576416
    5. ' i' → logprob: -4.387222766876221
    6. 'i' → logprob: -4.512222766876221
    7. 'while' → logprob: -5.262222766876221
    8. 'n' → logprob: -6.137222766876221
    9. ' n' → logprob: -7.262222766876221
    10. ' 
' → logprob: -7.262222766876221

Token 284: '_pos' (ID: 14692)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00545857846736908
    2. '_' → logprob: -5.630458354949951
    3. '_index' → logprob: -7.130458354949951
    4. '_idx' → logprob: -7.880458354949951
    5. '_s' → logprob: -8.00545883178711
    6. ' =' → logprob: -8.75545883178711
    7. '_i' → logprob: -9.38045883178711
    8. '_mask' → logprob: -10.38045883178711
    9. '_pos' → logprob: -10.63045883178711
    10. 'mask' → logprob: -11.38045883178711

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003730606520548463
    2. '=' → logprob: -5.878730773925781
    3. 's' → logprob: -7.003730773925781
    4. ' ' → logprob: -11.253730773925781
    5. '<|end|>' → logprob: -13.753730773925781
    6. '  ' → logprob: -14.128730773925781
    7. ',' → logprob: -14.878730773925781
    8. ')' → logprob: -14.878730773925781
    9. '_index' → logprob: -15.378730773925781
    10. '<|end|>' → logprob: -15.753730773925781

Token 286: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8203936219215393
    2. '59' → logprob: -1.5703935623168945
    3. 'n' → logprob: -1.6953935623168945
    4. '60' → logprob: -2.0703935623168945
    5. ' ' → logprob: -3.5703935623168945
    6. '63' → logprob: -4.5703935623168945
    7. ' n' → logprob: -6.3203935623168945
    8. 'int' → logprob: -7.5703935623168945
    9. '64' → logprob: -8.195393562316895
    10. 'max' → logprob: -8.570393562316895

Token 287: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.0012688051210716367
    2. '
' → logprob: -7.2512688636779785
    3. 'bit' → logprob: -8.50126838684082
    4. '<|end|>' → logprob: -9.12626838684082
    5. ' .' → logprob: -9.75126838684082
    6. '.' → logprob: -10.12626838684082
    7. '<|end|>' → logprob: -10.75126838684082
    8. '_bit' → logprob: -10.87626838684082
    9. '>' → logprob: -11.50126838684082
    10. ' bit' → logprob: -11.50126838684082

Token 288: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.47495681833243e-05
    2. 'length' → logprob: -10.750024795532227
    3. '_LENGTH' → logprob: -14.000024795532227
    4. '_size' → logprob: -14.125024795532227
    5. '_width' → logprob: -14.500024795532227
    6. 'ength' → logprob: -14.750024795532227
    7. '_' → logprob: -14.750024795532227
    8. 'Length' → logprob: -16.500024795532227
    9. '_Length' → logprob: -16.750024795532227
    10. ' length' → logprob: -16.750024795532227

Token 289: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02331896498799324
    2. '()-' → logprob: -3.7733190059661865
    3. ' ()' → logprob: -10.148319244384766
    4. '-' → logprob: -10.398319244384766
    5. '()>' → logprob: -13.523319244384766
    6. ' -' → logprob: -13.773319244384766
    7. '())' → logprob: -14.273319244384766
    8. '(' → logprob: -15.648319244384766
    9. '()
' → logprob: -16.023319244384766
    10. '()<<' → logprob: -16.023319244384766

Token 290: '   ' (ID: 271)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.44860392808914185
    2. '-' → logprob: -1.073603868484497
    3. '   ' → logprob: -4.073604106903076
    4. '
' → logprob: -6.448604106903076
    5. ' ' → logprob: -7.698604106903076
    6. '    ' → logprob: -8.823603630065918
    7. '  ' → logprob: -8.823603630065918
    8. '<|end|>' → logprob: -9.448603630065918
    9. '    
' → logprob: -9.698603630065918
    10. ' -
' → logprob: -10.073603630065918

Token 291: ' cur' (ID: 4396)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2698841691017151
    2. 'for' → logprob: -1.6448841094970703
    3. '   ' → logprob: -3.1448841094970703
    4. ' while' → logprob: -8.64488410949707
    5. 'while' → logprob: -9.26988410949707
    6. ' ' → logprob: -9.89488410949707
    7. '	for' → logprob: -10.14488410949707
    8. '
' → logprob: -11.01988410949707
    9. '  ' → logprob: -11.14488410949707
    10. '    ' → logprob: -11.26988410949707

Token 292: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.649055540561676
    2. '_m' → logprob: -0.774055540561676
    3. '_' → logprob: -4.149055480957031
    4. ' _' → logprob: -8.649055480957031
    5. '_n' → logprob: -8.649055480957031
    6. '_s' → logprob: -10.774055480957031
    7. '   ' → logprob: -10.899055480957031
    8. 'e' → logprob: -11.274055480957031
    9. '=' → logprob: -11.274055480957031
    10. '_i' → logprob: -11.274055480957031

Token 293: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871520161628723
    2. '=' → logprob: -1.1371519565582275
    3. ',' → logprob: -8.262151718139648
    4. 'e' → logprob: -12.012151718139648
    5. '=e' → logprob: -12.012151718139648
    6. ' ' → logprob: -12.262151718139648
    7. '   ' → logprob: -12.887151718139648
    8. 's' → logprob: -14.012151718139648
    9. ',e' → logprob: -14.637151718139648
    10. ' ,' → logprob: -15.012151718139648

Token 294: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.029661614447832108
    2. ' cur' → logprob: -3.7796616554260254
    3. 'm' → logprob: -5.154661655426025
    4. ' m' → logprob: -7.529661655426025
    5. 'e' → logprob: -9.654661178588867
    6. ' e' → logprob: -12.279661178588867
    7. 'curr' → logprob: -12.404661178588867
    8. 'c' → logprob: -12.654661178588867
    9. 'n' → logprob: -12.904661178588867
    10. 'res' → logprob: -13.279661178588867

Token 295: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -9.849109119386412e-06
    2. '_' → logprob: -11.875009536743164
    3. 'm' → logprob: -13.000009536743164
    4. ' _' → logprob: -15.125009536743164
    5. '_e' → logprob: -15.875009536743164
    6. '_s' → logprob: -16.375009536743164
    7. 's' → logprob: -18.000009536743164
    8. '_p' → logprob: -18.125009536743164
    9. '_n' → logprob: -18.250009536743164
    10. '_f' → logprob: -18.375009536743164

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002175584435463
    2. ' =' → logprob: -2.350217580795288
    3. '=e' → logprob: -11.475217819213867
    4. ',' → logprob: -14.850217819213867
    5. '=

' → logprob: -16.600217819213867
    6. '=m' → logprob: -16.850217819213867
    7. '=}' → logprob: -17.600217819213867
    8. '   ' → logprob: -17.850217819213867
    9. ' ' → logprob: -18.100217819213867
    10. '=n' → logprob: -18.100217819213867

Token 297: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007619291078299284
    2. ' e' → logprob: -4.882619380950928
    3. '(e' → logprob: -12.00761890411377
    4. '   ' → logprob: -12.25761890411377
    5. '0' → logprob: -13.88261890411377
    6. ' ' → logprob: -14.13261890411377
    7. '	e' → logprob: -15.63261890411377
    8. ' (' → logprob: -15.63261890411377
    9. '  ' → logprob: -16.132619857788086
    10. '(' → logprob: -16.507619857788086

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012430864153429866
    2. ' ,' → logprob: -7.3762431144714355
    3. ',m' → logprob: -8.126242637634277
    4. '   ' → logprob: -8.876242637634277
    5. '
' → logprob: -9.751242637634277
    6. ',
' → logprob: -9.876242637634277
    7. ',None' → logprob: -11.501242637634277
    8. '<|end|>' → logprob: -11.626242637634277
    9. ',n' → logprob: -12.126242637634277
    10. '=' → logprob: -12.251242637634277

Token 299: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0017036291537806392
    2. ' m' → logprob: -6.37670373916626
    3. '   ' → logprob: -14.126703262329102
    4. ' ' → logprob: -15.251703262329102
    5. '  ' → logprob: -16.2517032623291
    6. '(' → logprob: -16.5017032623291
    7. '    ' → logprob: -16.7517032623291
    8. '	m' → logprob: -16.7517032623291
    9. '(m' → logprob: -17.1267032623291
    10. '<|end|>' → logprob: -17.1267032623291

Token 300: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020440980792045593
    2. '<|end|>' → logprob: -4.270441055297852
    3. 'for' → logprob: -5.895441055297852
    4. ' for' → logprob: -6.895441055297852
    5. '  
' → logprob: -7.270441055297852
    6. '<|end|>' → logprob: -7.645441055297852
    7. ' 
' → logprob: -7.895441055297852
    8. '    
' → logprob: -8.020441055297852
    9. '   ' → logprob: -8.270441055297852
    10. 'while' → logprob: -9.145441055297852

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013598846271634102
    2. ' for' → logprob: -4.888598918914795
    3. '
' → logprob: -5.638598918914795
    4. 'for' → logprob: -6.138598918914795
    5. '    
' → logprob: -9.013598442077637
    6. '	for' → logprob: -10.138598442077637
    7. '<|end|>' → logprob: -10.388598442077637
    8. ',' → logprob: -11.388598442077637
    9. ' 
' → logprob: -11.513598442077637
    10. '  
' → logprob: -11.513598442077637

Token 302: ' res' (ID: 694)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3732683062553406
    2. 'for' → logprob: -1.9982683658599854
    3. '
' → logprob: -2.1232683658599854
    4. '   ' → logprob: -2.9982683658599854
    5. ' 
' → logprob: -5.498268127441406
    6. ' ' → logprob: -7.248268127441406
    7. '	for' → logprob: -7.248268127441406
    8. '    
' → logprob: -7.998268127441406
    9. '\n' → logprob: -8.623268127441406
    10. '  
' → logprob: -8.748268127441406

Token 303: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -4.8828707804204896e-05
    2. '_m' → logprob: -10.750048637390137
    3. 'e' → logprob: -11.875048637390137
    4. '_' → logprob: -12.000048637390137
    5. '=' → logprob: -12.875048637390137
    6. '_n' → logprob: -13.000048637390137
    7. ' _' → logprob: -13.375048637390137
    8. '_s' → logprob: -13.875048637390137
    9. '_bits' → logprob: -14.125048637390137
    10. ' =' → logprob: -14.250048637390137

Token 304: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17782361805438995
    2. '=' → logprob: -1.9278236627578735
    3. ',' → logprob: -4.177823543548584
    4. ' ,' → logprob: -6.177823543548584
    5. ' ' → logprob: -10.427824020385742
    6. ' +=' → logprob: -12.802824020385742
    7. ' =
' → logprob: -14.427824020385742
    8. ' <<=' → logprob: -14.427824020385742
    9. '0' → logprob: -14.552824020385742
    10. 's' → logprob: -14.677824020385742

Token 305: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06439769268035889
    2. ' res' → logprob: -2.8143978118896484
    3. '0' → logprob: -6.064397811889648
    4. ' ' → logprob: -9.439397811889648
    5. '(res' → logprob: -12.689397811889648
    6. '
' → logprob: -12.939397811889648
    7. ' 
' → logprob: -13.189397811889648
    8. '1' → logprob: -13.439397811889648
    9. '   ' → logprob: -13.689397811889648
    10. 'm' → logprob: -13.751897811889648

Token 306: '_m' (ID: 1285)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1018402576446533
    2. '_m' → logprob: -1.1018402576446533
    3. '=' → logprob: -1.3518402576446533
    4. ' =' → logprob: -3.1018402576446533
    5. '_,' → logprob: -4.101840019226074
    6. '_' → logprob: -5.101840019226074
    7. 'm' → logprob: -5.476840019226074
    8. ' +=' → logprob: -6.976840019226074
    9. ' ,' → logprob: -7.101840019226074
    10. ',_' → logprob: -7.226840019226074

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.229200080037117
    2. '=' → logprob: -1.6042001247406006
    3. ',' → logprob: -5.6041998863220215
    4. '<|end|>' → logprob: -9.85420036315918
    5. ' ' → logprob: -11.10420036315918
    6. ' +=' → logprob: -11.72920036315918
    7. ' ,' → logprob: -11.85420036315918
    8. '<|end|>' → logprob: -13.10420036315918
    9. '0' → logprob: -13.22920036315918
    10. 'def' → logprob: -13.47920036315918

Token 308: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07752776145935059
    2. 'cur' → logprob: -3.2025277614593506
    3. 'e' → logprob: -3.4525277614593506
    4. ' ' → logprob: -6.70252799987793
    5. ' e' → logprob: -7.95252799987793
    6. '(' → logprob: -7.95252799987793
    7. ' cur' → logprob: -8.45252799987793
    8. '(cur' → logprob: -9.95252799987793
    9. 'res' → logprob: -11.07752799987793
    10. ' (' → logprob: -11.14002799987793

Token 309: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12026167660951614
    2. 'cur' → logprob: -2.2452616691589355
    3. 'e' → logprob: -5.1202616691589355
    4. '(' → logprob: -7.1202616691589355
    5. ' ' → logprob: -8.245262145996094
    6. ' cur' → logprob: -8.870262145996094
    7. '(cur' → logprob: -9.120262145996094
    8. 'res' → logprob: -9.745262145996094
    9. ' e' → logprob: -10.870262145996094
    10. ' (' → logprob: -11.870262145996094

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4373878836631775
    2. '
' → logprob: -1.6873879432678223
    3. '<|end|>' → logprob: -1.8123879432678223
    4. '<|end|>' → logprob: -5.687387943267822
    5. ',
' → logprob: -6.687387943267822
    6. ' ' → logprob: -8.062387466430664
    7. ' ,' → logprob: -8.062387466430664
    8. '  
' → logprob: -8.437387466430664
    9. '

' → logprob: -9.062387466430664
    10. ',None' → logprob: -9.562387466430664

Token 311: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029840858653187752
    2. ' ' → logprob: -3.5298409461975098
    3. '1' → logprob: -9.404840469360352
    4. ' (' → logprob: -13.279840469360352
    5. '(' → logprob: -13.404840469360352
    6. 'cur' → logprob: -14.279840469360352
    7. 'm' → logprob: -14.467340469360352
    8. '  ' → logprob: -14.529840469360352
    9. '۰' → logprob: -15.217340469360352
    10. '   ' → logprob: -15.279840469360352

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.081584716506768e-05
    2. ' ' → logprob: -11.000020980834961
    3. '1' → logprob: -12.875020980834961
    4. 'm' → logprob: -14.000020980834961
    5. '(' → logprob: -15.250020980834961
    6. '۰' → logprob: -16.68752098083496
    7. 'res' → logprob: -16.75002098083496
    8. '000' → logprob: -17.06252098083496
    9. 'cur' → logprob: -17.06252098083496
    10. '00' → logprob: -17.06252098083496

Token 313: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00266055460087955
    2. '<|end|>' → logprob: -6.252660751342773
    3. ' 
' → logprob: -8.502660751342773
    4. '  
' → logprob: -8.752660751342773
    5. '    
' → logprob: -9.502660751342773
    6. '
' → logprob: -9.627660751342773
    7. '   ' → logprob: -9.877660751342773
    8. '<|end|>' → logprob: -10.002660751342773
    9. '	
' → logprob: -10.752660751342773
    10. '

' → logprob: -10.752660751342773

Token 314: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4210532009601593
    2. ' for' → logprob: -2.171053171157837
    3. ' 
' → logprob: -2.421053171157837
    4. '   ' → logprob: -2.546053171157837
    5. '<|end|>' → logprob: -3.671053171157837
    6. 'for' → logprob: -4.421053409576416
    7. ' ' → logprob: -4.546053409576416
    8. '  
' → logprob: -5.296053409576416
    9. '    
' → logprob: -5.421053409576416
    10. ',' → logprob: -7.171053409576416

Token 315: ' first' (ID: 1577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5994085669517517
    2. ' for' → logprob: -1.0994086265563965
    3. '0' → logprob: -2.7244086265563965
    4. ' ' → logprob: -3.4744086265563965
    5. ' 
' → logprob: -4.7244086265563965
    6. 'n' → logprob: -5.7244086265563965
    7. '
' → logprob: -5.8494086265563965
    8. '   ' → logprob: -6.0994086265563965
    9. 'f' → logprob: -7.3494086265563965
    10. 'None' → logprob: -7.3494086265563965

Token 316: ' =' (ID: 314)
  Prédit: '_one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.8713026642799377
    2. ' =' → logprob: -1.496302604675293
    3. '_set' → logprob: -1.746302604675293
    4. '_' → logprob: -1.871302604675293
    5. '_token' → logprob: -4.871302604675293
    6. '=' → logprob: -5.246302604675293
    7. '_bit' → logprob: -5.621302604675293
    8. '1' → logprob: -5.871302604675293
    9. '_non' → logprob: -6.121302604675293
    10. '_m' → logprob: -6.496302604675293

Token 317: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.16022787988185883
    2. ' True' → logprob: -1.91022789478302
    3. 'False' → logprob: -12.53522777557373
    4. ' False' → logprob: -16.285228729248047
    5. 'None' → logprob: -16.285228729248047
    6. '1' → logprob: -17.910228729248047
    7. '(True' → logprob: -18.035228729248047
    8. '=True' → logprob: -18.410228729248047
    9. ' None' → logprob: -18.535228729248047
    10. '   ' → logprob: -19.160228729248047

Token 318: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03881341218948364
    2. ' 
' → logprob: -4.163813591003418
    3. ' for' → logprob: -4.788813591003418
    4. '  
' → logprob: -4.913813591003418
    5. 'for' → logprob: -6.288813591003418
    6. '   ' → logprob: -6.788813591003418
    7. '<|end|>' → logprob: -6.788813591003418
    8. ':' → logprob: -6.913813591003418
    9. '    
' → logprob: -8.038813591003418
    10. ' ' → logprob: -8.163813591003418

Token 319: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6981803178787231
    2. '   ' → logprob: -2.0731801986694336
    3. '<|end|>' → logprob: -2.0731801986694336
    4. ' for' → logprob: -2.3231801986694336
    5. ' 
' → logprob: -3.0731801986694336
    6. '  
' → logprob: -3.3231801986694336
    7. ':' → logprob: -3.5731801986694336
    8. 'for' → logprob: -4.198180198669434
    9. ' ' → logprob: -4.323180198669434
    10. '<|end|>' → logprob: -5.573180198669434

Token 320: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.697666347026825
    2. 'for' (adapté à ' for') → logprob: -0.697666347026825
    3. '   ' → logprob: -6.322666168212891
    4. ' ' → logprob: -6.572666168212891
    5. '
' → logprob: -7.572666168212891
    6. ' 
' → logprob: -7.822666168212891
    7. 'i' → logprob: -9.07266616821289
    8. ' i' → logprob: -9.44766616821289
    9. '    ' → logprob: -10.07266616821289
    10. '    
' → logprob: -10.94766616821289

Token 321: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23486605286598206
    2. 'i' → logprob: -1.6098660230636597
    3. ' bit' → logprob: -4.984866142272949
    4. 'bit' → logprob: -6.109866142272949
    5. ' b' → logprob: -9.10986614227295
    6. 'b' → logprob: -9.85986614227295
    7. ' pos' → logprob: -9.98486614227295
    8. 'k' → logprob: -10.23486614227295
    9. 'pos' → logprob: -10.60986614227295
    10. ' k' → logprob: -10.60986614227295

Token 322: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001974669052287936
    2. 'in' → logprob: -6.251974582672119
    3. ' ' → logprob: -10.126975059509277
    4. ',' → logprob: -13.501975059509277
    5. '	in' → logprob: -14.001975059509277
    6. '=' → logprob: -14.626975059509277
    7. 'range' → logprob: -14.876975059509277
    8. '    ' → logprob: -15.001975059509277
    9. '  ' → logprob: -15.001975059509277
    10. '   ' → logprob: -15.126975059509277

Token 323: ' reversed' (ID: 57184)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.024268750101327896
    2. 'range' → logprob: -3.899268865585327
    3. ' reversed' → logprob: -5.649268627166748
    4. 're' → logprob: -8.524269104003906
    5. ' ' → logprob: -15.024269104003906
    6. '	range' → logprob: -15.274269104003906
    7. '(range' → logprob: -15.649269104003906
    8. 'reverse' → logprob: -15.899269104003906
    9. '   ' → logprob: -16.649269104003906
    10. ' ' → logprob: -17.024269104003906

Token 324: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0005564896273426712
    2. 'range' → logprob: -7.500556468963623
    3. '(' → logprob: -13.000556945800781
    4. ' range' → logprob: -13.625556945800781
    5. '	range' → logprob: -18.00055694580078
    6. ' (' → logprob: -19.50055694580078
    7. '((' → logprob: -21.00055694580078
    8. '   ' → logprob: -21.12555694580078
    9. '(list' → logprob: -21.12555694580078
    10. '(
' → logprob: -21.37555694580078

Token 325: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -5.200166469876422e-06
    2. 'bit' → logprob: -12.250004768371582
    3. '(' → logprob: -14.875004768371582
    4. ' bit' → logprob: -17.1250057220459
    5. '(n' → logprob: -18.0000057220459
    6. ' (' → logprob: -18.3750057220459
    7. '(bits' → logprob: -19.6250057220459
    8. '.bit' → logprob: -20.3750057220459
    9. '(b' → logprob: -20.3750057220459
    10. '(bin' → logprob: -21.2500057220459

Token 326: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0032195416279137135
    2. '_length' → logprob: -5.7532196044921875
    3. 'length' → logprob: -10.628219604492188
    4. 'pos' → logprob: -11.003219604492188
    5. '_len' → logprob: -14.753219604492188
    6. '_position' → logprob: -15.378219604492188
    7. 'ength' → logprob: -16.503219604492188
    8. '(pos' → logprob: -16.753219604492188
    9. 'len' → logprob: -17.628219604492188
    10. '(bit' → logprob: -17.753219604492188

Token 327: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.02533269114792347
    2. ')):
' → logprob: -3.7753326892852783
    3. '))' → logprob: -7.150332927703857
    4. ' ))' → logprob: -7.275332927703857
    5. '):' → logprob: -8.1503324508667
    6. ')):
' → logprob: -9.4003324508667
    7. '()))' → logprob: -9.5253324508667
    8. ' ):' → logprob: -9.7753324508667
    9. ' ' → logprob: -10.4003324508667
    10. '   ' → logprob: -10.4003324508667

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14499182999134064
    2. '    ' → logprob: -2.519991874694824
    3. ' ' → logprob: -4.269991874694824
    4. '   ' → logprob: -4.519991874694824
    5. ' if' → logprob: -4.644991874694824
    6. ' 
' → logprob: -4.894991874694824
    7. ':' → logprob: -5.519991874694824
    8. '<|end|>' → logprob: -5.644991874694824
    9. '        
' → logprob: -7.519991874694824
    10. '     ' → logprob: -7.519991874694824

Token 329: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3695964515209198
    2. ' if' → logprob: -1.8695964813232422
    3. ' ' → logprob: -2.119596481323242
    4. 'if' (adapté à ' if') → logprob: -3.994596481323242
    5. '
' → logprob: -4.869596481323242
    6. '       ' → logprob: -5.869596481323242
    7. '     
' → logprob: -6.494596481323242
    8. '        
' → logprob: -6.869596481323242
    9. '  
' → logprob: -7.369596481323242
    10. '    ' → logprob: -7.619596481323242

Token 330: ' not' (ID: 625)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5415870547294617
    2. '(n' → logprob: -0.9165870547294617
    3. '(not' → logprob: -5.166586875915527
    4. '((' → logprob: -5.291586875915527
    5. ' not' → logprob: -5.666586875915527
    6. '(first' → logprob: -6.166586875915527
    7. 'n' → logprob: -7.791586875915527
    8. ' ((' → logprob: -7.791586875915527
    9. 'not' → logprob: -8.166586875915527
    10. ' first' → logprob: -8.166586875915527

Token 331: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.02331652119755745
    2. 'first' → logprob: -3.7733166217803955
    3. '(first' → logprob: -9.773316383361816
    4. '	first' → logprob: -12.148316383361816
    5. ' ' → logprob: -12.898316383361816
    6. ' (' → logprob: -12.898316383361816
    7. ' bit' → logprob: -14.023316383361816
    8. 'First' → logprob: -14.648316383361816
    9. '   ' → logprob: -14.773316383361816
    10. ' ((' → logprob: -14.898316383361816

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0325736366212368
    2. ':
' → logprob: -3.532573699951172
    3. ' or' → logprob: -6.782573699951172
    4. ' and' → logprob: -6.907573699951172
    5. '           ' → logprob: -8.532573699951172
    6. '       ' → logprob: -8.657573699951172
    7. ' :' → logprob: -9.157573699951172
    8. '   ' → logprob: -9.532573699951172
    9. ':return' → logprob: -10.407573699951172
    10. 'and' → logprob: -10.532573699951172

Token 333: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34040024876594543
    2. '
' → logprob: -2.465400218963623
    3. '           ' → logprob: -2.590400218963623
    4. '        
' → logprob: -2.840400218963623
    5. ',' → logprob: -3.715400218963623
    6. ':
' → logprob: -4.590400218963623
    7. '<|end|>' → logprob: -4.965400218963623
    8. '        ' → logprob: -5.215400218963623
    9. '            
' → logprob: -5.715400218963623
    10. '<|end|>' → logprob: -5.965400218963623

Token 334: ' #' (ID: 1069)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.027647145092487335
    2. '
' → logprob: -4.277647018432617
    3. ' cur' → logprob: -4.902647018432617
    4. 'res' → logprob: -5.402647018432617
    5. '           ' → logprob: -7.652647018432617
    6. ' res' → logprob: -7.902647018432617
    7. '       ' → logprob: -8.152647018432617
    8. '   ' → logprob: -8.777647018432617
    9. '            
' → logprob: -9.652647018432617
    10. '(cur' → logprob: -10.152647018432617

Token 335: ' Double' (ID: 11646)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.5682677626609802
    2. ' cur' → logprob: -0.9432677626609802
    3. ' res' → logprob: -3.818267822265625
    4. '   ' → logprob: -5.193267822265625
    5. 'res' → logprob: -5.193267822265625
    6. 'e' → logprob: -5.318267822265625
    7. ' e' → logprob: -5.443267822265625
    8. '    ' → logprob: -7.568267822265625
    9. '       ' → logprob: -7.943267822265625
    10. '
' → logprob: -8.193267822265625

Token 336: ' res' (ID: 694)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.2984147071838379
    2. 'res' → logprob: -1.423414707183838
    3. '   ' → logprob: -5.048414707183838
    4. ' cur' → logprob: -5.798414707183838
    5. 'e' → logprob: -6.173414707183838
    6. ' res' → logprob: -6.298414707183838
    7. 'if' → logprob: -6.548414707183838
    8. '       ' → logprob: -6.673414707183838
    9. '           ' → logprob: -7.298414707183838
    10. ',' → logprob: -8.92341423034668

Token 337: '
' (ID: 198)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.03681589663028717
    2. ',' → logprob: -4.536816120147705
    3. 'e' → logprob: -4.661816120147705
    4. '   ' → logprob: -4.786816120147705
    5. ' e' → logprob: -6.536816120147705
    6. '           ' → logprob: -6.661816120147705
    7. ' _' → logprob: -7.036816120147705
    8. '       ' → logprob: -7.161816120147705
    9. ' =' → logprob: -7.161816120147705
    10. ' ,' → logprob: -7.661816120147705

Token 338: '           ' (ID: 352)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.4356708526611328
    2. ',' → logprob: -1.3106708526611328
    3. 'e' → logprob: -3.435670852661133
    4. '=' → logprob: -4.185670852661133
    5. '   ' → logprob: -4.435670852661133
    6. ',e' → logprob: -4.560670852661133
    7. ' =' → logprob: -5.435670852661133
    8. ' ,' → logprob: -5.685670852661133
    9. ',
' → logprob: -6.560670852661133
    10. '       ' → logprob: -6.685670852661133

Token 339: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.43652886152267456
    2. ' res' → logprob: -1.0615289211273193
    3. 'e' → logprob: -5.81152868270874
    4. ' if' → logprob: -6.31152868270874
    5. 'if' → logprob: -6.56152868270874
    6. ' e' → logprob: -7.18652868270874
    7. '   ' → logprob: -7.93652868270874
    8. '       ' → logprob: -8.436529159545898
    9. '           ' → logprob: -9.061529159545898
    10. '    ' → logprob: -10.686529159545898

Token 340: '_e' (ID: 4618)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.47425588965415955
    2. '_e' → logprob: -0.9742559194564819
    3. '_' → logprob: -9.474255561828613
    4. 'e' → logprob: -9.724255561828613
    5. 'm' → logprob: -10.974255561828613
    6. '   ' → logprob: -11.849255561828613
    7. '_s' → logprob: -13.224255561828613
    8. ' _' → logprob: -13.224255561828613
    9. '_em' → logprob: -14.036755561828613
    10. '_ex' → logprob: -14.161755561828613

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24619396030902863
    2. '+=' → logprob: -1.6211940050125122
    3. ' +=' → logprob: -4.621193885803223
    4. '=' → logprob: -4.621193885803223
    5. ' ,' → logprob: -7.996193885803223
    6. ',
' → logprob: -8.746193885803223
    7. ',e' → logprob: -9.371193885803223
    8. '   ' → logprob: -9.496193885803223
    9. ',res' → logprob: -9.496193885803223
    10. 'e' → logprob: -10.371193885803223

Token 342: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.02632422000169754
    2. ' res' → logprob: -3.6513242721557617
    3. '
' → logprob: -11.526324272155762
    4. ',' → logprob: -11.651324272155762
    5. ' ' → logprob: -13.276324272155762
    6. ',res' → logprob: -13.776324272155762
    7. '   ' → logprob: -14.026324272155762
    8. '(res' → logprob: -15.151324272155762
    9. '_res' → logprob: -15.401324272155762
    10. ' 
' → logprob: -15.776324272155762

Token 343: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.786196975852363e-05
    2. '_e' → logprob: -10.375038146972656
    3. 'm' → logprob: -12.250038146972656
    4. 'e' → logprob: -13.250038146972656
    5. ',' → logprob: -17.625038146972656
    6. '_' → logprob: -17.750038146972656
    7. '_s' → logprob: -18.250038146972656
    8. '	m' → logprob: -18.500038146972656
    9. '_i' → logprob: -19.000038146972656
    10. '_bits' → logprob: -19.625038146972656

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0041363416239619255
    2. ' =' → logprob: -5.504136562347412
    3. ',' → logprob: -9.879136085510254
    4. '*=' → logprob: -13.379136085510254
    5. '+=' → logprob: -13.754136085510254
    6. '=
' → logprob: -14.129136085510254
    7. '       ' → logprob: -14.379136085510254
    8. '=

' → logprob: -14.754136085510254
    9. '   ' → logprob: -15.004136085510254
    10. ' ' → logprob: -15.254136085510254

Token 345: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0010804448975250125
    2. ' add' → logprob: -7.376080513000488
    3. 'res' → logprob: -7.751080513000488
    4. 'multiply' → logprob: -10.876080513000488
    5. 'double' → logprob: -13.376080513000488
    6. ' res' → logprob: -13.501080513000488
    7. '
' → logprob: -14.251080513000488
    8. '*' → logprob: -15.751080513000488
    9. '(add' → logprob: -16.001079559326172
    10. '	add' → logprob: -16.126079559326172

Token 346: '_fp' (ID: 75423)
  Prédit: '_fp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fp' → logprob: -1.318681188422488e-05
    2. 'fp' → logprob: -11.37501335144043
    3. '(fp' → logprob: -14.75001335144043
    4. '```' → logprob: -15.37501335144043
    5. 'res' → logprob: -15.50001335144043
    6. 'int' → logprob: -15.50001335144043
    7. '_FP' → logprob: -16.12501335144043
    8. '(res' → logprob: -16.75001335144043
    9. '.fp' → logprob: -16.75001335144043
    10. '(' → logprob: -16.87501335144043

Token 347: '(res' (ID: 8331)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1002274826169014
    2. '(res' → logprob: -2.3502275943756104
    3. ' res' → logprob: -10.850227355957031
    4. ',res' → logprob: -14.350227355957031
    5. '(' → logprob: -14.600227355957031
    6. '	res' → logprob: -15.475227355957031
    7. '   ' → logprob: -16.22522735595703
    8. '
' → logprob: -16.97522735595703
    9. '_res' → logprob: -17.60022735595703
    10. 'ress' → logprob: -17.97522735595703

Token 348: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.6440560221672058
    2. 'e' → logprob: -0.8940560221672058
    3. 'res' → logprob: -2.7690560817718506
    4. ',' → logprob: -6.7690558433532715
    5. '_res' → logprob: -6.7690558433532715
    6. '(res' → logprob: -8.26905632019043
    7. ' res' → logprob: -8.89405632019043
    8. ' e' → logprob: -9.51905632019043
    9. '_,' → logprob: -9.64405632019043
    10. ',e' → logprob: -9.64405632019043

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0078156478703022
    2. ',res' → logprob: -5.132815837860107
    3. ' ,' → logprob: -6.507815837860107
    4. 'res' → logprob: -8.00781536102295
    5. ',
' → logprob: -10.38281536102295
    6. ' res' → logprob: -11.13281536102295
    7. ' ' → logprob: -12.13281536102295
    8. '(res' → logprob: -12.63281536102295
    9. '   ' → logprob: -12.88281536102295
    10. '+' → logprob: -14.38281536102295

Token 350: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00012654215970542282
    2. ' res' → logprob: -9.125126838684082
    3. '(res' → logprob: -11.250126838684082
    4. '2' → logprob: -13.500126838684082
    5. '   ' → logprob: -14.375126838684082
    6. '
' → logprob: -14.375126838684082
    7. ' ' → logprob: -14.875126838684082
    8. '0' → logprob: -15.250126838684082
    9. '(' → logprob: -15.500126838684082
    10. ' (' → logprob: -15.875126838684082

Token 351: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -6.2729995988775045e-06
    2. 'm' → logprob: -12.375006675720215
    3. 's' → logprob: -13.625006675720215
    4. ',' → logprob: -15.500006675720215
    5. 'e' → logprob: -15.750006675720215
    6. '[' → logprob: -16.3750057220459
    7. '```' → logprob: -16.7500057220459
    8. '_s' → logprob: -17.0000057220459
    9. '_e' → logprob: -17.0000057220459
    10. '1' → logprob: -17.2500057220459

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042596928775310516
    2. ',res' → logprob: -3.6675968170166016
    3. ' ,' → logprob: -4.292596817016602
    4. 'res' → logprob: -6.042596817016602
    5. ',
' → logprob: -10.417596817016602
    6. ' res' → logprob: -10.667596817016602
    7. '   ' → logprob: -10.792596817016602
    8. ' ' → logprob: -10.792596817016602
    9. '  ' → logprob: -11.792596817016602
    10. '(res' → logprob: -12.042596817016602

Token 353: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00040123690268956125
    2. 'cur' → logprob: -7.875401020050049
    3. ' res' → logprob: -11.000401496887207
    4. '0' → logprob: -13.500401496887207
    5. ' ' → logprob: -14.250401496887207
    6. '  ' → logprob: -14.375401496887207
    7. '   ' → logprob: -14.875401496887207
    8. 're' → logprob: -15.250401496887207
    9. 'r' → logprob: -15.750401496887207
    10. 'curr' → logprob: -16.00040054321289

Token 354: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0005717403837479651
    2. 'e' → logprob: -8.250572204589844
    3. 'es' → logprob: -8.250572204589844
    4. '_es' → logprob: -10.625572204589844
    5. 'res' → logprob: -11.125572204589844
    6. '_res' → logprob: -12.500572204589844
    7. '_m' → logprob: -13.375572204589844
    8. '_em' → logprob: -13.750572204589844
    9. 'em' → logprob: -14.625572204589844
    10. '_s' → logprob: -14.875572204589844

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002892013406381011
    2. ' ,' → logprob: -6.627892017364502
    3. ',res' → logprob: -6.627892017364502
    4. 'res' → logprob: -8.502891540527344
    5. ')' → logprob: -11.377891540527344
    6. ',
' → logprob: -12.002891540527344
    7. ' ' → logprob: -12.627891540527344
    8. '),' → logprob: -12.752891540527344
    9. ',e' → logprob: -12.752891540527344
    10. '0' → logprob: -13.002891540527344

Token 356: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0017029138980433345
    2. ' res' → logprob: -6.376702785491943
    3. ' ' → logprob: -15.501703262329102
    4. '(res' → logprob: -16.0017032623291
    5. '0' → logprob: -16.1267032623291
    6. '   ' → logprob: -16.8767032623291
    7. ')' → logprob: -17.0017032623291
    8. '
' → logprob: -17.1267032623291
    9. 're' → logprob: -17.1267032623291
    10. '  ' → logprob: -17.2517032623291

Token 357: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -2.129266067640856e-05
    2. 'm' → logprob: -11.000020980834961
    3. '_' → logprob: -12.500020980834961
    4. '<|end|>' → logprob: -14.875020980834961
    5. ' _' → logprob: -16.12502098083496
    6. 's' → logprob: -16.50002098083496
    7. 'м' → logprob: -16.62502098083496
    8. '_s' → logprob: -17.56252098083496
    9. '<|end|>' → logprob: -17.68752098083496
    10. '_e' → logprob: -17.68752098083496

Token 358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034235394559800625
    2. ')
' → logprob: -6.003423690795898
    3. '       ' → logprob: -7.003423690795898
    4. '   ' → logprob: -10.753423690795898
    5. ' )' → logprob: -11.878423690795898
    6. ')

' → logprob: -12.003423690795898
    7. '           ' → logprob: -13.253423690795898
    8. ')
' → logprob: -13.378423690795898
    9. ',' → logprob: -16.0034236907959
    10. '               ' → logprob: -16.1284236907959

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14884133636951447
    2. '<|end|>' → logprob: -2.273841381072998
    3. '
' → logprob: -3.648841381072998
    4. '	' → logprob: -5.398841381072998
    5. '<|end|>' → logprob: -6.898841381072998
    6. ' ' → logprob: -7.148841381072998
    7. '  
' → logprob: -7.148841381072998
    8. '   ' → logprob: -7.648841381072998
    9. '        
' → logprob: -7.898841381072998
    10. ' else' → logprob: -8.39884090423584

Token 360: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7678547501564026
    2. ' if' → logprob: -1.2678546905517578
    3. 'if' → logprob: -1.3928546905517578
    4. ' first' → logprob: -5.892854690551758
    5. '   ' → logprob: -6.767854690551758
    6. ' ' → logprob: -6.767854690551758
    7. '	' → logprob: -8.142854690551758
    8. 'first' → logprob: -8.392854690551758
    9. '<|end|>' → logprob: -8.767854690551758
    10. '	if' → logprob: -9.517854690551758

Token 361: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6683347821235657
    2. ':
' → logprob: -1.293334722518921
    3. '       ' → logprob: -2.043334722518921
    4. '           ' → logprob: -2.793334722518921
    5. ' first' → logprob: -4.9183349609375
    6. ':' → logprob: -5.5433349609375
    7. '   ' → logprob: -6.6683349609375
    8. '		' → logprob: -6.7933349609375
    9. '        
' → logprob: -6.9183349609375
    10. ' =' → logprob: -7.0433349609375

Token 362: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.595598042011261
    2. ' first' → logprob: -0.845598042011261
    3. 'first' → logprob: -3.970597982406616
    4. '           ' → logprob: -7.595598220825195
    5. '	first' → logprob: -9.845598220825195
    6. 'First' → logprob: -10.345598220825195
    7. '   ' → logprob: -11.345598220825195
    8. '(first' → logprob: -13.720598220825195
    9. '[first' → logprob: -13.845598220825195
    10. '               ' → logprob: -14.470598220825195

Token 363: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.3870624303817749
    2. 'first' (adapté à ' first') → logprob: -1.137062430381775
    3. '       ' → logprob: -8.637062072753906
    4. '	first' → logprob: -11.637062072753906
    5. 'First' → logprob: -12.637062072753906
    6. '           ' → logprob: -13.762062072753906
    7. '[first' → logprob: -14.637062072753906
    8. '   ' → logprob: -15.637062072753906
    9. '(first' → logprob: -16.262062072753906
    10. '               ' → logprob: -17.387062072753906

Token 364: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011705794604495168
    2. ' =' → logprob: -6.751170635223389
    3. '=False' → logprob: -15.25117015838623
    4. '=True' → logprob: -16.626171112060547
    5. '.=' → logprob: -18.751171112060547
    6. '=}' → logprob: -20.001171112060547
    7. '＝' → logprob: -20.501171112060547
    8. '=
' → logprob: -20.751171112060547
    9. '=

' → logprob: -20.751171112060547
    10. '   ' → logprob: -20.876171112060547

Token 365: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00033546582562848926
    2. ' False' → logprob: -8.000335693359375
    3. 'True' → logprob: -17.750335693359375
    4. '(False' → logprob: -19.250335693359375
    5. '=False' → logprob: -21.250335693359375
    6. 'false' → logprob: -21.375335693359375
    7. '   ' → logprob: -22.250335693359375
    8. 'F' → logprob: -22.250335693359375
    9. 'FALSE' → logprob: -22.500335693359375
    10. '0' → logprob: -22.750335693359375

Token 366: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18229641020298004
    2. '<|end|>' → logprob: -1.8072963953018188
    3. '   ' → logprob: -6.557296276092529
    4. '<|end|>' → logprob: -7.932296276092529
    5. '
' → logprob: -8.932296752929688
    6. '           ' → logprob: -9.432296752929688
    7. '[' → logprob: -9.557296752929688
    8. ' return' → logprob: -9.932296752929688
    9. ')' → logprob: -10.182296752929688
    10. '    ' → logprob: -10.182296752929688

Token 368: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49820825457572937
    2. 'if' (adapté à ' if') → logprob: -0.9982082843780518
    3. '       ' → logprob: -3.7482082843780518
    4. '   ' → logprob: -8.498208045959473
    5. '
' → logprob: -11.123208045959473
    6. '           ' → logprob: -11.748208045959473
    7. ' ' → logprob: -11.748208045959473
    8. '    ' → logprob: -11.748208045959473
    9. '	if' → logprob: -12.123208045959473
    10. 'e' → logprob: -12.373208045959473

Token 369: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5251047015190125
    2. '(n' → logprob: -0.9001047015190125
    3. '((' → logprob: -6.525104522705078
    4. ' ((' → logprob: -8.275104522705078
    5. ' n' → logprob: -9.150104522705078
    6. '(' → logprob: -9.525104522705078
    7. 'n' → logprob: -9.525104522705078
    8. ' ' → logprob: -12.775104522705078
    9. '(not' → logprob: -13.525104522705078
    10. '(N' → logprob: -15.275104522705078

Token 370: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4492892324924469
    2. '(n' → logprob: -1.0742892026901245
    3. ' (' → logprob: -4.074289321899414
    4. ' n' → logprob: -5.699289321899414
    5. ')' → logprob: -12.074289321899414
    6. ')n' → logprob: -12.199289321899414
    7. ' ' → logprob: -12.449289321899414
    8. '   ' → logprob: -13.074289321899414
    9. '(' → logprob: -13.199289321899414
    10. '_n' → logprob: -13.324289321899414

Token 371: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.3792963922023773
    2. '>>' → logprob: -1.2542964220046997
    3. ' &' → logprob: -3.50429630279541
    4. '&' → logprob: -9.00429630279541
    5. ' ' → logprob: -9.25429630279541
    6. ' ' → logprob: -10.87929630279541
    7. '>>(' → logprob: -11.12929630279541
    8. ')' → logprob: -11.25429630279541
    9. '&nbsp' → logprob: -11.62929630279541
    10. '>>&' → logprob: -11.87929630279541

Token 372: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.836499985889532e-05
    2. ' i' → logprob: -9.7500581741333
    3. ')i' → logprob: -18.750059127807617
    4. '	i' → logprob: -19.375059127807617
    5. '<|end|>' → logprob: -20.250059127807617
    6. ')' → logprob: -21.500059127807617
    7. ' ' → logprob: -21.750059127807617
    8. '%i' → logprob: -22.250059127807617
    9. '
' → logprob: -22.750059127807617
    10. '   ' → logprob: -22.750059127807617

Token 373: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.579495235811919e-05
    2. ' )' → logprob: -9.75009536743164
    3. ')&' → logprob: -10.25009536743164
    4. '&' → logprob: -13.25009536743164
    5. '1' → logprob: -16.00009536743164
    6. '0' → logprob: -17.62509536743164
    7. '&)' → logprob: -17.75009536743164
    8. '')' → logprob: -17.87509536743164
    9. '```' → logprob: -18.12509536743164
    10. '&amp' → logprob: -18.25009536743164

Token 374: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005616719368845224
    2. ')&' → logprob: -5.630616664886475
    3. '&' → logprob: -6.880616664886475
    4. ' &' → logprob: -7.630616664886475
    5. ' )' → logprob: -7.755616664886475
    6. '1' → logprob: -9.755617141723633
    7. '&amp' → logprob: -11.380617141723633
    8. '0' → logprob: -14.130617141723633
    9. ' ' → logprob: -14.505617141723633
    10. '```' → logprob: -14.880617141723633

Token 375: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.750431060791016
    4. '
' → logprob: -19.125431060791016
    5. '  ' → logprob: -19.187931060791016
    6. '{' → logprob: -19.250431060791016
    7. '```' → logprob: -19.312931060791016
    8. '`' → logprob: -19.375431060791016
    9. ' ' → logprob: -19.375431060791016
    10. '

' → logprob: -19.437931060791016

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '
' → logprob: -19.125009536743164
    4. '   ' → logprob: -19.500009536743164
    5. '

' → logprob: -19.750009536743164
    6. '```' → logprob: -20.000009536743164
    7. '  ' → logprob: -20.625009536743164
    8. '{' → logprob: -21.062509536743164
    9. '`' → logprob: -21.437509536743164
    10. '１' → logprob: -22.000009536743164

Token 377: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010572096332907677
    2. ':
' → logprob: -4.8855719566345215
    3. '==' → logprob: -6.2605719566345215
    4. ' ==' → logprob: -7.1355719566345215
    5. ' !=' → logprob: -9.26057243347168
    6. ' :' → logprob: -9.76057243347168
    7. '!=' → logprob: -9.76057243347168
    8. '=' → logprob: -11.26057243347168
    9. '):' → logprob: -11.51057243347168
    10. ':

' → logprob: -12.26057243347168

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36182039976119995
    2. '       ' → logprob: -1.9868204593658447
    3. ' e' → logprob: -2.7368204593658447
    4. 'e' → logprob: -2.8618204593658447
    5. ':
' → logprob: -3.8618204593658447
    6. ',' → logprob: -5.236820220947266
    7. 'res' → logprob: -5.361820220947266
    8. ':' → logprob: -5.361820220947266
    9. ' res' → logprob: -5.861820220947266
    10. '   ' → logprob: -6.861820220947266

Token 379: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8033603429794312
    2. 'if' (adapté à ' if') → logprob: -0.9283603429794312
    3. 'res' → logprob: -2.3033604621887207
    4. ' res' → logprob: -3.6783604621887207
    5. '               ' → logprob: -4.428360462188721
    6. '       ' → logprob: -4.803360462188721
    7. '   ' → logprob: -5.178360462188721
    8. '           ' → logprob: -5.803360462188721
    9. 'e' → logprob: -6.178360462188721
    10. ' ' → logprob: -7.803360462188721

Token 380: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6336934566497803
    2. 'res' → logprob: -0.7586934566497803
    3. ' first' → logprob: -7.508693695068359
    4. 'first' → logprob: -7.758693695068359
    5. '(res' → logprob: -10.25869369506836
    6. '   ' → logprob: -10.63369369506836
    7. ' ' → logprob: -11.25869369506836
    8. ' not' → logprob: -11.50869369506836
    9. '  ' → logprob: -11.63369369506836
    10. 'not' → logprob: -12.32119369506836

Token 381: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.004884807858616114
    2. '_m' → logprob: -5.379884719848633
    3. 'e' → logprob: -8.629884719848633
    4. '==' → logprob: -10.254884719848633
    5. '_' → logprob: -11.254884719848633
    6. 's' → logprob: -11.504884719848633
    7. ' ==' → logprob: -11.629884719848633
    8. 'm' → logprob: -12.254884719848633
    9. ' _' → logprob: -12.254884719848633
    10. '_s' → logprob: -14.004884719848633

Token 382: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0009175319573841989
    2. ' ==' → logprob: -7.000917434692383
    3. '=' → logprob: -12.125917434692383
    4. ')==' → logprob: -15.500917434692383
    5. '==-' → logprob: -15.875917434692383
    6. '===' → logprob: -16.375917434692383
    7. '==
' → logprob: -16.500917434692383
    8. ']==' → logprob: -17.000917434692383
    9. ' is' → logprob: -17.125917434692383
    10. '()==' → logprob: -17.875917434692383

Token 383: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.62500762939453
    4. '۰' → logprob: -19.25000762939453
    5. '  ' → logprob: -19.75000762939453
    6. '    ' → logprob: -21.75000762939453
    7. '00' → logprob: -21.87500762939453
    8. '     ' → logprob: -22.25000762939453
    9. '०' → logprob: -22.62500762939453
    10. '０' → logprob: -22.68750762939453

Token 384: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '-' → logprob: -15.87501049041748
    4. 'None' → logprob: -16.875009536743164
    5. ' -' → logprob: -17.375009536743164
    6. '۰' → logprob: -17.625009536743164
    7. '  ' → logprob: -17.875009536743164
    8. '   ' → logprob: -18.000009536743164
    9. '00' → logprob: -19.875009536743164
    10. '=' → logprob: -20.375009536743164

Token 385: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22771842777729034
    2. 'and' → logprob: -1.852718472480774
    3. ':' → logprob: -3.7277183532714844
    4. ':
' → logprob: -4.102718353271484
    5. '               ' → logprob: -5.227718353271484
    6. '           ' → logprob: -7.352718353271484
    7. ' or' → logprob: -9.352718353271484
    8. ':

' → logprob: -9.852718353271484
    9. '       ' → logprob: -10.352718353271484
    10. ',' → logprob: -10.727718353271484

Token 386: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.009757505729794502
    2. ' res' → logprob: -4.6347575187683105
    3. '           ' → logprob: -14.134757041931152
    4. ' ' → logprob: -15.884757041931152
    5. '   ' → logprob: -16.00975799560547
    6. '  ' → logprob: -16.50975799560547
    7. '               ' → logprob: -16.50975799560547
    8. '          ' → logprob: -16.50975799560547
    9. '(res' → logprob: -16.63475799560547
    10. '	res' → logprob: -16.88475799560547

Token 387: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.125001907348633
    3. 'm' → logprob: -16.625001907348633
    4. ' _' → logprob: -18.875001907348633
    5. 's' → logprob: -19.500001907348633
    6. '_e' → logprob: -19.500001907348633
    7. '_s' → logprob: -20.125001907348633
    8. '_n' → logprob: -21.125001907348633
    9. ' ' → logprob: -21.250001907348633
    10. 'м' → logprob: -21.250001907348633

Token 388: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006716079078614712
    2. ' ==' → logprob: -5.006716251373291
    3. '==
' → logprob: -15.256715774536133
    4. '=' → logprob: -15.506715774536133
    5. ')==' → logprob: -16.256715774536133
    6. '()==' → logprob: -16.756715774536133
    7. '===' → logprob: -17.381715774536133
    8. '==(' → logprob: -17.756715774536133
    9. ']==' → logprob: -17.881715774536133
    10. '==-' → logprob: -18.756715774536133

Token 389: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '   ' → logprob: -19.12548828125
    4. '۰' → logprob: -19.12548828125
    5. '  ' → logprob: -20.50048828125
    6. '00' → logprob: -20.87548828125
    7. '<|end|>' → logprob: -21.00048828125
    8. '000' → logprob: -22.37548828125
    9. '０' → logprob: -23.00048828125
    10. ' ' → logprob: -23.43798828125

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '۰' → logprob: -18.875431060791016
    4. '   ' → logprob: -19.125431060791016
    5. '<|end|>' → logprob: -19.500431060791016
    6. '  ' → logprob: -19.625431060791016
    7. '00' → logprob: -19.750431060791016
    8. '000' → logprob: -21.562931060791016
    9. '<|end|>' → logprob: -22.187931060791016
    10. ' ' → logprob: -22.312931060791016

Token 391: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.058909058570861816
    2. ':' → logprob: -2.9339089393615723
    3. '               ' → logprob: -5.683908939361572
    4. '):
' → logprob: -8.43390941619873
    5. ':

' → logprob: -8.68390941619873
    6. ',' → logprob: -9.55890941619873
    7. 'e' → logprob: -9.93390941619873
    8. '           ' → logprob: -10.43390941619873
    9. ' and' → logprob: -10.68390941619873
    10. '=' → logprob: -10.93390941619873

Token 392: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.040918633341789246
    2. 'res' → logprob: -3.5409185886383057
    3. ' res' → logprob: -4.540918827056885
    4. 'e' → logprob: -8.290918350219727
    5. ' e' → logprob: -9.665918350219727
    6. '           ' → logprob: -10.040918350219727
    7. ',' → logprob: -10.415918350219727
    8. '              ' → logprob: -11.540918350219727
    9. '(res' → logprob: -11.665918350219727
    10. '                
' → logprob: -12.040918350219727

Token 393: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0025003906339406967
    2. ' res' → logprob: -6.252500534057617
    3. '               ' → logprob: -7.502500534057617
    4. '                   ' → logprob: -11.377500534057617
    5. '           ' → logprob: -12.002500534057617
    6. '(res' → logprob: -13.752500534057617
    7. '
' → logprob: -14.252500534057617
    8. '   ' → logprob: -15.627500534057617
    9. '	res' → logprob: -15.627500534057617
    10. '                       ' → logprob: -16.127500534057617

Token 394: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -3.023293538717553e-05
    2. 'e' → logprob: -10.500030517578125
    3. '=' → logprob: -14.000030517578125
    4. '_m' → logprob: -14.250030517578125
    5. ' =' → logprob: -15.625030517578125
    6. '_' → logprob: -15.750030517578125
    7. '	e' → logprob: -15.875030517578125
    8. ' e' → logprob: -16.250030517578125
    9. '=e' → logprob: -16.625030517578125
    10. '_i' → logprob: -17.000030517578125

Token 395: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18058864772319794
    2. ',' → logprob: -2.055588722229004
    3. ' =' → logprob: -3.305588722229004
    4. ',e' → logprob: -8.055588722229004
    5. '=e' → logprob: -8.555588722229004
    6. ' e' → logprob: -11.930588722229004
    7. 'e' → logprob: -12.430588722229004
    8. ' ,' → logprob: -13.180588722229004
    9. '=

' → logprob: -13.805588722229004
    10. ' ' → logprob: -14.680588722229004

Token 396: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.22566722333431244
    2. 'cur' → logprob: -1.7256672382354736
    3. ' res' → logprob: -3.8506672382354736
    4. ' cur' → logprob: -6.2256669998168945
    5. 'e' → logprob: -7.6006669998168945
    6. '=' → logprob: -9.475666999816895
    7. ' e' → logprob: -9.975666999816895
    8. ' =' → logprob: -9.975666999816895
    9. '   ' → logprob: -11.475666999816895
    10. '(res' → logprob: -12.100666999816895

Token 397: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.22736749053001404
    2. '_e' → logprob: -1.6023675203323364
    3. 'e' → logprob: -6.852367401123047
    4. 'm' → logprob: -7.102367401123047
    5. '=' → logprob: -9.977367401123047
    6. ' =' → logprob: -11.602367401123047
    7. '=e' → logprob: -12.477367401123047
    8. '_i' → logprob: -12.602367401123047
    9. ' e' → logprob: -13.602367401123047
    10. ',' → logprob: -13.727367401123047

Token 398: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868771195411682
    2. '=' → logprob: -1.1368770599365234
    3. '=e' → logprob: -13.261877059936523
    4. '<|end|>' → logprob: -13.511877059936523
    5. ' ' → logprob: -14.136877059936523
    6. ',' → logprob: -14.386877059936523
    7. '=m' → logprob: -15.136877059936523
    8. '=user' → logprob: -15.761877059936523
    9. '=
' → logprob: -16.011877059936523
    10. '               ' → logprob: -16.136877059936523

Token 399: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.048685815185308456
    2. 'e' → logprob: -3.0486857891082764
    3. '(cur' → logprob: -9.798686027526855
    4. ' e' → logprob: -10.798686027526855
    5. ' cur' → logprob: -10.798686027526855
    6. '(e' → logprob: -13.548686027526855
    7. '   ' → logprob: -14.673686027526855
    8. '[cur' → logprob: -16.29868507385254
    9. 'current' → logprob: -16.79868507385254
    10. 'curr' → logprob: -17.29868507385254

Token 400: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -4.096126576769166e-05
    2. 'e' → logprob: -10.125041007995605
    3. '_m' → logprob: -14.625041007995605
    4. '	e' → logprob: -15.000041007995605
    5. ''e' → logprob: -17.25004005432129
    6. 'm' → logprob: -17.62504005432129
    7. '-e' → logprob: -17.62504005432129
    8. ',e' → logprob: -18.12504005432129
    9. ' e' → logprob: -18.75004005432129
    10. '_' → logprob: -18.87504005432129

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002991160727106035
    2. '<|end|>' → logprob: -8.500299453735352
    3. ' ,' → logprob: -9.875299453735352
    4. '<|end|>' → logprob: -11.000299453735352
    5. 'cur' → logprob: -11.750299453735352
    6. ',
' → logprob: -12.000299453735352
    7. '[cur' → logprob: -12.750299453735352
    8. ',res' → logprob: -12.875299453735352
    9. ',current' → logprob: -12.875299453735352
    10. '‌,' → logprob: -13.750299453735352

Token 402: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -4.024604277219623e-05
    2. ' cur' → logprob: -10.125040054321289
    3. '	cur' → logprob: -16.62504005432129
    4. '(cur' → logprob: -17.12504005432129
    5. '[cur' → logprob: -17.37504005432129
    6. ' ' → logprob: -19.00004005432129
    7. '.cur' → logprob: -19.12504005432129
    8. 'curr' → logprob: -19.37504005432129
    9. '   ' → logprob: -19.75004005432129
    10. '_cur' → logprob: -20.25004005432129

Token 403: '_m' (ID: 1285)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12694816291332245
    2. '_m' → logprob: -2.126948118209839
    3. ' m' → logprob: -11.626948356628418
    4. 'м' → logprob: -12.376948356628418
    5. '_' → logprob: -12.876948356628418
    6. '	m' → logprob: -14.001948356628418
    7. 's' → logprob: -14.126948356628418
    8. 'e' → logprob: -14.251948356628418
    9. '<|end|>' → logprob: -14.376948356628418
    10. ' ' → logprob: -14.939448356628418

Token 404: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015109812375158072
    2. 'else' → logprob: -9.125150680541992
    3. ' else' → logprob: -10.250150680541992
    4. '<|end|>' → logprob: -12.500150680541992
    5. '       ' → logprob: -14.250150680541992
    6. ',' → logprob: -14.375150680541992
    7. '               ' → logprob: -15.000150680541992
    8. '		' → logprob: -15.375150680541992
    9. ')' → logprob: -15.375150680541992
    10. '.' → logprob: -15.500150680541992

Token 405: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013344056205824018
    2. 'else' → logprob: -6.876334190368652
    3. ' else' → logprob: -8.126334190368652
    4. '<|end|>' → logprob: -13.001334190368652
    5. '```' → logprob: -13.876334190368652
    6. '<|end|>' → logprob: -14.376334190368652
    7. ',' → logprob: -14.501334190368652
    8. '       ' → logprob: -14.876334190368652
    9. '		' → logprob: -15.126334190368652
    10. '               ' → logprob: -15.751334190368652

Token 406: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4772561490535736
    2. '           ' → logprob: -1.602256178855896
    3. ' else' → logprob: -1.727256178855896
    4. '       ' → logprob: -8.227255821228027
    5. '	else' → logprob: -11.227255821228027
    6. ',' → logprob: -11.852255821228027
    7. '               ' → logprob: -12.602255821228027
    8. '   ' → logprob: -12.852255821228027
    9. '		' → logprob: -12.852255821228027
    10. '
' → logprob: -13.852255821228027

Token 407: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5742570757865906
    2. '               ' → logprob: -1.0742571353912354
    3. ',' → logprob: -2.5742571353912354
    4. ':' → logprob: -4.324256896972656
    5. 'e' → logprob: -6.199256896972656
    6. '):
' → logprob: -6.324256896972656
    7. ' e' → logprob: -7.574256896972656
    8. '           ' → logprob: -7.699256896972656
    9. ',
' → logprob: -8.699256896972656
    10. ' ,' → logprob: -8.824256896972656

Token 408: '               ' (ID: 506)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.80697101354599
    2. 'res' → logprob: -1.1819710731506348
    3. '               ' → logprob: -1.4319710731506348
    4. 'e' → logprob: -5.931971073150635
    5. ' e' → logprob: -6.556971073150635
    6. ',' → logprob: -6.556971073150635
    7. '   ' → logprob: -7.181971073150635
    8. '           ' → logprob: -7.431971073150635
    9. ' ' → logprob: -7.681971073150635
    10. ',res' → logprob: -8.556970596313477

Token 409: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.14489932358264923
    2. ' res' → logprob: -2.019899368286133
    3. '   ' → logprob: -7.144899368286133
    4. '               ' → logprob: -7.519899368286133
    5. '                   ' → logprob: -7.644899368286133
    6. '
' → logprob: -9.394899368286133
    7. '           ' → logprob: -9.394899368286133
    8. ' ' → logprob: -9.894899368286133
    9. ',' → logprob: -10.519899368286133
    10. '       ' → logprob: -10.644899368286133

Token 410: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -7.123899558791891e-05
    2. 'e' → logprob: -9.62507152557373
    3. '_es' → logprob: -13.75007152557373
    4. ',e' → logprob: -14.62507152557373
    5. 'res' → logprob: -14.87507152557373
    6. ',' → logprob: -15.00007152557373
    7. '_' → logprob: -15.00007152557373
    8. ''e' → logprob: -15.12507152557373
    9. '
' → logprob: -15.25007152557373
    10. ',_' → logprob: -15.37507152557373

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.514650183613412e-05
    2. ',m' → logprob: -10.125055313110352
    3. ' ,' → logprob: -11.500055313110352
    4. ',res' → logprob: -12.500055313110352
    5. ',
' → logprob: -14.750055313110352
    6. '‌,' → logprob: -15.500055313110352
    7. ',e' → logprob: -16.37505531311035
    8. '=' → logprob: -16.87505531311035
    9. '_,' → logprob: -17.50005531311035
    10. ',new' → logprob: -17.50005531311035

Token 412: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4203900992870331
    2. ' res' → logprob: -1.2953901290893555
    3. '*' → logprob: -3.1703901290893555
    4. 'cur' → logprob: -3.9203901290893555
    5. ' *' → logprob: -5.9203901290893555
    6. ' cur' → logprob: -6.1703901290893555
    7. '
' → logprob: -6.7953901290893555
    8. ',' → logprob: -7.6703901290893555
    9. 'm' → logprob: -8.295390129089355
    10. ',res' → logprob: -8.545390129089355

Token 413: '_m' (ID: 1285)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.16103272140026093
    2. '_m' → logprob: -1.9110326766967773
    3. 'e' → logprob: -7.161032676696777
    4. ',' → logprob: -11.286032676696777
    5. ',e' → logprob: -11.411032676696777
    6. 'm' → logprob: -11.911032676696777
    7. ',m' → logprob: -14.786032676696777
    8. '_s' → logprob: -14.911032676696777
    9. ' e' → logprob: -16.036033630371094
    10. '	e' → logprob: -16.161033630371094

Token 414: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575941264629364
    2. ' =' → logprob: -0.825941264629364
    3. ',' → logprob: -13.32594108581543
    4. ' ' → logprob: -16.07594108581543
    5. ')' → logprob: -16.32594108581543
    6. ' +=' → logprob: -17.70094108581543
    7. '   ' → logprob: -17.82594108581543
    8. '+=' → logprob: -18.07594108581543
    9. ')=' → logprob: -18.70094108581543
    10. '＝' → logprob: -18.70094108581543

Token 415: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.6931505799293518
    2. ' add' → logprob: -0.6931505799293518
    3. '   ' → logprob: -13.568150520324707
    4. '	add' → logprob: -14.068150520324707
    5. ' ' → logprob: -14.818150520324707
    6. '
' → logprob: -15.568150520324707
    7. '(add' → logprob: -15.693150520324707
    8. ')add' → logprob: -16.193151473999023
    9. '.add' → logprob: -16.443151473999023
    10. '  ' → logprob: -16.443151473999023

Token 416: '_fp' (ID: 75423)
  Prédit: '_fp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fp' → logprob: 0.0
    2. '
' → logprob: -17.375
    3. 'fp' → logprob: -17.5
    4. '_' → logprob: -18.25
    5. '(fp' → logprob: -18.5
    6. '_fd' → logprob: -18.75
    7. '```' → logprob: -18.875
    8. '_FP' → logprob: -19.25
    9. '_fn' → logprob: -19.625
    10. '.fp' → logprob: -20.25

Token 417: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0009158630855381489
    2. 'res' → logprob: -7.000916004180908
    3. ' res' → logprob: -13.00091552734375
    4. '(cur' → logprob: -14.25091552734375
    5. ',res' → logprob: -14.50091552734375
    6. '(' → logprob: -14.62591552734375
    7. '	res' → logprob: -15.87591552734375
    8. '(
' → logprob: -16.12591552734375
    9. '=res' → logprob: -16.25091552734375
    10. ' (' → logprob: -16.87591552734375

Token 418: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0007112398743629456
    2. 'e' → logprob: -7.250711441040039
    3. 'es' → logprob: -14.375711441040039
    4. 'm' → logprob: -15.500711441040039
    5. '_m' → logprob: -15.750711441040039
    6. '_em' → logprob: -16.00071144104004
    7. ' e' → logprob: -16.87571144104004
    8. '_es' → logprob: -17.00071144104004
    9. 'res' → logprob: -17.12571144104004
    10. ',e' → logprob: -17.25071144104004

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025406808708794415
    2. ' ,' → logprob: -8.375253677368164
    3. ',res' → logprob: -11.125253677368164
    4. ',
' → logprob: -12.750253677368164
    5. ')' → logprob: -13.375253677368164
    6. '<|end|>' → logprob: -14.000253677368164
    7. '   ' → logprob: -14.250253677368164
    8. 'res' → logprob: -14.750253677368164
    9. ' ' → logprob: -14.875253677368164
    10. '       ' → logprob: -15.250253677368164

Token 420: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.01815345324575901
    2. ' res' → logprob: -4.018153667449951
    3. ' ' → logprob: -13.393153190612793
    4. '
' → logprob: -14.893153190612793
    5. '   ' → logprob: -14.893153190612793
    6. '(res' → logprob: -15.643153190612793
    7. ',res' → logprob: -15.643153190612793
    8. '       ' → logprob: -15.768153190612793
    9. '           ' → logprob: -15.893153190612793
    10. '    ' → logprob: -15.893153190612793

Token 421: '_m' (ID: 1285)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.011970666237175465
    2. '_m' → logprob: -5.011970520019531
    3. 'e' → logprob: -5.261970520019531
    4. 'm' → logprob: -9.886970520019531
    5. ',' → logprob: -13.261970520019531
    6. ',e' → logprob: -13.386970520019531
    7. '_i' → logprob: -15.386970520019531
    8. ',m' → logprob: -15.511970520019531
    9. '_f' → logprob: -15.636970520019531
    10. 'x' → logprob: -15.761970520019531

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010402000043541193
    2. 'cur' → logprob: -9.375103950500488
    3. ' ,' → logprob: -11.250103950500488
    4. '[cur' → logprob: -12.625103950500488
    5. ',
' → logprob: -13.875103950500488
    6. ' cur' → logprob: -14.500103950500488
    7. '(cur' → logprob: -14.750103950500488
    8. '           ' → logprob: -15.125103950500488
    9. '   ' → logprob: -15.625103950500488
    10. '),' → logprob: -15.750103950500488

Token 423: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0024758970830589533
    2. ' cur' → logprob: -6.002475738525391
    3. '[cur' → logprob: -16.75247573852539
    4. '(cur' → logprob: -16.87747573852539
    5. '   ' → logprob: -17.00247573852539
    6. ' ' → logprob: -17.00247573852539
    7. '	cur' → logprob: -17.50247573852539
    8. 'curr' → logprob: -18.12747573852539
    9. 'e' → logprob: -18.25247573852539
    10. '  ' → logprob: -19.12747573852539

Token 424: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -1.5048530030981055e-06
    2. 'e' → logprob: -13.875001907348633
    3. '_m' → logprob: -15.750001907348633
    4. ''e' → logprob: -16.500001907348633
    5. '_' → logprob: -16.750001907348633
    6. '	e' → logprob: -17.250001907348633
    7. ' e' → logprob: -18.250001907348633
    8. ' _' → logprob: -18.250001907348633
    9. '-e' → logprob: -18.250001907348633
    10. '
' → logprob: -18.625001907348633

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015753143816255033
    2. ' ,' → logprob: -8.875157356262207
    3. ',res' → logprob: -11.750157356262207
    4. '   ' → logprob: -13.000157356262207
    5. ',m' → logprob: -13.500157356262207
    6. ',
' → logprob: -13.750157356262207
    7. '       ' → logprob: -13.750157356262207
    8. ',current' → logprob: -13.875157356262207
    9. '‌,' → logprob: -14.750157356262207
    10. '```' → logprob: -15.375157356262207

Token 426: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0010331686353310943
    2. ' cur' → logprob: -6.876033306121826
    3. '	cur' → logprob: -15.251032829284668
    4. '(cur' → logprob: -16.626033782958984
    5. '[cur' → logprob: -16.626033782958984
    6. ' ' → logprob: -17.251033782958984
    7. '.cur' → logprob: -17.876033782958984
    8. 'curr' → logprob: -17.876033782958984
    9. '   ' → logprob: -17.876033782958984
    10. '  ' → logprob: -18.751033782958984

Token 427: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -9.17420256882906e-05
    2. 'm' → logprob: -9.375091552734375
    3. '_e' → logprob: -12.625091552734375
    4. 'e' → logprob: -13.000091552734375
    5. 's' → logprob: -15.250091552734375
    6. '	m' → logprob: -15.375091552734375
    7. '_i' → logprob: -15.375091552734375
    8. 'м' → logprob: -15.500091552734375
    9. '_' → logprob: -16.500091552734375
    10. '```' → logprob: -16.812591552734375

Token 428: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013214473437983543
    2. ')
' → logprob: -9.00013256072998
    3. '       ' → logprob: -12.12513256072998
    4. '           ' → logprob: -13.00013256072998
    5. ' )' → logprob: -14.62513256072998
    6. '   ' → logprob: -14.75013256072998
    7. '               ' → logprob: -16.375131607055664
    8. ')

' → logprob: -17.375131607055664
    9. ')return' → logprob: -17.375131607055664
    10. ')
' → logprob: -18.250131607055664

Token 429: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0007104054093360901
    2. ' res' → logprob: -7.250710487365723
    3. '(res' → logprob: -14.625710487365723
    4. ' (' → logprob: -21.125709533691406
    5. '	res' → logprob: -22.125709533691406
    6. '(' → logprob: -22.250709533691406
    7. '   ' → logprob: -22.500709533691406
    8. '$res' → logprob: -23.375709533691406
    9. 're' → logprob: -23.500709533691406
    10. '0' → logprob: -23.875709533691406

Token 432: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -5.013994814362377e-05
    2. '_' → logprob: -11.00005054473877
    3. 'e' → logprob: -11.25005054473877
    4. '_m' → logprob: -12.37505054473877
    5. '_t' → logprob: -13.25005054473877
    6. '_,' → logprob: -13.62505054473877
    7. ' _' → logprob: -13.62505054473877
    8. ',' → logprob: -13.75005054473877
    9. '_s' → logprob: -14.12505054473877
    10. '```' → logprob: -14.12505054473877

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011262869229540229
    2. '<|end|>' → logprob: -7.001126289367676
    3. '[' → logprob: -9.376126289367676
    4. ' ,' → logprob: -9.876126289367676
    5. '<|end|>' → logprob: -11.001126289367676
    6. ' ' → logprob: -11.501126289367676
    7. ',res' → logprob: -11.626126289367676
    8. '.' → logprob: -11.751126289367676
    9. ',
' → logprob: -11.751126289367676
    10. ')' → logprob: -12.376126289367676

Token 434: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -5.157039049663581e-05
    2. ' res' → logprob: -9.875051498413086
    3. '(res' → logprob: -18.875051498413086
    4. 'm' → logprob: -19.125051498413086
    5. '	res' → logprob: -20.000051498413086
    6. '$res' → logprob: -20.375051498413086
    7. 'r' → logprob: -21.750051498413086
    8. ' ' → logprob: -22.250051498413086
    9. '```' → logprob: -22.250051498413086
    10. 'rem' → logprob: -22.500051498413086

Token 435: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -4.36574100604048e-06
    2. 'm' → logprob: -12.500004768371582
    3. '_e' → logprob: -14.625004768371582
    4. '_' → logprob: -17.125003814697266
    5. 'e' → logprob: -17.875003814697266
    6. ' _' → logprob: -18.625003814697266
    7. '_s' → logprob: -18.875003814697266
    8. 'м' → logprob: -19.625003814697266
    9. '```' → logprob: -19.750003814697266
    10. 's' → logprob: -19.812503814697266

Token 436: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5001665353775024
    2. 'main' → logprob: -2.375166416168213
    3. ' parse' → logprob: -3.375166416168213
    4. 'pow' → logprob: -3.375166416168213
    5. 'int' → logprob: -3.750166416168213
    6. ' divide' → logprob: -3.750166416168213
    7. ' multiply' → logprob: -3.875166416168213
    8. 'parse' → logprob: -4.125166416168213
    9. ' int' → logprob: -4.125166416168213
    10. ' pow' → logprob: -4.250166416168213

Token 439: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.465036105713807e-06
    2. '():
' → logprob: -12.500007629394531
    3. ' ():' → logprob: -13.000007629394531
    4. '(' → logprob: -14.000007629394531
    5. '()' → logprob: -14.750007629394531
    6. '():
' → logprob: -16.87500762939453
    7. '(":' → logprob: -17.25000762939453
    8. '():

' → logprob: -17.75000762939453
    9. ':' → logprob: -17.87500762939453
    10. '()>' → logprob: -18.00000762939453

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0079120434820652
    2. ' import' → logprob: -5.2579121589660645
    3. '(' → logprob: -7.0079121589660645
    4. 'import' → logprob: -8.132911682128906
    5. ' pass' → logprob: -8.507911682128906
    6. ' line' → logprob: -8.507911682128906
    7. '    ' → logprob: -9.007911682128906
    8. ' input' → logprob: -9.132911682128906
    9. ' readline' → logprob: -9.257911682128906
    10. ' n' → logprob: -9.382911682128906

Token 441: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.21885527670383453
    2. ' import' → logprob: -2.218855381011963
    3. 'n' → logprob: -2.968855381011963
    4. '   ' → logprob: -4.218855381011963
    5. ' line' → logprob: -4.218855381011963
    6. 'import' → logprob: -5.343855381011963
    7. ' t' → logprob: -7.343855381011963
    8. ' input' → logprob: -7.468855381011963
    9. ' a' → logprob: -8.593854904174805
    10. 'line' → logprob: -8.718854904174805

Token 442: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.2405773103237152
    2. '()' → logprob: -2.115577220916748
    3. '_data' → logprob: -2.490577220916748
    4. '_str' → logprob: -5.365577220916748
    5. '_lines' → logprob: -6.115577220916748
    6. '_text' → logprob: -6.740577220916748
    7. '_' → logprob: -7.115577220916748
    8. ' =' → logprob: -7.865577220916748
    9. '=' → logprob: -7.990577220916748
    10. 'line' → logprob: -8.365577697753906

Token 443: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1494375616312027
    2. ' =' → logprob: -2.024437665939331
    3. '()' → logprob: -5.024437427520752
    4. '   ' → logprob: -9.64943790435791
    5. '=sys' → logprob: -10.14943790435791
    6. '=[]' → logprob: -10.64943790435791
    7. '(' → logprob: -11.02443790435791
    8. '().' → logprob: -12.77443790435791
    9. '[]' → logprob: -13.39943790435791
    10. '[' → logprob: -13.39943790435791

Token 444: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07889419049024582
    2. ' sys' → logprob: -2.5788941383361816
    3. '[' → logprob: -12.45389461517334
    4. ' [' → logprob: -15.32889461517334
    5. '	sys' → logprob: -16.328893661499023
    6. '(sys' → logprob: -16.453893661499023
    7. 'list' → logprob: -17.203893661499023
    8. '=sys' → logprob: -17.578893661499023
    9. '   ' → logprob: -19.203893661499023
    10. ' ' → logprob: -20.328893661499023

Token 445: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.65707261255011e-06
    2. '.argv' → logprob: -12.125008583068848
    3. '.' → logprob: -13.000008583068848
    4. '.stdout' → logprob: -14.750008583068848
    5. '.std' → logprob: -15.000008583068848
    6. 'stdin' → logprob: -16.000009536743164
    7. '.st' → logprob: -16.375009536743164
    8. ' .' → logprob: -18.000009536743164
    9. '(stdin' → logprob: -18.875009536743164
    10. '.stderr' → logprob: -19.000009536743164

Token 446: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.22085052728652954
    2. '.readline' → logprob: -1.9708504676818848
    3. '.read' → logprob: -3.2208504676818848
    4. 'read' → logprob: -3.9708504676818848
    5. '.' → logprob: -10.220850944519043
    6. '_read' → logprob: -12.220850944519043
    7. 'buffer' → logprob: -13.470850944519043
    8. 'lines' → logprob: -13.595850944519043
    9. '=' → logprob: -14.595850944519043
    10. 'for' → logprob: -14.595850944519043

Token 447: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0181526318192482
    2. '()' → logprob: -4.018152713775635
    3. '()

' → logprob: -14.643152236938477
    4. '(' → logprob: -14.893152236938477
    5. '()
' → logprob: -15.018152236938477
    6. ' ().' → logprob: -15.018152236938477
    7. '()).' → logprob: -15.143152236938477
    8. 'lines' → logprob: -15.143152236938477
    9. '()\' → logprob: -15.268152236938477
    10. '_lines' → logprob: -15.643152236938477

Token 448: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2014147937297821
    2. 'split' → logprob: -1.7014148235321045
    3. 'decode' → logprob: -13.951415061950684
    4. 'rstrip' → logprob: -14.326415061950684
    5. '```' → logprob: -17.576414108276367
    6. ' strip' → logprob: -18.076414108276367
    7. '(split' → logprob: -18.201414108276367
    8. ' split' → logprob: -18.326414108276367
    9. 'replace' → logprob: -18.451414108276367
    10. 'read' → logprob: -19.076414108276367

Token 449: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16245219111442566
    2. 'lines' → logprob: -1.912452220916748
    3. '('\' → logprob: -6.162452220916748
    4. '()
' → logprob: -9.78745174407959
    5. '()\' → logprob: -9.91245174407959
    6. '()[' → logprob: -12.16245174407959
    7. '('' → logprob: -13.03745174407959
    8. '(' → logprob: -13.16245174407959
    9. '()]' → logprob: -13.78745174407959
    10. '("\' → logprob: -14.41245174407959

Token 450: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001601539261173457
    2. '()
' → logprob: -8.750160217285156
    3. '()`' → logprob: -15.000160217285156
    4. '())' → logprob: -15.250160217285156
    5. '()]' → logprob: -15.375160217285156
    6. '()

' → logprob: -15.750160217285156
    7. '(' → logprob: -15.750160217285156
    8. ' ()' → logprob: -16.125160217285156
    9. '()[' → logprob: -16.500160217285156
    10. '   ' → logprob: -16.500160217285156

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018477557227015495
    2. ' n' → logprob: -4.268477439880371
    3. ' for' → logprob: -6.268477439880371
    4. 'n' → logprob: -6.643477439880371
    5. 'index' → logprob: -8.518477439880371
    6. ' index' → logprob: -8.643477439880371
    7. 'for' → logprob: -8.893477439880371
    8. ' idx' → logprob: -9.143477439880371
    9. 'idx' → logprob: -9.518477439880371
    10. ' count' → logprob: -9.518477439880371

Token 452: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.193199634552002
    2. 'T' → logprob: -1.693199634552002
    3. ' n' → logprob: -1.943199634552002
    4. ' T' → logprob: -2.068199634552002
    5. 't' → logprob: -2.068199634552002
    6. ' t' → logprob: -2.568199634552002
    7. '   ' → logprob: -4.443199634552002
    8. 'a' → logprob: -4.568199634552002
    9. 'q' → logprob: -5.193199634552002
    10. 'Q' → logprob: -5.693199634552002

Token 453: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10162549465894699
    2. ' =' → logprob: -2.351625442504883
    3. 'f' → logprob: -7.351625442504883
    4. 'n' → logprob: -7.476625442504883
    5. 'nd' → logprob: -8.601625442504883
    6. '_' → logprob: -12.101625442504883
    7. 'nt' → logprob: -12.351625442504883
    8. 'dx' → logprob: -12.601625442504883
    9. 'x' → logprob: -13.226625442504883
    10. 'd' → logprob: -13.226625442504883

Token 454: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007566197891719639
    2. ' ' → logprob: -7.500756740570068
    3. '1' → logprob: -8.50075626373291
    4. '2' → logprob: -15.25075626373291
    5. '   ' → logprob: -16.500757217407227
    6. '```' → logprob: -19.750757217407227
    7. '  ' → logprob: -20.125757217407227
    8. 'int' → logprob: -21.500757217407227
    9. '3' → logprob: -21.500757217407227
    10. ' ' → logprob: -21.750757217407227

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001605115394340828
    2. '1' → logprob: -8.750160217285156
    3. ' ' → logprob: -13.375160217285156
    4. '2' → logprob: -14.750160217285156
    5. '   ' → logprob: -19.375160217285156
    6. '```' → logprob: -19.375160217285156
    7. '-' → logprob: -21.375160217285156
    8. 'int' → logprob: -21.375160217285156
    9. '3' → logprob: -21.562660217285156
    10. '4' → logprob: -22.187660217285156

Token 456: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20285455882549286
    2. 'while' → logprob: -2.827854633331299
    3. '
' → logprob: -2.952854633331299
    4. '<|end|>' → logprob: -2.952854633331299
    5. ' while' → logprob: -4.452854633331299
    6. '	while' → logprob: -5.077854633331299
    7. '```' → logprob: -7.702854633331299
    8. '<|end|>' → logprob: -7.702854633331299
    9. '    
' → logprob: -8.07785415649414
    10. ' ' → logprob: -8.57785415649414

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016463837819173932
    2. ' while' → logprob: -6.626646518707275
    3. 'while' → logprob: -8.126646041870117
    4. '<|end|>' → logprob: -11.626646041870117
    5. '```' → logprob: -12.126646041870117
    6. '	while' → logprob: -12.626646041870117
    7. 'n' → logprob: -12.876646041870117
    8. ' n' → logprob: -13.251646041870117
    9. ',' → logprob: -14.501646041870117
    10. ' for' → logprob: -14.751646041870117

Token 458: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7493153810501099
    2. 'while' (adapté à ' while') → logprob: -0.7493153810501099
    3. '   ' → logprob: -3.4993152618408203
    4. 'n' → logprob: -3.9993152618408203
    5. ' n' → logprob: -5.12431526184082
    6. '```' → logprob: -10.24931526184082
    7. '
' → logprob: -10.87431526184082
    8. '	while' → logprob: -10.87431526184082
    9. 'for' → logprob: -11.49931526184082
    10. ' ' → logprob: -11.49931526184082

Token 459: ' True' (ID: 6432)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03805216774344444
    2. 'i' → logprob: -3.2880520820617676
    3. '   ' → logprob: -11.788052558898926
    4. '(i' → logprob: -13.538052558898926
    5. ' ' → logprob: -14.163052558898926
    6. '	i' → logprob: -14.788052558898926
    7. ' True' → logprob: -15.288052558898926
    8. 'True' → logprob: -15.288052558898926
    9. '  ' → logprob: -16.16305160522461
    10. ' ' → logprob: -17.28805160522461

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7571830153465271
    2. '       ' → logprob: -0.7571830153465271
    3. '   ' → logprob: -3.757183074951172
    4. ':
' → logprob: -4.257183074951172
    5. '<|end|>' → logprob: -4.507183074951172
    6. ' and' → logprob: -4.882183074951172
    7. ',' → logprob: -6.007183074951172
    8. '[' → logprob: -7.257183074951172
    9. 'and' → logprob: -7.257183074951172
    10. '<|end|>' → logprob: -7.382183074951172

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0098931435495615
    2. ' if' → logprob: -4.75989294052124
    3. 'if' → logprob: -7.13489294052124
    4. '   ' → logprob: -7.75989294052124
    5. '<|end|>' → logprob: -10.634893417358398
    6. '```' → logprob: -10.759893417358398
    7. ' ' → logprob: -13.259893417358398
    8. '	if' → logprob: -13.509893417358398
    9. ',' → logprob: -14.009893417358398
    10. '	   ' → logprob: -14.259893417358398

Token 462: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12493300437927246
    2. '       ' → logprob: -2.3749330043792725
    3. ' if' → logprob: -3.8749330043792725
    4. '   ' → logprob: -5.624933242797852
    5. 'line' → logprob: -10.249933242797852
    6. 'i' → logprob: -11.999933242797852
    7. 'try' → logprob: -12.374933242797852
    8. '	if' → logprob: -12.374933242797852
    9. '```' → logprob: -12.874933242797852
    10. ' line' → logprob: -13.499933242797852

Token 463: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931505799293518
    2. ' i' → logprob: -0.6931505799293518
    3. '	i' → logprob: -13.443150520324707
    4. ' ' → logprob: -13.693150520324707
    5. '(i' → logprob: -15.693150520324707
    6. '   ' → logprob: -15.818150520324707
    7. '_i' → logprob: -16.193151473999023
    8. ' ' → logprob: -16.318151473999023
    9. 'I' → logprob: -17.318151473999023
    10. '  ' → logprob: -17.693151473999023

Token 464: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.03811987116932869
    2. '>=' → logprob: -3.2881197929382324
    3. ')>=' → logprob: -10.41312026977539
    4. ']>=' → logprob: -10.66312026977539
    5. '<|end|>' → logprob: -11.78812026977539
    6. ' <' → logprob: -12.41312026977539
    7. ' ==' → logprob: -12.53812026977539
    8. ' ' → logprob: -12.91312026977539
    9. '   ' → logprob: -13.28812026977539
    10. '==' → logprob: -13.66312026977539

Token 465: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0001234428636962548
    2. ' len' → logprob: -9.000123023986816
    3. '(len' → logprob: -18.125123977661133
    4. '	len' → logprob: -19.250123977661133
    5. 'length' → logprob: -19.250123977661133
    6. '=len' → logprob: -19.375123977661133
    7. '<len' → logprob: -19.625123977661133
    8. '   ' → logprob: -20.375123977661133
    9. '[len' → logprob: -21.000123977661133
    10. ' ' → logprob: -21.250123977661133

Token 466: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00033558503491804004
    2. 'input' → logprob: -8.000335693359375
    3. ' input' → logprob: -15.625335693359375
    4. '=input' → logprob: -17.625335693359375
    5. '<input' → logprob: -18.125335693359375
    6. ',input' → logprob: -18.875335693359375
    7. '[input' → logprob: -20.250335693359375
    8. '(' → logprob: -20.875335693359375
    9. '_input' → logprob: -21.125335693359375
    10. ' (' → logprob: -21.375335693359375

Token 467: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: 0.0
    2. '_LINES' → logprob: -18.375
    3. 'lines' → logprob: -18.875
    4. ')' → logprob: -19.25
    5. '_' → logprob: -19.5
    6. '(lines' → logprob: -20.125
    7. '```' → logprob: -20.375
    8. ')_' → logprob: -20.5
    9. 'Lines' → logprob: -20.75
    10. '_links' → logprob: -20.875

Token 468: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7623487710952759
    2. ':
' → logprob: -1.0123487710952759
    3. ':' → logprob: -2.2623486518859863
    4. '):
' → logprob: -3.3873486518859863
    5. '):' → logprob: -4.387348651885986
    6. '       ' → logprob: -5.012348651885986
    7. '   ' → logprob: -5.512348651885986
    8. 'or' → logprob: -5.512348651885986
    9. '           ' → logprob: -5.887348651885986
    10. ')' → logprob: -6.387348651885986

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019353042589500546
    2. '       ' → logprob: -6.2519354820251465
    3. '   ' → logprob: -12.126935005187988
    4. '          ' → logprob: -15.251935005187988
    5. '               ' → logprob: -15.376935005187988
    6. '     ' → logprob: -15.626935005187988
    7. '		' → logprob: -15.751935005187988
    8. '	       ' → logprob: -15.876935005187988
    9. '         ' → logprob: -16.001935958862305
    10. ',' → logprob: -16.376935958862305

Token 470: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02150445058941841
    2. '       ' → logprob: -4.0215044021606445
    3. 'break' (adapté à ' break') → logprob: -5.8965044021606445
    4. ' break' → logprob: -8.271504402160645
    5. 'return' → logprob: -8.521504402160645
    6. '   ' → logprob: -9.021504402160645
    7. ' return' → logprob: -11.646504402160645
    8. ' ' → logprob: -12.396504402160645
    9. '               ' → logprob: -12.521504402160645
    10. '	break' → logprob: -12.771504402160645

Token 471: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009234884637407959
    2. '<|end|>' → logprob: -7.2509236335754395
    3. '        
' → logprob: -9.125923156738281
    4. '   ' → logprob: -9.875923156738281
    5. '
' → logprob: -10.750923156738281
    6. '```' → logprob: -11.625923156738281
    7. '<|end|>' → logprob: -12.250923156738281
    8. '  
' → logprob: -12.500923156738281
    9. ',' → logprob: -12.750923156738281
    10. '    
' → logprob: -13.000923156738281

Token 472: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016920845955610275
    2. '   ' → logprob: -6.751692295074463
    3. '<|end|>' → logprob: -8.001691818237305
    4. '        
' → logprob: -9.501691818237305
    5. ' ' → logprob: -10.126691818237305
    6. '  
' → logprob: -10.876691818237305
    7. '
' → logprob: -11.376691818237305
    8. '    
' → logprob: -11.876691818237305
    9. '           ' → logprob: -12.001691818237305
    10. '      ' → logprob: -12.376691818237305

Token 473: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.42103809118270874
    2. ' n' → logprob: -1.9210381507873535
    3. 'line' → logprob: -2.4210381507873535
    4. 'n' (adapté à ' n') → logprob: -2.7960381507873535
    5. '       ' → logprob: -3.2960381507873535
    6. ' parts' → logprob: -5.5460381507873535
    7. '   ' → logprob: -6.4210381507873535
    8. ' if' → logprob: -7.2960381507873535
    9. ' L' → logprob: -7.7960381507873535
    10. 'x' → logprob: -7.9210381507873535

Token 474: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0979827493429184
    2. '=' → logprob: -2.59798264503479
    3. '_line' → logprob: -4.097982883453369
    4. ',' → logprob: -6.597982883453369
    5. '=line' → logprob: -7.472982883453369
    6. '_str' → logprob: -8.722982406616211
    7. '   ' → logprob: -9.597982406616211
    8. 'line' → logprob: -9.722982406616211
    9. ' line' → logprob: -10.347982406616211
    10. ' ' → logprob: -11.597982406616211

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132699131965637
    2. '=' → logprob: -1.313269853591919
    3. '   ' → logprob: -12.68826961517334
    4. ',' → logprob: -13.18826961517334
    5. ' ' → logprob: -13.56326961517334
    6. '=line' → logprob: -14.43826961517334
    7. ')' → logprob: -15.06326961517334
    8. '    ' → logprob: -15.43826961517334
    9. ' ' → logprob: -16.313270568847656
    10. '       ' → logprob: -16.438270568847656

Token 476: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009115827269852161
    2. ' input' → logprob: -7.000911712646484
    3. 'int' → logprob: -17.125911712646484
    4. ' ' → logprob: -20.250911712646484
    5. '(input' → logprob: -20.875911712646484
    6. '<input' → logprob: -22.125911712646484
    7. 'output' → logprob: -23.000911712646484
    8. '	input' → logprob: -23.000911712646484
    9. '   ' → logprob: -23.125911712646484
    10. '=input' → logprob: -23.500911712646484

Token 477: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -5.6100132496794686e-05
    2. 'lines' → logprob: -10.000056266784668
    3. '()' → logprob: -12.750056266784668
    4. 'Lines' → logprob: -12.875056266784668
    5. '[i' → logprob: -13.625056266784668
    6. '```' → logprob: -13.750056266784668
    7. '()[' → logprob: -14.125056266784668
    8. '_LINES' → logprob: -14.500056266784668
    9. '_line' → logprob: -14.750056266784668
    10. 's' → logprob: -15.125056266784668

Token 478: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -13.000003814697266
    3. '[n' → logprob: -13.875003814697266
    4. '```' → logprob: -14.750003814697266
    5. '[
' → logprob: -16.000003814697266
    6. '   ' → logprob: -16.500003814697266
    7. '[++' → logprob: -17.375003814697266
    8. 'i' → logprob: -18.250003814697266
    9. '\[' → logprob: -18.250003814697266
    10. ' [' → logprob: -18.750003814697266

Token 479: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36491090059280396
    2. '].' → logprob: -1.3649108409881592
    3. ']
' → logprob: -2.989910840988159
    4. '];' → logprob: -11.364911079406738
    5. ']

' → logprob: -11.739911079406738
    6. ']
' → logprob: -11.989911079406738
    7. ']+' → logprob: -11.989911079406738
    8. '])' → logprob: -12.739911079406738
    9. '][' → logprob: -13.239911079406738
    10. '[i' → logprob: -13.489911079406738

Token 480: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'rstrip' → logprob: -16.5
    3. ' strip' → logprob: -18.625
    4. 'str' → logprob: -21.125
    5. '_strip' → logprob: -21.25
    6. '(strip' → logprob: -22.25
    7. 'isdigit' → logprob: -23.125
    8. '.strip' → logprob: -23.125
    9. 'trim' → logprob: -23.5
    10. '-strip' → logprob: -23.5

Token 481: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4650188088417053
    2. '       ' → logprob: -1.3400187492370605
    3. '()
' → logprob: -2.5900187492370605
    4. '<|end|>' → logprob: -3.7150187492370605
    5. '<|end|>' → logprob: -5.8400187492370605
    6. ')' → logprob: -6.3400187492370605
    7. '```' → logprob: -6.7150187492370605
    8. '        
' → logprob: -7.5900187492370605
    9. '
' → logprob: -7.5900187492370605
    10. '   ' → logprob: -7.5900187492370605

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045851110480725765
    2. '<|end|>' → logprob: -5.504585266113281
    3. '   ' → logprob: -8.504585266113281
    4. ' if' → logprob: -8.879585266113281
    5. 'i' → logprob: -10.254585266113281
    6. 'if' → logprob: -10.379585266113281
    7. '<|end|>' → logprob: -10.504585266113281
    8. '```' → logprob: -10.754585266113281
    9. '        
' → logprob: -11.754585266113281
    10. ',' → logprob: -12.254585266113281

Token 483: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16182808578014374
    2. 'if' (adapté à ' if') → logprob: -1.9118280410766602
    3. ' if' → logprob: -7.03682804107666
    4. ' i' → logprob: -7.66182804107666
    5. '       ' → logprob: -8.91182804107666
    6. '   ' → logprob: -9.28682804107666
    7. '```' → logprob: -11.41182804107666
    8. 'n' → logprob: -11.91182804107666
    9. '<|end|>' → logprob: -12.91182804107666
    10. '
' → logprob: -13.53682804107666

Token 484: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.38575851917266846
    2. 'n' → logprob: -1.3857585191726685
    3. ' n' → logprob: -2.885758399963379
    4. 'not' → logprob: -4.260758399963379
    5. 'n't' → logprob: -12.135758399963379
    6. ' ' → logprob: -13.510758399963379
    7. '	n' → logprob: -15.260758399963379
    8. '	not' → logprob: -16.010759353637695
    9. ' ' → logprob: -16.760759353637695
    10. '```' → logprob: -17.010759353637695

Token 485: '_line' (ID: 14418)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0009545749635435641
    2. ' ==' → logprob: -7.125954627990723
    3. '=' → logprob: -8.875954627990723
    4. '```' → logprob: -12.625954627990723
    5. '()==' → logprob: -13.500954627990723
    6. ']==' → logprob: -13.875954627990723
    7. '===' → logprob: -14.375954627990723
    8. '=='' → logprob: -14.500954627990723
    9. '==
' → logprob: -14.625954627990723
    10. 'o' → logprob: -14.625954627990723

Token 486: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3132782578468323
    2. ' ==' → logprob: -1.3132781982421875
    3. '()==' → logprob: -11.688278198242188
    4. '=' → logprob: -12.563278198242188
    5. '===' → logprob: -13.063278198242188
    6. '=='' → logprob: -14.188278198242188
    7. '==
' → logprob: -14.188278198242188
    8. ']==' → logprob: -14.938278198242188
    9. '```' → logprob: -15.563278198242188
    10. ')==' → logprob: -15.563278198242188

Token 487: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.021059473976492882
    2. ''' → logprob: -4.021059513092041
    3. '"":' → logprob: -6.271059513092041
    4. '""' → logprob: -7.146059513092041
    5. '"' → logprob: -8.521059036254883
    6. ' '':
' → logprob: -11.021059036254883
    7. '''
' → logprob: -12.146059036254883
    8. ''ex' → logprob: -12.771059036254883
    9. ''',' → logprob: -14.021059036254883
    10. ''end' → logprob: -14.271059036254883

Token 488: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052907997742295265
    2. '':' → logprob: -5.380290985107422
    3. ''' → logprob: -7.380290985107422
    4. '':
' → logprob: -11.005290985107422
    5. '''' → logprob: -11.630290985107422
    6. 'END' → logprob: -12.505290985107422
    7. ' ' → logprob: -12.505290985107422
    8. '"' → logprob: -12.880290985107422
    9. '#' → logprob: -13.005290985107422
    10. '':
' → logprob: -13.005290985107422

Token 489: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.6336808204650879
    2. '':' → logprob: -0.7586808204650879
    3. ''' → logprob: -7.133680820465088
    4. '':
' → logprob: -8.50868034362793
    5. ''):
' → logprob: -10.75868034362793
    6. '0' → logprob: -11.00868034362793
    7. '\n' → logprob: -11.75868034362793
    8. '   ' → logprob: -12.13368034362793
    9. '__':
' → logprob: -12.38368034362793
    10. ' '' → logprob: -12.38368034362793

Token 490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012682090746238828
    2. '       ' → logprob: -6.75126838684082
    3. '   ' → logprob: -10.50126838684082
    4. ':
' → logprob: -11.37626838684082
    5. '<|end|>' → logprob: -11.37626838684082
    6. ':' → logprob: -11.75126838684082
    7. ',' → logprob: -12.00126838684082
    8. ' break' → logprob: -12.12626838684082
    9. '          ' → logprob: -12.25126838684082
    10. '	       ' → logprob: -12.37626838684082

Token 491: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005755764897912741
    2. 'break' (adapté à ' break') → logprob: -5.75575590133667
    3. ' break' → logprob: -6.00575590133667
    4. '       ' → logprob: -9.380755424499512
    5. '	break' → logprob: -11.380755424499512
    6. '               ' → logprob: -12.255755424499512
    7. '		' → logprob: -12.505755424499512
    8. '   ' → logprob: -13.005755424499512
    9. 'return' → logprob: -13.005755424499512
    10. '	       ' → logprob: -14.505755424499512

Token 492: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025788258062675595
    2. '<|end|>' → logprob: -8.75025749206543
    3. '   ' → logprob: -9.75025749206543
    4. '
' → logprob: -11.37525749206543
    5. ',' → logprob: -11.50025749206543
    6. '        
' → logprob: -12.37525749206543
    7. '	' → logprob: -12.37525749206543
    8. '<|end|>' → logprob: -13.12525749206543
    9. '```' → logprob: -13.25025749206543
    10. '           ' → logprob: -13.87525749206543

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001341315801255405
    2. '   ' → logprob: -7.251341342926025
    3. '<|end|>' → logprob: -7.501341342926025
    4. '	' → logprob: -10.626340866088867
    5. '
' → logprob: -11.501340866088867
    6. 'i' → logprob: -11.751340866088867
    7. '```' → logprob: -11.876340866088867
    8. '<|end|>' → logprob: -11.876340866088867
    9. ',' → logprob: -12.251340866088867
    10. '	   ' → logprob: -12.376340866088867

Token 494: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008882468566298485
    2. 'n' (adapté à ' n') → logprob: -5.383882522583008
    3. 'i' → logprob: -6.008882522583008
    4. '   ' → logprob: -7.008882522583008
    5. ' i' → logprob: -7.633882522583008
    6. '
' → logprob: -8.633882522583008
    7. ' n' → logprob: -9.508882522583008
    8. '<|end|>' → logprob: -9.633882522583008
    9. 'e' → logprob: -10.383882522583008
    10. ' ' → logprob: -11.133882522583008

Token 495: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03939852863550186
    2. '=' → logprob: -3.289398431777954
    3. ',' → logprob: -6.664398670196533
    4. ' ' → logprob: -10.539398193359375
    5. ')' → logprob: -11.539398193359375
    6. ' =
' → logprob: -11.789398193359375
    7. '_' → logprob: -12.039398193359375
    8. '   ' → logprob: -12.164398193359375
    9. '_line' → logprob: -12.164398193359375
    10. '=int' → logprob: -12.289398193359375

Token 496: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00861456897109747
    2. ' int' → logprob: -4.758614540100098
    3. '(int' → logprob: -18.633615493774414
    4. '10' → logprob: -18.758615493774414
    5. '=int' → logprob: -20.508615493774414
    6. ' ' → logprob: -20.633615493774414
    7. '[int' → logprob: -21.008615493774414
    8. '<int' → logprob: -21.383615493774414
    9. 'n' → logprob: -21.383615493774414
    10. '	int' → logprob: -21.508615493774414

Token 497: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009118211455643177
    2. '(' → logprob: -7.000911712646484
    3. '(
' → logprob: -16.250911712646484
    4. ' (' → logprob: -16.250911712646484
    5. 'n' → logprob: -16.500911712646484
    6. '('' → logprob: -17.000911712646484
    7. '((' → logprob: -18.500911712646484
    8. '(

' → logprob: -18.625911712646484
    9. '()' → logprob: -18.875911712646484
    10. '```' → logprob: -19.500911712646484

Token 498: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.04941994696855545
    2. '_lines' → logprob: -3.54941987991333
    3. '[i' → logprob: -4.92441987991333
    4. '[n' → logprob: -5.29941987991333
    5. ')' → logprob: -5.42441987991333
    6. '[' → logprob: -6.42441987991333
    7. '[line' → logprob: -8.049420356750488
    8. 'line' → logprob: -8.549420356750488
    9. '(n' → logprob: -8.674420356750488
    10. '[_' → logprob: -9.674420356750488

Token 499: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741363525390625
    2. ')
' → logprob: -0.9741363525390625
    3. '       ' → logprob: -10.224136352539062
    4. ')
' → logprob: -11.099136352539062
    5. '<|end|>' → logprob: -12.349136352539062
    6. '   ' → logprob: -14.224136352539062
    7. '<|end|>' → logprob: -14.474136352539062
    8. ')

' → logprob: -14.974136352539062
    9. '),' → logprob: -15.224136352539062
    10. '')
' → logprob: -15.349136352539062

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007568581495434046
    2. '<|end|>' → logprob: -7.875756740570068
    3. '   ' → logprob: -8.125757217407227
    4. ' ' → logprob: -10.500757217407227
    5. 'i' → logprob: -11.375757217407227
    6. '```' → logprob: -11.500757217407227
    7. ',' → logprob: -11.625757217407227
    8. '<|end|>' → logprob: -11.625757217407227
    9. ' i' → logprob: -12.375757217407227
    10. '	' → logprob: -12.750757217407227

Token 501: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2254912108182907
    2. 'i' (adapté à ' i') → logprob: -2.1004912853240967
    3. 'e' → logprob: -2.7254912853240967
    4. '   ' → logprob: -4.475491046905518
    5. 'n' → logprob: -6.600491046905518
    6. 'm' → logprob: -7.600491046905518
    7. '```' → logprob: -8.350491523742676
    8. ' i' → logprob: -8.475491523742676
    9. 'x' → logprob: -9.600491523742676
    10. ' e' → logprob: -9.725491523742676

Token 502: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006717743817716837
    2. ' +=' → logprob: -5.006717681884766
    3. '=' → logprob: -13.631717681884766
    4. ']+=' → logprob: -14.256717681884766
    5. '+' → logprob: -14.381717681884766
    6. '```' → logprob: -17.756717681884766
    7. '+='' → logprob: -18.131717681884766
    8. '+="' → logprob: -18.756717681884766
    9. '   ' → logprob: -19.381717681884766
    10. '+=(' → logprob: -20.256717681884766

Token 503: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '2' → logprob: -17.75
    4. '```' → logprob: -18.5
    5. '3' → logprob: -20.4375
    6. '１' → logprob: -20.5
    7. '0' → logprob: -21.0625
    8. '+' → logprob: -21.4375
    9. '
' → logprob: -21.625
    10. '۱' → logprob: -21.6875

Token 504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -19.375
    4. '１' → logprob: -20.5
    5. '0' → logprob: -20.5
    6. '2' → logprob: -20.75
    7. '
' → logprob: -20.875
    8. '+' → logprob: -21.9375
    9. '   ' → logprob: -22.0
    10. '۱' → logprob: -22.0625

Token 505: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01702795922756195
    2. ',' → logprob: -5.017027854919434
    3. 'e' → logprob: -6.017027854919434
    4. '<|end|>' → logprob: -6.017027854919434
    5. '```' → logprob: -6.017027854919434
    6. 'm' → logprob: -7.017027854919434
    7. '   ' → logprob: -7.767027854919434
    8. ' m' → logprob: -8.017027854919434
    9. 'n' → logprob: -8.017027854919434
    10. '        
' → logprob: -8.892027854919434

Token 506: '       ' (ID: 309)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -1.1202151775360107
    2. 'e' → logprob: -1.3702151775360107
    3. '       ' → logprob: -1.9952151775360107
    4. ' bits' → logprob: -2.7452151775360107
    5. 'bits' → logprob: -3.1202151775360107
    6. 'sign' → logprob: -3.2452151775360107
    7. ' sign' → logprob: -3.3702151775360107
    8. ' exp' → logprob: -3.7452151775360107
    9. 'exp' → logprob: -3.8702151775360107
    10. 'ex' → logprob: -4.62021541595459

Token 507: ' bits' (ID: 18189)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.28977012634277344
    2. 'bits' (adapté à ' bits') → logprob: -2.7897701263427734
    3. 's' → logprob: -3.0397701263427734
    4. 'exp' → logprob: -3.6647701263427734
    5. 'sign' → logprob: -3.6647701263427734
    6. 'm' → logprob: -4.164770126342773
    7. 'b' → logprob: -4.414770126342773
    8. 'f' → logprob: -4.664770126342773
    9. 'float' → logprob: -4.789770126342773
    10. 'p' → logprob: -5.039770126342773

Token 508: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932564973831177
    2. ' =' → logprob: -0.6932564973831177
    3. '=line' → logprob: -9.568256378173828
    4. '_line' → logprob: -10.818256378173828
    5. '   ' → logprob: -11.193256378173828
    6. 'line' → logprob: -13.568256378173828
    7. '       ' → logprob: -13.818256378173828
    8. '=input' → logprob: -14.943256378173828
    9. '[line' → logprob: -15.193256378173828
    10. 's' → logprob: -15.318256378173828

Token 509: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0040785204619169235
    2. ' input' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.004077911376953
    4. ' ' → logprob: -17.504077911376953
    5. 'import' → logprob: -18.379077911376953
    6. 'inputs' → logprob: -19.004077911376953
    7. '<input' → logprob: -19.004077911376953
    8. '(input' → logprob: -19.129077911376953
    9. '	input' → logprob: -19.629077911376953
    10. '  ' → logprob: -19.754077911376953

Token 510: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.5048530030981055e-06
    2. 'lines' → logprob: -14.250001907348633
    3. 'Lines' → logprob: -14.250001907348633
    4. '_line' → logprob: -16.250001907348633
    5. '_' → logprob: -17.000001907348633
    6. '[i' → logprob: -17.000001907348633
    7. '```' → logprob: -17.625001907348633
    8. '[' → logprob: -18.375001907348633
    9. '_LINES' → logprob: -18.375001907348633
    10. ' lines' → logprob: -19.500001907348633

Token 511: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '(i' → logprob: -16.125
    3. '[
' → logprob: -16.375
    4. '```' → logprob: -16.375
    5. '[' → logprob: -16.75
    6. ' [' → logprob: -17.25
    7. '   ' → logprob: -17.875
    8. '[++' → logprob: -18.25
    9. '[I' → logprob: -18.25
    10. 'i' → logprob: -18.375

Token 512: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0005817461642436683
    2. ']' → logprob: -7.500581741333008
    3. '[i' → logprob: -10.625581741333008
    4. '][' → logprob: -13.125581741333008
    5. ']
' → logprob: -14.000581741333008
    6. ' ].' → logprob: -14.375581741333008
    7. '   ' → logprob: -14.625581741333008
    8. '.strip' → logprob: -16.000581741333008
    9. '       ' → logprob: -16.250581741333008
    10. ''].' → logprob: -16.500581741333008

Token 513: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. ' strip' → logprob: -15.875
    3. 'rstrip' → logprob: -17.375
    4. '.strip' → logprob: -20.0
    5. 'split' → logprob: -20.5
    6. '
' → logprob: -20.875
    7. '_strip' → logprob: -22.0
    8. '```' → logprob: -22.625
    9. 'str' → logprob: -22.625
    10. 'stripe' → logprob: -22.625

Token 514: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11533468216657639
    2. '<|end|>' → logprob: -2.3653347492218018
    3. '()' → logprob: -4.990334510803223
    4. '<|end|>' → logprob: -5.115334510803223
    5. ')' → logprob: -6.865334510803223
    6. ',' → logprob: -7.740334510803223
    7. '
' → logprob: -9.365334510803223
    8. '   ' → logprob: -9.490334510803223
    9. '()
' → logprob: -9.865334510803223
    10. '=' → logprob: -9.865334510803223

Token 515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04286227002739906
    2. 'i' → logprob: -3.2928621768951416
    3. ' i' → logprob: -6.042862415313721
    4. '<|end|>' → logprob: -6.667862415313721
    5. '   ' → logprob: -7.042862415313721
    6. '```' → logprob: -8.542861938476562
    7. '<|end|>' → logprob: -10.667861938476562
    8. '	i' → logprob: -10.917861938476562
    9. ' ' → logprob: -11.667861938476562
    10. ',i' → logprob: -11.917861938476562

Token 516: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.10491319000720978
    2. '       ' → logprob: -2.3549132347106934
    3. ' i' → logprob: -5.479913234710693
    4. '<|end|>' → logprob: -8.479912757873535
    5. 'e' → logprob: -8.729912757873535
    6. '   ' → logprob: -9.729912757873535
    7. '```' → logprob: -10.229912757873535
    8. '	i' → logprob: -10.729912757873535
    9. '<|end|>' → logprob: -11.479912757873535
    10. 'n' → logprob: -12.229912757873535

Token 517: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004085524007678032
    2. ' +=' → logprob: -5.504085540771484
    3. '+' → logprob: -12.004085540771484
    4. '=' → logprob: -14.129085540771484
    5. ']+=' → logprob: -15.879085540771484
    6. '++' → logprob: -17.004085540771484
    7. '```' → logprob: -18.254085540771484
    8. '+='' → logprob: -18.379085540771484
    9. '<|end|>' → logprob: -19.254085540771484
    10. '+="' → logprob: -19.254085540771484

Token 518: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -19.5
    4. '2' → logprob: -20.375
    5. '１' → logprob: -21.5
    6. '   ' → logprob: -21.625
    7. '0' → logprob: -22.25
    8. '3' → logprob: -22.625
    9. '
' → logprob: -23.3125
    10. '۱' → logprob: -23.375

Token 519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '2' → logprob: -17.375
    4. '0' → logprob: -17.625
    5. '```' → logprob: -18.375
    6. '
' → logprob: -18.875
    7. '   ' → logprob: -19.375
    8. '１' → logprob: -19.75
    9. '3' → logprob: -19.875
    10. '``' → logprob: -21.125

Token 520: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0132430549710989
    2. 'e' → logprob: -4.388243198394775
    3. ' e' → logprob: -7.638243198394775
    4. '<|end|>' → logprob: -9.138242721557617
    5. '   ' → logprob: -9.763242721557617
    6. '        
' → logprob: -10.763242721557617
    7. ',e' → logprob: -11.138242721557617
    8. ',' → logprob: -11.138242721557617
    9. '```' → logprob: -11.388242721557617
    10. '           ' → logprob: -12.763242721557617

Token 521: '       ' (ID: 309)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.39409226179122925
    2. '       ' → logprob: -1.144092321395874
    3. ' e' → logprob: -5.519092082977295
    4. 'sign' → logprob: -6.519092082977295
    5. '   ' → logprob: -7.519092082977295
    6. 'ex' → logprob: -7.769092082977295
    7. '```' → logprob: -8.269092559814453
    8. 'exp' → logprob: -8.394092559814453
    9. ' sign' → logprob: -10.394092559814453
    10. ' parts' → logprob: -10.394092559814453

Token 522: ' #' (ID: 1069)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.057973794639110565
    2. 'sign' → logprob: -3.432973861694336
    3. 's' → logprob: -4.182973861694336
    4. 'm' → logprob: -5.432973861694336
    5. '#' (adapté à ' #') → logprob: -6.307973861694336
    6. '       ' → logprob: -7.182973861694336
    7. 'if' → logprob: -7.432973861694336
    8. 'bits' → logprob: -8.057973861694336
    9. '   ' → logprob: -8.557973861694336
    10. '           ' → logprob: -8.807973861694336

Token 523: ' initial' (ID: 4871)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.015697166323661804
    2. 'sign' → logprob: -5.015697002410889
    3. 'm' → logprob: -5.640697002410889
    4. 's' → logprob: -6.515697002410889
    5. ' e' → logprob: -6.515697002410889
    6. '#' → logprob: -7.640697002410889
    7. 'exp' → logprob: -7.765697002410889
    8. 'bits' → logprob: -7.890697002410889
    9. 'if' → logprob: -8.140697479248047
    10. 'sig' → logprob: -8.890697479248047

Token 524: ' number' (ID: 2086)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.027680663391947746
    2. '_e' → logprob: -3.6526806354522705
    3. 'm' → logprob: -7.40268087387085
    4. ' e' → logprob: -8.027680397033691
    5. '   ' → logprob: -9.652680397033691
    6. 'sign' → logprob: -9.652680397033691
    7. '_m' → logprob: -9.902680397033691
    8. 'exp' → logprob: -10.027680397033691
    9. 'bits' → logprob: -10.277680397033691
    10. 'ex' → logprob: -10.402680397033691

Token 525: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7925018072128296
    2. ' =' → logprob: -1.4175018072128296
    3. 'e' → logprob: -1.5425018072128296
    4. '=' → logprob: -2.917501926422119
    5. ',' → logprob: -4.667501926422119
    6. '   ' → logprob: -4.792501926422119
    7. ' e' → logprob: -5.667501926422119
    8. '_e' → logprob: -5.792501926422119
    9. 'bits' → logprob: -6.042501926422119
    10. '_bits' → logprob: -6.167501926422119

Token 526: ' has' (ID: 853)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.06675738841295242
    2. ' =' → logprob: -3.8167574405670166
    3. 'e' → logprob: -4.0667572021484375
    4. '_bits' → logprob: -4.3167572021484375
    5. '=' → logprob: -5.4417572021484375
    6. ',' → logprob: -5.5667572021484375
    7. '       ' → logprob: -6.8167572021484375
    8. '=e' → logprob: -7.1917572021484375
    9. ',e' → logprob: -7.4417572021484375
    10. '   ' → logprob: -7.6917572021484375

Token 527: ' exponent' (ID: 51159)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0006901554297655821
    2. ' e' → logprob: -8.000690460205078
    3. 'exp' → logprob: -8.750690460205078
    4. 'ex' → logprob: -9.125690460205078
    5. '#' → logprob: -10.250690460205078
    6. '   ' → logprob: -10.750690460205078
    7. 'sign' → logprob: -11.250690460205078
    8. ' exponent' → logprob: -12.500690460205078
    9. 'bits' → logprob: -13.125690460205078
    10. 'E' → logprob: -13.375690460205078

Token 528: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.128106027841568
    2. ' =' → logprob: -2.378106117248535
    3. ',' → logprob: -4.003106117248535
    4. 'e' → logprob: -5.378106117248535
    5. '0' → logprob: -5.503106117248535
    6. '   ' → logprob: -8.628106117248535
    7. '_,' → logprob: -9.253106117248535
    8. ',e' → logprob: -9.753106117248535
    9. ' e' → logprob: -9.878106117248535
    10. '1' → logprob: -10.628106117248535

Token 529: '0' (ID: 15)
  Prédit: '102'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '102' → logprob: -0.5966089963912964
    2. '0' → logprob: -0.9716089963912964
    3. 'e' → logprob: -3.971609115600586
    4. '```' → logprob: -4.596609115600586
    5. '1' → logprob: -4.721609115600586
    6. '
' → logprob: -4.971609115600586
    7. '52' → logprob: -5.096609115600586
    8. ' ' → logprob: -5.721609115600586
    9. 'b' → logprob: -5.721609115600586
    10. '=' → logprob: -5.721609115600586

Token 530: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13442057371139526
    2. ',' → logprob: -2.75942063331604
    3. 'e' → logprob: -3.00942063331604
    4. ' e' → logprob: -5.384420394897461
    5. ' and' → logprob: -5.759420394897461
    6. ',e' → logprob: -6.134420394897461
    7. '<|end|>' → logprob: -6.509420394897461
    8. '   ' → logprob: -7.009420394897461
    9. 'm' → logprob: -7.509420394897461
    10. ' ,' → logprob: -9.634420394897461

Token 531: ' signific' (ID: 5404)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4758054316043854
    2. 'mant' → logprob: -1.225805401802063
    3. 'sign' → logprob: -2.4758055210113525
    4. ' signific' → logprob: -7.600805282592773
    5. '#' → logprob: -8.725805282592773
    6. ' mant' → logprob: -8.850805282592773
    7. ' m' → logprob: -9.975805282592773
    8. 'a' → logprob: -9.975805282592773
    9. 'parse' → logprob: -10.850805282592773
    10. '
' → logprob: -10.975805282592773

Token 532: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -6.630610641877865e-06
    2. 'cand' → logprob: -12.250006675720215
    3. ' and' → logprob: -14.375006675720215
    4. 'd' → logprob: -15.250006675720215
    5. 'ant' → logprob: -15.250006675720215
    6. 'ic' → logprob: -15.750006675720215
    7. '(and' → logprob: -16.1250057220459
    8. 'a' → logprob: -16.6250057220459
    9. '
' → logprob: -16.6250057220459
    10. 'nd' → logprob: -16.6250057220459

Token 533: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.78123939037323
    2. ' =' → logprob: -1.03123939037323
    3. 'm' → logprob: -1.90623939037323
    4. '(' → logprob: -3.5312395095825195
    5. ',' → logprob: -5.6562395095825195
    6. ' (' → logprob: -6.1562395095825195
    7. '=(' → logprob: -7.1562395095825195
    8. '1' → logprob: -8.03123950958252
    9. '(m' → logprob: -8.53123950958252
    10. ' m' → logprob: -8.78123950958252

Token 534: '1' (ID: 16)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.42305681109428406
    2. '(' → logprob: -1.6730568408966064
    3. '(parse' → logprob: -2.5480568408966064
    4. '((' → logprob: -3.0480568408966064
    5. '=' → logprob: -4.048056602478027
    6. '=(' → logprob: -5.423056602478027
    7. '=parse' → logprob: -5.798056602478027
    8. 'int' → logprob: -5.923056602478027
    9. '(int' → logprob: -6.548056602478027
    10. 'm' → logprob: -6.673056602478027

Token 535: '.b' (ID: 1292)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20381633937358856
    2. 'm' → logprob: -2.9538164138793945
    3. '<<' → logprob: -3.2038164138793945
    4. ' =' → logprob: -3.4538164138793945
    5. ' ,' → logprob: -3.9538164138793945
    6. ' <<=' → logprob: -4.9538164138793945
    7. '=' → logprob: -5.4538164138793945
    8. ' <<' → logprob: -5.5788164138793945
    9. ',m' → logprob: -5.5788164138793945
    10. '_m' → logprob: -5.9538164138793945

Token 536: '52' (ID: 6283)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6250974535942078
    2. '   ' → logprob: -2.0000975131988525
    3. '       ' → logprob: -2.7500975131988525
    4. ',' → logprob: -2.8750975131988525
    5. '
' → logprob: -2.8750975131988525
    6. '<|end|>' → logprob: -2.8750975131988525
    7. 'm' → logprob: -4.000097274780273
    8. '_bits' → logprob: -4.000097274780273
    9. '_' → logprob: -4.250097274780273
    10. '=' → logprob: -5.250097274780273

Token 537: '...' (ID: 1008)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037593478336930275
    2. ',' → logprob: -6.378759384155273
    3. '   ' → logprob: -7.003759384155273
    4. '        
' → logprob: -8.003759384155273
    5. '<|end|>' → logprob: -8.003759384155273
    6. 'e' → logprob: -8.503759384155273
    7. '
' → logprob: -10.253759384155273
    8. ' ' → logprob: -10.378759384155273
    9. '      ' → logprob: -10.503759384155273
    10. '  
' → logprob: -10.878759384155273

Token 538: 'b' (ID: 65)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6583661437034607
    2. '_bits' → logprob: -1.2833662033081055
    3. '   ' → logprob: -2.5333662033081055
    4. '=' → logprob: -3.0333662033081055
    5. 'm' → logprob: -3.5333662033081055
    6. ',' → logprob: -4.2833662033081055
    7. '_' → logprob: -4.7833662033081055
    8. 'bits' → logprob: -5.1583662033081055
    9. '       ' → logprob: -5.2833662033081055
    10. '0' → logprob: -6.1583662033081055

Token 539: '1' (ID: 16)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022878525778651237
    2. 'm' → logprob: -4.522878646850586
    3. ' =' → logprob: -5.772878646850586
    4. '   ' → logprob: -6.272878646850586
    5. ',' → logprob: -6.522878646850586
    6. '=' → logprob: -6.647878646850586
    7. '_bits' → logprob: -7.147878646850586
    8. '<|end|>' → logprob: -7.272878646850586
    9. 'e' → logprob: -8.022878646850586
    10. ' ' → logprob: -8.272878646850586

Token 540: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011910592205822468
    2. ',' → logprob: -5.511910438537598
    3. '<|end|>' → logprob: -5.636910438537598
    4. 'e' → logprob: -6.261910438537598
    5. '   ' → logprob: -6.636910438537598
    6. 'm' → logprob: -8.011910438537598
    7. '        
' → logprob: -8.636910438537598
    8. ' e' → logprob: -9.636910438537598
    9. ',e' → logprob: -9.636910438537598
    10. ' (' → logprob: -10.136910438537598

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03242593631148338
    2. 'e' → logprob: -3.532425880432129
    3. ' e' → logprob: -6.407425880432129
    4. '   ' → logprob: -7.032425880432129
    5. ',' → logprob: -10.157425880432129
    6. '<|end|>' → logprob: -10.407425880432129
    7. ',e' → logprob: -11.032425880432129
    8. '        
' → logprob: -11.782425880432129
    9. '#' → logprob: -12.282425880432129
    10. '	e' → logprob: -12.282425880432129

Token 542: ' m' (ID: 284)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.005729925353080034
    2. '       ' → logprob: -5.380730152130127
    3. ' e' → logprob: -7.130730152130127
    4. 'm' (adapté à ' m') → logprob: -8.880729675292969
    5. '   ' → logprob: -9.005729675292969
    6. 'a' → logprob: -11.380729675292969
    7. 'ex' → logprob: -12.130729675292969
    8. 'exp' → logprob: -12.380729675292969
    9. ' ' → logprob: -13.005729675292969
    10. '#' → logprob: -13.005729675292969

Token 543: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759485960006714
    2. '=' → logprob: -0.8259485960006714
    3. ',' → logprob: -11.825948715209961
    4. ')' → logprob: -14.450948715209961
    5. '   ' → logprob: -15.075948715209961
    6. '<|end|>' → logprob: -15.700948715209961
    7. '=parse' → logprob: -16.07594871520996
    8. '```' → logprob: -16.45094871520996
    9. '<|end|>' → logprob: -16.57594871520996
    10. '=m' → logprob: -16.82594871520996

Token 544: ' parse' (ID: 8420)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017566949827596545
    2. 'parse' → logprob: -6.62675666809082
    3. '(parse' → logprob: -7.87675666809082
    4. ' (' → logprob: -10.75175666809082
    5. '(int' → logprob: -11.00175666809082
    6. '1' → logprob: -11.75175666809082
    7. 'int' → logprob: -12.25175666809082
    8. ' parse' → logprob: -15.37675666809082
    9. '((' → logprob: -15.87675666809082
    10. 'import' → logprob: -16.12675666809082

Token 545: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.0003609680861700326
    2. 'sign' → logprob: -8.000361442565918
    3. '(bits' → logprob: -11.125361442565918
    4. 'bits' → logprob: -11.625361442565918
    5. '(sign' → logprob: -14.000361442565918
    6. '_bits' → logprob: -14.500361442565918
    7. 'Sign' → logprob: -15.500361442565918
    8. '(' → logprob: -16.1253604888916
    9. 's' → logprob: -16.3753604888916
    10. 'm' → logprob: -17.6253604888916

Token 546: 'ific' (ID: 1173)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.08543679118156433
    2. 'cand' → logprob: -2.5854368209838867
    3. 'ific' → logprob: -5.960436820983887
    4. 'c' → logprob: -6.585436820983887
    5. 'cd' → logprob: -7.210436820983887
    6. 'fic' → logprob: -7.835436820983887
    7. '_sign' → logprob: -8.960436820983887
    8. '_bits' → logprob: -8.960436820983887
    9. 'oc' → logprob: -9.210436820983887
    10. 'ig' → logprob: -9.210436820983887

Token 547: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -4.008129963040119e-06
    2. 'd' → logprob: -12.875003814697266
    3. 'ad' → logprob: -14.375003814697266
    4. 'a' → logprob: -15.500003814697266
    5. '(and' → logprob: -15.875003814697266
    6. '[' → logprob: -16.000003814697266
    7. 'ant' → logprob: -16.250003814697266
    8. ' and' → logprob: -16.750003814697266
    9. '(' → logprob: -17.000003814697266
    10. '{' → logprob: -17.125003814697266

Token 548: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.0005533903022296727
    2. 'bits' → logprob: -7.500553607940674
    3. '(bit' → logprob: -15.250553131103516
    4. ' bits' → logprob: -16.125553131103516
    5. '(b' → logprob: -17.750553131103516
    6. '(' → logprob: -17.750553131103516
    7. '```' → logprob: -18.875553131103516
    8. '.bits' → logprob: -19.250553131103516
    9. '('' → logprob: -19.375553131103516
    10. '(bounds' → logprob: -19.500553131103516

Token 549: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.252096027135849
    2. ')' → logprob: -1.5020960569381714
    3. '   ' → logprob: -8.877096176147461
    4. ')
' → logprob: -10.877096176147461
    5. ')

' → logprob: -12.502096176147461
    6. ')e' → logprob: -13.627096176147461
    7. ' )
' → logprob: -13.627096176147461
    8. ' ' → logprob: -14.127096176147461
    9. ',' → logprob: -14.502096176147461
    10. ' )' → logprob: -15.752096176147461

Token 550: ' ' (ID: 220)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6311046481132507
    2. '   ' → logprob: -1.1311047077178955
    3. '       ' → logprob: -2.0061047077178955
    4. ' e' → logprob: -4.631104469299316
    5. '
' → logprob: -7.756104469299316
    6. ',e' → logprob: -9.131104469299316
    7. '	e' → logprob: -9.256104469299316
    8. '<|end|>' → logprob: -9.381104469299316
    9. ' ' → logprob: -9.506104469299316
    10. '        
' → logprob: -9.631104469299316

Token 551: ' #' (ID: 1069)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16937041282653809
    2. '
' → logprob: -1.919370412826538
    3. '   ' → logprob: -5.294370651245117
    4. '       ' → logprob: -6.044370651245117
    5. ' e' → logprob: -6.544370651245117
    6. '
' → logprob: -8.919370651245117
    7. '	e' → logprob: -10.044370651245117
    8. ',e' → logprob: -10.169370651245117
    9. '        
' → logprob: -11.169370651245117
    10. ' ' → logprob: -11.419370651245117

Token 552: ' ' (ID: 220)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.021797146648168564
    2. ' e' → logprob: -3.8967971801757812
    3. '   ' → logprob: -7.271797180175781
    4. '
' → logprob: -7.771797180175781
    5. '       ' → logprob: -9.271797180175781
    6. ' ' → logprob: -11.521797180175781
    7. '0' → logprob: -11.771797180175781
    8. '```' → logprob: -11.896797180175781
    9. '	e' → logprob: -12.396797180175781
    10. '
' → logprob: -12.646797180175781

Token 553: '53' (ID: 6798)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.23097199201583862
    2. '0' → logprob: -1.6059720516204834
    3. 'm' → logprob: -5.230971813201904
    4. ' e' → logprob: -9.730972290039062
    5. 'return' → logprob: -10.355972290039062
    6. '```' → logprob: -10.480972290039062
    7. '   ' → logprob: -11.355972290039062
    8. ' ' → logprob: -11.355972290039062
    9. '#' → logprob: -11.480972290039062
    10. '(' → logprob: -11.980972290039062

Token 554: '-bit' (ID: 33736)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8169963955879211
    2. '
' → logprob: -1.4419963359832764
    3. '   ' → logprob: -1.5669963359832764
    4. ',' → logprob: -2.8169963359832764
    5. ',e' → logprob: -4.3169965744018555
    6. '	e' → logprob: -4.6919965744018555
    7. '<|end|>' → logprob: -4.6919965744018555
    8. ' e' → logprob: -4.8169965744018555
    9. '       ' → logprob: -5.3169965744018555
    10. ' 
' → logprob: -6.6919965744018555

Token 555: ' integer' (ID: 16336)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2989068627357483
    2. 'e' → logprob: -2.1739068031311035
    3. ',' → logprob: -2.6739068031311035
    4. '<|end|>' → logprob: -3.6739068031311035
    5. ',e' → logprob: -4.0489068031311035
    6. ' e' → logprob: -4.0489068031311035
    7. '   ' → logprob: -4.6739068031311035
    8. '
' → logprob: -5.6739068031311035
    9. '<|end|>' → logprob: -7.6739068031311035
    10. ' ' → logprob: -7.7989068031311035

Token 556: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12425513565540314
    2. 'e' → logprob: -2.2492551803588867
    3. '   ' → logprob: -4.624255180358887
    4. ' e' → logprob: -7.124255180358887
    5. '<|end|>' → logprob: -7.499255180358887
    6. '
' → logprob: -9.499255180358887
    7. ',e' → logprob: -10.499255180358887
    8. ',' → logprob: -10.499255180358887
    9. '        
' → logprob: -10.999255180358887
    10. '	e' → logprob: -11.249255180358887

Token 557: ' implicit' (ID: 42834)
  Prédit: 'leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leading' → logprob: -0.6342375874519348
    2. 'the' → logprob: -1.25923752784729
    3. '52' → logprob: -2.88423752784729
    4. '1' → logprob: -3.00923752784729
    5. 'implicit' → logprob: -3.38423752784729
    6. ' leading' → logprob: -4.634237766265869
    7. '(' → logprob: -4.634237766265869
    8. 'highest' → logprob: -4.884237766265869
    9. '53' → logprob: -5.259237766265869
    10. 'bit' → logprob: -5.634237766265869

Token 558: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025310718920081854
    2. 'leading' → logprob: -7.002531051635742
    3. '53' → logprob: -7.502531051635742
    4. '52' → logprob: -8.252531051635742
    5. ' leading' → logprob: -8.377531051635742
    6. 'bit' → logprob: -8.502531051635742
    7. ' ' → logprob: -9.002531051635742
    8. '```' → logprob: -9.752531051635742
    9. '<<' → logprob: -10.002531051635742
    10. ' bit' → logprob: -10.377531051635742

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001203923486173153
    2. 'leading' → logprob: -7.126204013824463
    3. '53' → logprob: -8.751203536987305
    4. '52' → logprob: -8.876203536987305
    5. ' leading' → logprob: -10.251203536987305
    6. 'bit' → logprob: -11.001203536987305
    7. 'one' → logprob: -11.126203536987305
    8. ''' → logprob: -11.251203536987305
    9. ' ' → logprob: -12.126203536987305
    10. '```' → logprob: -12.626203536987305

Token 560: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02289799228310585
    2. 'e' → logprob: -4.022898197174072
    3. '<|end|>' → logprob: -5.897898197174072
    4. '   ' → logprob: -6.772898197174072
    5. ' e' → logprob: -8.022897720336914
    6. '
' → logprob: -8.272897720336914
    7. ',e' → logprob: -9.647897720336914
    8. ',' → logprob: -9.772897720336914
    9. '        
' → logprob: -10.147897720336914
    10. '	e' → logprob: -10.397897720336914

Token 561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.283931165933609
    2. 'e' → logprob: -1.4089311361312866
    3. ' e' → logprob: -6.408931255340576
    4. '   ' → logprob: -6.908931255340576
    5. '<|end|>' → logprob: -9.533930778503418
    6. '```' → logprob: -10.908930778503418
    7. '
' → logprob: -11.408930778503418
    8. ',e' → logprob: -11.908930778503418
    9. ',' → logprob: -12.408930778503418
    10. '	e' → logprob: -12.408930778503418

Token 562: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.0113065792247653
    2. '       ' → logprob: -5.0113067626953125
    3. ' e' → logprob: -5.5113067626953125
    4. '   ' → logprob: -7.7613067626953125
    5. 'def' → logprob: -9.886306762695312
    6. '#' → logprob: -11.261306762695312
    7. '```' → logprob: -11.636306762695312
    8. '
' → logprob: -11.886306762695312
    9. '	e' → logprob: -12.261306762695312
    10. ' ' → logprob: -12.261306762695312

Token 563: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252015084028244
    2. ' =' → logprob: -1.5020151138305664
    3. ',' → logprob: -9.377015113830566
    4. '<|end|>' → logprob: -14.252015113830566
    5. '```' → logprob: -16.00201416015625
    6. '<|end|>' → logprob: -16.12701416015625
    7. '=
' → logprob: -16.12701416015625
    8. ' ' → logprob: -16.25201416015625
    9. ')' → logprob: -17.00201416015625
    10. '＝' → logprob: -17.00201416015625

Token 564: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.87501049041748
    3. '52' → logprob: -13.12501049041748
    4. '53' → logprob: -13.87501049041748
    5. '1' → logprob: -14.62501049041748
    6. '-' → logprob: -14.75001049041748
    7. ' -' → logprob: -17.750011444091797
    8. 'int' → logprob: -18.562511444091797
    9. 'n' → logprob: -18.625011444091797
    10. '   ' → logprob: -18.750011444091797

Token 565: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. '52' → logprob: -13.250003814697266
    3. ' ' → logprob: -13.750003814697266
    4. '-' → logprob: -15.250003814697266
    5. '1' → logprob: -15.250003814697266
    6. '53' → logprob: -15.250003814697266
    7. 'int' → logprob: -17.750003814697266
    8. '102' → logprob: -18.375003814697266
    9. '
' → logprob: -18.562503814697266
    10. '   ' → logprob: -18.625003814697266

Token 566: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009806144051253796
    2. 'e' → logprob: -5.009806156158447
    3. '   ' → logprob: -6.259806156158447
    4. ',' → logprob: -8.134805679321289
    5. '<|end|>' → logprob: -8.134805679321289
    6. '
' → logprob: -8.384805679321289
    7. ' e' → logprob: -9.509805679321289
    8. 'res' → logprob: -9.634805679321289
    9. '        
' → logprob: -9.759805679321289
    10. 'n' → logprob: -9.884805679321289

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20081785321235657
    2. 'e' → logprob: -1.8258178234100342
    3. '   ' → logprob: -4.325818061828613
    4. 'res' → logprob: -5.075818061828613
    5. ' e' → logprob: -8.325818061828613
    6. ' res' → logprob: -8.450818061828613
    7. '
' → logprob: -8.825818061828613
    8. 'r' → logprob: -8.950818061828613
    9. 'n' → logprob: -9.075818061828613
    10. 'm' → logprob: -9.200818061828613

Token 568: ' #' (ID: 1069)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04850015789270401
    2. 'res' → logprob: -3.2985000610351562
    3. '       ' → logprob: -5.298500061035156
    4. '   ' → logprob: -6.423500061035156
    5. ' e' → logprob: -6.923500061035156
    6. 're' → logprob: -6.923500061035156
    7. 'result' → logprob: -7.673500061035156
    8. 'r' → logprob: -8.048500061035156
    9. 'ex' → logprob: -8.548500061035156
    10. ' res' → logprob: -8.798500061035156

Token 569: ' multiply' (ID: 57388)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5282077789306641
    2. 'res' → logprob: -0.9032077789306641
    3. 'result' → logprob: -6.528207778930664
    4. 'new' → logprob: -6.653207778930664
    5. 'r' → logprob: -7.028207778930664
    6. 're' → logprob: -7.153207778930664
    7. 'final' → logprob: -9.028207778930664
    8. 'ne' → logprob: -9.903207778930664
    9. '#' → logprob: -10.028207778930664
    10. 'fe' → logprob: -10.153207778930664

Token 570: ' a' (ID: 261)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 571: ' by' (ID: 656)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06666593998670578
    2. ',' → logprob: -3.4416658878326416
    3. ' e' → logprob: -3.9416658878326416
    4. '(e' → logprob: -5.066666126251221
    5. ',e' → logprob: -6.441666126251221
    6. '=' → logprob: -6.816666126251221
    7. '       ' → logprob: -6.941666126251221
    8. ' =' → logprob: -7.066666126251221
    9. '=e' → logprob: -7.066666126251221
    10. '   ' → logprob: -7.316666126251221

Token 572: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0012334455968812108
    2. ' n' → logprob: -6.7512335777282715
    3. 'e' → logprob: -10.126233100891113
    4. '10' → logprob: -11.126233100891113
    5. 'm' → logprob: -12.751233100891113
    6. '
' → logprob: -13.376233100891113
    7. '(n' → logprob: -13.751233100891113
    8. ',' → logprob: -14.376233100891113
    9. '```' → logprob: -14.501233100891113
    10. '   ' → logprob: -15.126233100891113

Token 573: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.31410670280456543
    2. '   ' → logprob: -1.5641067028045654
    3. ' e' → logprob: -3.1891067028045654
    4. ',' → logprob: -4.1891069412231445
    5. '       ' → logprob: -6.6891069412231445
    6. ',e' → logprob: -6.6891069412231445
    7. '(e' → logprob: -7.4391069412231445
    8. '
' → logprob: -7.5641069412231445
    9. ' ,' → logprob: -9.439106941223145
    10. ' (' → logprob: -9.814106941223145

Token 574: ' approxim' (ID: 116685)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16027377545833588
    2. ' e' → logprob: -1.910273790359497
    3. '   ' → logprob: -10.035273551940918
    4. '       ' → logprob: -12.410273551940918
    5. '
' → logprob: -15.035273551940918
    6. ' ' → logprob: -15.035273551940918
    7. '_e' → logprob: -15.160273551940918
    8. '	e' → logprob: -15.160273551940918
    9. '```' → logprob: -15.660273551940918
    10. 'res' → logprob: -16.035274505615234

Token 575: 'ating' (ID: 1365)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.0568036288022995
    2. 'ating' → logprob: -2.9318037033081055
    3. 'ated' → logprob: -7.1818037033081055
    4. 'ates' → logprob: -7.3068037033081055
    5. 'ately' → logprob: -8.181803703308105
    6. '   ' → logprob: -9.931803703308105
    7. 'ation' → logprob: -10.556803703308105
    8. 'mate' → logprob: -10.556803703308105
    9. '       ' → logprob: -10.681803703308105
    10. 'imate' → logprob: -10.806803703308105

Token 576: ' each' (ID: 2454)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12218675017356873
    2. ' e' → logprob: -2.2471866607666016
    3. '       ' → logprob: -5.372186660766602
    4. '   ' → logprob: -5.622186660766602
    5. ',' → logprob: -7.872186660766602
    6. '
' → logprob: -8.372186660766602
    7. '(e' → logprob: -8.497186660766602
    8. ',e' → logprob: -9.872186660766602
    9. ' ' → logprob: -10.372186660766602
    10. '```' → logprob: -10.497186660766602

Token 577: ' addition' (ID: 5856)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.17095325887203217
    2. 'time' → logprob: -2.4209532737731934
    3. ' step' → logprob: -3.6709532737731934
    4. 'multiply' → logprob: -4.170953273773193
    5. 'multip' → logprob: -4.795953273773193
    6. 'iteration' → logprob: -5.170953273773193
    7. 'e' → logprob: -5.795953273773193
    8. 'bit' → logprob: -6.795953273773193
    9. '_step' → logprob: -7.045953273773193
    10. 'def' → logprob: -7.170953273773193

Token 578: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01917186751961708
    2. '   ' → logprob: -4.144171714782715
    3. 'e' → logprob: -5.894171714782715
    4. ' e' → logprob: -8.894171714782715
    5. '
' → logprob: -9.519171714782715
    6. ',' → logprob: -9.769171714782715
    7. '        
' → logprob: -10.269171714782715
    8. ',e' → logprob: -10.894171714782715
    9. '_e' → logprob: -11.769171714782715
    10. ' ' → logprob: -11.894171714782715

Token 579: ' trunc' (ID: 132880)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.8971510529518127
    2. 'adding' → logprob: -1.397150993347168
    3. 'sh' → logprob: -2.522150993347168
    4. ' shifting' → logprob: -3.022150993347168
    5. 'dou' → logprob: -3.522150993347168
    6. 'normal' → logprob: -3.647150993347168
    7. 'using' → logprob: -3.772150993347168
    8. 'multip' → logprob: -3.897150993347168
    9. ' adding' → logprob: -4.397150993347168
    10. 'floating' → logprob: -4.397150993347168

Token 580: 'ation' (ID: 387)
  Prédit: 'ating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.038154177367687225
    2. 'ation' → logprob: -3.288154125213623
    3. 'ate' → logprob: -9.788154602050781
    4. 'ing' → logprob: -10.788154602050781
    5. '   ' → logprob: -11.163154602050781
    6. 'a' → logprob: -12.038154602050781
    7. 'atting' → logprob: -13.163154602050781
    8. '```' → logprob: -13.163154602050781
    9. '       ' → logprob: -13.288154602050781
    10. 'e' → logprob: -13.413154602050781

Token 581: ' done' (ID: 4167)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013738776557147503
    2. 'e' → logprob: -4.888738632202148
    3. '   ' → logprob: -5.388738632202148
    4. ' e' → logprob: -6.638738632202148
    5. ',' → logprob: -8.888738632202148
    6. '        
' → logprob: -10.763738632202148
    7. ' ' → logprob: -10.888738632202148
    8. ',e' → logprob: -10.888738632202148
    9. '<|end|>' → logprob: -11.513738632202148
    10. '           ' → logprob: -12.388738632202148

Token 582: ' by' (ID: 656)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.3901705741882324
    2. 'by' → logprob: -1.6401705741882324
    3. 'at' → logprob: -1.7651705741882324
    4. 'to' → logprob: -2.5151705741882324
    5. ' at' → logprob: -2.8901705741882324
    6. 'in' → logprob: -3.0151705741882324
    7. '       ' → logprob: -3.1401705741882324
    8. 'right' → logprob: -3.2651705741882324
    9. ' by' → logprob: -3.6401705741882324
    10. ' with' → logprob: -3.6401705741882324

Token 583: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.2156553268432617
    2. 'shift' → logprob: -1.3406553268432617
    3. 'm' → logprob: -1.9656553268432617
    4. 'def' → logprob: -2.5906553268432617
    5. ' shifting' → logprob: -3.0906553268432617
    6. 'right' → logprob: -3.3406553268432617
    7. 'sh' → logprob: -3.9656553268432617
    8. 'res' → logprob: -3.9656553268432617
    9. 'to' → logprob: -3.9656553268432617
    10. ' >>=' → logprob: -3.9656553268432617

Token 584: '_fp' (ID: 75423)
  Prédit: '_fp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fp' → logprob: -0.5878810882568359
    2. '       ' → logprob: -1.337881088256836
    3. '   ' → logprob: -1.837881088256836
    4. 'e' → logprob: -5.087881088256836
    5. ',' → logprob: -5.212881088256836
    6. '_e' → logprob: -5.587881088256836
    7. '(e' → logprob: -6.587881088256836
    8. '        
' → logprob: -7.087881088256836
    9. '_f' → logprob: -7.337881088256836
    10. '_' → logprob: -7.462881088256836

Token 585: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008288432843983173
    2. '   ' → logprob: -5.383288383483887
    3. 'e' → logprob: -5.883288383483887
    4. '
' → logprob: -8.133288383483887
    5. ' e' → logprob: -8.633288383483887
    6. '<|end|>' → logprob: -8.633288383483887
    7. '        
' → logprob: -9.383288383483887
    8. ',' → logprob: -10.133288383483887
    9. ',e' → logprob: -10.758288383483887
    10. '           ' → logprob: -11.258288383483887

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44888782501220703
    2. 'e' → logprob: -1.198887825012207
    3. '   ' → logprob: -2.823887825012207
    4. ' e' → logprob: -7.323887825012207
    5. '	e' → logprob: -10.948887825012207
    6. '```' → logprob: -10.948887825012207
    7. 'res' → logprob: -11.323887825012207
    8. '        
' → logprob: -11.573887825012207
    9. '_e' → logprob: -11.823887825012207
    10. 'result' → logprob: -12.198887825012207

Token 587: ' #' (ID: 1069)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.026425005868077278
    2. ' e' → logprob: -3.9014251232147217
    3. '       ' → logprob: -5.401424884796143
    4. '   ' → logprob: -6.651424884796143
    5. ' ' → logprob: -11.2764253616333
    6. '```' → logprob: -11.5264253616333
    7. '	e' → logprob: -11.7764253616333
    8. '
' → logprob: -12.4014253616333
    9. '_e' → logprob: -12.4014253616333
    10. '(e' → logprob: -12.7764253616333

Token 588: ' Use' (ID: 7649)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01048303209245205
    2. 'res' → logprob: -4.885483264923096
    3. '       ' → logprob: -6.510483264923096
    4. '   ' → logprob: -7.135483264923096
    5. 'result' → logprob: -8.260482788085938
    6. ' e' → logprob: -8.885482788085938
    7. 'r' → logprob: -9.760482788085938
    8. 'new' → logprob: -10.010482788085938
    9. 're' → logprob: -10.885482788085938
    10. 'for' → logprob: -11.635482788085938

Token 589: ' repeated' (ID: 24161)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.3683325946331024
    2. 'e' → logprob: -1.8683326244354248
    3. 'res' → logprob: -2.493332624435425
    4. 'n' → logprob: -3.493332624435425
    5. ' multiply' → logprob: -3.868332624435425
    6. ' e' → logprob: -4.493332386016846
    7. ' res' → logprob: -5.868332386016846
    8. 'def' → logprob: -6.493332386016846
    9. ' n' → logprob: -7.243332386016846
    10. '       ' → logprob: -7.618332386016846

Token 590: ' addition' (ID: 5856)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.5503242015838623
    2. 'multip' → logprob: -1.0503242015838623
    3. 'multiply' → logprob: -2.9253242015838623
    4. 'addition' → logprob: -4.300324440002441
    5. 's' → logprob: -5.675324440002441
    6. 'add' → logprob: -6.550324440002441
    7. 'mul' → logprob: -7.925324440002441
    8. ' doubling' → logprob: -8.550324440002441
    9. '   ' → logprob: -8.800324440002441
    10. 'mult' → logprob: -9.175324440002441

Token 591: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5010536313056946
    2. 'e' → logprob: -2.00105357170105
    3. '   ' → logprob: -2.37605357170105
    4. 'for' → logprob: -2.62605357170105
    5. ' for' → logprob: -3.00105357170105
    6. 'res' → logprob: -3.50105357170105
    7. ' e' → logprob: -5.626053810119629
    8. 'n' → logprob: -6.251053810119629
    9. ',' → logprob: -6.751053810119629
    10. 'result' → logprob: -6.876053810119629

Token 592: ' above' (ID: 5151)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.07029595971107483
    2. 'a' → logprob: -4.195295810699463
    3. 'def' → logprob: -4.445295810699463
    4. 'written' → logprob: -4.695295810699463
    5. 'implemented' → logprob: -5.445295810699463
    6. 'res' → logprob: -5.695295810699463
    7. ' multiply' → logprob: -5.695295810699463
    8. 'currently' → logprob: -5.945295810699463
    9. '
' → logprob: -6.195295810699463
    10. 'provided' → logprob: -6.320295810699463

Token 593: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1956387758255005
    2. '   ' → logprob: -2.070638656616211
    3. 'e' → logprob: -3.945638656616211
    4. 'res' → logprob: -4.320638656616211
    5. ' for' → logprob: -4.820638656616211
    6. 'for' → logprob: -5.570638656616211
    7. ' res' → logprob: -6.070638656616211
    8. ' e' → logprob: -6.195638656616211
    9. '```' → logprob: -7.695638656616211
    10. ',' → logprob: -7.695638656616211

Token 594: ' too' (ID: 3101)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.34596291184425354
    2. 'ine' → logprob: -1.4709628820419312
    3. 'too' → logprob: -4.845963001251221
    4. 'not' → logprob: -4.845963001251221
    5. 'in' → logprob: -5.095963001251221
    6. 'multip' → logprob: -5.220963001251221
    7. 'implemented' → logprob: -5.470963001251221
    8. 'incorrect' → logprob: -5.595963001251221
    9. ' multiply' → logprob: -5.845963001251221
    10. 'a' → logprob: -5.970963001251221

Token 595: ' slow' (ID: 9800)
  Prédit: 'slow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slow' → logprob: -0.05640913173556328
    2. 'large' → logprob: -3.6814091205596924
    3. 'ine' → logprob: -4.6814093589782715
    4. 'long' → logprob: -4.9314093589782715
    5. ' slow' → logprob: -5.1814093589782715
    6. 'exp' → logprob: -5.6814093589782715
    7. 'complex' → logprob: -6.0564093589782715
    8. 'big' → logprob: -7.8064093589782715
    9. 'cost' → logprob: -7.8064093589782715
    10. 'sl' → logprob: -8.306408882141113

Token 596: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005288072861731052
    2. '<|end|>' → logprob: -6.380288124084473
    3. '   ' → logprob: -6.505288124084473
    4. ',' → logprob: -6.755288124084473
    5. '
' → logprob: -8.505288124084473
    6. 'n' → logprob: -8.505288124084473
    7. 'e' → logprob: -8.630288124084473
    8. '        
' → logprob: -9.630288124084473
    9. '```' → logprob: -9.880288124084473
    10. ' for' → logprob: -10.005288124084473

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2918308675289154
    2. 'e' → logprob: -1.4168308973312378
    3. '   ' → logprob: -5.416831016540527
    4. 'res' → logprob: -5.416831016540527
    5. ' e' → logprob: -6.666831016540527
    6. ' res' → logprob: -8.666831016540527
    7. '```' → logprob: -9.916831016540527
    8. '#' → logprob: -10.041831016540527
    9. '
' → logprob: -10.416831016540527
    10. '	e' → logprob: -10.541831016540527

Token 598: ' #' (ID: 1069)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.34190303087234497
    2. '       ' → logprob: -1.4669029712677002
    3. '   ' → logprob: -3.2169029712677
    4. 'res' → logprob: -4.466903209686279
    5. ' e' → logprob: -5.216903209686279
    6. ' res' → logprob: -7.091903209686279
    7. 'result' → logprob: -7.716903209686279
    8. '```' → logprob: -9.091902732849121
    9. '	e' → logprob: -9.091902732849121
    10. ' ' → logprob: -9.466902732849121

Token 599: ' Use' (ID: 7649)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.23212659358978271
    2. 'e' → logprob: -1.6071265935897827
    3. 'result' → logprob: -6.107126712799072
    4. '       ' → logprob: -6.482126712799072
    5. '#' → logprob: -6.732126712799072
    6. 'cur' → logprob: -8.357126235961914
    7. '   ' → logprob: -8.357126235961914
    8. 'exp' → logprob: -8.607126235961914
    9. 'r' → logprob: -8.732126235961914
    10. 'new' → logprob: -8.982126235961914

Token 600: ' multiply' (ID: 57388)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.639841616153717
    2. ' multiply' → logprob: -0.764841616153717
    3. ' the' → logprob: -6.389841556549072
    4. 'def' → logprob: -7.139841556549072
    5. 'the' → logprob: -7.139841556549072
    6. 'multip' → logprob: -7.514841556549072
    7. '
' → logprob: -7.639841556549072
    8. 'res' → logprob: -7.764841556549072
    9. ' repeated' → logprob: -7.889841556549072
    10. '   ' → logprob: -7.889841556549072

Token 601: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.11282720416784286
    2. '_e' → logprob: -2.4878273010253906
    3. 'e' → logprob: -4.737827301025391
    4. 'd' → logprob: -5.612827301025391
    5. '_res' → logprob: -5.862827301025391
    6. 'int' → logprob: -5.987827301025391
    7. 'res' → logprob: -6.237827301025391
    8. 'def' → logprob: -6.362827301025391
    9. '_result' → logprob: -7.362827301025391
    10. '_ex' → logprob: -8.11282730102539

Token 602: '_fp' (ID: 75423)
  Prédit: '_fp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fp' → logprob: -0.0005832957685925066
    2. '_int' → logprob: -7.625583171844482
    3. '```' → logprob: -10.62558364868164
    4. '_fd' → logprob: -10.75058364868164
    5. 'int' → logprob: -11.25058364868164
    6. '(fp' → logprob: -11.37558364868164
    7. 'fp' → logprob: -11.87558364868164
    8. '   ' → logprob: -12.87558364868164
    9. '(n' → logprob: -13.00058364868164
    10. 'e' → logprob: -13.50058364868164

Token 603: ' to' (ID: 316)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8421585559844971
    2. '(e' → logprob: -1.467158555984497
    3. '   ' → logprob: -2.342158555984497
    4. 'e' → logprob: -2.467158555984497
    5. 'def' → logprob: -3.592158555984497
    6. '(' → logprob: -3.717158555984497
    7. 'result' → logprob: -4.217158317565918
    8. '_e' → logprob: -4.217158317565918
    9. '```' → logprob: -4.467158317565918
    10. 'n' → logprob: -4.842158317565918

Token 604: ' compute' (ID: 23864)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.8046059608459473
    2. 'e' → logprob: -1.1796059608459473
    3. 'compute' → logprob: -2.4296059608459473
    4. ' multiply' → logprob: -3.0546059608459473
    5. 'perform' → logprob: -3.6796059608459473
    6. ' e' → logprob: -3.6796059608459473
    7. ' compute' → logprob: -4.429605960845947
    8. 'calculate' → logprob: -4.554605960845947
    9. 'return' → logprob: -4.679605960845947
    10. 'get' → logprob: -4.804605960845947

Token 605: ' s' (ID: 265)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05899684131145477
    2. ' e' → logprob: -3.0589969158172607
    3. '   ' → logprob: -5.058996677398682
    4. '(e' → logprob: -6.058996677398682
    5. 'res' → logprob: -7.308996677398682
    6. '       ' → logprob: -8.18399715423584
    7. 'result' → logprob: -8.43399715423584
    8. ' res' → logprob: -8.68399715423584
    9. ' (' → logprob: -9.43399715423584
    10. '_e' → logprob: -9.93399715423584

Token 606: ' =' (ID: 314)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0019230410689488053
    2. 'e' → logprob: -6.626923084259033
    3. ' =' → logprob: -7.751923084259033
    4. '=' → logprob: -9.126922607421875
    5. '   ' → logprob: -10.751922607421875
    6. '=e' → logprob: -11.501922607421875
    7. '_' → logprob: -12.376922607421875
    8. '=_' → logprob: -12.876922607421875
    9. ' e' → logprob: -13.251922607421875
    10. '```' → logprob: -13.251922607421875

Token 607: ' n' (ID: 297)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14680072665214539
    2. ' e' → logprob: -2.0218007564544678
    3. 'n' → logprob: -6.021800518035889
    4. ' n' → logprob: -7.146800518035889
    5. 'multiply' → logprob: -7.771800518035889
    6. ' multiply' → logprob: -8.896800994873047
    7. '(e' → logprob: -9.521800994873047
    8. '   ' → logprob: -9.521800994873047
    9. '(n' → logprob: -9.896800994873047
    10. ' ' → logprob: -10.396800994873047

Token 608: ' *' (ID: 425)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6232374906539917
    2. ',' → logprob: -0.9982374906539917
    3. '*' → logprob: -3.3732376098632812
    4. ',e' → logprob: -3.3732376098632812
    5. ' e' → logprob: -4.623237609863281
    6. '_e' → logprob: -4.998237609863281
    7. ' *' → logprob: -5.373237609863281
    8. ' ,' → logprob: -6.123237609863281
    9. '```' → logprob: -7.248237609863281
    10. '
' → logprob: -8.248237609863281

Token 609: ' a' (ID: 261)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.028598014265298843
    2. ' e' → logprob: -3.7785980701446533
    3. '(e' → logprob: -5.278597831726074
    4. '
' → logprob: -9.278597831726074
    5. '(' → logprob: -9.653597831726074
    6. ' (' → logprob: -9.903597831726074
    7. '```' → logprob: -11.903597831726074
    8. ' ' → logprob: -12.153597831726074
    9. '   ' → logprob: -12.278597831726074
    10. '0' → logprob: -12.403597831726074

Token 610: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3310040831565857
    2. '   ' → logprob: -1.4560041427612305
    3. 'e' → logprob: -3.0810041427612305
    4. ' e' → logprob: -6.3310041427612305
    5. 's' → logprob: -7.9560041427612305
    6. '
' → logprob: -8.20600414276123
    7. '_e' → logprob: -10.08100414276123
    8. ',' → logprob: -10.08100414276123
    9. '        
' → logprob: -10.08100414276123
    10. ',e' → logprob: -10.08100414276123

Token 611: ' fp' (ID: 28491)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04864788427948952
    2. ' e' → logprob: -3.423647880554199
    3. ',' → logprob: -6.423647880554199
    4. ' floating' → logprob: -6.423647880554199
    5. 'float' → logprob: -6.423647880554199
    6. 'floating' → logprob: -6.798647880554199
    7. '```' → logprob: -6.923647880554199
    8. 'a' → logprob: -7.173647880554199
    9. 'ex' → logprob: -7.298647880554199
    10. 'the' → logprob: -7.298647880554199

Token 612: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07180256396532059
    2. '   ' → logprob: -2.8218026161193848
    3. 'e' → logprob: -5.196802616119385
    4. ' e' → logprob: -5.696802616119385
    5. '
' → logprob: -7.571802616119385
    6. '        
' → logprob: -9.071802139282227
    7. '	e' → logprob: -9.946802139282227
    8. '    
' → logprob: -10.196802139282227
    9. '_e' → logprob: -10.571802139282227
    10. '     ' → logprob: -10.571802139282227

Token 613: ' trunc' (ID: 132880)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02738667093217373
    2. 'ex' → logprob: -4.527386665344238
    3. 'normal' → logprob: -4.652386665344238
    4. ' e' → logprob: -6.027386665344238
    5. ' normalization' → logprob: -6.652386665344238
    6. 'tr' → logprob: -7.902386665344238
    7. '0' → logprob: -8.027386665344238
    8. ' trunc' → logprob: -8.277386665344238
    9. 'normalized' → logprob: -8.402386665344238
    10. 'approx' → logprob: -8.652386665344238

Token 614: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.001957894302904606
    2. 'ate' → logprob: -6.251957893371582
    3. '   ' → logprob: -11.251957893371582
    4. 'a' → logprob: -12.126957893371582
    5. 'e' → logprob: -13.126957893371582
    6. '=' → logprob: -13.626957893371582
    7. '       ' → logprob: -13.751957893371582
    8. 's' → logprob: -13.751957893371582
    9. 'ating' → logprob: -14.126957893371582
    10. 'ations' → logprob: -14.251957893371582

Token 615: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06584413349628448
    2. 'e' → logprob: -3.0658440589904785
    3. '   ' → logprob: -4.3158440589904785
    4. ' e' → logprob: -5.8158440589904785
    5. '
' → logprob: -8.065844535827637
    6. '_e' → logprob: -8.690844535827637
    7. '	e' → logprob: -9.440844535827637
    8. ',e' → logprob: -9.940844535827637
    9. '        
' → logprob: -10.190844535827637
    10. 's' → logprob: -10.815844535827637

Token 616: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3547587990760803
    2. 'e' → logprob: -1.4797587394714355
    3. ' e' → logprob: -2.7297587394714355
    4. '   ' → logprob: -5.4797587394714355
    5. ',e' → logprob: -7.7297587394714355
    6. '        
' → logprob: -8.354759216308594
    7. '	e' → logprob: -8.479759216308594
    8. '```' → logprob: -8.604759216308594
    9. ',' → logprob: -9.354759216308594
    10. '(e' → logprob: -9.479759216308594

Token 617: ' #' (ID: 1069)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03948826715350151
    2. ' e' → logprob: -3.6644883155822754
    3. '       ' → logprob: -5.164488315582275
    4. 's' → logprob: -5.164488315582275
    5. '   ' → logprob: -6.539488315582275
    6. ' s' → logprob: -8.789487838745117
    7. '```' → logprob: -10.539487838745117
    8. '
' → logprob: -11.414487838745117
    9. ' ' → logprob: -11.914487838745117
    10. '	e' → logprob: -12.289487838745117

Token 618: ' multiply' (ID: 57388)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5307624340057373
    2. 's' → logprob: -0.9057624340057373
    3. '       ' → logprob: -5.280762672424316
    4. ' e' → logprob: -6.905762672424316
    5. '   ' → logprob: -7.155762672424316
    6. ' s' → logprob: -7.530762672424316
    7. 'se' → logprob: -8.655762672424316
    8. ' ' → logprob: -12.155762672424316
    9. '(e' → logprob: -12.655762672424316
    10. '#' → logprob: -12.655762672424316

Token 619: '_int' (ID: 12285)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11442391574382782
    2. '_e' → logprob: -2.239423990249634
    3. ' e' → logprob: -7.239423751831055
    4. '(e' → logprob: -7.864423751831055
    5. 'n' → logprob: -8.614423751831055
    6. '   ' → logprob: -9.739423751831055
    7. 's' → logprob: -10.114423751831055
    8. 'result' → logprob: -10.489423751831055
    9. '_' → logprob: -10.614423751831055
    10. ' =' → logprob: -10.614423751831055

Token 620: '_fp' (ID: 75423)
  Prédit: '_fp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fp' → logprob: -0.09079135209321976
    2. '_int' → logprob: -2.4657914638519287
    3. 'int' → logprob: -6.46579122543335
    4. '_fd' → logprob: -9.340791702270508
    5. 'ity' → logprob: -10.090791702270508
    6. '(_' → logprob: -10.840791702270508
    7. '```' → logprob: -11.090791702270508
    8. '_tp' → logprob: -11.465791702270508
    9. '_' → logprob: -11.590791702270508
    10. '(fp' → logprob: -11.715791702270508

Token 621: ' sim' (ID: 1845)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7048171162605286
    2. '(e' → logprob: -1.0798170566558838
    3. '_e' → logprob: -3.079817056655884
    4. 'e' → logprob: -3.329817056655884
    5. '(' → logprob: -3.704817056655884
    6. '   ' → logprob: -4.454817295074463
    7. '_result' → logprob: -4.579817295074463
    8. 'return' → logprob: -5.579817295074463
    9. '_output' → logprob: -5.704817295074463
    10. '=' → logprob: -5.704817295074463

Token 622: 'ulates' (ID: 52494)
  Prédit: 'ply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ply' → logprob: -0.2131408005952835
    2. 'ulates' → logprob: -1.838140845298767
    3. 'plied' → logprob: -4.713140964508057
    4. 'ple' → logprob: -5.088140964508057
    5. 'ulated' → logprob: -5.338140964508057
    6. 'plement' → logprob: -5.713140964508057
    7. 'ulate' → logprob: -5.713140964508057
    8. 'pl' → logprob: -6.588140964508057
    9. 'plies' → logprob: -6.838140964508057
    10. '=' → logprob: -7.088140964508057

Token 623: ' adding' (ID: 12673)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25415799021720886
    2. 'e' → logprob: -2.6291580200195312
    3. 'the' → logprob: -2.6291580200195312
    4. 'multiply' → logprob: -3.2541580200195312
    5. 'multip' → logprob: -3.8791580200195312
    6. ' the' → logprob: -5.004158020019531
    7. 's' → logprob: -5.379158020019531
    8. ' n' → logprob: -6.254158020019531
    9. 'res' → logprob: -6.379158020019531
    10. '(n' → logprob: -6.504158020019531

Token 624: ' a' (ID: 261)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06186964362859726
    2. '(e' → logprob: -3.5618696212768555
    3. 's' → logprob: -4.3118696212768555
    4. ' e' → logprob: -4.6868696212768555
    5. 'n' → logprob: -4.9368696212768555
    6. '(n' → logprob: -7.8118696212768555
    7. 'def' → logprob: -8.311869621276855
    8. 'the' → logprob: -8.311869621276855
    9. 'res' → logprob: -9.186869621276855
    10. 'int' → logprob: -9.686869621276855

Token 625: ' n' (ID: 297)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.175762340426445
    2. ',' → logprob: -2.925762414932251
    3. 's' → logprob: -3.175762414932251
    4. ' e' → logprob: -3.175762414932251
    5. '   ' → logprob: -5.175762176513672
    6. '       ' → logprob: -5.425762176513672
    7. '
' → logprob: -5.925762176513672
    8. 'n' → logprob: -6.050762176513672
    9. ',e' → logprob: -6.300762176513672
    10. ''s' → logprob: -6.425762176513672

Token 626: ' times' (ID: 4238)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2186093032360077
    2. 'e' → logprob: -1.84360933303833
    3. ',e' → logprob: -4.34360933303833
    4. '_e' → logprob: -4.46860933303833
    5. '       ' → logprob: -6.09360933303833
    6. '   ' → logprob: -6.34360933303833
    7. '_,' → logprob: -6.46860933303833
    8. ')' → logprob: -6.46860933303833
    9. '_bits' → logprob: -6.46860933303833
    10. 's' → logprob: -6.59360933303833

Token 627: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21418701112270355
    2. 'e' → logprob: -1.8391870260238647
    3. '   ' → logprob: -3.714186906814575
    4. ' e' → logprob: -4.964187145233154
    5. '_e' → logprob: -6.839187145233154
    6. '
' → logprob: -7.839187145233154
    7. 's' → logprob: -7.964187145233154
    8. '	e' → logprob: -8.714186668395996
    9. ',e' → logprob: -8.964186668395996
    10. ',' → logprob: -9.714186668395996

Token 628: ' trunc' (ID: 132880)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.5989779829978943
    2. 'add' → logprob: -2.348978042602539
    3. 'ex' → logprob: -2.848978042602539
    4. 'double' → logprob: -2.973978042602539
    5. 'res' → logprob: -3.223978042602539
    6. 'binary' → logprob: -3.598978042602539
    7. 'truncate' → logprob: -3.598978042602539
    8. 'shift' → logprob: -3.723978042602539
    9. 'the' → logprob: -3.723978042602539
    10. 'sh' → logprob: -3.973978042602539

Token 629: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.06215399131178856
    2. 'ate' → logprob: -2.8121540546417236
    3. '   ' → logprob: -10.062153816223145
    4. 'e' → logprob: -10.187153816223145
    5. 'a' → logprob: -10.437153816223145
    6. 'ating' → logprob: -10.812153816223145
    7. '#' → logprob: -10.937153816223145
    8. 'ated' → logprob: -11.562153816223145
    9. '       ' → logprob: -11.937153816223145
    10. 'at' → logprob: -13.312153816223145

Token 630: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07923641800880432
    2. '   ' → logprob: -2.9542365074157715
    3. 'e' → logprob: -3.8292365074157715
    4. 's' → logprob: -7.0792365074157715
    5. ' e' → logprob: -7.5792365074157715
    6. '
' → logprob: -7.7042365074157715
    7. '        
' → logprob: -8.954236030578613
    8. '    
' → logprob: -9.329236030578613
    9. '<|end|>' → logprob: -9.829236030578613
    10. '_e' → logprob: -10.204236030578613

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013158111833035946
    2. 'e' → logprob: -4.513158321380615
    3. '<|end|>' → logprob: -7.138158321380615
    4. '   ' → logprob: -7.513158321380615
    5. ' e' → logprob: -7.888158321380615
    6. 'res' → logprob: -9.263157844543457
    7. 's' → logprob: -9.388157844543457
    8. '
' → logprob: -10.388157844543457
    9. '        
' → logprob: -10.638157844543457
    10. ',' → logprob: -10.888157844543457

Token 632: ' s' (ID: 265)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2937328517436981
    2. ' e' → logprob: -1.4187328815460205
    3. '       ' → logprob: -4.668732643127441
    4. 's' (adapté à ' s') → logprob: -6.293732643127441
    5. '   ' → logprob: -7.418732643127441
    6. ' s' → logprob: -7.543732643127441
    7. '_e' → logprob: -10.168732643127441
    8. 'res' → logprob: -10.918732643127441
    9. '	e' → logprob: -11.293732643127441
    10. ' res' → logprob: -11.543732643127441

Token 633: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0007811574032530189
    2. 'e' → logprob: -7.875781059265137
    3. '=' → logprob: -8.375781059265137
    4. ' =' → logprob: -9.500781059265137
    5. ',' → logprob: -10.500781059265137
    6. '=_' → logprob: -10.875781059265137
    7. '_' → logprob: -11.125781059265137
    8. ',e' → logprob: -11.750781059265137
    9. '=e' → logprob: -12.250781059265137
    10. ',_' → logprob: -12.375781059265137

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045914790825918317
    2. ',s' → logprob: -7.87545919418335
    3. '=' → logprob: -9.750458717346191
    4. 's' → logprob: -11.125458717346191
    5. ',m' → logprob: -13.250458717346191
    6. ' ,' → logprob: -13.750458717346191
    7. ' s' → logprob: -14.375458717346191
    8. ',
' → logprob: -14.750458717346191
    9. '=s' → logprob: -14.875458717346191
    10. ',user' → logprob: -15.000458717346191

Token 635: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005930693820118904
    2. ' s' → logprob: -5.1309309005737305
    3. '<|end|>' → logprob: -14.13093090057373
    4. '   ' → logprob: -14.88093090057373
    5. ' ' → logprob: -15.25593090057373
    6. '_s' → logprob: -15.38093090057373
    7. '  ' → logprob: -16.130929946899414
    8. '    ' → logprob: -16.255929946899414
    9. '<|end|>' → logprob: -16.380929946899414
    10. '	s' → logprob: -16.630929946899414

Token 636: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.21066488325595856
    2. ',' → logprob: -2.710664987564087
    3. '_s' → logprob: -2.835664987564087
    4. 'm' → logprob: -2.960664987564087
    5. 's' → logprob: -4.710664749145508
    6. '_,' → logprob: -6.210664749145508
    7. ',s' → logprob: -7.335664749145508
    8. '_' → logprob: -7.335664749145508
    9. ',m' → logprob: -7.960664749145508
    10. ',_' → logprob: -8.710664749145508

Token 637: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0063990382477641106
    2. ' =' → logprob: -5.256399154663086
    3. ',' → logprob: -6.756399154663086
    4. '=

' → logprob: -14.756399154663086
    5. '=
' → logprob: -15.631399154663086
    6. ')' → logprob: -15.756399154663086
    7. '=user' → logprob: -16.631399154663086
    8. '=}' → logprob: -16.631399154663086
    9. '=s' → logprob: -17.006399154663086
    10. '=m' → logprob: -17.131399154663086

Token 638: ' multiply' (ID: 57388)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.10020741820335388
    2. ' multiply' → logprob: -2.3502073287963867
    3. 'multip' → logprob: -14.225207328796387
    4. '   ' → logprob: -16.850208282470703
    5. '.multiply' → logprob: -17.850208282470703
    6. 'm' → logprob: -18.350208282470703
    7. ' ' → logprob: -18.725208282470703
    8. 'ultiply' → logprob: -18.850208282470703
    9. 'mul' → logprob: -18.975208282470703
    10. 'Multiply' → logprob: -19.600208282470703

Token 639: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -6.706686690449715e-05
    2. 'int' → logprob: -9.625066757202148
    3. 'Int' → logprob: -14.000066757202148
    4. 'n' → logprob: -16.62506675720215
    5. 's' → logprob: -17.00006675720215
    6. '```' → logprob: -17.50006675720215
    7. 'multip' → logprob: -18.00006675720215
    8. '<int' → logprob: -18.37506675720215
    9. '_INT' → logprob: -19.00006675720215
    10. '_in' → logprob: -19.12506675720215

Token 640: '_fp' (ID: 75423)
  Prédit: '_fp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fp' → logprob: -0.0037500830367207527
    2. 'int' → logprob: -5.878749847412109
    3. '_int' → logprob: -7.378749847412109
    4. 'fp' → logprob: -8.12874984741211
    5. '```' → logprob: -11.12874984741211
    6. 'FP' → logprob: -13.12874984741211
    7. '
' → logprob: -13.37874984741211
    8. '(fp' → logprob: -13.62874984741211
    9. 'f' → logprob: -13.75374984741211
    10. 'Int' → logprob: -13.87874984741211

Token 641: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0031791406217962503
    2. 'n' → logprob: -5.75317907333374
    3. '(' → logprob: -14.003179550170898
    4. ' n' → logprob: -14.878179550170898
    5. ' (' → logprob: -16.2531795501709
    6. '_n' → logprob: -17.2531795501709
    7. '[n' → logprob: -17.5031795501709
    8. '	n' → logprob: -17.6281795501709
    9. '```' → logprob: -17.6281795501709
    10. '(
' → logprob: -18.1281795501709

Token 642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03325764462351799
    2. '(e' → logprob: -3.6582577228546143
    3. ',e' → logprob: -5.033257484436035
    4. 'e' → logprob: -8.158257484436035
    5. '(' → logprob: -9.533257484436035
    6. ' ,' → logprob: -10.533257484436035
    7. ')' → logprob: -11.408257484436035
    8. ' e' → logprob: -12.158257484436035
    9. '```' → logprob: -12.158257484436035
    10. ' (' → logprob: -12.908257484436035

Token 643: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -6.706686690449715e-05
    2. ' e' → logprob: -9.625066757202148
    3. '0' → logprob: -14.250066757202148
    4. ')e' → logprob: -16.25006675720215
    5. '	e' → logprob: -16.87506675720215
    6. '   ' → logprob: -16.87506675720215
    7. '<|end|>' → logprob: -17.37506675720215
    8. ')' → logprob: -17.62506675720215
    9. ' ' → logprob: -17.87506675720215
    10. '
' → logprob: -18.00006675720215

Token 644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030578780570067465
    2. ',s' → logprob: -8.625306129455566
    3. ',m' → logprob: -9.250306129455566
    4. ' ,' → logprob: -10.625306129455566
    5. 's' → logprob: -13.000306129455566
    6. ',
' → logprob: -13.500306129455566
    7. 'm' → logprob: -14.500306129455566
    8. '<|end|>' → logprob: -14.750306129455566
    9. ')' → logprob: -16.00030517578125
    10. ',n' → logprob: -16.12530517578125

Token 645: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.318681188422488e-05
    2. ' m' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.87501335144043
    4. ')m' → logprob: -18.12501335144043
    5. '	m' → logprob: -18.12501335144043
    6. ')' → logprob: -18.25001335144043
    7. '```' → logprob: -19.25001335144043
    8. '<|end|>' → logprob: -19.75001335144043
    9. ' ' → logprob: -19.87501335144043
    10. 'м' → logprob: -20.62501335144043

Token 646: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007856572978198528
    2. '<|end|>' → logprob: -5.257856369018555
    3. '   ' → logprob: -6.382856369018555
    4. ')
' → logprob: -7.132856369018555
    5. '<|end|>' → logprob: -9.882856369018555
    6. '
' → logprob: -10.507856369018555
    7. ',' → logprob: -11.257856369018555
    8. '       ' → logprob: -12.132856369018555
    9. ')return' → logprob: -12.632856369018555
    10. ')e' → logprob: -12.882856369018555

Token 647: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3814142346382141
    2. '       ' → logprob: -1.8814141750335693
    3. '<|end|>' → logprob: -2.3814141750335693
    4. '
' → logprob: -2.7564141750335693
    5. 's' → logprob: -5.881414413452148
    6. '```' → logprob: -6.131414413452148
    7. '    
' → logprob: -6.631414413452148
    8. 'print' → logprob: -7.506414413452148
    9. '#' → logprob: -7.506414413452148
    10. '        
' → logprob: -7.631414413452148

Token 648: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.14839233458042145
    2. '       ' → logprob: -2.77339243888855
    3. 's' → logprob: -3.39839243888855
    4. '#' → logprob: -3.89839243888855
    5. 'result' → logprob: -5.273392200469971
    6. '   ' → logprob: -5.273392200469971
    7. 'ex' → logprob: -6.023392200469971
    8. 'sys' → logprob: -6.398392200469971
    9. 'float' → logprob: -6.523392200469971
    10. 'e' → logprob: -6.648392200469971

Token 649: '(to' (ID: 24042)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07135434448719025
    2. '(f' → logprob: -3.196354389190674
    3. '(format' → logprob: -3.946354389190674
    4. '((' → logprob: -5.821354389190674
    5. 'format' → logprob: -6.196354389190674
    6. 's' → logprob: -6.821354389190674
    7. '(float' → logprob: -7.196354389190674
    8. '(' → logprob: -7.821354389190674
    9. 'float' → logprob: -7.821354389190674
    10. '(int' → logprob: -8.196353912353516

Token 650: '_float' (ID: 44505)
  Prédit: '_float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_float' → logprob: -0.00026217024424113333
    2. 'float' → logprob: -8.250262260437012
    3. 'Float' → logprob: -14.500262260437012
    4. 'f' → logprob: -16.250261306762695
    5. '_FLOAT' → logprob: -16.750261306762695
    6. 'to' → logprob: -17.375261306762695
    7. '_string' → logprob: -17.375261306762695
    8. 'loat' → logprob: -17.625261306762695
    9. '_floor' → logprob: -17.750261306762695
    10. 'print' → logprob: -18.000261306762695

Token 651: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -1.9361264946837764e-07
    2. '6' → logprob: -16.875
    3. 's' → logprob: -18.5
    4. '_' → logprob: -18.625
    5. '54' → logprob: -19.25
    6. '```' → logprob: -19.25
    7. '064' → logprob: -20.25
    8. '(' → logprob: -20.25
    9. ' ' → logprob: -20.375
    10. 'int' → logprob: -20.375

Token 652: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -4.842555426876061e-06
    2. 'bits' → logprob: -12.500004768371582
    3. '_BITS' → logprob: -14.625004768371582
    4. '```' → logprob: -15.125004768371582
    5. 'Bits' → logprob: -16.2500057220459
    6. '_str' → logprob: -17.0000057220459
    7. '`' → logprob: -17.1250057220459
    8. ')_' → logprob: -17.2500057220459
    9. ''_' → logprob: -17.2500057220459
    10. '_bytes' → logprob: -17.3750057220459

Token 653: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -7.004696090007201e-05
    2. '(' → logprob: -9.750069618225098
    3. 's' → logprob: -12.500069618225098
    4. ')' → logprob: -12.875069618225098
    5. ')(' → logprob: -12.875069618225098
    6. '((' → logprob: -13.375069618225098
    7. ' (' → logprob: -13.875069618225098
    8. '(
' → logprob: -16.000070571899414
    9. ')s' → logprob: -16.250070571899414
    10. '(`' → logprob: -17.500070571899414

Token 654: '_e' (ID: 4618)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14563651382923126
    2. '_s' → logprob: -2.645636558532715
    3. '_e' → logprob: -2.895636558532715
    4. 'e' → logprob: -5.395636558532715
    5. '(s' → logprob: -5.520636558532715
    6. ')_' → logprob: -8.270636558532715
    7. ')' → logprob: -8.395636558532715
    8. '(_' → logprob: -9.645636558532715
    9. '```' → logprob: -10.020636558532715
    10. '(' → logprob: -10.520636558532715

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006438109558075666
    2. ',s' → logprob: -7.375643730163574
    3. 's' → logprob: -11.625643730163574
    4. ')' → logprob: -12.875643730163574
    5. ' ,' → logprob: -13.125643730163574
    6. ',
' → logprob: -13.250643730163574
    7. '[' → logprob: -15.500643730163574
    8. '),' → logprob: -15.750643730163574
    9. '(s' → logprob: -16.00064468383789
    10. '(' → logprob: -16.00064468383789

Token 656: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.872261317563243e-05
    2. ' s' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.250059127807617
    4. ' ' → logprob: -17.625059127807617
    5. '  ' → logprob: -17.625059127807617
    6. '       ' → logprob: -17.750059127807617
    7. ')' → logprob: -17.875059127807617
    8. '
' → logprob: -18.000059127807617
    9. '	s' → logprob: -18.000059127807617
    10. ')s' → logprob: -18.125059127807617

Token 657: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0005079957190901041
    2. 's' → logprob: -7.875507831573486
    3. 'm' → logprob: -9.125508308410645
    4. '_s' → logprob: -11.000508308410645
    5. '_' → logprob: -13.500508308410645
    6. '_e' → logprob: -15.125508308410645
    7. ')' → logprob: -15.250508308410645
    8. 'e' → logprob: -15.750508308410645
    9. ')_' → logprob: -17.000507354736328
    10. ' _' → logprob: -17.375507354736328

Token 658: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011066801846027374
    2. '))' → logprob: -4.511066913604736
    3. ')))' → logprob: -12.136066436767578
    4. ')
' → logprob: -12.511066436767578
    5. '())' → logprob: -12.636066436767578
    6. '()' → logprob: -13.511066436767578
    7. ')`' → logprob: -13.511066436767578
    8. ')")' → logprob: -13.636066436767578
    9. ')}' → logprob: -14.761066436767578
    10. '+' → logprob: -14.886066436767578

Token 659: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 660: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1434793770313263
    2. '__' → logprob: -2.018479347229004
    3. 'name' → logprob: -7.518479347229004
    4. '_name' → logprob: -8.518479347229004
    5. ' ' → logprob: -11.018479347229004
    6. 'Name' → logprob: -11.143479347229004
    7. '_' → logprob: -11.518479347229004
    8. ' ' → logprob: -12.143479347229004
    9. '___' → logprob: -12.268479347229004
    10. '```' → logprob: -12.268479347229004

Token 661: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01263172272592783
    2. ' ==' → logprob: -4.887631893157959
    3. ' __' → logprob: -6.137631893157959
    4. '.__' → logprob: -6.887631893157959
    5. '==' → logprob: -7.012631893157959
    6. '__.' → logprob: -7.887631893157959
    7. '__.__' → logprob: -8.2626314163208
    8. '.' → logprob: -8.8876314163208
    9. '.name' → logprob: -9.7626314163208
    10. 'name' → logprob: -11.1376314163208

Token 662: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002238013403257355
    2. '__.__' → logprob: -8.500224113464355
    3. '==' → logprob: -11.500224113464355
    4. '__.' → logprob: -11.625224113464355
    5. ' ==' → logprob: -14.125224113464355
    6. '__('' → logprob: -16.00022315979004
    7. '____' → logprob: -16.12522315979004
    8. '__["' → logprob: -16.37522315979004
    9. '.__' → logprob: -16.62522315979004
    10. '___' → logprob: -16.87522315979004

Token 663: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.15215076506137848
    2. ' ==' → logprob: -2.277150869369507
    3. '__' → logprob: -3.402150869369507
    4. '=='' → logprob: -5.652150630950928
    5. '=="' → logprob: -6.402150630950928
    6. '```' → logprob: -10.777151107788086
    7. '===' → logprob: -10.902151107788086
    8. '=' → logprob: -11.152151107788086
    9. '[' → logprob: -11.402151107788086
    10. '**' → logprob: -12.152151107788086

Token 664: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4741038978099823
    2. '"' → logprob: -0.9741039276123047
    3. '__' → logprob: -10.599103927612305
    4. ''"' → logprob: -14.974103927612305
    5. ' "__' → logprob: -14.974103927612305
    6. ''app' → logprob: -15.099103927612305
    7. ''user' → logprob: -15.349103927612305
    8. '"'' → logprob: -15.849103927612305
    9. '"user' → logprob: -15.974103927612305
    10. ' '__' → logprob: -15.974103927612305

Token 665: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00019662656995933503
    2. 'built' → logprob: -9.00019645690918
    3. 'name' → logprob: -9.87519645690918
    4. 'python' → logprob: -11.25019645690918
    5. 'builtin' → logprob: -12.62519645690918
    6. ' main' → logprob: -13.75019645690918
    7. 'py' → logprob: -14.00019645690918
    8. '_main' → logprob: -14.50019645690918
    9. '_MAIN' → logprob: -14.87519645690918
    10. 'init' → logprob: -15.12519645690918

Token 666: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06721514463424683
    2. '__' → logprob: -2.9422152042388916
    3. '__':
' → logprob: -4.6922149658203125
    4. '__.' → logprob: -6.5672149658203125
    5. '__.__' → logprob: -6.8172149658203125
    6. '__["' → logprob: -7.8172149658203125
    7. '.' → logprob: -9.067214965820312
    8. '__);
' → logprob: -11.067214965820312
    9. '">
' → logprob: -11.692214965820312
    10. '.__' → logprob: -11.692214965820312

Token 667: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31483012437820435
    2. 'main' → logprob: -1.3148300647735596
    3. ' main' → logprob: -6.939830303192139
    4. '	main' → logprob: -7.439830303192139
    5. ' ' → logprob: -12.81482982635498
    6. '_main' → logprob: -12.93982982635498
    7. '   ' → logprob: -13.31482982635498
    8. '```' → logprob: -13.31482982635498
    9. 'import' → logprob: -13.56482982635498
    10. '    
' → logprob: -14.56482982635498

Token 668: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '   ' → logprob: -18.0
    4. '	main' → logprob: -18.75
    5. 'sys' → logprob: -20.875
    6. 'import' → logprob: -22.625
    7. '_main' → logprob: -24.5
    8. '.main' → logprob: -24.875
    9. '(main' → logprob: -25.25
    10. 'try' → logprob: -26.625

Token 669: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 667
Tokens correctement prédits (1ère position, stricte): 261
Tokens correctement prédits (1ère position, avec adaptation): 281
Tokens correctement prédits (top 10): 532
Précision stricte (1ère position): 39.13%
Précision adaptée (1ère position): 42.13%
Précision (top 10): 79.76%
================================================================================
