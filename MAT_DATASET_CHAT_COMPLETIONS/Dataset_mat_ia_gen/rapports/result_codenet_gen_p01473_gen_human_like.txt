================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import factorial
from collections import Counter

S = input().strip()
freq = Counter(S)
n = len(S)

# Vérification des conditions nécessaires à l'existence d'un palindrome
odd_count = sum(1 for v in freq.values() if v % 2 != 0)
if (n % 2 == 0 and odd_count > 0) or (n % 2 == 1 and odd_count != 1):
    print(0)
    exit()

# Calcul du nombre de palindromes anagrammes
half_len = n // 2
half_freq = {c: v // 2 for c, v in freq.items()}

numerator = factorial(half_len)
denominator = 1
for v in half_freq.values():
    denominator *= factorial(v)

print(numerator // denominator)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' factorial' (ID: 111204)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.2253863662481308
    2. ' sqrt' → logprob: -1.850386381149292
    3. 'pow' → logprob: -4.100386142730713
    4. 'pi' → logprob: -4.850386142730713
    5. 'sin' → logprob: -4.850386142730713
    6. ' pi' → logprob: -5.100386142730713
    7. 'import' → logprob: -6.475386142730713
    8. 'ceil' → logprob: -7.100386142730713
    9. ' sin' → logprob: -7.100386142730713
    10. 'log' → logprob: -7.725386142730713

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010946154361590743
    2. '\(' → logprob: -6.876094818115234
    3. '\n' → logprob: -11.251094818115234
    4. '(
' → logprob: -11.251094818115234
    5. '\' → logprob: -11.501094818115234
    6. ',' → logprob: -11.751094818115234
    7. ' (' → logprob: -12.501094818115234
    8. 'a' → logprob: -12.626094818115234
    9. 'def' → logprob: -13.501094818115234
    10. '.' → logprob: -13.626094818115234

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024156268045771867
    2. '\(' → logprob: -8.62524127960205
    3. '(
' → logprob: -10.25024127960205
    4. 'a' → logprob: -11.75024127960205
    5. '#' → logprob: -12.87524127960205
    6. ',' → logprob: -13.00024127960205
    7. '```' → logprob: -13.25024127960205
    8. '\' → logprob: -13.75024127960205
    9. '.' → logprob: -13.75024127960205
    10. 'def' → logprob: -14.00024127960205

Token 6: ' collections' (ID: 22690)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.28351378440856934
    2. ' sym' → logprob: -2.2835137844085693
    3. ' functools' → logprob: -3.1585137844085693
    4. ' random' → logprob: -3.2835137844085693
    5. ' collections' → logprob: -4.033514022827148
    6. ' math' → logprob: -4.533514022827148
    7. ' operator' → logprob: -4.658514022827148
    8. ' fractions' → logprob: -5.033514022827148
    9. 'sym' → logprob: -5.533514022827148
    10. 'fun' → logprob: -5.783514022827148

Token 7: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.315057635307312
    2. ' import' → logprob: -1.315057635307312
    3. '.' → logprob: -7.065057754516602
    4. '.Counter' → logprob: -8.190057754516602
    5. '```' → logprob: -8.190057754516602
    6. '<|end|>' → logprob: -8.940057754516602
    7. ' ' → logprob: -9.565057754516602
    8. ' defaultdict' → logprob: -10.190057754516602
    9. ' Counter' → logprob: -10.815057754516602
    10. 'from' → logprob: -10.815057754516602

Token 8: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.20723770558834076
    2. ' deque' → logprob: -1.957237720489502
    3. 'abc' → logprob: -3.832237720489502
    4. ' defaultdict' → logprob: -4.082237720489502
    5. ' abc' → logprob: -5.332237720489502
    6. 'Counter' → logprob: -6.957237720489502
    7. ' Counter' → logprob: -7.207237720489502
    8. 'default' → logprob: -8.332237243652344
    9. 'named' → logprob: -8.832237243652344
    10. '```' → logprob: -8.957237243652344

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11752638965845108
    2. '\' → logprob: -3.6175262928009033
    3. '\n' → logprob: -3.7425262928009033
    4. '(
' → logprob: -4.242526531219482
    5. 'def' → logprob: -4.617526531219482
    6. 'n' → logprob: -4.742526531219482
    7. '
' → logprob: -4.867526531219482
    8. '`' → logprob: -5.492526531219482
    9. '```' → logprob: -6.367526531219482
    10. 'a' → logprob: -6.367526531219482

Token 10: 'S' (ID: 50)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6319941282272339
    2. 'n' → logprob: -1.5069941282272339
    3. 'def' → logprob: -1.8819941282272339
    4. '`' → logprob: -3.8819942474365234
    5. 'f' → logprob: -4.131994247436523
    6. 'a' → logprob: -4.381994247436523
    7. 'd' → logprob: -4.756994247436523
    8. 's' → logprob: -5.131994247436523
    9. '#' → logprob: -5.631994247436523
    10. '```' → logprob: -5.631994247436523

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0508668422698975
    2. '(' → logprob: -1.3008668422698975
    3. '.' → logprob: -1.5508668422698975
    4. ' =' → logprob: -2.1758668422698975
    5. ')' → logprob: -4.300867080688477
    6. 'tring' → logprob: -4.675867080688477
    7. 'S' → logprob: -5.300867080688477
    8. 'u' → logprob: -5.300867080688477
    9. '[' → logprob: -5.675867080688477
    10. ',' → logprob: -5.800867080688477

Token 12: ' input' (ID: 3422)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8231979608535767
    2. '"' → logprob: -1.3231979608535767
    3. ' '' → logprob: -2.198197841644287
    4. ' "' → logprob: -2.448197841644287
    5. ' input' → logprob: -2.948197841644287
    6. 'input' → logprob: -3.323197841644287
    7. ' ' → logprob: -6.073197841644287
    8. ''S' → logprob: -6.573197841644287
    9. ''s' → logprob: -6.698197841644287
    10. ' ''' → logprob: -7.198197841644287

Token 13: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005760280764661729
    2. '('' → logprob: -8.12557601928711
    3. '("("' → logprob: -9.25057601928711
    4. '()' → logprob: -9.37557601928711
    5. '(
' → logprob: -10.62557601928711
    6. ''' → logprob: -11.00057601928711
    7. '(

' → logprob: -11.50057601928711
    8. '```' → logprob: -11.50057601928711
    9. '(`' → logprob: -12.25057601928711
    10. '`' → logprob: -12.25057601928711

Token 14: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.03543761745095253
    2. 'lower' → logprob: -3.91043758392334
    3. 'count' → logprob: -4.41043758392334
    4. 'rstrip' → logprob: -6.41043758392334
    5. 'upper' → logprob: -7.41043758392334
    6. 'split' → logprob: -8.78543758392334
    7. 'capitalize' → logprob: -9.28543758392334
    8. '```' → logprob: -9.53543758392334
    9. 'read' → logprob: -10.78543758392334
    10. 'isdigit' → logprob: -10.91043758392334

Token 15: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20157355070114136
    2. '()' → logprob: -1.7015736103057861
    3. '(
' → logprob: -10.451573371887207
    4. '()`' → logprob: -10.701573371887207
    5. '```' → logprob: -11.326573371887207
    6. '()>' → logprob: -11.326573371887207
    7. '('' → logprob: -11.451573371887207
    8. '(`' → logprob: -11.451573371887207
    9. '`()' → logprob: -11.576573371887207
    10. ')' → logprob: -11.701573371887207

Token 16: 'freq' (ID: 71759)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.4301176369190216
    2. 'count' → logprob: -2.055117607116699
    3. 'c' → logprob: -3.305117607116699
    4. 'n' → logprob: -3.305117607116699
    5. 'counts' → logprob: -3.305117607116699
    6. 'freq' → logprob: -3.430117607116699
    7. 'result' → logprob: -3.430117607116699
    8. 'frequency' → logprob: -4.930117607116699
    9. 'factor' → logprob: -5.055117607116699
    10. '
' → logprob: -5.180117607116699

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9600354433059692
    2. '(' → logprob: -1.3350354433059692
    3. '=' → logprob: -1.3350354433059692
    4. 's' → logprob: -2.7100353240966797
    5. '_' → logprob: -4.21003532409668
    6. 'S' → logprob: -5.58503532409668
    7. ' =' → logprob: -5.83503532409668
    8. '(S' → logprob: -6.96003532409668
    9. ')' → logprob: -7.46003532409668
    10. ']' → logprob: -8.08503532409668

Token 18: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.0006268949946388602
    2. ' Counter' → logprob: -7.375627040863037
    3. '.Counter' → logprob: -15.625626564025879
    4. 'Coun' → logprob: -17.750627517700195
    5. 'C' → logprob: -18.000627517700195
    6. ' ' → logprob: -18.250627517700195
    7. 'Counters' → logprob: -18.375627517700195
    8. '```' → logprob: -18.375627517700195
    9. 'counter' → logprob: -18.625627517700195
    10. '_counter' → logprob: -18.750627517700195

Token 19: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.07891865074634552
    2. '(' → logprob: -2.578918695449829
    3. '(s' → logprob: -10.82891845703125
    4. '()' → logprob: -12.57891845703125
    5. '((' → logprob: -13.45391845703125
    6. '(
' → logprob: -13.57891845703125
    7. '('' → logprob: -14.32891845703125
    8. '(freq' → logprob: -14.82891845703125
    9. 'S' → logprob: -15.07891845703125
    10. '(f' → logprob: -15.20391845703125

Token 20: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7835754988482222e-05
    2. '[' → logprob: -11.750018119812012
    3. '))' → logprob: -12.125018119812012
    4. '()' → logprob: -13.750018119812012
    5. ' )' → logprob: -13.875018119812012
    6. '(' → logprob: -14.625018119812012
    7. ')
' → logprob: -14.625018119812012
    8. '())' → logprob: -15.000018119812012
    9. ']' → logprob: -15.125018119812012
    10. '[S' → logprob: -15.625018119812012

Token 21: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0333901643753052
    2. ')' → logprob: -1.4083901643753052
    3. 'if' → logprob: -2.6583900451660156
    4. '=' → logprob: -2.7833900451660156
    5. 'result' → logprob: -2.9083900451660156
    6. 'max' → logprob: -3.4083900451660156
    7. '.' → logprob: -3.5333900451660156
    8. 'for' → logprob: -3.5333900451660156
    9. 'possible' → logprob: -4.158390045166016
    10. '#' → logprob: -4.783390045166016

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8318946361541748
    2. '_' → logprob: -1.0818946361541748
    3. ' =' → logprob: -1.9568946361541748
    4. ' ' → logprob: -3.956894636154175
    5. 'u' → logprob: -4.206894874572754
    6. '(' → logprob: -4.206894874572754
    7. '!' → logprob: -4.581894874572754
    8. 'o' → logprob: -4.581894874572754
    9. 'a' → logprob: -5.706894874572754
    10. 'um' → logprob: -5.706894874572754

Token 23: ' len' (ID: 4631)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.47929468750953674
    2. 'factor' → logprob: -1.6042946577072144
    3. 'len' → logprob: -1.9792946577072144
    4. ' len' → logprob: -3.354294776916504
    5. 'sum' → logprob: -5.479294776916504
    6. ' sum' → logprob: -6.229294776916504
    7. 'fact' → logprob: -7.979294776916504
    8. ' factor' → logprob: -9.479294776916504
    9. '(len' → logprob: -10.729294776916504
    10. ' ' → logprob: -10.729294776916504

Token 24: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.024174146354198456
    2. '(' → logprob: -3.774174213409424
    3. '(freq' → logprob: -7.399174213409424
    4. '(n' → logprob: -8.399173736572266
    5. 'S' → logprob: -10.024173736572266
    6. '(s' → logprob: -10.899173736572266
    7. '(f' → logprob: -11.649173736572266
    8. '(
' → logprob: -12.024173736572266
    9. ')' → logprob: -12.524173736572266
    10. '(F' → logprob: -13.399173736572266

Token 25: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.77022064034827e-05
    2. ' )' → logprob: -10.500097274780273
    3. '!)' → logprob: -10.875097274780273
    4. '))' → logprob: -11.375097274780273
    5. '!' → logprob: -11.750097274780273
    6. '-' → logprob: -11.875097274780273
    7. ')!' → logprob: -12.500097274780273
    8. '#' → logprob: -12.625097274780273
    9. ')
' → logprob: -13.000097274780273
    10. '**' → logprob: -13.125097274780273

Token 26: '#' (ID: 2)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9168797731399536
    2. ')' → logprob: -1.0418797731399536
    3. 'result' → logprob: -1.9168797731399536
    4. 'fact' → logprob: -3.916879653930664
    5. 'factor' → logprob: -4.041879653930664
    6. 'f' → logprob: -4.416879653930664
    7. '#' → logprob: -4.666879653930664
    8. 'possible' → logprob: -5.041879653930664
    9. 'res' → logprob: -5.416879653930664
    10. '_' → logprob: -5.416879653930664

Token 27: ' Vér' (ID: 159169)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8306235671043396
    2. 'total' → logprob: -1.2056236267089844
    3. 'res' → logprob: -1.8306236267089844
    4. 'ans' → logprob: -3.4556236267089844
    5. 'fact' → logprob: -4.080623626708984
    6. 'den' → logprob: -4.205623626708984
    7. 'dp' → logprob: -4.330623626708984
    8. 'answer' → logprob: -4.955623626708984
    9. 'num' → logprob: -6.205623626708984
    10. 'perm' → logprob: -6.205623626708984

Token 28: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.019487686455249786
    2. 'ifie' → logprob: -4.6444878578186035
    3. 'ifier' → logprob: -5.2694878578186035
    4. 'ifications' → logprob: -6.0194878578186035
    5. 'if' → logprob: -6.7694878578186035
    6. 'ifiez' → logprob: -7.7694878578186035
    7. 'ifi' → logprob: -8.019487380981445
    8. 'ication' → logprob: -9.519487380981445
    9. 'i' → logprob: -10.144487380981445
    10. 'ifiant' → logprob: -10.644487380981445

Token 29: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.575947642326355
    2. ' if' → logprob: -1.700947642326355
    3. 's' → logprob: -2.5759477615356445
    4. ' de' → logprob: -2.9509477615356445
    5. 'if' → logprob: -3.0759477615356445
    6. ' des' → logprob: -4.0759477615356445
    7. '(' → logprob: -4.2009477615356445
    8. 'des' → logprob: -4.8259477615356445
    9. ' )' → logprob: -5.2009477615356445
    10. ')' → logprob: -5.3259477615356445

Token 30: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.5089961886405945
    2. ' caractères' → logprob: -1.8839962482452393
    3. ' doubl' → logprob: -2.5089962482452393
    4. ' permutations' → logprob: -3.7589962482452393
    5. ' ' → logprob: -4.13399600982666
    6. ' pal' → logprob: -4.38399600982666
    7. ' possibilités' → logprob: -4.88399600982666
    8. 'poss' → logprob: -4.88399600982666
    9. ' p' → logprob: -4.88399600982666
    10. 'car' → logprob: -5.00899600982666

Token 31: ' nécessaires' (ID: 74402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08960288017988205
    2. ' :' → logprob: -3.3396029472351074
    3. ' for' → logprob: -4.214602947235107
    4. 'for' → logprob: -4.339602947235107
    5. ' ' → logprob: -4.964602947235107
    6. ' if' → logprob: -5.464602947235107
    7. '<|end|>' → logprob: -5.464602947235107
    8. 'if' → logprob: -6.339602947235107
    9. ' 
' → logprob: -6.964602947235107
    10. ':
' → logprob: -6.964602947235107

Token 32: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.472895085811615
    2. ' :' → logprob: -1.0978951454162598
    3. ' ' → logprob: -3.3478951454162598
    4. ' for' → logprob: -5.97289514541626
    5. 'for' → logprob: -5.97289514541626
    6. ' if' → logprob: -7.47289514541626
    7. ' :
' → logprob: -7.47289514541626
    8. '<|end|>' → logprob: -7.59789514541626
    9. ' 
' → logprob: -8.222894668579102
    10. ' ,' → logprob: -8.847894668579102

Token 33: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.487043559551239
    2. 'l' → logprob: -1.4870436191558838
    3. ' l' → logprob: -2.612043619155884
    4. ' une' → logprob: -4.112043380737305
    5. ' ' → logprob: -4.362043380737305
    6. 'la' → logprob: -4.487043380737305
    7. ' un' → logprob: -4.862043380737305
    8. ' ce' → logprob: -5.237043380737305
    9. ' palindrome' → logprob: -5.237043380737305
    10. ' permutations' → logprob: -5.362043380737305

Token 34: ''ex' (ID: 23472)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08275260031223297
    2. 'e' → logprob: -2.7077527046203613
    3. ''' → logprob: -5.332752704620361
    4. ''ex' → logprob: -5.957752704620361
    5. ''é' → logprob: -5.957752704620361
    6. ''a' → logprob: -7.207752704620361
    7. ''ordre' → logprob: -7.957752704620361
    8. 'u' → logprob: -8.332752227783203
    9. '_' → logprob: -8.332752227783203
    10. 'exist' → logprob: -9.207752227783203

Token 35: 'istence' (ID: 78521)
  Prédit: 'istence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istence' → logprob: -0.5926491022109985
    2. 'i' → logprob: -1.0926491022109985
    3. 'ist' → logprob: -2.967648983001709
    4. 'is' → logprob: -3.217648983001709
    5. 'iste' → logprob: -4.967648983001709
    6. '{' → logprob: -6.217648983001709
    7. 'e' → logprob: -6.342648983001709
    8. 'écution' → logprob: -6.717648983001709
    9. '_' → logprob: -6.842648983001709
    10. 'istance' → logprob: -7.092648983001709

Token 36: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.029483042657375336
    2. ' de' → logprob: -3.9044830799102783
    3. ' des' → logprob: -5.279482841491699
    4. 'd' → logprob: -6.404482841491699
    5. ' ' → logprob: -7.154482841491699
    6. ' du' → logprob: -7.654482841491699
    7. ' of' → logprob: -8.4044828414917
    8. '<|end|>' → logprob: -8.4044828414917
    9. '  ' → logprob: -8.6544828414917
    10. 'des' → logprob: -9.5294828414917

Token 37: ''un' (ID: 9788)
  Prédit: ''une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.33406588435173035
    2. ''un' → logprob: -1.7090659141540527
    3. ''' → logprob: -2.7090659141540527
    4. 'u' → logprob: -3.7090659141540527
    5. ''u' → logprob: -5.459065914154053
    6. 'a' → logprob: -5.709065914154053
    7. 'une' → logprob: -6.334065914154053
    8. 'e' → logprob: -6.834065914154053
    9. '_' → logprob: -7.834065914154053
    10. 'un' → logprob: -8.834065437316895

Token 38: ' palindrome' (ID: 160469)
  Prédit: 'pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pal' → logprob: -0.3325556814670563
    2. 'an' → logprob: -1.8325556516647339
    3. ' palindrome' → logprob: -2.7075557708740234
    4. ' an' → logprob: -3.2075557708740234
    5. ' pal' → logprob: -5.332555770874023
    6. '_pal' → logprob: -6.332555770874023
    7. ' arrangement' → logprob: -6.707555770874023
    8. 'a' → logprob: -6.707555770874023
    9. 'arr' → logprob: -6.707555770874023
    10. 'mot' → logprob: -7.332555770874023

Token 39: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30750954151153564
    2. '_possible' → logprob: -2.432509422302246
    3. ' ' → logprob: -3.057509422302246
    4. 'possible' → logprob: -3.307509422302246
    5. 's' → logprob: -3.682509422302246
    6. ':' → logprob: -4.307509422302246
    7. ' _' → logprob: -4.432509422302246
    8. ')' → logprob: -5.307509422302246
    9. 'for' → logprob: -5.307509422302246
    10. 'def' → logprob: -5.307509422302246

Token 40: 'odd' (ID: 18303)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.7000346779823303
    2. 'if' → logprob: -1.0750346183776855
    3. 'odd' → logprob: -2.9500346183776855
    4. 'def' → logprob: -3.7000346183776855
    5. '_' → logprob: -3.9500346183776855
    6. 'half' → logprob: -4.0750346183776855
    7. 'max' → logprob: -5.0750346183776855
    8. 'mid' → logprob: -5.3250346183776855
    9. 'middle' → logprob: -5.4500346183776855
    10. 's' → logprob: -5.8250346183776855

Token 41: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.06557745486497879
    2. '_counts' → logprob: -2.815577507019043
    3. '_' → logprob: -6.190577507019043
    4. '_chars' → logprob: -7.190577507019043
    5. '_freq' → logprob: -7.940577507019043
    6. '_cnt' → logprob: -8.440577507019043
    7. 's' → logprob: -9.190577507019043
    8. '_char' → logprob: -10.065577507019043
    9. '_occ' → logprob: -10.315577507019043
    10. '_oc' → logprob: -11.315577507019043

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14402471482753754
    2. '=' → logprob: -2.019024610519409
    3. 's' → logprob: -6.644024848937988
    4. '_' → logprob: -10.144024848937988
    5. ')' → logprob: -13.394024848937988
    6. 'es' → logprob: -13.519024848937988
    7. '=sum' → logprob: -14.394024848937988
    8. ' ==' → logprob: -14.894024848937988
    9. '_=' → logprob: -14.894024848937988
    10. ' ' → logprob: -15.019024848937988

Token 43: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20160932838916779
    2. ' sum' → logprob: -1.7016093730926514
    3. '0' → logprob: -8.57660961151123
    4. ' ' → logprob: -12.95160961151123
    5. '1' → logprob: -13.57660961151123
    6. '(sum' → logprob: -13.57660961151123
    7. '=sum' → logprob: -13.95160961151123
    8. '3' → logprob: -14.45160961151123
    9. '	sum' → logprob: -15.07660961151123
    10. '[' → logprob: -15.07660961151123

Token 44: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03238460794091225
    2. '(freq' → logprob: -3.5323846340179443
    3. '(value' → logprob: -6.907384395599365
    4. '(v' → logprob: -7.282384395599365
    5. '((' → logprob: -8.157384872436523
    6. '([' → logprob: -8.907384872436523
    7. '(f' → logprob: -9.032384872436523
    8. '(c' → logprob: -9.157384872436523
    9. '(val' → logprob: -9.407384872436523
    10. '(count' → logprob: -9.532384872436523

Token 45: '1' (ID: 16)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.8075984716415405
    2. '1' → logprob: -1.0575984716415405
    3. 'v' → logprob: -1.8075984716415405
    4. '(freq' → logprob: -3.93259859085083
    5. '(' → logprob: -5.05759859085083
    6. 'f' → logprob: -5.30759859085083
    7. 'count' → logprob: -5.43259859085083
    8. '(v' → logprob: -5.93259859085083
    9. 'val' → logprob: -6.43259859085083
    10. 'value' → logprob: -6.68259859085083

Token 46: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.035158559679985046
    2. 'for' → logprob: -3.410158634185791
    3. 'token' → logprob: -8.035158157348633
    4. ')' → logprob: -8.535158157348633
    5. ' if' → logprob: -8.785158157348633
    6. '(' → logprob: -9.035158157348633
    7. 'c' → logprob: -9.035158157348633
    8. ' ' → logprob: -9.410158157348633
    9. '(token' → logprob: -9.410158157348633
    10. '[token' → logprob: -9.535158157348633

Token 47: ' v' (ID: 323)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.392473429441452
    2. 'c' → logprob: -1.5174734592437744
    3. ' v' → logprob: -3.5174734592437744
    4. 'v' → logprob: -3.5174734592437744
    5. ' x' → logprob: -4.517473220825195
    6. 'x' → logprob: -4.767473220825195
    7. ' count' → logprob: -5.267473220825195
    8. ' char' → logprob: -5.517473220825195
    9. 'char' → logprob: -5.642473220825195
    10. ' ch' → logprob: -5.642473220825195

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002925638109445572
    2. 'in' → logprob: -5.877925872802734
    3. ' ' → logprob: -9.127925872802734
    4. 'v' → logprob: -11.627925872802734
    5. '<|end|>' → logprob: -13.752925872802734
    6. 's' → logprob: -14.627925872802734
    7. ',' → logprob: -16.002925872802734
    8. ')' → logprob: -16.127925872802734
    9. '<|end|>' → logprob: -16.127925872802734
    10. ' в' → logprob: -16.252925872802734

Token 49: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.4287225604057312
    2. ' freq' → logprob: -1.053722620010376
    3. '(freq' → logprob: -11.303722381591797
    4. 'fre' → logprob: -12.428722381591797
    5. '.freq' → logprob: -13.678722381591797
    6. 'f' → logprob: -13.678722381591797
    7. ' frequency' → logprob: -14.053722381591797
    8. ' ' → logprob: -14.303722381591797
    9. '_freq' → logprob: -14.553722381591797
    10. 'frequency' → logprob: -14.803722381591797

Token 50: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0038729929365217686
    2. ' if' → logprob: -5.753872871398926
    3. 'values' → logprob: -7.878872871398926
    4. 'if' → logprob: -8.628872871398926
    5. '.' → logprob: -9.503872871398926
    6. '.value' → logprob: -10.878872871398926
    7. ' .' → logprob: -11.003872871398926
    8. ' values' → logprob: -11.253872871398926
    9. ' ' → logprob: -12.253872871398926
    10. 'alue' → logprob: -12.378872871398926

Token 51: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028533751610666513
    2. 'if' → logprob: -6.5028533935546875
    3. ' if' → logprob: -6.6278533935546875
    4. ')' → logprob: -11.377853393554688
    5. '(' → logprob: -11.877853393554688
    6. ' ' → logprob: -12.127853393554688
    7. ' ()' → logprob: -12.877853393554688
    8. '   ' → logprob: -15.252853393554688
    9. '  ' → logprob: -16.127853393554688
    10. '```' → logprob: -16.502853393554688

Token 52: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.004085997585207224
    2. 'if' → logprob: -5.504086017608643
    3. '%' → logprob: -12.504085540771484
    4. ' ' → logprob: -12.879085540771484
    5. ' %' → logprob: -13.754085540771484
    6. ')' → logprob: -15.004085540771484
    7. ' )' → logprob: -17.754085540771484
    8. 'If' → logprob: -19.004085540771484
    9. ' If' → logprob: -19.004085540771484
    10. 'ift' → logprob: -19.379085540771484

Token 53: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.14268144965171814
    2. 'v' → logprob: -2.017681360244751
    3. '	v' → logprob: -12.142681121826172
    4. '(v' → logprob: -14.642681121826172
    5. ' ' → logprob: -15.642681121826172
    6. ')v' → logprob: -15.767681121826172
    7. '_v' → logprob: -16.267681121826172
    8. ' (' → logprob: -17.142681121826172
    9. '$v' → logprob: -17.517681121826172
    10. ' ' → logprob: -17.517681121826172

Token 54: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759431719779968
    2. ' %' → logprob: -0.8259431719779968
    3. ' ' → logprob: -12.575942993164062
    4. ')' → logprob: -16.575942993164062
    5. ' ' → logprob: -16.950942993164062
    6. '()%' → logprob: -17.075942993164062
    7. ')%' → logprob: -17.075942993164062
    8. ' %)' → logprob: -17.950942993164062
    9. '%i' → logprob: -18.075942993164062
    10. ' %
' → logprob: -18.200942993164062

Token 55: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34844738245010376
    2. ' ' → logprob: -1.223447322845459
    3. '```' → logprob: -14.848447799682617
    4. '  ' → logprob: -14.973447799682617
    5. '%' → logprob: -14.973447799682617
    6. ')' → logprob: -15.285947799682617
    7. '{' → logprob: -15.410947799682617
    8. '1' → logprob: -15.473447799682617
    9. '۲' → logprob: -16.098447799682617
    10. '(' → logprob: -16.348447799682617

Token 56: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.125041007995605
    3. '```' → logprob: -14.875041007995605
    4. '  ' → logprob: -16.62504005432129
    5. '1' → logprob: -17.06254005432129
    6. '{' → logprob: -17.43754005432129
    7. '   ' → logprob: -17.50004005432129
    8. '

' → logprob: -17.62504005432129
    9. '۲' → logprob: -17.62504005432129
    10. ')' → logprob: -17.75004005432129

Token 57: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9790862798690796
    2. ' !=' → logprob: -1.4790862798690796
    3. '!=' → logprob: -1.6040862798690796
    4. '==' → logprob: -1.9790862798690796
    5. ' ==' → logprob: -3.479086399078369
    6. '1' → logprob: -4.104086399078369
    7. ' )' → logprob: -4.854086399078369
    8. '>' → logprob: -6.979086399078369
    9. ')!=' → logprob: -8.354085922241211
    10. ')==' → logprob: -8.604085922241211

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5237554907798767
    2. '0' → logprob: -0.8987554907798767
    3. '1' → logprob: -7.8987555503845215
    4. '=' → logprob: -8.648755073547363
    5. '2' → logprob: -9.773755073547363
    6. ')' → logprob: -11.461255073547363
    7. '```' → logprob: -11.961255073547363
    8. '  ' → logprob: -13.711255073547363
    9. ',' → logprob: -13.836255073547363
    10. '<|end|>' → logprob: -14.023755073547363

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021447893232107162
    2. '2' → logprob: -6.502144813537598
    3. ' ' → logprob: -7.377144813537598
    4. '1' → logprob: -11.502144813537598
    5. ')' → logprob: -13.064644813537598
    6. '3' → logprob: -14.314644813537598
    7. '=' → logprob: -14.564644813537598
    8. '```' → logprob: -14.752144813537598
    9. '6' → logprob: -14.939644813537598
    10. '00' → logprob: -15.877144813537598

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.35706390615087e-05
    2. ' )' → logprob: -10.375033378601074
    3. ')
' → logprob: -13.625033378601074
    4. '))' → logprob: -14.375033378601074
    5. ')>' → logprob: -16.00003433227539
    6. ')**' → logprob: -16.75003433227539
    7. ')

' → logprob: -16.87503433227539
    8. '),' → logprob: -17.00003433227539
    9. ')`' → logprob: -17.00003433227539
    10. ')return' → logprob: -17.87503433227539

Token 61: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6572460532188416
    2. 'if' → logprob: -1.0322461128234863
    3. ' if' → logprob: -2.5322461128234863
    4. ')' → logprob: -3.5322461128234863
    5. ' 
' → logprob: -4.782246112823486
    6. ' ' → logprob: -6.282246112823486
    7. ')
' → logprob: -6.657246112823486
    8. '<|end|>' → logprob: -6.782246112823486
    9. '\n' → logprob: -7.282246112823486
    10. '```' → logprob: -7.657246112823486

Token 62: ' (' (ID: 350)
  Prédit: ' odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.00011558275582501665
    2. 'odd' → logprob: -9.125115394592285
    3. ' ' → logprob: -12.125115394592285
    4. ' ' → logprob: -14.125115394592285
    5. ' odds' → logprob: -15.875115394592285
    6. ' od' → logprob: -16.2501163482666
    7. '>' → logprob: -16.5001163482666
    8. '  ' → logprob: -16.6251163482666
    9. ' >' → logprob: -17.8751163482666
    10. 'Odd' → logprob: -17.8751163482666

Token 63: 'n' (ID: 77)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.5508354902267456
    2. ' odd' → logprob: -1.1758354902267456
    3. 'n' → logprob: -2.550835609436035
    4. ' n' → logprob: -3.675835609436035
    5. ' (' → logprob: -5.050835609436035
    6. '(n' → logprob: -6.300835609436035
    7. '(' → logprob: -6.675835609436035
    8. '   ' → logprob: -7.800835609436035
    9. ')' → logprob: -8.050835609436035
    10. 'not' → logprob: -8.050835609436035

Token 64: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04603289067745209
    2. '%' → logprob: -3.1710329055786133
    3. ' >' → logprob: -6.296032905578613
    4. ' ' → logprob: -7.671032905578613
    5. ')' → logprob: -7.796032905578613
    6. '>' → logprob: -8.796032905578613
    7. ' )' → logprob: -9.421032905578613
    8. ' %)' → logprob: -10.296032905578613
    9. ' ' → logprob: -11.546032905578613
    10. '```' → logprob: -12.358532905578613

Token 65: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3132958710193634
    2. ' ' → logprob: -1.313295841217041
    3. ')' → logprob: -10.4382963180542
    4. '```' → logprob: -12.8132963180542
    5. '

' → logprob: -14.6882963180542
    6. ' )' → logprob: -14.9382963180542
    7. '
' → logprob: -15.8757963180542
    8. ' ' → logprob: -16.000795364379883
    9. '>' → logprob: -16.375795364379883
    10. '۲' → logprob: -16.500795364379883

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000630947935860604
    2. ' ' → logprob: -7.375630855560303
    3. '```' → logprob: -13.250631332397461
    4. ')' → logprob: -14.688131332397461
    5. '   ' → logprob: -14.750631332397461
    6. '  ' → logprob: -14.938131332397461
    7. '1' → logprob: -15.125631332397461
    8. '{' → logprob: -16.06313133239746
    9. '

' → logprob: -16.25063133239746
    10. '۲' → logprob: -16.50063133239746

Token 67: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5455278158187866
    2. ')' → logprob: -1.2955278158187866
    3. ' ==' → logprob: -2.295527935028076
    4. ' !=' → logprob: -3.795527935028076
    5. '!=' → logprob: -4.420527935028076
    6. ')==' → logprob: -4.920527935028076
    7. ' )' → logprob: -5.920527935028076
    8. '1' → logprob: -7.670527935028076
    9. '=' → logprob: -7.795527935028076
    10. ')!=' → logprob: -7.920527935028076

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03188188001513481
    2. ' ' → logprob: -3.531881809234619
    3. '1' → logprob: -6.156881809234619
    4. '```' → logprob: -12.531882286071777
    5. ')' → logprob: -12.906882286071777
    6. '2' → logprob: -13.781882286071777
    7. '   ' → logprob: -14.719382286071777
    8. '

' → logprob: -14.719382286071777
    9. '==' → logprob: -14.781882286071777
    10. '=' → logprob: -15.094382286071777

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005122834118083119
    2. '1' → logprob: -7.75051212310791
    3. ' ' → logprob: -9.50051212310791
    4. '2' → logprob: -12.12551212310791
    5. ')' → logprob: -14.62551212310791
    6. '```' → logprob: -14.75051212310791
    7. '

' → logprob: -16.438013076782227
    8. '00' → logprob: -16.500513076782227
    9. '   ' → logprob: -16.813013076782227
    10. '
' → logprob: -17.000513076782227

Token 70: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00993032194674015
    2. 'and' → logprob: -5.00993013381958
    3. ')' → logprob: -6.00993013381958
    4. ' ' → logprob: -7.75993013381958
    5. ' )' → logprob: -8.134930610656738
    6. '>' → logprob: -10.384930610656738
    7. ' >' → logprob: -12.509930610656738
    8. ')>' → logprob: -15.259930610656738
    9. '==' → logprob: -15.884930610656738
    10. '	and' → logprob: -16.134929656982422

Token 71: ' odd' (ID: 14210)
  Prédit: ' odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.11282794922590256
    2. 'odd' → logprob: -2.237828016281128
    3. 'od' → logprob: -13.237828254699707
    4. ' ' → logprob: -13.737828254699707
    5. ')' → logprob: -13.862828254699707
    6. ' ' → logprob: -14.237828254699707
    7. ' od' → logprob: -15.362828254699707
    8. 'Odd' → logprob: -15.487828254699707
    9. '   ' → logprob: -15.612828254699707
    10. '  ' → logprob: -16.23782730102539

Token 72: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -14.000003814697266
    3. ')_' → logprob: -14.250003814697266
    4. '_c' → logprob: -14.500003814697266
    5. '_counts' → logprob: -14.500003814697266
    6. ')' → logprob: -15.375003814697266
    7. '_co' → logprob: -16.000003814697266
    8. ' _' → logprob: -16.000003814697266
    9. '_cont' → logprob: -16.375003814697266
    10. '```' → logprob: -16.750003814697266

Token 73: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.23321068286895752
    2. ' !=' → logprob: -1.7332106828689575
    3. '>' → logprob: -3.733210563659668
    4. ')' → logprob: -5.358210563659668
    5. '!=' → logprob: -5.983210563659668
    6. ')>' → logprob: -9.733210563659668
    7. ' )' → logprob: -10.233210563659668
    8. ' ' → logprob: -10.608210563659668
    9. '>)' → logprob: -12.108210563659668
    10. ' ' → logprob: -12.483210563659668

Token 74: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519344687461853
    2. ' ' → logprob: -1.50193452835083
    3. '<|end|>' → logprob: -12.876934051513672
    4. ')' → logprob: -13.751934051513672
    5. '  ' → logprob: -14.814434051513672
    6. '۰' → logprob: -15.001934051513672
    7. '>' → logprob: -15.564434051513672
    8. ' ' → logprob: -16.376934051513672
    9. 's' → logprob: -16.439434051513672
    10. '1' → logprob: -16.439434051513672

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010332842357456684
    2. ' ' → logprob: -6.876033306121826
    3. '۰' → logprob: -15.501032829284668
    4. ')' → logprob: -16.001033782958984
    5. '<|end|>' → logprob: -16.563533782958984
    6. '  ' → logprob: -17.501033782958984
    7. '```' → logprob: -17.813533782958984
    8. '1' → logprob: -17.938533782958984
    9. '   ' → logprob: -18.313533782958984
    10. '00' → logprob: -18.563533782958984

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002184999408200383
    2. '):' → logprob: -6.627184867858887
    3. ' )' → logprob: -7.127184867858887
    4. ':' → logprob: -10.127184867858887
    5. ' or' → logprob: -11.752184867858887
    6. '):
' → logprob: -12.752184867858887
    7. ' ):' → logprob: -13.127184867858887
    8. ')
' → logprob: -13.752184867858887
    9. 'or' → logprob: -14.627184867858887
    10. ':)' → logprob: -14.627184867858887

Token 77: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005135946557857096
    2. ' :' → logprob: -8.875514030456543
    3. ':
' → logprob: -9.000514030456543
    4. '):' → logprob: -9.125514030456543
    5. ' or' → logprob: -9.500514030456543
    6. ')' → logprob: -10.250514030456543
    7. ':return' → logprob: -10.625514030456543
    8. '   ' → logprob: -12.500514030456543
    9. 'or' → logprob: -14.500514030456543
    10. ' ' → logprob: -14.750514030456543

Token 78: ' (' (ID: 350)
  Prédit: ' odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.023682620376348495
    2. ' (' → logprob: -3.8986825942993164
    3. 'odd' → logprob: -6.023682594299316
    4. ' ' → logprob: -7.773682594299316
    5. '(' → logprob: -9.023682594299316
    6. ' n' → logprob: -9.898682594299316
    7. '   ' → logprob: -10.148682594299316
    8. 'n' → logprob: -10.773682594299316
    9. '  ' → logprob: -11.023682594299316
    10. ' not' → logprob: -11.648682594299316

Token 79: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17948901653289795
    2. ' n' → logprob: -2.0544891357421875
    3. 'odd' → logprob: -4.0544891357421875
    4. ' odd' → logprob: -4.1794891357421875
    5. '(n' → logprob: -6.5544891357421875
    6. ' (' → logprob: -7.3044891357421875
    7. '   ' → logprob: -7.5544891357421875
    8. ' ' → logprob: -8.304489135742188
    9. ')' → logprob: -8.554489135742188
    10. '(' → logprob: -9.054489135742188

Token 80: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.010136744938790798
    2. '%' → logprob: -4.635136604309082
    3. ' ' → logprob: -7.885136604309082
    4. ' //' → logprob: -13.885136604309082
    5. ' ' → logprob: -14.385136604309082
    6. ' >' → logprob: -14.635136604309082
    7. '  ' → logprob: -14.947636604309082
    8. ')' → logprob: -14.947636604309082
    9. '   ' → logprob: -15.385136604309082
    10. '>' → logprob: -15.885136604309082

Token 81: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22544221580028534
    2. ' ' → logprob: -1.6004421710968018
    3. '1' → logprob: -11.975441932678223
    4. '```' → logprob: -11.975441932678223
    5. ')' → logprob: -13.037941932678223
    6. '  ' → logprob: -13.412941932678223
    7. '   ' → logprob: -13.662941932678223
    8. '

' → logprob: -13.725441932678223
    9. '%' → logprob: -13.725441932678223
    10. '
' → logprob: -13.912941932678223

Token 82: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017287296941503882
    2. ' ' → logprob: -6.376728534698486
    3. '1' → logprob: -11.501729011535645
    4. '```' → logprob: -11.751729011535645
    5. '   ' → logprob: -14.064229011535645
    6. ')' → logprob: -14.126729011535645
    7. '  ' → logprob: -14.126729011535645
    8. '

' → logprob: -14.376729011535645
    9. '<|end|>' → logprob: -14.689229011535645
    10. '!' → logprob: -14.939229011535645

Token 83: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.8442184925079346
    2. '==' → logprob: -0.9692184925079346
    3. ' !=' → logprob: -2.0942184925079346
    4. '1' → logprob: -3.3442184925079346
    5. ' ==' → logprob: -3.4692184925079346
    6. ' ' → logprob: -7.9692182540893555
    7. '=' → logprob: -8.219218254089355
    8. ')' → logprob: -8.594218254089355
    9. '!' → logprob: -9.219218254089355
    10. '2' → logprob: -9.969218254089355

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32855141162872314
    2. ' ' → logprob: -1.4535514116287231
    3. '0' → logprob: -3.0785512924194336
    4. '2' → logprob: -8.328551292419434
    5. '```' → logprob: -11.203551292419434
    6. ')' → logprob: -12.703551292419434
    7. '=' → logprob: -12.953551292419434
    8. '==' → logprob: -13.078551292419434
    9. '  ' → logprob: -13.641051292419434
    10. '
' → logprob: -14.266051292419434

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003037843620404601
    2. ' ' → logprob: -6.003037929534912
    3. '2' → logprob: -8.128037452697754
    4. '0' → logprob: -8.253037452697754
    5. ')' → logprob: -12.815537452697754
    6. '```' → logprob: -13.940537452697754
    7. '' → logprob: -15.690537452697754
    8. '==' → logprob: -15.878037452697754
    9. '')' → logprob: -15.940537452697754
    10. '3' → logprob: -16.19053840637207

Token 86: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0031762905418872833
    2. 'and' → logprob: -6.128176212310791
    3. ' ' → logprob: -7.753176212310791
    4. ')' → logprob: -8.50317668914795
    5. ' >' → logprob: -8.50317668914795
    6. ' )' → logprob: -9.25317668914795
    7. '>' → logprob: -10.00317668914795
    8. ' ==' → logprob: -12.62817668914795
    9. ' !=' → logprob: -13.00317668914795
    10. '==' → logprob: -13.25317668914795

Token 87: ' odd' (ID: 14210)
  Prédit: ' odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.1002364382147789
    2. 'odd' → logprob: -2.350236415863037
    3. ')' → logprob: -11.100236892700195
    4. ' ' → logprob: -12.100236892700195
    5. '>' → logprob: -13.350236892700195
    6. ' od' → logprob: -13.600236892700195
    7. 'od' → logprob: -13.975236892700195
    8. ' o' → logprob: -14.350236892700195
    9. ' ' → logprob: -14.350236892700195
    10. '
' → logprob: -14.600236892700195

Token 88: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.073596548754722e-05
    2. ' _' → logprob: -11.50005054473877
    3. ')_' → logprob: -11.50005054473877
    4. '_c' → logprob: -11.75005054473877
    5. '_' → logprob: -12.00005054473877
    6. ')' → logprob: -12.25005054473877
    7. 'count' → logprob: -12.50005054473877
    8. '_co' → logprob: -13.75005054473877
    9. '```' → logprob: -14.00005054473877
    10. '._' → logprob: -14.12505054473877

Token 89: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3617936670780182
    2. ' >' → logprob: -1.2367936372756958
    3. '!=' → logprob: -4.986793518066406
    4. '>' → logprob: -5.236793518066406
    5. ' ' → logprob: -7.111793518066406
    6. ' <=' → logprob: -8.611793518066406
    7. ')' → logprob: -10.361793518066406
    8. ' ==' → logprob: -10.861793518066406
    9. ' <' → logprob: -11.361793518066406
    10. ' >
' → logprob: -11.611793518066406

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023245712742209435
    2. ' ' → logprob: -3.7732458114624023
    3. ')' → logprob: -16.023244857788086
    4. '```' → logprob: -16.398244857788086
    5. '<|end|>' → logprob: -17.023244857788086
    6. ' ' → logprob: -17.898244857788086
    7. '  ' → logprob: -18.210744857788086
    8. '   ' → logprob: -18.273244857788086
    9. '
' → logprob: -18.523244857788086
    10. '0' → logprob: -19.398244857788086

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -18.12502098083496
    4. ')' → logprob: -18.37502098083496
    5. '<|end|>' → logprob: -20.12502098083496
    6. '１' → logprob: -20.37502098083496
    7. '  ' → logprob: -20.68752098083496
    8. '۱' → logprob: -20.81252098083496
    9. '   ' → logprob: -20.93752098083496
    10. '
' → logprob: -21.06252098083496

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038949523121118546
    2. ')' → logprob: -3.288949489593506
    3. ':' → logprob: -7.038949489593506
    4. '):
' → logprob: -10.913949966430664
    5. ' ):' → logprob: -11.413949966430664
    6. ' )' → logprob: -14.538949966430664
    7. ':)' → logprob: -16.038949966430664
    8. ')：' → logprob: -16.038949966430664
    9. ')**' → logprob: -16.663949966430664
    10. ' ' → logprob: -16.663949966430664

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034006249625235796
    2. '    
' → logprob: -6.628400802612305
    3. '    ' → logprob: -7.128400802612305
    4. ' print' → logprob: -7.378400802612305
    5. ' 
' → logprob: -9.128400802612305
    6. 'print' → logprob: -9.378400802612305
    7. ' exit' → logprob: -9.503400802612305
    8. ' )' → logprob: -9.753400802612305
    9. ' raise' → logprob: -9.878400802612305
    10. ')' → logprob: -10.003400802612305

Token 94: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.48914724588394165
    2. ' print' → logprob: -0.9891472458839417
    3. '   ' → logprob: -5.239147186279297
    4. ' 
' → logprob: -5.239147186279297
    5. '
' → logprob: -6.239147186279297
    6. '0' → logprob: -6.614147186279297
    7. 'pr' → logprob: -8.364147186279297
    8. ' ' → logprob: -8.614147186279297
    9. 'p' → logprob: -8.864147186279297
    10. '```' → logprob: -8.864147186279297

Token 95: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00036263695801608264
    2. '('' → logprob: -8.250362396240234
    3. '("' → logprob: -9.375362396240234
    4. '0' → logprob: -11.250362396240234
    5. '(-' → logprob: -13.375362396240234
    6. '(
' → logprob: -13.625362396240234
    7. '()' → logprob: -14.750362396240234
    8. ' (' → logprob: -15.750362396240234
    9. '("("' → logprob: -16.250362396240234
    10. '(False' → logprob: -16.875362396240234

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020222914463374764
    2. ' ' → logprob: -9.375202178955078
    3. '"' → logprob: -9.500202178955078
    4. ''' → logprob: -10.125202178955078
    5. ')' → logprob: -13.125202178955078
    6. '`' → logprob: -15.875202178955078
    7. '(' → logprob: -16.500202178955078
    8. '00' → logprob: -17.000202178955078
    9. '000' → logprob: -17.250202178955078
    10. '")' → logprob: -17.500202178955078

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005552975926548243
    2. ')
' → logprob: -7.500555515289307
    3. ' )' → logprob: -13.625555038452148
    4. ')
' → logprob: -14.125555038452148
    5. ')`' → logprob: -16.37555503845215
    6. ')return' → logprob: -16.75055503845215
    7. '))' → logprob: -16.87555503845215
    8. '`)' → logprob: -17.00055503845215
    9. '')' → logprob: -17.00055503845215
    10. '")' → logprob: -17.12555503845215

Token 98: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0017114708898589015
    2. '
' → logprob: -7.376711368560791
    3. '   ' → logprob: -8.12671184539795
    4. ' else' → logprob: -8.25171184539795
    5. 'exit' → logprob: -8.62671184539795
    6. ')' → logprob: -8.75171184539795
    7. '    
' → logprob: -9.62671184539795
    8. '```' → logprob: -10.25171184539795
    9. 'elif' → logprob: -10.37671184539795
    10. '<|end|>' → logprob: -10.62671184539795

Token 99: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.042091190814971924
    2. 'else' → logprob: -3.917091131210327
    3. ' exit' → logprob: -3.917091131210327
    4. '	exit' → logprob: -7.417091369628906
    5. '
' → logprob: -8.042091369628906
    6. '```' → logprob: -8.792091369628906
    7. '\n' → logprob: -9.417091369628906
    8. '    
' → logprob: -9.792091369628906
    9. '_exit' → logprob: -10.042091369628906
    10. '   ' → logprob: -10.167091369628906

Token 100: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011146977543830872
    2. '(' → logprob: -4.5111470222473145
    3. '()
' → logprob: -9.386146545410156
    4. '(
' → logprob: -11.886146545410156
    5. '()

' → logprob: -12.886146545410156
    6. '()`' → logprob: -13.011146545410156
    7. '(

' → logprob: -14.136146545410156
    8. '()\' → logprob: -14.511146545410156
    9. '())' → logprob: -14.761146545410156
    10. '()"' → logprob: -15.136146545410156

Token 101: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.560045063495636
    2. ' ' → logprob: -1.6850450038909912
    3. ')' → logprob: -2.560045003890991
    4. '(' → logprob: -3.310045003890991
    5. '\' → logprob: -3.435045003890991
    6. ' 
' → logprob: -3.560045003890991
    7. '_' → logprob: -4.81004524230957
    8. 'n' → logprob: -5.18504524230957
    9. ' 

' → logprob: -5.56004524230957
    10. 'else' → logprob: -5.68504524230957

Token 102: ' Calcul' (ID: 57243)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.015597650781273842
    2. '#' → logprob: -5.390597820281982
    3. 'first' → logprob: -5.515597820281982
    4. 'res' → logprob: -6.140597820281982
    5. 'den' → logprob: -6.640597820281982
    6. 'total' → logprob: -6.765597820281982
    7. ' half' → logprob: -8.015597343444824
    8. 'pal' → logprob: -8.390597343444824
    9. 'chars' → logprob: -8.515597343444824
    10. 'result' → logprob: -8.515597343444824

Token 103: ' du' (ID: 1462)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.20629048347473145
    2. ' half' → logprob: -1.9562904834747314
    3. 'total' → logprob: -3.4562904834747314
    4. 'res' → logprob: -5.206290245056152
    5. 'result' → logprob: -5.956290245056152
    6. ' total' → logprob: -6.206290245056152
    7. '(' → logprob: -7.706290245056152
    8. '_half' → logprob: -8.081290245056152
    9. 'possible' → logprob: -8.206290245056152
    10. '#' → logprob: -8.581290245056152

Token 104: ' nombre' (ID: 9733)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.17366674542427063
    2. 'half' → logprob: -2.6736667156219482
    3. 'nombre' → logprob: -3.2986667156219482
    4. 'total' → logprob: -3.7986667156219482
    5. 'num' → logprob: -4.423666954040527
    6. 'factor' → logprob: -4.923666954040527
    7. 'numer' → logprob: -5.798666954040527
    8. 'div' → logprob: -5.923666954040527
    9. 'fact' → logprob: -6.548666954040527
    10. 'result' → logprob: -6.923666954040527

Token 105: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11730793118476868
    2. '_total' → logprob: -3.3673079013824463
    3. '_des' → logprob: -3.6173079013824463
    4. '(' → logprob: -3.9923079013824463
    5. ' de' → logprob: -4.867308139801025
    6. '_de' → logprob: -5.617308139801025
    7. 's' → logprob: -5.867308139801025
    8. 'des' → logprob: -5.992308139801025
    9. ' des' → logprob: -6.367308139801025
    10. '<|end|>' → logprob: -6.367308139801025

Token 106: ' pal' (ID: 5337)
  Prédit: 'pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pal' → logprob: -0.7324662208557129
    2. ' permutations' → logprob: -2.107466220855713
    3. ' pal' → logprob: -2.232466220855713
    4. ' mo' → logprob: -2.357466220855713
    5. 'mo' → logprob: -3.232466220855713
    6. ' half' → logprob: -3.357466220855713
    7. ' arrangements' → logprob: -3.482466220855713
    8. ' demi' → logprob: -3.607466220855713
    9. '_pal' → logprob: -4.607466220855713
    10. 'half' → logprob: -4.607466220855713

Token 107: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.0009345670696347952
    2. 'indrome' → logprob: -7.250934600830078
    3. 'in' → logprob: -8.875934600830078
    4. '```' → logprob: -10.000934600830078
    5. '``' → logprob: -12.125934600830078
    6. '(' → logprob: -12.125934600830078
    7. '_' → logprob: -13.125934600830078
    8. '()' → logprob: -13.125934600830078
    9. '#' → logprob: -13.250934600830078
    10. ')' → logprob: -13.375934600830078

Token 108: 'romes' (ID: 159600)
  Prédit: 'romes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'romes' → logprob: -0.0011296173324808478
    2. 'r' → logprob: -7.001129627227783
    3. 'rom' → logprob: -8.626129150390625
    4. 'orm' → logprob: -12.126129150390625
    5. '```' → logprob: -12.501129150390625
    6. 'rome' → logprob: -12.626129150390625
    7. 'd' → logprob: -12.751129150390625
    8. 'mes' → logprob: -13.001129150390625
    9. 'omes' → logprob: -13.126129150390625
    10. 'ranges' → logprob: -13.501129150390625

Token 109: ' an' (ID: 448)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.16386279463768005
    2. ' half' → logprob: -2.163862705230713
    3. 'total' → logprob: -3.538862705230713
    4. ' total' → logprob: -6.288862705230713
    5. '_half' → logprob: -6.413862705230713
    6. 'res' → logprob: -6.538862705230713
    7. 'possible' → logprob: -7.288862705230713
    8. 'length' → logprob: -8.413863182067871
    9. 'hal' → logprob: -8.538863182067871
    10. 'result' → logprob: -8.788863182067871

Token 110: 'agram' (ID: 7632)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.39027488231658936
    2. 'a' → logprob: -2.390275001525879
    3. 'agram' → logprob: -4.015275001525879
    4. 'dre' → logprob: -4.390275001525879
    5. 'terior' → logprob: -4.390275001525879
    6. 'c' → logprob: -4.515275001525879
    7. 'tiques' → logprob: -4.640275001525879
    8. 'tip' → logprob: -4.890275001525879
    9. 'tir' → logprob: -5.015275001525879
    10. 'agrams' → logprob: -5.015275001525879

Token 111: 'mes' (ID: 4613)
  Prédit: 'mes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mes' → logprob: -0.018090475350618362
    2. 'me' → logprob: -4.51809024810791
    3. 'm' → logprob: -5.26809024810791
    4. 's' → logprob: -6.51809024810791
    5. '```' → logprob: -8.39309024810791
    6. 'ms' → logprob: -9.14309024810791
    7. 'es' → logprob: -11.26809024810791
    8. 'r' → logprob: -11.51809024810791
    9. 'ames' → logprob: -12.14309024810791
    10. '=' → logprob: -12.14309024810791

Token 112: '
' (ID: 198)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0018831811612471938
    2. 'res' → logprob: -7.501883029937744
    3. 'total' → logprob: -7.501883029937744
    4. 'first' → logprob: -8.376883506774902
    5. 'hal' → logprob: -9.001883506774902
    6. 'result' → logprob: -9.001883506774902
    7. 'length' → logprob: -9.251883506774902
    8. 'count' → logprob: -10.501883506774902
    9. 'answer' → logprob: -10.876883506774902
    10. 'freq' → logprob: -11.126883506774902

Token 113: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.009297704324126244
    2. 'res' → logprob: -5.134297847747803
    3. 'result' → logprob: -6.634297847747803
    4. 'total' → logprob: -7.134297847747803
    5. 'hal' → logprob: -8.384297370910645
    6. 'num' → logprob: -8.509297370910645
    7. 'ans' → logprob: -8.509297370910645
    8. 'answer' → logprob: -8.634297370910645
    9. 'count' → logprob: -9.009297370910645
    10. 'first' → logprob: -9.384297370910645

Token 114: '_len' (ID: 13683)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13333052396774292
    2. '_len' → logprob: -3.0083305835723877
    3. 's' → logprob: -3.6333305835723877
    4. '_counts' → logprob: -4.133330345153809
    5. '_count' → logprob: -4.508330345153809
    6. '_freq' → logprob: -4.758330345153809
    7. '_length' → logprob: -5.633330345153809
    8. '_factor' → logprob: -6.008330345153809
    9. '=' → logprob: -6.133330345153809
    10. ' =' → logprob: -6.633330345153809

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759485960006714
    2. '=' → logprob: -0.8259485960006714
    3. 's' → logprob: -12.075948715209961
    4. '_' → logprob: -13.450948715209961
    5. ')' → logprob: -14.200948715209961
    6. ',' → logprob: -15.200948715209961
    7. '＝' → logprob: -15.200948715209961
    8. ' ' → logprob: -15.200948715209961
    9. '=int' → logprob: -16.20094871520996
    10. 'e' → logprob: -16.45094871520996

Token 116: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141683518886566
    2. ' n' → logprob: -1.7014168500900269
    3. '(n' → logprob: -12.951416969299316
    4. '	n' → logprob: -14.576416969299316
    5. '
' → logprob: -15.576416969299316
    6. ' ' → logprob: -15.701416969299316
    7. '[n' → logprob: -16.701416015625
    8. ' (' → logprob: -16.701416015625
    9. 'sum' → logprob: -17.076416015625
    10. ' ' → logprob: -17.326416015625

Token 117: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.03805331513285637
    2. ' //' → logprob: -3.288053274154663
    3. '#' → logprob: -11.663053512573242
    4. '2' → logprob: -13.538053512573242
    5. ' ' → logprob: -14.288053512573242
    6. '```' → logprob: -14.788053512573242
    7. ')' → logprob: -15.913053512573242
    8. '()' → logprob: -16.163053512573242
    9. ' ' → logprob: -16.288053512573242
    10. '//=' → logprob: -16.288053512573242

Token 118: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023107275774236768
    2. ' ' → logprob: -8.37523078918457
    3. '```' → logprob: -15.87523078918457
    4. '۲' → logprob: -16.12523078918457
    5. '
' → logprob: -16.25023078918457
    6. '<|end|>' → logprob: -17.31273078918457
    7. '  ' → logprob: -17.81273078918457
    8. '   ' → logprob: -18.00023078918457
    9. '２' → logprob: -18.00023078918457
    10. '२' → logprob: -18.12523078918457

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -17.625001907348633
    4. '
' → logprob: -18.250001907348633
    5. '۲' → logprob: -18.750001907348633
    6. '   ' → logprob: -18.750001907348633
    7. '２' → logprob: -19.250001907348633
    8. '२' → logprob: -20.062501907348633
    9. '২' → logprob: -20.687501907348633
    10. '  ' → logprob: -20.687501907348633

Token 120: '
' (ID: 198)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.8198918104171753
    2. 'factor' → logprob: -1.4448918104171753
    3. '
' → logprob: -2.444891929626465
    4. 'result' → logprob: -2.569891929626465
    5. ' 
' → logprob: -3.694891929626465
    6. ')' → logprob: -3.694891929626465
    7. 'res' → logprob: -4.319891929626465
    8. ',' → logprob: -4.569891929626465
    9. ' numerator' → logprob: -4.569891929626465
    10. 'total' → logprob: -4.694891929626465

Token 121: 'half' (ID: 52836)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9847089052200317
    2. 'result' → logprob: -1.2347089052200317
    3. 'half' → logprob: -1.8597089052200317
    4. 'den' → logprob: -2.359708786010742
    5. 'numer' → logprob: -3.234708786010742
    6. 'num' → logprob: -3.984708786010742
    7. 'ans' → logprob: -4.734708786010742
    8. 'total' → logprob: -4.984708786010742
    9. 'answer' → logprob: -5.359708786010742
    10. 'freq' → logprob: -6.484708786010742

Token 122: '_freq' (ID: 51889)
  Prédit: '_freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -0.0508868508040905
    2. '_counts' → logprob: -3.550886869430542
    3. '_' → logprob: -4.675886631011963
    4. '_f' → logprob: -5.550886631011963
    5. '_factor' → logprob: -5.675886631011963
    6. '_len' → logprob: -6.050886631011963
    7. '_count' → logprob: -7.050886631011963
    8. '_s' → logprob: -7.925886631011963
    9. '_chars' → logprob: -8.425887107849121
    10. '_fact' → logprob: -9.550887107849121

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029754074290394783
    2. '=' → logprob: -3.529754161834717
    3. ' ' → logprob: -14.279753684997559
    4. ')' → logprob: -14.404753684997559
    5. 's' → logprob: -14.529753684997559
    6. '={}' → logprob: -14.529753684997559
    7. ' ={' → logprob: -14.904753684997559
    8. '[' → logprob: -15.029753684997559
    9. ',' → logprob: -15.779753684997559
    10. ' ' → logprob: -16.029754638671875

Token 124: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.011228304356336594
    2. 'Counter' → logprob: -5.136228084564209
    3. ' {' → logprob: -5.636228084564209
    4. '{}' → logprob: -7.261228084564209
    5. ' Counter' → logprob: -7.511228084564209
    6. '{i' → logprob: -8.261228561401367
    7. '{k' → logprob: -9.261228561401367
    8. '{
' → logprob: -10.261228561401367
    9. '{s' → logprob: -10.511228561401367
    10. '{x' → logprob: -10.636228561401367

Token 125: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4533877670764923
    2. 'char' → logprob: -1.70338773727417
    3. 'k' → logprob: -1.95338773727417
    4. 'ch' → logprob: -3.20338773727417
    5. ' c' → logprob: -10.953388214111328
    6. 'key' → logprob: -11.078388214111328
    7. 'chr' → logprob: -12.203388214111328
    8. '```' → logprob: -13.703388214111328
    9. ' char' → logprob: -13.953388214111328
    10. '
' → logprob: -13.953388214111328

Token 126: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002959631150588393
    2. ':c' → logprob: -6.627959728240967
    3. ':v' → logprob: -6.877959728240967
    4. ' :' → logprob: -8.127959251403809
    5. ':f' → logprob: -8.877959251403809
    6. ':value' → logprob: -10.002959251403809
    7. ':i' → logprob: -10.877959251403809
    8. ':s' → logprob: -11.002959251403809
    9. ':int' → logprob: -11.377959251403809
    10. ':k' → logprob: -11.377959251403809

Token 127: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5959631204605103
    2. ' v' → logprob: -0.8459631204605103
    3. ' freq' → logprob: -4.845963001251221
    4. 'freq' → logprob: -4.845963001251221
    5. 'f' → logprob: -5.970963001251221
    6. ' f' → logprob: -6.595963001251221
    7. '(v' → logprob: -9.845963478088379
    8. '(freq' → logprob: -10.345963478088379
    9. ' (' → logprob: -10.720963478088379
    10. ' ' → logprob: -11.095963478088379

Token 128: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.20141831040382385
    2. '//' → logprob: -1.7014182806015015
    3. ' ' → logprob: -12.576417922973633
    4. ' for' → logprob: -14.201417922973633
    5. '//=' → logprob: -15.326417922973633
    6. '
' → logprob: -15.576417922973633
    7. 'for' → logprob: -15.701417922973633
    8. ' ' → logprob: -15.826417922973633
    9. '2' → logprob: -16.951417922973633
    10. '#' → logprob: -17.076417922973633

Token 129: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003605416975915432
    2. ' ' → logprob: -5.628605365753174
    3. '
' → logprob: -12.878605842590332
    4. '```' → logprob: -13.378605842590332
    5. '   ' → logprob: -15.316105842590332
    6. '1' → logprob: -15.941105842590332
    7. '<|end|>' → logprob: -16.191104888916016
    8. '  ' → logprob: -16.503604888916016
    9. 's' → logprob: -16.691104888916016
    10. '۲' → logprob: -16.691104888916016

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.672236824873835e-05
    2. ' ' → logprob: -9.500076293945312
    3. '```' → logprob: -14.375076293945312
    4. '
' → logprob: -15.187576293945312
    5. '   ' → logprob: -15.750076293945312
    6. '۲' → logprob: -15.937576293945312
    7. '<|end|>' → logprob: -16.125076293945312
    8. '1' → logprob: -16.125076293945312
    9. 'to' → logprob: -16.812576293945312
    10. '２' → logprob: -16.937576293945312

Token 131: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05564887449145317
    2. 'for' → logprob: -2.9306488037109375
    3. ' ' → logprob: -7.1806488037109375
    4. '	for' → logprob: -13.055648803710938
    5. '  ' → logprob: -14.305648803710938
    6. '}' → logprob: -14.305648803710938
    7. ',' → logprob: -14.430648803710938
    8. '   ' → logprob: -14.805648803710938
    9. ')' → logprob: -14.930648803710938
    10. ' in' → logprob: -16.180648803710938

Token 132: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6326408386230469
    2. ' c' → logprob: -0.7576408386230469
    3. ',c' → logprob: -11.382640838623047
    4. 'freq' → logprob: -11.882640838623047
    5. '	c' → logprob: -12.132640838623047
    6. ',' → logprob: -12.257640838623047
    7. ')c' → logprob: -13.132640838623047
    8. ' freq' → logprob: -13.132640838623047
    9. ' ' → logprob: -13.382640838623047
    10. 'S' → logprob: -13.507640838623047

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017232444137334824
    2. 'in' → logprob: -4.517232418060303
    3. ' in' → logprob: -5.517232418060303
    4. ',c' → logprob: -6.392232418060303
    5. 'c' → logprob: -8.767232894897461
    6. ' ,' → logprob: -8.892232894897461
    7. 's' → logprob: -9.142232894897461
    8. ',v' → logprob: -10.017232894897461
    9. ',in' → logprob: -12.017232894897461
    10. ' c' → logprob: -12.767232894897461

Token 134: ' v' (ID: 323)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.3137189447879791
    2. ' in' → logprob: -2.3137190341949463
    3. ' freq' → logprob: -2.4387190341949463
    4. 'in' → logprob: -2.5637190341949463
    5. 'v' → logprob: -5.188718795776367
    6. 'c' → logprob: -8.313718795776367
    7. '_freq' → logprob: -8.938718795776367
    8. '(freq' → logprob: -9.688718795776367
    9. ' c' → logprob: -10.938718795776367
    10. 'f' → logprob: -10.938718795776367

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033925868570804596
    2. 'in' → logprob: -3.408925771713257
    3. 's' → logprob: -8.408926010131836
    4. ' ' → logprob: -11.033926010131836
    5. 'n' → logprob: -11.908926010131836
    6. 'd' → logprob: -12.721426010131836
    7. 'freq' → logprob: -13.096426010131836
    8. 'ine' → logprob: -13.346426010131836
    9. 't' → logprob: -13.471426010131836
    10. 'i' → logprob: -13.471426010131836

Token 136: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.04860677942633629
    2. ' freq' → logprob: -3.0486068725585938
    3. '(freq' → logprob: -11.423606872558594
    4. 'fre' → logprob: -12.798606872558594
    5. '_freq' → logprob: -13.798606872558594
    6. 'f' → logprob: -14.048606872558594
    7. '.freq' → logprob: -14.173606872558594
    8. ' ' → logprob: -14.423606872558594
    9. 'frequency' → logprob: -14.548606872558594
    10. '
' → logprob: -14.923606872558594

Token 137: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.002217465080320835
    2. 'items' → logprob: -6.1272172927856445
    3. '.' → logprob: -10.752217292785645
    4. '.iteritems' → logprob: -12.002217292785645
    5. ' .' → logprob: -12.877217292785645
    6. ' items' → logprob: -14.127217292785645
    7. 'in' → logprob: -14.752217292785645
    8. '_items' → logprob: -14.877217292785645
    9. '.Items' → logprob: -15.252217292785645
    10. '.values' → logprob: -15.627217292785645

Token 138: '()' (ID: 416)
  Prédit: '()}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()}' → logprob: -0.0486927404999733
    2. '()' → logprob: -3.0486927032470703
    3. '}' → logprob: -9.29869270324707
    4. '().' → logprob: -12.29869270324707
    5. '()}
' → logprob: -12.79869270324707
    6. '())' → logprob: -12.79869270324707
    7. '(' → logprob: -13.42369270324707
    8. ' ()' → logprob: -14.67369270324707
    9. '():' → logprob: -14.92369270324707
    10. '()},' → logprob: -14.92369270324707

Token 139: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0003361774142831564
    2. ' }' → logprob: -8.000336647033691
    3. '})' → logprob: -15.250336647033691
    4. ' if' → logprob: -15.500336647033691
    5. '}
' → logprob: -15.875336647033691
    6. ')' → logprob: -16.000335693359375
    7. ' ' → logprob: -17.125335693359375
    8. '}

' → logprob: -18.000335693359375
    9. ')}' → logprob: -18.625335693359375
    10. ',' → logprob: -19.000335693359375

Token 140: 'numer' (ID: 81553)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.47583889961242676
    2. 'result' → logprob: -1.9758388996124268
    3. 'den' → logprob: -2.2258388996124268
    4. 'num' → logprob: -2.9758388996124268
    5. 'total' → logprob: -3.3508388996124268
    6. 'numer' → logprob: -3.3508388996124268
    7. 'ans' → logprob: -4.850838661193848
    8. 'answer' → logprob: -6.975838661193848
    9. 'ways' → logprob: -7.725838661193848
    10. 'div' → logprob: -7.725838661193848

Token 141: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.0007376811117865145
    2. '=' → logprob: -7.50073766708374
    3. 'ateur' → logprob: -8.625738143920898
    4. ' =' → logprob: -12.500738143920898
    5. 'umerator' → logprob: -14.750738143920898
    6. 'ATOR' → logprob: -15.500738143920898
    7. 'атор' → logprob: -15.750738143920898
    8. 'a' → logprob: -15.875738143920898
    9. 'at' → logprob: -16.3757381439209
    10. 'al' → logprob: -16.5007381439209

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28163230419158936
    2. '=' → logprob: -1.4066323041915894
    3. '=f' → logprob: -8.406632423400879
    4. ' factorial' → logprob: -8.406632423400879
    5. 'factor' → logprob: -10.656632423400879
    6. ' =
' → logprob: -12.781632423400879
    7. ' ' → logprob: -12.906632423400879
    8. '_factor' → logprob: -13.031632423400879
    9. '(f' → logprob: -14.406632423400879
    10. '(' → logprob: -14.781632423400879

Token 143: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.05492663010954857
    2. ' factorial' → logprob: -2.929926633834839
    3. ' factor' → logprob: -10.804926872253418
    4. 'fact' → logprob: -10.929926872253418
    5. '.factor' → logprob: -13.304926872253418
    6. '_factor' → logprob: -13.304926872253418
    7. '-factor' → logprob: -14.054926872253418
    8. 'Factor' → logprob: -14.304926872253418
    9. 'fac' → logprob: -15.429926872253418
    10. 'f' → logprob: -15.554926872253418

Token 144: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. ' (' → logprob: -14.750000953674316
    3. 'half' → logprob: -15.875000953674316
    4. '(n' → logprob: -17.5
    5. '(
' → logprob: -17.625
    6. ' half' → logprob: -18.25
    7. '(h' → logprob: -19.375
    8. 'hal' → logprob: -19.625
    9. '_half' → logprob: -19.75
    10. '((' → logprob: -20.0

Token 145: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.00027206414961256087
    2. 'hal' → logprob: -8.250271797180176
    3. ' half' → logprob: -11.875271797180176
    4. '(' → logprob: -12.750271797180176
    5. ')' → logprob: -14.500271797180176
    6. '_half' → logprob: -15.625271797180176
    7. '
' → logprob: -16.375272750854492
    8. 'halb' → logprob: -17.375272750854492
    9. '-half' → logprob: -17.500272750854492
    10. 'halve' → logprob: -17.625272750854492

Token 146: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.961759259458631e-06
    2. 'len' → logprob: -12.250004768371582
    3. ')' → logprob: -16.7500057220459
    4. '_' → logprob: -17.1250057220459
    5. '_LEN' → logprob: -17.7500057220459
    6. '_l' → logprob: -17.7500057220459
    7. 'Len' → logprob: -17.8750057220459
    8. '<len' → logprob: -19.0000057220459
    9. '_le' → logprob: -19.1250057220459
    10. ' _' → logprob: -19.7500057220459

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8550976164988242e-05
    2. ' )' → logprob: -11.000018119812012
    3. ')
' → logprob: -14.125018119812012
    4. ')*' → logprob: -15.375018119812012
    5. '),' → logprob: -15.625018119812012
    6. '))' → logprob: -15.750018119812012
    7. '*' → logprob: -15.875018119812012
    8. ')#' → logprob: -16.000019073486328
    9. ')}' → logprob: -16.250019073486328
    10. '}' → logprob: -16.625019073486328

Token 148: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0014133312506601214
    2. ' denominator' → logprob: -6.751413345336914
    3. '/' → logprob: -8.751413345336914
    4. 'div' → logprob: -10.251413345336914
    5. '*' → logprob: -11.251413345336914
    6. '_den' → logprob: -11.376413345336914
    7. 'divider' → logprob: -12.001413345336914
    8. 'Den' → logprob: -12.501413345336914
    9. ' denomin' → logprob: -12.501413345336914
    10. ' denom' → logprob: -12.626413345336914

Token 149: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -7.219262624857947e-05
    2. 'om' → logprob: -10.125072479248047
    3. 'umerator' → logprob: -10.375072479248047
    4. '```' → logprob: -14.750072479248047
    5. 'omin' → logprob: -15.750072479248047
    6. '=' → logprob: -16.000072479248047
    7. 'orm' → logprob: -16.625072479248047
    8. 'omi' → logprob: -16.750072479248047
    9. 'min' → logprob: -17.125072479248047
    10. '#' → logprob: -18.250072479248047

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022726893424988
    2. '=' → logprob: -1.9102272987365723
    3. ' *=' → logprob: -13.285226821899414
    4. 's' → logprob: -15.035226821899414
    5. ' ' → logprob: -15.410226821899414
    6. '=sum' → logprob: -15.535226821899414
    7. ' ' → logprob: -15.660226821899414
    8. '=int' → logprob: -16.035226821899414
    9. '＝' → logprob: -16.535226821899414
    10. 'import' → logprob: -16.785226821899414

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.8497312895488e-05
    2. ' ' → logprob: -10.000068664550781
    3. 'factor' → logprob: -10.750068664550781
    4. ' factorial' → logprob: -14.000068664550781
    5. 'prod' → logprob: -15.125068664550781
    6. '   ' → logprob: -16.25006866455078
    7. '(' → logprob: -16.62506866455078
    8. 'fact' → logprob: -16.62506866455078
    9. '```' → logprob: -16.75006866455078
    10. '=' → logprob: -17.12506866455078

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018268341955263168
    2. 'factor' → logprob: -8.87518310546875
    3. ' ' → logprob: -10.75018310546875
    4. 'prod' → logprob: -11.12518310546875
    5. ' factorial' → logprob: -13.37518310546875
    6. 'eval' → logprob: -13.87518310546875
    7. 'import' → logprob: -14.25018310546875
    8. '```' → logprob: -14.62518310546875
    9. 'product' → logprob: -14.75018310546875
    10. 'fact' → logprob: -15.00018310546875

Token 153: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.353512704372406
    2. '<|end|>' → logprob: -1.4785127639770508
    3. ' for' → logprob: -3.603512763977051
    4. '*' → logprob: -3.603512763977051
    5. '
' → logprob: -4.478512763977051
    6. '<|end|>' → logprob: -6.478512763977051
    7. '' → logprob: -7.478512763977051
    8. ')' → logprob: -8.35351276397705
    9. '**' → logprob: -8.47851276397705
    10. '#' → logprob: -8.60351276397705

Token 154: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2766207754611969
    2. '*' → logprob: -1.6516207456588745
    3. ' for' → logprob: -3.651620864868164
    4. '<|end|>' → logprob: -3.776620864868164
    5. '**' → logprob: -8.276620864868164
    6. ' *' → logprob: -8.526620864868164
    7. '
' → logprob: -8.901620864868164
    8. ')' → logprob: -9.401620864868164
    9. '<|end|>' → logprob: -9.526620864868164
    10. ' ' → logprob: -9.526620864868164

Token 155: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.0679546371102333
    2. 'v' → logprob: -3.0679545402526855
    3. ' c' → logprob: -4.0679545402526855
    4. ' value' → logprob: -6.8179545402526855
    5. 'c' → logprob: -8.442955017089844
    6. 'value' → logprob: -8.692955017089844
    7. ' count' → logprob: -8.692955017089844
    8. ' val' → logprob: -8.692955017089844
    9. ' _' → logprob: -8.942955017089844
    10. '_' → logprob: -10.067955017089844

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14275090396404266
    2. 'in' → logprob: -2.0177509784698486
    3. ' ' → logprob: -9.64275074005127
    4. '	in' → logprob: -12.01775074005127
    5. 'v' → logprob: -13.51775074005127
    6. '<|end|>' → logprob: -13.89275074005127
    7. '_in' → logprob: -15.01775074005127
    8. 's' → logprob: -15.01775074005127
    9. 'In' → logprob: -15.01775074005127
    10. 'import' → logprob: -15.64275074005127

Token 157: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.05489615723490715
    2. ' half' → logprob: -2.929896116256714
    3. 'hal' → logprob: -11.679896354675293
    4. '_half' → logprob: -12.679896354675293
    5. ' ' → logprob: -13.429896354675293
    6. 'halb' → logprob: -15.554896354675293
    7. '-half' → logprob: -15.929896354675293
    8. '(' → logprob: -16.679895401000977
    9. 'halve' → logprob: -16.679895401000977
    10. ' halb' → logprob: -16.679895401000977

Token 158: '_freq' (ID: 51889)
  Prédit: '_freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -4.620622712536715e-05
    2. '_len' → logprob: -10.875045776367188
    3. 'freq' → logprob: -11.125045776367188
    4. '_val' → logprob: -12.250045776367188
    5. '_FREQ' → logprob: -12.750045776367188
    6. '_' → logprob: -13.250045776367188
    7. 'Freq' → logprob: -13.625045776367188
    8. '.freq' → logprob: -15.375045776367188
    9. 'v' → logprob: -15.500045776367188
    10. '_f' → logprob: -15.500045776367188

Token 159: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0036656332667917013
    2. '.' → logprob: -5.628665447235107
    3. 'values' → logprob: -10.253665924072266
    4. ' .' → logprob: -10.628665924072266
    5. '.value' → logprob: -12.753665924072266
    6. '.Values' → logprob: -13.378665924072266
    7. ' values' → logprob: -14.128665924072266
    8. '	values' → logprob: -15.003665924072266
    9. '_values' → logprob: -15.253665924072266
    10. '().' → logprob: -15.628665924072266

Token 160: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0024835076183080673
    2. '():
' → logprob: -6.752483367919922
    3. ':' → logprob: -6.877483367919922
    4. '()' → logprob: -8.377483367919922
    5. ' ():' → logprob: -10.502483367919922
    6. '):' → logprob: -11.377483367919922
    7. '():
' → logprob: -12.377483367919922
    8. '()*' → logprob: -12.502483367919922
    9. '(' → logprob: -13.377483367919922
    10. ' :' → logprob: -13.752483367919922

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039445288479328156
    2. ' denominator' → logprob: -3.289445400238037
    3. 'den' → logprob: -6.789445400238037
    4. '    
' → logprob: -8.789444923400879
    5. ' den' → logprob: -9.789444923400879
    6. '  ' → logprob: -10.914444923400879
    7. '_den' → logprob: -11.539444923400879
    8. '    ' → logprob: -11.539444923400879
    9. '.den' → logprob: -11.789444923400879
    10. ' ' → logprob: -12.164444923400879

Token 162: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.41071516275405884
    2. ' denominator' → logprob: -1.160715103149414
    3. '   ' → logprob: -3.785715103149414
    4. ' den' → logprob: -7.535715103149414
    5. '    
' → logprob: -8.660715103149414
    6. '    ' → logprob: -9.660715103149414
    7. '_den' → logprob: -9.910715103149414
    8. '.den' → logprob: -11.535715103149414
    9. ' denomin' → logprob: -11.535715103149414
    10. '  ' → logprob: -12.035715103149414

Token 163: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.38860902190208435
    2. '*=' → logprob: -1.1386090517044067
    3. '*' → logprob: -6.388608932495117
    4. ' ' → logprob: -10.138608932495117
    5. ' *' → logprob: -11.888608932495117
    6. '	' → logprob: -12.263608932495117
    7. '=' → logprob: -13.638608932495117
    8. '```' → logprob: -14.138608932495117
    9. ' ' → logprob: -14.263608932495117
    10. '   ' → logprob: -14.513608932495117

Token 164: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -3.547789674485102e-05
    2. ' factorial' → logprob: -10.250035285949707
    3. 'fact' → logprob: -17.125036239624023
    4. '.factor' → logprob: -18.250036239624023
    5. ' factor' → logprob: -19.625036239624023
    6. '_factor' → logprob: -19.750036239624023
    7. '-factor' → logprob: -21.125036239624023
    8. ' ' → logprob: -22.125036239624023
    9. '```' → logprob: -22.375036239624023
    10. '  ' → logprob: -22.375036239624023

Token 165: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00012511172099038959
    2. '(' → logprob: -9.00012493133545
    3. 'v' → logprob: -13.87512493133545
    4. ' (' → logprob: -14.37512493133545
    5. ')v' → logprob: -17.375125885009766
    6. '(
' → logprob: -17.500125885009766
    7. '((' → logprob: -17.750125885009766
    8. '(value' → logprob: -18.000125885009766
    9. ' v' → logprob: -18.500125885009766
    10. '[v' → logprob: -19.000125885009766

Token 166: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ' )' → logprob: -12.125007629394531
    3. '))' → logprob: -14.125007629394531
    4. ')
' → logprob: -14.375007629394531
    5. '}' → logprob: -15.625007629394531
    6. ')}' → logprob: -15.875007629394531
    7. ')#' → logprob: -16.87500762939453
    8. ')v' → logprob: -17.12500762939453
    9. '())' → logprob: -17.37500762939453
    10. '*)' → logprob: -17.50000762939453

Token 167: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00724323745816946
    2. ')' → logprob: -5.0072431564331055
    3. 'result' → logprob: -7.8822431564331055
    4. ')
' → logprob: -9.632243156433105
    5. ' print' → logprob: -10.757243156433105
    6. '
' → logprob: -11.257243156433105
    7. '*' → logprob: -11.757243156433105
    8. '```' → logprob: -11.882243156433105
    9. '  
' → logprob: -12.257243156433105
    10. '#' → logprob: -12.382243156433105

Token 168: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005248818546533585
    2. '(' → logprob: -5.2552490234375
    3. ' (' → logprob: -11.8802490234375
    4. '(f' → logprob: -12.1302490234375
    5. '((' → logprob: -13.8802490234375
    6. '(
' → logprob: -14.1302490234375
    7. '(int' → logprob: -14.8802490234375
    8. 'numer' → logprob: -15.5052490234375
    9. '()' → logprob: -15.7552490234375
    10. 'n' → logprob: -16.6302490234375

Token 169: 'umerator' (ID: 152035)
  Prédit: 'umerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umerator' → logprob: -0.011906351894140244
    2. 'um' → logprob: -4.761906147003174
    3. 'umer' → logprob: -6.511906147003174
    4. ')' → logprob: -7.136906147003174
    5. '/' → logprob: -7.511906147003174
    6. '//' → logprob: -8.261906623840332
    7. '/n' → logprob: -9.261906623840332
    8. ' /' → logprob: -11.011906623840332
    9. '(n' → logprob: -11.011906623840332
    10. 'u' → logprob: -11.136906623840332

Token 170: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3514088988304138
    2. '//' → logprob: -1.2264089584350586
    3. ')' → logprob: -5.851408958435059
    4. ' ' → logprob: -10.351408958435059
    5. ')//' → logprob: -10.726408958435059
    6. ',' → logprob: -11.101408958435059
    7. ' )' → logprob: -12.351408958435059
    8. ' ' → logprob: -12.851408958435059
    9. '   ' → logprob: -13.226408958435059
    10. '"' → logprob: -13.601408958435059

Token 171: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0067156096920371056
    2. ' denominator' → logprob: -5.006715774536133
    3. ' den' → logprob: -15.756715774536133
    4. '_den' → logprob: -17.256715774536133
    5. '```' → logprob: -18.006715774536133
    6. '.den' → logprob: -18.756715774536133
    7. ' denomination' → logprob: -18.756715774536133
    8. 'Den' → logprob: -19.131715774536133
    9. 'delimiter' → logprob: -19.131715774536133
    10. 'd' → logprob: -19.256715774536133

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.625000953674316
    3. ')
' → logprob: -17.875001907348633
    4. '))' → logprob: -18.125001907348633
    5. '')' → logprob: -19.500001907348633
    6. '),' → logprob: -19.875001907348633
    7. '}' → logprob: -20.000001907348633
    8. ')`' → logprob: -20.000001907348633
    9. ')#' → logprob: -20.250001907348633
    10. '`)' → logprob: -20.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 170
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 81
Tokens correctement prédits (top 10): 149
Précision stricte (1ère position): 46.47%
Précision adaptée (1ère position): 47.65%
Précision (top 10): 87.65%
================================================================================
