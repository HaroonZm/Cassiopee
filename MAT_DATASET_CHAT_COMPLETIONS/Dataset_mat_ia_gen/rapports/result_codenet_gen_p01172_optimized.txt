================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    x,y = map(int,line.split())
    if x == 0 and y == 0:
        break
    seen = {}
    remainder = x % y
    pos = 0
    while remainder != 0 and remainder not in seen:
        seen[remainder] = pos
        remainder = (remainder * 10) % y
        pos += 1
    if remainder == 0:
        print(pos, 0)
    else:
        print(seen[remainder], pos - seen[remainder])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03585657849907875
    2. '\n' → logprob: -4.0358567237854
    3. 'import' → logprob: -4.7858567237854
    4. '<|end|>' → logprob: -5.2858567237854
    5. '\' → logprob: -7.0358567237854
    6. '<|end|>' → logprob: -7.5358567237854
    7. 'newline' → logprob: -7.9108567237854
    8. ',' → logprob: -8.160856246948242
    9. '[' → logprob: -8.285856246948242
    10. '' → logprob: -8.285856246948242

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005038183182477951
    2. ' i' → logprob: -5.880038261413574
    3. '  ' → logprob: -6.130038261413574
    4. ' space' → logprob: -11.755038261413574
    5. '```' → logprob: -12.005038261413574
    6. 'i' → logprob: -12.505038261413574
    7. ' )' → logprob: -12.630038261413574
    8. ' a' → logprob: -12.880038261413574
    9. '_' → logprob: -12.880038261413574
    10. ' n' → logprob: -13.005038261413574

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14993883669376373
    2. 'in' → logprob: -2.1499388217926025
    3. ':' → logprob: -4.399939060211182
    4. '[' → logprob: -5.149939060211182
    5. '[]' → logprob: -7.524939060211182
    6. '[:]' → logprob: -7.649939060211182
    7. ' ' → logprob: -7.899939060211182
    8. '[line' → logprob: -7.899939060211182
    9. 'import' → logprob: -8.024938583374023
    10. '```' → logprob: -8.274938583374023

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.009110254235565662
    2. 'sys' → logprob: -4.884110450744629
    3. ' ' → logprob: -6.634110450744629
    4. '=sys' → logprob: -9.509110450744629
    5. '(sys' → logprob: -10.634110450744629
    6. ' iter' → logprob: -10.634110450744629
    7. '	sys' → logprob: -10.634110450744629
    8. ' in' → logprob: -11.384110450744629
    9. ' ' → logprob: -11.634110450744629
    10. '```' → logprob: -12.384110450744629

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008858248591423035
    2. '.readline' → logprob: -4.7588582038879395
    3. '.stdin' → logprob: -9.383858680725098
    4. '.argv' → logprob: -10.133858680725098
    5. '.stdout' → logprob: -10.633858680725098
    6. ' .' → logprob: -10.758858680725098
    7. '.readlines' → logprob: -11.133858680725098
    8. '```' → logprob: -12.133858680725098
    9. '.setdefault' → logprob: -12.383858680725098
    10. '.`' → logprob: -12.508858680725098

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.865583706414327e-05
    2. ':
' → logprob: -10.62509822845459
    3. ' :' → logprob: -11.12509822845459
    4. '):' → logprob: -11.25009822845459
    5. ':**' → logprob: -11.25009822845459
    6. '[:]' → logprob: -11.62509822845459
    7. '>:' → logprob: -11.75009822845459
    8. '':' → logprob: -12.37509822845459
    9. '():' → logprob: -13.37509822845459
    10. '':'' → logprob: -13.37509822845459

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037186036352068186
    2. ' print' → logprob: -6.128718376159668
    3. '    
' → logprob: -6.753718376159668
    4. 'print' → logprob: -8.628718376159668
    5. '    ' → logprob: -9.628718376159668
    6. ' if' → logprob: -10.128718376159668
    7. ' readline' → logprob: -11.003718376159668
    8. '```' → logprob: -11.628718376159668
    9. ' ' → logprob: -11.878718376159668
    10. ' line' → logprob: -12.128718376159668

Token 10: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32560083270072937
    2. 'print' → logprob: -1.3256008625030518
    3. ' print' → logprob: -4.450600624084473
    4. '    ' → logprob: -8.700600624084473
    5. 'pass' → logprob: -8.825600624084473
    6. '       ' → logprob: -9.075600624084473
    7. ' pass' → logprob: -9.575600624084473
    8. ' if' → logprob: -10.075600624084473
    9. 'if' → logprob: -11.325600624084473
    10. '```' → logprob: -11.825600624084473

Token 11: ',y' (ID: 16103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.988226592540741
    2. ' =' → logprob: -1.1132266521453857
    3. '.' → logprob: -2.1132266521453857
    4. ' ' → logprob: -3.1132266521453857
    5. '.strip' → logprob: -3.4882266521453857
    6. '   ' → logprob: -4.113226413726807
    7. 's' → logprob: -4.238226413726807
    8. 'n' → logprob: -4.363226413726807
    9. '.append' → logprob: -4.613226413726807
    10. 'f' → logprob: -4.738226413726807

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3138410747051239
    2. '=' → logprob: -1.3138411045074463
    3. ',' → logprob: -7.688840866088867
    4. ' ' → logprob: -9.813840866088867
    5. ' ,' → logprob: -10.688840866088867
    6. ')' → logprob: -11.063840866088867
    7. '<|end|>' → logprob: -11.188840866088867
    8. '   ' → logprob: -12.938840866088867
    9. '    ' → logprob: -13.313840866088867
    10. '  ' → logprob: -13.688840866088867

Token 13: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04411932826042175
    2. ' map' → logprob: -3.294119358062744
    3. 'line' → logprob: -5.169119358062744
    4. 'map' → logprob: -8.044118881225586
    5. ' ' → logprob: -10.169118881225586
    6. '[line' → logprob: -12.669118881225586
    7. '	line' → logprob: -12.919118881225586
    8. ' [' → logprob: -13.544118881225586
    9. '(line' → logprob: -13.794118881225586
    10. '=line' → logprob: -14.419118881225586

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1791827231645584
    2. '(' → logprob: -2.054182767868042
    3. '(str' → logprob: -3.429182767868042
    4. '(lambda' → logprob: -5.804182529449463
    5. 'int' → logprob: -8.804183006286621
    6. '<int' → logprob: -9.429183006286621
    7. '(float' → logprob: -9.929183006286621
    8. 'str' → logprob: -10.054183006286621
    9. '(
' → logprob: -10.554183006286621
    10. '[int' → logprob: -10.804183006286621

Token 15: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.06485452502965927
    2. ')' → logprob: -2.814854621887207
    3. ',line' → logprob: -7.189854621887207
    4. '(' → logprob: -7.439854621887207
    5. ',' → logprob: -7.564854621887207
    6. '[line' → logprob: -8.189854621887207
    7. ' line' → logprob: -8.314854621887207
    8. '<|end|>' → logprob: -8.939854621887207
    9. 'line' → logprob: -9.064854621887207
    10. '#line' → logprob: -10.064854621887207

Token 16: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.029981307685375214
    2. '.strip' → logprob: -3.9049813747406006
    3. '.' → logprob: -4.7799811363220215
    4. '.rstrip' → logprob: -7.7799811363220215
    5. '.readline' → logprob: -8.15498161315918
    6. ')' → logprob: -8.40498161315918
    7. ').' → logprob: -10.65498161315918
    8. '   ' → logprob: -11.02998161315918
    9. '().' → logprob: -11.52998161315918
    10. 'split' → logprob: -11.77998161315918

Token 17: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01074500847607851
    2. '())' → logprob: -5.135745048522949
    3. ')' → logprob: -6.135745048522949
    4. '(','' → logprob: -6.260745048522949
    5. '(' → logprob: -8.01074504852295
    6. '')' → logprob: -8.88574504852295
    7. '()' → logprob: -9.38574504852295
    8. '(',' → logprob: -9.63574504852295
    9. '("' → logprob: -10.13574504852295
    10. '))' → logprob: -11.26074504852295

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26919642090797424
    2. '\n' → logprob: -2.6441965103149414
    3. '    
' → logprob: -3.1441965103149414
    4. '<|end|>' → logprob: -3.7691965103149414
    5. ' ' → logprob: -3.8941965103149414
    6. '    ' → logprob: -4.269196510314941
    7. ':' → logprob: -4.269196510314941
    8. '
' → logprob: -4.394196510314941
    9. ' 
' → logprob: -5.019196510314941
    10. ' if' → logprob: -5.144196510314941

Token 19: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5875632166862488
    2. ' if' → logprob: -1.9625632762908936
    3. '+' → logprob: -2.5875632762908936
    4. '    ' → logprob: -2.8375632762908936
    5. 'if' (adapté à ' if') → logprob: -2.9625632762908936
    6. 'print' → logprob: -3.0875632762908936
    7. ' ' → logprob: -4.5875630378723145
    8. ',' → logprob: -4.5875630378723145
    9. ':' → logprob: -4.8375630378723145
    10. 'sum' → logprob: -4.9625630378723145

Token 20: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.15867528319358826
    2. '>' → logprob: -2.158675193786621
    3. ' <' → logprob: -3.783675193786621
    4. '<' → logprob: -5.283675193786621
    5. ' ==' → logprob: -6.658675193786621
    6. '==' → logprob: -7.533675193786621
    7. ' ' → logprob: -7.533675193786621
    8. ' <=' → logprob: -8.033675193786621
    9. ' >=' → logprob: -8.658675193786621
    10. '   ' → logprob: -9.283675193786621

Token 22: ' ' (ID: 220)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.550859808921814
    2. 'y' → logprob: -1.175859808921814
    3. ' ' → logprob: -2.8008599281311035
    4. '0' → logprob: -2.9258599281311035
    5. '1' → logprob: -7.5508599281311035
    6. '10' → logprob: -11.488359451293945
    7. ''y' → logprob: -11.675859451293945
    8. '2' → logprob: -11.800859451293945
    9. '  ' → logprob: -11.863359451293945
    10. '	y' → logprob: -12.363359451293945

Token 23: '0' (ID: 15)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.05584888532757759
    2. '0' → logprob: -3.0558488368988037
    3. ' y' → logprob: -5.430849075317383
    4. '1' → logprob: -6.680849075317383
    5. ' ' → logprob: -6.930849075317383
    6. '10' → logprob: -9.180849075317383
    7. '2' → logprob: -9.305849075317383
    8. '-' → logprob: -10.055849075317383
    9. '5' → logprob: -10.055849075317383
    10. '100' → logprob: -10.055849075317383

Token 24: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02135416306555271
    2. 'and' → logprob: -4.0213541984558105
    3. ':' → logprob: -6.2713541984558105
    4. ' or' → logprob: -6.8963541984558105
    5. ' ' → logprob: -8.521353721618652
    6. '   ' → logprob: -9.521353721618652
    7. '	and' → logprob: -11.896353721618652
    8. '    ' → logprob: -12.146353721618652
    9. '  ' → logprob: -12.521353721618652
    10. ' a' → logprob: -12.646353721618652

Token 25: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132689297199249
    2. 'y' → logprob: -1.3132688999176025
    3. '	y' → logprob: -12.438268661499023
    4. ' ' → logprob: -13.563268661499023
    5. '   ' → logprob: -14.063268661499023
    6. '    ' → logprob: -14.313268661499023
    7. '<|end|>' → logprob: -15.688268661499023
    8. '  ' → logprob: -16.188268661499023
    9. '‘y' → logprob: -16.813268661499023
    10. 'x' → logprob: -16.813268661499023

Token 26: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00818024855107069
    2. '==' → logprob: -5.008180141448975
    3. ' ' → logprob: -6.633180141448975
    4. '<|end|>' → logprob: -9.383180618286133
    5. '  ' → logprob: -10.633180618286133
    6. '0' → logprob: -11.508180618286133
    7. '<|end|>' → logprob: -11.508180618286133
    8. ' !=' → logprob: -12.383180618286133
    9. ' ' → logprob: -12.508180618286133
    10. ' =' → logprob: -13.383180618286133

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196891888976097
    2. ' ' → logprob: -2.8119688034057617
    3. '  ' → logprob: -14.811968803405762
    4. ' ' → logprob: -15.499468803405762
    5. '   ' → logprob: -15.499468803405762
    6. '1' → logprob: -15.936968803405762
    7. ''' → logprob: -16.811969757080078
    8. '۰' → logprob: -16.999469757080078
    9. '```' → logprob: -17.311969757080078
    10. '`' → logprob: -17.811969757080078

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00593117019161582
    2. ' ' → logprob: -5.130931377410889
    3. '1' → logprob: -13.25593090057373
    4. '  ' → logprob: -15.13093090057373
    5. '   ' → logprob: -15.69343090057373
    6. '7' → logprob: -17.130931854248047
    7. '9' → logprob: -17.193431854248047
    8. '4' → logprob: -17.443431854248047
    9. '```' → logprob: -17.443431854248047
    10. '2' → logprob: -17.630931854248047

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000939450750593096
    2. ':
' → logprob: -7.62593936920166
    3. '       ' → logprob: -8.00093936920166
    4. '   ' → logprob: -9.25093936920166
    5. ' :' → logprob: -11.37593936920166
    6. ':return' → logprob: -12.75093936920166
    7. '    ' → logprob: -13.00093936920166
    8. '      ' → logprob: -14.25093936920166
    9. '.' → logprob: -14.50093936920166
    10. '     ' → logprob: -14.75093936920166

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008750165579840541
    2. '   ' → logprob: -7.500874996185303
    3. ':' → logprob: -8.625875473022461
    4. '\n' → logprob: -9.625875473022461
    5. '    ' → logprob: -10.375875473022461
    6. '     ' → logprob: -11.250875473022461
    7. '      ' → logprob: -12.000875473022461
    8. ' break' → logprob: -12.000875473022461
    9. '	break' → logprob: -12.125875473022461
    10. ':
' → logprob: -13.250875473022461

Token 31: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03267758712172508
    2. ' break' → logprob: -3.53267765045166
    3. 'break' (adapté à ' break') → logprob: -6.15767765045166
    4. '   ' → logprob: -7.28267765045166
    5. '	break' → logprob: -9.28267765045166
    6. '           ' → logprob: -10.78267765045166
    7. '     ' → logprob: -14.15767765045166
    8. '      ' → logprob: -14.40767765045166
    9. ' ' → logprob: -14.53267765045166
    10. '    ' → logprob: -14.53267765045166

Token 32: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21177059412002563
    2. '    
' → logprob: -1.8367705345153809
    3. '
' → logprob: -3.711770534515381
    4. '  
' → logprob: -5.586770534515381
    5. '\n' → logprob: -6.961770534515381
    6. '<|end|>' → logprob: -7.336770534515381
    7. 'print' → logprob: -7.586770534515381
    8. '        
' → logprob: -7.961770534515381
    9. '   
' → logprob: -8.336771011352539
    10. ' 
' → logprob: -8.336771011352539

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050831783562898636
    2. '    
' → logprob: -3.0508317947387695
    3. '
' → logprob: -6.5508317947387695
    4. 'print' → logprob: -8.55083179473877
    5. '  
' → logprob: -8.80083179473877
    6. '        
' → logprob: -8.80083179473877
    7. '<|end|>' → logprob: -9.17583179473877
    8. '   
' → logprob: -10.05083179473877
    9. '\n' → logprob: -10.05083179473877
    10. '```' → logprob: -10.55083179473877

Token 34: ' seen' (ID: 6177)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004550219513475895
    2. '    
' → logprob: -6.004550457000732
    3. 'print' → logprob: -7.879550457000732
    4. '    ' → logprob: -7.879550457000732
    5. '```' → logprob: -7.879550457000732
    6. ' print' → logprob: -8.129549980163574
    7. '\n' → logprob: -8.754549980163574
    8. '       ' → logprob: -9.004549980163574
    9. ' if' → logprob: -9.504549980163574
    10. '     
' → logprob: -10.379549980163574

Token 35: ' =' (ID: 314)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.6810950636863708
    2. '[' → logprob: -1.0560951232910156
    3. '.setdefault' → logprob: -2.8060951232910156
    4. ' ' → logprob: -3.1810951232910156
    5. '[(' → logprob: -3.9310951232910156
    6. ' =' → logprob: -4.681095123291016
    7. '.' → logprob: -5.306095123291016
    8. '=' → logprob: -6.056095123291016
    9. '  ' → logprob: -6.806095123291016
    10. 's' → logprob: -6.931095123291016

Token 36: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.9199977517127991
    2. ' set' → logprob: -1.0449976921081543
    3. 'set' → logprob: -1.6699976921081543
    4. ' {}' → logprob: -2.7949976921081543
    5. '{' → logprob: -8.794998168945312
    6. ' ' → logprob: -9.419998168945312
    7. ' []' → logprob: -9.794998168945312
    8. '	set' → logprob: -10.544998168945312
    9. '[]' → logprob: -10.919998168945312
    10. ' {' → logprob: -10.919998168945312

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018365560099482536
    2. ' for' → logprob: -4.643365383148193
    3. '    
' → logprob: -5.518365383148193
    4. 'for' → logprob: -6.018365383148193
    5. '    ' → logprob: -6.768365383148193
    6. '<|end|>' → logprob: -8.768365859985352
    7. '     
' → logprob: -8.768365859985352
    8. '
' → logprob: -9.018365859985352
    9. '[' → logprob: -9.393365859985352
    10. '\' → logprob: -9.643365859985352

Token 38: ' remainder' (ID: 47056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6428602337837219
    2. ' for' → logprob: -1.2678601741790771
    3. 'for' → logprob: -2.267860174179077
    4. '    ' → logprob: -3.517860174179077
    5. ' valid' → logprob: -3.892860174179077
    6. 'count' → logprob: -5.142860412597656
    7. 'valid' → logprob: -5.142860412597656
    8. 'result' → logprob: -5.267860412597656
    9. ' found' → logprob: -5.767860412597656
    10. 'found' → logprob: -5.892860412597656

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0465233214199543
    2. '=' → logprob: -3.671523332595825
    3. 's' → logprob: -3.921523332595825
    4. ' ' → logprob: -8.921523094177246
    5. '_' → logprob: -10.296523094177246
    6. ',' → logprob: -10.921523094177246
    7. '  ' → logprob: -12.546523094177246
    8. '_s' → logprob: -12.796523094177246
    9. ')' → logprob: -13.046523094177246
    10. ':' → logprob: -13.171523094177246

Token 40: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.62159663438797
    2. 'x' → logprob: -0.99659663438797
    3. '0' → logprob: -2.621596574783325
    4. ' ' → logprob: -4.371596813201904
    5. '1' → logprob: -5.621596813201904
    6. ' (' → logprob: -6.246596813201904
    7. '(x' → logprob: -6.621596813201904
    8. '   ' → logprob: -7.121596813201904
    9. '(' → logprob: -8.246596336364746
    10. '10' → logprob: -8.621596336364746

Token 41: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.056018758565187454
    2. '%' → logprob: -2.931018829345703
    3. ' /' → logprob: -8.306018829345703
    4. ' ' → logprob: -8.306018829345703
    5. '   ' → logprob: -8.431018829345703
    6. '<|end|>' → logprob: -9.556018829345703
    7. ' %
' → logprob: -9.806018829345703
    8. ' *' → logprob: -10.056018829345703
    9. ' %=' → logprob: -10.681018829345703
    10. '0' → logprob: -10.806018829345703

Token 42: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.338466093642637e-05
    2. ' y' → logprob: -9.625073432922363
    3. ' ' → logprob: -13.625073432922363
    4. '   ' → logprob: -14.125073432922363
    5. '	y' → logprob: -14.250073432922363
    6. '1' → logprob: -14.750073432922363
    7. 'x' → logprob: -15.000073432922363
    8. '10' → logprob: -15.000073432922363
    9. '100' → logprob: -15.125073432922363
    10. '7' → logprob: -15.250073432922363

Token 43: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7142138481140137
    2. '\n' → logprob: -1.3392138481140137
    3. ':' → logprob: -1.8392138481140137
    4. '
' → logprob: -3.0892138481140137
    5. '<|end|>' → logprob: -4.214213848114014
    6. '    
' → logprob: -4.964213848114014
    7. '%' → logprob: -5.464213848114014
    8. '\' → logprob: -6.214213848114014
    9. '```' → logprob: -6.214213848114014
    10. '   
' → logprob: -6.339213848114014

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20059256255626678
    2. ':' → logprob: -2.575592517852783
    3. '\n' → logprob: -2.950592517852783
    4. '<|end|>' → logprob: -3.825592517852783
    5. '    
' → logprob: -4.450592517852783
    6. '
' → logprob: -4.950592517852783
    7. '   
' → logprob: -6.200592517852783
    8. '  ' → logprob: -6.450592517852783
    9. '```' → logprob: -6.450592517852783
    10. ' ' → logprob: -6.700592517852783

Token 45: ' pos' (ID: 1253)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0809374526143074
    2. 'while' → logprob: -3.330937385559082
    3. ' while' → logprob: -3.455937385559082
    4. '    ' → logprob: -5.330937385559082
    5. '    
' → logprob: -6.330937385559082
    6. '```' → logprob: -6.705937385559082
    7. 'if' → logprob: -7.205937385559082
    8. '	while' → logprob: -8.080937385559082
    9. '     
' → logprob: -8.080937385559082
    10. ' if' → logprob: -8.205937385559082

Token 46: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22064270079135895
    2. 's' → logprob: -2.3456428050994873
    3. 'ition' → logprob: -3.0956428050994873
    4. 'itions' → logprob: -3.4706428050994873
    5. ' =' → logprob: -3.8456428050994873
    6. 'it' → logprob: -6.720642566680908
    7. 'i' → logprob: -7.595642566680908
    8. 'itive' → logprob: -7.720642566680908
    9. 'iti' → logprob: -7.845642566680908
    10. 't' → logprob: -7.845642566680908

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05710450932383537
    2. ' ' → logprob: -3.0571045875549316
    3. '{}' → logprob: -4.807104587554932
    4. ' {}' → logprob: -8.182104110717773
    5. '{' → logprob: -10.807104110717773
    6. '  ' → logprob: -13.182104110717773
    7. ' defaultdict' → logprob: -13.307104110717773
    8. '   ' → logprob: -13.557104110717773
    9. '{}
' → logprob: -14.182104110717773
    10. ' -' → logprob: -14.682104110717773

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008844776079058647
    2. '{}' → logprob: -4.75884485244751
    3. ' ' → logprob: -8.883844375610352
    4. 'seen' → logprob: -10.508844375610352
    5. '-' → logprob: -10.633844375610352
    6. '{' → logprob: -11.133844375610352
    7. 'len' → logprob: -11.383844375610352
    8. '1' → logprob: -12.383844375610352
    9. '[]' → logprob: -12.758844375610352
    10. ' {}' → logprob: -13.008844375610352

Token 49: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20667342841625214
    2. '<|end|>' → logprob: -1.7066733837127686
    3. '<|end|>' → logprob: -6.581673622131348
    4. 'while' → logprob: -6.581673622131348
    5. ' while' → logprob: -6.706673622131348
    6. '    
' → logprob: -7.706673622131348
    7. '```' → logprob: -8.331673622131348
    8. '    ' → logprob: -8.706673622131348
    9. '
' → logprob: -9.456673622131348
    10. ')' → logprob: -9.706673622131348

Token 51: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9897948503494263
    2. 'while' (adapté à ' while') → logprob: -1.3647948503494263
    3. '<|end|>' → logprob: -1.3647948503494263
    4. ' while' → logprob: -2.2397947311401367
    5. '  ' → logprob: -6.239794731140137
    6. '<|end|>' → logprob: -6.364794731140137
    7. ' ' → logprob: -6.489794731140137
    8. '    ' → logprob: -6.614794731140137
    9. '```' → logprob: -7.239794731140137
    10. 'token' → logprob: -7.739794731140137

Token 52: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.0005138330743648112
    2. 're' → logprob: -7.625514030456543
    3. ' re' → logprob: -11.625514030456543
    4. '(re' → logprob: -11.875514030456543
    5. '   ' → logprob: -12.500514030456543
    6. ' ' → logprob: -13.125514030456543
    7. '	re' → logprob: -13.375514030456543
    8. ' not' → logprob: -14.500514030456543
    9. ' r' → logprob: -15.125514030456543
    10. ' rem' → logprob: -15.250514030456543

Token 53: ' !=' (ID: 1666)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10207035392522812
    2. ' and' → logprob: -3.3520703315734863
    3. '!=' → logprob: -3.8520703315734863
    4. 'not' → logprob: -3.8520703315734863
    5. 'and' → logprob: -4.102070331573486
    6. ' !=' → logprob: -5.852070331573486
    7. '>' → logprob: -9.727070808410645
    8. 'is' → logprob: -10.727070808410645
    9. 's' → logprob: -11.102070808410645
    10. ' ' → logprob: -11.227070808410645

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3868752717971802
    2. '0' → logprob: -1.1368752717971802
    3. '<|end|>' → logprob: -13.63687515258789
    4. '  ' → logprob: -14.94937515258789
    5. '   ' → logprob: -15.07437515258789
    6. ' ' → logprob: -15.13687515258789
    7. '```' → logprob: -15.38687515258789
    8. 's' → logprob: -15.38687515258789
    9. '_' → logprob: -15.94937515258789
    10. 'None' → logprob: -16.01187515258789

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.000123977661133
    4. '-' → logprob: -19.000123977661133
    5. '  ' → logprob: -19.625123977661133
    6. 'seen' → logprob: -19.750123977661133
    7. 'None' → logprob: -19.937623977661133
    8. '۰' → logprob: -20.000123977661133
    9. '```' → logprob: -20.062623977661133
    10. '_' → logprob: -20.187623977661133

Token 56: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026729601086117327
    2. ' and' → logprob: -9.125267028808594
    3. ' :' → logprob: -9.375267028808594
    4. '   ' → logprob: -10.000267028808594
    5. ':
' → logprob: -10.750267028808594
    6. 'and' → logprob: -12.750267028808594
    7. '       ' → logprob: -13.875267028808594
    8. ':**' → logprob: -14.125267028808594
    9. '):' → logprob: -14.500267028808594
    10. ',' → logprob: -14.500267028808594

Token 57: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.6932147145271301
    2. ' remainder' → logprob: -0.6932147145271301
    3. '   ' → logprob: -10.818214416503906
    4. ' ' → logprob: -11.318214416503906
    5. '	re' → logprob: -11.568214416503906
    6. '(re' → logprob: -11.818214416503906
    7. '  ' → logprob: -12.068214416503906
    8. ' re' → logprob: -12.443214416503906
    9. 'r' → logprob: -12.568214416503906
    10. ' not' → logprob: -13.943214416503906

Token 58: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0046370807103812695
    2. 'not' → logprob: -5.379637241363525
    3. ' ' → logprob: -12.004636764526367
    4. ' in' → logprob: -12.379636764526367
    5. ')' → logprob: -12.879636764526367
    6. '	not' → logprob: -13.379636764526367
    7. '<|end|>' → logprob: -14.629636764526367
    8. '```' → logprob: -15.004636764526367
    9. 'in' → logprob: -15.254636764526367
    10. '*' → logprob: -15.879636764526367

Token 59: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3869975805282593
    2. ' in' → logprob: -1.1369975805282593
    3. '<|end|>' → logprob: -10.26199722290039
    4. ' ' → logprob: -10.63699722290039
    5. 'seen' → logprob: -11.01199722290039
    6. '   ' → logprob: -11.13699722290039
    7. '	in' → logprob: -11.63699722290039
    8. '  ' → logprob: -11.88699722290039
    9. '<|end|>' → logprob: -12.51199722290039
    10. ' seen' → logprob: -13.26199722290039

Token 60: ' seen' (ID: 6177)
  Prédit: ' seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seen' → logprob: -0.07890069484710693
    2. 'seen' → logprob: -2.5789008140563965
    3. '_seen' → logprob: -12.078900337219238
    4. '   ' → logprob: -13.328900337219238
    5. 'se' → logprob: -13.578900337219238
    6. ' ' → logprob: -13.578900337219238
    7. ' se' → logprob: -15.328900337219238
    8. '```' → logprob: -15.641400337219238
    9. '  ' → logprob: -16.453901290893555
    10. 's' → logprob: -16.578901290893555

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.700132997939363e-05
    2. ':
' → logprob: -11.125017166137695
    3. ' :' → logprob: -13.875017166137695
    4. '[' → logprob: -15.250017166137695
    5. '):' → logprob: -15.250017166137695
    6. ':

' → logprob: -15.750017166137695
    7. ':**' → logprob: -15.750017166137695
    8. '{' → logprob: -16.000017166137695
    9. ']:' → logprob: -16.500017166137695
    10. '>:' → logprob: -17.125017166137695

Token 62: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045662056654691696
    2. '       ' → logprob: -3.6706621646881104
    3. '   ' → logprob: -4.045661926269531
    4. '<|end|>' → logprob: -7.420661926269531
    5. ' :' → logprob: -7.670661926269531
    6. '):' → logprob: -9.045661926269531
    7. '    ' → logprob: -9.045661926269531
    8. '{' → logprob: -9.545661926269531
    9. ':
' → logprob: -9.795661926269531
    10. ' ' → logprob: -9.920661926269531

Token 63: ' seen' (ID: 6177)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17589952051639557
    2. ' seen' → logprob: -2.5508995056152344
    3. '[' → logprob: -3.0508995056152344
    4. '    ' → logprob: -4.550899505615234
    5. '       ' → logprob: -4.800899505615234
    6. '<|end|>' → logprob: -5.300899505615234
    7. 'seen' (adapté à ' seen') → logprob: -6.050899505615234
    8. '```' → logprob: -6.175899505615234
    9. ' ' → logprob: -6.300899505615234
    10. ':' → logprob: -6.300899505615234

Token 64: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. ' [' → logprob: -15.250000953674316
    3. '\[' → logprob: -15.375000953674316
    4. '[r' → logprob: -15.625000953674316
    5. '```' → logprob: -16.500001907348633
    6. '[current' → logprob: -17.000001907348633
    7. '[...]' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '[result' → logprob: -17.500001907348633
    10. '[end' → logprob: -18.000001907348633

Token 65: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00016396844875998795
    2. ' remainder' → logprob: -8.750164031982422
    3. 'rema' → logprob: -12.875164031982422
    4. ']' → logprob: -14.375164031982422
    5. 'r' → logprob: -14.375164031982422
    6. ' ' → logprob: -14.625164031982422
    7. '	re' → logprob: -14.875164031982422
    8. 'rem' → logprob: -15.125164031982422
    9. '   ' → logprob: -15.250164031982422
    10. 'rest' → logprob: -16.000164031982422

Token 66: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0005668530357070267
    2. 'ma' → logprob: -7.5005669593811035
    3. 'm' → logprob: -11.375566482543945
    4. ' ma' → logprob: -13.875566482543945
    5. 'st' → logprob: -14.250566482543945
    6. '[' → logprob: -14.875566482543945
    7. 'main' → logprob: -15.125566482543945
    8. 'mai' → logprob: -16.875566482543945
    9. ']' → logprob: -17.750566482543945
    10. '_ma' → logprob: -17.750566482543945

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007724629249423742
    2. ' ]' → logprob: -7.250772476196289
    3. ']=' → logprob: -9.750772476196289
    4. ' =' → logprob: -13.125772476196289
    5. '=' → logprob: -13.250772476196289
    6. ')' → logprob: -15.125772476196289
    7. ' ' → logprob: -15.500772476196289
    8. ' :]' → logprob: -16.50077247619629
    9. ':]' → logprob: -17.25077247619629
    10. ')]' → logprob: -17.25077247619629

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141392946243286
    2. '=' → logprob: -1.701413869857788
    3. ']' → logprob: -15.326414108276367
    4. ']=' → logprob: -15.826414108276367
    5. ' ' → logprob: -16.576414108276367
    6. ',' → logprob: -17.076414108276367
    7. '=index' → logprob: -17.326414108276367
    8. ' =)' → logprob: -17.451414108276367
    9. ')=' → logprob: -17.951414108276367
    10. ')' → logprob: -17.951414108276367

Token 69: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03804183006286621
    2. ' pos' → logprob: -3.288041830062866
    3. '	pos' → logprob: -15.538042068481445
    4. ' ' → logprob: -16.288042068481445
    5. '   ' → logprob: -17.788042068481445
    6. '(pos' → logprob: -18.163042068481445
    7. '[pos' → logprob: -18.913042068481445
    8. 'p' → logprob: -19.288042068481445
    9. '_pos' → logprob: -20.288042068481445
    10. ',pos' → logprob: -20.413042068481445

Token 70: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07224637269973755
    2. '    
' → logprob: -3.4472463130950928
    3. '
' → logprob: -4.697246551513672
    4. '*' → logprob: -4.822246551513672
    5. '<|end|>' → logprob: -5.072246551513672
    6. '<|end|>' → logprob: -5.947246551513672
    7. '   
' → logprob: -6.322246551513672
    8. '  
' → logprob: -6.447246551513672
    9. ',' → logprob: -6.447246551513672
    10. '=' → logprob: -6.572246551513672

Token 71: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015299603343009949
    2. ' remainder' → logprob: -4.6402997970581055
    3. '       ' → logprob: -5.6402997970581055
    4. 're' → logprob: -7.2652997970581055
    5. '    
' → logprob: -7.2652997970581055
    6. '	re' → logprob: -8.140299797058105
    7. '        
' → logprob: -9.890299797058105
    8. '  ' → logprob: -10.140299797058105
    9. '```' → logprob: -10.140299797058105
    10. '
' → logprob: -10.265299797058105

Token 72: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.18043559789657593
    2. ' remainder' → logprob: -2.0554356575012207
    3. '   ' → logprob: -3.3054356575012207
    4. '       ' → logprob: -9.055435180664062
    5. '```' → logprob: -9.305435180664062
    6. '	re' → logprob: -9.555435180664062
    7. '  ' → logprob: -9.930435180664062
    8. ' ' → logprob: -11.305435180664062
    9. 'x' → logprob: -12.055435180664062
    10. '    ' → logprob: -12.180435180664062

Token 73: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.36072245240211487
    2. ' =' → logprob: -1.2357224225997925
    3. '=' → logprob: -4.735722541809082
    4. ' ' → logprob: -6.985722541809082
    5. '*=' → logprob: -6.985722541809082
    6. ' <<=' → logprob: -7.235722541809082
    7. ' *' → logprob: -7.610722541809082
    8. '    ' → logprob: -8.735722541809082
    9. '*' → logprob: -8.985722541809082
    10. '   ' → logprob: -10.360722541809082

Token 74: ' (' (ID: 350)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.3545070290565491
    2. ' (' → logprob: -1.2295069694519043
    3. ' remainder' → logprob: -5.729506969451904
    4. 're' → logprob: -5.979506969451904
    5. '(' → logprob: -9.354507446289062
    6. '(rem' → logprob: -9.604507446289062
    7. ' ' → logprob: -10.104507446289062
    8. '10' → logprob: -10.729507446289062
    9. '(r' → logprob: -11.229507446289062
    10. '   ' → logprob: -12.229507446289062

Token 75: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.17045265436172485
    2. ' remainder' → logprob: -1.92045259475708
    3. '(re' → logprob: -4.67045259475708
    4. '10' → logprob: -7.54545259475708
    5. ' (' → logprob: -9.295453071594238
    6. '   ' → logprob: -9.545453071594238
    7. '	re' → logprob: -10.170453071594238
    8. ' ' → logprob: -10.670453071594238
    9. ' re' → logprob: -10.795453071594238
    10. 'rem' → logprob: -12.170453071594238

Token 76: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.03223029524087906
    2. 'ma' → logprob: -3.5322303771972656
    3. 'm' → logprob: -6.157230377197266
    4. ' ma' → logprob: -8.282230377197266
    5. 'main' → logprob: -10.157230377197266
    6. ' ' → logprob: -11.032230377197266
    7. 'a' → logprob: -11.532230377197266
    8. 'ма' → logprob: -11.907230377197266
    9. '-ma' → logprob: -12.032230377197266
    10. '_ma' → logprob: -12.532230377197266

Token 77: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12709346413612366
    2. '*' → logprob: -2.127093553543091
    3. ' ' → logprob: -9.377093315124512
    4. ')' → logprob: -11.252093315124512
    5. ' ' → logprob: -11.252093315124512
    6. '<|end|>' → logprob: -11.252093315124512
    7. '*object' → logprob: -11.877093315124512
    8. '```' → logprob: -12.127093315124512
    9. '   ' → logprob: -12.377093315124512
    10. '	' → logprob: -12.627093315124512

Token 78: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0002889874158427119
    2. ' ' → logprob: -8.250288963317871
    3. '1' → logprob: -10.500288963317871
    4. '```' → logprob: -17.000289916992188
    5. ')' → logprob: -17.500289916992188
    6. '   ' → logprob: -17.875289916992188
    7. '１０' → logprob: -18.000289916992188
    8. '100' → logprob: -18.375289916992188
    9. '`' → logprob: -18.500289916992188
    10. '۱۰' → logprob: -18.750289916992188

Token 79: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0683535037969705e-05
    2. '1' → logprob: -11.50001049041748
    3. ' ' → logprob: -14.87501049041748
    4. '```' → logprob: -16.625011444091797
    5. '   ' → logprob: -18.250011444091797
    6. '

' → logprob: -18.750011444091797
    7. '``' → logprob: -18.875011444091797
    8. '100' → logprob: -18.875011444091797
    9. ')' → logprob: -19.000011444091797
    10. '2' → logprob: -19.125011444091797

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4218234419822693
    2. ' )' → logprob: -1.671823501586914
    3. ' %' → logprob: -2.046823501586914
    4. '%' → logprob: -4.546823501586914
    5. ')%' → logprob: -4.546823501586914
    6. ' %)' → logprob: -5.921823501586914
    7. ' ' → logprob: -6.546823501586914
    8. ' //' → logprob: -6.921823501586914
    9. '%)' → logprob: -8.046823501586914
    10. ')//' → logprob: -8.421823501586914

Token 81: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.18166838586330414
    2. '%' → logprob: -1.8066684007644653
    3. ' //' → logprob: -6.306668281555176
    4. ' ' → logprob: -9.681668281555176
    5. '//' → logprob: -11.181668281555176
    6. ' ' → logprob: -12.056668281555176
    7. '<|end|>' → logprob: -12.431668281555176
    8. ' %=' → logprob: -12.806668281555176
    9. ' /' → logprob: -14.181668281555176
    10. '```' → logprob: -14.431668281555176

Token 82: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018150178715586662
    2. ' y' → logprob: -4.018150329589844
    3. '	y' → logprob: -16.643150329589844
    4. ')y' → logprob: -17.018150329589844
    5. '*y' → logprob: -17.518150329589844
    6. '(y' → logprob: -18.018150329589844
    7. ',y' → logprob: -18.018150329589844
    8. ''y' → logprob: -18.143150329589844
    9. ' ' → logprob: -18.268150329589844
    10. '‘y' → logprob: -18.518150329589844

Token 83: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015372276306152344
    2. '   ' → logprob: -4.640372276306152
    3. '    ' → logprob: -7.015372276306152
    4. ' ' → logprob: -7.015372276306152
    5. '        
' → logprob: -7.015372276306152
    6. '+' → logprob: -7.265372276306152
    7. '```' → logprob: -8.015372276306152
    8. '\' → logprob: -8.140372276306152
    9. ' 
' → logprob: -8.140372276306152
    10. '        ' → logprob: -8.265372276306152

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001614365610294044
    2. '   ' → logprob: -6.501614570617676
    3. '+' → logprob: -10.251614570617676
    4. '    ' → logprob: -11.251614570617676
    5. '      ' → logprob: -11.376614570617676
    6. '```' → logprob: -11.376614570617676
    7. '<|end|>' → logprob: -11.501614570617676
    8. '        
' → logprob: -11.751614570617676
    9. ' ' → logprob: -12.376614570617676
    10. '           ' → logprob: -12.626614570617676

Token 85: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.008319173008203506
    2. '   ' → logprob: -5.38331937789917
    3. '       ' → logprob: -6.25831937789917
    4. ' pos' → logprob: -6.38331937789917
    5. '	pos' → logprob: -10.258318901062012
    6. '    ' → logprob: -11.383318901062012
    7. '
' → logprob: -11.508318901062012
    8. '```' → logprob: -11.633318901062012
    9. '+' → logprob: -11.883318901062012
    10. '1' → logprob: -13.133318901062012

Token 86: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8716902732849121
    2. ' +=' → logprob: -1.121690273284912
    3. '+' → logprob: -1.371690273284912
    4. '=' → logprob: -6.121690273284912
    5. ' +' → logprob: -9.12169075012207
    6. '++' → logprob: -10.87169075012207
    7. ' =' → logprob: -11.37169075012207
    8. ' ' → logprob: -12.12169075012207
    9. '<|end|>' → logprob: -12.62169075012207
    10. '+='' → logprob: -12.74669075012207

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.000005722045898
    4. '```' → logprob: -19.6250057220459
    5. '  ' → logprob: -20.5000057220459
    6. '１' → logprob: -21.1250057220459
    7. ' ' → logprob: -21.5000057220459
    8. '+' → logprob: -21.5625057220459
    9. '	' → logprob: -21.6875057220459
    10. '       ' → logprob: -22.2500057220459

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -20.5
    5. '  ' → logprob: -21.875
    6. '１' → logprob: -22.625
    7. '१' → logprob: -23.125
    8. '۱' → logprob: -23.25
    9. '১' → logprob: -23.625
    10. '`' → logprob: -23.75

Token 89: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06167004629969597
    2. '<|end|>' → logprob: -3.6866700649261475
    3. '#' → logprob: -4.186669826507568
    4. ')' → logprob: -4.436669826507568
    5. ':' → logprob: -7.061669826507568
    6. '    
' → logprob: -7.311669826507568
    7. ']' → logprob: -7.311669826507568
    8. '...' → logprob: -7.436669826507568
    9. '    ' → logprob: -7.436669826507568
    10. '[' → logprob: -7.436669826507568

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044095490127801895
    2. '<|end|>' → logprob: -3.794095516204834
    3. ')' → logprob: -4.919095516204834
    4. '#' → logprob: -5.294095516204834
    5. 'print' → logprob: -6.044095516204834
    6. '[' → logprob: -6.794095516204834
    7. '```' → logprob: -7.169095516204834
    8. '    ' → logprob: -7.419095516204834
    9. '.' → logprob: -7.669095516204834
    10. '<|end|>' → logprob: -8.044095039367676

Token 91: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10754042863845825
    2. 'print' → logprob: -3.1075403690338135
    3. 'if' (adapté à ' if') → logprob: -3.6075403690338135
    4. '    ' → logprob: -5.482540607452393
    5. '<|end|>' → logprob: -5.482540607452393
    6. '#' → logprob: -5.982540607452393
    7. '```' → logprob: -5.982540607452393
    8. ' if' → logprob: -5.982540607452393
    9. '\n' → logprob: -6.107540607452393
    10. ' ' → logprob: -6.232540607452393

Token 92: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.012650910764932632
    2. 're' → logprob: -4.387650966644287
    3. ' ' → logprob: -9.512650489807129
    4. ' re' → logprob: -10.512650489807129
    5. '   ' → logprob: -11.262650489807129
    6. '	re' → logprob: -11.762650489807129
    7. ' not' → logprob: -12.637650489807129
    8. '  ' → logprob: -13.012650489807129
    9. ' r' → logprob: -13.387650489807129
    10. ' y' → logprob: -13.512650489807129

Token 93: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09539815783500671
    2. '==' → logprob: -2.470398187637329
    3. ' in' → logprob: -5.84539794921875
    4. '<|end|>' → logprob: -6.84539794921875
    5. ' !=' → logprob: -7.09539794921875
    6. ' ' → logprob: -7.09539794921875
    7. 'in' → logprob: -8.34539794921875
    8. '!=' → logprob: -8.72039794921875
    9. ' ' → logprob: -8.97039794921875
    10. ' not' → logprob: -9.72039794921875

Token 94: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05488261952996254
    2. ' ' → logprob: -2.929882526397705
    3. '  ' → logprob: -15.679883003234863
    4. '   ' → logprob: -16.554882049560547
    5. 'seen' → logprob: -16.804882049560547
    6. '    ' → logprob: -17.429882049560547
    7. '۰' → logprob: -17.992382049560547
    8. '```' → logprob: -18.054882049560547
    9. '  
' → logprob: -18.179882049560547
    10. '=' → logprob: -18.242382049560547

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '  ' → logprob: -17.751325607299805
    4. '   ' → logprob: -17.751325607299805
    5. '۰' → logprob: -18.813825607299805
    6. '    ' → logprob: -19.438825607299805
    7. '{' → logprob: -19.563825607299805
    8. 'seen' → logprob: -19.688825607299805
    9. ' ' → logprob: -19.751325607299805
    10. '1' → logprob: -20.001325607299805

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006413076189346611
    2. ':
' → logprob: -7.375641345977783
    3. '   ' → logprob: -12.125640869140625
    4. '       ' → logprob: -12.125640869140625
    5. '):' → logprob: -13.375640869140625
    6. ',' → logprob: -14.375640869140625
    7. ' :' → logprob: -14.875640869140625
    8. '.' → logprob: -15.125640869140625
    9. ':

' → logprob: -15.125640869140625
    10. ':**' → logprob: -15.875640869140625

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007859176956117153
    2. 'print' → logprob: -5.632859230041504
    3. ' print' → logprob: -6.007859230041504
    4. '   ' → logprob: -6.382859230041504
    5. '```' → logprob: -10.382859230041504
    6. '        
' → logprob: -10.632859230041504
    7. '    
' → logprob: -11.132859230041504
    8. '           ' → logprob: -11.632859230041504
    9. '      ' → logprob: -12.507859230041504
    10. '     ' → logprob: -12.507859230041504

Token 98: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5657499432563782
    2. ' print' → logprob: -1.4407498836517334
    3. '   ' → logprob: -1.8157498836517334
    4. '       ' → logprob: -3.4407498836517334
    5. '    
' → logprob: -8.190750122070312
    6. '    ' → logprob: -9.315750122070312
    7. '        
' → logprob: -9.690750122070312
    8. '```' → logprob: -9.815750122070312
    9. ' ' → logprob: -11.065750122070312
    10. '	print' → logprob: -11.190750122070312

Token 99: '(pos' (ID: 24566)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.4390486478805542
    2. '(' → logprob: -1.5640486478805542
    3. '(x' → logprob: -2.5640487670898438
    4. '('' → logprob: -4.189048767089844
    5. '"' → logprob: -4.189048767089844
    6. '(f' → logprob: -4.439048767089844
    7. 'x' → logprob: -4.814048767089844
    8. '("(' → logprob: -5.439048767089844
    9. '0' → logprob: -6.189048767089844
    10. '("("' → logprob: -6.189048767089844

Token 100: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004732602741569281
    2. '   ' → logprob: -5.504732608795166
    3. ')
' → logprob: -7.504732608795166
    4. 'else' → logprob: -9.754732131958008
    5. ' )' → logprob: -10.629732131958008
    6. ' else' → logprob: -11.129732131958008
    7. '')' → logprob: -13.754732131958008
    8. '")' → logprob: -13.754732131958008
    9. ' ' → logprob: -14.754732131958008
    10. '))' → logprob: -15.004732131958008

Token 101: ' ' (ID: 220)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09920290857553482
    2. '0' → logprob: -3.474202871322632
    3. ' "' → logprob: -3.849202871322632
    4. ''' → logprob: -4.349203109741211
    5. ')' → logprob: -4.474203109741211
    6. ' ' → logprob: -4.974203109741211
    7. '")' → logprob: -5.724203109741211
    8. 'end' → logprob: -6.349203109741211
    9. '   ' → logprob: -6.724203109741211
    10. '":' → logprob: -7.224203109741211

Token 102: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7639361023902893
    2. '0' → logprob: -0.7639361023902893
    3. ')' → logprob: -3.7639360427856445
    4. ''' → logprob: -4.1389360427856445
    5. ' ' → logprob: -4.8889360427856445
    6. '")' → logprob: -5.0139360427856445
    7. 'end' → logprob: -5.3889360427856445
    8. '   ' → logprob: -5.8889360427856445
    9. ' "' → logprob: -6.1389360427856445
    10. ''end' → logprob: -7.2639360427856445

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037670666351914406
    2. ')
' → logprob: -5.878767013549805
    3. '   ' → logprob: -7.003767013549805
    4. ' )' → logprob: -10.253767013549805
    5. 'else' → logprob: -11.128767013549805
    6. ',' → logprob: -14.378767013549805
    7. ' else' → logprob: -14.753767013549805
    8. ',)' → logprob: -14.753767013549805
    9. ' )
' → logprob: -14.878767013549805
    10. '))' → logprob: -15.003767013549805

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5392102003097534
    2. 'else' → logprob: -0.9142102003097534
    3. ' else' → logprob: -4.164210319519043
    4. '	else' → logprob: -9.039210319519043
    5. '    
' → logprob: -9.164210319519043
    6. '<|end|>' → logprob: -9.414210319519043
    7. '```' → logprob: -10.289210319519043
    8. 'elif' → logprob: -11.039210319519043
    9. ')' → logprob: -11.164210319519043
    10. ':' → logprob: -11.789210319519043

Token 105: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.32835447788238525
    2. '   ' → logprob: -1.3283544778823853
    3. ' else' → logprob: -4.203354358673096
    4. '	else' → logprob: -10.703354835510254
    5. 'elif' → logprob: -12.203354835510254
    6. '  ' → logprob: -12.703354835510254
    7. '<|end|>' → logprob: -13.328354835510254
    8. ' ' → logprob: -14.703354835510254
    9. '_else' → logprob: -14.703354835510254
    10. '    
' → logprob: -15.578354835510254

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00045033416245132685
    2. ' :' → logprob: -8.375450134277344
    3. '   ' → logprob: -9.250450134277344
    4. ':
' → logprob: -9.500450134277344
    5. '       ' → logprob: -11.250450134277344
    6. ',' → logprob: -11.750450134277344
    7. '[' → logprob: -12.000450134277344
    8. '    ' → logprob: -12.000450134277344
    9. '(' → logprob: -12.250450134277344
    10. '{' → logprob: -12.750450134277344

Token 107: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5065016746520996
    2. ' print' → logprob: -1.3815016746520996
    3. '   ' → logprob: -2.7565016746520996
    4. ' pos' → logprob: -2.7565016746520996
    5. 'pos' → logprob: -4.5065016746521
    6. '    ' → logprob: -5.3815016746521
    7. '       ' → logprob: -7.0065016746521
    8. ' (' → logprob: -7.6315016746521
    9. '(' → logprob: -7.8815016746521
    10. ' seen' → logprob: -8.131502151489258

Token 108: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008790534920990467
    2. ' print' → logprob: -4.758790493011475
    3. '       ' → logprob: -9.258790969848633
    4. 'start' → logprob: -10.008790969848633
    5. '   ' → logprob: -11.133790969848633
    6. 'pos' → logprob: -12.258790969848633
    7. 'length' → logprob: -12.508790969848633
    8. ' ' → logprob: -12.633790969848633
    9. '```' → logprob: -13.633790969848633
    10. '  ' → logprob: -13.883790969848633

Token 109: '(se' (ID: 19430)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0958123505115509
    2. '(se' → logprob: -2.9708123207092285
    3. '(' → logprob: -4.3458123207092285
    4. 'pos' → logprob: -4.3458123207092285
    5. '(len' → logprob: -4.4708123207092285
    6. 'seen' → logprob: -6.7208123207092285
    7. '(f' → logprob: -8.095812797546387
    8. 'len' → logprob: -8.220812797546387
    9. ' (' → logprob: -8.720812797546387
    10. '("' → logprob: -8.845812797546387

Token 110: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0001415618316968903
    2. 'end' → logprob: -9.375141143798828
    3. 'len' → logprob: -10.375141143798828
    4. 'seen' → logprob: -12.000141143798828
    5. 'pos' → logprob: -12.250141143798828
    6. 'e' → logprob: -13.125141143798828
    7. 'ent' → logprob: -13.625141143798828
    8. 'ep' → logprob: -13.625141143798828
    9. '```' → logprob: -13.750141143798828
    10. 'ened' → logprob: -13.750141143798828

Token 111: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. 're' → logprob: -15.125000953674316
    3. '[
' → logprob: -15.375000953674316
    4. ')' → logprob: -15.750000953674316
    5. ' [' → logprob: -16.125001907348633
    6. '```' → logprob: -16.125001907348633
    7. '(re' → logprob: -16.500001907348633
    8. '   ' → logprob: -17.375001907348633
    9. ' ' → logprob: -17.500001907348633
    10. ')[' → logprob: -17.750001907348633

Token 112: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00014370749704539776
    2. ' remainder' → logprob: -8.875144004821777
    3. '   ' → logprob: -13.000144004821777
    4. 'rem' → logprob: -15.000144004821777
    5. ' ' → logprob: -15.125144004821777
    6. '	re' → logprob: -15.250144004821777
    7. 'r' → logprob: -15.500144004821777
    8. 'rema' → logprob: -15.500144004821777
    9. 'rest' → logprob: -15.875144004821777
    10. '(re' → logprob: -15.875144004821777

Token 113: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.016802923753857613
    2. 'ma' → logprob: -4.141802787780762
    3. '[' → logprob: -8.266802787780762
    4. 'm' → logprob: -8.516802787780762
    5. '][' → logprob: -8.641802787780762
    6. ']' → logprob: -10.016802787780762
    7. '```' → logprob: -10.391802787780762
    8. 'inder' → logprob: -10.516802787780762
    9. 'ма' → logprob: -11.641802787780762
    10. ' ma' → logprob: -12.891802787780762

Token 114: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012678460218012333
    2. ')' → logprob: -5.137678623199463
    3. ',end' → logprob: -6.512678623199463
    4. ',y' → logprob: -6.887678623199463
    5. ',len' → logprob: -7.262678623199463
    6. ' ,' → logprob: -7.512678623199463
    7. ',pos' → logprob: -7.762678623199463
    8. '   ' → logprob: -7.762678623199463
    9. '",' → logprob: -7.887678623199463
    10. '',' → logprob: -8.137678146362305

Token 115: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.008621785789728165
    2. ' pos' → logprob: -4.758621692657471
    3. '   ' → logprob: -12.008622169494629
    4. ' ' → logprob: -14.883622169494629
    5. '(pos' → logprob: -15.008622169494629
    6. '	pos' → logprob: -15.383622169494629
    7. '       ' → logprob: -16.008621215820312
    8. '    ' → logprob: -16.383621215820312
    9. '_pos' → logprob: -17.508621215820312
    10. '  ' → logprob: -17.758621215820312

Token 116: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.252128005027771
    2. ' -' → logprob: -1.502128005027771
    3. ')' → logprob: -8.877127647399902
    4. '-se' → logprob: -10.752127647399902
    5. ' ' → logprob: -11.127127647399902
    6. ',' → logprob: -11.502127647399902
    7. '   ' → logprob: -11.502127647399902
    8. ' )' → logprob: -14.502127647399902
    9. '<|end|>' → logprob: -14.877127647399902
    10. '  ' → logprob: -15.252127647399902

Token 117: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.038057442754507065
    2. ' seen' → logprob: -3.288057327270508
    3. 'se' → logprob: -11.913057327270508
    4. '_seen' → logprob: -12.413057327270508
    5. '<|end|>' → logprob: -12.788057327270508
    6. ' ' → logprob: -13.663057327270508
    7. '1' → logprob: -15.038057327270508
    8. ' se' → logprob: -15.663057327270508
    9. 'Seen' → logprob: -15.663057327270508
    10. '   ' → logprob: -15.913057327270508

Token 118: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -15.875
    3. '<|end|>' → logprob: -16.375
    4. ' [' → logprob: -18.5
    5. '```' → logprob: -20.125
    6. '[assembly' → logprob: -20.25
    7. '[user' → logprob: -20.375
    8. '<|end|>' → logprob: -20.875
    9. ' ' → logprob: -21.25
    10. '[...]' → logprob: -21.25

Token 119: 're' (ID: 264)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020560339093208313
    2. 're' → logprob: -3.8955602645874023
    3. 'rema' → logprob: -11.645560264587402
    4. 'rem' → logprob: -12.020560264587402
    5. 'r' → logprob: -14.145560264587402
    6. '<|end|>' → logprob: -14.395560264587402
    7. ' ' → logprob: -15.020560264587402
    8. ' [' → logprob: -15.145560264587402
    9. '[
' → logprob: -15.145560264587402
    10. 'rest' → logprob: -15.145560264587402

Token 120: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.06336390972137451
    2. '[' → logprob: -2.938364028930664
    3. 'ma' → logprob: -5.063364028930664
    4. 'm' → logprob: -6.188364028930664
    5. 'md' → logprob: -10.688364028930664
    6. 'med' → logprob: -11.688364028930664
    7. 's' → logprob: -12.813364028930664
    8. 'st' → logprob: -12.813364028930664
    9. ']' → logprob: -12.938364028930664
    10. 're' → logprob: -13.063364028930664

Token 121: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.000000953674316
    3. '))' → logprob: -15.125000953674316
    4. ')
' → logprob: -16.75
    5. ')`' → logprob: -16.875
    6. '`)' → logprob: -17.5
    7. '),' → logprob: -18.5
    8. ')")' → logprob: -18.625
    9. ')}}' → logprob: -18.75
    10. ')}' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 42.02%
Précision adaptée (1ère position): 45.38%
Précision (top 10): 85.71%
================================================================================
